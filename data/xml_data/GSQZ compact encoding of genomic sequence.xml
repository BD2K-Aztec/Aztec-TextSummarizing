
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:43+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">G-SQZ: compact encoding of genomic sequence and quality data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName>
								<forename type="first">Waibhav</forename>
								<surname>Tembe</surname>
							</persName>
							<email>wtembe@tgen.org</email>
							<affiliation key="aff0">
								<orgName type="institution">Translational Genomics Research Institute</orgName>
								<address>
									<addrLine>445 N 5th Street</addrLine>
									<postCode>85004</postCode>
									<settlement>Phoenix</settlement>
									<region>AZ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">James</forename>
								<surname>Lowey</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="institution">Translational Genomics Research Institute</orgName>
								<address>
									<addrLine>445 N 5th Street</addrLine>
									<postCode>85004</postCode>
									<settlement>Phoenix</settlement>
									<region>AZ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Edward</forename>
								<surname>Suh</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="institution">Translational Genomics Research Institute</orgName>
								<address>
									<addrLine>445 N 5th Street</addrLine>
									<postCode>85004</postCode>
									<settlement>Phoenix</settlement>
									<region>AZ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">G-SQZ: compact encoding of genomic sequence and quality data</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="issue">17</biblScope>
							<biblScope unit="page" from="2192" to="2194"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq346</idno>
					<note type="submission">Sequence analysis Advance Access publication July 6, 2010 Received on February 24, 2010; revised on June 3, 2010; accepted on June 27, 2010</note>
					<note>[09:38 3/8/2010 Bioinformatics-btq346.tex] Page: 2192 2192–2194 Associate Editor: Joaquin Dopazo Availability: http://public.tgen.org/sqz. Academic/non-profit: Source: available at no cost under a non-open-source license by requesting from the web-site; Binary: available for direct download at no cost. For-Profit: Submit request for for-profit license from the web-site. Contact:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Large volumes of data generated by high-throughput sequencing instruments present non-trivial challenges in data storage, content access and transfer. We present G-SQZ, a Huffman coding-based sequencing-reads-specific representation scheme that compresses data without altering the relative order. G-SQZ has achieved from 65% to 81% compression on benchmark datasets, and it allows selective access without scanning and decoding from start. This article focuses on describing the underlying encoding scheme and its software implementation, and a more theoretical problem of optimal compression is out of scope. The immediate practical benefits include reduced infrastructure and informatics costs in managing and analyzing large sequencing data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>High-throughput sequencing methods and instruments (<ref type="bibr" target="#b1">Ansorge, 2009;</ref><ref type="bibr" target="#b11">Mardis, 2008;</ref><ref type="bibr" target="#b13">Shendure and Ji, 2008</ref>) generate hundredsof-millions to billions of short reads. Storage, management and transfer of such large volumes of data necessitate an order of magnitude more infrastructure capabilities. Algorithms and software are required to analyze terabytes of data within practical constraints of resources, such as computer processors, memory, storage, time, etc., and have to cope with the new challenge of handling very large files containing dense data. With constantly increasing throughput, monetary costs of processing and managing sequencing data are becoming a larger factor in research planning. To that end, this article proposes a lossless, order preserving and compact-encoding scheme called Genomic SQueeZ (G-SQZ) for sequence read data and provides a software implementation. Typically, genomic sequencing data consists of annotated genomic bases in their relative order. Annotation is required due to reasons such as (i) nucleotide base calling algorithms typically report error probability, generally called quality score, to account for intrinsic uncertainties in sequence identification processes; (ii) additional information needs to be reported when sequence identification is inconclusive, incomplete or erroneous; and (iii) for various downstream analyses, assigning unique * To whom correspondence should be addressed. identifiers to sequencing reads is desirable. This overhead of storing annotation information dramatically increases file sizes and any storage reduction approach requires compressing both base and annotation data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>Huffman coding (<ref type="bibr" target="#b9">Huffman, 1952</ref>) is a lossless encoding algorithm that generates variable length codes for symbols used to represent information. By encoding high frequency symbols with shorter codes and low frequency symbols with longer codes, the original information is stored as much smaller encoded data. The codes are constructed in such a way that no code is a prefix of any other code, a property that enables unambiguous decoding. Within the context of genomic sequencing data, let B ={b 1 ,b 2 ,...,b m } denote a finite set of m symbols representing all possible distinct genomic bases (nucleotide, color-space, error calls, no calls, etc.) and let Q ={q 1 ,q 2 ,...,q p } be a finite set of symbols representing all distinct quality scores or other annotation information available for each base. Since not all symbols from B and Q might be present in a given data, let B ⊆ B and Q ⊆ Q denote the actual symbols used, such that |B |=m ; 1 ≤ m ≤ m and |Q|=p ; 1 ≤ p ≤ p. We construct a pair-wise symbol set S = B ×Q of size n = m ·p that consists of all base-quality pairs &lt; b i , q j &gt;; b i ∈ B , q j ∈ Q in the data. As shown in<ref type="figure" target="#fig_1">Figure 1</ref>, the first scan generates a unique Huffman code for each &lt;base, quality&gt; pair from the frequency distribution of all pairs in S. In the second scan, encoded pairs are written to a binary file, along with a header containing meta-information, such as Huffman encoding for each pair, platform, number of reads, etc. Additionally, the meta-characters ('@', '+', '&gt;', '_', ':', etc.) are stored only once and the differences between successive read identifiers are noted, taking care that all original information can be reproduced. Thus, the encoded file (<ref type="figure" target="#fig_1">Fig. 1</ref>) consists of a fixed-length header followed by sequence of blocks, one block per read. Information in the header can be retrieved via simple queries to retrieve number of reads, base/quality statistics, sample name, etc., and save time in parsing large files.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">IMPLEMENTATION AND RESULTS</head><p>A C++ command-line implementation of G-SQZ is available at http://public.tgen.org/sqz. Since more than 4 billion (∼2 32 ) bases per run are common, G-SQZ has been designed as a 64-bit application.<ref type="figure">Table 1</ref>shows comparisons with gzip v1.3.5 and bzip2 v1.0.5 using best compression option (−9) for both on publicly available data from the 1000 Genomes Project (www.1000genomes.org). Tests have shown similar storage reduction on several other data sets (data not shown), and we invite readers to test G-SQZ on additional data. While the encoding step for base-quality data stays the same, read identifier format specific steps have been implemented for SRA (NCBI), CSFASTA/QUAL (LifeTechnologies) and FASTQ (<ref type="bibr" target="#b8">Cock et al., 2009</ref>) formats. Due to non-standardization in read-identifier formats, capturing all possible formats is a work in progress.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G-SQZ</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head><p>The salient features of G-SQZ are: (i) Specifically designed for sequencing reads in known format(s) and not for arbitrary data; (ii) implicit pairing and simultaneous encoding of base-quality data; (iii) other than counting frequency of &lt;base, quality&gt; pairs, no other string matching is employed; (iv) order of &lt;base, quality&gt; data is unchanged; and (v) data can be retrieved selectively without serial scans and decoding from the beginning, a feature that can be utilized by multi-threaded parallel computing applications. G-SQZ is designed for sequencing reads, unlike aligned sequences in SAM/BAM (<ref type="bibr" target="#b10">Li et al., 2009</ref>) formats. Since no restriction is imposed on the number of symbols, it is possible to include any number of distinct bases (including other IUPAC symbols, error symbols, etc.) and larger range covering higher</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. G-SQZ encoding: first scan calculates frequency for each &lt;base, quality&gt; pair and constructs Huffman tree to generate pair-specific codes. High-frequency pairs have shorter codes. Second scan writes header and encoded read blocks to an output binary file. Each read block consists of read identifier fields followed by encoded base-quality data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><figDesc>Table 1. Comparison of encoded data sizes (GB)</figDesc><table>Data set 
(FASTQ/SRA format) 

Platform Original 
size 

Encoded size (Percentage 
of reduction) 

gzip -9 G-SQZ bzip2 -9 

SRR013951_2.filt 
SOLEXA 3.19 
1.32 (59) 1.12 (65) 1.13 (65) 
SRR027520_1.filt 
SOLEXA 4.80 
1.67 (65) 1.54 (68) 1.40 (71) 
SRR027520_2.filt 
SOLEXA 4.80 
1.71 (64) 1.54 (68) 1.44 (70) 
SRR007215_1.filt 
SOLiD 
0.69 
0.16 (77) 0.13 (81) 0.13 (81) 
SRR010637.filt 
SOLiD 
2.08 
0.59 (72) 0.49 (76) 0.49 (76) 
SRR014961_2.filt 
SOLiD 
40.9 
11.5 (72) 9.64 (76) 9.35 (77) 

</table></figure>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">resolution of quality scores. Quality values can be multi-character strings (with known delimiters), not limited by the size of the ASCII character set. Generating &lt;base, quality&gt; pair-specific Huffman encoding offers two significant advantages over two-bit encoding (A = 00, C = 01, G = 10, T = 11). For example, two-bits per base will require 20 bits to store a 10-base sequence AAAGTAATAA, while frequency distribution-aware variable length encoding, such as A = 0, G = 10, T = 11, will reduce the number of bits to 13. Second, two bits can encode at most four distinct symbols and, without additional bits, cannot include no call, error call and quality scores. G-SQZ offers a compact lossless indexed format to significantly reduce storage needed by plain text files, while allowing selective access to any section of the data without serially scanning and decoding from start. The compression ratio of G-SQZ primarily depends on the relative frequencies of &lt;base, quality&gt; pairs. We recognize that G-SQZ might be sub-optimal compared to other compression algorithms employing statistical pattern matching, such as palindromes, string comparisons, repeat detection and data permutation (Adjeroh et al., 2002; Brandon et al., 2009; Chen et al., 2002; Christley et al., 2009; Soliman et al., 2009). For example, for bases AAATTGAAA and qualities FFFFFFFFF, storing &lt;multibase, multi-quality&gt; pair &lt;AAA,FFF&gt; instead of &lt;A,F&gt; is more efficient, and several such cases can be enumerated. However, investigation of an order preserving, indexed, yet theoretically optimal, encoding and extensive comparisons with all compression methods is out of scope. The goal of this article is to demonstrate the practical application of G-SQZ to a critical challenge in bioinformatics, where throughput per run is in the range of hundreds of Giga-bases, but the plain text data format is highly inefficient. As shown in Table 1, G-SQZ has outperformed gzip in all selected data sets. Compared to bzip2 (a series of compression techniques that include the Burrows–Wheeler Transform), the relatively simple approach in G-SQZ did better in one case and came close overall while maintaining the order, allowing selective access and storing meta-information, e.g., number of reads/bases, for quick retrieval. In cases of data corruption due to bit errors, G-SQZ can detect limited number of cases where, due to corruption, an encoded string is absent from the list of known symbols or values are out of normal ranges. For more reliable checks, we recommend external tools (e.g. md5). A robust error checking scheme and encoding variable length reads (e.g., 454 data) have been left as future work.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">DNA sequence compression using the burrows-wheeler transform</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Adjeroh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. IEEE Comput. Soc. Bioinform. Conf</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="303" to="313" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Next-generation DNA sequencing techniques</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">J</forename>
				<surname>Ansorge</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">N. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="195" to="203" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Data structures and compression algorithms for genomic sequence data</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">C</forename>
				<surname>Brandon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1731" to="1738" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">DNACompress: fast and effective DNA sequence compression</title>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Chen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1696" to="1698" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">098</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq346. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="2194" to="2192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Tembe</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Human genomes as email attachments</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Christley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="274" to="275" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">The Sanger FASTQ file format for sequences with quality scores, and the Solexa/Illumina FASTQ variants</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">J</forename>
				<surname>Cock</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="1767" to="1771" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">A method for the construction of minimum-redundancy codes</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Huffman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IRE</title>
		<meeting>. IRE</meeting>
		<imprint>
			<date type="published" when="1952" />
			<biblScope unit="page" from="1098" to="1102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">The sequence alignment/map format and SAMtools</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="2078" to="2079" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Next-generation DNA sequencing methods</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">R</forename>
				<surname>Mardis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annu. Rev. Genomics Hum. Genet</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="387" to="402" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">National Center for Biotechnology Info</title>
	</analytic>
	<monogr>
		<title level="j">NCBI</title>
		<imprint>
			<date type="published" when="2010-02-02" />
		</imprint>
	</monogr>
	<note>last. accessed date</note>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Next-generation DNA sequencing</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Shendure</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Ji</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1135" to="1145" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">A lossless compression algorithm for DNA sequences</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">H</forename>
				<surname>Soliman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Bioinform. Res. Appl</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="593" to="602" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>