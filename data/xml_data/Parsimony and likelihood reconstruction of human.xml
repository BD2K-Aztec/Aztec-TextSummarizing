
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:37+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Parsimony and likelihood reconstruction of human segmental duplications</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Crystal</forename>
								<forename type="middle">L</forename>
								<surname>Kahn</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Borislav</forename>
								<forename type="middle">H</forename>
								<surname>Hristov</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Benjamin</forename>
								<forename type="middle">J</forename>
								<surname>Raphael</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Center for Computational Molecular Biology</orgName>
								<orgName type="institution">Brown University</orgName>
								<address>
									<postCode>02912</postCode>
									<settlement>Providence</settlement>
									<region>RI</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Parsimony and likelihood reconstruction of human segmental duplications</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="page" from="446" to="452"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq368</idno>
					<note>[10:37 28/8/2010 Bioinformatics-btq368.tex] Page: i446 i446–i452 BIOINFORMATICS Contact: clkahn@cs.brown.edu; braphael@cs.brown.edu.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Segmental duplications &gt;1 kb in length with ≥ 90% sequence identity between copies comprise nearly 5% of the human genome. They are frequently found in large, contiguous regions known as duplication blocks that can contain mosaic patterns of thousands of segmental duplications. Reconstructing the evolutionary history of these complex genomic regions is a non-trivial, but important task. Results: We introduce parsimony and likelihood techniques to analyze the evolutionary relationships between duplication blocks. Both techniques rely on a generic model of duplication in which long, contiguous substrings are copied and reinserted over large physical distances, allowing for a duplication block to be constructed by aggregating substrings of other blocks. For the likelihood method, we give an efficient dynamic programming algorithm to compute the weighted ensemble of all duplication scenarios that account for the construction of a duplication block. Using this ensemble, we derive the probabilities of various duplication scenarios. We formalize the task of reconstructing the evolutionary history of segmental duplications as an optimization problem on the space of directed acyclic graphs. We use a simulated annealing heuristic to solve the problem for a set of segmental duplications in the human genome in both parsimony and likelihood settings. Availability: Supplementary information is available at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>A striking feature of mammalian genomes is the prevalence of segmental duplications or low-copy repeats. Approximately 5% of the human genome consists of segmental duplications &gt;1 kb in length with ≥90% sequence identity between copies (<ref type="bibr" target="#b4">Bailey and Eichler, 2006</ref>). Segmental duplications account for a significant fraction of the differences between humans and other primate genomes, and are enriched for genes that are differentially expressed between the species (<ref type="bibr" target="#b5">Blekhman et al., 2009</ref>). Segmental duplications remain an extreme challenge for evolutionary reconstruction, as they are the 'most structurally complex and dynamic regions of the human genome' (<ref type="bibr" target="#b3">Alkan et al., 2009</ref>). Human segmental duplications are frequently found within complicated mosaics of duplicated fragments (<ref type="bibr" target="#b4">Bailey and Eichler, 2006</ref>).<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>produced a comprehensive annotation of this mosaic organization; they derived an 'alphabet' of approximately 11 000 duplicated segments, or duplicons, and delimited 437 duplication blocks or 'strings' of at least 10 (and * To whom correspondence should be addressed.</p><p>typically dozens) different duplicons found contiguously on a chromosome. However, the relationships between these annotated duplication blocks are complex and straightforward analysis does not immediately reveal the evolutionary relationships between blocks. Numerous authors have considered the problem of analyzing relationships between genome sequences that contain duplicated segments. This work falls into roughly two categories. The first focus is the problem of computing genome rearrangement distances, like reversal distance, in the presence of duplicated genes or synteny blocks (<ref type="bibr" target="#b7">El-Mabrouk, 2002;</ref><ref type="bibr" target="#b14">Marron et al., 2004;</ref><ref type="bibr" target="#b17">Sankoff, 1999</ref>, for example). However, such rearrangement distances do not model the creation of new duplicates and thus are not well-suited to describe the evolutionary history of segmental duplications in the genome. The second focus is to analyze regions with duplications under 'local' operations like tandem duplications (<ref type="bibr" target="#b6">Chaudhuri et al., 2006;</ref><ref type="bibr" target="#b13">Lajoie et al., 2007</ref>, for example). While tandem duplication is undoubtedly important in the generation of duplication blocks, there is strong evidence that an important characteristic of the history of segmental duplications is the frequent duplication and transposition of long segments over large physical distances; as many as 50–60% of segmental duplications were transposed interchromosomally (<ref type="bibr" target="#b4">Bailey and Eichler, 2006</ref>). Several general models of rearrangement that allowed for both local operations and duplication–transpositionlike operations between different strings were studied by<ref type="bibr" target="#b8">Ergun et al. (2003)</ref>, but the generality of those models meant that the distances were NP-hard to compute and only approximation algorithms were given. Here, we present a novel formulation of the problem of computing an evolutionary history for a set of segmental duplications that are organized in duplication blocks. We represent evolutionary relationships between a set of duplication blocks as a directed acyclic graph (DAG), and we formalize the evolutionary reconstruction problem as an optimization over the space of DAGs. We present two different methods for scoring a DAG: one based on parsimony and one based on likelihood. The parsimony score for a DAG is a straightforward extension of 'duplication distance', a measure introduced by some of us (<ref type="bibr" target="#b12">Kahn and</ref><ref type="bibr">Raphael, 2008, 2009</ref>) that describes the most parsimonious sequence of duplicate operations needed to construct a given target string. The likelihood score for a DAG is the product of the likelihood scores for each of the duplication blocks, where a duplication block's likelihood is derived by computing the weighted ensemble of all possible duplication scenarios that could have generated it. We describe how to compute the partition function of the ensemble efficiently using a dynamic program that generalizes the duplication distance (i.e. parsimony score) recurrence. Deriving a probabilistic model from a dynamic program this way is analogous to the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Reconstruction of segmental duplications</head><p>approach of McCaskill (1990) who applied dynamic programming to RNA folding to compute the partition function of all secondary structures and to assign probabilities to certain substructures.. Finally, we solve these evolutionary reconstruction problems on the set of duplication blocks identified by<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>using a local search technique based on simulated annealing. We compare these reconstructions to the analysis of<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>. Our evolutionary reconstruction recapitulates some of the properties of earlier analysis but also reveals additional and more subtle relationships between segmental duplications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>Here, we present two methods for determining the optimality of an evolutionary relationship between a pair of duplication blocks—one based on a parsimony criterion and one based on a likelihood criterion. In Sections 2.1 and 2.2, we describe the parsimony-based model of segmental duplication that is based on duplication distance, introduced in Kahn and<ref type="bibr" target="#b10">Raphael (2008</ref><ref type="bibr" target="#b11">Raphael ( , 2009</ref>). Next, we present a novel probabilistic model of segmental duplication that we use to compute the likelihood score for an evolutionary relationship between a pair of duplication blocks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">A model of segmental duplication</head><p>As noted above, an important characteristic of segmental duplications that distinguishes them from other types of repeats is that they are frequently transposed across large genomic distances from their respective ancestral loci. In<ref type="bibr" target="#b12">Kahn and</ref><ref type="bibr">Raphael (2008, 2009</ref>), we modeled the process in which a duplication block, a composite of many duplicons, is built by copying strings of duplicons from other duplication blocks. In particular, we define the basic 'copy–paste' operation as follows.A subsequence is distinguished from a substring because the characters of a subsequence need not be contiguous. Given a string X, a subsequence S of X can be expressed as an increasing list of indices of X. For example, for X = abcdefg, the subsequence S = (1,3,5) is the string ace.</p><formula>Definition 2.3. Two subsequences S = (s 1 ,s 2 ,...,s ls ) and T = (t 1 ,t 2 ,...,t lt )</formula><p>of a string X overlap if either (i) there exist indices i : 1 ≤ i &lt; l s and j : 1 ≤ j &lt; l t such that i = j, or (ii) there exist indices i,i : 1 ≤ i &lt; i &lt; l s and a j,j : 1 ≤ j &lt; j &lt; l t such that either i &lt; j &lt; i &lt; j or j &lt; i &lt; j &lt; i .</p><p>Given a source/target pair X,Y , any sequence of duplicate operations of the</p><formula>form δ s 1 ,t 1 ,p 1 (X),...,δ s d ,t d ,p d (X)</formula><p>that generates Y from X uniquely partitions the characters of Y into non-overlapping subsequences corresponding to characters that were copied conjointly from X.</p><formula>Definition 2.4. Given a source string X, a generator X = (X i 1 ,j 1 ,...,X i k ,j k )</formula><p>is a sequence of substrings of X.</p><formula>: X = (X 4,5 ,X 1,3 ,X 4,5 ) = ((de),(abc),(de)). Definition 2.5. A generator X = (X i 1 ,j 1 ,...,X i k ,j k )</formula><formula>f (X i 1 ,j 1 ),...,f (X i k ,j k ) in Y .</formula><p>See<ref type="figure" target="#fig_0">Figure 1</ref>. A sequence of k duplicate operations that constructs Y from X uniquely defines a feasible generator X with length k whose elements correspond, respectively, to substrings of X that are duplicated conjointly in a single operation.Page: i448 i446–i452</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Parsimony</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.L.Kahn et al.</head><formula>partition function Z (k)</formula><p>X. In particular, we can express the probability as:</p><formula>Pr[F|Y ,X,k]= 1 Z (k) X X Y :| X |=k ω( X ),</formula><formula>(1)</formula><p>where | X | denotes the length of the generator. The likelihood of a target string Y then can be expressed as L(Y |F,X,k) = Pr(F|Y ,X,k). The score of a generator, ω( X ), can be defined according to various biological models. Although different functions ω may require different algorithms for computing the value Pr<ref type="bibr">[F|Y ,X,k]</ref>, we found that functions of the form ω(</p><formula>X ) = σ(| X |,l( X )) where l( X ) = X i,j ∈ X |X i,j | denotes</formula><p>the sum of the lengths of the elements of X , admit particularly efficient algorithms for computing Equation (1). We discuss the score function further in Supplementary Section 1.2. Now, we give an algorithm to compute the partition function, Z</p><formula>(k) X. Given a score function of the form σ(| X |,l( X )</formula><p>), each length-k generator whose elements have lengths that sum to l are scored the same, namely σ(k,l). Therefore, in order to compute Z</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>..x |X| be a source string and let k and l be positive integers. The function C</head><p>(k) X (l) satisfies the following recurrence.</p><formula>C (1) X (l) = |X|−l +1, C (k) X (l) = l−1 l =l−|X| C (k−1) X</formula><p>(l )·(|X|−(l −l )+1). For a source string X and integers k,l, if we are given C</p><formula>(k)</formula><p>X (l), we can compute Z</p><formula>(k)</formula><p>X efficiently by summing C</p><formula>(k)</formula><p>X (l) over all relevant lengths l, weighting each feasible generator appropriately according to the function σ(k,l).</p><formula>Theorem 2.7. Let X = x 1 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>..x |X| be a source string and k be a positive integer.</head><p>The partition function Z</p><formula>(k) X satisfies the following. Z (k) X = |X|·k l=k C (k) X (l)·σ(k,l).</formula><p>Note that the elements of a length-k list of substrings of X can have lengths that sum to at least k and at most |X|·k. The recurrence in Lemma 2.6 can be computed in O(|X|k) time, so Z</p><formula>(k) X</formula><p>can be computed in O(|X| 2 k 2 ) time according to Theorem 2.7. We omit a proof of correctness due to space considerations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Restricted partition function</head><p>In this section, we present the final ingredient necessary to compute the probability Pr<ref type="bibr">[F|Y ,X,k]</ref>, namely the sum in Equation (1) that we define as Q</p><formula>(k)</formula><p>X (Y ). We refer to the value Q</p><formula>(k)</formula><p>X (Y ) as the restricted partition function of feasible generators, and it is equal to the weighted ensemble of all length-k generators X that are feasible for Y. Hence Q</p><formula>(k) X (Y ) = X Y :| X |=k ω( X ) = X Y :| X |=k σ(k,|Y |).</formula><p>In order to compute this value, we generalize the recurrence presented in<ref type="bibr" target="#b12">Kahn et al. (2010)</ref>for computing duplication distance from source string X to target string Y to count the number of length-k generators that are feasible for Y .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The value C</head><p>(k) X (l) is related to the well-known integer partition function p(n) and corresponding Young tableaux. If P(l,k) is the set of partitions of the integer l into k parts, we can express C</p><formula>(k) X (l) = P∈P(l,k) p∈P (|X|−p+1)· k!.</formula><formula>N (k) X (Y ) = i:x i =y 1 N (k) X (Y ,i), N (1) X (Y ,i) = 1 if Y = X i,i+|Y |−1 , 0 otherwise, N (k) X (Y ,i) = N (k−1) X (Y 2,|Y | )+ j&gt;1:y j =x i+1 k l=1 [N (l) X (Y 2,j−1 )· N (k−l) X (Y j,|Y | ,i+1)].</formula><p>Here, the term N</p><formula>(k) X (Y ,i) represents</formula><p>the number of feasible generators X with length k given that the character y 1 is generated by a substring of X starting at x i. We compute the restricted partition function Q</p><formula>(k)</formula><p>X (Y ) efficiently by first counting the number of relevant feasible generators, namely N</p><formula>(k) X (Y )</formula><p>, and scoring each generator appropriately by σ(k,|Y |).</p><formula>Theorem 2.9. Let X = x 1 ...x |X| , Y = y 1 ,.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>..,y |Y | be a source/target string pair and let k be a positive integer. The restricted partition function Q</head><formula>(k) X (Y ) satisfies the following. Q (k) X (Y ) = N (k) X (Y )·σ(k,|Y |).</formula><p>The recurrence given in Lemma 2.8 can be computed in time</p><formula>O(|Y | 2 k 2 µ(Y )µ(X)) where µ(Y ) (resp. µ(X)</formula><p>) is the maximum multiplicity of any character that appears in Y (resp. X), so computing Q</p><formula>(k)</formula><p>X (Y ) takes the same time. We include a proof of correctness in Supplementary Section 1.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ALGORITHM</head><p>Here, we formalize the problem of computing a segmental duplication evolutionary history for a set of duplication blocks in the human genome with respect to either a parsimony or likelihood criterion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Maximum parsimony and maximum likelihood evolutionary histories</head><p>The input to our problem is the set of duplication blocks found in the human genome, each represented as a signed string on the alphabet of duplicons. Our goal is to compute a putative duplication history that accounts for the construction of all of the duplication blocks. We assume that the ancestral genome is devoid of segmental duplications. A duplication history is a sequence of duplicate events that first builds up a set of seed duplication blocks by duplicating and aggregating duplicons from their ancestral loci and then successively constructs the remaining duplication blocks by duplicating substrings of previously constructed blocks. We observed in Kahn and Raphael (2008) strong evidence that many of the duplication blocks identified by<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>had been constructed through the duplication and aggregation of substrings of duplicons from several other blocks. Therefore, a tree cannot aptly represent an evolutionary history; a more appropriate representation of the evolutionary relationships between duplication blocks is a DAG in which the vertices represent duplication blocks and an edge directed from a vertex X to a vertex Y indicates that i448Page: i449 i446–i452</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Reconstruction of segmental duplications</head><p>substrings of X were duplicated in the construction of Y. A vertex with multiple incoming edges and, therefore, multiple parents, is constructed using substrings of all of the parent blocks. Specifically, given a DAG G = (D,E), for Y ∈ D, we define P G (Y ), the parent string of Y , by P G (Y ) = X 1 X 2 ···X p where X i ∈{D|(X i ,Y ) ∈ E} and indicates the concatenation of two strings with a dummy character inserted in between. We make two simplifying assumptions. First, we assume that only duplicate events occur and that there are no deletions, inversions, or other types of rearrangements within a duplication block. Second, we assume that a duplication block is not copied and used to make another duplication block until after it has been fully constructed, ensuring the evolutionary relationships cannot contain cycles. We acknowledge that our two simplifying assumptions restrict the evolutionary history reconstruction problem significantly, but admit an efficient and consistent method of scoring a solution. Similar assumptions were made, for example, by<ref type="bibr" target="#b16">Price et al. (2004)</ref>to derive the evolutionary tree for Alu repeat elements. We can define the optimal DAG with respect to a parsimony criterion using duplication distance (Definition 2.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3.1. Given a set of duplication blocks D, the maximum parsimony evolutionary history is the DAG G</head><formula>= (D,E) that minimizes f (G) = Y ∈D d(P G (Y ),Y ).</formula><p>We can also define the optimal DAG with respect to a likelihood criterion. In phylogenetic tree reconstruction, a max likelihood solution is a tree that maximizes the probability of generating the characters at the leaf nodes over all possible tree topologies, branch lengths, and assignments of ancestral states to the internal nodes. Typically, the evolutionary process is assumed to be a Markov process so that the probabilities along different branches are independent. We similarly define the maximum likelihood DAG using the probabilistic model derived in Section 2. We maximize the likelihood of the solution over all DAG topologies and—instead of branch lengths—the numbers of operations permitted to construct each node. Definition 3.2. Given a set of duplication blocks D, the maximum likelihood evolutionary history is the</p><formula>DAG G = (D,E) that maximizes the likelihood: L(G) = Y ∈D L(Y ), = Y ∈D max k Pr[F|Y ,P G (Y ),k] , = Y ∈D max k Q (k) P G (Y ) (Y )/Z (k) P G (Y ) , where Z (k) P G (X) and Q (k) P G (Y )</formula><p>are the partition function and restricted partition functions, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">IMPLEMENTATION</head><p>We analyzed a set of 391 duplication blocks identified by<ref type="bibr" target="#b9">Jiang et al. (2007</ref>) that were represented as signed strings on an alphabet of ≈11 000 duplicons. We computed the maximum parsimony evolutionary history (Definition 3.1) for the entire set of blocks (<ref type="figure" target="#fig_5">Fig. 2</ref>). The DAG exhibited multiple connected components. For comparison, we then computed the maximum likelihood evolutionary histories (Definition 3.2) for several of the subgraphs induced by connected components of the parsimony solution. We scored generators according to σ(k,|Y |) = 1 |Y | k (see Supplementary Section 1.2). We used a simulated annealing strategy to find a maximum parsimony DAG for the entire set of duplication blocks and to find maximum likelihood DAGs for several subgraphs 4 (see Supplementary Section 1.3 for details). For each input, we ran our local search 300 times. We started the search an equal number of times at each of three different types of initial graphs: (i) the empty graph with no edges; (ii) the directed minimum spanning tree (MST); and (iii) a randomly chosen DAG (chosen independently for each trial). Finally, to focus the search on the most important block relationships, we considered only edges between blocks whose longest common subsequence (LCS) contained at least 20 duplicons.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Maximum parsimony reconstruction</head><p>The maximum parsimony DAG contains 391 nodes and 479 edges. There are nine connected components with at least four duplication blocks, and nearly 40% of the blocks appear in the largest connected component.<ref type="figure" target="#fig_6">Figure 3</ref>shows a moderately-sized connected component. The graph also contains a total of 105 singleton nodes for which we did not infer any evolutionary relations with other duplication blocks, 97 of which did not exhibit an LCS of length 20 with any other block. The maximum parsimony DAG represents a scenario in which all 391 duplication blocks could have been constructed in a sequence of 17 431 total duplicate operations. As a baseline comparison, a minimum spanning tree, with respect to duplication distance, on the set of duplication blocks has a total parsimony score of 28 852 and by definition, contains 390 edges.<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>performed an initial analysis of the duplication blocks. They defined 24 clades, or groups of duplication blocks derived from a common ancestor block, by performing hierarchical clustering on a matrix representing the shared presence or absence of duplicons for every pair of blocks. For a given clade they defined a core duplicon as one that appears in at least 67% of the constituent duplication blocks. They posited that clades represent families of evolutionarily related duplication blocks and that core duplicons 'may have driven the evolution of the duplication blocks' in a clade. After construction, we colored the nodes of our DAG according to the clades described in<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>. We found a strong correspondence between Jiang et al.'s clades and connected subgraphs in our DAG; five of the nine connected components with at least four blocks were comprised of duplication blocks belonging to a single clade and seven of the nine components were comprised of blocks belonging to no more than two clades. For example, see Figures 4a and 5a. In larger components, nodes from a single clade frequently induce a connected subgraph. For example, see<ref type="figure" target="#fig_6">Figure 3</ref>. Our DAG also reveals which duplication blocks may have seeded many other blocks (i.e. those with high out-degree). For example, in<ref type="figure" target="#fig_6">Figure 3</ref>, block 399 exhibits eight children and is an inflection point for the component. Moreover, the edge from block 399 to 405Page: i450 i446–i452to a node v if the most-parsimonious duplication scenario includes duplication events that copy substrings of u in the construction of v.<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>partitioned the duplication blocks into a set of 24 clades (plus one 's' group of duplication blocks found in subtelomeric regions) that we indicate here with 25 colors on nodes. The 3 sets of colored edges represent inheritance networks for 3 conserved subsequences of duplicons. These inheritance networks are almost entirely confined to a single clade each. The green edges represent the inheritance of the duplicon sequence<ref type="bibr">[6968,</ref><ref type="bibr">6967,</ref><ref type="bibr">6965,</ref><ref type="bibr">6963,</ref><ref type="bibr">6962,</ref><ref type="bibr">6960]</ref>in clade 'M1', the red edges represent the inheritance of<ref type="bibr">[7039,</ref><ref type="bibr">7036,</ref><ref type="bibr">7037]</ref>in clade 'M2', and the blue edges represent the inheritance of<ref type="bibr">[9448,</ref><ref type="bibr">9449]</ref>in clade 'chr16.'links blocks from the the 'M1' and 'chr7_2' clades. Even though the blocks 399 and 405 belong to different clades, 405 is very 'close' to 399 in duplication distance: block 405 contains only 71 duplicons, but it shares a subsequence of 29 duplicons with block 399. This link suggests that the entirety of clade 'chr7_2' was descended from clade 'M1' in an optimal duplication history. Also implicit in the DAG is information about which duplicons are duplicated from one block to another in an optimal duplication history. We define the inheritance network for each duplicon as the subgraph induced on the edges on which that duplicon is passed from parent to child. Interestingly, a comparison of the inheritance networks for core and non-core duplicons revealed that many noncore duplicons exhibit larger inheritance networks within subgraphsinduced by a clade than core duplicons. For example, non-core duplicon 6970 appeared on 36 of the 63 total edges in the subgraph induced by clade 'M1' (shown in blue in<ref type="figure" target="#fig_6">Fig. 3</ref>) and does not appear on any other edge in the graph. In contrast, the maximum size of the inheritance network of a core duplicon was only 17. We propose 6970 as a new core duplicon for this clade and suggest that others like it should also be categorized as core duplicons. Moreover, we found inheritance networks for many conserved subsequences of duplicons that were nearly as prominent as those for individual core duplicons. For example, the subsequence<ref type="bibr">[6968,</ref><ref type="bibr">6967,</ref><ref type="bibr">6925,</ref><ref type="bibr">6963,</ref><ref type="bibr">6962]</ref>of duplicons appears on 23 of the edges in the subgraph induced by 'M1' clade nodes (shown as green edges in<ref type="figure" target="#fig_5">Fig. 2</ref>). Similarly, the sequence<ref type="bibr">[7039,</ref><ref type="bibr">7036,</ref><ref type="bibr">7037]</ref>exhibits a connected inheritance network of 7 edges within the subgraph induced on clade 'M2', and<ref type="bibr">[9448,</ref><ref type="bibr">9449]</ref>exhibits an inheritance network of seven edges within the subgraph induced on clade 'chr16' that includes an inheritance path of length 5 (<ref type="figure" target="#fig_5">Fig. 2</ref>). By delineating the inheritance networks of duplicon subsequences that are conserved across duplication blocks, we can learn about which duplicons were duplicated and transposed conjointly. This type of analysis was impossible using only the clade annotations of<ref type="bibr" target="#b9">Jiang et al. (2007</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Clades and core duplicons</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.L.Kahn et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Clade</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i450</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Reconstruction of segmental duplications</head><formula>(a) (b)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Maximum likelihood reconstruction</head><p>We computed the maximum likelihood DAGs (Definition 3.2) for the sets of duplication blocks appearing within moderately sized connected components of the maximum parsimony DAG in order to compare the two methods. We chose the components comprised of blocks from clades 'chr16' and 'chr10', respectively (<ref type="figure" target="#fig_5">Fig. 2</ref>). The maximum likelihood subgraphs for these subproblems are shown in Figures 4b and 5b. The two DAGs for the 'chr16' component in<ref type="figure" target="#fig_7">Figure 4</ref>share some characteristics. For example, node 121 is a common ancestor of every other block and block 276 exhibits high out-degree in both solutions. Both solutions are similarly 'good' with respect to the parsimony objective: the solution in (a) exhibits an optimal parsimony score of 397, and the one in (b) exhibits a score of 401.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i451</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.L.Kahn et al.</head><p>However, the likelihood score for the parsimony solution in (a) was nearly zero. One difference that accounts for this discrepancy is the higher average in-degree for blocks in the parsimony solution (2.2) as compared to the likelihood solution (1.3). Also, the parsimony solution exhibits a path with ten edges, whereas the longest path in the likelihood solution has six. Some of these differences are due to the fact that the parsimony criterion does not penalize edges that do not directly improve the score. For example, block 291 has two parents (276 and 25) in the parsimony DAG but only one parent (276) in the likelihood DAG. However, the duplication distance with source 276 25 and target 291 is the same as the duplication distance with source 276 and target 291. Therefore, the edge from 25 to 291 does not improve the parsimony score, underscoring that there are multiple optimal parsimony solutions. In contrast, the likelihood of a target block generally increases as the sum of the lengths of its parent blocks decreases, so the max likelihood DAG will not include edges that do not directly improve the score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION</head><p>Our maximum parsimony and maximum likelihood reconstructions show some differences, both from each other and from the analysis of<ref type="bibr" target="#b9">Jiang et al. (2007)</ref>. In particular, we identify non-core duplicons and subsequences that are arguably as promiscuous within a clade as core duplicons. There are several directions for future work. From a theoretical perspective, one can incorporate other types of operations into the probabilistic model, such as deletions and inversions which we have described in the parsimony setting (<ref type="bibr" target="#b12">Kahn et al., 2010</ref>), as well as single nucleotide mutations. Also, our method could be used to sample over the space of DAGs using a Markov Chain Monte Carlo strategy. From the perspective of applications, a more comprehensive analysis of genes or other elements in the newly identified core duplicons and core subsequences from our reconstruction is warranted, as is a further refinement of the clade annotation by analyzing the clade-induced subgraphs of the DAGs. Funding: Career Award at the Scientific Interface from the Burroughs Wellcome Fund (to B.J.R.).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conflict of Interest: none declared.</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. An example of a sequence of duplicate operations that constructs Y = deabdec from X = abcde. The corresponding feasible generator is: X = (X 4,5 ,X 1,3 ,X 4,5 ) = ((de),(abc),(de)).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>[10:37 28/8/2010 Bioinformatics-btq368.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>X</head><figDesc>, we must calculate the total number of length-k generators whose lengths sum to l for all relevant values of l. Let C (k) X (l) equal the number of distinct length-k generators for which the sum of the lengths of the elements equals l. 3 Lemma 2.6. Let X = x 1 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><figDesc>[10:37 28/8/2010 Bioinformatics-btq368.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><figDesc>[10:37 28/8/2010 Bioinformatics-btq368.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.2.</head><figDesc>Fig. 2. The maximum parsimony DAG for a set of 391 duplication blocks in the human genome. The nodes represent duplication blocks. Edges indicate evolutionary relations; an edge is directed from a node u</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.3.</head><figDesc>Fig. 3. A connected component of the maximum parsimony DAG. Nodes from clade 'M1' are red and nodes from clade 'chr7_2' are green. Node labels correspond to duplication block IDs. The blue edges represents the inheritance network for non-core duplicon 6970.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.4.</head><figDesc>Fig. 4. (a) Component comprised entirely of duplication blocks from clade 'chr16' in the maximum parsimony DAG. (b) Maximum likelihood DAG for subgraph induced on nodes in (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig.5.</head><figDesc>Fig. 5. (a) Component comprised entirely of duplication blocks from clade 'chr10' in the maximum parsimony DAG. (b) Maximum likelihood DAG for subgraph induced on nodes in (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>Definition 2.1. A duplicate operation, δ s,t,p (X), copies a substring X s,t of a source string X and pastes it into a target string at position p. 1 Specifically, if X = x 1 ...x m and Z = z 1 ...z n , then Z @BULLETδ s,t,p (X) = z 1 .</figDesc><table>..z p−1 x s ...x t z p ...z n . 

Definition 2.2. The duplication distance, 2 d(X,Y ), from a source string X 

to a target string Y is the minimum number of duplicate operations needed 
to construct Y by copying and pasting substrings of X into an initially empty 
target string. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>is feasible for a target string Y , that we denote as X Y , if: (1) The elements of X partition the characters of Y into mutually nonoverlapping subsequences {S 1 ,...,S k }. (2) There exists a bijective mapping f :{X i,j ∈ X }→{S</figDesc><table>1 ,...,S k } from 
substrings of X to subsequences in Y corresponding to how the 
elements of X partition Y . 

(3) The order of elements in X corresponds to the order of the leftmost 
characters of the subsequences </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>Lemma 2.8. Given a source string X = x 1 ...x |X| and a target string Y = y 1 ,...,y |Y | , the number N (k) X (Y ) of distinct length-k generators X that are feasible for Y satisfies the following recurrence.</figDesc><table></table></figure>

			<note place="foot" n="1"> In (Kahn and Raphael, 2008, 2009), we also considered duplicate reversals in which the copied substring is inverted before being inserted into the target. We note that all of our definitions and algorithms presented here can be similarly augmented but we omit the details. 2 We note that the duplication distance between a pair of strings is not formally a distance as it is asymmetric.</note>

			<note place="foot">In Kahn et al. (2010), we describe a polynomial-time algorithm to compute the duplication distance from X to Y. We use duplication distance to measure the similarity between a pair of duplication blocks by counting the number of operations needed to generate Y from X in a simplest or most-parsimonious scenario. While the parsimony assumption is attractive from a theoretical perspective and can produce useful biological insight, it might be overly restrictive, particularly when there are many different optimal or nearly optimal solutions. Consider, for example, the strings X =&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;, and &apos;g&apos;, hijkl, and Y = agdbhecifdajebkfclg. The duplication distance, d(X,Y ), is 13 and there is a single feasible generator with this optimum length. However, there are 989 possible feasible generators for Y , 119 of which have length 14, just slightly suboptimal. Because the space of all possible feasible generators is very large, a probabilistic model might give very low probability to an optimal parsimony solution. Thus, in the next section, we present a probabilistic model of segmental duplication that considers the weighted ensemble of all feasible generators for a source/target string pair. 2.3 The partition function For a given source string X and positive integer k, we consider the space of all length-k generators X. We define a probability distribution on the collection of generators by defining Pr[ X ]∝ω( X ) where ω( X ) is the &apos;score&apos;, or weight, assigned to a generator, and we compute the partition function Z (k) X of the weighted ensemble of all possible length-k generators X. Given a source string X and a target string Y , we define the event F to be the event of choosing a length-k generator that is feasible for Y from the space of length-k generators. We define a probabilistic model for segmental duplications that, given a target string Y , assigns a probability to F: Pr[F|Y ,X,k]. For a fixed target string Y , the probability, Pr[F|Y ,X,k], is the weighted ensemble of all possible length-k generators that are feasible for Y , normalized by the i447 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="4"> Both the max parsimony and max likelihood versions of the problem can be shown to be NP-hard by a reduction from the problem of Learning Bayesian Networks. i449 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">108</biblScope>
			<biblScope unit="page" from="37" to="65" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq368. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">108</biblScope>
			<biblScope unit="page" from="451" to="446" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq368. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="452" to="446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Personalized copy number and segmental duplication maps using next-generation sequencing</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Alkan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Genet</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="1061" to="1067" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Primate segmental duplications: crucibles of evolution, diversity and disease</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Bailey</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Eichler</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Rev. Genet</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="552" to="564" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Segmental duplications contribute to gene expression differences between humans and chimpanzees</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Blekhman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genetics</title>
		<imprint>
			<biblScope unit="volume">182</biblScope>
			<biblScope unit="page" from="627" to="630" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">On the tandem duplication-random loss model of genome rearrangement</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Chaudhuri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventeenth Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)</title>
		<meeting>the Seventeenth Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="564" to="570" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Reconstructing an ancestral genome using minimum segments duplications and reversals</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>El-Mabrouk</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="page" from="442" to="464" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Comparing sequences with segment rearrangements</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Ergun</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings FST TCS &apos;03</title>
		<meeting>FST TCS &apos;03<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="222" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Ancestral reconstruction of segmental duplications reveals punctuated cores of human genome evolution</title>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Jiang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Genet</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="1361" to="1368" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Analysis of segmental duplications via duplication distance</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">L</forename>
				<surname>Kahn</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">J</forename>
				<surname>Raphael</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="133" to="138" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">A parsimony approach to analysis of human segmental duplications</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">L</forename>
				<surname>Kahn</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">J</forename>
				<surname>Raphael</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pac. Symp. Biocomput</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="126" to="137" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Efficient algorithms for analyzing segmental duplications with deletions and inversions in genomes</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Kahn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithms Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">11</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Duplication and inversion history of a tandemly repeated genes family</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Lajoie</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comp. Bio</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="462" to="478" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Genomic distances under deletions and insertions</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Marron</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theor. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">325</biblScope>
			<biblScope unit="page" from="347" to="360" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">The equilibrium partition function and base pair binding probabilities for RNA secondary structure</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Mccaskill</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biopolymers</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1105" to="1119" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Whole-genome analysis of Alu repeat elements reveals complex evolutionary history</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Price</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="2245" to="2252" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Genome rearrangement with gene families</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Sankoff</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="909" to="917" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>