
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:57+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PyRosetta: a script-based interface for implementing molecular modeling algorithms using Rosetta</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Sidhartha</forename>
								<surname>Chaudhury</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Program in Molecular Biophysics</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Sergey</forename>
								<surname>Lyskov</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Chemical and Biomolecular Engineering</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Jeffrey</forename>
								<forename type="middle">J</forename>
								<surname>Gray</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Program in Molecular Biophysics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Chemical and Biomolecular Engineering</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Institute of NanoBioTechnology</orgName>
								<orgName type="department" key="dep2">Institute of Computational Medicine</orgName>
								<orgName type="institution" key="instit1">Sidney Kimmel Comprehensive Cancer Center</orgName>
								<orgName type="institution" key="instit2">Johns Hopkins University</orgName>
								<address>
									<addrLine>3400 North Charles Street</addrLine>
									<postCode>21218</postCode>
									<settlement>Baltimore</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">PyRosetta: a script-based interface for implementing molecular modeling algorithms using Rosetta</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="issue">5</biblScope>
							<biblScope unit="page" from="689" to="691"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq007</idno>
					<note type="submission">Structural bioinformatics Advance Access publication January 7, 2010 Received on November 12, 2009; revised on January 4, 2010; accepted on January 5, 2010</note>
					<note>[15:21 5/2/2010 Bioinformatics-btq007.tex] Page: 689 689–691 Associate Editor: Anna Tramontano http://www.pyrosetta.org under the Rosetta license which is free for academic and non-profit users. A tutorial, user&apos;s manual and sample scripts demonstrating usage are also available on the web site. Contact:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>PyRosetta is a stand-alone Python-based implementation of the Rosetta molecular modeling package that allows users to write custom structure prediction and design algorithms using the major Rosetta sampling and scoring functions. PyRosetta contains Python bindings to libraries that define Rosetta functions including those for accessing and manipulating protein structure, calculating energies and running Monte Carlo-based simulations. PyRosetta can be used in two ways: (i) interactively, using iPython and (ii) script-based, using Python scripting. Interactive mode contains a number of help features and is ideal for beginners while script-mode is best suited for algorithm development. PyRosetta has similar computational performance to Rosetta, can be easily scaled up for cluster applications and has been implemented for algorithms demonstrating protein docking, protein folding, loop modeling and design. Availability: PyRosetta is a stand-alone package available at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Recent advances in molecular modeling have lead to its increasing use in structural biology research for a wide range of applications. The Rosetta biomolecular modeling suite, in particular, has proved effective in many diverse tasks including ab initio structure prediction and homology modeling (<ref type="bibr" target="#b14">Raman et al., 2009</ref>), protein and small-molecule docking (<ref type="bibr">Chaudhury and Gray, 2007;</ref><ref type="bibr" target="#b5">Davis and Baker, 2009</ref>), loop modeling (<ref type="bibr" target="#b13">Mandell et al., 2009</ref>) and design (<ref type="bibr" target="#b11">Kuhlman et al., 2003</ref>). To make these protocols more accessible, a number of web-based servers have been constructed, such as Robetta (<ref type="bibr">Chivian et al., 2004</ref>), RosettaDock (<ref type="bibr">Lyskov and Gray, 2008</ref>) and RosettaAntibody (<ref type="bibr" target="#b15">Sivasubramanian et al., 2008</ref>). However, many modeling problems do not fit cleanly into one of the standard Rosetta protocols, and algorithms that combine elements from different methods within Rosetta are often required to * To whom correspondence should be addressed. adequately model a particular system. Developing such algorithms requires extensive experience in both C++ programming and Rosetta software development, severely limiting its accessibility. To make custom molecular modeling using Rosetta accessible to a broader community of structural biologists, we developed PyRosetta, a Python-based implementation of the Rosetta molecular modeling suite. Our goal was to enable users to define a molecular modeling problem, design an algorithm to solve it and implement that algorithm on the computer using preexisting Rosetta objects and functions. PyRosetta takes advantage of the object-oriented architecture of the new Rosetta release v3.1 to provide users with easy access to all the major functions and objects used by Rosetta developers (Leaver-Fay,A. et al., manuscript in preparation). PyRosetta can be run in two modes: interactive-mode, which contains tab-completion and help features which are ideal for beginners, and script-mode, which is better suited for algorithm development. We chose Python as the scripting language because it is a sophisticated programming language that enjoys widespread use in the biology community and allows PyRosetta to be compatible with other Python-based packages such as PyMol (<ref type="bibr" target="#b6">DeLano, 2002</ref>) and Bio-Python (<ref type="bibr" target="#b4">Cock et al., 2009</ref>). Our hope is that the extensive online communities of users of the many Python-based bioinformatics tools will help develop and share interfaces with PyRosetta. Since familiarity with Rosetta objects and functions is essential for new users, a tutorial, user's manual and sample scripts demonstrating usage are available on the web site. We used a number of tools to convert the classes and functions in the Rosetta C++ source code into a Python-accessible form. GCC-XML (<ref type="bibr" target="#b9">Kitware Inc., 2007</ref>) parses the classes and functions of the Rosetta C++ code into an XML representation using the GCC compiler. The Py++ package (Language Binding<ref type="bibr">Project, 2009</ref>) uses the GCC-XML objects and generates Python bindings using the Boost.Python library (<ref type="bibr">Boost, 2009</ref>). To make this process feasible for over 2000 Rosetta objects, this entire process is automated. The scripts are portable and tested on Mac OSX, Linux and Windows platforms. The building process requires 4–6 h depending on the platform and the pregenerated binary libraries are provided for download for all three platforms. A version of PyRosetta will be made available with each new release of Rosetta along with intermediate versions that add additional features, fix bugs, improve accessibility or expand documentation. In terms of computational cost, PyRosetta performs almost identically to the C++ build of Rosetta with performance benchmarks indicating a &lt;5% difference in speed.Page: 690 689–691</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S.Chaudhury et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">ROSETTA APPROACH</head><p>Molecular modeling in Rosetta for structure prediction and design relies on the thermodynamic principle that the configuration of a biomolecular system at equilibrium tends toward that which is the lowest in free energy. The free energy of a given configuration (structure and sequence) is approximated using a score function that uses mathematical models of the major biophysical forces (Van der Waals energies, hydrogen bonding, electrostatics, solvation energies etc.) as a function of the configuration. Since it is impossible to exhaustively sample the entire configurational space accessible to the system because of its size and complexity, the starting structures and sampling strategies vary across different modeling applications. Furthermore, different energy scoring components carry different degrees of importance in different modeling applications. The necessity of tailored sampling and scoring strategies underscores the need for a generalized approach to implementing custom molecular modeling algorithms. Rosetta protocols generally sample the relevant configurational space for a given modeling application by running a large number of relatively short Monte Carlo trajectories starting from random or semi-random starting configurations, storing the lowest energy structures from each trajectory (called decoys), and then selecting lowest energy decoys as predictions. To tackle a wide range of biomolecular modeling problems, it is necessary to precisely define the relevant configurational space for sampling, the search strategy and the score function used for both sampling and identifying the lowest energy structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PYROSETTA FEATURES</head><p>In PyRosetta, a biomolecular system is represented by an object called the Pose. The Pose contains all the structure and sequence information necessary to completely define the system in both Cartesian and internal coordinates. The internal coordinates used for proteins include the backbone torsion angles, φ, ψ and ω; the side chain torsion angles χ; and 'jumps' which define the relative position and orientation of multiple continuous polypeptide chains in the system. Nucleic acids and other molecules (ligands, posttranslational modifications, etc.) are similarly built using internal coordinates; solvent is typically treated implicitly. The spatial and internal coordinates are synchronized within the Pose. A starting structure is read into a Pose from a Protein Data Bank file and its conformation is altered by perturbing its internal coordinates (<ref type="figure" target="#fig_1">Fig. 1</ref>). The energy of a structure, or Pose, can be calculated using the ScoreFunction. The ScoreFunction represents an energy function that is the sum of weighted independent energy terms. Over 20 energy terms are available including Van der Waals attractive and repulsive components, hydrogen bonding, solvation and electrostatics energies. The user can create a custom scoring function by setting the weights of the desired components to nonzero values (<ref type="figure" target="#fig_1">Fig. 1</ref>). The energy of a structure is calculated by passing a pose into the scoring function, which returns the score. Sampling functions are written as Mover objects in Rosetta. As a general form, a Mover.apply(pose) function carries out that particular perturbation on that Pose. Examples of movers include those that perturb backbone torsion angles, such as SmallMover, or minimize the structure using a given energy function, such asa MinMover. The conformational search space can be limited and controlled using the MoveMap and FoldTree objects. The MoveMap specifies which internal coordinates are to be held rigid during sampling. The FoldTree instructs the Pose on how to convert its internal coordinates into Cartesian coordinates (<ref type="bibr" target="#b1">Bradley and Baker, 2006</ref>) and provides a framework for controlling how local perturbations propagate through the global structure (e.g. in loop modeling). Finally, the MonteCarlo object performs the bookkeeping for a Monte Carlo simulation, including storing the current structure and energy, calculating the change in energy caused by a perturbation and applying the Metropolis Criterion using the MonteCarlo.boltzmann(Pose) function (<ref type="figure" target="#fig_1">Fig. 1</ref>). In addition to the basic movers, there are movers that execute standard Rosetta protocols. Examples include DockingLowRes() for the low-resolution phase of protein docking, LoopMover_RefineCCD, for the high-resolution refinement phase of loop modeling, and the versatile PackRotamersMover, which carries out side chain packing and design using a rotamer library. Finally, the PyJobDistributor object manages multiple simulation trajectories simultaneously while storing all the decoys and tabulating a score file. Scripts demonstrating molecular modeling protocols such as alanine scanning (<ref type="bibr" target="#b9">Kortemme and Baker, 2002</ref>), protein and small-molecule docking (<ref type="bibr">Chaudhury and Gray, 2007;</ref><ref type="bibr" target="#b5">Davis and Baker, 2009</ref>), protein design (<ref type="bibr" target="#b10">Kuhlman and Baker, 2000</ref>) and all-atom relaxation (<ref type="bibr" target="#b2">Bradley et al., 2005</ref>) can be found on the PyRosetta web site.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">OUTLOOK</head><p>PyRosetta is a Python-based implementation of the Rosetta molecular modeling package that enables users to implement molecular modeling algorithms using preexisting Rosetta objects and functions for a range of purposes from simple scripts to sophisticated modeling protocols and run them on the user's Page: 691 689–691</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PyRosetta</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>own</head><p>computational resources. PyRosetta is stand-alone package requiring only Python 2.5 to be installed and is currently available for download from the web site (www.pyrosetta.org), along with a user's manual and sample scripts that demonstrate usage. For new users, we have written a set of interactive educational modules available both electronically and in a bound form (). The modules use PyRosetta to lead users from the fundamentals of biomolecular structure and energetics through algorithm creation for applications in structure prediction and design. In the future, both Rosetta developers and outside users will be able to upload and share scripts with the PyRosetta community through the web site. The features described here are only a small subset of those available. Potential users are referred to the web site for more information.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>[15:21 5/2/2010 Bioinformatics-btq007.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. A Monte Carlo peptide folding simulation using PyRosetta.</figDesc></figure>

			<note place="foot">© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org</note>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Structure prediction of domain insertion proteins from structures of individual domains</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Berrondo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Structure</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="513" to="527" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Boost C++ libraries Available at http://www.boost Improved beta-protein structure prediction by multilevel optimization of nonlocal strand pairings and local backbone conformation</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Org Bradley</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Baker</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Boost Proteins</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="page" from="922" to="929" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Toward high-resolution de novo structure prediction for small proteins</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Bradley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">309</biblScope>
			<biblScope unit="page" from="1868" to="1871" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Conformer selection and induced fit in flexible backbone protein-protein docking using computational and NMR ensembles</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Chaudhury</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">J</forename>
				<surname>Gray</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">381</biblScope>
			<biblScope unit="page" from="1068" to="1087" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Biopython: freely available Python tools for computational molecular biology and bioinformatics</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">J</forename>
				<surname>Cock</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1422" to="1423" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">RosettaLigand docking with full ligand and receptor flexibility</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<forename type="middle">W</forename>
				<surname>Davis</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Baker</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">385</biblScope>
			<biblScope unit="page" from="381" to="392" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">PyMOL molecular graphics system Available at http://www.pymol</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">L</forename>
				<surname>Delano</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">J</forename>
				<surname>Gray</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The PyRosetta Interactive Platform for Protein Structure Prediction and Design: A Set of Educational Modules</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Three-dimensional structure of a recombinant variant of human pancreatic secretory trypsin inhibitor (Kazal type)</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">J</forename>
				<surname>Hecht</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">225</biblScope>
			<biblScope unit="page" from="1095" to="1103" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">Protein structure prediction and analysis using the Robetta server</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">E</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="526" to="531" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">A simple physical model for binding energy hot spots in protein-protein complexes</title>
		<author>
			<persName>
				<forename type="first">Kitware</forename>
				<surname>Inc</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Kortemme</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Baker</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="14116" to="14121" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Native protein sequences are close to optimal for their structures</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Kuhlman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Baker</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="10383" to="10388" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Design of a novel globular protein fold with atomic-level accuracy</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Kuhlman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">302</biblScope>
			<biblScope unit="page" from="1364" to="1368" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">C/C++ Python language binding Available at http://www.language-binding The RosettaDock server for local protein-protein docking</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Gray</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">J</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Language Binding Project Nucl. Acids Res</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="233" to="238" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Sub-angstrom accuracy in protein loop reconstruction by robotics-inspired conformational sampling</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">J</forename>
				<surname>Mandell</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="551" to="552" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Structure prediction for CASP8 with all-atom refinement using Rosetta</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Raman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="89" to="99" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">High-resolution homology modeling of antibody Fv regions using knowledge-based techniques, de novo loop modeling and docking</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Sivasubramanian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="497" to="514" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>