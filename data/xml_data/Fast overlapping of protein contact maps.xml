
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:37+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fast overlapping of protein contact maps by alignment of eigenvectors</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">18 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Pietro</forename>
								<forename type="middle">Di</forename>
								<surname>Lena</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">University of Bologna</orgName>
								<orgName type="institution" key="instit2">Mura Anteo Zamboni</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Piero</forename>
								<surname>Fariselli</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Biocomputing Group</orgName>
								<orgName type="institution">University of Bologna</orgName>
								<address>
									<addrLine>Via S.Giacomo 9/2</addrLine>
									<postCode>40127</postCode>
									<settlement>Bologna</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Luciano</forename>
								<surname>Margara</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">University of Bologna</orgName>
								<orgName type="institution" key="instit2">Mura Anteo Zamboni</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Marco</forename>
								<surname>Vassura</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">University of Bologna</orgName>
								<orgName type="institution" key="instit2">Mura Anteo Zamboni</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Rita</forename>
								<surname>Casadio</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Biocomputing Group</orgName>
								<orgName type="institution">University of Bologna</orgName>
								<address>
									<addrLine>Via S.Giacomo 9/2</addrLine>
									<postCode>40127</postCode>
									<settlement>Bologna</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Fast overlapping of protein contact maps by alignment of eigenvectors</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS ORIGINAL PAPER</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="page" from="2250" to="2258"/>
							<date type="published" when="2010">18 2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq402</idno>
					<note type="submission">Structural bioinformatics Advance Access publication July 7, 2010 Received on March 12, 2010; revised on June 30, 2010; accepted on July 2, 2010</note>
					<note>[11:26 11/8/2010 Bioinformatics-btq402.tex] Page: 2250 2250â€“2258 Associate Editor: Burkhard Rost Availability: Available at http://bioinformatics.cs.unibo.it/Al-Eigen Contact: dilena@cs.unibo.it Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Searching for structural similarity is a key issue of protein functional annotation. The maximum contact map overlap (CMO) is one of the possible measures of protein structure similarity. Exact and approximate methods known to optimize the CMO are computationally expensive and this hampers their applicability to large-scale comparison of protein structures. Results: In this article, we describe a heuristic algorithm (Al-Eigen) for finding a solution to the CMO problem. Our approach relies on the approximation of contact maps by eigendecomposition. We obtain good overlaps of two contact maps by computing the optimal global alignment of few principal eigenvectors. Our algorithm is simple, fast and its running time is independent of the amount of contacts in the map. Experimental testing indicates that the algorithm is comparable to exact CMO methods in terms of the overlap quality, to structural alignment methods in terms of structure similarity detection and it is fast enough to be suited for large-scale comparison of protein structures. Furthermore, our preliminary tests indicates that it is quite robust to noise, which makes it suitable for structural similarity detection also for noisy and incomplete contact maps.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Measuring the similarity of protein structures is a necessary step in several problems of bioinformatics, including the determination of structure conservation through evolution across species and/or the relation among structure and function. Several similarity measures of protein structures are available albeit no general agreement on the best one has been achieved (<ref type="bibr" target="#b13">Godzik, 1996;</ref><ref type="bibr" target="#b25">Oakley et al., 2008;</ref><ref type="bibr" target="#b30">Sadreyev et al., 2009</ref>). Routinely, each similarity measure relies on the choice of a scoring function and on the assumption that its optimum corresponds to the best possible match between two protein structures. The most widely adopted scoring measures are based on the root mean square deviation (RMSD;<ref type="bibr">Kabasch, 1976</ref>), distance map similarity (<ref type="bibr" target="#b16">Holm and Sander, 1993</ref>), contact map overlap (CMO; * To whom correspondence should be addressed.<ref type="bibr" target="#b14">Godzik et al., 1992</ref>) and, recently, universal similarity metric (UMS;<ref type="bibr" target="#b21">Krasnogor and Pelta, 2004;</ref><ref type="bibr" target="#b28">Rahmati and Glasgow, 2009</ref>). The maximum CMO measure quantifies the level of similarity between two protein structures by measuring the maximum overlap of their contact maps and it is obtained by computing the sequence alignment that maximizes the number of corresponding contacts between pairs of aligned residues. The maximum CMO is one of the few measures for which exact algorithms are known. On the other hand, the maximum CMO problem is known to be NP hard (<ref type="bibr" target="#b15">Goldman et al., 1999</ref>). Although not explicitly stated in previous papers dealing with CMO algorithms, the goal of the these tools is to address the problem of protein structure prediction. In practice, given a set of predicted contacts the basic idea is to look for the best possible physical contact map among the available ones by means of a CMO program: methods for contact prediction are presently not accurate enough (<ref type="bibr" target="#b8">Ezkurdia et al., 2009</ref>) to allow protein structure reconstruction (). The main contribution of CMO algorithms is therefore to provide tools for template recognition when the native protein structure is unknown and not to substitute structural alignment methods (i.e. methods based on RMSD and distance map similarity measures), which perform quite well. The first exact algorithm for the maximum CMO problem, based on integer programming (IP), was developed in<ref type="bibr" target="#b22">Lancia et al. (2001)</ref>and improved in<ref type="bibr" target="#b5">Caprara and Lancia (2002)</ref>. Later, several other methods based on the same approach were proposed (<ref type="bibr" target="#b2">Andonov et al., 2008;</ref><ref type="bibr" target="#b34">Strickland et al., 2005;</ref><ref type="bibr" target="#b38">Xie and Sahinidis, 2007</ref>). The IP approach consists in formulating the CMO as the maximization of some integer linear function and solving it with Lagrangian Relaxation (LR) and/or Branch and Bound reduction techniques. The disadvantage of IP-based methods is that, due to the intractability of the problem, they are exponential in the worst case. For a practical usage, the running time of these algorithms is bounded and the best solution within the time limit is returned. The counter part is that the IP-based methods provide upper and lower bounds to the optimal solution and this makes it possible to evaluate the quality of the partial solution from the distance between the upper and lower bound. The best possible overlap is found when the upper and lower bounds coincide. Recently, two polynomial-time approximation schemes for the protein structure alignment problem (in particular, contact map alignment) have been developed (<ref type="bibr" target="#b0">Agarwal et al., 2007;</ref><ref type="bibr" target="#b39">Xu et al., 2007</ref>). The approximation algorithm described in<ref type="bibr" target="#b39">Xu et al. (2007)</ref>is polynomial in the protein length but it is exponential with respect to some constant parameters and its running time increases with decrease of an approximation factor. The method developed<ref type="bibr">[</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fast overlapping of protein contact maps by alignment of eigenvectors</head><p>in<ref type="bibr" target="#b0">Agarwal et al. (2007)</ref>is based on a decomposition procedure on the input graphs. It is a six-approximation algorithm, i.e. it returns a solution that is at least 1/6 distant from the optimal one, and it has a polynomial running time. Despite the strength of the underlying formalization, the CMO-based algorithms are scarcely used to compare protein structures. Indeed, the algorithmic implementations of the exact and approximation methods are on the average too slow to be used for wide-scale comparison. Furthermore and most importantly, there is no agreement on the most suitable value of contact threshold to represent a protein structure (<ref type="bibr" target="#b6">Caprara et al., 2004;</ref><ref type="bibr" target="#b7">Duarte et al., 2010;</ref>). High-threshold contact maps (â‰¥10 Ã…) are more informative; however, their comparison requires an even higher computational time and this makes the adoption of exact/approximation methods not feasible. To our knowledge, only three heuristic methods, SADP (Jain and<ref type="bibr" target="#b18">Lappe, 2007</ref>), MSVNS (<ref type="bibr" target="#b26">Pelta et al., 2008</ref>) and BIMAL (<ref type="bibr" target="#b19">Jain and Obermayer, 2009</ref>), have been proposed for the CMO problem. Even if not optimal, SADP, MSVNS and BIMAL can produce acceptable solutions in a reasonable time compared with exact methods. The main limitation of available heuristic CMO methods is that their running time depends on the number of contacts making them extremely slow when the contact maps contain a huge number of contacts. In this article, we describe a new heuristic algorithm for the CMO problem. Our approach is based on the property that a contact map can be well-approximated by few of its eigenvectors. Thus, an acceptable overlapping of two contact maps can be heuristically obtained by performing a global alignment of few eigenvectors. The exploitation of the eigenvalues and eigenvector properties of the graph adjacency matrices have been extensively investigated in the more general context of inexact graph matching. In the pioneering work by<ref type="bibr" target="#b35">Umeyama (1988)</ref>, lately improved in<ref type="bibr" target="#b41">Zhao et al. (2007)</ref>, the eigendecomposition is introduced to detect a near-optimal permutation matrix that maximizes the similarity between two labeled graphs of the same size. The limitation on the graph dimensions is overcome in more recent approaches, such as Luo and Hancock (2001) and<ref type="bibr" target="#b32">Singh et al. (2007)</ref>, where the eigendecomposition is used to detect local similarities between the neighborhood topologies of the nodes in the two graphs. A different approach that exploits eigendecomposition is based on the conversion of a graph into a string by using the ordering of the nodes as defined by the principal eigenvector of its adjacency matrix (Robles<ref type="bibr" target="#b29">Kelly and Hancock, 2002</ref>). By this, two graphs can be matched by computing an alignment that minimizes the edit distance between the corresponding strings. However, these approaches, differently from the CMO methods, do not require to preserve the ordering of the nodes in the adjacency matrices. Differently, in our method the eigendecomposition is used to transform the twodimensional alignment problem between contact maps into a onedimensional alignment problem between eigenvectors. Therefore, in our case, the ordering between the nodes in the maps is naturally imposed by the one-dimensional alignment between their eigenvectors. Our algorithm is easily implementable and fast. Noticeably, by design, its running time does not depend on the number of contacts contained in the map and thus on the contact threshold. Experimental results show that it can compute good overlaps compared with exact CMO methods and that its performances in terms of protein structure recognition/classification are comparable with those of structural alignment methods. The running time of our implementation is comparable with the fastest structural alignment algorithms and heuristic CMO methods. Our tests confirm that contact maps computed at thresholds values â‰¥10 Ã… are more informative of the protein structures than those at lower thresholds and this makes our algorithm more suitable than other available CMO methods for protein structure comparison on large scale. Furthermore, in order to evaluate the robustness our algorithm, we test the effect of random noise on the accuracy of structural similarity recognition performance. To the best of our knowledge, this is the first time that a CMO algorithm is evaluated in this way. The experimental tests indicate that our method is quite robust and can tolerate high amount of noise without dramatically affecting its recognition capabilities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Contact maps</head><p>A protein contact map is a two-dimensional approximation of the protein three-dimensional structure. For a given protein P, its contact map of threshold Ï„ is a square binary symmetric matrix defined by M P ij = 1 if the distance between residues i,j is â‰¤ Ï„Ã…</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="0">otherwise</head><p>There are several definitions of distance between residues in literature. The particular choice of a distance is not critical since the CMO problem is independent of the distance used to represent contacts between residues. Following the CMO literature, we consider here the C Î± distance, which defines the distance between residues i,j as the Euclidean distance between the coordinates of their respective C Î± atoms. Typical threshold values for C Î± contact maps vary from 6 Ã… to 16 Ã…. For this range of thresholds, consecutive residues are always in contact (consecutive residues share a peptide bond and the distance between their respective C Î± atoms is about 3.7 Ã…). For low-threshold values, typically 6â€“9 Ã…, the number of contacts (i.e. 1s) observed in the map is sparse compared with the number of non-contacts (i.e. 0s). Moreover, these threshold values are the ones which minimize the distance between C Î± contact maps and physical contact maps (<ref type="bibr" target="#b4">Bartoli et al., 2007</ref>). On the contrary, high-threshold contact maps (10â€“16 Ã…) have a higher number of contacts and are more informative about the protein structure. At low-threshold values, several different three-dimensional structures can be consistent with the same contact map: the ambiguity can be minimized by increasing the threshold of the contact map (<ref type="bibr" target="#b7">Duarte et al., 2010;</ref>). The threshold problem was also noticed in<ref type="bibr" target="#b6">Caprara et al. (2004)</ref>, the authors report that a threshold value smaller than 7 Ã… is not suitable to represent the protein structures in their benchmark set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The maximum CMO problem</head><p>Given two proteins P 1 ,P 2 , whose (ordered) sets of residues are denoted, respectively, by R 1 ={1,...,n} and R 2 ={1,...,m}, an alignment between P 1 and P 2 is a mapping f : R 1 â†’ R 2 that respects the following two conditions:</p><p>(1) f is an injective partial function; and Page: 2252 2250â€“2258</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P.Di Lena et al.</head><p>(2) for each pair of residues i,j âˆˆ R 1 in the domain of f (i.e. f (i) = âˆ… = f (j)) we have that i &lt; j if and only if f (i) &lt; f (j).</p><p>Condition 1 imposes that a residue in the first/second protein can be aligned at most with one (possibly none) residue in the second/first protein. The non-aligned residues are assumed to be matched with gaps. Biologically, the introduction of a gap reflects an insertion/deletion event during the evolution of protein sequences. The number of gaps in an alignment f is defined by</p><formula>gap f =|{i | i âˆˆ R 1 ,f (i) = âˆ…}|+|{i | i âˆˆ R 2 ,f âˆ’1 (i) = âˆ…}|.</formula><p>Condition 2 imposes the ordering of the residues to be preserved in the alignment. The maximum CMO for proteins P 1 ,P 2 , is an alignment that maximizes the overlap between their respective contact maps</p><formula>M P 1 ,M P 2 .</formula><p>More formally, the maximum CMO problem is defined as the problem of computing the alignment f that maximizes the quantity</p><formula>O(M P 1 ,M P 2 ) = f (i) =âˆ…âˆ… =f (j) j&gt;i+1,f (j)&gt;f (i)+1 M P 1 ij Â·M P 2 f (i)f (j) (1)</formula><p>Noticeably, since contacts between consecutive amino acids are always present, they are not counted in (1). Moreover, a match between a contact and a non-contact is not penalized in (1). The CMO can be used as a measure of the similarity between two proteins structures: the higher the overlap between two contact maps, the higher the probability that the two related protein structures are similar. The CMO measure is quite robust to perturbations and does not greatly penalize the insertion of gaps and deletions. The CMO as similarity measure was introduced in<ref type="bibr" target="#b14">Godzik et al. (1992)</ref>. The problem of computing the maximum CMO was proven to be NP hard in<ref type="bibr" target="#b15">Goldman et al. (1999)</ref>. To quantify the level of similarity of two overlapped contact maps, we use the most widely adopted scoring function, originally proposed in Xie and Sahinidis (2007):</p><formula>2Â·O(M P 1 ,M P 2 ) C(M P 1 )+C(M P 2 ) (2)</formula><p>where C(M) = j&gt;i+1 M ij denotes the number of contacts in the contact map M.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">MATERIALS AND METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Datasets</head><p>In order to compare our results with those published before, we use the protein sets previously described. In practice, we use five different datasets (see<ref type="figure" target="#tab_1">Table 1</ref>and the Supplementary Material) for three different tests: performance comparison with exact and heuristic CMO methods (Section 4.1), recognition and classification performance comparison with structural alignment methods (Section 4.2) and error tolerance test (Section 4.3). For the comparison with exact CMO methods, we refer to the results published in<ref type="bibr" target="#b2">Andonov et al. (2008)</ref>on the Skolnick dataset. The contact maps used in<ref type="bibr" target="#b2">Andonov et al. (2008)</ref>have been computed at 7.5 Ã… threshold and are available as Supplementary Material. For the comparison with heuristic CMO methods, we refer to the results published in Jain and Obermayer (2009) on the Sokol, Lancia, Skolnick and Fischer datasets. These datasets are usually adopted as standard benchmark</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fast overlapping of protein contact maps by alignment of eigenvectors</head><p>the authors show that a contact map can be perfectly reconstructed starting from the only knowledge of its principal eigenvector. In practice, a contact map can be approximated by considering only few of its eigenvectors/eigenvalues. For instance, for 1 â‰¤ t â‰¤ n, the approximation of order t of M can be defined asËœM</p><formula>asËœ asËœM = t i=1 Î» i (v i âŠ—v i ) (4)</formula><p>This way of approximating a contact map is effective because the smaller is eigenvalue Î» i the smaller is the contribution of matrix v i âŠ—v i in Equation (3). This is actually one of the approaches used for image data compression (<ref type="bibr" target="#b3">Andrews and Patterson, 1976</ref>). Consider now two proteins P 1 ,P 2 with contact maps M P 1 âˆˆ {0,1} nÃ—n ,M P 2 âˆˆ{0,1} mÃ—m , respectively. For some given 1 â‰¤ t â‰¤ min{n,m}, we can heuristically compute an overlap between M P 1 and M P 2 by computing an alignment that maximizes an opportune scoring function defined on their respective t eigenvectors u 1 ,...,u t and v 1 ,...,v t. Since the scoring function (1) does not penalize the eventual match of a contact with a non-contact, a global alignment of eigenvectors is preferred to a local alignment. The NW algorithm computes in polynomial-time the optimal global alignment of two sequences with respect to some scoring matrix S âˆˆ R nÃ—m and (constant) gap penalty G âˆˆ R. The entry S ij of the scoring matrix denotes the level of similarity between the i-th residue of P 1 and the j-th residue of P 2. The constant value G defines the cost for the introduction of a gap in the alignment. The NW algorithm can be easily modified in order to encode non-constant gap penalties. In this work, we consider only constant gap penalties. Formally, the NW algorithm computes the alignment f : R 1 â†’ R 2 that maximizes the objective function</p><formula>n i=1 f (i) =âˆ… S if (i) +GÂ·gap f</formula><p>In the following, we describe the scoring function (a) and the constant gap penalty (b) of our NW implementation.</p><p>(a) By Equation (3), for residues i,j of protein P 1 the quantity</p><formula>Î» 1 (v 1 ) i (v 1 ) j +Â·Â·Â·+Î» t (v t ) i (v t ) j (5)</formula><p>will tend to 1 with increasing of t if i,j are in contact and to 0 otherwise. In the quantity (5), the contribution of each product (v k ) i (v k ) j is weighted by the corresponding eigenvalue Î» k. Moreover, when Î» k is positive, such a contribute is positive if and only if (v k ) i and (v k ) j agree in sign. We describe the i-th residue of P 1 by the i-th entries of eigenvectors v 1 ,...,v t weighted by the square root of the corresponding eigenvalue Î» k :</p><formula>[(v 1 ) i ,...,(v t ) i ]=[ |Î» 1 |(v 1 ) i ,..., |Î» t |(v t ) i ] (6)</formula><p>According to this representation, the i-th residue of</p><formula>P 1 , described by [(u 1 ) i ,...,(u t ) i ]</formula><p>, should be matched with the j-th residue of P 2 ,</p><formula>described by [(v 1 ) i ,...,(v t ) i ]</formula><p>, when the pairwise entries of the these vectors highly agree both in sign and relative magnitude. The vectors do not need to be equal to obtain a high score; for this reason, a scoring scheme based on the Euclidean distance is not appropriate. Experimentally, we found that the scoring function that provides the best performances is</p><formula>S ij = t k=1 (u k ) i (v k ) j (7)</formula><p>The scoring function (7) assigns high scores when the corresponding entries of the vectors describing residues i and j have the same sign. Moreover, in S ij the contribution of each product (u k ) i (v k ) j is weighted by the square root of the corresponding eigenvalues.</p><p>(b) The gap penalty was evaluated experimentally. We found that in nearly all cases a good choice is</p><formula>G = min{0,min{S ij | 1 â‰¤ i â‰¤ n,1 â‰¤ j â‰¤ m}} (8)</formula><p>Note that the sign of the eigenvectors has no influence in Equation (3), i.e. v i âŠ—v i =âˆ’v i âŠ—âˆ’v i. In fact, there is no way to standardize the sign of the eigenvectors in the eigendecomposition. This implies that, when aligning two sets of t eigenvectors, we are forced to try all possible combinations of their signs. By definition of (7), to consider all possible combinations, it is sufficient to try all possible sign combinations for just one set of t eigenvectors, thus producing 2 t different alignments. Moreover, in some cases, we found that, with increasing number of eigenvectors, the quality of the alignment (in terms of the number of overlapping contacts recovered) slightly decreases. Thus, when aligning t eigenvectors, our algorithm proceeds as follows. First, it computes all alignments with one eigenvector for each pair, then with two and so on up to t. This procedure evaluates a total of t k=1 2 k = 2 t+1 âˆ’2 alignments. The best alignment in terms of overlapping contacts is chosen. One execution of the NW algorithm costs (nm), so our algorithm costs (2 t+1 Â·nm), i.e. it is exponential in the order of approximation t. Anyway, the running time is not dependent on the contact map threshold and for values of t up to 7 the running time is small enough to assure a fast computation, as shown below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Evaluation of the running time</head><p>The experiments were run on an Intel Pentium machine with a 2.80 GHz CPU and with 1 GB RAM. In our case, the time necessary to perform the eigendecomposition is not included for the comparison with other methods, since the eigenvectors can be computed (and stored) in a preprocessing phase. In general, the eigendecomposition time depends on the map sizes but the it is very fast compared with the time needed to perform the alignments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS AND DISCUSSION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Comparison with exact/heuristic CMO methods</head><p>In the first test, the Al-Eigen algorithm is compared on the Skolnick set with two exact IP-based methods, LAGR (<ref type="bibr" target="#b5">Caprara and Lancia, 2002</ref>) and A_Purva (<ref type="bibr" target="#b2">Andonov et al., 2008</ref>), and with the heuristic MSVNS (<ref type="bibr" target="#b26">Pelta et al., 2008</ref>). In<ref type="figure" target="#tab_2">Table 2</ref>, the total number of recovered overlapping contacts (Total overlap) and the required computational time (Time) are listed. For the sake of comparison, we use MSVNS version 3 (as suggested by the authors) with number of restarts equal to 5, 10, 30, 50, 70. All the runs are on the same contact maps with threshold value set to 7.5 Ã…. The implementations of LAGR and A_purva are not publicly available and we use the data previously published as Supplementary Material (<ref type="bibr" target="#b2">Andonov et al., 2008</ref>). Another exact method, CMOS (<ref type="bibr" target="#b38">Xie and Sahinidis, 2007</ref>), available online as a web server, has limitations on the size of the submitted problems and it was not included in our benchmark. As previously described (<ref type="bibr" target="#b2">Andonov et al., 2008</ref>), the computational time of the exact algorithms LAGR and A_purva has been limited to a maximum of 30 min per pair of contact maps. Even under this constraint, the two exact methods require a large computational time (from 7 to 13 days) to compute all the 780 alignments of the Skolnick set. It has been reported (<ref type="bibr" target="#b2">Andonov et al., 2008</ref>) that A_purva in this test returns an upper bound to the total overlap equal to 218 316 contacts and a total lower bound of 216 372 contacts (listed in<ref type="figure" target="#tab_2">Table 2</ref>). This indicates that the quality of the overlaps returned by A_purva within the time limitation is very good, since it is quite Page: 2254 2250â€“2258close to the optimum solution (the distance between the total upper bound and the total lower bound of A_purva is very short). With A_purva, the solution is in fact &lt;1% distant from the optimal one. The other exact algorithm LAGR similarly returns a solution &lt;4% distant from the optimal one. The total overlap returned by A_purva can, therefore, be adopted as the best approximation of the optimal solution for the Skolnick set. Therefore, all the other solutions listed in<ref type="figure" target="#tab_1">Table 1</ref>are normalized to that of A_purva (%wrt A_purva). In<ref type="figure" target="#tab_3">Table 3</ref>, the performance of Al-Eigen is compared with the two heuristic methods MSVNS and BIMAL (<ref type="bibr" target="#b19">Jain and Obermayer, 2009</ref>), which is not publicly available, with respect to the results published in Jain and Obermayer (2009). The maps for Lancia and Sokol datasets include also some contacts between contiguous residues which are not taken into account by Al-Eigen (thus, its performance is slightly lowered). It was not possible to compare the performance of Al-Eigen with BIMAL on the Fischer dataset, since the original maps used in Jain and Obermayer (2009) are not available. In<ref type="figure" target="#tab_4">Table 4</ref>, the performance on the Fischer dataset (7.5 Ã… contact maps) is compared with MSVNS only. The running times of BIMAL and MSVNS in<ref type="figure" target="#tab_3">Table 3</ref>are reduced with respect to that published in Jain and Obermayer (2009) in order to take into account the different clock frequencies: 1.75 GHz in Jain and Obermayer (2009) and 2.8 GHz for our machine, respectively. In detail, the running times of BIMAL and MSVNS have been scaled down by a factor equal to 0.8, which is the minimum ratio we obtained by comparing the running time of MSVN on our machine (on the same maps used for the tests in<ref type="figure" target="#tab_3">Table 3</ref>) and the running time reported in Jain and Obermayer (2009). Summing up, heuristic algorithms, when compared with exact algorithms, can provide good solutions in a much smaller computational time. Interestingly enough, when the elapsed timeis 6 min, Al-Eigen 7 returns 88.2% of the best overlap (<ref type="figure" target="#tab_2">Table 2</ref>). The comparison in Tables 3 and 4 shows that Al-Eigen has worst performance than other heuristic methods, MSVNS and BIMAL, on maps containing a small number of contacts. On the other hand, on maps containing a higher number of contacts the performance of Al-Eigen improves both in terms of quality of the overlap (compare the results on the Lancia/Sokol datasets with those on the Skolnick dataset) and computational time (compare the computational times of MSVNS and Al-Eigen on the Skolinck dataset in Tables 2 and 3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P.Di Lena et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Comparison with structural alignment methods</head><p>In this section, we evaluate the accuracy of our algorithm as a classifier (the ability to recognize protein structural similarities at the SCOP family/s.family/fold level) on the Proteus300 and Fischer dataset. These two datasets are more computationally demanding than the Skolnick set (they require 44 850 and 2278 alignments, respectively) and contain non-trivial superfamilies and folds. We compare the effectiveness of contact map alignment methods, including MSVNS, for the structural classification task with three structural alignment methods such as CE (<ref type="bibr" target="#b31">Shindyalov and Bourne, 1998</ref>), TM-align (<ref type="bibr" target="#b40">Zhang and Skolnick, 2005</ref>) and DaliLite (<ref type="bibr" target="#b17">Holm and Park, 2000</ref>). On the Proteus300 dataset, we consider also Page: 2255 2250â€“2258<ref type="bibr" target="#b1">Altschul et al., 1997</ref>) is a local sequence alignment tool. CE (<ref type="bibr" target="#b31">Shindyalov and Bourne, 1998</ref>), DaliLite (<ref type="bibr" target="#b17">Holm and Park, 2000</ref>) and TM-align (<ref type="bibr" target="#b40">Zhang and Skolnick, 2005)</ref>are structural alignment methods. A_purva+sse (<ref type="bibr" target="#b2">Andonov et al., 2008</ref>) is an exact CMO method that uses secondary structure information. MSVNS (<ref type="bibr" target="#b26">Pelta et al., 2008</ref>) and Al-Eigen 7 (our method) are the only pure CMO methods. b Contact map threshold used for CMO methods. N/A: not applicable. c Family/S.Family/Fold recognition results on the 300 proteins in the Proteus300 dataset. When CE returns more than one alignment for a pair, the one with the best Z-score is chosen. The TM-scores are normalized with respect to the shortest sequence. The best results are highlighted with bold fonts. d AUC values of the ROC curves at the SCOP Family/S.Family/Fold level. e Running time needed to compute the entire set of 44 850 pairwise alignments in the Proteus300 dataset. the performance of A_purva+sse, a variant of A_purva that encodes secondary structure constraints (two residues can be aligned only if they belong to the same secondary structure class). The results shown for A_purva+sse have been taken from the Supplementary Material of<ref type="bibr" target="#b2">Andonov et al. (2008)</ref>. The scoring function for the CMO methods is provided by Equation (2). CE, DaliLite and TM-align have their own scoring functions: Z-score (for CE and DaliLite) and TM-score (for TM-align). The only pure CMO methods considered for these tests are MSVNS and our algorithm. We use different contact map thresholds to test the performance of our method. Due to the demanding computational time required by MSVNS on highthreshold contact maps, it is not possible to test it for thresholds &gt;7.5 Ã…. In order to highlight the level of difficulty of our benchmarks, we also include the performance of BLAST (<ref type="bibr" target="#b1">Altschul et al., 1997</ref>), so that it is easier to detect the amount of information contained in the dataset at the protein sequence level. The performance of BLAST is evaluated with respect to its bit-score. In detail, we perform the following two tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fast overlapping of protein contact maps by alignment of eigenvectors</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Structural class recognition</head><p>We check the ability to detect the correct protein family/super family/fold with a leave-one-out test (Tables 5 and 6). For every query-protein, we select the modelprotein in the set that obtains the best similarity score and we measure the fraction of query-proteins for which the chosen modelprotein belongs to the same family/s.family/fold. The results on the Proteus300 and Fischer datasets are shown in Tables 5 and 6, respectively. On the Fischer dataset we test the performance only at the fold level since almost 1/3 of the proteins in the dataset (22) belong to a unique fold. In particular, the fold recognition test is performed only on the 46 proteins that belong to a non-unique fold in the dataset. On the Proteus300 dataset, all the methods have similar performance on the task of recognition at the family/s.family/fold<ref type="bibr" target="#b1">Altschul et al., 1997</ref>) is a local sequence alignment tool. CE (<ref type="bibr" target="#b31">Shindyalov and Bourne, 1998</ref>), DaliLite (<ref type="bibr" target="#b17">Holm and Park, 2000</ref>) and TM-align (<ref type="bibr" target="#b40">Zhang and Skolnick, 2005</ref>) are structural alignment methods. MSVNS (<ref type="bibr" target="#b26">Pelta et al., 2008</ref>) and Al-Eigen 7 (our method) are CMO methods. b Contact map threshold used for CMO methods. N/A: not applicable c Fold recognition results on Fischer dataset. Among the 68 proteins in the dataset, 22 belong to a unique fold. Thus, the fold recognition performance are evaluated only on the remaining 46 proteins. When CE returns more than one alignment for a pair, the one with the best Z-score is chosen. The TM-scores are normalized with respect to the shortest sequence. The best results are highlighted with bold fonts. d AUC values of the ROC curves at the SCOP Fold level. e Running time needed to compute the entire set of 2278 pairwise alignments in thelevel. Notably, most of the errors reported in<ref type="figure" target="#tab_5">Table 5</ref>are related to query-proteins that belong to non-trivial folds or non-trivial super families (see the Supplementary Material for detailed results). For example, as can we notice in<ref type="figure" target="#tab_5">Table 5</ref>, CE and DaliLite for 3 and 1 queries, respectively, can detect the correct superfamily Page: 2256 2250â€“2258</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P.Di Lena et al.</head><p>but not the correct family. MSVNS and Al-Eigen (on 7.5 Ã… and 8 Ã… maps) in few cases fail to detect also the correct fold. It is worth noticing how the family recognition performance of our method varies at increasing values of the contact map threshold: all queries are correctly recognized only at thresholds â‰¥10 Ã…. The good performance of the CMO method A_purva+sse on 7.5 Ã… contact maps can be related to the use of secondary structure constraints, which can be of help in discriminating structure similarity, at least at the SCOP class level. As shown in<ref type="figure" target="#tab_6">Table 6</ref>, on the Fischer dataset, structural alignment methods have better performance than CMO methods. In this case none of the methods is able to obtain full accuracy. The differences with respect to the results obtained on the Proteus300 dataset are justified by the low level of similarity between the targets in the Fischer dataset, as highlighted also by the performance of BLAST. Most of the errors reported in<ref type="figure" target="#tab_6">Table 6</ref>are related to queries that have a representative only in the same superfamily but not in the same family (Supplementary Material). In particular, the only query misclassified by DaliLite has only one representative in the same fold. Except for this case, the other four queries with representatives only in the same fold class are classified correctly by all the other methods (except BLAST). It is worth noticing that, also in this case, the performance in fold recognition of our method increases with increasing values of the contact threshold. In terms of computational time, in both tests, TM-align and Al-Eigen are the fastest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Binary classification We</head><p>measure the area under curve (AUC) values of the receiver operating characteristic (ROC) curves, when the alignment scores are used as a binary classifier system at the SCOP family/s.family/fold level. As in the previous test, the performance on the Fischer dataset are evaluated only at the fold level (Tables 5 and 6). The comparison based on AUC values shows that all the methods perform quite well as binary classifiers on both Proteus300 and Fischer datasets. In particular, the performance gap between structural alignment and CMO methods on the Fischer dataset is much smaller in terms of AUC values. This result indicates that, even if almost half of the queries are misclassified by CMO comparison, the most similar structures in the dataset are top-ranked. This test also confirms that high-threshold contact maps are more suitable for structure similarity detection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Error tolerance test</head><p>In this section, we evaluate the error tolerance of Al-Eigen and MSVNS on the Proteus300 and Fischer datasets. In this preliminary test, we adopt two different random error models. In particular, we apply some random perturbation to the original contact maps and evaluate the performance in terms of structural class recognition accuracy and AUC values, as performed in Section 4.2. In this case, we compare a perturbed map with all the other non-perturbed maps in the dataset, except itself. For the sake of comparison, we use only 7.5 Ã… contact maps. This threshold is also very close to the standard distance (8 Ã…) adopted for contact prediction (<ref type="bibr" target="#b8">Ezkurdia et al., 2009</ref>). In detail, we consider the following two models for random error.) and L is the length of the protein. Also in this case only the entries of the map related to non-consecutive residues are considered.</p><p>Error model 1 preserves the total number of contacts in the map. On the contrary, model 2 can eventually introduce more false positive contacts than the original number of contacts in the map. We test error model 1 with percentage of errors equal to 70, 80 and 90% and error model 2 with 10, 20 and 30%. In the latter case, the perturbed contact maps contain on the average 4, 8 and 11 times more contacts than the original ones, respectively. The results obtained on the Proteus 300 and Fischer datasets are shown in Tables 7 and 8, respectively. The AUC values in Tables 7 and 8 show that the CMO comparison approach has some discriminative power in distinguishing similar structures also in presence of highly noisy contact maps. In particular, the approach seems to be more robust when the total number of contacts in noisy maps does not differ too much from the native amount of contacts. In terms of recognition accuracy, by comparing the results obtained on the two different datasets it is evident that, in presence of noise (not surprisingly) the approach is much robust in detecting similarities at the family level more than at the fold level. In particular, on the Proteus300 dataset, the performance of Al-Eigen are almost unaffected also for 70% errors of type 1 (compare Tables 5 and 7). The better performance of Al-Eigen with respect to those of MSVNS can be related to a higher tolerance of noise due to the eigendecomposition. In particular, we tested (data not shown) how the two algorithms align a perturbed map with its native version. In almost all cases the alignment computed by Al-Eigen is the identity, i.e. the i-th residue in the perturbed map is aligned with the i-residue in the original map. In detail, the alignments of AlEigen, on the average, have &gt; 94% of identity (the identity abruptly drops from 94% at 90% error to 3% at 100% error, with respect to model 1). On the contrary, the same test on MSVN reports an average identity &lt;10%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSIONS</head><p>In this article, we described a heuristic algorithm suited to address the CMO problem. Our algorithm computes an overlap of two contact maps by performing a global alignment based on few eigenvectors. The approach is effective since contact maps can be well approximated by just a fraction of their eigenvectors. Our algorithm is reasonably simple and, by design, its computing time does not depend on the number of contacts in the map and then on the contact threshold. There are two main differences between our approach and the other methods developed so far for the CMO problem: (i) our algorithm is completely heuristic and it has no way to detect if the overlap found in some point of the computation is the best possible. In contrast, exact IP-based methods can stop the computation when the lower and upper bounds to the optimal solution coincide. (ii) The computing time of our algorithm depends uniquely on the protein Page: 2257 2250â€“2258</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fast overlapping of protein contact maps by alignment of eigenvectors</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>Nonetheless, for sake of clarity, we include here the time necessary to perform the eigendecomposition of the maps in our datasets described in Section 3.1. The eigendecomposition of the Sokol dataset requires &lt;1 ms in total. The Lancia, Skolnick, Fischer and Proteus300 datasets require approximatively 3, 4, 14 and 55 s, respectively. The eigendecomposition of the most large map in our datasets (534 residues) requires 2.3 s.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>MSVN has been run with 10 restarts. b Total number of recovered overlapping contacts. The total overlap includes also the overlap of a map with itself. c Running time needed to compute the entire set of pairwise alignments.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fischer</head><figDesc>dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>@BULLET Model1:</head><figDesc>an amount of %x errors means that exactly n random contacts are set to 0 and exactly n random non-contacts are set to 1, where n =round( xÂ·C 100 ), and C is the number of contacts in the map. Only contacts between non-consecutive residues are considered. @BULLET Model 2: an amount of %x errors means that exactly n random entries of the map are flipped, where n =round( x 100 (Lâˆ’1)(Lâˆ’2) 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 1. Dataset statistics and references</figDesc><table>Dataset 
Proteins/Domains 
Residues 

Min 
Avg Â± SD 
Max 

Sokol 
9 
12 
39Â±14 
51 
Lancia 
269 
44 
57Â±4 
6 8 
Skolnick 
40 
97 
160Â±61 
256 
Fischer 
68 
62 
183Â±105 
534 
Proteus300 
300 
64 
193Â±97 
465 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><figDesc>Table 2. Comparison with exact methods on the Skolnick dataset</figDesc><table>Method a 
Total overlap b 
% wrt A_purva c 
Time d 

A_purva 
216 372 
100% 
7 day 
LAGR 
210 395 
97.2% 
13 day 

MSVNS v3 r70 
199 270 
92.1% 
15 h 
MSVNS v3 r50 
197 777 
91.4% 
10 h 
MSVNS v3 r30 
195 007 
90.1% 
6 h 
MSVNS v3 r10 
186 776 
86.3% 
2 h 
MSVNS v3 r5 
178 757 
82.6% 
1 h 
Al-Eigen 14 
198 124 
91.6% 
18 h 
Al-Eigen 13 
197 386 
91.2% 
9 h 
Al-Eigen 12 
196 512 
90.8% 
4 h 30 min 
Al-Eigen 11 
195 640 
90.4% 
2 h 
Al-Eigen 10 
194 654 
90.0% 
1 h 
Al-Eigen 9 
193 571 
89.5% 
25 min 
Al-Eigen 8 
192 177 
88.8% 
12 min 
Al-Eigen 7 
190 923 
88.2% 
6 min 

a A_purva (Andonov et al., 2008) and LAGR (Caprara and Lancia, 2002) are exact 

CMO methods. MSVNS (Pelta et al., 2008) and Al-Eigen k (our method) are heuristic. 
MSVN has been run with 5, 10, 30, 50, 70 restarts. Al-Eigen k has been run by taking 
k = 7,...,14 principal eigenvectors. 
b Total number of recovered overlapping contacts. 
c Percentage of total overlapping contacts recovered with respect to the best performing 

method (A_purva). 
d Running time needed to compute the entire set of 780 pairwise alignments in the 

Skolnick set. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 3. Comparison with heuristic methods on the Skolnick, Lancia and Sokol datasets Method a Skolnick b Time c Lancia b Time c Sokol b Time c</figDesc><table>MSVNS v1 155 308 
40 min 
945 813 2 h 30 min 833 
5 s 
MSVNS v2 179 382 
50 min 1 010 559 3 h 
885 
4 s 
MSVNS v3 185 753 
1 h 
1 038 186 3 h 20 min 862 
5 s 
BIMAL 1 
187 049 
1 min 
818 357 4 min 
740 
0.1 s 
BIMAL 2 
189 498 
2 min 
867 691 8 min 
793 
0.1 s 
BIMAL r1 192 961 
20 min 
936 996 1 h 
814 
1 s 
BIMAL r2 194 499 
45 min 
984 481 2 h 
828 
3 s 
Al-Eigen 7 
187 003 
6 min 
731 865 40 min 
679 
2 s 
Al-Eigen 8 
188 246 
12 min 
737 718 1 h 
694 
5 s 
Al-Eigen 9 
189 308 
25 min 
744 095 2 h 
702 
7 s 
Al-Eigen 10 190 324 
1 h 
750 888 4 h 
706 
13 s 

a The results for MSVNS and BIMAL have been taken from Jain and Obermayer (2009). 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true"><figDesc>Table 4. Comparison with MSVNS method on the Fischer dataset</figDesc><table>Method 
Fischer a 
Time b 

MSVNS v1 r10 
445 887 
4 h 
MSVNS v2 r10 
465 892 
4 h 
MSVNS v3 r10 
476 469 
6 h 

Al-Eigen 7 
476 249 
20 min 
Al-Eigen 8 
479 745 
40 min 
Al-Eigen 9 
482 898 
1 h 20 min 
Al-Eigen 10 
485 388 
3 h 

a Total number of recovered overlapping contacts on the Fischer dataset. The total 

overlap includes also the overlap of a map with itself. 
b Running time needed to compute the entire set of 2346 pairwise alignments. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="true"><figDesc>Table 5. Scoring the family/s.family/fold recognition and binary classification performance on the Proteus300 dataset</figDesc><table>Method a 
Contact th. b 
Fam. rec. c 
S.Fam. rec. c 
Fold rec. c 
AUC Fam. d 
AUC S.Fam. d 
AUC Fold d 
Time e 

BLAST 
N/A 
274/300 
274/300 
275/300 
0.82 
0.78 
0.71 
2 min 

CE 
N/A 
297/300 
299/300 
300/300 
0.99 
0.98 
0.97 
40 h 
DaliLite 
N/A 
299/300 
300/300 
300/300 
0.99 
0.97 
0.97 
9 h 30 min 
TM-align 
N/A 
300/300 
300/300 
300/300 
0.99 
0.98 
0.98 
5 h 
A_purva+sse 
7.5 Ã… 
300/300 
300/300 
300/300 
0.99 
0.97 
0.97 
23 h 

MSVNS.v3 r10 
7.5 Ã… 
297/300 
298/300 
299/300 
0.97 
0.93 
0.93 
94 h 
Al-Eigen 7 
7.5 Ã… 
294/300 
294/300 
296/300 
0.98 
0.94 
0.94 
6 h 
Al-Eigen 7 
8 Ã… 
297/300 
297/300 
298/300 
0.98 
0.94 
0.94 
6 h 
Al-Eigen 7 
9 Ã… 
299/300 
299/300 
300/300 
0.98 
0.94 
0.94 
6 h 
Al-Eigen 7 
10 Ã… 
300/300 
300/300 
300/300 
0.99 
0.94 
0.95 
6 h 
Al-Eigen 7 
11 Ã… 
300/300 
300/300 
300/300 
0.99 
0.95 
0.96 
6 h 
Al-Eigen 7 
12 Ã… 
300/300 
300/300 
300/300 
0.99 
0.95 
0.96 
6 h 
Al-Eigen 7 
13 Ã… 
300/300 
300/300 
300/300 
0.99 
0.95 
0.96 
6 h 

a BLAST (</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><figDesc>Table 6.</figDesc><table>Scoring the fold recognition and binary classification performance 
on the Fischer dataset 

Method a 
Contact th b 
Fold rec c 
AUC Fold d 
Time e 

BLAST 
N/A 
19/46 
0.67 
6 s 

CE 
N/A 
40/46 
0.98 
1 h 20 min 
DaliLite 
N/A 
45/46 
0.99 
30 min 
TM-align 
N/A 
39/46 
0.99 
10 min 

MSVNS v3 r10 
7.5 Ã… 
23/46 
0.90 
6 h 
Al-Eigen 7 
7.5 Ã… 
24/46 
0.88 
20 min 
Al-Eigen 7 
8 Ã… 
23/46 
0.90 
20 min 
Al-Eigen 7 
9 Ã… 
22/46 
0.89 
20 min 
Al-Eigen 7 
10 Ã… 
29/46 
0.91 
20 min 
Al-Eigen 7 
11 Ã… 
30/46 
0.93 
20 min 
Al-Eigen 7 
12 Ã… 
33/46 
0.94 
20 min 
Al-Eigen 7 
13 Ã… 
32/46 
0.93 
20 min 

a BLAST (</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><figDesc>Table 7.</figDesc><table>Error tolerance test on the Proteus300 dataset (7.5 Ã… contact maps) 

Method 
Error model a 
%Err b 
Fam. rec. c 
S.Fam. rec c 
Fold rec. c 
AUC Fam. d 
AUC S.Fam. d 
AUC Fold d 

MSVNS.v3 r10 
1 
70 
114/300 
119/300 
138/300 
0.73 
0.71 
0.73 
Al-Eigen 7 
283/300 
285/300 
289/300 
0.91 
0.86 
0.86 
MSVNS.v3 r10 
80 
22/300 
27/300 
38/300 
0.66 
0.65 
0.68 
Al-Eigen 7 
253/300 
256/300 
268/300 
0.85 
0.81 
0.82 
MSVNS.v3 r10 
90 
8/300 
9/300 
22/300 
0.60 
0.60 
0.64 
Al-Eigen 7 
53/300 
54/300 
64/300 
0.71 
0.69 
0.72 

MSVNS.v3 r10 
2 
10 
229/300 
231/300 
240/300 
0.68 
0.67 
0.70 
Al-Eigen 7 
291/300 
292/300 
293/300 
0.80 
0.77 
0.79 
MSVNS.v3 r10 
20 
181/300 
185/300 
192/300 
0.63 
0.62 
0.66 
Al-Eigen 7 
273/300 
277/300 
277/300 
0.73 
0.70 
0.73 
MSVNS.v3 r10 
30 
86/300 
92/300 
107/300 
0.57 
0.57 
0.61 
Al-Eigen 7 
241/300 
243/300 
245/300 
0.67 
0.65 
0.69 

a Error models described in Section 4.3. 
b Percentage of random error introduced in the maps. 
c Family/S.Family/Fold recognition results on the 300 proteins in the Proteus300 dataset. Every perturbed map is compared against every non-perturbed map in the dataset except 

itself. 
d AUC values of the ROC curves at the SCOP Family/S.Family/Fold level. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><figDesc>Table 8.</figDesc><table>Error tolerance test on the Fischer dataset (7.5 Ã… contact maps) 

Method 
Error model a 
%Err b 
Fold rec. c 
AUC Fold d 

MSVNS.v3 r10 
1 
70 
6/46 
0.74 
Al-Eigen 7 
16/46 
0.81 
MSVNS.v3 r10 
80 
3/46 
0.74 
Al-Eigen 7 
11/46 
0.78 
MSVNS.v3 r10 
90 
2/46 
0.71 
Al-Eigen 7 
6/46 
0.73 

MSVNS.v3 r10 
2 
10 
16/46 
0.78 
Al-Eigen 7 
19/46 
0.81 
MSVNS.v3 r10 
20 
15/46 
0.72 
Al-Eigen 7 
19/46 
0.76 
MSVNS.v3 r10 
30 
7/46 
0.67 
Al-Eigen 7 
12/46 
0.73 

a Error models described in Section 4.3. 
b Percentage of random error introduced in the maps. 
c Fold recognition results on Fischer dataset. Among the 68 proteins in the dataset, </table></figure>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">References: Sokol (Strickland et al., 2005), Lancia (Lancia et al., 2001), Skolnick (Lancia et al., 2001), Fischer (Fischer et al., 1996), Proteus300 (Andonov et al., 2008). to evaluate overlap quality of CMO algorithms. The maps for the Skolnick, Lancia and Sokol datasets used in Jain and Obermayer (2009) are available as Supplementary Material of Xie and Sahinidis (2007). The contact threshold used to compute these maps is not reported but it seems to be lower than 7.5 Ã…. The maps for the Fischer dataset are not publicly available; thus, we computed our maps at threshold 7.5 Ã… for this test. For the comparison with structural alignment methods and for testing the error tolerance of our method, we use the Fischer and Proteus300 datasets, which contain mediumâ€“large protein domains and are more varying with respect to the SCOP (Andreeva et al., 2008) classification than the other benchmarks considered. The 68 domains in the Fischer dataset are distributed in 56 distinct SCOP families, 44 distinct super families and 40 distinct folds. Among them, 22 domains belong to a non-unique family (i.e. for each one of them there is in the dataset at least one representative in the same family class), five have one representative in the same fold class but not in the same family/s.family classes and 22 domains belong to a unique fold class. The 300 domains in the Proteus300 dataset are distributed in 30 distinct SCOP families (10 domains per family), 27 distinct super families and 24 folds. For the recognition/classification experiments, we test several different threshold values. For all the other experiments, we use contact maps at threshold 7.5 Ã… (or lower). 3.2 Al-eigen implementation The maximum CMO problem involves the alignment of two-dimensional objects. While there are optimal polynomial-time algorithms for the alignment in one-dimensional space, the problem is not tractable in two dimensions. Here, we describe a heuristic method to obtain a twodimensional alignment of contact maps by means of a one-dimensional alignment of their eigenvectors. Our approach uses standard techniques such as the canonical eigendecomposition of symmetric matrices (Strang, 2003) and the Needlemanâ€“Wunsch (NW) alignment algorithm (Needleman and Wunsch, 1970). The spectral theory provides conditions under which a matrix can be decomposed into a canonical form in terms of eigenvalues and eigenvectors. This canonical decomposition is usually called eigendecomposition or spectral decomposition. By the spectral theorem, every real nÃ—n symmetric matrix M can be eigendecomposed as M = n  i=1 Î» i (v i âŠ—v i ) (3) where Î» i represents the i-th eigenvalue, v i the corresponding eigenvector and âŠ— denotes the outer product between vectors. The ordering of the eigenvalues is not important provided that the eigenvectors are permuted accordingly; thus, we can always assume that the eigenvalues are sorted in decreasing order, i.e. Î» 1 â‰¥ Î» 2 â‰¥ Â·Â·Â· â‰¥ Î» n. Equation (3) defines matrix M as the sum of nÃ—n matrices v i âŠ—v i , weighted by the corresponding eigenvalues Î» i. The eigendecomposition allows the detection of the most relevant information contained in a contact map. For example, in Porto et al. (2004),</note>

			<note place="foot" n="22"> belong to a unique fold. Thus, the fold recognition performance are evaluated only on the remaining 46 proteins. Every perturbed map is compared against every nonperturbed map in the dataset except itself. d AUC values of the ROC curves at the SCOP Fold level. length and on the number of eigenvectors considered and it is not affected by the threshold value of the contact map. Differently, for all the other methods developed so far (exact, approximate and heuristic), the computing time increases with increasing number of contacts in the map (namely, with increasing threshold value of the contact map): more contacts result into more constraints to be taken into account and in a longer running time. We experimentally validated the performance of our algorithm by comparison with exact CMO methods (LAGR and A_purva), with heuristic CMO approaches (MSVNS and BIMAL) and with three structural alignment methods (CE, TM-align and DaliLite). Our algorithm is fast, it has good performance in terms of quality of the overlap when compared with exact/heuristic CMO methods and it is also competitive with widely used structural alignment methods in the task of protein structure comparison. In our tests, we found that contact maps computed at thresholds values â‰¥10 Ã… are more informative of the protein structures than those at lower thresholds. The computational time of our method is independent of the threshold value of the contact map and this makes it more suitable than other CMO methods for large-scale detection of protein structure similarities. Finally, in this article for the first time, to the best of our knowledge, we tested the effect of random noise on CMO alignments. According to these tests our algorithm is quite robust to noise and performs well in the task of structural similarity detection also with highly perturbed contact maps, at least at the SCOP family level. Conflict of Interest: none declared.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Fast molecular shape matching using contact maps</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">K</forename>
				<surname>Agarwal</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="131" to="143" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="3389" to="3402" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">An efficient Lagrangian relaxation for the contact map overlap problem Supplementary material available at http://www.irisa.fr/symbiose/old/softwares/resources Data growth and its impact on the SCOP database: new developments</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Andonov</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Bioinform. Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">5251</biblScope>
			<biblScope unit="issue">36</biblScope>
			<biblScope unit="page" from="162" to="173" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Singular value decomposition (SVD) image coding</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">C</forename>
				<surname>Andrews</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">L</forename>
				<surname>Patterson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="425" to="432" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">The effect of backbone on the small-world properties of protein contact maps</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Bartoli</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1" to="5" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Structural alignment of large-size proteins via Lagrangian relaxation</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Caprara</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Lancia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Annual International Conference on Computational Molecular Biology</title>
		<meeting>the Annual International Conference on Computational Molecular Biology<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="100" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">1001 optimal PDB structure alignments: integer programming methods for finding the maximum contact map overlap</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Caprara</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="27" to="52" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Optimal contact definition for reconstruction of contact maps</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">M</forename>
				<surname>Duarte</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page">283</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Assessment of domain boundary predictions and the prediction of intramolecular contacts in CASP8</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Ezkurdia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="96" to="209" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">118</biblScope>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq402. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="2258" to="2250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">Di</forename>
				<surname>Lena</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Assessing the performance of fold recognition methods by means of a comprehensive benchmark The Big Island of Hawaii</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Fischer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Pacific Symposium on Biocomputing</title>
		<meeting>the Pacific Symposium on Biocomputing<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="300" to="318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">The structural alignment between two proteins: is there a unique answer?</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Godzik</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Protein Sci</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1325" to="1338" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Topology fingerprint approach to the inverse protein folding problem</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Godzik</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">227</biblScope>
			<biblScope unit="page" from="227" to="238" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Algorithmic aspects of protein structure similarity</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Goldman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 40th Annual Symposium on Foundations of Computer Science</title>
		<meeting>the 40th Annual Symposium on Foundations of Computer Science<address><addrLine>New York City, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="512" to="521" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Protein structure comparison by alignment of distance matrices</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Holm</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Sander</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">233</biblScope>
			<biblScope unit="page" from="123" to="138" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">DaliLite workbench for protein structure comparison</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Holm</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Park</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="566" to="567" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Joining softassign and dynamic programming for the contact map overlap problem</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">J</forename>
				<surname>Jain</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Lappe</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Bioinform</title>
		<imprint>
			<biblScope unit="volume">4414</biblScope>
			<biblScope unit="page" from="410" to="423" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">BIMAL: Bipartite matching alignment for the contact map overlap problem</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">J</forename>
				<surname>Jain</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Obermayer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Joint Conference on Neural Networks</title>
		<meeting>the International Joint Conference on Neural Networks<address><addrLine>Atlanta, Georgia, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1394" to="1400" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">A solution for the best rotation to relate two sets of vectors</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Kabsch</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Cryst</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="922" to="923" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Measuring the similarity of protein structures by means of the universal similarity metric</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Krasnogor</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">A</forename>
				<surname>Pelta</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="1015" to="1021" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">101 Optimal PDB structure alignments: a branch-and-cut algorithm for the maximum contact map overlap problem</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Lancia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Annual International Conference on Computational Molecular Biology</title>
		<meeting>the Annual International Conference on Computational Molecular Biology<address><addrLine>Montreal, QuebÃ©c, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="193" to="202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Structural graph matching using the EM algorithm and singular value decomposition</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Luo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Hancock</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Anal. Mach. Intell</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="1120" to="1136" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">A general method applicable to the search for similarities in the amino acid sequence of two proteins</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">B</forename>
				<surname>Needleman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">D</forename>
				<surname>Wunsch</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="443" to="453" />
			<date type="published" when="1970" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Search strategies in structural bioinformatics</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">T</forename>
				<surname>Oakley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Protein Pept. Sci</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="260" to="274" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">A simple and fast heuristic for protein structure comparison</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">A</forename>
				<surname>Pelta</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">161</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Reconstruction of protein structures from a vectorial representation</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Porto</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rev. Lett</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="page">218101</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Comparing protein contact maps via Universal Similarity Metric: an improvement in the noise-tolerance</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Rahmati</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">I</forename>
				<surname>Glasgow</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Comput. Biol. Drug Des</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="149" to="167" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">String edit distance, random walks and graph matching</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Robles-Kelly</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">R</forename>
				<surname>Hancock</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">2396</biblScope>
			<biblScope unit="page" from="104" to="112" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">Discrete-continuous duality of protein structure space</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">I</forename>
				<surname>Sadreyev</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Opin. Struct. Biol</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="321" to="328" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Protein structure alignment by incremental combinatorial extension (CE) of the optimal path</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<forename type="middle">N</forename>
				<surname>Shindyalov</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">E</forename>
				<surname>Bourne</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Protein Eng</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="739" to="747" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">Pairwise global alignment of protein interaction networks by matching neighborhood topology</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Singh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">4453</biblScope>
			<biblScope unit="page" from="16" to="31" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<monogr>
		<title level="m" type="main">Introduction to Linear Algebra</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Strang</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<publisher>Wellesley-Cambridge Press</publisher>
			<pubPlace>Wellesley, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<analytic>
		<title level="a" type="main">Optimal protein structure alignment using maximum cliques</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">M</forename>
				<surname>Strickland</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="389" to="402" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">Eigendecomposition approach to weighted graph matching problems</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Umeyama</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Anal. Mach. Intell</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="695" to="703" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b36">
	<analytic>
		<title level="a" type="main">Reconstruction of 3D structures from protein contact maps</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Vassura</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="357" to="366" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b37">
	<analytic>
		<title level="a" type="main">FT-COMAR: fault tolerant three-dimensional structure reconstruction from protein contact maps</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Vassura</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="1313" to="1315" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b38">
	<analytic>
		<title level="a" type="main">A reduction-based exact algorithm for the contact map overlap problem</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Xie</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">V</forename>
				<surname>Sahinidis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="637" to="654" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b39">
	<analytic>
		<title level="a" type="main">A parameterized algorithm for protein structure alignment</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Xu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="564" to="577" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b40">
	<analytic>
		<title level="a" type="main">TM-align: a protein structure alignment algorithm based on the TM-score</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Skolnick</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="2302" to="2309" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b41">
	<analytic>
		<title level="a" type="main">Using eigen-decomposition method for weighted graph matching</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Zhao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">4453</biblScope>
			<biblScope unit="page" from="1283" to="1294" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>