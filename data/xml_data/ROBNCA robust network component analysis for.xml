
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:44+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Gene expression ROBNCA: robust network component analysis for recovering transcription factor activities</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">19 2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Amina</forename>
								<surname>Noor</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">Texas A&amp;M University</orgName>
								<address>
									<postCode>77843</postCode>
									<settlement>College Station</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Aitzaz</forename>
								<surname>Ahmad</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">Corporate Research and Development</orgName>
								<orgName type="institution" key="instit2">Qualcomm Technologies Inc</orgName>
								<address>
									<postCode>92121</postCode>
									<settlement>San Diego</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Erchin</forename>
								<surname>Serpedin</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">Texas A&amp;M University</orgName>
								<address>
									<postCode>77843</postCode>
									<settlement>College Station</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mohamed</forename>
								<surname>Nounou</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Department of Chemical Engineering</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Hazem</forename>
								<surname>Nounou</surname>
							</persName>
							<affiliation key="aff3">
								<orgName type="department">Department of Electrical Engineering</orgName>
								<orgName type="institution">Texas A&amp;M University at Qatar</orgName>
								<address>
									<country>Doha Qatar</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Ziv</forename>
								<surname>Bar-Joseph</surname>
								<roleName>Associate Editor:</roleName>
							</persName>
						</author>
						<title level="a" type="main">Gene expression ROBNCA: robust network component analysis for recovering transcription factor activities</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="page" from="2410" to="2418"/>
							<date type="published" when="2013">19 2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt433</idno>
					<note type="submission">Received on March 26, 2013; revised on June 28, 2013; accepted on July 24, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Availability: The ROBNCA software is available at http://people.tamu. edu/$amina/ROBNCA Contact: serpedin@ece.tamu.edu Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Network component analysis (NCA) is an efficient method of reconstructing the transcription factor activity (TFA), which makes use of the gene expression data and prior information available about transcription factor (TF)–gene regulations. Most of the contemporary algorithms either exhibit the drawback of inconsistency and poor reliability, or suffer from prohibitive computational complexity. In addition , the existing algorithms do not possess the ability to counteract the presence of outliers in the microarray data. Hence, robust and computationally efficient algorithms are needed to enable practical applications. Results: We propose ROBust Network Component Analysis (ROBNCA), a novel iterative algorithm that explicitly models the possible outliers in the microarray data. An attractive feature of the ROBNCA algorithm is the derivation of a closed form solution for estimating the connectivity matrix, which was not available in prior contributions. The ROBNCA algorithm is compared with FastNCA and the non-iterative NCA (NI-NCA). ROBNCA estimates the TF activity profiles as well as the TF–gene control strength matrix with a much higher degree of accuracy than FastNCA and NI-NCA, irrespective of varying noise, correlation and/or amount of outliers in case of synthetic data. The ROBNCA algorithm is also tested on Saccharo-myces cerevisiae data and Escherichia coli data, and it is observed to outperform the existing algorithms. The run time of the ROBNCA algorithm is comparable with that of FastNCA, and is hundreds of times faster than NI-NCA.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Recent advances in technology have enabled monitoring of cellular activities using more sophisticated techniques, and have provided a deluge of biological data. Using these data to unravel the underlying phenomena that regulate various activities in a living organism offers the potential to reap numerous benefits. One of the key biological processes is transcriptional regulation, which controls the gene expression and amount of RNA produced. This process is regulated by transcription factors (TFs), which are specialized proteins causing the genes to express by binding onto the gene promoters. A thorough understanding of this complex transcriptional regulation and TF–gene interaction will potentially aid in predicting the biological processes and designing control strategies to cure and/or avoid the diseased conditions (La¨hdesma¨kiLa¨hdesma¨<ref type="bibr" target="#b11">La¨hdesma¨ki et al., 2008</ref>). Microarray technologies are able to measure the level of gene expressions and quantify them in the form of gene expression data. Such data are widely used in the inference of gene–gene interactions. Transcription factor activity (TFA), which is defined as the concentration of its subpopulation with DNA binding ability, controls the transcriptional regulation (<ref type="bibr" target="#b7">Jajamovich et al., 2011</ref>). The correlation between TFAs and TF expression level is modified at the posttranscriptional and post-translational stage. It is, therefore, much harder to measure TFA profiles experimentally, and scientists have resorted to computational methods for their estimation (<ref type="bibr" target="#b19">Yang et al., 2005</ref>). Several statistical techniques including principal component analysis (PCA) (<ref type="bibr" target="#b8">Jolliffe, 1986</ref>) and independent component analysis (ICA) (<ref type="bibr" target="#b2">Comon, 1992</ref>) have been used to deduce useful information from sets of biological data. However, the successful application of these algorithms hinges on the assumptions of orthogonality and independence between the signals, which do not hold for biological signals in practice (<ref type="bibr" target="#b1">Chang et al., 2008</ref>). In fact, some prior information is usually available for many systems, and it should be incorporated in the system model, e.g. ChIP–chip data indicates which TFs and genes are known to interact. The gene regulatory network can be modelled linearly as follows (<ref type="bibr" target="#b13">Liao et al., 2003</ref>)</p><formula>Y ¼ AS þ ! , ð1Þ</formula><p>where Y is the N Â K gene expression data matrix, A is the N Â M control strength or connectivity matrix and S is the M Â K matrix denoting the TFAs. The uncertainties in the observation data are assumed to be Gaussian (<ref type="bibr" target="#b1">Chang et al., 2008;</ref><ref type="bibr" target="#b6">Jacklin et al., 2012</ref>), and are represented by the entries of the noise matrix !. Genes and TFs are known to interact in a dynamic and non-linear manner; however, a log-linear relationship provides a good approximation. Because a particular TF regulates only a few other genes, the connectivity matrix A is expected to be sparse. The problem then boils down to estimating S and *To whom correspondence should be addressed. A, where Y is available and some a-priori information about the matrix A is known. Network component analysis (NCA), proposed by<ref type="bibr" target="#b13">Liao et al. (2003)</ref>, provides a more accurate model for TF–gene regulation and makes use of the related prior information available. It was shown that provided certain conditions are met, the NCA algorithm produces a unique solution of the aforementioned estimation problem in the absence of noise. The NCA criteria require that: (i) the matrix A is full column-rank; (ii) if a row is removed from S as well as the output elements connected to it, the updated control strength matrix should still be of full columnrank; (iii) the TFA matrix S should have a full row-rank. These criteria guarantee that the solution obtained is unique up to a scale ambiguity (<ref type="bibr" target="#b6">Jacklin et al., 2012;</ref><ref type="bibr" target="#b13">Liao et al., 2003</ref>). When the NCA criteria are satisfied, the optimization problem reduces to:</p><formula>min A, S kY À ASk 2 F s:t: AðIÞ ¼ 0 , ð2Þ</formula><p>where k:k F denotes the Frobenius norm and I is the set of all indices where the entries of matrix A are known to be zero. The algorithm in (<ref type="bibr" target="#b4">Galbraith et al., 2006</ref>) allows the recovery of source signals when the microarray data consist of fewer data points and (<ref type="bibr" target="#b16">Tran et al., 2005</ref>) formulates the incorporation of regulatory knockout constraints as well. The NCA problem in (2) was first solved by using alternate least squares (ALS) for both A and S (<ref type="bibr" target="#b13">Liao et al., 2003</ref>). However, because the ALS solution requires solving a high dimensional matrix optimization problem at each iteration, it entails prohibitive computational complexity for large datasets, which often need to be handled in gene networks. FastNCA provides a closed form solution for A, which uses singular value decomposition (SVD) (<ref type="bibr" target="#b1">Chang et al., 2008</ref>), and is several tens of times faster than the ALS algorithm. The authors in (<ref type="bibr" target="#b6">Jacklin et al., 2012</ref>) propose a non-iterative version of NCA, herein referred to as NI-NCA, which offers greater consistency in terms of TFA estimation at the cost of much higher computational complexity than FastNCA. However, because the decomposition techniques used to derive these algorithms are susceptible even to the presence of small amount of outliers (<ref type="bibr" target="#b14">Mateos and Giannakis, 2012</ref>), their performance is expected to deteriorate significantly when data points are corrupted by outliers. It is commonly known that the microarray data are noisy and are corrupted with outliers because of erroneous measurements and/or abnormal response of genes, and robust algorithms are required for gene network inference (<ref type="bibr" target="#b3">Finegold and Drton, 2011</ref>). Therefore, it is imperative to develop an NCA algorithm that has an inherent ability to mitigate the effect of outliers, and also entails low computational costs and provides good consistency and accuracy. It is precisely this avenue which is the focus of our current work. The main contributions of this article can be summarized as follows:</p><p>(1) A novel algorithm, ROBust Network Component Analysis (ROBNCA), is proposed which has the inherent ability to counteract the presence of outliers in the data Y by explicitly modelling the outliers as an additional sparse matrix. The iterative algorithm estimates each of the parameters efficiently at each iteration, and delivers superior consistency and greater accuracy for TFA estimation.</p><p>(2) A particularly attractive feature of the ROBNCA algorithm is the derivation of a closed form solution for the estimation of the connectivity matrix A, a major source of high computational complexity in contemporary algorithms. To further lower the computational burden, a still faster closed form solution is derived that requires matrix inversion of much smaller size. The resulting algorithm is comparable with FastNCA in terms of computational complexity, and is hundreds of times faster than NI-NCA.</p><p>(3) The performance of ROBNCA is tested on Haemoglobin test data from (<ref type="bibr" target="#b6">Jacklin et al., 2012</ref>) for both low and highly correlated source signals. ROBNCA is seen to outperform the state-of-the-art algorithms for estimating both A and S in terms of mean square error (MSE). In addition, ROBNCA is applied to yeast cell cycle data (<ref type="bibr" target="#b12">Lee et al., 2002</ref>) and Escherichia coli data (<ref type="bibr" target="#b9">Kao et al., 2004</ref>), and by plotting the standard deviation of estimates, it is observed that ROBNCA offers better consistency than FastNCA and NI-NCA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">NCA with outliers</head><p>Most of the contemporary algorithms have studied the gene network construction problem using NCA with Gaussian noise models. However, inaccuracies in measurement procedures and abnormal gene responses often render heavier tails to the gene expression data, and Gaussian noise models may no longer be a natural fit in these cases. The decomposition techniques used in the available algorithms are highly sensitive to the presence of outliers i.e. the samples that do not conform to the Gaussian noise model, and their estimation capabilities are extremely susceptible to outliers. As a consequence, the gene network inference becomes unreliable for practical purposes. Therefore, we focus on deriving computationally efficient NCA algorithms that are robust to the presence of outliers. Towards that end, we take the approach of explicitly modelling the outliers as an additional matrix that corrupts the data points. From (1), it follows that the complete system model that accounts for the presence of outliers as well as noise can be expressed as</p><formula>Y ¼ AS þ O þ !, ð3Þ</formula><p>where the matrix O denotes the outliers. The outlier matrix O is a column sparse matrix, as there are typically a few outliers. The joint optimization problem for the estimation of the three parameters, which also allows for controlling outlier sparsity, can be formulated as b A, b S, b O n o ¼ arg min A, S, O kY À AS À Ok 2 F þ 0 kOk 0 such that AðIÞ ¼ 0, ð4Þ</p><p>where the non-convex l 0 norm kOk 0 denotes the number of non-zero columns in O, and the extent of sparsity in the columns of O is controlled by the tuning parameter 0. The optimization problem in (4) is reminiscent of compressive sampling techniques based on the l 0 norm, and are known to be NP-hard (<ref type="bibr" target="#b17">Tropp, 2006</ref>). Therefore, some relaxation is needed to solve the joint optimization problem without incurring exponentially increasing computational complexity. A viable alternative is the column-wise l 2 sum i.e. kOk 2, c ¼ P K k¼1 ko k k 2 , which is the closest convex approximation of kOk 0 (<ref type="bibr" target="#b17">Tropp, 2006</ref>). With this relaxation, the resulting joint optimization problem can be expressed as b A, b S, b O n o ¼ arg min A, S, O kY À AS À Ok 2 F þ 2 kOk 2, c such that AðIÞ ¼ 0: ð5Þ</p><p>Our goal is to estimate the three parameters A, S and O by solving the optimization problem (5). However, it can be noticed that the optimization problem is not jointly convex with respect to (w.r.t) A, S, O f g. Therefore, we resort to an iterative algorithm that alternately optimizes (3) w.r.t one parameter at a time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The ROBNCA algorithm</head><p>The update of each of the parameters, SðjÞ, AðjÞ and OðjÞ, at an iteration j is discussed as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Update</head><p>of the TFA matrix At iteration j, the value of the parameter SðjÞ is updated by minimizing the objective function (3) w.r.t S, while fixing the parameters A and O to their respective values at iteration ðj À 1Þ. By defining the matrix XðjÞ ¼ Y À Oðj À 1Þ, the optimization problem can be written as</p><formula>SðjÞ ¼ arg min S kXðjÞ À Aðj À 1ÞSk 2 F : ð6Þ</formula><p>Because the connectivity matrix Aðj À 1Þ has full column rank (by virtue of NCA criterion 1), the matrix A T ðj À 1ÞAðj À 1Þ is invertible. Therefore, an estimate of the TFA matrix S at the j th iteration can be readily obtained as</p><formula>SðjÞ ¼ A T ðj À 1ÞAðj À 1Þ À Á À1 A T ðj À 1ÞXðjÞ: ð7Þ</formula><p>The estimate SðjÞ, so obtained, is used in the upcoming steps to determine A and O.<ref type="bibr" target="#b13">Liao et al. (2003)</ref>. However, a closed form solution was not provided and the proposed algorithm relied on costly optimization techniques to update the matrix A. Because this minimization needs to be performed at each iteration until convergence, the ALS algorithm is known to be extremely slow for large networks, and computational resources required may be prohibitive (<ref type="bibr" target="#b6">Jacklin et al., 2012</ref>). Hence, it is imperative that a closed form solution is obtained for the optimization problem in (8), so that the algorithm is faster and efficient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Update of the connectivity matrix</head><p>Without loss of generality, we can consider the transposed system</p><formula>e X ¼ e S e A þ e !: ð9Þ</formula><p>where e X, e S, e A and e ! denote the transpose of the original matrices, respectively. The resulting equivalent optimization problem can now be stated as</p><formula>e AðjÞ ¼ arg min e A k e XðjÞ À e SðjÞ e Ak 2 F such that e Að ~ IÞ ¼ 0, ð10Þ</formula><p>where ~ I is the set of all indices where the entries of the matrix e A are known to be zero. The following theorem presents a closed form solution of the optimization problem (10), herein referred to as ROBNCA 1. THEOREM 1. The solution of (10) at the jth iteration is given by</p><formula>e a n ðjÞ ¼ Q À1 ðjÞ e w n ðjÞ À C T n ) À1 ðjÞC n Q À1 ðjÞe w n ðjÞ Â Ã , ð11Þ</formula><p>where )ðjÞ ¼ C n Q À1 ðjÞC T n , e w n ðjÞ ¼ e S T ðjÞe x n ðjÞ, the symmetric matrix QðjÞ ¼ e S T ðjÞ e SðjÞ and e a n and e x n represent the n th columns of matrices e A and e X, respectively. The L n Â M matrix C n is a matrix of zeroes except C n ð ~ I n Þ ¼ 1, where ~ I n is the set of indices where the entries of e a n are zero, and L n denotes the number of zero entries in e a n .</p><p>PROOF. The n t h column of (9) can be written as</p><formula>e x n ¼ e S e a n þ e n : ð12Þ</formula><p>The objective function in (10) can be equivalently expressed as</p><formula>k e XðjÞ À e SðjÞ e Ak 2 F ¼ X N n¼1 ke x n ðjÞ À e SðjÞe a n k 2 : ð13Þ</formula><p>The constraint e Að ~ IÞ ¼ 0 can be written as a set of n constraints C n e a n ¼ 0 for n ¼ 1,. .. , N. The L n Â M matrix C n is constructed such that it consists of all zeroes except C n ð ~ I n Þ ¼ 1. For instance, if M ¼ 6, and e a n ¼ ½a n1 , a n2 , 0, a n4 , 0, a n6  T , the 2 Â 6 matrix C n consists of all zeroes except C n ð1, 3Þ ¼ C n ð2, 5Þ ¼ 1. It can be easily verified that the matrix C n so constructed has full row rank. The optimization problem in (10) can now be written as</p><formula>e AðjÞ ¼ arg min e A X N n¼1 ke x n ðjÞ À e SðjÞe a n k 2 such that C n e a n ¼ 0, 8n ¼ 1,. .. , N: ð14Þ</formula><p>The optimization problem is, therefore, separable in terms of columns of e A, and can be equivalently solved by considering one column at a time. This also reduces the computational complexity of estimating the connectivity matrix e A. Henceforth, we will use convex optimization techniques to derive a closed form solution of the separable optimization problem. For the n t h column, we have e a n ðjÞ ¼ arg min e an 1 2 e a T n QðjÞe a n À e w T n ðjÞe a n such that C n e a n ¼ 0, ð15Þ</p><p>where the objective function is re-scaled and terms independent of e a n are neglected. The Lagrangian dual function can be expressed as</p><formula>Lðe a n , Þ ¼ 1 2 e a T n QðjÞe a n À e w T n ðjÞe a n þ T C n e a n :</formula><p>The Karush–Kuhn–Tucker (KKT) conditions can be written as (<ref type="bibr" target="#b0">Boyd and Vandenberghe, 2004</ref>)</p><formula>QðjÞe a n À e w n ðjÞ þ C T n ¼ 0 ð16Þ C n e a n ¼ 0: ð17Þ</formula><p>LEMMA 1. The KKT conditions are necessary and sufficient for the optimization problem (15). PROOF. Since the optimization problem (15) contains linear equality constraints, the KKT conditions are necessary for optimality (<ref type="bibr" target="#b0">Boyd and Vandenberghe, 2004</ref>). Let any e a Ã n be a local minimum. Then, since the KKT conditions are necessary, there exists a Lagrange multiplier Ã such that e a Ã n , Ã À Á is the solution to the system of equations in (16) and (17). Now since the objective function is convex, it follows that e a Ã n is also a global minimum (<ref type="bibr" target="#b0">Boyd and Vandenberghe, 2004</ref>). This implies that the KKT conditions are also sufficient for optimality. Hence, a solution to (15) can be obtained by solving the KKT system of equations. Using (16), it follows that</p><formula>e a n ¼ Q À1 ðjÞ e wðjÞ À C T n À Á , ð18Þ</formula><p>where the matrix QðjÞ is indeed invertible by virtue of the linear independence of the rows of S (NCA criterion 3). Substituting (18) in (17), we have C n Q À1 ðjÞC T n ¼ C n Q À1 ðjÞe wðjÞ: Since the matrix C n has full row rank, the matrix )ðjÞ ¼ Á C n Q À1 ðjÞC T n is invertible. The Lagrange multiplier can, therefore, be expressed as ¼ ) À1 ðjÞC n Q À1 ðjÞe wðjÞ: ð19Þ Upon substituting (19) in (18), the solution e a n in THEOREM 1 readily follows. Therefore, using THEOREM 1, an estimate of e AðjÞ can be efficiently obtained and this approach results in substantial reduction in computation complexity compared with the ALS algorithm. REMARK 2. While the aforementioned closed form solution provides a significant advantage in terms of computational complexity over the ALS algorithm, we note that the solution requires inverting the matrix Q. For large networks, this can potentially be a large matrix, whose inverse incurs computational load, and may lead to inaccuracies as well. In the following discussion, we derive a still faster algorithm, ROBNCA 2, that takes advantage of the special structure of the column vector e a n and provides added savings over the closed form solution derived in THEOREM 1.</p><p>We begin by noting that the rows of e X and e A can always be reordered in (9). Hence, without loss of generality, the vector e a n can be partitioned as</p><formula>e a n ¼ a n 0 LnÂ1 ! , ð20Þ</formula><p>where a n 2 R ðMÀLnÞÂ1 is a vector consisting of the non-zero entries in e a n .</p><formula>Construct an L n Â M matrix U n such that U n ¼ 0 LnÂðMÀLnÞ I Ln Â Ã : ð21Þ</formula><p>With the above definition, the optimization problem (15) can be equivalently represented as e a n ðjÞ ¼ arg min</p><formula>e an 1 2 e a T n QðjÞe a n À e w T n ðjÞe a n such that U n e a n ¼ 0: ð22Þ Define a substitution e a n ¼ V n a n , ð23Þ</formula><p>where the M Â L n matrix V n is constructed such that it lies in the null space of the matrix U n , i.e. U n V n ¼ 0. The matrix V n is, therefore, given by</p><formula>V n ¼ I ðMÀLnÞ 0 LnÂðMÀLnÞ ! : ð24Þ</formula><p>By substituting e a n from</p><p>(23) into (22), and noting that the constraint is always satisfied due to the construction of V n , we have an unconstrained optimization problem in the variable a n given by a n ðjÞ ¼ arg min</p><formula>an 1 2 a T n V T N QðjÞV N a n À e w T n ðjÞV N a n : ð25Þ</formula><p>The solution of the aforementioned unconstrained quadratic optimization problem can be easily obtained as</p><formula>a n ðjÞ ¼ V T n QðjÞV n À Á À1 V T n e w n ðjÞ, ð26Þ</formula><p>where the matrix V T n QðjÞV n is invertible, as V n has full column rank. The symmetric invertible matrix QðjÞ can be partitioned as</p><formula>QðjÞ ¼ Q 11 ðjÞ Q 12 ðjÞ Q 21 ðjÞ Q 22 ðjÞ ! ,</formula><p>where the invertible matrix Q 11 ðjÞ is the upper ðM À L n Þ Â ðM À L n Þ submatrix of QðjÞ. From the structure of V n , the matrix V T n QðjÞV n can be reduced as</p><formula>V T n QðjÞV n ¼ I ðMÀLnÞ 0 ðMÀLnÞÂLn Â Ã Q 11 ðjÞ Q 12 ðjÞ Q 21 ðjÞ Q 22 ðjÞ ! I ðMÀLnÞ 0 LnÂðMÀLnÞ ! ¼ Q 11 ðjÞ: ð27Þ</formula><p>Similarly, by partitioning e w n ðjÞ as</p><formula>e w n ðjÞ ¼ w n ðjÞ b w n ðjÞ ! , it follows that V T n e w n ðjÞ ¼ w n ðjÞ, ð28Þ</formula><p>where w n ðjÞ is the upper ðM À L n Þ Â 1 vector of e w n ðjÞ. Collecting all the terms, the solution a n can now be compactly represented as a n ðjÞ ¼ Q À1 11 ðjÞw n ðjÞ: ð29Þ</p><p>Once all columns e a n ðjÞ are determined, the connectivity matrix AðjÞ can be easily updated. REMARK 3. By comparing the closed form solution derived in (11) with</p><p>(29), it is clear that the latter only requires inverting a submatrix Q 11 ðjÞ of QðjÞ. Since the connectivity matrix is usually sparse and the number of nonzero entries ðM À L n Þ in the n th column is usually very small, inverting the ðM À L n Þ Â ðM À L n Þ matrix Q 11 ðjÞ results in a considerable reduction in computational complexity and ensures a much faster implementation of the iterative algorithm.</p><p>The respective computational times incurred in calculating (11)</p><p>and (29) will be quantified in Section 3 to emphasize the usefulness of deriving (29).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.3">Update of the outlier matrix</head><p>The last step in the iterative algorithm pertains to the estimation of the outlier matrix O by using the values SðjÞ and AðjÞ obtained in the preceding steps. It is straightforward to notice that the optimization problem (3) w.r.t O decouples across the columns and results in K subproblems, each of which being expressed as follows:</p><formula>o k ðjÞ ¼ arg min ok kb k ðjÞ À o k k 2 2 þ 2 ko k k 2 , ð30Þ</formula><p>where b k ðjÞ ¼ y k À AðjÞs k ðjÞ. The solution to (30) is given by (<ref type="bibr" target="#b10">Kekatos and Giannakis, 2011</ref>)</p><formula>o k ðjÞ ¼ b k ðjÞ kb k ðjÞk 2 À 2 2 À Á þ kb k ðjÞk 2 , k ¼ 1,. .. , K ð31Þ</formula><p>where ðgÞ þ ¼ Á maxð0, gÞ. The solution (31) is intuitively satisfying, as it sets the outlier o k ðjÞ to zero whenever kb k ðjÞk 2 fails to exceed the threshold 2 =2, where 2 is the sparsity-controlling parameter. Several approaches have been identified in the literature for selecting 2 , which depend on any a-priori information available about the extent of sparsity (<ref type="bibr" target="#b5">Giannakis et al., 2011</ref>). If the concentration of outliers is unknown, a typical rule of thumb is to take 2 ¼ 0:7 where this value has been determined to provide 95% asymptotic efficiency of the estimator (<ref type="bibr" target="#b10">Kekatos and Giannakis, 2011</ref>). If a rough estimate of the concentration of outliers is available, (30) can be solved for a grid of values and selecting the 2 giving the expected number of outliers, which can be performed efficiently using the GroupLARS algorithm (<ref type="bibr" target="#b20">Yuan and Lin, 2005</ref>). It is noted that the performance of the algorithm is insensitive to minor variations in the value of the parameter. Since the subproblems at each iteration have unique minimizers, and the non-differentiable regularization affects only the outlier matrix O, the convergence of the ROBNCA algorithm is established using the results in (<ref type="bibr" target="#b18">Tseng, 2001</ref>). PROPOSITION 2. As j ! 1, the iterates generated by the ROBNCA algorithm converge to a stationary point of (3). It is important to point out that ROBNCA is significantly different from NI-NCA algorithm. NI-NCA, as the name suggests, is a non-iterative algorithm that uses a subspace-based method for the estimation of the connectivity matrix A using eigen-decomposition and relies on solving a constrained quadratic optimization problem, which has high computational cost. On the other hand, in ROBNCA, we propose two closed form solutions for the estimation of the connectivity matrix A, which result in considerable reduction in computational complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS AND DISCUSSION</head><p>This section investigates the observed performance of ROBNCA, in comparison with the state-of-the-art algorithms including FastNCA, NI-NCA and ALS in terms of MSE using both synthetic and real data. The efficiency and consistency of ROBNCA in estimating the TFAs under various scenarios is also illustrated. The datasets for all of the experiments as well as the MATLAB implementation of FastNCA and NI-NCA are downloaded from http://www.seas.ucla.edu/liaoj/download.htm and http:// www.ece.ucdavis.edu/jacklin/NCA, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Synthetic and haemoglobin test data</head><p>First, to evaluate the performance of various algorithms, test data from (<ref type="bibr" target="#b13">Liao et al., 2003</ref>) is used. The spectroscopy data consist of M ¼ 7 haemoglobin solutions formed by mixing up N ¼ 3 pure haemoglobin components. The connectivity matrix in this case represents the concentration and presence or absence of each component in the mixture. In addition, the structure of this matrix is validated to comply with the NCA criteria. The absorbance spectra are taken for wavelengths in the range of 380–700 nm, with 1 nm increments to get K ¼ 7 observation points, which is defined as Abs ¼ C (<ref type="bibr" target="#b13">Liao et al., 2003</ref>), where the rows of Abs give the absorbance spectra for the range of wavelengths, C denotes the connectivity matrix and gives the spectra of the pure components. The importance of using these data is that this experiment mimics the gene regulatory network very closely and contains all of its key properties. The knowledge of the pure spectra helps us to effectively evaluate the performance of various NCA algorithms. In addition, using the data from (<ref type="bibr" target="#b13">Liao et al., 2003</ref>) and (<ref type="bibr" target="#b6">Jacklin et al., 2012</ref>) ensures a fair comparison. The proposed algorithm is tested against varying noise for two important scenarios: (i) when the source signals are correlated, and (ii) the observed data are corrupted with outliers. Using the same connectivity matrix, source signals were generated which had low, moderate and high correlation (<ref type="bibr" target="#b6">Jacklin et al., 2012</ref>). The outliers are artificially added to the data by modelling them as a Bernoulli process. The success probability indicates the concentration of outliers present and is assumed to be the same for all the genes. Since only a few points are expected to be corrupted in the real data, the outliers are assumed to be sparse and therefore the success probability of presence of outliers is kept small. The performance of ROBNCA, FastNCA and NINCA is evaluated in the aforementioned scenarios. ROBNCA algorithm is implemented in MATLAB. Since the observed data matrix Y is expected to contain outlying points, the algorithms are assessed by computing the MSE incurred in estimating the matrices A and S, instead of fitting error for Y. The comparison with ALS is omitted here because it takes much longer to run as will be shown in the next subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Impact of correlation</head><p>The algorithms are first tested for low and highly correlated source signals by varying the signal-tonoise ratio (SNR). The noise is modelled as Gaussian in all the experiments. The results are averaged over 100 iterations and are depicted in<ref type="figure" target="#fig_1">Figure 1</ref>. It is observed that the presence of a small amount of outliers makes the estimation using FastNCA unreliable and inconsistent for both low and highly correlated signals. On the other hand, NI-NCA is able to estimate S better than FastNCA, and the estimation of A is quite accurate and consistent as well. It can be observed that the overall estimation performance for A is much better and more consistent than that of S. The reason for this could be attributed to the availability of some prior information for the former. Since ROBNCA takes into account the presence of outliers in the observed data, it outperforms the other two algorithms for estimating both A and S and its consistent performance should be contrasted with the unboundedness and unpredictability exhibited by the other two algorithms. In general, the performance of all the algorithms improves with the increase in SNR and degrades with the increase in correlation of the source signals.</p><formula>(a) (b)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Impact of outliers As</head><p>noted earlier, the presence of outliers can severely affect the performance of algorithms. It is therefore, important to investigate the impact of the presence of outlying points in the observation matrix Y. Comparison performed for low and high concentration of outliers is depicted in<ref type="figure" target="#fig_3">Figure 2</ref>. It is observed from<ref type="figure" target="#fig_3">Figure 2a</ref>that in the case of low concentration of outliers, NI-NCA provides good accuracy for A and estimates it quite consistently. The estimation of S gives a small MSE as well and generally performs consistently. FastNCA, however, is not able to estimate both the matrices even for high SNRs. This indicates its high vulnerability to the presence of even a small number of outliers. In case of a higher concentration of outliers, the performance of NI-NCA degrades a little bit as depicted in<ref type="figure" target="#fig_3">Figure 2b</ref>. It is observed that ROBNCA is able to estimate the two matrices for both low and high outliers, and outperforms the other two algorithms. The estimation of O matrix is shown in the Supplementary Material where<ref type="figure" target="#fig_1">Figure 1</ref>depicts the outliers present in the synthetic data and their estimates using ROBNCA algorithm. It is noted that ROBNCA is able to identify the outliers very well.<ref type="figure" target="#fig_3">Figure 2</ref>shows the recovered signal AS after subtracting the outlier matrix O from the data matrix X. It can be observed that the recovered signal is a good match with the original signal. These experiments indicate that ROBNCA solves the estimation problem with much more accuracy than NI-NCA and FastNCA. It is important to emphasize here that the MSE for NI-NCA is always higher than ROBNCA and its computational complexity is many times greater than the latter, which can prove to be a bottle-neck in case of large datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Results for real data</head><p>We now turn our attention to the comparison of these algorithms on real data. Two datasets are considered for this purpose, which are the Saccharomyces cerevisiae cell cycle data (<ref type="bibr" target="#b12">Lee et al., 2002</ref>) and E.coli data (<ref type="bibr" target="#b9">Kao et al., 2004</ref>). The transcription factor activities are estimated for the TFs of interest in each experiment, and the results are compared for different algorithms. In addition, the variability of the estimates is evaluated using the subnetwork analysis (<ref type="bibr" target="#b19">Yang et al., 2005</ref>) which will be explained in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">S.cerevisiae cell cycle data</head><p>The algorithms discussed in this article are applied to the yeast cell cycle data from (<ref type="bibr" target="#b12">Lee et al., 2002</ref>) and (<ref type="bibr" target="#b15">Spellman et al., 1998</ref>). To assess the performance and variability of the various NCA algorithms, subnetwork analysis is performed, which has also been used previously in (<ref type="bibr" target="#b1">Chang et al., 2008</ref>), (<ref type="bibr" target="#b19">Yang et al., 2005</ref>) and (<ref type="bibr" target="#b6">Jacklin et al., 2012</ref>). The core idea behind this analysis is to divide the set of transcription factors into a number of smaller subsets, which are not mutually disjoint, where the intersection of these subsets contains the TFs of interest. The subnetworks were constructed to satisfy the gNCA criteria (<ref type="bibr" target="#b16">Tran et al., 2005</ref>), which requires that the number of TFAs M should be less than the number of sample points K. These sub-networks are used to estimate the transcription factor activities independent of each other. These TFA estimates are then compared and a smaller disagreement between these estimates is a measure of consistency of the algorithm. This indicates that the results obtained are reliable despite of the presence or absence of certain genes or TFs from the experiment. The disagreement can be quantified</p><formula>as: disagreementðiÞ ¼ 1 K P i max n s n, i ðkÞ À min n s n, i ðkÞ h i where s</formula><p>indicates the rows of matrix S, i is the TF index and n is the subnetwork index. The Yeast cell cycle dataset consists of results from three different synchronization experiments. The first experiment is the synchronization by elutriation, which is composed of one cell cycle from 0 to 390 min. The data consist of 14 points sampled at 30-min intervals. The second experiment performs the synchronization by À factor arrest and contains two cell cycles from 0 to 119 min. A total of 18 samples are taken every 7 min. The synchronization in the third set is the result of cdc15 temperature sensitive mutant with samples taken every 20 min from 0 to 300 min. The data from the three experiments are concatenated to form one large dataset. The Yeast cell cycle study has 11 TFs of interest (<ref type="bibr" target="#b1">Chang et al., 2008</ref>), which are Ace2, Fkh1, Fkh2, Mbp1, Mcm1, Ndd1, Skn7, Stb1, Swi4, Swi5 and Swi6. This section compares the performance of the NCA algorithms for these TFs and the related genes. The subnetwork analysis is carried out by dividing the original network into four subnetworks each consisting of 40 TFs and the number of genes varies from 921 to 1247. The aforementioned 11 TFs are included in each of the subsets. The structure of A isfor different algorithms and different datasets with (a) level of outliers ¼ 0.01 and (b) level of outliers ¼ 0.1 against varying SNR (dB) for a highly correlated dataset verified to satisfy the NCA criterion (2) for all of the subnetworks. The reconstruction of the 11 TFAs, which is the average of the four subnetworks, using ROBNCA, FastNCA and NINCA is depicted in<ref type="figure" target="#fig_4">Figure 3</ref>. The TFA estimation using ALS algorithm is skipped here because the algorithm takes very long to run for this large dataset. The results for the three experiments are shown separately in the three columns. The TFAs for these experiments are expected to have a periodic behavior with one, two and three cycles in elutriation, À factor and cdc-15, respectively, which can easily be corroborated from the figure. The results from ROBNCA differ from FastNCA in some of the instances. On the other hand, NI-NCA provides very similar estimates to that of ROBNCA. It can be inferred that the results of these two algorithms are more reliable as compared with FastNCA because the former reveal the periodic behavior in almost all of the TFs. We now look to investigate the consistency of the algorithms. The disagreement between the TFA estimates of the four subnetworks is calculated and the results are shown in<ref type="figure" target="#fig_5">Figure 4a</ref>. Out of the three algorithms considered, ROBNCA incurs the smallest disagreement. The performance of NI-NCA is somewhat comparable; however, FastNCA shows a high degree of inconsistency. The simulations for standard deviation for TFAs are presented in the Supplementary Material for ROBNCA, NI-NCA and FastNCA. It is noted from Supplementary Figures S5–S7 in the Supplementary section that ROBNCA yields the lowest variation whereas FastNCA shows much higher variation in the TFA estimates than both the other algorithms. It can therefore be concluded that ROBNCA outperforms NI-NCA both in terms of estimating the TFAs as well as in terms of consistency for Yeast cell cycle data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">E.coli data</head><p>The performance of NCA algorithms is now tested for E.coli data. This dataset contains the gene expression profiles obtained during transition of the sole carbon source from glucose to acetate (<ref type="bibr" target="#b9">Kao et al., 2004</ref>). Out of 296 genes found to be of relevance during the carbon source transition, 100 genes were separated so that the resulting network satisfies the NCA criteria. A total of 16 TFs were identified to be related to this experiment, which are ArcA, CRP, CysB, FadR, FruR, GatR, IcIR, LeuO, Lrp, Narl, PhoB, PurR, RpoE, RpoS, TrpR and TyrR. We perform subnetwork analysis to this data to estimate the transcription factor activities for the 16 TFs of interest. The downloaded network is divided into four subnetworks containing 81, 82, 85 and 88 genes, respectively. The number of TFs in each subnetwork is fixed to 20, where the aforementioned 16 TFs are included in all of them. The samples are taken at 5, 15, 30 and 60 min and then every hour until 6 h. Multiple samples are taken at these instances, which make a total of 25 time points. The advantage of using this data is that the ALS algorithm can be added to the performance evaluation because of its smaller subnetworks. ALS is known to have prohibitive computational complexity (<ref type="bibr" target="#b6">Jacklin et al., 2012</ref>) and is included here only for the comparison of estimation accuracy. The reconstruction of TFAs is performed using the four algorithms, and the average of the TFA estimates from four subnetworks is depicted in<ref type="figure" target="#fig_6">Figure 5</ref>. The results from ROBNCA, NI-NCA and ALS are in agreement for almost all of the TFAs. In addition, these estimates are also similar to those found in (<ref type="bibr" target="#b9">Kao et al., 2004</ref>) except for a few TFAs. The reason for this small dissimilarity could be that, in this article, the estimates are obtained using the subnetworks whereas (<ref type="bibr" target="#b9">Kao et al., 2004</ref>) use the complete network of 100 genes. For 5 out of the 16 TFs, namely GatR, Lrp, NarL, TrpR and TyrR, FastNCA is not able to recover the TFAs. Moreover, the TFAs predicted by ROBNCA are similar to those predicted by ALS, which is the original solution as shown in<ref type="figure" target="#fig_6">Figure 5</ref>. It can therefore be inferred that ROBNCA estimates the TFAs more accurately than FastNCA. The consistency of the algorithms is assessed for this experiment as well and the respective disagreement for each of the four algorithms is shown in<ref type="figure" target="#fig_5">Figure 4b</ref>. FastNCA is again seen to incur the maximum disagreement. NI-NCA and ALS perform better than FastNCA; however, ROBNCA gives the least disagreement for the four estimates of TFAs and performs the most consistently out of all the algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Computational complexity comparison</head><p>An important feature of all gene network reconstruction algorithms is the computational complexity incurred in their implementation. The computational complexity of estimating A in (29) at a particular iteration is approximately Oðwhere ðM À L n Þ is the number of non-zero unknowns in the n th column, which is usually small. We now compare the computational complexity of the four algorithms using the subnetwork data from Yeast and E.coli. Average runtime calculated in seconds is summarized for four subnetworks of each data in<ref type="figure">Table 1</ref>. These experiments were performed on a Windows 7 system with a 1.90 GHz Intel Core i7 processor on a Matlab 7.10.0. It is noted that the run time of ROBNCA is comparable with that of FastNCA and is hundreds of times faster than NINCA algorithms for both of its implementations, i.e. involving linear programming and quadratic programming. Moreover, the run time for ROBNCA is far superior to that of the ALS, a direct consequence of the closed form solution derived for estimating the connectivity matrix. It can also be observed that the faster closed form solution for estimating A (29) provides additional savings over its predecessor (11). Therefore, it can be inferred from these experiments on synthetic and real datasets that ROBNCA renders superior performance than the contemporary algorithms not only on the yardsticks of accuracy and reliability, but also in terms of computational complexity. The high computational complexity of NI-NCA far outweighs the benefits it offers in terms of consistency. FastNCA has the smallest run time out of all the algorithms but has poor reliability and is the least robust to the presence of outliers in the data.</p><formula>P N n¼1 M À L n ð Þ 3 þ M À L n ð Þ 2 Þ,</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>The next step in the iterative algorithm is to solve the optimization problem (3) w.r.t the matrix A, while fixing the values of the parameters S and O to SðjÞ and Oðj À 1Þ, respectively. The resulting optimization problem can be written as AðjÞ ¼ arg min A kXðjÞ À ASðjÞk 2 F such that AðIÞ ¼ 0 ð8Þ REMARK 1. The optimization problem (8) was also considered in the original work on NCA by</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Impact of correlation: Normalized mean square error (NMSE) (dB) for different algorithms and different datasets with (a) low correlated TFAs and (b) highly correlated TFAs against varying SNR (dB), with the level of outliers ¼ 0.05</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.2.</head><figDesc>Fig. 2. Impact of outliers: Normalized mean square error (NMSE) (dB) for different algorithms and different datasets with (a) level of outliers ¼ 0.01 and (b) level of outliers ¼ 0.1 against varying SNR (dB) for a highly correlated dataset</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.3.</head><figDesc>Fig. 3. TFAs reconstruction: Estimation of 11 TFAs (9 shown) of cell cycle-regulated yeast TFs. Average values of the TFs are shown for the four subnetworks. The results of ROBNCA (black), FastNCA (red) and NI-NCA (blue) are given</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.4.</head><figDesc>Fig. 4. Average disagreement for different algorithms across the subsets for TFAs. X-axis indicates the TFA index. Consistency comparison for (a) S.cerevisiae data and (b) E.coli data</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.5.</head><figDesc>Fig. 5. TFAs reconstruction: Estimation of 16 TFAs of E.coli. Average values of TFs are shown. The results of ROBNCA (black), FastNCA (red), NI-NCA (blue) and ALS (green) are given</figDesc></figure>

			<note place="foot">ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">ROBNCA at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">A.Noor et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="4"> CONCLUSION In this work, we present ROBNCA, an algorithm for robust network component analysis for estimating the TFAs. The ROBNCA algorithm accounts for the presence of outliers by modelling them as an additional sparse matrix. A closed form solution available at each step of the iterative ROBNCA algorithm ensures faster and reliable performance. The performance of the proposed ROBNCA algorithm is compared with NI-NCA and FastNCA for synthetic as well real datasets by varying SNR, degrees of correlation and outlier concentration. It is observed that while FastNCA is computationally simpler, yet the TFA recovery is inaccurate and unreliable, a direct consequence of the sensitivity of its decomposition approach to the presence of outliers. The NI-NCA algorithm offers performance somewhat comparable with the ROBNCA algorithm; however, the ROBNCA algorithm is much more computationally efficient and does not require solving costly optimization problems. Therefore, the cumulative benefits of robustness to the presence of outliers, higher consistency and accuracy compared with the existing state-of-the-art algorithms, and much lower computational complexity make ROBNCA well-suited to the analysis of gene regulatory networks, which invariably requires working with large datasets. Funding: US National Science Foundation (NSF) grant [0915444] and QNRF-NPRP grant [09-874-3-235]. Conflict of Interest: none declared.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<monogr>
		<title level="m" type="main">Convex Optimization</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Boyd</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Vandenberghe</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast network component analysis (FastNCA) for gene regulatory network reconstruction from microarray data</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Chang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="1349" to="1358" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<monogr>
		<title level="m" type="main">Independent component analysis. Higher-Order Statistics</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Comon</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="29" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Robust graphical modeling of gene networks using classical and alternative t-distributions</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Finegold</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Drton</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Appl.Stat</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1057" to="1080" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Transcriptome network component analysis with limited microarray data</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">J</forename>
				<surname>Galbraith</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1886" to="1894" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">USPACOR: Universal sparsity-controlling outlier rejection</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Giannakis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Acoustics, Speech and Signal Processing (ICASSP), 2011 IEEE International Conference</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1952" to="1955" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Noniterative convex optimization methods for network component analysis</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Jacklin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1472" to="1481" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Bayesian multiple-instance motif discovery with bambi: inference of recombinase and transcription factor binding sites</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">H</forename>
				<surname>Jajamovich</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page">146</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">Principal Component Analysis</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Jolliffe</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page">487</biblScope>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Transcriptome-based determination of multiple transcription regulator activities in escherichia coli by using network component analysis</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">C</forename>
				<surname>Kao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl. Acad. Sci. USA</title>
		<meeting>. Natl. Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="641" to="646" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">From sparse signals to sparse residuals for robust sensing</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Kekatos</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">B</forename>
				<surname>Giannakis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Signal. Process</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="3355" to="3368" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Probabilistic inference of transcription factor binding from multiple data sources</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>La¨hdesma¨kila¨hdesma¨la¨hdesma¨ki</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">1820</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">I</forename>
				<surname>Lee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Transcriptional regulatory networks in saccharomyces cerevisiae</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page">799</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Network component analysis: reconstruction of regulatory signals in biological systems</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Liao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl. Acad. Sci. USA</title>
		<meeting>. Natl. Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="15522" to="15527" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Robust PCA as bilinear decomposition with outlier-sparsity regularization</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Mateos</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">B</forename>
				<surname>Giannakis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Signal Process</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="5176" to="5190" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Comprehensive identification of cell cycle–regulated genes of the yeast Saccharomyces cerevisiae by microarray hybridization</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">T</forename>
				<surname>Spellman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biol. Cell</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="3273" to="3297" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">gNCA: a framework for determining transcription factor activity based on transcriptome: identifiability and numerical implementation</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Tran</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Metab. Eng</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="128" to="141" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Just relax: convex programming methods for identifying sparse signals in noise</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">A</forename>
				<surname>Tropp</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inf. Theory</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="1030" to="1051" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Convergence of a block coordinate descent method for nondifferentiable minimization</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Tseng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Optim. Theory Appl</title>
		<imprint>
			<biblScope unit="volume">109</biblScope>
			<biblScope unit="page" from="475" to="494" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Inferring yeast cell cycle regulators and interactions using transcription factor activities</title>
		<author>
			<persName>
				<forename type="first">Y.-L</forename>
				<surname>Yang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Genomics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">90</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Model selection and estimation in regression with grouped variables</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Yuan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Lin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. R. Stat. Soc. Series B Stat. Methodol</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="49" to="67" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>