
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:42+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Sequence analysis Improvements on bicriteria pairwise sequence alignment: algorithms and applications</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Maryam</forename>
								<surname>Abbasi</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Informatics Engineering</orgName>
								<orgName type="institution" key="instit1">CISUC</orgName>
								<orgName type="institution" key="instit2">University of Coimbra</orgName>
								<address>
									<addrLine>Pó lo II</addrLine>
									<postCode>3030-290</postCode>
									<settlement>Coimbra</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Luís</forename>
								<surname>Paquete</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Informatics Engineering</orgName>
								<orgName type="institution" key="instit1">CISUC</orgName>
								<orgName type="institution" key="instit2">University of Coimbra</orgName>
								<address>
									<addrLine>Pó lo II</addrLine>
									<postCode>3030-290</postCode>
									<settlement>Coimbra</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Arnaud</forename>
								<surname>Liefooghe</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="laboratory" key="lab1">LIFL</orgName>
								<orgName type="laboratory" key="lab2">UMR CNRS 8022</orgName>
								<orgName type="institution">Université Lille 1</orgName>
								<address>
									<addrLine>Bâ t. M3, 59655 Villeneuve d&apos;Ascq</addrLine>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Miguel</forename>
								<surname>Pinheiro</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Bioinformatics Unit</orgName>
								<address>
									<postCode>3060-197</postCode>
									<settlement>Biocant, Cantanhede</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Pedro</forename>
								<surname>Matias</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Informatics Engineering</orgName>
								<orgName type="institution" key="instit1">CISUC</orgName>
								<orgName type="institution" key="instit2">University of Coimbra</orgName>
								<address>
									<addrLine>Pó lo II</addrLine>
									<postCode>3030-290</postCode>
									<settlement>Coimbra</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Sequence analysis Improvements on bicriteria pairwise sequence alignment: algorithms and applications</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">8</biblScope>
							<biblScope unit="page" from="996" to="1003"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt098</idno>
					<note type="submission">Received on October 15, 2012; revised on January 31, 2013; accepted on February 20, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Martin Bishop for download at URL http://eden.dei.uc.pt/$paquete/MOSAL, imple-mented in C and supported on Linux, MAC OS and MS Windows. Contact: paquete@dei.uc.pt</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: In this article, we consider the bicriteria pairwise sequence alignment problem and propose extensions of dynamic programming algorithms for several problem variants with a novel pruning technique that efficiently reduces the number of states to be processed. Moreover, we present a method for the construction of phylo-genetic trees based on this bicriteria framework. Two exemplary cases are discussed. Results: Numerical results on a real dataset show that this approach is very fast in practice. The pruning technique saves up to 90% in memory usage and 80% in CPU time. Based on this method, phylo-genetic trees are constructed from real-life data. In addition of providing complementary information, some of these trees match those obtained by the Maximum Likelihood method. Availability and implementation: Source code is freely available</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Recently, there has been a growing interest on the multi-criteria formulation of optimization problems that arise in computational biology (see an extensive review in<ref type="bibr" target="#b9">Handl et al., 2007</ref>). However, exact solution approaches for most of these new formulations have not been thoroughly investigated, with the exception of the work of<ref type="bibr" target="#b14">Roytberg et al. (1999)</ref>for bicriteria pairwise sequence alignment. For an alignment ' of sequences A :¼ ða 1 ,. .. , a n1 Þ and B :¼ ðb 1 ,. .. , b n2 Þ, we denote by sð'Þ the substitution score of alignment ' according to a substitution matrix M, and by dð'Þ and gð'Þ, the number of indels and gaps (maximal consecutive run of indels) of '. The two following score vector functions are considered: VSDð'Þ :¼ sð'Þ, À dð'Þ ð Þ VSGð'Þ :¼ sð'Þ, À gð'Þ ð Þ Two bicriteria problems that consist of finding the alignments that are 'maximal' with respect to the score vector functions above are as follows:</p><formula>arg vmax ' : VSDð'Þ, ' 2 È È É ðVSDPÞ arg vmax ' : VSGð'Þ, ' 2 È È É ðVSGPÞ</formula><p>where È denotes the set of all feasible alignments. The image of set È in the score function space is called feasible score set. To give a proper meaning to the operator vmax, we introduce the following dominance relation between score vectors in Problem (VSDP): Given two alignments ' and ' 0 , VSDð'Þ4VSDð' 0 Þ (' dominates ' 0 ) if and only if it holds that sð'Þ ! sð' 0 Þ, dð'Þ dð' 0 Þ and VSDð'Þ 6 ¼ VSDð' 0 Þ. An alignment ' is Pareto optimal if there exists no other alignment ' Ã such that VSDð' Ã Þ4VSDð'Þ. The set of all Pareto optimal alignments is called Pareto optimal alignment set. The image of a Pareto optimal alignment in the score function space is a non-dominated score, and the set of all non-dominated scores is called non-dominated score set. The dominance relation and the above notation also apply to Problem (VSGP) with the necessary changes. Computing the Pareto optimal alignment set can be an intractable task: consider the sequences A :¼ G n and B :¼ TðGTÞ 2n and the substitution matrix M½i, i :¼ 1 and M½i, j :¼ 0, i 6 ¼ j; then, there exist 2n n</p><p>Pareto optimal alignments that match G n in both sequences, as there exists no other alignment with larger substitution score and lesser number of indels (3n þ 1 indels). The aforementioned example also applies to the number of gaps (n þ 1 gaps). However, the size of the non-dominated score set is bounded by minð', n 1 þ n 2 À 2'Þ, where ' is the size of longest common subsequence of A and B (<ref type="bibr" target="#b14">Roytberg et al., 1999</ref>). Interesting properties of this formulation in relation to parametric sequence alignment (see<ref type="bibr" target="#b7">Gusfield et al., 1992</ref>) are discussed in<ref type="bibr" target="#b14">Roytberg et al., 1999</ref>: an optimal alignment for the parametric score function with positive parameters is a Pareto optimal alignment. However, there may exist Pareto optimal alignments that are not optimal for any parameter setting. These alignments, and corresponding scores, are called supported and non-supported, respectively (<ref type="bibr" target="#b5">Ehrgott, 2005</ref>). From a geometrical point of view, supported scores are those that lie in the convex-hull boundary of the non-dominated score set. *To whom correspondence should be addressed. Furthermore, it is common to distinguish between extreme and non-extreme supported scores (<ref type="bibr" target="#b5">Ehrgott, 2005</ref>). A score is extreme supported if it is a vertex of the convex hull boundary of the feasible score set; otherwise it is a non-extreme supported score. Although it is relatively easy to find all extreme supported scores (<ref type="bibr" target="#b7">Gusfield et al., 1992</ref>), it is more challenging to find all those that are non-extreme. Finding the whole non-dominated score set would allow identifying both extreme and non-extreme supported non-dominated scores, as well as non-supported nondominated scores. Therefore, multicriteria sequence alignment brings advantages to the practitioner, as it allows to get rid of parameters and to explore a tractable set of alignments that are not reachable by any other methods. However, to the best of our knowledge, few work has been done on multi-criteria sequence alignment (<ref type="bibr" target="#b12">Paquete and Almeida, 2009;</ref><ref type="bibr" target="#b14">Roytberg et al., 1999;</ref><ref type="bibr" target="#b19">Taneda, 2010</ref>). In this article, we propose extensions of dynamic programming algorithms for several bicriteria problem variants with a pruning technique that is based on the comparison of lower and upper bounds, as performed in branch-and-bound procedures. Moreover, we describe an experimental analysis on a real dataset and discuss the use of bicriteria pairwise sequence alignment in the context of phylogenetic tree construction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">ALGORITHMS</head><p>In the following sections, we describe dynamic programming techniques for solving several formulations of the bicriteria pairwise sequence alignment as well as a novel pruning technique that reduces the number of states in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Multicriteria dynamic programming</head><p>For the sake of clarity, we introduce the dynamic programming algorithm for Problem (VSDP) as proposed in<ref type="bibr" target="#b14">Roytberg et al. (1999)</ref>but with a different formulation. For a given alignment ', we define a state p :¼ VSDð'Þ. To compute the non-dominated scores, a matrix P is constructed where each entry P½i, j, for ði, jÞ 2 f1,. .. , n 1 g Â f1,. .. , n 2 g, will store the set of states corresponding to the Pareto optimal alignments of subsequences ða 1 ,. .. , a i Þ and ðb 1 ,. .. , b j Þ. The recurrence for P½i, j is as follows:</p><p>P½i, j :¼ vmax p þ ðði, jÞ, 0Þ : p 2 P½i À 1, j À 1 È É p þ ð0, À 1Þ : p 2 P½i À 1, j È É p þ ð0, À 1Þ : p 2 P½i, j À 1</p><formula>È É 8 &gt; &lt; &gt; :</formula><p>where ði, jÞ is the substitution score for ða i , b j Þ. The bases cases are P½0, 0 :¼ fð0, 0Þg, P½i, 0 :¼ fð0, À iÞg, P½0, j :¼ fð0, À jÞg, for 1 i n 1 and 1 j n 2. Operator vmax keeps only the non-dominated states at entry P½i, j.<ref type="bibr" target="#b14">Roytberg et al. (1999)</ref>suggested the use of a log-linear algorithm for this operation. However, this can be performed in linear time by extending the MERGE algorithm in Beier and Vo¨ckingVo¨cking (2011) for three sorted lists of non-dominated scores. The overall time and space-complexity of the algorithm above is Oðn 1 Á n 2 Á ðn 1 þ n 2 ÞÞ. The dynamic programming algorithm for Problem (VSGP) is briefly discussed in<ref type="bibr" target="#b14">Roytberg et al. (1999)</ref>. We give a more detailed explanation of this approach, which extends the algorithm in Gusfield (1997, pp. 244). For a given alignment ' :¼ ðA 0 , B 0 Þ, we define a state q :¼ VSGð'Þ. For computing the set of non-dominated scores, we keep four dynamic programming matrices: Q, R, S and T. For a given ði, jÞ 2 f1,. .. , n 1 g Â f1,. .. , n 2 g, entry R½i, j, S½i, j and T½i, j will store the set of states corresponding to Pareto optimal alignments of subsequences ða 1 ,. .. , a i Þ and ðb 1 ,. .. , b j Þ that end with ða i , b j Þ, ð 0 À 0 , b j Þ and ða i , 0 À 0 Þ, respectively, where 0 À 0 is a gap character. The entry Q½i, j will store the states corresponding to Pareto optimal alignments of subsequences ða 1 ,. .. , a i Þ and ðb 1 ,. .. , b j Þ. Then, the recursion is as follows:</p><p>Q½i, j :¼ vmax</p><p>R½i, j S½i, j T½i, j 8 &lt; :</p><p>R½i, j :¼ q þ ðði, jÞ, 0Þ : q 2 Q½i À 1, j À 1 È É S½i, j :¼ vmax S½i, j À 1 q þ ð0, À 1Þ :</p><formula>q 2 Q½i, j À 1 È É &amp; T½i, j :¼ vmax T½i À 1, j q þ ð0, À 1Þ : q 2 Q½i À 1, j È É &amp;</formula><p>The base cases of the matrices are as follows: Q½0, 0 :¼ fð0, 0Þg, Q½i, 0 :¼ S½i, 0 :¼ Q½0, j :¼ T½0, j :¼ fð0, À 1Þg, for 1 i n 1 and 1 j n 2. Operation vmax takes also linear amount of time by using the same technique as for Problem (VSDP). As the number of gaps is bounded from above by the number of indels in an alignment, the time and space-complexity is also Oðn 1 Á n 2 Á ðn 1 þ n 2 ÞÞ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Bounds in problem (VSDP)</head><p>We describe a pruning technique for the dynamic programming algorithm for Problem (VSDP) that is able to reduce the number of states by comparing their upper bounds with a pre-computed lower bound set. Upper and lower bounds have also been used within scalarized score functions (<ref type="bibr" target="#b13">Roytberg, 1992</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Lower bound set</head><p>For the definition of lower bounds on the non-dominated score set for Problem (VSDP), we introduce the notions of lexicographic and scalarized score functions. We say that a vector x 2 R 2 is lexicographically larger than or equal to a vector y 2 R 2 ðx4 lex yÞ if x 1 4y 1 or if x 1 ¼ y 1 and x 2 ! y 2. In this article, we consider two problems that consist of finding an alignment that is lexicographic maximal (lexmax) according to a given order of priority on the optimization of the two score function components:</p><formula>arg lexmax ' : sð'Þ, Àdð'Þ ð Þ , ' 2 È È É ðLexSDPÞ arg lexmax ' : Àdð'Þ, sð'Þ ð Þ , ' 2 È È É ðLexDSPÞ</formula><p>The order of the function components indicates the priority that is considered among the criteria. Let ' s and ' d be the lexicographic maximal alignments for Problems (LexSDP) and (LexDSP), respectively. Let MAX :¼ VSDð' s Þ and MIN :¼ VSDð' d Þ. By the definition of optimality for Problem (VSDP), it holds that MAX and MIN belong to the non-dominated score set (<ref type="bibr" target="#b5">Ehrgott, 2005</ref>). Moreover, they indicate that there cannot exist a Pareto optimal alignment with larger (smaller) substitution score value and more (less) indels than given by the components of MAX (MIN). Hence, the two score vectors give a bound on the possible ranges of the non-dominated score set. In fact, if MAX ¼ MIN, then the non-dominated score set contains only a single element and no further computation is required. Another lower bound is given by the solution to a scalarized version of the bicriteria alignment problem. We consider the weighted sum scalarization approach: WSDð'Þ :¼ w s Á sð'Þ À w d Á dð'Þ where w s and w d are positive real weighting coefficients. The goal is to find the alignment that maximizes the scalarized score function as follows:</p><formula>arg max ' : WSDð'Þ, ' 2 È È É ðWSDPÞ</formula><p>Other scalarized functions are also possible (<ref type="bibr" target="#b5">Ehrgott, 2005</ref>). In the particular case of the weighted sum function, the alignment that is optimal to Problem (WSDP) is also Pareto optimal to Problem (VSDP), although the opposite does not hold in general (<ref type="bibr" target="#b5">Ehrgott, 2005</ref>). Let ' w denote the optimal alignment for Problem (WSDP) for a given w s and w d and let MID :¼ VSDð' w Þ. It is also important to highlight that the scalarized problem can be solved several times for different coefficients to get a tighter lower bound set. The score vectors MAX, MID and MIN allow to define a lower bound set on the non-dominated score set of Problem (VSDP). Let R denote the region R ¼ r 2 R Â R À 0 : b4r, b 2 MAX, MID, MIN f g È É :<ref type="figure" target="#fig_0">Figure 1</ref>illustrates the location of MAX, MID and MIN and definition of R (shaded area). There may exist further Pareto optimal alignments whose score vectors are located in the complement of R. However, any alignment whose score vector is in the interior of R cannot be Pareto optimal, as it would be dominated by an alignment with a score vector equals to MIN, MID or MAX. The computation of the three score vectors can be performed with the algorithm of Needleman and Wunsch (1970) by keeping the components separately in the dynamic programming matrix and choosing the state at each entry that maximizes the scalarized score function WSD, for the case of MID, or according to the lexicographic ordering for the case of MAX and MIN, respectively. Therefore, the three score vectors can be found in Oðn 1 Á n 2 Þ-time. In the following, we only introduce the recurrence relation required for computing the lexicographic maximal alignment for Problem (LexSDP), which gives the score vector MAX. We consider a dynamic programming matrix L, where the entry L½i, j, for ði, jÞ 2 f1,. .. , n 1 g Â f1,. .. , n 2 g, will store the state corresponding to the lexicographic maximal alignment of subsequences ða 1 ,. .. , a i Þ and ðb 1 ,. .. , b j Þ. The elements of matrix L are calculated recursively by L½i, j :¼ lexmax L½i À 1, j À 1 þ ðði, jÞ, 0Þ L½i, j À 1 þ ð0, À 1Þ L½i À 1, j þ ð0, À 1Þ 8 &lt; :</p><p>with basis cases L½0, 0 :¼ ð0, 0Þ, L½i, 0 :¼ ð0, À iÞ and L[0, j]: ¼ ð0, À jÞ, for 1 i n 1 and 1 j n 2. The operator lexmax keeps only the lexicographic maximum of the three states in the recursive step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Upper bound</head><p>The pruning technique proposed in this article follows a branch-and-bound principle. Let t :¼ ðs, À dÞ be a state at entry P½i, j. Let u be the maximum substitution score and v the minimum number of indels that can be achieved from entry P½i, j to entry P½n 1 , n 2 . Then, for either 1 i5n 1 or 1 j5n 2 , we consider the following upper bound for t: ubðtÞ :¼ ðs þ u, À d À vÞ. If ubðtÞ is located in the interior of R, then state t will not lead to any state that corresponds to a score vector of a Pareto optimal alignment and can be discarded from entry P½i, j. The value of u can be computed with the algorithm of<ref type="bibr" target="#b11">Needleman and Wunsch (1970)</ref>with a null indel penalty for the sequences ða iþ1 ,. .. , a n1 Þ and ðb jþ1 ,. .. , b n2 Þ. This can be easily obtained for every entry in matrix P in a pre-processing step. The minimum number of indels v is computed by the absolute difference between the sizes of two subsequences</p><formula>ða i ,. .. , a n1 Þ and ðb j ,. .. , b n2 Þ, i.e. v :¼ ðn 2 À jÞ À ðn 1 À iÞ .</formula><p>Therefore, ubðsÞ :¼ ðs þ u, À d À vÞ is a valid upper bound for state t. This bound may not correspond to a feasible alignment. Matrix L as well as the algorithm of Needleman and Wunsch (1970) can be computed in a pre-processing phase in Oðn 1 Á n 2 Þtime. Hence, the upper bound at each matrix entry can be computed in a constant amount of time during the main phase of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Bounds in problem (VSGP)</head><p>For Problem (VSGP), the computation of lower and upper bounds follow the same reasoning as for Problem (VSDP). In the following, we will only give a brief explanation and highlight the main differences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Lower bound set</head><p>The lexicographic and scalarized problems described in Section 2.2.1 can also be formalized in terms of gaps. In this case, MAX and MIN correspond to the score vectors of the Pareto optimal alignments that maximize the substitution score and minimize the number of gaps, respectively. Also, MID corresponds to the score vector of the Pareto optimalalignment that maximizes a scalarized score function by taking into account the number of gaps (we use w g instead of w d ). Score vectors MAX and MID can be computed in Oðn 1 Á n 2 Þtime by using the algorithm described in<ref type="bibr" target="#b8">Gusfield (1997)</ref>with the necessary changes (see Section 2.2.1). However, score vector MIN can be computed faster. The minimum number of gaps can only be zero or one, the latter case arising when n 1 6 ¼ n 2. Assume w.l.o.g. that n 1 5n 2. Then, the computation of the maximum substitution score that is possible for one gap can be performed by comparing the substitution score for each of the n 1 þ 1 possible locations of a gap. This can be performed in Oðn 1 Þ-time in an incremental manner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Upper bound</head><p>In this problem, the computation of the maximum substitution score that can be achieved in entry Q½n 1 , n 2  by a state t at entry Q½i, j follows the same procedure as explained in Section 2.2.2. For the computation of the minimum number of gaps, we consider a partition of matrix Q into three sections; w.l.o.g., we assume that n 1 5n 2. Let Q D :¼ Q½i À n 2 þ n 1 , i, for n 2 À n 1 i n 2 , which corresponds to the diagonal in Q starting at Q½0, n 2 À n 1  and ending at Q½n 1 , n 2 . Let Q A and Q B denote the entries in matrix Q that are located above and below Q D , respectively. From this partitioning of Q, we can derive the following results for v, the minimum number of gaps, that is achieved at Q½n 1 , n 2  by a state t (we relate state t with a partial alignment ' :¼ ðA 0 , B 0 Þ):</p><p>(i) If state t 2 Q D , then v :¼ 0; (ii) If state t 2 Q A ðQ B ) and alignment ' ends with a gap in A 0 ðB 0 ), then v :¼ 0;</p><p>(iii) If state t 2 Q A ðQ B ) and alignment ' ends with two characters or a gap character in B 0 ðA 0 ), then v :¼ 1.</p><p>Conditions (ii) and (iii) can be determined by keeping an additional variable that stores whether state t was obtained from matrix R, S, or T in the recursion. Therefore, the upper bound for the case of gaps can also be computed in a constant amount of time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Performance of the pruning technique</head><p>We performed an experimental analysis for comparing the performance of the algorithms described in the previous sections, with and without the pruning technique (Prune and NoPrune, respectively) and for both problem variants with substitution matrix PAM250 (<ref type="bibr" target="#b4">Dayhoff et al., 1978</ref>). The implementations were coded in C and compiled with gcc version 4.6.1 with theO3 compiler option, in a computer with 2 processors Intel Xeon 5620, 2.4 GHz, 4 core and 16 GB RAM, with operating system Ubuntu 11.10. Except of the compiler option, no other code optimization technique was used in the experiments. We considered the sequences available from the benchmark BAliBase version 3.0 (<ref type="bibr" target="#b20">Thompson et al., 2005</ref>) reference set 9. The subsets RV911, RV912 and RV913 were chosen, as they are organized into three different groups according to the sequence variability:520%, 20–40% and 40–80% identity, respectively. From the datasets, we extracted the sequences from the following groups: RV911-BOX096 (12 sequences), RV911-BOX115 (7 sequences), RV911-BOX010 (18 sequences), RV912-BOX075 (13 sequences), RV912-BOX258 (16 sequences), RV912-BOX154 (5 sequences), RV913-BOX158 (55 sequences), RV913-BOX222 (7 sequences) and RV913-BOX063 (8 sequences). Our implementations were run on all pairs of sequences of the same group. Preliminary experiments indicated that only three bounds (MAX, MID and MIN) were insufficient for obtaining good performance. For this reason, several weighted sum problems were solved for different weight combinations to obtain a tighter lower bound set: 5, 10, 15 and 20. For each bound w, the weights were varying in the following manner: w s :¼ i, w d :¼ w À i, i 2 f1,. .. , w À 1g. Other experiments that we performed indicated that no improvement in terms of pruning can be obtained for w values larger than 20. In a second set of experiments for Problem (VSGP), we observed that the pruning technique was only being effective for entries Q½i, j, i ! n 1 =2 and j ! n 2 =2. Therefore, to reduce the overall CPU time, we switched off the pruning technique for lower indices. Tables 1 and 2 give the results obtained for both problem variants, where size is the average sequence length, #nd corresponds to the average number of non-dominated states, CPU time gives the average and standard deviation of CPU times in seconds to terminate and %prun gives the percentage of states that were pruned in the Prune(w) version. A bold value indicates the best average CPU time; in case of a tie, the value with the largest pruning percentage was chosen, as it suggests less memory usage. The results show that the Prune version is able to prune frominformation about the reliability of the tree branches. Two datasets are used for illustration purpose, and the resulting trees are compared with those obtained with the well-known technique of Maximum Likelihood (ML).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The bicriteria method</head><p>Given a collection of non-dominated score sets, each one obtained for each pair of sequences, our approach consists of building a phylogenetic tree for each gap/indel value that arises from the union of all non-dominated scores sets. First, for each gap/ indel value found, we collect the set of substitution score values, one for each pair of species under study. The substitution score value from the resulting score vector is normalized between zero and one. Then, the distance between two species for a given gap/ indel value is computed as one minus the normalized substitution score value. In our experiments, we used the resulting distance matrix to build each phylogenetic tree by the Neighbor-Joining method (<ref type="bibr" target="#b15">Saitou and Nei, 2007</ref>) using PHYLIP package (<ref type="bibr" target="#b6">Felsenstein, 1985</ref>). An important aspect of the analysis is to understand how often certain phylogenetic tree topologies exist. A less frequent topology, or tree branch, may indicate a less reliable relation between the corresponding species. Therefore, we count how many times each branch arises in all phylogenetic trees and add the corresponding relative frequency to each branch. This information is analogous to the bootstrap values introduced by<ref type="bibr" target="#b6">Felsenstein (1985)</ref>; instead of the sampling process, we use the non-dominated score sets. In the following, we describe two experiments with real-life data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">First experiment</head><p>The first dataset consists of Candida genes, Candida albicans PAPa, C.albicans PAPalpha, Candida tropicalis PAPalpha, C.tropicalis PAPa and Candida dubliniensis PAPa, as well as the genes Pichia stipitis PAPa, and Saccharomyces cerevisiae PAP.<ref type="bibr">[See Butler et al. (2009)</ref>for a more detailed description of these genes.] For each pair of genes, we computed the nondominated score set with respect to Problem (VSGP) with substitution matrix M½i, i :¼ 1 and M½i, j :¼ À1, i 6 ¼ j; see the complete non-dominated score sets with staircase line representation in<ref type="figure" target="#fig_1">Figure 2</ref>. It is possible to observe that there exists a large number of non-extreme supported score vectors, as indicated by the straight lines, which cannot be found by a parametric sequence alignment (see<ref type="bibr" target="#b17">Steuer, 1986</ref>, Chapter 14). We constructed 567 phylogenetic trees by using our method, but only two different tree topologies were obtained. One of two tree topologies was discarded from the analysis, as it arose only once of the 576 trees.<ref type="figure" target="#fig_2">Figure 3a</ref>shows the remaining treeobtained for a gap value of 283, the median of all gap values found; the value close to each branch indicates the relative frequency of that branch. For comparison, we computed the evolutionary tree using the ML method based on the model from Jukes and Cantor (1969) obtained by MEGA5 (<ref type="bibr" target="#b18">Tamura et al., 2011</ref>); see<ref type="figure" target="#fig_2">Figure 3b</ref>. The bootstrap consensus tree inferred from 1000 replicates (<ref type="bibr" target="#b6">Felsenstein, 1985</ref>) was taken to represent the evolutionary history of the taxonomic analysis. There were a total of 1613 positions in the final dataset with all of them having 590% site coverage removed. The percentage of trees in which the associated taxa clustered together is shown next to the branches. Initial tree(s) for the heuristic search were obtained automatically as follows: when the number of common sites was 5100 or less than one-fourth of the total number of sites, the maximum parsimony method was used; otherwise BIONJ method with MCL distance matrix was used. The tree is drawn to scale, with branch lengths measured in the number of substitutions per site. By comparing both trees, it is possible to infer that they have a similar topology and similar relative branch frequency. This conclusion can also be understood by the regularity of the lines of<ref type="figure" target="#fig_1">Figure 2</ref>. The nearest genes are C.albicans PAPalpha and C.dubliniensis PAPa, which corresponds to the black line in<ref type="figure" target="#fig_1">Figure 2</ref>, with the largest substitution score. In the same figure, the three pink lines allow us to infer the positioning of C. tropicalis PAPalpha with respect to C.albicans PAPalpha and C. dubliniensis PAPa, as well as the branch (C.albicansPAPa, C. dubliniensis PAPa). As expected, P.stipitis PAP and S.cerevisiae PAP are the most distant species, as seen by the green dot-dash line in<ref type="figure" target="#fig_1">Figure 2</ref>. Finally, both phylogenetic trees indicate a lower value for the branch that contains P.stipitis PAP gene. We relate this value to the crossed lines between the pairs formed by P.stipitis PAP and others genes (see blue lines in<ref type="figure" target="#fig_1">Fig. 2</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Second experiment</head><p>The second dataset is a classic example of comparison between primates: Homo sapiens haplogroup J1c3, Homo sapiens neanderthalensis, Gorilla gorilla graueri, Pan troglodytes troglodytes and Pongo abelii species. We performed the same analysis asdescribed in the previous section.<ref type="figure" target="#fig_3">Figure 4</ref>shows the non-dominated score sets with staircase line representation. The figure shows a large number of non-extreme supported score vectors and some intersecting lines. This last point indicates that the relationship between those species, in the context of evolutionary studies, may depend of the score vectors chosen (or the scalarized score function used). We conjecture that the existence of intersections may indicate a less reliable conclusion about the evolutionary relationship. By using our bicriteria method, a total of 144 phylogenetic trees were obtained, which gave rise to two different tree topologies. Plots (a) and (b) of<ref type="figure" target="#fig_4">Figure 5</ref>show the two trees topologies obtained for a gap value of 22 and 54, respectively; these gaps values correspond to the median of all gap values found in the phylogenetic trees with the same topology. The evolutionary tree using the ML method was also computed using the same method described in the previous section. The tree with the highest log likelihood (À1351.1512) is shown in<ref type="figure" target="#fig_4">Figure 5c</ref>. All positions with 560% site coverage were eliminated. That is, 540% alignment gaps, missing data and ambiguous bases were allowed at any position. There were a total of 376 positions in the final dataset. The two trees obtained with our method differ slightly in relationship to the Pan traglodytes traglodytes with the remaining species: in plot (a), this species arose in the top of the branch (Homo sapiens neanderthalensis, Homo sapiens haplogrop J1c3), whereas in plot (b), it arises in a different clade, paired with Gorilla gorilla graueri. The relative branch frequencies suggest that the tree of plot (b) may be more reliable. Interestingly, this is also confirmed by the tree obtained with the ML method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSION</head><p>In this article, a pruning technique is introduced to improve the performance of dynamic programming algorithms for bicriteria pairwise sequence alignment, which uses lower and upper bounds to discard states in early stages of the process. This technique can easily be extended for the case of affine gap by performing the necessary changes in the recurrence relation of matrices S and T(see Section 2.1). They can also be extended for the three criteria case, where the substitution score, the number of indels and the number of gaps are simultaneously considered in the score vector function. In addition, this pruning technique can also be used in multi-criteria multiple sequence alignment, for instance, in the context of progressive alignment with sum-of-pairs score function. In the second part of this article, we showed for the first time a successful link between non-dominated score sets and phylogenetic tree construction. We present a simple method based on our bicriteria framework that allows to construct phylogenetic trees as well as to give information about the reliability of the tree branches. The advantage of this method is that no assumption about a priori knowledge on users preferences is required, therefore, being less unbiased. The two real-life test cases showed that few phylogenetic trees can be obtained and are matched with those obtained with the ML method. Further research is needed to derive theoretical relation between ML estimations and the information provided by the non-dominated score set for tree branch reliability.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Illustration of the lower bound set for problem (VSDP)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.2.</head><figDesc>Fig. 2. Staircase line representation of the non-dominated score sets for the first experiment</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. Phylogenetic trees for the first experiment: Bicriteria model for a gap value of 283 (a) and ML model (b)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.4.</head><figDesc>Fig. 4. Staircase line representation of the non-dominated score sets for the second experiment</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.5.</head><figDesc>Fig. 5. Phylogenetic trees for the second experiment: Bicriteria model for a gap value of 22 (a) and 54 (b) and ML model (c)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><figDesc>Table 2. Experimental results for the pruning technique for problem (VSGP)</figDesc><table>Datasets 
Size 
#nd 
CPU-time (%prun) 

noPrune 
Prune (1) 
Prune (5) 
Prune (10) 
Prune (15) 
Prune (20) 

RV911-BOX115 
750 239</table></figure>

			<note place="foot">ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Bicriteria pairwise sequence alignment at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">M.Abassi et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="31"> to 92% of the states that are generated by the NoPrune version for Problem (VSDP). The improvement in terms of CPU time can go up to 80% in the set RV913-BOX063. However, no improvement can be found for RV912-BOX075 and RV912BOX154, although all versions were extremely fast in those cases ( 0:5 s). For Problem (VSGP), the pruning can reach 83% and CPU time improved up to 60% in RV913-BOX222. In both problems, it is possible to observe that the increase of parameter w does not translate directly into faster CPU time; for instance, in the sets RV911 for Problem (VSGP), the best CPU time was obtained with w ¼ 10, although better pruning percentage was obtained with w ¼ 20ð! 20%). Clearly, the larger the lower bound set, the higher the required time for comparison. Moreover, the pruning seems to be more effective for large levels of residue identity. It is also noteworthy to mention that the number of nondominated states is a small fraction of the average size of the genes. We also observed that both algorithms on Problem (VSGP) take roughly 4–5 times more CPU time than on Problem (VSDP). 3 PHYLOGENETIC TREE CONSTRUCTION Phylogenetic trees are diagrams that illustrate historical relationships among the species. They have a valuable application in evolutionary and population biology [we refer to Schuh and Brower (2009) for more details]. In the context of our bicriteria framework, it is important to understand whether the non-dominated score set can provide further information than that provided by existing methods. In this section, we describe a method for constructing phylogenetic trees from the non-dominated score set and discuss its application for deriving further</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The authors would like to acknowledge the anonymous referees for their valuable comments and suggestions on the paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">0%) 12.8 AE 8.8 (10%) 12.6 AE 8.9 (14%) 12.8 AE 9.1 (18%) 13.1 AE 3.4 (22%) RV912-BOX075 458 139 0</title>
		<imprint>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
	<note>8. AE 0.1 0.8 AE 0.1 (1%) 0.6 AE 0.1 (30%) 0.5 AE 0.1 (46%) 0.5 AE 0.1 (52%) 0.5 AE 0</note>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">Table 1. Experimental results for the pruning technique for problem (VSDP) Datasets Size #nd CPU-time (%prun) noPrune Prune (1) Prune (5) Prune (10) Prune (15) Prune38%) 0.4 AE 0.2 (55%) 0.4 AE 0.2 (60%) 0.4 AE 0.2 (62%) 0.4 AE 0.2 (63%) RV911-BOX010 1134 269 2.1 AE 1.3 1.5 AE 1.2 (31%) 1.4 AE 1.1 (35%)</title>
		<imprint/>
	</monogr>
	<note>1. .3 AE 1.1 (62%) 1.4 AE 1.2 (63%) 1.4 AE 1.2 (65%) RV912-BOX075 457 114 0.1 AE 0.0 0.1 AE 0.0</note>
</biblStruct>

<biblStruct   xml:id="b2">
	<monogr>
		<title level="m" type="main">The knapsack problem. In: Algorithms Unplugged</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Beier</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Vo¨ckingvo¨cking</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="375" to="381" />
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Evolution of pathogenicity and sexual reproduction in eight candida genomes</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Butler</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">459</biblScope>
			<biblScope unit="page" from="657" to="662" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">A model of evolutionary change in proteins</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Dayhoff</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Atlas of Protein Sequence and Structure</title>
		<editor>Dayhoff,M.</editor>
		<meeting><address><addrLine>Washington, D.C.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1978" />
			<biblScope unit="page" from="345" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<monogr>
		<title level="m" type="main">Multicriteria Optimization</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Ehrgott</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Confidence limits on phylogenies: an approach using the bootstrap</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Felsenstein</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evolution</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="783" to="791" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Parametric optimization of sequence alignment</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Gusfield</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third Annual ACM-Siam Symposium on Discrete Algorithms</title>
		<meeting>the Third Annual ACM-Siam Symposium on Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="432" to="439" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Gusfield</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Multiobjective optimization in bioinformatics and computational biology</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Handl</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="279" to="292" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<monogr>
		<title level="m" type="main">Evolution of Protein Molecules</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">H</forename>
				<surname>Jukes</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">R</forename>
				<surname>Cantor</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1969" />
			<publisher>Academy Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">A general method applicable to the search for similarities in the amino acid sequence of two proteins</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">B</forename>
				<surname>Needleman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">D</forename>
				<surname>Wunsch</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="443" to="453" />
			<date type="published" when="1970" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<monogr>
		<title level="m" type="main">Experiments with bicriteria sequence alignment In: Cutting-Edge Research Topics on Multiple Criteria Decision Making</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Paquete</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Almeida</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="45" to="51" />
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Fast algorithm for optimal aligning of symbol sequences</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Roytberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Methods of the Analysis of Biopolymer Sequences. DIMACS Series in Discrete Mathematics and Theoretical Computer Science AMS</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="113" to="127" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Pareto-optimal alignment of biological sequences</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Roytberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biophysics</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="565" to="577" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">The neighbor-joining method: a new method for reconstructing phylogenetic trees</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Saitou</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Nei</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biol. Evol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="406" to="425" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<monogr>
		<title level="m" type="main">Biological Systematics: Principles and Applications</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Schuh</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Brower</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Cornell University Press</publisher>
			<pubPlace>Ithaca, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<monogr>
		<title level="m" type="main">Multiple Criteria Optimization: Theory, Computation, and Application</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">E</forename>
				<surname>Steuer</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<publisher>Wiley &amp; Sons</publisher>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Mega5: molecular evolutionary genetics analysis using maximum likelihood, evolutionary distance, and maximum parsimony methods</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Tamura</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biol. Evol</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="2731" to="2739" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Multi-objective pairwise RNA sequence alignment</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Taneda</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="2383" to="2390" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Balibase 3.0: latest developments of the multiple sequence alignment benchmark</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Thompson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="page" from="61" to="127" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>