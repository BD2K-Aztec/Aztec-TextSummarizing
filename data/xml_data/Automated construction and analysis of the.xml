
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:36+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Automated construction and analysis of the design space for biochemical systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">20 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Rick</forename>
								<forename type="middle">A</forename>
								<surname>Fasani</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Biomedical Engineering</orgName>
								<orgName type="department" key="dep2">Davis</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95616</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Michael</forename>
								<forename type="middle">A</forename>
								<surname>Savageau</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Biomedical Engineering</orgName>
								<orgName type="department" key="dep2">Davis</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95616</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Automated construction and analysis of the design space for biochemical systems</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="page" from="2601" to="2609"/>
							<date type="published" when="2010">20 2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq479</idno>
					<note type="submission">Systems biology Advance Access publication September 7, 2010 Received on June 24, 2010; revised on July 29, 2010; accepted on August 16, 2010</note>
					<note>[11:16 21/9/2010 Bioinformatics-btq479.tex] BIOINFORMATICS ORIGINAL PAPER Associate Editor: Martin Bishop</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Our recent work introduced a generic method to construct the design space of biochemical systems: a representation of the relationships between system parameters, environmental variables and phenotypic behavior. In design space, the qualitatively distinct phenotypes of a biochemical system can be identified, counted, analyzed and compared. Boundaries in design space indicate a transition between phenotypic behaviors and can be used to measure a system&apos;s tolerance to large changes in parameters. Moreover, the relative size and arrangement of such phenotypic regions can suggest or confirm global properties of the system. Results: Our work here demonstrates that the construction and analysis of design space can be automated. We present a formal description of design space and a detailed explanation of its construction. We also extend the notion to include variable kinetic orders. We describe algorithms that automate common steps of design space construction and analysis, introduce new analyses that are made possible by such automation and discuss challenges of implementation and scaling. In the end, we demonstrate the techniques using software we have created. Availability: The Design Space Toolbox for MATLAB is freely available at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>We are awash in a sea of genomic data. Since DNA sequencing was first introduced (<ref type="bibr" target="#b17">Sanger et al., 1977</ref>), we have witnessed the sequencing of the entire human genome (<ref type="bibr" target="#b11">Lander et al., 2001;</ref><ref type="bibr" target="#b30">Venter et al., 2001</ref>) and over one thousand prokaryotic genomes (NCBI). Thanks to next-generation sequencing technologies (<ref type="bibr" target="#b13">Metzker, 2010;</ref><ref type="bibr" target="#b28">Shendure and Ji, 2008</ref>), expectations have grown and audacious efforts are underway to sequence one thousand individual human genomes, one thousand plant genomes and ten thousand vertebrate genomes (1000 Genomes, 1KP and Genome 10K projects). Despite the flood of genomic data, a major unsolved problem remains: relating the known genotypes to phenotypes. Even at the level of biochemical systems, drawing a connection between genotypic data and system behavior is difficult. First, we must represent the genotypic data with a model, a challenging task in itself. Then, assuming an adequate model exists, its phenotypic responses must be characterized. Because the parameters * To whom correspondence should be addressed. of the model usually vary, as with environmental change or parameter uncertainty, a direct approach would be to empirically sample many parameter combinations and observe the resulting model behavior. However, the size of the task can quickly grow unreasonable. For example, 10 parameters, each sampled at 20 points, imply an astronomical 10 20 trials, and could still miss a point of interest. Furthermore, classification of the behavior is arbitrary. Each trial may exhibit a slightly different phenotype, but without guidance for what constitutes a significant change. To address the issues, our recent work has demonstrated the generic construction of a system design space that represents the relationship between system parameters, environmental variables and phenotypic behavior (<ref type="bibr" target="#b25">Savageau et al., 2009</ref>). Boundaries in design space are mathematically defined, based on inherent properties of the model, and naturally separate qualitatively distinct phenotypes of the system, allowing them to be counted and compared. The approach has been successfully applied to various biochemical systems of interest (<ref type="bibr" target="#b7">Coelho et al., 2009;</ref><ref type="bibr" target="#b25">Savageau and Fasani, 2009;</ref><ref type="bibr" target="#b25">Savageau et al., 2009</ref>). Nevertheless, the process of constructing design space has largely been explained by example. Here, we present a formal description of design space and its construction. For the first time, we extend the notion to include variable kinetic orders. We then describe algorithms to automatically construct design space and perform common analyses in the context of design space. We also describe new analyses that are made possible by such automation. Throughout the description, we discuss challenges of implementation and scaling to larger systems. In the end, we present an implementation of the algorithms in software, the Design Space Toolbox for MATLAB, and demonstrate the software with abstract and biological examples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head><p>Models of biochemical systems are typically expressed as equations involving mass action or rational functions, which can be recast as generalized mass action (GMA) equations of the form</p><formula>dX i /dt = P i k=1 α ik Q j=1 X g ijk j − N i k=1 β ik Q j=1 X h ijk j i = 1...M (1)</formula><p>where the change in a concentration of</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>R.A.Fasani and M.A.Savageau</head><p>The concentrations and rate constants are limited to positive real numbers and, in traditional chemical kinetics, the kinetic orders are limited to small integer values, such as 1 or 2. However, in the power-law formalism (<ref type="bibr" target="#b22">Savageau, 2001</ref>), kinetic orders are allowed to take on real, non-integer values, giving rise to the GMA form. As such, traditional rate law models are a subset of, and can be represented by, GMA models. Furthermore, biochemical kinetics are typically described by rational functions, as in Michaelis–Menten kinetics. However, it has been shown that via a process of recasting (<ref type="bibr" target="#b22">Savageau, 2001;</ref><ref type="bibr" target="#b26">Savageau and Voit, 1987</ref>), such systems can be exactly represented by an equivalent GMA system. Hence, the GMA form can be used to represent most models of interest and serves as the basis for the design space methodology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">The dominant S-system</head><p>We are particularly interested in the steady states of the model, or the solutions of the nonlinear system described by Equation</p><p>(1) when the rates of change equal zero. However, to find every solution of a particular system is typically difficult, to do so for every combination of parameters exceedingly so. Instead, we consider an approximation: assuming one positive term and one negative term dominate the others in each equation—or, biochemically speaking, two reactions exceed the others—the model can be approximated by an S-system, which has a single analytic steady state solution that is linear in the logarithm of the independent concentrations and rate constants (<ref type="bibr" target="#b25">Savageau et al., 2009</ref>). The dominant S-system can be described by</p><formula>dX i /dt = α ip Q j=1 X g ijp j −β in Q j=1 X h ijn j i = 1...M (2)</formula><p>where p and n are the indices of the dominant positive term and the dominant negative term, respectively. At steady state, the equations can be rearranged and logarithms taken to produce</p><formula>lnα ip + Q j=1 g ijp lnX j = lnβ in + Q j=1 h ijn lnX j (3)</formula><p>which can be written in matrix form as simply</p><formula>Ay = b (4)</formula><p>where y j = lnX j , a ij = g ijp −h ijn and b i = ln(β in /α ip ). Note that A is an M ×Q matrix whose elements represent the differences in the dominant kinetic orders, g ijp and h ijn. Furthermore, the dependent and independent concentration variables can be split, such that</p><formula>A D y D +A I y I = b (5)</formula><p>where A D is an M ×M square matrix. It follows that the steady states of the dependent concentrations, in logarithmic terms, are</p><formula>y D =−A −1 D A I y I +A −1 D b (6)</formula><p>The result shows that by assuming a dominant positive and negative term in each equation, we can calculate an approximate steady state using linear algebra.</p><p>The assumption that some terms dominate implies certain conditions, which are represented by inequalities of the form</p><formula>α ip Q j=1 X g ijp j &gt;α i¯ p Q j=1 X g ij ¯ p j i = 1...M; ¯ p = 1</formula><p>...p−1, p+1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>..P i</head><p>(7)</p><formula>β in Q j=1 X h ijn j &gt;β i ¯ n Q j=1 X h ij ¯ n j i = 1</formula><p>...M; ¯ n = 1...n−1, n+1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>..N i</head><p>(8) Again, p and n are the indices of the dominant positive and negative terms in the i−th equation, while ¯ p and ¯ n are the sets of indices of non-dominant terms. Taking the logarithm of both sides yields</p><formula>lnα ip + Q j=1 g ijp lnX j &gt; lnα i¯ p + Q j=1 g ij ¯ p lnX j (9) lnβ in + Q j=1 h ijn lnX j &gt; lnβ i ¯ n + Q j=1 h ij ¯ n lnX j (10)</formula><p>All the conditions can be listed in matrix form asC is an R×Q matrix, where R is the total number of conditions. As in the steady state analysis, the dependent and independent variables can be split, such that</p><formula>C D y D +C I y I +d &gt; 0 (13)</formula><p>The steady state solution, Equation (6), can be combined with Equation (13) to form Uy I +Wb+d &gt; 0 (14)</p><formula>where U = C I −C D A −1 D A I and W = C D A −1 D . Equation</formula><p>(14) is solely a function of the independent parameters: independent concentrations, rate constants and kinetic orders. As such, it serves as a standard definition of the boundary conditions in design space. Clearly, the boundaries themselves are described by</p><formula>Uy I +Wb+d = 0 (15)</formula><p>The terms boundary conditions and boundaries are used interchangeably when the meaning is made clear by the context. In design space, the boundaries enclose a region of parameter values for which the designated terms dominate and describe a dominant behavior. The approximation is best when far from the boundaries and worsens near them. Nevertheless, the boundaries indicate a transition from one approximation to another, effectively separating qualitatively distinct phenotypes of the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Rate constants</head><p>Rate</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Kinetic orders</head><p>In Equation (15), the elements of matrices U and W are rational functions of the kinetic orders. If the kinetic orders are assigned constant values, then the equation clearly shows that the boundaries are linear in the logarithm of the rate constants and independent concentrations. All work that has utilized the generic construction of design space has dealt with constant kinetic orders and, therefore, linear boundaries in design space (<ref type="bibr" target="#b7">Coelho et al., 2009;</ref><ref type="bibr" target="#b25">Savageau and Fasani, 2009;</ref><ref type="bibr" target="#b25">Savageau et al., 2009</ref>). However, we may wish to vary one or more kinetic orders and search for an underlying design principle. In fact, past handcrafted design spaces have illustrated the impact of varying a kinetic order (<ref type="bibr" target="#b0">Atkinson et al., 2003;</ref><ref type="bibr">Savageau, 1995, 1996;</ref><ref type="bibr" target="#b20">Savageau, 1974</ref><ref type="bibr" target="#b22">Savageau, , 2001</ref><ref type="bibr" target="#b23">Savageau, , 2002</ref>). In the case of variable kinetic orders, Equation (15) forms boundaries that are typically nonlinear in logarithmic coordinates. As might be expected, linear boundaries allow for a broader class of tools, especially from the field of linear programming, to help automate the analysis of design space. The following algorithms assume that the kinetic orders of the system are constant, unless otherwise noted. We consider methods for dealing with variable kinetic orders in the final discussion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">CONSTRUCTION OF DESIGN SPACE</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Enumerating cases</head><p>The first step of design space construction is the enumeration of all possible dominant S-systems and their conditions for dominance. The task requires organizing, indexing and manipulating the terms of the original GMA model. We begin by counting the positive and negative terms in each equation and, by convention, listing the results in the form</p><formula>[P 1 , N 1 , P 2 , N 2 ,...,P M , N M ] (16)</formula><p>which we call the system signature. Every positive and negative term is potentially dominant, and each combination of dominant terms is referred to as a case. The total number of cases, T , is a straightforward product of the entries in the system signature, or</p><formula>T = M i=1 P i N i (17)</formula><p>For a particular case, the indices of the dominant terms are listed in the same order, as</p><formula>[p 1 , n 1 , p 2 , n 2 ,..., p M , n M ] (18)</formula><p>A list of dominant indices is called a case signature, and uniquely identifies a case. However, for the sake of brevity, cases are also numbered. By convention, case numbers are assigned sequentially, as if counting, where the list of dominant indices is considered a number with the least significant digit on the right. Case 1, then, is when the first positive and first negative term in every equation is dominant, or<ref type="bibr">[1, 1, … 1, 1]</ref>; case 2 is the same, except that the second negative term in the last equation, if it exists, is dominant, or<ref type="bibr">[</ref>Each equation has one positive term and two negative terms, making the system signature<ref type="bibr">[1,</ref><ref type="bibr">2,</ref><ref type="bibr">1,</ref><ref type="bibr">2]</ref>. The four cases are as follows:</p><p>Case 1:<ref type="bibr">[1,</ref><ref type="bibr">1,</ref><ref type="bibr">1,</ref><ref type="bibr">1]</ref>Case 2:<ref type="bibr">[1,</ref><ref type="bibr">1,</ref><ref type="bibr">1,</ref><ref type="bibr">2]</ref>Case 3:<ref type="bibr">[1,</ref><ref type="bibr">2,</ref><ref type="bibr">1,</ref><ref type="bibr">1]</ref>Case 4:<ref type="bibr">[1,</ref><ref type="bibr">2,</ref><ref type="bibr">1,</ref><ref type="bibr">2]</ref>In case 1, the first negative term dominates in both equations. Case 2 is the same, except the second negative term in the second equation dominates. There is only one positive term in the second equation, so case 3 is the same as case 1, except the second negative term in the first equation dominates. In fact, the first and third indices never change because there is only one positive term in each equation; nevertheless, the indices are kept in place for consistency and clarity. In each case, the dominant terms are linked to conditions, which are enumerated as described in Section 2.1. The number of conditions, R, can be determined by</p><formula>R = M i=1 [(P i −1)+(N i −1)] (21)</formula><p>and is the same for every case. Therefore, the total number of conditions is simply the product RT. Clearly, the number of conditions grows quickly as the number of terms, P i or N i , increases, and is therefore likely to have the largest impact on the scalability of the methods. However, every condition has an opposite. In one case, a first term may dominate over a second; in another case, the second will dominate over the first. Hence, among all the enumerated conditions, each inequality of the form a &gt; 0 will have an opposite of the form a &lt; 0 or −a &gt; 0, which halves the number of equations that must be stored. Similarly, the total number of boundary conditions is RT, while the number of boundaries is RT /2. Furthermore, many of the conditions are duplicates: a condition that appears in one case will also appear in another. Each equation represents a set of possible conditions, and each case is a different combination of those conditions. It can be shown that the number of unique conditions for a system is</p><formula>M i=1 [P i (P i −1)+N i (N i −1)] (22)</formula><p>which is smaller than RT. Again, each unique condition has an opposite, halving the number of equations that must be stored. Clearly, scalability is a concern, one we return to in the final discussion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Validating cases</head><p>Next, each case should be checked for validity. Typically, boundaries enclose a region in design space. In some cases, the boundaries are mutually exclusive, implying that a corresponding region does not exist. Cases that do not enclose a region are called invalid. If the Page: 2604 2601–2609</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>R.A.Fasani and M.A.Savageau</head><p>matrix A D in Equation (5) is singular, the problem can be resolved by reformulating the original equations. Consider the standard form of the boundary conditions in Equation (14). In the case of constant kinetic orders, the boundaries are linear and may enclose an n-dimensional convex polytope. Specifically, the boundaries take the simplified form</p><formula>Uy I +z &gt; 0 (23)</formula><p>where z = Wb+d represents a column vector of numeric values. The linear inequalities of Equation (23) are similar to the constraints used in linear programming (<ref type="bibr" target="#b8">Dantzig, 1963;</ref><ref type="bibr" target="#b29">Vanderbei, 2008</ref>). In fact, one task in linear programming, sometimes called Phase I, is to verify the existence of a feasible region, or a region that satisfies the constraints. It follows that if we can reformulate the boundaries in terms of a standard linear programming problem, we can use existing linear programming algorithms to determine if the case is feasible or valid. To do so, we add a slack variable to convert the strict inequalities to standard inequalities. The resulting linear programming problem is minimize: ε subject to:</p><formula>−Uy I −[1, 1,..., 1] T ε ≤ z</formula><formula>(24)</formula><p>If the slack variable ε can be minimized to a negative number, then a feasible region exists and the case is valid. Furthermore, the algorithm will terminate at an optimal point, y I0 , which represents one point in the valid region and helps locate the region within the multidimensional design space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Plotting and visualization</head><p>The most direct method of depicting design space is based on sampling: we evaluate the boundary conditions in Equation (14) at a given point, or a specific combination of parameter values. If all the boundary conditions for a case are satisfied, then the point lies within the associated region. A point can satisfy multiple cases or lie within multiple regions. Consequently, every point must be tested over every valid case. By setting all but a few parameters to specific values, and uniformly sampling the remaining two or three parameters, we can draw a 2-dimensional or 3-dimensional slice of design space. We can increase the resolution by increasing the number of sampled points. The method can be applied to systems with constant or variable kinetic orders, and although it is computationally intensive, it is highly parallelizable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ANALYSIS OF DESIGN SPACE</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Searching for intersections</head><p>Regions in design space can intersect. The subregion of intersection contains parameter combinations for which the system can exhibit multiple steady states. Instances of three intersecting regions are particularly interesting as they indicate the potential for bistable hysteretic behavior (<ref type="bibr" target="#b25">Savageau and Fasani, 2009</ref>). Finding intersecting regions on a finite 2-dimensional plot is a straightforward visual task. Exhaustively searching a higher dimensional design space for intersecting regions requires a different approach. To determine whether a group of regions intersect, we extend the process of validation. We combine the boundaries of every region in question, and test if the combined set of boundaries is valid; if valid, the regions intersect and the combined boundaries enclose a subregion of intersection. To search all of design space for intersections, we test every possible combination of regions. Hence, to search for instances of three intersecting regions, we check T !/(3!(T −3)!) combinations, where T is the total number of cases, as shown in Equation (17). To exhaustively search for every intersection, we repeat the process for instances of 2 through T intersecting regions, which, in the worst case, requires</p><formula>T i=2 T ! i!(T −i)! (25)</formula><p>tests. However, only valid regions, or cases, need be tested. Furthermore, if the numbers 2 through T are checked in order, only subregions that are the result of i intersecting regions and share all but two intersecting regions need be tested for (i+1) intersecting regions. For example, subregions {1, 2, 3} and {1, 2, 4} should be checked for the intersection of {1, 2, 3, 4}. In practice, the number of tests is much smaller than Equation (25) suggests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Bounding a region</head><p>Once we identify a valid region or subregion of intersection, we would like to locate it within design space and determine its extent. We can do so, at least approximately, by automatically forming an axis aligned bounding box around the region of interest. In the case of constant kinetic orders, the region is a convex polytope in design space, and we can construct a bounding box around the region via linear programming. If the number of independent parameters is defined by L = Q−M, then the bounding box can be found via 2L linear programming problems of the forms minimize: y Ij</p><formula>subject to: −Uy I ≤ z j = 1...L (26)</formula><p>and maximize: y Ij</p><formula>subject to: −Uy I ≤ z j = 1...L (27)</formula><p>Optionally, the bounds of each y Ij can be described by additional constraints and updated after each step. Although 2L linear programming problems seems computationally expensive, algorithms that employ a primal-dual simplex method with hot starts appear to significantly reduce the number of operations (<ref type="bibr" target="#b31">Yamamura and Fujioka, 2003;</ref><ref type="bibr" target="#b32">Yamamura et al., 2009</ref>). Furthermore, each linear programming problem may return an optimal point, y I0 , which represents a vertex of the valid region and helps locate the region in the multidimensional design space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Measuring tolerance</head><p>Tolerance is defined as the fold change in one parameter required to move from an operating point in one region to an adjacent region of design space (<ref type="bibr" target="#b7">Coelho et al., 2009</ref>). In other words, it is the distance from a point in design space to the nearest boundary while moving along a straight line parallel to a parameter axis. If we vary only one parameter, then the boundaries, described by Equation (15), become a set of univariate functions, and determining where the line intersects the boundaries is a univariate root-finding problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Page: 2605 2601–2609</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Automated analysis of system design space</head><p>In the case of constant kinetic orders, only one element of y I varies, making Equation (15) a set of linear equations. We can easily solve each equation, and the root closest the operating point, on either side, determines the tolerance. Specifically, the tolerance is the absolute distance from the operating point to the root, in logarithmic coordinates, and is equivalent to a fold change in Cartesian coordinates. If a root does not exist on one side of the operating point, the tolerance to change in that direction is infinite. In the case of variable kinetic orders, the elements of U and W are rational functions of the varying parameter. Consequently, Equation (15) becomes a set of rational functions in one variable, and measuring tolerance is equivalent to finding the roots of univariate polynomials, for which several modern approaches and tools can be used (<ref type="bibr" target="#b12">Mehlhorn and Sagraloff, 2009;</ref><ref type="bibr" target="#b14">Mourrain and Pavone, 2009;</ref><ref type="bibr" target="#b15">Pan, 1997</ref><ref type="bibr" target="#b16">Pan, , 2001</ref>). Again, the distance from the operating point to the closest roots determines the tolerance to change for a given parameter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Local analysis</head><p>In each case, the dominant S-system can be analyzed via established methods. For small changes in the variables and parameters, the signal amplification of the system can be quantified via logarithmic gain, defined as L(X i ,X j ) = ∂lnX i /∂lnX j (<ref type="bibr" target="#b18">Savageau, 1971a</ref>). Likewise, robustness is associated with parameter sensitivity, defined as S(X i ,p j ) = ∂lnX i /∂lnp j (<ref type="bibr" target="#b19">Savageau, 1971b</ref>). The eigenvalues of the linearized system indicate local stability and response time (<ref type="bibr" target="#b21">Savageau, 1975</ref>). Traditionally, parameter sensitivity measures the change with respect to a single rate constant or kinetic order, as in S(X i ,α j ) or S(X i ,g jk ). Here, we consider the case where multiple rate constants or kinetic orders are a function of some changing parameter p j. By treating variable rate constants as independent variables, as described in Section 2.2, we already account for a parameter that appears as a rate constant, or coefficient, in several terms. For variable kinetic orders, the traditional measure of sensitivity must be extended. It can be shown that</p><formula>S(X D ,p j ) = ∂lnX D ∂lnp j =−A −1 D ∂A ∂p j p j y (28)</formula><p>where X D is the vector of all dependent concentrations at steady state. As defined in Section 2.1, y is a vector that represents the logarithm of all concentrations, and the elements of matrices A and A D are differences in the kinetic orders. The sensitivity of the flux to a change in p is</p><formula>S(V D ,p j ) = ∂lnV D ∂lnp j = ∂G ∂p j p j y+G D S(X D ,p j ) (29)</formula><p>where G is the matrix of kinetic orders from the dominant terms, or all g ijp in Equation (3), and V D is the vector of steady fluxes through the pools represented by X D , defined by lnV D = lnα+GlnX D. If p j represents just a single kinetic order, or p j = g jk , then Equation (28) reduces to the traditional measure of steady state sensitivity with respect to a kinetic order:</p><formula>S(X i ,g jk ) = (A −1 D ) ij g jk y k. Similarly, Equation</formula><p>(29) reduces to the traditional measure of steady flux sensitivity with respect to a kinetic order. By calculating logarithmic gains, parameter sensitivities and eigenvalues for the dominant S-system in each case, or region, we can characterize the distinct phenotypes of the system. Given a set of performance criteria, the fitness of each phenotype can be quantitatively compared.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION</head><p>The described algorithms have been implemented and packaged as the Design Space Toolbox for MATLAB®, a numerical programming environment with the necessary tools for matrix manipulation, symbolic manipulation, linear programming, root finding and plotting. The Design Space Toolbox requires the object oriented facilities introduced in MATLAB 7.6 (R2008a).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">An example system</head><p>Consider the abstract model</p><formula>dX 1 /dt = αX 1 X 2 X 3 X 4 +X 1 X 2 −αX 1 X 3 X −1 4 −X 1 (30) dX 2 /dt = α −1 X 1 X 2 X 3 X 4 +X 1 X 2 −α −1 X 2 X 3 X −1 4 −X 2 (31)</formula><p>Assume all variables are normalized and therefore dimensionless. The dependent concentrations are X 1 and X 2. The three varying parameters are the rate constant, α, and the two independent concentrations, X 3 and X 4 , implying that the full design space is 3-dimensional. There are two positive and two negative terms in each equation, yielding 16 cases. We used the Design Space Toolbox to automatically enumerate the cases and test each one for validity. The toolbox listed the valid cases as</p><p>Case 1<ref type="bibr">[1 1 1 1]</ref>Case 2<ref type="bibr">[1 1 1 2]</ref>Case 3<ref type="bibr">[1 1 2 1]</ref>Case 4<ref type="bibr">[1 1 2 2]</ref>Case 5<ref type="bibr">[1 2 1 1]</ref>Case 6<ref type="bibr">[1 2 1 2]</ref>Case 8<ref type="bibr">[1 2 2 2]</ref>Case 9<ref type="bibr">[2 1 1 1]</ref>Case 11<ref type="bibr">[2 1 2 1]</ref>Case 12<ref type="bibr">[2 1 2 2]</ref>Case 13<ref type="bibr">[2 2 1 1]</ref>Case 14<ref type="bibr">[2 2 1 2]</ref>Case 15<ref type="bibr">[2 2 2 1]</ref>Case 16<ref type="bibr">[2 2 2 2]</ref>Careful inspection of the output reveals that cases 7 and 10 are invalid. We can manually confirm the results by examining the boundary conditions. For case 7, the boundary conditions are as follows:Simple inspection reveals that Equations (32) and (33) are mutually exclusive, as well as Equations (34) and (35), confirming that the case is invalid. Likewise, the boundary conditions for case 10 are as follows:</p><formula>(a) (b) (c)</formula><formula>−logX 3 −logX 4 −logα &gt; 0 (36) −logX 3 +logX 4 +logα &gt; 0 (37) logX 3 −logX 4 +logα &gt; 0 (38) logX 3 +logX 4 −logα &gt; 0 (39)</formula><p>Again, inspection confirms that the conditions are mutually exclusive and the case is invalid. We arbitrarily assumed α = 10 and used the Design Space Toolbox to draw the resulting 2-dimensional design space, a function of X 3 and X 4 , in<ref type="figure" target="#fig_1">Figure 1a</ref>. Only some of the valid regions are evident. Recall that the full design space of the system is 3-dimensional, meaning<ref type="figure" target="#fig_1">Figure 1a</ref>is but one slice of the whole. We explored the design space by changing α, and chose a second slice, evaluated at α = 0.1, for<ref type="figure" target="#fig_1">Figure 1b</ref>. Together, the two slices display every valid region.<ref type="figure" target="#fig_1">Figure 1c</ref>shows a slice perpendicular to the first two, revealing how some of the regions vary with α. Assuming the normal operating point is at α = 10, X 3 = 2 and X 4 = 1,<ref type="figure" target="#fig_1">Figure 1a</ref>shows that the system normally exhibits the phenotype associated with region 4. We used the Design Space Toolbox to measure the tolerance, or the parameter change required to move into an adjacent region. The output, where the tolerance to a fold change down and a fold change up is denoted<ref type="bibr">[</ref>X 4 can tolerate a 5-fold increase or decrease before moving out of region 4, which can be seen as a 0.7 shift up or down on the logarithmic scale of<ref type="figure" target="#fig_1">Figure 1a</ref>. Similarly, α can tolerate a 5-fold decrease, but is effectively unbounded upward, as shown in<ref type="figure" target="#fig_1">Figure 1c</ref>. X 3 can tolerate a 5-fold increase and a 20-fold decrease, which is evident in both Figures 1a and c. Although tolerance indicates the system will cross a boundary at α = 2 when starting from the operating point and changing a single parameter, other combinations of parameters in the region may allow a smaller α. We used the Design Space Toolbox to find the overall parameter bounds for region 4. The output, expressed as an interval over the positive real numbers, was alpha:<ref type="bibr">[1 Inf]</ref>X3:<ref type="bibr">[0 Inf]</ref>X4:<ref type="bibr">[0 Inf]</ref>The minimum value of α in the region is 1. Also, X 3 and X 4 can take on any positive value, meaning they are unbounded in logarithmic coordinates, as<ref type="figure" target="#fig_1">Figure 1c</ref>suggests. With the example, we have demonstrated how the Design Space Toolbox can be used to automatically construct, analyze and explore a relatively small design space. The tools are even more useful during practical application, when the models and design spaces grow larger.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Lambda phage lysogeny</head><p>A design space for the gene circuit controlling lambda phage lysogeny was recently constructed and analyzed (<ref type="bibr" target="#b25">Savageau and Fasani, 2009</ref>). Of particular interest were the bistable regions of hysteresis. The GMA model at steady state was normalized and recast to</p><formula>0 =α −1 θx 1 +x 1/2 1 x −1 3 +αx 1/2 1 r a x −1 3 −κ p x −1 2 −σx p 1 x −1 2 −χ −n x p+n 1 x −1 2 (40) 0 = x 2 −κ p −x p 1 −χ −n x p+n 1 (41) 0 = x 3 −α 1/2 θ 1/2 φ −α 1/2 θ 1/2 φr a (42)</formula><p>x 1 represents the concentration of the repressor CI dimer, normalized to its low concentration at the fully induced, lytic state. The dimer activates its own transcription at low concentrations and represses transcription at high concentrations; the normalized threshold of half-maximal activation is κ. r represents the external signal, RecA*, that stimulates CI degradation, normalized to its concentration at half-maximal activation. The other normalized, dimensionless parameters were estimated based on experimental data: χ = 320, φ = 10, α = 215, σ = 7.1, θ = 2, a = 1, p = 3 and n = 1.5. κ was constrained to the range<ref type="bibr">[1, 10 000]</ref>and r was constrained to the range<ref type="bibr">[0.001, 10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Page: 2607 2601–2609</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Automated analysis of system design space</head><p>We used the Design Space Toolbox to reconstruct the design space and check for valid cases within the constrained region. The output<ref type="figure" target="#fig_1">Case 1 [1 1 1 1 1 1]  Case 7 [1 2 1 1 1 1]  Case 11 [1 2 1 3 1 1]  Case 37 [3 1 1 1 1 1]  Case 38 [3 1 1 1 1 2]  Case 43 [3 2 1 1 1 1]  Case 44 [3 2 1 1 1 2]  Case 45 [3 2 1 2 1 1]  Case 46 [3 2 1 2 1 2]  Case 47 [3 2 1 3 1 1]</ref>verifies the original results. Furthermore, we used the Design Space Toolbox to visualize the design space over the same range of parameters. The output, shown in<ref type="figure" target="#fig_2">Figure 2a</ref>, again verifies the original results. As the external signal r varies within a range of κ, the system switches between lysogenic and lytic growth across a hysteretic buffer. Local analysis emphasizes the fact: we used the Design Space Toolbox to calculate the steady state of the CI repressor for a slowly increasing signal, shown in<ref type="figure" target="#fig_2">Figure 2b</ref>, and for a slowly decreasing signal, shown in<ref type="figure" target="#fig_2">Figure 2c</ref>. As the external signal r increases from its low value in lysogeny, the CI repressor concentration remains high through a buffer zone and then abruptly decreases, triggering induction. If the direction is reversed, the system must pass back through the buffer before the repressor concentration increases, an all-or-nothing response that is a hallmark of hysteretic behavior. Furthermore, the figures indicate that the switching only occurs over a certain range of parameter values. As was seen in<ref type="figure" target="#fig_1">Figure 1a</ref>, the 2-dimensional slice of design space in<ref type="figure" target="#fig_2">Figure 2a</ref>may not contain all of the valid regions. We varied five of the parameters, χ, φ, α, σ and θ, 2-fold above and below their original values and used the Design Space Toolbox to check for valid regions within the resulting 7-dimensional design space. The output<ref type="figure" target="#fig_1">Case 1 [1 1 1 1 1 1]  Case 7 [1 2 1 1 1 1]</ref>Case 8<ref type="bibr">[1 2 1 1 1 2]</ref>Case 9<ref type="bibr">[1 2 1 2 1 1]</ref>Case 10<ref type="bibr">[1 2 1 2 1 2]</ref>Case 11<ref type="bibr">[1 2 1 3 1 1]</ref>Case 12<ref type="bibr">[1 2 1 3 1 2]</ref>Case 17<ref type="figure" target="#fig_1">[1 3 1 3 1 1]  Case 37 [3 1 1 1 1 1]  Case 38 [3 1 1 1 1 2]  Case 43 [3 2 1 1 1 1]  Case 44 [3 2 1 1 1 2]  Case 45 [3 2 1 2 1 1]  Case 46 [3 2 1 2 1 2]  Case 47 [3 2 1 3 1 1]</ref>Case 48<ref type="bibr">[3 2 1 3 1 2]</ref>Case 53<ref type="bibr">[3 3 1 3 1 1]</ref>indicates that there are seven other valid regions relatively near the normal operating point. Furthermore, we used the Design Space Toolbox to find every subregion of intersection, or potential region of hysteresis, in the same range. The output</p><formula>(a) (b) (c)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>R.A.Fasani and M.A.Savageau</head><p>{ 1, 7, 9} { 1, 7, 11} { 7, 9, 37} { 7, 11, 37} { 8, 10, 38} { 8, 12, 38} { 9, 37, 43} {10, 38, 44} {11, 37, 43} {12, 38, 44} {37, 43, 45} {37, 43, 47} {38, 44, 46} {38, 44, 48} not only verifies the original subregions of intersection, shown in<ref type="figure" target="#fig_2">Figure 2a</ref>, but also indicates that there are eight other regions of potential hysteresis relatively close to the original analysis. Extending the search, we used the Design Space Toolbox to check for valid regions over the unbounded range of all seven parameters. Clearly, physical parameters are limited in the extremes—rate constants cannot exceed the diffusion limit and independent concentrations cannot exceed the solubility limit, for example—but an analysis over the infinite range provides an upper bound on the number of valid regions and intersections. We found that 42 of the 54 regions are valid somewhere in the design space. Furthermore, we found 73 regions of potential hysteresis. Remarkably, every one of the 42 valid regions intersects a region of potential hysteresis. Some of the newly discovered regions may not be biologically relevant, but the rest may be worthy of further analysis. As such, we have shown that the Design Space Toolbox can automate existing analyses, as well as perform more difficult analyses that would be prohibitive if done manually.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION AND CONCLUSION</head><p>Design space has proven a useful tool in the analysis of biochemical systems. Within design space, we can enumerate the phenotypic repertoire of a system model over a wide range—even an infinite range—of parameter values. However, for all but the smallest models, constructing and analyzing the design space is manually infeasible. Here, we have shown that the process can be automated. In the case of constant kinetic orders, the boundaries of design space are linear, and linear programming can be employed in the automated analysis of the regions. Unfortunately, in the case of variable kinetic orders, the boundaries are usually nonlinear, obviating the use of linear programming. Nevertheless, we could inspect the boundaries for special forms (e.g. linear, quadratic or convex) and, under favorable conditions, use an appropriate variety of convex programming (<ref type="bibr" target="#b6">Boyd and Vandenberghe, 2004</ref>) to determine validity and bound the region. Alternatively, we could employ subdivision strategies to build a piecewise-linear approximation of the region and handle each subpolytope separately. How closely the bounding box encloses the region of interest depends on the shape and orientation of the polytope. For a better, yet more computationally expensive, description of the region, we could employ vertex or face enumeration techniques (<ref type="bibr" target="#b1">Avis and Fukuda, 1992;</ref><ref type="bibr" target="#b2">Avis et al., 1997</ref>). Such a method would require more computation and storage, and be harder to conceptualize, but would give an exact description of the convex polytope that represents a region in design space. When measuring tolerance, we might want to measure the distance to some arbitrary boundary, rather than the boundaries of the region. For example, in<ref type="figure" target="#fig_1">Figure 1a</ref>, we could measure tolerance from the typical lysogenic operating point to the dashed lines that represent the boundaries of effective switching between lysogenic and lytic growth, which are not actually boundaries of the enclosing region. Alternatively, we could join several regions of similar phenotypes and measure tolerance to the boundary of the composite region, effectively measuring tolerance across several regions. Either case suggests that we would like to add, extend or in other ways manipulate the boundaries of design space according to additional knowledge, especially regarding the biology of the system. At various points, we have mentioned the challenge of scalability, or handling larger systems and design spaces. The size of the problem is not just dependent on the number of variables and equations but also on the number of parameters and terms— more terms produce significantly more cases. We have successfully applied the Design Space Toolbox to moderately sized systems with tens of parameters and thousands of cases. To handle millions of cases, we can take advantage of the parallel nature of the algorithms and analyze each case independently. We plan to update the Design Space Toolbox to utilize multiple processors, enabling it to handle more cases in practical time. As for thousands of parameters, any case with constant kinetic orders is analyzed with linear algebra and linear programming, for which existing computational libraries are known to scale well. With that said, we have presented a detailed description of design space construction and analysis, and have described algorithms to automate the common tasks. Furthermore, we have noted the conditions under which the various algorithms can be used effectively. Specifically, we have extended the concepts to include models with variable kinetic orders, and have discussed the challenges such models present. We have also discussed the issue of scaling to larger systems and design spaces. In the end, we have created a working implementation of the algorithms: the Design Space Toolbox for MATLAB. We have demonstrated it using both abstract and biological examples, and made it freely available for others to explore the design space of biochemical systems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>All tests were performed on a MacBook Pro with 2.93 GHz Intel Core 2 Duo, running OS X 10.5.8 and MATLAB 7.8 (R2009a). The distributed package includes installation instructions, extensive documentation and several demonstrations that introduce design space concepts and procedures. The source code has been released under the BSD license, and the toolbox is freely available at http://www.bme.ucdavis.edu/savageaulab/.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Visualization of the design space for the example system when varying parameters X 3 , X 4 and α, colored by region number; (a) slice at α = 10; (b) slice at α = 0.1; (c) slice at X 4 = 1; dashed line, location of a slice; filled circle, normal operating point.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. Visualization of the design space for lambda phage lysogeny control when varying the signal concentration, r, and the CI dimer concentration needed for half-maximal activation of transcription, κ. Filled circle, normal lysogenic operating point; open circle, normal lytic operating point; dashed line, upper and lower bounds of effective switching between lysogenic and lytic growth; (a) regions colored by region number; (b) steady state of the CI dimer, x 1 , for slowly increasing signal; (c) steady state of the CI dimer, x 1 , for slowly decreasing signal.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><figDesc>[11:16 21/9/2010 Bioinformatics-btq479.tex] Page: 2608 2601–2609</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>interest, X i , is described by a nonlinear ordinary differential equation. Rate constants appear as the coefficients α ik and β ik , and kinetic orders as the exponents g ijk and h ijk. The i-th equation contains P i positive terms and N i negative terms. Overall, there are M equations and Q concentrations, some of which can vary independently.</figDesc><table>[11:16 21/9/2010 Bioinformatics-btq479.tex] 

Page: 2602 2601–2609 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>= lnX j , c ij = g ijp −g ij ¯ p , c ij = h ijn −h ij ¯ n , d i = ln(α ip /α i¯ p ) and d i = ln(β in /β i ¯ n ), or simply Cy+d &gt; 0 (12)</figDesc><table>C 
C 

y+ 


d 
d 


&gt; 0 
( 1 1 ) 

with y j </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>kinetic orders. Consequently, all α ik and β ik in our algorithms represent constant coefficients, and arrays that are based on them, such as b and d, are numeric. All independent concentrations and rate constants are contained in y I .</figDesc><table>constants can be related. For example, stoichiometry implies 
a linear relationship, such as α 21 = 2β 11 . To capture such 
relationships, and without loss of generality, we can treat each rate 
constant as a function of independent parameters, X j , with associated Page: 2603 2601–2609 

Automated analysis of system design space 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><figDesc>= X 1 X 2 −αX 1 X 3 X −1 4 −X 1 (19) dX 2 /dt = X 1 X 2 −α −1 X 2 X 3 X −1 4 −X 2 (20)</figDesc><table>1, 1, … 1, 2]; and so on. For example, consider the simple GMA 
model 
dX 1 /dt </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><figDesc>T low , T high ], was</figDesc><table>alpha: [5.0000 Inf] 
X3: [20.0000 5.0000] 
X4: [5.0000 5.0000] 

</table></figure>

			<note place="foot">© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 2601 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We thank Pedro Coelho and Dean Tolla for fruitful discussions regarding the challenges and practical applications of design space.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Development of genetic circuitry exhibiting toggle switch or oscillatory behavior in Escherichia coli</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">R</forename>
				<surname>Atkinson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cell</title>
		<imprint>
			<biblScope unit="volume">113</biblScope>
			<biblScope unit="page" from="597" to="607" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">A pivoting algorithm for convex hulls and vertex enumeration of arrangements and polyhedra</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Avis</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Fukuda</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="295" to="313" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">How good are convex hull algorithms?</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Avis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="265" to="301" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">119</biblScope>
			<biblScope unit="issue">21</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq479. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="2609" to="2601" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<monogr>
		<title level="m" type="main">Automated analysis of system design space</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<monogr>
		<title level="m" type="main">Convex Optimization</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">P</forename>
				<surname>Boyd</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Vandenberghe</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Quantifying global tolerance of biochemical systems: design implications for moiety-transfer cycles</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">M</forename>
				<surname>Coelho</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">1000319</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">Linear Programming and Extensions</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">B</forename>
				<surname>Dantzig</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1963" />
			<publisher>Princeton University Press</publisher>
			<pubPlace>Princeton, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Subunit structure of regulator proteins influences the design of gene circuitry: analysis of perfectly coupled and completely uncoupled circuits</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">S</forename>
				<surname>Hlavacek</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">248</biblScope>
			<biblScope unit="page" from="739" to="755" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Rules for coupled expression of regulator and effector genes in inducible circuits</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">S</forename>
				<surname>Hlavacek</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">255</biblScope>
			<biblScope unit="page" from="121" to="139" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Initial sequencing and analysis of the human genome</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">S</forename>
				<surname>Lander</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">409</biblScope>
			<biblScope unit="page" from="860" to="921" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Isolating real roots of real polynomials</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Mehlhorn</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Sagraloff</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 International Symposium on Symbolic and Algebraic Computation</title>
		<meeting>the 2009 International Symposium on Symbolic and Algebraic Computation<address><addrLine>Seoul, Republic of Korea</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="247" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Sequencing technologies-the next generation</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">L</forename>
				<surname>Metzker</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Rev. Genet</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="31" to="46" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Subdivision methods for solving polynomial equations</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Mourrain</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">P</forename>
				<surname>Pavone</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Symbolic Comput</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="292" to="306" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Solving a polynomial equation: some history and recent progress</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">Y</forename>
				<surname>Pan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Rev</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="187" to="220" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Univariate polynomials: nearly optimal algorithms for factorization and rootfinding</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">Y</forename>
				<surname>Pan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 International Symposium on Symbolic and Algebraic Computation</title>
		<meeting>the 2001 International Symposium on Symbolic and Algebraic Computation<address><addrLine>London, Ontario, Canada</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="253" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">DNA sequencing with chain-terminating inhibitors</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Sanger</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="1977" />
			<biblScope unit="page" from="5463" to="5467" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Concepts relating the behavior of biochemical systems to their underlying molecular properties</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Arch. Biochem. Biophys</title>
		<imprint>
			<biblScope unit="volume">145</biblScope>
			<biblScope unit="page" from="612" to="621" />
			<date type="published" when="1971" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Parameter sensitivity as a criterion for evaluating and comparing the performance of biochemical systems</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">229</biblScope>
			<biblScope unit="page" from="542" to="544" />
			<date type="published" when="1971" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Comparison of classical and autogenous systems of regulation in inducible operons</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">252</biblScope>
			<biblScope unit="page" from="546" to="549" />
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Optimal design of feedback control by inhibition</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Evol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="199" to="222" />
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Design principles for elementary gene circuits: elements, methods, and examples</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Chaos</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="142" to="159" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Alternative designs for a genetic switch: analysis of switching times using the piecewise power-law representation</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Biosci</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="page" from="237" to="253" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<monogr>
		<title level="m" type="main">Biochemical Systems Analysis: A Study of Function and Design in Molecular Biology</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1976" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Qualitatively distinct phenotypes in the design space of biochemical systems</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">A</forename>
				<surname>Fasani</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">FEBS Lett</title>
		<imprint>
			<biblScope unit="volume">583</biblScope>
			<biblScope unit="page" from="3914" to="3922" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Recasting nonlinear differential equations as S-systems: a canonical nonlinear form</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">O</forename>
				<surname>Voit</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Biosci</title>
		<imprint>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="page" from="83" to="115" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Phenotypes and tolerances in the design space of biochemical systems</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Savageau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="6435" to="6440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Next-generation DNA sequencing</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Shendure</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Ji</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1135" to="1145" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<monogr>
		<title level="m" type="main">Linear Programming: Foundations and Extensions</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">J</forename>
				<surname>Vanderbei</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Springer</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">The sequence of the human genome</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">C</forename>
				<surname>Venter</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">291</biblScope>
			<biblScope unit="page" from="1304" to="1351" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Finding all solutions of nonlinear equations using the dual simplex method</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Yamamura</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Fujioka</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">152</biblScope>
			<biblScope unit="page" from="587" to="595" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">LP narrowing: a new strategy for finding all solutions of nonlinear equations</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Yamamura</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Math. Comput</title>
		<imprint>
			<biblScope unit="volume">215</biblScope>
			<biblScope unit="page" from="405" to="413" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>