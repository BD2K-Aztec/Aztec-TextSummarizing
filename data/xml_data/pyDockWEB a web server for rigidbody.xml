
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:42+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Structural bioinformatics pyDockWEB: a web server for rigid-body protein–protein docking using electrostatics and desolvation scoring</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Brian</forename>
								<surname>Jimé Nez-García</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Life Sciences</orgName>
								<orgName type="institution" key="instit1">Joint BSC-IRB Research Programme in Computational Biology</orgName>
								<orgName type="institution" key="instit2">Barcelona Supercomputing Center</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Carles</forename>
								<surname>Pons</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Life Sciences</orgName>
								<orgName type="institution" key="instit1">Joint BSC-IRB Research Programme in Computational Biology</orgName>
								<orgName type="institution" key="instit2">Barcelona Supercomputing Center</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Computational Bioinformatics</orgName>
								<orgName type="institution">National Institute of Bioinformatics (INB)</orgName>
								<address>
									<addrLine>Jordi Girona 29</addrLine>
									<postCode>08034</postCode>
									<settlement>Barcelona</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Juan</forename>
								<surname>Ferná Ndez-Recio</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Life Sciences</orgName>
								<orgName type="institution" key="instit1">Joint BSC-IRB Research Programme in Computational Biology</orgName>
								<orgName type="institution" key="instit2">Barcelona Supercomputing Center</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Structural bioinformatics pyDockWEB: a web server for rigid-body protein–protein docking using electrostatics and desolvation scoring</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">13</biblScope>
							<biblScope unit="page" from="1698" to="1699"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt262</idno>
					<note type="submission">Received on January 23, 2013; revised on April 8, 2013; accepted on May 2, 2013</note>
					<note>Associate Editor: Anna Tramontano Contact: juanf@bsc.es Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>pyDockWEB is a web server for the rigid-body docking prediction of protein–protein complex structures using a new version of the pyDock scoring algorithm. We use here a new custom parallel FTDock implementation, with adjusted grid size for optimal FFT calculations , and a new version of pyDock, which dramatically speeds up calculations while keeping the same predictive accuracy. Given the 3D coordinates of two interacting proteins, pyDockWEB returns the best docking orientations as scored mainly by electrostatics and desolva-tion energy. Availability and implementation: The server does not require registration by the user and is freely accessible for academics at http://life. bsc.es/servlet/pydock</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Protein–protein interactions mediate most cellular functions; thus, a detailed description of the association process at molecular level is essential to comprehend the fundamental processes that sustain life. In such line, protein–protein docking tools aim to identify the native binding mode between two proteins (<ref type="bibr" target="#b10">Ritchie, 2008</ref>). Such predictions are required to complement experimental techniques that cannot provide structural information at a proteomics scale given their current technical limitations. pyDock (<ref type="bibr" target="#b2">Cheng et al., 2007</ref>) is a rigid-body docking method in which sampling is performed by means of FTDock (<ref type="bibr" target="#b4">Gabb et al., 1997</ref>) and scoring implements an efficient empirical potential, composed of electrostatics and desolvation terms, with a limited contribution from van der Waals energy. The method has been successfully tested in CAPRI (<ref type="bibr" target="#b6">Grosdidier et al., 2007;</ref><ref type="bibr" target="#b7">Mendez et al., 2003;</ref><ref type="bibr" target="#b8">Pons et al., 2010a</ref>). Here, we present pyDockWEB server, a new fast implementation that allows easy access to non-expert users to state-of-the-art docking predictions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PYDOCKWEB SERVER</head><p>pyDockWEB server is a web application for the use of the protein–protein docking and scoring program pyDock. Users can easily send pyDock jobs to be executed in a five-step process via a user-friendly front-end (<ref type="figure">Fig. 1</ref>). In the first step, users have to introduce a project name and a notification email address. In the second step, the scoring algorithm is selected. In the third step, users can either upload their protein coordinate files or indicate the PDB code, in which case, PDB files will be automatically downloaded from RCSB Protein Data Bank. In both cases, PDB files are automatically parsed to select available receptor and ligand chains. An option to automatically set-up a docking job with example PDB files is also available. In the fourth step, users may specify optional distance restraints, which will be computed using pyDockRST (<ref type="bibr" target="#b1">Chelliah et al., 2006</ref>) module. Finally, in the fifth step, users will double-check whether data provided are correct and submit a docking job to the server queues. After job submission, user is redirected to a web page where project status is automatically updated and result files can be downloaded after computation is finished. In this web page, the top 10 models scored by pyDock are displayed using Jmol (http:// jmol.sourceforge.net/). pyDockWEB is technically constituted by three different components: a web front-end, pydockd, a daemon in charge of managing pyDock executions and a data storage system. The web front-end has been implemented using JSF (Java Server Faces, a Java-based web application framework), Ajax4sf (an open source framework that adds Ajax capabilities to JSF framework) and JSP (Java Server Pages) technologies. Data storage system has been implemented via one of the most popular choices in web applications databases, MySQL (http://www.mysql.com). Data tables have been designed to efficiently store the relevant job information and to gather a few statistics about usage and computation and queued times. The controller, pydockd, is an application written in Python version 2.7, which periodically polls job requests created from the web front-end and stored in the MySQL database and submits them as pyDock job instances to the Slurm batch queuing system (https://computing.llnl.gov/ linux/slurm/slurm.html). pyDockWEB uses an optimized pyDock version 3, which also includes a custom parallel version of FTDock, implemented using the MPI (Message Passing Interface) library MPICH2 (<ref type="bibr" target="#b0">Bouteiller et al., 2003</ref>) to generate docking poses, which is capable to scale to multiple processors/cores. Another optimization *To whom correspondence should be addressed. has been implemented, as follows. FTDock makes use of the FFTW 2.1.5 (<ref type="bibr" target="#b3">Frigo and Johnson, 1998</ref>) library to perform a global scan of translational and rotational space having the two molecules discretized onto orthogonal grids. The size of the transform in the FFTW scope is proportional to the FTDock grid size in number of cells, which was automatically calculated from the single grid unit size and the size of the proteins. However, according to FFTW's documentation, FFTW algorithms are optimal for sizes that follow Equation (1),</p><formula>n ¼ 2 a Á 3 b Á 5 c Á 7 d Á 11 e Á 13 f ð1Þ</formula><p>where e þ f is either 0 or 1, and the other exponents are arbitrary. Other sizes are calculated by FFTW using slower algorithms. Therefore, we have adjusted the FTDock grid size, n, to follow Equation (1). This grid size optimization has been implemented in the new custom parallel FTDock version. Supplementary<ref type="figure">Figure S1</ref>shows the difference of execution times between the original and the grid optimized FTDock versions, as well as the stability in terms of time of the parallel version using the grid size optimization. The server runs on a multi-user cluster with two nodes. Each node has 16 cores (4 Intel Xeon E5620 Quad Core) at 2.4 GHz. Two cores are reserved for MySQL, JBoss and interactive shells. Physical memory is 65 GB, with 11 TB of total available disk space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">BENCHMARKING AND DISCUSSION</head><p>The pyDockWEB server provides a user-friendly web front-end to allow the academic community to use the pyDock rigid-body docking and scoring method. The user is notified on completion of the execution and is able to visualize online the top 10 models of the predicted complex using Jmol. We have evaluated the performance of pyDockWEB server on the standard protein– protein docking benchmark 4.0 (<ref type="bibr" target="#b5">Hwang et al., 2010</ref>). The quality of the results in terms of generated near-native solutions (ligand RMSD within 10 A ˚ from that in the X-ray complex structure) has not been affected by the optimization and implementation procedure, and the top 10 success rate (i.e. number of cases with near-native solutions within top 10 scored poses) reached 17.0% (Supplementary<ref type="figure">Table S1</ref>), in line with previous benchmarks (<ref type="bibr" target="#b2">Cheng et al., 2007;</ref><ref type="bibr" target="#b9">Pons et al., 2010b</ref>). This performance is comparable with other reported servers, as shown on available protein–protein targets from current CAPRI edition (Supplementary<ref type="figure">Table S2</ref>). Interestingly, sampling with FTDock with the new custom parallel and variable grid size implementation achieved speed-ups of up to 181 (50 as average) with respect to the default FTDock distribution, whereas the scoring process based on the new pyDock version 3 achieved speed-ups of up to 40 (38 as average) with respect to the previously available version (<ref type="bibr" target="#b2">Cheng et al., 2007</ref>). Additional pyDock modules and new developments are planned to be implemented in pyDockWEB in the future: patch prediction (pyDockNIP), optimal docking area (pyDockODA), domain–domain assembly (pyDockTET) and SIPPER scoring energy (pyDockSIPPER).</p></div>
			<note place="foot">ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">pyDockWEB at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The authors would like to thank Dmitry Repchevsky for his invaluable help and experience designing and implementing Java Server Faces web applications, and all the different users that have collaborated in testing and giving feedback to improve the server. Funding: Spanish Ministry of Science and Innovation<ref type="bibr">[BIO201022324]</ref>. Conflict of Interest: none declared.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">MPICH-V2: a fault tolerant MPI for volatile nodes based on pessimistic sender based message logging</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Bouteiller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SC2003 ACM/IEEE conference on Supercomputing</title>
		<meeting>the SC2003 ACM/IEEE conference on Supercomputing<address><addrLine>Phoenix, AZ, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Efficient restraints for protein-protein docking by comparison of observed amino acid substitution patterns with those predicted from local environment</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Chelliah</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">357</biblScope>
			<biblScope unit="page" from="1669" to="1682" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">pyDock: electrostatics and desolvation for effective scoring of rigid-body protein-protein docking</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">M</forename>
				<surname>Cheng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="503" to="515" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">FFTW: an adaptive software architecture for the FFT</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Frigo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">G</forename>
				<surname>Johnson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. IEEE Int. Conf. Acoust. Speech. Signal Process</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1381" to="1384" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Modelling protein docking using shape complementarity, electrostatics and biochemical information</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">A</forename>
				<surname>Gabb</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="106" to="120" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Protein-protein docking benchmark version 4.0</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Hwang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="page" from="3111" to="3114" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Prediction and scoring of docking poses with pyDock</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Grosdidier</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="852" to="858" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Assessment of blind predictions of protein-protein interactions: current status of docking methods</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Mendez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="51" to="67" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Optimization of pyDock for the new CAPRI challenges: docking of homology-based models, domain-domain assembly and proteinRNA binding</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Pons</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="page" from="3182" to="3188" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Present and future challenges and limitations in protein-protein docking</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Pons</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="page" from="95" to="108" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Recent progress and future directions in protein-protein docking</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">W</forename>
				<surname>Ritchie</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Protein Pept. Sci</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1" to="15" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>