
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:58+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Gene expression switchBox: an R package for k–Top Scoring Pairs classifier development</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2015">2015</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Bahman</forename>
								<surname>Afsari</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Oncology</orgName>
								<orgName type="department" key="dep2">School of Medicine</orgName>
								<orgName type="institution" key="instit1">Sidney Kimmel Comprehensive Cancer Center</orgName>
								<orgName type="institution" key="instit2">Johns Hopkins University</orgName>
								<address>
									<postCode>21205</postCode>
									<settlement>Baltimore</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Elana</forename>
								<forename type="middle">J</forename>
								<surname>Fertig</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Oncology</orgName>
								<orgName type="department" key="dep2">School of Medicine</orgName>
								<orgName type="institution" key="instit1">Sidney Kimmel Comprehensive Cancer Center</orgName>
								<orgName type="institution" key="instit2">Johns Hopkins University</orgName>
								<address>
									<postCode>21205</postCode>
									<settlement>Baltimore</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Donald</forename>
								<surname>Geman</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Oncology</orgName>
								<orgName type="department" key="dep2">School of Medicine</orgName>
								<orgName type="institution" key="instit1">Sidney Kimmel Comprehensive Cancer Center</orgName>
								<orgName type="institution" key="instit2">Johns Hopkins University</orgName>
								<address>
									<postCode>21205</postCode>
									<settlement>Baltimore</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Luigi</forename>
								<surname>Marchionni</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Oncology</orgName>
								<orgName type="department" key="dep2">School of Medicine</orgName>
								<orgName type="institution" key="instit1">Sidney Kimmel Comprehensive Cancer Center</orgName>
								<orgName type="institution" key="instit2">Johns Hopkins University</orgName>
								<address>
									<postCode>21205</postCode>
									<settlement>Baltimore</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Janet</forename>
								<surname>Kelso</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Applied Mathematics and Statistics</orgName>
								<orgName type="institution">Johns Hopkins University</orgName>
								<address>
									<postCode>21218</postCode>
									<settlement>Baltimore</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Gene expression switchBox: an R package for k–Top Scoring Pairs classifier development</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">31</biblScope>
							<biblScope unit="issue">2</biblScope>
							<biblScope unit="page" from="273" to="274"/>
							<date type="published" when="2015">2015</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btu622</idno>
					<note type="submission">Received on April 23, 2014; revised on August 13, 2014; accepted on September 12, 2014</note>
					<note>Associate Editor: Contact: bahman@jhu.edu Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>k–Top Scoring Pairs (kTSP) is a classification method for prediction from high-throughput data based on a set of the paired measurements. Each of the two possible orderings of a pair of measurements (e.g. a reversal in the expression of two genes) is associated with one of two classes. The kTSP prediction rule is the aggregation of voting among such individual two-feature decision rules based on order switching. kTSP, like its predecessor, Top Scoring Pair (TSP), is a parameter-free classifier relying only on ranking of a small subset of features, rendering it robust to noise and potentially easy to interpret in biological terms. In contrast to TSP, kTSP has comparable accuracy to standard genomics classification techniques, including Support Vector Machines and Prediction Analysis for Microarrays. Here, we describe &apos;switchBox&apos;, an R package for kTSP-based prediction. Availability: The &apos;switchBox&apos; package is freely available from Bioconductor: http://www.bioconductor.org.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Finding 'omics'-based biomarkers for clinical use has been extensively studied in numerous diseases. However, mature clinical applications of these biomarkers are scarce due to technological, mathematical and translational barriers (<ref type="bibr">Winslow et al., 2012</ref>). Basing the prediction solely on the ordering of a small number of features (e.g. gene expression ranks within profiles) may overcome such barriers to clinical translation (<ref type="bibr">Eddy et al., 2010</ref>). Rank-based classifiers are robust to data normalization and yield transparent decision rules (<ref type="bibr">Eddy et al. 2010</ref>). The first and simplest of these rank-based methods, the Top Scoring Pair (TSP) classifier, in which the decision rule is entirely determined by the ordering of two features (i.e. the relative expression of two genes), was introduced in<ref type="bibr">Geman et al. (2004)</ref>. Multiple extensions to TSP were proposed [e.g.<ref type="bibr">Lin et al. (2009)</ref>;<ref type="bibr">Tan et al. (2005)]</ref>and some have been successfully applied to human cancer such as simplifying clinical biomarkers (<ref type="bibr">Marchionni et al., 2013</ref>). A theoretical analysis, R implementation and description of the TSP algorithm can be found in<ref type="bibr">Denis (2013;</ref><ref type="bibr"></ref>http://hal.archives-ouvertes.fr/docs/00/78/48/69/PDF/Article.pdf), Leek (2009) and Leek (2014), respectively. One powerful successor of TSP is k–Top Scoring Pairs (kTSP;<ref type="bibr">Tan et al., 2005</ref>), which applies majority voting among multiple pairs of features. kTSP has outperformed Support Vector Machines in an open challenge for cancer classification (<ref type="bibr">Geman et al., 2008</ref>) and yielded comparable accuracy to the Mammaprint breast cancer assay (<ref type="bibr">Marchionni et al., 2013</ref>). Here, we introduce an R package, 'switchBox', for kTSP. This package selects the gene pairs for the kTSP decision rule. The package also implements a new approach to choose the number of pairs, k, based on the analysis of variance introduced in<ref type="bibr">Afsari et al. (2014)</ref>, which is less computationally intensive and less prone to overfitting than the original method introduced in<ref type="bibr">Tan et al. (2005)</ref>and implemented in the R 'ktspair' package (<ref type="bibr">Damond, 2011</ref>). In addition, 'switchBox' provides more flexibility in the selection of candidate ranges of k, as well as alternative strategies for pair votes aggregation compared with the previous R implementation (<ref type="bibr">Damond, 2011</ref>). Finally, 'switchBox' has a method for calculating sample-specific scores based on the pairs (see Methods), which can be extended beyond classification to class discovery problems.where I is the logical indicator function. The kTSP classification decision is based on thresholding , i.e. ^ Y=If4g provided the labels Y 2 f0; 1g. The standard threshold is = k 2 , equivalent to majority voting. The only parameters required for calculating are the number and choice of feature pairs. In the introductory paper to TSP (<ref type="bibr">Geman et al., 2004</ref>), the authors proposed a score for each pair of features, which measures the discriminative power of a two-feature comparison. The score assigned to genes i and j was defined as s ij =jP ðX i 5X j jY=1Þ À P ðX i 5X j jY=0Þj:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>The first training algorithm proposed for training kTSP, i.e. for finding Y, was an ad hoc method based on the score (<ref type="bibr">Tan et al., 2005</ref>). The 'switchBox' package implements a formal method of feature selection based on analysis of variance (<ref type="bibr">Afsari et al., 2014</ref>). Briefly, this *To whom correspondence should be addressed. method selects the feature pairs maximizing the distance between the expectation of in each group normalized by the variance. The target set of feature pairs is then</p><formula>Y Ã =argmax Y E ððYÞjY=1Þ À E ððYÞjY=0Þ ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi Var ððYÞjY=1Þ+Var ððYÞjY=0Þ p : ð2Þ</formula><p>This method as implemented in 'switchBox' uses a greedy search for Y Ã for computational efficiency. This search process simultaneously selects the optimal number of features, requiring only an upper bound on the number of feature pairs as input. To find Y Ã , we optimize Equation (2) greedily and with empirical estimates from the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">IMPLEMENTATION</head><p>For computational efficiency and speed, 'switchBox' calculates the score between all feature pairs using C routines. The user can directly calculate the score of a desired set of features or feature pairs by invoking the SWAP.CalculateSignedScore function. The package provides a training function (SWAP. KTSP.Train) for the classifier and a function (SWAP.KTSP.Classify) for predicting the label of an unseen sample. The training function allows the user to filter either the individual features or the feature pairs, thereby reducing the variability in the learned decision rules. The package also provides a function (SWAP.CalculateSignedScore) to calculate the pairwise scores from any subset of features or subset of feature pairs. Below we briefly show how to train a kTSP classifier for breast cancer recurrence within 5 years using gene expression data from<ref type="bibr">Marchionni et al. (2013)</ref>, described in further detail in the 'switchBox' package vignette. First, we load the example training and testing gene expression data contained in the 'switchBox' package. We then train the classifier and compute the confusion matrix for predictions on the test samples as follows:We have found that the kTSP classifier from 'switchBox' is more robust and inferred at greater computational speed than that from the 'ktspair' R package (Supplementary Document). In addition, 'switchBox' provides an additional function SWAP.KTSP.Statistics to calculate kTSP statistics, i.e. in Equation (1). This function is useful for generating ROC curves and for calculating ranked-based statistics from TSPs found in the classifier. For example, the code below generates a heatmap to depict classification results for each pair in the classifier (<ref type="figure">Fig. 1</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSION</head><p>We introduced 'switchBox', an R package for kTSP classifier with a robust procedure for pair selection as previously described in<ref type="bibr">Afsari et al. (2014</ref><ref type="bibr">). As mentioned in Afsari et al. (2014</ref>, the procedure requires less computation and is less prone to overfitting than the one described in<ref type="bibr">Tan et al. (2005)</ref>and implemented in 'ktspair' package (<ref type="bibr">Damond, 2011</ref>). Moreover, we provide functions for calculating auxiliary statistics as well as any user-defined combination of the comparisons.<ref type="figure">1</ref>. The comparisons votes (y-axis) versus samples (x-axis). The samples are labeled either good prognosis or bad prognosis for breast cancer. Truth and falsehood of the comparisons are indicated by blue (lighter shade) and red (darker shade), respectively. The combination of the votes can be used to classify, illustrated by requiring at least three votes for declaring bad prognosis. More explanation and code for this figure can be found in the Supplementary Document</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>kTSP decision is based on k feature (e.g. gene) pairs, denoted by Y=fði 1 ; j 1 Þ;. .. ; ði k ; j k Þg. We also denote the feature profile by X=ðX 1 ; X 2 ;.. .Þ. The particular decision rule using the k comparisons X il 5X jl is simply determined by the aggregate vote statistic = X k l=1 IðX il 5X jl Þ; ð1Þ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>###Loading training and test data data(matTraining) data(matTesting) ### Training kTSP and classifying new samples classifier 5-SWAP.KTSP.Train(matTraining, trainingGroup) testPrediction5-SWAP.KTSP.Classify(matTesting, classifier) ### Making confusion matrix table(testPrediction, testingGroup)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><figDesc>Funding: L.M. was supported by the National Institutes of Health (NIH-)NCI [P30 CA006973]; L.M. and E.J.F. by the Cleveland Foundation The Helen Masenhimer Fellowship Award; B.A. and D.G. by the NIH-NCRR [UL1 RR 025005]. E.J.F. and B.A. by NIH-NCI [K25 CA141053]. Conflict of interest: none declared. REFERENCES Afsari,B. et al. (2014) Rank discriminants for predicting phenotypes from RNA expression. Ann. Appl. Stat. Damond,J. (2011) ktspair: k-Top Scoring Pairs for Microarray Classification. R package version 1.0, CRAN. Denis,C. (2013) Top Scoring Pair Classifiers: Asymptotics and Applications, in archive. Eddy,J.A. et al. (2010) Relative expression analysis for molecular cancer diagnosis, prognosis. Technol. Cancer Res. Treat., 9, 149–159. Geman,D. et al. (2004) Classifying gene expression profiles from pairwise mrna comparisons. Stat. Appl. Genet. Mol. Biol., 3. Article19. Geman,D. et al. (2008) Microarray Classification from Several Two-gene Experssion Comparisons, ICMLA, San Diego, CA, IEEE (Winner, ICMLA Microarray Classification Algorithm Competition). Leek,J. (2014) tspair: top scoring pairs for microarray classification. R package version 1.22.0, Bioconductor. Leek,J.T. (2009) The tspair package for finding top scoring pair classifiers in r. Bioinformatics, 25, 1203–1204. Lin,X. et al. (2009) The ordering of expression among a few genes can provide simple cancer biomarkers and signal brca1 mutations. BMC Bioinformatics, 10, 256. Marchionni,L. et al. (2013) A simple and reproducible breast cancer prognostic test. BMC Genomics, 14, 336. Tan,A.C. et al. (2005) Simple decision rules for classifying human cancers from gene expression profiles. Bioinformatics, 21, 3896–3904. Winslow,R. et al. (2012) The emerging discipline of computational medicine. Sci. Transl. Med., 4, 158rv11.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.</head><figDesc>Fig. 1. The comparisons votes (y-axis) versus samples (x-axis). The samples are labeled either good prognosis or bad prognosis for breast cancer. Truth and falsehood of the comparisons are indicated by blue (lighter shade) and red (darker shade), respectively. The combination of the votes can be used to classify, illustrated by requiring at least three votes for declaring bad prognosis. More explanation and code for this figure can be found in the Supplementary Document</figDesc></figure>

			<note place="foot">ß The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com</note>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">B.Afsari et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>