
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:31+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis VAT: a computational framework to functionally annotate variants in personal genomes within a cloud-computing environment</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012-06-28">Advance Access publication June 28, 2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Lukas</forename>
								<surname>Habegger</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Program in Computational Biology and Bioinformatics</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Suganthi</forename>
								<surname>Balasubramanian</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Program in Computational Biology and Bioinformatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Molecular Biophysics and Biochemistry</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">David</forename>
								<forename type="middle">Z</forename>
								<surname>Chen</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Yale University</orgName>
								<address>
									<postCode>06520</postCode>
									<settlement>New Haven</settlement>
									<region>CT</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Ekta</forename>
								<surname>Khurana</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Program in Computational Biology and Bioinformatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Molecular Biophysics and Biochemistry</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Andrea</forename>
								<surname>Sboner</surname>
							</persName>
							<affiliation key="aff3">
								<orgName type="department">Department of Pathology and Laboratory Medicine</orgName>
								<orgName type="institution">Weill Cornell Medical College</orgName>
								<address>
									<postCode>10065</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
								</address>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="department">Institute for Computational Biomedicine</orgName>
								<orgName type="institution">Weill Cornell Medical College</orgName>
								<address>
									<postCode>10021</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Arif</forename>
								<surname>Harmanci</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Program in Computational Biology and Bioinformatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Molecular Biophysics and Biochemistry</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Joel</forename>
								<surname>Rozowsky</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Program in Computational Biology and Bioinformatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Molecular Biophysics and Biochemistry</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Declan</forename>
								<surname>Clarke</surname>
							</persName>
							<affiliation key="aff5">
								<orgName type="department">Department of Chemistry</orgName>
								<orgName type="institution">Yale University</orgName>
								<address>
									<postCode>06520</postCode>
									<settlement>New Haven</settlement>
									<region>CT</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Michael</forename>
								<surname>Snyder</surname>
							</persName>
							<affiliation key="aff6">
								<orgName type="department">Department of Genetics</orgName>
								<orgName type="institution">Stanford University School of Medicine</orgName>
								<address>
									<postCode>94305</postCode>
									<settlement>Stanford</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mark</forename>
								<surname>Gerstein</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Program in Computational Biology and Bioinformatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Molecular Biophysics and Biochemistry</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Yale University</orgName>
								<address>
									<postCode>06520</postCode>
									<settlement>New Haven</settlement>
									<region>CT</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genome analysis VAT: a computational framework to functionally annotate variants in personal genomes within a cloud-computing environment</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">28</biblScope>
							<biblScope unit="issue">2012</biblScope>
							<biblScope unit="page" from="2267" to="2269"/>
							<date type="published" when="2012-06-28">Advance Access publication June 28, 2012</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts368</idno>
					<note type="submission">Received on January 6, 2012; revised on May 25, 2012; accepted on June 24, 2012</note>
					<note>Copyedited by: MANUSCRIPT CATEGORY: APPLICATIONS NOTE [11:30 9/8/2012 Bioinformatics-bts368.tex] Page: 2267 2267–2269 Associate Editor: Michael Brudno Supplementary Information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>The functional annotation of variants obtained through sequencing projects is generally assumed to be a simple intersection of genomic coordinates with genomic features. However, complexities arise for several reasons, including the differential effects of a variant on alternatively spliced transcripts, as well as the difficulty in assessing the impact of small insertions/deletions and large structural variants. Taking these factors into consideration, we developed the Variant Annotation Tool (VAT) to functionally annotate variants from multiple personal genomes at the transcript level as well as obtain summary statistics across genes and individuals. VAT also allows visualization of the effects of different variants, integrates allele frequencies and genotype data from the underlying individuals and facilitates comparative analysis between different groups of individuals. VAT can either be run through a command-line interface or as a web application. Finally, in order to enable on-demand access and to minimize unnecessary transfers of large data files, VAT can be run as a virtual machine in a cloud-computing environment. Availability and Implementation: VAT is implemented in C and PHP. The VAT web service, Amazon Machine Image, source code and detailed documentation are available at vat.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Recent technological advances have significantly reduced the cost of DNA sequencing and have made it possible to sequence complete genomes on a large scale. Currently, a number of efforts aim to sequence and genotype large numbers of individual genomes (<ref type="bibr">The 1000</ref><ref type="bibr">Genomes Project Consortium, 2010</ref>). These studies have already revealed many novel single nucleotide polymorphisms * To whom correspondence should be addressed. † The authors wish it to be known that, in their opinion, the first three authors should be regarded as joint First Authors.</p><p>(SNPs), multi-nucleotide polymorphisms (MNPs), small insertions and deletions (indels) and structural variants (SVs). In order to assess the functional impact of identified variants, a key objective is to determine whether those variants intersect with annotated elements. However, the intersection of variants with a gene annotation set is non-trivial (<ref type="bibr" target="#b0">Balasubramanian et al., 2011</ref>). First, a variant may affect only a subset of the possible transcript isoforms of a given gene or it may have different effects on alternatively spliced transcripts. For example, a variant can affect the coding region of one transcript and overlap the canonical splice site of another. In addition, for cases in which neighboring SNPs (i.e. MNPs) lie within the same codon, one must assess both SNPs simultaneously to evaluate the resultant codon change, as considering each independently could give rise to erroneous codon changes. Second, indels in coding regions can either preserve the frame or introduce frameshifts. They can also partially overlap coding exons, thereby impairing splice sites as well as coding regions. Assessing the functional impact in such cases is especially challenging. Lastly, large SVs can have drastic effects on the structure of a gene if exons are removed in whole or in part. As a result, it can be difficult to assess the overall functional impact of different types of variants on gene structures without having visual representations (Supplementary<ref type="figure" target="#fig_2">Fig. 1</ref>). To address these challenges, we have developed the Variant Annotation Tool (VAT). Like VAT, other tools have been implemented to assess the functional impact of variants (<ref type="bibr" target="#b3">Ng and Henikoff, 2003;</ref><ref type="bibr" target="#b4">Ramensky et al., 2002;</ref><ref type="bibr" target="#b6">Wang et al., 2010</ref>). One issue with these tools is that they are not cloud enabled. Cloud-computing provides immense storage capacity and scalable compute resources as well as the ability to share data and perform collaborative analyses. Given the increasing rate of data production, many foresee that sequencing reads will be stored on the cloud. In addition, the importance of software residing in the same space as the data on which it operates requires that the analysis pipelines processing these reads migrate to the cloud as well. Thus, as VAT will constitute an integral part of such pipelines, having it reside on the cloud will be necessary. Thus, we provide VAT as a virtual machine (VM) that can be run within a cloud-computing environment (including that operated by Amazon) to take advantage of the scalability and unlimited storageof the VAT web application. The web application may be accessed through the browser or a JSON-based interface. The I/O layer of VAT takes advantage of the Amazon S3 service and stores all data in S3 buckets or, if S3 support is disabled, simply writes to a local disk. This architecture may also be easily scaled to use more sophisticated storage schemes, such as hashing across multiple input and output buckets. (C) The VAT EC2 cloud service is implemented in a service-oriented architecture consisting of a master node and a number of worker nodes. The master node hosts the user-facing interface and delegates tasks on behalf of the user to the worker nodes capacity offered by this framework. The utility of VAT has been demonstrated by its extensive use in annotating the loss-of-function variants obtained as part of the 1000 Genomes Project (<ref type="bibr" target="#b2">MacArthur et al., 2012</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>L.Habegger et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Annotation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Detailed Summary of Annotated Variants</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">FEATURES AND METHODS</head><p>VAT is implemented in C for efficiency, and consists of a number of modules to pre-process gene annotation sets, intersect variants from multiple individuals with both coding and non-coding genes, generate summary statistics across these individuals and at the single gene level and provide clear visualization summarizing the functional impact of the annotated variants. The overall workflow is depicted in<ref type="figure" target="#fig_2">Figure 1A</ref>. A number of modules in VAT relate variants to protein-coding genes (snpMapper, indelMapper and svMapper) and non-coding elements (genericMapper). These four core modules use an annotation set and a set of variants from multiple individuals as inputs. The variants are typically represented using the Variant Call Format (VCF;<ref type="bibr" target="#b1">Danecek et al., 2011</ref>). A key feature of VAT is that the annotation is performed at the transcript level to determine whether all or only a subset of the transcript isoforms of a gene is affected. Therefore, the output explicitly shows which isoforms are affected by each variant and provides detailed information about the location of a given variant within a transcript as well as the variant's effect on its coding potential. In addition, a principal advantage of VAT lies in its ability to annotate MNPs. Moreover, VAT can be executed using gene annotation sets and genome builds beyond human, such as Arabidopsis thaliana. VAT contains a number of utilities for the downstream analysis of annotated variants. For instance, an auxiliary module generates detailed summaries of annotated variants across multiple individuals as well as at the level of single genes. For variants intersecting protein-coding genes, VAT includes a module for generating an image for each gene to give a clear overview. This schematic representation displays the various transcript isoforms of a gene, which are superimposed with the annotated variants (<ref type="figure" target="#fig_2">Fig. 1A</ref>). As shown in<ref type="figure" target="#fig_2">Figure 1B</ref>, VAT uses the Amazon web services cloud-computing platform. Each instance comprises a commandline executable of the VAT pipeline and a PHP web application, which serves as the user interface and driver for the pipeline. The VAT I/O abstraction layer may be customized using the configuration file to take advantage of Amazon's simple storage service (S3). With S3 support enabled, VAT reads input from a bucket storing raw VCF files and stores output in another bucket. Otherwise, VAT reads and writes locally. The VAT cloud service uses the Amazon Elastic Compute Cloud (EC2) platform, and it is implemented in a service-oriented architecture consisting of a master node and a number of worker nodes. Each node consists of a VAT installation running on an EC2 VM (<ref type="figure" target="#fig_2">Fig. 1C</ref>). The master node hosts user-facing web components and serves as a load balancer for the worker nodes. A user action is forwarded by the master node as a request to one of the worker nodes. Each worker node communicates with the S3 buckets and reports updates to the master node asynchronously. VAT also uses the Amazon EC2 API to allow the master node to dynamically create worker instances. Intensive batch requests may thus be parallelized and handled efficiently. The S3 buckets' growing data are then available for further analyses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">CONCLUSIONS</head><p>In summary, VAT offers a combination of unique advantages in variant annotation. First, VAT operates as a VM in a cloudcomputing environment, which is likely to serve as the future framework for the collaborative analysis of rapidly growing datasets. Second, VAT provides a novel means of clearly visualizing the functional impact of variants across different transcript isoforms of a given gene. Third, VAT can be used to functionally annotate MNPs, which has often been challenging. Fourth, VAT provides output files in VCF format. This readily facilitates the post-processing of output files with tools that are already widely used by the community, such as those used for variant filtering. Given that VAT has been an integral part of many analyses conducted as part of the 1000 Genomes Project, we believe that it will be of broad utility in other research contexts.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>Preprocessing of Annotation Sets, Visualization &amp; Summarization of Annotated Variants</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.1.</head><figDesc>Fig. 1. (A) VAT comprises a number of modules that relate variants to both protein-coding genes and non-coding elements. These modules use a set of variants and an annotation set as inputs to generate annotated VCFs. (B) Architecture of the VAT web application. The web application may be accessed through the browser or a JSON-based interface. The I/O layer of VAT takes advantage of the Amazon S3 service and stores all data in S3 buckets or, if S3 support is disabled, simply writes to a local disk. This architecture may also be easily scaled to use more sophisticated storage schemes, such as hashing across multiple input and output buckets. (C) The VAT EC2 cloud service is implemented in a service-oriented architecture consisting of a master node and a number of worker nodes. The master node hosts the user-facing interface and delegates tasks on behalf of the user to the worker nodes</figDesc></figure>

			<note place="foot">© The Author(s) 2012. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="2269"> at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head><p>We thank Raymond Auerbach for critical reading of this article.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2268</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Gene inactivation and its implications for annotation in the era of personal genomics</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Balasubramanian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genes Dev</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">The variant call format and VCFtools</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Danecek</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="2156" to="2158" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">A systematic survey of loss-of-function variants in human protein-coding genes</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">G</forename>
				<surname>Macarthur</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">335</biblScope>
			<biblScope unit="page" from="823" to="828" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">SIFT: predicting amino acid changes that affect protein function</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">C</forename>
				<surname>Ng</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Henikoff</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="3812" to="3814" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Human non-synonymous SNPs: server and survey</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Ramensky</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="3894" to="3900" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">A map of human genome variation from population-scale sequencing</title>
	</analytic>
	<monogr>
		<title level="m">The 1000 Genomes Project Consortium</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1061" to="1073" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">ANNOVAR: functional annotation of genetic variants from highthroughput sequencing data</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Wang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page">164</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>