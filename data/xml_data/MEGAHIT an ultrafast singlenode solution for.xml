
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:43+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">MEGAHIT: an ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Dinghua</forename>
								<surname>Li</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">HKU-BGI Bioinformatics Algorithms Research Laboratory</orgName>
								<orgName type="institution">University of Hong Kong</orgName>
								<address>
									<settlement>Hong Kong</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Chi-Man</forename>
								<surname>Liu</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="laboratory">L3 Bioinformatics Limited</orgName>
								<address>
									<settlement>Hong Kong</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Ruibang</forename>
								<surname>Luo</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="laboratory">L3 Bioinformatics Limited</orgName>
								<address>
									<settlement>Hong Kong</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Kunihiko</forename>
								<surname>Sadakane</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="institution">National Institute of Informatics</orgName>
								<address>
									<addrLine>Chiyoda-ku</addrLine>
									<settlement>Tokyo</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Tak-Wah</forename>
								<surname>Lam</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">HKU-BGI Bioinformatics Algorithms Research Laboratory</orgName>
								<orgName type="institution">University of Hong Kong</orgName>
								<address>
									<settlement>Hong Kong</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="laboratory">L3 Bioinformatics Limited</orgName>
								<address>
									<settlement>Hong Kong</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">MEGAHIT: an ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btv033</idno>
					<note type="submission">Received on September 25, 2014; revised on December 17, 2014; accepted on January 14, 2015</note>
					<note>Sequence analysis *To whom correspondence should be addressed. † The authors wish it to be known that, in their opinion, the first three authors should be regarded as Joint First Authors. Associate Editor: Inanc Birol Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>MEGAHIT is a NGS de novo assembler for assembling large and complex metagenomics data in a time-and cost-efficient manner. It finished assembling a soil metagenomics dataset with 252 Gbps in 44.1 and 99.6 h on a single computing node with and without a graphics processing unit, respectively. MEGAHIT assembles the data as a whole, i.e. no pre-processing like partitioning and normalization was needed. When compared with previous methods on assembling the soil data, MEGAHIT generated a three-time larger assembly, with longer contig N50 and average contig length; furthermore, 55.8% of the reads were aligned to the assembly, giving a fourfold improvement. Availability and implementation: The source code of MEGAHIT is freely available at https://github. com/voutcn/megahit under GPLv3</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Next generation sequencing technologies have offered new opportunities to study metagenomics and understand various microbial communities such as human guts, rumen and soil. Due to the lack of reference genomes, de novo assembly of metagenomics data (short reads) is a beneficial and almost inevitable step for metagenomics analysis (<ref type="bibr" target="#b9">Qin et al., 2010</ref>). This step is, however, constrained by the heavy requirement of computational resources, especially for large and complex datasets encountered in environmental metagenomics (<ref type="bibr" target="#b4">Howe et al., 2014</ref>). The soil metagenomics dataset recently published by Howe et al. comprises 252 Gbp even after trimming low quality bases. The dataset was successfully assembled with preprocessing steps including partitioning and digital normalization. At present no de novo assembler can assemble the data as a whole using a feasible amount of computer memory. Estimated memory requirement for SOAPdenovo2 (<ref type="bibr" target="#b7">Luo et al., 2012</ref>) and IDBA-UD (<ref type="bibr" target="#b8">Peng et al., 2012</ref>) to assemble the soil data is at least 4 TB. As the volume of metagenomics data keeps growing, we are motivated to develop MEGAHIT, an assembler that can assemble large and complex metagenomics data in a time-and cost-efficient manner, especially on a single-node server (current maximum memory capacity 768 GB for a 2-socket server).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Methods</head><p>MEGAHIT makes use of succinct de Bruijn graphs (SdBG;<ref type="bibr" target="#b1">Bowe et al., 2012</ref>), which are compressed representation of de Bruijn graphs. A SdBG encodes a graph with m edges in O(m) bits, and supports O(1) time traversal from a vertex to its neighbors. Our implementation has added a bit-vector of length m to mark the validityof each edge (so as to support dynamic removal of edges efficiently), and an auxiliary vector of 2kt bits (where k is the k-mer size and t is the number of zero-indegree vertices) to store the sequence of zeroindegree vertices to ensure the graph being lossless. Despite its advantages, constructing a SdBG efficiently is nontrivial. MEGAHIT is rooted in a fast parallel algorithm for SdBG construction; the bottleneck is sorting a set of (kþ1)-mers that are the edges of an SdBG in reverse lexicographical order of their length-k prefixes (k-mers). MEGAHIT exploits the parallelism of a graphics processing unit (GPU, CUDA-enabled) by adapting the recent BWT-construction algorithm CX1 (<ref type="bibr" target="#b6">Liu et al., 2014</ref>), which takes advantage of a GPU to sort the suffices of a set of reads very efficiently. Limited by the relatively small size of GPU's on-board memory, we adopt a block-wise strategy that partitions the k-mers according to their length-l prefix (l ¼ 8 in our implementation). The k-mers in consecutive partitions that fit within the GPU memory are sorted together. Leveraging the parallelism of GPU, MEGAHIT speeds up the construction by 3–5 times over its CPU-only counterpart. Notably, sequencing error is problematic, because a single base of sequencing error leads to k erroneous k-mer singletons, which increases the memory consumption of MEGAHIT significantly. To cope with the problem, before graph construction, all (k þ 1)-mers from the input reads are sorted and counted, and only (k þ 1)-mers that appear at least d (2 by default) times are kept as solid-kmer. This method removes many spurious edges, but may be risky for metagenomics assembly since many low-abundance species may have been sequenced at very low depth. Thus we introduce a mercykmer strategy to recover these low-depth edges. Given two solid (k þ 1)-mers x and y from the same read, where x has no outdegree and y has no indegree. If all (k þ 1)-mers between x and y in that read are not solid, they will be added to the de Bruijn graph as mercy-kmers. Mercy-kmers strengthen the contiguity of low-depth regions. Without this approach, many authentic low-depth edges would be incorrectly identified as tips and removed. Based on SdBG, we implemented a multiple k-mer size strategy in MEGAHIT (<ref type="bibr" target="#b8">Peng et al., 2012</ref>). The method iteratively builds multiple SdBGs from a small k to a large k. While a small k-mer size is favourable for filtering erroneous edges and filling gaps in lowcoverage regions, a large k-mer size is useful for resolving repeats. In each iteration, MEGAHIT cleans potentially erroneous edges by removing tips, merging bubbles and removing low local coverage edges. The last approach is especially useful for metagenomics, which suffers from non-uniform sequencing depths. The overall workflow of MEGAHIT is shown in<ref type="figure" target="#fig_0">Figure 1</ref>.<ref type="figure" target="#tab_1">Table 1</ref>compares the performance of MEGAHIT with SPAdes (<ref type="bibr" target="#b0">Bankevich et al., 2012</ref>) on three subsets (100-fold, 20-fold and 10-fold) of an E.coli MG1655 dataset. QUAST (<ref type="bibr" target="#b3">Gurevich et al., 2013</ref>) was used to evaluate the assembled contigs (<ref type="figure" target="#tab_1">Table 1</ref>). MEGAHIT (CPU version) is six times faster than SPAdes, and performs well even on the low-coverage subset. To evaluate the performance on large scale metagenomics data, we assembled an Iowa prairie soil metagenomics dataset that comprises 3.3 billion reads totaling 252 billion base-pairs (<ref type="bibr" target="#b4">Howe et al., 2014</ref>) using MEGAHIT and Minia, another memory-efficient assembler (<ref type="bibr" target="#b2">Chikhi and Rizk, 2012</ref>). The assembly conducted by Howe et al. was included for comparison (<ref type="figure" target="#tab_2">Table 2</ref>). On a server with 384 GB memory, MEGAHIT took 44.1 h, $7 times faster than Minia. It reached peak memory consumption at 345 GB during k-mer counting and SdBG construction; this matches the expectation since MEGAHIT's sorting module automatically adjusts to fully utilize all available memory in a server. Notably, MEGAHITcan assemble this dataset with as little as 260 GB memory, using 55.3 h (Supplementary Section 4). To be consistent with Howe's analysis, we only considered contigs ! 300 bp for further analysis. The contigs produced by MEGAHIT had a total size at least three times larger than by other methods, and achieved better statistics on N50, average length, and the number of long contigs (length ! 1000 bp). Thus MEGAHIT gives better assembly contiguity. Raw reads were aligned back to the assembled contigs using Bowtie2 (<ref type="bibr" target="#b5">Langmead and Salzberg, 2012</ref>). As shown in<ref type="figure" target="#tab_3">Table 3</ref>, MEGAHIT gets &gt; 4 times more reads mapped and 5–6 times more read pairs properly aligned. 37% of distinct 17mers appeared ! 2 in the assembly, which might imply that MEGAHIT did a better job in recovering low-abundance subspecies in ultra-diversified metagenomics (Supplementary<ref type="figure">Fig. S3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions</head><p>MEGAHIT enables an efficient assembly of large and complex metagenomics data on a single server, while giving better completeness and contiguity. MEGAHIT is available in both CPU-only and GPU-accelerated versions. With GPU, the assembly time of the soil dataset is shortened from 4 days to less than 2 days.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. The workflow of MEGAHIT</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>MEGAHIT utilizes all 24 CPU threads with options '-k-min 27-k-max 87-k-step 10-m 370 000 000 000'. The wall time for CPU version of MEGAHIT is 99.4 h. Minia does not support multi-threads; it was run with k ¼ 31 and min_abundance ¼ 2. The time and memory of Howe et al. were excerpted from the paper; the time accounts for digital normalization and partitioning only.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>V C The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1674 Bioinformatics, 31(10), 2015, 1674–1676 doi: 10.1093/bioinformatics/btv033 Advance Access Publication Date: 20 January 2015 Applications Note</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 1. Performance of MEGAHIT and SPAdes on the E.coli dataset</figDesc><table>MEGAHIT 
100Â 

MEGAHIT 
20Â 

MEGAHIT 
10Â 

SPAdes 10Â 

N50 (bp) 
73 736 
52 352 
9067 
18 264 
Largest alignment (bp) 221k 
178k 
31k 
62k 
bp in contigs &gt; ¼ 1 kbp 4.55 M 
4.55 M 
4.52 M 
4.55 M 
Genome fraction 
98.0% 
98.1% 
97.4% 
97.9% 
Misassemblies (bp) 
2k 
41k 
81k 
64k 
Wall time (s) 
185 
82 
47 
318 

MEGAHIT: CPU version, options '--k-min 21 --k-max 81 -m 
1 000 000 000'; SPAdes and QUAST was run with default parameters. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><figDesc>Table 2. Summary statistics for MEGAHIT, Howe et al. and Minia</figDesc><table>MEGAHIT 
Howe et al. 
Minia 

Wall time (h) 
44.1 
&gt;488 
331.4 
Peak memory (GB) 
345 
287 
29 
Total size (Mbp) 
4902 
1503 
1490 
Average length (bp) 
633 
485 
505 
N50 (bp) 
657 
471 
488 
Longest (bp) 
184 210 
9397 
32 679 
# of contigs 
7 749 211 
3 096 464 
2 951 575 
# of contigs ! 1kbp 
841 257 
129 513 
158 402 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 3. Alignment statistics of MEGAHIT, Howe et al. and Minia</figDesc><table>MEGAHIT 
Howe et al. 
Minia 

Total # of reads 
3 252 369 195 
Reads overall aligned (%) 
55.81 
10.72 
13.03 
Total # of SE reads 
356 742 333 
SE aligned 1 time (%) 
37.00 
8.72 
12.38 
SE aligned &gt; 1 time (%) 
14.68 
0.32 
0.02 
Total # of PE reads 
1 447 813 431 
PE p. aligned 1 time (%) 
36.78 
7.41 
9.48 
PE p. aligned &gt; 1 time (%) 
8.90 
0.20 
0.01 
PE improperly aligned (%) 
2.67 
0.54 
0.82 

SE, single-end; PE, paired-end; p., properly; Bowtie2 were run with '-L 27'. </table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">D.Li et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors thank S.M. Yiu, C.M. Leung and Y. Peng for the detailed explanation about IDBA-UD. The authors also thank C. Titus Brown for providing the open evaluation with the E.coli data ().</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Funding</head><p>This work was funded by Hong Kong GRF (General Research Fund) HKU713512E and ITF (Innovation and Technology Fund) GHP/011/12. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript. Conflict of Interest: None declared.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Bankevich</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="455" to="477" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Succinct de Bruijn Graphs</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Bowe</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<editor>B., Raphael and J., Tang</editor>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="225" to="235" />
			<date type="published" when="2012" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Space-efficient and exact de Bruijn graph representation based on a bloom filter</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Chikhi</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Rizk</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Algorithms in Bioinformatics</title>
		<editor>B.,Raphael and J.,Tang</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="236" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">QUAST: quality assessment tool for genome assemblies</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gurevich</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1072" to="1075" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Tackling soil diversity with the assembly of large, complex metagenomes</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">C</forename>
				<surname>Howe</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="4904" to="4909" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Fast gapped-read alignment with Bowtie 2</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Langmead</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">L</forename>
				<surname>Salzberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="357" to="359" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<monogr>
		<title level="m" type="main">GPU-accelerated BWT construction for large collection of short reads</title>
		<author>
			<persName>
				<forename type="first">C.-M</forename>
				<surname>Liu</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<monogr>
		<title level="m" type="main">SOAPdenovo2: an empirically improved memory-efficient short-read de novo assembler</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Luo</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page">18</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">IDBA-UD: a de novo assembler for single-cell and metagenomic sequencing data with highly uneven depth</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Peng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="1420" to="1428" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">A human gut microbial gene catalogue established by metagenomic sequencing</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Qin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">464</biblScope>
			<biblScope unit="page" from="59" to="65" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>