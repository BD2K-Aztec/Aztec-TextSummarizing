
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:46+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis GeCo++: a C++ library for genomic features computation and annotation in the presence of variants</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011">2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Matteo</forename>
								<surname>Cereda</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Bioinformatics Lab</orgName>
								<orgName type="institution">Scientific Institute I.R.C.C.S. &apos;E. Medea&apos;</orgName>
								<address>
									<addrLine>Via Don L. Monza</addrLine>
									<postCode>23852</postCode>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Bosisio Parini (LC)</orgName>
								<address>
									<settlement>Italy</settlement>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Theoretical Physics</orgName>
								<orgName type="institution">University of Turin</orgName>
								<address>
									<addrLine>Via P. Giuria 1 -10125</addrLine>
									<settlement>Torino</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Manuela</forename>
								<surname>Sironi</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Bioinformatics Lab</orgName>
								<orgName type="institution">Scientific Institute I.R.C.C.S. &apos;E. Medea&apos;</orgName>
								<address>
									<addrLine>Via Don L. Monza</addrLine>
									<postCode>23852</postCode>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Bosisio Parini (LC)</orgName>
								<address>
									<settlement>Italy</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Matteo</forename>
								<surname>Cavalleri</surname>
							</persName>
							<affiliation key="aff3">
								<orgName type="department">Bioingineering Lab</orgName>
								<orgName type="institution">Scientific Institute I.R.C.C.S. &apos;E. Medea&apos;, Via Don L. Monza</orgName>
								<address>
									<postCode>23852</postCode>
									<settlement>Bosisio Parini (LC)</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Uberto</forename>
								<surname>Pozzoli</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Bioinformatics Lab</orgName>
								<orgName type="institution">Scientific Institute I.R.C.C.S. &apos;E. Medea&apos;</orgName>
								<address>
									<addrLine>Via Don L. Monza</addrLine>
									<postCode>23852</postCode>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Bosisio Parini (LC)</orgName>
								<address>
									<settlement>Italy</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genome analysis GeCo++: a C++ library for genomic features computation and annotation in the presence of variants</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">27</biblScope>
							<biblScope unit="issue">9</biblScope>
							<biblScope unit="page" from="1313" to="1315"/>
							<date type="published" when="2011">2011</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btr123</idno>
					<note type="submission">Received on December 15, 2010; revised on February 15, 2011; accepted on March 1, 2011</note>
					<note>[13:30 1/4/2011 Bioinformatics-btr123.tex] Page: 1313 1313â€“1315 Associate Editor: Martin Bishop freely available at http://bioinformatics.emedea.it/geco, under the GPL license. The library was written in standard ISO C++, and does not depend on external libraries. Contact: uberto.pozzoli@bp.lnf.it</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We propose a C++ class library developed to the purpose of making the implementation of sequence analysis algorithms easier and faster when genomic annotations and variations need to be considered. The library provides a class hierarchy to seamlessly bind together annotations of genomic elements to sequences and to algorithm results; it allows to evaluate the effect of mutations/variations in terms of both element position shifts and of algorithm results, limiting recalculation to the minimum. Particular care has been posed to keep memory and time overhead into acceptable limits. Availability and Implementation: A complete tutorial as well as a detailed doxygen generated documentation and source code is</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">MOTIVATION</head><p>Sequence analysis algorithms play a crucial role in the identification of genomic functional elements. Several algorithms have been and are being developed to identify putative binding sites for a great number of functional elements involved in many cellular processes. Algorithms are usually implemented through 'sequencedriven' programs: a sequence is provided upon which calculations are made and results are returned with a reference to sequence positions. In the great majority of cases the results need to be interpreted in the light of some functional element annotated elsewhere (transcripts, genes, intron/exon boundaries, etc.) or their significance can be improved by comparison with some other features such as sequence conservation among different species or chromatin accessibility. These are time-consuming tasks that are often implemented using specialized packages based on interpreted languages like, for example BioPerl (<ref type="bibr" target="#b14">Stajich et al., 2002</ref>) and Bioconductor (<ref type="bibr" target="#b7">Gentleman et al., 2004</ref>). The same holds true when sequence variations are involved in the analysis. Sequence-driven programs need multiple runs to make calculations on multiple input sequences: this often lead to redundant recalculations and data I/O operations. Again the comparison of the results between 'varied' and * To whom correspondence should be addressed. 'unvaried' sequences is left to the user. Furthermore, variations can change the positions of genomic elements of interest making the interpretation of the results even more difficult. Despite a number of efficient and feature-rich libraries and tools have been developed for sequence-driven algorithm implementation, the above-mentioned tasks are usually left to the user. The complexity of these tasks is a severe limitation to an extensive application of algorithms implemented in this way. Several useful bioinformatics workflow tools like Taverna (<ref type="bibr" target="#b11">Oinn et al., 2004</ref>), Gaggle (<ref type="bibr" target="#b13">Shannon et al., 2006</ref>) and Galaxy (<ref type="bibr" target="#b0">Blankenberg et al., 2010;</ref><ref type="bibr" target="#b8">Goecks et al., 2010</ref>), have been developed to automatize, standardize and speed up analyses and visualizations integrating different programs and data sources. These workflow management tools can be used to partially get around the above-mentioned limitations, but still they do not resolve the inefficiency of the sequence-driven software model, particularly in the frequent case of repeated runs on similar sequences. Moreover, there is an additional cost in terms of data formats conversion, I/O operations and script interpretation. On the other hand, most successful algorithms are employed to analyse entire genomes: results are collected in databases along with functional annotations and experimental data like in the UCSC Genome browser (<ref type="bibr" target="#b6">Fujita et al., 2010</ref>) and in Ensembl (<ref type="bibr" target="#b10">Hubbard et al., 2009</ref>). Genome browsers exploit these databases to give a useful, general and extensive picture of a genomic region features. Nevertheless, for any quantitative analysis, users have to query the underlying databases to fetch the data they need: a comparable situation to the one described above with the additional limitation that pre-computed algorithm results (often obtained under fixed default parameters) cannot be used to evaluate the effect of variations. We developed GeCo++ (Genomic computation C++ library), a C++ class library to the purpose of making easier and faster the efficient implementation of algorithms for sequence analysis when functional annotations and genomic variations need to be considered. The library is not intended as a substitute for more specialized libraries; instead it frees the programmers from the burden of keeping track of genomic annotations and variations, giving them the opportunity to use the libraries they prefer for specific fields like, for example Bio++ (<ref type="bibr" target="#b5">Dutheil et al., 2006</ref>) and seqAn (<ref type="bibr">DÃ¶ring et al., 2008</ref>) for general sequence analysis or libSequence (<ref type="bibr" target="#b15">Thornton, 2003</ref>) for population genetics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">IMPLEMENTATION</head><p>The library has been developed starting from the idea to represent and manage the numeric results of computational algorithmsPage: 1314 1313â€“1315</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M.Cereda et al.</head><p>keeping them tied to annotations of genomic elements (transcripts, binding sites, conserved regions, transposable elements, etc.), to their sequences and to genomic variations. It provides the definition of a genomic element model that tightly integrates information about genomic ranges, positions, genomic variations and computed/retrieved numerical features. The core idea of the model is to refer genomic ranges and positions to a reference sequence (e.g. a chromosome assembly) and to add a set of variations (substitutions, insertions and deletions) to represent actual elements (e.g. mutated ones, individual haplotypes, and so on). Based on this model the library provides the following capabilities: @BULLET memory efficient representation of alignments in terms of reference/variations: this can save a lot of memory especially when relatively few variations are involved; @BULLET automatic tracking of position changes introduced by insertions/deletions; @BULLET easy mapping of corresponding positions between different sequences; and @BULLET automatic recalculation of numerical features only where variations make it necessary thus avoiding unnecessary recalculations in unvaried regions.</p><p>A genomic element is defined as an interval of a given reference sequence in a given strand. Positions can be referred to the reference sequence (reference positions, unsigned values) or to the Element (element positions, signed values relative to the element start along its strand). Element sites are defined as particular element positions (e.g. transcription start sites, splice sites or protein binding sites) while a connection represents a directed relation between two sites (e.g. introns, exons). Positional features are defined as properties that vary along an element. While no assumption is made on the biological meaning of sites, connections and features, the model is general enough to represent the majority of real-world genomic elements as well as their features. The GeCo++ library defines the class gElement as an implementation of this model: it allows users to instantiate objects representing genomic element which can contain sequence as well as sites, connections and features information. Element positions can be converted to reference ones and back, positions can be mapped between elements. The most important characteristic of gElement objects is that they can be instantiated as sub-intervals of another one considering the strand and the presence of genomic variations (relative to the reference). Sequence, sites, connections and features are inherited by the new object consistently with its interval, strand and variations avoiding redundant recalculation and retrieval at unaffected positions. Users can easily write algorithms to retrieve sequences or calculate features by deriving new classes from a hierarchy of retriever objects (gRetriever). This requires one single virtual member function implementation. Retrievers are then used by gElement objects that, in this way, are independent from specific algorithms for retrieval and calculation. To hold sequences, positions, connections, variations and features we defined another class, called gArray: a general purpose template array class. It provides tracking of undefined/invalid elements [not available (NA)] and memory efficient array subsetting. NA tracking is obtained through an optimized bits array class (gBitsArray). The gMatrix, gString and gSequence classes have been derived from gArray to manage matrices, character strings and DNA sequences, respectively. Given the level of abstraction and the inherent complexity, we considered an object oriented software model to be the most appropriate. The choice of ISO C++ guaranteed speed, portability and, most importantly for users, the access to a great number of other efficient and specialized computational biology libraries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EXAMPLES</head><p>The tutorial available at http://bioinformatics.emedea.it/geco contains a detailed description of the library usage and features. Many specific code examples are reported to illustrate the capabilities of the library as well as their usage. A fully commented example is also reported for an application that takes as input a refSeq ID and the name of a file containing haplotype information and calculates haplotype specific sequence features. Furthermore, we provide comparison between this application and an equivalent R/bioconductor script.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head><p>New cost-effective high-throughput sequencing and array techniques are now able to generate huge amounts of information on DNA, RNA as well as proteinâ€“DNA and proteinâ€“RNA interactions. Systems biology approaches can integrate these information at a genomic level describing and studying complex regulatory networks. Prediction and interpretation of the functional meaning of individual genomic variations could be inferred by studying the modifications and rewiring events they produce in these networks. Despite this being considered as one of the most promising challenges (<ref type="bibr" target="#b9">Gonzalez-Angulo et al., 2010;</ref><ref type="bibr" target="#b12">Peng et al., 2009</ref>), a gap remains to be filled between sequence analysis algorithms, genomic annotations and variations; the lack of tools integrating these three levels of analysis is going to become more evident as high-throughput techniques on one side and system biology on the other start to converge to translational research applications. Beside providing C++ programmers with features usually present in interpreted languages, our library introduces a genomic element model that tightly and time/space efficiently integrates computed features, position annotations and variations, allowing for feature rich 'in memory' representations of what usually is provided by genome browsers. The most important difference is that in our case this representation is able to dynamically keep track of genomic variations. To our knowledge this is an approach that has not been implemented in any other package yet, irrespectively by the language used. As a first attempt to fill this gap, the GeCo++ library makes the development of complex and efficient applications straightforward, not bounded to specific data sources or computational algorithms and that can easily evaluate the effect of sequence variations on genomic functional elements. Conflict of Interest: none declared.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>[13:30 1/4/2011 Bioinformatics-btr123.tex]</figDesc></figure>

			<note place="foot">Â© The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com</note>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Galaxy: a web-based genome analysis tool for experimentalists</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Blankenberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Protoc. Mol. Biol., Chapter</title>
		<imprint>
			<biblScope unit="volume">1910</biblScope>
			<biblScope unit="page" from="1" to="21" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">SeqAn an efficient, generic C++ library for sequence analysis</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>DÃ¶ring</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">11</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">14</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="1315" to="1313" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">GeCo++</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Bio++: a set of C++ libraries for sequence analysis, phylogenetics, molecular evolution and population genetics</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Dutheil</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">188</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">The UCSC Genome Browser database: update 2011</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">A</forename>
				<surname>Fujita</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="876" to="882" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Bioconductor: open software development for computational biology and Bioinformatics</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">C</forename>
				<surname>Gentleman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">80</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Galaxy: a comprehensive approach for supporting accessible, reproducible, and transparent computational research in the life sciences</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Goecks</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">86</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Future of personalized medicine in oncology: a systems biology approach</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">M</forename>
				<surname>Gonzalez-Angulo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Clin. Oncol</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="2777" to="2783" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">J P</forename>
				<surname>Hubbard</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="690" to="697" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Taverna: a tool for the composition and enactment of bioinformatics workflows</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Oinn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="3045" to="3054" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Virus-host interactions: from systems biology to translational research</title>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Peng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Opin. Microbiol</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="432" to="438" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">The Gaggle: an open-source software system for integrating bioinformatics software and data sources</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">T</forename>
				<surname>Shannon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">176</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">The Bioperl toolkit: Perl modules for the life sciences</title>
		<author>
			<persName>
				<surname>Stajich</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="1611" to="1168" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Libsequence: a C++ class library for evolutionary genetic analysis</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Thornton</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="2325" to="2327" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>