
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:29+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis Simple high-throughput annotation pipeline (SHAP)</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011">2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Matthew</forename>
								<forename type="middle">Z</forename>
								<surname>Demaere</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Biotechnology and Biomolecular Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Federico</forename>
								<forename type="middle">M</forename>
								<surname>Lauro</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Biotechnology and Biomolecular Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Torsten</forename>
								<surname>Thomas</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Biotechnology and Biomolecular Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Sheree</forename>
								<surname>Yau</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Biotechnology and Biomolecular Sciences</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName>
								<forename type="first">Ricardo</forename>
								<surname>Cavicchioli</surname>
							</persName>
							<email>r.cavicchioli@unsw.edu.au</email>
							<affiliation key="aff0">
								<orgName type="department">School of Biotechnology and Biomolecular Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Alex</forename>
								<surname>Bateman</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Centre for Marine Bio-Innovation</orgName>
								<orgName type="institution">The University of New South Wales</orgName>
								<address>
									<postCode>2052</postCode>
									<settlement>Sydney</settlement>
									<region>NSW</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genome analysis Simple high-throughput annotation pipeline (SHAP)</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">27</biblScope>
							<biblScope unit="issue">17</biblScope>
							<biblScope unit="page" from="2431" to="2432"/>
							<date type="published" when="2011">2011</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btr411</idno>
					<note type="submission">Received on March 17, 2011; revised on 3 July, 2011; accepted on 7 July, 2011</note>
					<note>[12:49 30/7/2011 Bioinformatics-btr411.tex] Page: 2431 2431–2432 Associate Editor:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>SHAP (simple high-throughput annotation pipeline) is a lightweight and scalable sequence annotation pipeline capable of supporting research efforts that generate or utilize large volumes of DNA sequence data. The software provides Grid capable analysis, relational storage and Web-based full-text searching of annotation results. Implemented in Java, SHAP recognizes the limited resources of many smaller research groups. Availability: Source code is freely available under GPLv3 at https://sourceforge.net/projects/</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The development of SHAP began in early 2006, after it became apparent that the needs of our environmental genomics (metagenomics) program would not be satisfied by available annotation tools of the day. Automated pipelines were focused primarily on the analysis of single microbial genomes (<ref type="bibr" target="#b0">Almeida et al., 2004;</ref><ref type="bibr" target="#b4">Meyer et al., 2003</ref>; http://manatee.sourceforge.net) and often pursued analysis strategies that became impractical when the volume of sequencing data grew substantially beyond their original design scope. SHAP was designed around five primary requirements: relational storage, scalable high-throughput analysis, a simple extensible core, platform independence and free availability; requirements that were not met by any program evaluated at the time. Recently, Ergatis (<ref type="bibr" target="#b7">Orvis et al., 2010</ref>) and the derived annotationspecific server ISGA (<ref type="bibr" target="#b2">Hemmerich et al., 2010</ref>) have become available. Streamlining the capacity of Ergatis, ISGA addresses many of the issues that motivated the creation of SHAP. However, the ambitious nature of the system makes it complex and demanding to deploy as a monolithic application. As the name implies, SHAP provides a relatively simple means of annotating high-throughput DNA sequencing datasets while, at the same time, allowing for customization and expansion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M.Z.DeMaere et al.</head><p>(Feature and Annotation respectively), and that the underlying tool accept FASTA formatted sequence as input and produce results as a file. Analysis then becomes a generic process with the exception of result parsing. Result parsing is delegated to implementations of the DetectorParser and AnnotatorParser interfaces. The number of implementations required to support a desired workflow is not as high as might be expected. In the case of BLASTALL, one implementation would suffice for all choices of reference database. Jobs are user defined by a plan. Expressed in XML, a plan defines the targets of analysis and the chosen analysers. Plans are submitted to the pipeline via the command line. Data import and export can be accomplished on the command line, with output formats being FASTA, Genbank or CSV tables. For more expedient multi-user access, a web application is provided. Deployed to a standard Servlet 2.5 container, the interface provides browse, search and export functions. Search queries follow current convention where only plain text input of words of interest is necessary to define an effective query. The Lucene query language supports further sophistications, wildcards (?,*), fuzzy searches (∼), logical operators (AND, OR), explicit field references (name:Project01) and relevance boost factors (ˆN). Boost factors permit particular terms to be emphasized, altering the ranking of search results. For example, to boost the relevance of 'rna' over 'dna' while searching for polymerases, a possible query could be 'polymerase rnaˆ2 dna'.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head><p>SHAP does not expect any prerequisite analysis tools be installed or any particular Analyser be defined prior to use, but does provide a set of example definitions. In this way, SHAP can be considered both a framework and a skeletonized pipeline ready to be fleshed-out by the user. Although SHAP was designed to employ an external database provider and web server, both are capable of being embedded within the application itself. This fully self-contained version requires little to no configuration by the end-user and demonstrates the value of SHAP's layered design (<ref type="figure" target="#fig_1">Fig. 1</ref>). Its simplicity is a major advantage compared with other similar software packages when custom or new tools need to be incorporated in the pipeline. In comparison, ISGA requires 42 subordinate tools to be installed as part of the installation process, which, although no doubt offering a comprehensive analysis, remains a daunting task. A naïve SLOC (source lines of code) size metric (<ref type="bibr" target="#b6">Nguyen et al., 2007</ref>) applied to the core codebases of SHAP and ISGA finds that ISGA comprises 26 867 physical and 17 305 logical lines of Perl, whereas SHAP comprises 16 395 and 10 683 lines of Java, respectively. Ignoring a possible further normalization to account for the relatively higher level nature of PERL to Java (6:2.5) (<ref type="bibr" target="#b8">Prechelt, 2000</ref>), there remains a 38% reduction in codebase size. This comparative reduction could be greater still if ISGA's dependence on the larger Ergatis framework (73 227 physical LOC) for workflow support was included in the metric. However, the SHAP and Ergatis frameworks should not be compared as simplicity of purpose brings forth a feature disparity particularly in the subtly of process. From the outset of development, the goal was to build a system that could deal with large volumes of data, scale both in the persistence domain and analysis throughput, not become overly complex or difficult to adapt in a developing field of research and allow migration between platforms. Through a layered design, the areas of greatest change are isolated from the rest of system andthereby insulated from their changing habits. SHAP's Web interface provides simple and expedient access to the annotation results, presenting users with a familiar means of access. SHAP has been in active use within the group, having supported recent research activities (<ref type="bibr" target="#b5">Ng et al., 2010;</ref><ref type="bibr" target="#b3">Lauro et al., 2011;</ref><ref type="bibr" target="#b9">Yau et al., 2011</ref>). Deployed on our in-house 64 core cluster, the running system has accumulated over 13 years of computational time in 97 days, analysing 2.6 million DNA contigs (2.1 billion bases), producing 4.1 million ORF predictions (578 million amino acids) and recording 7.7 million significant annotation results. Future development may involve converting SHAP to OSGi dynamic modules to further enhance platform independence and ease of deployment.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>[12:49 30/7/2011 Bioinformatics-btr411.tex] Page: 2432 2431–2432</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. A simplified representation of the application layers within SHAP. The Data Service façade provides abstracted transactional access to persistent storage, retrieving information conventionally by reference or full-text search. The Batch Service façade offers a similar abstraction for job processing, either by local execution or queue submission via DRMAA.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>Funding: Australian Research Council. Conflict of Interest: none declared.</figDesc></figure>

			<note place="foot" n="2"> DESIGN AND IMPLEMENTATION SHAP is implemented entirely in Java, utilizing Spring (http://www.springsource.org) as an application framework, Hibernate (http://www.hibernate.org) for relational storage and search integration and Apache Lucene (http://lucene.apache.org) * To whom correspondence should be addressed. for full-text indexing and search capabilities (Fig. 1). The design of SHAP pays attention to the rapid and continued development of metagenomics by avoiding implementation of complex or fine-scale features. A layered separation of concerns allowed the isolation of domains with the greatest potential for change. Driven by developments in methodology and platform selection, if left unconsidered this change would represent a significant cost in ongoing codebase maintenance. The selection and behaviour of the underlying analysis tools (BLASTALL, HMMER, etc.) was identified as one such area and therefore their execution detail and subsequent result parsing was isolated within a single layer. By way of Inversion of Control, much of SHAP&apos;s instantiation logic of collaborating objects is XML configuration detail, providing flexibility in differing post-deployment environments without the need for coding changes. By introducing an ORM (Hibernate), the persistence layer is only loosely coupled to the underlying relational database provider. Full-text search facilities (Hibernate Search/Apache Lucene) simplifies user-driven retrieval of results for downstream analysis. High-throughput analysis is achieved by supporting both conventional multi-threaded local execution and Grid computing by way of DRMAA. SHAP&apos;s minimalist persistent domain model begins with a Project which contains one or more Samples. Following this template, biological data is organized hierarchically via cascading one-tomany associations; where instances of Project and Sample are user defined; instances of Sequence are defined by imported sequencing data; and Feature and Annotation instances are the derived result of computational analyses. The database schema emitted by the Hibernate mapped object model parallels a subset of BioSQL (http://www.biosql.org), with the notable exception that, for the sake of simplicity, SHAP makes only light use of ontological terms and adopts no official ontology (Eilbeck et al., 2005). A computational analysis is represented by a Job that is parcelled into computationally independent Tasks. Job and Task store historical runtime metadata as well as execution state, permitting work to be stopped, restarted and reattempted. Jobs are divided into two classes: detection, which determine Features from Sequences, and Annotation, which determine Annotations from Features. Within each class, the workload is embarrassingly parallel, allowing for concurrent execution of all outstanding work at the task level. SimpleDetector and SimpleAnnotator are primary objects supporting analysis within SHAP, designed for simplicity and reusability with underlying analysis tools by imposing a basic contract. The contract stipulates that an analyzer acts on a specific target object type (Sequence for SimpleDetector, Feature for SimpleAnnotator) and produces a specific result object type © The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com</note>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">A system for automated bacterial (genome) integrated annotation–SABIA</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<forename type="middle">G</forename>
				<surname>Almeida</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="2832" to="2833" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">The Sequence Ontology: a tool for the unification of genome annotations</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Eilbeck</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">44</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">An Ergatis-based prokaryotic genome annotation web server</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Hemmerich</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1122" to="1124" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">An integrative study of a meromictic lake ecosystem in Antarctica</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<forename type="middle">M</forename>
				<surname>Lauro</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ISME J</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="879" to="895" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">GenDB–an open source genome annotation system for prokaryote genomes</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Meyer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="2187" to="2195" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Metaproteogenomic analysis of a dominant green sulfur bacterium from Ace Lake, Antarctica</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Ng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ISME J</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1002" to="1019" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Nguyen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SLOC counting standard. COCOMO II Forum</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Ergatis: a web interface and scalable software system for bioinformatics workflows</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Orvis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1488" to="1492" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">An empirical comparison of seven programming languages</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Prechelt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="23" to="29" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Virophage control of Antarctic algal host–virus dynamics</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Yau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="6163" to="6168" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>