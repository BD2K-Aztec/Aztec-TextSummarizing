
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:37+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Systems biology Functional module identification in protein interaction networks by interaction patterns</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2014">2014</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Yijie</forename>
								<surname>Wang</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of South Florida</orgName>
								<address>
									<postCode>33620</postCode>
									<settlement>Tampa</settlement>
									<region>FL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Xiaoning</forename>
								<surname>Qian</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of South Florida</orgName>
								<address>
									<postCode>33620</postCode>
									<settlement>Tampa</settlement>
									<region>FL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">Texas A&amp;M University</orgName>
								<address>
									<postCode>77843</postCode>
									<settlement>College Station</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Systems biology Functional module identification in protein interaction networks by interaction patterns</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">30</biblScope>
							<biblScope unit="issue">1</biblScope>
							<biblScope unit="page" from="81" to="93"/>
							<date type="published" when="2014">2014</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt569</idno>
					<note type="submission">Received on April 16, 2013; revised on September 23, 2013; accepted on September 25, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Martin Bishop Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Identifying functional modules in protein–protein interaction (PPI) networks may shed light on cellular functional organization and thereafter underlying cellular mechanisms. Many existing module identification algorithms aim to detect densely connected groups of proteins as potential modules. However, based on this simple topo-logical criterion of &apos;higher than expected connectivity&apos;, those algorithms may miss biologically meaningful modules of functional significance, in which proteins have similar interaction patterns to other proteins in networks but may not be densely connected to each other. A few blockmodel module identification algorithms have been proposed to address the problem but the lack of global optimum guarantee and the prohibitive computational complexity have been the bottleneck of their applications in real-world large-scale PPI networks. Results: In this article, we propose a novel optimization formulation LCP 2 (low two-hop conductance sets) using the concept of Markov random walk on graphs, which enables simultaneous identification of both dense and sparse modules based on protein interaction patterns in given networks through searching for LCP 2 by random walk. A spectral approximate algorithm SLCP 2 is derived to identify non-overlapping functional modules. Based on a bottom-up greedy strategy , we further extend LCP 2 to a new algorithm (greedy algorithm for LCP 2) GLCP 2 to identify overlapping functional modules. We compare SLCP 2 and GLCP 2 with a range of state-of-the-art algorithms on synthetic networks and real-world PPI networks. The performance evaluation based on several criteria with respect to protein complex prediction, high level Gene Ontology term prediction and especially sparse module detection, has demonstrated that our algorithms based on searching for LCP 2 outperform all other compared algorithms. Availability and implementation: All data and code are available at http://www.aporc.org/doc/wiki/PRNA
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Advances in high-throughput profiling techniques have enabled researchers to produce large-scale protein–protein interaction (PPI) datasets (<ref type="bibr" target="#b19">Phizicky and Fields, 1995;</ref><ref type="bibr" target="#b23">Raman, 2010</ref>). Systematic analysis of these large-scale interactomic datasets based on their graph representations, in which nodes stand for proteins in species of interest and edges represent interactions between proteins, has the potential to yield a better understanding of protein functions computationally (<ref type="bibr" target="#b25">Rivas and Fontanillo, 2010</ref>). One way to chart out the underlying cellular functional organization is to identify functional modules in these networks by grouping the proteins sharing similar biological functions into the same modules (<ref type="bibr" target="#b15">Navlakha et al., 2009;</ref><ref type="bibr" target="#b16">Nepusz et al., 2012;</ref><ref type="bibr" target="#b20">Pinkert et al., 2010;</ref><ref type="bibr" target="#b26">Royer et al.,2008</ref>). Intuitively, based on interactomic data, if two proteins interact with each other, they are more likely to share the same cellular functionalities than proteins that do not interact. Thus, densely connected groups or subnetworks of proteins in a given network can be viewed as potential functional modules. Based on this idea, many modularity-based algorithms (<ref type="bibr" target="#b17">Newman, 2006;</ref><ref type="bibr" target="#b18">Newman and Girvan, 2004</ref>) have been successfully applied to identify functional modules in PPI networks by detecting 'higher than expected connectivity' subnetworks. Several algorithms based on Markov random walk on graphs also have been proposed recently. For example, Markov CLustering (MCL) algorithm is one of such module identification algorithms for biological network analysis by iteratively implementing 'Expand' and 'Inflation' operations on the transition matrix of the underlying Markov chain of random walk on the given network (van<ref type="bibr" target="#b35">Dongen, 2000</ref>). Regularized MCL (RMCL) (<ref type="bibr" target="#b29">Satuluri and Parthasarathy, 2009;</ref><ref type="bibr" target="#b32">Satuluri et al., 2010</ref>) further extends the original MCL algorithm to penalize the large module size at each iteration to obtain more balanced modules with a similar number of nodes within them. Other formulations based on Markov random walk, including finding low conductance (LC) sets (<ref type="bibr" target="#b36">Voevodski et al., 2009</ref>), also can be applied in module identification, which is similar to normalized cut problems (<ref type="bibr" target="#b38">Xing and Jordan, 2003</ref>) in graph partitioning to minimize the normalized cut size across modules. Recently, several overlapping module identification methods have been developed to detect densely connected modules that may overlap with each other in networks. For example, Cluster One (ClusterOne) (<ref type="bibr" target="#b16">Nepusz et al., 2012</ref>) can be viewed as the overlapping version of normalized cut. Link community (LinkComm) (<ref type="bibr" target="#b0">Ahn et al., 2010</ref>) formulates the overlapping module identification in an innovative framework to implement the hierarchical clustering on edge graph representations, which reveals hierarchical and overlapping organization of networks. In addition to densely connected modules in PPI networks, such as protein complexes, there are other topological structures *To whom correspondence should be addressed. ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com in PPI networks that may possess important cellular functionalities. Again, based on interactomic data, the proteins that interact with similar sets of other proteins in a given network also intuitively have a higher probability of sharing the similar functionalities compared with the proteins that do not share any interacting partners or neighbors (<ref type="bibr" target="#b13">Morrison et al., 2006;</ref><ref type="bibr" target="#b20">Pinkert et al., 2010;</ref><ref type="bibr" target="#b26">Royer et al., 2008</ref>). These proteins may not directly interact with each other but they still work toward similar cellular functionalities and hence should belong to the same modules. Take transmembrane proteins for example. It is well known that transmembrane proteins, such as receptors in signal transduction cascades, tend to interact with cytoplasmic proteins as well as with extracellular ligands, but rarely interact with themselves (<ref type="bibr" target="#b20">Pinkert et al., 2010</ref>). To identify such types of functional modules, many state-of-the-art blockmodel module identification algorithms have been proposed recently. For example, Power Graph (PG) (<ref type="bibr" target="#b26">Royer et al., 2008</ref>) greedily collects topologically similar nodes into the same module based on Jaccard index similarity. Graph Summarization (GS) (<ref type="bibr" target="#b15">Navlakha et al., 2009</ref><ref type="bibr" target="#b14">Navlakha et al., , 2008</ref>) uses the minimum description length principle to group nodes with similar interaction patterns. However, both PG and GS are solved by greedy algorithms, which can not guarantee the global optimality. Additionally, they tend to over segment the network to get relatively small modules based on our empirical experience. A Bayesian framework (<ref type="bibr" target="#b5">Hofman and Wiggins, 2008</ref>) based on a stochastic blockmodel formulation has been developed to identify modules as well as the optimal number of modules. However, the algorithm only guarantees to converge to local optima.<ref type="bibr" target="#b24">Reichardt (2009)</ref>has proposed to solve blockmodel module identification by optimally mapping the given network to an image graph using simulated annealing, and several optimization strategies also have been proposed to accelerate the original simulated annealing algorithm (<ref type="bibr" target="#b37">Wang and</ref><ref type="bibr">Qian, 2012, 2013</ref>). But those algorithms suffer from prohibitive computational complexity due to the inherent combinatorial complexity of the blockmodel problem. In this article, we propose a novel formulation to solve the functional module identification problem, which simultaneously identifies the previously described dense and sparse modules with similar interaction patterns. The article is organized as follows: In Section 2, we first introduce the new optimization formulation by searching for the low two-hop conductance sets (LCP 2 ) based on the two-hop transition matrix of the underlying Markov chain of the random walk on a given network. Then, we derive the corresponding mathematical programing problem and propose an algorithm SLCP 2 (spectral algorithm for LCP 2 ), which solves LCP 2 to search for non-overlapping modules by a spectral approximate method with a close-to-optimal solution. We also present an extended algorithm (greedy algorithm for LCP 2 ) GLCP 2 , which solves LCP 2 to search for overlapping modules by a bottom-up greedy strategy. In Section 3, we evaluate and compare our methods with other state-of-the-art algorithms for functional module identification on four large-scale PPI networks: the Saccharomyces cerevisiae PPI network extracted from the Database of Interacting Proteins (DIP) (<ref type="bibr" target="#b28">Salwinski et al., 2004</ref>) (SceDIP); the corresponding network from the BioGRID database (<ref type="bibr" target="#b3">Breitkreutz et al., 2008;</ref><ref type="bibr" target="#b34">Stark et al., 2006</ref>) (SceBioGRID); the Homo sapiens (HsaHPRD) PPI network collected from the Human Protein Reference Database (HPRD version 9) (<ref type="bibr" target="#b22">Prasad et al., 2009</ref>); and the human PPI network HsaBioGRID obtained from BioGRID (<ref type="bibr" target="#b3">Breitkreutz et al., 2008;</ref><ref type="bibr" target="#b34">Stark et al., 2006</ref>). The experimental results of protein complex prediction show that nonoverlapping SLCP 2 outperforms most of the non-overlapping state-of-the-art algorithms and performs competitively with the more recent RMCL algorithm (<ref type="bibr" target="#b29">Satuluri and Parthasarathy, 2009;</ref><ref type="bibr" target="#b32">Satuluri et al., 2010</ref>). When we compare GLCP 2 with the other algorithms for overlapping modules, our experiments show that GLCP 2 outperforms ClusterOne (<ref type="bibr" target="#b16">Nepusz et al., 2012</ref>) and LinkComm (<ref type="bibr" target="#b0">Ahn et al., 2010</ref>). High level GO (Gene Ontology) term (<ref type="bibr" target="#b1">Ashburner et al., 2000</ref>) prediction results further demonstrate that SLCP 2 is superior to other non-overlapping algorithms, whereas GLCP 2 and LinkComm perform equally well. Furthermore, we present a few identified functional sparse modules to illustrate that SLCP 2 and GLCP 2 have the advantage in detecting functional sparse modules compared with the other state-of-the-art algorithms in the last part of Section 3. In Section 4, we draw our conclusions by briefly summarizing the differences between our new SLCP 2 and GLCP 2 algorithms and other existing module identification algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHOD</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Preliminaries</head><p>Without loss of generality, let G ¼ ðV, EÞ represent a connected PPI network, in which there exists at least one path connecting any pair of nodes. Let V denote the set of nodes in G corresponding to n proteins and E is the edge set denoting interactions among all n proteins. A is the adjacency matrix of G, of which the element A ij ¼ 1 when node i 'interacts' with node j; A ij ¼ 0 when there is no interaction between node i and node j (there are no self edges and A ii ¼ 0). For random walk on G, its underlying Markov chain can be characterized by a transition matrix P ¼ D À1 A, where D ¼ Diagðd 1 , d 2 ,. .. , d n Þ is an n Â n diagonal matrix with the corresponding node degrees (d i ¼ P j A ij , i ¼ 1,. .. , n) on its diagonal. As G is connected, the underlying Markov chain of the random walk is irreducible and ergodic. Therefore there exists a stationary distribution satisfying P T ¼ , where i ¼ d i =M, M ¼ P n i¼1 d i. The conductance of a subset of nodes S in G can be defined as (<ref type="bibr" target="#b8">King, 2003</ref>)</p><formula>È P ðS, " SÞ ¼ P i2S, j2 " S i P ij P i2S i , S [ " S ¼ V: ð1Þ</formula><p>Finding k LC sets in the network G based on this conductance definition involves partitioning the node set V into k subsets (S 1 , S 2 ,. .. , S k ), which can be formulated as the following optimization problem:</p><formula>min X k h¼1 È P ðS h , S h Þ s:t: [ k h¼1 S h ¼ V; S h \ S l ¼ ;, 8 h 6 ¼ l: ð2Þ</formula><p>We call this method LC sets defined by P (LCP) for simplicity, and LCP is equivalent to the formulation of normalized k-cut in Xing and Jordan (2003).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Interaction patterns and transition matrix P 2</head><p>Considering Markov random walk on the given network G, its corresponding transition matrix P describes the transition probability that the random walker walks from one node to another in one step. With two directly interacting nodes (A ij ¼ 1), the corresponding transition probability is uniformly random among all the direct neighbors:</p><formula>P ij ¼ Aij di ,</formula><p>denoting the probability of walking from node i to j in one step. Clearly, nodes without connections have no chance to reach each other in one step. The conductance definition in (1) extends to the transition probabilities between two complement partitions S and " S in the given network. Hence, finding LCP tends to find densely connected modules as it aims to minimize the transition probabilities between potential modules to the rest of the network, which are dependent on the corresponding cut size or the number of edges across potential modules. However, in addition to densely connected modules, functional module identification in PPI networks desires to detect other meaningful modules with nodes having similar interaction patterns in networks. The star and biclique motifs in<ref type="figure" target="#fig_1">Figure 1</ref>show that nodes with similar interaction patterns may be sparsely connected or even have no interactions among them. For example, nodes marked by 'S' and 'T', which should be grouped into two respective modules, all have the same interaction patterns based on the network structure. But because there are no interactions among them, existing algorithms for densely connected modules, including LCP, rarely cluster them into the corresponding modules correctly. The second column in<ref type="figure" target="#fig_1">Figure 1</ref>lists the random walk transition matrix P of each motif and the module dividing lines by LCP derived based on P. The third column in<ref type="figure" target="#fig_1">Figure 1</ref>gives the objective function values computed by LCP (2). Based on the analysis of the three basic motifs, we confirm that LCP only focuses on detecting dense modules, which may not be adequate for functional module identification in PPI networks. To identify modules of more diverse topology based on interaction patterns, we propose to search for LC sets defined by a two-hop transition matrix P 2 ¼ P Â P (LCP 2 ). Intuitively, nodes with similar interaction patterns (no matter whether densely connected or sparsely connected) are more likely to transit back to the nodes in the same module after two steps of random walk. Therefore, we redefine the conductance by replacing P with P 2 , which captures more meaningful modular structures in PPI networks. The fourth and fifth columns in<ref type="figure" target="#fig_1">Figure 1</ref>show P 2 transition matrices and module dividing lines for three basic motifs and LC values computed by P 2 , respectively. From P 2 in<ref type="figure" target="#fig_1">Figure 1</ref>, we find that the nodes with the same interaction patterns have higher probabilities to walk to each other in two random walk steps. Therefore, the correct module identification of star and biclique motifs can be achieved by finding LC sets defined by the two-hop transition matrix P 2. For the clique motif, the nodes in cliques still have the same interaction patterns though the LC value computed by P 2 increases. Therefore, the corresponding cliques can still be correctly identified by LCP 2 as potential modules. The example of these three motifs demonstrates that dense modules like cliques and sparse modules such as stars and bicliques can be identified simultaneously through searching for LC sets based on P 2. Based on these motivating examples, finding LC sets using P 2 has the promising potential to discover biologically meaningful modules consisting of the nodes with similar interaction patterns. We now provide the mathematical formulation and the optimization algorithm to solve LCP 2. Similar to LCP, we aim to solve the following minimization problem LCP 2 by using the two-hop transition matrix P 2 :</p><formula>min X k h¼1 È P 2 ðS h , S h Þ s:t: [ k h¼1 S h ¼ V; S h \ S l ¼ ;, 8 h 6 ¼ l; ð3Þ in which È P 2 ðS h , S h Þ</formula><p>is the new conductance based on P 2. Note that P 2 is still a stochastic matrix and its stationary distribution is also (P T P T ¼ P T ¼ ). We can derive that</p><formula>È P 2 S, S ð ÞþÈ P 2 S, " S À Á ¼ 1</formula><p>(proof is provided in Supplementary Materials). With these, the aforementioned problem (3) can be transformed to an equivalent formulation:</p><formula>max X k h¼1 È P 2 ðS h , S h Þ s:t: [ k h¼1 S h ¼ V; S h \ S l ¼ ;, 8 h 6 ¼ l: ð4Þ</formula><p>As the underlying Markov chain is ergodic given a connected network, we have i P ij ¼ j P ji ¼ A ij =M and i ¼ d i =M. By expanding the objective function in (4), we can further derive</p><formula>X k h¼1 È P 2 S h , S h ð Þ ¼ X k h¼1 P i, j2Sh i P 2 ij P i2Sh i ¼ X k i¼1 P i, j2Sh i P n l¼1 P il P lj P i2Sh i ¼ X k h¼1 P i, j2Sh P n l¼1 A il P lj P i2Sh d i ¼ X k h¼1 x T h APx h x T h Dx h ¼ X k h¼1 x T h AD À1 Ax h x T h Dx h ¼ trace X T AD À1 AX X T DX ;</formula><p>where x h denotes the hth column of the n Â k module assignment matrix X, which lies in the space:</p><formula>F k ¼ X : X1 k ¼ 1 n , x ij 2 0, 1 f g È É ; ð5Þ</formula><p>in which 1 k and 1 n are vectors with all of their elements equal to 1. Combining the transformed objective function and the constraint set (5), we can express LCP 2 as the following optimization problem:s:t:</p><formula>X 2 F k ( ð6Þ</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Module identification by interaction patterns</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Non-overlapping algorithm We can further transform the</head><p>problem (F) to the following relaxed optimization problem (detailed explanation is given in Supplementary Materials): ðF1Þ max trace Y T WY À Á s:t:</p><formula>Y T Y ¼ I k ,</formula><p>THEOREM 1. (Ky Fan Theorem) Let T be a symmetric matrix with eigenvalues 1 ! 2 ! ::: ! n and the corresponding eigenvectors U ¼ ½u 1 ,. .. , u n . Then P k i¼1 i ¼ max X T X¼Ik traceðX T TXÞ. Moreover, the optimal X Ã is given by X Ã ¼ ½u 1 ,. .. , u k Q with Q being an arbitrary orthogonal matrix.</p><p>Following this theorem, we can use the largest k eigenvectors of the Gram matrix W to approximate the module assignment matrix Y. Therefore, we propose our module identification algorithm SLCP 2 in Algorithm 1.</p><p>Algorithm 1 (Non-overlapping): Spectral algorithm for LCP 2 (SLCP 2 )</p><p>Input: Adjacency matrix A and the number of modules k Output: Module assignment matrix X n 1. Add self loops to A ¼ A þ I n 2. Compute W ¼ D À1=2 AD À1 AD À1=2 3. W Ã ¼ W À DiagðdiagðWÞÞ 4. Find the largest k eigenvalues and their corresponding eigenvectors ½E, V k  ¼ eigðW Ã , kÞ 5. Obtain the approximated module assignment R by pivoted QR decomposition: V T k P ¼ Q½R11, R12, then R ¼ ½I k R À1 11 R 12 P T 6. The module membership of each node is determined by the row index of the largest element in the absolute values of the corresponding column of R The first step in the algorithm aims to compute the interaction similarity more accurately by considering the self connection. Adding self loops can make dense modules more distinguishable and avoid impairing the dense modular structure by considering interaction patterns. The second step computes W. The third step removes the diagonal part of the Gram matrix W to get rid of the influence of self similarity because proteins tend to be clustered into single node modules when they have large self similarities. To obtain modules of appropriate size, removing self similarity is necessary. The fourth step obtains the k largest eigenvectors of W Ã. Steps 5 and 6 use the pivoted QR decomposition to approximate the module assignment matrix X (<ref type="bibr" target="#b40">Zha et al., 2001</ref>). The pivoted QR decomposition is a better option than the classic k-means method. It is well known that the performance of k-means heavily depends on its initialization. However, when dealing with a large-scale network that may have thousands of potential modules, it is difficult for k-means to find good initializations. Using the pivoted QR decomposition avoids the initialization step, therefore better performance can be achieved. As illustrated, the last column of<ref type="figure" target="#fig_1">Figure 1</ref>exhibits the second largest eigenvector of W Ã , from which we can easily distinguish the two different modules in the three motifs in<ref type="figure" target="#fig_1">Figure 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Overlapping algorithm Based on the previously derived Gram</head><p>matrix W, which contains the information of interaction similarity among all the nodes in the given network, we can further derive a bottom-up greedy algorithm to identify overlapping functional modules. The procedure of the greedy algorithm is illustrated in Algorithm 2. The idea of adopting the greedy strategy is similar to the one used in ClusterOne (<ref type="bibr" target="#b16">Nepusz et al., 2012</ref>) to grow each module from each single protein as a seed. For each iteration, we add proteins to modules to acquire the most gain in the weight density of a module h, which can be computed as</p><formula>W d S h ð Þ ¼ P i, j2Sh W Ã i;j jS h j 2 ; ð8Þ</formula><p>where W i, j measures the interaction similarity between proteins i and j. We keep adding proteins to potential modules until there is no increase of the weight density.LCP 2 formulation can detect both densely connected modules and sparsely connected modules (the sparsely connected modules contain proteins with similar interaction to the rest of the network), we use two quality functions to evaluate the obtained modules. One quality function is qf d ¼ edgedensity Â sqrtðsizeÞ, which has been similarly adopted in Shih and Parthasarathy (2012) to identify high-quality dense modules. The other quality function is qf s ¼ #:sharedproteins=size for sparse modules. We remove the modules when qf d 5 and qf s 5, where and are two user-specified thresholds. With larger and , we may remove a larger number of low-quality modules by qf d and qf s. After removing low-quality modules, we merge highly overlapped modules based on NAða, bÞ ¼ jVa\Vbj 2 jVajÂjVbj , where a, b are two modules with V a and V b proteins respectively. If NAðS i , S j Þ4p, we merge modules S i and S j together. Here, p is another tuning parameter and we typically set it over 0.9 to guarantee that only highly overlapped modules are merged.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EXPERIMENTS</head><p>We first introduce how we implement the algorithms that we take for performance comparison, where we obtain the PPI networks and protein complex golden standard sets, and what criteria we use to evaluate the performance of the selected algorithms. After that, we compare all algorithms on synthetic networks with both dense and sparse modular structures and show that both the nonoverlapping and overlapping algorithms (SLCP 2 and GLCP 2 , respectively) based on the two-hop transition matrix outperform all other state-of-the-art methods. Then, we analyze the performance of protein complex and high level GO term predictions to demonstrate the potential of predicting biologically meaningful modules by all compared algorithms. In the end, we illustrate that the algorithms based on our LCP 2 formulation are superior to the state-of-the-art algorithms in identifying sparse functional modules by displaying the module detection results for several specific biological functional sparse modules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Algorithms, data and metric</head><p>3.1.1 Algorithms For algorithms that identify non-overlapping modules, we compare SLCP 2 with five state-of-the-art algorithms, which are LCP (<ref type="bibr" target="#b38">Xing and Jordan, 2003</ref>), MCL (van<ref type="bibr" target="#b35">Dongen, 2000</ref>), RMCL (<ref type="bibr" target="#b29">Satuluri and Parthasarathy, 2009;</ref><ref type="bibr" target="#b32">Satuluri et al., 2010</ref>), GS (<ref type="bibr" target="#b15">Navlakha et al., 2009</ref>) and PG (<ref type="bibr" target="#b26">Royer et al., 2008</ref>). Comparing with LCP aims to show that finding LC sets through P 2 is superior to LCP based on the conductance definition by P, as LCP only focuses on detecting dense modules. We also compare SLCP 2 with MCL and RMCL because they are widely used network clustering algorithms in biological network analysis and have been shown to give biologically meaningful results. Additionally, two other algorithms, GS and PG, are chosen as they search for modules based on interaction patterns and hence are also able to detect both dense and sparse modules as SLCP 2 does. For overlapping module identification algorithms, we compare our GLCP 2 with two other recently proposed algorithms: ClusterOne (<ref type="bibr" target="#b16">Nepusz et al., 2012</ref>) and LinkComm (Link Community) (<ref type="bibr" target="#b0">Ahn et al., 2010</ref>). To distinguish non-overlapping and overlapping algorithms, we mark all the overlapping algorithms with a star (*) in all the figures in our experimental results. As discussed earlier, LCP is equivalent to the normalized k-cut problem (<ref type="bibr" target="#b38">Xing and Jordan, 2003</ref>). Therefore, we adopt the spectral method proposed in Xing and Jordan (2003) to solve LCP. The implementation of the k-means clustering algorithm used by LCP is based on the procedure proposed in Bisgin and Dalfes (2008). We have obtained the source code for MCL (http://www.micans.org/mcl), RMCL (http://www.cse.ohiostate.edu/satuluri/research.html), GS(https://open-innovation. alcatel-lucent.com/projects/gscode/), PG(http://www.biotec.tudresden.de/re-search/schroeder/powergraphs/), ClusterOne(http://www.paccanarolab.org/cluster-one/index. html) and LinkComm (https://github.com/bagrow/linkcom) from the web pages provided in the corresponding articles. For non-overlapping module identification algorithms, SLCP 2 and LCP have one parameter k (the number of modules) and MCL also has one tuning parameter called 'Inflation' I F. RMCL has two tuning parameters, which are 'balance' b and 'Inflation' I F. For the number of modules k in SLCP 2 and LCP, we implement the grid search from k ¼ 500–3000 with an interval of 100. For I F in MCL, we similarly search from 1.2 to 5.0 with an interval of 0.1. For RMCL, we set b and I F to 0.5 and 2.0, respectively, based on the suggestions in the articles (<ref type="bibr" target="#b32">Satuluri et al., 2010;</ref><ref type="bibr" target="#b33">Shih and Parthasarathy, 2012</ref>). Because both PG and GS are hierarchical bottom-up algorithms, they do not have any tuning parameter. For overlapping module identification algorithms, LinkComm has one parameter t and GLCP 2 has three parameters , and p. For LinkComm, we set the threshold t ¼ 0:2 as it yields the best results in our experiments. For GLCP 2 , the parameters set ð, , pÞ determines the quality of the results. From our experience, ð, pÞ ¼ ð0:8, 0:9Þ gives good performance. As to , it depends on the density of the original network. In the following experiments, we set ¼ 0:76 for the Sce PPI networks and ¼ 0:7 for the Hsa PPI networks because the Hsa PPI networks are more sparse than the Sce PPI networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Data</head><p>We have run all these selected algorithms on four PPI networks. Two of them are S.cerevisiae (Sce) PPI networks obtained from the DIP (<ref type="bibr" target="#b28">Salwinski et al., 2004</ref>) (SceDIP) and BioGRID database (<ref type="bibr" target="#b3">Breitkreutz et al., 2008;</ref><ref type="bibr" target="#b34">Stark et al., 2006</ref>) (SceBioGRID), respectively. The other two are the H.sapiens (Hsa) PPI networks extracted from HPRD (<ref type="bibr" target="#b22">Prasad et al., 2009</ref>) (HsaHPRD) and BioGRID database (<ref type="bibr" target="#b3">Breitkreutz et al., 2008;</ref><ref type="bibr" target="#b34">Stark et al., 2006</ref>) (HsaBioGRID), respectively. We use the largest components of these four networks as the input of the algorithms. We evaluate the complex prediction performance of the algorithms based on four protein complex golden standards. For Sce PPI networks, we use Munich Information Center for Protein Sequences (MIPS) (<ref type="bibr" target="#b12">Mewes et al., 2004</ref>) and Saccharomyces Genome Database (SGD) (<ref type="bibr" target="#b6">Hong et al., 2008</ref>) golden standards. For Hsa PPI networks, we adopt the Human Protein Complex Database with a Complex Quality Index (PCDq) (<ref type="bibr" target="#b7">Kikugawa et al., 2012</ref>) as well as CORUM (comprehensive resource of mammalian protein complexes) golden standards (<ref type="bibr" target="#b27">Ruepp et al., 2008</ref>) for our performance evaluation. We use all golden standard protein complexes with two or more proteins in all our experiments. For examining whether the detected modules capture protein functional relationships other than just protein complexes, we use the high-level GO terms in all three domains (molecular function (F), biological process (P) and cellular component</p><p>(C)) as the golden standard for GO term prediction. Any GO term, whose information content (IC) (<ref type="bibr" target="#b33">Shih and Parthasarathy, 2012</ref>) is42, is considered as a high-level GO term. The definition of the IC of a GO term g is IC ¼ Àlog jgj=jrootj ð Þas given in Shih and Parthasarathy (2012), where 'root' is the corresponding root GO term (either F, P or C) of g. In addition, we remove GO terms that contain 52 proteins. The detailed information of the networks, complex golden standards and GO terms are listed in<ref type="figure" target="#tab_1">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">Metric</head><p>To evaluate the performance for complex prediction, we use two independent quality measures [used by<ref type="bibr" target="#b16">Nepusz et al. (2012)</ref>] to assess the similarity between the predicted complexes and the golden standard reference complexes. In our experiments, we set the minimum size of detected modules to three for fair comparison between all competing algorithms. The first measure counts the number of predicted modules matched to the golden standard reference modules. A predicted module a with V a proteins is considered a match to a reference module b with V b proteins when the neighborhood affinity NAða, bÞ ¼ jVa\Vbj 2 jVajÂjV b j ! 0:25 (<ref type="bibr" target="#b10">Li et al., 2010;</ref><ref type="bibr" target="#b16">Nepusz et al., 2012</ref>). The threshold of 0.25 is chosen because it represents the case when at least half of the complexes overlap if the two compared complexes are equally large. The second measure is the geometric mean of two other measures, which is the cluster-wise sensitivity (Sn) and the cluster-wise positive predictive value (PPV) (<ref type="bibr" target="#b10">Li et al., 2010</ref>). Given r predicted and s reference complexes, let t ij denote the number of proteins that exist in both predicted complex i and reference complex j, and w j represent the number of proteins in reference complex j. Then Sn and PPV can be defined as</p><formula>Sn ¼ P s j¼1 max i¼1, ..., r t ij P s j¼1 w j , PPV ¼ P r i¼1 max j¼1, ..., s t ij P r i¼1 P s j¼1 t ij :</formula><p>Because Sn can reach its maximum by grouping all proteins in one module, whereas PPV can be maximized by putting each protein in its own module, we use their geometric mean as 'accuracy' to balance these two measures (Acc ¼ ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi Sn Â PPV p ) (<ref type="bibr" target="#b10">Li et al., 2010;</ref><ref type="bibr" target="#b16">Nepusz et al., 2012</ref>). To investigate the functional significance of identified modules, we follow the same strategy in Shih and Parthasarathy (2012) to compute F measure based on high-level GO term prediction. Let C ¼ c 1 , c 2 ,. .. , c k f gdenote the identified modules and G ¼ g 1 , g 2 ,. .. , g l È É denote the selected GO terms. We can calculate the number of identified modules that match at least one GO term denoted by N cp : N cp ¼ j c i 2 CjNAðc i , g j Þ40:25, È 9g j 2 Ggj. The number of GO terms that match at least one identified module can be computed: N cg ¼ j g i 2 GjNAðc i , g j Þ È 40:25, 9c i 2 Cgj. Based on these numbers, we can further compute precision and recall: precision ¼ Ncp jCj , recall ¼ Ncg jGj. The final F-measure is the harmonic mean of precision and recall: F ¼ 2 Â precision Â recall=ðprecision þ recallÞ. Finally, all experiments illustrated in this article can be accomplished within 1 h on a 2.4 GHz quad-core CPU and 6 GB RAM computer. Except when identifying modules in the HsaBioGRID PPI network, PG and SG fail to execute due to the large memory requirement from two algorithms for this large PPI network. Based on the simulation results, the run time of SLCP 2 and GLCP 2 is competitive with the other algorithms. For example, SLCP 2 only takes around 2 min for clustering the SceDIP PPI network into k ¼ 1000 modules and GLCP 2 needs 51 min for analyzing the SceDIP PPI network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Synthetic networks</head><p>To illustrate the performance difference of different algorithms, we first evaluate all the selected algorithms on synthetic networks with the known ground truth. The modular structure of synthetic networks is shown in<ref type="figure" target="#fig_2">Figure 2A</ref>. There are three dense modules of different sizes together with two sparse modules of the same size. To test statistical significance, we generate the null model by shuffling edges from an original synthetic network based on the Maslov–Sneppen procedure (<ref type="bibr" target="#b11">Maslov and Sneppen, 2002</ref>).<ref type="figure" target="#fig_2">Figure 2B</ref>is one example of the random network after half of the original edges are permuted. The performance is evaluated by generalized normalized mutual information (GNMI) (<ref type="bibr" target="#b9">Lancichinetti et al., 2009</ref>) for both non-overlapping and overlapping module identification algorithms. GNMI ranges from 0 to 1 and it equals to 1 when the module identification result is the same as the ground truth.<ref type="figure" target="#fig_2">Figure 2C</ref>shows the mean values and the standard deviations of GNMI obtained by all the algorithms on 100 random null networks. For non-overlapping algorithms, SLCP 2 is superior to LCP, MCL and RMCL. For PG and GS, although the obtained GNMI values are better than LCP and MCL, they may not provide useful biological information as their identified modules are fine grained (one or two nodes in each module). For overlapping module identification algorithms, GLCP 2 outperforms ClusterOne and LinkComm.<ref type="figure" target="#fig_2">Figure 2D</ref>plots the Àlogðp À valueÞ of the t-test scores of SLCP 2 compared with other non-overlapping algorithms as well as the comparison of GLCP 2 to<ref type="bibr">ClusterOne and LinkComm. From</ref><ref type="figure" target="#fig_2">Figure 2D</ref>, we find that both SLCP 2 and GLCP 2 are significantly better than other state-of-the-art algorithms on synthetic networks with the ground truth modular structure. In addition, we estimate the statistical significance for each identified module in synthetic random networks for all nine algorithms. We annotate the dense modules in<ref type="figure" target="#fig_2">Figure 2A</ref>as D1, D2 and D3 and sparse modules as S1 and S2. Based on 100 random null networks, for each module, we can obtain the distribution of corresponding Acc scores based on the knownground truth.<ref type="figure" target="#fig_3">Figure 3A</ref>displays the mean values and the standard deviations of Acc scores produced by all the algorithms on every module in<ref type="figure" target="#fig_2">Figure 2A</ref>. For example, the first nine bars indicate the mean values and the standard deviations of Acc scores from all nine competing algorithms in detecting dense module D1 in<ref type="figure" target="#fig_2">Figure 2A</ref>. Based on the distributions of Acc scores, we can further compute the P-values of our proposed algorithms compared with other state-of-the-art algorithms.<ref type="figure" target="#fig_3">Figure 3B</ref>plots the Àlogðp À valueÞ of the t-test scores of SLCP 2 compared with other non-overlapping algorithms and the comparison of GLCP 2 to ClusterOne and LinkComm on all five modules, respectively. We consider our algorithms are significantly better when Àlogðp À valueÞ ! 3 ðp À value 1:0e À 3Þ. From<ref type="figure" target="#fig_3">Figure 3B</ref>, we find that LCP and SLCP 2 are competitive in identifying dense module D1. For the rest of the modules and algorithms, the Àlogðp À valueÞ values shown in<ref type="figure" target="#fig_3">Figure 3B</ref>imply that our SLCP 2 and GLCP 2 achieve significantly better performance in detecting both dense and sparse modules. Furthermore, from<ref type="figure" target="#fig_3">Figure 3B</ref>, we find the bars for sparse modules (S1 and S2) are typically higher than those corresponding to dense modules, which further validates that the competing algorithms focus more on detecting dense modules, whereas our proposed algorithms can simultaneously detect both dense and sparse modules based on interaction patterns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Complex prediction</head><p>We test the quality of a module identification algorithm by how well it can be applied to make predictions for protein complexes. We compare SLCP 2 with other state-of-the-art non-overlapping module identification algorithms, including LCP, RMCL, MCL, GS and PG, on four PPI networks. Also, to detect overlapping modules, we compare GLCP 2 with ClusterOne and LinkComm. The information of the module identification results and the optimal parameters used by each algorithm are reported in Tables 2 and 3. For non-overlapping module identification algorithms, as shown in Tables 2 and 3, SLCP 2 and RMCL are competitive and outperform all the other non-overlapping algorithms. For the SceDIP PPI network, SLCP 2 achieves better performance than RMCL because it predicts more matched protein complexes and has a higher Acc score. For other PPI networks, SLCP 2 and RMCL obtain competitive results, as SLCP 2 consistently predicts more matched protein complexes, whereas RMCL gets higher Acc scores. In addition, SLCP 2 has the best coverage with more proteins clustered into corresponding modules on all four PPI networks except the SceBioGrid PPI network. For the SceBioGrid PPI network, RMCL only covers one more protein than SLCP 2. For overlapping module identification algorithms, based on Tables 2 and 3, we find that GLCP 2 outperforms LinkComm and ClusterOne. Although both GLCP 2 and LinkComm identify competitive numbers of protein complexes in different golden standards, GLCP 2 consistently achieves higher Acc scores for all four PPI networks. Finally, GLCP 2 also has the best coverage on all four PPI networks except the SceBioGrid PPI network, on which LinkComm has a higher coverage than GLCP 2. If we consider that LinkComm identifies larger numbers of smaller overlapping modules as shown in both tables, we expect that GLCP 2 may provide more biologically meaningful results. Furthermore, we test the statistical significance of our algorithms in terms of predicting the SGD golden standard complexes on the SceDIP PPI network. We first generate 100 random networks from the original SceDIP PPI network by randomly shuffling the original edges based on the Maslov–Sneppen procedure (<ref type="bibr" target="#b11">Maslov and Sneppen, 2002</ref>). Then, we obtain the empirical distributions of Acc scores with respect to the prediction of the SGD golden standard on these 100 randomized networks for the competing algorithms. Based on the results provided in<ref type="figure" target="#tab_2">Table 2</ref>, we compare SLCP 2 with RMCL for nonoverlapping algorithms and GLCP 2 with LinkComm for overlapping algorithms because they are the two best-performing algorithms in predicting the SGD complexes among nonoverlapping algorithms and overlapping algorithms, respectively. For non-overlapping algorithms, the average and the standard deviation of Acc scores obtained by SLCP 2 are 0.5180 and 0.0064. Although for RMCL, the average and the standard deviation of the Acc scores are 0.5137 and 0.0044. For overlapping algorithms, the average and the standard deviation of Acc scores of GLCP 2 are 0.5018 and 0.0054. For LinkComm, the average and the standard deviation of the Acc scores are 0.4983 and 0.0047. By two-sample t-test, SLCP 2 is significantly better than RMCL with the P-value 1.429e-08 and GLCP 2 is significantly better than LinkComm with the P-value 1.095e-07.In summary, both SLCP 2 and GLCP 2 based on our new optimization formulation LCP 2 using the concept of random walk on graphs are among the best performing algorithms for protein complex prediction. However, protein complexes have typical dense modular structure within which proteins are highly connected. As our SLCP 2 and GLCP 2 aim to detect both dense and sparse modules, these protein complex prediction results only exhibit one aspect of our algorithms' performance. In thefollowing sections, we further compare the performance of different algorithms on functional module identification, especially for sparse module identification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">GO term prediction</head><p>In this section, we follow the same strategy in Shih and Parthasarathy (2012) to compare the biological significance of identified modules by all nine algorithms with respect to GO term prediction. Instead of using all GO terms, we only consider high-level GO terms with IC larger than two so that we can better understand the functional specificity of identified modules. The comparison for GO term prediction is illustrated in<ref type="figure">Figure 4A</ref>illustrates the F-measure comparison among all the algorithms.<ref type="figure">Figure 4B</ref>shows the percentage of GO terms that are considered to be correctly matched to at least one of the identified modules by different algorithms. Among non-overlapping algorithms,<ref type="figure">Figure 4</ref>clearly illustrates that SLCP 2 not only detects the largest number of matched high-level GO terms for each PPI network, but also obtains the best F-measure score. Therefore, for non-overlapping module identification, SLCP 2 outperforms other state-of-the-art non-overlapping algorithms on high-level GO term prediction. For overlapping algorithms, based on<ref type="figure">Figure 4</ref>,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Sparse module identification</head><p>To further illustrate the advantage of our LCP 2 formulation in detecting functional modules with similar interaction patterns, we compare the performances of different algorithms with respect to identifying functional sparse modules in this section. However, in general, as we do not have sparse module golden standards, it is hard to provide quantitative measures for detecting sparse modules. In this section, we provide the examples of well-understood biologically meaningful sparse modules to evaluate the capability of different algorithms in identifying functional sparse modules. Through the comparison of identified corresponding modules, we demonstrate that our SLCP 2 and GLCP 2 are superior in detecting functional sparse modules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.1">Pro-survival proteins and cytochrome c release</head><p>The prosurvival proteins (BCL2, MCL1 and BCL2A1), which constitute the Bcl-2 subfamily, directly or indirectly prevent the release of cytochrome c from mitochondria (<ref type="bibr" target="#b39">Yang et al., 1997</ref>). Therefore, the pro-survival proteins module should interact with the module that has the release of cytochrome c from mitochondria functionality. In<ref type="figure" target="#fig_4">Figure 5</ref>, we provide the comparison of the module identification results for detecting these two modules in the HsaBioGRID PPI network. For the pro-survival proteins module, we mark the three members in circle shapes. For the functional module with the release of cytochrome c from mitochondria functionality (HRK, BCL2L11, BID, BNIP3, BIK, PMAIP1, BAK1, BMF and BBC3), we mark the members in rectangle shapes. Shaded areas represent the modules detected by the corresponding algorithms. Based on the interactions in the HsaBioGRID PPI network, we find these two modules are sparse with constituent proteins having similar interaction patterns. As shown in<ref type="figure" target="#fig_4">Figure 5</ref>, LCP detects part of the cytochrome c release module but fails to identify the pro-survival module. RMCL splits pro-survival proteins into two modules. MCL fails to detect both the cytochrome c release module and the prosurvival module. ClusterOne groups those two modules into one. LinkComm fails to detect the pro-survival modules. Only our algorithms SLCP 2 and GLCP 2 , which take the interaction patterns into account, achieve the most promising results. For two algorithms PG and GS, which also consider the interaction patterns, we do not have their module detection results because both algorithms run out of memory on this relatively large network. 3.5.2 FGF/FGFR signaling FGF/FGFR signaling has been associated with a diverse and broad range of biological functions, including cell growth, cell differentiation and the promotion of angiogenesis (<ref type="bibr" target="#b21">Powers et al., 2002</ref>). FGFR stands for the fibroblast growth factor receptors, which bind to the members of the family of FGF (fibroblast growth factor) proteins. Based on their functionality, FGFR proteins should interact with FGF proteins.<ref type="figure" target="#fig_5">Figure 6</ref>illustrates the module identification results for FGFR and FGF modules in the HsaHPRD PPI network. Based on the network structure, FGFR and FGF modules are two sparse modules. We mark the FGFR proteins in rectangle shapes and FGF proteins in circle shapes. Shaded areas represent the modules detected by the corresponding algorithms. As shown in<ref type="figure" target="#fig_5">Figure 6</ref>, LCP, RMCL, MCL, ClusterOne and LinkComm again can not identify these two modules correctly. PG, GS and our algorithms have the ability to correctly detect them. However, PG and GS over-segment the FGFR module, whereas our algorithms can provide better module identification results. promising functional module identification results. Both MCL and RMCL are network clustering algorithms based on (stochastic) flow simulation that extends the similar random walk Markov chain idea by two operations for better performance: 'Inflation' and 'Expand'. However, both operators are heuristic strategies. Theoretically, why they give good results is still a mystery. PG and SG are two non-overlapping algorithms that identify functional modules in terms of interaction patterns. Because they apply greedy algorithms to solve the module identification problem, the quality of the results is not guaranteed. Last but not least, LinkComm is a novel algorithm based on an edge graph representation that tends to detect a large number of overlapping modules whose biological meaning may not be immediately clear due to the fine-grained modular structure. In our experiments, we have applied our algorithms to analyze four unweighted PPI networks, which can be viewed as binary (f0, 1g) edge-weighted networks. However, both SLCP 2 and GLCP 2 can be extended in a straightforward manner for the analysis of general edge-weighted networks by modifying corresponding terms in Algorithms 1 and 2 proposed in this article. We will evaluate the performances of algorithms in module identification by introducing reliable edge weights when they are available in our future work. Another limitation for SLCP 2 is how to decide the desirable number of modules k in advance. One possible way is to search k values within a certain range and choose k with the best average weight density computed by (8). In our future research, we will also explore the ideas adopted in<ref type="bibr" target="#b0">Ahn et al. (2010) and</ref><ref type="bibr" target="#b4">Brunet et al. (2004)</ref>to determine k based on the partition density and/or module entropy score, respectively. Finally, GLCP 2 is our preliminary solution strategy for identifying overlapping modules based on the LCP 2 formulation. We plan to further investigate the properties of the Gram matrix W, and we expect that we may achieve better performance with a better understanding of the problem structure. In conclusion, we propose a novel formulation to achieve functional module identification based on protein interaction patterns in PPI networks. An efficient spectral algorithm, which can obtain a close-to-optimal solution based on Ky Fan theorem, is designed to solve the new optimization problem for non-overlapping module identification. We also develop a greedy algorithm to solve the same problem but obtain overlapping results. Our algorithms not only can overcome the limitation of traditional module identification algorithms, which only focus on identifying dense modules, but they also have a better scalability for large-scale PPI networks to efficiently solve module identification problem. Experimental results show thatour SLCP 2 and GLCP 2 have achieved promising results on both protein complex and GO term predictions on four large-scale PPI networks. Most importantly, our new algorithms can detect functional sparse modules, which are often ignored by many other existing algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>Re-compute the average weight density Q. 10. endwhile 11. Post-processing the obtained modules. The post-processing step in Line 11 of Algorithm 2 aims to remove low-quality modules and merge highly overlapped modules. Because our</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Different module identification results obtained by using P and P 2. The first column displays three basic motifs (star motif, clique motif and biclique motif) [used by Royer et al. (2008)] and the dashed lines show the natural partitions. The second column gives the P of three basic motifs and the dashed lines denote the module dividing lines obtained by LCP. The third column gives the minimum objective function values by (2). The fourth column gives the P 2 of three basic motifs and the dashed lines indicate the identified modules by LCP 2. The fifth column shows the minimum objective function values based on (3). The last column illustrates the second largest eigenvector of W Ã used in Algorithm 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. Performance comparison on synthetic networks: (A) the adjacency matrix of the original network; (B) one example of the randomly shuffled network (obtained by shuffling half of the original edges); (C) GNMI comparison among all algorithms; (D) t-test results</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.3.</head><figDesc>Fig. 3. Statistical performance in detecting each module: (A) Acc scores comparison among all algorithms; (B) t-test results based on distributions of Acc. For low bars in (B), we put the ÀlogðP À valueÞ values on top of the bars</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.5.</head><figDesc>Fig. 5. The pro-survival and cytochrome c release modules in HsaBioGRID PPI network detected by all the algorithms (GS and PG fail to execute because of running out of memory). The pro-survial proteins are in rectangle shapes and the cytochrome c release proteins are in circle shapes. Diamond shapes denote the proteins that belong to neither the pro-survial proteins nor the cytochrome c release proteins. Shaded areas represent the modules detected by the corresponding algorithms</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.6.</head><figDesc>Fig. 6. The FGF/FGFR signaling modules in HsaHPRD PPI network detected by all algorithms. FGF proteins are in the circle shapes and FGFR proteins are in the rectangle shapes. Diamond shapes indicate proteins of neither FGF proteins nor FGFR proteins. Shaded areas represent the modules detected by the algorithms</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 1. Information of the four real-world PPI networks</figDesc><table>Network 
Number 
of nodes 

Number 
of edges 

MIPS SGD PCDq CORUM jGOj 

SceDIP 
4980 
22 076 203 
305 
— 
— 
1166 
SceBioGRID 5640 
59 748 203 
305 
— 
— 
1172 
HsaHPRD 
9269 
36 917 
— 
— 1204 1294 
4452 
HsaBioGRID 14 283 
87 397 
— 
— 1204 1294 
4457 

Note: The networks are the largest components of the original datasets. jGOj is the 
number of GO terms whose IC is 42. </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><figDesc>Table 2. Performance comparison for complex prediction on Sce PPI networks</figDesc><table>Network 
Golden 
standard 

Method 
Coverage 
Number of 
clusters(size !3) 

Average size 
Number 
of matched 

Sn 
PPV 
Acc 

SceDIP 
MIPS 
LCP(k ¼ 1000) 
2572 
525 
4.90 
62 
0.2346 
0.3825 
0.2995 
RMCL 
3725 
814 
4.57 
79 
0.2834 
0.3977 
0.3357 
MCL (I F ¼ 2:2) 
3846 
675 
5.70 
68 
0.2821 
0.3787 
0.3269 
GS 
2391 
550 
4.35 
65 
0.185 
0.4067 
0.2743 
PG 
2717 
364 
7.46 
14 
0.1153 
0.2978 
0.1853 
SLCP 2 (k ¼ 1000) 
4564 
783 
5.83 
84 
0.3050 
0.3732 
0.3378 
ClusterOne a 
1461 
358 
4.89 
81 
0.2641 
0.3605 
0.3085 
LinkComm a 
2344 
1725 
4.12 
102 
0.3093 
0.3575 
0.3326 
GLCP 2a 
3447 
1517 
4.46 
104 
0.3066 
0.3928 
0.3470 
SGD 
LCP(k ¼ 1000) 
2572 
525 
4.90 
75 
0.3484 
0.6058 
0.4594 
RMCL 
3725 
814 
4.57 
125 
0.4572 
0.6039 
0.5254 
MCL (I F ¼ 2.3) 
3630 
659 
5.70 
115 
0.4468 
0.5735 
0.5102 
GS 
2391 
550 
4.35 
88 
0.2915 
0.6689 
0.4416 
PG 
2717 
364 
7.46 
11 
0.1714 
0.4102 
0.2615 
SLCP 2 (k ¼ 1000) 
4564 
783 
5.83 
125 
0.4917 
0.5621 
0.5257 
ClusterOne a 
1461 
358 
4.89 
113 
0.4037 
0.5775 
0.4828 
LinkComm a 
2344 
1725 
4.12 
136 
0.4567 
0.4895 
0.4727 
GLCP 2a 
3447 
1517 
4.46 
155 
0.4894 
0.5850 
0.5350 
SceBioGRID 
MIPS 
LCP(k ¼ 1000) 
3503 
557 
6.30 
77 
0.2978 
0.4252 
0.3558 
RMCL 
5210 
772 
4.57 
81 
0.4908 
0.3921 
0.4346 
MCL (I F ¼ 3:3) 
3544 
338 
10.49 
45 
.3495 
0.3270 
0.3380 
GS 
3315 
609 
5.44 
83 
0.2420 
0.4296 
0.3224 
PG 
2601 
356 
7.31 
2 
0.0740 
0.3128 
0.1521 
SLCP 2 (k ¼ 1000) 
5209 
782 
6.76 
84 
0.3723 
0.3906 
0.3810 
ClusterOne a 
2580 
473 
7.57 
101 
0.4797 
0.3938 
0.4346 
LinkComm a 
4633 
4108 
5.48 
143 
0.5891 
0.3526 
0.4557 
GLCP 2a 
4440 
2183 
7.74 
136 
0.5006 
0.4204 
0.4587 
SGD 
LCP(k ¼ 1000) 
3503 
556 
6.30 
98 
0.4672 
0.6236 
0.5398 
RMCL 
5210 
772 
4.57 
137 
0.6628 
0.5915 
0.6262 
MCL (I F ¼ 3:2) 
3652 
335 
10.49 
80 
0.4291 
0.4752 
0.4516 
GS 
3315 
609 
5.44 
130 
0.3774 
0.6544 
0.4969 
PG 
2601 
356 
7.31 
3 
0.135 
0.4517 
0.2469 
SLCP 2 (k ¼ 1000) 
5209 
782 
6.76 
151 
0.5847 
0.5926 
0.5886 
ClusterOne a 
2580 
473 
7.57 
158 
0.6703 
0.5621 
0.6138 
LinkComm a 
4633 
4108 
5.48 
207 
0.7955 
0.4637 
0.6037 
GLCP 2a 
4440 
2183 
7.74 
204 
0.7341 
0.5887 
0.6574 

Note: Bold values denote the best scores corresponding to specific criteria. 

a 

Overlapping module identification algorithms. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true"><figDesc>Table 3. Performance comparison for complex prediction on Hsa PPI networks</figDesc><table>Network 
Golden 
standard 

Method 
Coverage 
Number of 
clusters (size !3) 

Average 
size 

Number 
of matched 

Sn 
PPV 
Acc 

HsaHPRD 
PCDq 
LCP(k ¼ 1000) 
8561 
979 
8.74 
205 
0.3986 
0.4206 
0.4095 
RMCL 
6879 
1508 
4.56 
290 
0.3538 
0.5990 
0.4604 
MCL (I F ¼ 3:3) 
6534 
1279 
5.11 
237 
0.3255 
0.5633 
0.4282 
GS 
4719 
1167 
4.04 
167 
0.2169 
0.6785 
0.3836 
PG 
5172 
805 
6.25 
22 
0.2016 
0.3453 
0.2639 
SLCP 2 (k ¼ 1000) 
8657 
1494 
5.79 
303 
0.3916 
0.4774 
0.4324 
ClusterOne a 
2915 
771 
4.53 
199 
0.2379 
0.6478 
0.3925 
LinkComm a 
7183 
4107 
4.58 
418 
0.4314 
0.3029 
0.3652 
GLCP 2a 
8181 
4257 
4.50 
450 
0.4145 
0.5377 
0.4721 
CORUM 
LCP(k ¼ 1000) 
8561 
979 
8.74 
172 
0.3729 
0.2049 
0.2764 
RMCL 
6879 
1508 
4.56 
247 
0.3291 
0.2777 
0.3023 
MCL (I F ¼ 3:3) 
6534 
1279 
5.11 
215 
0.3192 
0.2567 
0.2862 
GS 
4719 
1167 
4.04 
195 
0.2123 
0.3084 
0.2559 
PG 
5172 
805 
6.25 
2 
0.1609 
0.2084 
0.1831 
SLCP 2 (k ¼ 1000) 
8657 
1494 
5.79 
257 
0.3748 
0.2227 
0.2889 
ClusterOne a 
2915 
771 
4.53 
233 
0.2623 
0.2624 
0.2623 
LinkComm a 
7183 
4107 
4.58 
614 
0.4676 
0.1349 
0.2510 
GLCP 2a 
8181 
4257 
4.50 
418 
0.3859 
0.2413 
0.3051 
HsaBioGrid 
PCDq 
LCP(k ¼ 1000) 
7042 
958 
7.35 
111 
0.2798 
0.4945 
0.3720 
RMCL 
10 698 
1536 
6.96 
223 
0.3777 
0.5054 
0.4369 
MCL (I F ¼ 3:3) 
5345 
917 
5.82 
59 
0.1668 
0.5563 
0.3046 
GS 
PG 
SLCP 2 (k ¼ 1800) 
12889 
1622 
7.95 
205 
0.3523 
0.4281 
0.3884 
ClusterOne a 
10543 
1753 
10.31 
162 
0.4098 
0.3869 
0.3982 
LinkComm a 
10322 
6954 
5.70 
372 
0.4467 
0.2784 
0.3526 
GLCP 2a 
10948 
5607 
5.31 
360 
0.4190 
0.4943 
0.4545 
CORUM 
LCP(k ¼ 1000) 
958 
7042 
7.35 
166 
0.3558 
0.2611 
0.3047 
RMCL 
10698 
1536 
6.96 
190 
0.4286 
0.2689 
0.3395 
MCL (I F ¼ 3:3) 
5345 
917 
5.82 
82 
0.2094 
0.2535 
0.2304 
GS 
PG 
SLCP 2 (k ¼ 1800) 
12889 
1622 
7.95 
221 
0.4235 
0.2331 
0.3142 
ClusterOne a 
10543 
1753 
10.31 
197 
0.5797 
0.2548 
0.3445 
LinkComm a 
10322 
6954 
5.70 
724 
0.6856 
0.1193 
0.286 
GLCP 2a 
10948 
5607 
5.31 
615 
0.5047 
0.2313 
0.3476 

Note: For HsaBioGRID PPI network, GS and PG do not have results due to the memory limitation. Bold values denote the best scores corresponding to specific criteria. 

a 

Overlapping module identification algorithms. </table></figure>

			<note place="foot">Y.Wang and X.Qian at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">&amp; ð7Þ where W ¼ D À1=2 AD À1 AD À1=2 , and Y ¼ D 1=2 X X T DX À Á À1=2 denotes the relaxed assignment matrix, which is orthonormal. Let H ¼ D À1=2 AD À1=2. We can rewrite W ¼ HH T as the inner-product of H. Taking each column of H as the normalized interaction pattern of the corresponding node, this Gram matrix W measures the interaction similarity among different nodes (we note that the inner-product can be replaced by a general Mercer kernel if needed). According to this inner-product form of W, nodes in dense modules have high similarities as they share the same interaction pattern, which is to interact with each other within modules. At the same time, similarities among nodes in sparse modules are high because they interact with similar neighbors in the rest of the network. Consequently, similarities among nodes with similar interaction patterns (no matter whether in dense or sparse modules) are higher. Therefore, nodes that play identical roles in the network can be grouped together. We note that a formulation similar to ours has also been independently presented in Satuluri and Parthasarathy (2011). The authors in Satuluri and Parthasarathy (2011) have proposed to use a symmetrization strategy AA T to detect interaction patterns of nodes. In our new LCP 2 formulation, module identification depends on the different form HH T , which can be viewed as the normalized version of AA T. As shown in previous results obtained by normalized cuts, we expect that this new formulation depending on the normalized version HH T may yield more balanced modules that may lead to biologically meaningful functional module identification results. To derive the solution strategy for LCP 2 , we relax Y to be an orthonormal matrix and it turns out that (F1) has a closed-form solution based on Ky Fan Theorem.</note>

			<note place="foot">Functional module identification by interaction patterns at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="4"> DISCUSSION AND CONCLUSION The compared module identification algorithms in this article use different module definitions and methods. LCP, ClusterOne, SLCP 2 and GLCP 2 are all based on finding LC sets defined by the Markov chain of random walk on networks. LCP and ClusterOne are the non-overlapping and overlapping algorithms of searching for LC sets defined by the transition matrix P (LCP) of the underlying Markov chain. Therefore, they tend to find densely connected modules. However, SLCP 2 and GLCP 2 are respective algorithms for searching for non-overlapping and overlapping modules by finding LC sets based on the two-hop transition matrix P 2 (LCP 2 ) of the random walk Markov chain. By taking the advantage of finding two-hop LC sets, our new algorithms detect modules based on the interaction patterns, which reflect functional similarity between proteins. In Satuluri and Parthasarathy (2011), the authors present a similar formulation to search for modules based on the interaction similarity. However, our formulation depending on the Gram matrix W derived by LCP 2 can be viewed as the normalized version of the symmetrization matrix proposed in Satuluri and Parthasarathy (2011). Generally, as in normalized cuts, the normalized version often gives balanced modules that may lead to more Fig. 4. The top bar figure shows the comparison results based on the F measure on four PPI networks. The bottom figure displays the comparison of the percentages of matched GO terms in the complete set of selected high-level GO terms. For the HsaBioGRID PPI network, GS and PG fail to execute due to the memory limitation</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The authors thank Deborah Stabler and the anonymous reviewers for helpful suggestions to improve the presentation of this work.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Link communities reveal multiscale complexity in networks</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<forename type="middle">Y</forename>
				<surname>Ahn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">466</biblScope>
			<biblScope unit="page" from="761" to="764" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Gene ontology: tool for the unification of biology. the gene ontology consortium</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Ashburner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Genet</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="25" to="29" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<monogr>
		<title level="m" type="main">Parallel clustering algorithms with application to climatology</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Bisgin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Dalfes</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<pubPlace>Turkey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">The BioGRID Interaction Database: 2008 update</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Breitkreutz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="637" to="640" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Metagenes and molecular pattern discovery using matrix factorization</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Brunet</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="4164" to="4169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">A bayesian approach to network modularity</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Hofman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Wiggins</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rev. Lett</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="page">258701</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Gene ontology annotations at SGD: new data sources and annotation methods</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Hong</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="577" to="581" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">PCDq: human protein complex database with quality index which summarizes different levels of evidences of protein complexes predicted from H-invitational protein-protein interactions integrative dataset</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Kikugawa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">7</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note>Suppl. . 2</note>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">Conductance and rapidly mixing markov chains</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>King</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Detecting the overlapping and hierarchical community structure in complex networks</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Lancichinetti</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">New J. Phys</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">33015</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Computational approaches for detecting protein complexes from protein interaction networks: a survey</title>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Genomics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">S3</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>Suppl. . 1</note>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Specificity and stability in topology of protein networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Maslov</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Sneppen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">296</biblScope>
			<biblScope unit="page" from="910" to="913" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">MIPS: analysis and annotation of proteins from whole genomes</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">W</forename>
				<surname>Mewes</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="41" to="44" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">A lock-and-key model for protein-protein interactions</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">L</forename>
				<surname>Morrison</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="2012" to="2019" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Graph summarization with bounded error</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Navlakha</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Processing of the 33rd International Conference on Management of Data (ACM SIGMOD Conference</title>
		<meeting>essing of the 33rd International Conference on Management of Data (ACM SIGMOD Conference</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="419" to="432" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Revealing biological modules via graph summarization</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Navlakha</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comp. Biol</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="253" to="264" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Detecting overlapping protein complexes in protein-protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Nepusz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="471" to="472" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Finding community structure in networks using the eigenvectors of matrices</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Newman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rev. E</title>
		<imprint>
			<biblScope unit="page" from="74" to="036104" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Finding and evaluating community structure in networks</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Newman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Girvan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rev. E</title>
		<imprint>
			<biblScope unit="page" from="69" to="026113" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Protein-protein interactions: methods for detection and analysis</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Phizicky</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Fields</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Microbiol. Rev</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="94" to="123" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Protein interaction networks: more than mere modules</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Pinkert</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">1000659</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Fibroblast growth factors, their receptors and signaling</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">J</forename>
				<surname>Powers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Endocr. Relat.Cancer</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="165" to="197" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Human Protein Reference Database—2009 update</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Prasad</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="767" to="772" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Construction and analysis of protein–protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Raman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Autom. Exp</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Structure in Complex Networks</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Reichardt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Phys</title>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">766</biblScope>
			<date type="published" when="2009" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Protein–protein interactions essentials: Key concepts to building and analyzing interactome networks</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Rivas</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Fontanillo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">1000807</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Unraveling protein networks with power graph analysis</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Royer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Corum: the comprehensive resource of mammalian protein complexes</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Ruepp</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="646" to="650" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">The Database of Interacting Proteins: 2004 update</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Salwinski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="449" to="451" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Scalable graph clustering using stochastic flows: Applications to community discovery</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Satuluri</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Parthasarathy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">15th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">France</forename>
				<surname>Paris</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Symmetrizations for clustering directed graphs</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Satuluri</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Parthasarathy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th International Conference on Extending Database Technology</title>
		<meeting><address><addrLine>Uppsala, Sweden</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">Markov clustering of protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Satuluri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In: ACM Conference on Bioinformatics, Computational Biology and Biomedicine</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">Identifying functional modules in interaction networks through overlapping markov clustering</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Shih</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Parthasarathy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="473" to="479" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<analytic>
		<title level="a" type="main">BioGRID: a general repository for interaction datasets</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Stark</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="535" to="539" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">A cluster algorithm for graphs</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Van Dongen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Technical Report INSR0010. National Research Institute for Mathematics and Computer Science in the Netherlands</title>
		<meeting><address><addrLine>Amsterdam</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b36">
	<analytic>
		<title level="a" type="main">Finding local communities in protein networks</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Voevodski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">297</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b37">
	<analytic>
		<title level="a" type="main">Functional module identification by block modeling using simulated annealing with path relinking (2013) A novel subgradient-based optimization algorithm for block model functional module identification</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Wang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Qian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In: ACM Conference on Bioinformatics, Computational Biology and Biomedicine BMC Bioinformatics</title>
		<editor>Qian,X.</editor>
		<imprint>
			<biblScope unit="page" from="14" to="23" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note>Suppl. 2</note>
</biblStruct>

<biblStruct   xml:id="b38">
	<monogr>
		<title level="m" type="main">On semidefinite relaxation for normalized k-cut and connections to spectral clustering</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Xing</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Jordan</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b39">
	<analytic>
		<title level="a" type="main">Prevention of apoptosis by Bcl-2: release of cytochrome c from mitochondria blocked</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Yang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">275</biblScope>
			<biblScope unit="page" from="1129" to="1132" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b40">
	<analytic>
		<title level="a" type="main">Spectral relaxation for k-means clustering</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Zha</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="1057" to="1064" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>