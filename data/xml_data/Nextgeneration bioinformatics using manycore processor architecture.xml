
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:59+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Next-generation bioinformatics: using many-core processor architecture to develop a web service for sequence alignment</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Sergio</forename>
								<surname>Gálvez</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department Lenguajes y Ciencias de la Computación</orgName>
								<orgName type="institution">Universidad de Málaga</orgName>
								<address>
									<postCode>29071</postCode>
									<settlement>Málaga</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">David</forename>
								<surname>Díaz</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department Lenguajes y Ciencias de la Computación</orgName>
								<orgName type="institution">Universidad de Málaga</orgName>
								<address>
									<postCode>29071</postCode>
									<settlement>Málaga</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Pilar</forename>
								<surname>Hernández</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="institution">Instituto de Agricultura Sostenible (IAS-CSIC)</orgName>
								<address>
									<addrLine>Alameda del Obispo</addrLine>
									<postCode>14080</postCode>
									<settlement>s/n, Córdoba</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Francisco</forename>
								<forename type="middle">J</forename>
								<surname>Esteban</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Computer Services</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Juan</forename>
								<forename type="middle">A</forename>
								<surname>Caballero</surname>
							</persName>
							<affiliation key="aff3">
								<orgName type="department">Department Estadıstica</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Gabriel</forename>
								<surname>Dorado</surname>
							</persName>
							<affiliation key="aff4">
								<orgName type="department">Department Bioquímica y Biología Molecular</orgName>
								<orgName type="institution">Universidad de Córdoba</orgName>
								<address>
									<postCode>14071</postCode>
									<settlement>Córdoba</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Next-generation bioinformatics: using many-core processor architecture to develop a web service for sequence alignment</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="issue">5</biblScope>
							<biblScope unit="page" from="683" to="686"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq017</idno>
					<note type="submission">Sequence analysis Advance Access publication January 16, 2010 Received on July 6, 2009; revised on January 12, 2010; accepted on January 13, 2010</note>
					<note>[10:17 12/2/2010 Bioinformatics-btq017.tex] Page: 683 683–686 Associate Editor: Dmitrij Frishman Contact: galvez@uma.es Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Bioinformatics algorithms and computing power are the main bottlenecks for analyzing huge amount of data generated by the current technologies, such as the &apos;next-generation&apos; sequencing methodologies. At the same time, most powerful microprocessors are based on many-core chips, yet most applications cannot exploit such power, requiring parallelized algorithms. As an example of next-generation bioinformatics, we have developed from scratch a new parallelization of the Needleman–Wunsch (NW) sequence alignment algorithm for the 64-core Tile64 microprocessor. The unprecedented performance it offers for a standalone personal computer (PC) is discussed, optimally aligning sequences up to 20 times faster than the non-parallelized version, thus saving valuable time. Availability: This algorithm is available as a free web service for the scientific community at http://www.sicuma.uma.es/multicore. The open source code is also available on such site.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Bioinformatics algorithms and computing power are the main bottlenecks for analyzing huge amount of data generated by the current technologies, such as the 'next-generation' sequencing methodologies. Whereas multi-core processors with a few cores provide a relative improvement in desktop applications, manycore processors (chips with tens of cores) represent the next big step in affordable high-performance computation. Proposals and prototypes include Intel Terascale Processor (<ref type="bibr" target="#b19">Mattson et al., 2008</ref>), Sun Microsystems UltraSPARC T2 Pro (<ref type="bibr" target="#b24">Shah et al., 2007</ref>) and Plurality Hypercore Architecture Line (HAL, announced in Grenoble, December 2008). Pioneering such developments, Tilera has released several Tile64 processor-based cards (<ref type="bibr" target="#b5">Bell et al., 2008</ref>), together with the Tilera's Multicore Development Environment (MDE). From a research group point of view, one of the main advantages of these cards is that they can be inserted into a PCI-Express slot of a personal computer (PC) and may be used as a standalone implementation. At the same time, the host computer * To whom correspondence should be addressed. central processing unit (CPU) may be used for desktop purposes, while the parallel workload is carried out in the background by the Tile64 card. Also, there is no need to require the services of an expensive remote server to do such work. A Tile64 contains 64 cores (tiles), communicating over a 31 Tbps bandwidth iMesh architecture. Yet, most current applications cannot exploit such power, requiring parallelized algorithms. These cards have been deployed so far on high throughput video and networking (<ref type="bibr" target="#b10">Flohr, 2008</ref>). As an example of the next-generation of bioinformatics, we have demonstrated multi-core performance by developing from scratch a parallelized FastLSA algorithm [an improvement of the Needleman–Wunsch (NW) aligner]. The Tile64 RISC processor lacks floating point instructions, so it is not suitable for all types of supercomputing; yet we have found that it can be exploited for biological information management, where only integer numbers are used. The NW algorithm may be considered the most classical alignment method when the affine gap improvement is applied to the cost function (<ref type="bibr" target="#b11">Gotoh, 1982</ref>). FastLSA is an intuitive NW implementation when there are multiple cores and lots of main memory available (<ref type="bibr" target="#b9">Driga et al., 2006</ref>). Thus, we have used it as a practical and useful implementation of our development, which has been opened publicly by means of a free web service at http://www.sicuma.uma.es/multicore.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND AND CONTEXT</head><p>Modern computer engineering is driven by multi-threading and emerging multi-processing technologies. The graphics processing unit (GPU) is evolving as well to take advantage of its potential computing power in general-purpose applications (<ref type="bibr" target="#b20">Owens et al. 2007</ref>) and hybrid architectures of CPU/GPU, such as the Sony–IBM–Toshiba Cell Broadband Engine (<ref type="bibr" target="#b13">Kahle et al., 2005</ref>), the Intel Larrabee and AMD Fusion. A few bioinformatics applications have been developed for GPU (<ref type="bibr" target="#b16">Manavski and Valle, 2008</ref>), Cell and MMX processors (<ref type="bibr" target="#b21">Rognes, 2001;</ref><ref type="bibr" target="#b22">Sachdeva et al., 2008</ref>), special SIMD array parallel processors (<ref type="bibr" target="#b7">Di Blas et al., 2005</ref>) or even many PC-node clusters (<ref type="bibr" target="#b14">Li et al., 2005</ref>), obtaining remarkable acceleration factors and scalable solutions with parallel implementations. So, the tendency is to increase the number of cores to further exploit the parallelism, but the concept of 'core' differs a lot between GPU and CPU. Though they have similar computing power, a GPU core has a very limited set of resources when compared with a CPU core, such as local memory,Page: 684 683–686</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sergio Gálvez et al.</head><p>cache, internal registers and network functionalities. As a System on Chip (SoC), each core of the Tile64 processors is capable of running an independent operating system (Linux) and may be seen as a general purpose-independent computer. For this reason, it can run applications written in any general purpose programming language, such as the C/C++ used for standard PC. This allows many multi-threading and sequential existing programs to be easily adapted to the Tilera's Application Programming Interface (API), in order to exploit the parallelism of the card, enhancing communications between cores and iMesh. To build a parallelization of an algorithm, the developer focuses on the problem and not on the architecture. This is an extremely important difference when programming for GPU from a productivity point of view, though the number of languages and libraries available for general purpose GPU (GPGPU) is growing (<ref type="bibr" target="#b6">Che et al., 2008</ref>). Finally, we focus on the FastLSA algorithm to align a sequence s 1 of length l 1 with a sequence s 2 of length l 2. FastLSA is the same as NW with Gotoh's modifications, but instead of storing a whole matrix of l 1 × l 2 data, it stores only one row/column from each k row/column, so that it can be implemented through a wavefront parallelism. These intermediate values allow FastLSA to obtain the alignment quickly, when compared to other linear space algorithms as Hirschberg's (<ref type="bibr" target="#b12">Hirschberg, 1975;</ref><ref type="bibr" target="#b9">Driga et al., 2006</ref>). With less storage requirements, FastLSA is especially suitable for aligning very long sequences. To focus on the main discrepant regions of an extremely long alignment, the researcher may use a viewer like the-JalView, integrated in the-Brigid tool that we have developed for quality control to detect fraudulent olive oil (<ref type="bibr">Díaz et al., 2009</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">IMPLEMENTATION AND PARAMETERS</head><p>Our algorithm (MultiCore64-NW) has been developed entirely in C and deployed into TilExpress-20G cards by means of an integrated development environment based on Eclipse (MDE). MultiCore64NW is a parallel FastLSA deployed on 64 cores, taking advantage of the hardware enhancements: (i) three cache levels for faster memory access; (ii) improved mesh for faster inter-core communication and cache sharing (<ref type="bibr" target="#b5">Bell et al., 2008</ref>); and (iii) 8 GB of shared memory/high-speed solid state disk (SSD) to allocate big quantities of temporary storage. To optimize the use of these resources, MultiCore64-NW has been written from scratch to use the Tilera's API. In addition, we have changed the inherent shape of the parallel wave front of the algorithm, to maximize a two-level cache usage. MultiCore64-NW is freely available on Internet as a web service, which allows specifying the usual parameters for a FastLSA: sequences to align, open and extend gap costs, match/replace cost and matrix to be used: NUC.4.4, NUC.4.2, etc. The k default size is 750. The resulting alignment is shown on the web server or (optionally) sent to the provided e-mail address. Finally, MultiCore64-NW shows a good scalability, as shown in<ref type="figure" target="#fig_2">Figure 1</ref>. The additional time consumed by MultiCore64-NW when related to a maximum theoretical is due to the communication between workers and scheduler cores. We have implemented the complete algorithm, but have focused (as most authors) on the forward phase (1st stage) of FastLSA—much more expensive computationally—with sequences of different lengths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">BENCHMARKING</head><p>The MultiCore64-NW effectively uses 59 working tiles. The remaining five cores correspond to one dedicated to communications with the host, three shared for internal operations and one distributing the jobs among the worker tiles.<ref type="figure" target="#fig_3">Figure 2</ref>shows the time consumed by MultiCore64-NW compared with the parallel linear space algorithm (PLSA) implementation of FastLSA used for benchmarking in BioBench (<ref type="bibr" target="#b3">Albayraktaroglu et al., 2005</ref>); both use the best suitable k size. In addition, we have included z-align (<ref type="bibr" target="#b4">Batista et al., 2008</ref>) and our own reference implementation in Java; a comparison between execution times of fine-tuned C and Java programs may be considered wellbalanced (<ref type="bibr" target="#b23">Shafi et al., 2009</ref>). All of them have been executed on a Quad Core Intel Xeon 2.0 GHz PC with 8 GB of DDR2 memory in quad-channel. GPU-based algorithms, such as compute unified device architecture (CUDA) Smith–Waterman (<ref type="bibr" target="#b16">Manavski and Valle, 2008</ref>) and other widely known algorithms do not support long-sequence alignments; e.g. EMBOSS' needle cannot manage sequences above ∼40 000 (40 k) bp, and thus are not shown in this comparison chart. In<ref type="figure" target="#fig_3">Figure 2</ref>, we have selected the implementations of wavefront algorithms, which generate results up to 1000 kb. Our Java implementation of FastLSA shows similar results as PLSA. The PLSA (<ref type="bibr" target="#b14">Li et al., 2005</ref>) is a parallel implementation of FastLSA slower than a sequential implementation in Java, even using the four cores of the Xeon at their full potential (PLSA source cannot be migrated to Tile64 architecture, since it uses very specific resources unavailable for Tile64). Although PLSA is a Smith–Waterman Page: 685 683–686implementation, its first stage is very similar in complexity to NW. Therefore, against the fastest implementation in Java (z-align shows higher times of execution, even using four cores), MultiCore64-NW obtains a gain that ranges from 6.80 in small sequence lengths to a range between 16.70 and 18.14 in large ones.<ref type="figure" target="#fig_3">Figure 2</ref>reveals that the performance ratio of MultiCore64-NW decreases from 400 to 1000 kb sequences, due to the higher k value required to run the algorithm inside the 8 GB of memory of the TilExpress-20G card. MultiCore64-NW can align longer sequences with the only limitation of memory resources. On the other hand,<ref type="figure" target="#fig_4">Figure 3</ref>shows the processing t time (Z-axis) required to align sequences of l length (X-axis) with several values of k (Y-axis). The axes are non-linear to better visually understand the relationship between the values. A dotted line marks the minimum time required for each pair of sequences of l length and, as result, the optimal k value to perform the alignment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Next-generation bioinformatics</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS, DISCUSSION AND FURTHER WORK</head><p>Within the limits of a standalone PC, this is the first time that a general-purpose many-core chip has been used for bioinformatics, showing a great potential for algorithms in which there is no need of floating point calculi, and demonstrating the potential of parallelization and many-core chips for the nextgeneration bioinformatics. Thus, in comparison with widespread implementations of NW, such as EMBOSS' needle or parallelized FastLSA, the MultiCore64-NW obtains the optimal alignment up to 20 times faster. Controller scheduling time and memory access time through iMesh are extremely low, in comparison to processing time, so the k optimal values should maximize the number of processing tiles, without excessively sub-dividing the matrix. Even more, with very long sequences (&gt;750 kb) the k value must be incremented to decrease the amount of SSD memory required. This may be overcome in future versions by using the host file system in addition to the TilExpress-20G SSD. We want to remark that to obtain such high performance the algorithm has been written from scratch, in order to maximize the use of the Tilera's card resources. Such approach is inherent to any parallel architecture optimization. We are further developing a multiple alignment algorithm in order to obtain new benchmarks against classical methods such as ClustalW and PRANK. Using MultiCore64-NW, we have obtained as well optimal pairwise phylogenetic distances of mid-length sequences (around 100 kb), so now we are focusing on the PRANK algorithm (<ref type="bibr" target="#b15">Löytynoja and Goldman, 2008</ref>). This algorithm may take a dendrogram (phylogenetic tree) as parameter, being very sensible to its quality, and providing very good results when the tree approximates the best achievable result. The triangular matrix of distances that allows generating this dendrogram is easily obtained with MultiCore64-NW, up to 20 times faster than with a non-parallelized algorithm. Our development offers exceptional performance in standalone PC: the mentioned matrix for 10 sequences of approximately 100 kb can be obtained from 55 NW pairwise alignments in 765 s (∼13 min). These and similar developments will have a significant impact on bioinformatics, allowing to answer the need for new parallelized algorithms and massive computational power, which are already demanding the current technologies, such as the so-called 'next-generation' sequencing methodologies.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>[10:17 12/2/2010 Bioinformatics-btq017.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>Processing time (in seconds) Number of tiles</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.1.</head><figDesc>Fig. 1. Processing time of MultiCore64-NW with the increasing number of tiles, using sequences of 250 kb.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.2.</head><figDesc>Fig. 2. Benchmark of first stage of main wavefront parallel NW/SW implementations. Time values are in seconds and sequence length in kb.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.3.</head><figDesc>Fig. 3. Relationship between k size, sequence length and processing time.</figDesc></figure>

			<note place="foot">© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org</note>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We are grateful to Tilera for providing hardware and software tools http://www.tilera.com. S.G. and G.D. have contributed to the project leadership.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<monogr>
		<title level="m" type="main">Ministerio de Ciencia e Innovación</title>
		<imprint>
			<biblScope unit="page" from="2006" to="12550" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">AGL2006-12550-C02-02); &apos;Consejería de Agricultura y Pesca&apos; of &apos;Junta de Andalucía</title>
	</analytic>
	<monogr>
		<title level="m">C02-01</title>
		<meeting><address><addrLine>Grupo PAI&apos; (AGR</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">Spain. Conflict of Interest: none declared</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">BioBench: a benchmark suite of bioinformatics applications</title>
		<author>
			<persName>
				<forename type="first">References</forename>
				<surname>Albayraktaroglu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2005 IEEE International Symposium on Performance Analysis of Systems and Software</title>
		<meeting>2005 IEEE International Symposium on Performance Analysis of Systems and Software<address><addrLine>Austin, TX, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="2" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">A parallel strategy for biological sequence alignment in restricted memory space</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">B</forename>
				<surname>Batista</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Parallel Distrib. Comput</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="548" to="561" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">TILE64 TM processor: a 64-core SoC with mesh interconnect</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Bell</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2008 IEEE Integrated Solid State Circuits Conference</title>
		<meeting>2008 IEEE Integrated Solid State Circuits Conference<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="88" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">A performance study of general-purpose applications on graphics processors using CUDA</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Che</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Parallel Distrib. Comput</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="1370" to="1380" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">The UCSC Kestrel parallel processor</title>
		<author>
			<persName>
				<forename type="first">Di</forename>
				<surname>Blas</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Parallel Distrib. Comput</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="1370" to="1380" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Intuitive bioinformatics for genomic applications: omega-brigid workflow framework</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Díaz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 10th International Work-Conference on Artificial Neural Networks</title>
		<meeting>10th International Work-Conference on Artificial Neural Networks<address><addrLine>Salamanca, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1084" to="1091" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">FastLSA: a fast, linear-space, parallel and sequential algorithm for sequence alignment</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Driga</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="337" to="375" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<monogr>
		<title level="m" type="main">Implementation of an MPEG Codec on the Tilera TM 64 processor. Research Project</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Flohr</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="11" />
			<pubPlace>Washington University, St. Louis</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">An improved algorithm for matching biological sequences</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Gotoh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">162</biblScope>
			<biblScope unit="page" from="705" to="708" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">A linear space algorithm for computing maximal common subsequences</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Hirschberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comm. ACM</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="341" to="343" />
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Introduction to the cell multiprocessor</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">A</forename>
				<surname>Kahle</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Syst. J</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="589" to="604" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Parallel linear space algorithm for large-scale sequence alignment</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Euro-Par 2005</title>
		<meeting>Euro-Par 2005<address><addrLine>Lisboa, Portugal</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="1207" to="1216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Phylogeny-aware gap placement prevents errors in sequence alignment and evolutionary analysis</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Löytynoja</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Goldman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">320</biblScope>
			<biblScope unit="page" from="1632" to="1635" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">CUDA compatible GPU cards as efficient hardware accelerators for Smith–Waterman sequence alignment</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">A</forename>
				<surname>Manavski</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Valle</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page">10</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>Suppl. . 2</note>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">Bioinformatics-btq017.tex] Page</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="17" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">Sergio</forename>
				<surname>Gálvez</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Programming the Intel 80-core network-on-a-chip Terascale processor</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">G</forename>
				<surname>Mattson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2008 ACM/IEEE Conference on Supercomputing</title>
		<meeting>2008 ACM/IEEE Conference on Supercomputing<address><addrLine>Austin, TX, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">A survey of general-purpose computation on graphics hardware</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">D</forename>
				<surname>Owens</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="80" to="113" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">ParAlign: a parallel sequence alignment algorithm for rapid and sensitive database searches</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Rognes</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1647" to="1652" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Exploring the viability of the cell broadband engine</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Sachdeva</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Parallel Comp</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="616" to="626" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">A comparative study of Java and C performance in two large-scale parallel applications</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Shafi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Concurr. Comput. Prac. Exper</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1882" to="1906" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">UltraSPARC T2: a highly-treaded, power-efficient, SPARC SoC</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Shah</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2007 IEEE Asian Solid-State Circuits Conference</title>
		<meeting>2007 IEEE Asian Solid-State Circuits Conference<address><addrLine>Jeju, Korea</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="22" to="25" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>