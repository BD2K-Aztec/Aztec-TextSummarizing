
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:36+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Sequence analysis Adjusting scoring matrices to correct overextended alignments</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Lauren</forename>
								<forename type="middle">J</forename>
								<surname>Mills</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular, Cell and Developmental Biology</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">William</forename>
								<forename type="middle">R</forename>
								<surname>Pearson</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular, Cell and Developmental Biology</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">John</forename>
								<surname>Hancock</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Biochemistry and Molecular Genetics</orgName>
								<orgName type="institution">University of Virginia</orgName>
								<address>
									<postCode>22908</postCode>
									<settlement>Charlottesville</settlement>
									<region>VA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Sequence analysis Adjusting scoring matrices to correct overextended alignments</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">23</biblScope>
							<biblScope unit="page" from="3007" to="3013"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt517</idno>
					<note type="submission">Received on July 12, 2013; revised on August 28, 2013; accepted on August 29, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Contact:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Sequence similarity searches performed with BLAST, SSEARCH and FASTA achieve high sensitivity by using scoring matrices (e.g. BLOSUM62) that target low identity (533%) alignments. Although such scoring matrices can effectively identify distant homo-logs, they can also produce local alignments that extend beyond the homologous regions. Results: We measured local alignment start/stop boundary accuracy using a set of queries where the correct alignment boundaries were known, and found that 7% of BLASTP and 8% of SSEARCH alignment boundaries were overextended. Overextended alignments include non-homologous sequences; they occur most frequently between sequences that are more closely related (433% identity). Adjusting the scoring matrix to reflect the identity of the homologous sequence can correct higher identity overextended alignment boundaries. In addition , the scoring matrix that produced a correct alignment could be reliably predicted based on the sequence identity seen in the original BLOSUM62 alignment. Realigning with the predicted scoring matrix corrected 37% of all overextended alignments, resulting in more correct alignments than using BLOSUM62 alone. Availability: RefProtDom2 (RPD2) sequences and the FASTA software are available from http://faculty.virginia.edu/wrpearson/fasta.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Sequence similarity search algorithms are used to identify evolutionary homologs and to generate hypotheses for the function of unknown proteins. These algorithms assign homology between sequences achieving statistically significant similarity scores with high fidelity, even between highly divergent sequences sharing low similarity (<ref type="bibr" target="#b3">Brenner et al., 1998;</ref><ref type="bibr" target="#b11">Pearson, 1995;</ref><ref type="bibr" target="#b13">Pearson and Sierk, 2005</ref>). However, the same methodology that provides for the sensitive identification of homology at low identity can also lead to alignments that include non-homologous sequence adjacent to, or between, higher identity homologous sequences (<ref type="bibr" target="#b7">Gonzalez and Pearson, 2010a</ref>). Homologous overextension was first identified as a source of error during iterative similarity searches (<ref type="bibr" target="#b7">Gonzalez and Pearson, 2010a</ref>). Overextension occurs when alignments extend past the boundaries of the homologous region in the library, query or both sequences, leading to the inclusion of non-homologous sequence in an alignment (<ref type="figure">Fig. 1</ref>). The inclusion of non-homologous sequence has been identified in alignments between highly identical DNA sequences (<ref type="bibr" target="#b5">Chao et al., 1993</ref>) and has been termed the 'mosaic effect' (<ref type="bibr" target="#b2">Arslan et al., 2001</ref>). Overextension occurs because local sequence alignment boundaries depend on the scoring matrix. The popular BLASTP (<ref type="bibr" target="#b1">Altschul et al., 1997</ref>) tool, along with other sequence alignment tools (e.g. SSEARCH and FASTA;<ref type="bibr" target="#b12">Pearson, 2000</ref>), creates local alignments between similar sequences using scoring matrices. Scoring matrices assign a similarity score to each pair of aligned amino acids based on the probability that the amino acid transition has occurred more often through evolution than by chance. Amino acid replacements that are common through evolution are assigned high similarity scores, whereas rare replacements are assigned negative scores. Scoring matrices have an implicit evolutionary model, which allows different matrices to target different evolutionary distances (<ref type="bibr" target="#b0">Altschul, 1991;</ref><ref type="bibr" target="#b6">Dayhoff et al., 1978;</ref><ref type="bibr" target="#b9">Henikoff and Henikoff, 1992;</ref><ref type="bibr" target="#b10">Muller et al., 2002</ref>). Scoring matrices that target long evolutionary times (deep scoring matrices) allow more amino acid substitutions and gaps, whereas shallower matrices favor higher sequence identity and have higher gap penalties. The scoring matrix dictates the local alignment boundaries; increasing or decreasing the length of the optimal local alignment reduces the total alignment score. Likewise, changing the scoring matrix can result in a different alignment. Ideally, a local alignment of homologous domains in different sequence contexts will align every residue in the homologous region, and no residues outside the domain boundaries, so that the alignment boundaries reflect the domain boundaries. Overextended alignments include additional sequence from outside the homologous domain boundaries. For example, in<ref type="figure">Figure 1</ref>artificial, randomly shuffled, sequence from the query appears to be homologous to a real protein. In this article, we show that scoring matrices have preferred alignment identities and alignment lengths, and that BLOSUM62 can produce overextended alignments, most often between sequences with433% identity. We also show that using the correct scoring matrix can produce more accurate alignment boundaries. Finally, we show that we can produce more accurate alignment boundaries, even without true domain boundary knowledge, by using the initial BLOSUM62 alignment identity to specify a more appropriate scoring matrix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Construction</head><p>of the RefProtDom 2 (RPD2) dataset 2.1.1 Selecting families for RPD2 For this study, we built an updated version of the RPD protein database (Gonzalez and Pearson, *To whom correspondence should be addressed. ÃŸ The Author 2013. Published by Oxford University Press. All rights reserved. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com 2010b) initially used to characterize alignment overextension with PSIBLAST, using protein domains and sequences annotated in Pfam version 26 (<ref type="bibr" target="#b14">Punta et al., 2012</ref>). From 13 672 initial Pfam version 26 families, 136 families were selected that met the following criteria: (i) model length (4200 residues); (ii) available structure; (iii) family size (4100 members); and (iv) taxonomic diversity (presence in two of three kingdoms of life with the second most abundant kingdom having at least 15% as many the members as the most abundant). Although most Pfam domain families can be represented by a single hidden Markov model (HMM), some diverse families require multiple HMMs. When this occurs, the related domain families are grouped into Pfam clans. Protein domains belonging to the same Pfam family or Pfam clan are homologous to each other. Only a single family from any one clan was included and then only if the family model lengths of the HMMs in the clan differed by52-fold. Of the 136 families selected, 56 were members of clans. Four RNA polymerase families were excluded because they have a complex and inconsistent domain organization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">Selecting sequences for the RPD2 library For each</head><p>of the RPD2 families, up to 5000 non-viral full-length (480% of Pfam model length) domains were randomly selected. The unique protein sequences from which the domains came were then identified and included in the RPD2 library. Low complexity regions were lowercase masked by pseg and stored in FASTA format. Because many of these sequences contained domains other than the identifying domain, the final RPD2 library contains 1837 families ranging in membership from 7063 examples of the domain to 1. In total, the RPD2 library contains 499 058 domains from 282 742 different protein sequences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.3">Creating query sets for RPD2</head><p>For each RPD2 family, 10 nonviral full-length examples of the domain were randomly selected. These domain sequences were used as queries against the RPD2 library. Searches were performed with SSEARCH version 36.3.6. The example of the domain that was able to find the largest number of the RPD2 library domains with an E()-score 10 Ã€3 was selected to be that family's query sequence. Each selected domain was embedded in the center of shuffled sequence with the same length and amino acid composition as the original domain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Database searches and scoring matrices</head><p>Searches were performed using BLASTP version 2.2.27Ã¾ (<ref type="bibr" target="#b4">Camacho et al., 2009</ref>) or SSEARCH version 36.3.6 (<ref type="bibr" target="#b12">Pearson, 2000</ref>). A SSEARCH comparison of 136 query sequences against the 282 742 sequence RPD2 library took about 2 min on a 48 core machine. Bit scores, sequence identity, expectation values and alignments were calculated by the search algorithm. All alignments had an E()-score 10 Ã€6 with a domain originally annotated by Pfam. Two types of scoring matrices were evaluated: the BLOSUM62 routinely used with BLASTP and the VTML matrices (VT) described by<ref type="bibr" target="#b10">Muller et al. (2002)</ref>. For the VT, the gap penalties described by Reese and Pearson (2002) were adjusted to produce a smooth mean identity transition. The gap penalties used for each matrix are shown in<ref type="figure" target="#tab_1">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Boundary accuracy</head><p>Boundaries for each alignment were known because the query domain was embedded in shuffled sequence. Alignments that extend outside of the embedded domains into the shuffled sequence are overextended. Alignments that fail to extend to the domain boundaries are incomplete. Alignment boundaries within AE10 residues of the embedded domain boundary are considered correct. The beginning and end of the alignments were evaluated independently, and the difference between the alignment boundaries and the embedded domain boundaries was calculated in number of residues. Incomplete alignments had negative boundary errors and overextended alignments had positive boundary errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Sub-alignment scoring</head><p>SSEARCH from FASTA version 36.3.6 can provide location, identity and score values for non-overlapping subsections of any alignment. In this study, we annotated the embedded domain and non-domain regions in each query, which provided the score and identity for the homologous correct alignment, even if the alignment was overextended. For overextended alignments, the identity and score of the shuffled sequence that was included in the alignment was also calculated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Scoring matrix adjustment</head><p>Alignments with greater than 36% identity were realigned using a series of VTML matrices. The new matrix was selected based on the BLOSUM62 identity given in<ref type="figure">Table 2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Homologous overextension</head><p>Deep scoring matrices can produce inaccurate alignment boundaries.<ref type="figure">Figure 1</ref>shows an example of an overextended alignment created by BLASTP. The query was constructed using an E1-E2 ATPase (PF00122) domain from B0TE74_HELMI surrounded by shuffled sequence (dashed lines). This domain is homologous to the E1-E2 ATPase domain, also labeled PF00122, in the library sequence. The PF00122 domain extends from position 113 to 335 in the query. Any alignment that includes sequence from the query outside of the embedded domain includes shuffled sequence that is not homologous to the library sequence. In this example, the alignment extends from position 84 to 415 in the query, incorporating 109 residues of shuffled sequence or 33% of the total alignment length. The library sequence, like many proteins, consists of multiple domains. The alignment between these two sequences falsely indicates that shuffled sequence in the query is homologous to a neighboring Hydrolase (PF00702) domain in the library. BLASTP reports that the aligned sequences are 50% identical, but the homologous region is 64.1% identical, whereas the non-homologous flanking regions are 23% identical. The homologous region contributes 83% of the bit score (248.2 bits) and the non-homologous region only contributes 17%. This imbalance in the contributions of homologous compared with non-homologous regions to both alignment identity and score is a hallmark of overextended alignments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Overextension occurs more frequently in alignments with higher sequence identity</head><p>To understand how often incorrect alignment boundaries occur, searches were performed with both BLASTP and SSEARCH, using BLOSUM62 (BL62) with the RPD2 query set and library. Each alignment boundary was measured and the results were divided into seven bins ranging from extremely incomplete (5Ã€40 residues, i.e. 440 residues missing) to extremely overextended (440 residues added;<ref type="figure">Fig. 2A</ref>). Although most of the alignment boundaries were within 10 residues of the embedded domain boundaries (71% BLASTP, 75% SSEARCH), BLASTP and SSEARCH also created incorrect alignment boundaries. Of the boundaries measured, 22% of BLASTP boundaries were incomplete and 7% were overextended, aligning random sequence with real protein residues. Seventeen percent of the SSEARCH boundaries were incomplete and 8% were overextended. Alignment identity was divided into quartiles. Each identity quartile shows similar representation within the group of 'correct' alignment boundaries (within AE10 residues of the embedded domain). In contrast, incomplete alignment boundaries are more common in low identity alignments, whereas overextended alignment boundaries are more common in high identity alignments. Most incomplete alignment boundaries (73% for BLASTP, 76% for SSEARCH) were from alignments in the lowest two identity quartiles. The opposite is true for overextended alignments, where most had identities in the top two quartiles (52% for BLASTP, 54% for SSEARCH). When incorrect alignments are examined independently, the percentage of the boundaries that is overextended increases with identity (<ref type="figure">Fig. 2B</ref>).<ref type="figure">Figure 2</ref>reports incomplete and overextended alignment boundaries for the 397 123 homologs that were identified by BLASTP and SSEARCH. Because RPD2 was built from diverse domain families, most of these homologs are distant, with a median identity of 33%. In practice, one rarely examines every A B<ref type="figure">Fig. 2</ref>. Boundary accuracy and sequence identity. Using the RPD2 embedded domain queries and sequence library, pairwise protein sequence alignments were calculated with BLASTP (B) and SSEARCH (S) using BLOSUM62. Boundary accuracy was measured for both the beginning and end of alignments between known homologs with E()score 10 Ã€6 as detailed in Methods. Alignment inaccuracy of less than Ã€10 residues indicates an incomplete alignment; 410 residues is considered overextension. In panel (A), alignment identities were divided into quartiles. The data from the searches were binned by boundary accuracy (top) and sequence identity (color). In panel (B), incorrect alignment boundaries were isolated and alignments were divided into six identity bins. The boundary accuracy is given by the color of the bar. Identity bins are inclusive at the maximumMeans measured from 136 random sequence searches (<ref type="figure" target="#fig_0">Fig. 3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3009</head><p>Adjusting scoring matrices significant match, so we also counted incomplete and overextended boundaries for the top 100 significant hits with each query. For the top 100 hits, the median alignment identity increases to 52%. In this more closely related set, the percentage of overextended alignments increases to 8% for BLASTP and 10% for SSEARCH and incomplete alignment decreases to 8% and 5%, respectively. Incomplete alignments can occur when homologous domains are evolutionarily distant, so that the alignment captures only the most conserved regions of the homology. This contrasts with traditional false negatives, where the homology is missed altogether. In the traditional case, the reduced sensitivity of pairwise sequence comparisons compared with model-based (PSIBLAST, PSI-SEARCH, HMMER) or structure-based methods is well recognized (<ref type="bibr" target="#b13">Pearson and Sierk, 2005</ref>). Incomplete alignments are another example of inadequate alignment sensitivity. Overextension, while recognized in pairwise genomic alignments (<ref type="bibr" target="#b5">Chao et al., 1993</ref>), had not been systematically measured in pairwise protein alignments. Missed homologs can be identified using transitive homology, protein family models or structures. But strategies for removing non-homologous sequence from pairwise protein alignments have not been described.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Scoring matrices, identity and alignment length</head><p>Alignment overextension often results from a mismatch between the evolutionary distance between the homologous sequences and the target identity of the scoring matrix used in the alignment. Unlike global sequence alignments, which use the full length of each sequence, the scoring matrix determines local alignment boundaries. To understand how different scoring matrices produce different alignment boundaries, we used shuffled sequences as queries against the RPD2 library. 'Deeper' scoring matrices (scoring matrices targeted to more evolutionary change) produce longer less identical alignments by chance, whereas 'shallower' scoring matrices produce shorter higher identity alignments (<ref type="figure" target="#fig_0">Fig. 3</ref>). Here, the same 136 shuffled queries were used with each matrix, so the resulting trends in identity and alignment length reflect the average properties of the matrices themselves. The target identities with gaps are lower, and the alignment lengths longer, than the values estimated from the scoring matrix alone. Remarkably, the entropies calculated analytically from the scoring matrix alone track closely between the gapped and ungapped empirical mean entropies. Including gaps (black boxes) makes scoring matrices 'deeper', thus lowering identity and increasing alignment length compared with the same matrix without gaps (gray circles). Different scoring matrices can produce different alignment boundaries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Selecting the correct scoring matrix gives correct domain boundaries</head><p>To illustrate how 'correct' scoring matricesâ€”scoring matrices with target identities that match the evolutionary distance of the homologous domainsâ€”improve accuracy, we examined alignment boundary changes with different scoring matrices. Beginning with 16 640 overextended alignments, we tracked the boundary accuracy produced by six VT with increasing target identity (<ref type="figure" target="#fig_1">Fig. 4</ref>). The alignment with the smallest cumulative difference between the embedded domain boundaries and the alignment boundaries was identified, and 10 realignments from each of the VT scoring matrices were randomly selected. The maximum boundary errors for both the initial BLOSUM62 and final best alignment are shown in<ref type="figure" target="#fig_1">Figure 4</ref>. All of the realignments corrected the overextended boundary to within AE10 residues of the embedded domain, producing alignments with higher identities. As the identity of the initial alignment increases, the target identity of the matrix that produces the corrected alignment also increases. However, the matrix required did not correlate with the amount of overextension in the original BLOSUM62 alignment in this dataset. Nor was there any correlation in alignments that used alternate shuffling strategies for the embedded domains. In general, lower target identity matrices (VT120, VT100, VT80) correct lower identity alignments (the filled symbolsQueries were constructed from 136 shuffled protein domains. SSEARCH was used to search against the RPD2 library with these shuffled queries using either the gap penalties given in<ref type="figure" target="#tab_1">Table 1</ref>(black squares) or gap penalties of Ã€1000/Ã€1000 for open/extend (gray circles), which effectively creates alignments with no gaps. The identity and alignment length from the highest scoring alignment was selected from each query. The (A) mean identity, (B) mean entropy and (C) mean alignment length is given by the point, and the standard deviation is indicated by the error bars for each scoring matrix. The analytical entropy calculated from the scoring matrix is shown as open triangles in panel (B) tend to be on the left of the final distribution) and higher target identity matrices (VT40, VT20, VT10) correct higher identity alignments (the open symbols tend to be on the right). But this is not always the case; sometimes a high identity alignment is corrected by a distant matrix (dash-dot line) and vice versa (rounded-dash line). Anomalous matrices can correct overextension because alignment boundary correction is robust to matrix selection.<ref type="figure" target="#fig_1">Figure 4B</ref>shows two extreme examples, a deep matrix (VT120) correcting a high identity alignment (dash-dot line) and a shallow matrix (VT40) correcting a low identity alignment (rounded-dash line). In both cases, a wide range of scoring matrices correct the alignment, including a matrix at the predicted target identity (for the red low identity alignment, VT120, VT100 and VT80 produce an alignment that is off by two residues, whereas VT40 is perfect). The robustness of boundary correction to scoring matrix choice allows us to approximate the 'correct' alignment identity from the initial (possibly overextended) BLOSUM62 identity. Because high identity alignments tend to be corrected by shallow scoring matrices while lower identity alignments can be corrected by less shallow scoring matrices (<ref type="figure" target="#fig_1">Fig. 4</ref>), we attempted to correct BLOSUM62 alignments using the scoring matrices and thresholds shown in<ref type="figure">Table 2</ref>. Forty-seven percent of overextended boundaries came from alignments with 436% identity and, therefore, were candidates for the realignment algorithm. Of the overextended boundaries that could be realigned, 97% had reduced overextension with 86% of the overextended boundaries moving within AE10 residues of the embedded domain boundaries. Overall, including overextended alignments that were not realigned, the total amount of overextension was reduced from 8 to 5%. Although the scoring matrix identity thresholds in<ref type="figure">Table 2</ref>dramatically decrease overextension errors, they can also produce incomplete alignments (<ref type="figure" target="#fig_2">Fig. 5</ref>). In contrast to<ref type="figure" target="#fig_1">Figure 4</ref>, where we selected the most accurate alignment,<ref type="figure" target="#fig_2">Figure 5</ref>shows the results of realignment based solely on the identity of the initial BLOSUM62 alignment (the thresholds in<ref type="figure">Table 2</ref>). Looking at all alignments with 436% identity, 16 411 alignment boundaries changed accuracy bins. Of the alignment boundaries that changed accuracy bins, 68% moved from being overextended (410 residues, blue colors) to within AE10 residues, whereas 20% moved from being within AE10 residues or overextended to incomplete. Most (73%) of the realigned incomplete alignment boundaries fall into the Ã€20 : Ã€11 bin (orange). The most overextended alignments (440 residues,<ref type="figure">Fig. 2</ref>(A) Sequence pairs with 433% identity and overextended alignment boundaries were selected from the results of the similarity search performed using SSEARCH with BLOSUM62. Each sequence pair was realigned using VT120, 100, 80, 40, 20 and 10 (<ref type="figure" target="#tab_1">Table 1</ref>). Boundary accuracy was calculated for each alignment and the alignment with the smallest cumulative difference between the embedded domain boundaries and the alignment boundaries was selected. Symbol shape and color (black, open) indicate the scoring matrix used for the alignment; lines connect alignments between the same sequence pairs. (B) Maximum boundary inaccuracy across every scoring matrix for two sequence pairs in (A) is shown. The rounded dashed line to the left in panel (A) and the higher line between VT120 and VT80 in panel (B) show a low identity alignment corrected by VT40; the square dash-dot line to the right in panel (A) and flat between VT120 and VT10 in panel (B) shows a high identity alignment corrected by VT120</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head><p>Mismatches between the sequence identity of aligned homologous domains and the target identity of the scoring matrix used to produce the local sequence alignment can lead to overextended alignments (Figs. 1 and 2). Similarity scoring matrices have preferred alignment lengths and identity. Deep scoring matrices create longer alignments and have lower target identity compared with shallower matrices (<ref type="figure" target="#fig_0">Fig. 3</ref>). Alignments created by BLOSUM62, most often between sequences with higher identity (433%), can extend past the boundaries of the homologous domain to include non-homologous sequence (<ref type="figure">Fig. 2</ref>). Using a shallower scoring matrix that targets the correct sequence identity can correct overextension (<ref type="figure" target="#fig_1">Fig. 4</ref>). Predicting the scoring matrix that will lead to a better alignment, using initial (possibly overextended) identity given by BLOSUM62, can correct overextended alignments. In our RPD2 database, 37% of overextended alignments were corrected to within AE10 residues, or 86% of the alignments with high enough identity (436%) to be considered for realignment. However, realignment has a cost; a fraction of correctly aligned domains are incompletely realigned. The observation that 'deep' scoring matrices produce overextended alignments between domains that are less evolutionarily distant (have higher identity) than the scoring matrix target identity is not surprising, though the relationship between alignment boundaries (in contrast to internal alignment accuracy) and scoring matrices has not been extensively studied. Traditional internal alignment accuracy decreases as evolutionary distance increases; different sequences are difficult to align accurately. In contrast, alignment overextension occurs most often when closely related sequences are aligned, and thus becomes more frequent as sequence databases grow. As log-odds matrices, every scoring matrix has a target evolutionary distance, or percent identity, which can be approximated from the homologous replacement frequencies that are the numerator of the log-odds ratio (<ref type="bibr" target="#b0">Altschul, 1991</ref>). As evolutionary distance and the number of replacements increase, the replacement frequencies for identities decrease and the non-identical replacement frequencies increase, which reduces the target identity of the matrix when aligning random sequences (<ref type="figure" target="#fig_0">Fig. 3</ref>). Overextension occurs when a scoring matrix that models a longer period of evolution (a deeper scoring matrix) by allowing more mutations is used to align sequences with less evolutionary change. A deep scoring matrix produces a less identical alignment because it accepts more amino acid replacements. Gap penalties also modify alignment length and identity; increased gap penalties produce shorter higher identity alignments, whereas lower gap penalties produce longer lower identity alignments (<ref type="figure" target="#fig_0">Fig. 3</ref>). Lower mismatch penalties and lower gap penalties in deep matrices allow the local alignment algorithm to add additional identities that are occurring by chance from non-homologous sequence for the sake of modest increases in score. Thus, in<ref type="figure">Figure 1</ref>, 83% of the score was produced by 67% of the alignment. Overextended alignments are locally optimal, but they are not biologically correct. RPD2 was designed to simulate the most common similarity searchâ€”searches against full-length proteins in a comprehensive sequence database. RPD2 sequences were selected from the set of sequences annotated by Pfam release 26, which samples both SwissProt and Trembl protein sequences. The RPD2 library is large (528 742 sequences) and diverse. Queries were engineered from long (4200 residues) protein domains, allowing BLOSUM62 searches to identify distant homologs. These domains are surrounded by shuffled protein sequence, providing known alignment boundaries. Alignments that extend into the flanking random sequence are thus guaranteed to be nonhomologous. Our initial searches with 136 independent embedded domain queries produced both incomplete alignments (22% BLASTP, 17% SSEARCH, both with BLOSUM62) and overextended alignments (7% BLASTP, 8% SSEARCH). Incomplete alignments reflect the reduced sensitivity of pairwise alignment compared with the HMM based methods used to annotate the Pfam domains in RPD2, and the fact that in the diverse set of homologous RPD2 domains, half of the detectable homologs share 533% sequence identity. In characterizing 42 Ã‚ 200 000 alignment boundaries in the 136 query domain searches, we consider far more distant alignments than would typically be examined during the genome annotation process, where sequences sharing at least 40% identity might be used to transfer annotation. Restricting the analysis to the top 100 significant hits for each query increases the median alignment identity to 53%, which in turn decreases incomplete alignments to 5%, and increases the overextension to 10%. Restricting the analysis to the top 25 homologs further decreases incomplete alignment to 2%, whereas increasing overextension to 11%. When the thresholds in<ref type="figure">Table 2</ref>are used to correct thetop 100 alignments for each query, overextension is corrected 73% of the time, whereas incomplete alignments are produced only about 10% of the time. For the top 25, overextension is corrected 86% of the time, whereas alignments become incomplete only 1% of the time. We believe our estimates of alignment overextension (7â€“10% of alignments) are conservative, both because sequence databases are growing, allowing similarity searches to identify closer homologs, and because many proteins comprise multiple domains. In this study, we examine alignment overextension from a single domain. Many proteins contain multiple domains separated by non-homologous regions; proteins that contain multiple widely dispersed common domains, like Ankyrin, fn3 or SH3 domains, will have many more chances to overextend across non-homologous regions. Although we understand why high identity alignments might overextend when aligned with low targetâ€“identity scoring matrices like BLOSUM62, matrix/targetâ€“identity mismatch only accounts for about half of the overextensions we observed. In our diverse sequence set, 53% of overextensions occur in alignments that are536% identical. Unfortunately, we cannot predict which lower identity alignments will overextend. The amount of overextension does not correlate well with the difference between alignment identity and scoring matrix target identity. Likewise, overextension does not occur significantly more often in domains that have more identity at their ends. The increased frequency of overextended boundaries in alignments between high identity sequences (<ref type="figure">Fig. 2B</ref>) is the only meaningful trend that we identified. In contrast to high identity overextension, where the difference in targetâ€“identity between the homologous region and the scoring matrix can explain overextension, low identity overextension may simply reflect the propensity of deep matrices to produce long alignments, even between unrelated sequences (<ref type="figure" target="#fig_0">Fig. 3</ref>). The long alignments in<ref type="figure" target="#fig_0">Figure 3</ref>are not statistically significant, but when they occur by chance near a (low identity) homologous domain, they can contribute to overextension. Overextension occurs more frequently in higher identity alignments because of targetâ€“identity mismatch, but the majority of overextension we measured occurs by chance in low identity alignments, because most of our alignments are low identity. In this study, we have focused on overextension in pairwise alignments because pairwise similarity searches are widely used to annotate newly sequenced genomes. Alignment overextension also occurs with model-based searches like PSI-BLAST; we initially identified overextension as the major cause of model contamination with PSI-BLAST (<ref type="bibr" target="#b7">Gonzalez and Pearson, 2010a</ref>). Our strategy for reducing overextensionâ€”re-alignment with a more correct scoring matrixâ€”is most easily applied to pairwise alignment because a traditional nonâ€“position-specific scoring matrix like BLOSUM62 or VT120 has an easily characterized target identity and the alignment between two sequences has a natural evolutionary distance. It is more difficult to interpret the 'distance' between a sequence and a position-specific scoring matrix or HMM, and it is unclear how such models might be scaled to reduce overextension. The expansion of modern protein databases has led to an increase in the identification of higher identity homologs. Accurate function prediction requires a higher level of sequence identity and an accurate alignment, two factors that are at odds with deep scoring matrices. With modern comprehensive databases, it is common to identify many homologs that are 440% identical. In our diverse RPD2 protein set, the median sequence identity for the top 100 homologs was 53%, much higher than the target identity range for BLOSUM62. With more high identity homologs and increased sequence and structural annotation, pairwise alignments can provide essential insights to the function of novel proteins, but only if the alignment boundaries are accurate.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.3.</head><figDesc>Fig. 3. Scoring matrix target identity, entropy and alignment length. Queries were constructed from 136 shuffled protein domains. SSEARCH was used to search against the RPD2 library with these shuffled queries using either the gap penalties given in Table 1 (black squares) or gap penalties of Ã€1000/Ã€1000 for open/extend (gray circles), which effectively creates alignments with no gaps. The identity and alignment length from the highest scoring alignment was selected from each query. The (A) mean identity, (B) mean entropy and (C) mean alignment length is given by the point, and the standard deviation is indicated by the error bars for each scoring matrix. The analytical entropy calculated from the scoring matrix is shown as open triangles in panel (B)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.4.</head><figDesc>Fig. 4. Selecting the scoring matrix that creates the best alignment. (A) Sequence pairs with 433% identity and overextended alignment boundaries were selected from the results of the similarity search performed using SSEARCH with BLOSUM62. Each sequence pair was realigned using VT120, 100, 80, 40, 20 and 10 (Table 1). Boundary accuracy was calculated for each alignment and the alignment with the smallest cumulative difference between the embedded domain boundaries and the alignment boundaries was selected. Symbol shape and color (black, open) indicate the scoring matrix used for the alignment; lines connect alignments between the same sequence pairs. (B) Maximum boundary inaccuracy across every scoring matrix for two sequence pairs in (A) is shown. The rounded dashed line to the left in panel (A) and the higher line between VT120 and VT80 in panel (B) show a low identity alignment corrected by VT40; the square dash-dot line to the right in panel (A) and flat between VT120 and VT10 in panel (B) shows a high identity alignment corrected by VT120</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.5.</head><figDesc>Fig. 5. Realignment algorithm results only results from sequence pairs that were realigned by the algorithm are shown. Gray dashed bars indicate the initial boundary accuracy before realignment; colored bars indicate the final distribution of alignment boundary errors. The colors in the final distribution bars show the original accuracy before realignment</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><figDesc>Table 1. Scoring matrices, gap penalties and mean identity, entropy and alignment length</figDesc><table>Matrix 
Open 
Extend 
Identity a 
Entropy a 
Length a 

BLOSUM50 
Ã€10 
Ã€2 
26% 
0.24 
178 
BLOSUM62 
Ã€11 
Ã€1 
30% 
0.45 
95 
VT160 
Ã€12 
Ã€2 
25% 
0.28 
155 
VT140 
Ã€10 
Ã€1 
31% 
0.51 
88 
VT120 
Ã€11 
Ã€1 
34% 
0.63 
67 
VT100 
Ã€10 
Ã€1 
40% 
0.80 
54 
VT80 
Ã€11 
Ã€1 
41% 
0.82 
54 
VT40 
Ã€12 
Ã€1 
65% 
2.0 
20 
VT20 
Ã€15 
Ã€2 
85% 
3.3 
11 
VT10 
Ã€16 
Ã€2 
93% 
3.8 
10 

a 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 2. Identity required to realign using each scoring matrix</figDesc><table>Matrix 
Identity range 

VT120 
36â€“50% 
VT100 
50â€“60% 
VT80 
60â€“70% 
VT40 
70â€“80% 
VT20 
80â€“85% 
VT10 
485% 

Note: Values are inclusive at the maximum for each matrix. 

</table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Fig. 1. Homologous overextension. BLASTP with BLOSUM62 was used to create an alignment between a RPD2 query and a homologous sequence from the RPD2 library. The raw BLASTP output and a schematic of the sequences are shown. Homologous domains in the query (top) and subject (bottom) sequence are represented by black boxes. Light gray boxes in the library sequence indicate other domains. The embedded domain in this query is from B0TE74_HELMI and the sequence in the query outside of the embedded domain is shuffled. Black numbers show the homologous domain boundaries in both the schematic and raw BLASTP output (in boxes); gray numbers indicate the boundaries of the neighboring domain. The boundaries of the alignment are given by the open box, whereas the correct alignment is represented by the dark gray box in the schematic 3008 L.J.Mills and W.R.Pearson at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">L.J.Mills and W.R.Pearson at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="3013"> Adjusting scoring matrices at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The authors thank R. Clark and F. Elliot for technical support, and A. J. Mackey for useful discussions. They also thank a reviewer for suggesting an explanation for low identity overextension. Conflict of Interest: none declared.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Amino acid substitution matrices from an information theoretic perspective</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">219</biblScope>
			<biblScope unit="page" from="555" to="565" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="3389" to="3402" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">A new approach to sequence comparison: normalized sequence alignment</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">N</forename>
				<surname>Arslan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="327" to="337" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Assessing sequence comparison methods with reliable structurally identified distant evolutionary relationships</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">E</forename>
				<surname>Brenner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="6073" to="6078" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">BlastÃ¾: architecture and applications</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Camacho</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinform</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">421</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Locating well-conserved regions within a pairwise alignment</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">M</forename>
				<surname>Chao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Applic. Biosci</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="387" to="396" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">A model of evolutionary change in proteins</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Dayhoff</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In: Atlas of Protein Sequence and Structure. National Biomedical Research Foundation</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="345" to="358" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Homologous over-extension: a challenge for iterative similarity searches</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">W</forename>
				<surname>Gonzalez</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Pearson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="2177" to="2189" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">RefProtDom: a protein database with improved domain boundaries and homology relationships</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">W</forename>
				<surname>Gonzalez</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Pearson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="2361" to="2361" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Amino-acid substitution matrices from protein blocks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Henikoff</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Henikoff</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl. Acad. Sci. USA</title>
		<meeting>. Natl. Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="10915" to="10919" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Estimating amino acid substitution models: A comparison of dayhoff&apos;s estimator, the resolvent approach and a maximum likelihood method</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Muller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biol. Evol</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="8" to="13" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Comparison of methods for searching protein sequence databases</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Pearson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Protein Sci</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1145" to="1160" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Flexible sequence similarity searching with the FASTA3 program package</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Pearson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Methods Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">132</biblScope>
			<biblScope unit="page" from="185" to="219" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">The limits of protein sequence comparison?</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Pearson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">L</forename>
				<surname>Sierk</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Opin. Struct. Biol</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="254" to="260" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">The pfam protein families database</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Punta</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="290" to="301" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Empirical determination of effective gap penalties for sequence comparison</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">T</forename>
				<surname>Reese</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Pearson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1500" to="1507" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>