
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:51+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Truncated branch and bound achieves efficient constraint-based genetic design</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012-12">. 12 2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Dennis</forename>
								<surname>Egen</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Computational and Integrative Biology</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Rutgers University</orgName>
								<address>
									<postCode>08102</postCode>
									<settlement>Camden</settlement>
									<region>NJ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Desmond</forename>
								<forename type="middle">S</forename>
								<surname>Lun</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Computational and Integrative Biology</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Rutgers University</orgName>
								<address>
									<postCode>08102</postCode>
									<settlement>Camden</settlement>
									<region>NJ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Olga</forename>
								<surname>Troyanskaya</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Phenomics and Bioinformatics Research Centre and School of Mathematics and Statistics</orgName>
								<orgName type="institution">University of South Australia</orgName>
								<address>
									<postCode>5095</postCode>
									<settlement>Mawson Lakes</settlement>
									<region>SA</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Truncated branch and bound achieves efficient constraint-based genetic design</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS ORIGINAL PAPER</title>
						<imprint>
							<biblScope unit="volume">28</biblScope>
							<biblScope unit="page" from="1619" to="1623"/>
							<date type="published" when="2012-12">. 12 2012</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts255</idno>
					<note type="submission">Systems biology Advance Access publication April 28, 2012 Received on November 18, 2011; revised on April 11, 2012; accepted on April 25, 2012</note>
					<note>Copyedited by: CK MANUSCRIPT CATEGORY: ORIGINAL PAPER [14:48 18/5/2012 Bioinformatics-bts255.tex] Page: 1619 1619–1623 Associate Editor: Contact: dslun@rutgers.edu Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Computer-aided genetic design is a promising approach to a core problem of metabolic engineering—that of identifying genetic manipulation strategies that result in engineered strains with favorable product accumulation. This approach has proved to be effective for organisms including Escherichia coli and Saccharomyces cerevisiae, allowing for rapid, rational design of engineered strains. Finding optimal genetic manipulation strategies, however, is a complex computational problem in which running time grows exponentially with the number of manipulations (i.e. knockouts, knock-ins or regulation changes) in the strategy. Thus, computer-aided gene identification has to date been limited in the complexity or optimality of the strategies it finds or in the size and level of detail of the metabolic networks under consideration. Results: Here, we present an efficient computational solution to the gene identification problem. Our approach significantly outperforms previous approaches—in seconds or minutes, we find strategies that previously required running times of days or more. Availability and implementation: GDBB is implemented using MATLAB and is freely available for non-profit use at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Computational methods have been developed that allow the genomes of organisms to be designed for metabolic engineering purposes. These methods, which include OptKnock (<ref type="bibr" target="#b2">Burgard et al., 2003</ref>), OptReg (<ref type="bibr" target="#b14">Pharkya and Maranas, 2006</ref>), OptStrain (<ref type="bibr" target="#b13">Pharkya et al., 2004</ref>), OptFlux (<ref type="bibr" target="#b16">Rocha et al., 2010</ref>) and Genetic Design through Local Search (GDLS) (<ref type="bibr" target="#b7">Lun et al., 2009</ref>), have proved to be effective for the metabolic engineering of Escherichia coli and Saccharomyces cerevisiae (<ref type="bibr" target="#b7">Lun et al., 2009;</ref><ref type="bibr" target="#b23">Tyo et al., 2010</ref>), and the same approach can be applied to other organisms. Such a computerbased approach to metabolic engineering facilitates rapid, effective engineering and, consequently, efficient computational design * To whom correspondence should be addressed. techniques have significant implications for many applications including biofuel and drug production. The computational methods we describe are based on constraintbased models of metabolism that predict the production of desired compounds under genetic manipulations. Constraint-based models can achieve a high level of accuracy in their predictions, and over 50 organism-specific genome-scale models have been developed and used in various applications to date. A comprehensive review of the applications of constraint-based modeling, including a table listing existing organism-specific genome-scale models, has been conducted by<ref type="bibr" target="#b9">Milne et al. (2009)</ref>. Constraint-based modeling is based on the stoichiometric matrix, or S matrix, which represents the metabolic network within a cell (<ref type="bibr" target="#b24">Vemuri and Aristidou, 2005</ref>). More accurately, the S matrix is comprised of the stoichiometric coefficients of all metabolic reactions within a cell. Given the S matrix, methods such as flux balance analysis (FBA;<ref type="bibr" target="#b10">Orth et al., 2010</ref>), minimization of metabolic adjustment (<ref type="bibr" target="#b18">Segrè et al., 2002</ref>) and regulatory on/off minimization (<ref type="bibr" target="#b20">Shlomi et al., 2005</ref>) allow the effect of genetic manipulations (such as gene deletions or knockouts) to be predicted. Computer design of genomes for metabolic engineering uses in silico predictions to identify genetic manipulations that result in favorable metabolic phenotypes. Although obtaining in silico predictions is much faster than performing genetic manipulations on the actual organism, the space of all possible genetic manipulations is nevertheless vast. Even if we only consider gene knockouts, the number of possible gene knockout configurations (i.e. specific sets of gene knockouts) increases exponentially with the total number of genes we allow to be knocked out. Thus, computational methods seeking to find an optimal set of knockouts generally have running times that increase exponentially with the number of allowed knockouts, which limits optimal genomic designs found in silico to a small number of knockouts (<ref type="bibr" target="#b2">Burgard et al., 2003;</ref><ref type="bibr" target="#b7">Lun et al., 2009</ref>). Moreover, with ever more biological knowledge being created and curated, the size and accuracy of constraint-based models is increasing, which causes an associated increase in the computational complexity of modeling and genomic design. As an example of the pace of improvement, the model we use in this study, the iAF1260 model of E.coli (<ref type="bibr" target="#b3">Feist et al., 2007</ref>), is nearly twice of the size of the previous iJR904 model (<ref type="bibr" target="#b15">Reed et al., 2003</ref>), published only 4 years prior. In those 4 years, the number of metabolic reactions modeled increased from 747 to 1387—a near doubling. Given the pace at which model size has grown for E.coli over<ref type="bibr">, 2008</ref>) and the application of constraint-based modeling to organisms beyond E.coli (<ref type="bibr" target="#b9">Milne et al., 2009</ref>)—many with larger genomes—it seems evident that models of the size of iAF1260 and larger will become standard in future. It has therefore become imperative that efficient computational methods for finding genetic manipulation strategies that overcome the exponential scaling of manipulation configurations are developed, and a significant body of work has been devoted to this goal (<ref type="bibr" target="#b1">Boghigian et al., 2010;</ref><ref type="bibr" target="#b6">Kim et al., 2011;</ref><ref type="bibr" target="#b7">Lun et al., 2009;</ref><ref type="bibr" target="#b8">Melzer et al., 2009;</ref><ref type="bibr" target="#b12">Patil et al., 2005;</ref><ref type="bibr" target="#b17">Rocha et al., 2008;</ref><ref type="bibr" target="#b19">Sendín et al., 2010;</ref><ref type="bibr" target="#b21">Song et al., 2011;</ref><ref type="bibr" target="#b22">Trinh et al., 2009;</ref><ref type="bibr" target="#b25">Yang et al., 2010</ref>). Here, we present a simple, elegant solution to the problem. Our approach, which we call Genetic Design through Branch and Bound (GDBB) uses a truncated branch and branch algorithm to tackle the bilevel optimization framework used in OptKnock (<ref type="bibr" target="#b2">Burgard et al., 2003</ref>), OptReg (<ref type="bibr" target="#b14">Pharkya and Maranas, 2006</ref>), GDLS (<ref type="bibr" target="#b7">Lun et al., 2009</ref>) and elsewhere. Truncated branch and bound is an adaption of the branch and bound algorithm. Branch and bound is a general algorithm for finding optimal solutions to various optimization problems. Truncated branch and bound stops processing before the algorithm determines that a solution is optimal and stops at a feasible near-optimal solution considered sufficient for practical purposes (<ref type="bibr" target="#b26">Zhang, 1993</ref>). Truncated branch and bound can be applied to any combinatorial optimization problem, and it has been previously shown to perform well on difficult optimization problems, such as the asymmetric traveling salesman problem (<ref type="bibr" target="#b26">Zhang, 1993</ref>) and project scheduling problems (<ref type="bibr" target="#b5">Franck et al., 2001</ref>). We show that GDBB, using this heuristic approach, vastly outperforms previous approaches, finding near-optimal solutions in seconds to minutes that otherwise would require days or more, thus representing a significant, enabling advance in computer design for metabolic engineering. GDBB can be applied to find near-optimal gene knockout strategies using the bilevel optimization framework used in OptKnock (<ref type="bibr" target="#b2">Burgard et al., 2003</ref>) or near-optimal up-and downregulation strategies using the bilevel optimization framework used in OptReg (<ref type="bibr" target="#b14">Pharkya and Maranas, 2006</ref>). More generally, it can be applied to find near-optimal genetic manipulations strategies for any setup for which there exists a bilevel optimization framework that can be converted in a single-level mixed-integer linear program (MILP). Linear programming (LP) is a technique for the optimization of a linear objective function, subject to linear equality and linear inequality constraints. An MILP problem is a LP problem where some of the unknown variables are required to be integers. In general, MILP problems are NP-hard (<ref type="bibr" target="#b0">Bertsimas and Tsitsiklis, 1997</ref>). Transforming bilevel optimization of FBA models to single level MILP problems (<ref type="bibr" target="#b2">Burgard et al., 2003;</ref><ref type="bibr" target="#b14">Pharkya and Maranas, 2006;</ref><ref type="bibr" target="#b13">Pharkya et al., 2004</ref>) has resulted in computational methods that efficiently search the space of genetic manipulations. This approach is much more efficient than exhaustive, brute-force search, but it is nevertheless very computationally intensive. To tackle the MILP, GDBB uses a truncated branch and branch algorithm. In this article, we show that truncated branch and bound performs extraordinarily well on bilevel optimization problems associated with genomic design. For simplicity, we focus exclusively on knockouts in this article, i.e. on finding knockout strategies that lead to favorable metabolic phenotypes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Genome-scale FBA modeling</head><p>We work with the genome-scale model of E.coli, iAF1260. This model consists of three parts. First, from m metabolites and n reactions, we form an m× n stoichiometric matrix S, whose ij-th element S ij is the stoichiometric coefficient of metabolite i in reaction j. Second, the flux distribution v, whose j-th element v j is the flux through reaction j, is constrained by a lower bound vector a, whose jth element a j is the lower bound of the flux through reaction j (which may be negative infinity if there is no flux lower bound) and an upper bound vector b, whose j-th element b j is the upper bound of the flux through reaction j (which may be positive infinity if there is no flux upper bound). Finally, a linear objective is formed by multiplying the fluxes by an objective vector f , whose j-th element f j is the weight of reaction j in the biological objective. In the analysis of biological reaction networks, we are typically interested in steady-state flux distributions that can be maintained over a period of time. Steady-state flux distributions v in the biological network specified by the stoichiometric matrix S satisfy the constraint Sv = 0. For typical biological networks, the number of reactions n is greater than the number of metabolites m resulting in a plurality of feasible steady-state flux distributions (<ref type="bibr" target="#b11">Palsson, 2006</ref>). The assumption of a biological objective allows specific, biologically optimal steady-state flux distributions to be found by LP, namely by solving max f v subject to Sv = 0, a ≤ v ≤ b.</p><formula>(1)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Truncated branch and bound for finding knockout strategies</head><p>As previously described (<ref type="bibr" target="#b7">Lun et al., 2009</ref>), we reduce the optimization problem (1) to a simpler, yet mathematically equivalent problem by iteratively removing dead-end reactions, linked reactions and any reactions that cannot support flux due to the flux bounds a and b. Dead-end reactions occur when metabolites are associated with only a single reaction, which, therefore, cannot carry any flux. Linked reactions occur when metabolites are associated with exactly two reactions and, hence, the flux through one reaction precisely determines the other. Let G be a matrix that represents gene-protein-reaction (GPR) mappings. GPR mappings define how modifications at the genetic level map to reactions. Suppose there are L sets of genes, each with unique metabolic function, which can be modified to affect the reaction network. We summarize the GPR mappings with an L ×n matrix G, where the ij-th element of G ij of G is 1 if the l-th set of genes maps onto reaction j and is 0 otherwise. We then pose the problem of finding knockout strategies as a bilevel optimization problem that is then converted to an equivalent MILP problem (<ref type="bibr" target="#b2">Burgard et al., 2003</ref>):</p><formula>max g v subject to L l=1 y l ≤ C, y l ∈{0,1}, l = 1,...,L,</formula><formula>Sv = 0,</formula><formula>(1−y G j )a j ≤ v j ≤ (1−y G j )b j , j = 1,...,n, (2) f v = n j=1 ν j b j −μ j a j , f j − m i=1 λ i S ij −ν j +μ j −ξ j = 0, j = 1,...,n, −Dy G j ≤ ξ j ≤ Dy G j , j = 1,...,n, μ,ν ≥ 0,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Computer-aided genetic design</head><p>where g is the synthetic objective vector, whose j-th element g j is the weight of reaction j in the synthetic objective, y is the knockout vector, whose l-th element y l is equal to 1 if the genes involved in manipulation l are knocked out and 0 otherwise, G j denotes the j-th column of G, C is the maximum number of knockouts allowed, λ is the dual variable for the equality constraints of (1), μ and v are the dual variables for the lower and upper bounds, respectively, ξ is the dual variable corresponding to the constraint v j = 0 if y j = 1 and D is a scalar chosen to be sufficiently large to ensure that ξ j is effectively unconstrained whenever y'G j is non-zero (we set D to be 100 in our analysis). We solve problem (2) using a truncated branch and bound implemented with the Gurobi solver (Gurobi Optimization, Houston, TX, USA). Gurobi is a standalone, commercial solver for LP, quadratic programming (QP) and mixed-integer programming (MIP including MILP and MIQP). Briefly, we set up problem (2), and we pass it to the Gurobi solver with the following settings: We set FeasibilityTol to 10 −9 and IntFeasTol to 10 −9 , which defines the solution tolerances, so as to achieve accurate solutions, and we set Heuristics to 1.0 to produce more and better feasible solutions and MIPFocus to 1 to prioritize feasible solutions over optimality. ImproveStartGap was set to infinity, to again focus on producing more feasible solutions. We used TimeLimit to specify the truncation time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Comparison with GDLS and global search</head><p>For the comparison with GDLS and global search, we used the latest version of GDLS (version 1.1) available from the GDLS website, http://crab.rutgers. edu/∼dslun/gdls. We ran GDLS with a single search path (M = 1) and search sizes k = 1 to k = 7. The search size k is a positive integer and, as k increases, the runtime of GDLS increases and generally so does its optimality. By running with search sizes from k = 1 to k = 7, we exhausted all search sizes that allowed GDLS to complete within 24 h. The number of search paths M is also a positive integer and, as M increases, the runtime and memory requirements of GDLS increase as does its optimality. In our previous experiments on the acetate and succinate production problems using iAF1260, we did not find significant performance improvements with values of M&gt;1, so we simply chose M = 1. Each search was terminated after a maximum running time of 86 400 s (24 h). Computations were performed using a computer equipped with an Intel® Core™ i5 Dual Core Processor 650 with VT running Linux version 2.6.35.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head><p>To illustrate the utility of GDBB, we consider the metabolic engineering of E.coli for acetate and succinate production. These cases serve as useful cases for comparison: they were previously used to compare the performance of GDLS with other approaches (in which GDLS compared favorably) and there is experimental experience with the metabolic engineering of E.coli for these purposes (<ref type="bibr" target="#b7">Lun et al., 2009</ref>). As GDLS compares favorably with other approaches, such as the evolutionary algorithm and simulated annealing meta-heuristics, implemented in the OptFlux software platform (<ref type="bibr" target="#b12">Patil et al., 2005;</ref><ref type="bibr" target="#b17">Rocha et al., 2008</ref>), we primarily show the performance of GDBB in comparison with GDLS. For reference, we have also included the performance of the global search method, OptKnock (<ref type="bibr" target="#b2">Burgard et al., 2003</ref>). For a given number of allowed knockouts, global search is guaranteed to find an optimal solution (i.e. a knockout strategy that achieves the maximum synthetic production flux), but as such, its running time increases exponentially with the number of allowed knockouts. In<ref type="figure" target="#fig_1">Figure 1</ref>, we show the performance of GDBB compared with that of GDLS and global search for acetate production in E.coli using the most recent genome-scale constraint-based model of E.coli, iAF1260 (<ref type="bibr" target="#b3">Feist et al., 2007</ref>). Using the different approaches, we search for knockout strategies with a maximum running time of 86 400 s (24 h). We chose 24 h to be the time period for evaluating performance as a reasonable but arbitrary choice. We expect that performance gains found within 24 h can be extended to any given time period. We see that GDBB finds comparable solutions to those found by GDLS and global search with vastly improved running time—often one or two or more orders of magnitude. As such, GDBB is able to find solutions within 24 h that are not found by the other two approaches. Indeed, GDBB finds a knockout strategy achieving an acetate production flux of 19.232 mmol h −1 gDW −1 , which is an increase of 2.62278 mmol h −1 gDW −1 (or 14%) over the best solution found by GDLS in 24 h, and it does so in a mere 81 s.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A B</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.Egen and D.S.Lun</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A B</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Computer-aided genetic design</head><p>rational strain design has been previously experimentally validated and has much promise, but it has been significantly hindered to date by its computational complexity. With the advent of GDBB, we believe that rational, model-based design for metabolic engineering can be used much more widely, with great utility for important problems such as biofuel and drug production.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>Copyedited by: CK MANUSCRIPT CATEGORY: ORIGINAL PAPER [14:48 18/5/2012 Bioinformatics-bts255.tex] Page: 1621 1619–1623</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Computational running time of GDBB compared to GDLS and global search for production of acetate using iAF1260. (A) The acetate production flux (synthetic flux) is shown as a function of running time for genetic manipulation strategies found by each of the three methods within 24 h. For GDBB, the best strategy, with synthetic flux of 19.232 mmol h −1 gDW −1 , is found in 81 s. (B) The synthetic flux and running time is shown as a function of the number of knockouts for the best strategy with a given number of knockouts found within 24 h for each of the three methods</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. Computational running time of GDBB compared to GDLS and global search for production of succinate using iAF1260. (A) The succinate production flux (synthetic flux) is shown as a function of running time for genetic manipulation strategies found by each of the three methods within 24 h. For GDBB, the best strategy, with synthetic flux of 12.037 mmol h −1 gDW −1 , is found in 345 s. (B) The synthetic flux and running time is shown as a function of the number of knockouts for the best strategy with a given number of knockouts found within 24 h for each of the three methods</figDesc></figure>

			<note place="foot">© The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com</note>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">In Figure 2, we show the performance of GDBB compared with that of GDLS and global search for succinate production using iAF1260. For succinate production, we see similar vast improvements in running time. We notice that, while GDLS is capable of finding good solutions involving many knockouts (albeit with much longer running time than GDBB) in case of succinate production, it is inconsistent in its ability to find solutions for any given number of knockouts, while GDBB displays a more or less smooth increase in the synthetic flux as the number of knockouts increases. Overall, it appears that the genetic design problem for succinate production is easier than that for acetate production. In particular, for succinate production, the optimization problem appears to become relatively easy when large numbers of knockouts are allowed. We believe this may be because the maximum achievable synthetic flux for this problem is around 12 mmol h −1 gDW −1 and when many more knockouts are allowed than are necessary to achieve this flux; it becomes easier to find a favorable set of knockouts simply because more are allowed and simultaneously tried. Thus, with 14–16 knockouts, GDLS can find solutions similar to those found by GDBB within 24 h. But, because of the inconsistent behavior of GDLS with increasing numbers of knockouts, for a given, moderate allowed number of knockouts, the ability of GDLS to efficiently find a favorable genetic manipulation strategy is nevertheless variable and unreliable. All knockout strategies found by GDBB were reached in &lt;6 min, and we found no further improvement in synthetic flux by allowing 24 h of running time. Thus, in just several minutes, GDBB finds significantly better solutions than GDLS does when using up to an entire day of running time. As with GDLS, the knockout strategies found by GDBB make biological sense, being consistent with previous experimental findings and adopting strategies such as adjustments to redox balance. A full list of the strategies found by GDBB and their running times is given in Supplementary Table S1. Examination of the strategies found by GDBB reveals the basis for its vastly improved performance. All prior approaches of which we are aware, such as GDLS or the evolutionary meta-heuristics used by OptFlux (Rocha et al., 2010), rely fundamentally on the notion that good genetic manipulation strategies are achieved by adding manipulations to other good genetic manipulation strategies. This relates to the intuitive notion that good mutants for a specific purpose are found by taking already good mutants and mutating them further. It turns out, however, that sometimes several manipulations have to be performed simultaneously to have a significant effect and that any subsets of those manipulations have only marginal effect. For example, consider the best six-knockout solution found by GDBB, which achieves an acetate production flux of 18.5228 mmol h −1 gDW −1. The maximum acetate production flux achieved by any subset of the six is only 13.79 mmol h −1 gDW −1 , which compares poorly with the best five-knockout solution found by GDBB, with an acetate production flux of 15.8859 mmol h −1 gDW −1. Thus, this solution does not arrive by adding manipulations to competitive mutant strains. GDBB does not search for manipulation strategies by adding manipulations to other good genetic manipulation strategies and, thus, is able to find strategies that cannot be easily found using other approaches. In this article, we have considered a relatively simple problem, where we looked at the metabolic engineering of E.coli through knockouts, and we saw that GDBB was very useful. The need for GDBB will become more acute with more complex problems. There are two major ways in which the complexity of the genetic design problem can and will likely increase. First, models will become larger and more detailed as biological knowledge grows and if the organisms we seek to engineer are more complex than E.coli. Second, we can consider modifications other than knockouts and will likely desire to do so. We can, in particular, consider reducing or increasing gene expression instead of simply knocking genes out. The more modifications we consider, the larger the combinatorial space of possibilities that needs to be searched for genetic design. Herein, we have considered a simple case but provided a technique that can scale for future problems. We have presented here an efficient computational method for finding genetic manipulation strategies. GDBB finds, quickly and easily, strategies that are predicted by FBA to yield favorable phenotypes for metabolic engineering purposes. This approach of using FBA predictions for</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Introduction to Linear Optimization</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Bertsimas</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">N</forename>
				<surname>Tsitsiklis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Athena Scientific</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Utilizing elementary mode analysis, pathway thermodynamics, and a genetic algorithm for metabolic flux determination and optimal metabolic network design</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Boghigian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">49</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">OptKnock: a bilevel programming framework for identifying gene knockout strategies for microbial strain optimization</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">P</forename>
				<surname>Burgard</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biotechnol. Bioeng</title>
		<imprint>
			<biblScope unit="volume">84</biblScope>
			<biblScope unit="page" from="647" to="657" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">A genome-scale metabolic reconstruction for Escherichia coli K-12 MG1655 that accounts for 1260 ORFs and thermodynamic information</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">M</forename>
				<surname>Feist</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">121</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">The growing scope of applications of genome-scale metabolic reconstructions using Escherichia coli</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">M</forename>
				<surname>Feist</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">Ø</forename>
				<surname>Palsson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="659" to="667" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Truncated branch-and-bound, schedule-construction, and schedule-improvement procedures for resource-constrained project scheduling</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Franck</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">OR Spektrum</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="297" to="324" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Large-scale bi-level strain design approaches and mixed-integer programming solution techniques</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kim</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">24162</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Large-scale identification of genetic design strategies using local search</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">S</forename>
				<surname>Lun</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">296</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Flux design: in silico design of cell factories based on correlation of pathway fluxes to desired properties</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Melzer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">120</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Accomplishments in genome-scale in silico modeling for industrial and medical biotechnology</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">B</forename>
				<surname>Milne</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biotechnol. J</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1653" to="1670" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">What is flux balance analysis?</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">D</forename>
				<surname>Orth</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="245" to="248" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<monogr>
		<title level="m" type="main">Systems Biology: Properties of Reconstructed Networks</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Palsson</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Evolutionary programming as a platform for in silico metabolic engineering</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">R</forename>
				<surname>Patil</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">308</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">OptStrain: a computational framework for redesign of microbial production systems</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Pharkya</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="2367" to="2376" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">An optimization framework for identifying reaction activation/inhibition or elimination candidates for overproduction in microbial systems</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Pharkya</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">D</forename>
				<surname>Maranas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Metab. Eng</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="1" to="13" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">An expanded genome-scale model of Escherichia coli K-12</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Reed</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="issue">iJR904</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">OptFlux: an open-source software platform for in silico metabolic engineering</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Rocha</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">45</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Natural computation meta-heuristics for the in silico optimization of microbial strains</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Rocha</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">499</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Analysis of optimality in natural and perturbed metabolic networks</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Segrè</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="15112" to="15117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Multi-objective mixed integer strategy for the optimisation of biological networks</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">O H</forename>
				<surname>Sendín</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="236" to="248" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Regulatory on/off minimization of metabolic flux changes after genetic perturbations</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Shlomi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="7695" to="7700" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Manipulating the steady state of metabolic pathways</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Song</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="732" to="747" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Elementary mode analysis: a useful metabolic pathway analysis tool for characterizing cellular metabolism</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">T</forename>
				<surname>Trinh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Microbiol. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="page" from="813" to="826" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Toward design-based engineering of industrial microbes</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">E J</forename>
				<surname>Tyo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Opin. Microbiol</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="255" to="262" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Metabolic engineering in the-omics era: elucidating and modulating regulatory networks</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">N</forename>
				<surname>Vemuri</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">A</forename>
				<surname>Aristidou</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Microbiol. Mol. Biol. Rev</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="197" to="216" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Rapid design of system-wide metabolic network modifications using iterative linear programming</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Yang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Symposium on Dynamics and Control of Process Systems</title>
		<editor>Kothare, M. et al.</editor>
		<meeting>the 9th International Symposium on Dynamics and Control of Process Systems<address><addrLine>Leuven, Belgium</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="377" to="382" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Truncated branch-and-bound: a case study on the asymmetric TSP</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the AAAI-93 Spring Symposium on AI and NP-Hard Problems</title>
		<meeting>the AAAI-93 Spring Symposium on AI and NP-Hard Problems<address><addrLine>Stanford, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="160" to="166" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>