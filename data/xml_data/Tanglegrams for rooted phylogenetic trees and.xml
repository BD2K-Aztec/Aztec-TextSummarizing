
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:49+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Tanglegrams for rooted phylogenetic trees and networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011">2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Celine</forename>
								<surname>Scornavacca</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Bioinformatics (ZBIT)</orgName>
								<orgName type="institution">Tübingen University</orgName>
								<address>
									<addrLine>Sand 14</addrLine>
									<postCode>72076</postCode>
									<settlement>Tübingen</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Franziska</forename>
								<surname>Zickmann</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Bioinformatics (ZBIT)</orgName>
								<orgName type="institution">Tübingen University</orgName>
								<address>
									<addrLine>Sand 14</addrLine>
									<postCode>72076</postCode>
									<settlement>Tübingen</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Daniel</forename>
								<forename type="middle">H</forename>
								<surname>Huson</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Bioinformatics (ZBIT)</orgName>
								<orgName type="institution">Tübingen University</orgName>
								<address>
									<addrLine>Sand 14</addrLine>
									<postCode>72076</postCode>
									<settlement>Tübingen</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Tanglegrams for rooted phylogenetic trees and networks</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">27</biblScope>
							<biblScope unit="page" from="248" to="256"/>
							<date type="published" when="2011">2011</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btr210</idno>
					<note>[20:11 6/6/2011 Bioinformatics-btr210.tex] Page: i248 i248–i256 BIOINFORMATICS Availability: The algorithm is implemented in our program Dendroscope 3, which is freely available from www.dendroscope.org. Contact:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: In systematic biology, one is often faced with the task of comparing different phylogenetic trees, in particular in multi-gene analysis or cospeciation studies. One approach is to use a tanglegram in which two rooted phylogenetic trees are drawn opposite each other, using auxiliary lines to connect matching taxa. There is an increasing interest in using rooted phylogenetic networks to represent evolutionary history, so as to explicitly represent reticulate events, such as horizontal gene transfer, hybridization or reassortment. Thus, the question arises how to define and compute a tanglegram for such networks. Results: In this article, we present the first formal definition of a tanglegram for rooted phylogenetic networks and present a heuristic approach for computing one, called the NN-tanglegram method. We compare the performance of our method with existing tree tanglegram algorithms and also show a typical application to real biological datasets. For maximum usability, the algorithm does not require that the trees or networks are bifurcating or bicombining, or that they are on identical taxon sets.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In systematic biology, one is often faced with the task of comparing different phylogenetic trees, in particular in multi-gene analysis or cospeciation studies (<ref type="bibr" target="#b9">Burt and Trivers, 2008;</ref><ref type="bibr" target="#b10">Charleston, 1998;</ref><ref type="bibr" target="#b11">Charleston and Perkins, 2003;</ref><ref type="bibr" target="#b22">Lee and Stock, 2010;</ref><ref type="bibr" target="#b24">Machado et al., 2005;</ref><ref type="bibr" target="#b25">Merkel et al., 2010</ref>). One way to visualize similarities and differences is to draw two phylogenetic trees as rooted trees side by side and to draw lines (which we will call connectors) between taxa that correspond to each other in the two trees, see<ref type="figure">Figure 1</ref>. Such a depiction is called a tanglegram and different variations of the problem of computing an optimal tanglegram have been studied in the literature. For example, a number of articles (<ref type="bibr" target="#b0">Bansal et al., 2009;</ref><ref type="bibr" target="#b1">Böcker et al., 2009;</ref><ref type="bibr" target="#b7">Buchin et al., 2009;</ref><ref type="bibr" target="#b14">Fernau et al., 2005;</ref><ref type="bibr" target="#b26">Nöllenburg et al., 2009;</ref><ref type="bibr">Venkatachalam et al., 2010</ref>) consider the One-Tree Crossing Minimization (OTCM) and the Two-Tree Crossing Minimization (TTCM) problems that both aim at minimizing the number of crossings between connectors. In the former problem, the layout of one of the trees is fixed and that of the other is mutable whereas in the latter formulation the layout of both trees are allowed to be changed. For binary trees, OTCM is solvable in O(nlogn) time (<ref type="bibr">Venkatachalam et al., 2010</ref>), while TTCM is NP-complete (<ref type="bibr" target="#b15">Fernau et al., 2010</ref>). In<ref type="bibr" target="#b13">Dwyer and Schreiber (2004)</ref>, the authors describe a 'seesaw' heuristic for the TTCM problem for * To whom correspondence should be addressed.<ref type="figure">Fig. 1</ref>. A tanglegram between a phylogeny of sections of Ficus (a) and that of their associated genera of pollinating wasps (b). Adapted from (<ref type="bibr" target="#b24">Machado et al., 2005</ref>). binary (or bifurcating) trees, which operates by repeatedly solving the OTCM problem, each time switching the roles of the two trees. A branch-and-bound approach for binary trees that works in O(n 3 ) time and gives a 2-approximation for complete binary trees is presented in<ref type="bibr" target="#b7">Buchin et al. (2009)</ref>. A generalization of the algorithm to unbalanced binary trees is described in<ref type="bibr">Nöllenburg et al. (2009)</ref>, though in this case the approximation factor does not hold. In addition, this article gives an ILP formulation and an exact branch-and-bound algorithm for binary trees, where the latter has a worst-case running time of O(n 2 +n·2 2n ). Other approaches use fixed-parameter tractability (FPT) parameterized by the number k of connector crossings (<ref type="bibr" target="#b14">Fernau et al., 2005</ref>). A generalization to nonbinary trees is discussed in<ref type="bibr">Venkatachalam et al. (2010)</ref>. The only algorithm that is able to compute tanglegrams for binary trees with many-to-many connections is described in<ref type="bibr" target="#b0">Bansal et al. (2009)</ref>. Their algorithm requires O(k log 2 k/loglogk) time (where k is the number of connectors) in the case that one tree is fixed. Additionally, they present some alternating and local search strategies for the TTCM problem. While evolutionary histories are usually described by rooted phylogenetic trees, in some cases rooted phylogenetic networks may provide a more accurate evolutionary scenario, especially when mechanisms such as horizontal gene transfer, hybridization, recombination, reassortment or incomplete lineage sorting have played a role in shaping the history. There is currently much research on the development of computational methods for computing rooted phylogenetic networks, for an overview see Huson and Scornavacca (2011a);<ref type="bibr" target="#b20">Huson et al. (2011)</ref>. The goal of this article is to introduce the concept of a tanglegram for rooted phylogenetic networks and to provide a useful heuristic for computing such tanglegrams. Unlike trees, rooted phylogenetic networks are not necessarily planar and so the definition of an optimal tanglegram is not immediately obvious for them. Our heuristic does not require that the networks are bifurcating or<ref type="bibr">[20:11 6/6/2011 Bioinformatics-btr210.tex]</ref>Page: i249 i248–i256</p><formula>(b) (a)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tanglegrams for rooted phylogenetic networks</head><p>bicombining, or that they both contain the same set of taxa. It can also be used to compare two trees, or to compare a tree and a network, of course. Moreover, the heuristic can also be employed to align the order of leaves for a whole collection of rooted trees or networks. The algorithm is implemented in our Java program Dendroscope 3 (<ref type="bibr" target="#b18">Huson and Scornavacca, 2011b;</ref><ref type="bibr" target="#b19">Huson et al., 2007</ref>), which is freely available from www.dendroscope.org.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BASICS</head><p>Throughout this article, we follow the terminology and notation defined in<ref type="bibr" target="#b20">Huson et al. (2011)</ref>and assume that the reader is familiar with graphs and related terminology. In this section we introduce some basic concepts and results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Phylogenetic trees and networks</head><p>Let X be a set of taxa. An unrooted phylogenetic network N on X is an unrooted, connected graph whose leaves are bijectively labeled by the taxa in X. A rooted DAG is defined as a directed graph that is free of directed cycles and contains precisely one node with indegree zero, called the root. A rooted phylogenetic network N on X is a rooted DAG whose set of leaves is bijectively labeled by the taxa in X. A node v in N is said to be a tree node if its indegree is less than two and a reticulate node otherwise. An edge of N is called a tree edge, unless it leads to a reticulate node, in which case it is called a reticulate edge. A (rooted) phylogenetic tree is a (rooted) phylogenetic network for which it is not possible to delete any edge without producing a graph that is not connected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Clusters, splits and split networks</head><p>Let N be a rooted phylogenetic network on X. Any tree edge e in N defines a cluster C(e) which is given by the set of all taxa that label leaves that lie below e in N. We use C(N) to denote the set of all clusters obtainable from N in this way. Let X be a set of taxa. A split A | B on X is a partition of X into two non-empty sets. Any edge e in an unrooted phylogenetic tree T on X defines a split S(e) = A | B, where A and B are all taxa that label nodes that lie on one side or the other side of the edge, respectively. A split A | B is said to separate two taxa x and y if they are contained in different parts of the split, that is, if |{x,y}∩A|=|{x,y}∩B|=1 holds. The restriction of a split S to a set of taxa X , denoted by S| X is defined as the split S = A |B , where A = A∩X and B = B∩X. Let be a set of splits on X. A weighting of is given by a map ω that assigns a non-negative weight ω(S) to each split S ∈. Let be a set of weighted splits on X. We define a distance matrix of split distances D() ={d xy } on X by setting d xy = S∈(x,y) ω(S), where (x,y) denotes the set of all splits in that separate the taxa x and y. If is unweighted, then we use this definition with ω(S) = 1 for all S. Definition 2.1 (Compatibility). Two splits A 1 | B 1 and A 2 | B 2 are compatible if at least one of the sets A 1 ∩A 2 , A 1 ∩B 2 , B 1 ∩A 2 or B 1 ∩B 2 is empty. Otherwise they are called incompatible. A collection of splits is compatible if and only if all splits are pairwise compatible. A set of compatible splits can always be represented by a tree (<ref type="bibr" target="#b8">Buneman, 1971</ref>). More generally, any set of splits can always be represented by a split network N (<ref type="bibr" target="#b12">Dress and Huson, 2004</ref>). This isan unrooted phylogenetic network with the property that every split S = A | B in is represented in N by a set of parallel edges, such that deleting all edges in the set will result in exactly two connected components, one labeled by the taxa in A and the other labeled by B. A class of splits of particular interest are the circular splits.</p><p>Definition 2.2 (Circular splits). A set of splits on X is called circular, if there exists a linear ordering π = (x 1 ,...,x n ) of the elements of X for such that each split S ∈ is interval-realizable, that is, has the form</p><formula>S ={x p ,x p+1 ,...,x q }|(X \{x p ,x p+1 ,...,x q }),</formula><p>for appropriately chosen 1 &lt; p ≤ q ≤ n.</p><p>Such an ordering π = (x 1 ,...,x n ) is called a circular ordering for , as it holds that (x 1 ,...,x n ) is a circular ordering for , if and only if the inverse ordering (x n ,x n−1 ,...,x 1 ) and (x 2 ,x 3 ,...,x n ,x 1 ) both are. Circular splits are of particular interest because any set of circular splits can always be represented by a split network that can be drawn in the plane such that no two edges intersect and all labeled nodes lie on the outside of the network, see<ref type="figure" target="#fig_1">Figure 2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">The Neighbor-Net algorithm</head><p>Given a distance matrix D on X , the Neighbor-Net algorithm (<ref type="bibr" target="#b2">Bryant and Moulton, 2004</ref>) computes a circular ordering π of X from D and then a set of weighted splits that are interval-realizable with respect to π. A distance matrix D on X is said to be circular if and only if there exists a set of circular weighted splits on X such that D() = D. The following result asserts the consistency of the Neighbor-Net method:</p><p>Theorem 2.3 [Neighbor-Net consistency (<ref type="bibr" target="#b3">Bryant et al., 2007)]</ref>. Given a circular distance matrix D on X , the Neighbor-Net algorithm produces a circular ordering π and a set of weighted splits that are interval-realizable with respect to π such that D = D().</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">TANGLEGRAMS FOR ROOTED PHYLOGENETIC NETWORKS</head><p>In this section, we first develop the concept of a tanglegram for rooted phylogenetic networks and then define what we mean by an optimal tanglegram. We then develop a heuristic for computing an optimal tanglegram for two rooted phylogenetic networks. Let N be a rooted phylogenetic network on X. A topological embedding of N is given by a map that assigns to each node v in i249Page: i250 i248–i256</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.Scornavacca et al.</head><p>(a) ( b). This drawing induces a partial order of the leaves such that</p><formula>a &lt; τ d &lt; τ f &lt; τ g &lt; τ h &lt; τ l, i &lt; τ j &lt; τ k, and b &lt; τ c. N an ordering (v 1 ,v 2 ,...,v k )</formula><p>of the set of its children. Note that any concrete drawing θ of N induces such a topological embedding that is given by the order in which edges leave a node. Moreover, such a drawing defines a total order on X , which we will denote by π θ. Note that deletion of all reticulate edges in N produces a forest or collection of trees, {T 1 ,...,T k }, which we denote by F(N). For any tree T i in F (N), let X i denote the set of taxa that label leaves of T i. Note that T i is not necessarily a phylogenetic tree because some (or even all) of its leaves may be unlabeled. A topological embedding τ for F(N) is given by specifying a topological embedding for each tree T i in F(N). Note that τ induces a total ordering of the taxon set X i for each T i in F(N). While τ determines a partial ordering &lt; τ of X , it does not specify a total ordering of X because the trees of F(N) are not ordered. Definition 3.1 (Non-interleaving order). Let N be a rooted phylogenetic network on X and let τ be a topological embedding of F (N). A total order π on X is called non-interleaving with respect to τ if for any two taxa a &lt; π b, we have: 1. If a,b ∈ X i for some tree T i , then a &lt; τ b;</p><formula>2. If a ∈ X i and b ∈ X j (with i = j), then there exists no taxa c ∈ X i and d ∈ X j such that a &lt; π b &lt; π c &lt; π d.</formula><p>For example, for the phylogenetic network N on X ={a,...,l} and the concrete drawing θ of the forest F(N) in<ref type="figure" target="#fig_3">Figure 3</ref></p><formula>, both (a,b,c,d,e,f ,g,h,i,j,k,l) and (a,d,f ,g,h,l,i,j,k,b,c,e) are noninterleaving total orders on X w.r.t. θ, while (a,d,f ,g,h,i,j,l, k,b,c,e)</formula><p>is not because it violates condition (2) of Definition 3.1. What is the relevance of this definition? We want to be able to draw a rooted phylogenetic network N in such a way that we preserve the given topological embedding τ of its forest and also that we place all leaves of the network along a line in the order specified by π and the root occurs on the outside of the drawing. The non-interleaving property ensures that this can be done in such a way that no two tree edges cross.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Definition of a tanglegram for networks</head><p>Let N 1 and N 2 be two rooted phylogenetic networks on taxon sets X 1 and X 2 , respectively. We will use M ⊆ X 1 ×X 2 to denote a set of connectors between X 1 and X 2. If the two networks are on the same taxon set, then M is the set of identity connectors that connects each taxon to itself, which we will denote by M Id below for emphasis. In the case of a host-parasite comparison, M will pair hosts and parasites. Unlike trees, rooted phylogenetic networks are not necessarily planar and so the definition of a tanglegram is not immediately obvious for them: Definition 3.2 (Tanglegram for networks). Let N 1 and N 2 be two rooted phylogenetic networks on X 1 and X 2 , respectively, and let M be a set of connectors between X 1 and X 2. A tanglegram Z for N 1 , N 2 and M is specified by a system (</p><formula>N 1 ,X 1 ,τ 1 ,π 1 ,N 2 ,X 2 ,τ 2 ,π 2 ,M)</formula><p>where τ i is a topological embedding of F(N i ) and π i is a noninterleaving total order of X i with respect to τ i , for i = 1,2. Let N be a rooted phylogenetic network on X. Consider a concrete drawing θ of N in the plane. We call θ a rooted outer-labeled (tree-)planar embedding if all taxon labels are placed on a line, the root node occurs on the outside of the embedded network and no two (tree) edges cross. If N possesses a non-interleaving order π of X with respect to a topological embedding τ for F (N), then there exists a rooted outer-labeled tree-planar embedding for N in which the taxa appear along a line in the order specified by π. As mentioned above, the non-interleaving property of π ensures that we can lineup appropriate embeddings of all the trees in F(N) in the order induced by π.</p><formula>A drawing of a tanglegram Z = (N 1 ,X 1 ,τ 1 ,π 1 ,N 2 ,X 2 ,τ 2 ,π 2 ,M)</formula><p>consists of a rooted outer-labeled tree-planar embedding of both N 1 and N 2 , together with a set of lines representing the connectors between X 1 and X 2. Such a drawing of Z can be obtained in the following steps. First draw all trees in F(N 1 ) and F (N 2 ) in such a way that the two orderings τ 1 and τ 2 are respected and all the leaves of N 1 and N 2 are lined up in the order specified by π 1 and π 2. Second, add all reticulate edges to the diagram. These two steps can always be done in such a way that no two tree edges cross and that the roots of N 1 and N 2 occur on the outside of the drawing, due to the fact that both π 1 and π 2 are non-interleaving. Finally, draw lines between the leaves of the two networks so as to connect taxa as specified in M. Note that, if N 1 and N 2 are two trees, F(N 1 ) and F(N 2 ) coincide with N 1 and N 2 , respectively. This means that, in this case, a tanglegram between N 1 and N 2 define univocally the rooted outer-labeled tree-planar embeddings of N 1 and N 2. Giving an embedding, drawing a tree is straightforward (see<ref type="bibr" target="#b20">Huson et al., 2011</ref>), Chapter 13). Therefore, our definition of a tanglegram for two rooted phylogenetic networks generalizes the definition of a tanglegram for two rooted phylogenetic trees, and so, in particular, the problem of computing an optimal tanglegram for networks is NP-complete (<ref type="bibr" target="#b15">Fernau et al., 2010</ref>). Let N be a rooted phylogenetic network on X , let τ be a topological embedding of F(N) and let π be a non-interleaving total order on X. We define the reticulation crossing number as the minimum number of crossings involving reticulation edges in any drawing of N respecting τ and π. An optimal tanglegram can now be defined as follows:</p><formula>Z = (N 1 ,X 1 ,τ 1 ,π 1 ,N 2 ,X 2 ,τ 2 ,π 2 ,M)</formula><p>is called optimal if the crossings between connectors in M is minimized by τ 1 and τ 2 and, among the i250Page: i251 i248–i256</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tanglegrams for rooted phylogenetic networks</head><p>tanglegrams minimizing this value, it can be drawn so as to minimize the sum of reticulation crossing numbers for N 1 and N 2 .</p><p>Let N 1 and N 2 be two rooted phylogenetic networks on X 1 and X 2 , respectively, and let M be a set of connectors between X 1 and X 2. For two linear orderings π 1 and π 2 of X 1 and X 2 , the number of crossings Cr(π 1 ,π 2 ,M) among connectors in M can be calculated as |{(a,b) ∈ M ×M | a = (p,q),b = (x,y) with</p><formula>(p &lt; π x ∧ q &gt; π y)∨(p &gt; π x ∧ q &lt; π y)}|. A</formula><p>heuristic that computes the reticulate crossing number for a drawing of a rooted phylogenetic network is described in (<ref type="bibr" target="#b16">Huson, 2009</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Neighbor-net heuristic for tanglegrams</head><p>Let N 1 and N 2 be two rooted phylogenetic networks on X 1 and X 2 , respectively, and let M be a set of connectors between X 1 and X 2. For the purposes of this paper, we will assume that M pairs the leaves of the two trees in a one-to-one manner. (Note, however, that the example shown in<ref type="figure">Figure 1</ref>does not have this property.) If M pairs two distinct taxa a and b, as for example in a host/parasite study, then we identify the labels a and b with each other while computing the tanglegram, but then distinguish between the two labels when drawing the tanglegram. In the following, we present a heuristic for obtaining an optimal tanglegram for N 1 and N 2. We call this the NN-tanglegram approach. In our approach, we first compute a distance matrix H on the total set of taxa X = X 1 ∪X 2 that reflects the topology of the two networks N 1 and N 2 , then apply the Neighbor-Net algorithm to H to obtain an ordering π of X , and finally construct a tanglegram for N 1 and N 2 based on π. In the following, we will assume that both networks contain a single leaf connected to the root of the network that is labeled by a special taxon ρ, which we will refer to as a formal outgroup. To compute a distance matrix on X , we need to construct a set of splits for each of the two networks. We describe the process for the network N 1. For each tree edge e in N 1 let C 1 (e) be the set of all taxa that label a leaf that lies below e in N 1. We define the split associated with e as C(e) | X 1 \C 1 (e). Let (N 1 ) denote the set of all splits obtained in this way. We compute (N 2 ) similarly and we then</p><formula>define = (N 1 )| X 1 ∩X 2 ∪(N 2 )| X 1 ∩X 2 .</formula><p>(The restriction to X 1 ∩X 2 ensures the applicability of Theorem 3.5 if X 1 = X 2 ). We obtain the distance matrix H on X by setting the distance between two taxa x and y equal to the number of splits that separate the two taxa, where any split that occurs both for N 1 and N 2 is counted twice. In other words, we set</p><formula>H = D((N 1 )| X 1 ∩X 2 )+ D((N 2 )| X 1 ∩X 2 ).</formula><p>In the simulation study in Section 5.1, we will also present the results when using H = D path (N 1 )+D path (N 2 ) as distance matrix, where D path (N i ) ={d xy } such that d xy is the length of the shortest path between x and y in N i. As we will see, this variant actually performs better on networks than using splits-based distances. We apply the Neighbor-Net algorithm to the distance matrix H (or H in the case that the shortest path distance matrix is used) so as to obtain a circular ordering ζ = (x 1 ,...,x n ) of X. The ordering ζ is computed in this way because this ensures that the NN-tanglegram method returns the optimal solution under optimal conditions (see Theorem 3.5). Let i denote the position of the formal outgroup taxon ρ in ζ. We obtain a linear ordering π of X by breaking the ordering ζ at position i, that is, by setting π = (x i ,x i+1 ,...,x n ,x 1 ,...,x i−1 ). Given the ordering π of X , we now have to compute two embeddings τ 1 and τ 2 for the forests F(N 1 ) and F(N 2 ) such that π is noninterleaving with respect to τ 1 and τ 2. Given a rooted phylogenetic network N and a node u of N, we use X N (u) to denote the set of taxa that label the leaves below u. To compute τ 1 , we first delete all reticulate edges in N 1 to produce the forest F(N 1 ). Then, for each T * ∈ F(N 1 ), we determine a topological embedding τ * that minimizes the number of crossings among connectors Cr(ζ * ,π,M Id ), where ζ * is the ordering of X * induced by the embedding τ * . This optimization is easily solved in a bottom-up traversal of each tree in F(N 1 ). Note that the place that is assigned to a node v such that X N 1 (v) =∅ or X N 1 (v)| X 1 ∩X 2 =∅ in the the topological embedding of its parent is not relevant for the computation of the number of crossings among connectors Cr(ζ * ,π,M Id ) and so can be chosen arbitrarily. The set of topological embeddings for all trees T * in F(N 1 ) constitutes τ 1. To obtain π 1 from τ 1 , we add the taxa of X 1 to π 1 one by one, in such a way that π 1 remains non-interleaving w.r.t. τ 1 and the value of Cr(π 1 ,π,M Id ) is minimized. The ordering τ 2 is computed in exactly the same way but using the network N 2 instead of N 1. Let C(N) be the set of clusters associated with N. We say that C(N) is interval-realizable with respect to π = (x 1 ,x 2 ,...,x n ) if each cluster C in C(N) has the form {x p ,x p+1 ,...,x q }, for appropriately chosen 1 ≤ p ≤ q ≤ n. We have the following result: Lemma 3.4 (Interval realizability). Let N be a phylogenetic network on X. If N has a rooted outer-labeled planar embedding θ and π θ is the linear order on X that is defined by θ, then C(N) is intervalrealizable with respect to π θ. This lemma is used to prove the following theorem:</p><p>Theorem 3.5 (Zero crossings solution). Let N 1 and N 2 be two rooted phylogenetic networks on X 1 and X 2 , respectively and let M be a set of connectors between X 1 and X 2. If a planar drawing exists for the tanglegram of N 1 , N 2 and M, then the NN-tanglegram heuristic will find a solution with zero crossings among connectors.</p><p>The proof of both results can be found in Appendix A. Note that Theorem 3.5 ensures that, if an optimal tanglegram with cost zero exists for two trees, then our algorithm will find it, because a tree does not contain any reticulate edges. This is not true for networks. Indeed, in this case the Neighbor-Net algorithm may have more than one optimal solution. Theorem 3.5 ensures that any linear ordering π computed as described in Section 3.2 can be realized with zero crossings among connectors, but it does not guarantee that the resulting drawing will have zero crossings involving reticulate edges. For example, for the two networks in<ref type="figure" target="#fig_5">Figure 4</ref>, both orders (a,b,c,d) and (b,c,d,a) are circular with respect to</p><formula>H = D((N 1 ))+D((N 2 )</formula><p>) and can be obtained from the distance matrix H using Neighbor-Net. Both orderings give a solution with zero crossings among connectors; yet, while a planar drawing for (a,b,c,d) exists [see<ref type="figure" target="#fig_5">Fig. 4(a)]</ref>, a drawing respecting the ordering (b,c,d,a) will contain some crossings involving reticulate edges and thus fail to be optimal [see<ref type="figure" target="#fig_5">Fig. 4(b)]</ref>. However, if all optimal solutions of Neighbor-Net given H can be considered, then the NN-tanglegram approach will find the solution with cost zero. In such a case, our algorithm can be used to solve the planar layout (<ref type="bibr" target="#b23">Lozano et al., 2008</ref>) or drawability problem (<ref type="bibr" target="#b15">Fernau et al., 2010</ref>) for two networks [solved in linear time for two binary trees in<ref type="bibr" target="#b15">Fernau et al. (2010)</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i251</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.Scornavacca et al.</head><formula>(a) (b)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Minimizing the reticulation crossing number and drawing the tanglegram</head><p>The previous section describes a heuristic for computing an optimal tanglegram. This heuristic aims at minimizing the crossings among connectors but it does not try to minimize the reticulation crossing numbers for N 1 and N 2. For example, if X 1 = X 2 then multiple choices of π 1 and π 2 can exist that minimize the number of crossing among connectors. In such a case, one of them is chosen at random, whether or not it happens to minimize the sum of reticulation crossing numbers for N 1 and N 2 (see Definition 3.3). In a forthcoming paper (<ref type="bibr" target="#b27">Scornavacca and Huson, 2011</ref>), we will describe a heuristic for minimizing this value and a method for computing a concrete drawing of the optimized tanglegram that tries to minimize the crossing involving reticulation edges (as implemented in Dendroscope 3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ALIGNMENT OF PHYLOGENETIC NETWORKS</head><p>The heuristic for calculating an optimal tanglegram for rooted phylogenetic networks that we describe in Section 3.2 is easily extended to a set of more than two rooted phylogenetic networks or trees, simply by computing the matrix H based on splits from all the networks or trees under consideration. This is implemented in our program Dendroscope 3 and can be used to 'align' the taxa when viewing a whole collection of networks or trees simultaneously.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">VALIDATION</head><p>To validate the approach, we first report on a simulation study that we have undertaken and then apply the algorithm to a published dataset to illustrate how the algorithm may be used in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Simulation study</head><p>In the first part of the simulation study, we compared our implementation with the best available software for computing tanglegrams of trees. In more detail, we compared against the bb-1st-sol algorithm, as it is the best performing algorithm of the five presented in<ref type="bibr">Nöllenburg et al. (2009)</ref>, and against the lh algorithm, as it has similar performance to the other algorithms described in<ref type="bibr" target="#b0">Bansal et al. (2009)</ref>, while being faster. Since these algorithms only accept binary trees, we first restricted our attention to binary trees. We compared these two published methods against our NNtanglegram heuristic and two variants of it, which we will refer to as NN-tanglegram+1S and NN-tanglegram+5S. These two variants first compute π 1 and π 2 as described in Section 3.2, then define π as the order π 1 restricted to the common taxa and finally use π to compute the new orders π 1 and π 2 as described in Section 3.2. NNtanglegram+5S executes this step 5 times, alternating π 1 and π 2 to compute the new π. Since the NN-tanglegram heuristic performs similarly on trees when using the splits-based distance H or the shortest path distance matrix H , we will present the results only for the former variant. All runs were executed on a 2.53 GHz processor with 4 GB of RAM. For the first dataset, which we will refer to as D 1 , we created 6 random binary trees on the same taxon set for five different sizes, namely on 20, 60, 100, 140 and 180 taxa. This dataset contains 15 instances to solve for each taxon set. Each instance was formulated as an ILP (integer linear program) as described in<ref type="bibr">Nöllenburg et al. (2009)</ref>and then solved using lpSolve (freely available from lpsolve.sourceforge.net/5.5/). The number of replicates considered for each parameter setting was limited by the long running time of the ILP solver. In the second dataset, D 2 , we created 10 random binary trees for each of the 5 sizes listed above, ensuring in each case that a tanglegram with zero crossings among connectors exists. This dataset contains 45 instances to solve for each taxon set. For each tanglegram and each method, we computed the performance ratio (PR), that is, the ratio (cn+1)/(cn opt +1), where cn and cn opt are the computed and the optimum number of crossings among connectors, respectively. The performance ratio values and the average running time for each method are shown in<ref type="figure" target="#fig_7">Figure 5</ref>. For both datasets, the best-performing method is bb-1st-sol, having the lowest PR values and the lowest average running time. Note that this method is guaranteed to find a solution with zero crossings, if one exists (<ref type="bibr">Nöllenburg et al., 2009</ref>), just like our NN-tanglegram heuristic [see<ref type="figure" target="#fig_7">Fig. 5</ref>(d)]. However, the method is restricted to binary trees, unlike our method, which also applies to multifurcating trees. On the first dataset lh appears to perform well and its PR values are comparable with those of bb-1st-sol. However, when the number of instances per taxon set is increased (as in dataset D 2 ), this method can perform very badly for some instances [see<ref type="figure" target="#fig_7">Fig. 5</ref>(d)], although the average PR values remain low. Moreover, the average running time of lh is unacceptably high for use in an interactive visualization tool [on average &gt;100 s when the cardinality of the taxon set is 180, see<ref type="figure" target="#fig_7">Fig. 5</ref>(a,c)]. Our new method, although designed for the general case of networks, also performs well for binary trees, while the average running time is low. Comparing the performance of NN-tanglegram with NN-tanglegram+1S and NN-tanglegram+5S, we can see that the swapping step, as expected, improves the PR values but increases the average running time. However, swapping one time (as done in NN-tanglegram+1S) is highly recommended because the achieved improvement of the PR values is worth the small increase in running time. In our implementation, the user can choose how many times to swap or can abort the swapping procedure after a given amount of time. In the second part of the simulation, we studied the performance of our methods on two different network datasets. For both i252Page: i253 i248–i256datasets (D 3 and D 4 ), we created 15 random binary networks (not necessarily bicombining) on the same taxon set for 5 different sizes, namely on 20, 60, 100, 140 and 180 taxa, ensuring in each case that a tanglegram with zero crossings among connectors exists. This leads to 105 instances to solve for each taxon set. The two datasets differ by the probability to add a reticulate edge between two nodes, which is higher for D 4. (This implies that D 4 on average contains more reticulations than D 3 and thus is a more complicated dataset than the latter.) For both datasets, we compared the performance of NNtanglegram with NN-tanglegram+1S and NN-tanglegram+5S. Since the NN-tanglegram heuristic performs a lot better on networks when using the shortest path distance matrix H rather than the splits-based distance H [see<ref type="figure" target="#fig_8">Figure 6</ref>(b), NN-tanglegram+1S vs<ref type="bibr">NN-tanglegram_C+1S]</ref>, we will discuss the results only for the former variant. As expected, the PR values and average running times are higher than for the binary tree datasets but still acceptably low for use in an interactive visualization tool [see<ref type="figure" target="#fig_8">Fig. 6]</ref>. The PR values increase both with the number of leaves and the number of reticulations in the networks [see<ref type="figure" target="#fig_8">Fig. 6</ref>(b,d)]. The pattern of relations among NN-tanglegram, NN-tanglegram+1S and NN-tanglegram+5S is the same than for the tree datasets (i.e. the swapping step improves the PR values but increases the average running time). In general, although the average PR values remain low, the methods can produce tanglegrams with high numbers of crossings among connectors for some instances. Note that, when the number of leaves in the networks is large, the crossing number can easily be very high. For example, if the two networks under consideration have 180 leaves each and if only one taxon is incorrectly placed at the two different ends of the networks, then the crossing number will be at least 179. Nevertheless, in this case the tanglegram may still be useful for visualizing similarities and differences among the two networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tanglegrams for rooted phylogenetic networks</head><formula>(a) ( b) (c) ( d)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Application to published data</head><p>Persicaria is a genus of plants in the family Polygonaceae. In (<ref type="bibr" target="#b21">Kim and Donoghue, 2008</ref>), the authors present evidence of hybrid speciations within this genus using cpDNA regions and nuclear ITS sequences. The strict consensus tree from the most parsimonious (MP) trees and the maximum likelihood (ML) tree were computed and drawn superposed on each other for both the cpDNA and nuclear ITS datasets. A tanglegram between the two superposed drawings i253(one for the cpDNA dataset and nuclear ITS dataset, respectively) with crossing number among connectors 244 was shown. Here, instead of superposing the drawing of the strict consensus MP tree and the ML tree, we show both trees embedded in a network. The tanglegram between the network obtained by combining the strict consensus MP tree and the ML tree for the cpDNA dataset and the one obtained by the nuclear ITS dataset is shown in<ref type="figure">Figure 7</ref>. This tanglegram is much clearer than the original representation (see<ref type="figure">Fig. 1</ref>of<ref type="bibr" target="#b21">Kim and Donoghue, 2008</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.Scornavacca et al.</head><formula>(a) ( b) (c) ( d)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>Tanglegrams are a useful tool for comparing rooted phylogenetic trees. In this article, we have extended them to rooted phylogenetic networks and have described a practical approach to their computation. The simulation study proves that our new method, although designed for the general case of networks, also performs well for binary trees, while the average running time stays low. Moreover, the performance of our method on networks is good enough for use in an interactive visualization tool. Our implementation in the popular tree-drawing program Dendroscope will make tanglegrams for trees and networks easily accessible to biologists and other users.Page: i256 i248–i256</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.Scornavacca</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX A</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 Proof of Lemma 3.4</head><p>To obtain a contradiction, assume that C(N) is not interval-realizable with respect to an order π and there exists a rooted outer-labeled planar embedding θ such that π θ = π. Let C be a cluster in C(N) that is not interval-realizable with respect to π. Then there exist three taxa a,b,c ∈ X such that a,b ∈ C, c ∈ C and a &lt; π c &lt; π b. Let v be the target node of a tree edge in N that represents C and let p 1 and p 2 two paths connecting v to the leaves labeled by a and b, respectively. By definition of a rooted phylogenetic network, there exists a direct path p 3 connecting c to the root node ρ. Since any p 3 cannot include v, the Jordan curve theorem implies that p 3 has to cross p 1 or p 2 , a contradiction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Proof of Theorem 3.5</head><p>For ease of exposition, assume that X 1 = X 2 holds. Since both N 1 and N 2 can be represented by rooted outer-labeled planar graphs, it follows from Lemma 3.4 that C(N 1 ) and C(N 2 ) are intervalrealizable for some orders π 1 and π 2 of X , respectively. From the definition of (·) we have that both (N 1 ) and (N 2 ) fulfill Definition 2.2 with respect to π 1 and π 2 and thus are circular split systems. Thus, by definition,</p><formula>D((N 1 )), D((N 2 )) and D((N 1 ))+ D((N 2 )</formula><p>) are circular. It follows, from the consistency of NeighborNet (Theorem 2.3), that the split set (N 1 )∪(N 2 ) is circular with respect to the circular ordering π computed by the Neighbor-Net algorithm. Note that also (N 1 ) and (N 2 ) are circular with respect to π and thus the linear ordering π is by definition a circular ordering for (N 1 ) and (N 2 ) too. The definitions of (·) and of π imply that the sets C(N 1 ) and C(N 2 ) are interval-realizable with respect to π. It remains to be established that the ordering π 1 (similar for π 2 ) returned by the Neighbor-Net tanglegram heuristic is such that π 1 = π. To establish this, we have to show that, if C(N 1 ) is intervalrealizable with respect to π, then there exists an embedding τ 1 of F(N 1 ) such that π is a non-interleaving order w.r.t. τ 1. Note that, for each T * ∈ F (N 1 ) on a taxon set X * , the cluster set C(T * ) is a subset if C(N 1 ) and thus is interval-realizable with respect to π; second, C(T * ) is compatible. This implies that we can construct an embedding τ * of T * with π τ * (T * ) = π| X * that can be drawn in such a way that no two tree edges cross. Thus, the set of topological embeddings for all trees T * in</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i256</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.2.</head><figDesc>Fig. 2. (a) A set of six circular splits on X ={a,b,...,h}. A circular ordering is given by (a,g,c,f ,b,d,h,e). (b) An outer-labeled planar split network representing .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>[20:11 6/6/2011 Bioinformatics-btr210.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.3.</head><figDesc>Fig. 3. (a) A phylogenetic network N. (b) A concrete drawing τ of the forest F (N). This drawing induces a partial order of the leaves such that a &lt; τ d &lt; τ f &lt; τ g &lt; τ h &lt; τ l, i &lt; τ j &lt; τ k, and b &lt; τ c.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><figDesc>[20:11 6/6/2011 Bioinformatics-btr210.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.4.</head><figDesc>Fig. 4. A pair of networks for which our approach may fail to find the optimal solution. (a) An optimal ordering and (b) an ordering that needs to be drawn with at least one crossing.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><figDesc>[20:11 6/6/2011 Bioinformatics-btr210.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.5.</head><figDesc>Fig. 5. (a) Average running time (RT) and (b) performance ratio values (PR) for dataset D 1. (c) Average running time (RT) and (d) performance ratio values (PR) for dataset D 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig.6.</head><figDesc>Fig. 6. (a) Average running time (RT) and (b) performance ratio values (PR) for datasets D 3. (c) Average running time (RT) and (d) performance ratio values (PR) for datasets D 4 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><figDesc>[20:11 6/6/2011 Bioinformatics-btr210.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><figDesc>F(N) constitutes a topological embedding τ 1 for F (N 1 ) such that π satisfies condition (1) of Definition 3.1 w.r.t. τ 1. But π also satisfies condition (2) of Definition 3.1 w.r.t. τ 1 , otherwise C(N 1 ) would not be interval-realizable with respect to π. From these observations, it follows that we can construct an embedding τ 1 for the forest F(N 1 ) such that π is a non-interleaving order w.r.t. τ 1 as described in Section 3.2. This concludes the proof.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>Definition 3.3 (Optimal tanglegram). Let N 1 and N 2 be two rooted phylogenetic networks on X 1 and X 2 , respectively, and let M be a set of connectors between X 1 and X 2. A tanglegram</figDesc><table></table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">i254 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The authors would like to thank Mukul S. Bansal and Martin Nöllenburg for providing them with an implementation of their methods.</p></div>
			</div>

			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Generalized binary tanglegrams: Algorithms and applications</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">S</forename>
				<surname>Bansal</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">BICoB &apos;09: Proceedings of the 1st International Conference on Bioinformatics and Computational Biology</title>
		<meeting><address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="114" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">A faster fixed-parameter approach to drawing binary tanglegrams</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Böcker</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">4th International Workshop of Parameterized and Exact Computation</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="38" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Neighbor-net: an agglomerative method for the construction of phylogenetic networks</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Bryant</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Moulton</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biol. Evol</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="255" to="265" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Consistency of the Neighbor-Net algorithm</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Bryant</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithms Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">8</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>btr210. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b5">
	<monogr>
		<title level="m" type="main">Page: i255 i248–i256 Tanglegrams for rooted phylogenetic networks</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<monogr>
		<title level="m" type="main">A tanglegram between the networks obtained by analyzing the nrITS dataset (left) and the cpDNA dataset (right) For each dataset, the edges present only in the ML tree or in the strict consensus MP tree, are shown as bold black lines, or bold dotted gray lines, respectively. Data from</title>
		<author>
			<persName>
				<surname>Fig</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Kim and Donoghue</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Drawing (complete) binary tanglegrams: Hardness, approximation, fixed-parameter tractability</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Buchin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th International Symposium on Graph Drawing</title>
		<meeting>the 16th International Symposium on Graph Drawing</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="324" to="335" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">The recovery of trees from measures of dissimilarity</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Buneman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematics in the Archaeological and Historical Sciences</title>
		<editor>Hodson,F.R. et al.</editor>
		<meeting><address><addrLine>Edinburgh, UK</addrLine></address></meeting>
		<imprint>
			<publisher>Edinburgh University Press</publisher>
			<date type="published" when="1971" />
			<biblScope unit="page" from="387" to="395" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<monogr>
		<title level="m" type="main">Genes in Conflict: The Biology of Selfish Genetic Elements</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Burt</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Trivers</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Belknap Press of Harvard University Press</publisher>
			<pubPlace>Harvard, USA</pubPlace>
		</imprint>
	</monogr>
	<note>1st. edn</note>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Jungles: a new solution to the host/parasite phylogeny reconciliation problem</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Charleston</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Biosci</title>
		<imprint>
			<biblScope unit="volume">149</biblScope>
			<biblScope unit="page" from="191" to="223" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<monogr>
		<title level="m" type="main">Lizards, malaria, and jungles in the caribbean (ed) Tangled Trees: Phylogeny, Cospeciation, and Coevolution</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Charleston</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">L</forename>
				<surname>Perkins</surname>
			</persName>
		</author>
		<editor>Page,R.D.M.</editor>
		<imprint>
			<date type="published" when="2003" />
			<publisher>The University of Chicago Press</publisher>
			<biblScope unit="page" from="65" to="92" />
			<pubPlace>Chicago, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Constructing splits graphs</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">W M</forename>
				<surname>Dress</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Huson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="109" to="115" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Optimal leaf ordering for two and a half dimensional phylogenetic tree visualisation</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Dwyer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Schreiber</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Australasian Symposium on Information Visualisation</title>
		<meeting><address><addrLine>CRPIT , ACS</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="109" to="115" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Comparing trees via crossing minimization</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Fernau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 25th Conference on Foundations of Software Technology and Theoretical Computer Science</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="457" to="469" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Comparing trees via crossing minimization</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Fernau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="page" from="593" to="608" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Drawing rooted phylogenetic networks</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Huson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="103" to="109" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">A survey of combinatorial methods for phylogenetic networks</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Huson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Scornavacca</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol. Evol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="23" to="35" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<monogr>
		<title level="m" type="main">Dendroscope 3-a program for computing and drawing rooted phylogenetic trees and networks</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Huson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Scornavacca</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Dendroscope: an interactive viewer for large phylogenetic trees</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Huson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">460</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<monogr>
		<title level="m" type="main">Phylogenetic Networks: Concepts, Algorithms and Applications</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Huson</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Incongruence between cpDNA and nrITS trees indicates extensive hybridization within eupersicaria (polygonaceae)</title>
		<author>
			<persName>
				<forename type="first">S.-T</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">J</forename>
				<surname>Donoghue</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Am. J. Bot</title>
		<imprint>
			<biblScope unit="volume">95</biblScope>
			<biblScope unit="page" from="1122" to="1135" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">A multilocus approach to assessing co-evolutionary relationships between Steinernema spp. (nematoda: Steinernematidae) and their bacterial symbionts Xenorhabdus spp. (γ-proteobacteria: Enterobacteriaceae)</title>
		<author>
			<persName>
				<forename type="first">M.-M</forename>
				<surname>Lee</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Stock</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Syst. Parasitol</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="1" to="12" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Seeded tree alignment</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Lozano</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="503" to="513" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Critical review of host specificity and its coevolutionary implications in the fig/fig-wasp mutualism</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">A</forename>
				<surname>Machado</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="6558" to="6565" />
		</imprint>
	</monogr>
	<note>Suppl. . 1</note>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Distribution and phylogeny of immunoglobulin-binding protein G in Shiga toxin-producing Escherichia coli and its association with adherence phenotypes</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Merkel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Infect. Immun</title>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="page" from="3625" to="3636" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Drawing binary tanglegrams: an experimental evaluation</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Nöllenburg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eleventh Workshop on Algorithm Engineering and Experiments (ALENEX), SIAM</title>
		<meeting>the Eleventh Workshop on Algorithm Engineering and Experiments (ALENEX), SIAM</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="106" to="119" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<monogr>
		<title level="m" type="main">Drawing phylogenetic networks with constraints on the order of taxa</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Scornavacca</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Huson</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page">255</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>