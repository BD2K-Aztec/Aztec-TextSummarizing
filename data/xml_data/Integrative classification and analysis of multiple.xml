
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:35+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Integrative classification and analysis of multiple arrayCGH datasets with probe alignment</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">18 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Ze</forename>
								<surname>Tian</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of Minnesota Twin Cities</orgName>
								<address>
									<settlement>Minneapolis</settlement>
									<region>MN</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Rui</forename>
								<surname>Kuang</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of Minnesota Twin Cities</orgName>
								<address>
									<settlement>Minneapolis</settlement>
									<region>MN</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Integrative classification and analysis of multiple arrayCGH datasets with probe alignment</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="page" from="2313" to="2320"/>
							<date type="published" when="2010">18 2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq428</idno>
					<note type="submission">Systems biology Advance Access publication July 21, 2010 Received on April 26, 2010; revised on June 30, 2010; accepted on July 18, 2010</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Joaquin Dopazo Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Array comparative genomic hybridization (arrayCGH) is widely used to measure DNA copy numbers in cancer research. ArrayCGH data report log-ratio intensities of thousands of probes sampled along the chromosomes. Typically, the choices of the locations and the lengths of the probes vary in different experiments. This discrepancy in choosing probes poses a challenge in integrated classification or analysis across multiple arrayCGH datasets. We propose an alignment-based framework to integrate arrayCGH samples generated from different probe sets. The alignment framework seeks an optimal alignment between the probe series of one arrayCGH sample and the probe series of another sample, intended to find the maximum possible overlap of DNA copy number variations between the two measured chromosomes. An alignment kernel is introduced for integrative patient sample classification and a multiple alignment algorithm is also introduced for identifying common regions with copy number aberrations. Results: The probe alignment kernel and the MPA algorithm were experimented to integrate three bladder cancer datasets as well as artificial datasets. In the experiments, by integrating arrayCGH samples from multiple datasets, the probe alignment kernel used with support vector machines significantly improved patient sample classification accuracy over other baseline kernels. The experiments also demonstrated that the multiple probe alignment (MPA) algorithm can find common DNA aberrations that cannot be identified with the standard interpolation method. Furthermore, the MPA algorithm also identified many known bladder cancer DNA aberrations containing four known bladder cancer genes, three of which cannot be detected by interpolation.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>It has been confirmed in many recent studies that aberrations in chromosome copy number, rearrangement and structures have association with the disease (<ref type="bibr" target="#b8">Feuk et al., 2006</ref>). Among these chromosomal aberrations, DNA copy number variations (CNVs), the events of amplification or deletion of a large DNA segment on chromosomes, are believed to play an important role in * To whom correspondence should be addressed. tumorigenesis (<ref type="bibr" target="#b17">Redon et al., 2006;</ref><ref type="bibr" target="#b18">Shlien and Malkin, 2009</ref>). Chromosome CNVs can be measured by comparative genomic hybridization (CGH), which compares the copy number of a differentially labeled case sample with a reference DNA from a normal individual. ArrayCGH technology based on DNA microarray can currently allow genome-wide identification of regions with CNVs at different resolutions (<ref type="bibr" target="#b6">Carter, 2007</ref>). The arrayCGH data was used to discriminate healthy patients from cancer patients and classify patients of different cancer subtypes. Thus, arrayCGH data is considered as a new source of biomarkers that provide important information of candidate cancer loci for the classification of patients and discovery of molecular mechanisms of cancers (<ref type="bibr" target="#b20">Sykes et al., 2009</ref>). ArrayCGH allows rapid mapping of DNA CNVs of a tumor sample by a locus-by-locus measure. In an arrayCGH experiment, probes (short DNA segments on chromosomes) of different lengths and locations are chosen for comparative genomic hybridization. The CNV information at a probe location is reported by the log-ratio of the probe intensity between a case and a reference. The sizes and the number of the probe determines the resolution of an arrayCGH experiment. The length of the DNA probes used by current platforms ranges from 100 bp to 5 kb, and in a typical study, the number of probes ranges from several hundreds to tens of thousands. For example, a Human array 2.0 chromium surface array can consist of only 2464 probes at 1.5 Mb resolution, whereas a high-resolution tiling array provides measurements of 36 288 probes. The large difference in the sizes and numbers of probes makes integration of multiple arrayCGH datasets used for similar studies, a challenging problem. From a data analysis perspective, the arrayCGH data are series of real values labeled by their chromosomal positions. The traditional approach is an interpolation between the two series of probe locations from two platforms. As described in<ref type="figure">Figure 1</ref>, in an interpolation probe locations on one platform are added (interpolated) to the target platform and the corresponding CNV intensities are guessed by intensities of the most nearby probes in the target platform. However, when the two platforms have large variations in the number of probes, the interpolation is not an appropriate way to integrate the two series of probes. Specifically, when the two series are both sparse, the interpolated points might give misleading or wrong information. For example, in<ref type="figure">Figure 1</ref>, some of the probes are interpolated to locations close to probes with opposite CNV. When the probes are sparsely located, this might introduce false positives. Moreover, some of the interpolated probes are far from other probes. In these cases (i.e. the interpolated probes marked by '?' in the figure), it is ambiguous to decide the CNV for the interpolated new probes.<ref type="figure">Fig. 1</ref>. A hypothetical example of interpolation and probe alignment. Interpolation and probe alignment are applied to compare the same two chromosomes. The probe locations are marked with vertically striped blocks (amplifications) or horizontally striped blocks (deletions). The interpolation interpolates each probe to its corresponding position on the chromosome and add a new probe in the other series. The CNV value of the new probe is guessed by checking the neighboring probes in the same series. The probe alignment aligns nearby probe pairs in the two series with similar CNVs. The matched probe pairs are connected by arrows in the alignment. The interpolated probes marked with '?' are possibly wrongly labeled in the interpolation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Z.Tian and R.Kuang</head><p>In this article, we propose to integrate arrayCGH datasets with probe alignment. As shown in<ref type="figure">Figure 1</ref>, two series of probes from two arrayCGH samples are aligned based on both their chromosomal locations and their CNV log-ratios. The probes in one series are matched to the probes in the other. The alignment representing an approximate positional matching of the two compared chromosomes with the maximum possible overlap of CNV events. The probe alignment seeking the maximum possible CNV overlap is motivated by the fact that two tumor samples are likely to share some common aberration regions related to tumor development and progression. If a probe in one series shares the same CNV with another nearby probe in the other series, it is likely that the two probes capture the same common tumor aberration in the two samples. Thus, the two probes should be aligned to enhance the signal. Based on this assumption, a probe alignment is more capable of detecting weak common CNV signals between two chromosomes if only sparse information is available. The problem of finding the best alignment of two probe series can be solved by a variation of the standard global sequence alignment algorithm (<ref type="bibr" target="#b7">Durbin et al., 1998</ref>). Compared with interpolation, the main advantage of probe alignment is that the copy number of the chromosomal regions between probes are inferred based on the information of all the probes, instead of only the nearby ones, and the optimal global alignment provides the best guess of the CNVs in these regions. Based on probe alignment, a probe alignment kernel derived from the probe alignment scores is introduced for classification of patient samples from multiple datasets. In the classification task, a binary classifier is trained to predict the tumor grade or cancer stages of a patient using the CNV information in different arrayCGH data. With the probe alignment kernel, many more patient samples from other datasets can be used to improve classification performance on one dataset. A multiple alignment algorithm is also designed to align all the probe series for identifying common CNV regions across patient samples from many datasets. In this case, many probe series from several arrayCGH datasets are aligned probe-by-probe, and the final alignment profile can reveal the detected common CNV regions along the chromosomes. Sequence alignment algorithms are well-established methods for protein/nucleic acid sequence analysis (<ref type="bibr" target="#b7">Durbin et al., 1998</ref>). Famous examples are Needleman–Wunsch algorithm, Smith–Waterman algorithm and fast approximations such as BLAST/PSI-BLAST (<ref type="bibr" target="#b4">Altschul et al., 1997</ref>). The applications of these algorithms were relatively only limited to biological sequences rather than other types of data. It is worth mentioning that<ref type="bibr" target="#b3">Aach and Church (2001)</ref>proposed to use an alignment algorithm to align time series of gene expressions. Although motivated by another application, the central philosophy of finding a synchronization of two series to replace simple interpolation is closely related. There are several previous approaches for segmentation and CNV detection from arrayCGH data. For example,<ref type="bibr" target="#b9">Guha et al. (2008)</ref>proposed a Bayesian hidden Markov model to model relation between neighboring probes. Because these approaches assumes discrete copy number states without quantifying the distance between probes, they are not directly applicable in the multi-platform scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>In this section, we first describe how to align two probe series. We next introduce the probe alignment kernels for classification of CNV samples and a multiple alignment algorithm for identifying common disease in CNV regions. Finally, the time complexity of probe alignment is analyzed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Pairwise alignment of probe series</head><p>We denote the series of arrayCGH probes on a chromosome as a finite sequence of tuples (x 1 ,l 1 ),(x 2 ,l 2 ),...,(x i ,l i ),..., where each x i denotes the log-ratio intensity of the i-th probe and l i denotes the location of the probe on the chromosome by kilo base pairs (kb). Given two such sequences U = (u 1 ,a 1 ),(u 2 ,a 2 ),...,(u n ,a n ) and V = (v 1 ,b 1 ),(v 2 ,b 2 ),...,(v m ,b m ) of length n and m, respectively, we define three functions, S(i,j), L(i,j) and R(i,j), for computing the alignment between the subsequences (u 1 ,a 1 ),...,(u i ,a i ) in U and the subsequences (v 1 ,b 1 ),...,(v j ,b j ) in V. S(i,j) is the optimal alignment score when (u i ,a i ) is aligned with (v j ,b j ); L(i,j) is the optimal alignment score when (u i ,a i ) is aligned with a gap and R(i,j) is the optimal score when (v j ,b j ) is aligned with a gap. Finally, a function M(i,j) defined as the max of S(i,j), L(i,j) and R(i,j) gives the optimal alignment score up to position i in U and position j in V. With initialization S(0,</p><formula>* ) = S( * ,0) = L( * ,0) = L(0, * ) = R( * ,0) = R(0, * ) =</formula><p>0, the functions can be recursively evaluated with a variation of standard dynamic programming as follows,</p><formula>S(i,j) = max ⎧ ⎨ ⎩ M(i−1,j −1)+s(i,j) S(i,j −1)+s(i,j) S(i−1,j)+s(i,j) L(i,j) = M(i−1,j)+g R(i,j) = M(i,j −1)+g M(i,j) =</formula><p>max{S(i,j),L(i,j),R(i,j)} where function s(i,j) gives the substitution score between (u i ,a i ) and (v j ,b j ) and constant g is a gap penalty. The gaps in the alignment are introduced to capture the regions that are sufficiently covered by probes in one platform but not the other. Note in our formulation, a probe in one probe series can be matched with multiple probes in the other series, i.e. we also consider S(i,j −1)+s(i,j) and S(i−1,j)+s(i,j) when S(i,j) is calculated. Because</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Page: 2315 2313–2320</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Integrating arrayCGH data with probe alignment</head><p>different platforms have different probe densities, it is more reasonable to allow one-to-many matching in the alignment. Given two probe series U and V , the substitution score s(i,j) between (u i ,a i ) and (v j ,b j ) needs to be designed to quantify a composition of two measurements: first, how close the two positions a i and b j are, and second, how similar the two CNV log-ratios u i and v j are. The substitution scores should encourage alignment of probe pairs that have similar amplification/deletion log-ratios at nearby locations. A simplest scoring function can be defined as follows:</p><formula>s(i,j) = e −|a i −b j | σ * u i * v j ,</formula><formula>(1)</formula><p>where e −|a i −b j | σ quantifies how close the two positions are and u i * v j is a simple measure of whether the two CNV log-ratios are similar or opposite. In this scoring function, the distance on a chromosome is normalized by a constant σ, which can be estimated from the actual probe locations in the probe series data. The closer the two probes, the larger the score. The similarity between two CNV log-ratios is simply taken as the product of the two values. The main advantage of this scoring function is that it is straightforward and parameter free. Note that, because the probes might represent the DNA copy numbers in chromosome regions of various lengths, the optimal probe alignment does not necessarily preserve the best sequential mappings between the two series by locations. Thus, a probe might not be matched with its closest peers in the other series in the alignment. To produce more refined multiple probe alignments (MPAs), the scoring function in Equation (1) can be extended to be a positive function as follows:</p><formula>s(i,j) = e −|a i −b j | σ * ([u i * v j ] + +1),</formula><formula>(2)</formula><p>where [u i * v j ] + is a refined product based on the sign and the value of u i and v j , defined as below</p><formula>[u i * v j ] + = u i * v j , if u i * v j ≥ 0. 0, otherwise.</formula><p>The product is then shifted by 1 to keep the positiveness. The refined similarity between u i and v j considers two scenarios. First, when u i and v j have the same sign, the similarity is still the product between them. Second, when u i and v j have different signs, the similarity between them is 0. In this scoring scheme, two probes with exactly the same position but different CNV signs will still be matched together to prevent needlessly penalizing the matches with gap insertions. This also implies that two probes at the same chromosomal position will still be matched even if they have opposite CNV events. The choice of the gap penalty g depends on the substitution function s(i,j). If the substitution function in Equation (1) is used, g can simply be set to a very small positive constant, which guarantees that a gap is preferred over matching two probes with different signs, and that only a very small value is added to the overall alignment score from the gap insertions. Intuitively, when g is small enough, an identical alignment and similar kernels will be resulted. If the substitution function in Equation (2) is employed, the gap penalty g = e −τ σ is used to match the scaling of the new scoring function. By definition, this gap penalty only allows two probes with different signs to match if their distance on the chromosome is less than τ. This means that two probes with different signs will be matched if they are close-by sufficiently on the chromosome. τ can be empirically chosen as a value smaller than σ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Probe alignment kernel</head><p>To address the problem that there is no direct way to integrate arrayCGH/CGH profiles from different platforms in classification, we propose a kernel based on probe alignment, which measures the similarity between samples with their probe alignment scores. The probes located on the DNA of each chromosome of human genome are aligned and the alignment scores are summarized as the kernel value. The alignment kernel function computing the best global alignment score between U and V is given as follows:</p><formula>K(U,V ) = K(((u 1 ,a 1 ),...(u n ,a n )),((v 1 ,b 1 ),...(v m ,b m ))) = M(m,n) m+n ,</formula><formula>(3)</formula><p>where the alignment score is normalized by m+n, the lengths of the two series to avoid the bias by the number of probes. The kernel function K(U,V ) is used to compute the alignment score between two probe series of a particular human chromosome. Given two arrayCGH samples each with P chromosomes in genome (23 pairs of chromosomes in Human genome), the total alignment score between the two samples is the summation of the best global alignment scores of the P pairs of chromosomes. Let {U (1) ,...U (P) } and {V (1) ,...V (P) } denoting the two sets of probe sequences of the chromosomes. The probe-alignment kernel function K is defined as</p><formula>K({U (1) ,...U (P) },{V (1) ,...V (P) }) = P i=1 K(U (i) ,V (i) )</formula><p>We choose the scoring function given in Equation (1) for the probe alignment kernel. When all the probe positions can be perfectly matched between the two series, the probe alignment kernel tends to be very close to a simple linear kernel between the two probe series, where the kernel is simply the summation of the matched u i * v j in the two series. Note that the probe alignment kernel is not positive semi-definite (PSD), similar to the alignment kernel for protein classification (<ref type="bibr" target="#b12">Liao and Noble, 2003</ref>). A positive constant is added to the diagonal of the kernel matrix to make it a valid kernel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Multiple alignment of probe series</head><p>Similar to the multiple alignment algorithms for protein/DNA sequences, a multiple alignment procedure can also be used to align multiple probe series from different arrayCGH datasets. The MPA can reveal common amplification or deletion events even if the probe sets are at different chromosomal positions. We adopted the progressive multiple alignment strategy (<ref type="bibr" target="#b21">Thompson et al., 1994</ref>) and used the pairwise probe alignment with scoring function defined in Equation (2) for base alignment. The algorithm is described in Supplementary Section 1. The algorithm continuously merges the two most similar probe series and finally, gives the alignment merged from all the series. Merging two probe series is the crucial step. To accomplish the best merging, we slightly extended the definition of a probe series by adding a weight to each probe in the series to make a new sequence of triples (x i ,l i ,w i ). Each weight w i quantifies the importance of the probe by keeping the count of the number of probes that have been merged into this probe in previous alignments. Specifically, two such series</p><formula>X a = (u 1 ,a 1 ,w 1 ),...,(u n ,a n ,w n ) and X b = (v 1 ,b 1 ,w 1 ),...,(v m ,b m ,w m )</formula><p>are merged as a new series X a,b based on their alignment. There are two types of probes in the alignment: (i) the probe is aligned with a gap and (ii) the probe is matched with some probe(s). New probes are calculated for these two cases as follows:</p><formula>(1) If a triple (u i ,a i ,w i ) or (v j ,b j ,w j )</formula><p>is matched with a gap in the alignment between X a and X b , the triple is kept unchanged and directly added into the new series X a,b .</p><p>(2) Because some consecutive probes in one series can be matched with some consecutive probes in the other series, multiple triples from both series might need to be merged as one new probe.</p><formula>Suppose {(u i ,a i ,w i ),(u i+1 ,a i+1 ,w i+1 ),...,(u i+k 1 ,a i+k 1 ,w i+k 1 )} and {(v j ,b j ,w j ),(v j+1 ,b j+1 ,w j+1 ),...,(v j+k 2 ,b j+k 2 ,w j+k 2</formula><p>)} are the two sets of multiple triples of length k 1 and k 2 , respectively, that need to be merged. We combine them as a new tuple (z,c,w ) by</p><formula>z = i+k 1 p=i u p + j+k 2 q=j v q ; w = i+k 1 p=i w p + j+k 2 q=j w q ; c = i+k 1 p=i a p * w p + j+k 2 q=j b q * w q w .</formula><p>Page: 2316 2313–2320</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Z.Tian and R.Kuang</head><p>Note that the position of the new probe is calculated as a weighted average of the merged positions to relieve possible bias introduced by outlier probes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Fast probe alignment in linear time complexity</head><p>The direct implementation of the recursive dynamic programming runs in quadratic time. Under an idea similar to fast-banded sequence alignment, probe alignment can be computed in linear time complexity. The motivation is that those probe pairs which are too far from each other will never be matched in the optimal alignment; otherwise, there always exists a better path that replaces the bad matches with more insertions and deletions. Thus, in the linear time implementation, only those probe pairs that are in locations close enough need to be considered in the alignment. Specifically, we prove the following two propositions: Given two probe series,</p><formula>U = (u 1 ,a 1 ),(u 2 ,a 2 ),...,(u n ,a n ) and V = (v 1 ,b 1 ),(v 2 ,b 2 ),...,(v m ,b m )</formula><p>, and a small positive gap penalty g, let u max = max(|u 1 |,...,|u n |) and v max = max(|v 1 |,...,|v m |).Proposition 1 states that in the optimal alignment, only those probe pairs with distance less than a threshold θ can be possibly aligned. Proposition 2 states that the number of such pairs is upper bounded by θm δ , where δ is the minimal distance between the adjacent probe locations in V. Thus, the dynamic programming only needs to explore a linear number of pairs defined as a function of θ and δ. The complete proof of the two propositions are given in Supplementary Section 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EXPERIMENTS</head><p>We evaluated both the probe alignment kernel and the MPA algorithm with experiments on three bladder cancer datasets as well as simulations. Support vector machines (SVMs) were used as the classifier in all the classification tasks. Both linear and RBF kernels were tested for the interpolation method. In all experiments, we tested SVM parameter C ={10 −4 ,10 −3 ,...,10 4 } and RBF_σ = {10 −3 ,10 −2 ,...,10 3 }.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Simulations</head><p>In the simulations, we first generated 10 000 possible locations for probe sampling with a Markov model. We assume that locations are from two types of chromosome regions: gene-rich and non-coding regions. The probe density in gene-rich regions is higher than that in non-coding regions. Specifically, the distance between adjacent locations is 1 in gene-rich regions and 10 in non-coding regions. The Markov model takes two states {'gene-rich region', 'non-coding region'} with a transition probability 0.9 for staying at a state and 0.1 for jumping between the states. Thus, continuous gene-rich or noncoding regions with variable lengths will be generated by the Markov model. We randomly generated 50 samples of probe series in the case group and another 50 in the control group by random sampling from the 10 000 locations in each experiment. We simulated the DNA amplification and deletion events in the case samples for two test scenarios. In the first scenario, we randomly selected 20 regions (10 amplifications and 10 deletions), each of which consists of 10 consecutive locations out of the 10000 locations as discriminant CNVs on the chromosome. In the second scenario, we randomly selected 20 regions with variable numbers of locations between 1 and 20. This strategy generates CNV regions with significantly different lengths to mimic short chunks as well as large chunks of DNA amplification/deletions. The feature value of a probe that is not in a CNV region is generated from a normal distribution N(0,0.5 2 ). The rule implies that in normal individuals, a DNA amplification or deletion is a relatively rare event. A probe in the CNV regions in a case sample will take a value from a normal distribution N(1/−1,0.5 2 ) to indicate a measured CNV value at the locations in the amplification/deletion regions. We compared the standard interpolation with the alignment kernel using the cost function defined in Equation (1) and a small gap g = 0.001. In the standard interpolation, a linear interpolation maps the missing positions in each series. The feature value at an interpolated position is assigned the distance-weighted average of the two nearest positions. After interpolation, each sample will have a feature vector of the same dimension, and standard classifiers such as SVM can be used for classification. We randomly generated datasets and tested the classification accuracy with a 5-fold crossvalidation. In each fold, another 4-fold cross-validation on the training set is used to tune parameters for each algorithm. The average accuracy of each algorithm is reported in<ref type="figure" target="#tab_1">Table 1</ref>. The alignment kernel clearly outperformed the interpolation method. When probes are sparse, the improvement is up to 12%. When there are more probes available, the improvement is smaller. Especially, when 1000 probes are sampled, the improvement is only 3%. In the experiments with variable number of probes per sample or with variable number of locations per amplification/deletion region, the alignment kernel also significantly outperformed the interpolation. The experiments proved that the alignment kernel could handle sparse probe series with varying numbers of probes or varying lengths of amplifications/deletions well for classification. To compare the multiple alignment algorithm with the interpolation method, we also tested alignment of multiple probe series for identifying the true common CNV regions. The multiple alignment algorithm used the scoring function defined by Equation</p><p>(2) with τ = σ 10. For better visualization, we only report the results on small datasets without distinguishing gene-rich regions and non-coding regions although similar results were observed on larger datasets. We generated five samples with 100 locations, within which there are two amplification regions and two deletion regions. In the example in<ref type="figure" target="#fig_1">Figure 2A</ref>, each region contains five consecutive locations. In the example in<ref type="figure" target="#fig_1">Figure 2B</ref>, each region contains 1–10 consecutive locations. We randomly sampled 10 features for both cases. From the two examples, the result of multiple alignment is clearly more accurate in detecting the exact locations of amplifications and deletions. Since the interpolation approach propagates the information from a probe to its interpolated neighbors, this propagation-based assumption often results in blurry boundaries and fails to distinguish the close-by CNV events, as visualized in the examples in<ref type="figure" target="#fig_1">Figure 2</ref>and Supplementary<ref type="figure">Figure 6</ref>. The results suggest that the multiple alignment algorithm is more robust to tolerate probe sparsity and noise in the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Bladder cancer datasets</head><p>We collected three different arrayCGH datasets generated for studying bladder cancer. The first dataset (D 1 ) introduced by<ref type="bibr" target="#b5">Blaveri et al. (2005)</ref>was generated with a HumanArray 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="0">array consisting</head><p>Page: 2317 2313–2320The accuracies are averages of 10 random experiments for each case. n is the number of probes in each series. The probes are a random subset of the 10 000 locations generated for each sample in three ways: (i) constant numbers (from 100 to 1000) of features were extracted out of the 10 000 features for a sample such that each sample has the same number of features but at different locations; (ii) different numbers of features were extracted for each sample from a discrete uniform distribution on<ref type="bibr">[1,</ref><ref type="bibr">1000]</ref>; and (iii) different numbers of features for each sample were generated from a normal distribution N(500,100 2 ) (rounded to positive integers). The scores that are statistically significantly larger than the other compared average scores are bold.<ref type="bibr" target="#b16">Rapaport et al., 2008;</ref><ref type="bibr" target="#b22">Tian et al., 2009</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Integrating arrayCGH data with probe alignment</head><formula>n = 100 n = 500 n = 1000 n = U(1−1000) n = N(500,100 2 ) n = 100 n = 500 n = 1000</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A B</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Parameter selection</head><p>The σ parameter is the normalization term of the probe distances in Equations (1)</p><p>and (2), and the gap penalty g defines the scoring scale of a gap in the alignment. We set σ to be the average distance between all pairs of probes on a chromosome, based on the statistics on each chromosome in Supplementary Table 2. Note that different σs were used for probes on different chromosomes. In the three datasets, the σs for the 22 chromosomes are all in the order of 10 4 –10 5. Given the estimated σ from the data, an additional cross-validation on the training set is performed to choose the gap penalty g in {10 −5 ,...,10 −1 }. In multiple alignment, σ can be chosen in the same way, but the g parameter is actually decided by the minimal allowed matching distance τ<ref type="bibr">[Equation (2)]</ref>. Since g will only take values in the range</p><formula>[e −1 , 1]</formula><p>if τ&lt;σ, empirically any τ&lt;σ can give reasonable multiple alignment on both artificial and real datasets. From the definition</p><formula>g = e − τ</formula><p>σ , we can expect the results of multiple alignment will not be sensitive to τ as long as σ 10 &lt;τ&lt;σ. Thus, in the multiple alignments, we set τ = σ 10 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Classification of patient samples</head><p>To evaluate the classification performance of the alignment kernel, we performed a special cross-dataset validation. We first selected a target dataset to run 5-fold cross-validation. In the experiment on each fold, we also used the samples in the other two datasets as additional training samples. We performed the cross-dataset validation for D 1 , D 2 and D 3 , each with 50 times of random 5-fold cross-validation. One additional baseline is the raw kernel function defined by<ref type="bibr" target="#b13">Liu et al. (2008)</ref>, which defines pairwise relations between CNV states as a new variation of linear kernel. Note that the experiments of all the compared methods were on the same 5 folds of each dataset. In the experiment on each fold, another 4-fold cross-validation on the training set was performed to tune parameters for each algorithm, specifically, the SVM C parameter and the gap parameter g for probe alignment, the SVM C parameter for linear kernel and raw kernel, and the SVM C parameter and the RBF_σ for RBF kernel. Two categories of comparisons were performed. First, we tested SVMs used with linear kernel, RBF kernel and raw kernel on the three datasets independently but with the alignment kernel using additional training data from the other two datasets. These experiments were purposed to show that integrating samples from other datasets in the training set can generate more accurate classifiers. The results are reported in<ref type="figure" target="#tab_2">Table 2</ref>. Clearly, using the additional data, the alignment kernel significantly improved the Page: 2318 2313–2320</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Z.Tian and R.Kuang</head><p>classification accuracy on the three datasets. Next, the alignment kernel was compared with the other kernels on the interpolated data with the interpolated features on multiple datasets in all possible combinations. The average accuracy of all the methods are listed in<ref type="figure" target="#tab_3">Table 3</ref>. The alignment kernel outperformed or tied with the best of linear kernel, RBF kernel and raw kernel on the interpolated data in almost all the cases except it is the second best when tested with D 3 as target and D 1 for additional training.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Detecting common CNV regions</head><p>To evaluate how well the three datasets can be integrated to detect the common CNV regions in bladder cancer tumors, we applied the multiple alignment algorithm to align the samples with higher tumor grades in the three datasets, and compared the alignment result with the interpolation result. Since all the samples in the same dataset have identical probe locations, we first calculated the average log-ratio intensities of the three datasets to get three consensus CNV probe series. The multiple alignment method was then used to produce an MPA profileof the three consensus probe series. The probe intensities in the profile are rescaled to be in the range<ref type="bibr">[−1, 1]</ref>. We then report the probe positions with an absolute intensity larger than 0.4 and identified 49 regions with an average length of 20 000 kb. We also used linear interpolation to get an average of all samples and also rescaled the value to be in range<ref type="bibr">[−1, 1]</ref>. To make a fair comparison with alignment method, we reported 708 center regions in the interpolation profile, each with absolute intensity values larger than 0.8. The positions that are centered at the 708 regions with length 10 000 kb were taken as the common CNV regions. The results</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Integrating arrayCGH data with probe alignment</head><p>of MPA and interpolation are compared in<ref type="figure" target="#fig_2">Figure 3</ref>. Many of the common CNV regions identified by the two methods are similar, but the alignment profile is smoother. The interpolation method reported many more short fragments, many of which are false positives. One remarkable finding is that the MPA captured four known bladder cancer genes in the common CNV regions, while the interpolation only identified one. The MPA detected four bladder cancer genes, DBC1, TSC1, RB1 and BLCAP, and several common amplification/deletion regions associated with bladder cancer. DBC1 (deleted in bladder cancer 1) is a gene that shows loss of heterozygosity in some bladder tumors. TSC1's somatic mutations are associated with the tumor cases with one copy of the TSC1 gene missing due to a deletion in chromosome 9. The two genes were identified at the end of the second deletion regions in the alignment profile on chromosome 9. RB1 with mutations, believed to contribute to the development of bladder cancer, is identified at the first amplification region on chromosome 13. BLCAP (bladder cancer-associated protein), believed to be involved in the cancercinogenesis, is identified at the second amplification region at chromosome 20. Besides these bladder cancer genes, the MPA also identified some common amplification and deletion regions associated with bladder cancer. For example, we identified an amplification event at location 6p22 with a main target gene E2F3 (<ref type="bibr" target="#b14">Oeggerli et al., 2006</ref>). Deletions of part of or all chromosome 9 are common events in bladder tumors and we identified these events including a known location 9p21. The results are compared with previous studies on the datasets (<ref type="bibr" target="#b5">Blaveri et al., 2005;</ref><ref type="bibr" target="#b10">Heidenblad et al., 2008</ref>) in Supplementary Table 3. The MPA can retrieve most findings from these independent studies, which implies that probe alignment successfully integrated information from the three datasets. The multiple alignment also missed some amplification/deletion regions, many of which might be false positives that were manually identified in a very small number of samples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSIONS</head><p>Integration of diverse genomic datasets has become one of the central problems in cancer genomics. Most of the previous work on arrayCGH data analysis focused only on segmentation of the probe series for deriving real CNV events. In this article, we introduce a general probe alignment framework to integrate arrayCGH datasets generated on different platforms. We demonstrated with experiments that the probe alignment-based approaches have a good potential to generate significantly improved classification performance and detect more accurate common CNVs. The results suggest that these approaches are powerful tools for integrative studies of multiple arrayCGH datasets. There are three technical issues in applying probe alignment: fast implementation, parameter tuning and kernel selection. @BULLET We tested the fast probe alignment described in Section 2.4 to show that only a small fraction of the entries in the dynamic programming matrix needs to be computed. Although the probe locations and log-ratios are highly variable in different platforms, we empirically observed that the time complexity is indeed close to linear in our experiments (Supplementary<ref type="figure">Fig. 1</ref>). However, it is also possible that a larger gap penalty is needed to reduce the time complexity significantly,</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.2.</head><figDesc>Fig. 2. Comparison between MPA and interpolation in simulation. CNV profiles generated by multiple alignment algorithm (MPA) and interpolations are compared with the four true common CNV regions plotted in the step function. All the values in the plots were rescaled to the range [−1,1] for better visualization. (A) Example of uniform probe density. (B) Example of varying probe density.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. Comparison of MPA profile and interpolation profile. The MPA profile is above the interpolation profile. The common DNA amplification and deletion regions are plotted with blocks above or under the x-axis, respectively. The probes in the profiles are ordered by their locations on chromosomes (from chromosome 1 to chromosome 22) and the corresponding intensities are plotted by the curves. The vertical lines represent the chromosome separations. The locations of the known cancer-related CNVs and the four bladder cancer genes (DBC1, TSC1, RB1 and BLCAP) are marked with arrows.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>Proposition 1. The optimal alignment between U and V will only consist of gaps and pairs of aligned probes (U i ,V j ) with |a i −b j | &lt;θ, where θ = σ * (ln(u max v max )−lng). Proposition 2. The number of probe pairs that need to be considered in probe alignment is O( θm δ ), where δ = min{b j+1 −b j }.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>Table 1. Classification accuracy on artificial datasets. SVMs were used as the classifier with the kernels Method Uniform probe density Varying probe density</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>2 and D 3 (</figDesc><table>of 2464 probes at 1.5 Mb resolution. The second dataset (D 2 ) 
introduced by Stransky et al. (2006) was also generated with a 
HumanArray 2.0 array but consisting of 2385 probes at 1.3 MB 
resolution. The third dataset D 3 introduced by Heidenblad et al. 
(2008) was generated with a high-resolution tiling BAC Re-Array 
set 1.0 containing 36 288 BAC probes. The datasets were post-
processed by the authors and the clones from sexual chromosomes 
were not included in the study because they are not comparable 
between male and female samples. After the pruning, dataset D 1 
contains 98 samples and 2142 probes, dataset D 2 contains 57 
samples and 2308 probes, and dataset D 3 contains 38 samples 
and 24 384 probes. We tested classification of patient samples by 
tumor grades in the three datasets. The two classes are distinguished 
by lower tumor grades or higher tumor grades. Specifically, we 
considered 'Low' versus 'High' in D 1 , and '≤G2' versus '&gt;G2' 
in D </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 2. Improvement of bladder cancer classification from data integration with probe alignment kernel Method D 1 D 2 D 3</figDesc><table>Linear kernel 
0.808 
0.612 
0.835 
RBF kernel 
0.824 
0.603 
0.806 
Raw kernel 
0.812 
0.642 
0.846 
Alignment kernel 
0.870 
0.797 
0.883 

The accuracies are averages of 50 random 5-fold cross-validations. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><figDesc>Table 3.</figDesc><table>Comparison of the probe alignment kernel and interpolation in 
cross-dataset validation 

Additional 
training 

Target 
dataset 

Interpolation 
Alignment 
kernel 

Linear 
RBF 
Raw 

D 2 
D 1 
0.805 
0.817 
0.816 
0.829 
D 3 
D 1 
0.812 
0.833 
0.828 
0.868 
D 1 
D 2 
0.635 
0.707 
0.659 
0.791 
D 3 
D 2 
0.666 
0.755 
0.674 
0.766 
D 1 
D 3 
0.819 
0.785 
0.893 
0.847 
D 2 
D 3 
0.839 
0.812 
0.852 
0.848 
D 2 ,D 3 
D 1 
0.813 
0.842 
0.797 
0.870 
D 1 ,D 3 
D 2 
0.668 
0.785 
0.664 
0.797 
D 1 ,D 2 
D 3 
0.812 
0.834 
0.881 
0.883 

The accuracies are averages of 50 random 5-fold cross-validations. The second column 
shows the target dataset for 5-fold cross-validation. The first column shows the datasets 
used as additional training samples. 

</table></figure>

			<note place="foot">© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 2313 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [11:35 11/8/2010 Bioinformatics-btq428.tex]</note>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">which might lead to worse classification results. In this case, approximation is necessary to restrict the alignment to a smaller number of probe pairs to produce sub-optimal alignment scores for classification. • Intuitively, a good σ should be in the same scale of the average probe distances as estimated in Supplementary Table 2 to distinguish the difference in the distances between matched probes. Small positive gs will result in identical alignment and similar good classification results with less impact from the gaps. We verified the intuitions by additional classification experiments in Supplementary Fig. 2. For a more rigorous treatment of the problem, based on a comprehensive analysis of the datasets (Supplementary Figs 3–5 and Table 2), we suggest a strategy that estimates the σ as the average probe distance and selects a gap penalty by a cross-validation in the training set, as a robust strategy to choose good parameters for SVM classification. For the multiple alignment case, we suggest the same strategy for choosing σ and taking a gap penalty g that is decided by the allowable distance between the matched probes for generating reasonable multiple alignment. In practice, both strategies worked well. • Finally, the probe alignment kernel is not guaranteed PSD. Besides adding a positive constant on the diagonal, another alternative that we tested is to use the nearest PSD matrix of the alignment-score matrix as the kernel matrix (Higham, 1988). However, we observed that the nearest PSD matrix is not a good kernel in the experiments (Supplementary Table 1). A promising future direction is to combine segmentation approaches with alignment. The segmentation approaches detect the actual CNV intervals in each probe series and the alignment approach can be modified to align the intervals. We performed an initial segmentation analysis on the three bladder cancer datasets with the segmentation method proposed in Olshen et al. (2004). At the suggested significance level, the segmentation detected very few intervals of amplifications and deletions that can be used for alignment. Thus, one difficulty is how to choose the parameters such as window length or significance levels for getting sensible segmentation results for alignment. In addition, aligning the detected CNV intervals in segmentation requires development of a new alignment approach to compare CNV intervals. Thus, the alignment approach in this article is not directly applicable. Another possible extension is to distinguish regions with different probe density (gene-rich versus non-coding) with different normalization for further improvement of classification or common CNV detection. Certainly, this extension requires more sophisticated treatment of the alignment functions, which will introduce additional complexity to the problem.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">118</biblScope>
			<biblScope unit="page" from="35" to="46" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq428. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="2320" to="2313" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Z.Tian and R.Kuang REFERENCES</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Aligning gene expression time series with time warping algorithms</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Aach</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Church</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="495" to="508" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="3389" to="3402" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Bladder cancer stage and outcome by array-based comparative genomic hybridization</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Blaveri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Clin. Cancer Res</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="7012" to="7022" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
	<note>Pt. 1</note>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Methods and strategies for analyzing copy number variation using DNA microarrays</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">P</forename>
				<surname>Carter</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Genet</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="16" to="21" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
	<note>Suppl. . 7</note>
</biblStruct>

<biblStruct   xml:id="b7">
	<monogr>
		<title level="m" type="main">Biological Sequence Analysis: Probabilistic models of proteins and nucleic acids</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Durbin</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Structural variation in the human genome</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Feuk</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Rev. Genet</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="85" to="97" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Bayesian hidden Markov modeling of array CGH data</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Guha</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Am. Stat. Assoc</title>
		<imprint>
			<biblScope unit="volume">103</biblScope>
			<biblScope unit="page" from="485" to="497" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Tiling resolution array CGH and high density expression profiling of urothelial carcinomas delineate genomic amplicons and candidate target genes specific for advanced tumors</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Heidenblad</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Med. Genomics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>Article. 3</note>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Computing a nearest symmetric positive semidefinite matrix</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Higham</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Linear Algebra Appl</title>
		<imprint>
			<biblScope unit="volume">103</biblScope>
			<biblScope unit="page" from="103" to="118" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Combining pairwise-sequence similarity and support vector machines for detecting remote protein evolutionary and structural relationships</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Liao</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Noble</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="857" to="868" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Classification and feature selection algorithms for multi-class CGH data</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Liu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="86" to="95" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">E2F3 is the main target gene of the 6p22 amplicon with high specificity for human bladder cancer</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Oeggerli</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oncogene</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="6538" to="6543" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Circular binary segmentation for the analysis of array-based DNA copy number data</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Olshen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biostatistics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="557" to="572" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Classification of arrayCGH data using fused SVM</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Rapaport</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="375" to="382" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Global variation in copy number in the human genome</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Redon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">444</biblScope>
			<biblScope unit="page" from="444" to="454" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Copy number variations and cancer</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Shlien</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Malkin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Med</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">62</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Regional copy number-independent deregulation of transcription in cancer</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Stransky</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Genet</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="1386" to="1396" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Copy number variation and association analysis of SHANK3 as a candidate gene for autism in the IMGSAC collection</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">H</forename>
				<surname>Sykes</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Hum. Genet</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1347" to="1353" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Thompson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="4673" to="4680" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">A hypergraph-based learning algorithm for classifying gene expression and arrayCGH data with prior knowledge</title>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Tian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="2831" to="2838" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>