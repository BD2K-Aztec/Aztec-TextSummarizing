
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:45+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Systems biology Complete enumeration of elementary flux modes through scalable demand-based subnetwork definition</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2014">2014</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Kristopher</forename>
								<forename type="middle">A</forename>
								<surname>Hunt</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Biofilm Engineering</orgName>
								<orgName type="institution">Montana State University</orgName>
								<address>
									<postCode>59717-3980</postCode>
									<settlement>Bozeman</settlement>
									<region>MT</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">James</forename>
								<forename type="middle">P</forename>
								<surname>Folsom</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Biofilm Engineering</orgName>
								<orgName type="institution">Montana State University</orgName>
								<address>
									<postCode>59717-3980</postCode>
									<settlement>Bozeman</settlement>
									<region>MT</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Reed</forename>
								<forename type="middle">L</forename>
								<surname>Taffs</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Biofilm Engineering</orgName>
								<orgName type="institution">Montana State University</orgName>
								<address>
									<postCode>59717-3980</postCode>
									<settlement>Bozeman</settlement>
									<region>MT</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Ross</forename>
								<forename type="middle">P</forename>
								<surname>Carlson</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Biofilm Engineering</orgName>
								<orgName type="institution">Montana State University</orgName>
								<address>
									<postCode>59717-3980</postCode>
									<settlement>Bozeman</settlement>
									<region>MT</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mario</forename>
								<surname>Albrecht</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Chemical and Biological Engineering</orgName>
								<orgName type="institution">Montana State University</orgName>
								<address>
									<postCode>59717-3920</postCode>
									<settlement>Bozeman</settlement>
									<region>MT</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Systems biology Complete enumeration of elementary flux modes through scalable demand-based subnetwork definition</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">30</biblScope>
							<biblScope unit="issue">11</biblScope>
							<biblScope unit="page" from="1569" to="1578"/>
							<date type="published" when="2014">2014</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btu021</idno>
					<note type="submission">Received on July 7, 2013; revised on November 26, 2013; accepted on January 12, 2014</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Supplementary Information: Supplemental materials are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Elementary flux mode analysis (EFMA) decomposes complex metabolic network models into tractable biochemical pathways, which have been used for rational design and analysis of metabolic and regulatory networks. However, application of EFMA has often been limited to targeted or simplified metabolic network representations due to computational demands of the method. Results: Division of biological networks into subnetworks enables the complete enumeration of elementary flux modes (EFMs) for metabolic models of a broad range of complexities, including genome-scale. Here, subnetworks are defined using serial dichotomous suppression and enforcement of flux through model reactions. Rules for selecting appropriate reactions to generate subnetworks are proposed and tested; three test cases, including both prokaryotic and eukaryotic network models, verify the efficacy of these rules and demonstrate completeness and reproducibility of EFM enumeration. Division of models into subnetworks is demand-based and automated; computationally intractable subnetworks are further divided until the entire solution space is enumerated. To demonstrate the strategy&apos;s scalability, the splitting algorithm was implemented using an EFMA software package (EFMTool) and Windows PowerShell on a 50 node Microsoft high performance computing cluster. Enumeration of the EFMs in a genome-scale metabolic model of a diatom, Phaeodactylum tricornutum, identified $2 billion EFMs. The output represents an order of magnitude increase in EFMs computed compared with other published algorithms and demonstrates a scalable framework for EFMA of most systems. Availability and implementation:</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Extracting biologically meaningful information from the continuously expanding 'omics' databases is often limited by bioinformatics tools. Stoichiometric modeling is one approach making advances in the quantification of metabolic phenotypes reflected by fluxomic data and inferred from metabolomic, proteomic, transcriptomic and genomic data (<ref type="bibr" target="#b25">Reed and Palsson, 2003</ref>). Stoichiometric modeling assumes that during appropriate time scales, cellular biochemistry can be approximated as a steady state process with respect to intracellular enzyme and metabolite concentrations. This assumption simplifies the differential equations describing cellular mass balances, and when coupled with reaction directionality and flux magnitude constraints, permits the calculation of physiologically reasonable flux distributions. There are two major stoichiometric modeling approaches with numerous subvariations (<ref type="bibr" target="#b17">Klamt and Stelling, 2003;</ref><ref type="bibr" target="#b23">Orth et al., 2010;</ref><ref type="bibr" target="#b25">Reed and Palsson, 2003;</ref><ref type="bibr" target="#b36">Trinh et al., 2009</ref>). One stoichiometric modeling approach, elementary flux mode analysis (EFMA), enumerates all genetically distinct indecomposable flux distributions in a metabolic network (<ref type="bibr" target="#b31">Schuster and Hilgetag, 1994</ref>). These elementary flux modes (EFMs) are the minimal set of stoichiometrically balanced flux distributions representable as unique binary vectors based on participation of every model reaction. This set must also represent every steady state flux distribution in a given network through non-negative combinations without cancellation (<ref type="bibr" target="#b17">Klamt and Stelling, 2003</ref>; Llaneras and Pico´,<ref type="bibr" target="#b20">Pico´, 2010;</ref><ref type="bibr" target="#b27">Schilling et al., 2000</ref>). Cancellation refers to removal of reaction participation through combination of fluxes with equal but opposite magnitudes (i.e. genetic distinction). Another stoichiometric modeling approach, flux balance analysis (FBA), uses linear programing to identify optimal flux distributions through a metabolic network. Various objective functions are possible, including the maximization of biomass yield from a substrate (e.g.<ref type="bibr" target="#b40">Varma et al., 1993</ref>). These two stoichiometric modeling methods have been used for decades to direct metabolic engineering efforts and predict physiological and ecological behaviors (<ref type="bibr" target="#b1">Carlson, 2009;</ref><ref type="bibr" target="#b2">Carlson et al., 2002;</ref><ref type="bibr" target="#b6">Feist et al., 2006;</ref><ref type="bibr" target="#b19">Liao et al., 1996;</ref><ref type="bibr" target="#b25">Reed and Palsson, 2003;</ref><ref type="bibr" target="#b33">Taffs et al., 2009;</ref><ref type="bibr" target="#b36">Trinh et al., 2009;</ref><ref type="bibr" target="#b41">Varma and Palsson, 1994</ref>). Both stoichiometric modeling approaches have strengths and limitations. A major strength of EFMA is enumeration of the entire solution space in an unbiased manner. FBA generates only a limited number of distinct solutions using a directed objective function (<ref type="bibr" target="#b23">Orth et al., 2010;</ref><ref type="bibr" target="#b25">Reed and Palsson, 2003;</ref><ref type="bibr" target="#b36">Trinh et al., 2009</ref>). However, the directed FBA approach reduces computational costs relative to EFMA, permitting examination of complex metabolic reconstructions, commonly referred to as genome-scale models. Complex (e.g. genome scale and microbial community) metabolic networks have often been intractable using EFMA (<ref type="bibr" target="#b16">Klamt and Stelling, 2002;</ref><ref type="bibr" target="#b34">Terzer et al., 2009</ref>), despite *To whom correspondence should be addressed. algorithmic advances (<ref type="bibr" target="#b15">Klamt et al., 2005;</ref><ref type="bibr" target="#b31">Schuster and Hilgetag, 1994;</ref><ref type="bibr" target="#b28">Schuster et al., 2000;</ref><ref type="bibr" target="#b35">Terzer and Stelling, 2008;</ref><ref type="bibr" target="#b38">Urbanczik and Wagner, 2005a</ref>). Approaches that circumvent the problem of enumerating all EFMs have been explored. One such approach, convex basis analysis [i.e. extreme pathway analysis (<ref type="bibr" target="#b27">Schilling et al., 2000)]</ref>identifies a subset of EFMs that still reproduce any feasible steady state flux distribution but lack the biological interpretability of the complete EFM set (<ref type="bibr" target="#b17">Klamt and Stelling, 2003</ref>; Llaneras and Pico´,Pico´, 2010). Efforts have also been made to enumerate subsets or patterns of elementary flux vectors that allow genome-scale investigations. These efforts include generating the conversion cone (a simpler projection of the solution space considering external fluxes only) (<ref type="bibr" target="#b37">Urbanczik, 2007;</ref><ref type="bibr" target="#b39">Urbanczik and Wagner, 2005b</ref>), enumerating only EFMs containing the largest number of zero fluxes (<ref type="bibr" target="#b3">de Figueiredo et al., 2009</ref>), enumerating a set of EFMs that can explain a given flux distribution (<ref type="bibr" target="#b8">Ip et al., 2011</ref>), applying regulation to minimize computation (<ref type="bibr" target="#b12">Jungreuthmayer et al., 2013</ref>) and identifying elementary flux patterns, which are EFMs for subsystems that consider the constraints imposed by the parent network (<ref type="bibr" target="#b13">Kaleta et al., 2009;</ref><ref type="bibr" target="#b30">Schuster et al., 2010</ref>). Finally, computationally intractable networks have been divided into manageable pieces based on biochemical knowledge (<ref type="bibr" target="#b27">Schilling and Palsson, 2000;</ref><ref type="bibr" target="#b42">Verwoerd, 2011</ref>), metabolite connectivity (i.e. the number of reactions involving a particular metabolite) (<ref type="bibr" target="#b29">Schuster et al., 2002;</ref><ref type="bibr" target="#b42">Verwoerd, 2011</ref>), path length between reactions (<ref type="bibr" target="#b21">Ma et al., 2004</ref>), examination of the nullspace of the stoichiometric matrix (<ref type="bibr" target="#b24">Poolman et al., 2007</ref>) and random sampling of the solution space to calculate eigenvectors that can be rotated to produce distinct reaction sets (<ref type="bibr" target="#b0">Barrett et al., 2009</ref>). For many applications, the ideal approach is an unbiased investigation of the entire solution space, although this scenario was previously out of computational reach for complex networks (<ref type="bibr" target="#b16">Klamt and Stelling, 2002</ref>; Llaneras and Pico´,Pico´, 2010). It has been proposed that otherwise infeasible EFM enumerations can be performed through the dissection of metabolic networks into simpler subnetworks via suppression or enforcement of reaction fluxes, a technique referred to as splitting (<ref type="bibr" target="#b15">Klamt et al., 2005</ref>). Suppression of a reaction defines a subnetwork that does not contain the reaction, whereas enforcement of a reaction defines a subnetwork that excludes EFMs that do not use the reaction, both of which reduce the computational burden (e.g.<ref type="figure">Fig. 1</ref>). Complete coverage of a metabolic network's solution space without overlap is ensured at each split by paired suppression and enforcement of a single reaction. An additional example of suppressing and enforcing can be found in Jevremovicét al. (2011b), which used the EFMA algorithm, Elmo-Comp. Unfortunately, Elmo-Comp lacked enumeration completeness, as shown through a disagreement between the presented and published EFM counts (<ref type="bibr">Jevremovicánd Boley, 2012;</ref><ref type="bibr">Jevremovicét al., 2011a</ref>). The primary objective of the current study is to successfully implement a scalable demand-based splitting technique for complete enumeration of all network EFMs. The objective is achieved through (i) the development of rational rules for effectively splitting networks, (ii) the successful use of a network splitting algorithm that continuously divides networks until they are computationally tractable and (iii) the use of a workstationbased computational cluster to distribute EFM enumeration of genome-scale models. The presented work demonstrates efficacy across network models containing EFM counts spanning four orders of magnitude. This algorithm is the first successful implementation of the splitting technique and establishes a scalable framework for EFMA of most metabolic models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Experimental and computational systems</head><p>Development and analysis of the presented splitting techniques was performed using three previously published metabolic models described in<ref type="figure" target="#tab_1">Table 1</ref>with additional detail available in Supplementary Table S1. The test models, chosen to demonstrate efficacy over a range of model complexity, included a prokaryotic (ECOLI), a simplified eukaryotic (YEAST1) and a multicompartment eukaryotic model (YEAST2) (Supplementary Material). These test models were calculated as both unsplit and split networks to validate the compiled subnetwork results. Unsplit networks were computed using the software package EFMTool on a Windows 7 machine with a maximum configuration of 120 GB of RAM and 2 Intel Xeon processors (X5690). Implementation of EFMTool (<ref type="bibr" target="#b35">Terzer and Stelling, 2008</ref>) version 4.7.1 (www.csb.ethz.ch/tools/efmtool) used documented options described in Supplementary Table S2. The basic splitting and iterative splitting algorithms were written in Windows PowerShell v2.0 for implementation with Microsoft high performance computing (HPC), clustering software which supports workstation-based clusters. The computational cluster included 50 workstation nodes, which ranged from 4–120 GB of RAM per node. Result compilations and analyses were performed using MATLAB on machines with 32 GB of RAM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">EFM concatenation and comparison</head><p>Subnetwork results produced by the splitting algorithm were screened for consistency with subnetwork definitions and concatenated into a single output set (as in<ref type="figure">Fig. 2</ref>). EFMTool identifies futile cycles based on the number of non-zero fluxes in a flux vector, removes them from processing and adds them back at the end of processing regardless of subnetwork definition. This necessitated screening all EFMs to verify that they did not violate the definition of their subnetwork. The screening process required minimal computational effort. For example, the CONCATENATOR script checked and compiled 2 billion EFMs in $1 day; most of the elapsed time involved reading, decompressing, compressing and writing the results, which occupy $1 TB of hard drive space. Network results were compared across different algorithms and splitting configurations by converting all EFMs to a binary representation based on reaction participation and identifying EFMs not shared by both result sets being compared. This comparison was done using standard MATLAB functions. Binary representation removed rounding effects associated with normalization and allowed for comparison of all test models presented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Optimizing EFMTool performance</head><p>EFMTool's use of RAM was inspected and optimized using the management application, Jconsole, and Java options. Briefly, Java 1.6.Â uses a generational memory construct that assigns new objects to one memory space while moving older objects to a separate predefined memory space. This is usually an efficient use of RAM, as most Java applications do not produce many old objects, and memory management is easier when newer objects are kept together. However, EFMTool stores each EFM as an object that stays in RAM for the duration of the calculation, eventually becoming an old object. EFMTool filled the memory allocated for older objects that resulted in 'out of RAM' errors, despite having only used 25–33% of the RAM assigned to Java. Thus, the default Java options limit EFMTool execution to smaller networks. This practice was<ref type="figure">Fig. 1</ref>. Overview of EFM enumeration using EFMTool and the splitting approach. Step 1) The model is compressed removing dead-end reactions (R 6 ), separating reversible reactions into forward and reverse reactions (R 5 becomes R 5 and R 5R ), and combining reaction sets that always occur together into a single reaction (R 7 and R 8 combined into R 7,8 , removing metabolite G). Step 2–3) The compressed network, represented by a stoichiometric matrix with reactions in columns and metabolites in rows, is solved for the nullspace basis vectors (i.e. the nullspace kernel). External metabolites are not constrained by conservation relationships and are therefore not considered in the stoichiometric matrix. Step 4) The kernel rows are reordered to minimize memory usage and computational runtime. Steps 5–6) The EFMTool algorithm then applies directionality constraints to each reaction sequentially; vectors containing negative fluxes in the reaction being constrained are replaced by all non-negative linear combinations resulting in a zero flux through the reaction. The negative flux in reaction R 1,3 at N 2 is replaced by N 3,2 (N 3 þ N 2 ) and N 4,2 (N 4 þ N 2 ), whereas the negative flux in reaction R 1,2 at N 3 is replaced by N 1,3 (N 1 þ N 3 ), N 4,3 (N 4 þ N 3 ) and N 4,2,3 (N 4,2 þ N 3 ). EFMTool bit-masks each row of values after the directionality constraint is applied, improving memory usage (not shown). Step 7) N 3,2 is removed during recompilation of reversible reactions, and N 4,2,3 is removed because at least q-m-1 zeros per flux vector are required by the degrees of freedom constraint, where q and m are the number of reactions and metabolites, respectively (<ref type="bibr" target="#b7">Gagneur and Klamt, 2004</ref>). Step 8) The remaining vectors are EFMs and decompressed. This procedure can be modified to enforce (Steps 9–12) or suppress (<ref type="bibr">Steps 13</ref>–17) reactions as needed. Enforced reactions are moved to the end of the algorithm and directionality constraints are applied as described earlier; however, when the enforced reaction is reached, all positive flux vectors have already been enumerated (Step 9), therefore flux vectors that violate the directionality constraint or do not use the reaction are discarded (Step 10). Suppressed reactions result in a new stoichiometric matrix that is then processed as described earlier. The highlighted examples of a combined reaction in the backslash patterned box , reversible reaction in the forward slash patterned box and dead-end reaction in the gray box are to be avoided for use in splitting corrected and performance optimized using command line switches described in Supplementary Table S2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">k-1 EFM correction</head><p>During early attempts at EFM enumeration using the EFMTool functionality to enforce reactions, EFMs were absent from the resulting solution set. The missing EFMs contained k-1 enforced reactions, where k is the number of non-zero fluxes in the EFM. This issue was corrected through a modification in EFMTool code to consider enforced reactions during the subroutine that removes futile cycles (Supplementary Material).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Selecting reactions for defining subnetworks</head><p>Appropriate reaction selection for subnetwork definition is essential for effective splitting. Selected reactions must permit complete enumeration of EFMs while distributing calculations over subnetworks. Initially, random reactions for splitting were screened using a brute force method to confirm functionality for splitting; analysis of the results identified four major categories of reactions to avoid. First, reactions for splitting should not produce or consume metabolites that are not consumed or produced by other reactions (i.e. dead-end reactions, R 6 in<ref type="figure">Fig. 1</ref>). Deadend reactions result in empty subnetworks when enforced and do not reduce computations when suppressed. Second, reactions for splitting should not include reversible reactions. EFMTool divides reversible reactions into two separate irreversible reactions, a forward and reverse reaction, during EFM enumeration and then recombines the fluxes before reporting the final EFMs (R 5 in<ref type="figure">Fig. 1</ref>). If used for splitting, the forward and reverse reactions are enforced or suppressed concurrently; EFMs with flux in only one of these reactions would be lost. This property makes reversible reactions unacceptable for splitting. Network compression improves memory efficiency by combining reactions, which must operate together into a single compressed reaction (e.g. R 1 and R 2 are combined into R 1,2 in<ref type="figure">Fig. 1</ref>;<ref type="bibr" target="#b7">Gagneur and Klamt, 2004</ref>); however, compression can cause problems during splitting, resulting in a third category of reactions to avoid for splitting. Two adverse scenarios can result from compression. In a branching series, a single reaction can be combined separately with multiple reactions to form multiple compressed reactions. Using that single reaction as a reaction for splitting prevents certain subnetwork permutations because multiple independent compressed reactions are enforced or suppressed simultaneously (e.g. R 1 in Figs. 1 and 3 and Supplementary<ref type="figure">Fig. S1</ref>). In a linear series, a set of reactions that must occur together combine to form a single compressed reaction (e.g. R 7 and R 8 in<ref type="figure">Fig. 1</ref>and Supplementary<ref type="figure">Fig. S1</ref>). Using multiple reactions that define a compressed linear series is ineffective for the same reason as enforcing dead-end reactions (R 7 and R 8 in<ref type="figure">Fig. 1</ref>and Supplementary<ref type="figure">Fig. S1</ref>). However, one reaction from a linear series or the branch reactions in a branched series may be effective for splitting (e.g. R 2 , R 3 and<ref type="figure">Fig. 2</ref>. Work flow of reaction identification and iterative splitting approaches. Initially, the list of identified preliminary reactions for splitting is empty but increases by one reaction per loop through preliminary reaction identification. The final quantity of reactions for splitting was adjusted at the gray box by choosing route A if a predefined R was achieved or route B if more reactions for splitting were required. Depicted processes describe the pseudo-code or MATLAB functions listed in parentheses. See the Symbols Section for additional variable definitions<ref type="figure">Fig. S1</ref>). Although more reactions may be available for subnetwork definition when compression is not used, compression greatly reduces computational burden during the enumeration process, vastly outweighing the benefit of additional potential reactions for splitting (data not shown;<ref type="bibr" target="#b15">Klamt et al., 2005</ref>). A fourth type of reaction to avoid has poorly scaled coefficients that can lead to numerical instability. This often occurs with biomass synthesis associated reactions. For instance, accounting for the synthesis of a low abundance vitamin (e.g. B12) and a common amino acid (e.g. glycine) can lead to a410 3-fold difference between the reaction's largest and smallest coefficients. Such a model could not be analyzed with EFMTool due to numerical instabilities in the stoichiometric matrix. This issue can be exacerbated during the network splitting process when potential EFMs with small, but nonzero, fluxes in enforced reactions are removed based on the software's computational definition of zero. The removed EFMs are not present when the reaction is suppressed by definition and are therefore missed in the results. One method explored to circumvent this problem used the higher accuracy arithmetic of fixed-point notation instead of the default floating-point notation (double to fractional arithmetic in EFMTool nomenclature). The use of fixed-point notation permitted complete enumeration of EFMs for some test networks but introduced a substantial computational cost with a minimal increase in the number of usable reactions for splitting (data not shown). Increasing the precision of the zero definition for floating-point notation was also examined but not found to consistently improve EFM enumeration. Although there are multiple methods to circumvent this problem, this study avoided using reactions containing poorly scaled coefficients for splitting, defined as coefficients with a difference 410 within a single reaction. This approach was sufficient for the three test models. A list of effective reactions for splitting was identified through application of the rules summarized in<ref type="figure">Table 2</ref>and confirmed through additional checks (i.e. REACTIONTESTER and SCANNER, respectively, in<ref type="figure">Fig. 2</ref>). The rules were applied iteratively as follows:</p><p>(i) reactions were identified that did not violate the rules in<ref type="figure">Table 2</ref>, given the current network compression, (ii) one such reaction was selected randomly and added to a list with R 0 preliminary reactions for splitting and (iii) the subnetwork was defined by suppressing all R 0 preliminary reactions for splitting, providing the basis for the next iteration of reaction selection. This was repeated until all remaining reactions violated the rules. Repeatedly adjusting the compression basis was necessary because as reactions are suppressed, they change the model compression through production of dead-ends and new sets of combined reactions. Then, to ensure effective splitting, all 2 R 0 subnetwork permutations defined using enforce/suppress combinations of the preliminary reactions for splitting were compressed and examined for rule violations. Any reactions that violated the rules under any enforce/suppress permutation were removed, resulting in a final list of R usable reactions for splitting. Reaction validation for all subnetworks also allowed for screening of reactions that create incompatibility issues with EFMTool. These processes for preliminary reaction identification and subnetwork permutation checking, depicted in<ref type="figure">Figure 2</ref>, are described in the pseudo-code found in the Supplementary Material (REACTIONTESTER function and SCANNER subroutine, respectively).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Efficacy of splitting</head><p>The number and choice of reactions used to define subnetworks are important control points for splitting. To quantify splitting effectiveness based on these considerations, subnetworks were defined using a set of R reactions, EFMs for all subnetworks were enumerated and the largest number of EFMs in any subnetwork was used as a basis to assess splitting efficacy. A single set of reactions for splitting was identified for each of the ECOLI and YEAST2 models, whereas four distinct sets were identified for the YEAST1 model using the procedure detailed in the preceding section (pseudo-code presented in Supplementary Material). The four distinct sets of reactions for splitting exist due to the sequential random identification of reactions for splitting (e.g. most reactions could work in isolation, but only some sets of reactions work together). R was varied within each set of reactions for splitting by removing reactions without replacement to form smaller sets. The linear trend on a semi-log plot (<ref type="figure">Fig. 4</ref>) suggests an exponential decay of maximum EFMs per subnetwork with increasing R. There were no deviations in the number or identity of the EFMs enumerated between the 77 splittingbased enumerations and the respective unsplit enumerations. This analysis also demonstrates that the reaction selection rules are functional over a broad range of R.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Iterative splitting</head><p>Identifying the optimal number of reactions for splitting a model is a major theoretical and practical challenge. There are two competing effects with increasing magnitude of R that are (i) the rate of new subnetwork definition and (ii) the rate of reduction in subnetwork complexity. Splitting shifts the computational burden from memory limitation to CPU limitation (<ref type="figure">Fig. 5A</ref>and B). The number of subnetworks grows with 2 R when using basic splitting, resulting in a prohibitive number of files for larger values of R.<ref type="figure">Figure 5A</ref>demonstrates a case of basic splitting in gray where R is 4. A demand-based network splitting algorithm can be implemented, which minimizes the total number of analyzed subnetworks without sacrificing complete coverage of the solution. This strategy is referred to as iterative splitting (<ref type="figure">Fig. 5B</ref>). The procedure initially uses a set of r reactions to define subnetworks, where r is less than the total number of reactions needed to complete the network (R min ). EFMs of calculable subnetworks are enumerated and subnetworks that are assessed to be intractable (e.g. EFM enumeration fails due to memory limitation or terminates via the algorithm discussed in Section 3.5) form branches that are further divided using an additional set of r reactions. The process continues until each branch completes or the list of reactions for splitting is exhausted. Computational savings are realized when branches complete at intermediate iterations instead of the final iteration.<ref type="figure">Figure 5B</ref>illustrates a case where r is 1, R min is 4 and the total number of iterations, i tot , is 4. In this example, one branch completes per iteration resulting in a 2-fold decrease in total subnetworks attempted compared with basic splitting (<ref type="figure">Fig. 5A</ref>and B). The YEAST2 model in<ref type="figure" target="#tab_1">Table 1</ref>demonstrated a 76-fold decrease in number of subnetworks calculated using iterative splitting (r ¼ 2, R min ¼ 14 and i tot ¼ 7) as compared with basic splitting with the same 14 reactions (reactions for splitting: R4, R5, R9, R12, R14, R21, R27, R33, R37, R40, R46, R53, R58 and R61). R min is a function of computational resources and was increased by decreasing available memory for computation (e.g. 6718 MB heap size for the YEAST2 example).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Optimizing</head><p>the number of reactions for splitting per iteration (r)</p><p>Iterative splitting has substantial computational benefits when branches complete before the final iteration; however, the computational costs of intractable subnetworks may overwhelm this benefit. This tradeoff provides a basis for optimization, the number of reactions for splitting (r) applied per iteration, i. Increasing r defines a larger number of more constrained subnetworks per iteration, which have an increased likelihood of completion compared with subnetworks defined using smaller r. This approach decreases failed enumeration attempts but increases the number of attempted subnetworks per iteration. Two scenarios bound the total possible number of subnetworks analyzed<ref type="figure">5</ref>. Comparison of two network splitting approaches. The basic splitting approach (A) uses combinations of enforced/suppressed reactions to create calculable subnetworks where the number of subnetworks increases exponentially with the number of reactions for splitting (<ref type="bibr" target="#b15">Klamt et al., 2005</ref>). The iterative splitting approach (B) only generates subnetworks when the previous ones are intractable (white) until all EFMs for all subnetworks in the branch can be enumerated (gray) (<ref type="bibr" target="#b15">Klamt et al., 2005</ref>). Both approaches shift the burden of computation from a RAMlimited problem to a CPU-limited problem as the subnetworks become smaller but greater in number. The example uses R ¼ 4 reactions for splitting with each iteration considering one additional reaction (i.e. r ¼ 1) for a total of i ¼ 4 iterations. Superscripts refer to the enforced (E) or suppressed (S) reactions in the labeled subnetworks<ref type="figure">Fig. 4</ref>. Subnetwork EFM count reduction with increasing number of reactions for splitting (R). The test models YEAST1 (squares), YEAST2 (diamonds) and ECOLI (circles) were analyzed in 77 separate configurations; every configuration resulted in complete enumeration of the solution space during iterative splitting. The upper limit occurs when all subnetworks are intractable until the last iteration at which point they all complete (<ref type="figure">Fig. 5A</ref>, r ¼ 1). This scenario represents basic splitting when r equals R. The lower limit occurs when each step of iterative splitting produces only one intractable subnetwork until R reactions are used, at which point all subnetworks complete and the entire solution space for the whole network is covered (<ref type="figure">Fig. 5B</ref>, r ¼ 1). Optimization based on limiting the number of intractable subnetworks enables prediction of a generalized ideal r without a priori network-specific information. The equation for the total number of subnetworks (N) is:</p><formula>N ¼ 2 r f þ 1 ð Þ ð1Þ</formula><p>where f is the number of intractable subnetworks. Equation (1) does not include the original unsplit network. As r!R min , f!0, therefore, basic splitting with at least the number of reactions required (R min ) eliminates time spent on intractable subnetworks. However, this neglects the benefit of early branch completion, reducing the total number of attempted subnetworks and therefore the total CPU time (<ref type="figure">Fig. 5A</ref>and B). Assigning a theoretical relative CPU time for tractable and intractable subnetworks permits evaluation of effective values of r with respect to CPU time. For this analysis, a theoretical model is considered that requires one hour of CPU time to enumerate the EFMs from the unsplit network, t unsplit. An approximate relation between t unsplit and the average CPU time to enumerate the EFMs of a subnetwork of the same network was determined empirically using the test models in<ref type="figure" target="#tab_1">Table 1</ref>. For the subnetwork defined by r*i reactions, the CPU time for EFM enumeration (t r,i ) follows the relationship:</p><formula>t r, i ¼ t unsplit r Ã i ð2Þ</formula><p>(data not shown). For analysis purposes, the CPU time for subnetworks with failed EFM enumeration attempts, t fail , was bracketed between 10-fold longer and 10-fold shorter than t unsplit. A 10-fold longer run time was used as an upper limit because Java garbage collection will run until it uses 90% of the total CPU time before crashing, inflating the run time $10-fold. A 10fold shorter run time was used for the lower limit because networks with an explosion in the number of potential EFMs may quickly fill available memory with objects that cannot be cleared (data not shown). Combining Equation (2) and the bounds for t fail with the number of subnetworks defined by Equation (1), total CPU time boundaries were estimated as a function of r and normalized by t unsplit (<ref type="figure" target="#fig_1">Fig. 6</ref>). Simulations considered three theoretical models with R min ¼ 10, 20 and 30 and all combinations of i tot and r producing a respective R min. Increasing r reduces the maximum potential CPU time investment independent of R; however, the time minimum increases significantly with r after $5 reactions (<ref type="figure" target="#fig_1">Fig. 6</ref>). The minimum time increases due to the large number of subnetworks and the associated redundant calculations during reaction enforcement. Considering both the minimum relative CPU time for the lower t fail limit scenario and the exponential decrease in relative CPU time for the upper t fail limit scenario, an r in the range of 4–8 reactions appears optimal without a priori knowledge (<ref type="figure" target="#fig_1">Fig. 6</ref>). The analysis considers total relative CPU time; implementation on computational clusters would reduce real-world time because of parallel computations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Minimizing intractable subnetwork runtime</head><p>Intractable subnetworks can have a high CPU time cost; therefore, large run time savings can be obtained by minimizing CPU time spent on intractable subnetworks. An empirical detection strategy was applied to identify EFM enumeration attempts that were not likely to complete; those attempts were then terminated before failure and the subnetwork was further divided. Applying the intractable subnetwork detection strategy resulted in substantial time savings for the models in this study (data not shown). Details of the prediction algorithm and used time thresholds can be found in the Supplementary Material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Application of the iterative splitting algorithm to a genome-scale diatom model</head><p>EFMA of a genome-scale metabolic model for the diatom Phaeodactylum tricornutum Pt1 was conducted to demonstrate the iterative splitting algorithm. This model was reconstructed using the extensive knowledge base for P. tricornutum Pt1, including a finished genome (<ref type="bibr" target="#b22">Markowitz et al., 2012</ref>) and literature-based manual analyses (e.g.<ref type="bibr" target="#b5">Fabris et al., 2012;</ref><ref type="bibr" target="#b18">Kroth et al., 2008</ref>). The DIATOM model considers 680 genes that were manually compressed into 318 reactions with 335 metabolites. Reactions and metabolites were partitioned into five distinct physical compartments based on analysis of organelle signal peptides (<ref type="bibr" target="#b4">Emanuelsson et al., 2007</ref>) and biochemical studies (e.g.<ref type="bibr" target="#b32">Tachibana et al., 2011</ref>). The metabolic model with genomic information, stoichiometries, biomass requirements and a graphical representation can be found in the Supplementary Material. The workflow for successful application of the iterative splitting algorithm (i.e.<ref type="figure">Fig. 2</ref>) to the DIATOM model can be described as follows: a set of 14 reactions for splitting (R ¼ 14) was identified by calling the REACTIONTESTER function (Supplementary Material). The reactions were divided into two sets of seven reactions (r ¼ 7 and i tot ¼ 2) based on the theoretical optimal values of r (<ref type="figure" target="#fig_1">Fig. 6</ref>) and the complete use of the set of reactions for splitting. The INDEXER function submitted EFM enumeration jobs to the HPC cluster and on completion of the first iteration, scanned the results for intractable subnetworks to further divide with the next seven reactions in the second iteration. The PowerShell script used is available in the Supplementary Material. EFMA of the DIATOM model resulted in 1 934 729 551 EFMs; this count was validated by reanalyzing random model subnetworks using different sets of reactions for splitting. The output exceeds the largest reported for EFMA to date by $1 order of magnitude (<ref type="bibr" target="#b12">Jungreuthmayer et al., 2013</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head><p>The complete and reproducible EFMA of metabolic networks that were previously computationally intractable was demonstrated here through the definition of subnetworks based on serial enforcement and suppression of reaction fluxes. This is in contrast to other recent attempts to parallelize EFM enumeration by splitting, which were found to be incomplete at times (<ref type="bibr">Jevremovicánd Boley, 2012;</ref><ref type="bibr">Jevremovicét al., 2011a</ref>). The presented basic and iterative splitting algorithms are expected to be fully compatible with that group's recent efforts to implement distributed EFMA computing with shared memory (<ref type="bibr">Jevremovicét Jevremovicét al., 2011b</ref>), offering additional computing power for recalcitrant subnetworks. When using EFMTool, the reactions for splitting cannot contain a subset representing all non-zero flux reactions in an EFM; enforcing such a subset causes an error. The ability to identify the error by examining all subnetworks at the level of compression indicates the error is caused during preprocessing. Additionally, manual application of the nullspace algorithm did not yield an explanation for the error. The error was reproducibly avoided by identifying the subnetworks with the error and eliminating at least one of the reactions in the EFM from the set of reactions for splitting. This solution is algorithmically inconvenient, as one of these reactions must be removed from the set of reactions for splitting and the new combination of reactions reanalyzed (<ref type="figure">Fig. 2</ref>). However, subnetworks enforcing an EFM cannot contain more than the defined EFM, as an EFM cannot be represented within another EFM (due to the decomposability constraint). The EFM in an enforced reaction set can be identified through EFMA of the problematic reaction set, a negligible computational investment. By confirming enforcement of an EFM to be the problem, rechecking of reactions and empty subnetworks may be avoidable through early completion of the branch enforcing a complete EFM and addition of the identified EFM to the solution set. Selection criteria were established for identifying effective reactions for splitting (<ref type="figure">Table 2</ref>). Some of these criteria could be incorporated into a new EFMA algorithm. Examples include (i) changing the representation of reversible reactions and (ii) changing when the algorithm networks are compressed. Recording reversible reactions in the original network model as separate forward and reverse reactions would allow the algorithm to define enforce/suppress combinations involving currently unusable reactions thereby eliminating the need for the reversibility rule. Compressing networks before applying the enforce/suppress subroutine would prevent the network from reconfiguring with subnetwork definition, removing the need for subnetwork verification. However, this operational order may reduce effectiveness of subnetwork definition, as some suppressed reactions result in additional combinable reactions, as shown by the creation of a dead-end reaction when suppressing R 8 in<ref type="figure">Figure 1</ref>and Supplementary<ref type="figure">Figure S1</ref>(<ref type="bibr" target="#b15">Klamt et al., 2005</ref>). Although the likelihood of reaction rearrangement as a function of network complexity should be examined, the costs of accounting for network compression effects were not prohibitive to the analysis for presented models. The presented splitting approaches are subject to the availability of reactions for splitting. For instance, a hypothetical model composed exclusively of reversible reactions or a model where every reaction had poorly scaled coefficients could not be analyzed with the presented approach. Fortunately, such models are not typically biologically relevant. Although all chemical reactions are theoretically reversible, many are effectively irreversible under physiologically relevant concentrations and temperatures. Additionally, the scaling of reaction coefficients for a metabolic model is dictated by product/substrate stoichiometries of the enzymes, which are often in a range that do not cause numerical instability. A more practical limit would be a model that does not have enough reactions satisfying the rules in<ref type="figure">Table 2</ref>to sufficiently divide the network into tractable subnetworks.Although such a model is theoretically possible, it is hypothesized that with computational resource improvements, most models will be tractable. The basic splitting and iterative splitting algorithms allow for distributed computation of models through division into subnetworks. Microsoft HPC software permitted enumeration of the nearly 2 billion EFMs in the DIATOM model in51 month using academic computer laboratories during idle hours. Although the total CPU time is unavoidable, the real time required to run large models can be reduced substantially based on the number and computational power of nodes. For instance, the most complex subnetwork in the DIATOM model took $2 days of run time; therefore, given appropriate resources, the EFMA could have been completed in 2 days if the other subnetworks were concurrently run on additional nodes. This highlights the lower limits of computational time for EFMA of genome-scale models, given current computer capabilities. Using the splitting algorithm and sufficient computational resources, the presented study substantially expands the applicability of EFMA.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.</head><figDesc>Fig. 5. Comparison of two network splitting approaches. The basic splitting approach (A) uses combinations of enforced/suppressed reactions to create calculable subnetworks where the number of subnetworks increases exponentially with the number of reactions for splitting (Klamt et al., 2005). The iterative splitting approach (B) only generates subnetworks when the previous ones are intractable (white) until all EFMs for all subnetworks in the branch can be enumerated (gray) (Klamt et al., 2005). Both approaches shift the burden of computation from a RAMlimited problem to a CPU-limited problem as the subnetworks become smaller but greater in number. The example uses R ¼ 4 reactions for splitting with each iteration considering one additional reaction (i.e. r ¼ 1) for a total of i ¼ 4 iterations. Superscripts refer to the enforced (E) or suppressed (S) reactions in the labeled subnetworks</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.6.</head><figDesc>Fig. 6. Optimization of reactions for splitting applied per iteration (r). Relative CPU time for theoretical networks requiring 10 (A), 20 (B) and 30 (C) total reactions for splitting to complete, assuming that one subnetwork is intractable per iteration (open circles) or all subnetworks are intractable until the last iteration (closed squares). Time for intractable subnetworks was varied between 10-fold increase (solid lines) and 10-fold decrease (dashed lines) relative to an unsplit model. Relative CPU time is the summation of time to complete all subnetworks normalized by time to complete the whole unsplit network. Vertical dotted lines designate the optimal working range based on the minimum (open circles with solid lines) and the exponential decrease (closed squares), given no prior knowledge of network splitting behavior</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>Iteration in the iterative splitting process i tot Number of iterations in the iterative splitting process k Number of reactions with non-zero coefficients within an EFM m Number of metabolites in the compressed model N Number of subnetworks attempted q Number of reactions in the compressed model R Number of reactions used for subnetwork definition during the splitting process R min Minimum number of reactions needed for complete subnetwork enumeration during the splitting process R 0 Number of preliminary reactions for splitting (reactions that have not been verified at the subnetwork level) R # Reaction #, where # identifies a specific reaction from Figures 1 or 3 r Number of reactions used for subnetwork definition at each iteration t fail Average CPU time spent on intractable subnetworks t r,i Average completion time for subnetwork defined by r*i reactions t unsplit Time for unsplit network to complete</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><figDesc>Table 1. Metabolic models used in the presented study</figDesc><table>Organism 
Model 
Reactions/ 
Metabolites 

EFMs 

Saccharomyces cerevisiae YEAST1 a 
78/62 
1 515 315 d 
S. cerevisiae 
YEAST2 a 
83/63 
68 868 602 d 
Escherichia coli 
ECOLI b 
95/94 
226 269 020 d 
P. tricornutum 
DIATOM c 318/335 
1 934 729 551 e 

a 

Jevremovicánd Boley, 2012. 

b 

Jungreuthmayer et al., 2013. 

c 

This work. 

d 

EFMs validated by comparing split and unsplit network results. 

e 

Fourteen reactions used for iterative splitting. Some subnetworks were recalculated 
varying the number of reactions for splitting to validate results. </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 2. Criteria for removal of reactions from enforce/suppress sets</figDesc><table>Rule Reaction type 
Issue 

1 
Dead-end 
Subnetworks cannot evenly distribute 
EFMs 
2 
Reversible 
Misses EFMs containing flux in either but 
not both directions 
3 
Combined a 
May not allow for all reaction 
combinations 
4 
P o o r l ys c a l e d 
coefficients 

Poorly conditioned matrix and zero 
definition may miss EFMs (threshold 
difference of 10) 

Note: All reaction combinations must be tested to confirm that an EFM is not 
represented in the enforce/suppress set and that the subnetwork definition and 
compression does not rearrange reactions causing violation of the stated rules. 

a 

See Section 3.1 for detailed description of combined reactions to avoid. 

</table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">K.A.Hunt et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">EFMA through demand-based subnetwork definition at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head><p>The authors would like to thank Jeffrey J. Heys, Marco Terzer, and Austin Jacobs for helpful discussions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Decomposing complex reaction networks using random sampling, principal component analysis and basis rotation</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">L</forename>
				<surname>Barrett</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">30</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Decomposition of complex microbial behaviors into resourcebased stress responses</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">P</forename>
				<surname>Carlson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="90" to="97" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Metabolic pathway analysis of a recombinant yeast for rational strain development</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">P</forename>
				<surname>Carlson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biotechnol. Bioeng</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="121" to="134" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Computing the shortest elementary flux modes in genome-scale metabolic networks</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<forename type="middle">F</forename>
				<surname>De Figueiredo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="3158" to="3165" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Locating proteins in the cell using TargetP, SignalP and related tools</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Emanuelsson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Protoc</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="953" to="971" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">The metabolic blueprint of Phaeodactylum tricornutum reveals a eukaryotic Entner-Doudoroff glycolytic pathway</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Fabris</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Plant J</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="1004" to="1014" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Modeling methanogenesis with a genome-scale metabolic reconstruction of Methanosarcina barkeri</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">M</forename>
				<surname>Feist</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">4</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Computation of elementary modes: a unifying framework and the new binary approach</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Gagneur</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Klamt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">175</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Analysis of complex metabolic behavior through pathway decomposition</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Ip</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">91</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Divide-and-conquer approach to the parallel computation of elementary flux modes in metabolic networks</title>
		<author>
			<persName>
				<forename type="first">Jevremovic´</forename>
				<surname>Jevremovic´</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2011 IEEE International Symposium on Parallel and Distributed Processing Workshops and Phd Forum</title>
		<meeting><address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="502" to="511" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Parallelization of nullspace algorithm for the computation of metabolic pathways</title>
		<author>
			<persName>
				<forename type="first">Jevremovic´</forename>
				<surname>Jevremovic´</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Parallel Comput</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="261" to="278" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Parallel computation of elementary flux modes in metabolic networks using global arrays</title>
		<author>
			<persName>
				<forename type="first">Jevremovic´</forename>
				<surname>Jevremovic´</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Boley</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 6th Conference on Partitioned Global Address Space Programming Models</title>
		<meeting><address><addrLine>Santa Barbara, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">regEfmtool: Speeding up elementary flux mode calculation using transcriptional regulatory rules in the form of three-state logic</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Jungreuthmayer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biosystems</title>
		<imprint>
			<biblScope unit="volume">113</biblScope>
			<biblScope unit="page" from="37" to="39" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<monogr>
		<title level="m" type="main">Can the whole be less than the sum of its parts? Pathway analysis in genome-scale metabolic networks using elementary flux patterns</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Kaleta</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="1872" to="1883" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Algorithmic approaches for computing elementary modes in large biochemical reaction networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Klamt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEE Proc. Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">152</biblScope>
			<biblScope unit="page" from="249" to="255" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Combinatorial complexity of pathway analysis in metabolic networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Klamt</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Stelling</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biol. Rep</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="233" to="236" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Two approaches for metabolic pathway analysis?</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Klamt</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Stelling</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trends Biotechnol</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="64" to="69" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">A model for carbohydrate metabolism in the diatom Phaeodactylum tricornutum deduced from comparative whole genome analysis</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">G</forename>
				<surname>Kroth</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">1426</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Pathway analysis, engineering, and physiological considerations for redirecting central metabolism</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">C</forename>
				<surname>Liao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biotechnol. Bioeng</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="129" to="140" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Which metabolic pathways generate and characterize the flux space? A comparison among elementary modes, extreme pathways and minimal generators</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Llaneras</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Pico´</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Pico´</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Biomed. Biotechnol</title>
		<imprint>
			<biblScope unit="page">753904</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Decomposition of metabolic network into functional modules based on the global connectivity structure of reaction graph</title>
		<author>
			<persName>
				<forename type="first">H.-W</forename>
				<surname>Ma</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="1870" to="1876" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">IMG: the integrated microbial genomes database and comparative analysis system</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">M</forename>
				<surname>Markowitz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="115" to="122" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">What is flux balance analysis?</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">D</forename>
				<surname>Orth</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="245" to="248" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Modular decomposition of metabolic systems via nullspace analysis</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">G</forename>
				<surname>Poolman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">249</biblScope>
			<biblScope unit="page" from="691" to="705" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Thirteen years of building constraint-based in silico models of Escherichia coli</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">L</forename>
				<surname>Reed</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">O</forename>
				<surname>Palsson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Bacteriol</title>
		<imprint>
			<biblScope unit="volume">185</biblScope>
			<biblScope unit="page" from="2692" to="2699" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Theory for the systemic definition of metabolic pathways and their use in interpreting metabolic function from a pathway-oriented perspective</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">H</forename>
				<surname>Schilling</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">203</biblScope>
			<biblScope unit="page" from="229" to="248" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Assessment of the metabolic capabilities of Haemophilus influenzae Rd through a genome-scale pathway analysis</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">H</forename>
				<surname>Schilling</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">Ø</forename>
				<surname>Palsson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">203</biblScope>
			<biblScope unit="page" from="249" to="283" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">A general definition of metabolic pathways useful for systematic organization and analysis of complex metabolic networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Schuster</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="326" to="332" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Exploring the pathway structure of metabolism: decomposition into subnetworks and application to Mycoplasma pneumoniae</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Schuster</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="351" to="361" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">Predicting novel pathways in genome-scale metabolic networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Schuster</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biochem. Soc. Trans</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="1202" to="1205" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">On elementary flux modes in biochemical reaction systems at steady state</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Schuster</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Hilgetag</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Biol. Syst</title>
		<imprint>
			<biblScope unit="volume">02</biblScope>
			<biblScope unit="page" from="165" to="182" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">Localization of putative carbonic anhydrases in two marine diatoms, Phaeodactylum tricornutum and Thalassiosira pseudonana</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Tachibana</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Photosynth. Res</title>
		<imprint>
			<biblScope unit="volume">109</biblScope>
			<biblScope unit="page" from="205" to="221" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">In silico approaches to study mass and energy flows in microbial consortia: a syntrophic case study</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Taffs</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">114</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<analytic>
		<title level="a" type="main">Genome-scale metabolic networks</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Terzer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wiley Interdiscip. Rev. Syst. Biol. Med</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="285" to="297" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">Large-scale computation of elementary flux modes with bit pattern trees</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Terzer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Stelling</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="2229" to="2235" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b36">
	<analytic>
		<title level="a" type="main">Elementary mode analysis: a useful metabolic pathway analysis tool for characterizing cellular metabolism</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">T</forename>
				<surname>Trinh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Microbiol. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="page" from="813" to="826" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b37">
	<analytic>
		<title level="a" type="main">Enumerating constrained elementary flux vectors of metabolic networks</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Urbanczik</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="274" to="279" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b38">
	<analytic>
		<title level="a" type="main">An improved algorithm for stoichiometric network analysis: theory and applications</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Urbanczik</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Wagner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1203" to="1210" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b39">
	<analytic>
		<title level="a" type="main">Functional stoichiometric analysis of metabolic networks</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Urbanczik</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Wagner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="4176" to="4180" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b40">
	<analytic>
		<title level="a" type="main">Stoichiometric interpretation of Escherichia coli glucose catabolism under various oxygenation rates</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Varma</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Environ. Microbiol</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="2465" to="2473" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b41">
	<analytic>
		<title level="a" type="main">Stoichiometric flux balance models quantitatively predict growth and metabolic by-product secretion in wild-type Escherichia coli W3110</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Varma</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">Ø</forename>
				<surname>Palsson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Environ. Microbiol</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="3724" to="3731" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b42">
	<analytic>
		<title level="a" type="main">A new computational method to split large biochemical networks into coherent subnets</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">S</forename>
				<surname>Verwoerd</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">25</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>