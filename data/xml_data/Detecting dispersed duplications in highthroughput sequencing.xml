
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:42+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Detecting dispersed duplications in high-throughput sequencing data using a database-free approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">M</forename>
								<surname>Kroon</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Epidemiology</orgName>
								<orgName type="institution">Leiden University Medical Center</orgName>
								<address>
									<settlement>Leiden</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">E</forename>
								<forename type="middle">W</forename>
								<surname>Lameijer</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Epidemiology</orgName>
								<orgName type="institution">Leiden University Medical Center</orgName>
								<address>
									<settlement>Leiden</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">N</forename>
								<surname>Lakenberg</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Epidemiology</orgName>
								<orgName type="institution">Leiden University Medical Center</orgName>
								<address>
									<settlement>Leiden</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">J</forename>
								<forename type="middle">Y</forename>
								<surname>Hehir-Kwa</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Human Genetics</orgName>
								<orgName type="department" key="dep2">Nijmegen Center for Molecular Life Sciences</orgName>
								<orgName type="department" key="dep3">Institute for Genetic and Metabolic Disease</orgName>
								<orgName type="institution">Radboud University Nijmegen Medical Center</orgName>
								<address>
									<settlement>Nijmegen</settlement>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Donders Centre for Neuroscience</orgName>
								<address>
									<settlement>Nijmegen</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">D</forename>
								<forename type="middle">T</forename>
								<surname>Thung</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Human Genetics</orgName>
								<orgName type="department" key="dep2">Nijmegen Center for Molecular Life Sciences</orgName>
								<orgName type="department" key="dep3">Institute for Genetic and Metabolic Disease</orgName>
								<orgName type="institution">Radboud University Nijmegen Medical Center</orgName>
								<address>
									<settlement>Nijmegen</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">P</forename>
								<forename type="middle">E</forename>
								<surname>Slagboom</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Epidemiology</orgName>
								<orgName type="institution">Leiden University Medical Center</orgName>
								<address>
									<settlement>Leiden</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">J</forename>
								<forename type="middle">N</forename>
								<surname>Kok</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Epidemiology</orgName>
								<orgName type="institution">Leiden University Medical Center</orgName>
								<address>
									<settlement>Leiden</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">K</forename>
								<surname>Ye</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Epidemiology</orgName>
								<orgName type="institution">Leiden University Medical Center</orgName>
								<address>
									<settlement>Leiden</settlement>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution" key="instit1">The Genome Institute</orgName>
								<orgName type="institution" key="instit2">Washington University</orgName>
								<address>
									<postCode>63108</postCode>
									<settlement>St Louis</settlement>
									<region>MO</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Detecting dispersed duplications in high-throughput sequencing data using a database-free approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btv621</idno>
					<note type="submission">Received on July 13, 2015; revised on October 16, 2015; accepted on October 20, 2015</note>
					<note>Sequence analysis *To whom correspondence should be addressed. Associate Editor: John Hancock Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Dispersed duplications (DDs) such as transposon element insertions and copy number variations are ubiquitous in the human genome. They have attracted the interest of biologists as well as medical researchers due to their role in both evolution and disease. The efforts of discovering DDs in high-throughput sequencing data are currently dominated by database-oriented approaches that require pre-existing knowledge of the DD elements to be detected. Results: We present DD_DETECTION, a database-free approach to finding DD events in high-throughput sequencing data. DD_DETECTION is able to detect DDs purely from paired-end read alignments. We show in a comparative study that this method is able to compete with database-oriented approaches in recovering validated transposon insertion events. We also experimentally validate the predictions of DD_DETECTION on a human DNA sample, showing that it can find not only duplicated elements present in common databases but also DDs of novel type. Availability and implementation: The software presented in this article is open source and available from https://bitbucket.org/mkroon/</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The term dispersed duplication (DD) denotes any DNA sequence duplicated non-locally in a genome. DDs include copies of transposable elements such as members of the Alu and L1 families, which are ubiquitous in the human genome, but also less frequent duplications such as chromosomal translocations and copies of mitochondrial DNA sequences embedded in nuclear DNA. DDs are very common, as estimates show that known transposable elements comprise nearly 50% of the human genome (<ref type="bibr" target="#b8">Lander et al., 2001</ref>). An arbitrary human sample may contain upwards of 1000 DDs compared to the reference genome (<ref type="bibr" target="#b16">Stewart et al., 2011</ref>). DDs have been found to be disruptive to the genome, altering gene expression and sometimes causing disease (<ref type="bibr" target="#b5">Kazazian et al., 1988;</ref><ref type="bibr" target="#b12">Miki et al., 1996</ref>). This type of structural variation has often been considered in cohort studies aiming to link phenotypes to causal variants. Consequently, there has been an increased effort in developing methodologies to uncover genetic variation beyond the single nucleotide level. The advent of high-throughput DNA sequencing provides a new information source for genetic variant discovery that is both fast and is steadily becoming less expensive. However, whole-genome sequencing output is typically bulky and non-trivial to analyze,highlighting the need for robust and computationally efficient analysis methods. There is a variety of tools available to find structural variants in sequencing data [e.g. CNVnator (<ref type="bibr" target="#b0">Abyzov et al., 2011</ref>), GenomeSTRiP (<ref type="bibr" target="#b2">Handsaker et al., 2011</ref>), Pindel (<ref type="bibr" target="#b23">Ye et al., 2009</ref>) and BreakDancer (<ref type="bibr" target="#b1">Chen et al., 2009)]</ref>. Typically, these tools can be applied in a resequencing setting where a reference genome is available, and the DNA sample to be investigated is sequenced with low to moderate coverage. Short sequencing reads are produced of approximately 30â€“150 nucleotides long and subsequently aligned to the reference. Current sequencing technology allows the production of paired-end reads, where two ends of a larger fragment are sequenced, adding more information about the expected alignment of these reads. Insertions of transposable elements are one important class of DDs, and most currently available methods detect these types of variation using a predefined database. Some of the known tools that cover this type of variation are RetroSeq (<ref type="bibr" target="#b6">Keane et al., 2013</ref>), TELocate (<ref type="bibr" target="#b14">Platzer et al., 2012</ref>), Tangram (<ref type="bibr" target="#b21">Wu et al., 2014</ref>) and Mobster (<ref type="bibr" target="#b18">Thung et al., 2014</ref>). The usual strategy for detecting DDs in sequencing data is to look for anomalous read alignments and try to realign the respective reads or read-parts to a database of known duplication sequences. A DD insertion is called when a certain number of aligned reads support the same duplication element type and show consensus on the insertion site. Another previously published method, named Gustaf (<ref type="bibr" target="#b19">Trappe et al., 2014</ref>), does not realign to a database but focuses completely on split read alignments to identify DDs. This study aims to develop a method to find DDs without requiring realignment to a predefined database of known elements. Instead, detecting DDs based on the information provided by discordant alignment of read pairs and partially aligned reads allows our method to find elements that have not been included in available databases or have not even been discovered yet. The method described in this article can be seen as a complement to the existing methodology referenced earlier, as it is applicable to situations where providing a database of known duplication elements is not desirable. We introduce DD_DETECTION as a method that can be used in a resequencing setting where short, paired-end reads are aligned to a reference genome. The underlying algorithm is implemented with adjustable parameters to allow users to have it perform according to their custom needs and wishes. We compared the sensitivity of DD_DETECTION with database-oriented methods using a human DNA sample for which extensive experimental validation data are available. In addition, we tested the specificity of our method using new human samples and performed experimental validation with Sanger sequencing to find out how well DD_DETECTION could identify both DDs of known structure and novel types.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Methods</head><p>The algorithm to find DDs uses output from a standard highthroughput paired-end read sequencing system such as the popular Illumina platform. The sequencing output is generated for a, typically large, number of DNA fragments whose insert sizes (i.e. fragment lengths) have a mean value of F IS. Of all n fragments, both ends are sequenced, resulting in a set of reads S Â¼ fr 1 ;. .. ; r 2n g, where r denotes a DNA sequence of some fixed length F RL with a unique associated name nameÃ°rÃž. We define r j Â¼ mateÃ°r i Ãž to denote that reads r i and r j (where i 6 Â¼ j) are sequenced from the same fragment. After sequencing, all reads are aligned to a reference genome. Our method is designed for use with the BWA alignment tool (<ref type="bibr" target="#b11">Li and Durbin, 2009</ref>). In principle, the alignment information can be provided by any existing alignment tool that can handle pairedend reads, such as Bowtie (<ref type="bibr" target="#b9">Langmead et al., 2009</ref>) or NovoAlign (http://www.novocraft.com/products/novoalign/). Additional information provided by alignment includes is alignedÃ°rÃž, a Boolean value stating whether the read could be aligned to the reference genome, chrÃ°rÃž, the chromosome to which the read is aligned, posÃ°rÃž, the left-most base position on the chromosome to which the read is aligned and strandÃ°rÃž, the strand to which the read is aligned. Given the alignment information as input, the algorithm proceeds in three steps. First, all reads with an abnormal alignment are deemed potentially indicative of a DD insertion. These reads are collected and clustered by strand and position in the genome. Second, for each cluster, a potential breakpoint of a new DD insertion is estimated based on either information from local split reads or, in absence of a split read signal, from the distribution of alignment positions of the reads in the cluster. Finally, estimated breakpoints from opposite strands are combined into duplication events, which are then reported. The process is described below in further detail, a graphical outline is shown in<ref type="figure" target="#fig_0">Figure 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Detecting clusters of discordantly mapped reads</head><p>In the first step of the algorithm, all read alignments in S are examined. Reads for which the mates align to different chromosomes or for which the distance of the alignment positions exceeds a certain, DD2 and DD3, where DD3 is not present in the reference genome. In pre-processing step 0, the paired-end reads are aligned to the reference genome. Reads that originate from the region flanking the DD3 element are aligned to the corresponding region in the reference. Reads originating from inside the DD3 element are aligned to DD1 and DD2 in the reference genome. Our method starts with step 1, where reads that are aligned to the region flanking the DD3 insertion site are clustered as a group of discordantly mapped reads (gray circle). In step 2, the method searches a read pair where one read aligns to the flanking region and its mate can be partially aligned adjacent to the assumed insertion site of DD3, giving an estimation of the breakpoint on the reference genome. In the final step, the breakpoint estimation is combined with a breakpoint estimated by a similar process on the opposite strand and the DD event is reported threshold (r i Â¼ mateÃ°r j Ãž and jposÃ°r i Ãž Ã€ posÃ°r j Ãžj &gt; h) are marked discordant and are collected for further processing. The threshold parameter h ensures that the algorithm focuses on dispersed events rather than small or local variations. The collected discordantly aligned reads are subsequently clustered by strand and by alignment position. Two reads (r i , r j ) are assigned to the same cluster C S if chrÃ°r i Ãž Â¼ chrÃ°r j Ãž and strandÃ°r i Ãž Â¼ strandÃ°r j Ãž and jposÃ°r i Ãž Ã€ posÃ°r j Ãžj d. The value of d determines how close two reads must be aligned to be in the same cluster. d is manually configurable and allows control over the number of times reads are mistakenly clustered together or conversely assigned to the same cluster while not supporting the same DD event. The expected number of such mistakes also depends on read coverage and on the size characteristics of the paired-end read fragments (F IS ; F RL ). The algorithm also enforces a maximum on the size of the region that is spanned on the reference genome by its read alignments to avoid adding reads bearing signals from different duplication events to the same cluster. Formally, a cluster C is invalid if</p><formula>9 ri2C;rj2C jposÃ°r i Ãž Ã€ posÃ°r j Ãžj &gt; F IS Ã€ F RL :</formula><p>While clustering, the reads are traversed in order of their alignment position on the genome, assigning them to clusters one at a time. New clusters are created for the first read and every read that cannot be assigned to an existing cluster without invalidating it by the definition described above. Afterward, a noise threshold a is applied such that all clusters of insufficient size jCj &lt; a are discarded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Finding breakpoints</head><p>Having found clusters of discordant reads, the algorithm estimates for each cluster the breakpoint location of the putative DD. Estimation of the breakpoint is done using a split read signal provided by applying the pattern growth algorithm locally. This algorithm was first described by<ref type="bibr" target="#b13">Pei et al. (2001)</ref>and has successfully been used in finding patterns in biological sequence data (e.g.<ref type="bibr" target="#b22">Ye et al., 2007</ref><ref type="bibr" target="#b23">Ye et al., , 2009</ref><ref type="bibr" target="#b25">Zhang et al., 2012</ref>). In the context of finding DDs, pattern growth is used to find partial alignments of reads (i.e. split reads) overlapping the insertion breakpoint. To find a breakpoint for a specific cluster C with reads aligned to the forward strand, the left-most alignment position m Â¼ min r2C posÃ°rÃž is determined. Given m, the algorithm finds reads r Ãƒ 2 S for which mateÃ°r Ãƒ Ãž is not aligned or only partially aligned to the reference and posÃ°r Ãƒ Ãž Ã¾ F RL is within the range Â½m Ã€ F IS ; m Ã¾ 2F IS ÂŠ (i.e. a region around the far end of the site spanned by the cluster on the reference genome). For every r Ãƒ the pattern growth algorithm is applied to mateÃ°r Ãƒ Ãž in the local area on the reference genome to find a partial alignment. If such a partial alignment is found, a putative breakpoint is announced at the last aligned position before the read starts to diverge from the reference. Any announced breakpoint is discarded if it is not at least supported by a partial alignments or if the previously unaligned parts of the split reads can be aligned locally in the genome (in a 6h region around the breakpoint). For clusters with reads aligned to the reverse strand of the reference genome, a similar approach is used, the right-most aligned position being found by m Â¼ max r2C posÃ°rÃž Ã¾ F RL and using Â½m Ã€ 2F IS ; m Ã¾F IS ÂŠ as the range that must overlap with posÃ°r Ãƒ Ãž Ã¾ F RL. If no breakpoint is found using split reads, it will be estimated directly from the alignments of the reads in the cluster. Given a cluster C with reads Ã°r 1 ;. .. ; r jCj Ãž aligned to the forward strand ordered by alignment position, a breakpoint is estimated by</p><formula>posÃ°r jCj Ãž Ã¾ F RL Ã¾ 1 jCj Ã€ 1 X jCjÃ€1 iÂ¼1 posÃ°r iÃ¾1 Ãž Ã€ posÃ°r i Ãž :</formula><p>For clusters with reads aligning to the reverse strand, the breakpoint is calculated in similar fashion by subtracting the average distance between reads from the position of the left-most read.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Calling DD insertions</head><p>In the final step of the algorithm, DD events are called if they are supported by breakpoints from two clusters, one with reads aligned to the forward strand and one with reads aligned to the reverse strand of the reference genome. Two such breakpoints are assumed to support the same event if they are not further apart than k basepairs on the same chromosome. Specifically, the duplication events are discovered by combining consecutive breakpoints from an array of breakpoints sorted by their position on the genome. The resulting DD events are reported with the position on the genome estimated from read clusters on both strands, the supporting discordant reads (i.e. those that map inside the element), the supporting split reads and the alignment positions of the discordant reads to the reference genome as provided in the input (i.e. positions indicating alternative copies of the DD elements).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Results</head><p>We implemented the method presented in the previous section and named it DD_DETECTION. The program is easy to use, configurable and capable of processing whole-genome sequencing input on a modern desktop computer system. For example, on a regular system (4-core 2.4 GHz processor, 8 GB memory) with human wholegenome sequencing data (40Ã‚ coverage) as input, running DD_DETECTION with four threads and otherwise default parameters takes 127 min and consumes approximately 2.5 GB peak physical (9.3 GB peak virtual) memory. The CÃ¾Ã¾ source of the program together with installation instructions can be found online at https:// bitbucket.org/mkroon/dd_detection. We have used DD_DETECTION to investigate the performance of our method for both medium and high-coverage human DNA alignment data. DD events called on publicly available data from the 1000 Genomes project (The 1000 Genomes Project Consortium, 2012) are used to compare the performance of DD_DETECTION to that of alternative methods. We also applied DD_DETECTION to a twosample human dataset and validated in corresponding DNA samples a number of calls for both known transposon elements and elements not present in common databases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Comparing methods in a human sample</head><p>We used a well-studied human sample from the 1000 Genomes project (<ref type="bibr">The 1000</ref><ref type="bibr">Genomes Project Consortium, 2012</ref>) to compare our method against recent methods for finding transposon insertions. The particular public dataset used for this sample (NA12878, ftp://ftp.1000genomes. ebi.ac.uk/Vol03204/ftp/technical/working/20101201_cg_NA12878) contains paired-end reads from the Illumina HiSeq platform for the whole genome with approximately 200Ã‚ coverage. The read data were realigned to the human reference genome GRCh37 using BWA (<ref type="bibr" target="#b11">Li and Durbin, 2009</ref>). DD_DETECTION was run with h Â¼ 8000 bp, a Â¼ 10; d Â¼ 250 bp and compared to two alternative methods: RetroSeq (<ref type="bibr">Keane et</ref>Detecting dispersed duplicationsal., 2013) and Mobster (<ref type="bibr" target="#b18">Thung et al., 2014</ref>). Gustaf (<ref type="bibr" target="#b19">Trappe et al., 2014</ref>) was omitted from the comparison, due to its large memory requirement for whole-genome sequencing data, it could not be applied to this dataset of our system. RetroSeq, which is a database-oriented approach that uses detection of discordantly mapped reads and read realignment to find new element insertions, was run with default settings while employing the Repbase Update (<ref type="bibr" target="#b4">Jurka et al., 2005</ref>) database with selected transposon elements for human and human ancestors. Furthermore, duplicate calls arising from homologous elements in the database were removed from the RetroSeq output. Mobster also has a database-oriented approach and uses realignment of discordant and split reads to find new element insertions. Mobster was run with default parameters and the transposon database that came supplied with the software, which contained sequences for the L1,<ref type="bibr">Alu</ref><ref type="figure" target="#fig_2">Figure 2b</ref>shows the overlap within a 250 bp range for the calls made by the three detection methods and the validation set. The majority of validated events overlap with the call sets of all methods. RetroSeq and Mobster show a similar number of unique calls in the 1300â€“1400 range, while DD_DETECTION has nearly 2500 unique calls. With 10 calls, Mobster has the highest number of calls overlapping with the validation set that are unique to that particular method, RetroSeq and DD_DETECTION follow with 8 and 1, respectively. Estimated DD insertion locations of the three detection methods were compared with the actual locations in the validation set. For DD_DETECTION, using the mean of the estimations based on both strands, we find an average distance of 37.4 bp (standard deviation of 21.7) between the estimated insertion location and the validated insertion location. When looking solely at the split read signal of the DD_DETECTION calls, the average distance drops to 9.4 bp (standard deviation of 6.9). RetroSeq shows an average distance between estimated and validated locations of 16.4 (standard deviation of 16.4). Mobster shows a distance of 10.6 bp (standard deviation of 22.3) for the same measurement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Validation of DDs in medium coverage data</head><p>To test the ability of DD_DETECTION to find DDs of known type and DDs with non-database elements, we obtained a two-sample dataset originating from a monozygous twin pair (<ref type="bibr" target="#b24">Ye et al., 2013</ref>). The two samples named A and C were sequenced with paired-end reads on an Illumina HiSeq platform with medium coverage (40Ã‚). The resulting reads are 100 bp in length and have a mean insert size of approximately 300 bp. The reads were aligned to human reference genome GRCh37 using the alignment tool BWA with default settings. DD_DETECTION was run for each sample separately with the following parameters: h Â¼ 8000 bp, a Â¼ 5; d Â¼ 100 bp; k Â¼ 100 bp. RepeatMasker (<ref type="bibr" target="#b15">Smit et al., 1996</ref>) was used to classify events by masking the supporting read sequences according to the Repbase Update (<ref type="bibr" target="#b4">Jurka et al., 2005</ref>) transposon element database. We noticed some events to occur in low-complexity regions of the genome. Therefore, we divided the DD events into three disjoint groups: first, events of known type, for which &gt;50% of their supporting reads could be aligned to the consensus sequence of an element in the database. Second, low complexity events, for which &gt;50% of the reads were identified as low complexity sequences (including satellite repeats). Last, events classified non-database are those that do not fit the previous two descriptions. For these three groups, we found 1825 (74.9%), 433 (17.8%) and 177 (7.27%) events, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Validation of DDs with common transposon elements</head><p>For both samples combined, 1825 of the DD events called were classified as a known type in the RepBase update database. Of those, 1058 (58.0%) were detected in both samples, 329 (18.0%) were uniquely detected in sample A and 438 (24.0%) were uniquely detected in sample C. Please note that the discrepancy in calls between the two twin samples depends on the data coverage {In our experiment with medium coverage data for a human twin pair, the calls made by DD_DETECTION were not identical for the two samples as one might expect. We observed that approximately 42% of the calls were unique to one of the samples, however, of those calls, more than 75% were found in the other sample with support just below the detection threshold a Â¼ 5 (i.e. the events would have been detected in the other sample with an a value of 3 or 4). These findings suggest that the call sets for the twin samples are more similar than they appear in the listed results.}. Of all 1825 events, we considered<ref type="bibr">Stewart et al., 2011). (b)</ref>The overlap in calls made by each detection method 210 (11.5%) to be novel, as they were not reported in previous literature (using<ref type="bibr" target="#b3">Hormozdiari et al., 2011;</ref><ref type="bibr" target="#b10">Lee et al., 2012;</ref><ref type="bibr" target="#b16">Stewart et al., 2011;</ref><ref type="bibr" target="#b20">Wang et al., 2006</ref>as reference). Furthermore, 436 (23.9%) of these events were called with split read support. DD calls from both the group of novel events and known events were selected randomly for validation. For each selected event, polymerase chain reaction (PCR) was applied to amplify the region of the DNA containing the putative insertion. As the breakpoints may be imprecise, the primers were designed to be at least 150 bp away from the nearest breakpoint estimation. Before validation, the predicted length of the elements to be extracted was estimated from the alignment of the discordant read pairs supporting the corresponding event and from information provided by the Repbase Update transposon database if the particular event could be classified as a known transposon type. The actual length of the inserted elements was determined via gel electrophoresis on the PCR products. If the measured length of a product concurred with the estimated element length, the product was isolated and sequenced inwards from both directions using Sanger sequencing. The resulting sequences were aligned to the human reference genome using BLAT (<ref type="bibr" target="#b7">Kent, 2002</ref>). We state that an event is validated when BLAT returns an incomplete alignment near the putative breakpoint with the remaining part of the sequence aligning to the consensus sequence of the element type as identified by RepeatMasker for the respective event or when the rest of the sequence corresponds to the supporting reads of the event and their alignment to the reference genome. Validation results for nine events with elements from the Repbase Update database are listed in<ref type="figure" target="#tab_1">Table 1</ref>. Seven of the selected events were validated successfully. Detailed information on the selected events and validation experiments can be found in (Supplementary<ref type="figure" target="#tab_1">Table S1</ref>). Pictures of electrophoresis on the PCR products are shown in Supplementary Figs S1â€“S4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Validation of DD events with non-database elements</head><p>DD_DETECTION found 177 events that were classified as neither present in the transposon element database nor arising from regions of low complexity. Fifty-five events (31.1%) were detected in both samples, while 57 (32.2%) events were unique for sample A and 65 (36.7%) events were unique for sample C. Twenty-two (12%) of these DDs were supported by split reads. Eight events with non-database elements were selected for validation. We preferred events that were well-supported by discordant reads and for which the surrounding region on the genome was suitable for primer design. The followed validation procedure was as described in Section 3.2.1.<ref type="figure" target="#tab_2">Table 2</ref>lists the validation result, three of the events were validated successfully. Details on the selected events and validation can be found in Supplementary Table S1 and Figs S1â€“S4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Discussion and conclusion</head><p>We presented DD_DETECTION, a new method to detect dispersed duplicated DNA, an important but relatively neglected type of structural variation. The method uses the alignment information of paired-end reads to find non-reference duplications, thereby not relying on a predefined database of duplicated elements. As a software package, DD_DETECTION is publicly available and has few requirements for installation. In a comparative study on public high-coverage data, DD_DETECTION was able to compete with database-oriented methods in finding new transposon insertions. Analysis of DDs called in medium coverage data shows that DD_DETECTION is able to find both new transposon insertions of known type as well as other DD insertion events with elements not present in common databases. A number of novel DD events and DD events with non-database elements were successfully validated using PCR and Sanger sequencing.Seven events could be validated, of which five were considered novel events not found in previous literature. From left to right, the table columns describe the chromosome and genome position of the event, as averaged by the estimations based on forward and reverse strand. The last three columns contain the family to which the inserted transposon element belongs, whether it is a novel event and whether it was validated successfully.Predictions made by DD_DETECTION for a human twin pair showed a discrepancy between both samples that is larger than one may expect for near identical genomes. Additionally, we noticed that low-complexity regions in the genome caused false-positive calls. We think these problems are part of the trade-off that comes with avoiding an external database of duplication elements. While it allows our method to call events with non-database elements, it cannot use information from a database to discard false calls. We showed a simple post-processing step with the RepeatMasker tool (<ref type="bibr" target="#b15">Smit et al., 1996</ref>) that we used to filter some of these false positives. In the future, we want to focus on decreasing the false-positive rate, either by extending the pipeline with a filtering step for lowcomplexity DNA or by incorporating such filtering into the method. Another goal is to have the algorithm find optimal parameter values automatically given the input data. Currently, as a general guide line, the value of a should not be lower than 3, to keep control over the false-positive rate. In case of low coverage data, d and k can be increased to gain sensitivity. A more detailed explanation of the effects of parameter settings is given in the software documentation.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Method outline for detecting DDs. The top of the figure shows a paired-end sequenced sample genome containing three identical elements DD1, DD2 and DD3, where DD3 is not present in the reference genome. In pre-processing step 0, the paired-end reads are aligned to the reference genome. Reads that originate from the region flanking the DD3 element are aligned to the corresponding region in the reference. Reads originating from inside the DD3 element are aligned to DD1 and DD2 in the reference genome. Our method starts with step 1, where reads that are aligned to the region flanking the DD3 insertion site are clustered as a group of discordantly mapped reads (gray circle). In step 2, the method searches a read pair where one read aligns to the flanking region and its mate can be partially aligned adjacent to the assumed insertion site of DD3, giving an estimation of the breakpoint on the reference genome. In the final step, the breakpoint estimation is combined with a breakpoint estimated by a similar process on the opposite strand and the DD event is reported</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>and SVA families. Calls made by each method were compared to previously validated transposon insertion events taken from Stewart et al. (2011). The validation set contains 420 insertion events of Alu, L1 and SVA elements. Figure 2a shows the percentage of validated events recovered by each detection method, as computed by matching calls with validated events within a 250 bp range. All three methods recover a decent number of events in the validation set, with RetroSeq performing best with 91.9% and Mobster performing worst with 81.4%.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. Comparison of DD insertion calls made by DD_DETECTION, RetroSeq and Mobster on a deep-sequenced human sample. (a) For each detection method, the percentage of known elements recovered from the validation set of 420 Alu, L1 and SVA elements provided by (Stewart et al., 2011). (b) The overlap in calls made by each detection method</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>V C The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 505 Bioinformatics, 32(4), 2016, 505â€“510 doi: 10.1093/bioinformatics/btv621 Advance Access Publication Date: 27 October 2015 Original Paper</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>Table 1.</figDesc><table>Validation results for nine DDs with common transposon 
elements 

Chr 
Position 
Family 
Novel 
Validated 

1 
93167510 
Alu 
No 
Yes 
3 
103171339 
Alu 
No 
No 
1 
83201797 
L1 
Yes 
Yes 
1 
60470601 
Alu 
No 
Yes 
4 
80883489 
Alu 
Yes 
Yes 
1 
241908648 
Alu 
Yes 
Yes 
2 
30670002 
Alu 
Yes 
Yes 
5 
21207706 
L1 
Yes 
Yes 
5 
155290632 
Alu 
Yes 
No 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>Table 2. Validation results for DD events with non-database elements</figDesc><table>Chr 
Position 
Size 
Val. 
Alternative location 

Chr 
Position </table></figure>

			<note place="foot">at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">M.Kroon et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We thank Szymon KieÅ‚basa for stimulating discussions and his support. This study makes use of data produced by the 1000 Genomes project.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Funding</head></div>
			</div>

			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">CNVnator: an approach to discover, genotype, and characterize typical and atypical CNVs from family and population genome sequencing</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Abyzov</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="974" to="984" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">BreakDancer: an algorithm for high-resolution mapping of genomic structural variation</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Chen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="677" to="681" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Discovery and genotyping of genome structural polymorphism by sequencing on a population scale</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">E</forename>
				<surname>Handsaker</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Genet</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="269" to="276" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Alu repeat discovery and characterization within human genomes</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Hormozdiari</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="840" to="849" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Repbase update, a database of eukaryotic repetitive elements</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Jurka</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cytogenet. Genome Res</title>
		<imprint>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="page" from="462" to="467" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Haemophilia A resulting from de novo insertion of L1 sequences represents a novel mechanism for mutation in man</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">H</forename>
				<surname>Kazazian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="page">332</biblScope>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">RetroSeq: transposable element discovery from nextgeneration sequencing data</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">M</forename>
				<surname>Keane</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="389" to="390" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">BLAT-the BLAST-like alignment tool</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">J</forename>
				<surname>Kent</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="656" to="664" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Initial sequencing and analysis of the human genome</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">S</forename>
				<surname>Lander</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">409</biblScope>
			<biblScope unit="page" from="860" to="921" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Langmead</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">25</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Landscape of somatic retrotransposition in human cancers</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Lee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">337</biblScope>
			<biblScope unit="page" from="967" to="971" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Fast and accurate short read alignment with Burrowsâ€“Wheeler transform</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Durbin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1754" to="1760" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Mutation analysis in the BRCA2 gene in primary breast cancers</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Miki</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Genet</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="245" to="247" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">PrefixSpan: mining sequential patterns efficiently by prefixprojected pattern growth</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Pei</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th International Conference on Data Engineering</title>
		<meeting>the 17th International Conference on Data Engineering</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="215" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">TE-Locate: a tool to locate and group transposable element occurrences using paired-end next-generation sequencing data</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Platzer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biology</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="395" to="410" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<monogr>
		<title level="m" type="main">RepeatMasker Open-3.0</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">F</forename>
				<surname>Smit</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">A comprehensive map of mobile element insertion polymorphisms in humans</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Stewart</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Genet</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">1002236</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">An integrated map of genetic variation from 1 092 human genomes</title>
	</analytic>
	<monogr>
		<title level="m">The 1000 Genomes Project Consortium</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="56" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Mobster: accurate detection of mobile element insertions in next generation sequencing data</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">T</forename>
				<surname>Thung</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page">488</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Gustaf: detecting and correctly classifying SVs in the NGS twilight zone</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Trappe</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="3484" to="3490" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">dbRIP: a highly integrated database of retrotransposon insertion polymorphisms in humans</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Wang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Hum. Mutat</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="323" to="329" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Tangram: a comprehensive toolbox for mobile element insertion detection</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Wu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Genomics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page">795</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">An efficient, versatile and scalable pattern growth approach to mine frequent patterns in unaligned protein sequences</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Ye</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="687" to="693" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Pindel: a pattern growth approach to detect break points of large deletions and medium sized insertions from paired-end short reads</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Ye</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="2865" to="2871" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Aging as accelerated accumulation of somatic variants: whole-genome sequencing of centenarian and middle-aged monozygotic twin pairs</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Ye</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Twin Res. Hum. Genet</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="1026" to="1032" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">PASSion: a pattern growth algorithm-based pipeline for splice junction detection in paired-end RNA-Seq data</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="479" to="486" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>