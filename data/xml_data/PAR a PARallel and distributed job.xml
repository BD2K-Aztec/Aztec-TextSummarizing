
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:54+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Structural bioinformatics PAR: a PARallel and distributed job crusher</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">. 22 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Francois</forename>
								<surname>Berenger</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Zhang Initiative Research Unit</orgName>
								<orgName type="institution" key="instit1">Advanced Science Institute</orgName>
								<orgName type="institution" key="instit2">RIKEN</orgName>
								<address>
									<addrLine>2-1 Hirosawa</addrLine>
									<postCode>351-0198</postCode>
									<settlement>Wako</settlement>
									<region>Saitama</region>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Camille</forename>
								<surname>Coti</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="laboratory">HPC Group</orgName>
								<orgName type="institution">Iowa State University</orgName>
								<address>
									<postCode>50011-2251</postCode>
									<settlement>Ames</settlement>
									<region>IA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Kam</forename>
								<forename type="middle">Y J</forename>
								<surname>Zhang</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Zhang Initiative Research Unit</orgName>
								<orgName type="institution" key="instit1">Advanced Science Institute</orgName>
								<orgName type="institution" key="instit2">RIKEN</orgName>
								<address>
									<addrLine>2-1 Hirosawa</addrLine>
									<postCode>351-0198</postCode>
									<settlement>Wako</settlement>
									<region>Saitama</region>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Structural bioinformatics PAR: a PARallel and distributed job crusher</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="page" from="2918" to="2919"/>
							<date type="published" when="2010">. 22 2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq542</idno>
					<note type="submission">Received on July 20, 2010; revised on September 7, 2010; accepted on September 19, 2010</note>
					<note>[16:00 20/10/2010 Bioinformatics-btq542.tex] Page: 2918 2918–2919 Associate Editor: Anna Tramontano Contact: berenger@riken.jp</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Bioinformaticians are tackling increasingly computation-intensive tasks. In the meantime, workstations are shifting towards multi-core architectures and even massively multi-core may be the norm soon. Bag-of-Tasks (BoT) applications are commonly encountered in bioinformatics. They consist of a large number of independent computation-intensive tasks. This note introduces PAR, a scalable, dynamic, parallel and distributed execution engine for Bag-of-Tasks. PAR is aimed at multi-core architectures and small clusters. Accelerations obtained thanks to PAR on two different applications are shown. Availability: PAR is released under the GNU General Public License version three and can be freely downloaded (http://download. savannah.gnu.org/releases/par/par.tgz).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Bioinformaticians are significant high-performance computing users, in particular for simulations of biologic phenomena. On the other hand, the available hardware is not only getting faster but also much more parallelized (Intel publicly reported working on 80 cores prototype chips in 2007). In this context, most bioinformaticians could benefit from an easy-to-use software to harness such computing power. The focus of this note is Bag-of-Tasks (BoT) applications execution. As the name suggests, BoT applications can be seen as a bag, filled with tasks to do, each being independent from all the others. A middle-ware for BoT applications is called a job crusher. It has to consist of at least a server component connected to a set of clients. This note introduces PAR, a parallel and distributed job crusher working in pull mode and inspired by desktop grid platforms. Workers join the computation and can be added dynamically at run-time; the server delivers tasks to workers available at a given moment. PAR is actually a transposition of some concepts and features from previous distributed middle-ware to small HPC clusters and multi-core workstations. This article is organized as follows: Section 2 presents an overview of related projects and technologies used in bioinformatics. Section 3 presents two examples using PAR to illustrate scalability. The last section lists upcoming enhancements. * To whom correspondence should be addressed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED PROJECTS</head><p>A wide variety of tools and technologies have been used over the last two decades in bioinformatics. While PAR is a user-level tool with its own niche, it has some limitations. At the cost of a little more complexity, some of the tools listed hereafter allow fair share of resources, stronger reliability and even faster job or data throughput. At the programming level, the Message-Passing Interface [MPI,<ref type="bibr" target="#b5">Forum (1994)</ref>], CORBA (Object Management<ref type="bibr" target="#b10">Group, 1998</ref>) or even MapReduce (<ref type="bibr" target="#b2">Dean and Ghemawat, 2004</ref>) are noteworthy technology candidates. MPI has become the de facto standard for programming highly parallel applications. It has been used in computational genomics (<ref type="bibr" target="#b12">Swain et al., 2005</ref>) and in molecular dynamics (<ref type="bibr" target="#b3">de Lomana et al., 2008;</ref><ref type="bibr" target="#b7">Johnston et al., 2005</ref>). For applications following a client-server model, CORBA can be used. Handling of genome maps has successful examples (<ref type="bibr" target="#b6">Hu et al., 1998;</ref><ref type="bibr" target="#b8">Jungfer and Rodriguez-Tomé, 1998</ref>). For data-intensive applications, MapReduce and its open source implementation Hadoop (http://hadoop.apache.org) are more appropriate. They unleash operations over huge amounts of data and were used recently in sequence alignment (<ref type="bibr" target="#b11">Sadasivam and Baktavatchalam, 2010</ref>). However, at the application level, Desktop Grids (DG) are closer to the focus of this note. A server distributes tasks to workers located on machines that do not communicate with each other, potentially anywhere on the Internet. Condor (<ref type="bibr" target="#b9">Litzkow et al., 1988</ref>), XtremWeb (<ref type="bibr" target="#b4">Fedak et al., 2001</ref>) and BOINC (<ref type="bibr" target="#b0">Anderson, 2004</ref>) are three platforms for highly parallel, multi-user applications. One of the best-known DG project in bioinformatics is probably Folding@home (<ref type="bibr" target="#b1">Beberg et al., 2009</ref>). Like Hadoop and unlike most DG, PAR is designed to be used exclusively on private resources. PAR's ideal scale is then smaller than what DG systems usually target, but this permits a lower latency. For simplicity, PAR uses pull-driven task distribution. This removes the need for a complex software component (called a scheduler) and also allows to scale smoothly even in large, dynamic and heterogeneous environments. In addition, PAR never requires administrator privileges and is only run on-demand.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EXAMPLE USE</head><p>The first example experiment consists of computing Alpha Carbons Root Mean-Square Deviation after optimal superposition, noted C α RMSD opt hereafter, on one thousand ab initio generated structures for the protein target 256B. Distances between proteins are computed using the software from (<ref type="bibr" target="#b13">Zhang and Skolnick, 2004</ref>). The second experiment performs molecular replacement (MR), amethod of solving the phase problem in X-ray crystallography using homologous structures, on a set of 192 decoys for the protein target 1m6t. We present the time elapsed with and without using PAR. PAR in parallel mode uses several cores of a given computer while the distributed mode uses distinct computers. The current implementation of PAR is known to work well with up to 16 and 64 CPUs in parallel and distributed mode, respectively. Prior to timing experiments, needed programs and data were copied to each machine by the user. During experiments, PAR was started in server mode with a list of commands to execute. Workers were started soon after the server, but could have joined the computation later if we were not interested in the shortest completion time. The Unix 'time' command was used and averaged over two trials to measure the real time spent by PAR to complete all tasks. Unlike previous job crushers, PAR server's life cycle is only tied to the application's execution time (no Unix daemon involved) and PAR runs only in user space. Results are shown in<ref type="figure" target="#fig_1">Figure 1</ref>. The first bar is the real time elapsed when not using PAR. The second bar is the time spent when using PAR in parallel mode, and the following bars are durations in distributed mode. On a CPU-intensive task and when using 16 CPUs, the speedup obtained by PAR can be as high as 14.01 in the parallel case and 15.54 in the distributed one. Lower performance of the parallel version is attributed to Python's problem with multi-thread applications (the Python interpreter uses a global lock mechanism shared by all threads). We can see that the application scales remarkably well. The overhead due to communications between workers and the master is very small, and this allows for an effective use of the parallel hardware with minimum effort required on the user's side.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">FURTHER DEVELOPMENTS</head><p>PAR can be used on network of Unix-like workstations. It can take advantage of a Network shared File System (NFS). However, because of poor NFS performances, data-intensive tasks should be computed on top of a Distributed File System (DFS). As DFS are still rare even within clusters, we envisage to plug in such a functionality into PAR. A prototype has been implemented but is still in experimental stage. PAR should integrate fault-tolerance policies, in order to be used safely even with more workers over longer periods, and with minimal overhead. Furthermore, compression could be added to speedup communications. Encryption would be similarly easy to add and would allow PAR to be used over untrusted networks. Finally, features can be added for large-scale experiments. For example, requesting groups of jobs instead of one at a time would lower the load on the server part. Allowing PAR to run both as a server and as a client would allow it to be deployed in layers, which could be used to connect several clusters together and increase scalability. Requests and contributions from users are also considered.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Experiments accelerated by PAR (N p : N parallel CPUs; N d : N distributed CPUs).</figDesc></figure>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We thank all the PAR users, especially early ones like Rojan Shrestha for providing feedback and useful feature requests. We wish to thank RIKEN, Japan, for an allocation of computing resources on the RIKEN Integrated Cluster of Clusters (RICC) system.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">BOINC: a system for public-resource computing and storage</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">P</forename>
				<surname>Anderson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Society</title>
		<imprint>
			<biblScope unit="page" from="4" to="10" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<monogr>
		<title level="m" type="main">Folding@home: lessons from eight years of volunteer distributed computing</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">L</forename>
				<surname>Beberg</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Mapreduce: simplified data processing on large clusters</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Dean</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Ghemawat</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OSDI&apos;04, USENIX Association</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Optimal experimental design in the modelling of pattern formation</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">L G</forename>
				<surname>De Lomana</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCS&apos;08</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="610" to="619" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Xtremweb: a generic global computing system</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Fedak</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCGRID&apos;01</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="582" to="587" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<monogr>
		<title level="m" type="main">MPI: a message-passing interface standard</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">P I</forename>
				<surname>Forum</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<pubPlace>Knoxville, Tennessee</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Design and implementation of a corba-based genome mapping system prototype</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Hu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="112" to="120" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Framework-based design of a new all-purpose molecular simulation application: the adun simulator</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Johnston</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Chem</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1647" to="1659" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Mapplet: a corba-based genome map viewer</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Jungfer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Rodriguez-Tomé</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="734" to="738" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Condor-a hunter of idle workstations</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Litzkow</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDCS&apos;88</title>
		<imprint>
			<publisher>IEEE-CS Press</publisher>
			<date type="published" when="1988" />
			<biblScope unit="page" from="104" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<monogr>
		<title level="m" type="main">The Common Object Request Broker: Architecture and Specification. Version 2.3. Object Management Group</title>
		<author>
			<persName>
				<forename type="first">Management</forename>
				<surname>Object</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Group</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<pubPlace>Framingham, MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">A novel approach to multiple sequence alignment using hadoop data grids</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">S</forename>
				<surname>Sadasivam</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Baktavatchalam</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MDAC &apos;10</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Modeling gene-regulatory networks using evolutionary algorithms and distributed computing</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Swain</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCGRID&apos;05</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="512" to="519" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Scoring function for automated assessment of protein structure template quality</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Skolnick</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins Struct. Funct. Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="page" from="702" to="710" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>