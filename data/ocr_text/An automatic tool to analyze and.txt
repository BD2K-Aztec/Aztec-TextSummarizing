Bioinformatics, 31(9), 2015, 1490—1492

doi: 10.1093/bioinformatics/btu849

Advance Access Publication Date: 26 December 2014
Applications Note

 

Structural bioinformatics

An automatic tool to analyze and cluster
macromolecular conformations based
on self-organizing maps

Guillaume Bouvier*, Nathan Desdouits, Mathias Ferber,
Arnaud Blondel and Michael Nilges*

Institut Pasteur, Unité de Bioinformatique Structurale; CNRS UMR 3528; Département de Biologie Structurale
et Chimie; F-75015, Paris, France

*To whom correspondence should be addressed.
Associate Editor: Anna Tramontano

Received on September 26, 2014; revised on November 25, 2014; accepted on December 21, 2014

Abstract

Motivation: Sampling the conformational space of biological macromolecules generates large sets
of data with considerable complexity. Data—mining techniques, such as clustering, can extract
meaningful information. Among them, the self—organizing maps (SOMs) algorithm has shown
great promise; in particular since its computation time rises only linearly with the size of the data
set. Whereas SOMs are generally used with few neurons, we investigate here their behavior with
large numbers of neurons.

Results: We present here a python library implementing the full SOM analysis workflow. Large
SOMs can readily be applied on heavy data sets. Coupled with visualization tools they have very
interesting properties. Descriptors for each conformation of a trajectory are calculated and mapped
onto a 3D landscape, the U—matrix, reporting the distance between neighboring neurons. To delin—
eate clusters, we developed the flooding algorithm, which hierarchically identifies local basins of
the U—matrix from the global minimum to the maximum.

Availability and implementation: The python implementation of the SOM library is freely available
on github: https://github.com/bougui505/SOM.

Contact: michael.nilges@pasteur.fr or guillaume.bouvier@pasteur.fr

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

1 Introduction

Clustering is an ideal way to reduce huge high—dimensional data sets
generated by conformational sampling, facilitating their analysis
and Visualization. In general, clustering requires prior knowledge,
such as the relevant number of clusters. Furthermore, the encoding
of the structures in 3D Cartesian atomic coordinates depends
strongly on alignment, a problem when studying large conform-
ational transitions such as folding/unfolding. Our novel algorithm
to analyze conformational sampling addresses these points: (i) To
abolish the dependence on structural alignment, we use the matrix
of squared Euclidean distances as conformational descriptor. (ii) We

exploit the property of large self—organizing maps (SOMs) to spon—
taneously and clearly cluster similar conformations in basins, and
to separate dissimilar ones by barriers, by projecting the high-
dimensional exploration onto 3D landscape maps.

2 Approach

The conformational descriptor is derived from the matrix D of
squares of Euclidean distances dug between atoms 1' and 13. To speed
up the SOM training and reduce memory usage, we use a subset of
atoms (for proteins, the 11 Cu atoms) and the resulting n x 11 matrix

©The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1490

112 /§JO'S{eumo [p.IOJXO'SSUBUHOJUIOIQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

S OM analysis of macromolecular conformation

1491

 

 
    

_|

.|

Local similarity {A}

 

 

Extended starting H F
conformation L  I
and helical conformations

1E:

42

E
PDB-structure similarity (A)

 

 

Fig. 1. The square root of the U-matrix, showing the local similarity between structures, is plotted as a contour plot. The RMSD from the native structure is shown
in the prune-green heat-map. The U-matrix minima are shown with red dots and their minimum spanning linking tree with black lines. Some conformation sets
associated with local minima of interest are depicted in putty cartoons. The root mean square fluctuation (RMSF) of the backbone is represented by the width of

the main chain and the blue-green-red color code

D is condensed by computation of the eigenvectors of the covariance
matrix, C:

1 n n —2 —2
Cir = £2.21 212103;. — d,- ><di,- — d,> <1)

whose eigenvalues, Ni, vanish for i> 4 (Kloczkowski et al., 2009).
 is the average of dik on all the atoms la. Then, we obtain our
conformational descriptors by projection of D on N,-: P,- : D - Ni,
iE [1,...,4].

A toroidal map is used to make all neurons equivalent and avoid
border effects. Each neuron is a 4 n vector, 11 being the number of de—
scriptor atoms, initialized with a uniform distribution covering the
range of descriptor values. With our examples, a size of 50 X 50 neu—
rons resulted in densities of 10 to 20 conformers per neuron, which
proved appropriate for visualization of the U—matrix and analysis of
the data. For other systems, the size of the map may need to be ad—
justed to obtain a similar density. Training proceeds in two phases,
taking each input vector at least once per phase (by default once in
the first phase and twice in second) to identify the closest neuron
and update it and its neighborhood. The learning rate decreases ex—
ponentially from 0.50 to 0.25 in the first phase and from 0.25 to 0
for the second. The neighborhood function is a Gaussian, whose ra—
dius exponentially decreases from 6.25 (a quarter of the map toroid
radius) to 3.00 in the first phase, and from 4.00 to 1.00, for the se—
cond. These parameters ensured convergence for various datasets of
different sizes issued from molecular dynamics or other sampling

algorithms (Bouvier et al., 2014; Miri et al., 2014; Nivaskumar
et al., 2014; Spill et al., 2013).

SOMs are best visualized by the U—matrix (Unified distance ma-
trix), filled with U—values, the mean distance of each neuron and its
eight neighbors. Since our descriptor is in A2 units, we calculate the
square root of the U—matrix to display results in  units.

Since our SOMs are toroidal, clusters can straddle the matrix
border, making visual interpretation difficult. To overcome this, we
use the periodicity to position the U—matrix basins in an aggregated
way with the largest barriers outside. This is done by ‘flooding’,
inspired by the watershed algorithm (Meyer and Beucher, 1990).
Flooding starts from the global minimum of the U-matrix. Periodic
boundaries are applied to define neighbors. The water level rises
continuously until the whole map is covered, except when a new
basin is found. Then, the minimum of the new basin is identified by
steepest descent and the ﬂood continues from that point.

3 Implementation

The package is implemented in python and requires a PDB file and
a trajectory in CHARMM DCD format as input. It includes
the makeVectorsFromdcd .py utility to generate descriptors, the
SOM.py library to compute the SOM and the U—Matrix, and
the SOMclust.py library to perform flooding. A detailed

112 /810'S[12umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬂClllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

1492

G. Bouvier et al.

 

how—to is accessible: http://nbviewer.ipython.org/gist/bougui505/
9955459.

4 Results

The SOM algorithm was applied to the analysis of 15 us molecular
dynamics at 330 K of a simplified sequence of a 5 6—residue oc/ﬂ sub—
domain of the protein G (Guarnera et al., 2009) (Fig. 1). This
750 000—frame trajectory presents multiple folding and unfolding
events.

The map organizes the large diversity of explored conform—
ations, from extended forms to the native state. The U—matrix de—
picts the covered conformational space and its topology. The
minimum spanning tree between local minima reveals possible tran—
sition paths between conformational basins.

We found 53 conformational basins and corresponding minima.
The transition (i —> 1') probability ﬂux for each pair of basins (i, 1')
can be computed as explained in Guarnera et al. (2009). This
Markov model provides the distribution of the first passage times in
the folded basin. The distribution we obtain is similar to the one
found by Guarnera et al. (2009) and can be fitted by a single expo—
nential in a similar way, with a mean folding time of 137ns, com—
pared with 163 ns (see Fig. 81 in Supplementary Materials).

5 Conclusion

The package presented here exploits the ability of SOMs to spontan—
eously cluster macromolecular conformations. It provides a power—
ful tool for the analysis and visualization of the sampled
conformational space even when they cover extremely different
areas. It can also delineate more subtle conformational changes such
as catalytic mechanisms of an enzyme (Bouvier et al., 2014).
Furthermore, the method can be applied to sparser sampling as in
Nivaskumar et al. (2014) with only 3900 conformations. The SOM
algorithm is a non-linear dimensionality reduction technique, in
contrast to linear approaches such as principal component analysis.

This is of major importance for the study of highly non-linear proc-
esses such as folding/unfolding. The SOM computation effort scales
linearly with data size and this enables us to cluster even massive
numbers of conformations. This is very important given the ever
increasing length of simulations. It is largely automatic and has only
very few parameters, which we have optimized for this type of appli-
cation. The good agreement with the previous study by Guarnera
et al. (2009) on the same trajectory is highly satisfying, in particular
considering the fact that our method requires no interventions. The
SOM library is very flexible and the conformational descriptors can
be tailored to different cases of conformational clustering and
analysis.

Funding

This work was funded by the European Union (FP7—IDEAS- ERC 294809 to
M.N.). ND. is supported by an AXA Research Fund doctoral fellowship.

Conﬂict of Interest: none declared.

References

Bouvier,G. et al. (2014) Functional motions modulating vana ligand binding
unraveled by self-organizing maps. ]. Chem. Inf. Model., 54, 289—301.

Guarnera,E. et al. (2009) How does a simpliﬁed-sequence protein fold?
Biophys. 1., 97, 1737—1746.

Kloczkowski,A. et al. (2009) Distance matrix-based approach to protein struc-
ture prediction. ]. Struct. Funct. Genomics, 10, 67—81.

Meyer,F. and Beucher,S. (1990) Morphological segmentation. ]. Visual
Commun. Image Representation, 1, 21—46.

Miri,L. et al. (2014). Stabilization of the integrase-dna complex by mg2 —1— ions
and prediction of key residues for binding hiV-1 integrase inhibitors.
Proteins, 82, 466—478.

Nivaskumar,M. et al. (2014). Distinct docking and stabilization steps of the
pseudopilus conformational transition path suggest rotational assembly of
type iV pilus-like ﬁbers. Structure, 22, 6 85—696.

Spill,Y.G. et al. (2013). A convective replica-exchange method for sampling
new energy basins. ]. Comput. Claem., 34, 132—140.

112 /§JO'S{eumo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

