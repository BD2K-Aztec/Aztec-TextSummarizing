APPLICATIONS NOTE

Vol. 27 no. 7 2011, pages 1041—1042
doi: 10. 1093/bioinformatics/btr063

 

Data and text mining

Advance Access publication February 16, 2011

Flower: extracting information from pyrosequencing data

Ketil Malde

The Norwegian Marine Data Centre, Institute of Marine Research, Bergen, Norway

Associate Editor: John Quackenbush

 

ABSTRACT

Summary: The SFF file format produced by Roche’s 454 sequencing
technology is a compact, binary format that contains the flow
values that are used for base and quality calling of the reads.
Applications, e.g. in metagenomics, often depend on accurate
sequence information, and access to flow values is important
to estimate the probability of errors. Unfortunately, the programs
supplied by Roche for accessing this information are not publicly
available. Flower is a program that can extract the information
contained in SFF files, and convert it to various textual output
formats.

Availability: Flower is freely available under the General Public
License.

Contact: ketil.malde@imr.no

Received on December 17, 2010; revised on January 27, 2011;
accepted on February 1, 2011

1 INTRODUCTION

After pyrosequencing was ﬁrst introduced (Margulies et al.,
2005), the use of this technology has grown rapidly. Data from
pyrosequencing can be analyzed with traditional tools for sequence
analysis (typically by ﬁrst converting data into the Fasta format),
but native formats usually contain more information and for many
analyses this information can be used to produce more accurate
results.

Pyrosequencing data from the Roche 454 sequencing technology
comes in the form of SFF ﬁles, a relatively compact, binary format.
This format contains the sequence of ﬂow values for each read,
corresponding to the light intensities, resulting from the ligation
process during sequencing. In addition, the SFF ﬁle contains the
base-called sequence with associated quality information, and an
index linking each called base to the corresponding ﬂow value. The
SFF ﬁle also contains clipping information for each read, and various
metadata.

Roche provides some utilities for working with SFF ﬁles, and
these have so far been the most convenient option for pipelines
like Pyronoise (Quince et al., 2009) and QIIME (Caporaso et al.,
2010) that need to access the raw ﬂow values and other information
from SFF ﬁles. But as Roche’s tools are not publicly available and
may not be modiﬁed or redistributed, this complicates distribution
of integrated pipelines. As a consequence, usage and development
of more effective analysis tools is hampered. Other tools like
3 f f _extract (Jose Blanca, unpublished), a utility supplied with
the Mira assembler (Chevreux et al., 1999), is limited to extracting
sequence information.

Flower is an efﬁcient, portable and freely distributable software
utility that reads SFF ﬁles, and outputs information in textual form.

It uses an independent reimplementation of the SFF format based
only on published documentation (Roche, 2009), and is freely
redistributable and modiﬁable under the General Public License.

2 FEATURES

Flower is implemented as a command line tool that reads one or
more SFF ﬁles, and produces output in one or more formats, either
to ﬁles or to standard output.

The default output format is a textual representation of each read
in the SFF ﬁle. The information is presented as one ﬁeld per line,
a tab character separates the label from the contents. Some ﬁelds
are optional, so if for instance the read name does not follow 454
encoding conventions, no Info ﬁeld will be present. An example
of this output (truncated in length) is shown in Figure 1.

An alternative output is the tabular ﬁowgram output (’-F’ option),
shown in Figure 2, that generates one line per ﬂow value, with read
name, ﬁowgram position, nucleotide and quality calls. Although
verbose, this makes it easy to link quality calling with the
corresponding ﬂow value.

Flower can also extract the sequence data to the Fasta format
(using the — f option), associated qualities (—q) and the Fastq (Cock
et al., 2010) format using either Phred (—Q) or Illumina (—I) type
qualities. Summary information about the contents of SFF ﬁles is
available as either the header information (with the —i option) or
one line per read (with —s).

One common graphical representation of a sequencing run is a
histogram of ﬂow values in the data (an example is shown in Fig. 3).
Although this is straightforward to calculate from the textual output,
ﬂower has speciﬁc functionality for accumulating these. Since the
output size is greatly reduced, this is faster.

SFF ﬁles contain trimming information, indicating parts of each
read that are either low quality or part of synthetic sequences
like adapter sequences or the four-letter key that preﬁxes each
read. Flower will by default output the trimmed sequence parts
as lower case letters and the untrimmed as upper case, but there
are also options for removing the unwanted sequence parts, with
the corresponding quality and ﬁowgram information. The —trim
option removes all trimmed sequence, and the —trimkey option
removes only the key. This affects all output options.

3 DISCUSSION

Running time depends to a large degree on the output formats
chosen, as some formats like textual or tabular generate a large
amount of output, and this dominates running time. For example,
converting an 2.1 GB SFF ﬁle (containing ~630 000 reads) to Fasta
or FastQ format takes about 20 s on a 3.4 GHZ Xeon, processing the
SFF ﬁle at about 100 MB/s, which is faster than a typical hard disk

 

© The Author(s) 2011. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/
by-nc/2.5), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 [3.10'811211an[plOJXO'SODBIIIJOJIItOlCl/[I(11111 IIIOJJ pepeolumoq

9IOZ ‘09 lsnﬁnV uo ::

K.Malde

 

>DZXOXNV01ESQXY
Info: 2006—03—06 08:09:13 R1 (1850,2260)
Clip: 5 126
Flows: 1.02 0.20 1.04 0.19 0.10 1.00 0.14 7.28 1.05 3.68 0.13 0.33 1.93 3.82 0.12 0.07 3.00
Index: 1 3 6 8 8 8 8 8 8 8 9 10 10 10 10 13 13 14 14 14 14 17 17 17 18 21 22 24 27 30 30 32
Bases: tcagGGGGGGTAAAATTAAAATTTATAGCAAGTAAATTCATGGTATCGAAGGCCTTTGATTGGCGGATTTCTTCCATATCAAGAT...
Quals: 28 28 28 42 32 22 16 11 6 2 28 38 32 17 2 33 23 39 32 18 4 38 31 12 23 28 27 28 26 28

Fig. 1. Example textual output for one read. The Info ﬁeld displays the information embedded in the read name, and includes date, time and picotiter plate

region and coordinates.

DZXOXNVOlESQXY 1 .02 28

DZXOXNVOlESQXY 2 20

DZXOXNVOlESQXY 3 .04 28

DZXOXNVOlESQXY 4 19

DZXOXNVOlESQXY 5 10

DZXOXNVOlESQXY 6 .00 28

DZXOXNVOlESQXY 7 14

DZXOXNVOlESQXY 8 .28 42,32,22,16,11,6,2

DZXOXNVOlESQXY 9 .05 28

DZXOXNVOlESQXY 10 38,32,17,2
DZXOXNVOlESQXY 11 13
DZXOXNVOlESQXY 12 33
DZXOXNVOlESQXY 13 .93 33,23
DZXOXNVOlESQXY 14 82 39,32,18,4
DZXOXNVOlESQXY 15 12
DZXOXNVOlESQXY 16 07
DZXOXNVOlESQXY 17 .00 38,31,12
DZXOXNVOlESQXY 18 .23 23

O P a Q Q P a Q Q P HIQ O m ﬂlQ O m H
o H w o o w H o o w H q o H o o H o H
o
m

DZXOXNVOlESQXY 19

Fig. 2. Example tabular output. The columns are read name, ﬂow number,
nucleotide (lower case if masked), ﬂow value and list of associated quality
values.

 

 

I
untrimmed

trimmed ----- --

 

 

 

 

Fig. 3. Plot showing the ﬂow values before and after trimming, using the
—h option.

can deliver it. Generating text output for the same ﬁle is substantially
slower at 476 s.1

 

1See the ﬂower web page for a performance comparison of alternative
programs.

Although it is likely that these numbers can be improved
somewhat, in most cases any subsequent analysis will be much more
computationally expensive. The memory footprint is generally low
(less than 5 MB resident size as measured by top in the experiments
described above) and, as ﬂower works incrementally (streaming),
memory consumption is independent on total input or output size.

4 AVAILABILITY

Flower is available under the General Public License, and is freely
available for any purpose. It may be modiﬁed, and the modiﬁed
version is redistributed according to the conditions in the license.

Flower is implemented in Haskell, and the source code is available
from the Hackage repository at http://hackage.haskell.org/package/
ﬂower. Further documentation can be found at http://bi0haskell.0rg/
Applications/ﬂower.

ACKNOWLEDGEMENTS

I would like to thank Susanne Balzer, Christopher Quince and Erick
Matsen for valuable suggestions and discussion.

Funding: This work is supported by The National Program for
Research in Functional Genomics in Norway (FUGE) and the
Research Council of Norway.

Conﬂict of Interest: none declared.

REFERENCES

Caporaso,J.G. et al. (2010) QIIME allows analysis of high-throughput community
sequencing data. Nat. Methods, 7, 335—336.

Chevreux,B. et al (1999) Genome sequence assembly using trace signals and additional
sequence information. In German Conference on Bioinformatics.

Cock,P.J.A. et al (2010) The Sanger FASTQ ﬁle format for sequences with
quality scores, and the Solexa/Illumina FASTQ variants. Nucleic Acids Res., 38,
1767—1771

Margulies,M. et al. (2005) Genome sequencing in microfabricated high-density picolitre
reactors. Nature, 437, 376—380.

Quince,C. et al. (2009) Accurate determination of microbial diversity from 454
pyrosequencing data. Nat. Methods, 6, 639—641.

Roche (2009) Genome Sequencer FLX System Software Manual, version 2.3, General
Overview and File Formats. Roche/454 Life Sciences.

 

1 042

112 Bro'slcumofplogxo'sopcuuogutotq/ﬁd11q wort popcolumoq

9IOZ ‘09 lsnﬁnV uo ::

