Bioinformatics, 32(7), 2016, 984—992

doi: 10.1093/bioinformatics/btv751

Advance Access Publication Date: 6 January 2016
Original Paper

 

Genome analysis

SV—Bay: structural variant detection in cancer
genomes using a Bayesian approach with
correction for GC-content and read mappability

Daria lakovishina‘, Isabelle Janoueix-Lerosey2'3,

Emmanuel Barillot2'4'5'6, Mireille Regnier1 and Valentina Boeva2,4,5,6*

1lNRlA Projet AMIB, Ecole Polytechnique, Palaiseau, France, 2lnstitut Curie, Centre De Recherche, Paris, 3Inserm,
U830, Department Genetics and Biology of Cancers, Paris, France, 4lnserm, Department of Bioinformatics,
Biostatistics, Epidemiology and Computational Systems Biology of Cancer, U900, Paris, France, 5Mines ParisTech,
Centre for Computational Biology, Fontainebleau, France and 6PSL Research University, Paris, France

*To whom correspondence should be addressed.
Associate Editor: Benjamin Raphael

Received on 19 March 2015; revised on 10 November 2015; accepted on 20 December 2016

Abstract

Motivation: Whole genome sequencing of paired—end reads can be applied to characterize the
landscape of large somatic rearrangements of cancer genomes. Several methods for detecting
structural variants with whole genome sequencing data have been developed. So far, none of
these methods has combined information about abnormally mapped read pairs connecting rear—
ranged regions and associated global copy number changes automatically inferred from the same
sequencing data file. Our aim was to create a computational method that could use both types of
information, i.e. normal and abnormal reads, and demonstrate that by doing so we can highly
improve both sensitivity and specificity rates of structural variant prediction.

Results: We developed a computational method, SV—Bay, to detect structural variants from whole gen—
ome sequencing mate—pair or paired—end data using a probabilistic Bayesian approach. This approach
takes into account depth of coverage by normal reads and abnormalities in read pair mappings. To esti—
mate the model likelihood, SV—Bay considers GC—content and read mappability of the genome, thus
making important corrections to the expected read count. For the detection of somatic variants, SV—Bay
makes use of a matched normal sample when it is available. We validated SV—Bay on simulated data—
sets and an experimental mate—pair dataset for the CLB—GA neuroblastoma cell line. The comparison of
SV—Bay with several other methods for structural variant detection demonstrated that SV—Bay has bet—
ter prediction accuracy both in terms of sensitivity and false—positive detection rate.

Availability and implementation: https://github.com/lnstitutCurie/SV—Bay

Contact: valentina.boeva@inserm.fr

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

Whole genome sequencing (WGS) has become routine for detection
of both small and large somatic mutations, i.e. point mutations,
small indels and structural variants (SVs) in cancer genomes. Paired—
end sequencing of mate—pair libraries is often employed When the

©The Author 2016. Published by Oxford University Press.

aim of the study is the detection of large SVs, i.e. variants of greater
length than the read length (Boeva et 61]., 2013; Pleasance et 61].,
2010; Stephens et 61]., 2009, 2011). A long insert size of mate-pair
libraries (usually 3—4 kb) allows for high physical coverage of SV
junctions.

984

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

112 /§JO'S{eu1no [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

S V-Ba y: a method for structural variant detection

985

 

Each type of large SVs (translocation, duplication, deletion, in-
version, etc.) corresponds to a particular paired—end mapping signa-
ture (PEM signature) (Zeitouni et 61]., 2010). As such, deletions are
characterized by a larger than expected distance between mapped
paired reads (insert size), while insertions have an insert size shorter
than expected (Supplementary Fig. S1). Additionally, SVs often re—
sult in a change of copy number status around the breakpoint junc—
tion, which is reflected in changes in read depth of coverage (DOC).
For instance, deleted regions have a relatively low DOC, whereas
duplicated regions are characterized by high DOC (Boeva et 61].,
2011). Thus, differences in DOC and abnormal positioning of
mapped reads often indicate the same genomic abnormality (e.g., a
deletion or a tandem duplication). However, there has been no effort
made to combine these two types of information into one unified
computational approach.

Most of the current SV detection approaches can be classified
into three categories: methods based on (i) PEM signatures,
(ii) DOC and (iii) split read mappings (Medvedev et 61]., 2009). Each
of these approaches has its limits in terms of the type and size of SVs
that it is able to detect.

PEM—based algorithms can be grouped into two categories:
those based on read clustering, and those based on fragment
length distribution. The former identify discordant PEMs as PEMs
with unexpected orientation or insert size, cluster them and apply
statistical tests to validate candidate clusters (Hormozdiari et 61].,
2009, 2010; Korbel et 61]., 2009; Sindi et 61]., 2009; Zeitouni et 61].,
2010), whereas the latter compare the observed insert—size distri—
bution of all read pairs in a given window versus the expected dis—
tribution. Windows with a significant proportion of read pairs
having unexpected insert—sizes are annotated as containing SVs
(Lee et 61]., 2009). In some cases, the same package, e.g.
BreakDancer (Chen et 61]., 2009), provides two complementary
methods for SV detection: clustering—based (BreakDancerMax)
and distribution—based (BreakDancerMini) to detect large and
small size SVs, respectively.

DOC—based methods detect regions of gain and loss in the gen-
ome using DOC normalized for GC—content bias (Boeva et 61].,
2011, 2012; Yoon et 61]., 2009). A deviation from the expected DOC
suggests putative gain or loss of genomic material. DOC—based
methods do not provide information about the adjacency of DNA
regions involved in copy number changes. Thus, such methods are
not able to indicate the type of SV (e.g. tandem duplication, frag—
ment reinsertion, translocation) causing genomic loss or gain.
Additionally, the resolution of such methods rather is low for low
DOC datasets: a 30x coverage dataset allows approximately a reso—
lution of 1 kb for rearrangement breakpoints.

Split—read—based methods use partial read alignments for SV de—
tection (Schroder et 61]., 2014; Trappe et 61]., 2014; Wang et 61].,
2011). Although such methods may be efficient for data with high
read coverage, they may fail to identify SVs with breakpoints
located in repetitive elements of the genome. Ideally, these types of
approach should be combined with paired—end signatures; this idea
was implemented in SVMerge (Wong et 61]., 2010), PRISM (Jiang
et 61]., 2012), Meerkat (Yang et 61]., 2013), SMUFIN (Moncunill
et 61]., 2014) and DELLY (Rausch et 61]., 2012).

Combining information about discordant PEMs with changes in
DOC is a promising solution for the SV detection problem.
Probabilistic models integrating both the DOC signal and PEM sig-
natures provide higher specificity at equal or greater sensitivity than
tools that simply use paired—end signatures (Escaramis et 61]., 2013;
Handsaker et 61]., 2011; Layer et 61]., 2014; Oesper et 61]., 2012; Qi

and Zhao, 2011; Sindi et 61]., 2012). However, most of these meth—
ods do not take into account certain important parameters that
affect read count for both normal and abnormal mappings:
GC—content and read mappability. Another general drawback of the
majority of these methods is their lack of ability to detect all possible
types of SV that can be present in cancer data including co-amplifi-
cations, tandem duplications with inversions, linking insertions, etc.

Here, we propose a Bayesian framework for SV detection using
paired-end or mate—pair libraries, implemented as the software
SV—Bay. In this framework, we combine both PEM signatures and in—
formation about changes in DOC in regions flanking each candidate
rearrangement. Our method takes into account GC—content and
mappability. The use of a Bayesian framework based on both PEM
and DOC information allows us to significantly decrease the level of
false positive predictions while retaining high sensitivity.
Additionally, SV—Bay infers 15 different types of structural variant
from the detected novel genomic adjacencies (Supplementary Fig. S1).

2 Methods

SV—Bay uses a Bayesian formulation to assess the likelihood of an
SV. To this end, SV—Bay combines information about abnormal
PEM signature and DOC. SV—Bay separately analyzes whether each
cluster of abnormally mapped paired reads is a part of a true re—
arrangement (novel genomic adjacency) and then combines closely
located genomic adj acencies into complex SVs. The method includes
several pre—processing and post—processing steps (Fig. 1). The
Bayesian model is applied at the level of detection of novel genomic
adjacencies (explained in detail in Section 2.5). Sections 2.1—2.4 pro-
vide elements necessary to the understanding of the constructed
Bayesian model. The procedure for selecting the likeliest breakpoint

r q- -+ «ii— I 4— Ir Mapped reads:
.- q— -+ «l— —’r 4-

II- - . .
i- 4— —i- «q— r 1— p + paired-ends or mate-pairs

:h I I I
3 Estimation of normal size
% L and annotation of abnormal
Ei- read pairs
u. Insert Size
I I I
3E Estimation of
ma GEE-content bias
CCU
GC-content

I I I
 ' Clustering of
abnormal read pairs

 

" " Application of a Bayesian
C 5-5: 5 . 4 h... 5 I E " model to ﬁlter out
“' "' "' "‘ false candidate Stats
I... I I I»
  — Inference of complex Sluts
4. '____x  from the links

Fig. 1. Outline of SV-Bay. SV-Bay evaluates the insert size distribution and
identifies the default orientation of reads in pairs. It applies this distribution to
annotate read pairs as normal and abnormal. The latter may correspond to
novel SVs in the genome. By calculating the density of normal reads along
the genome (in copy neutral regions), SV-Bay evaluates the GC-content de-
pendency bias that will be used in the Bayesian model

112 /310'spaumo [p.IOJXO'SOTlBIIHOJUTOTQ/ﬁdllq 11101; popeoplmoq

9IOZ ‘09 lsnﬁnv uo ::

986

D. Iakovishina et al.

 

position without performing a local read assembly, the order in
which candidate genomic adjacencies are tested for being false posi—
tives, and the way we use a normal control sample are explained in
Supplementary Methods. Section 2.6 describes how complex re—
arrangements are inferred using closely located novel genomic
adjacencies.

2.1 Definition of normal insert size of paired reads and
annotation of normal and abnormal read pairs

We define normal paired reads as reads with the expected orienta—
tion and insert size. The expected orientation is defined by the
technology used to generate and sequence the DNA fragment li-
brary: inwards for paired—end libraries, outwards for Illumina
mate-pair libraries; this orientation is automatically detected by
SV—Bay. To get the shape of the fragment length distribution, we
analyze insert size (the distance between the leftmost position of
the left read and the rightmost position of the right read) of read
pairs with expected read orientation. By default, SV—Bay annotates
as ‘normal pairs’ read pairs with both reads mapped to the same
chromosome with insert size within the 99% of insert size distribu—
tion with the expected read orientation. The remaining read pairs
are annotated as ‘abnormal’. We also define ,u (the median insert
size) and 0' (standard deviation of insert size). We denote the min—
imal and maximal insert sizes of a normal read pair as 1min and
lmaX, respectively. We also discard PCR duplicates as read
pairs with identical up to 12 bp start and end positions (12 specified
by the user).

2.2 Estimation of the expected number of read pairs per
position and genomic region

For calculation of likelihood probabilities used in the Bayesian
model, we need to estimate the expected number of reads per region
given the GC—content and mappability. SV—Bay accepts read align—
ment BAM files generated by BWA option ‘aln’ (Li and Durbin,
2009). For each read pair, BWA provides information about the
mapping quality for a pair and the uniqueness of mapping of each
read within the pair.

2.2.1. Calculation of the expected number of read pairs per position
and region for normal reads

For normal reads, we assign a mappability of 1 to a given position i
(M,- : 1) if the k-mer starting at position i in the reference genome is
unique up to m mismatches in the reference genome (m defined by
the user, default value m = 2). Otherwise, we assign mappability of
0 (M,- = 0). The number of mapped reads per position and per re—
gion may highly depend on GC—content (Benjamini and Speed,
2012). Taking this into account, we can define the expected number
of reads per genomic region [a, b] (Ejaabj) as follows (see
Supplementary Methods):

Elana“ = ZfzaMi - WMGCUD, (1)

where or is the number of copies of region [a,b] ( or = 2 for auto—
somal positions in diploid genomes), GC(i) the GC—content for pos—
ition i of the reference genome (i.e. the fraction of C and G
nucleotides in a window of size M starting at i) and 2(x) the average
number of read pairs starting per mappable position with a given
GC—content x in a region present in one copy. The GC—content of a
given position is evaluated in a window of length ,u following the ob—
servation of Benjamini and Speed (2012) that the best window size

for GC—content bias correction corresponds to the average fragment
length.
Parameters 2(x) can be empirically evaluated as follows:

RX) 2 22:1 Ti‘Oi/“i‘1{gc(i): x}
21.21 M,- - I{GC(1) : x}

 

7 (2)

where L is the genome length, or,- the number of genomic copies for
position i, O,- the observed number of normal read pairs mapped to
position i and I {GC(i) : x} the indicator that GC—content at pos—
ition i is equal to x. In practice, to evaluate 2(x), we do not consider
all genomic positions. Instead, we use a large enough random subset
so that we can evaluate 2(x) up to the third decimal place
(Supplementary Methods). For the tumor genome, we select pos—
itions coming from copy neutral regions, i.e. regions with copy num—
ber or,- equal to the main ploidy of the tumor genome. The selection
of these regions is based on the output of Control—FREEC (Boeva
et al., 2011, 2012), included in the SV—Bay pipeline.

To account for possibly mismapped reads in homozygous dele—
tion regions, we modify formula (1) for or = 0:

E)a,bj,or=0 :  _ a) ' Nabnormal/La 

where L is the genome length, and Nabnormal the total number of ab—
normal read pairs, which approximates the number of incorrectly
mapped read pairs in a given experiment.

2.2.2. Calculation of the expected number of read pairs per position
and breakpoint for abnormal reads
To calculate the expected number of read pairs per position for ab—
normal reads, we make some adjustments to formula (1). Here, we
consider only read pairs with unique mapping of both reads. The
mappability value per position is now defined as

M.- = M.- - (33:, Mi) /(2c), (4)
where [u — c, 11—)— c] is the region in which we expect to map the
right—most mate of the left—most read in a pair; 6 is defined as
c : x/30' (Supplementary Fig. S2 _and Supplementary Methods).
Using the redefined mappability_M,-, we reevaluate the expected
number of read pairs per position 2(x):

x 2 21:1 Mi @i/W ' 1{GC(i) = x}
:52, M,- -I{GC(z‘) = x}

 

E

A
V

(5)

where O,- is the observed number of read pairs mapped to position i
with the left—most read such that both reads in the pair are uniquely
mappable.

For a breakpoint junction connecting chromosomes A and B, we
can now evaluate the expected number of abnormal fragments span-

break

ning breakpoints x A and xgreak

on chromosomes A and B, respect—
ively. Without loss of generality, we assume that the junction
connects a region upstream to xgreak to a region downstream of
xgrcak. Then, the expected number of abnormal fragments spanning

break,— break,+
7 x3

the breakpoints E (xA > can be calculated as:

break
_ E :xA Tr ' break,— break,+
Exgreak,—7xl;reak,+7y>0 — izxgreak_lmax+r M1(xA , xB ) V

_E(GC(Z-,xgreakraxgreakﬁ» .pansert Size 2 xgreak _ 1' + 1,)7

(6)

where MﬂxgreakaEreak’Jr) is calculated similarly to M,- and

GC(i, xgreak’: xgreak’Jr) similarly to GC(i) with the exception that in-
stead of the continuous genomic region starting at i, we use stitched

112 /310's112u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

S V-Ba y: a method for structural variant detection

987

 

break break
A B

regions upstream x and downstream x . Here, 1» is the num—
ber of alleles involved in the SV, and r the read length.

Similarly to (3), we approximate the expected number of read
pairs located at a distance less than [max to a breakpoint due to mis—

alignment or artefacts 1n llbrary preparatlon as Eereak,—7xlgreak,+7y:0:

Exiteak—a xﬁreak’+,y=0 : [max ' Nabnormal/L‘ 

2.3 Clustering of abnormal reads to detect candidate
novel genomic adjacencies

In order to detect candidate SVs, we group abnormal read pairs in
clusters potentially corresponding to simple SVs or novel genomic
adjacencies. Read pairs corresponding to the same novel genomic
adjacency have similar insert size and identical orientation. Clusters
of such read pairs are called links. We cluster read pairs in a way
that all read pairs corresponding to a genomic adjacency of any type
(inversion, deletion, inverted duplication, etc.) are clustered together
in one link. The clustering is based on two parameters: the difference
in insert sizes, I, and the difference in the read coordinates D, where
read coordinates are characterized with respect to the midpoint be—
tween read starts. Details of the clustering procedure are provided in
Supplementary Methods.

2.4 Definition of flanking regions

Each unbalanced SV will change the copy number (and DOC) in re-
gions flanking the SV breakpoints. To include the DOC in these re—
gions in the Bayesian model, we formally define four flanking
regions for each link.

Any novel genomic adjacency has two breakpoints in the reference
genome, with the exception of small insertions and mirror duplica-
tions (Supplementary Fig. S1). Without loss of generality, we further
assume that there are two breakpoints per link. We define two ﬂank-
ing regions for each breakpoint: one upstream and one downstream
of the breakpoint. We denote these (A1, A2) and (B 1, B2) for the left-
most and rightmost breakpoints, respectively (Supplementary
Fig. S3). Each ﬂanking region should not overlap any SV that could
affect the number of normal read pairs within this region and should
not include the interval around the breakpoint itself, where we expect
to observe a gap in normal DOC (Sindi et al., 2012). We call these
small regions around the two breakpoints ‘safety intervals’: 5,, and Sy
(see Supplementary Methods for formal definitions).

The ﬂanking regions A1 and B1 are defined as the largest regions
upstream of the safety intervals 5,, and Sy that do not contain any
safety regions of other links. Similarly, the ﬂanking regions A2 and
B 2 are defined as the largest regions downstream of the safety inter—
vals 5,, and Sy that do not contain any other safety intervals.

Closely located links may have overlapping safety intervals. In
this case, we keep the corresponding ﬂanking regions empty. Also,
we do not allow ﬂanking regions to span centromeric regions and
long unassembled poly—N regions.

2.5 Bayesian model

We aim to determine the likelihood of a given link to be a part of a
real SV and estimate the number of alleles (1») involved in the given
genomic adjacency. To this end, for each link representing a candi-
date genomic adjacency, we calculate the probability of a model
Malvalvf’lvf’l”, where a1,oc2,ﬂ1,ﬂ2 are copy numbers in ﬂanking re-
gions A1, A2, B1, B 2. The parameters of the model have to satisfy to
the following constraints:

061 = 062i)”;ﬂ1 = ﬂziVa (8)

where the sign before 1» depends on the orientation of reads in the
corresponding link. In cases where some flanking regions are empty
or A2 and B1 coincide (e.g. in case of short deletions), the number of
parameters in the model is reduced.

The aim of our Bayesian approach is to match observations, i.e.
the number of abnormal read pairs in the link and the number of
normal pairs in the flanking regions, with a model Malialif’lif’l”.
According to Bayes’ rule the probability of model M’ given observed
data A is:

/ P(A|M’)P(M’)
“M '9 2MP<AIM>P<M>' (9)

Observations A are formalized as A : {nA1,nA,,nBI,nB,,n1—},
where nA1,nA,,n31,nB, are the number of mapped read pairs in
ﬂanking regions A1, A2, B1, B2, respectively, and nr the number of
abnormal read pairs in the link. In the current version of the algo—
rithm, we assume probabilities P(MV>0) of every model M where
y > 0 to be identical. We expect P (MPG) to be much lower than
P(MV=0), as we suppose that there are much less links corresponding
to real SVs than to read mismappings and artefacts in library prepar-
ation. To include this intuition, we introduce a user—defined param—
eter for the expected number of true SVs in the dataset (ESV, default
value 1000). Then, the probabilities P(MV>0) and P (MVZO) are
assigned as follows: P(MV>0) : min(E5V/N1inks, 1) and
P (MVZO) : 1 — P(MV>0), where Nlinks is the total number of links.

In the general case (A1, A2, B1, B2 are not empty and do not
overlap), the conditional probability P(A|M) can be factorized:

P(AIM°“’°‘”B“I’2”) = P("A1|0<1) ‘ P("A2|0<2) 90131031) ' P0132032) 'P("r|v)-
(10)

To calculate these probabilities, we assume that the read count
follows a Poisson distribution with the mean equal to the expected
number of reads per region, calculated by formulas (1) and (3) for
normal read pairs in ﬂanking regions A1, A2, B 1, BZ, and formulas
(6) and (7) for abnormal read pairs in the link:

P(nA1|oc1) : Pois(EA17a1;nA1), P(nA2 |oc2) : Pois(EA,7a,;nA,), (11)
P(n31  : POiS(EBiﬂ1 ; n31)? P(nBz  : POiS(EBzﬂz i "32): 
and Z POIS(Exl;reak7xléreak7y; 711"), 

where Pois(2;k) : ﬁfe—Wk! is the probability density function for
the Poisson distribution with mean 2. In (13), we assume that we
know the exact breakpoint position. In practice, we check several
sets of breakpoints and keep the one providing the highest likelihood
(Supplementary Methods). Since the total number of possible mod—
els to test is infinite, we limit ourselves to a set of the most plausible
models (Supplementary Methods).

At the end of this step, for each link, SV—Bay will detect the most
likely model to explain the observed read counts. When the eval—
uated number of alleles involved in the candidate adjacency is zero,
we remove the link as a false positive candidate.

2.6 Combination of novel genomic adjacencies into
complex SVs

When we have a list of novel genomic adjacencies validated by the
Bayesian approach, we combine them into simple and complex SVs
(Supplementary Fig. S1). For each link i, we define regions Cf‘ and
C? around breakpoints xgreak” and xgreak”: Cf‘ : [xgn’ak’i —21max,
xfzfeakr' + 21.nan and c? = [xgreakvi — Zlmax,x1§reak” + 21,..an If cf and

112 /310's112u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

988

D. Iakovishina et al.

 

C? do not contain breakpoints of others links, we annotate link i as
a simple SV: deletion, insertion, tandem duplication, inverted dupli—
cation, unbalanced translocation (Supplementary Fig. 81A).
Otherwise, we add all links with breakpoints occurring in Cf‘ or C?
to the set of links 9,. Then, we search for other links with break-
points located within 21max distance from any breakpoint of any link
in Q). When we cannot add more links to 9,, we annotate Q,- as a
complex structural variant (Supplementary Fig. S1B): inversion,
fragment re—insertion, balanced translocation, etc. The biological
relevance of many of the SV types that we have included in SV—Bay
has been demonstrated by several cancer studies (inverted duplica—
tions (Boeva et al., 2013), amplifications and co—amplifications
(Vogelstein and Kinzler, 2002), re—insertions and complex deletions
(Yang et al., 2013).

Amplifications of oncogenes (M YC, M YCN, ERBBZ, KRAS,
etc.) is a common phenomenon in cancer (Vogelstein and Kinzler,
2002). Such SVs result in the creation of dozens of copies of a given
genomic region (Supplementary Fig. S1B). In SV—Bay, we define the
default value for the minimal number of copies per amplification (or
co—amplification) as 10. SV—Bay separately infers genomic amplifica-
tions and other SVs. In this way, closely located amplifications and
other SVs cannot be mistakenly grouped together.

3 Results

We applied SV—Bay to simulated and experimental datasets and
were able to demonstrate that it had a higher prediction accuracy
than four other published methods: GASVPro (Sindi et al., 2012),
Lumpy (Layer et al., 2014) and the two most popular methods for
SV detection, BreakDancer (BreakDancerMax) (Chen et al., 2009)
and DELLY (Rausch et al., 2012). We have selected GASVPro and
Lumpy, since like SV—Bay, these tools take into consideration infor—
mation about DOC changes in the proximity of candidate break—
points. However, unlike SV—Bay, they consider only short proximity
of breakpoints while SV—Bay calculates read counts in maximally
large regions around the breakpoint, which increases the statistical
power of its probabilistic approach. In addition, GASVPro, Lumpy
and DELLY integrate split—reads into the analysis.

The version of each software and parameters used are summar—
ized in Supplementary Table S1. Lumpy was applied to paired—end
data only as it does not provide an option to run on mate—pair
datasets.

In the analysis below, we assumed that an SV calling method
correctly detected a given SV when (i) predicted breakpoints laid
within a certain distance d from the correct breakpoints, and
(ii) there was a match in read orientation. Distance d corresponded
to the maximal fragment length, i.e. 5179 bp for simulated mate—
pair data, 446 bp for simulated paired—end data, and 3542 bp for the
experimental mate—pair data.

3.1 SV—bay performance on simulated paired—end and
mate—pair datasets

To simulate tumor datasets, we used a combination of TGSim, soft—
ware we developed to simulate a tumor genome (https://github.com/
InstitutCurie/TGSim), and read simulation software PIRS (Hu et al.,
2012) (code.google.com/p/pirs/). To create a nucleotide sequence
corresponding to a normal control diploid genome, we modified the
reference human genome GRCh38/hg38 by adding 3 million hetero—
zygous SNPs, 315 000 small indels and 972 small inversions. To
simulate a matched tumor genome, we applied a sequence of gen—
omic rearrangements to the nucleotide sequence of the diploid

normal genome using TGSim. TGSim inserted into the normal gen—
ome ‘standard’ SVs (deletions, tandem duplications, insertions of
random sequences, inversions, translocations) but also “complex”
SVs, which are usually missed or incorrectly assembled by SV calling
tools (co—amplifications, tandem duplications with an inversion
of the duplicated unit, linking insertions and linking re-insertions,
Fig. 2). We created two simulated tumor genomes: a near—diploid
genome (T2) and a near—tetraploid genome (T4); the latter contained
approximatively 4 copies of each chromosome but had less genomic
rearrangements than the near—diploid genome (44 versus 114 SVs
corresponding to 62 and 147 novel genomic adjacencies, respect—
ively, Supplementary Tables S2 and S3). For each simulated tumor
genome, we performed two read simulation experiments: paired—end
(PE) and mate—pair (MP) read simulations denoted T2_PE, T2_MP,
T4_PE and T4_MP (Supplementary Table S4). The read simulation

Mirror duplication m

Donor . r

Rafi —1'11'J.:1‘71r.."'1111:.;‘111’...:.111 ..::':: ~

-::.:-:.':'. ,;'::t--:: 
Donor I ‘L r I

Linking insertion p1 ﬂ

Dal-Inf 5:'::::'5.':::::5”i::::|

  .-.-i.  
I ... ....  . . . . . . . . . . . ..  .  .. . .. 

Linking insertion
with inversion ( 1 ﬂ

Donor  

Ref. .. _ :.::.. 

 

Linking re-insertion

with inversion ( “ ﬂ 1 1|

Donor 

Raf. 5.: -:':.::.'-.'.::.:|5. .::'.. -:-.::.'.-.  ':::.:5:..::‘ '.::.:5-: 

Fig. 2. Visualization of several complex types of SV that can be recognized by
SV-Bay: mirror duplication, tandem duplication with inversion, linking insert-
ing, linking insertion with inversion, linking re-insertion, and linking re-inser-
tion with inversion. In addition to the represented SVs, SV-Bay is able to
recognize balanced and unbalanced translocations (with and without inver-
sion), amplifications and co-amplifications, simple inversions, direct tandem
duplications, and so on. (Supplementary Fig. S1)

112 /310's112u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

S V-Ba y: a method for structural variant detection

989

 

algorithm allowed us to take into account GC—content bias and ex—
perimental read error profile along the reads (Hu et al., 2012). The
corresponding parameters were taken from experimental neuro-
blastoma WGS datasets (Boeva et al., 2013). We also generated
matched normal datasets (Supplementary Table S4).

In the simulations, we expected that the average number of ab—
normal read pairs required to confirm each novel genomic adjacency
(physical coverage) would be higher for mate—pair than for paired-
end data (Supplementary Table S4). Thus, despite the fact that the
mate-pair library contained from 5 to 10 times less reads than the
paired—end one, we observed that in all cases but one all methods
tested were able to identify more correct SVs in the mate—pair data—
set (Fig. 3, Supplementary Tables S2 and S3). This observation sup—
ports the common choice of mate—pairs for annotation of structural
variants in tumor genomes, even though creating a mate—pair library
requires a more elaborate protocol.

SV—Bay achieved maximal recall on all the four simulated data—
sets and detected 125/147, 129/147, 34/62 and 59/62 correct novel
genomic adjacencies for T2_PE, T2_MP, T4_PE and T4_ME, re-
spectively (Fig. 3, Supplementary Tables S2 and S3). Of note, to con—
struct precision/recall curves, we run each method only once with
the most relaxed parameters; then, we used a threshold on the qual—
ity of predicted SVs provided by each tool. We confirm that the
choice of user—defined value for the expected number of true SVs in
the dataset (ESV) plays a limited role in the prediction accuracy by
SV—Bay (Supplementary Fig. S4). However, the user should consider
to change the value of this parameter to higher values in case of
interest in germline events or when analyzing chromothripsis cases.

In many cases, the recall provided by BreakDancer and DELLY
on simulated datasets was almost as high as the recall provided by
SV—Bay (Supplementary Tables S2 and S3). However, both

         
  
 

 

 

 

1.1:. A 1 U' — so-eay C
. GASVPro
0-5 '3 B — BreakDancer Max
1: i: — LUMP?
'E 0-5 E no — DELLY
U U
E a, a» Paired-Ends 35' ﬂ 4 Paired-Enos
“to To
o2  o.2 mm
no on
or o 3 I15 11.? 11.9 :11 In as or us
Recall Recall
1 o B 1 o D
so o s
E E
E or E. oo-
U I U I
E M Mate—Pairs $04 Mate-Pairs
' T2 ' T4
11.2 M
m at ca 11.5 o r as M 0:1 oi: ois olr ' us
Recall Recall

Fig. 3. Prediction accuracy on simulated data for BreakDancer, GASVPro,
Lumpy, DELLY and SV-Bay. Precision/recall curves for simulated paired-end
(PE) data, near-diploid genome T2 (A); mate-pair (MP) data, genome T2 (B);
PE data, near-tetraploid genome T4 (C); MP data, genome T4 (D). The results
for Lumpy are shown only for PE data. For all tools, we kept only SVs with
average insert size larger than 100 bp and 500 bp for PE and MP data respect-
ively. The total number of true genomic adjacencies: 147 for T2 and 62 for T4.
The total number of predictions: BreakDancer 1177 (T2_PE), 1711 (T2_MP),
197 (T4_PE) and 1787 (T4_MP); GASVPro 49069 (T2_PE), 6268 (T2_MP), 153
(T4_PE) and 56 (T4_MP), Lumpy 272 (T2_PE) and 171 (T4_PE), DELLY 636
(T2_PE), 6289 (T2_MP), 479 (T4_PE) and 16675 (T4_MP), and SV-Bay 204
(T2_PE), 231 (T2_M P), 66 (T4_PE) and 85 (T4_MP). See Supplementary Tables
82 and S3 for more detail

BreakDancer and DELLY gave a large number of false—positive pre—
dictions (Fig. 3). Overall, on simulated data SV—Bay demonstrated
better prediction accuracy than other tools both in terms of detec—
tion precision and recall.

SB-Bay can recognize and infer from novel genomic adjacencies
more types of complex SVs than other methods (Fig. 2). For in-
stance, using mate—pair data for the T4 genome all tools we tested
were able to identify novel genomic adjacencies corresponding to a
co—amplification (50 times) of several regions on chromosome 13.
However, only our method was able to group four different read
clusters related to this co—amplification into one complex SV.
SV—Bay was also the only method to group together clusters corres—
ponding to linking insertions and re—insertions we added to the
simulated tumor genome.

3.2 SV—Bay performance on a neuroblastoma mate—pair
dataset
To investigate the performance of SV—Bay on an experimental data—
set, we selected a mate—pair dataset from a neuroblastoma diploid
cell line CLB—GA recently sequenced using a mate—pair protocol to—
gether with a corresponding normal control (Boeva et al., 2013).
For this dataset, we recently performed SNP6 array experiment to
characterize genotype and copy number alterations independently
from WGS data. Also, for this cancer cell line, we had a set of 11
SVs validated by PCR and Sanger sequencing (Supplementary
Table SS). Most of the 11 validated SVs correspond each to two
breakpoints in the SNP array copy number profile. The following
SVs correspond to only one breakpoint: (i) the SV between the ALK
gene (chromosome 2p, 29 Mb) and a repetitive peri—telomeric se—
quence; the exact position of the latter could not be defined; (ii) the
SV between chromosomes 12q and 20q, as it corresponds to a more
complex SV on chromosome 12q (Fig. 4), and (iii) the inverted du—
plication at chromosome 5 q. Both validated SVs and 27 breakpoints
obtained by the analysis of Affymetrix SNP6 .0 datasets were further
used to check the performance of SV—Bay and compare it with
BreakDancer, DELLY and GASVPro. We excluded Lumpy from this
test as it is not able to analyze mate—pair data.

The total number of SVs predicted on this dataset by DELLY,
GASVPro and BreakDancer was significantly higher than the num-
ber of SVs predicted by SV—Bay (62822, 1648 and 5543 versus 765).

ﬁMh

Log Ratio CopyI
_'. I:l- —-

 

a a a a a are,

I?  El   1'? BreakDancer
‘? 3 '2'? 1'  1? 1"? ’5' “.1 ‘? ‘1'? ‘? GAE-Wm

'1' '1} '3' ‘3' DELLY

Fig. 4. Prediction sensitivity on experimental data (neuroblastoma cell line
CLB-GA mate-pair dataset). The structure of SVs identified by SVBay (red
links) explains well the change points detected in the Affymetrix SNP6.0 copy
number profile (black profile, short vertical bars indicate centromeres); abso-
lute copy numbers identified by GAP (Popova et al., 2009) are shown in blue.
Change points in the copy number profile are shown with long vertical bars
(explained with SVs predicted by SV-Bay: red, unexplained: grey). Green
question marks indicate copy number changes unexplained by each tool
tested. Purple question marks correspond to the cases where detected SVs
are likely to correspond to false positive predictions

112 /310's112u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

990

D. Iakovishina et al.

 

Only 88 SVs were predicted by all the methods (Supplementary
Fig. SS). First, we correlated these SVs with breakpoints in the copy
number profile calculated using an Affymetrix SNP6.0 array for
CLB-GA using the genotyping software GAP (Popova et al., 2009).
GAP identified 27 breakpoints in the genome of this neuroblastoma
cell line. Among them, 21 were explained by SVs predicted by SV—
Bay (Fig. 4, Supplementary Table S6). The same 21 breakpoints
were also explained by SVs discovered by BreakDancer and DELLY.
Among the 62 thousand DELLY’s predictions, there was also a
translocation explaining the breakpoints on chromosomes 3 and 10
missed by other tools; it was tagged ‘LowQual’ and included 2 read
pairs. In addition, DELLY predicted two SVs that could potentially
explain the presence of breakpoints on chromosomes 5 and 17; these
SVs were not detected by other tools. However, unless validated by
PCR these SVs do not seem to be accurate: they are confirmed only
by 2 read pairs, have a ‘LowQual’ tag in the output and their type is
unbalanced translocation where the second ends are located in
chromosomes 17q25 (79 Mb) and 18q12 (27 Mb). Both these re—
gions do not show any copy number change point according to the
SNP array analysis. Thus, the corresponding breakpoints are
marked by purple question marks (possible false positives) for
DELLY in Figure 4. GASVPro was able to identify SVs correspond—
ing to only eight breakpoints in the SNP array copy number profile
(Fig. 4, Supplementary Table S6).

Among the 11 experimentally validated SVs, 10 were success—
fully detected by SV—Bay, DELLY and BreakDancer (Supplementary
Table SS). These three methods missed only one translocation be—
tween the ALK gene and a repetitive region in a telomere as the in—
put data contained only one read—pair uniquely mapped to the
corresponding peri—telomeric repetitive region. In the future, we
plan to improve our approach by taking into account non—uniquely
mapped reads. This is expected to improve the sensitivity of predic—
tions. The GASVPro method was able to identify only five out of 11
validated SVs.

Although BreakDancer, DELLY and SV—Bay had equally good
sensitivity on this experimental data, SV—Bay has a much better posi—
tive predictive value (or precision): the total number of predictions
in the SV—Bay output was 8 times less than in the output of
BreakDancer and 85 times less than in the output of DELLY. This is
explained by the use of the Bayesian probabilistic model in SV—Bay
in addition to the clustering of the abnormal reads employed in both
methods. Among SV—Bay SV calls, 173 were not detected by any
other method. The majority of them, 93%, corresponds to small size
events (up to 5 kb), may represent false—positive discoveries and can
be filtered out using a threshold on the SV size.

Even without using split reads, SV—Bay significantly outper—
formed BreakDancer in the identification of the exact breakpoint
position (Supplementary Table SS): the average distance between
validated and predicted breakpoints was 654 bp versus 1906 bp for
SV—Bay and BreakDancer, respectively (Wilcoxon Rank Sum two—
sided P—value < 0.01). However, GASVPro and DELLY were able
to provide a better breakpoint resolution by taking into account split
reads (average distance between validated and predicted breakpoints
314 and 373 bp, P—value for comparison with SV—Bay 0.2 and 0.01).

3.3 Basic features of SV—bay and execution time

The comparison of SV—Bay with other SV calling methods demon—
strated clear advantages of SV—Bay: SV—Bay outputs more true SVs
with lower false positive rate and is able to group links into more
complex SVs such as fragment insertions or amplifications. The major
differences between SV—Bay, BreakDancer, GASVPro, Lumpy and

DELLY are summarized in Table 1. Unlike Lumpy, SV—Bay accepts
both paired—end and mate—pair data. SV—Bay is the only method that
corrects expected number of read pairs per link for GC—content and
mappability, which are factors highly affecting read depth at a given
region (Boeva et al., 2011). Also, similarly to Lumpy and
BreakDancer, SV—Bay can use BAM files generated from constitutive
DNA in order to filter out read alignment artefacts and germline SVs.
SV—Bay is written in Python with the possibility to parallelize the
analysis for different chromosomes. However, even without parallel—
ization, SV—Bay demonstrated a very reasonable execution time
(Table 2). BreakDancer and DELLY were the fastest tools among
the five. For both paired—end and mate—pair simulated datasets, SV—
Bay showed the third best execution time: less than 2—4 h for mate-
pair and paired—end data, respectively. GASVPro took more than 12
days to analyze the mate—pair dataset. The reason for this may be
the long insert size of mate—pair data (more than 4 kb in our case)
and thus the range of all possible breakpoint positions per SV was
extremely large and required a significant amount of time to be ana—
lyzed. SV—Bay also attempts to predict the most likely breakpoint
position based on the data for each SV. However, in the case of large
intervals in which the breakpoint can be possibly located, SV—Bay
limits its analysis to only 10 equally spaced positions within the
interval. Although this limits the breakpoint detection accuracy, it
significantly speeds up the execution time for mate—pair libraries.

4 Discussion

We have proposed a new method SV—Bay for the detection of large
SVs in cancer genomes. SV—Bay is based on a Bayesian probabilistic
model. This allows it to be both sensitive and selective, discarding

Table 1. Outline of features of SV-Bay and other SV calling
methods

 

SV—Bay BreakDancer GASVPro Lumpy DELLY

 

+a _

+ +

Uses DOC information + —
Uses split reads — —
Uses read mappability
Uses GC—content

Detects complex SVsC

iltr++

Uses normal controls

++

+
+
+
+
Processes PE libraries +
+

+++
.1.
+++

Processes MP libraries

 

Abbreviations: paired-ends (PE); mate-pairs (MP).

aLumpy removes regions with extremely high read coverage.

bGASVPro uses read mappability information only to estimate the number
of abnormal read pairs spanning the breakpoint position, it does not use it to
correct DOC in ﬂanking regions.

cComplex SVs include co-ampliﬁcations, linking insertions, tandem dupli-

cations with inversion, etc.

Table 2. Execution time on simulated datasets

 

SV—Bay BreakDancer GASVPro Lumpy DELLY

 

Mate—pair library 1 h 55 m 32 m 298 h 47 ma N/A 45m
Paired—end library 3 h 58 m 19 m 4 h 39 m 4h02 1h44

 

aThe extremely long execution time of GASVPro on mate-pair data is ex-
plained by the use of split reads to reﬁne the breakpoint position. In mate-pair
data, the range where the breakpoint can be located according to abnormal
read mappings can be extremely large; testing all possibilities requires many
hours.

112 /810's112u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

S V-Ba y: a method for structural variant detection

991

 

many artefact clusters of mismapped read pairs. Indeed, in compari—
son with other methods, SV—Bay demonstrated a noticeably better
SV detection accuracy both for simulated and experimental datasets.
SV—Bay not only detects novel genomic adjacencies but also, where
possible, groups them into more complex SVs such as co—amplifica—
tions, linking insertions, tandem duplications with inversion, etc.
Overall, SV—Bay allows the user to skip such data post—processing
steps like filtering out links with low number of fragments that do
not correspond to copy number changes, filtering out events present
both in the tumor and the matched normal control (artefacts and
germline SVs), and performing manual inference of complex SV
from the detected genomic adj acencies.

SV—Bay does not use split reads to improve the resolution of pre—
dicted breakpoints. There are two main reasons for this. First, the
read coverage on breakpoints can be sufficiently high only
for paired-end libraries, whereas we intended our method to also be
applicable to mate—pair data. Second, structural variants in cancer
often occur in low mappability repetitive regions or regions that
have partial homology; additionally, there can be insertions of one
of several genomic shards between two regions connected by a SV
(Boeva et al., 2013). These incidents reduce the capacity of read
mappers to align correctly reads coming from SV junctions.

Like other methods, SV—Bay is tolerant to a certain degree to
contamination of the tumor sample by normal cells. In the future,
we intend to extend our model to handle both high normal cell con-
tamination levels and be able to detect sub—clonal SVs when values
of tumour purity and sub—clonal cellularity are provided.

The current version of SV—Bay is able to analyze only one tumor/
normal pair at once. One of the interesting possible extensions to
our method would be to add the ability to analyze several tumour
datasets extracted from the same patient in order to increase the sen—
sitivity of SV detection.

5 Conclusion

We have presented SV—Bay, a computational method and software
to detect structural variants in cancer using whole genome sequenc—
ing data with or without matched normal control sample. SV—Bay
does not only use information about abnormal read mappings but
also assesses changes in the copy number profile and tries to associ—
ate these changes with candidate SVs. The likelihood of each novel
genomic adjacency is evaluated using a Bayesian model. In its final
step, SV—Bay annotates genomic adjacencies according to their type
and, where possible, groups detected genomic adjacencies into com—
plex SVs as balanced translocations, co—amplifications, and so on. A
comparison of SV—Bay with BreakDancer, Lumpy, DELLY and
GASVPro demonstrated its superior performance on both simulated
and experimental datasets.

Funding

This work has been supported by the French program ‘Investissement
d’Avenir’, action bioinformatique (ABS4NGS project), and by the French
research cluster Digiteo.

Conﬂict of Interest: none declared.

References

Benjamini,Y. and Speed,T.P. (2012) Summarizing and correcting the GC con-
tent bias in high-throughput sequencing. Nucl. Acids Res., 40, e72—e72.

Boeva,V. et al. (2013) Breakpoint features of genomic rearrangements in
neuroblastoma with unbalanced translocations and chromothripsis. PLOS
ONE, 8, e72182.

Boeva,V. et al. (2011) Control-free calling of copy number alterations in
deep-sequencing data using GC-content normalization. Bioinformatics, 27,
268—269.

Boeva,V. et al. (2012) Control-FREEC: a tool for assessing copy number and
allelic content using next-generation sequencing data. Bioinformatics, 28,
423—425.

Chen,K. et al. (2009) BreakDancer: an algorithm for high-resolution mapping
of genomic structural variation. Nat. Methods, 6, 677—6 81.

Escaramis,G. et al. (2013) PeSV-Fisher: identiﬁcation of somatic and non-som-
atic structural variants using next generation sequencing data. PLOS ONE,
8, e63377.

Handsaker,R.E. et al. (2011) Discovery and genotyping of genome structural
polymorphism by sequencing on a population scale. Nat. Genet., 43,
269—276.

Hormozdiari,F. et al. (2009) Combinatorial algorithms for structural vari-
ation detection in high-throughput sequenced genomes. Genome Res., 19,
1270—1278.

Hormozdiari,F. et al. (2010) Next-generation VariationHunter: combinatorial
algorithms for transposon insertion discovery. Bioinformatics, 26,
i3SO—i3S 7.

Hu,X. et al. (2012) pIRS: Proﬁle-based illumina pair-end reads simulator.
Bioinformatics, 28, 1533—1535.

Jiang,Y. et al. (2012) PRISM: Pair-read informed split-read mapping for base-
pair level detection of insertion, deletion and structural variants.
Bioinformatics, 28, 25 76—25 83.

Korbel,].O. et al. (2009) PEMer: a computational framework with simulation-
based error models for inferring genomic structural variants from massive
paired-end sequencing data. Genome Biol., 10, R23.

Layer,R.M. et al. (2014) LUMPY: a probabilistic framework for structural
variant discovery. Genome Biol., 15, R84.

Lee,S. et al. (2009) MoDIL: detecting small indels from clone-end sequencing
with mixtures of distributions. Nat. Methods, 6, 473—474.

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with
Burrows—Wheeler transform. Bioinformatics, 25, 1754—1760.

MedvedeV,P. et al. (2009) Computational methods for discovering structural
variation with next-generation sequencing. Nat. Methods, 6, 813—820.

Moncunill,V. et al. (2014) Comprehensive characterization of complex struc-
tural variations in cancer by directly comparing genome sequence reads.
Nat. Biotechnol., 32, 1 106—1 1 12.

Oesper,L. et al. (2012) Reconstructing cancer genomes from paired-end
sequencing data. BMC Bioinformatics, 13, 810.

Pleasance,E.D. et al. (2010) A small-cell lung cancer genome with complex sig-
natures of tobacco exposure. Nature, 463, 184—190.

Popova,T. et al. (2009) Genome Alteration Print (GAP): a tool to Visualize and
mine complex cancer genomic proﬁles obtained by SNP arrays. Genome
Biol., 10, R128.

Qi,]. and Zhao,F. (2011) inGAP-sv: a novel scheme to identify and Visualize
structural variation from paired end mapping data. Nucleic Acids Res., 39,
W567—W5 75 .

Rausch,T. et al. (2012) DELLY: structural variant discovery by integrated
paired-end and split-read analysis. Bioinformatics, 28, i333—i339.

Schroder,]. et al. (2014) Socrates: identiﬁcation of genomic rearrangements in
tumour genomes by re-aligning soft clipped reads. Bioinformatics, 30,
1064—1072.

Sindi,S. et al. (2009) A geometric approach for classiﬁcation and comparison
of structural variants. Bioinformatics, 25 , i222—i230.

Sindi,S.S. et al. (2012) An integrative probabilistic model for identiﬁcation of
structural variation in sequencing data. Genome B iol., 13, R22.

Stephens,P.J. et al. (2009) Complex landscapes of somatic rearrangement in
human breast cancer genomes. Nature, 462, 1005—1010.

Stephens,P.J. et al. (201 1) Massive genomic rearrangement acquired in a single
catastrophic event during cancer development. Cell, 144, 27—40.

Trappe,K. et al. (2014) Gustaf: detecting and correctly classifying SVs in the
NGS twilight zone. Bioinformatics, btu431.

112 /810's112u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

992

D. Iakovishina et al.

 

Vogelstein,B. and Kinzler,K.W. (2002) The Genetic Basis of Human Cancer 2
edn. McGraw-Hill Professional, New York.

Wang,]. et al. (201 1) CREST maps somatic structural variation in cancer gen-
omes with base-pair resolution. Nat. Methods, 8, 652—654.

Wong,K. et al. (2010) Enhanced structural variant and breakpoint detection
using SVMerge by integration of multiple detection methods and local as-
sembly. Genome Biol., 11, R128.

Yang,L. et al. (2013) Diverse mechanisms of somatic structural variations in
human cancer genomes. Cell, 153, 919—929.

Yoon,S. et al. (2009) Sensitive and accurate detection of copy number variants
using read depth of coverage. Genome Res., 19, 1586—1592.

Zeitouni,B. et al. (2010) SVDetect: a tool to identify genomic structural vari-
ations from paired-end and mate-pair sequencing data. Bioinformatics, 26,
1895—1896.

112 /810's112u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

