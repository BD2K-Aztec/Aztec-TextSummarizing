ORIGINAL PAPER

Vol. 27 no. 24 2011, pages 3392-3398
doi: 1 0. 1 093/bioinformatics/btr590

 

Structural bioinformatics

Advance Access publication October 27, 2011

Automatic rebuilding and optimization of crystallographic

structures in the Protein Data Bank
Robbie P. Joostenl’ﬂ, Krista Joostenl’l, Serge X. Cohen‘, Gert Vriend2

and Anastassis Perrakislﬁf

1Department of Biochemistry, NKI, Plesmanlaan 121, 1066 CX Amsterdam and 2Centre for Molecular and
Biomolecular Informatics, Nijmegen Centre for Molecular Life Sciences, Radboud University Nijmegen Medical

Centre, PO Box 9101, 6500 HB Nijmegen, The Netherlands

Associate Editor: Anna Tramontano

 

ABSTRACT

Motivation: Macromolecular crystal structures in the Protein
Data Bank (PDB) are a key source of structural insight into
biological processes. These structures, some >30 years old, were
constructed with methods of their era. With PDB_REDO, we
aim to automatically optimize these structures to better fit their
corresponding experimental data, passing the benefits of new
methods in crystallography on to a wide base of non-crystallographer
structure users.

Results: We developed new algorithms to allow automatic rebuilding
and remodeling of main chain peptide bonds and side chains in
crystallographic electron density maps, and incorporated these and
further enhancements in the PDB_REDO procedure. Applying the
updated PDB_REDO to the oldest, but also to some of the newest
models in the PDB, corrects existing modeling errors and brings
these models to a higher quality, as judged by standard validation
methods.

Availability and Implementation: The PDB_REDO database and
links to all software are available at http://www.cmbi.ru.nl/pdb_redo.
Contact: r.joosten@nki.nl; a.perrakis@nki.nl

Supplementary Information: Supplementary data are available at
Bioinformatics online.

Received on June 20, 2011; revised on August 31, 2011; accepted
on October 1, 2011

1 INTRODUCTION

The Protein Data Bank (Berman et al., 2007; Bernstein et al.,
1977) makes experimentally derived models of proteins and other
macromolecules available to a multidisciplinary community all the
way from structural biologists, bioinformaticians and molecular
biologists of all ﬂavors to high school teachers and even the general
public. The vast majority of macromolecular models in the PDB
are derived by X—ray crystallography. Over decades, a diverse
community of crystallographers has optimized these models to ﬁt
the experimental data using the software and computers available at
their time.

Building an initial model in the electron density (ED) map
has been automated to a signiﬁcant extent, with software like

 

*To whom correspondence should be addressed.
TThe authors wish it to be known that, in their opinion, the ﬁrst two authors
should be regarded as joint First Authors.

ARP/wARP (Langer et al., 2008), Resolve (Terwilliger, 2003),
Buccaneer (Cowtan, 2006) and others, but the ﬁnal steps in model
building and reﬁnement are typically left to the user. Due to lack of
attention and time, and also sometimes because of simple ignorance
or even incompetence, some models that are submitted in the
PDB are of lower quality than what could be expected given the
advent of crystallographic methods and the outstanding tools that are
available. At the same time, older structure models start to lag behind
in structure quality, since the current software was not available at
the time of their deposition.

To overcome these effects, we built the PDB_REDO (Joosten
et al., 2009) pipeline which, employing the structure reﬁnement
software REFMAC (Murshudov et al., 1997; Winn et al., 2003),
can automatically optimize most of the existing structures to
derive improved, up—to—date structure models based on the original
experimental data that were deposited with the atomic coordinates
in the PDB. The ﬁrst version of the PDB_REDO pipeline merely
optimized coordinates, ‘B factors’ and other model parameters
within the convergence radius of the REFMAC reﬁnement engine,
but would not correct modeling errors, which would typically require
human intervention.

A wealth of validation algorithms [e.g. in PROCHECK
(Laskowski et al., 1993), WHAT_CHECK (Hooft et al., 1996b),
MolProbity (Davis et al., 2007) or Coot (Emsley et al., 2010)]
exists, all using in various ways our increasing knowledge of
macromolecular structure to extract quality criteria, which enable to
pinpoint likely errors in macromolecular models. The PDB REPORT
databank (Hooft et al., 1996b), for example, shows that there exist
70 000 unusual peptide bond conformations and >200 000 unusual
side chain rotamers. All these algorithms suggest that many features
of models already in the PDB are likely wrong, but no automated
mechanism currently exists to decide if a better modeling of speciﬁc
areas would be better consistent with the validation criteria, correct
these errors where applicable and make the new, corrected models
available to the user community. Granted the task of a well—trained
crystallographer correcting such errors with the help of interactive
graphics programs such as Coot and 0 (Jones et al., 1991), guided by
the model validation software, is rather trivial. However, no matter
how trivial correcting these errors might be, it is extremely unlikely
that the authors of the tens of thousands of models in the PDB
keep correcting them as better validation, building and reﬁnement
methods are developed. At the same time, providing the same tools
to current day practicing crystallographers can help correcting errors
prior to deposition.

 

© The Author(s) 2011. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/3.0), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /§JO'SIBUJHO[p.IOJXO'SOTlBIHJOJUTOTQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

PDB_REDO rebuilding

 

Most available validation tools have their own limitations. First,
they do not take the ED maps (which represent the experimental
data) into account. Second, they only ﬂag the ‘bad’ parts of the
model, skipping parts of the model that are reasonable but can be
improved.

In addition, uniformity in the database is highly desirable for
many end—user groups, e. g. the modeling and docking communities.
However, ‘best practice guides’ in the ﬁeld of macromolecular
crystallography are anything but settled, and sometimes many
approaches exist to solve the same problem. For example, there
are still lively debates about whether one should build disordered
side chains in the most likely conformation and use the B—factors
to indicate disorder, set the occupancy of their atoms to zero or not
build them at all. An additional advantage of an automated rebuilding
method applied to all models in the PDB is that at the very least it
will use a uniform strategy to resolve such modeling dilemmas.

Here we ﬁrst present two fully automated algorithms, pepﬂip
and SideAide, that check and (if needed) correct or improve
peptides and side chains in the context of both their geometry
and their ED, without manual intervention. These developments
are combined with treatment of twin data, optimization of B—factor
restraints and use of anisotropic B—factors, which have also been
newly incorporated in the PDB_REDO pipeline. Our procedure
brings speed, objectivity, uniformity and reproducibility to model
rebuilding, both in the context of correcting the existing PDB models
and helping crystallographers to submit better models to the PDB.

2 METHODS

2.1 Dataset selection

PDB entries deposited before 1983, and for which the experimental data
were available, were selected and sorted by deposition date. We call this as
PDB ‘legacy’ dataset. Structures lacking a reported R—factor (in the PDB
ﬁle or the literature) were manually inspected for their ﬁt to the ED maps;
structures with a reported R—factor were included in the set if the R—factor
could be reproduced within 10 percentage points. Some structures needed
extra treatment to ensure PDB_REDO ran properly (Supplementary Table
SI for details). Noteworthy is the case for the 30—year—old entry 2ACT: the
depositors recovered the missing diffraction data ﬁle (a remarkable feat) and
resubmitted the data directly to the PDB. The 30 oldest structures that passed
these criteria were used. It should also be noted that these datasets contains
some redundant structures—11 datasets correspond to mammalian trypsins,
four to B—DNA dodecamers and three to cytochrome c structures—but we
chose to use these structures and preserve the ‘historical’ character of the
selection.

For the ‘recent’ dataset, a non—redundant (<30% sequence identity) subset
of all X—ray structures released by the PDB on June 16, 2010 with resolution
of 3.0 A or better was selected. After removing entries for which the R—factor
could not be reproduced to within 10 percentage points, the ﬁrst 30 (sorted
alphabetically) PDB entries were used.

The PDB entries for both the legacy and the recent dataset are listed in
Supplementary Table S2.

2.2 Analysis

The original PDB entries and the optimized structure models were
additionally validated with MolProbity (Davis et al., 2007). These results
and the validation results from WHAT_CHECK were analyzed using R to
make box—and—whiskers plots.

The nature of the percentiles given by MolProbity allows for direct
comparison of the test set to the PDB. In order to do the same for the R—factors
and the Ramachandran Z—scores, the averages and SDs of these values were

calculated for a reference set consisting of 16 000 (randomly selected) PDB
entries. The average R—factor was 20.0:l:3.0% and the Ramachandran plot
Z—score was —1.4:l:1.7. These data were used to show that for all three
model quality metrics, our optimization procedure moves the test set from
being worse than average to being better than average in the PDB.

The structure models were visually inspected using Coot to ﬁnd
representative examples of rebuilt parts of the protein models. The molecular
images were made with PyMOL and the Ramachandran plots with Coot.

3 RESULTS

The new automated software we introduce implements well—
established crystallographic practices, ‘peptide ﬂips’ and building
side chain ‘rotamers’. The emphasis and novelty in these algorithms
is in decision making and in full automation, eliminating the need for
any user decision and bringing uniformity to the process of creating
the ‘ﬁnal’ molecular models that are based on X—ray crystallographic
data.

3.1 Density ﬁt metrics

The ﬁrst step in determining the model that best represents the ED
is to agree on a metric or validation score. Although the real—space
R—factor (RSR) and the real—space density correlation coefﬁcient
(RSCC) (Jones et al., 1991) are commonly used, they have their
limitations. Currently, no satisfying all—purpose metric exists for
crystallographic uses. We chose to use three different metrics for
the density ﬁt, each with their own advantages for their speciﬁc
task.

The simplest and fastest method we use is cubic (spline)
interpolation as implemented in the Clipper library (Cowtan,
2003). This method determines the density at a given position by
interpolating the neighboring grid points. The algorithm is fast, but
it does not take the shape of (a set of) atoms into account nor is
the resulting value normalized. We use this method to compute the
density ﬁt of the backbone in the initial stage of pepﬂip, when speed
is of more importance than accuracy.

Cubic interpolation is, however, insufﬁcient to differentiate
between—for example—a spike in the difference density map and
a true (Gaussian—like) peak representing an unmodeled or wrongly
modeled atom. To calculate the theoretical ED contributed by a set
of atoms at a gridpoint xg, we assume that each atom a at position
xa contributes a Gaussian—like function:

a a 2
leaexgn ,_,,(

 

 

t(£g)=ZaEAe m“ (1)
Where ratom represents the fully static atom, U =Bat0m /8712 the
mean displacement of that atom and the second term of the
exponential is used to reduce the tail of theoretical density. Given
the observed ED for a point in the map, ,o(x), we can then calculate
a weighted mean (WM), representing the ﬁt of a group of atoms in
an area of the map:

WM _ Zirg earea t(£g)p(ycg)
22g earea “£8 )

This metric is implemented in the processor instruction set SSE2
(allowing multiple ﬂoating point operations concurrently) making it
relatively fast. It is used whenever accuracy, shape and speed are of
importance.

(2)

 

3393

112 /§JO'SIBUJHO[p.IOJXO'SOllBIHJOJUTOTQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

R.P.Joosten et aI.

 

In some cases though, e.g. when ﬁtting rotamers, we want to
compare the ﬁt of two side chains of the same amino acid type in
different (parts of the) maps. This means a normalized metric is
needed. We chose the RSCC:

a Z Mﬁg) (t(§g)— <0) (pGCg) — (0))

xg earea

Z M(£g)(t(£g)—<t>)’ Z M(?cg)(p(?cg)—<p>)’

fgearea 2g earea

RSCC =

 

 

(3)
Where t(x) is given by expression (1) and M (x) is the masking
function for a radius M r around the atoms of interest, given by:

1 “xg —xa  <MrVa

MOO : { 0 otherwise (4)

The implementation for this metric is the slowest of the three. Note
that it has its own drawbacks, given the quirks of crystallography. For
example, it will not differentiate between a strong and a weak peak
in the difference density, which renders it useless for the detection
of e. g. unmodeled single atoms.

3.2 Detecting and correcting peptide ﬂips

Pepﬂip optimizes the orientation of the peptide planes in the main
chain by inverting the plane’s orientation (a ‘peptide ﬂip’; Fig. 1A),
where needed. Either the density of the main chain or clear difference
density at the position of the oxygen atom can indicate the presence
of a wrongly chosen peptide plane. However, ﬂipping a peptide plane
will distort the main chain torsion angles, so real—space reﬁnement is
required before a ﬁnal decision between the two orientations can be
made. To study every peptide without wasting time on the reﬁnement
of unlikely candidates, the algorithm consists of two phases (see
Supplementary Fig. Sl for a ﬂowchart).

In the ﬁrst phase, all peptides that show improved RSCC ﬁt against
the 2mFo—DFc ED map when ﬂipped, as well as peptides that display
peaks in the mFo—DFc difference map near the backbone oxygen in
either position, are ﬂagged. In the second phase, these candidate
peptides are reﬁned in both the original and the ‘ﬂipped’ orientation
using the real—space reﬁnement engine from Coot (Emsley et al.,
2010; J oosten et al., 2008). The choice on the best version is made
stepwise, resembling the decision process of a crystallographer,
using knowledge of the density ﬁt of the main chain, the difference
density ﬁt of the oxygen atom, the Ramachandran plot (Kleywegt
and Jones, 1998) and the geometrical goodness of ﬁt as given by
Coot’s reﬁnement engine. In cases where the ED map holds enough
information (lower than the map average minus three times the SD),
the orientation of the original peptide is kept.

Within the PDB_REDO pipeline, peptides with backbone oxygen
or nitrogen atoms ﬂagged by LINK—records in the PDB header
(denoting they are involved in chemical interactions with other
compounds, for instance in metal ion coordination) are excluded
from pepﬂip analysis. No peptide ﬂips are performed at resolution
<3.5 A, because the maps are typically not informative enough.

3.3 Correcting bad side chain rotamers

The method we use is based on the side chain building algorithm of
Snow (Cohen et al., 2004), which we have extended to be used stand—
alone in the context of automated structure model optimization. The
procedure consists of three main steps.

Original Optimized A

if
.-
.-

 

 

 

"’}._ . Itpi
1129-3210?

D

   

 

313w
AEDTIAS El 1

               

X. Li ' »
Fig. 1. Examples of model rebuilding performed in PDB_REDO. (A) A
peptide ﬂip improves the ﬁt with the 2mFo—DFc ED map (light blue,
contoured at 1.3 r.m.s.) and removes the difference peaks in the mFo—DFc
difference map (green [+] and red [—], contoured at 3.0 r.m.s.), while creating
a new hydrogen bond (dotted line) (PDB2155C). (B) Rebuilding the side
chain results in a better ﬁt (PDB: IOVO). (C) The previously missing nitrogen
atoms make the ionic interaction with the negatively charged C—terminus of
the protein obvious (PDB22TPI). (D) Flipping the histidine and rebuilding
the threonine, results in a net gain of three hydrogen bonds (PDBz3JXV).

 

   

First, the main chain, metal ions, ligands, side chains with multiple
conformations and the side chains of residues with links to metal
ions or ligands are masked out of the 2mF0-DFC map by setting
the density to —2t(?cg). This step ensures that no overlap can occur
between the existing, trusted parts of the structure and the side chains
to be optimized. Second, for every side chain the best rotamer from
an extended version of the ‘Penultimate Rotamer Library’ (Lovell
et al., 2000) is selected based on the RSCC ﬁt with the map.

 

3394

112 /§JO's112u1nofp101x0'sor112u1101urorq//zd11q 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

PDB_REDO rebuilding

 

At this stage, the Cox atom is allowed to shift in Cartesian space
by a maximum of 0.2 A, increasing search space and the likelihood
that the correct rotamer is found. Especially for amino acid types
with aromatic rings this shift can be crucial. After the best rotamer
is selected, the rotamer is masked out of density and the algorithm
proceeds to the next side chain in question. In the third and ﬁnal
step, after reverting to the initial masked map, every chosen rotamer
is reﬁned in real space, using a torsion angle parameterization
employing the same order as in the previous step. Since reﬁnement is
a local operation and speed is of the essence the WM metric is used.
The ﬁnal density ﬁt is then compared with the ﬁt of the original
conformation of the side chain. When the score of the original is
better than the newly built side chain, the original conformation is
stored otherwise the new conformation is chosen. When the density
ﬁt scores are equal, the new conformation is chosen, since it is more
likely a rotameric conformation, given the limited divergence radius
of the reﬁnement.

As an additional feature, SideAide can ﬂip or rotate ﬁnal torsion
angles by 180° for selected side chains. In PDB_REDO, this mode
is used in conjunction with WHAT_CHECK (Hooft et al., 1996b) to
optimize hydrogen bonding for histidine, glutamine and asparagine
by ﬂipping their X2, X3, and X2 torsion angles, respectively (Hooft
et al., 1996a) (Fig. 1D).

3.4 Optimization and rebuilding procedure

In addition to these new developments, we automated a series
of REFMAC reﬁnement extensions: utilization of automatic de—
twinning of experimental data, optimization of the B—factor restraint
weight and reﬁnement of anisotropic B—factors when the ratio of
experimental data and model parameters is sufﬁcient.

The PDB_REDO pipeline (version 3.10) consists of a
conservative (optimization) and a progressive (rebuilding) phase.
The conservative phase follows the original PDB_REDO method
(J oosten et al., 2009) with several enhancements:

- The PDB ﬁles are additionally validated with PDB—care
(Lutteke and von der Lieth, 2004) to detect superﬂuous
carbohydrate atoms. These are removed together with all atoms
that have their occupancy set to zero. This improves the
generation of geometric restraints in reﬁnement. All ‘unknown’
atoms and ligands (marked in the PDB as UNX and UNL
residues) are also removed, because no scattering factors can
be determined for atoms of unknown chemical element.

0 The bulk solvent model used in the original reﬁnement is
extracted from the PDB header and used for recalculating the
initial R(—free).

0 Automated de—twinning is used for recalculating R(—free) when
the values of the PDB header cannot be reproduced to within
ﬁve percentage points. In the following reﬁnement steps, de—
twinning is used whenever a twin with twin fraction >5% is
found.

- Anisotropic B—factors (nine model parameters per atom) are
used in reﬁnement when the data to parameter ratio is >2.
Isotropic B—factors (four model parameters per atom) are
used when the data to parameter ratio drops <1.5. With an
intermediate data to parameter ratio (1.5—2), both methods
are tested, and anisotropic B—factors are used if they give an
improvement of R—free of better than one percentage point

compared with isotropic B—factors. We only use a TLS model
together with isotropic B—factors.

0 The weight between X—ray and geometry terms used in re—
reﬁnement is resolution dependent, based on experience from
the ﬁrst round of PDB_REDO. Looser geometric restraints
are tested for high—resolution structure models, while for
low—resolution structure models only tight geometric restraint
weights are tried.

0 In addition to the weight between X—ray and geometry terms,
we now optimize the relative weight of B—factor restraints and
others by testing seven different values. The B—factor restraint
giving the best free likelihood score is used in all reﬁnement
stages.

0 In all cases, explicit hydrogen atoms were removed and riding
hydrogens were used in reﬁnement to reduce atomic bumps.

To compensate for the lack of accurate reﬁnement methods in the
1970s and 1980s, all models from that era are subjected to 15 cycles
of rigid—body reﬁnement and all further reﬁnement steps are done
with an increased number of cycles.

The rebuilding phase of the structure optimization uses the
optimally re—reﬁned structure model and the accompanying ED
maps.

0 First, pepﬂip is used to ﬁx the backbone where needed.

0 Second, SideAide is used to rebuild all side chains; the
new model is then validated with WHAT_CHECK to ﬁnd
asparagine, glutamine and histidine side chains that should be
ﬂipped to improve hydrogen bonding, and these ﬂips are then
performed by a separate run of SideAide.

- Third, the rebuilt structure model is reﬁned again with the
same parameter settings as the last step of the conservative
reﬁnement, but with three different geometric restraint weights:
the optimal weight from the conservative optimization phase,
a slightly tighter restraint weight and a slightly looser restraint
weight. The optimal ﬁnal structure model is selected based on
the free likelihood score and validated with WHAT_CHECK.

- Finally, all results are combined to make an entry for the
PDB_REDO databank at http://www.cmbi.ru.nl/pdb_redo.

0 To establish the power and identify caveats of the new
PDB_REDO pipeline incorporating the above developments,
we chose to apply it to a selection of models from the PDB
and evaluate all results both with validation suites, and also by
manual inspection.

3.5 Analysis of two test sets: PDB_REDO for old and
new structures from the PDB

We ﬁrst chose to showcase the ability of PDB_REDO to improve the
oldest structure models from the PDB, deposited between 1976 and
1982. Of the 30 structure models used, 23 were protein and 7 were
nucleic acid models. This is a very special collection of models,
where the methods used to construct them were rather primitive,
but the attention paid to model building was, by today’s standards,
enormous. Apart from this ‘legacy’ test set, we also used the new
pipeline on a ‘recent’ dataset consisting of 30 relatively new PDB
entries (released on June 16, 2010) to see if our algorithms are also
powerful for optimizing newly deposited structure models.

 

3395

112 /810's12u1nofp101x0'soi112u1101uioiq//zd11q 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

R.P.Joosten et aI.

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

B C
2' _._ mu- ? — —.— f
,—.. 4D“ 8 5  E
f f  g f E ﬂan
1.2:...- G ﬂ : Q _.
c a d e _1, E 5 if;
E 3 — ‘3' 4e -2- $L_l E a
' “J ‘ E B 4 0 e m 51:: — e a
'1' E —— —F a. a u i” i _._
u D 5 i T.— E a]  +
" E = :
e, 20  = ; e -4- .3 D a e g
E 3 1:1 ' E E “"E
m a: e l . E m a o a
e * 4 e "'5' e
m m" E o c E 21::— c:
a" 11: LJ
U II _3- I E
O E '3'
u- U_ ;
POE Optimized PDB Optimized PDB Optimized

Fig. 2. Box—and—whiskers plots for structure model quality metrics calculated for the original PDB entries and after PDB—REDO. The open boxes show the
‘legacy’ PDB ﬁles, the ﬁlled boxes the ‘recent’ dataset. The whiskers cover all data points within 1.5 times the inter—quartile range and the circles denote outliers.
The dotted lines mark the PDB averages. (A) R—factor. (B) Ramachandran plot Z —score from WHAT_CHECK. (C) All—atom Clashscore from MolProbity as

percentile relative to PDB entries of similar resolution.

The new PDB_REDO procedure could improve the ﬁt of all
structure models in the ‘legacy’ dataset to their original experimental
data. The free R—factor (29) could not be used because these
structures were determined well before its introduction in 1992,
so the regular R—factor was used, which went down from 22:l:6%
to 18 :l:4% (Fig. 2A) on average. The geometric quality of the
structure models also increased substantially: WHAT_CHECK’s
Ramachandran plot Z—score (Hooft et al., 1997) improved from
—2.3:l:2.2 to —1.3:l:1.8 (Fig. 2B) and MolProbity’s Clashscore
percentiles (Davis et al., 2007) improved from 48:l:32 to 80:l:27
(Fig. 2C). An analysis of these scores compared with the rest
of the PDB shows that for all these model quality metrics, the
new PDB_REDO procedure moves this test set from being worse
than the PDB average to being considerably better. Notably,
although PDB_REDO does not rebuild nucleic acids, it improved
considerably the seven nucleic acid structures in the legacy set;
e. g. the MolProbity clash score percentiles improved from 63:l:33
to 84:l:33 and the rmsZ for bonds changed from 2.44:l:0.33 to
the much more reasonable value of 0.31:l:0.16. Histograms of
the changes in all the above scores are shown in Supplementary
Figure S2. Some speciﬁc improvements for the structure model of
Paracoccus denitriﬁcans cytochrome 0550, determined in 1976 at
2.5 A resolution (PDB: 1550; Timkovich and Dickerson, 1976) are
shown in Figure 4.

The results with the ‘recent’ dataset (Fig. 2) are similar to the
’legacy’ data, albeit the average improvements are understandably
less. The average value for the R—factor changed from 18:l:3%
to 17:l:3% and the free R—factor from 21:l:4% to 20:l:4%; the
Ramachandran plot Z —score improved from —0.5 :l: 1.0 to —0.3 :l:1.1
and the Molprobity percentiles improved from 74:l:24 to 84:l: 17.
The histogram of changes in the scores (Supplementary Fig. S2)
shows that these indicators do not change notably for many of
these structures, but at the same time 27 get a lower R—factor, 18
have less clashes and 19 show a better Ramachandran score. In one
of the examples (3HRV), the MolProbity Clashscore was improved
from the 5th percentile to the 80th percentile. These results show
that PDB_REDO can also improve the most recently submitted

structures and that current day depositors can beneﬁt from using
PDB_REDO pipeline to improve a structure model before it is
submitted to the PDB (see for example Peng et al., 2010).

4 DISCUSSION

We have created new algorithms to automate two signiﬁcant steps
in ﬁnalizing protein model building in crystallographic ED maps.
These enable the unsupervised decision making and correction of
‘peptide ﬂips’ and ‘rotamers’. Incorporation of these programs in the
framework of the PDB_REDO pipeline, which has been enhanced
by additional features we also describe in this article, enables us to
actively change the models of the PDB and correct errors that have
been identiﬁable for over a decade.

The pepﬂip program detects likely peptide ﬂips, reﬁnes and
evaluates alternative models and decides automatically if the new
model is better than the old one, based on the ﬁt with the ED map and
geometric criteria. Every peptide, and not just the ones that deviate
from the consensus of a database, is inspected using the ED maps.
This increases coverage of the structure model and minimizes the
chance that real ﬂips are missed. We checked all ﬂips in our test
set manually (15 in the ‘legacy’ test set and 16 in the ‘recent’ test
set), to see whether they were correct and were unable to detect any
obvious errors. In Figure 3, we show a few selected applied peptide
ﬂips after the ﬁnal reﬁnement by REFMAC: albeit the density alone
would be a bad criterion for these cases (especially when compared
with the obvious example showcased in Fig. 1A), considering the
improvement in density ﬁt combined with the Ramachandran plot
quality (Kleywegt and Jones, 1998), the choice in the optimized
models appears best.

SideAide, also checks all side chains regardless of residue type
or geometric quality; it is not limited to rebuilding side chains that
were found to be rotamer outliers, as e.g. the implementation in
Phenix (Adams et al., 2010); and it is not speciﬁc for some residue
types, as Autoﬁx (Headd et al., 2009) that uses additional geometric
criteria (e. g. atomic clashes) to correct valine, threonine, leucine and
arginine residues. This enables ﬁxing side chains that are acceptable

 

3396

112 /810's12u1nofp101x0'soi112u1101uioiq//zd11q 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

PDB_REDO rebuilding

 

 

Original

ll

Optimized Ramachandran

     
  

 

2"". - - I
; elf-W

 

 

 

 

 

 

 

 

 

 

Fig. 3. Examples of peptide ﬂips and the ﬁt to corresponding ED maps (light
blue, contoured at 1.1 r.m.s.) before and after PDB_REDO. For each ﬂip, the
change in backbone torsion angles of the two residues involved is marked
by arrows in the Ramachandran plot.

in terms of geometry, but do not optimally ﬁt the ED maps, which
could be overlooked otherwise.

To ﬁt all side chains optimally, SideAide ﬁts the side chains by
residue type, starting with small residues (Supplementary Table S3),
rather than sequentially: this helps avoid ‘cascading ﬁtting errors’,
where one long side chain ends up in the density of another side
chain, forcing the second side chain to move to another side chain’s
density and so on. For example, long and relatively often disordered
arginine side chains have the greatest risk of causing ﬁtting errors
and are therefore ﬁtted last. A new side chain conformation is chosen
only if it improves the ﬁt with the maps; else the original side chain
is kept. This ensures that true non—rotameric side chains, which can
occur at active sites and other important parts of a protein, are not
forced into the wrong conformation. Some characteristic side chain
remodelings are shown in Figure 4. It is noteworthy, that reﬁtting the
side chains to better rotamers often allows considerable backbone
movement and a marked improvement in geometric quality of the
main chain.

To identify potential ﬁtting errors with an independent method,
we compared the per—residue RSCC and RSR of the original model
and the optimized model, calculated using the method described for
the Electron Density Server (Kleywegt et al., 2004). We ﬁnd that
while the ﬁt of most residues to the ED map did not change much
(Supplementary Fig. S3), the ﬁt of a signiﬁcant fraction of residues
got markedly better, while the ﬁt of a few residues appeared to have
deteriorated. We visually inspected the 50 worst cases where the
RSCC went down or the RSR went up. The majority of outliers
were in regions of the protein models, which exhibit a high degree
of disorder. We noticed that in these original models, the B—factors
were kept quite low during the original reﬁnement that resulted in

an appreciable contribution of these atoms to the phase set and
the resulting ED map. In the PDB_REDO models, B—factors for
these atoms were restrained less and were very high, according
to current advisable crystallographic practice and the choice in the
PDB_REDO protocols. As a result, the model contribution in these
areas was reduced, and no ED was observed. We think that these
represent the genuine overinterpreted areas of density in the PDB
models. The remaining outliers were introduced by the addition of
previously missing side chains, most of which are in low density. We
choose to model all side chains in the most probable conformation;
we believe that a reasonable estimate of the side chain’s position can
be made based on the main chain coordinates and prior knowledge
about possible rotamers. It is noteworthy, that in the ‘legacy’ dataset,
which had not beneﬁted from the notion of rotamers that was
introduced in the late 1980s, 10:l:12% of the side chains were
not in a standard rotamer conformation but after optimization this
dropped to 2:l:3%. Moreover, we showed that changing side chain
orientation results in better backbone geometry (Fig. 4). Finally,
modeling disordered side chains in multiple conformations is surely
a direction that needs to be explored in future work.

Our results show that the oldest models in the PDB can be
brought up to and beyond the current quality standards by automated
optimization, whereas many new PDB models can beneﬁt from it
as well. PDB_REDO renders existing PDB entries better suitable
for future structural biology research, ensuring long—term visibility
and usefulness of the original crystallographic work. The model
rebuilding procedures and reﬁtting to ED maps has added value for
many disciplines. In homology modeling, ensuring the main chain
of the template structure (which tends to be kept ‘as—is’ as much
as possible) has no errors, helps make a better homology model.
Getting the hydrogen bonding network right, as we do during main
chain and side chain modeling, is also important for drug docking
and a prerequisite for simulation stability in molecular dynamics
calculations. Adding side chain atoms not built in the original
structure or ﬂagged as ‘not there’ by setting the occupancy to zero
(common practice of many crystallographers to denote disorder),
or changing their placement, changes the calculated electrostatic
potential of a protein and can affect drug docking studies and
simulations.

The ﬁrst PDB_REDO step was curating the data and optimizing
the ﬁt of existing models. Here we describe the second step,
in which real—space rebuilding automatically changes existing
model parameters. Rotamer re—building and peptide—ﬂips are
straightforward to correct using interactive graphics software,
provided that an experienced and willing crystallographer does
so. By automating these procedures, with objective, reproducible,
reliable and time—efﬁcient tools, PDB_REDO now provides the
means to both correct such occasional errors in the PDB, but
can also help to prevent them when used by practicing X—ray
crystallographers.

In the next step, we aim to build side chains in multiple
conformations and detect and rebuild poorly ﬁtted loops, possibly
also in multiple conformations, remove modeled solvent molecules
or add them were appropriate and include automated deﬁnition and
reﬁnement of TLS parameters and non—crystallographic symmetry
restraints. Currently, PDB_REDO does not make any effort to
rebuild non—protein components of the structures (e. g. nucleic acids,
carbohydrates and ligands), but only optimizes them based on the
latest geometry dictionaries; rebuilding non—protein entities and

 

3397

112 /810's12u1nofp101x0'soi112u1101uioiq//zd11q 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

R.P.Joosten et aI.

 

 

Ber-48

' -r'

Original

Leuﬁﬂ Pr084 Phelm A5p120



h.-
i 'I
'-L.
1:.
H

 

_ I'l-
.r" , .
. II. J
i .
'-'I .. _ f
.I" ' '

<5“,

   

 

  
 

Optimized

. .' I
.L. ' n-'_'
. I _ __
.- .'
' a.
. . 1. '1.

    

 

,|
.m- 5,
El -

 

 

 

 

 

Ra mar: ha ndran

 

 

 

 

 

 

 

 

Fig. 4. Examples of side chain remodeling and the ﬁt to corresponding ED maps (light blue, contoured at 1.3 r.m.s.) before and after PDB_REDO. The arrows
in the Ramachandran plots show the change in the backbone torsion angles after rebuilding (examples from 155C).

dealing with non—standard geometries (e. g. isopeptide linkages) will
be the next big challenge in PDB_REDO. These developments
should further improve structure model quality and thus provide
even better insights in the biology of proteins.

The models, validation reports and the software used are
available at http://www.cmbi.ru.nl/pdb_redo/. PDB_REDO entries
are regularly updated and new PDB entries are ‘redone’ typically
within 14 days of public release, using the latest PDB_REDO
version available.

ACKNOWLEDGEMENTS

We thank E.J. Dodson for supplying additional experimental X—ray
data and MG Rossmann for advice on PDB entry 51dh. We
thank Titia K. Sixma for critically reading the manuscript and for
supporting this project.

Funding: NIH grant (R01 GM62612 to R.P.J, K.J., S.X.C. and AP);
NCF provided use of supercomputer facilities; VENI grant from the
NWO/CW (700.55.405) (to S.X.C); R.P.J and GV. thank NBIC for
ﬁnancial support for the generation of PDB_REDO.

Conﬂict of Interest: none declared.

REFERENCES

Adams,P.D. et al (2010) PHENIX: a comprehensive Python-based system for
macromolecular structure solution. Acta Crystallogr. D. Biol. Crystallogr, 66,
213—221.

Berman,H. et al (2007) The worldwide Protein Data Bank (waDB): ensuring a single,
uniform archive of PDB data. Nucleic Acids Res., 35, D301—D303.

Bernstein,F.C. et al (1977) The Protein Data Bank: a computer-based archival ﬁle for
macromolecular structures. J. Mol Biol, 112, 535—542.

Cohen,S.X. et al (2004) Towards complete validated models in the next generation of
ARP/wARP. Acta Crystallogr. D. Biol. Crystallogr, 60, 2222—2229.

Cowtan,K. (2003) The Clipper C++ libraries for x-ray crystallography, I UCr Comput.
Comission Newsl. 2, 4—9.

Cowtan,K. (2006) The Buccaneer software for automated model building. 1. Tracing
protein chains. Acta Crystallogr. D. Biol. Crystallogr, 62, 1002—1011.

Davis,I.W. et al (2007) MolProbity: all-atom contacts and structure validation for
proteins and nucleic acids. Nucleic Acids Res., 35, W375—W3 83.

Emsley,P. et al (2010) Features and development of Coot. Acta Crystallogr. D. Biol.
Crystallogr, 66, 486—501.

Headd,J.J. et al (2009) Autoﬁx for backward-ﬁt sidechains: using MolProbity and
real-space reﬁnement to put misﬁts in their place. J. Struct. F unct. Genomics, 10,
83—93.

Hooft,R.W. et al. (1996a) Positioning hydrogen atoms by optimizing hydrogen-bond
networks in protein structures. Proteins, 26, 363—376.

Hooft,R.W. et al (1996b) Errors in protein structures. Nature, 381, 272.

Hooft,R.W. et al. (1997) Objectively judging the quality of a protein structure from a
Ramachandran plot. Comput. Appl Biosci., 13, 425—430.

J ones,T.A. et al (1991) Improved methods for the building of protein models in electron
density maps and the location of errors in these models. Acta Crystallographica.
Section A, 47, 110—119.

Joosten,K. et al (2008) A knowledge-driven approach for crystallographic protein
model completion. Acta Crystallogr. D. Biol. Crystallogr, 64, 416—424.

Joosten,R.P. et al (2009) PDB_REDO: automated re-reﬁnement of X-ray structure
models in the PDB. J. Appl Crystallogr, 42, 376—384.

Kleywegt,G.J. and Jones,T.A. ( 1996) Efﬁcient rebuilding of protein structures. Acta
Crystallogr. D. Biol. Crystallogr, 52, 829—832.

Kleywegt,G.J. and Jones,T.A. (1998) Databases in protein crystallography. Acta
Crystallogr. D. Biol. Crystallogr, 54, 1119—1131.

Kleywegt,G.J. et al (2004) The uppsala electron-density server. Acta Crystallogr. D.
Biol. Crystallogr, 60, 2240—2249.

Langer,G. et al (2008) Automated macromolecular model building for X-ray
crystallography using ARP/wARP version 7. Nat. Protoc, 3, 1171—1179.

Laskowski,R.A. et al ( 1993) PROCHECK: a program to check the stereochemical
quality of protein structures. J. Appl Cryst, 26, 283—291.

Lovell,S.C. et al (2000) The penultimate rotamer library. Proteins, 40, 389—408.

Lutteke,T. and von der Lieth,C.W. (2004) pdb-care (PDB carbohydrate residue check):
a program to support annotation of complex carbohydrate structures in PDB ﬁles.
BMC Bioinformatics, 5, 69.

Murshudov,G.N. et al. (1997) Reﬁnement of macromolecular structures by the
maximum-likelihood method. Acta Crystallogr. D. Biol. Crystallogr, 53, 240—255.

Peng,Y.H. et al (2010) Structural basis for the improved potency of peroxisome
proliferator—activated receptor (PPAR) agonists. ChemMedChem, 5, 1707—1716.

Terwilliger,T.C. (2003) Automated main-chain model building by template matching
and iterative fragment extension. Acta Crystallogr. D. Biol. Crystallogr, 59, 38—44.

Timkovich,R. and Dickerson,R.E. (1976) The structure of Paracoccus denitriﬁcans
cytochrome 0550. J. Biol. Chem, 251, 403341046.

Winn,M.D. et al (2003) Macromolecular TLS reﬁnement in REFMAC at moderate
resolutions. Methods Enzymol, 374, 300—321.

 

3398

112 /3.IO'SIBUJHOprOJXO'SOIlBIIIJOJUIOIQ/ﬂdnq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

