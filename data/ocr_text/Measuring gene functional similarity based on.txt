ORIGINAL PAPER

Vol. 29 no. 11 2013, pages 1424—1432
doi: 1 0. 1093/bioinformatics/btt1 60

 

Data and text mining

Advance Access publication April 9, 2013

Measuring gene functional similarity based on group-wise

comparison of GO terms

Zhixia Teng1’2, Maozu Guo”, Xiaoyan Liul, Qiguo Dail, Chunyu Wang1 and Ping Xuanl’3

1Department of Computer Science and Engineering, Harbin Institute of Technology, Harbin 150001, PR. China,
2Department of Information Management and Information System, Northeast Forestry University, Harbin 150040, PR.
China and 8Department of Computer Science and Technology, Heilongjiang University, Harbin 150080, PR. China

Associate Editor: Jonathan Wren

 

ABSTRACT

Motivation: Compared with sequence and structure similarity, func-
tional similarity is more informative for understanding the biological
roles and functions of genes. Many important applications in compu-
tational molecular biology require functional similarity, such as gene
clustering, protein function prediction, protein interaction evaluation
and disease gene prioritization. Gene Ontology (G0) is now widely
used as the basis for measuring gene functional similarity. Some exist-
ing methods combined semantic similarity scores of single term pairs
to estimate gene functional similarity, whereas others compared terms
in groups to measure it. However, these methods may make error-
prone judgments about gene functional similarity. It remains a chal-
lenge that measuring gene functional similarity reliably.

Result: We propose a novel method called SORA to measure gene
functional similarity in GO context. First of all, SORA computes the
information content (IC) of a term making use of semantic specificity
and coverage. Second, SORA measures the IC of a term set by means
of combining inherited and extended IC of the terms based on the
structure of GO. Finally, SORA estimates gene functional similarity
using the IC overlap ratio of term sets. SORA is evaluated against
five state-of—the-art methods in the file on the public platform for col-
laborative evaluation of GO-based semantic similarity measure. The
carefully comparisons show SORA is superior to other methods in
general. Further analysis suggests that it primarily benefits from the
structure of G0, which implies expressive information about gene
function. SORA offers an effective and reliable way to compare gene
function.

Availability: The web service of SORA is freely available at http://
nclab.hit.edu.cn/SORA/.

Contact: maozuguo@hit.edu.cn

Received on November 12, 2012; revised on March 10, 2013;
accepted on March 27, 2013

1 INTRODUCTION

In recent years, gene functional similarity has become a main
hotspot in biology research. Because it is important for a variety
of applications such as gene clustering (Brameier and Wiuf, 2007;
Cho et al., 2009; Qu and Xu, 2004; Yang et al., 2008), protein
interaction prediction and evaluation (Li et al., 2008; Jain and
Bader, 2010; Schlicker et al., 2007;), gene function prediction
(Chen and Xu, 2004; Jensen et al., 2003; Nariai et al., 2007)

 

*To whom correspondence should be addressed.

and disease gene prioritization (Chen et al., 2009; Mathur and
Dinakarpandian, 2011; Ortutay and Vihinen, 2009; Schlicker
et al., 2010; Yilmaz et al., 2009). Moreover, compared with se-
quence and structure similarity, functional similarity is more in-
formative for understanding the biological roles and functions of
genes.

Gene Ontology (G0) is a controlled vocabulary of terms
for describing behavior of genes and their products (GO-
Consortium, 2004), which is valuable to measure gene functional
similarity. Gene and its products, which are collectively called
gene to simplify in this article, are usually annotated with mul-
tiple terms. Functional similarity between genes can be inferred
from the semantic relationships of their terms. It is considered
that two genes are similar in function if their terms are similar in
semantics. Accordingly, many methods based on semantic simi-
larity have been put forward to estimate gene functional similar-
ity. These methods could be generally classiﬁed into two
categories: pairwise and group-wise (Pesquita et al., 2009a).

Pairwise methods measure gene functional similarity through
two steps. The first step is measuring semantic similarity scores
of term pairs using term comparison techniques. The most typ-
ical term comparison techniques used by these methods are
Resnik’s (1999), Lin’s (1998), Jiang and Conrath’s (1998). The
second step is computing gene functional similarity based on the
semantic similarity scores calculated in the ﬁrst step. Some rules
such as average rule (AVG), maximum rule (MAX) and best-
match average rule (BMA) are used in the last step. The methods
based on AVG regard the average of semantic similarity scores
of all term pairs as gene functional similarity. The methods based
on MAX take the maximal semantic similarity score of all term
pairs as gene functional similarity. The methods based on BMA
find all the best matches between the term sets and take the
average of semantic similarity scores of these best matches as
gene functional similarity. As Lord at al. (2003) made use of
GO and AVG to estimate gene functional similarity, great efforts
have been made in this field. In 2005, Sevilla et al. (2005) and
Azuaje et al. (2005) introduced methods like Lord’s, but they
used MAX and BMA rather than AVG. Meanwhile, many vari-
ants of aforementioned typical term comparison techniques like
GraSM (Couto et al., 2005), Wang’s Wang et al., 2007) and
Pozo’s (Pozo et al., 2008) were proposed. Recently, Couto
et al. (2011) exploited DiShIn to update GraSM, and Yang
et al. (2012) improved the semantic similarity between two
terms by considering their common ancestors and descendants.

 

1424 © The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com

112 /810's113umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

Measuring gene functional similarity

 

Although pairwise methods are used widely for measuring
gene functional similarity, they suffer from some limitations of
combining rules. Methods based on AVG will underestimate
gene functional similarity. For instance, if two genes both are
annotated with two same terms, which are unrelated to each
other, their functional similarity is 0.5 by these methods. In
fact, they are exactly matched, and their functional similarity
should be 1. Methods based on MAX will overestimate gene
functional similarity. An example is that, the functional similar-
ity between genes, which share common terms, is l, regardless of
the different terms of them. Unlike the methods aforementioned,
methods based on BMA make a balance between them.
Nevertheless, the pairwise methods are affected by how well
the semantic similarity of single term pair is measured. The
detailed discussion of these methods can be referred to several
reviews (Pesquita et al., 2009a; Guzzi et al., 2011).

Group-wise methods estimate gene functional similarity by
comparing the terms in groups. These methods are categorized
as follwos: set-based, graph-based and vector-based. Set-based
methods (Batet et al., 2011; Gentleman et al., 2005; Lee et al.,
2004; Martin et al., 2004; Mistry and Pavlidis, 2008; Pesquita
et al., 2008) put terms and their ancestors into term set to
denote gene ﬁrstly. Then, they compute semantic similarity
score between the term sets using Tversky’s ratio model
(Tversky, 1977). Finally, the semantic similarity score between
the term sets is regarded as gene functional similarity. Graph-
based methods make use of GO sub-graph to describe gene, in
which nodes are terms and arcs represent relationships between
terms. These methods estimate gene functional similarity by
means of graph matching (Alvarez and Yan, 2011; Cho et al.,
2007; Gentleman et al., 2005; Lin et al., 2004; Sheehan et al., 2008;
Ye et al., 2005; Yu et al., 2007). Vector-based methods represent
each gene as a vector where each dimension corresponds to a term
and 1 means the speciﬁc term occurs while 0 otherwise. They
measure the gene functional similarity through calculating the
cosine similarity of vector (Huang et al., 2007) or the probability
of co-occurrence of the terms (Chabalier et al., 2007).

To our knowledge, the group-wise methods also have some
shortcomings. The set-based and vector-based methods ignore
some valuable information implicit in the semantics and relation-
ships of terms. The graph-based methods are limited by the com-
plexity of graph matching.

In general, some error-prone judgments about gene functional
similarity may be raised by existing methods. In our views, it
primarily results from the inappropriate computing of the infor-
mation content (IC) of terms and unreasonable conversion from
semantic similarity into functional similarity. For the effective
comparison of gene function, we design a novel method based
on Semantic Overlap Ratio of Annotations, namely SORA.
Section 2 illustrates the details of our method, and the experi-
mental results are shown and discussed in Section 3. Finally,
Section 4 presents some concluding remarks.

2 METHODS

The process of measuring gene functional similarity by SORA is dis-
played in Figure 1. At ﬁrst, to quantify the semantics of the terms,
SORA infers the IC of the terms from their location in the GO hierarchy.
Meanwhile, the inherited and extended IC values of the terms are

 

{3] “name line Ihht'l‘llvd and vim-ridch IC far with term

 

 

I 1
I I. J I. 1.. I I-

'I
IEb)JIl‘I!-Il n' :hrJE' ul' lurm 1:th T1.
NHL H
"-._h a i I
“up 0 .x
a ‘3’ Ci

lurm 5:1 'I'.iL

N I

ill. Ix“ “Hi-L II."-
x G “I;

O LI.'an:<-..'I:'I‘E;:J 

IC-l'l'iil IC-l'l'n}

.

2(a) simian- lI-‘Hi runniauni silllilarilpi mum c. and GB. Famichcai

     

    
     

 

 

 

 

 

Fig. 1. Measuring gene functional similarity by SORA

computed separately. Next, for the semantics of a term set, SORA cal-
culates the IC of the term set by combining the inherited and extended IC
values of its members. Finally, the functional similarity between two
genes is computed on the basis of the IC values of their term sets by a
simple reciprocal average method.

2.1 Measure the inherited and extended IC of terms

2.1.] Related works There are two approaches, corpus-based and
structure-based, to compute the IC of a term. Under the corpus-based
approach, the IC of the term t,- is deﬁned as

ICcorpuSUi) = "log(p(ti)) 

In the Equation (1), p(t,-) is the occurrence probability of t,- and its des-
cendants in the speciﬁed GO annotation (GOA) corpus.

Considering a GOA corpus includes 50 distinct annotated genes, in
which 15 genes are annotated with term t,- or t,’s descendants, the IC of
the term t,- is

15
ICcorpusUi) = -10g(%) % 

However, it becomes 0.3802 when annotation information about add-
itional 10 genes annotated with the term t,- is added to the GOA
corpus. It can be found that IC for the same term depends on the
number of genes annotated with it. As argued by Guzzi et a]. (2011),
the semantics of GO terms should be independent of the annotation
distribution. This approach suffers corpus bias and may not reﬂect the
semantics of the term objectively.

Alternatively, the IC of the term can also be computed from the
number of its descendants in the GO structure (Seco et al., 2004). We
refer this approach as a structural IC approach. Under this approach, the
IC of the term t,- is deﬁned as

log((desc(t,-) + l)/ totaLtermS)

log( 1 / totaLtermS)
log(desc(t,-) + l)
log(totaLtermS)

ICstructure (ti) =

 

(2)

where desc(t,—) means the number of descendants of term 1,, and total_
terms is the number of terms in GO. This measure produces consistent IC
of the term over different annotation corpus, which seems more reason-
able than corpus-based approach. However, a new problem is that the IC

 

1 425

112 /810's113umo [p.IOJXO'SSUBUHOJUIOIQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

Z.Teng et al.

 

values of the terms without descendant are all 1 under this approach.
Actually, the IC of these terms may be not entirely same. Hence,
Equation (2) is also unreasonable for measuring the IC of the terms.

Besides, some measures (Gentleman et al., 2005; Ye et al., 2005) con-
sidered that the IC of the term is proportional to its depth in the hier-
archy, which premised that the semantic of term is ﬁner and ﬁner details
as one descends the hierarchy. However, these approaches may not dis-
tinguish the differences between the terms, which are at the same level but
differ in the number of descendants. Meanwhile, we noticed that some
works, which focused on the semantic distances of terms, achieved their
goals through exploiting the information contained in the GO hierarchy.
For example, to measure distance between linked terms, Jiang and
Conrath (1998) weighted the edges along shortest path linking the
terms based on the link density, term depth and the difference of their
IC. Inspired by these works, we consider that the semantics of the term
may be tightly related to its location in the GO hierarchy, which could be
characterized by term depth (speciﬁcity) and the number of descendants
(coverage). Accordingly, a novel approach is proposed to overcome the
limitations suffered by aforementioned measures.

2.1.2 Inherited and extended [C of the term It assumed that the IC
of the term is not only proportional to its depth but also inversely to the
number of its descendants because more descendants the term has, less
speciﬁc the semantics is. Therefore, the IC of the term is computed by
Equation (3).

IC(t,-) = Specificity(t,) X Coverage(t,~)

_ I i I log(desc(ti) + 1) (3)
_ SpeclflCltyUI) X (1 — 10g(t0tal-t€1‘ms))

In Equation (3), the semantic speciﬁcity of term t,-, Speciﬁcity(t,—) is com-
puted by its depth in the GO hierarchy. The maximum depth of the term
is taken as its depth. The semantic coverage of term t,-, C0verage(t,—) is
measured by the number of its descendants in GO, like Equation (2).
Under this approach, the terms at lower levels are more speciﬁc with
bigger IC, whereas the terms with more descendants are more generic
with smaller IC.

According to the true path rule of GO, if a gene is annotated with a
term, it is also annotated with the ancestors of the term. That is to say,
the semantics of the ancestor term is generalized from that of its descend-
ants, and the latter is extended from the former. In light of this, the
semantics of the term is divided into two parts: one is inherited semantics,
which is same as the semantics of its ancestors, and the other is extended
semantics, which is special in itself. For measuring IC of a term set, the
inherited IC and extended IC of each term, which represent the inherited
and the extended semantics of the term respectively, are computed.
Supposed that the term tj is one ancestor of the term t,-, the inherited
IC of the term t,- from the term tj is actually equal to the IC of term t],
[C(tj). The extended IC of the term t,- from the term tj is deﬁned as

ICextendede _> ti) =IC(ti)_IC(tj)° 

Likewise, given the ancestor set of the term t,-, AS ( t,- ), the inherited IC
of the term t,- from AS(t,-) equals the IC of AS(t,-), IC(AS(t,—)). The
extended IC of the term t,- from AS ( t,- ), ICextended(AS(t,-)—>t,-), is

ICextended(AS(ti) _> ti)  

2.2 MEASURE THE IC OF TERM SET BY
COMBINING THE INHERITED AND THE
EXTENDED IC OF ITS MEMBERS

Regarding the IC of the term set, a simple method is summing up

the IC of the terms in the set. Take an example, the IC of term set
ts, which just contains two terms t1 and t2, is the summation of

the [C(tl) and [C(tg). However, as discussed by Couto et al.
(2005), the terms may share IC because of the inheritance
nature of GO. Take the term set ts again, considering the term
tc is one common ancestor of t1 and t2, they share the inherited
IC from tc, [C(tc) but differ in the extended IC from tc.
Accordingly, the [C(ts) = I C(t 1) —I— I C(t2) = [IC(tc) -l— I Cextended
(l‘c_> l‘1)I + [IC(IC) TIT ICextendedO‘c—> l2)] : 21C(IC) TIT ICextendedO‘c—>
t1) +1Cextended(tC—>t2) in term of the Equation (4). Actually,
ICUS) Should be [C(tc) TIT ICextended(tc_>t1) TIT ICextendedO‘c—> 1‘2) be"
cause the IC shared by terms should not cumulatively contribute
to the IC of the set. It is not hard to imagine that the IC of the set
would be larger than reality since more shared IC exists. To
overcome this limitation, it is necessary to remove the shared
IC between the terms, which is summed repeatedly.

In fact, the calculation of the shared IC has been already
proposed by GraSM (Couto et al., 2005) and DiShIn (Couto
et al., 2011). These works focused on dealing with the shared
IC when measuring semantic similarity between terms. GraSM
deﬁned the shared IC between terms as the average of their
common disjunctive ancestors while DiShIn redeﬁned it as the
average of their all disjunctive ancestors. As veriﬁed, both of
them could improve the performance of the semantic similarity
measures. However, in our opinion, the shared IC between terms
could be measured alternatively by the IC of their common an-
cestors set. Similarly, the shared IC between the term sets could
be measured by the IC of their intersection.

Subsequently, we put forward an algorithm for computing the
IC of the term set, as illustrated in Figure 2, which combines
inherited and extended IC values of its members according to the
structure of GO. To simplify the description of the algorithm,
some notations are used in the algorithm: considering a term set
X, CET { X ) consists of the terms without descendants in X;
textend is used to extend term set X in each round, which is se-
lected from CET { X ); ESextend consists of the textend and its an-
cestors; ES,{ X ) is the extended term set X after the ith round
extension and IC,-(X) is the IC of ES,{ X ); OTS, is the overlapped
term set between ESextend and ES,{ X ); ES{ X ) is the ﬁnal term
set X after all extensions, and [C(X) is IC of the term set X.

The process of measuring the IC of the term set is demon-
strated by an example shown in Figure 3. Gene Q9BPW9 is
annotated with manually assigned term set X g= {GO: 0004022,
GO: 0004745, GO: 0047035, GO: 0016854} in molecular function
sub-ontology. The initial CET (X g) is {GO: 0004022, GO:
0004745, GO: 0047035, GO: 0016854}. The process of comput-
ing the IC of the term set X g includes several rounds and each
round consists of four main steps:

(1) Select textend to extend ES,(Xg);

(2) Generate ESextend and 0TS,;

(3) Calculate ICextended(0 T S,—> textend) and IC,-(Xg);
(4) Update CET{Xg) and ES,{Xg).

As displayed in Figure 3, each term is represented by an oval
with a G0 identiﬁer and IC value. In each round, the term textend
is denoted by an oval with octagon. The terms of ESextend are
marked by the ovals with asterisks. The terms of ES,(Xg are
labeled with symbols like tj, jeN in the circles. The overlapped

 

1 426

112 /810's112umo [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Measuring gene functional similarity

 

 

AIIIUHI'I'HM: I'i'IeitI-Iurlng the It" nllthe term set based en the inherited
and extended t{'.‘.

Input: TeI'nI sell“ II,-.i_-. .___I,,}

Output: The l[' nt'the term :ietX. it'll.“

l Initialize {£71.11

3 For each I. E ['I'iill'l Lin

3 L'Iilenlitte FEEL} LJHII‘I}; ELIAS]:
4 End t'nr
:1 if '..I.t1--II, i{.'[.JI’I—Il

ﬂ f:'.‘§.-,-[:III'I4—Ell

'i H' |C'I';‘i‘{.lt'}|. f--]

E IIilli'lII'le ii I:

{i T..,,.,1 Ii,| Iﬁ ['ETIJI'I. fiat CERT}. ii'II,.I--li=l{'lr,,}:
l [I  ‘IIIIiI'

I I I I‘ | i'.,,,..|= I

I 2  1:, I,C i',,.,,,:
| 3 eIHe

l4 I

I5   III. I 11,6  in,  TM. 1431:, If :2: |.-I3I 1,}; I
In I,._,,,...,II—i,. where I'.t is selected t'rnnt Tum. 4..“ I'iIIitleIIIl}'_
I? I

III End If

ILJ‘ II‘f,.,,,..,,,- =uui'i" then eniitlntte

If} EH,.,,,.,,,,«I—.-l.":I'{I‘,.._.,,.,,,,-} I' lt,.,._., “,1:

3 l If}1".“i'.:<—i:'h',.,.,,.,.,,I'lil:'h',f.lt'l

32 II‘ (If .ﬂlt then

23 £11.11:— iIZ' ,. 111'} I iIZ',._,,,.,,,,-,,,I t“) T3.—~i,._,,,.,m-}
24 else

25 it‘iXﬁIa ii'..IIJI’I- it‘IItt-I'It-Iiii}

En I-Ilul it

:i new i—I-_'.~;,_,.I_I'I e-'I»:.s',.,,,..,,
:II t'i:"f'l_t'1a—t.'IE'l{X} — I I,.,,,..,,,:

3'5; i++
311' End n-ltile
3t it‘IXI I'm/1’1

.12 Return I'IIL'IXI

 

Fig. 2. Algorithm for measuring the IC of the term set

terms between ES,(Xg) and ESextend are shown by the ovals with
circles and asterisks.

In the ﬁrst round, as shown in Figure 3a, GO: 0047035 is
selected as textend to extend ES 1(Xg). Because the initial ES(Xg)
is null, 0T S 1 is null and IC1(Xg) =1C(textend)=0.42857 in term
of Equation (4). According to the true path rule, X g can also be
annotated with the ancestors of the term textend. Therefore, the
term textend and its all ancestors should be added into ES(Xg).
Then GO: 0047035 is removed from CET (X g). At the end of the
round, ESI(Xg) and CET(Xg) become {t1, t2, t3, t4, t5, t6, t7} and
{GO: 0004745, GO: 0004022, GO: 0016854}, respectively.

In the second round, as illustrated by Figure 3b, GO: 0004745
is selected as textend to extend ES2(Xg). The overlapped terms
between ESextend and ES 1(X g) are t1, t2, t3, t4 and t5. To measure
ICextended(0TS2—>textend), it is necessary to measure [C(0T52).
Because t5 is the only member of the CET(0TS2),
[C(OTS2) =IC(t5), i.e. 0.10474. According to Equation (5),
IC/Iextended(0TS2_> lExtend) = chextended(t5_> lExtend) = [C(textend) _
[C(t5) = 0.35714 — 0.10474 2 0.25240. For IC2(Xg) = IC1(Xg) +
ICextended(0T52—>textend), IC2(Xg) becomes 0.68097. Then, the
terms of ESextend are added into ESI(Xg) and GO: 0004745 is
removed from CET (X g). At the end of the second round,
ES2(Xg) and  are {t1, t2, t3, t4, t5, t6, t7, t8} and 
0004022, GO: 0016854}, respectively.

In the third round, as shown in Figure 30, GO: 0004022 is
selected as textend to extend ES3(Xg). The overlapped terms
between ESextend and ESg(Xg) are t1, t2, t3, t4 and t5. The
following process is similar to that of the second round. In the
following process, ICextended(0TS3—>textend) is calculated, i.e.
0.18875. Thus, IC3(Xg) = IC2(Xg) + ICextended(0TS3—>tex,end) =
0.68097+0.18875=0.86972. At the end of the third round,
ES3(Xg) and CET(Xg) become {t1, t2, t3, t4, t5, t6, t7, t8, t9} and
{GO: 0016854}, respectively.

In the fourth round, as seen in Figure 3d, GO: 0016854 is
selected as textend to extend ES4(Xg). The overlapped terms be-
tween ESextend and ES3(Xg) are t1 and t2. For t2 is one child of t1,
[C(OTS4)=IC(t2), i.e. 0.00316. Thus, ICextended(0TS4—>
textend)=0.1152 and IC4(Xg) 20.98492. Next, the terms of
ESextend are added into ES3(Xg), and GO: 0016854 is removed
from CE T (X g). Here, it is found that CET (X g) is null; thus, the
iteration is ﬁnished.

After iteration is ﬁnished, the IC4(Xg) and ES4(Xg) are retur-
ned as IC(Xg) and ES(Xg), respectively. As shown in Figure 3e,
the [C(Xg) is 0.98492. The ﬁnal ES(Xg) is {t1, t2, t3, t4, t5, t6, t7, t8,
t9, t10, t11, tn}, which is consistent with the true path rule of GO.

Besides, we ﬁnd that the key terms of which the IC could
represent the shared IC between two term sets such as t2 and
t5 in our strategy are coincidently the common disjunctive ances-
tors of the terms in the set like t8, t9, tlo and In in Figure 3. From
this point, the IC of term set can also be given alternatively by
summing the IC of the terms and remove the repeatedly summed
IC of their common disjunctive ancestors.

2.3 MEASURE THE FUNCTIONAL SIMILARITY
BETWEEN GENES

To compute gene functional similarity, set-based methods usu-
ally make use of Tversky’s ratio model or its variants. Assuming
that genes G A and G B are annotated with term sets
TA 2 {t1,t2, . . . ,tm} and TB: {t1,t2, . . . ,tn}, respectively, simUI
(Gentleman et al., 2005) deﬁned the functional similarity between
G A and GB as follows:

ITA n TBI (6)
ITA U TBI

H is the number of terms in the speciﬁed set. This method neg-
lected the differences of the terms; simGIC (Pesquita et al., 2008)
improved simUI by the IC of the terms. In simGIC, the func-
tional similarity between G A and G B is

ZtieTAnTBﬂti)
thETAUTBij)

where f(.) is the IC of the term. However, the shared IC of the
terms was also summed repeatedly under this method. In fact,
repeated summing of the shared IC is common in set-based
methods. It may also result in misjudgments of gene functional
similarity.

Inspired by Chen et al. (2012), the functional similarity be-
tween two genes is deﬁned as the IC overlap ratio (ICOR) be-
tween their term sets as Equation (8).

[C(TA n TB) [C(TA n TB)
IC(TA) IC(TB)

F SsimUI(GA, GB) =

FSsimGIC(GA, GB) = (7)

FSSOV(GA9 GB) = (  

 

 

1 427

112 /810's112umo [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Z.Teng et al.

 

 1" round (  2“d round ( 3"1 round

CE T (Xg) : {G0.‘ 004 703 5, GO: 0004 745, GO:0004 022, GO:0016854} CET(Xg) = {GO:0004 7 45, GO:0004022. G0: 001 685 4 } CE T (Xg) = {GO:0004022 GO:0016854}

 

GO:004703
0.42857 0

ICextendeAESaxtenﬁtextend) : [C(textend) ' [C(ESextend)

{E

I CatendeAEsexteWtextend) = I C(textemj) - I C(ESWM) ICutendeAESatenﬂtmtend) = [C(textend) ‘ [C(ESextend)

= [C(texzend) = [C(textend) ' IC(t5) = [C(textend) ' [C(t5)
= 042857; =0.35714—0.10474 =0.29349-0.10474
 = ICextendeAESextem/iatextend)  =0. 1 
: .  I = I C1(Xg) + ICutendeAESexteWtextend) I = I + ICexteMeAESutenﬁtextend)
= 0.42857 + 0.25240 : 0.68097+ 0.18875
: 0.68097; = 0.86972;
(d) 4“l round  After finished
CET(Xg) = {GO-0016854} CET(Xg) = (D

     
  

GO:0016491
‘ 0.02607

       

GO:0016614
0.07254
GO:0016616
0.10474

600033760
0.23491
GO:0004745
0.35714
GO:0004022 _
0.29349 60.004703
0.42857

I CeJI:tendetzi(EISextend_> tatend) = [C(textend) ' [C(Esw‘tend)
= [C(textend) ' [C(tZ)
=0.1 18316-000316
:01 152;
I C4(Xg) = I ‘I' ICacten(1211(EASIetherid—> textend)
= 0.86972+ 0.1152
: 0.98492;

GO:001622
0.13608 a

 

 
 
 
   

 
     
  

 

     

  
     
 
 

  

GO:0003824
0.00316
GO:0016491
7 0.02607
GO:0016614
0.07254
GO:0016616
0.10474

GO:0004745
0.3 5714
GO:0004022
0.29349

GO:0016853
0.057184 0

  
    

 
 
 
   
     

 

GO:001622
0.13608

      

GO:003376
0.23491

GO:004703
0.42857

1C(Xg) = IC4(Xg) = 0.98492;

GO:001685
0.11836

 

  

Fig. 3. The process of measuring the IC of the term set. Each term is represented by an oval node with G0 identiﬁer and the IC value. In each round, the
term textend is denoted by an oval with the octagon. The terms of ESextend are marked by ovals with asterisks. And the terms of ES,(Xg) are labeled with
symbols like tj, jeN in yellow circles. Overlapped terms between ESi(Xg) and ESextend are shown by the ovals with circles and asterisks. The process
includes four rounds corresponding to (a—d), respectively. The ﬁnal ES(Xg) and IC(Xg) are shown by (e)

As known, the GOAs of genes are currently incomplete and suffer
from a large research bias (Wang et al., 2010, Yang et al., 2012).
To reduce the effects of annotation bias and imperfection, a
simple reciprocal average method is used to make a balance be-
tween shallow and well annotated genes. In the Equation (8), the
ﬁrst item on the right of the equation reﬂects the proportion of the

shared IC between T A and T B to the IC of T A, and the second item
reﬂects the proportion of the shared IC between T A and T B to the
IC of T B. The shared IC between the term sets is measured by the
IC of the intersection between them IC{ T A O T B ). To avoid re-
peated summing of shared IC, the IC of the term set T A,T B and
T An T B are computed by the algorithm described in Figure 2.

 

1 428

112 /810's112umo proJIxo'sor112u1101urorq//:d11q 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Measuring gene functional similarity

 

3 VALIDATION AND RESULTS

To validate the performance of our method, SORA is imple-
mented, and its web service can available at http://nclab.hit.
edu.cn/SORA/.

SORA is compared on a widely used platform for
Collaborative Evaluation of GO-based Semantic Similarity
Measure (CESSM) (Pesquita et al., 2009b). The task is to meas-
ure functional similarity of 13 430 protein pairs, which involved
1039 proteins, in GO database and GOA released in August,
2008. According to the resources, terms in the G0 are classiﬁed
as Electronic-assigned terms (E-terms) and Manually assigned
terms (M-Terms). E-terms are inferred from electronic annota-
tions, whereas M-terms are inferred from experiments, compu-
tational analysis, author statements and curatorial statements.
Considering GO aspects and the electronic annotations may in-
ﬂuence performances of methods, validation experiments are
conducted on six GOAs: AMF, ABP, ACC, MMF, MBP and
MCC. The details of the six experimental GOAs are listed in
Table 1.

As for the performance criteria, CESSM provides the Pearson
correlations with sequence similarity (Seq), protein family simi-
larity (Pfam), enzyme commission classiﬁcation similarity (ECC)
and Resolution (Res) to evaluate measures. Sequence similarity
is computed by dividing the sum of their reciprocal BlAST bit
scores by the sum of their self-BLAST bit scores. The Pfam
similarity between two proteins is the ratio between the
number of domains they share and the total number of those
they have. ECC similarity is measured by the digits of the enzyme
commission number shared by the proteins. The larger Pearson
correlations with them suggest that the semantic similarities re-
ﬂect the functional closeness of proteins better. Resolution is the
relative intensity with which values in the sequence similarity
scale are translated into the semantic similarity (Pesquita et al.,
2008). A higher resolution indicates the method is more sensitive
to the differences in annotations. It is noteworthy that, as re-
ported by Pesquita et al. (2008), the relationship between seman-
tic and sequence similarity is not linear, and the resolution was
veriﬁed more appropriate to depict the intrinsic relationship be-
tween them than the correlation.

To evaluate the impact of the term IC, we measure the func-
tional similarities of the protein pairs speciﬁed by CESSM using
the methods based on the structural IC and that based on the
term IC computed by our strategy (called SORA IC), respect-
ively. These two approaches are evaluated on CESSM, and the
results are displayed in Table 2. As suggested by the results, the
method based on the SORA IC performs identically better than
the other with respect to Seq, Pfam and ECC in the experiments.
However, it is also found that the performance of the method
based on SORA IC is not as good as the one based on structural
IC on Res in some cases. It suggests that the differences of
SORA IC may be not as obvious as those of structural IC, but
the former reﬂect the reality better than the latter in terms of
other metrics. On the whole, the SORA IC has more positive
impacts on functional comparison of protein.

To validate the effects of the converting strategy, we convert
the semantic similarity into function similarity using J accard and
ICOR, respectively. The functional similarity scores measured
with the two converting strategies are compared on CESSM.

Table 1. Descriptions of the six experimental GOA

 

 

 

 

 

GOA Components Number
of terms
AMF M-terms and E-terms of MF sub-ontology 9375
ABP M-terms and E-terms of BP sub-ontology 9235
ACC M-terms and E-terms of CC sub-ontology 5163
MMF Only M-terms of MF sub-ontology 4437
MBP Only M-terms of BP sub-ontology 6291
MCC Only M-terms of CC sub-ontology 3343
Table 2. The impacts of the term IC
GOA Strategy Seq Res Pfam ECC
AMF SORA IC 0.5949 0.9762 0.5765 0.6726
Structural IC 0.5528 0.9720 0.5247 0.6056
ABP SORA IC 0.7293 0.9076 0.4679 0.4648
Structural IC 0.6374 0.9229 0.4297 0.4618
ACC SORA IC 0.6549 0.9371 0.4960 0.3741
Structural IC 0.6472 0.9447 0.4790 0.3603
MMF SORA IC 0.6443 0.9605 0.5703 0.6502
Structural IC 0.5539 0.9520 0.4686 0.5859
MBP SORA IC 0.6754 0.8966 0.4171 0.4311
Structural IC 0.5810 0.9079 0.3688 0.4172
MCC SORA IC 0.6875 0.9110 0.4725 0.3512

Structural IC 0.6406 0.9221 0.4613 0.3429

 

The best results are in bold.

As listed in the Table 3, the method with ICOR gets higher
Res and ECC, whereas it is comparable with the other one on
Pfam in most experiments. On all of the experimental datasets,
the scores computed by ICOR show lower correlation with se-
quence similarities. This may illustrate that the distribution of the
scores converted by J accard matches better with that of sequence
similarities than by ours. According to Res, the scores derived by
Jaccard are less capable to capture the differences in the anno-
tations of the proteins than by our strategy. Overall, the results
indicate that ICOR is more discriminating for gene functional
comparison.

To evaluate effectiveness of our method, SORA is performed
on the six experimental GOAs separately. The functional simila-
rities of the 13430 protein pairs computed by SORA are com-
pared with other methods on CESSM after every experiment.
The CESSM enables the comparison of new methods against
11 pairwise and group-wise functional similarity methods.
SORA is compared against typical methods of them including
simUI, simGIC as well as Resnik’s (RB), Lin’s (LB) and Jiang
and Conrath’s (JB) based on BMA, respectively. Table 4 shows
the Seq, Res, Pfam, ECC, average and the improvement on re-
spective average level of them computed by different methods.
The negative values, signed with ‘1’ in Table 4, imply that the
method is under average level with respect to the speciﬁc metric.

As for Seq, simGIC shows consistently better performance
than others on the six experimental datasets, whereas SORA is

 

1 429

112 /810's112umo [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁ(11111 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Z.Teng et al.

 

slightly superior to the average level. Regarding Res and ECC,
SORA outperforms to others in most cases. When performed on
AMF, SORA is the best with improvements in the average level
against Res and ECC, by 25.47 and 8%, respectively. When
applied to MMF, SORA has signiﬁcant improvements in the

Table 3. The effects of the converting strategies

 

 

GOA Strategy Seq Res Pfam ECC
AMF ICOR 0.5949 0.9762 0.5765 0.6726
Jaccard 0.6629 0.9625 0.6122 0.6378
ABP ICOR 0.7293 0.9076 0.4679 0.4648
Jaccard 0.7778 0.8555 0.4679 0.4104
ACC ICOR 0.6549 0.9371 0.4960 0.3741
Jaccard 0.7621 0.8920 0.4865 0.3587
MMF ICOR 0.6443 0.9605 0.5703 0.6502
Jaccard 0.6988 0.9368 0.5895 0.5943
MBP ICOR 0.6754 0.8966 0.4171 0.4311
Jaccard 0.7374 0.8561 0.4339 0.3916
MCC ICOR 0.6875 0.9110 0.4725 0.3512
Jaccard 0.7391 0.8680 0.4633 0.3406

 

The best results are in bold.

Table 4. The performances of different methods in six experiments

average level against Res and ECC by 13.85 and 16.98%, re-
spectively. Referring to average levels of the Res and ECC,
SORA improves them by 14.04 and 10.86% when conducted
on ABP and improves by 11.81 and 5.14% when performed
on the MBP. SORA running on the terms of CC sub-ontology
is the best. Regarding Pfam, SORA is comparable with the best
and has signiﬁcant improvements in the average level of Pfam.
Moreover, SORA outperforms average level of these methods in
terms of almost all of the metrics in the experiments. From these
results, SORA is outstanding than others while measuring gene
functional similarity.

To evaluate SORA against each metric, the average improve-
ments of them in six experiments are calculated and shown in
Table 5. Regarding Seq, simGIC is the best by 12%, and SORA
has a positive effect on it, whereas some others have a negative
impact on it. As for Res and ECC, SORA shows the best per-
formances with 15.37 and 8.82% improvement on average level,
respectively. In terms of Pfam, SORA gets a signiﬁcant improve-
ment and performs comparably with the best, simGIC. It reveals
that SORA has improved the performances of gene functional
comparison.

Furthermore, to provide an intuitive measure of relative
performance, we summarize the comparison results by ranking
performances of the concerned methods in the six experiments.

 

GOA Metric Original value

 

Average Improvement in average level (%)

 

 

value
simGIC simUI RB LB J B SORA simGIC simUI RB LB J B SORA
AMF Seq 0.7172 0.5925 0.6683 0.6063 0.5459 0.5949 0.6209 15.52 4.57 7.64 —2.341 —12.071 —4.181
Res 0.9559 0.9671 0.9577 0.5705 0.2409 0.9762 0.7781 22.85 24.30 23.09 —26.671 —69.041 25.47
Pfam 0.6380 0.6181 0.5718 0.5639 0.4908 0.5765 0.5765 10.67 7.21 —0.821 —2.191 —14.861 0
ECC 0.6219 0.6365 0.6027 0.6417 0.5612 0.6726 0.6228 —0.141 2.21 —3.231 3.04 —9.881 8
ABP Seq 0.7732 0.7304 0.7397 0.6369 0.5864 0.7293 0.6993 10.56 4.44 5.77 —8.931 —16. 151 4.29
Res 0.8373 0.8628 0.9004 0.9326 0.3345 0.9076 0.7959 5.2 8.41 13.13 17.18 —57.971 14.04
Pfam 0.4547 0.4505 0.4587 0.3727 0.3318 0.4679 0.4227 7.55 6.57 8.52 —11.841 —21.51 10.69
ECC 0.3981 0.4022 0.4444 0.4352 0.3707 0.4648 0.4192 —5.051 —4.051 6 3.81 —11.571 10.86
ACC Seq 0.7500 0.6721 0.7113 0.6398 0.5014 0.6549 0.6549 14.52 2.62 8.61 —2.311 —23.441 0
Res 0.9001 0.9337 0.9167 0.9359 0.3098 0.9371 0.8222 9.47 13.56 11.5 13.82 —62.31 1 13.97
Pfam 0.4974 0.5214 0.4930 0.4850 0.3123 0.4960 0.4675 6.39 11.52 5.46 3.74 —33.21 6.09
ECC 0.3612 0.3757 0.3776 0.3683 0.2598 0.3741 0.3528 2.39 6.49 7.03 4.39 —26.351 6.04
MMF Seq 0.6665 0.5907 0.6512 0.5976 0.5219 0.6443 0.6120 8.90 —3.491 6.40 —2.361 —14.731 5.27
Res 0.9358 0.9304 0.9335 0.9376 0.3641 0.9605 0.8437 10.92 10.28 10.65 11.13 —56.841 13.85
Pfam 0.5824 0.5504 0.5221 0.5148 0.4503 0.5703 0.5317 9.54 3.51 —1.811 —3.181 —15.321 7.26
ECC 0.5874 0.5782 0.4841 0.5161 0.5189 0.6502 0.5558 5.68 4.02 —12.91 —7.141 —6.641 16.98
MBP Seq 0.7359 0.6949 0.7267 0.6269 0.5333 0.6754 0.6655 10.58 4.42 9.19 —5.801 —19.871 1.49
Res 0.8697 0.8831 0.8929 0.9117 0.3573 0.8966 0.8019 8.46 10.12 11.35 13.7 —55.441 11.81
Pfam 0.4383 0.4253 0.4506 0.3810 0.2740 0.4171 0.3977 10.19 6.93 13.3 —4.201 —31.091 4.88
ECC 0.3887 0.3818 0.4257 0.4216 0.4113 0.4311 0.4100 —5.21 1 —6.91 3.83 2.83 0.31 5.14
MCC Seq 0.7348 0.6499 0.7214 0.6441 0.5013 0.6875 0.6565 11.93 —1.011 9.89 —1.891 —23.641 4.72
Res 0.8691 0.9072 0.8921 0.9102 0.3441 0.9110 0.8056 7.88 12.61 10.73 12.98 —57.281 13.08
Pfam 0.4681 0.4872 0.4676 0.4562 0.3321 0.4725 0.4473 4.66 8.93 4.54 1.99 —25.761 5.64
ECC 0.3502 0.3527 0.3443 0.3390 0.2519 0.3512 0.3316 5.63 6.37 3.86 2.25 —24.011 5.90

 

Original values show Seq, Res, Pfam and ECC provided by CESSM. Average values present the average level on each metric. Improvements in the average level (%) display
the improvement on average level with respect to each metric. Symbol ‘1’ denotes that the method is under average level in term of the speciﬁc metric. The best levels of each

metric are in bold.

 

112 /810's112umo [p.IOJXO'SOUBIHJOJUIOIQ/ﬁ(11111 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Measuring gene functional similarity

 

Table 5. Performances of different methods in term of the metrics

 

 

Metric simGIC simUI RB LB J B SORA
Seq 12 0.4 7.92 —3.941 —18.321 1.93
Res 10.8 13.21 13.41 7.02 —59.81 15.37
Pfam 8.17 7.44 4.86 —2.611 —23.621 5.76
ECC 0.55 1.36 0.76 1.53 —13.021 8.82

 

The best results are in bold.

To simplify, we deﬁne the ranking of a given method m,- with
respect to an assigned performance metric p, in a speciﬁc experi-
ment E as rank{m,-,p-,E). As these methods are compared in the
same task, the comprehensive ranking of m,, RS{m,-), is mea-
sured by

RS(m,-) = Zranldmi, 19,-, E) (9)

Sorting RS { m,- ) in increasing order gives the ﬁnal ranking of the
concerned methods. The rankings of different methods are listed
in Table 6. It suggests that SORA is at the top of the list by
smallest comprehensive ranking of 54. SORA is still the best
among these methods. The second is simGIC and RB is the third.

Generally, SORA is able to obtain better results and perform
better than other methods. The structure of G0 has a great
contribution to its success, as it implies expressive information
about gene function. Further analysis indicates that the group-
wise methods show better overall performances than pairwise
methods. It may be related to the ways of converting semantic
similarity into gene functional similarity. The pairwise methods
combine semantic similarity of terms into gene functional simi-
larity with the help of BMA. The group-wise methods take se-
mantic similarity between the term sets as gene functional
similarity in a single step. The way of converting in the latter
may be closer to reality than that in the former.

4 CONCLUSION

In this article, we put forward a novel method, namely SORA, to
measure gene functional similarity. It was evaluated against typ-
ical pairwise and group-wise methods on CESSM. From the ex-
perimental results, SORA is a more effective and reliable way to
estimate gene functional similarity than other tested methods.
The success of SORA may be related to the following
characteristics.

First, SORA makes use of semantic speciﬁcity and coverage to
measure the IC of the term. The term IC is determined by its
location in the GO hierarchy rather than the number of proteins
annotated with it. Thus, it can overcome the limitation of GOA
corpus bias, which affects the corpus-based approach heavily.
With the help of both semantic speciﬁcity and coverage, our
strategy could reﬂect the differences in semantics of terms
more objectively than the structural IC.

Second, SORA computes the IC of annotating term set by
combining the inherited and extended IC of the terms based
on the structure of GO. It can effectively avoid repeated sum-
ming of the shared IC of terms, which is the key point for esti-
mating the IC of the term set correctly.

Table 6. The rankings of the concerned methods

 

 

Rank RS ( m,- ) Method
1 54 SORA
2 69 simGIC
3 72 RB

4 76 simUI

5 92 LB

6 140 J B

 

Third, SORA uses simple reciprocal ICOR between the term
sets as gene functional similarity. It is an appropriate description
of functional relationship between genes. As discussed before,
SORA measures semantic similarity in a single step, regardless
of the number of annotations per protein, which is essential for
combining similarities of term pairs in pairwise approach. This
strategy has positive impacts on gene function comparison.

Moreover, from the results of our experiments, all of the meth-
ods performed better with E-terms than without. We consider
that sometimes the E-terms may provide new knowledge about
protein function, which has not been conﬁrmed by manual
means. High quality computational inferring of annotations
would promote the gene function comparison, which is one of
our interests in the future.

Funding: This work was supported by the Natural Science Foun-
dation of China (60932008, 61172098, 61271346); Specialized
Research Fund for the Doctoral Program of Higher Education
of China (20112302110040).

Conﬂict of Interest: none declared.

REFERENCES

Alvarez,M.A. and Yan,C. (2011) A graph-based semantic similarity measure for the
gene ontology. J. Bioinform. Compat. Biol, 9, 681—695.

Azuaje,F. et al. (2005) Ontology-driven similarity approaches to supporting gene
functional assessment. In: Proceeding of the ISMB 2005 SIG Meeting on Bio-
ontologies. MI, USA, pp. 9—10.

Batet,M. et al. (2011) An ontology-based measure to compute semantic similarity in
biomedicine. J. Biomed. Inform., 44, 118—125.

Brameier,M. and Wiuf,C. (2007) Co-clustering and visualization of gene expression
data and gene ontology terms for Saccharomyces cerevisiae using self-organizing
maps. J. Biomed. Inform., 40, 160—173.

Chabalier,J. et al. (2007) A transversal approach to predict gene product networks
from ontology-based similarity. BM C Bioinformatics, 8, 235.

Chen,J. et al. (2009) Disease candidate gene identiﬁcation and prioritization using
protein interaction networks. BM C Bioinformatics, 10, 73.

Chen,X. et al. (2012) A sensitive method for computing GO-based functional simi-
larities among genes with ‘shallow annotation’. Gene, 509, 131—135.

Chen,Y. and Xu,D. (2004) Genome-scale protein function prediction in yeast
Saccha—romyces cerevisiae through integrating multiple sources of high through-
put data. Nucleic Acids Res., 32, 6414—6424.

Cho,Y.R. et al. (2007) Semantic integration to identify overlapping functional mod-
ules in protein interaction networks. BM C Bioinformatics, 8, 265.

Cho,Y.R. et al. (2009) Semantic similarity based feature extraction from microarray
expression data. Int. J. Data Min. Bioinform., 3, 333—345.

Couto,F.M. et al. (2005) Semantic similarity over the gene ontology: Family correla-
tion and selecting disjunctive ancestors. In: Proceedings of the 14th ACM
International Conference on Information and knowledge Management. Bermen,
Germany, pp. 343—344.

 

112 /810's112umo [p.IOJXO'SOUBIHJOJUIOIQ/ﬁ(11111 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Z.Teng et al.

 

Couto,F.M. et al. (2011) Disjunctive shared information between ontology con-
cepts: application to Gene Ontology. J. Biomed. Semantics, 2, 5—21.

Gentleman,R. et al. (2005) Visualizing distances. In: Bioinformatics and computa-
tional biology solutions using R and Bioconductor. Springer, New York,
pp. 170—173.

GO-Consortium. (2004) The Gene Ontology (GO) database and informatics re-
source. Nucleic Acids Res, 32, D258—D261.

Guzzi,P.H. et al. (2011) Semantic similarity analysis of protein data: assessment with
biological features and issues. Brief Bioinform., 5, 569—585.

Huang,D.W. et al. (2007) David gene functional classiﬁcation tool: A novel biolo-
gical module centric algorithm to functionally analyze large gene list. Genome
Biol., 8, R183.

Jain,S. and Bader,G.D. (2010) An improved method for scoring protein-protein
interactions using semantic similarity within the gene ontology. BM C
Bioinformatics, 11, 562—575.

Jensen,L.J. et al. (2003) Prediction of human protein function according to Gene
Ontology categories. Bioinformatics, 19, 635—642.

Jiang,J.J. and Conrath,D.W. (1998) Semantic similarity based on corpus statistics
and lexical taxonomy. In: Proceedings of International Conference on Research in
Computational Linguistics. Taiwan, China, pp. 19—33.

Lee,H.K. et al. (2004) Coexpression analysis of human genes across many micro-
array data sets. Genome Res, 14, 1085—1094.

Li,D. et al. (2008) PRINCESS, a protein interaction conﬁdence evaluation system
with multiple data sources. Mol. Cell. Proteomics, 7, 1043—1052.

Lin,D. (1998) An information-theoretic deﬁnition of similarity. In: Proceeding of the
15th International Conference on Machine learning. Morgan Kaufmann, San
Fran-cisco, CA, pp. 296—304.

Lin,N. et al. (2004) Information assessment on predicting protein-protein inter-
actions. BM C Bioinformatics, 5, 154.

Lord,P. et al. (2003) Investigating semantic similarity measures across the Gene
Ontology: the relationship between sequence and annotation. Bioinformatics,
19, 1275—1283.

Nariai,N. et al. (2007) Probabilistic protein function prediction from heterogeneous
genome-wide data. PLoS One, 2, e337.

Mathur,S. and Dinakarpandian,D. (2011) Finding disease similarity based on im-
plicit semantic similarity. J. Biomed. Inform., 45, 363—371.

Martin,D. et al. (2004) GOToolBox: functional analysis of gene datasets based on
Gene Ontology. Genome Biol., 5, R101.

Mistry,M. and Pavlidis,P. (2008) Gene ontology term overlap as a measure of gene
functional similarity. BM C Bioinformatics, 9, 327.

Ortutay,C. and Vihinen,M. (2009) Identiﬁcation of candidate disease genes by inte-
grating Gene Ontologies and protein interaction networks: case study of pri-
mary immune deﬁciencies. Nucleic Acids Res, 37, 622—628.

Pesquita,C. et al. (2008) Metrics for go based protein semantic similarity: a system-
atic evaluation. BM C Bioinformatics, 9 (Suppl. 5), S4.

Pesquita,C. et al. (2009a) Semantic similarity in biomedical ontologies. PLoS
Comput. Biol., 5, 61000443.

Pesquita,C. et al. (2009b) CESSM: collaborative evaluation of semantic similarity
measures. In: Proceeding of JB 2009: Challenges in Bioinformatics. Lisbon,
Portugal.

Pozo,A.D. et al. (2008) Deﬁning functional distances over gene ontology. BMC
Bioinformatics, 9, 50.

Qu,Y. and Xu,S. (2004) Supervised cluster analysis for microarray data based on
multivariate Gaussian mixture. Bioinformatics, 20, 1905—1913.

Resnik,P. (1999) Semantic similarity in a taxonomy: an information based measure
and its application to problems of ambiguity in natural language. J. Artif. Intell.
Res, 11, 95—130.

Riensche,R.M. et al. (2007) XOA: Web-enabled cross-ontological analytics. In:
Proceeding of IEEE Congress on Services. Salt Lake City, UT, pp. 99—105.
Schlicker,A. et al. (2007) Functional evaluation of domain-domain interactions and

human protein interaction networks. Bioinformatics, 23, 859—865.

Schlicker,A. et al. (2010) Improving disease gene prioritization using the semantic
similarity of Gene Ontology terms. Bioinformatics, 26, i561—i567.

Seco,N. et al. (2004) An intrinsic information content metric for semantic similarity
in WordNet. In: Proceedings of 16th European Conference on Artificial
Intelligence. Valencia, Spain, pp. 1089—1090.

Sevilla,J.L. et al. (2005) Correlation between gene expression and go semantic simi-
larity. IEEE/ACM Trans. Comput. Biol. Bioinform., 2, 330—338.

Sheehan,B. et al. (2008) A relation based measure of semantic similarity for gene
ontology annotations. BM C Bioinformatics, 9, 468.

Tversky,A. (1977) Features of similarity. Psychol. Rev., 84, 327—351.

Wang,J.Z. et al. (2007) A new method to measure the semantic similarity of go
terms. Bioinformatics, 23, 1274—1281.

Wang,J. et al. (2010) Revealing and avoiding bias in semantic similarity scores for
protein pairs. BM C Bioinformatics, 11, 290.

Yang,D. et al. (2008) Gaining conﬁdence in biological interpretation of the micro-
array data: the functional consistence of the signiﬁcant GO categories.
Bioinformatics, 24, 26—271.

Yang,H. et al. (2012) Improving GO semantic similarity measures by exploring the
ontology beneath the terms and modelling uncertainty. Bioinformatics, 28,
1383—1389.

Ye,P. et al. (2005) Gene function prediction from congruent synthetic lethal inter-
actions in yeast. Mol. Syst. Biol., 1, 0026.

Yilmaz,S. et al. (2009) Gene-disease relationship discovery based on model-
driven data integration and database view definition. Bioinformatics, 25,
230—236.

Yu,H. et al. (2007) Total ancestry measure: quantifying the similarity in tree-like
classiﬁcation, with genomic applications. Bioinformatics, 23, 2163—2173.

 

112 /810's112umo [p.IOJXO'SOUBIHJOJUIOIQ/ﬁ(11111 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

