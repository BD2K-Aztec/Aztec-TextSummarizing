Bioinformatics, 31 (24), 2015, 3994—3996

doi: 10.1093/bioinformatics/btv478

Advance Access Publication Date: 18 August 2015
Applications Note

 

Sequence analysis

svviz: a read viewer for validating structural
variants

Noah Spies1'2'3'*, Justin M. Zook‘, Marc Salit3 and Arend Sidow1'2

1Department of Genetics, Stanford University, 2Department of Pathology, Stanford University, 3Genome Scale
Measurements Group, National Institute of Standards and Technology, Stanford, CA, USA and 4Genome Scale
Measurements Group, National Institute of Standards and Technology, Gaithersburg, MD, USA

*To whom correspondence should be addressed.
Associate Editor: lnanc Birol

Received on May 15, 2015; revised on July 20, 2015; accepted on August 10, 2015

Abstract

Summary: Visualizing read alignments is the most effective way to validate candidate structural
variants (SVs) with existing data. We present svviz, a sequencing read Visualizer for SVs that sorts
and displays only reads relevant to a candidate SV. svviz works by searching input bam(s) for po-
tentially relevant reads, realigning them against the inferred sequence of the putative variant allele
as well as the reference allele and identifying reads that match one allele better than the other.
Separate views of the two alleles are then displayed in a scrollable web browser view, enabling a
more intuitive visualization of each allele, compared with the single reference genome-based view
common to most current read browsers. The browser view facilitates examining the evidence for
or against a putative variant, estimating zygosity, visualizing affected genomic annotations and
manual refinement of breakpoints. svviz supports data from most modern sequencing platforms.

Availability and implementation: svviz is implemented in python and freely available from http://

 

svviz.github.iol.
Contact: nspies@stanford.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

The human eye has an unparalleled ability to identify patterns from
visual representations of data. Although the identification of muta-
tions from high-throughput sequencing has been largely automated,
visual inspection of putative variants using tools such as the integra-
tive genomics viewer (IGV; Robinson et al., 2011) remains an im-
portant step in ensuring the quality and relevance of these variant
calls. However, existing read visualizing tools such as IGV are
largely constrained by a reference-genome-centric display model.
Hence, point mutations can be represented easily as mismatched
bases within sequencing data but more complex structural variants
(SVs) including insertions, deletions, translocations and inversions
are more difficult to parse visually against the linear reference gen-
ome sequence. Newer tools are able to represent short indels within
sequencing data but do not help in representing larger SVs
(Edmonson et al., 2011; Gymrek, 2014).

Support for SVs can be displayed within IGV by highlighting
reads with certain characteristics, including read-pairs mapping to
distant regions of the genome or in unexpected orientations, or trun-
cated alignments. However, it is difficult to identify from these high-
lighted, discordantly mapping reads whether they all agree with a
putative variant, and if so, which variant. Furthermore, IGV relies
on the quality and completeness of the alignments provided in input
BAM files, which are produced en masse against a huge reference
genome and hence may not optimally represent read support for a
given variant. Finally, most existing viewers (a notable exception
being TargetSquiew; Halper-Stromberg et al., 2014) show all read
data in the vicinity of a putative SV, making it difficult to discrimin-
ate reads supporting the SV, reads supporting the reference allele
and reads that are not relevant to an SV.

To overcome these limitations, we present svviz, a read visu-
alizer for SVs that sorts and displays only reads relevant to the

Published by Oxford University Press 2015. This work is written by US Government employees and is in the public domain in the US. 3994

9mg ‘09 isnﬁnV uo seleﬁuV soq ‘erulomeg JO misreAtu [1 112 [3.10811211an[plOJXO'SODBIILIOJIITOTQ/ﬂ(11111 wort pepeolumoq

svviz

3995

 

current SV. As with IGV, svviz only visualizes variants and does
not identify them. svviz runs locally on a standard 05 X or
Linux desktop machine and requires as input read data, a refer-
ence genome and SVs. The flexible approach employed by svviz
means it can display arbitrary SV types such as translocations,
deletions and insertions, inversions and mobile-element insertions.
Visualizations are rendered in scalable vector graphics (SVG), an
open web standard graphics format, and shown in a locally
hosted interactive web browser viewer or exported in publica-
tion-ready form. svviz supports read data in BAM format from
any sequencing platform, including short-read [Illumina (Bentley
et al., 2008)] single- and paired-end as well as mate-pair or lon-
ger read [Pacific Biosciences (Eid et al., 2009), Oxford Nanopore
or Illumina’s synthetic long-reads] sequencing technologies. In
batch mode, multiple SVs can be provided as input in the stand-
ard variant call format (VCF), producing summary statistics and
PDF or SVG visualizations for hundreds or thousands of SVs
with a single command. Annotations such as gene models or re-
peats can be shown relative to each allele.

2 Methods

svviz performs several preprocessing steps before visualizing a par-
ticular SV:

1. Breakpoints for the input SV are processed to produce a repre-
sentation of the unique genomic sequence of the SV.
2. Reads are identiﬁed that map near all SV breakpoints.

S“

For paired-end data, read mates are collected.

4. Reads are realigned both to the alternate (SV) allele and to the
reference allele by Smith-Waterman alignment (Zhao et al.,
2013).

5. Reads are assigned to the reference or alternate allele if they
better support one allele over the other; otherwise, they are
labeled as ambiguous. The criteria for this step are described
later.

6. Reference and alternate alleles are visualized separately with in-

dividual tracks for each input sample for each allele. Ambiguous

reads, typically mapping near but outside of the breakpoints,
can also be visualized in a third set of tracks.

Realigned reads are assigned to the allele with the higher
alignment score, or (if scores are identical), the allele with the
better match to the empirical insert size distribution (derived
from the input BAM file). Reads that cannot confidently be as-
signed to one allele or the other are instead marked as ambiguous,
for example when read-pair orientations are incorrect or the
alignment score is below that expected for the given sequencing
platform.

This process extends the approach adopted in TargetSquiew
(Halper-Stromberg et al., 2014), enabling allele assignment of arbi-
trary length reads (eg, those produced by long-read technologies)
and taking advantage of the insert size distribution, which can be
more informative than the alignment score.

3 Results

The Genome in a Bottle consortium (Zook et al., 2014) has recently
begun sequencing an Ashkenazi Jewish trio from the Personal
Genome Project with a number of high-throughput sequencing plat-
forms, providing a rich resource for identifying and validating vari-
ants using orthogonal experimental methods. SVs were called from

Complete Genomics data for mother, father and son separately.
From these variant calls, we randomly chose an 1 1.5 kb inversion on
Chromosome 4 to visualize and validate using long mate-pair
Illumina data.

The visual representation is split into two sections. The top sec-
tion (Fig. 1a) shows reads supporting the alternate ‘inversion’ allele,
while the bottom section (Fig. 1b) shows those supporting the refer-
ence allele. Each read is shown only once, relative to its assigned
allele.

For the alternate allele, mate-pair reads tile across the break-
points in both parents, while no reads were found in the son. All
three individuals show ample coverage of the reference allele break-
points. The number of reads assigned by svviz to each allele sug-
gests the son is homozygous reference and both parents are
heterozygous for the inversion. Supplementary Figure 51 shows the
same data represented in IGV, with likely non-reference reads

 

 

 

 

(a) Son
No reads found
Father I, , I
III; 'IIIIIII I! 'IIII
J" I- " '-
II" I! I I ’I III" III III.
.I' I '-' " I . '
II I'D. ' I I I in?" -II
Mother I, I
/ I.' I. f
J. J. ' II. | I I! . I
I I“ . ‘ I .f .I
ii". ." I I II:- " 'I- f '-
I l' I. 'I: I,- I-. II 'I
II" I ':I I! f; ,III 'IIII
_ _ bre_a(point A A A Abrea<poini _ L L
V I V V I V ‘ ‘ I ‘ ‘ I ‘ VI 7 V I V
5.0KB 10.0KB 15.0K 20.0KB 25.0KB 30.0KB
(b) Son I, 
2' I I'rI I
III I I I
' ' Il :
If ' I ll -
r '. I
r I , If, . -
al
/ . I I I  I ' I I
' 'l. f I.
/ l I I / I I I
.' ' -l I
.I' '1.
J,  I If "i .'
I'I I]! III II f "It I? 1
Father .
I'III ' II J l
‘1 '. I ff ::I."
f n I l f I I ' I
I, -" I: "I ‘l I
II. I; I ' ' ' J
IIF I I ' I III. II
'1... ."-I' : ('f t I I
II} I I I . Jnl'. II
Mother / I .
-' .  I; ' , i
.I' 'll’. I I In" ‘ I. I ‘
I' I ' I I F l ‘I
f I "I I.- If. u. I I "
 I':Ii." ] "f .-' I '
{fl I. . 'II I II. I ' I.
brea (point brea (point
L L L L L L L L L L L
V I V V I V V IV V r V VI 7 V I V
5.0KB 10.0KB 15.0KB 20.0KB 25.0KB 30.0KB

 

Fig. 1. swiz visualization of a Chromosome 4 inversion. (a) Reads supporting
the alternate allele in three individuals. Blue region with arrows pointing to
the left demarcate the inverted region. (b) Reads supporting the reference al-
lele, with non-inverted region again shown in blue at bottom (but arrows
pointing to the right). Red reads are on the minus strand and purple reads are
on the plus strand, with gray lines linking mate-pairs (note that the mate-pair
data shown here are sequenced in —/+ orientation, and have an average in-
sert size of ~6.5 kb). Ambiguous reads, those unable to distinguish between
the alleles, are not shown

9mg ‘09 isnﬁnV uo seleﬁuV soq ‘BIIIJOJHBQ JO AIISJQAIII [1 112 [3.10811211an[plOJXO'SODBIILIOJIIIOIQ/ﬂ(11111 wort pepeolumoq

3996

N.Spies et al.

 

colored maroon and blue, suggestive of a SV but difficult to interpret
as an inversion.

Additional visualization examples are shown in the supple-
ment: a putative 1200 bp deletion for which svviz shows very lit-
tle supporting evidence, and which we thus estimate is a false-
positive (Supplementary Fig. 52); an inversion with PacBio reads
spanning both breakpoints (Supplementary Fig. S3); svviz being
used to refine imprecisely called breakpoints (Supplementary Fig.
S4); a mobile-element insertion (Supplementary Fig. SS); a fusion
gene present in a cancer sample but not the matched normal
sample (Supplementary Fig. S6); a heterozygous deletion with
reads in ﬂanking regions shown to demonstrate the reduction in
read coverage within the deletion (Supplementary Fig. S7) and a
screenshot of the web view, zoomed in to show a single nucleo-
tide polymorphism (SNP) present only in the alternate allele
(Supplementary Fig. S8).

3.1 Usage

svviz can be installed on OS X and Linux using the single command
‘sudo pip install svviz’ (requires python and pip to be installed; see
the online documentation at http://svviz.github.io/ for detailed in-
stallation instructions). It takes ~10—30 s to analyze and visualize a
single variant in a single sample on a 2014 Mac Pro. The number of
samples that can be visualized simultaneously is limited only by
practical concerns; processing time scales with the number of sam-
ples and reads as well as the size of the variant and lengths of the
reads.

The inversion shown in Figure 1 can be visualized using the
command ‘svviz demo’ and the mobile-element insertion in
Supplementary Figure SS can be visualized using the command
‘svviz demo 2’.

Acknowledgements

The authors thank the Genome in a Bottle Consortium and Complete
Genomics for making the data publicly available. Certain commercial equip-
ment, instruments or materials are identiﬁed in this document. Such identiﬁ-
cation neither does imply recommendation or endorsement by the National
Institute of Standards and Technology nor does it imply that the products
identiﬁed are necessarily the best available for the purpose.

Funding

NS was funded by a National Research Council Postdoctoral Fellowship.

Conﬂict of Interest: none declared.

References

Bentley,D.R. et al. (2008) Accurate whole human genome sequencing using re-
versible terminator chemistry. Nature, 456, 53—59.

Edmonson,M.N. et al. (2011) Bambino: a variant detector and alignment
viewer for next-generation sequencing data in the SAM/BAM format.
Bioinformatics, 27, 865—866.

Eid,]. et al. (2009) Real-time DNA sequencing from single polymerase mol-
ecules. Science, 323, 133—138.

Gymrek,M. (2014) PyBamView: a browser-based application for viewing
short read alignments. Bioinformatics, 30, 3405—3407.

Halper-Stromberg,E. et al. (2014) Visualization and probability-based scoring
of structural variants within repetitive sequences. Bioinformatics, 30,
1514—1521.

Robinson,].T. et al. (2011) Integrative genomics viewer. Nat. Biotechnol., 29,
24—26.

Zhao,M. et al. (2013) SSW library: an SIMD Smith-Waterman C/C++ library
for use in genomic applications. PLoS One, 8, e82138.

Zook,].M. et al. (2014) Integrating human sequence data sets provides a re-
source of benchmark SNP and indel genotype calls. Nat. Biotechnol., 32,
246—25 1.

9mg ‘09 1sn8nV uo seleﬁuV soq ‘121u10111123 10 A11819A1uf1 112 ﬁhO'sleumo[p101x0'831112u1101u101q/ﬁd11q 111011 pepeolumoq

