APPLICA TIONS NOTE V"" “33.5%. lggi‘iéi’aiﬁé’i’iiiff/Eiﬁiﬁ

 

Data and text mining

Advance Access publication April 29, 2014

Vacceed: a high-throughput in silico vaccine candidate discovery
pipeline for eukaryotic pathogens based on reverse vaccinology
Stephen J. Goodswenl, Paul J. Kennedy2 and John T. Ellis”

1School of Medical and Molecular Biosciences, The ithree Institute and 2Faculty of Engineering and Information
Technology, School of Software, The Centre for Quantum Computation and Intelligent Systems, University of Technology

Sydney (UTS), Ultimo, NSW 2007, Australia

Associate Editor: Jonathan Wren

 

ABSTRACT

Summary: We present Vacceed, a highly configurable and scalable
framework designed to automate the process of high-throughput in
silico vaccine candidate discovery for eukaryotic pathogens. Given
thousands of protein sequences from the target pathogen as input,
the main output is a ranked list of protein candidates determined by a
set of machine learning algorithms. Vacceed has the potential to save
time and money by reducing the number of false candidates allocated
for laboratory validation. Vacceed, if required, can also predict protein
sequences from the pathogen’s genome.

Availability and implementation: Vacceed is tested on Linux and can
be freely downloaded from https://github.com/sgoodswe/vacceed/re
leases (includes a worked example with sample data). Vacceed User
Guide can be obtained from https://github.com/sgoodswe/vacceed.
Contact: John.Ellis@uts.edu.au

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on January 30, 2014; revised on April 1, 2014; accepted on
April 23, 2014

1 INTRODUCTION

Several subunit vaccines against prokaryotic pathogens have
been identified (Ariel et al., 2002; Montigiani et al., 2002; Ross
et al., 2001) using reverse vaccinology (Rappuoli, 2000). Vaxign
(He et al., 2010) and NERVE (Vivona et al., 2006) are examples
of vaccine discovery tools for prokaryotes, but there is currently
no equivalent tool for eukaryotes. Freely available bioinfor-
matics tools and an unprecedented volume of —omics data now
present an opportunity for in silica vaccine discovery for eukary-
otic pathogens. A general approach is to use several tools to
predict and gather evidence for protein characteristics. From
this potential evidence, the researcher makes an informed deci-
sion as to a protein’s vaccine candidacy suitability. Determining
which tools are appropriate, as well as how to use them, presents
the first of many challenges. A further challenge, especially to a
researcher with limited programming ability, is to extract and
gather the pertinent evidence distributed within large-scale out-
puts. The subsequent and more imposing challenge is that the
evidence is mainly in different formats, contradicting and in-
accurate. Poor evidence reliability arises because some of the
input data to the tools (e.g. protein sequences and training

 

*To whom correspondence should be addressed.

data) are inaccurate or missing. Moreover, tools used to predict
protein characteristics are, in general, inaccurate.

Vaccine candidates identified in silica can only be validated in
a laboratory. Validation should provide feedback to inform and
improve vaccine candidacy decision making. The repetitive
nature for this ideal in silica approach is in need of automation.
Furthermore, an automated process must accommodate an ever-
increasing choice of new or improved prediction programs that
inevitably replace existing ones.

We have developed Vacceed to address the challenges raised
here i.e. to provide a flexible, automated process to predict
worthy vaccine candidates from large volumes of superﬂuous,
disseminated and noisy data. Vacceed is the collective name for
a framework of linked bioinformatics programs, Perl scripts, R
functions and Linux shell scripts. A previous published study
provided guidance in development (Goodswen et al., 2013b).

2 DISTINCTIVE FEATURES

A detailed description of all aspects of Vacceed is provided in a
comprehensive user guide provided as Supplementary
Information. The focus of this article is to introduce Vacceed
via a selection of distinctive features.

The Vacceed framework is built around the concept of linked
resources (see Fig. 1). Each resource, in this context, is built from

(he sulfur-auralch rule Pic-vallﬂatinn Postwallﬂalicn

“I each PEWDQEH  “I  —1 Prune-3555
__-. .. ----- subsets Ell
_ _ @ ~.- {a “— [9, -- t .
“if .' 1' -—. _.I '.:'f: _J MEET”
. . H5. _
“I”  Wit 1’: 93:0 Process-as
W' ,—' _ ... \—' subsets pl
Lg  '  prctsins par
: '11:: :1":- cm
Heads conﬁguration Fila- “' "'-
g ,5 | Menarcdminnﬂgram ]
“if Ill-J};
Martins-
H 1-' ti; @Lﬁarning E
:parl startup :- Eli-El“; T. .r AlguritIu-ns

Vaccine
candidates

Grea1ss a. master Plantar sit-Ell 5mm Flssuurcs shell scripts run
shall scrim 1|:Ir mrrsscutivsly runs sub-errms shall ssripds in
526.1th resource shell scripts Fall'th

mmrﬁm Shell W5

Fig. 1. Vacceed framework. A set hierarchal structure exists for the exe-
cution of all Vacceed scripts e.g. startup —> master script —> resource
script —> subordinate script (only three resources are shown to maintain
clarity)

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/Iicenses/by/3.0/), which
permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /310's113umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁ(1111] U101} popcoplmoq

9IOZ ‘09 lsnﬁnv uo ::

S.J.Goodswen et aI.

 

a central Linux shell script encapsulating all programs needed to
perform speciﬁc but related tasks. Typical tasks include pre-
dicting a particular protein characteristic as well as pre- and
post-validation. A resource can be executed as an independent
modular unit. This flexible design allows for scalability and easy
maintenance. Any prediction program can be integrated within
an existing or new resource if it meets the following criteria: runs
in a Linux environment, has high-throughput capability, is ap-
plicable to eukaryotes, can be trained or has trained data speciﬁc
to target pathogen and provides consistent text output. From a
user’s perspective, all the work involved in the complexity of
linking tasks and resources into a seamless continuous pipeline
has already been resolved in Vacceed. The only time a user must
be concerned with the contents of a resource is when adding a
new one. There is a template resource script and generic Perl
scripts to ease this process.

Core to Vacceed are user-deﬁnable conﬁguration ﬁles
(see Fig. 2). These ﬁles are in effect the user’s interface to con-
ﬁguring each resource, if desired, and consequently controlling
the outcome of the entire pipeline. For example, by altering

 

I w" . -'= . I Headers denoted by squared brackels
namE:WULFI,Iitjﬂlyllﬂ:§lgiflﬁl:E.TEFIGETP'.F‘HCIEIIILJS,MHCI.MHCFI.EVIDENGE
[If . - Keys precede- equal signs
- =n - In meal cases, only hay IIIIIImt-a under the
:‘pﬂéﬂF difﬁﬂﬂiﬂﬂy L r: .1 It; header need In be- mudl‘ﬂad by near J
mestergscript='meslar_script" '
|cg_file-ﬁwcrlLdir.’$spede=s_dir_lpglile.btt' [he It“! can he used a“ "HE-bin ]

 

 
   

 

eg. '1' character preceding a ward dannlee
a varlshle In be substituted by key value
an program cxmt‘ien iﬂ'ﬂl an l'ﬂlil'lli

email_url= i-reti.BltJt1t:t-: r'il :-'.| I I-:J+! I I1 lJIHJZ-I'Eil . . H ._J

 

prcgldir-"$wcrl-t_+:Iin$epecies_din'pip-e|inef$rescurce_dir"
scrip1_dir="$mrk_dirt5species_cirrpupetinstirescurcidriscrpts‘
cut_clir:"SalerIt_din$species_dir."pipelinet‘lirescutcejirfcutput"

 

(Each resource has I haadalra. Haeeurce
5 name is. nanaialenl with name- under

_ ; _Hr-:- -.ur-.---.-.i Mada. He "ml! to nan-lube: cf
.pmmwmmm meme

1 amounted In mmarieal urea:

 - 
pmlecms-_faste="test.fasta"

'1='mt1_scrtpt'
2='trelidale_prcgram"

 

I..- . . . -. !
1="$prctecrne_lasls $scripl_dir $cut_:lir $prcg_clir‘
2="$prcg_dir'

Fig. 2. Extract of a Vacceed conﬁguration ﬁle deﬁned by a header-key
format (only one resource, WOLF PSORT, is shown for brevity)

Table 1. Programs currently integrated in Vacceed

names in a list, the user can determine the resources to be run
and their order. The expectation is to have one conﬁguration ﬁle
for each target pathogen. The command-line syntax to invoke
Vacceed is ‘perl startup xx’, where xx determines the appropriate
conﬁguration ﬁle. Specifying a code allows for multiple instances
of Vacceed to process different species or resource combinations.
No other user input is needed. An e-mail with attached log ﬁle is
sent on successful completion or immediately following an error.

The framework is organized into two major parts referred
henceforth as part A—build proteome, and part B—run pipeline
(see Fig. 3). Table 1 lists the programs currently integrated in
each part. A starting prerequisite for part B is a ﬁle containing
amino acid sequences for proteins from the target eukaryotic
pathogen i.e. the proteome. Known protein sequences for
many pathogens can be downloaded from public databases.
Part A is used, only if required, to predict novel protein se-
quences and/or collect evidence to support the existence of
known proteins. Part A resources typically predict genes, which
is one among multiple tasks within linked resources involved in
building the proteome. Examples of other tasks are validating
gene start and end sequences (e.g. ATG, TAA, TAG or TGA),

Fan in: BLiId plutenmei Part a: nun Pipeline
q— : —h

I
I
farcical dc sentences Predict
Genes

Feedback for Ireining —|n-

Predict 

 

Sub-cellular lamina-1
Transmembrane Isl-emails
Signal DEFINE?-

Eptmpes

Pl'DiE'II'I sequences

 

 

 

Evidence
Profiles

 

 

Hermlcm Forest

Supp-art Veal-at Macb'rlas
adaptive beaming
Ir-nearcst nclghtmur
Naive Bayes

Neural netmrl-c

 

 

 

   

Machine Learning Algerill‘lme

Lal:H:Ira1n:|r].I I.'alil:'.'aIi-t:un

Fig. 3. Schematic of data ﬂow in Vacceed

 

Name Function

URL (last viewed May 2014)

 

Part A—Build proteome

Augustus Ab initia gene predictor

http://bioinf.uni—greifswald.de/augustus

GlimmerHMM Ab initia gene predictor http://ccb.jhu.edu/software/glimmerhmm
BLAT Aligns expressed sequence tags (ESTs) to DNA http://genome.ucsc.edu/FAQ/FAleathtml
GMAP Aligns expressed sequence tags (ESTs) to DNA http://research—pub.gene.com/gmap
N-Scan Ab initia gene predictor supported by genome comparison http://mblab.wustl.edu/software.html
BLASTN Finds regions of similarity between nucleotide sequences http://www.ncbi.nlm.nih.gov
BLASTP Finds regions of similarity between protein sequences http://www.ncbi.nlm.nih.gov

Part B—Run pipeline (vaccine candidate discovery)
WoLf PSORT Protein subcellular localization prediction http://wolfpsort.seq.cbrc.jp
SignalP Predicts presence and location of signal peptide cleavage sites http://www.cbs.dtu.dk/services/SignalP
TargetP Protein subcellular localization prediction http://www.cbs.dtu.dk/services/TargetP
Phobius Combined transmembrane topology and signal peptide predictor http://phobius.binf.ku.dk/instructions.html
TMHMM Prediction of transmembrane helices in proteins http://www.cbs.dtu.dk/services/TMHMM

MHC I-binding
MHC II-binding

Peptide binding to MHC class I molecules
Peptide binding to MHC class II molecules

http://tools.immuneepitope.org/mhci/download
http://tools.immuneepitope.org/mhcii/download

 

 

2382

112 /310's113umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁ(1111] U101} popcoplmoq

9IOZ ‘09 lsnﬁnv uo ::

Vacceed: a high-throughput in silico vaccine candidate discovery pipeline

 

predicting exon locations relative to gene start, converting pre-
dictions to amino acid sequences and homology searching.

Part B resources predict protein characteristics. One resource
called ‘Evidence’, however, parses output ﬁles and collates
relevant protein characteristics (referred henceforth as an evi-
dence proﬁle). A typical proﬁle is a mixture of data types
corresponding to an accuracy measure or score for the pre-
dicted characteristic (see Fig. 4). A crucial feature of the re-
source is a set of supervised machine learning algorithms for
binary classiﬁcation executed via Rscript. The ensemble of
classiﬁers constitutes the heart of Vacceed’s decision making.
The main output is a ranked vaccine candidate list of all pro-
teins in the target pathogen based on an average probability of
individual classiﬁer predictions (see Fig. 4). Machine learning
algorithms are the key to overcoming the challenge that an
unknown percentage of evidence is questionable in each
proﬁle.

Resources encapsulate, for the most part, a large number of
independent computation-intensive tasks. Vacceed takes advan-
tage of multi-core processors. Part A processes one chromosome
per CPU in parallel. Chromosomes are queued if there are more
chromosomes than CPUs. The user, however, can specify the

a”
(Each cclurnrr cmtcinc I speciﬁc cutput value lrcrn prcgmns and by Vacceed Ic prcdlct prclcln

chaaclarlaﬂca. Each rear cumulus a celeclian ul output values specific tu- enepraledn and represents an
auldurrce preﬁla. Machine learning {MLJ atuurillrmts esplnlt a ﬁlm-rallied pattern IIIth [III mllacﬁm el
(Lieuldence pmﬂlee Ier the purpose: el vaccine deaeIILc-aﬂu-n. J

 

DQUB1 20.110.495.11 TDE.S-.II.13.AID.EL1 S.¢.23..|15ecre1ed.l:l.5-|1.IJ.EIII Ew'dalnca
chrle_newlﬂ.ﬂ ,N ,EI.3CIE.E1I.EEI 5.2.“ .1'2 ,22.3D.2,Q_0,Mernbrane.0.91 .032 prﬂfliES
BEKEMEJNJZIJ 150.510.55.52. 39.21211 .330.t}.|'r|'rembrarre.ﬂ 55.0.62
DQNGFIEJJNHJ13.113111-.U.3.|J.05.EI.E||J.D.EI.HDT _5Ere1ed_ct_n1e111brane.ﬂ.2?.ﬂ. El]

 

accre- represente a conﬁdence level that a ‘yes' vane-Ina claeeilltcatlun is correct. in average ecu-re larall

r,
Each whim“ puntelna 31 average pure-bahllltu BCEI'EI between D and 1 generated by a IILalprJIlthm. Thia
INIIIL scares Ia reported in last echmn and determines ranll. of protein In vaccine candlda’ta list.

 

1291.131 2.1 UEIIZIJBUDJDDDJ 0011.1 000,1 .uau.u.5uu_1 .0011
Chl'lLﬂewWJ 000.1.IJWJ nuance-3.1 UBU.‘.WU.0.U1D.1.DW
EBKEM3.0 lﬂﬂﬂﬁﬁlﬂﬂﬂﬂj UMﬂﬂEEﬂJUﬂ-ﬂ 3?U.0.3l51'
OHM-GREEWOﬂﬂDUﬂﬂUU.Ill-WD.D.UIJO.U.DUT.G.TUG.U.DD1

Ranked vaccine candidate list

Fig. 4. Examples of evidence proﬁles and a ranked vaccine candidate list
(only four proteins out of potentially thousands constituting the target
pathogen are shown for brevity)

number of chromosomes to process in parallel. Part B internally
splits the proteins by the number of CPUs and processes each
subset in parallel. Alternatively, the user can specify the split
value.

Proof of concept: There is no program yet to evaluate in silica
vaccine candidates in a host—vaccine interaction. The best interim
option is to validate the in silica process by predicting candidates
using experimentally validated proteins with known immunogen-
icity characteristics i.e. compare predicted with expected to de-
termine sensitivity and speciﬁcity of the process. Using a mixed
dataset of 140 published proteins observed to induce or not
induce immune responses, we demonstrated in an earlier study
(Goodswen et al., 2013a) Vacceed’s decision making potential by
effectively distinguishing expected true from expected false vac-
cine candidates, with an average sensitivity and speciﬁcity of 0.97
and 0.98, respectively.

Funding: PhD scholarship from Zoetis (Pﬁzer) Animal Health.

Conﬂict of Interest: none declared.

REFERENCES

Ariel,N. et al. (2002) Search for potential vaccine candidate open reading frames in
the Bacillus anthracis virulence plasmid pXOl: in silica and in vitra screening.
Infect. Imman., 70, 6817—6827.

Goodswen,S.J. et al. (2013a) A novel strategy for classifying the output from an in
silica vaccine discovery pipeline for eukaryotic pathogens using machine learn-
ing algorithms. BM C Bioinformatics, 14, 315.

Goodswen,S.J. et al. (2013b) A guide to in silica vaccine discovery for eukaryotic
pathogens. Brief Biainfarm., 14, 753—774.

He,Y. et al. (2010) Vaxign: the ﬁrst web-based vaccine design program for reverse
vaccinology and applications for vaccine development. J. Biomed. Biotechnol,
297505.

Montigiani,S. et al. (2002) Genomic approach for analysis of surface proteins in
Chlamydia pneumaniae. Infect. Imman, 70, 368—379.

Rappuoli,R. (2000) Reverse vaccinology. Curr. Opin. M icrabial., 3, 445—450.

Ross,B.C. et al. (2001) Identification of vaccine candidate antigens from a genomic
analysis of Porphyromonas gingivalis. Vaccine, 19, 4135—4142.

Vivona,S. et al. (2006) NERVE: new enhanced reverse vaccinology environment.
BMC Biotechnol, 6, 35.

 

2383

112 /§Jc'spaumc [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 1110.1} popeoplmoq

9IOZ ‘09 lsnﬁnv uo ::

