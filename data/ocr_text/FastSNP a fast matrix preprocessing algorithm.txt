Bioinformatics Advance Access published August 24, 2016

 

Systems biology

Fast-SNP: a fast matrix pre-processing algo-
rithm for efficient loopless flux optimization of
metabolic models

Pedro A. Saa1 and Lars K. Nielsen”

1Australian Institute for Bioengineering and Nanotechnology (AIBN), The University of Queensland, Comer
College and Cooper Rds (Bldg 75), Australia.

*To whom correspondence should be addressed.

Associate Editor: Dr. Oliver Stegle

Abstract

Motivation: Computation of steady-state flux solutions in large metabolic models is routinely per-
formed using Flux Balance Analysis based on a simple LP formulation. A minimal requirement for
thermodynamic feasibility of the flux solution is the absence of internal loops, which are enforced us-
ing ‘loopless constraints’. The resulting loopless flux problem is a substantially harder MILP problem,
which is computationally expensive for large metabolic models.

Results: We developed a pre-processing algorithm that significantly reduces the size of the original
loopless problem into an easier and equivalent MILP problem. The pre-processing step employs a
fast matrix sparsification algorithm — Fast-SNP — inspired by recent results on Sparse Null-space
Pursuit (SNP). By finding a reduced feasible ‘loop-law’ matrix subject to known directionalities, Fast-
SNP considerably improves the computational efficiency in several metabolic models running differ-
ent loopless optimization problems. Furthermore, analysis of the topology encoded in the reduced
loop matrix enabled identification of key directional constraints for the potential permanent elimination
of infeasible loops in the underlying model. Overall, Fast-SNP is an effective and simple algorithm for
efficient formulation of loop-law constraints, making loopless flux optimization feasible and numerical-
ly tractable at large scale.

Availability: Source code for MATLAB including examples are freely available for download at
http://www.aibn.uq.edu.au/cssb-resources under Software. Optimization uses Gurobi, CPLEX or
GLPK (the latter is included with the algorithm).

Contact: lars.nielsen@uq.edu.au

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

1 Introduction

Constrained-based methods are the most popular methods for explor-
ing the capabilities of genome-scale metabolic models (GEMS) (Lewis,
et al., 2012). GEMS have been reconstructed for many model organisms
(Dal'Molin, et al., 2010; Duarte, et al., 2007 ; Edwards and Palsson, 2000;
Forster, et al., 2003), enabling comprehensive study of the genotype-
phenotype relationship, cellular physiology, metabolic capabilities,
among others (Bordbar, et al., 2014). More recently, these reconstruc-
tions have included larger and more complex networks, describing dif-

© The Author(s) 2016. Published by Oxford University Press.

ferent cellular interactions (Bordbar, et al., 2010; Lewis, et al., 2010),
microbial communities (Shoaie, et al., 2015; Stolyar, et al., 2007;
Zhuang, et al., 2011), and multi-tissue organisms (Bordbar, et al., 2011;
Dal'Molin, et al., 2010; Dal'Molin, et al., 2015). The increased complexi-
ty of current metabolic models demands efﬁcient constrained-based
methods to compute possible network states, especially thermodynami-
cally feasible ones. Computation of thermodynamically feasible states is
computationally hard (Muller and Bockmayr, 2013), severely limiting its
application to large-scale models. Efﬁcient computational methods are
thus needed to interrogate the consequences of thermodynamic feasibil-
ity on these models.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License
(http://creativecommons.org/licenses/by-nc/4.0/), which permits non-commercial re-use, distribution, and reproduction in any
medium, provided the original work is properly cited. For commercial re-use, please contact joumalspermissions@oup.com

112 /810'spaumo[pJOJXO'sopchOJuioiq/ﬁdnq IIIOJJ papeolumoq

910K ‘09 lsnﬁnV no :2

 

GEMS are mathematically represented by the stoichiometry matrix
S E ﬂmxn , which encodes the maSS balances for m internal metabolites
involved in 11 reactions. The capacity of each reaction iS phenomenologi-
cally constrained by thermodynamics and enzyme kinetics through the
use of appropriate lower lb and upper ub bounds on the vector of reac-
tion ﬂuxes V E ﬂ " (Eq. 1). Assuming vanishing accumulation of
internal metabolites (Eq. 2), the Space of feasible steady-state ﬂuxes iS
deﬁned by the following set of constraints (hereafter referred aS maSS
balance constraints),
lb 3 v S ub (1)
S - v = 0 (2)

ThiS typically highly undetermined Space iS readily explored using
Flux Balance AnalySiS (FBA). Given an optimality criterion, FBA useS
linear optimization to compute a steady-state ﬂux solution that maximiz-
eS a deﬁned objective such aS growth rate, ATP production, among oth-
erS (Orth, et al., 2010). The ﬂexibility of the network under (sub)optimal
conditions can be further assessed using Flux Variability analysis (FVA)
(Mahadevan and Schilling, 2003). FVA computes the minimum and
maximum ﬂux through each reaction capable of supporting a deﬁned
network state. Equations (3—4) describe the LP formulations of the above
optimization problems,

FBA: max cT -v

(3)

st. {mass balance constraints}

FVA: max/min vi , ie{l,...,n}

(4)

T
s.t. c v 2 a-zopt

{mass balance constraints}

where 0 represents the objective vector, zopt denotes the optimal value
found by FBA, and a iS a parameter describing the degree of optimality
w.r.t. FBA, i.e., for suboptimal analysis 0 S a < 1, whereas a = 1 for
alternative optima analysis. While FBA and FVA provide feasible
steady-state ﬂux solutions, they are not guaranteed to be thermodynami-
cally feasible. Additional constraints on the ﬂux vector v are needed to
ensure this and a minimal criterion for thermodynamic feasibility iS the
absence of internal loops. Let uS deﬁne the ‘loop-law’ matrix,
N in, e R” , the matrix containing a null Space baSiS of the stoichio-
metric matrix of internal reactions Sint e R , and, vim and Alum the
internal reaction and the corresponding chemical potential vectors, re-
spectively. A steady-state ﬂux solution v* iS thermodynamically feasible
if, 1) the global potential energy of the network iS balanced, i.e.,
N in A”; = 0 (ﬁrst law), and 2) reactions proceed in the opposite
direction of chemical potential change, i.e., diag(Au:m) - vrm S 0 (second
law). These two conditions hold Simultaneously true if and only if the net
ﬂux around all closed loops iS equal to zero, i.e., v* iS ‘loopleSS’ (Beard,
et al., 2002). The loopleSS condition can be enforced by formulating
mixed-integer linear constraints on vim (hereafter referred aS loopleSS
constraints) (Schellenberger, et al., 2011),

mixni

Nilnt'Au'int :0

l—sm-(K+l)sAuimsK—sim-(KH)
—K'(1—Sim)SVimSK-8im

8mm E{0,1} ie{1,---,n,}, Allim Eﬂn", K large (e.g., 103)

(5)

Addition of Eq. (5) to EqS. (3—4) yields two MILP formulations com-
monly known aS ll-FBA and ll-FVA (‘ll’ stands for loopless). Inclusion

of the loopleSS constraints not only increases the Size of the problem
(decision variables are now am, v, Alum), but also yields a harder optimi-
zation problem. Computationally, this problem haS recently been ad-
dressed by recasting ll-FVA into a series of LP problems, in which
steady-state ﬂux solutions are computed by conventional FBA and cor-
rected by iteratively blocking all infeasible cycles (Desouki, et al., 2015;
Muller and Bockrnayr, 2013). Here, we proposed a different approach
where loopleSS constraints are reduced to a sufﬁcient set of feasible loop
laws, enabling efﬁcient computation of loopleSS ﬂux optimization prob-
lemS. In this way, once the sufﬁcient set of loop laws have been found,
any standard loopleSS optimization problem can be formulated and
solved using a Single optimization problem without post-processing.

In this work, we present a pre-proceSSing algorithm — Fast-SNP — for
efﬁcient formulation of loopleSS constraints. We note that it iS always
possible to pre-proceSS the loop-law matrix Nim constrained to known
directionalities, so that the reduced set of constraints yields an easier-to-
solve, yet equivalent MILP problem. By using a fast sparsiﬁcation algo-
rithm, Fast-SNP generates a reduced feasible loop-law baSiS Nim ,
counting for these directionalities. Application of Fast-SNP considerably
reduced computation times during loopleSS ﬂux optimization compared
to the traditional approach in different metabolic models. Furthermore,
our approach identiﬁes key directional constraints, which may enable
elimination of unfeaSible cycles in the underlying GEM. Altogether,
Fast-SNP enables efﬁcient computation of thermodynamically feasible
ﬂux solutions in genome-scale metabolic models.

ac-

2 Methods

2.1 A useful matrix pre-processing algorithm for efﬁcient
loopless ﬂux optimization

The motivation of our method stems ﬁom the observation that not all
internal loop laws are feasible given the directionalities deﬁned by Eq.
(1) (Saa and Nielsen, 2016). We previously exploited this fact to detect
‘potentially active or feasible loop-laws’ in metabolic models using the
conventional representation of Nint (e. g., reduced row echelon form of
N it ), enabling faster discovery of unfeaSible random ﬂux samples (Saa
and Nielsen, 2016). ThiS reduced set of feasible loop-laws cannot imme-
diately be used for loopleSS ﬂux computation. However, if we are able to
derive a reduced baSiS of Nim containing a minimum set of feasible loop-
laws, then the computed loopleSS ﬂux solutions will be accurate (see
Supplementary Fig. S1 for an illustrative example). In addition to mini-
mizing the number of loop-laws, we decided to Simplify the laws through
sparsiﬁcation. We developed a fast matrix pre-proceSSing algorithm
motivated by recent progress in the matrix sparsiﬁcation ﬁeld (Bian, et
al., 2015). AS opposed to sparsiﬁcation algorithms based on M]LP for-
mulations (Bordbar, et al., 2014), our approach relies on an LP formula-
tion that iS not guaranteed to ﬁnd the ‘Sparsest’ null Space baSiS, i.e.,
least number of non-zero entries, but quickly generates a reduced feasi-
ble baSiS for efﬁcient computation of thermodynamically feasible ﬂux
solutions.

The general workﬂow for efﬁcient loopleSS ﬂux optimization iS illus-
trated with a toy model (Fig. 1). First, the network stoichiometry iS for-
mulated and the internal and exchange reaction matrices, Sim and Sm, are
deﬁned (Fig. 1A). Next, an initial baSiS Nim iS found using Singular Val-
ue Decomposition (SVD). Conventional loopleSS optimization would use
this matrix or a reduced row echelon form of N; aS constraint for loop-
leSS ﬂux computation (Eq. 5). In this example, out of the three possible
independent loop laws found using these methods, there are only two

112 [310'811211an[plOJXO'SODBIIIJOJIIlOlQ/[idinq IIIOJJ papeolumoq

910K ‘09 lsnﬁnV no :2

feasible loop laws — £1 and £2 — given the directionalities of VI and v2,
i.e., £3 cannot form a loop (Fig. 1B). Thus, a reduced baSiS Nim can be
constructed using just the ﬁrst two loop laws. ThiS baSiS iS readily found
using Fast-SNP by integrating the topology of Sim and directionality
constraints. Implementation of this pre-proceSSing step Signiﬁcantly
improves computational performance in a diverse family of loopleSS
optimization problems (Fig. 1C). In the following, we present our algo-

rithm for pre-proceSSing the loop-law matrix Nim.

A Deﬁni'on f etw s ichi t
u o n ork to ome ry Stoichiometricmatrix

b1 V1112 v3 v4 V5 V6 v7 bI b2 b3
"@ 114-1000011100
’1I\ s_1310—1—1—10001:Io
@A94ﬂp ’001100—100—10
viva, 00001004000
‘ 5,, E000011100—1
V7 3
@Héq—b s: [swam]

 

basis based on known directionalities
Loop-law matrix
M. 6112 Alan A114 Aria Alas All?

b1
—’0
v,  MKS“) T o o o —1 1 o _1 £1!
v2 b —>N = o o 1 —1 o 1 —1 If
..§. 0 2 int 0 2

_p
or. -1 1 —1 o 0 0 531;
V If" vs: V
4 “( I 5
“\er' '5

@H‘” 6—“

B Computation of a readuced feasible loop matrix Ill-Ii",

Reduced feasible loop-law matrix

Known directionalities FaSt'SNP AM All: Al”: AM: Al’s AM: A”? L
vmhsvsvm ET: 0 O O —1 1 0 —1 1
bmmsbgbm “1 o o 1 71 o 1 71 132

C Efﬁcient flux optimization of different loopless problems
Detection of
infeasible cycles
Removal of
infeasible loops

Fig. 1. Illustration of the optimization workﬂow using Fast-SNP. A) Network stoichi-

   
 

  
 

  
  
  
    
 
 

Flux Balance
Analysis (FBA)

 
 

Reduced feasible
loop—law matrix (Fl. )

Int

     
  

Flux Variability
Analysis (FVA)

  

ometry deﬁnition. The toy model consist of 7 internal reactions (vi, i= 1,..,7), 3 exchange
reactions (bf, j = 1,2,3) (9 reactions in total) and 5 metabolites. The stoichiometry matrix S
is deﬁned by two block matrices containing, respectively, the internal (SI-m) and exchange
(Sm) reactions. B) Pre-processing the loop-law matrix using known directionalities. An
initial basis for the null Space of internal reactions mm) is for example computed using
SVD. This matrix contains r = n,- - rank(Sim) = 3 loop laws or basis vectors accounting
only for the information in Sim. However, given the directional constraints on Nint, a
minimal basis Nim can be found by including directionality information using Fast-SNP.
The resulting basis Nim has r!“ = 2 S r feasible loop laws, enabling more efﬁcient optimi-
zation of loopless problems. C) Once a reduced basis for the loop-law matrix is found, a

diversity of loopless optimization problems can be performed more efﬁciently.

2.2 A fast matrix sparsiﬁcation for efﬁcient formulation of
loop-law constraints

The problem of ﬁnding the Sparsest linear baSiS of the null Space — or
the Sparse Null-Space BaSiS problem (SNB) — iS motivated by itS appli-
cation to Linear Equality Problems (LEPS) arising in constrained optimi-
zation problems (Gottlieb and Neylon, 2010). Coleman and Pothen
(1986) demonstrated that a greedy algorithm must ﬁnd the SNB of a
matrix Am x” in r = n — rank(A) steps, provided that at each step the sub-
problem of ﬁnding the Sparsest Null-Space Vector (SNV) can be solved.
Since SNV iS NP-complete, SNB iS NP-hard (Coleman and Pothen,
1986), and the use of approximate algorithms to solve SNB iS justiﬁed.
Recently, Bian et a1. (2015) proposed a convex-relaxation of the SNB —
referred to aS the Sparse Null-Space Pursuit (SNP) — where a Sparse baSiS

iS computed in r><n LP optimization runs. While this formulation iS in
principle attractive, it does not consider any directional constraints on the
baSiS vectors, which iS a key feature of our problem. Moreover, the 11 LP
optimizations per baSiS vector iS excessive.

We have developed a more efﬁcient sparsiﬁcation algorithm — Fast-
SNP — inspired by the SNP formulation. Fast-SNP ﬁndS a minimal
Sparse representation of Nim in at most 2r LP optimization runs. Brieﬂy,
starting from an empty null Space baSiS, the SNV iS solved by ﬁnding the
minimum ll-norm steady-state ﬂux solution vim), that, 1) iS consistent
with the deﬁned directionalities, and 2) iS contained in the orthogonal
Space of NinaC derived from the previous (k — 1) iterations. The latter
constraint ensures that the baSiS vector computed at iteration k iS linearly
independent ﬁom the previous (k — 1) vectors. ThiS condition can be
formulated aS PNﬁn’k mm], :2 0 , where PNﬁJr denotes the projection matrix
onto null(Nim,k). AS this above equation deﬁnes neither a convex nor a
compact region, we replace it with two equivalent constraints, namely:

wT-P

T
Nﬁ’k-vmk>é’ v w -PN$t’k-vmk<—§ (6)

where w represents a vector of random weights and I iS a small positive
constant, e. g., 103. Here we employed uniform random weights, howev-
er other choices can be also used yielding Similar results (Supplementary
Table S1). AS w iS nonzero, the above constraints are only violated if
PM,“ .VW ¢ 0 , which iS the condition to be avoided. The resulting SNV
optimization problem can be then formulated aS follows,

SNV: min 2x1.

(Um) 1.
st. Sint -v,.m=k = 0

vim, S x

int,k S X

lb. <v. <ub1.m (7)

mt — 1nt,k —

—V

wT -PN, -vimk > 4’ (positive constraint) v
intJt ’

< —4’ (negative constraint)

T
w PW“ -vim,k

KER"i

In this way, two LP optimizations are required to determine the SNV
at each iteration, and thus 2r runs are needed to complete the null Space
baSiS. Notably, after each iteration, the Sparsest (i.e., the minimum [0-
norm) solution iS kept for the next iteration. If at one iteration there are
no feasible solutions for both SNV problems, then the algorithm termi-
nates aS there are no remaining nonzero baSiS vectors given the current
NW, and the directionality constraints. The pseudocode of our Fast-SNP
iS Shown in Algorithm 1.

2.3 Detection and removal of infeasible loops

Generation of a reduced loop-law matrix can accelerate other loopleSS
ﬂux optimization problems. Here, we evaluated two of such problems,
namely Loop Detection (LD) and Loop Removal (LR). The ﬁrst problem
determines whether a steady-state ﬂux distribution iS thermodynamically
feasible (i.e., loopless), whereas the second computes the nearest feasible
ﬂux solution. Speciﬁcally, given a steady-state ﬂux solution v0 with vinto
denoting itS internal reactions, LD tests for thermodynamic feasibility by
directly applying the loopleSS constraints using a LP formulation with a
blank objective (Schellenberger, et al., 2011),

112 /810's112umofpinXO'soi112u1101uioiq/ﬁd11q 111011 popcorn/hog

910K ‘09 lsnﬁnV no 2:

 

LD: min 0

Aumto

S.t. NEH bump = 0
_ K . (1 + sgn(v,m,0)) — sgn(vim,0) g Ammo
Aumo S K -(1 — sgn(vim,0 )) — sgn(v,m,0)

K large (e.g., 103)

(8)

v0 iS loopless if the previous LP problem admits a solution for Ammo. If
the ﬂux solution iS unfeaSible, LR ﬁnds the nearest feasible ﬂux solution
v* employing the following MIQP formulation (Schellenberger, et al.,
2011)

LR: min ) "8“2

(a,s2..,Au2..

s.t. v* — v0 = 8
{mass balance constraints} (9)
{loopless constraints}
8 e R ”

where 6 denotes the distance vector from v0 to v*. Thus, the closest fea-
Sible ﬂux distribution to v0 iS found by minimizing the Euclidean norm
of 6.

 

Algorithm 1: Fast Sparse Null-Space Pursuit

 

Inputs: Stoichiometric matrix of internal reactions Sim, lower and upper
bounds (lbmbubim)

Outputs: Reduced feasible null Space baSiS of the loop matrix Nmt

Set k<—0,PNW <—0,N. <—®

1nt,k

w <— GenerateRandomWeightS
while k < r do
P <—  — PN

i .
Nim’k 1111,]:

vln'mk (— SolvePossitiveConstraintSNV(PN, k ,w)

vgmk (— SolveNegativeConstraintSNV (PNﬁt’k ,w)

+
V- l )
mt,k 0

 

 

 

 

Set vmk <—argmin(”v;1t,,c

if ISEmpty(vim,k) then
break
else

N int,k+1 (— N ‘ t,k EB Vint,k

09

III

N (— GenerateOrthogonalBaSiSUSingSVD(Nmk+1)

int,k+1
1% T

A
(— N int,k+1

NEW, int,k+1 '
end if
Set k <— k + 1
end while

return N int, k

 

2.4 Computational implementation

Fast-SNP and all the loopless ﬂux formulations were coded and imple-
mented in MATLAB 2015b (The MathWorkS, Natick, MA). Our imple-
mentation relies on third-party solvers to solve LP, MILP and MIQP

problems. Optimization runs were performed using Gurobi Optimizer 6.5
(Gurobi Optimization, Inc, Houston, Texas) and IBM ILOG CPLEX
12.5.1 (IBM Corp., NY). All computations were run on a Dell Studio
OptiPlex 9020 workstation (Intel Core i7-4790 processor, 16GB ram
memory, 64-bit architecture) running on Windows 7.

3 Results

The computational performance of our strategy was compared to the
traditional approach in different metabolic models covering a range of
Sizes. The models considered include the toy model Shown in Fig. 1, an
E. coli core model (Orth, et al., 2010), and Six GEMS, namely: iAF692
(Feist, et al., 2006), iJN661 (Jamshidi and Palsson, 2007), iYL1228
(Liao, et al., 2011), STM (Thiele, et al., 2011), iJOl366 (Orth, et al.,
2011) and Yeast 6 (Heavner, et al., 2013). We have assumed growth in
minimal medium and growth rate maximization aS the objective function
for each model. In the case of the toy model, the upper bound of b1 was
set to 1 and reaction b3 was maximized (see Fig. 1B). The characteristics
of each model after removal of blocked reactions are Shown in Table 1.
The models used in this study can be downloaded from the BiGG Mod-
elS database at hgpzﬂbiggucsdedu (King, etal., 2016).

Table 1. Characteristics of the metabolic models used in this study

 

Rev. Int. rev.

 

Model Organism MetS Ran ms rxns
Toy model — 5 10 4 3
E. coli core E. coli 68 87 15 13
iAF 692 M. barkeri 417 484 42 3 8
iNJ661 M. tuberculosis 579 740 82 77
iYL1228 K. pneumoniae 830 1223 85 78
STM S. enterica 1086 1597 83 79
iJOl366 E. call 1136 1679 115 110
Yeast 6 S. cerevisiae 756 1018 78 76

 

3.1 Fast-SNP Signiﬁcantly reduces loop-law constraints
enabling efﬁcient ll-FBA computation

Fast computation of a reduced feasible loop-law matrix iS critical for
efﬁcient loopless optimization. Even if a reduced baSiS accelerates opti-
mization, if its computation iS too expensive then the approach iS Simply
not useful. Therefore, we ﬁrst evaluated the computational performance
of our sparsiﬁcation algorithm in the studied models (Table 2). The
computation of a reduced baSiS was achieved in leSS than 25 seconds for
all models and Gurobi was approx. 60% faster than CPLEX. The Speed
depends on both the total number and the number of feasible loop laws.
For example, Yeast 6 has considerably leSS internal reactions and there-
fore total loop laws than iJOl366 (224 versus 484), but it has almost 3-
fold more feasible loop laws than iJ 01366 (110 versus 34). In this case,
the pre-proceSSing time was Similar in these two models using both solv-
erS, highlighting the dependence on both factors. We further compared
the performance of Fast-SNP against a previous method for generation of
a minimal null Space baSiS (Hay, et al., 2014). This method iS based on
the identiﬁcation of reactions involved in infeasible loops through FVA
and extreme pathway analysis. AS such, this method would require 2n
LP iterations + 1 baSiS computation for the generation of N int. In contrast,

112 /810's112umofpinXO'soi112u1101uioiq//2d11q 111011 popcorn/hog

910K ‘09 lsnﬁnV no 2:

Fast-SNP requires 2r LP iterations + r baSiS computations (in the worst
case). Considering the greedy nature of Fast-SNP, the high efﬁciency of
SVD algorithms for orthogonal baSiS generation and that r < n aS r = n —
rank(Sl-m), Fast-SNP produces a Sparse null baSiS substantially faster
(approx. 10 times) than the latter method (Supplementary Fig. S2).

Fast-SNP also yielded substantially reduced loop-law matrices with
fewer feasible loop laws in all GEMS (Table 2). Reduction of GEMS
loop laws varied from 50.9% for Yeast 6 to 94.8% for STM, underscor-
ing the impact of known directionalities on the number of feasible loop
laws. In addition to Shrinking the loop matrices, the algorithm created
much Sparser matrices. For instance, the computed loop-law matrix for
iJOl366 contained 98.5% leSS non-zero entries compared to a reduced
column echelon of the latter. The above results are encouraging for the
potential increase in algorithmic efficiency of loopless optimization
algorithms. Whether they actually translate into substantial SpeedupS iS
evaluated next.

Pre-proceSSing the loop-law matrix Signiﬁcantly accelerated ll-FBA
optimization (Figure 2). The runtime reductions increased with the Size
of the model and Gurobi was approx. 3-fold faster than CPLEX (Fig.
2A). For the largest GEMS (STM, iJOl366 and Yeast 6) a runtime reduc-
tion of around 20-fold was observed. Irnportantly, in all the studied mod-
elS there was a perfect agreement on the computed optimal values (Sup-
plementary Fig. S3).

 

 :— I l' I I I I I I _
: |:l Gurobi (no pro-processing)

: _ Gurobi (with pro-processing)
- |:| CPLEX (no ore-processing)
__ _ CPLEX (with ore-processing)

—‘
‘13

10°;-

 

Optimization runtime (s)

—\

C?
..
[

 

 

 

 

 

 

 

 

 

 

10-2 -

 

To E. coli iAF692 iNJ661 iYL1228 STM “01366 Yeast6

mo el core

Fig. 2. Optimization performance with and without pre-processing the loop-law
matrix. Comparison of ll-FBA runtimes with and without pre-processing using distinct
solvers in different models. The error bars represent the standard deviation of three
optimization runs. Pre-processing of the loop-law matrix substantially reduces the compu-

tation time in large models using both solvers.

3.2 Reduced loop-law constraints improve computational
performance of ll-FVA and related loopless optimization
problems

The computational improvement of Fast-SNP was further evaluated in 11-
FVA setting a = 0.9, i.e., 90% of the optimal growth rate calculated
previously. AS with ll-FBA, our strategy displays considerably lower
runtimes using either solver compared to the conventional approach
(Table 3). In general, the greater the reduction in the loop-law con-
straints, the greater the relative acceleration. For large GEMS, reductions
in computation time varied ﬁom 7-fold in Yeast 6 using Gurobi (13-fold
improvement with CPLEX) up to 50-fold in STM (31-fold improvement
with CPLEX). Very promising SpeedupS were also achieved in i1 01366;

41- and 47-fold improvements were obtained using CPLEX and Gurobi,
respectively. In the case of medium-scale GEMS, SpeedupS were moder-
ate ranging from 2-fold runtime reduction for iAF 692 using CPLEX, to
approx. 20-fold improvement for iYL1228 using Gurobi. Notably, ﬂux
ranges computed with Fast-SNP yielded almost identical results aS in
conventional ll-FVA with no statistical Signiﬁcant difference (Figure 3
and Supplementary Table S4). We further compared the computational
improvement of Fast-SNP against recent approaches for efﬁcient loop-
leSS ﬂux optimization, namely: fast-tFVA (Muller and Bockrnayr, 2013)
and CycleFreeFlux (Desouki, et al., 2015). Overall, Fast-SNP yielded
more modest improvements compared to the other approaches though
magnitude varied dramatically between problems and solvers used (Sup-
plementary Tables S2-S3).

We also evaluated the performance of Fast-SNP in the related loopless
ﬂux optimization problems, Loop Detection (LD) and Loop Removal
(LR) (see Methods). These optimization problems have been respective-
ly proposed for detection and correction of unfeaSible ﬂux distributions
generated using random sampling (Schellenberger, et al., 2011). Given
the large Size of samples required for the analysis of GEMS (typically
105), efﬁcient detection and removal of unfeaSible cycles iS fundamental
(Saa and Nielsen, 2016). AS for ll-FBA and ll-FVA, pre-proceSSing the
loop-law matrix improves runtimes for detection and removal of loops in
iJOl366 (Figure 4). Comparing the performance of LD optimizations
with and without pre-proceSSing of iJOl366, runtimes decreased 1.3- and
7 .4-fold using Gurobi and CPLEX, respectively. Interestingly, on this
occasion CPLEX was faster than Gurobi. The results are even more
impressive for the case of LR. Neither Gurobi nor CPLEX were capable
of ﬁnding a feasible solution within 6 h, when the loop-law matrix was
not processed using Fast-SNP (Figure 4). With Fast-SNP, a solution was
found within minutes using either Gurobi or CPLEX. This result high-
lights that an efﬁcient formulation of the loop matrix might not only be a
convenient strategy, but an absolute requirement to solve complex loop-
leSS formulations.

3.3 Analysis of the reduced loop-law matrix reveals key
directional constraints required to avoid infeasible loops

A reduced feasible loop-law matrix can also serve aS a valuable source of
information for unravelling unfeaSible cycles in genome-scale models.
The set of vectors encoded in the rows of Nim describes a minimal baSiS
of feasible loop laws allowed by the directionalities in the model, and
thus, they can yield useful insights about potential infeasibilities in the
model. In the following, we analyzed the topology of these laws in
iJOl366 after performing ll-FVA with a = 0.9 (see previous section).
Application of ll-FVA yielded 13 blocked reactions and changed the
directionality of 728 reactions in iJOl366. Irnportantly, the resulting
model has 18 loop laws out of the initial 34, easing its topological analy-
SiS (Fig. 5).

Figure 5A depicts the complete set of loop laws found in iJOl366 af-
ter deﬁnition of growth conditions (minimal medium), optimality criteri-
on (at least 90% of optimal growth rate) and thermodynamic feasibility
(loopless condition). The set of feasible loop laws covers 45 reactions
(11 reversible) involved in ion and metabolite inter-compartment
transport, alternate carbon, acetate and glycogen metabolism (Supple-
mentary Table Sl). Reactions with the highest participation in loop laws
are: NAt3pp (5), PPKr (5), CA2t3pp (4) and Cat6pp (4) (Supplementary
Fig. S4). Notably, the latter reaction iS also ﬂux-forcing, i.e., it has a
strictly non-zero ﬂux, and thus it cannot be removed without rendering
the model infeasible.

112 /810's112umofpinXO'soi112u1101uioiq/ﬁd11q 111011 popcorn/hog

910K ‘09 lsnﬁnV no 2:

 

Table 2. Pre-proceSSing results for each metabolic model

 

#non-zero entries N in, / Pre-proceSSing timeb (S)

Feasible loop laws / total

 

Model

 

100p laws #non-zero entries Nima Gurobi CPLEX

Toy model 2 / 3 7 / 10 3.6-10'2i9.0-10'3 4.7-10'2i1.6-10'3
E. coli core 1 / 13 2 / 80 4.2-1021:9010-3 4.2-1021:9010-3
iAF692 12 / 64 38 /409 5510-1497-10-2 8.510121310-1
iNJ661 21/149 63/ 1183 1.6i1.7-10'1 2.61:1.1-10'1
iYL1228 23/368 76/4635 4.3i8.9-10'2 8.91:2.4-10'1
STM 23/446 59/ 5453 6.5i3.8-10'1 1.44:4.6-10'1
iJOl366 34/484 96/6164 1201:1210-1 2161:3310-1
Yeast 6 110/224 1802 / 3825 15.14i4.8-10'1 23.631:3.1-10'1

 

3In order to ensure a fair comparison between the two matrices, the reduced row echelon form of N; was employed.

bRuntimeS are Shown as mean i standard deviation calculated from three independent runs.

Table 3. Runtirne comparison of ll-FVA with and without reduction of loopleSS constraints

 

Average runtime fold-change
(loonv ll-FVA/tELFO ll-FVA)

ll-FVA without pre-proceSSinga ll-FVA with pre-proceSSinga

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Model
CPLEX Gurobi CLPEX Gurobi CPLEX Gurobi

Toy model 4.7-10'ldc3.0-10'2 1.1-10'1dc2.4-10'2 3.1-10'1d:1.0-10'2 1.4-10'1d:1.6-10'2 1.7 0.8
E_ 001,- core 15.1i1.9 3.3i0.2 2.6dc3.3-10'1 1.9i1.3-10'1 5.8 1.8
iAF692 4.4-102i4.7 2.9-102i6.3 2.1-102i7.8 69.0i5.6 2.1 4.2
iNJ661 2.9-103i24.5 1.6-103i40.1 6.4-102i30.2 3.1-1021:56 4.5 5.1
iYL1228 2.9-104i61.5 1.3-104i40.6 1.7-103i36.6 6.5-102i36.1 17.5 19.3
STM 59104249102 2.8-104i5.6-102 1.9-103i419 5.7-102i15.1 31.1 49.7
301366 8.3-104i2.3-102 4.2-1042423 2.0-103i7.65 9.0-102i19.8 40.7 46.8
Yeast 6 9.2-104i2.8-102 291044910 721034223 44103219102 12.7 6.5
aRuntimeS are Shown as mean i standard deviation calculated from three independent runs.

3 Toy Model a E. coli core a iAF692 a iNJ661

.s ' ‘ ' ' .9 ' ' .g 1.2 ' ' ' ' .212 ' ' '

E 1:122:10 gee R2=1.0 g 1 R2=1.0 gm R2=1.0

9‘03. slope = 1.0 g slope = 0.999 g slope = 0.999 g slope = 1.002

0 a2: 40 1 0-8 0 B

 .2: .2:  .26

1%“  20  0'4  4

E 00 0.2 0:4 0:15 0.13 1 E 20 40 60 E 0 0.2 0.4 0:13 0:8 1 1.2 17:: 0 2' 4 6 a 10 1'2

Flux range (no pre-processing) Flux range (no pre-processing) Flux range (no pre-processing) Flux range (no pre-processing)

a iYL1228 a STM a iJO1366 3 Yeast 6

.E .E .E 51000

$150 R2=1.0 $166 R2=1.0 g R2=1.0 g R2=1.0

E slope = 1.0 9 80 slope = 1.001 g slope = 0.999 g 300 slope = 1.0

@100 Q Q 9 600

o. a. 50 :1. o.

:3, g g E 400

a: so 754° 7.: z:

E’ 2’20 2’ 2’ 200

E E E i!

’5 o 9 o ’3‘ 9 0

E 50 100 150 E 20 40 so 80 100 E 200 400 600 300 1000 E 200 400 600 300 1000

 

 

Flux range (no pre-processing) Flux range (no pro—processing) Flux range (no ore—processing) Flux range (no pre-processing)

Fig. 3. Flux ranges computed using the reduced loop-law matrix are consistent with the ranges obtained from conventional ll-FVA in the studied models.

112 [310'8112(Ian[plOJXO'SODBIILIOJHIOIQ/[I(11111 111011 popcorn/hog

910K ‘09 lsnﬁnV no 2:

Next, our interest iS to analyze the impact of blocking or ﬁxing the di-
rectionalities of reactions involved in unfeaSible cycles. We have select-
ed three illustrative caseS to Show different strategies for rational analysis
and removal of loops (Fig. 5B). Case 1 illustrates a Simple loop com-
prised of two duplicated reactions: ASPt2pp (irreversible) and ASPt2rpp
(reversible). In this case, the most sensible action iS to remove the irre-
versible reaction (ASPt2pp) and preserve the reversible one (ASPt2rpp).
The resulting model has the same capabilities aS the original without the
artiﬁcial loop £2. Cases 2 and 3 are more subjective and illustrate differ-
ent modelling rationales. In Case 2, if we are not interested in pyruvate
alternate metabolism, reaction HPYRI can be removed ﬁom the model
effectively eliminating £1. Case 3 illustrates that loops can be also elim-
inated by ﬁxing the directionalities of reversible reactions rather than
deleting a reaction. £7 consists of a loop where the succinyl-CoA synthe-
tase (SUCOAS) operates in reverse. However, under fast-growing glu-
cose-limited aerobic conditions, this reaction proceeds in the forward
direction in E. coli (IShii, et al., 2007). By ﬁxing its direction to forward,
£7 iS eliminated aS no other reactions in this cycle can be reversed (Fig.
5B). In summary, the topology encoded in the reduced loop-law matrix
facilitates rational infeasibility analysis of large metabolic models.

 

 

104  1:1 Gurobi (no pre-processing) "_-—'
 _ Gurobi (with pre-processing)
 1:1 CPLEX (no pie-processing)

- _ CPLEX (with pre-processing)

A
O
u

A
D
M

.A
O
_.

Optimization runtime (s)
“of a

.—I. .4
D D

in 11.1
I 1 1

 

 

 

 

 

 

 

Loop Detection (LP) Loop Removal (MIQP)

Fig. 4. Reduced loopless constraints generated from Fast-SNP reduce optimization
runtimes of other loopless problems in iJOl366. Computational performance in Loop
Detection (LD) and Loop Removal (LR) problems using ﬂux samples from iJOl366.
Error bars represent the standard deviation of ﬁve optimization runs. Bars Shown with (*)

denote cases where it was not possible to compute a solution in less than 6 h.

4 Discussion

Computation of loopleSS steady-state ﬂux solutions iS an NP-hard MILP
problem (Muller and Bockmayr, 2013). Recent approaches such aS fast-
tFVA (Muller and Bockmayr, 2013) and CycleFreeFlux (Desouki, et al.,
2015) have exploited particular features of the problem and used LP
formulations following alternative approaches to solve different loopless
ﬂux optimization problems. Although these approaches enabled fast
computation of feasible ﬂuxes (acceleration up to two orders of magni-
tude), they rely on post-processing methods for blocking unfeaSible
cycles after steady-state ﬂux computation. In the current study, we de-
veloped a preproceSSing strategy where the conventional MlLP problem
iS reformulated using a minimal set of loop-law constraints, enabling
efﬁcient computation of loopleSS ﬂux solutions aS well aS topological
analysis of infeasible cycles in large metabolic models.

All modern MILP solvers use preproceSSing to recast MlLP formula-
tions into easier-to-solve, yet equivalent representations (Saveleergh,
1994). It iS often possible to develop superior preproceSSing strategies
using insights into the Speciﬁc MlLP problem. We have developed a fast

preproceSSing algorithm, Fast-SNP, which ﬁnds a minimal set of feasible
loop laws taking into consideration the directionalities of the model.
Once the reduced loop-law matrix iS found, a smaller loopless MILP
problem can be formulated and solved efﬁciently. SpeedupS up to 50-
fold were achieved with preproceSSing across diverse types of loopleSS
ﬂux optimization problems (Tables 2+3, Figs. 2-4). Although the com-
putational improvement of Fast-SNP iS more modest than previous ap-
proaches (Supplementary Tables S2-S3), it iS the only strategy capable
of efﬁciently solving loopleSS related problems (i.e., ll-FBA, ll-FVA, LD
and LR) using a Single optimization problem based on suitable LP, MILP
or MIQP formulations subject to the loopless constraints (Eq. 5). Im-
portantly, such constraints have recently been algebraically proven to
always yield thermodynamically feasible ﬂux solutions Moor, et al.,
2012).

A Reduced loop matrix topology

ABUTthp
ACCOAL

AC3
ACt2rpp

G 60
GLUABUTt7pp
L r
GLUt4pp
GLYCLTterp
GLYCLTt4pp
GLYthpZ
GLYtdpp
“*- HPYRI
HPYRRx
NAt3pp

NDPK1
PPCSCT
BEE:

REM
PROtzrpp
PROtdpp
B81333

ﬂ
R1SBPK
R1 PK
SERt2rpp

‘ SERMpp

 

THRt4pp
m

agggggaggtrrtrrrrr

10 11 12 13 14 15 16 17 18

- Forward (coeff. +1) [Z] Reverse (coeff. —1)
Reversible reaction Flux-forcing reaction Irreversible reaction

B Topological reduction of loop laws

Case 1: Elimination of .L'2 by removing
ASPt2pp and keeping reversible ASPt2rpp

|
asp—LID] he] asp—LID] 2h30ppan|c| 9 11019] nails]
nadlc]
nadhlc}
h13MB]
S hm] hie] hpvrlcl

 

Case 2: Elimination of L, by K0 of HPYR!

asp_L[c] asp_L[c]
A Pl2pp ASPIerp HPYRl TRASA Rr HPYRRX

 

 

Case 3: Elimination of L', by ﬁxing directionality of SUCOAS forward

sucqc] ooa[c| ppaic] sucolc]
atp[o] atplc]
adplcl

succoa[c] pi[c] pp coa[c] succoalc]
SUCOAS ACCOAL PPCSCT

1%) Biocked reaction —) Active reaction

 

Fig. 5. Topological exploration of the reduced loop-law matrix obtained from Fast-
SNP enables rational elimination of infeasible loops in iJOl366. A) Topological
analysis of the reduced loop-law matrix. Reactions indicated with arrows can be either
blocked or their directionalities ﬁxed to eliminate infeasibilities. B) Examples of different

approaches to remove infeasible loops.

112 ﬁlos112umofpinXO'soi112m101uioiq/ﬁd11q 111011 papeoiumoq

910K ‘09 isnﬁnV no 2:

 

Finally, we highlight additional and distinctive features of Fast-SNP
for the analysis of metabolic models. AS Shown in the previous section,
this approach enables a priori assessment of model complexity in the
‘loop law sense’, aS it explicitly computes a minimal baSiS describing all
the potentially infeasible cycles in the studied model. Formally, these
loop laws represent elementary ﬂux modes that do not exchange maSS
with the surroundings (Schuster, et al., 2000). These internal cycles have
previously been studied in the context of oriented matroid theory (Beard,
et al., 2004; Oliveira, et al., 2001) and more recently, infeasible cycles
have been enumerated in GEMS using sampling approaches (De Martino,
et al., 2013). However, efﬁcient assessment of the impact of directionali-
ty constraints aS well aS topological analysis of these loop laws for their
potential removal, has been lacking in the literature. Fast-SNP aids com-
prehensive assessment, unravelling Simple strategies for removing infea-
Sible loops based on thermodynamic or practical considerations (see Fig.
5). Additionally, we note that the proposed matrix sparsiﬁcation algo-
rithm in Fast-SNP can also be employed for other useful analyses. For
example, this algorithm can readily be modiﬁed to explore alternative
solutions by incorporating suitable additional constraints (e. g., vi 2 2*)
using an appropriate objective (e.g., l1-norm minimization). The resulting
greedy algorithm would generate a set of linearly independent solutions
or pathways (i.e., a baSiS) consistent with the previous constraints by
solving only LP problems. This avoids the need of computing expensive
M]LP formulations. In conclusion, Fast-SNP complements existing
methods in the constrained-based modelling toolbox for exploration and
topological analysis of infeasible cycles and metabolic pathways.

Funding
P.S. was supported by BecaS-Chile, UQ Centennial and IPRS Scholarship Pro-

grams

Conﬂict of Interest: none declared.

References

Beard, D.A., et al. (2004) Thermodynamic constraints for biochemical networks, J
T heor Biol, 228, 327-333.

Beard, D.A., Liang, SC. and Qian, H. (2002) Energy balance for analysis of
complex metabolic networks, Biophys J, 83, 79-86.

Bian, K, et al. (2015) Sparse null Space basis pursuit and analysis dictionary
learning for high-dimensional data analysis. 40th IEEE International
Conference on Acoustics, Speech and Signal Processing (ICASSP). Brisbane,
Australia, pp. 3781-3785.

Bordbar, A., et al. (2011) A multi-tissue type genome-scale metabolic network for
analysis of whole-body systems physiology, Bmc Syst Biol, 5, 180.

Bordbar, A., et al. (2010) Insight into human alveolar macrophage and M.
tuberculosis interactions Via metabolic reconstructions, Mol Syst Biol, 6, 422.

Bordbar, A., et al. (2014) Constraint-based models predict metabolic and
associated cellular ﬁinctions, Nature Reviews Genetics, 15, 107-120.

Bordbar, A., et al. (2014) Minimal metabolic pathway structure is consistent with
associated biomolecular interactions, Mol Syst Biol, 10, 737.

Coleman, TE and Pothen, A. (1986) The Null Space Problem. 1. Complexity,
Siam J Algebra Discr, 7, 527-537.

Dal'Molin, C.G.D., et al. (2010) AraGEM, a Genome-Scale Reconstruction of the
Primary Metabolic Network in ArabidopSiS, Plant Physiol, 152, 579-5 89.

Dal'Molin, C.G.D., et al. (2010) C4GEM, a Genome-Scale Metabolic Model to
Study C-4 Plant Metabolism, Plant Physiol, 154, 1871-1885.

Dal'Molin, C.G.D., et al. (2015) A multi-tissue genome-scale metabolic modeling
framework for the analysis of whole plant systems, Front Plant Sci, 6, 4.

De Martino, D., et al. (2013) Counting and correcting thermodynamically
infeasible ﬂux cycles in genome-scale metabolic networks, Metabolites, 3, 946-
966.

Desouki, A.A., et al. (2015) CycleFreeFlux: efﬁcient removal of
thermodynamically infeasible loops from ﬂux distributions, Bioinformatics, 31,
2159-2165.

Duarte, N.C., et al. (2007) Global reconstruction of the human metabolic network
based on genomic and bibliomic data, P Natl Acad Sci USA, 104, 1777-1782.

Edwards, IS. and Palsson, B0. (2000) The Escherichia coli MGl655 in Silico
metabolic genotype: ItS deﬁnition, characteristics, and capabilities, PNatl Acad
Sci USA, 97, 5528-5533.

Feist, A.M., et al. (2006) Modeling methanogenesis with a genome-scale metabolic
reconstruction of Methanosarcina barkeri, Mol Syst Biol, 2, 20060004.

Forster, J., et al. (2003) Genome-scale reconstruction of the Saccharomyces
cerevisiae metabolic network, Genome Res, 13, 244-253.

Gottlieb, LA. and Neylon, T. (2010) Matrix Sparsiﬁcation and the Sparse Null
Space Problem, Approximation, Randomization, and Combinatorial
Optimization: Algorithms and Techniques, 6302, 205 -218.

Hay, J.O., et al. (2014) Integration of a constraint-based metabolic model of
BraSSica napuS developing seeds with C-l3-metabolic ﬂux analysis, Front
Plant Sci, 5, 724.

Heavner, B.D., et al. (2013) Version 6 of the consensus yeast metabolic network
reﬁnes biochemical coverage and improves model performance, Database-
Oxford, 2013, bat059.

IShii, N., et al. (2007) Multiple high-throughput analyses monitor the response of E.
coli to perturbations, Science (New York, NY), 316, 593-597.

Jamshidi, N. and Palsson, B0. (2007) Investigating the metabolic capabilities of
Mycobacterium tuberculosis H37RV using the in Silico strain iNJ661 and
proposing alternative drug targets, Bmc Syst Biol, 1, 26.

King, Z.A., et al. (2016) BiGG Models: A platform for integrating, standardizing
and Sharing genome-scale models, Nucleic Acids Res, 44, D515-D522.

Lewis, N.E., Nagarajan, H. and Palsson, B0. (2012) Constraining the metabolic
genotype-phenotype relationship using a phylogeny of in Silico methods,
Nature Reviews Microbiology, 10, 291-305.

Lewis, N.E., et al. (2010) Large-scale in Silico modeling of metabolic interactions
between cell types in the human brain, Nat Biotechnol, 28, 1279-1291.

Liao, Y.C., et al. (2011) An Experimentally Validated Genome-Scale Metabolic
Reconstruction of Klebsiella pneumoniae MGH 78578, iYL1228, J Bacteriol,
193, 1710-1717.

Mahadevan, R. and Schilling, CH. (2003) The effects of alternate optimal
solutions in constraint-based genome-scale metabolic models, Metab Eng, 5,
264-276.

Muller, AC. and Bockmayr, A. (2013) Fast thermodynamically constrained ﬂux
variability analysis, Bioinformatics, 29, 903-909.

Noor, E., Lewis, NE. and Milo, R. (2012) A proof for loop-law constraints in
stoichiometric metabolic networks, Bmc Syst Biol, 6, 140.

Oliveira, J.S., et al. (2001) An algebraic-combinatorial model for the identiﬁcation
and mapping of biochemical pathways, B Math Biol, 63, 1163-1196.

Orth, J.D., et al. (2011) A comprehensive genome-scale reconstruction of
Escherichia coli metabolism - 2011., Mol Syst Biol, 7, 535.

Orth, J.D., Fleming, RM. and Palsson, B0. (2010) Reconstruction and use of
microbial metabolic networks: the core Escherichia coli metabolic model as an
educational guide, EcoSal Plus, 4, l.

Orth, J.D., Thiele, I. and Palsson, B0. (2010) What iS ﬂux balance analySiS?, Nat
Biotechnol, 28, 245 -248.

Saa, PA. and Nielsen, L.K. (2016) ll-ACHRB: a scalable algorithm for sampling
the feasible solution Space of metabolic networks, Bioinformatics,
doi:10.1093/bioinformatics/btwl32.

Savelsbergh, M.W.P. (1994) PreproceSSing and Probing Techniques for Mixed
Integer Programming Problems, ORSA Journal on Computing, 6, 445 -454.

Schellenberger, J., Lewis, NE. and Palsson, B0. (2011) Elimination of
thermodynamically infeasible loops in steady-state metabolic models, Biophys
J, 100, 544-553.

Schuster, S., Fell, DA. and Dandekar, T. (2000) A general deﬁnition of metabolic
pathways useful for systematic organization and analysis of complex metabolic
networks, Nat Biotechnol, 18, 326-332.

Shoaie, S., et al. (2015) Quantifying Diet-Induced Metabolic Changes of the
Human Gut Microbiome, Cell Metab, 22, 320-331.

Stolyar, S., et al. (2007) Metabolic modeling of a mutualistic microbial community,
Mol SystBiol, 3, 92.

Thiele, I., et al. (2011) A community effort towards a knowledge-base and
mathematical model of the human pathogen Salmonella Typhimurium LT2,
Bmc Syst Biol, 5, 8.

Zhuang, K., et al. (2011) Genome-scale dynamic modeling of the competition
between Rhodoferax and Geobacter in anoxic subsurface environments, Isme J,
5, 305-316.

112 /810's112umofpinXO'soi112u1101uioiq/ﬁd11q 111011 papeoiumoq

910K ‘09 isnﬁnV no 2:

