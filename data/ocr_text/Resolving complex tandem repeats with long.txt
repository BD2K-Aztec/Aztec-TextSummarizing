ORIGINAL PAPER

Vol. 30 no. 24 2014, pages 3491-3498
doi: 10. 1 093/bioinformatics/btu437

 

Sequence analysis

Advance Access publication July 15, 2014

Resolving complex tandem repeats with long reads

Ajay Ummat and Ali Bashir*

Department of Genetics and Genomic Science and Institute for Genomics and Multiscale Biology, Icahn School of

Medicine at Mount Sinai, New York, NY, USA

Associate Editor: Michael Brudno

 

ABSTRACT

Motivation: Resolving tandemly repeated genomic sequences is a
necessary step in improving our understanding of the human
genome. Short tandem repeats (T Rs), or microsatellites, are often
used as molecular markers in genetics, and clinically, variation in
microsatellites can lead to genetic disorders like Huntington’s dis-
eases. Accurately resolving repeats, and in particular TRs, remains a
challenging task in genome alignment, assembly and variation calling.
Though tools have been developed for detecting microsatellites in
short-read sequencing data, these are limited in the size and types
of events they can resolve. Single-molecule sequencing technologies
may potentially resolve a broader spectrum of TRs given their
increased length, but require new approaches given their significantly
higher raw error profiles. However, due to inherent error profiles of the
single-molecule technologies, these reads presents a unique chal-
lenge in terms of accurately identifying and estimating the TRs.
Results: Here we present PACMONSTR, a reference-based probabilistic
approach, to identify the TR region and estimate the number of these
TR elements in long DNA reads. We present a multistep approach that
requires as input, a reference region and the reference TR element.
Initially, the TR region is identified from the long DNA reads via a 3-
stage modiﬁed Smith-Waterman approach and then, expected
number of TR elements is calculated using a pair-Hidden Markov
Models—based method. Finally, TR-based genotype selection (or clus-
tering: homozygous/heterozygous) is performed with Gaussian mixture
models, using the Akaike information criteria, and coverage
expectations.

Availability and implementation: https://github.com/alibashir/
pacmonstr

Contact: ajayummat@gmail.com or ali.bashir@mssm.edu

Received on April 6, 2014; revised on June 29, 2014; accepted on
July 2, 2014

1 INTRODUCTION

Tandem repeats (TRs) are contiguous regions of DNA in which
the same (or highly similar) DNA sequences are repeated mul-
tiple times in order. TRs can range in size from single nucleotide
repeats (homopolymers) to encompassing entire genes (Tyson
et al., 2014). Short tandem repeats (TRs) of 1—6 bp, or microsat-
ellites, are often used as molecular markers in genetics (Chen
et al., 2003) or in forensic applications (Veselinovié, 2006).
Clinically, variation in microsatellites is observed in many gen-
etic disorders. Triplicate CAG repeat expansions have been

 

*To whom correspondence should be addressed.

implicated in a number of neurological disorders, including
exonic expansions in Huntington’s disease Walker, 2007) and
spinocerebellar ataxia (Tsai et al., 2004) and non-coding expan-
sions in fragile X syndrome (Jin, 2000). Microsatellite instability
has also been used as a marker of cancer progression
(Arzimanoglou et al., 1998). Additionally, microsatellites are
implicated in regulatory roles; they have been shown to be
highly conserved near transcription start sites (Sawaya et al.,
2013) and are sometimes known to modulate gene expression
(Sawaya et al., 2012). Despite their importance, TRs are often
ignored because accurate resolution of TRs in both variation and
assembly settings remains a challenging task.

With the availability of high-quality genomes, a number of
tools were developed speciﬁcally for TR resolution (Lim et al.,
2013). Tools like Tandem Repeat Finder (TRF; Benson et al.,
1999) attempt to detect such repeats de novo. TRF has a detec-
tion phase that looks for statistically signiﬁcant k-mer matches
within sliding windows and an analysis phase, which determines
period size, multiplicity and consensus repeats (Benson, 1999).
Other methods have used clustering-based approaches (T-Reks)
and local autocorrelation (TandemSwan), respectively, to at-
tempt to identify more divergent and complex TRs [sometimes
termed Fuzzy Tandem Repeats (Boeva et al., 2006; J orda and
Kajava, 2009]. This increased sensitivity comes at the cost of
increased runtime and higher false-positive rates (Lim et al.,
2013). Other methods, such as RepeatMasker, can then be
used to screen entire genomes using known databases of TRs
(and other repeat elements) identiﬁed by such de novo tools
(Tarailo-Graovac and Chen, 2009).

The advent of low-cost sequencing over the past decade has
made cataloguing genomic variation cost-effective across individ-
uals. Robust tools have been created for short-read alignment
(Langmead and Salzberg, 2012; Li and Durbin, 2009), single-
nucleotide polymorphism (SNP) and indel detection (Garrison
and Marth, 2012), as well as completely integrated end-to-end
pipelines (McKenna et al., 2010). These methods have proven
highly accurate in calling SNPs in diverse populations (Abecasis
et al., 2012). Additionally, these technologies have been used to
enumerate more complex copy number and copy neutral forms
of structural variation (SV; Abyzov et al., 2011; Rausch et al.,
2012; Sindi et al., 2009; Ye et al., 2009). Similarly, a number of
excellent tools have become available for detecting microsatellites
in short-read sequencing data (Doi et al., 2013; Gymrek et al.,
2012; Highnam et al., 2013). Some of these methods rely on
databases of known TRs (such as those generated by TRF
across a genome sequence or a curated list of known variable
TR intervals) and look at spanning reads (short reads which span

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 3491

112 /§JO'S{numo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq U101} prBOIIIAAOG

9IOZ ‘091sn3nv uo ::

A. Ummat and A.Bashir

 

the repeat) to call TR alleles for a given individual (Gymrek
et al., 2012; Highnam et al., 2013). Given the length of the
reads being analyzed, these methods are limited in the multipli-
city and/or period size of TRs that can be resolved even when
they take into account more complex mate-pairing information.
More recently, methods have arisen to detect such repeats
de novo using short read data (Doi et al., 2013). Doi et al.’s
study uses depth of coverage information on tagged TRs to es-
timate TR multiplicity in repeats longer than the size of a single
short read.

In the past few years, ‘third-generation’ sequencing technolo-
gies have arisen that offer substantially improved read lengths.
Single-molecule real-time (SMRT) sequencing from Paciﬁc
Biosciences (PacBio) creates continuous sequence reads ranging
from several kb to tens of kb in length. These reads have been
shown to allow dramatic improvements in genome assembly
(Bashir et al., 2012; Chin et al., 2013; Koren et al., 2012;
Ribeiro et al., 2012), haplotype phasing (Lo et al., 2011) and
SV applications (Ritz et al., 2010). Although they are obvious
candidates for broadening the scope of detectable TRs, the
unique error proﬁle (and higher raw error-rate) (Eid et al.,
2009) necessitate new approaches for accurate resolution of TR
multiplicities.

Here, we present PACMONSTR, a tool for the detection and
resolution of TRs speciﬁcally optimized for raw single-molecule
sequencing data. PACMONSTR attempts to build on the ideas of
previous reference-based approaches to best capture the idiosyn-
cratic features of single-molecule sequencing data. The method
provides the following:

(1) Improved boundaries of spanning TRs by performing
a more sensitive TR—speciﬁc dynamic programming
alignment

(2) Statistical estimates of TR multiplicity using a pair-hidden
Markov models (pairHMM)

(3) Predictions of heterozygosity and homozygosity with con-
sensus sequences when multiple spanning reads exist

(4) Predictions of boundaries for compound structural vari-
ants within or around a TR interval

Using simulated and real sequencing data compared with the
hgl9 build of the human genome, we compare the performance
of our methods and de novo approaches in terms of detecting
TRs and estimating multiplicity. Clustering performance is as-
sessed using known homozygous and synthetic heterozygous TR
sequences. Lastly, we simulate the introduction of SV into TR
intervals to show the ability of the tool to ﬂag non-TR intervals,
and apply the SV detection approach on real data.

2 METHODS

An overview of the methods is shown in Supplementary Figure S1. We
begin with alignment of a set of reads Q = {Qk|k=number of reads} to
the reference genome G (hgl9), using BLASR (Chaisson and Tesler, 2012).
Uniquely mapped reads spanning TR intervals on the reference are se-
lected. In the scenario that two disparate alignments are found spanning a
reference TR interval (which may occur if a TR allele is highly divergent
from the reference allele at that locus), multiple unique alignments may be
merged to provide the initial query seed interval for downstream

processing. Next we use a modiﬁed Needleman—Wunsch alignment algo-
rithm to better identify TR boundaries and give initial TR multiplicity
estimates (Section 2.1). The identiﬁed TR interval is then passed through
a pairHMM to give a more rigorous estimate of the TR multiplicity
(Sections 2.2 and 2.3). Reads are then grouped by locus and clustered
based on their estimated TR multiplicities to determine zygosity (Section
2.4). Lastly, the probability values calculated by the forward algorithm of
the pairHMM forms a basis to discover potential SVs internal to TRs
(Section 2.5).

2.1 Identiﬁcation of TR boundaries within reads

Let the interval [05, ,8) denote the occurrence of a TR in G and r denote the
consensus sequence for the TR element. The initial alignment information
is used to extract a subinterval from the query, Qk, containing the TR as
well as a predetermined amount of ﬂanking reference sequence, 6. Given
that the TR in Qk may deviate from the expected reference size, it is likely
that the initial reference alignment inaccurately represents the boundaries
of the TR. To address this, we extract subinterval [a — e, b+e) in Qk
corresponding to the reference coordinates [oz — 6, ,B+ 6), where a, b are
query positions in the alignment that match reference position at, ,8. The
spanning query interval Qk[a — e, b + e), along with r and the set of preﬁx
and sufﬁx sequences in G (corresponding to the intervals [01 — 6, oz) and
[,8, ,B+ 6), respectively), are passed into a TR—speciﬁc dynamic program-
ming algorithm to improve boundary resolution, as shown in Figure 1.
For a given query subinterval Qk[a — e, b + 6), let p, r and S correspond
to the preﬁx, TR element and sufﬁx reference sequences and P, R and S
correspond to their respective alignment matrices to Qk[a — e, b + e). The
preﬁx alignment matrix P is ﬁlled out according to the Needleman—
Wunsch algorithm (Needleman and Wunsch, 1970). The repeat matrix
R, however, requires additional initialization and recurrence conditions:

P,-_1,|1,| +m

Ri—l,j—l +m
R,,j=max R,_1,j+p

Ri,j—l +10

Ri—l,|r|+(i_1)p+m

 

Preﬁx [Pl TR {R} SUFFIX {5}
A C G T C C A G A
A i'lljrl i-Lj
C
G “.1 L] _ i-1_j-1 i-1.i _
T
.0 C
a C i,|'-1 h]
n:
T
C
C i-1.j-1 i-1..j
A \
G 'l' “1 --
l.]- Ir]
A

 

 

 

 

 

 

 

Fig. 1. Representation of the dynamic programming algorithm for un-
biased identiﬁcation of the TR boundaries within reads. Here, ‘Read’
corresponds to the query subinterval Qk[a — e, b+e) and sequence
‘TCC’ corresponds to the reference TR element. The thick dashed gray
lines in the Preﬁx (P) and TR (R) matrices represent the resolved TR
boundaries within the read. The arrows represent the recurrence condi-
tions for the three matrices

 

3492

112 /§JO'S{numo [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq U101} prBOIUAAOG

9IOZ ‘091sn3nv uo ::

Resolving complex tandem repeats with long reads

 

where i e Qk[a — e, b+e), j 5 |r|, ,0 is used to denote a gap penalty, and
m[Q§C, rj] is the score for aligning the corresponding base i in
Qk[a — e, b+e) andj in r.

First, any position i in Qk[a — e, b+ e), denoted by Q2, which reaches
the end of the preﬁx sequence is a valid entry point into the repeat matrix
R at row i+ 1. We cannot assume a priori that the repeat starts at the
beginning of the predicted consensus copy, and thus, at any position Rw-
we must consider P,_1,| pl + m[Q;'C, rj]. The key distinguishing feature of the
repeat matrix is its ability to traverse a repeat unit multiple times. This is
captured at position i<|Qk[a — e, b+e)| = |Qk|, by allowing the move
from position (i — 1, |r|) in R to any position (i, j) in the following row
by R,-_1,j+(j — l)p+m[Q;€, rj] (the term penalizes any insertion gaps
induced by such a move). This allows unbiased expansion and contrac-
tion of the repeat and substantially reduces the time complexity, espe-
cially in the case of highly expanded repeats (the most challenging types
of TRs to resolve). Under the assumption that no sequence was lost at the
junction, the sufﬁx is straightforward to compute. A single special case
is required in the ﬁrst column of the sufﬁx matrix S to consider entries
from the repeat matrix R. This is handled by the relation

SL1: mlax R,-_1,k+m[q,,sl], otherwise the standard Needleman—
0< <|r|

Wunsch recurrence is used.

After retracing the optimal path through the S, R and P matrices, in
order, and returning the entry and exit points in R, the predicted TR
sequence in Qk[a — e, b + e) is obtained. The multiplicity of the repeat is
given directly by this traversal; it is roughly the number of times the last
case of the repeat recurrence is used in the optimal traversal path, plus the
fractions of the repeat from the preﬁx entry and sufﬁx exit points. The
time complexity of this algorithm is 0(IQk||p|)+0(IQkIIS|)+0(|Qk||r|).
However, the preﬁx and sufﬁx lengths are constrained by the ﬁxed ﬂank-
ing criteria, 6, leading to time complexity 0(|Qk|e) + 0(|Qk| |r|). In prac-
tice, as 6 << leI and r << leI, this compute is substantially faster
than lelz.

2.2 Probabilistic TR resolution through pairHMM

To improve estimations and allow for allele assignment, we extend the
previous strategy in two key ways:

(1) Explicit modeling of error modes speciﬁc to the sequencer, such as
cognate sampling (Eid et al., 2009)

(2) Provide probabilities for predicted TR multiplicities in a given
read.

To address this we propose a pairHMM approach that computes the
probability for the sum of all alignment paths between the query and a
putative repetitive TR sequence. In this paradigm, the number of TR
elements is treated as a random variable and the pairHMM is used to
calculate the expected value of this random variable based on an esti-
mated discrete probability mass function. Supplementary Figure S2 de-
tails the model structure of the pairHMM, which takes as input the
predicted TR interval in Qk[a — e, b + e) (labeled as q) and the consensus
TR element sequence, r, and models the error modes with three hidden
states: M = match, X = deletion and Y = insertion.

Transition and emission probabilities are generated from BLASR
(Chaisson and Tesler, 2012) alignments in non-TR regions. These prob-
abilities are computed globally over all sequenced reads and locally using
the ﬂanking sequence to account for variability between reads. In prac-
tice, global parameters for transitions are seen in Supplementary Figure
S3A. To more accurately represent the known issue of ‘cognate sampling’
(Eid et al., 2009), whereby the emitted base has a dependence on the
last incorporate nucleotide, we incorporate conditional dependence in
emission probabilities when calculating forward probability values
(Supplementary Methods) for the insertion state (deﬁned as X).
Parameters for these conditional emission probabilities for the insertion
state X are shown in Supplementary Figure S3B. Our application differs

from the canonical pairHMM in that we are not comparing two true
sequences, but rather comparing an error-prone sequence (the long read)
to the potential true sequence derived from a reference TR element (r).
Therefore, we use a slightly modiﬁed version of the pairHMM presented
by Durbin et al., to allow for an insertion of a base to be followed im-
mediately by a deletion (or vice versa) to account for this type of sequen-
cing pathology.

2.3 Calculating expected TR multiplicities

Let P(D> IA) correspond to the probability of an observation sequence 5
given the pairHMM model parameters A. We run the forward algorithm
(Durbin et al., 1998; Rabiner, 1989) with q and an upper bounded syn-
thetic TR sequence, S2 (constructed by repeating r), as the pair of se-
quences constituting the observation sequence 0=(q, S2). In practice,
we use |S2|=1.5|q|/|r|. For allj=1,..., |S2|, we calculate the sum of
for_\;vard probabilities fS(|q|, j) from each state S =M, X, Y to obtain
P(0 |A,j) =fM(|q|,j) +fX(|q|,j) +fY(|q|,j). Details on the forward calcu-
lation can be found in Supplementary Methods. The_s)e probability valges
are used to get relative normalized weights, Wj = P(0 ll, j) / 2k: 1P(0 |
)_t), k) of observing a given TR multiplicity j in the observation sequence
0. The relative weights are then used to calculate the expected value of
the TR multiplicity, num TR = ij (Supplementary Figure S4).

We also calculate the log odds ratio witl_1)respect to a random model, Z
(Durbin et al., 1998). Let 1, = argmaxvj P(0,-|)t, j) represent the TR multi-
plicity at which P(0,-|)t, 1)) is maximal. The log odds ratio is calculated as
log(maxvj P(0,-|)t,j)/P(0,-|Z,]jl‘)>. The higher the value of the log odds
ratio, higher the signiﬁcance of the pairwise alignment between the query
sequence, q, and the constructed TR sequence, S2.

Optimization of the model parameter A, given the observation se-
quence 0 is typically performed using Baum—Welch or expectation-maxi-
mization algorithms (Durbin et al., 1998). In our construct, the true
observation sequence 0 is unknown and hence we estimate the mgdel
parameters A from the known pairwise alignments. We calculate P(0|)t)
where )t is either how; or AGZobaz. Aggoba; is pre-estimated from sequence
alignments of the reads to the reference genome, G, and Mom; is estimated
at runtime from the sequence alignments upstream and downstream of q
(from the preﬁx P and sufﬁx S matrices, as previously deﬁned). The
mo_del parameter A is then selected based o_r)1 the higher value for
P (0H) for A = (Mosul, )VGlobal) Or A = argmax{P(0|)\-Local)a P (Ollczobazﬂ-

2.4 TR allele calling

To determine zygosity for each TR event, we use a generalized Gaussian
mixture models (GMMs)-based approach, which uses Akaike informa-
tion criterion (AIC) for the initial model selection. Algorithm 1 details the
process by which heterozygous or homozygous calls are made and con-
sensus sequences are generated for each cluster.

 

Algorithm 1 TRALLELES (D,tc,tb)

 

1: R1 = GMM (D, 1) # run GMM with 1 component

2: R2 = GMM (D,2) # run GMM with 2 components

3: while R2[2] < Hg (10

4 D = R2[1] # assume smaller component is outlier, set D to larger component
5: R1 = GMM (D,1)

6 R2 : GMM (D, 2)

7: end while

8: if AIC(R2) < AIC(R1) /\ CSEP (01,02) < to /\ BINCDF (|D|, |R2[1]|) > tb then
9: return POAHB(R2[1]), POAHB(R2[1])

10: else

11: return POAHB(D)

12: end if

 

Algorithm 1 TrAlleles. Takes as input the set of reads spanning a TR
event and returns the consensus homozygous or heterozygous allele(s)

We assume the observed TR multiplicity calls are normally distributed
around the true TR length for each allele. We use the scikit-learn GMM

 

3493

112 /810's113u1no [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq U101} pepeommoq

9IOZ ‘091sn8nv uo ::

A. Ummat and A.Bashir

 

implementation (Pedregosa et al., 2011), with the covariance type for the
dataset to be diagonal (given that the one-dimensional data points have
no correlations). For diploid genomes, we allow either 1 or 2 components
in the model, corresponding to homozygous or heterozygous alleles at
each locus. Note that outliers are inevitable in such analyses and to
handle such outliers we require that each component in the mixture
model contain at least two data points. If a component represents a
singleton value, we eliminate the value from the initial set and iterate
until a component with at least two data points is observed. For initial
model selection, we compare the AIC (Akaike, 1978) for n = 1 and n = 2
components, and choose the one with a lower value (Burnham, 2004).

To call the event as heterozygous, we intersect the model selection with
two different sets of criterions. The ﬁrst criterion calculates the c—separ-
ation, CSEP, between the means of the two predicted Gaussian distribu-
tions (Dasgupta, 1999), where c is a constant scaling factor. Let
CSEp(01, 02) = c >I< max (01, 02) where 01, 02 corresponds to the standard
deviation of clusters 1 and 2, respectively. We set a threshold
tC = | 11.1 — uzl, where m, 11.2 corresponds to cluster means. For the
second criterion, we conﬁrm whether the number of data points per clus-
ter is possible under the assumption that the observed split of data should
follow a binomial distribution. We approximate this by calculating
BINCDF, 1 - binomial CDF of observing at least the number of reads
in the larger component given total clustered reads, and enforce that this
is above some cutoff, tb.

If CSEp(01, 02)<tc and the probability of observing the number of
predicted data points per clusters is more than tb, the event is labeled
as heterozygous. The parameters ‘min_c0var’ (the lower bound for the
covariance values of the mixture model in scikit-learn’s GMM implemen-
tation) and c are optimized using a homozygous and heterozygous train-
ing set (See Section 3). In the ﬁnal step, a consensus sequence is generated
for each cluster via ‘partial order alignment’, using the heaviest bundle
algorithm (Lee, 2003). These consensus sequences are then used to rees-
timate the number of TRs via pairHMM for each allele.

2.5 SV detection and multiplicity lower bounds

The sequence in the query TR interval may not simply represent TR
expansions or contractions. SVs have been shown to ﬂank many
repeat-mediated structural variants including TRs (Yalcin et al., 2011).
The P(0|)t) derived from the forward algorithm provides a probabilistic
basis to estimate and classify non-repeat intervals in q. These non-repeat
intervals (deﬁned as regionSV) could either be repeat sequences with some
similarity with the reference TR element or internal SV.

Using q as the input we follow a simple procedure to identify) these
non-repeat intervals. For each index) i of q, we calculate maxvj P(0,-|)t, j)
and ff (refer section 2.3), where 0, =(q(1,2,m,,'), S2) is the observation
seqyence. Next, we calculate log-likelihood ratio, LLR(i,fll‘)=
P(0,-|)t,]j.“) — P(0,-|Z,]j.“), for each index i of q. We then calculate the
deviation of LLR for each i, deﬁned as ALLR,,,-_1 = LLR(i,fll‘)— LLR(i
—1, 1:911). For a perfect TR sequence between [i], i], ALLRMI will be >0;
SVs in q can then be identiﬁed as follows:

regionSV={[i;,, in] : ALLRw-h <0 l0 3 ih<i,-, g |q|}

The likely repeat region in q is then a set {(1, |q|) — regionSV}. Thus,
regionSV Q q may reﬁne our estimate of the expected TR multiplicity
as numT R — IregionSVl. This correction presents a more conservative
bound to the expected TR multiplicity in q. A high value for IregionSVl
suggests a signiﬁcant insertion region in q with respect to the refer-
ence TR sequence. In the current implementation we have restricted
ourselves to evaluating small SV insertions; a simple two-state HMM
with Gaussian emissions was used to ﬂag predicted insertion intervals
within the query by looking at the ALLR values at each adjacent
[z], i], of q. The GaussianHMM implementation from scikit-learn
(Pedregosa et al.) was run with two components to call SV events
in q. The mean and covariance values for the model were initialized

based on the assumption that the inserted intervals would have
ALLR<0.

3 RESULTS
3.1 Raw read TR prediction analysis

To evaluate TR detection methods we created simulated reads on
chromosome 1 of hgl9 using pbsim (Ono et al., 2013) with ‘data-
type’ as CLR, ‘depth’ as 10, ‘length—mean’ as 7000 and using the
‘model—qc’ option. We focused on detection (Does the method
identify a TR in a TR spanning read?) and accuracy (How con-
sistent is the predicted TR multiplicity with the known value)?
Detection is only relevant for de novo TR predictions; reference-
based methods (such as PACMONSTR) depend on the reference as
input. TRF was run on all raw read sequences using a minimum
score setting of 25 (roughly twice as sensitive as default settings,
leading to many false-positive calls). Figure 2A indicates the
ability of TRF to detect a consensus sequence similar to the
true repeat consensus.

To provide a conservative comparison, we tried to be as per-
missive as possible in our deﬁnition of ‘detection’. Each predicted
consensus repeat from TRF was compared with the known TR,
by performing Smith—Waterman alignment of the predicted
repeat against a 2x TR of the true consensus. This ensured
that any cyclic variations of the true repeat would be captured.
Using a match score of 5, mismatch of —5 and indel penalty of
—5, a true repeat was considered ‘detected’ if any of the alignment
scores to TRF repeat predictions in the interval exceeded
0.35L(=0.8 >l< 5 >l< L — 0.1 >l< 5 >l< L), where L is the length of the
true TR consensus. In general, the higher the multiplicity and the
shorter the repeat interval the more likely TRF was able to ac-
curately detect the element. The multiplicity result is straightfor-
ward: the more instances of a TR, the more likely the method is
able to capture it. Shorter repeats are likely easier to detect owing
to error rates—the longer repeats are often too highly diverged to
satisfy TRF’s k-tuple requirements unless extremely high copy
numbers are observed.

Reads that had detectable events by TRF were used to assess
the accuracy of TR multiplicity predictions. For TRF, the best
candidate repeat (closest to the true consensus) was used for
multiplicity estimation. Figure 2B shows the performance of
TRF versus our modiﬁed recurrence (‘Na'ive DP’) and
pairHMM algorithms over all simulated reads of hgl9 chromo-
some 1. As expected, TRF underpredicts missing TR instances or
over-fragmenting a continuous TR in multiple disjoint elements.
At all frequencies and period lengths the pairHMM accurately
predicts TR multiplicity, outperforming both the naive dynamic
program and the TRF. The pairHMM and naive dynamic pro-
gramming converge at large period sizes (>16 bp), as it is unlikely
that slight indels or substitutions would disrupt the optimal path
of the query through a predicted repeat instance.

3.2 Evalutation of clustering performance

3.2.] Dataset construction To assess the performance of the
clustering approach, we used a roughly publicly available se-
quence reads (roughly 9X coverage) from the CHMlhTERT
cell line (Paciﬁc Biosciences, 2013), a haploid complete

 

3494

112 /810's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq U101} pepeommoq

9IOZ ‘091sn8nv uo ::

Resolving complex tandem repeats with long reads

 

 

1000 '3
In
'I
Presence
Er 1m) -. I 1.131]
IE _ 035
a .
E I 1150
:1
E  0.25
'10 - [1.00

 

 

I
10 1000
Penod

 

 

 

 

 

B
| 1-5 |[ 0-10
ﬂ_ g _ _ _ _ _ _ _ 
—100-
8 '29“ ' Method
E __  — Naive DP
“if I 11-15 ll 15-3“ l — pairHMM
:1-
5 0— — — — --— —- --' TRF
-100—
0004
1 I I' | I I
10 100 1000 10 100 1000
TR Multiplicity

Fig. 2. (A) TR detectability of TRF shown by ‘Presence’ value (1.00 = TRF detects TR element in all reads spanning TR event and 0.0 = TRF detects
no TR elements in any read spanning TR event). Both the axes are in logo for clarity. (B) Accuracy of the multiplicity prediction by different methods.

The TR Multiplicity axis is in logo for clarity

hydatiform mole (CHM) (Jacobs et al., 1980). All TR zygosities
for this genome should therefore be homozygous.

Evaluating heterozygous calls is more challenging, as it is dif-
ﬁcult to establish ‘ground truth’ for individual reads derived
from a diploid reference. To address this ambiguity we con-
structed a synthetic heterozygous test set using the same haploid
CHM dataset. First, we identiﬁed disparate regions in the refer-
ence genome with identical consensus TR sequences. Next, for
each group of regions with a shared TR sequence we performed a
pairwise merger of the constituent read sets. Each disparate pair
yielded a synthetic heterozygous event. These events were then
grouped by the difference in their TR multiplicities. We then
evaluated the performance of the clustering approach for the
TR multiplicity differences of l, 3, 5 and 8.

To select the parameters for our clustering approach, we
trained our model on a training set and selected the model par-
ameters with the highest accuracy score on the homozygous and
synthetic heterozygous test sets. ‘min_c0var’ of 0.0175 and tC
of 2.0 were used for clustering of CHM data.

3.2.2 Clustering performance PacmonSTR’s ability to call
homozygous TRs is shown in Figure 3A. The approach correctly
predicts >90% of events at medium to large period sizes. Small
periods were more difﬁcult to accurately resolve, as small vari-
ances in size can lead to large deviations in predicted multiplicity
(especially for singletons or small repeats that contain homopo-
lymeric sequences).

3.3 Small insertion detection in TRs

As expected, heterozygous calling performance improves as the
difference in the TR multiplicity increases (Fig. 3B). However,
even at a multiplicity difference of 3 the method is still able to
identify >75% of regions accurately. As in the case of homozy-
gous events, single base TR elements were problematic at all
difference levels. For heterozygous events we also evaluated the
accuracy of assigning reads to a given cluster. Figure 3C shows
the fraction of reads that are misassigned based on the period

 

 

 

A 1.00
'1 I
30.05 g I
S
U005—
ii- I
0.50-
‘3-75_'".' ' ' ' ' "I ' ' ' ' ". ' ' ' ' ' "I ' ' ' ' ' ". ' ' ' ' ' "7""
1-4 5-0 0-12 _ 13-10 11:20 21-30
Period
3 | 1 l 3

 

 

 

 

 

 

 

 

 

 

13.3— .
II
2.5 5.1.} T5 1U.U_ 2.5 5.0 7".5 1110
Penod
C
“g 1 3
. -
$Eﬂﬂﬁ— I I i "' . " i .- ' I. I l-
a: I: I- . I 'l i ‘
E_EW.UU— _
C E | 0 _ 0
E.Eﬂﬂ5— - 1- a " i '
E: I I. l- l‘ I I i i . I
LI. ﬂ-DU— 1 I 1 " r I r '1'. - I
2.5 5.1] 15 lﬂﬂl 2.5 5.1] 15 1110
P0000

Fig. 3. (A) Clustering Performance for a homozygous test set from
CHMlhTERT cell line. (B) Clustering performance for a constructed
heterozygous test case. The horizontal dashed line represents the accuracy
of 1 and 0.75. (C) Fraction of reads that are misassigned from the het-
erozygous calls. For all the ﬁgures the x-axis is the period of the TR
event, (B) and (C) are faceted by the difference in predicted cluster
means of the homozygous test cases

 

3495

112 ﬁlm'spzumo [pJOJXO'SOIlBIIlJOJUIOIQ/ﬂdllq U101} pepeommoq

9IOZ ‘091sn8nv uo ::

A. Ummat and A.Bashir

 

size and TR multiplicity differences. In general, clustering is ex-
tremely accurate except for small repeats or low differences in the
TR multiplicities.

To evaluate the pairHMM’s ability to identify insertions (or
structural variations, SV) in the TR interval, we simulated
random sequences and added those to the simulated repeats
from chromosome 1 of the CHM cell line. Fifty replicates were
performed at each period, frequency and SV size bin. We then
assessed the ability of the method to accurately call the insertion
and estimate its boundaries in two different cases: (i) insertions
internal to TR regions (Fig. 4A and B) and (ii) insertions at the
ends of TR regions (Supplementary Figure SSA and B).

Figure 4A and B highlights the predicted number of events
under different period, multiplicities and insertion sizes. As

A 10

 

 

 

 

 

 

 

 

 

 

I 50

50-

4,0-

00— _.

aﬂ- III“ In rt
E “3‘ 51::
3.3- 3,:

40— .5”:

30'- 00

20— 5

10-

U— T I l I

0 1 0 1
Predicted S‘u’ Blocks

3 10 50

0.20-

0.15— __

0.10- 01
hﬂﬂﬁ- . large-rt
= .»  . e
E000 _ ZED
C'- 0.20 — 15:19”

CHE- _.'~,l {in

0.10— ' El

000-  ‘1

0.00- 'f' m

410-10 0 1'0 2'0 -2'0 -1'0 0 10 20
Difference Between True and Observed 311 Start Site

C “Em - T111111 - sum:
{PI - Imam-r1 insert I5.

Reference Tmrmjmes—[Te],  urmemeerrehemre

 

         
  

  {11-1113th Tel 11:011:

query THGTII‘, IE :I “AGE [TGI' -.

      

:-- predicted insert -I

Fig. 4. (A) Detection count. The x-axis is the predicted states from HMM
and y-axis is the number of counts. (B) Density plot of the accuracy of
insert boundaries when the insertion is in the middle of the TR region as
predicted by the model. The x-axis is the difference between the true and
predicted insertion start site in the TR region. Insert sizes of 10, 30 and 90
base pairs are plotted. The ﬁgure is facetted by TR multiplicity and TR
period sizes. (C) Example insertion in CHM consensus ‘TG’ repeat.
Comparison with hg19, chr1:152779513 -152779589, veriﬁes an insertion
internal to event

expected, the smallest insertion (10 bp) was consistently the hard-
est event to detect. Notably, larger SV sizes are rarely missed and
no over-calling occurs at any event size (Fig. 4A). To assess the
accuracy of the boundaries, we examined reads that predicted a
single insertion; Figure 4B shows that the algorithm is roughly
centered at 0bp divergence between the expected and observed
start sites. Insertion sizes do not seem to substantially change the
precision of boundary predictions. Though smaller periods give
the best results, the boundary predictions are surprisingly tight
across simulated values.

Using these parameters, we probed for insertions within CHM
chromosome 1. Nine regions on chromosome 1 showed up as
positive for insertions. Figure 4C highlights an example inser-
tion that we were able to conﬁrm via comparison with hg19.
The consensus repeat ‘TG’ is split by an internal ‘AG’ re-
peat; this is detected without knowledge of the full reference se-
quence (only the ‘TG’ element). The observed consensus
differs from hg19 in ‘TG’ multiplicity downstream of the event
insertion site.

4 DISCUSSION

We have presented an approach for reference-based TR detec-
tion that is speciﬁcally adapted for long reads with high inser-
tion/deletion error rates. The method substantially outperforms
de novo approaches both in detection and resolution of events.
Additionally, the probabilistic pairHMM not only provides an
even tighter prediction of TR multiplicities on raw reads it can
also be used to infer structural variants within, or immediately
ﬂanking, a TR region. Despite meeting these goals, PACMONSTR
and the simulations used to evaluate it have a number of limita-
tions and areas where further improvements can be made.

Validation of clustering accuracy is an issue that may need to
be addressed on a genome by genome (or repeat by repeat) level
(Abecasis et al., 2012). We attempted to model this by using real
haploid genome sequences and creating synthetic heterozygous
TRs from disparate genomic regions of the genome. In real dip-
loid data, however, one does not know if a region is truly het-
erozygous. An alternative approach for evaluating calls is to
identify SNVs, indels and SVs upstream and downstream of a
called TR. Once TR multiplicities are predicted for each read,
and clustering assignment has occurred, one can evaluate con-
cordance of ﬂanking variant alleles with the TR clustering as-
signment of raw reads to determine whether they form a
consistent haplotype. The high-error proﬁle of SMRT sequen-
cing on a per-read basis could make accurate SNP assignment
challenging. However, as the read lengths continue to expand, it
has been shown that multiple SNPs and SVs captured within
a single long read could create a stronger statistical signal to
validate phasing (Lo et al., 2011). Ideally, this haplotype infor-
mation can be incorporated into the clustering process, in add-
ition to the estimated TR multiplicity, to more robustly separate
TR alleles with small periods or with small multiplicity
differences.

Given the quadratic runtime for the pairHMM, if read lengths
continue to improve into the hundreds of thousands of base
pairs, the runtime of the algorithm may become unwieldy in
real-world scenarios. However, the pairHMM is not required
to accurately resolve multiplicity for most TRs. For large-

 

3496

112 /810's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq U101} pepeommoq

9IOZ ‘091sn8nv uo ::

Resolving complex tandem repeats with long reads

 

period TRs, the modiﬁed preﬁx-repeat-sufﬁx dynamic program
provides nearly identical results at substantially faster speeds.
Although the DP runtime grows linearly as the period size in-
creases (and may also become prohibitively large), faster banded
heuristics become viable with large periods. Many small-period
TRs can be resolved in the clustering phase without requiring the
pairHMM. If two alleles are highly dissimilar, even if read-to-
read variation is high, it is likely that they still will form distinct
clusters. Once clusters are identiﬁed and consensus sequences are
generated, TRs can be identiﬁed directly from the consensus.
Thus, the full pairHMM can be restricted for scenarios where
accurate resolution is required on short period repeats for which
clear clustering cannot be performed.

The proposed and related approaches are reliant on predeter-
mined locations of TRs in the reference as input. This limits the
generalizability of the method, but can be alleviated by prepro-
cessing the data with other de novo and structural variant tools.
Figure 2A showed that TRF was often able to detect repeats
from the raw reads. In practice, the algorithm can be run on
all raw data to seed potential repetitive positions in the queries.
These positions can be projected back onto the reference to iden-
tify candidate intervals for novel TR events. Reads spanning
these positions of interest can then be interrogated by running
the full pairHMM on the set of TRs predicted in the interval. As
multiple consensus repeats will likely be identiﬁed, the one yield-
ing highest probability can be selected for clustering analysis.
Additionally, some SV tools, like Delly, allow for detection of
novel TRs using reference coordinates that can similarly be
passed into the method (Rausch et al., 2012).

Just as we can inform de novo TR calling by integrating other
tools, we can similarly use our approach to help inform com-
pound structural events involving TRs. In Figure 4 we demon-
strated the method’s ability to reliably identify inserted sequence
within a TR element. SV elements observed on chromosome 1
were often TR expansions (such as in Fig. 4C); these sometimes
existed at TR boundaries, suggesting potential reﬁnements may
be needed to the initial DP algorithm to better distinguish TR
intervals from preﬁx and sufﬁx sequences. Additionally, SVs
may not always represent a distinct sequence block, the predicted
consensus periods for a TR within an individual have been
shown to diverge from the expected TR consensus, especially
in the case of compound TRs where smaller repetitive units are
grouped within a larger repeating unit (Doi et al., 2013).
Although these can be more easily seen once a consensus is
generated, local ﬂuctuations in pairHMM probabilities can
inform when such slight deviations in TR consensus are occur-
ring periodically across a TR interval.

As alternative sequencing platforms become available, algo-
rithms are needed that are able to harness the unique features
of each technology. For any technology, even as the cost per base
decreases, one must always make a choice between higher
sequencing depth and larger numbers of samples. This decision
is tied to the experimental goals of the project as well as the
relative precision of a technology at different sequencing
depths. In the context of TRs, our method provides informative
guidelines for TR resolution given the type and size of the desired
repeat. By allowing single read calls (and providing a probabil-
istic framework for evaluating these calls), the method is imme-
diately applicable even at low depth, making it a useful option

given the platform’s comparatively higher cost, while also
enabling potential applications in heterogeneous cell popula-
tions, as observed in cancer. Integrating raw read TR resolution
with robust consensus calling, will continue to make the ap-
proach applicable for the type of high-depth studies that will
soon be feasible as these technologies mature and become used
by the broader research community.

ACKNOWLEDGEMENTS

We thank Sean Whalen and Matthew Pendleton for helpful dis-
cussions on the algorithmic approach and implementation. This
work was also supported in part through the computational re-
sources and staff expertise provided by the Department of
Scientiﬁc Computing at the Icahn School of Medicine at
Mount Sinai.

Funding: This research was funded by the Icahn School of
Medicine at Mount Sinai through seed funding to A.B.

Conﬂict of Interest: A.B. has previously been employed at Paciﬁc
Biosciences (2009-201 1).

REFERENCES

Abecasis,G.R. et al. (2012) An integrated map of genetic variation from 1,092
human genomes. Nature, 491, 56—65.

Abyzov,A. et al. (2011) CNVnator: an approach to discover, genotype, and char-
acterize typical and atypical CNVs from family and population genome sequen-
cing. Genome Res, 21, 974—984.

Akaike,H. (1978) A Bayesian analysis of the minimum AIC procedure. Ann. Inst.
Stat. Math, 30, 9—14.

Arzimanoglou,I.I. et al. (1998) Microsatellite instability in human solid tumors.
Cancer, 82, 1808—1820.

Bashir,A. et al. (2012) A hybrid approach for the automated ﬁnishing of bacterial
genomes. Nat. Biotechnol, 30, 701—707.

Benson,G. (1999) Tandem repeats ﬁnder: a program to analyze DNA sequences.
Nucleic Acids Res, 27, 573—580.

Boeva,V. et al. (2006) Short fuzzy tandem repeats in genomic sequences, identifica-
tion, and possible role in regulation of gene expression. Bioinformatics, 22,
676—684.

Burnham,K.P. (2004) Multimodel inference: understanding AIC and BIC in model
selection. Social. Methods Res, 33, 261—304.

Chaisson,M.J. and Tesler,G. (2012) Mapping single molecule sequencing reads
using Basic Local Alignment with Successive Reﬁnement (BLASR): theory
and application. BM C Bioinformatics, 13, 238.

Chen,S. et al. (2003) Distribution and characterization of over 1000 T-DNA tags in
rice genome. Plant J., 36, 105—113.

Chin,C.S. et al. (2013) Nonhybrid, ﬁnished microbial genome assemblies from long-
read SMRT sequencing data. Nat. Methods, 10, 563—569.

Dasgupta,S. (1999) Learning mixtures of Gaussians. In: 40th Annual Symposium on
Foundations of Computer Science(Cat. No.99CB37039), Vol. 1, pp. 634—644.

Doi,K. et al. (2013) Rapid detection of expanded short tandem repeats in personal
genomics using hybrid sequencing. Bioinformatics, 30, 815—822.

Durbin,R. et al. (1998) Biological Sequence Analysis: Probabilistic Models
of Proteins and Nucleic Acids. 1st edn. Cambridge University Press,
Cambridge, UK.

Eid,J. et al. (2009) Real-time DNA sequencing from single polymerase molecules.
Science, 323, 133—138.

Garrison,E. and Marth,G. (2012) Haplotype-based variant detection from short-
read sequencing. arXiv, 1207.3907, 9.

Gymrek,M. et al. (2012) lobSTR: a short tandem repeat proﬁler for personal gen-
omes. Genome Res, 22, 1154—1162.

Highnam,G. et al. (2013) Accurate human microsatellite genotypes from high-
throughput resequencing data using informed error proﬁles. Nucleic Acids
Res, 41, 632.

 

3497

112 /810's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq U101} pepeommoq

9IOZ ‘091sn8nv uo ::

A. Ummat and A.Bashir

 

Jacobs,P.A. et al. (1980) Mechanism of origin of complete hydatidiform moles.
Nature, 286, 714—716.

J in,P. (2000) Understanding the molecular basis of fragile X syndrome. Hum. Mal.
Genet, 9, 901—908.

Jorda,J. and Kajava,A.V. (2009) T-REKS: identiﬁcation of Tandem REpeats in
sequences with a K-meanS based algorithm. Bioinformatics, 25, 2632—2638.
Koren,S. et al. (2012) Hybrid error correction and de novo assembly of single-

molecule sequencing reads. Nat. Biatechnal., 30, 693—700.

Langmead,B. and Salzberg,S.L. (2012) Fast gapped—read alignment with Bovvtie 2.
Nat. Methods, 9, 357—359.

Lee,C. (2003) Generating consensus sequences from partial order multiple sequence
alignment graphs. Bioinformatics, 19, 999—1008.

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with Burrows-
Wheeler transform. Bioinformatics, 25, 1754—1760.

Lim,K.G. et al. (2013) Review of tandem repeat search tools: a systematic approach
to evaluating algorithmic performance. Brief Biainfarm., 14, 67—81.

Lo,C. et al. (2011) Strobe sequence design for haplotype assembly. BM C
Bioinformatics, 12 (Suppl. 1), S24.

McKenna,A. et al. (2010) The genome analysis toolkit: a MapReduoe framework
for analyzing next-generation DNA sequencing data. Genome Res, 20,
1297—303.

Needleman,S.B. and Wunsch,C.D. (1970) A general method applicable to the
search for similarities in the amino acid sequence of two proteins. J. Mal.
Biol, 48, 443—453.

Ono,Y. et al. (2013) PBSIM: PacBio reads simulator—toward accurate genome
assembly. Bioinformatics, 29, 119—121.

Paciﬁc Biosciences. (2013). http://blog.paciﬁcbiosciences.com/2013/10/data-release-
long-read-shotgunhtml (31 November 2014, date last accessed).

Pedregosa,F. et al. (2011) SCikit-learn: machine learning in Python. J. Mach. Learn.
Res, 12, 2825—2830.

Rabiner,L.R. (1989) A tutorial on hidden Markov models and selected applications
in speech recognition. Proc. IEEE, 77, 257—286.

Rausch,T. et al. (2012) DELLY: structural variant discovery by integrated paired-
end and split-read analysis. Bioinformatics, 28, i333—i339.

Ribeiro,F.J. et al. (2012) Finished bacterial genomes from shotgun sequence data.
Genome Res, 22, 2270—2277.

Ritz,A. et al. (2010) Structural variation analysis with strobe reads. Bioinformatics,
26, 1291—1298.
Sawaya,S. et al. (2013) Microsatellite tandem repeats are abundant in human pro-
moters and are associated with regulatory elements. PLaS One, 8, e54710.
Sawaya,S.M. et al. (2012) Promoter microsatellites as modulators of human gene
expression. Adv. Exp. Med Biol, 769, 41—54.

Sindi,S. et al. (2009) A geometric approach for classiﬁcation and comparison of
structural variants. Bioinformatics, 25, i222—i230.

Tarailo-Graovac,M. and Chen,N. (2009) Using RepeatMasker to identify repetitive
elements in genomic sequences. Curr. Pratac. Bioinformatics, Chapter 4, Unit 4. 10.

Tsai,H.-F. et al. (2004) Analysis of trinucleotide repeats in different SCA loci in
spinooerebellar ataxia patients and in normal population of Taiwan. Acta
Neural. Scand, 109, 355—360.

Tyson,C. et al. (2014) Expansion of a l2-kb VNTR containing the REXOlLl gene
cluster underlies the microscopically visible euchromatic variant of 8q21.2. Eur.
J. Hum. Genet, 22, 458—463.

Veselinovié,I. (2006) Microsatellite DNA analysis as a tool for forensic paternity
testing (DNA paternity testing). Med Pregl., 59, 241—243.

Walker,F.O. (2007) Huntington’s disease. Lancet, 369, 218—228.

Yalcin,B. et al. (2011) Sequence-based characterization of structural variation in the
mouse genome. Nature, 477, 326—329.

Ye,K. et al. (2009) Pindel: a pattern growth approach to detect break points of large
deletions and medium sized insertions from paired-end short reads.
Bioinformatics, 25, 2865—2871.

 

3498

112 /810'S{eumo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq U101} pepeommoq

910Z ‘091sn8nv uo ::

