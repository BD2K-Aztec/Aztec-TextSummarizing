Bioinformatics, 31 (24), 2015, 3914—3921

doi: 10.1093/bioinformatics/btv471

Advance Access Publication Date: 13 August 2015
Original Paper

 

Structural bioinformatics

Pairwise RNA secondary structure alignment
with conserved stem pattern
Jimmy Ka Ho Chiu and Yi-Ping Phoebe Chen*

Department of Computer Science and Information Technology, La Trobe University, Melbourne, Victoria 3086,
Australia

*To whom correspondence should be addressed.
Associate Editor: lvo Hofacker

Received on September 8, 2014; revised on August 4, 2015; accepted on August 7, 2015

Abstract

Motivation: The regulatory functions performed by non-coding RNAs are related to their 3D struc-
tures, which are, in turn, determined by their secondary structures. Pairwise secondary structure
alignment gives insight into the functional similarity between a pair of RNA sequences. Numerous
exact or heuristic approaches have been proposed for computational alignment. However, the
alignment becomes intractable when arbitrary pseudoknots are allowed. Also, since non-coding
RNAs are, in general, more conserved in structures than sequences, it is more effective to perform
alignment based on the common structural motifs discovered.

Results: We devised a method to approximate the true conserved stem pattern for a secondary
structure pair, and constructed the alignment from it. Experimental results suggest that our method
identified similar RNA secondary structures better than the existing tools, especially for large struc-
tures. It also successfully indicated the conservation of some pseudoknot features with biological
significance. More importantly, even for large structures with arbitrary pseudoknots, the alignment
can usually be obtained efficiently.

Availability and implementation: Our algorithm has been implemented in a tool called PSMAlign.
The source code of PSMAlign is freely available at http://homepage.cs.latrobe.edu.au/ypchen/
psmalignl.

Contact: phoebe.chen@latrobe.edu.au

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

The interest in RNA research was reinvigorated after discovering its
regulatory and catalytic roles in many biological processes (Couzin,
2002; Storz, 2002). Those RNAs with such roles are called the non-
coding RNAs (ncRNAs). They perform a diverse range of functions,
such as regulating gene expression (Serganov and Patel, 2007), mod-
ifying ribosomal RNA (Maden and Hughes, 1997), and controlling
muscle differentiation (Cesana et al., 2011). It is believed that a spe-
cific function of an ncRNA molecule is related to its structure (Chen
and Chen, 2009; Lee et al., 1997). Strong evidence is that ncRNAs
are more evolutionarily conserved in their structures than their se-
quences (Reiter et al., 2011). Therefore, the two main studies in this
area are the structure determination and the comparison among

different structures. The former can be subdivided into experimental
analysis (Scott and Hennig, 2008) and computational prediction
(Rivas and Eddy, 1999; Zuker and Stiegler, 1981) using experimen-
tally determined thermodynamics parameters (Turner and
Mathews, 2010). On the other hand, structure comparison is purely
computational. Moreover, since the structure is critical to the func-
tion, RNA molecules are compared with both structures and con-
stituent base sequences.

In this article, we are interested in the pairwise RNA secondary
structure comparison problem. This problem can be further classified
into the edit problem and the alignment problem (Denise and
Rinaudo, 2014). The edit problem computes the minimum cost (dis-
tance) of modifying a given structure R1 to another given structure R2,

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 3914

9mg ‘09 isnﬁnV uo seleﬁuV socl ‘eiulomeg JO AirSJQAru [1 112 ﬂJO'sleumo[pJOJXO'sopeuuoguroiq/ﬁdnq wort pepeolumoq

Pairwise RNA secondary structure alignment

3915

 

using a series of pre-defined edit operations. The alignment problem
finds a consensus structure RC such that the total edition cost from R1
and R2 to RC is minimized. Early approaches model the RNA second-
ary structures as trees and consider the edit distance or similarity score
among them (Jiang et al., 1995; Zhang and Shasha, 1989).
Afterwards, various tools were developed, of which some produce op-
timal solutions, while the others are heuristics. RNA_align (Lin et al.,
2001), RNAForester (Hochsmann et al., 2003, 2004) and Gardenia
(Blin et al., 2010) are some examples that belong to the exact solution
category. The average time complexity for the last two methods is
O(n2), where n is the length of the longer structure. (Herrbach et al.,
2010) and the worst case complexity is O(n4) (Denise and Rinaudo,
2014). MiGaL (Allali and Sagot, 2008) and RNAStrAT (Guignon
et al., 2005) belong to the heuristics category.

There are still two shortcomings impacting the usefulness and ef-
ficiency of these approaches. Firstly, most of them do not support
pseudoknots since aligning structures with arbitrary pseudoknots is
NP-hard (Jiang et al., 2002), but pseudoknots have already been
known to perform diverse functions in many biological processes
(Staple and Butcher, 2005; Wadkins et al., 1999). Significant com-
parison results could be obtained when such crossing motifs can be
aligned, because they are usually highly conserved (Theimer et al.,
2005 ). An approach allowing arbitrary pseudoknots for exact align-
ment has its time complexity dependent on the complexity of the in-
put structures (Mohl et al., 2008). On the other hand, the
polynomial time alignment algorithm is possible for a restricted set
of pseudoknots (Evans, 2006). However, both of them are still inad-
equate to compare the complex crossing motifs that have already
been identified (Chiu and Chen, 2012). More importantly, none of
them are available as a tool. Second, since ncRNAs often exhibit
better conservation in their structures, exact alignment methods
might not indicate some biologically significant structural features.
This is because they consider both base sequences and structures
equally, and hence some conserved structural motifs that are dis-
similar in their sequences are difficult to align. Conversely, some
motifs are spuriously aligned, disrupting the overall alignment. To
overcome these limitations, we devised a heuristics, targeting the
pairwise alignment of large RNA secondary structures with arbi-
trary pseudoknots.

2 Methods

2.1 Conserved stem pattern in similar RNA secondary
structure pair

Our proposition is that ncRNA secondary structures are more con-
served than their sequences. Hence, a pair of similar secondary
structures shares a conserved stem pattern. The stem pattern is a
subset of all base pair stems in a given secondary structure, plus the
structural relations among those in this subset. Our approach at-
tempts to discover a conserved stem pattern between a pair of sec-
ondary structures, and constructs a structure alignment from it.
Since an alignment function is applied to evaluate the alignment
costs among stems and unpaired strands, our heuristics solves the
ALIGN(CROSSING >< CROSSING —> CROSSING) problem.

The stem pattern is modeled by a stem graph (Hamada et al.,
2006). This graph illustrates three structural relationships for every
pair of base pair helices (stacks) in its edges, namely parallel (P),
nested (N) and pseudoknotted (K). For any base pair (i1, h) in stack
51 and any base pair (i2, i2) in stack 52, $1 and 52 are parallel when
i1 <i1 <i2<i2. $2 is nested in 51 when i1 <i2<i2<i1, and $1 is a
nesting stack. They are pseudoknotted and are called crossing stacks

82 S4 __ 35
51 --—— 31—: 36
5|

3|

 

 

Fig. 1. Top: A sample RNA secondary structure. Bottom: Stem graph model-
ing the sample structure, where vertex v,- represents stem 3;. The stem struc-
tural relations are: parallel (P), nested (N) and pseudoknotted (K). The
secondary structure is drawn using VARNA (Darty et al., 2009)

when i1 <i2<i1 <i2. Figure 1 illustrates these structural relation-
ships in a stem graph of a sample secondary structure. Each vertex
of the original stem graph models a stack, but we merge some nested
stacks to a stem and model it by a single vertex to reduce graph
order. The stack merging is introduced in the supplementary mater-
ial. A stem graph G is defined as G = (V, E, l), where V is the vertex
set, E: V>< V is the edge set as G is complete, and l: E —> 2 is a
function mapping every edge to its edge label.

Given a predefined alignment function, the best conserved stem
pattern is one such that the sum of alignment costs for all mapped
stem pairs, plus the deletion cost for each unmapped stem, is mini-
mized. Because each stem graph vertex represents a unique stem, the
conserved stem pattern can be represented by a set of mapped vertex
pairs between the two stem graphs. Assuming a bijective stem
matching in the conserved stem pattern, this set is equivalent to a bi-
jective function m: VIMp —> V’ map where Vmp E V, V’ map E V’, and
V, V’ are the vertex sets of the two stem graphs. m is called the
error-correcting graph matching (ECGM) which was originally pro-
posed for pattern recognition (Bunke, 1997). So, the best conserved
stem pattern is graphically equivalent to a minimum cost ECGM
(mcECGM), with its cost regarded as the edit distance between the
two graphs. Denote G = (V, E, l, p) and G’ = (V’, E’, l’, p’) to be the
stem graphs for the two RNA secondary structures R and R’, re-
spectively. The additional function p: V —> S maps each vertex to its
corresponding base pair stem in the set S of all stems. For an ECGM
m: VIMp —> V’map, the costs are defined for the specific edit oper-
ations suggested in (Bunke, 1997) as follows:

Vertex substitution cost, cvs(v, v’) =a(p(v), p’ (v’ )) where v E VIMp
and v’ E V’mp
Vertex deletion cost, cvd(v) =a(p(v), 11) where v E V — VIMp and 11 is
an empty base sequence
Vertex insertion cost, cvi(v’) = a(p’(v’), 11) where v’ E V’ — V’ map
0 ifl(e) = l’(e’)
Edge substitution cost, ces(e, e’) =
00 otherwise
where e E VIMp >< Vmp and e’ E V’mp x V’ map
Edge deletion cost, ced(e) = 0 where e E E — Vmp >< VIMp
Edge insertion cost, cei(e’) = 0 where e’ E E’ — V’ map x V’ map

a is the predefined alignment function giving alignment cost. The
best conserved stem pattern modeled by m exists in both R and R’,
because the edge substitution cost ces ensures an identical structural
relation between any two mapped stem pairs.

9mg ‘09 isnﬁnV uo seleﬁuV socl ‘etulomeg JO KitSJQAtu [1 112 /810'S{12umo[pJOJXO'sopeuuogutotq/ﬁdnq wort pepeolumoq

3916

J.K.H.Chiu and Y.-P.P.Chen

 

2.2 Progressive stem matching to approximate the true
conserved Stem pattern

On the other hand, the best conserved stem pattern defined above
might be different from the true conserved stem pattern, because the
edit distance of the stem pattern excludes the unpaired base regions
(e.g. hairpin loops) that are also deterministic in structure alignment.
Also, ECGM is in general NP-complete (Bunke, 1997). While an
exact algorithm is scalable with some RNA families, for large RNA
molecules, such as 165 and 23S ribosomal RNAs, the number of
base pair stems and the stem graph order might exceed 100. An ex-
haustive search becomes intractable for such a graph order. It is then
necessary to reduce the search space by selecting mapped vertex
pairs that are more probable to appear in the ECGM representing
the true pattern. We introduce a heuristics called progressive stem
matching. It identifies similar nesting motifs and then non-nesting
motifs in both input structures, and computes the mcECGM from
these results afterwards. This mcECGM models the approximate
true conserved stem pattern. The core algorithms for each of its
phases are stated below. An example illustrating these phases is pro-
vided in the supplementary material.

2.2.1 Phase 1: Initialization

We adapt the definitions of stack and stem proposed in (Rodland,
2006), where a base pair stem consists of one or more base pair
stacks joined by bulges or internal loops. Given a secondary struc-
ture, this phase first merges some of its nested stacks into stems (the
merging mechanism is described in the supplementary material), and
then generates its stem graph G = (V, E, l, p). By determining
whether its underlying stem is nesting for every vertex, V is parti-
tioned into Vnest and Vnomnest such that a stem represented by v in
Vnest is nesting; otherwise 12 is in Vnomnest. A vertex in Vnest is a nest-
ing vertex, and a vertex in Vnomnest is a non-nesting vertex. V’ of an-
other structure is partitioned into V’nest and V’ nomnest.

2.2.2 Phase 2: Identifying highly similar non-nesting motifs

The underlying stem for a vertex in Vnomnest or V’ nomnest forms a
non-nesting motif, which consists of the stem itself and the loop seg-
ment enclosed by it. The green boxes of Supplementary Figure S3A
provide some examples. We identify highly similar non-nesting
motifs in both structures, and then generate the mapped vertex pairs
accordingly. These pairs are utilized to search similar nesting motifs
in phase 3. The algorithm appended at the end of this sub-section is
described as follows: The motif alignment cost ratio r], for every pos-
sible non-nesting motif alignment pair (line 1) is first calculated,
where r], is defined as:

4070001)), h’(P’(v’)))
min{a(h(l7(v)), 11), 61((7120100), 11)}

a is the alignment function returning the cost, I) and h’ extract non-

 

(1)

779(1’71”) :

nesting motifs bounded by the stem obtained from p(v) and p’ (v’ ) re-
spectively. 11 is a null motif. 1'], is the alignment cost averaged by the
lower motif removal cost. For each non-nesting motif in both struc-
tures, its lowest 17, value (indicating best alignment) is kept as hunk,
(lines 2 — 3). Its best and suboptimal aligned counterparts are added
to L (line 4) such that their 1'], values are at most f times of mufﬁn. So,
f controls the selection of the best and suboptimal aligned counter-
parts into L. mcECGMs are computed from L to remove outliers.
For efficiency reasons, mcECGMs are obtained progressively with a
selection range 19: (bstart, bend]. 19 first selects highly similar motif
pairs in L (lines 5 — 6) to build initial partial mcECGMs. Those with
at least u pairs are kept (line 6), and u is the minimum size

requirement of the initial mcECGMs for robust expansion to the
final mcECGMs. When at least one qualified initial mcECGM is
found, 19 is shifted to the next range of width A (line 7) to select the
next less similar pairs in L for iterative expansion (line 10).
Otherwise, bend is incremented by the step size A (line 7) to repeat
the initial mcECGM finding (line 8). The one with the most vertex
pairs in the final mcECGMs is reported as mh. The vertex edit oper-
ation costs in this phase are motif based, i.e. cvs(v, v’) =a(h(p(v)),
b’lP’lv’)», 61/1101) =a(h(P(l/)), 11) and Cuilv’) =a(h’(P’(l/’)), 11), and the
edge edit operation costs are identical to Section 2.1. When a non-
nesting stem is crossing, the other stems with which it crosses are
not considered during its motif alignment.

 

Algorithm 1: Find consistent similar non-nesting motif pairs

 

1 Calculate r],(v, 12’) using Equation (1) for each (12, v’) E
Vnon—nest X V’non-nest

2 Obtain r],_min(v) by r],_min(v) = min{r;,(v, v’ ) | V 1/ E V’nomnest}
for each 12 E Vnomnest

3 Repeat line 2 to obtain rh_min(v’) for each 12’ E V’ nomnest

4 Create a list L = {(v, v’) | 177(1), 12’) S f>< rh_min(v) or
712(1), 1”) S f X rh_min(l”) V (V, 11’) E Vnon—nest >< V’non—nest}

5 Initialize a selection range 19 = (bstart, bend] where
bstart =— 1

6 Obtain all mcECGMs with the elements in L whose
177(1), 12’) are within the 19. Add those mcECGMs with at
least u mapped vertex pairs to M],

7 Modify 19 such that bstart = bend when M], 5e 6, and
bend + = A

8 Repeat from line 6 when M], = = Q

9 Expand all mcECGMs in M], with the elements in L whose
177(1), 12’) are within the updated selection range 19

10 Repeat from line 7 until all elements in L have been
examined
1 1 Return the largest size mcECGM (denoted by mh) in M],

 

2.2.3 Phase 3: Obtaining partial mcECGMs by identifying similar
nesting motifs

The underlying stem for a vertex in Vnest or V’nest forms a nesting
motif, which consists of the stem itself, and any other motifs and
loops nested in it. The red box of Supplementary Figure S3A shows
an example. This phase starts building mcECGMs from Vnest and
V’nest by identifying similar nesting motifs. However, such motifs
are sometimes large, and nested pseudoknots may also be present,
hence it is inefficient to align such motifs. Alternatively, a structure
profile Q(v) (Q(v’)) is created for each 12 in Vnest (v’ in V’nest) to esti-
mate motif similarity using ml, obtained in phase 2. The first set in
Q(v), N(v), represents non-nesting stems nested in the underlying
stem 5 of v. The second set va(v) represents non-nesting stems cross-
ing 5 (Le. they precede s in 5’ to 3’ direction), and the last set qu(v)
represents non-nesting stems crossed by 5 (Le. s precedes them) (line
1). A match score and a mismatch score are evaluated for every nest-
ing motif pair. The match score zmatchw, v’) is the number of
mapped vertex pairs (u, u’) in m], such that the structural relation
(limited to the three relations defined in Q(v)) between u and v is
identical to that between 14’ and 12’ (line 4). This score indicates how
many non-nesting motifs in the profiles are conserved between the
two nesting motifs. On the other hand, a mismatch between 12 and 12’
occurs when a non-nesting vertex u (or u’) appearing in a set of Q(v)
(or Q(v’)) belongs to a mapped pair (u, u’) in mh, but u’ (or u) is not

9mg ‘09 1sn8nV uo seleﬁuV socl ‘121u10111123 10 A1tSJeAtuf1 112 /810'S{12umo[p101x0'831112u1101utotq/ﬁd11q 111011 pepeolumoq

Pairwise RNA secondary structure alignment

3917

 

in same set of Q(v’) (or Q(v)). Because such mismatch can occur
twice for a mapped vertex pair (u, u’) in mh, 0.5 is multiplied to ob-
tain the mismatch score zmismatchw, 12’) (line 5). The net similarity
score (z score) is then calculated (line 6). The more positive z score
the more likely the underlying motif of v is similar to that of v’. A
nesting vertex pair (12, v’) is added to the candidate list T when its z
score is in top K for both 12 and 12’ (lines 8—10). mcECGMs Mnest are
obtained from T (line 11). The ECGM edit operation costs applied
in this phase are defined in Section 2.1.

 

Algorithm 2: Discover partial mcECGMs from nesting stems

 

1 Create a structure proﬁle Q(v) = (N (v), va(v), qu(v)),
where N(v)={u|u€Vnormest and l((v, u))==‘N’},
va(v) = {u | u E Vnomnest and l((u, 12)) = = ‘K’} and
qu(v)={u|u€ Vnomnest and l((v, u))==‘K’} for each
12 E Vnest

2 Repeat line 1 to obtain Q(v’) for each 12’ E V’ nest

For each (12, v’) E Vnest >< V’nest

4 zmatchw, 12’): |{(u, u’) Emh | (u E N(v) and u’ E N(v’)) or
(u E va(v) and u’ E va(v’)) or (u E qu(v) and u’ E
qulv’))}|

5 zmism...h<v, v') = H11 I (u, u') e m, (u em») and u' ¢N(v’))
or (u E va(v) and 14’ ¢ va(v’)) or (u E qu(v) and
u’¢C5q(1/’))}| X 0.5 + |{u’ | (u, u’) E mh, (u¢N(v) and
u’ €N(v’)) or (u ¢va(v) and u’ E va(v’)) or (u g3 qu(v)
and u’ E qu(v’))}| X 0.5

6 Zlv, 1”) = Zmatchlv, 1”) - Zmismatchlv, 1”)

End for

8 Select (12, 12°) with top K highest positive z scores (only

0.)

\1

among those involving 12) into Ztop(v) for each 12 E Vnest
9 Repeat line 8 to obtain Ztop(v’) for each 12’ E V’ nest
10 Add (12, v’) to T when (12, v’) E Ztop(v) and (v, v’) E Ztop(v’)
for each (12, v’) E Vnest x V’ nest
1 1 Return all mcECGMs Mnest obtained with the elements in T

 

2.2.4 Phase 4: Expanding mcECGMs with V110“.nest and V’non.nest
The mismatch case in the last phase suggests that some partial
mcECGMs in Mnest can be in conflict with mh obtained in phase 2,
so they cannot be merged. This phase expands each mapping mnest
in Mugst with non-nesting vertex pairs identified from similar non-
nesting motifs. Using mnest, the original problem can be broken into
smaller problems that are solved more efficiently. The algorithm at
the end of this sub-section is explained below.

The |mnest| vertices mapped in each of Vnest and V’ nest correspond
to |mnest| nesting stems, as well as 2|mnest| stem (upstream and
downstream) regions in each structure. The sequence backbones of
R and R’ can then be divided into 2|mnest| + 1 non-overlapping back-
bone segments qt and q’ t, respectively (line 3), some of which can be
of length zero. The two stem regions of a non-nesting stem can be
contained in the same or different segments. Hence, any vertex in
Vnomnest (V’non_nest) can be assigned to partition Vq(z', j) (V’q(z', i)),
where i and i stand for the segment numbers containing the up-
stream and downstream regions of the non-nesting stem, respect-
ively (line 4), with i S 7'. Some non-nesting stems might cross with
each other, and so their own partitions, say Vq(z', j) and Vq(k, n), as
well as their counterparts V’ q(i, j) and V’ q(k, n) are merged (line 6).
Figure 2 shows the six possible scenarios requiring partition merg-
ing. Afterwards, any vertex u in a partition can only have parallel re-
lationship with any vertex v in another partition (Le. [(14, v) = ‘P’ or

q-p—p-

m

i

‘m
i" T
“m
' j T
E

‘T’ T

B m
HIT j

n m

F m

Fig. 2. Base pair crossings between non-nesting vertex partitions. (A) Vq(i, i)
and Vq(l',j); (B) Vq(i,j) and VqUID.‘ (C) Vq(i,j) and Vq(i, k); (D) Vq(i, k) and Vqu k);
(E) Vq(i, j) and Vq(j, k); (F) Vq(i, j) and Vq(k, n). i, j, kand n are backbone seg-
ments indicated by the arrows. The two partitions involved in each of these
six scenarios are merged to a single partition

[(12, u) = ‘P’) in both graphs. As a result, any mcECGM from a candi-
date space Vq(z', j) X V’ q(i, i) does not depend on the mcECGM out-
comes in another candidate space. They are said to be independent.
Moreover, the partitioning ensures the consistency between the
mcECGMs with mnest. They are then merged as the outputs of this
phase (line 7). The ECGM edit operation costs applied are identical
to phase 2. Again, any interactions of the nested loop bases with
other bases are ignored.

 

Algorithm 3: Expand partial mcECGMs from non-nesting
stems

 

1 Mall: 9
For each mnest E Mnest

3 Using the stem terminal regions of mnest, divide the back-
bones of R and R’ into non-overlapping segments {qt |
t=1, 2,..., 2|mnest| + 1} and {q’t | t=1, 2, ...,
2|mnest| + 1}, respectively, with t increasing from the 5’ end
towards the 3’ end

4 Based on stem p(v) for each 12 E Vnomnest, add 12 to Vq(z', i)
when the upstream and downstream regions of p(v) are
in segments q; and qj respectively (2' S j)

5 Repeat line 4 to obtain all sets V’ q for each 12’ E V’ nomnest

6 Merge all Vq(z', j) with Vq(k, n) and V’q(i, j) with V’q(k, n) if
there exists u E Vq(z', j) and v E Vq(k, n) such that [(u,
12):: ‘K’, or there exists u’ E V’q(i, j) and v’ E V’q(k, n)
suchthatl’(u’,v’)==‘K’,fori§jg/egn

7 Merge mnest with all mcECGMs obtained from every non-
empty Vq(z', j) X V’ q(i, j), and add all merged results to Man

8 End for

9 Return Mall

 

2.2.5 Phase 5: Recovering missing vertex pairs in mcECGMs

In phase 3, a small K value is used for efficiency reasons. However,
it might happen that some nesting motif pairs appearing in the true
mcECGMs are pruned. Moreover, although occasional, a nesting
stem is matched to a non-nesting stem, but this is not considered in
any previous phase. Given the mcECGMs Man from phase 4, this
phase generates the candidate space Tmiss (line 3) and recovers all
these missing vertex pairs from it (line 4). Because nesting stems are

9mg ‘09 1sn8nV uo seleﬁuV socl ‘121u10111123 10 A1tSJeAtuf1 112 /810'S{12umo[p101x0'831112u1101utotq/ﬁd11q 111011 pepeolumoq

3918

J.K.H.Chiu and Y.-P.P.Chen

 

involved, the ECGM edit operation costs applied in this phase are
those defined in Section 2.1.

 

Algorithm 4: Recover missing vertex pairs in Man

 

1 Mp5... = 6
For each man 6 Man
3 Denote Van, Van such that man : Van —> V’all. Tmiss = (V — Van)

><  - Va”)

4 Obtain all mcECGMs by expanding man with Tmiss, and
add them to MP5,,l

5 End for

6 Return MP5,,l

 

2.3 Alignment function, non-bijective stem matching,
and overall structure alignment generation

Motif alignment (i.e. a(h(p(v)), h’(p’(v’))) is used for vertex mapping
between Vnomnest and V’ nomnest (phases 2 and 4), while stem align-
ment (i.e. a(p(v), p’ (v’ ))) is used when the vertex mapping involves
those representing nesting stems (phases 3 and 5 ). The difference is
that the former aligns single segments from the two structures while
the latter aligns a pair of stem upstream and downstream regions.
For a nesting stem, its upstream and downstream regions are disjoint
in the structure. Our alignment function a is capable of performing
these two types of alignment. Interested readers may refer to the
supplementary material for details.

It is possible for a stem in a structure to be matched with more
than one stem in another structure. For example, if the hydrogen
bonds in several contiguous base pairs in the middle of a long helix
are broken, the helix becomes two helices connected by an internal
loop. Meanwhile, mcECGM is a bijective mapping and has to be ex-
tended to model such non-bijective stem matching. This process and
the secondary structure alignment generation from the extended
mcECGM are described in the supplementary material.

3 Results

3.1 Experimental setup

We implemented our approach in a tool called PSMAlign using Perl,
and its alignment function is modified from rna_align (Jiang et al.,
2002) in C++. Two experiments were performed. The first experi-
ment compared the performance of PSMAlign with other structure
alignment tools in identifying similar structures. The second com-
pared PSMAlign with the Needleman-Wunsch sequence alignment
(Needleman and Wunsch, 1970) for aligning pseudoknotted struc-
tures. Pairwise alignment results involving pseudoknots in at least
one of the input structures are also presented. The default parameter
values for PSMAlign are as follows: For phase 2, u: 5, initial
bstartz —1, initial bend = 0.1, A = 0.05 and f: 2. For phase 3, K: 1.
Various costs used by its alignment function are: W), = 1.5,
wbm = 0.5, wr = 2, w,, = 1.75, wd= 1 and wm = 1. Both experiments
were performed on an Intel Core2 Duo 3.0 GHz machine with 4GB
of RAM running 64-bit Ubuntu 12.04.

3.2 Experiment 1: BRASERO benchmarks using SRP
and 165 ribosomal RNA families

BRASERO (Allali et al., 2012) evaluates the performance of various
secondary structure alignment tools in identifying similar structures.
Each of its testing datasets consists of a reference structure set Rref
from an RNA family, and a sequence set S. S contains a positive class

of various sequences in the same family as but not in Rref, and a nega-
tive class of some noise sequences with similar length distribution as
Rref. For each sequence 5 in S, its optimal and suboptimal secondary
structures are obtained using tools such as mfold (Markham and
Zuker, 2005). Each of the predicted structures is aligned with every
structure in Rref using the alignment tool examined. The best similar-
ity score (or alignment cost depending on the tool) achieved is the
score of 5. All sequences in S are then sorted by their scores.
Afterwards, every sequence can be classified as positive (structurally
similar to those in Rref) or negative (structurally dissimilar) according
to a threshold. From the classification result, the proportion of cor-
rectly classified sequences in the positive class is the true positive rate
(TPR); and the proportion of incorrectly classified sequences in the
negative class is the false positive rate (FPR). A receiver operating
characteristic (ROC) curve for this alignment tool is a plot of TPR
versus FPR obtained by varying the threshold, and the area under the
ROC curve (AUC) illustrates the average performance of the tool
(Fawcett, 2006). A higher AUC means it is more likely to give higher
similarity scores or lower alignment costs to similar structures than to
dissimilar structures, and hence a better performance. The maximum
AUC is 1 .

PSMAlign was benchmarked with Gardenia (Blin et al., 2010),
MiGaL (Allali and Sagot, 2008) and RNAForester (Hochsmann et al.,
2003, 2004), which are standalone secondary structure alignment
tools publicly available. The signal recognition particle (SRP) and the
16S ribosomal RNA (rRNA) datasets were selected for benchmarks
due to their significantly long sequence lengths (>300 nucleotides).
Figure 3 shows that PSMAlign exhibited the highest AUC in both SRP
and 16S rRNA datasets, which are 0.764 and 0.931, respectively.
Moreover, at a very low FPR (<0.01), it achieved a significantly
higher TPR of 0.6 in the SRP dataset and 0.675 in the 16S rRNA
dataset. This suggests that 60% of the positive class sequences in the
SRP dataset, and 67.5% of those in the 16S rRNA dataset, are struc-
turally more similar to the reference structures than over 99% of the
noise sequences. An interesting observation is the performance com-
parison between exact approach and heuristics in different datasets.
Both Gardenia and RNAForester are exact approaches, while MiGaL
and PSMAlign are heuristics assuming better conservation in structure
than in sequence. They construct alignment according to the similar
local motifs identified. In the 16S rRNA dataset, the ROCs of the
heuristic approaches are well above that of the exact methods, mean-
ing that the proposition holds. On the other hand, in the SRP dataset,
the ROC of PSMAlign falls below the ROCs of the exact methods in
its middle segment. A small segment is even under the diagonal
(denoting the ideal ROC of random guess), meaning that at some
thresholds, TPR < FPR. MiGaL performed even worse in that its
ROC is well below the ROCs of the exact methods, and below the di-
agonal for a large segment. We believe that some positive class in-
stances were more conserved in their sequences than in their
structures. Heuristics performed worse than exact methods when the
proposition did not hold for some molecules. This is supported by the
even worse performance in MiGaL which also takes this proposition.
The abstract properties, such as the number of helices or base pairs,
utilized at its first three levels of structure comparison limited its pre-
cision in this dataset.

3.3 Experimental 2: Structural alignments involving
pseudoknots

On the other hand, only PSMAlign is able to align pseudoknotted
RNA secondary structures. Also, since the sequence folding tools in
BRASERO do not predict pseudoknots, pseudoknotted structures

9mg ‘09 1sn8nV uo seleﬁuV socl ‘121u10111123 10 A1tSJeAtuf1 112 /810'S{12umo[p101x0'831112u1101utotq/ﬁd11q 111011 pepeolumoq

Pairwise RNA secondary structure alignment

3919

 

 

..m Tools (AUG)

33;; 1: Gardenia {0326)
“is 2: MiGaL {0.551)
mm 3: RNAForesterfD.?[15}
3.3 4: PSMAlign (DEE-=1)

 
 
 
 
 

 

 

 

 

 

[III Ill-.IIE 0.|.-0 0.15 0.30 05 0.30 0.15 '1'“- 0.-15 0.50 0.55 0.60 EARS [If-"0 Ill-.35 0.00 0.05 0.!) 0.05 LEI} J..|2|5

False positive rate [FPR]

 

 

Tunis {AUG}

1: Gardenia ([1399)

2: MiGaL (0.361)

3: RNAForester (039?)
4: PSMAlign (0.931)

 

 

 

 

 

0Jli| ELISE 0.0} 0J5 III-.3] 0.25 0.30 0.35- 0.111 {HE 050 0.55 0.50 0.05 0.30 [LIE 0.0} 0.3-5 0.5] 0.55- lm 1.05

False pesitive rate (FPR)

Fig. 3. ROC curves of BRASERO benchmark of Gardenia, MiGaL, RNAForester and PSMAlign on Left: SRP family; Right: 168 rRNA family

Table 1. Running time comparisons between PSMAlign and Needleman-Wunsch sequence alignment (in brackets) on selected 23S rRNA

 

structu res
Molecule Id PDB_001 87 CRW_OOS 20 CRW_OOS 46 PDB_00993 CRW_OOS 25 CRW_OOS 2 1 CRW_OOS 04
(length, unit: (2738) (2902) (3514) (2802) (2850) (2877) (3122)

nucleotides, nts)

 

CRW_00471 (2903) 30.125 (15.945) 20.565 (16.645) 12.545 (20.155)
PDB_00187 (2738) 33.685 (16.135) 9.795 (19.415)
CRW_00520 (2902) 21.45 (20.395)
CRW_00546 (3514)

PDB_00993 (2802)

CRW_00525 (2850)

CRW_00521 (2877)

21.55 (16.75) ( ) 20.365 (16.135)
27.655 (15.345) 29.925 (15.485) 34.675 (16.355) 35.165 17.735
23.715 (15.625) 23.35 (16.045) 17.235 (15.975) 26.135 17.855
( ( ) (
( ) (
(

30.35 16.465 ( )

( )

( )

17.495 19.355) 11.855 20.125 15.515 20.85) 171.85 (21.525)
( )

( )

( )

26.15 17.735

28.485 15.565 21.935 15.965) 25.315 17.475
33.935 15.875) 29.915 17.495
26.655 17.845

 

The lower running time in each alignment is in bold. The organisms for the molecules are: Acinetobacter calcoaceticus (CRW_00471), D.radiodurans
(PDB_00187), C.reinhardtiz' (CRW_00520), Zea mays (CRW_00546), D.radiodurcms (PDB_00993), Giardz'a intestinalis (CRW_00525), Epicrates gracilz's

(CRW_00521), Mycobacterium leprae (CRW_00504).

were not examined in the first experiment. Consequently, we aligned
several pairs of structures from other RNA families, and at least one
structure of any pair contains pseudoknotted motifs. The structures
were all obtained from the RNA STRAND database (Andronescu
et al., 2008), with non-canonical base pairs removed.

PSMAlign was also compared with the Needleman-Wunsch (NW)
algorithm (Needleman and Wunsch, 1970) for aligning a set of struc-
tures randomly selected from the 23S rRNA family. This family has
been known to exhibit a diverse range of pseudoknot topologies cate-
gorized previously (Chiu and Chen, 2012). A molecule was randomly
selected from each topology to form the testing dataset. A knot-free
23S rRNA molecule was also included. Table 1 shows the running
times of both approaches for pairwise alignments among the second-
ary structures in the testing dataset. The NW algorithm showed rela-
tively steady running times as the algorithm takes O(n2) time for
alignment and C(11) time in backtracking a single alignment, where n
is the sequence length. In contrast, the time performance of PSMAlign
mainly relied on the stem graph order and the mcECGM candidate
pruning. In most cases, the running time of PSMAlign is about double
that for the NW algorithm in this dataset, and it varies from 9.795—

171.85. It performed faster than the NW algorithm when the pairwise
alignment involved 23S rRNA from Zea mays (molecule Id:
CRW_00546), because it has a very long unpaired region, resulting in
a smaller graph order than other molecules. Because the selected sec-
ondary structures are quite conserved in their sequences, many
matched stem pairs identified by PSMAlign could also be found by
the NW algorithm. However, when a certain portion of paired bases
in a stem have been substituted, they become hard to be matched by
pure sequence alignment. Section E of the supplementary material dis-
cusses this issue with an example from the testing dataset.
Supplementary Figure S6 shows the approximate true conserved
stem pattern in the ribonuclease P RNAs of Mycoplasma genitalium
(molecule Id: ASE_00194) and Streptococcus equi (molecule Id:
ASE_00320). Their structure alignment is depicted in
Supplementary Figure S7A. Supplementary Figure S7B shows their
alignment constructed from the best common stem pattern. An
interesting observation is that the first alignment is likely to be a
more reasonable alignment despite its higher alignment cost (281.25
versus 262). Even without the penalty for the unmapped stems, its
alignment cost is still higher (201.75 versus 194.5). The alignment

9mg ‘09 1sn8nV uo seleﬁuV 501 ‘121u10111123 10 A11519Atuf1 112 /810'5112umo[p101x0'531112u1101utotq/ﬁd11q 111011 pepeolumoq

3920

J.K.H.Chiu and Y.-P.P.Chen

 

of the nesting stems of the largest multi-loop in both structures are
indicated by the black boxes in the figure. The highly conserved
base sequences and base pairs strongly suggest that they are
matched. This also shows that the best conserved stem pattern might
not be the true conversed stem pattern. More importantly, exact
structure alignment cannot reveal this conservation due to the non-
minimum alignment cost. Supplementary Figure S8A—D in the sup-
plementary material highlight the approximate true conserved stem
pattern between the 23S ribosomal RNAs in Chlamydomonas rein-
hardtiz' (molecule Id: CRW_00520) and in Deinococcus radiodurans
(molecule Id: PDB_00993). This pattern is very close to the true pat-
tern since only a few stems are left unmatched. The overall align-
ment is shown in Supplementary Figure S9.

4 Discussion

Our progressive stem matching heuristics is similar to RNAStrAT
(Guignon et al., 2005), since both decompose the input structures
into stems, and construct a conserved stem pattern based on the
stem alignment results. The major difference between them is that
our heuristics applies mcECGM for pattern finding, while
RNAStrAT utilizes dynamic programming and therefore does not
allow pseudoknots in the input structures. Moreover, it only com-
pares the similarity between the nesting stems without considering
the similarities among other stems nested in them. Progressive stem
matching employs a structure profile to also compare the nested
components as well as aligning the nesting stem themselves.

Although the experiment results suggest that true conserved stem
pattern approximation works well for pairwise RNA secondary
structure alignment, PSMAlign still retains the exact mcECGM algo-
rithm finding the best conserved stem pattern. The reason is that
there might not be enough highly similar non-nesting motif pairs
(<u) at phase 2. Reducing the value of u appears to be a possible
solution, however the results become trivial when u is set to just 1
or 2. When no result is found for the current p value, it turns to dis-
cover the mcECGMs for the best conserved pattern, and users can
also specify which stem pattern to use for alignment.

An interesting observation from the first experiment is that the
average performance of PSMAlign in the SRP dataset is better than
Gardenia and RNAForester, both of which are exact secondary struc-
ture alignment approaches. In the 16S rRNA dataset, both PSMAlign
and MiGaL performed substantially better than the exact methods.
The conclusion is that heuristics aligning RNA secondary structures
by detecting similar structural motifs outperform exact approaches
computing lowest cost global alignments. This is supported by our
finding in experiment 2, in which the approximate true conserved
stem pattern could result in a biologically more significant alignment
despite its non-minimum alignment cost. This verifies that ncRNAs
are, in general, more conserved in structures than in sequences.
Because an alignment with the lowest edit distance or highest similar-
ity score does not guarantee all important biological features to be
aligned, it is therefore necessary to discuss the meaning of “optimal”
secondary structure alignment, such as proposing new measures to
quantify the pairwise similarity between the structures, or what types
of base pair stacks or stems should be matched with a higher priority.

mcECGM is effective in approximating a true conserved stem
pattern with arbitrary crossing stems. The pattern shown in
Supplementary Figure S8A—D suggests that all the conserved cross-
ing stems are matched correctly, no matter how complicated the
underlying pseudoknots are. As the stem graph models the stem
crossing relations with its edges, conserved crossing stems are able

to be revealed by mcECGM. Meanwhile, it relies on a carefully de-
signed candidate pruning scheme to reduce the computation time.

Local alignment is also very important because many RNA sec-
ondary structures are only conserved in some of their structural
motifs. Progressive stem matching adopts a local then global style to
first search for highly similar non-nesting motifs such as hairpins.
These similar motif pairs are sorted according to their similarity
measures (17, in phase 2), and those with better values are more prob-
able to be retained in the reference information (ml, in phase 2) for
the next phase matching nesting stems. A pair of nesting stems is
only shortlisted for alignment when both stems nest certain non-
nesting motifs that are regarded as similar, according to the refer-
ence information. As a result, the more similar the local nesting and
non-nesting motifs, the more likely they can be identified. The true
conserved stem pattern is then approximated from these identified
motif pairs. Supplementary Figure S10A—C shows the approximate
true conserved stem pattern between the 23S ribosomal RNAs in
Caenorhabditis elegans (molecule Id: CRW_00533) and Suillus
sinuspaulz'anus (molecule Id: CRW_00544). Although both mol-
ecules differ significantly in length, three possible conserved local
structural motifs (indicated by the red boxes) were identified from
the pattern.

The major limitation of PSMAlign is the imperfect overall align-
ment due to separate alignments of the stem regions and the se-
quence regions. Precautionary measures were devised to detect some
cases of cross-region alignments, but there are still some complicated
situations, such as the one shown in the green box of Supplementary
Figure S9. The vertical line illustrates the boundary of the aligned se-
quence region (left) and aligned the stem region (right). The ‘GCG’
segments of both structures should be aligned instead of aligning the
single base pair, but the detection approach proposed is unable to
detect this, because the gap is not an edge gap. This is caused by the
base pair shifting from the right G nucleotide in the first structure to
the left G nucleotide in the second structure, and we call it ‘base pair
shift’. We are currently working towards new measures to mitigate
these limitations.

5 Conclusion

We have demonstrated the ability of the conserved stem pattern in
performing pairwise alignment between RNA secondary structures.
It serves as a heuristics to align structures with relatively higher ac-
curacy. It enables biologists to perform computational structure
alignment that could not be done previously, such as aligning those
consisting of arbitrary pseudoknots. Sample alignments revealed
some highly conserved structural features, which can be further
investigated for a better understanding of their biological
significance.

Conﬂict of Interest: none declared.

References

Allali, J. and Sagot, M.-F. (2008) A multiple layer model to compare RNA sec-
ondary structures, Softw. Pract. Exp, 38, 775—792.

Allali, J. et al (2012) BRASERO: A Resource for Benchmarking RNA
Secondary Structure Comparison Algorithms. Advances in Bioinformatics,
Article ID 893048, doi:10.1155/2012/893048.

Andronescu,M. et al. (2008) RNA STRAND: The RNA secondary structure
and statistical analysis database. BM C Bioinformatics, 9, 340.

Blin,G. et al. (2010) Alignments of RNA structures. IEEE/ACM Trans.
Comput. Biol. Bioinformatics, 7, 309—322.

9mg ‘09 1sn8nV uo sejeﬁuV 501 ‘121u10111123 10 A11519Atuf1 112 /810'5112umo[p101x0'531112u1101utotq/ﬁd11q 111011 papeolumoq

Pairwise RNA secondary structure alignment

3921

 

Bunke,H. (1997) On a relation between graph edit distance and maximum
common subgraph. Pattern Recogn. Lett., 18, 6 89—694.

Cesana,M. et al. (2011) A long noncoding rna controls muscle differentiation
by functioning as a competing endogenous RNA. Cell, 147, 35 8—369.

Chen,Q. and Chen,Y.P.P. (2009) Discovery of structural and functional fea-
tures in ma pseudoknots. IEEE Trans. Knowl. Data Eng., 21, 974—984.

Chiu,] and Chen,Y.P.P. (2012) Conformational features of topologically
classiﬁed RNA secondary structures. PLoS One, 7, e39907.

Couzin,]. (2002) Small RNAs make big splash. Science, 298, 2296—2297.

Darty,K. et al. (2009) VARNA: Interactive drawing and editing of the RNA
secondary structure. Bioinformatics, 25, 1974—1975.

Denise,A. and Rinaudo,P. (2014) Optimisation problems for pairwise RNA
sequence and structure comparison: a brief survey. Trans. Comput. Intell.
XIII, 3342, 70—82.

Evans,P.A. (2006) Finding common RNA pseudoknot structures in polyno-
mial time. Comb. Pattern Match. Lect. Notes Comput. Sci., 4009, 223—232.

Fawcett,T. (2006) An introduction to ROC analysis. Pattern Recogn. Lett.,
27, 861—874.

Guignon,V. et al. (2005 ) An edit distance between RNA stem-loops. String
Processing and Information Retrieval. Lect. Notes Comput. Sci., 3772,
335—347.

Hamada,M. et al. (2006 ) Mining frequent stem patterns from unaligned RNA
sequences. Bioinformatics, 22, 2480—2487.

Herrbach,C. et al. (2010) Average complexity of the Jiang—Wang—Zhang pair-
wise tree alignment algorithm and of a RNA secondary structure alignment
algorithm. Theor. Comput. Sci., 411, 2423—2432.

Hochsmann,M. et al. (2003) Local similarity in RNA secondary structures. In:
Proceedings of the 2003 IEEE Computer Society Bioinformatics
Conference, pp. 159—168.

Hochsmann,M. et al. (2004) Pure multiple RNA secondary structure align-
ments: a progressive proﬁle approach. IEEE/ACM Trans. Comput. Biol.
Bioinformatics, 1, 53—62.

Jiang,T. et al. (2002) A general edit distance between RNA structures.
]. Comput. Biol., 9, 371—388.

Jiang,T. et al. (1995) Alignment of trees—an alternative to tree edit. Theor.
Comput. Sci., 143, 137—148.

Iee,K. et al. (1997) In vivo determination of RNA structure-function relationships:
analysis of the 790 loop in ribosomal RNA. ]. Mol. Biol., 269, 732—743.

Lin,G.-H. et al. (2001) Edit distance between two RNA structures.
Proceedings of the Fifth Annual International Conference on
Computational Biology. ACM, Montreal, Quebec, Canada, pp. 211—220.

Maden,B.E. and Hughes,].X. (1997) Eukaryotic ribosomal RNA: the recent
excitement in the nucleotide modiﬁcation problem. Chromosoma, 105,
391—400.

Markham,N.R. and Zuker,M. (2005 ) DINAMelt web server for nucleic acid
melting prediction. Nucleic Acids Res., 33, W5 77—W5 81.

M6hl,M. et al. (2008) Fixed parameter tractable alignment of RNA structures
including arbitrary pseudoknots. Comb. Pattern Match. Lect. Notes
Comput. Sci., 5029, 69—81.

Needleman,S.B. and Wunsch,C.D. (1970) A general method applicable to the
search for similarities in the amino acid sequence of two proteins. ]. Mol.
Biol., 48, 443—453.

Reiter,N.]. et al. (2011) Emerging structural themes in large RNA molecules.
Curr. Opin. Struct. Biol., 21, 319—326.

Rivas,E. and Eddy,S.R. (1999) A dynamic programming algorithm for
RNA structure prediction including pseudoknots. ]. Mol. Biol., 285,
205 3—206 8.

Redland,E.A. (2006) Pseudoknots in RNA secondary structures: representa-
tion, enumeration, and prevalence. ]. Comput. Biol., 13, 1197—1213.

Scott,L. and Hennig,M. (2008) RNA structure determination by NMR. In:
Keith,]. (ed.) Bioinformatics. Humana Press, New York, pp. 29—6 1.

Serganov,A. and Patel,D.J. (2007) Ribozymes, riboswitches and be-
yond: regulation of gene expression without proteins. Nat. Rev. Genet, 8,
776—790.

Staple,D.W. and Butcher,S.E. (2005 ) Pseudoknots: RNA structures with di-
verse functions. PLoS Biol., 3, e213.

Storz,G. (2002) An expanding universe of noncoding RNAs. Science, 296,
1260—1263.

Theimer,C.A. et al. (2005 ) Structure of the human telomerase RNA pseudo-
knot reveals conserved tertiary interactions essential for function. Mol. Cell,
17, 671—6 82.

Turner,D.H. and Mathews,D.H. (2010) NNDB: the nearest neighbor param-
eter database for predicting stability of nucleic acid secondary structure.
Nucleic Acids Res., 38, D280—D282.

Wadkins,T.S. et al. (1999) A nested double pseudoknot is required for self-
cleavage activity of both the genomic and antigenomic hepatitis delta virus
ribozymes. RNA, 5, 720—727.

Zhang,K. and Shasha,D. (1989) Simple fast algorithms for the editing distance
between trees and related problems. SIAM]. Comput., 18, 1245—1262.

Zuker,M. and Stiegler,P. (1981) Optimal computer folding of large RNA se-
quences using thermodynamics and auxiliary information. Nucleic Acids
Res., 9, 133—148.

9mg ‘09 1sn8nV uo sejeﬁuV 501 ‘121u10111123 10 A11519Atuf1 112 /810'5112umo[p101x0'531112u1101utotq/ﬁd11q 111011 papeolumoq

