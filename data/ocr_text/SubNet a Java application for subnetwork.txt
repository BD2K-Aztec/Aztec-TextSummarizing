APPLICA TIONS NOTE V°"23011?aliégiﬁsiifﬁaiiiﬁiéé

 

Systems biology

Advance Access publication August 13, 2013

SubNet: a Java application for subnetwork extraction

Quanwei Zhang and Zhengdong D. Zhang*

Department of Genetics, Albert Einstein College of Medicine, 1301 Morris Park Avenue, Bronx, NY 10461, USA

Associate Editor: Martin Bishop

 

ABSTRACT

Summary: The extraction of targeted subnetworks is a powerful way
to identify functional modules and pathways within complex networks.
Here, we present SubNet, a Java-based stand-alone program for ex-
tracting subnetworks, given a basal network and a set of selected
nodes. Designed with a graphical user-friendly interface, SubNet com-
bines four different extraction methods, which offer the possibility to
interrogate a biological network according to the question investi-
gated. Of note, we developed a method based on the highly success-
ful Google PageRank algorithm to extract the subnetwork using the
node centrality metric, to which possible node weights of the selected
genes can be incorporated.

Availability: http://www.zdzlab.org/1/su bnet.html

Contact: zhengdong.zhang@einstein.yu.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on May 2, 2013; revised on June 28, 2013; accepted on
July 20, 2013

1 INTRODUCTION

Biological systems are complex entities composed of interacting
components and can be modeled as different types of biological
networks. Recently developed high-throughput genomic meth-
ods have generated large biological networks on the whole
genome level, which are in general too complex, if possible at
all, to be analyzed as a whole. Such analytical intractability
makes it necessary to focus only on parts of the large net-
works—the subnetworks—that are most relevant to the research
question. Not only do they make network analysis feasible and
more focused, subnetworks can also help to predict pathways,
discover network components (e. g. genes or proteins) not known
to belong to a functionally related group and assign function to
novel genes by revealing their neighbors in the networks.
Several algorithms have been developed to extract subnet-
works, given a basal network and a set of selected nodes (the
‘seeds’). Although the majority of them—the Takahashi—
Matsuyama (Takahashi and Matsuyama, 1980), the Klein—
RaVi (Klein and Ravi, 1995) and the pairwise K-shortest path
(Faust et al., 2010) algorithms—are based on the shortest paths
between nodes in the network, one of them, the k—walks algo-
rithm, uses random walks on the network to find the relevant
nodes and edges to generate the subnetwork. Although these
algorithms can extract subnetworks based on well-established
operations on networks, they cannot use informative node
weights of seeds, if present, derived from prior knowledge.

 

*To whom correspondence should be addressed.

Here, we present SubNet, a J ava-based application with a graph-
ical user-friendly interface combining four different methods to
identify and extract subnetworks of interest. We developed one
of the extraction methods based on the highly successful Google
PageRank algorithm (Page et al., 1999). This method is rigorous,
efficient and can incorporate prior knowledge about the seeds.

2 METHODS

In SubNet, we provide four different methods to extract relevant subnet-
works from a basal network given a list of preselected genes. Such a
selection of methods offers the user the ﬂexibility to extract a subnetwork
most relevant to the question under investigation. Formally, given a net-
work G = (V, E) with its ensemble of n nodes V and edges E and a set of
preselected nodes S, SubNet constructs a subnetwork W based on S, so
that W C G.

Extraction by shell. A node in a network has neighbors on different
levels: one edge away, on the so-called ﬁrst shell, are the direct neighbors;
two edges away are the indirect neighbors on the second shell and so on.
Directly based on the notion of ‘guilt by association’—the closest mol-
ecules are highly likely to be related to each other and involved in the
same pathways and mechanisms—this method extracts the neighbors of
each of preselected nodes within a certain distance. Given the set of se-
lected genes S 2 {vi}, the set of nodes within the kth shell neighborhood,
T: (1;: 1Uj;1{v,-}j, in which {v,}j is the set of neighbors of v,- on the jth
shell. The subnetwork W is thus composed of the nodes in T and edges
among them transferred from G.

Extraction by shortest path. To make use of indirect interactions, one
can take higher-order neighborhoods into consideration. In a complex
molecular interaction network, given a pair of reachable biomolecules,
there are almost always a large number of routes to reach one node from
the other. The shortest path between them is of particular interest and
signiﬁcance, as it is assumed to be the route used most for information
communication between the two molecules and has been shown to pro-
Vide a good measure for functional relatedness among genes. We use the
shortest path in our second method—if the shortest path between two
genes includes at least one transitive gene, it is postulated that the tran-
sitive genes on the path will be involved in the same biological process as
the terminal genes. To ﬁnd the shortest path between two nodes, we use
Dijkstra’s algorithm (Dijkstra, 1959). Because the shortest path between
two nodes may not be unique, we will recover all the shortest paths if
there is more than one. Given the set of selected genes, S 2 {vi}, the set of
nodes on the shortest paths among them, T: U212 UEHV, <—> vj}, in
which {v,— <—> vj} is the set of nodes on the shortest path between and
including v,- and v]. The subnetwork, W, is thus composed of the nodes in
T and edges among them transferred from G.

Extraction by emission decay. Given the network connectivity, the pre-
selected seeds can be considered as heat sources, emitting functionality
along the edges to other nodes in the network. Such emission decays as
the distance increases, and the total retainment at each node (excluding
seeds) is the sum of functionality transmitted from all seeds: F = [w,— /
(d,)2]A, in which d,- and w,- are the distance and the total edge weight,

 

© The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2509

112 /310's113umo [p.IOJXO'SOllBIIIJOJUlOIQ/ﬁdllq U101} pepBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

Q.Zhang and Z.D.Zhang

 

respectively, between the node and the seed i, and A is the exponent
parameter whose value (A = l, 2 or 3) is selected by the user. The subnet-
work, W, is thus composed of the nodes whose functionality retainment
is greater than a preset threshold and edges among them transferred
from G.

Each node sees its decay value updated after each seed is being con-
sidered, with the initial decay value at 0 before the ﬁrst seed. Once every
seed has been explored, the ﬁnal decay value of each node is then com-
pared with a threshold 1, which is initially set by the user. The resulting
subnetwork W consists of the nodes, with decay value higher than t and
the edges connecting them.

Extraction by PageRank. We also developed a method based on
the node centrality/inﬂuence and adapted the Google PageRank algo-
rithm to incorporate preselected nodes. Let A be the adjacency matrix
of network G:

 = {was
in which wij is the weight of the edge between nodes i and j in an
undirected network, or from node i to j in a directed network (wijzl
if the weight is unspeciﬁed). For nodes that are preselected as
seeds, values in their corresponding columns in A are increased: a,-J-= c-wij
(c > 1).

The centrality/inﬂuence of each node (17,-) is the sum of the inﬂuence it
receives from each of its source node (pj) divided by the number of out-
edges from that source node (0]): p,- = :12, ,6 E pi/oj. It can be written in the
matrix form as P=BT P, in which B has b,-J-=a,-j/Zj aij and P=[p1,
p2, . . . , pn]T. This is the characteristic equation of the eigensystem, and
the solution to vector P is an eigenvector of B with the corresponding
eigenvalue of 1. However, if B is a stochastic matrix that is also irredu-
cible and aperiodic, l is the largest eigenvalue and P is the principal
eigenvector (Perron—Frobenius theorem). To make such a matrix, we
ﬁrst replace every cell of a row with l/n if that row contains only 0
and then add a link from each node to every node with a small transition
probability. This operation generates a new matrix C:

C = (1 — d)E/n + dBT(0<d< 1),

in which E is an n x n matrix of 1’s and d is a parameter controlling the
weight of the E component in C. To obtain P, we use the power iteration
method (von Mises et al., 1929), which can be applied to large sparse
matrices of biological networks:

P = P0) = CPU-hand W» = [1 /n, . 1 /n]T.

The resulting subnetwork W consists of the nodes with values in P
higher than a preselected threshold and the edges connecting them.

Implementation and user interface. SubNet was entirely implemented in
Java for more streamlined software engineering, better platform portabil-
ity and easier future development. Depending on the user’s need, it can be
run either with a graphical user interface (Fig. 1A) or on the command
line. When data processing is done, SubNet outputs the subnetwork in-
formation in several ﬁles for nodes, edges and interactions. These ﬁles can
be subsequently imported into programs such as Cytoscape (Shannon
et al., 2003) for subnetwork visualization and further analyses. We bench-
marked the performance of SubNet (Supplementary Table S1) and com-
pared various aspects of the four methods implemented in SubNet
(Supplementary Table S2). In its application discussed below, SubNet
used ~3.75 GB of memory and ﬁnished the job in 90s on a typical
MacBook laptop. Future work will focus on the implementation of a
web-based version and a Cytoscape plugin.

3 APPLICATION

By extracting subnetworks, SubNet can identify other compo-
nents involved in the pathways and biological processes of the

A1“ _ _ 55.!!95._ _ _ _. B

III;-—Help —

Scum Nmnﬂ- =-|:~

sic-ml. In» I. nnnn run: Illmlnd

SIIIIH L'nrul .Is'. IIII

D in
MI Idaho-d rrrrr er: 6 ﬂa-

Suh-qlwk “Ir-.IIILmu-u 'IIIIIMJ iu-ul Lu nucluud... ' DI”- |'|1'!|: DTD'CPH helium]! tn U man-e itlmulua

cow-Juana

0:: m4 : 2a 1, rmmtﬁ. 51m;
I
I
I

mm4+uﬁ ['1‘] and-121?

I ' I.
en urn-131:0 l' \ no music
\ | x
| co Dapslﬁl

ED DUDE“?

Armin.- Mun-w

Fig. 1. SubNet. (A) Its graphical user interface. (B) Subnetwork extrac-
tion by SubNet. A subnetwork, highlighted with black nodes and edges in
the zooming window, was extracted based on six DNA ligation-related
proteins from the basal Human Protein Reference Database protein—pro-
tein interaction network (in gray). See also Supplementary Figure S1. (C)
Functional enrichment in the subnetwork. We analyzed the Gene
Ontology annotation of proteins in the subnetwork with the Biological
Networks Gene Ontology tool (BiNGO) (Maere et al., 2005). The add-
itional proteins extracted in the subnetwork show signiﬁcant enrichment
(in grey/orange) for DNA repair, response to DNA damage stimulus and
DNA metabolic process

genes or proteins selected as seeds. Six proteins—HMGBl,
HMGB2, LIGl, LIG3, LIG4 and XRCC4—are known to
play a major role in DNA ligation as part of the DNA
repair (GO:0051103) process. Using them as the seeds and
the protein—protein interaction network compiled in the
Human Protein Reference Database (release 9) (Peri et al.,
2003) as the basal network, we extracted a subnetwork com-
posed of 50 nodes with highest scores and 181 interactions
among them (Supplementary Table S3) by using PageRank.
Five of the six selected proteins were nodes with highest
scores. A manual annotation of the 50 subnetwork nodes
indicated that 39 (including the ﬁve seeds) of them are dir-
ectly or indirectly (by physical interaction with other proteins)
involved in the DNA repair and DNA damage response pro-
cesses. Using the same input data, we also extracted a sub-
network composed of 26 proteins (Supplementary Table S4)
and 63 interactions (Fig. 1B, Supplementary Fig. S1) by using
the shortest path method. Among 14 proteins that are not in
the aforementioned PageRank subnetwork are IRF2, PGR
and PNKP, which are involved in DNA ligation or DNA
binding, and APLF, APTX and PARPl, which play import-
ant roles in DNA repair, the parent ontology of that of the
queried proteins (Fig. 1C). A previous study showed that
combining methods based on random walk and shortest
path may give the best result in subnetwork extraction
(Faust et al., 2010).

Funding: NIH Pathway to Independence Award from National
Library of Medicine (5RO0LM009770-06 to Z.D.Z.) and the
Ellison Medical Foundation New Scholar in Aging Award
(AG-NS-0751-ll to Z.D.Z.).

Conﬂict of interest: none declared.

 

2510

112 /310's113umo [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq uIOJj pepeoIII/noq

9IOZ ‘09 lsnﬁnv uo ::

SUbNet

 

REFERENCES

Takahashi,H. and Matsuyama,A. (1980) An approximate solution for the Steiner
problem in graphs. Math. Japonica, 24, 573—577.

Klein,P. and Ravi,R. (1995) A nearly best-possible approximation algorithm for
node-weighted Steiner trees. J. Algorithms, 19, 104—115.

Faust,K. et al. (2010) Pathway discovery in metabolic networks by subgraph
extraction. Bioinformatics, 26, 1211—1218.

Page,L. et al. (1999) The PageRank citation ranking: bringing order to the Web. In:
Technical report. Stanford InfoLab.

Dijkstra,E.W. (1959) A note on two problems in connexion with graphs. Namer.
Math, 1, 269—271.

von Mises,R. and Pollaczek—Geiringer,H. (1929) Praktische Verfahren der
Gleichungsauﬂosung. Z. Angew. Math. Mech, 9, 152—164.

Shannon,P. et al. (2003) Cytoscape: a software environment for integrated models
of biomolecular interaction networks. Genome Res, 13, 2498—2504.

Peri,S. et al. (2003) Development of human protein reference database as an
initial platform for approaching systems biology in humans. Genome Res, 13,
2363—2371.

Maere,S. et al. (2005) BiNGO: a cytoscape plugin to assess overrepresentation of
gene ontology categories in biological networks. Bioinformatics, 21, 3448—3449.

 

251 1

112 /310's112u1no [progxo'sor112u1101urorq//:d11q urorj pep1201umoq

9IOZ ‘09 lsnﬁnv uo ::

