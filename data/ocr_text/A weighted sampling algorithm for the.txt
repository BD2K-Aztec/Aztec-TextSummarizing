Vol. 29 lSMB/ECCB 2013, pages i308—i315
doi:10. 1093/bioinformatics/btt21 7

 

A weighted sampling algorithm for the design of RNA sequences
with targeted secondary structure and nucleotide distribution

Vladimir Reinharzl, Yann Ponty2’3’* and Jerome Waldisptihl”

1School of Computer Science & McGiII Centre for Bioinformatics, McGill University, Montreal, QC, Canada, 2Laboratoire
d’lnformatique (LIX), CNRS UMR 7161, Ecole Polytechnique, 91128 Palaiseau, France and 8AMIB team/project, INRIA

Saclay, Batiment Alan Turing, 91128 Palaiseau, France

 

ABSTRACT

Motivations: The design of RNA sequences folding into predefined
secondary structures is a milestone for many synthetic biology and
gene therapy studies. Most of the current software uses similar local
search strategies (Le. a random seed is progressively adapted to ac-
quire the desired folding properties) and more importantly do not allow
the user to control explicitly the nucleotide distribution such as the
GC-content in their sequences. However, the latter is an important
criterion for large-scale applications as it could presumably be used
to design sequences with better transcription rates and/or structural
plasticity.

Results: In this article, we introduce IncaRNAtion, a novel algo-
rithm to design RNA sequences folding into target secondary struc-
tures with a predefined nucleotide distribution. IncaRNAtion uses a
global sampling approach and weighted sampling techniques. We
show that our approach is fast (i.e. running time comparable or
better than local search methods), seedless (we remove the bias of
the seed in local search heuristics) and successfully generates high-
quality sequences (i.e. thermodynamically stable) for any GC-content.
To complete this study, we develop a hybrid method combining our
global sampling approach with local search strategies. Remarkably,
our glocal methodology overcomes both local and global approaches
for sampling sequences with a specific GC-content and target
structure.

Availability: IncaRNAtion is available at csb.cs.mcgi|l.
ca/incarnation/

Contact: jeromew@cs.mcgill.ca or yann.ponty@lix.polytechnique.fr
Supplementary Information: Supplementary data are available at
Bioinformatics online.

1 INTRODUCTION

At the core of the emerging ﬁeld of synthetic biology resides, our
capacity to design and reengineer molecules with target func-
tions. RNA molecules are well tailored for such applications.
The ease to synthesize them (they are directly transcribed from
DNA) and the broad diversity of catalytic and regulation func-
tions they can perform enable to integrate de novo logic circuits
within living cells (Rodrigo et al., 2012) or reprogram existing
regulation mechanisms (Chang et al., 2012). Future advances
and applications of these techniques in gene-therapy studies
will strongly rely on efﬁcient computational methods to design
and reengineer RNA molecules.

Most of RNA functions are, at least partially, encoded by the
3D molecular structures, which are themselves primarily

 

*To whom correspondence should be addressed.

determined by the secondary structures. The development of ef-
ﬁcient algorithms for designing RNA sequences with predeﬁned
secondary structures is thus a milestone to enter the synthetic
biology era. RNAinverse pioneered RNA secondary structure
design algorithms. It has been developed and distributed with the
Vienna RNA package (Hofacker et al., 1994). However, only
posterior experimental studies revealed the potential and prac-
tical impact of these techniques. Thereby, during the past 6 years,
many improvements and variants of RNAinverse have been
proposed. Conceptually, almost all of existing algorithms
follow the same approach. First a seed sequence is selected,
then a local search strategy is used to mutate the seed and
ﬁnd, in its vicinity, a sequence with desired folding properties.
Using this strategy, INFO—RNA (Busch and Backofen, 2006),
RNA—SSD (Aguirre-Hernandez et al., 2007) and
NUPACKzDesign (Zadeh et al., 2011) signiﬁcantly improved
the performance of RNA secondary structure design algorithms.
More recent research studies aimed to include more constraints
in the selection criteria. RNAexinv focused on the design of
sequences with enhanced thermodynamical and mutational ro-
bustness (Avihoo et al., 2011), while Frnakens te in enables to
design RNA with multiple target structures (Lyngso et al., 2012).

We recently introduced with RNA— ensign a novel paradigm
for the search strategy of RNA secondary structure design algo-
rithm (Levin et al., 2012). Instead of a local search approach, we
proposed a global sampling strategy of the mutational landscape
based on the RNAmutants algorithm Maldispuhl et al., 2008).
This methodology offered promising performances, but suffered
from prohibitive runtime and memory consumption. Following
our work, Garcia-Martin et al. (2013) proposed RNAiFOLD, an
alternate methodology that uses constraint programming tech-
niques to prune the mutational landscape. While also suffering
from prohibitive running times, it is worth noting that this latter
algorithm also proposes a seedless approach to the RNA second-
ary structure design problem.

In this article, we introduce IncaRNAt ion, an RNA second-
ary structure design algorithm that beneﬁts from our recent al-
gorithmic advances (Reinharz et al., 2013) to expand our original
RNA—ensign algorithm (Levin et al., 2012). IncaRNAtion
addresses previous limitations of RNA—ensign and offers new
functionalities. First, while our previous program had a running
time complexity of (9(n5), IncaRNAtion now runs in linear-
time and space complexity, allowing it to demonstrate similar
speeds as any local search algorithm. Next, IncaRNAtion is
seedless. Unlike RNA—ensign, it does not require a seed se-
quence to initiate its search. Finally, IncaRNAtion implements
a novel algorithm based on weighted sampling techniques

 

© The Author 2013. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/3.0/), which permits non—commercial re—use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial

re—use, please contact journals.permissions@oup.com

1e /310's113umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

Constrained RNA design using a weighted sampling algorithm

 

(Bodini and Ponty, 2010) that enables us to control, for the ﬁrst
time, explicitly the GC-content of the solution. This functionality
is essential because wild-type sequences within living organisms
often present medium or low GC—content, presumably to offer
better transcription rates and/or structural plasticity. Previous
programs do not allow to control this parameter and tend to
output sequences having high GC—contents (Lyngse et al., 2012).

We demonstrate the performance of our algorithms on a set of
real RNA structures extracted from the RNA STRAND data-
base (Andronescu et al., 2008). To complete this study, we de-
velop a hybrid method combining our global sampling approach
with local search strategies such as the one implemented in
RNAinverse. Remarkably, our glocal methodology overcomes
both local and global approaches for sampling sequences with a
speciﬁc GC—content and target structure.

2 METHODS

We introduce a probabilistic model for the design of RNA sequences with
a speciﬁc GC-content and folding into a predeﬁned secondary structure.
For the sake of simplicity, we choose to base this proof-of—concept im-
plementation on a simpliﬁed free-energy function E(-), which only con-
siders the contributions of stacked canonical base pairs. We show how a
modiﬁcation of the dynamic programming scheme used in RNAmut ants
allows for the sampling of good and diverse design candidates, in linear
time and space complexities.

2.1 Deﬁnitions

A targeted secondary structure S* of length n is given as a non-crossing
arc-annotated sequence, where S? stands for the base-pairing position of
position i in S* if any (and, reciprocally, SE. = i), or —1 otherwise. In
addition, let us denote by #gc(s) the number of occurrences of G and C in
an RNA sequence s.

2.1.] Simplified energy model We use a simpliﬁed free-energy
model, which only includes additive contributions from stacking base
pairs. Using individual values from the Turner 2004 model [retrieved
from the NNDB (Turner and Mathews, 2010)]. Given a candidate se-
quence s for a secondary structure S, the free energy of any sequence s of
length |S| is given by

E(S9 S) = Z Er/S‘siSj—>SiISJ-I
(i,j)—>(i’,j’)€S

stacking pairs

where EZHW, is set to 0 if ab = 0 (no base pair to stack onto),
the tabulated free energy of stacking pairs (ab)/(a’b’) in the Turner
model if available, or ,8 6 [0,00] for non—Watson-Crick/Wobble pairs
(i.e. not in {GU, UG, CG, GC, AU or UA}). This latter parameter
allows one to choose whether to simply penalize invalid base pairs
(,B>0), or forbid them altogether (,8 = +00). Position-speciﬁc sequence
constraints can also be enforced at this level (details omitted for the sake
of clarity) by assigning to E a +00 penalty (leading to a null probability)
in the presence of a base incompatible with a user-speciﬁed constraint
mask.

2.1.2 GC—weigbted Boltzmann ensemble and distribution To
counterbalance the documented tendency of sampling methods to gener-
ate GC-rich sequences (Levin et al., 2012), we introduce a parameter
x 6 UV, whose value will inﬂuence the GC-content of generated se-
quences. For any secondary structure S, the GC-weighted Boltzmann
factor of a sequence s is 8316) such that

—E s, S)

8%](s) = e lg -x#gc(s) (1)

 

where R is the Boltzmann constant and T the temperature in Kelvin.

Summing the GC-weighted Boltzmann factor over all possible se-
quences of a given length |S|, one obtains the GC-weighted partition
function EEC], from which one deﬁnes the GC-weighted Boltzmann prob-
ability IPECRS) of each sequence s, respectively, such that

8%)
2%]

 

23] = 2 331(9) and 1331(3) = (2)

|s|=n

2.2 Linear-time stochastic sampling algorithm for the
GC-weighted Boltzmann ensemble

Let us now describe a linear-time algorithm to sample sequences at
random in the GC-weighted Boltzmann distribution. This algorithm fol-
lows the general principles of the recursive approach to random gener-
ation (Wilf, 1977), pioneered in the context of RNA by the SFold
algorithm (Ding and Lawrence, 2003). The algorithm starts by precom-
puting the partition function restricted to each substructure occurring in
the target structure, and then performs a series of recursive stochastic
backtracks, using precomputed values to decide on the probability of
each alternative.

2.2.1 Precomputing the GC—weigbted partition function Firstly, a
dynamic programming algorithm computes 253:2] the GC-weighted par-
tition function (the dependency in x is omitted here for the sake of clarity)
for a structure S, assuming its (previously chosen) ﬂanking nucleotides
are a and b, respectively, either forming a closing base pair (N = T) or not
(N = F). Remark that the empty structure only supports the empty se-
quence, having energy 0, so one has
2%; :1 = stiff] 2 6—0/1" 2 1. (3)
The general recursion scheme consists in three different terms, depend-
ing on the ﬁrst position in S:

Case 1. First position is unpaired { S 2 0S):

ing°‘“’) - 313,51] (4)

dd?

[’17] _ [ab] ._
2161,05” —ZI‘EI,OS, '—

Case 2. First position is paired with last position [S = (S’)],
stacking onto a preexisting exterior pair { N = T )3

 

_Eﬂ H l l
21%  Z  -e   (s)
a’,b’el32

Case 3. First position is involved in a base pair [S = (S’)S”],
which is not stacking onto an exterior base pair {N =F or

S/l # 8)..

—E‘6
[gab] ._ # [-17, M [Ll/’17,] [blab]
ZN,(S’)S”'_  xgcw )'e RT 'ZT,S’ 'ZF,S" (6)
a’,b’el32

Remark that the number of combinations of a, b and N re-
mains bounded by a constant, thus the complexity of
computing 253,:ng mainly depends on the values taken by S on
subsequent recursive calls. Such values are entirely determined by
S at any given step of the recursion, and their dependency can be
summarized in a tree having @(ISI). Therefore, the computation
of Egg, requires @(n) time and space using dynamic
programming.

 

1e /310's113u1no [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

V.Reinharz et aI.

 

 

Algorithm 1: 5B,, (a, b, N, S)

 

7" <—Random  // Random real in [0, Egg]
switch d0
case S = 5 return a; // Empty structure
caseS= GS, // First position is unpaired
for a’ E 8 do
7, <_ 7. _ w#gc(a') . gig/$3]
if?" < 0 then return a’iSBm(a’, b, F, S’)
case S = (S’) and N = T // Extremities are
involved in stacking base pair
for (a’,b’) E B X Bdo
r <— r — x#g°(al'bl) -e_E§b—>a’b’/RT - Eli/:51]

 

 

ifr < 0 then return a’.SBm(a’, b’, T, S').b'
otherwise // First position is paired
without a stacking pair

// S = (3’) S"

for (a’,b’) E B X Bdo

_Ee
Q—>a’b’

_ #gc(a’l'bl) , — , [al7bl] . [blabi
r <— 7" w 6 RT Z F’s, Z133”

if r< 0 then return
a’.SBm (a',b’,T,S’) .b’.SBw (b’,b, F,S”)

 

 

2.2.2 Stochastic backtrack Once the GC-weighted partition func-
tions have been computed and memorized, a stochastic backtrack starts
from the target structure S* with any exterior bases [a, b] and no nesting
base pair, corresponding to a call SBX (0,0, F, S*) to Algorithm 1. At
each step, a suitable assignment for one or several positions is chosen,
using probabilities derived from the precomputation, as illustrated by
Figure 1. One or several recursive calls over the appropriate substructures
are then performed. On each recursive call, the algorithm assigns at least
lnt to a previously unassigned position. Moreover, the number of exe-
cutions of each loop is bounded by a constant. Consequently, the com-
plexity of Algorithm 1 is in @(n) time and space.

2.2.3 Self-adaptive sampling strategy Let us remind that our goal is
to produce a set of sequences whose GC-content matches a prescribed

Case 1: First prisititin is 'lll'lpélil'ttii.

3 Pa = mist”

value gc. An absolute tolerance K may be allowed, so that the GC-content
of any valid sequence must fall in [gc — K, gc + K]. Because sequences of
arbitrary GC-content may be generated by Algorithm 1, we use a rejec-
tion-based approach (Bodini and Ponty, 2010), previously adapted by the
authors in a similar context (W aldispiihl and Ponty, 2011). This gives an
algorithm that generates k valid sequences in expected time @(k - nﬁ)
when K = 0 [or @(k - n) when K is a positive constant] and memory in
@(k - n). A complete analysis of the rejection process can be found in an
earlier contribution (W aldispiihl and Ponty, 2011), but let us brieﬂy out-
line the approach, and the main arguments used to establish its
complexity.

As summarized by Figure 2, our adaptive sampling approach simply
generates sets of sequences by repeatedly running the stochastic backtrack
algorithm. The average GC-content induced by the current value of the x
parameter can then be adequately estimated from the sample, or com-
puted exactly using recent algorithmic advances (Ponty and Saule, 2011).
The set of sequences is ﬁltered to only retain valid sequences. The value of
the parameter x is then adapted to match the average GC-content
(induced by the value of x) with the targeted one. It can be shown that
the expected GC-content is a continuous and strictly increasing mono-
tonic function of x, whose limits are 0 when x = 0 and n when x —> +00.
Consequently, for any targeted GC-content gc e [0%, 100%], there exists
a unique value xgc such that generated sequences feature, on the average,
the right GC-content. In practice, a simple binary search (W aldispiihl and
Ponty, 2011) is used in our implementation, and typically converges after
few iterations. An optimal value for x can also be derived analytically
using interpolation after @(n) evaluations of 2%?“ for different candidate
values of x, as previously noted (W aldispiihl and Ponty, 2011), and could
be implemented using the Fast-Fourier Transform (Senter et al., 2012).

2.2.4 Overall complexity It was previously established (Waldispiihl
and Ponty, 2011) that, for each value of x, there exists constants ax and
0,, such that the distribution of GC-content asymptotically converges
toward a normal law having expectation in ax - n - (1 + 0(1)) and stand-
ard deviation in ex - ﬂ - (1 +o(1)). Furthermore, the distribution of
GC-content is highly concentrated, as asserted by its limited standard
deviation; therefore, the expected number of attempts required to gener-
ate a valid sequence when K = 0 [respectively K e S2(1/ﬁ)] grows like
@(ﬁ) [respectively @(1), i.e. a constant], leading to the announced com-
plexities. Formally, because a suitable weight x must be recomputed for
each targeted structure and GC-content, then the number M of iterations

[nib] rib
- _ ' Z F,s*/ Z [115]" _ 3’
15;; W 11:, 0 I I _b:,'

Case 2: Estremities are paired, surrounded by anether base-pair, farming a. stacking base-pair.

if
I

a-

,fi

—b i I If 1' it
“ I '

If I. f I. a r I.
~ * I I in

lle‘ﬂi 0 -. i

._ ._.-

_;

Case 3: First. prisitinn in paired tn some prisitinn, 1111f. nut. imrnlrttd in s. stacking pair.

_  _ s

‘-
--

J!
[I
I
[JEWEL]
1a, .b:

n..- n...-

“a f E —m” i‘
S  path, = mﬁégﬁia’lb] I Efﬁgy—b ' 3M ' 

 

T15! F13”

 

Fig. 1. Stochastic backtrack procedure for a given substructure S. Either the ﬁrst position is left unpaired (top), a base pair is formed between the two
extremities, stacking onto an exterior base pair (middle) or paired without creating a stacking, deﬁning two regions on which subsequent recursive calls
are needed (bottom). For the empty structure (omitted here), the empty sequence is returned. Positions indicated in red are assigned at the current stage

of the backtrack

 

i310

1e /310's113u1no [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq 11101; popeommoq

9IOZ ‘09 lsnﬁnv uo ::

Constrained RNA design using a weighted sampling algorithm

 

 

( Start W
k a: := 1 Samples :2 Q J

Draw sequences in
:r—weighted distribution

 

 

 

 

Filter on GC%
Add suitable seqs to Samples

Estimate average GC% for x
Update at

 

 

 

 

 

 

> ?
|Samples| _ k no

yes

( Stop W
k Return Samples j

Fig. 2. General workﬂow of our adaptive sampling algorithm
(W aldispiihl and Ponty, 2011)

 

required for the converge can be accounted for explicitly, leading to time
complexities in @((M + ﬂ) - k - n) (if K = 0, i.e. without any tolerance)
and @(M-k - n) (ifK>0).

2.3 Postprocessing unpaired regions: a local/global
(glocal) hybrid approach

Owing to our simpliﬁed energy model, unpaired regions are not subject to
design constraints other than the GC-content, leading to modest prob-
abilities for refolded design candidates to match the targeted structure. To
improve these performances and test the complementarity of our global
sampling approach with previous contributions based on local search, we
used the RNAinverse software to redesign unpaired regions. We speci-
ﬁed a constraint mask to prevent stacking base pairs from being modiﬁed
and, whenever necessary, reestablished their content a posteriori, as
RNAinverse has been witnessed to take some liberties with constraint
masks. As shown in the Supplementary Material, this postprocessing
does not drastically alter the GC-content, so the glocal approach reason-
ably addresses the constrained GC-content design problem.

3 RESULTS

3.1 Implementation

Our software, IncaRNAtion, was implemented in Python
2.7. We used RNAinverse from the Vienna Package 2.0
(Hofacker et al., 1994). All-time benchmarks were run on a
single AMD Opteron(tm) 6278 Processor at 2.4GHz with
cache of 512 kb. The penalty ,8, associated with invalid base
pairs, was set to 15.

Figure 3 presents the average times spent running
IncaRNAtion+RNAinverse to generate one sequence with
the required GC-content. As expected, the time grows linearly in
function of the length of the structures for IncaRNAtion.

3.2 Dataset

To evaluate the quality of our method, we used secondary struc-
tures from the RNA STRAND database (Andronescu et al.,

4.5

 

 

4_O _ H |ncarnation+RNAinverse
o—o RNA-SSD

 

 

3.5 -

 

3.0 -

A

m
v2.5 -

w

_§JLO-

'-
L5-
L0-
as—

 

 

 

0.0

 

20 3o 40 50 60 7o 80 90
Length

Fig. 3. Average time in seconds to generate one sequence for
IncaRNAtion and RNAinverse

2008). Those are known secondary structures from a variety of
organisms. We considered a subset of 50 structures selected by
Levin et al. (2012), whose length ranges between 20 and 100 nt.
To ease the visualization of results, we clustered together struc-
tures having similar length, stacks density and proportion of free
nucleotides in loops, leading to distributions of structures shown
in Figure 4.

3.3 Design

We ran our method as follows. First, we sampled approximately
100 sequences per structure. Then, we use these sequences as seed
in RNAinverse. Finally, we computed the Minimal Free-
Energy (MFE) with the RNAfold program from the Vienna
Package 2.0 (Hofacker et al., 1994).

Before starting our benchmark, we asses the need for our
methods and performed an analysis of the GC-content drift
achieved with state-of—the—art software. Using our dataset of 50
structures, we generated 100 samples per structure with classical
softwares that do not control the GC-content. Namely,
RNAinverse, INFO—RNA, NUPACK: Design and Frnaken—
stein. We show the distribution of the GC-content of the se-
quences produced with these softwares in Figure 5.

As anticipated, we observe a clear bias toward high GC-con-
tents and a complete absence of sequence with <30% of GC.
This striking result motivates a need for methods that enable to
explicitly control the GC-content and more precisely that enable
to design sequences with low GC-content (i.e. 330%). To pro-
vide a complete overview of the performance of IncaRNAt ion,
we provide additional statistics for these softwares in the
Supplementary Material.

3.4 Success rate

We started by estimating the success rate of our methodology
and computed the percentage of sequences with a MFE structure
identical to the target secondary structure. Figure 6 shows our
results. We clearly see that before the postprocessing step (i.e.
RNAinverse) the sequences sampled by IncaRNAtion have a

 

i311

1e /310's113u1no [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; popeommoq

9IOZ ‘09 lsnﬁnv uo ::

V.Reinharz et al.

 

 

 

 

 

 

C 14 C 12 C 16
5 12 5 10 '5 14
L 10 L 8 L 12
a) 8 (I) (U 10
o. D- 5 Q- 8
t’) 6 4C), 4 4C3 6
3 4 :5 E 4
b 2 45 2 4—1 2
m 0 m o m o
10 20 30 40 50 60 70 80 90 100 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.0 0.1 0.2 0.3 0.4
Length Stack density % Free nt in loops

Fig. 4. Number of secondary structures per bin, according to our three clustering criteria

 

 

 

 

 

0.35 . . . . . .
- NUPACK
030' - INFO—RNA
- RNAinverse
8 0'25 |:| Frnakenstein '
U _
$0.20
3
C-
m _
33 0.15
O
o\°
0.10-
0.05-

 

 

 

 

 

 

 

 

 

 

 

 

 

0'0(2025 3O 35 40 45 50 55 60 65 70 75 80 85 90 95
%GC content

Fig. 5. Overall GC-content distribution for sequences designed using

RNAinve rs e, INFO—RNA, NUPACK : De 8 ign and Frnakens t ein
folding in the desired structure

low success rate (ﬁrst row). As mentioned earlier, this could be
explained by the fact that no selection criterion has been at this
stage applied to unpaired nucleotides. Remarkably, after the
local search optimization (with RNAinverse) of nucleotides in
unpaired regions (second row), we observe a dramatic improve-
ment of our success rate. As expected, we observed that length is,
in general, not a good predictor for the hardness of designing a
structure. Instead, a high number of free nucleotides in the struc-
ture seems to be a good measure of the hardness of its design.
Similarly, these data also show that designing sequences with low
GC-content is challenging for all types of targets.

We investigated further the quality of the sequences generated
by IncaRNAtion. In particular, we estimated the capacity of
our methods to generate ‘good’ sequences with desired folding
capabilities regardless of the property to fold exactly into the
target structure. In Figure 7, we show the ratio of well-predicted
base pairs in the MFE structure of our sampled sequences. As
above, we can observe that, in all cases, the sequences that are
the hardest to design are those with an extremely low GC-con-
tent. Indeed, the energetic contribution of the base pairs to the
stability of the structure is weaker. Interestingly, we also notice
that the most accurate sequences yield a GC-content of
70 :l: 10%. Overall, we observe that all our samples have good
folding properties, and that there is a correlation between the
‘precision’ of the samples and the hardness of the design.

We noticed a highly decreased structural sensitivity for the
sequences with 15% free nucleotides in the loops. However,

one must remain careful interpreting this observation, as the
structures within this class all originate from the PDB, and are
relatively small (for the complete STRAND DB, the average
length is ~ 526 nt, compared with ~ 38 nt around 15% unpaired
bases).

3.5 Properties of designed sequences

In this section, we further analyze the generated sequences with a
MFE structure that folds into the target structure.

A desirable feature in sequence design is to produce samples
with a high sequence diversity and stable secondary structure.
Therefore, in the following, we will use two useful measures,
which are the sequence identity of the samples, and the
Boltzmann probability of the target structure in the low-energy
ensemble.

The sequence identity is deﬁned over a set 8 of aligned se-
quences (in our case, all sequences have the same length and can
be trivially aligned) as follows:

1 . .
Z  1 Seq.1dent1ty (7)
51,5268X8 i
Si ES;

where s,- is the nucleotide at position i in sequence s. Intuitively,
this measure captures the diversity of sequences generated by a
given method. Next, the Boltzmann frequency is deﬁned for a
structure S and a sequence s as follows:

—E(s,S)
e RT /ZSFrequency (8)

where Z“ is the partition function of sequence s. This measure
tells us how dominant is a structure S in the Boltzmann ensemble
of structures over a sequence s. A high value implies a stable
structure. We compute this frequency with RNAfold from the
Vienna Package 2 . 0 (Hofacker et al., 1994).

Figure 8 shows the number of solutions generated (i.e. se-
quences with a MFE structure identical to the target structure).
Here, we note that low GC-contents have a strong (negative)
inﬂuence on the number of sequences generated, and in parallel
also affect negatively the sequence diversity. This observation
emphasizes the difﬁculty to design sequences with low GC-con—
tent. Once again, large percentages of free nucleotides increase
the difﬁculty of the task.

The thermodynamical stability of the target structure on the
designed sequence is another important property when estimat-
ing the performance of RNA design algorithms. We estimate the
quality of our solutions in Figure 9. First, we observe a slow

 

i312

1e /310's113u1no [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; popeommoq

9IOZ ‘09 lsnﬁnv uo ::

Constrained RNA design using a weighted sampling algorithm

 

'—' 30 %E+C '—' 50%G+E

 

 

 

-—- Incarnation 1:] %GH:

1.0

 

 

 

 

304105060?000

|ncarnation+ﬁ NAin-rerse H 1 a %5 +1:

90 100 %J 0.3 0.4 0.5 0.5 CL? 0.3

._..

3:] $105+:

'—' 50%G+C

 

 

 

  
   

- 1.0
_ E H
E I
E 0.0
- g liai-
- [:4 I12

  

 

 

 

 

 

u"in 2::

in an 5i- 5::
Length

in at: an 10::

“it: 0.3 0.4 0.5 0.5 0.: +13
Stack density

T0%G+E

70%G+C

H 90' %G‘I'C

LU- - - - -
E [IE
1 _
a 0.15-
g 0.11
E 0.2

“19.13::

 

 

 

0.05 0.10 0.15 0.20 0.25 0.30 0.35

 

1.0'
E
E DIE -

-—' 90%G+C
‘d 0.5
Em- 

sun:-  :

“000 005 0.10 0.15 is 0.25 0.30 0.3:- 0.40
a. Free nt in leaps

  

 

 

 

Fig. 6. Success rate Inc aRNAtion before and after RNAinverse postprocessing. The ﬁrst row shows the percentage of sampled sequences folding into
the target when using only IncaRNAtion. The second shows after processing previous results with RNAinverse

1.. —u—
1'0 -
13
1?
15
1'5
14

 

|ncarnatian+HNsinrerse ._. 1ﬂ%G+C

 

:- 3ose+c -—- spam:

1"
3::
u:

I"iiﬁtrurtural Sensitivit
G
U1

 

 

 

 

 

1310 iii

in 4i:- 5'0 5i]
Length

in at: at: me 0'11}. 013 [1'4 (is his 0.? as

 

Staci: density

magi:

%Structural Sensitivity
{II
1.]

-—» asset

in
u:
I

P
m
I

P
a:
I

P
U1
I

 

 

 

 

00.05 0.10 015 0.20 0.25 0.30 0.35 0.40 0.45 0.50
a Free nt in loops

Fig. 7. Structural sensitivity (i.e. number of well predicted base pairs/number of base pairs in target) of the sampled sequences MFE

Irsainatnn+HHalmasr—. lﬁﬁﬁ+t . .

II 500+E ‘— SOME-+0

 

 

 

 

 

 

 

 

 

 

 

 

 

333 10c:
area a as:
saw 3 am
e333 - :2
am . HT a“
s ﬂ ' _'-:"‘ d an
in 1‘0 30 d0 5:: a: 1'0 a: a:- me it: :13 mi 0.5 us 0.? :15
Length Stack tit-nary
ME, ImamﬂdeﬁWWH 10sec - i new: v—- 50am:
ﬂAME: ﬂeas
“WW am
.e ..--'-———— a
l=irass V -' EGJ‘S A
al.!
mﬂjﬁw— .13.] ‘ﬁ
{[130 an 4a an an re an an “like an an an an 1'0 an

Length

Staci: densﬂy

Tﬂ‘i'EG-FC

'— WEE-rt

 

ID
{1
‘3!

Aug rib sels

§§§§§§”§

 

 

 

1

r‘i

0:00 0.05 0.10 0.15 0.20 0.25 0.30 0.35 0.40
%Free nt-nlmps

-—- 90 “150+C

 

 

 

I] 5 1t] 15 20 25 30 35
‘sﬁ Free at in leaps

Fig. 8. Number of solutions generated with Inc aRNAtion + RNAinverse on the ﬁrst row and their average sequence identity on the second

 

|ncamatinn+liflsinverse ._. 10 555+:
LU

 

    

*—‘ 30%G+C

'-"' 50%G+C

  
   

 r "

  

 

'n 21:

35911150

50 1'0 00
Length

 

'10.: 0.3 0.4 :15 ms 11': as
Stack density

00 100

-—- 90%0-1-0

   

 

i0%G+C
1.0

0.35 0.110

is: Free nt in leaps

Fig. 9. Thermodynamical stability of the target structure. The curves report the average Boltzmann probability of the target structure (which is also the
MFE structure) at various GC-contents with respect to the length of the target (left), density of stacked base pairs (centre) and number of unpaired
nucleotides in loops (right)

 

i313

1e /3.IO‘S[BUJHO[p.IOJXO'SOIlBUHOJUIOIq/ﬂdllq 11101; popeommoq

9IOZ ‘OE lsnﬁnv uo ::

V.Reinharz et al.

 

 

III—Ir |ncaRNAtien

H Incarnation +RNAinverse

H RNA-SSD]

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 

 

 

 

 

 

 

 

 

 

10%GC 10%GC 10%GC
E, 0.50 . . . . . . a, 0.50 . I . . a, 0.50 . . . . . .
3045— 33045- e @045 ff!
: . . I . If
E 0.40 {ff/J" E 0.40W E 0.40 “I _
E 0.35— — E 0.35— J E 0.35 — —
03% 30 40 50 60 i0 30 90 03% 30 40 50 60 ?0 30 0'300 5 10 15 20 25 30 35
Length Stack density % Free nt in leaps
D G 0
E040 . . BQAGC . . E040 . .BOTGC. J3,040 . . BQTGC . .
 eg- 2  3&2- *  Ie- 1.. '
E 0234— we” — 5 0134/ 4 E} 0234 — / —
 33% r x  I grew
3 0:23— “ — 3 0:28 3 0223- -
Ln  I I I I I I _ m  I - I I . '1 m  ' I I I I s I '
20 30 40 50 e0 10 e0 90 20 30 40 50 60 m 80 0 5 10 15 20 25 30 35

Length Stack density

CH: Free Hit in leaps

Fig. 10. Sequence identity of IncaRNAtion and RNAinverse for 10 and 30% of GC

decline of the structure stability (i.e. the frequency) when the
target structure increases in size. Yet, for an average GC—content,
the frequency stays >10% even at size of 100 nt. Next, we note
that for the most difﬁcult target structures (i.e. the longer ones or
those with high percentages of unpaired nucleotides in loops) the
GC—content has a limited (almost null) inﬂuence on the stability
of the target structure on the designed sequence. By contrast, this
is less true for easiest and small structures with only few free
nucleotides in internal loops.

3.6 Global sampling versus Local search versus Glocal
approach

To conclude this study, we estimate the impact of the design
methodology on the performances. More precisely, we aim to de-
termine the merits of a global sampling approach (IncaRNA
tion) , compared with a glocal procedure (IncaRNAtion+
RNAinverse) and a local search methodology (RNA—SSD). To
the best of our knowledge, RNA—SSD, beside IncaRNAtion, is
the only software that implements an explicit control of the GC-
content.

Here, we compare the running time and the sequence diversity
of the solutions produced by each software. In addition, we focus
on the design of sequences with low GC—contents (330%) as they
are almost impossible to design with classical software (Figure 5).

Figure 3 shows the running time of each software. These data
demonstrate the efﬁciency and scalability of our techniques. In
particular, this ﬁgure suggests that our strategy has the potential
to be applied efﬁciently for designing sequences on long (and
difﬁcult) target secondary structures at low GC—content—a
task that could have not been achieved before due time
requirements.

Next, we show in Figure 10 the average sequence identity
achieved by the various methods. Our results show that at ex-
tremely low GC—contents (i.e. 10%), IncaRNAtion slightly out-
performs RNA—SSD, while this advantage becomes less evident
when the GC—content increases. Our experiments on higher

GC—contents (i.e. 250%) showed that our glocal strategy and
the local search approach perform similarly. Similarly, we did
not ﬁnd any clear evidence that a global, local or glocal approach
outperforms others when we compare at the thermodynamical
stability of the target structure (data not shown).

4 CONCLUSION

In this article, we described a novel algorithm, IncaRNAtion,
for the RNA secondary structure design problem, i.e. the design
of an RNA sequence adopting a predeﬁned secondary structure
as its minimal free-energy fold. Implementing a global sampling
approach, it optimizes afﬁnity toward the target secondary struc-
ture, while granting the user full control over the GC—content of
the resulting sequences. This extended control does not necessar-
ily induce additional computational demands, and we showed
the linear complexity of both the preprocessing stage and the
generation of candidate sequences for the design, allowing for
the design of larger and more complex secondary structures in a
matter of minutes on a single processor (e.g. ~28 min for 100
candidate sequences for a ~1500 nt 168 rRNA). We evaluated
the method on a benchmark composed of target secondary struc-
tures extracted from the RNA STRAND database. We observed
good overall success rate, with the notable exception of very low
targeted GC—content (10%), and a good to excellent entropy
within designed candidates. Finally, we implemented a hybrid
approach, using the RNAinverse software as a postprocessing
step for unpaired regions. This approach greatly increased the
success rate of the method, allowing for the design of highly
diverse candidates for almost all of the structures in our bench-
mark, while largely preserving the targeted GC—content.

In the future, we would like to complement this study by fur-
ther investigating the potential of hybrid local/global—or
glocal—approaches. A global sampling approach would capture
the positive aspects of design, optimizing afﬁnity toward a given
structure while allowing the speciﬁcation of expressive systems of
constraints. Designed sequences would serve as a seed for a

 

i314

112 /310's113umo [p.IOJXO'SOIlBIHJOJUIOICI/ﬁdllq 11101; popnommoq

9IOZ ‘091sn3nv uo ::

Constrained RNA design using a weighted sampling algorithm

 

restricted local approach which, by breaking unwanted symme-
tries, would perform the negative part of the design, while ideally
maintaining obedience to the constraints. Another perspective of
this work is the incorporation of the full Turner energy model,
which should in principle yield better designs for unpaired
regions.

ACKNOWLEDGMENTS

The authors would like to thank Rob Knight for his suggestions
and comments.

Funding: This work was funded by the French Agence Nationale
de la Recherche (ANR) through the [check] Magnum ANR 2 0 1 0
BLAN 02 04 project (to Y.P.), the FQRNT team grant 232983 (to
V.R. and J .W.) and NSERC Discovery grant 219671 (to J .W.).
This article has been developed as a result of a mobility stay
funded by the Erasmus Mundus Programme of the European
Commission under the Transatlantic Partnership for Excellence
in Engineering TEE Project (V.R.).

Conﬂict of Interest: none declared.

REFERENCES

Aguirre-Hernandez,R. et al. (2007) Computational RNA secondary structure design:
empirical complexity and improved methods. BM C Bioinformatics, 8, 34.

Andronescu,M. et al. (2008) RNA STRAND: the RNA secondary structure and
statistical analysis database. BM C Bioinformatics, 9, 340.

Avihoo,A. et al. (2011) RNAexinv: an extended inverse RNA folding from shape
and physical attributes to sequences. BM C Bioinformatics, 12, 319.

Bodini,O. and Ponty,Y. (2010) Multi-dimensional Boltzmann Sampling of
Languages. In DM T CS Proceedings, number 01 in AM, Vienne, Autriche, pp
49—64.

Busch,A. and Backofen,R. (2006) INFO-RNA—a fast approach to inverse RNA
folding. Bioinformatics, 22, 1823—1831.

Chang,A.L. et al. (2012) Synthetic RNA switches as a tool for temporal and spatial
control over gene expression. Curr. Opin. Biotechnol, 23, 679—688.

Ding,Y. and Lawrence,E. (2003) A statistical sampling algorithm for RNA second-
ary structure prediction. Nucleic Acids Res., 31, 7280—7301.

Garcia-Martin,J.A. et al. (2013) RNAiFold: a constraint programming algorithm
for RNA inverse folding and molecular design. J. Bioinform Comput. Biol., 11,
1350001.

Hofacker,I.L. et al. (1994) Fast folding and comparison of RNA secondary struc-
tures. Monatsh. Chem, 125, 167—188.

Levin,A. et al. (2012) A global sampling approach to designing and reengineering
rna secondary structures. Nucleic Acids Res., 40, 10041—10052.

Lyngso,R.B. et al. (2012) Frnakenstein: multiple target inverse RNA folding. BM C
Bioinformatics, 13, 260.

Ponty,Y. and Saule,C. (2011) A Combinatorial Framework for Designing
(Pseudoknotted) RNA Algorithms. In: WABI - 11th Workshop on Algorithms
in Bioinformatics72011, Saarbrucken, Allemagne.

Reinharz,V. et al. (2013) A linear inside-outside algorithm for correcting sequencing
errors in structured RNA sequences. In: Research in Computational Molecular
Biology. Lecture Notes in Computer Science, Vol. 7821. Springer, pp. 199—211.

Rodrigo,G. et al. (2012) De novo automated design of small RNA circuits for
engineering synthetic riboregulation in living cells. Proc. Natl Acad. Sci. USA,
109, 15271—15276.

Senter,E. et al. (2012) Using the fast fourier transform to accelerate the computa-
tional search for RNA conformational switches. PLoS One, 7, 650506.

Tumer,D.H. and Mathews,D.H. (2010) NNDB: the nearest neighbor parameter
database for predicting stability of nucleic acid secondary structure. Nucleic
Acids Res., 38, D280—D282.

Waldispiihl,J. and Ponty,Y. (2011) An unbiased adaptive sampling algorithm for
the exploration of RNA mutational landscapes under evolutionary pressure.
J. Comput. Biol, 18, 1465—1479.

WaldispiihlJ. et al. (2008) Efﬁcient Algorithms for probing the RNA mutation
landscape. PLoS Comput. Biol., 4, e1000124.

Wilf,H.S. (1977) A uniﬁed setting for sequencing, ranking, and selection algorithms
for combinatorial objects. Adv. Math, 24, 281—291.

Zadeh,J.N. et al. (2011) Nucleic acid sequence design via efﬁcient ensemble defect
optimization. J. Comput. Chem, 32, 439—452.

 

i315

1e /810's113umo [p.IOJXO'SOIlBIHJOJUIOICI/ﬁdllq 11101; popeoIII/noq

9IOZ ‘091sn3nv uo ::

