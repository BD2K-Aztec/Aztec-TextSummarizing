APPLICA TIONS NOTE V°" 33-3321Z§§Jbisﬁiiiaﬁﬁ§§§

 

Sequence analysis

Advance Access publication November 12, 2013

PSAR-Align: improving multiple sequence alignment using

probabilistic sampling

1,2,* 3,4,*

Jaebum Kim and Jian Ma

1Department of Animal Biotechnology, 2UBITA Center for Biotechnology Research (CBRU), Konkuk University,
Seoul 143—701, Korea, 3Department of Bioengineering and 4Institute for Genomic Biology, University of Illinois at

Urbana—Champaign, Urbana, IL 61801, USA

Associate Editor: Ziv Bar-Joseph

 

ABSTRACT

Summary: We developed PSAR-Align, a multiple sequence realign-
ment tool that can refine a given multiple sequence alignment based
on suboptimal alignments generated by probabilistic sampling. Our
evaluation demonstrated that PSAR-Align is able to improve the re-
sults from various multiple sequence alignment tools.

Availability and implementation: The PSAR-Align source code
(implemented mainly in C++) is freely available for download at
http://bioen-compbio.bioen.il|inois.edu/PSAR-Align.

Contact: jbkim@konkuk.ac.kr or jianma@illinois.edu

Received on July 29, 2013; revised on October 8, 2013; accepted on
October 28, 2013

1 INTRODUCTION

Multiple sequence alignment (MSA) is one of the most important
foundations for cross-species comparative genomic analysis
(Kumar and Filipski, 2007; Notredame, 2007). Although many
algorithms for MSA have been developed (Kemena and
Notredame, 2009), MSA is still error-prone. For example, it
was estimated that at least 10% of the human-mouse whole-
genome alignment is misaligned at the UCSC Genome
Browser and the number increases for other species (Prakash
and Tompa, 2007).

We previously developed a novel measure, called PSAR (Kim
and Ma, 2011), which can assess the reliability of an MSA based
on its agreement with probabilistically sampled suboptimal align-
ments (SAs). SAs provide additional information that cannot be
obtained by the optimal alignment alone, especially when the
optimal alignment is not far superior to the SAs.

In this article, we introduce a new realignment method, PSAR-
Align, which reﬁnes a given MSA based on a probabilistic frame-
work that takes advantage of the SAs of the given MSA. Brieﬂy,
PSAR-Align (i) samples SAs from the given MSA, (ii) estimates
posterior probabilities of aligning two residues from two differ-
ent sequences and (iii) generates a revised MSA using an ex-
pected accuracy-based alignment algorithm (Bradley et al.,
2009; Do et al., 2005; Paten et al., 2009; Roshan and Livesay,
2006).

 

*To whom correspondence should be addressed.

2 METHODS

1.1 PSAR-Align algorithm

Given an input MSA, PSAR-Align ﬁrst generates SAs by probabilistic
sampling (Fig. 1A and B). Speciﬁcally, for each pair of one sequence and
a remaining sub-alignment, PSAR-Align compares them based on a spe-
cial pair hidden Markov model (pair-HMM) that emits columns of an
MSA, which can be represented by dynamic programming matrix. To
generate the SAs, PSAR-Align traces back through the dynamic
programming matrix based on a probabilistic choice at each step that
can take into account the relative score of a current path in comparison
with neighboring paths (Kim and Ma, 2011). Then, for each pair of two
residues x, and yj from two different sequences X and Y in the input
MSA, their alignment in the sampled SAs are counted and converted
to the posterior probability P(x,~yj|X,Y) (Fig. 1C and D), which is
deﬁned as follows:

 1
ISI ()

where S is the set of the SAs, |S| is the total number of alignments in S
and 1{x,- ~ yje Sk} is an indicator function that returns 1 only when x,- and
yj are aligned in an SA Sk.

PSAR-Align uses these probabilities to generate the revised alignment
by maximizing an expected accuracy of an MSA A [acc(A)] against the
(unknown) true alignment. The expected accuracy is the sum of the pos-
terior probabilities of aligned pairs of residues and unaligned (aligned

with a gap) residues in a given MSA (Bradley et al., 2009), which is
deﬁned as follows:

acc(A) = Z [2 Z P(xl- ~ yle, Y)

X, Y i,j:x,-~yjeAXy

P(xi  Y) N

(2)
+ Z P(xi~—IX,I’)+ Z P(—~yjIX,Y)]

i:x,-~—EAXY j2—~ijAXY

where A XY is a pairwise alignment between two sequences X and Y,
P(xlw yle,Y) is the posterior probability of pairwise alignment men-
tioned earlier in the text and P(x,~ — IX ,Y) and P(— ~ yle,Y) are the
posterior probabilities of aligning each residue with a gap that can be
computed as follows:

P(x. ~ —|X, Y) = 1— 2m.- ~ yjIX, Y) (3)

P(— ~ yjIX, Y) = 1 — 2m.- ~ yJ-IX, Y) (4)

For the maximization of the expected accuracy, we used the sequence
annealing algorithm in the FSA program (Bradley et al., 2009).

The current version of PSAR-Align was implemented mainly in
C++ with additional Perl scripts, and the expected accuracy

 

1010 © The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com

112 [glO'SIBILInO[plOJXO'SODBIILIOJHlOlQ/[Zdllq moi; pepcolumoq

910K ‘09 lsnﬁnV no :2

PSAR-Align

 

Input mu ttiple sequence
alignment

 

 

Suboptimal alignments @

Posterior probabilities  analysii?)

of pair-residue alignment aligned sequences

f'jtlfig nment based 
maximization of expected
accuracy _

4}

Revised alignment

 
 
   

 

 

 

Fig. 1. Overview of the PSAR-Align algorithm. Given input MSA,
PSAR-Align ﬁrst samples SAs (A and B). These SAs are analyzed by a
pair of sequences at a time (C), and posterior probabilities of aligning two
residues from two different sequences are computed (D). By using these
probabilities, PSAR-Align ﬁnds the revised alignment based on the maxi-
mization technique of expected accuracy (E)

maximization step was implemented on top of the source code of FSA
(Bradley et al., 2009).

2.2 Evaluation

We assessed the performance of PSAR-Align by using a simulated bench-
mark generated by Dawg (Cartwright, 2005). The benchmark mimics
non-coding DNA sequences of ﬁve mammalian species (human, mouse,
rat, dog and cow), whose phylogenetic tree was obtained from the UCSC
Genome Browser (Meyer et al., 2013). The benchmark consists of 1000
replicates of ~1kb—long sequences, and ClustalW (Thompson et al.,
2002), MAFFT (Katoh et al., 2005), MAVID (Bray and Pachter,
2004), MUSCLE (Edgar, 2004) and Pecan (Paten et al., 2008) were
used to generate the input MSA. Two evaluation measures were used:
(i) alignment sensitivity, which is the fraction of aligned and unaligned
(aligned with a gap) residues in the true alignment that agree with the
predicted alignment and (ii) alignment speciﬁcity, which is the fraction of
aligned and unaligned (aligned with a gap) residues in the predicted align-
ment that agree with the true alignment.

2.3 Computational complexity

The time and memory complexites of alignment sampling are 0(L2NS)
and 0(LN), respectively, where L is the alignment length, N is the number
of sequences and S is the number of sampling trials (Kim and Ma, 2011).
The pairwise posterior probability computation requires 0(N2L) time and
memory complexity, and the maximization of the expected accuracy was
done efﬁciently by FSA (Bradley et al., 2009). In the evaluation, a single
run of PSAR-Align for each input MSA took ~3 min in an Intel (R)
Xeon 2.67 GHz machine with 64 GB memory.

3 RESULTS

We evaluated PSAR-Align by using simulated sequences of ﬁve
mammalian species (see Section 2). By using ClustalW, MAF F T,
MAVID, MUSCLE and Pecan, input MSAs were generated
and fed into PSAR-Align, which resulted in a reﬁned MSA.
The original (by the aforementioned ﬁve programs) and revised

Table 1. Benchmark results of PSAR-Align

 

 

 

Input MSA Sensitivityc Speciﬁcityc
Originala PSAR-Alignb Originala PSAR-Alignb
ClustalW 28.844 31.446 20.920 23.511
(28.51—29.18) (31.08—31.81) (206621.19) (23.19—23.83)
MAFFT 58.751 59.820 48.595 50.605
(585448.96) (59.614003) (48.364882) (50.3e50.85)
MAVID 61.185 61.739 52.782 53.913
(610041.37) (615641.92) (52.57—53.00) (53.7m54.13)
MUSCLE 55.054 56.352 44.200 46.305
(54.82—55.29) (56.12—56.58) (439644.44) (460546.56)
Pecan 70.948 70.273 64.952 65.614

(70.78—71.11) (70.10—70.44) (64.71—65.19) (65.384585)

 

Note: Better scores between original and PSAR-Align are shown in bold.
aInput MSA to PSAR-Align.

bRevised MSA of the original by PSAR-Align.

cAverage across 1000 replicates with 95% conﬁdence interval in parentheses.

(by PSAR-Align) MSAs were compared with true MSAs, which
were known from the simulation. We used two evaluation meas-
ures: alignment sensitivity and speciﬁcity (see Section 2). As
shown in Table 1, the alignment speciﬁcity of the original
MSA by all ﬁve programs increased in the PSAR-Align MSA.
The amount of increases ranges from 0.662 (Pecan) to 2.591
(ClustalW). Similar differences were also observed for alignment
sensitivity, which showed an increase ranging from 0.554
(MAVID) to 2.602 (ClustalW). In the case of Pecan, alignment
speciﬁcity of the revised alignment by PSAR-Align was slightly
higher than the original, but the opposite pattern was observed
from alignment sensitivity. Our evaluation results indicate that (i)
PSAR-Align can be used to improve MSAs from different types
of MSA programs and (ii) Pecan is a high-quality MSA program
based on our evaluation datasets.

4 CONCLUSION

We have developed a new alignment reﬁnement tool, PSAR-
Align, which is a realignment algorithm based on probabilistic-
ally sampled SAs. The performance of PSAR-Align was evalu-
ated by simulation-based benchmarks. This tool will be useful for
comparative genomics studies using MSA.

Funding: National Research Foundation of Korea Grant
(2012R1A1A1015186 to J.K.) and National Institutes of
Health grant (HG006464 to J .M.).

Conﬂict of Interest: none declared.

REFERENCES

Bradley,R.K. et a]. (2009) Fast statistical alignment. PLoS Comput. Biol., 5,
e1000392.

Bray,N. and Pachter,L. (2004) MAVID: constrained ancestral alignment of multiple
sequences. Genome Res., 14, 693—699.

Cartwright,R.A. (2005) DNA assembly with gaps (Dawg): simulating sequence evo-
lution. Bioinformatics, 21 (Suppl. 3), iii31—iii38.

 

1011

112 ﬂJO'sleumo[pJOJXO'soneuuogutotq/ﬁdnq 11101; pepeolumoq

910K ‘09 tsnﬁnV uo :2

J.Kim and J.Ma

 

Do,C.B. et al. (2005) ProbCons: probabilistic consistency-based multiple sequence
alignment. Genome Res., 15, 330—340.

Edgar,R.C. (2004) MUSCLE: multiple sequence alignment with high accuracy and
high throughput. Nucleic Acids Res, 32, 1792—1797.

Katoh,K. et al. (2005) MAFFT version 5: improvement in accuracy of multiple
sequence alignment. Nucleic Acids Res., 33, 511—518.

Kemena,C. and Notredame,C. (2009) Upcoming challenges for multiple sequence
alignment methods in the high-throughput era. Bioinformatics, 25, 2455—2465.

Kim,J. and Ma,J. (2011) PSAR: measuring multiple sequence alignment reliability
by probabilistic sampling. Nucleic Acids Res., 39, 6359—6368.

Kumar,S. and Filipski,A. (2007) Multiple sequence alignment: in pursuit of hom-
ologous DNA positions. Genome Res, 17, 127—135.

Meyer,L.R. et al. (2013) The UCSC Genome Browser database: extensions and
updates 2013. Nucleic Acids Res., 41, D64—D69.

Notredame,C. (2007) Recent evolutions of multiple sequence alignment algorithms.
PLoS Comput. Biol, 3, 6123.

Paten,B. et al. (2008) Enredo and Pecan: genome-wide mammalian consistency-
based multiple alignment with paralogs. Genome Res, 18, 1814—1828.

Paten,B. et al. (2009) Sequence progressive alignment, a framework for
practical large-scale probabilistic consistency alignment. Bioinformatics, 25,
295—301.

Prakash,A. and Tompa,M. (2007) Measuring the accuracy of genome-size multiple
alignments. Genome Biol, 8, R124.

Roshan,U. and Livesay,D.R. (2006) Probalign: multiple sequence alignment using
partition function posterior probabilities. Bioinformatics, 22, 2715—2721.

Thompson,J.D. et al. (2002) Multiple sequence alignment using ClustalW and
ClustalX. Curr. Protoc. Bioinformatics, Chapter 2, Unit 2 3.

 

1012

112 [glO'SIBILInO[plOJXO'SODBIILIOJHIOIQ/[Z(11111 IIIOJJ pepcolumoq

910K ‘09 tsnﬁnV uo 22

