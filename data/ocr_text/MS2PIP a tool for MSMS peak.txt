ORIGINAL PAPER

Vol. 29 no. 24 2013, pages 3199—3203
doi:10. 1093/bioinformatics/btt544

 

Data and text mining

Advance Access publication September 27, 2013

MSZPIP: a tool for MS/MS peak intensity prediction

Sven Degroeve1’2’* and Lennart Martens1 ’2

1Department of Medical Protein Research, VIB, Ghent 9000, Belgium and 2Department of Biochemistry, Ghent

University, Ghent 9000, Belgium

Associate Editor: Igor Jurisica

 

ABSTRACT

Motivation: Tandem mass spectrometry provides the means to match
mass spectrometry signal observations with the chemical entities that
generated them. The technology produces signal spectra that contain
information about the chemical dissociation pattern of a peptide that
was forced to fragment using methods like collision-induced dissoci-
ation. The ability to predict these MS2 signals and to understand this
fragmentation process is important for sensitive high-throughput
proteomics research.

Results: We present a new tool called MSZPIP for predicting the in-
tensity of the most important fragment ion signal peaks from a peptide
sequence. MSZPIP pre—processes a large dataset with confident pep-
tide-to—spectrum matches to facilitate data-driven model induction
using a random forest regression learning algorithm. The intensity pre-
dictions of MSZPIP were evaluated on several independent evaluation
sets and found to correlate significantly better with the observed frag-
ment-ion intensities as compared with the current state-of—the—art
PeptideART tool.

Availability: MSZPIP code is available for both training and predicting
at http://compomics.com/.

Contact: sven.degroeve@UGent.be

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on June 12, 2013; revised on September 11, 2013; accepted
on September 13, 2013

1 INTRODUCTION

Mass spectrometry (MS) allows for high-throughput protein
content measurements in samples by identifying and quantifying
proteins in the form of digested peptide sequences. Tandem mass
spectrometry (MSZ) provides the means to match MS signal ob-
servations with the chemical entities that generated them. MS2
produces signal spectra that contain information about the
chemical dissociation pattern of a peptide that was forced to
fragment using methods like ‘collision induced dissociation’
(CID). The signal peaks in an MS2 spectrum indicate the pres-
ence of a peptide fragment ion with a speciﬁc mass. The intensity
of a signal peak is dependent on a number of factors: the abun-
dance of the peptide in the sample, the efﬁciency of the cleavage
that generated the fragment, the proteotypicity of the fragment
ion and other factors related to the peptide and the machine that
generated the MS2 spectrum (Barton and Whittaker, 2009).
Popular peptide identiﬁcation tools such as Mascot (Perkins
et al., 1999), OMSSA (Geer et al., 2004) and XlTandem (Craig

 

*To whom correspondence should be addressed.

and Beavis, 2004) assume that MS2 peaks for the most important
fragment ions have a high intensity, and that fragment ions of
different types have the same high intensity. Without an accurate
model of the relationship between the amino acid composition of
the peptide and the peak intensities in the corresponding MS2
spectrum, these ad hoc approaches fail to match fragment ions
for which low intensity peaks are expected to be observed. It has
been shown that incorporating knowledge about this relationship
between peak intensity and amino acid composition signiﬁcantly
improves peptide identiﬁcation rates (Narasimhan et al., 2005;
Sadygov et al., 2006; Tabb et al., 2007).

Despite the apparent need for accurate MS2 signal peak inten-
sity predictions from amino acid sequences, only few attempts
have been published. A ﬁrst approach, the MassAnalyzer tool
(Zhang, 2004, 2005), was a deductive physicochemical model of
peptide fragmentation. All parameters in the model were opti-
mized on a dataset containing 8900 MS2 spectra with conﬁdent
peptide match (PSM). The authors showed that MassAnalyzer
models MS2 peak intensities more accurately as compared with
ad hoc methods. At the same time, an inductive Bayesian deci-
sion tree approach was introduced (Elias et al., 2004). This re-
search showed that a decision tree model representation is highly
suitable for learning the diverse set of rules that govern peptide
fragmentation. Their data-driven approach was able to visualize,
from 27.000 PSMs, many of the known fragmentation rules and
discovered several new ones. However, their approach does not
model the peak intensities directly. Rather it models the prob-
ability of observing a certain fragment ion intensity. A similar
study based on Bayesian neural networks was presented in Zhou
et al. (2008) with a dataset of 13.900 PSMs.

Another inductive approach called PeptideART (Arnold et al.,
2006) is based on feed-forward neural network representations.
It implements an ensemble of neural networks that each models
the most important fragment ion peak intensities in one multi-
output feed-forward neural network. This method models the
(normalized) peak intensities directly. The features used as
input to the neural network are similar to ones suggested by
Elias et al. The authors reported a systematic assessment of the
accuracy of the current peptide MS/MS spectrum predictors for
the most commonly used collision-induced dissociation instru-
ments (Li et al., 2011). They found that PeptideART achieves
generally higher accuracy on a wide range of proteomic datasets
when trained on a dataset of 41.054 PSMs.

We show here that MS2 signal peak intensity prediction can be
signiﬁcantly improved by exploiting the vast amount of PSM
data that have been collected over the recent years. We con-
structed a dataset of 73.121 merged PSMs and present an

 

© The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 3199

112 [3.10811211an[plOJXO'SODBIIIJOJIITOTQ/[idllq IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

S.Degroeve and L.Martens

 

inductive leaning approach for peak intensity regression that
exploits all of the information contained in this large number
of PSMs. Our approach still uses the non-linear decision tree
representation for training the peak intensity prediction
models. Both training and prediction procedures are imple-
mented in a freely available tool called MS2 Peak Intensity
Prediction, or MSZPIP.

2 METHODS

2.1 Training dataset

A total of 3.965.456 OrbiTrap PSMs identiﬁed as true matches in 619
proteomics experiments (obtained by sampling human, mouse and rat as
well as many plant and bacterial species) were queried from the ms-lims
database (Helsens et al., 2010) of the proteome analysis and bioinfor-
matics unit of Ghent University. All PSMs were scored as non-random
matches by the Mascot search engine (versions ranging from 2.1.02 to
2.3.01) with allowed error rate estimates from 1 to 5%. We refer to this
PSM data as the training dataset D. Signal peak intensities are normal-
ized within each MS2 spectrum such that we can compare these intensities
between spectra. All peak intensities within a spectrum were divided by
the sum of all peak intensities of that spectrum, i.e. normalization to total
ion current (Degroeve et al., 2011). All intensities are log transformed.

2.2 Evaluation datasets

Several publicly available MS2 sample processing experiments, all per-
formed on LTQ-OrbiTrap type instruments, were used for evaluating
the intensity prediction models obtained from the training data. None
of these data were generated by the Proteome Analysis and
Bioinformatics Unit of Ghent University. The ﬁrst set of processed sam-
ples was obtained from a study of the NCI funded Clinical Proteomic
Technology Assessment for Cancer (CPTAC) Network (Paulovich et al.,
2010). Herein, six digested yeast samples were analyzed by three different
laboratories to generate the corresponding MS2 spectra. For each labora-
tory, we make one evaluation dataset that contains all PSMs of the six
proteomic experiments.

We will refer to these datasets as lab], lab2 and lab3. The second set of
processed samples originates from The Proteome Informatics Research
Group (iPRG) of the Association of Biomolecular Resource Facilities
and their 2009 study. This study used two different E. coli lysate samples,
each processed as ﬁve technical replicates. We create two evaluation
datasets, sample] and sample2, each containing the respective PSMs for
all ﬁve replicates.

All MS2 spectra were searched with the Mascot peptide identiﬁcation
engine and post-processed by the Percolator PSM rescoring tool to pro-
duce PSMs with high conﬁdence (FDR< 0.01). The number of PSMs in
each evaluation dataset is shown in Table 1.

2.3 Data processing

Our key idea is to partition the dataset D into disjoint subsets that rep-
resent regression learning tasks that are easier to solve by a machine
learning method. This is possible by exploiting the vast amount of
PSM training data available to us. As different PSM charge states c are
known to fragment differently, dataset D is ﬁrst partitioned based on the
charge state of the PSM. In this research, we consider the most important
charge states +2 and +3. We refer to these PSM datasets as Dc with
ce{+2,+3}. It is worth noting that the separate analysis of different pep-
tide charge states has already been shown to be useful in identiﬁcation
results validation Waudel et al., 2011).

We take this one step further by partitioning each dataset Dc based on
the peptide length l of the PSM. For this, we consider peptide lengths
from 8 to 28 amino acids based on the typical lengths of identiﬁed

Table 1. The number PSMs in the CPTAC and iPRG evaluation datasets

 

 

Dataset Charge +2 Charge +3
Labl 42 774 4435
Lab2 59 751 21 263
Lab3 42 174 15 808
Sample] 11191 5114
Sample2 12 005 5428

 

peptides (V andermarliere et al., 2013). As a result, we now have parti-
tioned D into Dc, with c e {+2,+3} and l 6 [8,28]. As explained further,
this will greatly simplify the representation of the PSMs by feature vec-
tors, and therefore make it easier for a machine learning method to learn
an accurate regression model.

To apply a machine learning method on the datasets Dc], we need to
compile each PSM into a feature vector and label that vector with a target
for the regression. Table 2 lists the features we used to represent a PSM.
These include previously described features (Elias et al., 2004) such as the
mass-to-charge ratio of the peptide sequence and the two fragment ions
as well as average values for different chemical properties of the amino
acids in a peptide or fragment ion. Also, the amino acid composition is
taken into account by counting the number of times each amino acid
appears in the peptide (feature I_). The features (seq_<p0s>_x) are new
and can only be computed because we partitioned the training data based
on the length l of the peptide. These features capture information from all
positions in the amino acid sequence, not just from the positions in prox-
imity to the cleavage site. For each position, we compute features that
represent the presence of a speciﬁc, potentially modiﬁed amino acid.
Similarly we compute features that contain the value of several chemical
amino acid properties for each position in the peptide sequence.

In this research, we build regression models for all the bi, b++,~, b-H20,-,
b'NH3z': b++-H20i, b++'NH3ia Yi:Y++ia Y'H20i: Y'NHSia Y++'H201' and
y++-NH3,~ fragment ions with i ranging from 1 to l—l for a peptide of
length I. We will refer to this set of fragment ions as frag(l). Each ion is
searched for in the MS2 spectra with a 0.8 Da error tolerance. If >1 signal
peak is observed within the constructed error window, then the peak with
the highest intensity is selected as the matching peak. For each fragment
ion f e frag(l), a training dataset Dclf is compiled that contains all PSMs
with charge c and peptide length l and with the observed peak intensities
for fragment ion f as targets for the regression. Just as for c and l, we here
build separate models for each f e frag(l).

Each dataset Dc, contains PSMs with the exact same peptide sequence
and charge, but with different experimental MS2 spectra. Instead of rep-
resenting these PSMs as different feature vectors, we merged these spectra
by computing the median intensity for each f e frag(l) and computed only
one feature vector from the merged PSMs. This reduces experiment
induced intensity variance and limits the negative impact of outlying
PSMs, i.e. PSMs not correctly identiﬁed by Mascot. This is similar to
the spectrum averaging techniques used in spectral libraries (Lam et al.,
2007).

To make spectrum merging meaningful, we removed all PSMs for
which the peptide sequence is observed <10 times. This ﬁlter again re-
duces the impact of potentially incorrectly identiﬁed PSMs as such
random matches are typically identiﬁed in only few experiments.
Preferring to err on the side of caution, we assumed that many of these
only occasionally observed identiﬁcations could be incorrect PSMs. The
minimum threshold of 10 spectra identifying a peptide is selected as a
balance between making the merging meaningful while still keeping
enough PSM data for training the regression models. The number of
non-redundant PSMs in each dataset Dc, is show in Table 3.

 

3200

112 [3.10811211an[plOJXO'SODBIIIJOJIIIOIQ/[idllq IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

MSZPIP

 

Table 2. Features used to represent the PSMs in datasets Dclf

 

 

Feature Description

labeled Set to 1 if the peptide has an n—terminal label, 0 otherwise
pep_mz Computed mass value of the peptide sequence

ion_mz Computed mass of the fragment ion f

ion_mz_other Pep_mz minus ion_mz
avg_<chem>
avg_<chem>_ion
seq_<pos>_
seq_<pos>_<mod—a>
seq_<pos>_<chem>

Average of chemical property <chem> for all amino acids in the peptide

Average of chemical property <chem> for all amino acids in the fragment ion f

I Number of occurrences of the amino acid <amin0> in the peptide sequence

Set to 1 if the amino acid at peptide sequence position <p0s> is

Set to 1 if the modiﬁed amino acid at peptide sequence position <p0s> is

The value of the chemical property <chem> of the amino acid at position <pos> in the peptide

 

Note: The different chemical properties <chem> are basicity, hydrophobicity, helicity and p1. The values are listed in Supplementary Table S1. The
modiﬁed amino acids <mod-amino> in the training PSMs are C, K, M, N and R.

Table 3. The number of (merged) PSMs used in each dataset Dc,

 

 

Peptide length Charge +2 Charge +3
8 4972 40
9 6875 89
10 7627 155
11 7910 289
12 6855 355
13 5927 443
14 5131 615
15 4422 798
16 3633 951
17 2614 870
18 1900 895
19 1531 941
20 859 807
21 705 777
22 433 694
23 307 670
24 166 480
25 137 329
26 55 266
27 63 293
28 28 214
Total 62 150 10 971

 

Remark that our spectrum merging approach is a way of removing
redundant PSMs from the datasets. In previous approaches, non-redun-
dant sets of PSMs were obtained by selecting the match with the highest
quality (typically implemented as selecting the PSM with the highest
Mascot score). However, by merging the observed peak intensities for
all observed PSMs, we try to exploit much more information from the
3.965.456 spectra in our PSM dataset.

2.4 Regression model induction

Signal peak intensity prediction models were induced from the compiled
training datasets using the random forests (RF) regression method
(Breiman, 2001). This algorithm computes an ensemble of ntree CART

regression trees in which each tree is constructed from mtry randomly
sampled features. A peak intensity prediction is then computed as the
average of the outputs of the regression trees in the forest.

Let m be the number of features in a training dataset Dclf, then all
combinations of ntree e {10, 20, 40, 60, 100, 140, 200} and mtry E
{sqrt(m), m/4, m/3, m/2, m/ 1.5} are evaluated. The RF method uses an
out-of—bag (00b) procedure that can be used to compute an unbiased
estimate of the prediction performance. For each parameter combination,
we induce a RF regression model and estimate the explained variance by
computing the cob R2 as the mean-squared error divided by the variance
of the original observations and subtracted from one. We used the
‘randomForest’ R library version 4.6.7 from the Comprehensive R
Archive Network (CRAN) as the RF implementation.

3 RESULTS

3.1 Training RF regression models

Table 3 shows the number of vectors for each dataset D6,. There
are many more experimental PSMs with charge +2 as compared
with charge +3 PSMs. For charge +2 PSMs, the peptide length
l = 11 is most likely to be observed, whereas for charge +3, this is
l: 16. It is observed that training set sizes are different for the
different regression tasks.

To investigate the regression target distribution in each dataset
Ddf, we plotted the mean and standard deviation of this distri-
bution for each dataset Dclf with f e {b,y}. From this plot
(Supplementary Fig. S1), we concluded that datasets Dclf with
low mean intensity also have low variance. For these dataset, the
signal peaks for fragment ion f are hardly ever observed, or they
are in the noise. For these datasets, a baseline regression model
that always predicts that no signal peak is observed will be hard
to beat. So, for all datasets Dclf with a standard deviation of the
regression target distribution smaller than 0.5, we do not induce
an RF regression model but rather apply the baseline regression
model.

Figure 1 shows the distribution of the cob R2 prediction per-
formance results for b and y ion types. A more detailed visual-
ization of the results can be found in Supplementary Figure S2.
As known from previous research, learning charge +3 fragmen-
tation rules is much harder than charge +2 rules. Because of this,
the dataset D contains less charge +3 PSM examples, as it is

 

3201

112 /810's112umo[pJOJXO'sot112u1101utotq/ﬁd11q 111011 pepcolumoq

910K ‘09 lsnﬁnV uo 22

S.Degroeve and L.Martens

 

WFWWEME
Haga- b y

an

60

4t}

m I I

u___. -____-I -

121'.-

111:-

W

at:

JC-

: II I I

9--I I- ——l —
It] 3|) 50 It] 9010 30 5.1 H3 93

Fig. 1. The distribution of the cob R2 prediction performance results for
the regression tasks Dclf, with f e{b,y}

E
E
2 'E
E

r.»
Crud-Inlth

harder for Mascot to assign the correct peptide in these cases.
This is also reﬂected in the cob R2 results, as RF regression, in
general, performs less accurately on the +3 PSM datasets.
Supplementary Figures S3a and S3b show detailed results for
all the fragment ion types considered in this research. These
plots show the accuracy of the prediction models differs signiﬁ-
cantly between the different ion types, charge states and peptide
lengths. For less prominent ion types, such as b++-H20 and
y++-NH3, the accuracy of the intensity predictions is low for
all peptides. The prediction models computed for the b and y
ions were most accurate. The ion types b++ and y++ could be
modeled accurately only for the charge +3 peptides. We could
also observe a clear difference in accuracy between the different
peptide lengths for these ion types: models for peptides with
length between 11 and 17 are signiﬁcantly more accurate as
those for length 8 or 9.

3.2 Evaluating RF regression models

To estimate the true generalization performance of the trained
RF regression models, they were applied to predict the fragment
ion peak intensities in the PSMs of the evaluation datasets lab],
lab2, lab3, sample] and sample2.

For each test, PSM with charge state c and peptide length l the
corresponding models Dclf are applied to predict the signal peak
intensities of the fragment ions. Next, the Pearson product-
moment correlation coefﬁcient (PCC) between the observed
and the predicted signal intensities is computed. For this evalu-
ation, we considered four sets of fragment ions as show in
Table 4. For set], we considered b and y ions only. For set2,
set3 and set4 more fragment ions are added to the computation
of the PPC values.

The accuracy of the MSZPIP predictions is compared with
those computed by PeptideART version 2.1. This implementa-
tion has no speciﬁc parameters to be set by the user. We did
transform the predictions made by PeptideART to logz-space.

Figure 2 shows the distribution of the PCC values computed
from the b and y ion types (set], Table 4) for the evaluation
datasets lab], lab2, lab3, sample] and sample2. Results for the
MSZPIP models are shown in dark gray, those for PeptideART
in light gray. For the charge, +2 PSMs contributions are

Table 4. Different sets of fragment ions used for the evaluation of the
performance of the peak intensity prediction models

 

 

Set Fragment ions

Set] bi, yi

S8t2 bi: Yi, b++i: 

5813 bi, Yi, b++i, Y++i,, b'HZOi, b'NH3i, Y-Hzoi, Y-NH3i
5814 bi: Yi, b++i, Y++i,, b'HZOi, b'NH3i, Y'Hzoi, Y'NH3i,

b++'H20i, b++'NH3i, Y++-H20i, Y++'NH3i

 

FC-Clbﬁl- -' W

ﬁﬁﬁﬁﬁﬂﬁﬁﬁﬂﬂﬁﬁﬁﬁﬁﬁﬁﬁﬁ

 

 

 

 

a? E - - - . ._._._l_i_i.|.|. ill [1 |
ii 3. - --..--_--.-....i.i.i.ii.ill.|i .11
WE; - - -—-_--.-.-n-i.i.i.lil|.lll.|lu,l 1
iii - - -.-_._._.-..i.i.hl|llllnllul_.
jg m; _ --.._.-1..1.l.h.ll.h“l“|lﬂllI

Fig. 2. The distribution of the PCC values computed from the b and
y ion types (set]) for the evaluation datasets lab], lab2, lab3, sample]
and sample2

represented as the smaller bars. As concluded from the training
datasets cob performance, prediction charge +2 PSMs models
are more accurate than charge +3 models. Overall, the distribu-
tions clearly show that MSZPIP is signiﬁcantly more accurate in
predicting signal peak intensities for the PSMs considered in this
research as compared with PeptideART.

Supplementary Figure S4 shows the results for all fragment
ion sets from Table 4. The plot shows how MSZPIP consistently
computes more accurate peak intensity predictions for these sets
as compared with PeptideART. We also observe how the overall
correlation between the observed and predicted fragmentation
ion peaks for a spectrum decreases as more of the less prominent
fragment ion types are included in the computation of the PPC.

In Supplementary Figure S5a—S5e, we plotted the PPC results
for set] as box-plots for each peptide length l and charge state c.
Now the performance difference between PeptideART and
MSZPIP becomes clearer. For both methods, predicting the
peak intensities in the longer peptides (from ~23 amino acids)
is problematic for several evaluation sets. We observe this for
both charge +2 and +3 peptides. However, for the shorter pep-
tides (up to length 13), the MS2PIP models perform signiﬁcantly

 

3202

112 [3.1081120an[plOJXO'SODBIILIOJHIOIQ/[ldllq 111011 pepeolumoq

910K ‘09 lsnﬁnV uo 22

MSZPIP

 

better. This is somewhat surprising for the charge +3 models as
these were trained relatively small datasets (Table 3). A ﬁnal
observation is that these conclusions are consistent for all evalu-
ation sets.

4 CONCLUSIONS

MSZPIP is a tool that implements a number of new techniques
for the induction of MS2 signal peak intensity prediction models.
First, following the conclusion made by (Elias et al., 2004) that
decision tree representations are suitable for learning peptide
fragmentation rules, MSZPIP applies a RF regression learning
algorithm for constructing the prediction models. Second, the
vast amount of available PSM data accumulated over the
recent years allows MSZPIP to partition this PSM data to facili-
tate the construction of feature vectors from peptide sequences.
Third, MSZPIP merges PSM data to reduce dataset sizes while
still preserving the relevant intensity information contained in
all PSMs.

The main conclusions we want to make from this research are
the following. First, MS2PIP shows superior prediction perform-
ance for the fragment ion peak intensities considered in this re-
search as compared with the neural network based PeptideART
prediction tool. Second, MSZPIP and PeptideART both are sig-
niﬁcantly less accurate for the longer peptides, although MSZPIP
is far more accurate than PeptideART for the smaller peptides.
Third, the accuracy of the models differs signiﬁcantly between
the different fragment ion types. For less prominent ion types
such as b++-H20 and y++-NH3, the accuracy of the intensity
predictions is low for both tools. The prediction models com-
puted for the b and y ions were most accurate. The ion types
b++ and y++ could be modeled accurately only for the charge
+3 peptides.

Although additional research needs to be performed, we be-
lieve the main contribution of MSZPIP to the increased accuracy
observed for MS2 signal peak intensity prediction is the splitting
of the PSM data based on charge state, peptide length and frag-
ment ion type, making the learning task easier for the RF regres-
sion method. The observation that MSZPIP is far more accurate
for the smaller peptides provides a strong indication for this
statement.

In addition, our publicly available MSZPIP implementation
allows for building peak intensity prediction models for all
other types of fragment ions as well.

Funding: The seventh framework program of the European Union
(Contract no. 262067- PRIME-XS) and by Ghent University
(multidisciplinary research partnership ‘Bioinformatics: from nu-
cleotides to networks’). IWT SBO grant ‘INSPECTOR’ (120025)

(in part). Computations were performed on the Stevin
Supercomputer Infrastructure at Ghent University, funded by
Ghent University, the Hercules Foundation and the Flemish
Government.

Conflicts of Interest: none declared.

REFERENCES

Amold,R.J. et al. (2006) A machine learning approach to predicting peptide frag-
mentation spectra. In: Paciﬁc Symposium on Biocomputing. pp. 219—230.

Barton,S.J. and Whittaker,J.C. (2009) Review of factors that inﬂuence the abun-
dance of ions produced in a tandem mass spectrometer and statistical methods
for discovering these factors. Mass Spectrom. Rev., 28, 177—187.

Breiman,L. (2001) Random Forests. Machine Learning, 45, 5—32.

Craig,R. and Beavis,R.C. (2004) TANDEM: matching proteins with tandem mass
spectra. Bioinformatics, 20, 1466—1467.

Degroeve,S. et al. (2011) A reproducibility-based evaluation procedure for quan-
tifying the differences between MS/MS peak intensity normalization methods.
Proteomics, 11, 1172—1180.

Elias,J.E. et al. (2004) Intensity-based protein identiﬁcation by machine learning
from a library of tandem mass spectra. Nat. Biotechnol, 22, 214—219.

Geer,L.Y. et al. (2004) Open mass spectrometry search algorithm. J. Proteome Res.,
3, 958—964.

Helsens,K. et al. (2010) ms_lims, a simple yet powerful open source laboratory
information management system for MS-driven proteomics. Proteomics, 10,
1261—1264.

Lam,H. et al. (2007) Development and validation of a spectral library searching
method for peptide identiﬁcation from MS/MS. Proteomics, 7, 655—667.

Li,S. et al. (2011) On the accuracy and limits of peptide fragmentation spectrum
prediction. Anal. Chem, 83, 790—796.

Narasimhan,C. et al. (2005) MASPIC: intensity-based tandem mass spectrometry
scoring scheme that improves peptide identiﬁcation at high conﬁdence. Anal.
Chem, 77, 7581—7593.

Paulovich,A.G. et al. (2010) Interlaboratory study characterizing a yeast perform-
ance standard for benchmarking LC-MS platform performance. Mol. Cell.
Proteomics, 9, 242—254.

Perkins,D.N. et al. (1999) Probability-based protein identiﬁcation by searching se-
quence databases using mass spectrometry data. Electrophoresis, 20, 3551—3567.

Sadygov,R. et al. (2006) Central limit theorem as an approximation for intensity-
based scoring function. Anal. Chem, 78, 89—95.

Tabb,D.L. et al. (2007) MyriMatch: highly accurate tandem mass spectral peptide
identiﬁcation by multivariate hypergeometric analysis. J. Proteome Res., 6,
654—661.

Vandermarliere,E. et al. (2013) Getting intimate with trypsin, the leading protease in
proteomics. Mass Spectrom. Rev., [Epub ahead of print, doi: 10.1002/
mas.2l376, June 15, 2013].

Vaudel,M. et al. (2011) Peptide identiﬁcation quality control. Proteomics, 11,
2105—21 14.

Zhang,Z. (2004) Prediction of low-energy collision-induced dissociation spectra of
peptides. Anal. Chem, 76, 3908—3922.

Zhang,Z. (2005) Prediction of low-energy collision-induced dissociation spectra of
peptides with three or more charges. Anal. Chem, 77, 6364—6373.

Zhou,C. et al. (2008) A machine learning approach to explore the spectra intensity
pattern of peptides using tandem mass spectrometry data. BM C Bioinformatics,
9, 325.

 

3203

112 /810's112umo[pJOJXO'sot112u1101utotq//2d11q 111011 pepeolumoq

910K ‘09 lsnﬁnV uo 22

