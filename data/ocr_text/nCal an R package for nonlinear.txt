APPLICATIONS NOTE V°" Zioi‘ibﬂég/Zsiﬁiiﬁﬁt‘iﬁﬁé

 

Systems biology

Advance Access publication August 6, 2013

nCal: an R package for non-linear calibration
Youyi Fong*, Krisztian Sebestyen, Xuesong Yu, Peter Gilbert and Steve Self

Vaccine and Infectious Disease Division, Fred Hutchinson Cancer Research Center, Seattle, WA, USA

Associate Editor: Igor Jurisica

 

ABSTRACT

Summary: Non-linear calibration is a widely used method for quan-
tifying biomarkers wherein concentration-response curves estimated
using samples of known concentrations are used to predict the bio-
marker concentrations in the samples of interest. The R package nCal
fills an important gap in the open source, stand-alone software for
performing non-linear calibration. For curve fitting, nCal provides a
new implementation of a robust, Bayesian hierarchical five-parameter
logistic model. nCal supports a simple graphical user interface that
can be used by laboratory scientists, and contains functionality for
importing data from the multiplex bead array assay instrumentation.
Availability: The R package ‘nCaI’ is available from http://cran.r—pro
ject.org/web/packages/nCal/ under GPL—2 or later.

Contact: yfong@fhcrc.org

Supplementary information: Supplementary information is available
in the form of an R package vignette at the above repository and an
FAQ at http://research.fhcrc.org/youyifong/en/resources/ncal.html.

Received on May 16, 2013; revised on July 25, 2013; accepted on
August 2, 2013

1 INTRODUCTION

Non-linear calibration is a widely used method for quantifying
biomarkers in biomedical studies. There are two stages in non-
linear calibration. In the ﬁrst stage, a concentration-response
curve is estimated for each assay run using observed outcome
for standard samples with known concentrations. An assay run
refers to a batch of samples run closely in time and space, e.g. all
samples run on a single microplate. In the second stage, point
estimates and conﬁdence bounds are estimated for the biomarker
concentrations in the samples of interest.

Many laboratories use commercial software for performing
non-linear calibration. These include general purpose programs
like GraphPad Prism and StatLIA, as well as assay-speciﬁc pro-
grams like MasterPlex and Bio-Plex Manager for the multiplex
bead array assay, which is becoming a common assay for quan-
tifying protein concentrations. Besides being expensive and hard
to automate, these programs provide relatively simple single-
curve ﬁtting methods. Furthermore, they often lack proper pre-
cision estimates for the estimated concentrations.

The R package nCal provides two sets of curve-ﬁtting meth-
ods. The ﬁrst, implemented through another R package drc (Ritz
and Streibig, 2005), is an estimating equation-based method that
is equivalent to those available from most existing non-linear
calibration software. The second, implemented within nCal, is
a robust Bayesian random effects model-based approach

 

*To whom correspondence should be addressed.

(Fong et al., 2012). It allows borrowing of information across
multiple assay runs for the same biomarker, incorporates prior
information regarding the curve-to-curve variability and pro-
vides ﬂexible models for the experimental noise. After obtaining
a curve ﬁt via either approach, nCal estimates the biomarker
concentrations in the samples of interest and computes variance
estimates for the estimated concentrations.

nCal does not have as extensive a graphical user interface as its
commercial counterparts do, but it does contain a simple graph-
ical user interface based on the R package gWidgets that allows
non-R users to perform non-linear calibration. nCal also pro-
vides a function that imports data from the Excel ﬁles of
Luminex® results that have been output by a Bio-Plex instru-
ment’s software.

2 METHODS

Sigmoid—shaped concentration-response curves can be approximated well
by ﬁve-parameter logistic (5PL) curves. Let Yik denote the experimental
outcome, where i indexes assay runs and k indexes standard samples. Let
f5pL(-; 0,) denote the 5PL function with parameter 0,. Estimating equa-
tion-based methods solve the following optimization problem for each
assay run:

é = arggmin Zg{ Yik —f5PL(tk; 90},
i k

where g is a penalty function. For least square method, g(x) = x2; for
robust method, g(x) can be |x|, a trim function or a winsorization func-
tion (Ritz and Streibig, 2005). The estimated concentration for a sample

with observation y is then f<y;  =f5‘11L(y; 
A Bayesian random effects 5PL model was considered by Fong et al.
(2012) and Davidian and Giltinan (1995) and can be described as follows.

Yik =f5PL(tk; 9;) + aik, Oi ~ N(00, precision 29)

0,- is assumed to have a multivariate normal distribution with mean 00
and precision S2. The experimental noise 8,1C can be modeled as having a
normal distribution; for robust methods, it can be modeled as having a
Student’s t-distribution, a mixture of two normal distributions or a latent
ﬁrst-order autoregressive process (Fong et al., 2012). We assume weakly
informative priors on 00 and the parameters of the noise distribution, and
substantive priors on $2 (Fong et al., 2012). The hyperparameters are
listed in the Supplementary Information. Posterior samples are drawn
using Just Another Gibbs Sampler (JAGS) (Plummer, 2003). We take
the median of the posterior samples of 0,- to be its point estimate, and the
median of the posterior samples offs—11L(y; 0,) to be the estimated concen-
tration for a sample with observation y.

As in Davidian and Giltinan (1995), the variance of the estimated
concentration can be decomposed into two components. The ﬁrst
component assumes that the concentration-response curve is perfectly
known and the variability comes from the variability of y. It can be

A 2
estimated as 82{8f5‘1}L<y;0,-)/3y} for both sets of curve ﬁtting

 

© The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2653

112 [3.10811211an[plOJXO'SODBIILIOJIIIOIQ/ﬂ(11111 IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

Y.Fong et al.

 

methods, where 82 is the estimated variance of the experimental noise.
The second component assumes that y is perfectly measured and the
variability comes from the variability of the curve estimate. For the
estimating equation-based methods, it can be estimated by

A A TA A A A A A
{afggL (y; 9,) /ae,} Var(0,) {afggL (y; 9,) /30,}, where Var(0,) is the esti-
mated variance—covariance matrix of 0A,. For the Bayesian random effects

model-based methods, it can be estimated by the variance of the posterior
samples of J’s—11L(y; 0,).

3 EXAMPLE SESSIONS

We illustrate the use of nCal through two examples (see
Supplementary Information for the complete R code and more
detailed explanation of the output). In the ﬁrst example, we
simulate a dataset with one assay run and four samples of inter-
est. To perform non-linear calibration, we call

> res=ncal (log (fi) ~expected_conc, dat,
bcrm. fit=TRUE)

The Boolean argument bcrm.fit controls whether to use bcrm,
which implements the Bayesian random effects model, or drm
from the drc package, which implements the estimating equation
methods for curve ﬁtting. res is a data frame, each row of which
corresponds to one sample of interest. ncal also creates a plot
with four panels (Supplementary Information nCal vignette
Supplementary Fig. S1 and S2), showing the curve ﬁt, the esti-
mated concentrations for the samples of interest and the preci-
sion proﬁles. From the two ﬁgures, we see that both curve ﬁtting
methods lead to similar calibration results for this example.

In the second example, we analyze a dataset containing four
assay runs, one of which is affected by multiple outliers.

> fit.bcrm=bcrm(log (fi) ~expected_conc, dat,
error.model=’ ’gh_t4 ’ ’ , informative .priorzT)
> for (i in 1:4) {
fit.drm=drm(log(fi) ~expected_conc, data:
dat, subset=assay_id==paste ( ’ ’Run' ' , i) ,
fct=LL. 5 () , robustz’ ’median’ ’)
plot(fit.drm, type=' ' all ' ' , main=p)
plot(get.single.fit(fit.bcrm,
paste( ’ ’Run’ ’ , i) ) ,addzT)
}

Figure 1 shows that the two methods produce similar results
for Runs 1, 3 and 4, but differs signiﬁcantly for Run 2. Figure 1
also shows the curve ﬁts by Prism with the robust option. By
borrowing information across assay runs, bcrm appears more
successful at reducing the inﬂuence of multiple outlying observa-
tions than drm and Prism.

Run 1 Run 2

 

 

   
  
   

   
  
   

 

 

 

 

 

 

 

 

       

 

 

 

 

 

 

{—03, 6 — 5) 6 _
4 — — Prism, robust 4 — — Prism, robust
--- drm, median --- drm, median
— bcrm, t4 — bcrm,t4
2 - 2 _
I I I I I I I I I I
1 10 100 1000 10000 1 10 100 1000 10000
expected_conc expected_conc
Run 3 Run 4
10 - 10 -
8 - 8 -
g 6 — § 6 —
2 2
4 _ — Prism, robust 4 _ — Prism, robust
--- drm, median --- drm, median
2 _ — bcrm, t4 2 _ — bcrm,t4
I I I I I I I I I I
1 10 100 1000 10000 1 10 100 1000 10000

expected_co nc expected_conc

Fig. 1. Example II. Robust curve ﬁts from Prism, drm and bcrm

ACKNOWLEDGEMENTS

The authors thank members of the Lab Data Operations at
SCHARP for assay data quality control. They also thank the
members of the CRAN team for testing and distributing the
package. The authors are grateful to the editor, the associate
editor and the referees for their constructive comments.

Funding: This work was supported by the National Institute of
Allergy and Infectious Diseases (NIAID) [UMl-AI-068618] to
the HIV Vaccine Trials Network, the Bill and Melinda Gates
Foundation [OPP1032317] to the Collaboration for AIDS
Vaccine Discovery and the NIAID [AIlO4370—01] to Y.F.

Conflict of interest: none declared.

REFERENCES

Davidian,M. and Giltinan,D. (1995) Nonlinear models for repeated measurement
data. Vol. 62, Chapman & Hall/CRC, Boca Raton, FL, USA.

Fong,Y. et al. (2012) A robust Bayesian random effects model for nonlinear
calibration problems. Biometrics, 68, 1103—1112.

Plummer,M. (2003) JAGS: a program for analysis of Bayesian graphical models
using Gibbs sampling. In: Proceedings of the 3rd International Workshop on
Distributed Statistical Computing. 2003, p. 20—22. Vienna, Austria.

Ritz,C. and Streibig,]. (2005) Bioassay analysis using R. J. Stat. Software, 12, 1—22.

 

2654

112 [glO'SIBILInO[p.IOJXO'SODBIIIlOJIIIOIQ/ﬂ(11111 IIIOJJ papeolumoq

910K ‘09 lsnﬁnV no :2

