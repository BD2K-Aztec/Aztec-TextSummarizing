APPLICA TIONS NOTE V°"312.5%.fggi‘iéi’giﬁéfiiié’E/Lﬁiﬁ

 

Gene expression

Advance Access publication August 13, 2014

READemption—a tool for the computational analysis of
deep-sequencing—based transcriptome data
Konrad U. Forstner1’2, Jorg Vogel1 and Cynthia M. Sharma2’*

1Institute for Molecular Infection Biology and 2Research Centre for Infectious Diseases (ZINH, University of WUrzburg,

D—97080 WUrzburg, Germany

Associate Editor: lvo Hofacker

 

ABSTRACT

Summary: RNA-Seq has become a potent and widely used method to
qualitatively and quantitatively study transcriptomes. To draw biolo-
gical conclusions based on RNA-Seq data, several steps, some
of which are computationally intensive, have to be taken. Our
READemption pipeline takes care of these individual tasks and inte-
grates them into an easy-to-use tool with a command line interface. To
leverage the full power of modern computers, most subcommands of
READemption offer parallel data processing. While READemption was
mainly developed for the analysis of bacterial primary transcriptomes,
we have successfully applied it to analyze RNA-Seq reads from other
sample types, including whole transcriptomes and RNA immunopre-
cipitated with proteins, not only from bacteria but also from eukaryotes
and archaea.

Availability and implementation: READemption is implemented in
Python and is published under the ISO open source license. The
tool and documentation is hosted at http://pythonhosted.org/
READemption (DOI:10.6084/m9.figshare.977849).

Contact: cynthia.sharma@uni-wuerzburg.de and konrad.foerstner@
uni-wuerzburg.de

Received on April 1, 2014; revised on July 13, 2014; accepted on
August 1, 2014

1 INTRODUCTION

RNA-Seq, the examination of cDNA by massively parallel
sequencing technologies, is a potent way to perform transcrip-
tome analyses at single-nucleotide resolution and with a high
dynamic range Wang et al., 2009). It has been successfully
used to annotate transcript boundaries and to identify novel
transcripts such as small regulatory RNAs in both prokaryotes
and eukaryotes (Filiatrault, 2011; Ozsolak and Milos, 2011).
Most prominently, it can be applied to quantify the expression
levels of genes, having been shown to be more powerful to detect
changes in gene expression than microarrays (Zhao et al., 2014).
It can also be used to study the interaction of proteins and RNAs
through performing RNA-Seq of coimmunoprecipation (coIP)
samples (Kcnig et al., 2012). Likewise, any other subset of RNA
molecules from, for instance, RNA size-fractionation, ribosome
proﬁling, metatranscriptomics or degradome proﬁling experi-
ments can be sequenced. Owing to decreasing costs and ever
increasing speed of deep sequencing, the bioinformatical analysis
has become a bottleneck of RNA-Seq—based projects.

 

*To whom correspondence should be addressed.

We have created an automated RNA-Seq processing pipeline
named READemption with the initial purpose to handle differ-
ential RNA-Seq (dRNA-Seq) data for the determination of
transcriptional start sites in bacteria (Sharma et al., 2010,
Sharma and Vogel, 2014). We saw the need for this, as other
available RNA-Seq analysis pipelines (e.g. Delhomme et al.,
2012, McClure et al., 2013) were not designed for this applica-
tion. Additionally, while most available RNA-Seq pipelines put
priority on fast mapping, we have chosen segemehl as short
read aligner (Hoffmann et al., 2009). This mapper has a relatively
high demand of memory and computation capacities but, in
return, it offers high sensitivity as well as a low false-discovery
rate and can perform multiple splitting of reads (Otto et al.,
2014). We have since extended the functionality of this Python-
based pipeline, so that it is now capable of analyzing RNA-Seq
reads from a wide range of experiments. We have successfully
applied READemption for the analyses of RNA samples from
bacterial, archaeal and eukaryotic species as well as for RNA
virus genomes (e.g. Dugar et al., 2013; Zhelyazkova et al., 2012).
It is able to work with reads from both Illumina and 454
platforms of different lengths and can be used for single- and
paired-end sequenced libraries.

2 DESCRIPTION

READemption integrates the steps that are required to interpret
and gain biological knowledge from RNA-Seq experiments in
one tool and makes them accessible via a consistent command
line interface. Additionally, it conducts parallel data processing
to reduce the runtime. The tool performs quality trimming,
poly(A) and adapter clipping as well as size ﬁltering of raw
cDNA reads from different sequencing platforms, mapping to
reference sequences, coverage calculation, gene-based quantiﬁca-
tion and comparison of expression levels. A summary of the
pipeline’s workﬁow is depicted in the ﬂow chart in Figure 1A.
Moreover, it provides several statistics such as read mappability
and generates plots and ﬁles for the visualization of the results in
genome browsers (for examples, see Fig. 1B).

READemption was designed as high-performance application
and follows the concept of “convention over conﬁguration’. This
includes the use of established default parameter values and the
approach that ﬁles are placed or linked into deﬁned paths and
are then treated accordingly. The names of the input read ﬁles
are used to generate names for the associated output ﬁles.
Though the described design principle, READemption offers

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com 3421

112 /§JO'S{Bumo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁdllq 11101; pepBOIUAAOG

9IOZ ‘091sn3nv uo ::

K.U.Forstner et aI.

 

 

 

A /Reads(Fasta/Fastq) // Reference sequences (Fasta)/

 

Read preparation

 

 

 

Aligning
Report generation / Gene annotations (GFF) /

Aligned reads (BAM) Gene-wise
Report (CSV) read quantiﬁcation

Coverage calculation Gene-wise read countings (CSV) /

v v V

/Coverage f'iles(Wiggle)/| DESeq2 l Visualisation

v

—) Visualisation Gene expression { Plots (PDF) /
comparisons data (CSV)
Plots (PDF) I l f /
Visualisation Plots (PDF)

7 1
B .II-I'u' ll'|.-"l:I-' :-' 'I.I:l'\. '.I- IIH‘u-II‘w-u-
.4

I: _'!1. “ml HIM 1urn-II LI.‘I'. u'l 'l-"II-II - .llhAul'l "U'II'II
4H"! MMM -'-l. I".'la III"\-|' - II'H‘ I'III Il'l- 'l-I' - IIIM‘u-I'III ""1"

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Jc' ' I
!

ILI' .u' '.I.I' I'_-" Ic' '.I.I' I'J Ic'

 

 

 

 

 

Fig. 1. (A) Data and work ﬂow of READemption including the input,
output and the performed steps. (B) Examples of plots generated by
READemption (a bar plot of the read distribution mapped to the differ-
ent RNA classes; a scatterplot of gene expression levels of two libraries; a
histogram of read length after poly(A) trimming)

several parameters, which enable the user to adapt its execution
to the speciﬁc needs.

READemption provides the subcommands align, cover—
age, gene_quanti, deseq, viz_align, viz_gene_
quanti and viz_deseq, which combine several processing
substeps into comprehensible units.

Read processing and mapping: The fundamental tasks of
preprocessing the input reads and aligning them to reference
sequences is covered by the subcommand align. In an initial
step, READemption parses the input read ﬁles in Fasta or Fastq
format, performs quality trimming, removes adapters and/or
poly(A)-tails introduced during the library preparation and
discards reads shorter than a given cutoff (default l2nt).

For the alignment of reads to reference sequences, the short
read mapper segemehl and its remapper lack (Hoffmann
et al., 2009, Otto et al., 2014) are used. To have high conﬁdence
of read mappings even for short sequences, the required mapping
accuracy of 95% is used per default. The mapping is followed by
the conversion of the resulting Sequence Alignment/Map format
(SAM) alignment ﬁles into Binary Alignment/Map format
(BAM) ﬁles and the generation of mapping statistics. The
latter summarizes the numbers of uniquely and multiple
mapped reads as well as the number of alignments, clipping
and ﬁltering events for each genomic element in table format.

Coverage calculation: Based on the read alignments provided
in the BAM ﬁles, cDNA coverage ﬁles can be generated using
the subcommand coverage. It creates several wiggle ﬁles that
are based on different normalization methods such as the div-
ision by the total number of aligned reads and represents the
nucleotide-wise CDNA coverage in a strand-speciﬁc manner.
To visually inspect the reads mapped to the individual CDNA
libraries and to compare them among each other, these wiggle
ﬁles can be loaded into common genome browsers.

Gene expression quantification: The read alignments can also
be further used by the subcommand gene_quanti to calculate
gene-wise read counts. For this purpose, annotation ﬁles includ-
ing gene positions in GFF3 format (Gene feature format) have to
be provided. For each annotation entry, the number of reads
that are overlapping with a user-deﬁned number of nucleotides
(default 1 nt) are reported. To also detect non-annotated anti-
sense transcripts, the reads which are mapped in antisense direc-
tion to a given annotation can be quantiﬁed. Besides raw gene-
wise read countings, normalized values—by total number of
aligned reads as well as reads per kilobase per exon model per
million mapped reads (RPKM) (Mortazavi et al., 2008)—are
returned.

Diﬂerential gene expression analysis: For pairwise expression
comparison, the subcommand deseq offers statistical analysis
based on the approach implemented in DESeq2 (Anders and
Huber, 2010, Love et al., 2014), which builds on the raw read
counting and is a widely adapted and intensively tested library
(Guo et al., 2013, Rapaport et al., 2013, Reeb and Steibel, 2013).
The user has to specify the conditions of the libraries to let
DESeq2 treat replicates accordingly. The results of DESeq2
are reformated and supplemented with the provided gene
annotations.

Plotting: The ﬁnal three subcommands called viz_align,
viz_gene_quanti and viz_deseq generate several visual-
izations that help to interpret the result of the subcommand
align, gene_quanti and deseq, respectively. The diverse
plots contain among others histograms of the read length distri-
butions before and after the read clipping, volcano plots and MA
plots (log ratios (M) versus arithmetic mean of expression values
(A)) of the differential gene expression analysis.

READemption requires Python 3.2 or higher (http://python.
org), Biopython (Cock, 2009), matplotlib (Hunter, 2007)
and numpy (Oliphant, 2007) as well as the samtools (Li et al.,
2009) wrapper pys am (http://pypi.python.org/pypi/pysam/). The
subcommand deseq relies on an R (http://cran.r-project.org)
installation and the bioconductor package DESeq2 (Anders
and Huber, 2010, Love et al., 2014). Instructions how to install
READemption and how to execute its subcommands including

 

3422

112 /310's113umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘091sn3nv uo ::

The READemption RNA-Seq pipeline

 

examples can be found in the documentation. Additionally, an
Ubuntu live and installation image with READemption prein-
stalled is available for download.

3 CONCLUSIONS

We present an open source pipeline for the analysis of RNA-Seq
data from all domains of life. READemption generates several
output ﬁles that can be examined with common ofﬁce suites,
graphic programs and genome browsers. Its features make it a
useful tool for anybody interested in the computational analysis
of RNA-Seq data with the required basic command line skills.

ACKNOWLEDGEMENTS

The authors thank members of the Sharma and the Vogel
groups, especially Thorsten Bischler and Lei Li for testing and
constructive feedback.

Funding: Work in the Sharma and Vogel laboratories is sup-
ported by the Bavarian Research Network for Molecular
Biosystems (BioSysNet). The JV laboratory received ﬁnancial
support from a BMBF eBio grant RNAsys and DFG project
VO 875/4—2. The CMS laboratory received ﬁnancial support
from the ZINF Young Investigator program at the Research
Center for Infectious Diseases (ZINF, Wiirzburg, Germany),
DFG project Sh580/l-l, and the Young Academy program of
the Bavarian Academy of Sciences.

Conﬂict of interest: none declared.

REFERENCES

And6rS,S. and Huber,W. (2010) Differential expression analysis for sequence count
data. Genome Biol, 11, R10.

Cock,P.J. et al. (2009) Biopython: freely available Python tools for computational
molecular biology and bioinformatics. Bioinformatics, 25, 1422—1423.

Delhomm6,N. et al. (2012) easyRNASeq: a bioconductor package for processing
RNA-Seq data. Bioinformatics, 28, 2532—2533.

Dugar,G. et al. (2013) High-resolution transcriptome maps reveal strain-speciﬁc
regulatory features of multiple Campylobacter jejuni isolates. PLoS Genet., 9,
61003495.

Filiatrault,M.J. (2011) Progress in prokaryotic transcriptomics. Curr. Opin.
Microbiol, 14, 579—586.

Guo,Y. et al. (2013) Evaluation of read count based RNAseq analysis methods.
BM C Genomics, 14 (Suppl. 8), S2.

Hoffmann,S. et al. (2009) Fast mapping of short sequences with mismatches,
insertions and deletions using index structures. PLoS Comput. Biol, 5,
61000502.

Hunter,J.D. (2007) Matplotlib: a 2D graphics environment. Comput. Sci. Eng, 9, 90.

Konig,J. et al. (2012) Protein-RNA interactions: new genomic technologies and
perspectives. Nat. Rev. Genet., 13, 77—83.

Li,H. et al. (2009) The sequence alignment/map format and SAMtools.
Bioinformatics, 25, 2078—2079.

Love,M. et al. (2014) Moderated estimation of fold change and dispersion for
RNA-Seq data with DESeq2. bioinv, preprint doi:10.1101/002832.

McClur6,R. et al. (2013) Computational analysis of bacterial RNA-Seq data.
Nucleic Acids Res., 41, 6140.

Mortazavi,A. et al. (2008) Mapping and quantifying mammalian transcriptomes by
RNA-Seq. Nat. Methods, 5, 621—628.

Oliphant,T.E. (2007) Python for scientiﬁc computing. Comput. Sci. Eng., 9, 90.

Otto,C. et al. (2014) Lacking alignments? The next generation sequencing mapper
segemehl revisited. Bioinformatics, 30, 1837—1843.

Ozsolak,F. and Milos,P.M. (2011) RNA sequencing: advances, challenges and
opportunities. Nat. Rev. Genet., 12, 87—98.

Rapaport,F. et al. (2013) Comprehensive evaluation of differential gene expression
analysis methods for RNA-seq data. Genome Biol, 14, R95.

Reeb,P.D. and St6ib61,J .P. (2013) Evaluating statistical analysis models for RNA
sequencing experiments. Front Genet., 4, 178.

Sharma,C.M. et al. (2010) The primary transcriptome of the major human pathogen
Helicobacter pylori. Nature, 2, l4.

Sharma,C.M. and Vog61,J . (2014) Differential RNA-seq: the approach behind and
the biological insight gained. Curr. Opin. Microbiol, 19, 97—105.

Wang,Z. et al. (2009) RNA-Seq: a revolutionary tool for transcriptomics. Nat. Rev.
Genet., 10, 57—63.

Zhao,S. et al. (2014) Comparison of RNA-Seq and microarray in transcriptome
proﬁling of activated T cells. PLoS One, 9, 678644.

Zhelyazkova,P. et al. (2012) The primary transcriptome of barley chloroplasts: nu-
merous noncoding RNAs and the dominating role of the plastid-encoded RNA
polymerase. Plant Cell, 24, 123—136.

 

3423

112 /810's113umo [p.IOJXO'SOIlBIHJOJUIOICI/ﬁdllq 11101; prBOIUAAOG

9IOZ ‘091sn3nv uo ::

