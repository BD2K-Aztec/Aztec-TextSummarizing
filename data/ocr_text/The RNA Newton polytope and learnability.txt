Vol. 29 ISMB/ECCB 2013, pages i300—i307
doi:10. 1093/bioinformatics/btt226

 

The RNA Newton polytope and learnability of energy parameters

Elmirasadat Forouzmand and Hamidreza Chitsaz*
Department of Computer Science, Wayne State University, Detroit, MI 48202, USA

 

ABSTRACT

Motivation: Computational RNA structure prediction is a mature im-
portant problem that has received a new wave of attention with the
discovery of regulatory non-coding RNAs and the advent of high-
throughput transcriptome sequencing. Despite nearly two score
years of research on RNA secondary structure and RNA—RNA inter-
action prediction, the accuracy of the state-of—the—art algorithms are
still far from satisfactory. So far, researchers have proposed increas-
ingly complex energy models and improved parameter estimation
methods, experimental and/or computational, in anticipation of
endowing their methods with enough power to solve the problem.
The output has disappointingly been only modest improvements, not
matching the expectations. Even recent massively featured machine
learning approaches were not able to break the barrier. Why is that?
Approach: The first step toward high-accuracy structure prediction is
to pick an energy model that is inherently capable of predicting each
and every one of known structures to date. In this article, we introduce
the notion of learnability of the parameters of an energy model as a
measure of such an inherent capability. We say that the parameters of
an energy model are learnable iff there exists at least one set of such
parameters that renders every known RNA structure to date the min-
imum free energy structure. We derive a necessary condition for the
learnability and give a dynamic programming algorithm to assess it.
Our algorithm computes the convex hull of the feature vectors of all
feasible structures in the ensemble of a given input sequence.
Interestingly, that convex hull coincides with the Newton polytope of
the partition function as a polynomial in energy parameters. To the
best of our knowledge, this is the first approach toward computing the
RNA Newton polytope and a systematic assessment of the inherent
capabilities of an energy model. The worst case complexity of our
algorithm is exponential in the number of features. However, dimen-
sionality reduction techniques can provide approximate solutions to
avoid the curse of dimensionality.

Results: We demonstrated the application of our theory to a simple
energy model consisting of a weighted count of A—U, C-G and G-U
base pairs. Our results show that this simple energy model satisfies
the necessary condition for more than half of the input unpseudo-
knotted sequence—structure pairs (55%) chosen from the RNA
STRAND v2.0 database and severely violates the condition for
~13%, which provide a set of hard cases that require further investi-
gation. From 1350 RNA strands, the observed 3D feature vector for
749 strands is on the surface of the computed polytope. For 289 RNA
strands, the observed feature vector is not on the boundary of the
polytope but its distance from the boundary is not more than one.
A distance of one essentially means one base pair difference between
the observed structure and the closest point on the boundary of the
polytope, which need not be the feature vector of a structure. For

 

*To whom correspondence should be addressed.

171 sequences, this distance is larger than two, and for only 11
sequences, this distance is larger than five.

Availability: The source code is available on http://compbio.cs.wayne.
edu/software/rna—newton-polytope.

Contact: chitsaz@wayne.edu

1 INTRODUCTION

Computational RNA structure and RNA—RNA interaction
prediction have always been important problems, particularly
now that RNA has been shown to have key regulatory roles in
the cell (Bartel, 2004; Brantl, 2002; Gottesman, 2005; Hannon,
2002; Storz, 2002; Wagner and F lardh, 2002; Zamore and Haley,
2005). Furthermore, with the advent of synthetic biology at the
whole organism level (Gibson et al., 2010), high-throughput
accurate RNA engineering algorithms are required for both
in vivo and in vitro applications (Seeman, 2005; Seeman and
Lukeman, 2005; Simmel and Dittmer, 2005; Venkataraman
et al., 2007; Yin et al., 2008). Since the dawn of RNA secondary
structure prediction nearly two score years ago (Tinoco et al.,
1973), the research community has proposed increasingly
complex models and algorithms, hoping that reﬁned features
together with better methods to estimate their parameters
would solve the problem. Early approaches considered mere
base pair counting, followed by the Turner thermodynamics
model, which was a signiﬁcant leap forward. Recently, massively
feature-rich models empowered by parameter estimation algo-
rithms have been proposed, but they provide only modest
improvements.

Despite signiﬁcant progress in the last three decades, made
possible by the work of Mathews et al. (1999) on measuring
RNA thermodynamic energy parameters and the work of several
groups on novel algorithms (Bernhart et al., 2006; Chitsaz et al.,
2009a, b; Dirks and Pierce, 2003; McCaskill, 1990; Nussinov
et al., 1978; Rivas and Eddy, 1999; Waterman and Smith,
1978; Zuker and Stiegler, 1981) and machine learning
approaches (Andronescu et al., 2010; Do et al., 2006; Zakov
et al., 2011), the RNA structure prediction accuracy has not
reached a satisfactory level yet (Rivas et al., 2012). Why is it
so? Up to now, human intuition and computational convenience
have led the way. We believe that human intuition has to be
equipped with systematic methods to assess the suitability of a
given energy model. Surprisingly, there is not a single method to
assess whether the parameters of an energy model are learnable.
We say that the parameters of an energy model are learnable iff
there exists at least one set of such parameters that renders every
known RNA structure to date, determined through radiograph
or NMR, the minimum free energy structure. Equivalently, we
say that the parameters of an energy model are learnable iff
100% structure prediction accuracy can be achieved when
the training and test sets are identical. The first step toward
high-accuracy structure prediction is to make sure that the

 

© The Author 2013. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/
by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial

re-use, please contact journals.permissions@oup.com

112 [3.10811211an[plOJXO'SODBIIIJOJIITOTQ/[Z(11111 IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

RNA Newton polytope

 

energy model is inherently capable, i.e. its parameters are learn-
able. In this work, we provide a necessary condition for the
learnability and an algorithm to verify it. The problem of learn-
ability was previously studied for sequence alignment using simi-
lar methods (Dewey et al., 2006). To the best of our knowledge,
this is the first approach toward a systematic assessment of the
suitability of an energy model for RNA structure prediction.
Note that a successful RNA folding algorithm needs to have
the generalization power to predict unseen structures as well.
However, if an energy model is inherently incapable of predicting
known structures correctly, then it does not matter if it has the
generalization power. We leave analysis of the generalization
power for future work.

2 BACKGROUND
2.1 RNA secondary structure models

An RNA secondary structure model is often a context-free gram-
mar together with a scoring function for either the rules, in the
case of stochastic context-free grammars (SCFGs) (Eddy and
Durbin, 1994), or the alphabet, in the case of thermodynamics
models (Mathews et al., 1999). Such scoring functions induce
scoring on the entire generated language. The word with optimal
score then yields a predicted structure for the given sequence.
For the sake of brevity, we focus on thermodynamics models
in this article, but it is obvious that our methods apply to
other models including SCF G as well. In our context, the scoring
function is the thermodynamics free energy. A secondary struc-
ture y of a nucleic acid is decomposed into loops, a free energy
is associated with every loop in y and the total free energy G for y
is the sum of loop free energies (Mathews et al., 1999). The same
loop decomposition principle applies to interacting nucleic acids
such that the total free energy G is still the sum of the free
energies of loops and interaction components (Chitsaz et al.,
2009b).

2.2 Estimation of energy parameters

Generally, RNA structure prediction algorithms are divided into
probabilistic and non-probabilistic categories. Besides machine
learning approaches for the probabilistic methods, e.g. SCFGs,
which are evaluated in (Rivas et al., 2012), existing machine
learning algorithms for parameter estimation in the non-prob-
abilistic RNA structure prediction can be grouped into two
categories:

0 Likelihood-based methods, where the maximum likelihood
or maximum conditional likelihood principle is used to
estimate the parameters of the model (e.g. Do et al., 2006);
and

o Large-margin methods, where the model parameters are
estimated to maximize the margin between the score of the
true structure and the second best structure. This has been
done using an online passive-aggressive training algorithm
(Zakov et al., 2011) and Iterative Constraint Generation
(Andronescu et al., 2007).

The likelihood-based techniques estimate the best Gibbs distri-
bution, which not only assists in predicting the best secondary

structure but also is used in determining the thermodynamic
parameters. Besides some probabilistic methods (Rivas et al.,
2012), one of the most successful methods for learning the
thermodynamics of RNA has been the MCL method, as in
CONTRAfold (Do et al., 2006), which maximizes the probability
of RNA structures y given RNA sequences x for the training set
D. That is, the conditional log likelihood of the training data
(using the Boltzmann distribution) is maximized to estimate the
best model parameters h* 6 IR":

11* .= . =
. arg mlax L(D, h) mlax Z logp(y|x, h) (1)
(x,y)eD

e—G(x,y, h)/RT
Q(x, h)

where k denotes the number of different motifs deﬁned in the
energy model, R is the gas constant, T is the absolute tempera-
ture, G(x, y, h) is the free energy and

Q(x,h) :2 Z e—G(x,s,h)/RT 

se8(x)

190496911) 3: (2)

is the partition function (Chitsaz et al., 2009b; Dirks and Pierce,
2003; McCaskill, 1990) with 8(x) being the ensemble of possible
structures of x. The free energy

G(x, s, h) :2 (C(x, s), h) (4)

is a linear function of the parameters h where C(X, s) e Z" is the
features vector.

The best performing method for RNA STRAND v2.0 is
Contextfold (Zakov et al., 2011). However, Contextfold per-
forms worse than other methods in other datasets that are struc-
turally different from RNA STRAND v2.0 (Rivas et al., 2012).
Essentially, it seems that Contextfold suffers from overﬁtting
because it uses a myriad of features in its model. A systematic
evaluation of the learnability using our algorithm in this article
may help design a more concise set of features that is powerful
enough to achieve high accuracy but not too powerful to suffer
from overﬁtting.

3 LEARNABILITY

The question that we ask before parameter estimation is ‘does
there ever exist parameters h7L such that for every (x, y) e D,
y = argmins G(x,s,hi)?’ If the answer to this question is no,
then there is no hope that one can ever achieve 100% accuracy
using the given model. The answer reveals inherent limitations
of the model, which can be used to design improved models.
We provide a necessary condition for the existence of h and
a dynamic programming algorithm to verify it through comput-
ing the Newton polytope for every x in D. We will deﬁne the
RNA Newton polytope below. Not only our algorithm provides
a binary answer, it also quantiﬁes the distance from the bound-
ary. For our 3D model, this distance roughly captures the dif-
ference between the number of base pairs in the observed
structure and the number of base pairs in the closest point on
the boundary of the polytope. Note that the closest point on the
boundary of the polytope need not be the feature vector of a
structure.

 

112 [3.10811211an[plOJXO'SODBIIIJOJIIIOIQ/[Z(11111 IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV uo ::

E.Forouzmand and H. Chitsaz

 

4 METHODS

4.1 Necessary condition for learnability

Let (x, y) e D and hi- e R". Assume y minimizes G(x, s, hi.) as a function
of s. In that case

G(x, y, hi) 5 G(x,s,hi), v s e 8(x). (5)
Replacing equation (4) above,
(C(x, y),hi) 5 (C(x,s),hi), v s e 8(x) (6)
o 5 (C(x,s) — C(x, y),hi), v s e 8(x). (7)
Deﬁne the feature ensemble of sequence x by
.7:(x) 2: {C(X,S) | s e 8(x)} c 2". (8)

In that case, equation (7) implies that
o 5 (.7:(x) — C(x, y),hi). (9)
We call the convex hull of .7: (x) the Newton polytope of x,
N(x) 2: conv{.7-"(x)} C R". (10)

We remind the reader that the convex hull of a set, denoted by ‘conv’
hereby, is the minimal convex set that fully contains the set. The reason
for naming this polytope the Newton polytope will be made clear below.
Inequality equation (9) implies that c(x, y) e 3N (x) is on the boundary of
the convex hull of the feature ensemble of x with a support hyperplane
normal to h . Therefore, we have the following theorem.

THEOREM 1. Let (x, y) e D and 0 75 hi e R". Assume y minim-
izes G(x, s, h ) as a function of s. In that case, c(x, y) e 3N(x), i.e. the fea-
ture vector of (x, y) is on the boundary of the Newton polytope of x.

PROOF. To the contrary, suppose c(x, y) is in the interior of N (x).
Therefore, there is an open ball of radius 8 >0 centered at c(x, y) com-
pletely contained in N(x), i.e.

Ba(c(x,y)) C N(x)- (11)
Let

hi
10 = C(x,y) -(6/2)—T.
||h II

It is clear that p e Ba(c(x, y)) C N(x) since ||p — c(x, y)|| = 6/2<8.
Therefore, 1) can be written as a convex linear combination of the feature
vectors in .7-"(x) 2 {V1, ..., vN}, i.e.

Ela1,...aNZO:a1v1+---+anN=p (12)
a1+---+aN=1. (13)

Note that
(p— c(x.y).hi) = —(6/2)nhin<o. (14)

Therefore, there is 1 5 i 5 N, such that (v,- — C(x, y), hi.) < 0 for otherwise,

N
(p — c(x.y). bi) = Zm<n — c(x.y). hi) 2 o (15)

i=1
which would be a contradiction with equation (14). It is now sufﬁcient
to note that v,- e .7: (x) and (v,- — c(x, y), hi.) <0, which is a contradiction
with equation (9). El

COROLLARY 1. (Necessary Condition for the Learnability). For
(x, y) e D, a necessary but not sufﬁcient condition for the existence of
h such that y minimizes G(x, s, h ) as a function of s is that c(x, y) lies on
the boundary of N (x) the Newton polytope of x.

4.2 Relation to the Newton polytope

In addition to D, the set of experimentally determined structures, we
often have a repository of thermodynamic measurements, e.g. melting
curves, which can help better estimate the energy parameters.
Currently, optical melting measurements are analyzed using a two-state
model (Siegfried and Bevilacqua, 2009). However, a more accurate ana-
lysis of such melting experiments can be done through relating the meas-
urements to the energy parameters through equations involving the
partition function and its derivatives with respect to temperature
(Chitsaz et al., 2009b). We show that with a change of variables, the
partition function becomes a polynomial. Therefore, such equations
become a system of polynomial equations the solving of which algebra-
ically requires computation of the Newton polytope of each polynomial
(Emiris, 1994; Emiris and Canny, 1995). Recall the partition function
deﬁned in equation (3) and energy in equation (4), and conclude

Q(x,h) : Z e—(c(x,s),h)/RT' 

se8(x)

Let c(x,s) = (c1(x,s), ...,ck(x,s)) and h = (h, ...,hk). Deﬁne new
variables

Z,- := e‘hi/RT, 1 5 is k (17)
and replace them in equation (16). We obtain the partition function

Q(x.z) = Z 200‘,” (18)

se8(x)

in the form of a polynomial in IR[Z] where

k
Zc(x,s) :: “219083) (19)

i=1

is a monomial as 0 5 ci(x,s) e Z. The Newton polytope of Q is deﬁned
to be the convex hull of the monomials power vectors, i.e.

Newton{Q(x,Z)} 2: conv({c(x,s) | s e 8(x)}) = N(x). (20)
That is why we call N (x) the Newton polytope of x.

4.3 RNA Newton polytope algorithm

We give a dynamic programming algorithm to compute the Newton
polytope for a given nucleic acid sequence x. Denote the length of x by
L and the ith nucleotide in x by n). Denote the subsequence of x from the
ith to the fh nucleotide, inclusive of ends, by n,- - - -nj. The following lemma
allows us to formulate a divide-and-conquer strategy for computing the
Newton polytope, which will in turn lead to our dynamic programming
algorithm.

LEMMA 1. Let f and g be two polynomials in IR[Z]. The Newton
polytope of the product of f and g is the Minkowski sum of individual
Newton polytopes, and the Newton polytope of the sum of f and g is the
convex hull of the union of individual Newton polytopes, i.e.

Newton (fg) 2 Newton (f) EB Newton (g) (21)

Newton (f + g) = conv{Newton (f) U Newton (g)} (22)

in which EB represents the M inkowski sum of two polytopes (Emiris, 1994).
This lemma allows us to use the same divide-and—conquer strategy that
was used for calculating the partition function (Chitsaz et al., 2009b;
Dirks and Pierce, 2003; McCaskill, 1990). We can use the same recursions
(grammar) as in the partition function algorithm but with the Minkowski
sum EB instead of multiplication, convex hull of union instead of summa-
tion and the corresponding feature vector c instead of e_(c’h)/RT.
Furthermore, because union is invariant with respect to repetition of
points, the dynamic programming is allowed to be redundant, or equiva-
lently the grammar is allowed to be ambiguous. Hence, any complete

 

i302

112 [3.10811211an[plOJXO'SODBIIIJOJIIIOIQ/[Z(11111 IIIOJJ popeolumoq

910K ‘09 lsnﬁnV uo 22

RNA Newton polytope

 

RNA structure or RNA—RNA interaction prediction dynamic program-
ming algorithm can be transformed into a Newton polytope algorithm by
replacing the energy with the corresponding feature vector, summation
with the Minkowski sum EB and minimization with the convex hull of
union.

As explained above, we transform any complete partition function or
structure prediction dynamic programming algorithm, for single RNA,
RNA—RNA interaction or multiple interacting RNAs, into a Newton
polytope algorithm. For the sake of illustration, we explicitly spell
below only the case of single RNA with separate A-U, C—G and G-U
base pair counting energy model. All the other cases are trivially obtained
following the transformations above.

In this case, the feature vector

C(x, S) = (61(x, S), 62(x, S), 63(x, S))

is 3D: c1(x,s) is the number of A—U, cz(x,s) the number of C-G and
C3 (x,s) the number of G-U base pairs in s. Our dynamic programming
algorithm starts by computing the Newton polytope for all unit length
subsequences, followed by all length two subsequences, . . . ,up to the
Newton polytope for the entire sequence x. We denote the Newton poly-
tope of the subsequence n,- - - -nj by N (i, j), i.e.

N (131’) 1: N01;- - - 411) (23)
The following dynamic programming will yield the result
N(i,£)EB/V'(£+ 1,1), is e Sj— 1
{(1,0, 0)} EBA/(14 1,j— 1) if m,- = AU|UA (24)
{(0,1,0)}EBN(i+1,j— 1) if ninj = CG|GC

conv U

with the base case N (i, i) = {(0, 0, 0)}. To compare with only (AU, CG)
base pair counting, we also compute the 2D Newton polygon by just
projecting the 3D polytope onto the ﬁrst two coordinates.

There are two different approaches for polytope representation: (i)
vertex representation, which is a set of points, and (ii) half plane repre-
sentation, which is a set of linear inequalities. The former is often called
V—representation and the latter H-representation. Although they are
equivalent, and there are algorithms to transform one into the other,
computing Minkowski sum is more convenient with the V—representation,
and convex hull of union works more efﬁciently with the H-representa—
tion. The choice of representation and algorithms will affect the running
time. In this article, we use the V—representation. Owing to the complexity
of the convex hull problem, the worst case complexity of our algorithm is
exponential in the number of features.

4.4 Veriﬁcation of the necessary condition

On computation of N (x) and C(x, y), the feature vector of the experimen-
tally determined structure, it remains to verify whether c(x, y) E 8N(x).
Often, N (x) is represented by its vertices (1)-representation) or its
conﬁning half planes (H-representation), two equivalent representations
that can be transformed into one another. In an H-representation, c(x, y)
is on the boundary of N (x) iff there is at least one conﬁning plane on
which c(x, y) lies. This is true because c(x, y) e N (x) anyways. Therefore,
the necessary condition can be easily checked by checking membership
of c(x, y) in every conﬁning plane. Because the vertices of N (x) are on the
integer lattice, all calculations are rational and hence can be performed
exactly.

4.5 Dataset

We used 1350 unpseudoknotted RNA sequence—structure pairs from
RNA STRAND v2.0 database as our dataset D. RNA STRAND v2.0

contains known RNA secondary structures of any type and organism,
particularly with and without pseudoknots. RNA STRAND v2.0
(Andronescu et al., 2008) is a convenient source of RNA sequences and
structures selected from various Rfam families (Burge et al., 2013). There
are 2334 pseudoknot—free RNAs in the RNA STRAND database. We
sorted them based on their length and selected the ﬁrst 1350 ones, whose
lengths vary between 4 and 121 nt. We excluded pseudoknotted structures
because our current implementation is incapable of considering pseudo-
knots. Some sequences in the dataset allow only A-U base pairs (not

The point is NOT on the surface

 

30

 

20

 

Final Polygon for a Ribosomal RNA (2D)

 

4G

   
    
   

00
O
I

Number of CG Base Pairs
3 8

 

40 50

20 30
Number of AU Base Pairs
Fig. 1. (Top) The 3D Newton polytope of a ribosomal RNA. The
observed feature vector is not on the surface, r(x) = 2. (Middle) The
observed secondary structure of the ribosomal RNA. (Bottom) The 2D
Newton polygon of the ribosomal RNA, r(x) = 10. The blue point rep-
resents the observed 2D feature vector

 

112 /810's112umo[p101x0'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV uo 22

E.Forouzmand and H. Chitsaz

 

The point is on the surface

GU pairs

 

CG Pairs AU pairs

 

Final Polygon for HIV—1 RRE—IIB RNA (2D)

 

   

_L
N

10

 

Number of CG Base Pairs

4 5 7

3
Number of AU Base Pairs

Fig. 2. (Top) The 3D Newton polytope of HIV-1 RRE-IIB 32
NUCLEOTIDE RNA. The observed feature vector is on the surface,
r(x) = 0. (Middle) The observed secondary structure of HIV -1 RRE-
IIB 32 NUCLEOTIDE RNA. (Bottom) The 2D Newton polygon
of HIV-1 RRE-IIB 32 NUCLEOTIDE RNA, r(x) = 2. The blue point
represents the observed 2D feature vector. Note that even though the
necessary condition is not satisﬁed in 2D, it is in 3D

a single C—G or G-U pair), in which case the Newton polytope degener-
ates into a line.

4.6 Implementation

We implemented the dynamic programming in equation (24) using
MATLAB convex hull function, which is based on the quickhull
algorithm (Barber et al., 1996). As mentioned above, we used the

The point is NOT on the surface

 

20

 

CG Pairs AU pairs

 

Final Polygon for 5S Ribosomal RNA (2D)

 

01
O

.h
0

00
O

N
O

_L

 

Number of CG Base Pairs

             

0 5 10 15 20 25

Number of AU Base Pairs
Fig. 3. (Top) The 3D Newton polytope of E.coli 5S rRNA. The observed
feature vector is not on the surface, r(x) = 7. (Middle) The observed
secondary structure of E.coli 5S rRNA. (Bottom) The 2D Newton poly-

gon of E.coli 5S rRNA, r(x) = 7. The blue point represents the observed
2D feature vector

30 35 40

V—representation and computed the Minkowski sum by direct pairwise
summation of vertices. More precisely, for two convex polytopes
P with vertices 121, ...,pa and Q with vertices ql, ...,qb, the vertices
of PEBQ are pi+qj for lgiga and 15j5b.To verify the

 

i304

112 /810's112umo[p101x0'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV uo 22

RNA Newton polytope

 

necessary condition, i.e. whether the experimentally determined feature
vector lies on the boundary of the Newton polytope, we calculated the
distance of the feature vector from the boundary of the polytope using
the ‘p _poly_dist’ MATLAB function Woshpe, 2006). A zero distance
corresponds to the case where the feature vector lies on the boundary,
i.e. the condition is satisﬁed, and a positive distance to the case where
the feature vector is in the interior of the Newton polytope. We nor-
malized the distance by third root of the volume of the polytope
(square root of the area in the case of a polygon). The normalized
distance quantiﬁes how far the feature vector is from the boundary.
We parallelized our MATLAB code using MATLAB ‘parfor’. The
length of input RNA sequences varied between 4 and ~120 nt. For
the smallest ones, our program took a fraction of a second and for
the longest ones it took< 10min to run on a 2.5GHz 12-Core AMD
Opteron CPU.

5 RESULTS

For each strand of RNA, the distance between c(x, y), the real
feature vector of the secondary structure and the computed
convex hull, N (x), is calculated using Woshpe, 2006). We
denote this distance by r(x) here. The necessary condition for
the learnability is satisﬁed if r(x) = 0 for all x in the dataset,
which shows that the observed feature vector lies on the bound-
ary of N (x).

Distance

 

Number of Sequences
(a) -l>
O O
O O

N
O
O

—I.
O
O

 

 

Distance

 

Normalized Distance

Number of Sequences

 

 

 

0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45
Distance/3rd Root(Volume)

Fig. 4. (Top) Histogram of r(x) in the 3D model. (Bottom) Histogram of

r(x)/\/3 V01(N(x))

Figure 1 illustrates the secondary structure of a ribosomal
RNA and its 2D and 3D Newton polytopes. This RNA is
116nt long, and the distance between the polytope and the
observed feature vector for this RNA is 2. In the 2D (AU,
CG) model, this distance is 10. The observed feature vector
has moved closer to the boundary, going from 2D to 3D, as
GU pairs are accounted for in the 3D model. Figure 2 shows
a shorter HIV-1 RNA with the length of 32 nt. The distance
between the 3D polytope and the observed feature vector for
this RNA is 0, while there is a distance of 2 in the 2D model.
In this case also, the observed feature vector has moved closer to
the boundary, going from 2D to 3D. Because there is no GU
pair in this observed structure, the observed feature vector lies on
the c3 (x, y) = 0 face, which is on the boundary of the polytope.
Figure 3 illustrates Escherichia coli 5S ribosomal RNA, which is
121nt long, and the distance between the feature vector and the
polytope is 7 in this case. The distance has not changed in the 3D
model.

Figure 4 demonstrates the histogram of r(x) for the input
dataset. Out of 1350 strands of RNA, the observed feature
vector is on the surface of the 3D Newton polytope for 749
(55 %) sequences. The distance r is not zero, but not more than
one, for 289 (21%) sequences. For 141 (~10%) strands, this

 

Distance Histogram

Number of Sequences

 

 

Distance

Normalized Distance

 

 

Number of Sequences

 

 

 

0.4 0.5 0.6

0 0.1 0.2

0.3
Distance/Sqrt(Area)

Fig. 5. (Top) Histogram of r(x) in the 2D (AU, CG) model. (Bottom)
Histogram of r(x)/‘/Area(./V'(x))

 

112 /810's112umo[p101x0'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV uo 22

E.Forouzmand and H. Chitsaz

 

Number of Faces Histogram
 I I I I

 

300 -

250 '

N

O

O
I

Number of Sequences
61‘
O
I

_I.

O

O
I

50'

 

 

 

0 20 40 60 80 100 120 140 160 180
Number of Faces

Vertices Histogram

 

A
O
O

300

Number of Sequences

 

 

0 20 40 60 80 100 120 140 160 180
Number of Vertices

Fig. 6. (Top) Histogram of the number of faces of the 3D polytope.
(Bottom) Histogram of the number of vetices of the 3D polytope

distance is between 1 and 2, and for 171 (13%) strands, it is more
than 2, and just for 11 (~1%) sequences, this distance is above 5.
As it is clear from Figure 4, the largest r is 8 bp in the 3D model.
The second plot in Figure 4 shows the normalized distance histo-
gram. The third root of the polytope’s volume is used as the
normalization factor. For the same set of strands, the observed
feature vector of only 176 strands lies on the boundary of the 2D
Newton polygon. For 327 sequence, this distance is larger than 5.
As you can see in Figure 5, the maximum distance between an
observed feature vector and the polygon is 14 in the 2D model.
The second plot in Figure 5 shows the normalized distance histo-
gram. The square root of the polygon’s area is used as the nor-
malization factor.

Figure 6 shows the histogram of the number of faces of the 3D
Newton polytope; 79 strands have a polytope with less than 10
faces. The minimum number of faces is ﬁve, and 118 strands
yield a polytope with more than 100 faces. For 211 strands,
the polytope has more than 10 but no more than 20 faces.
Only 47 strands have more than 150 faces. The second plot in
Figure 6 depicts the histogram of the number of vertices of the
Newton polytope. Figure 7 shows the relation between the length
and number of vertices for the 2D and 3D models. The number
of vertices in 2D is not more than 15, but that number increases
to about 180 in 3D.

Number of Polyhedron Vertices vs. Strand Length

_I.
m
o

 

 

 

 

 

160 .f
140 .§
. 2!.
a, 120 ,3
(I)
O
E
> 100
“6 lo
5 u... I 'o '
4E3 80' ' l-z;'.;-' .-: .
--.-II: - - .
3 - “Ull': 2‘;
z 60- . -I- 3'. ' . '
. 1:1 '- --:.. u- .
nmierrar.
40- -1il:'ll- II ; .‘--;§§‘.
.. .123. --= - -- '
l ' "zziigigzia : I 'l. ' °. 3
2° ' . , (111313;; ;;§°-3.5: . ° "
walk-2.]. .
c ' . I I I I I I
0 20 40 60 80 100 120 140
Strand Length
Number of Polygon Vertices vs. Strand Length
16 I I I I
14 -
12 -
(I)
(I)
.9
E 10-
>
"'6
E 8-
E
3
z
6 _ .............................. ..
4 _

 

 

 

0 20 40 60 80 100 1 20 1 40
Strand Length

Fig. 7. (Top) Scatter plot of the number of vertices versus strand length
in the 3D model. (Bottom) Scatter plot of the number of vertices versus
strand length in the 2D model

6 CONCLUSION AND FUTURE WORK

We introduced the notion of learnability of the parameters of an
energy model as a measure of its inherent capability. We derived
a necessary condition for the learnability and gave a dynamic
programming algorithm to assess it. Our algorithm computes the
convex hull of the feature vectors of all feasible structures in the
ensemble of a given input sequence. Also, that convex hull coin-
cides with the Newton polytope of the partition function as a
polynomial in transformed energy parameters.

Our theory applied to a simple energy model that counts A-U,
C-G and G-U base pairs separately revealed that about half of
chosen known structures could potentially be predicted using this
simple energy model. For another one-ﬁfth, the necessary con-
dition is barely violated, which suggests that augmenting this en-
ergy model with more features is expected to satisfy the necessary
condition for them. The condition is severely violated for 13% of
sequences, which will be the subject of future investigation. The
twilight zone (~10%) is also interesting and requires deeper
examination.

The Newton polytope lies in the core of computer algebra for
solving polynomial equations. Therefore, we envision applica-
tions of our RNA Newton polytope in symbolic estimation of

 

i306

112 /810's112umo[p101x0'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV uo 22

RNA Newton polytope

 

energy parameters. Our algorithm has a worst case exponential
complexity due to the computation of the convex hull. However,
we envision efﬁcient approximation of the Newton ploytope
through topology-preserving dimensionality reduction methods.
Applying our method to increasingly complex models as well
as design of energy models using our analysis method will be
pursued in the future. Sufﬁcient conditions for the learnability,
and also assessing the generalization power of an energy model,
remain for future work.

Conflict of Interest: none declared.

REFERENCES

Andronescu,M. et al. (2007) Efﬁcient parameter estimation for RNA secondary
structure prediction. Bioinformatics, 23, 19—28.

Andronescu,M. et al. (2008) RNA STRAND: the RNA secondary structure and
statistical analysis database. BM C Bioinformatics, 9, 340.

Andronescu,M. et al. (2010) Computational approaches for RNA energy parameter
estimation. RNA, 16, 2304—2318.

Barber,C.B. et al. (1996) The quickhull algorithm for convex hulls. ACM Trans.
Math. Softw., 22, 469—483.

Bartel,D.P. (2004) MicroRNAs: genomics, biogenesis, mechanism, and function.
Cell, 116, 281—297.

Bemhart,S. et al. (2006) Partition function and base pairing probabilities of RNA
heterodimers. Algorithms Mol Biol, 1, 3.

Brantl,S. (2002) Antisense-RNA regulation and RNA interference. Biochim.
Biophys. Acta, 1575, 15—25.

Burge,S.W. et al. (2013) Rfam 11.0: 10 years of RNA families. Nucleic Acids Res.,
41, D226—D232.

Chitsaz,H. et al. (2009a) biRNA: fast RNA-RNA binding sites prediction. In:
Workshop on Algorithms in Bioinformatics ( WABI). Vol. 5724, LNBI,
Springer-Verlag, Berlin, Heidelberg.

Chitsaz,H. et al. (2009b) A partition function algorithm for interacting nucleic acid
strands. Bioinformatics, 25, i365—i373.

Dewey,C.N. et al. (2006) Parametric alignment of Drosophila genomes.
PLoS Comput. Biol, 2, e73.

Dirks,R.M. and Pierce,N.A. (2003) A partition function algorithm for nucleic acid
secondary structure including pseudoknots. J. Comput. Chem, 24, 1664—1677.

Do,C.B. et al. (2006) CONTRAfold: RNA secondary structure prediction without
physics-based models. Bioinformatics, 22, 90—98.

Eddy,S.R. and Durbin,R. (1994) RNA sequence analysis using covariance models.
Nucleic Acids Res., 22, 2079—2088.

Emiris,I. (1994) Sparse elimination and applications in kinematics. Ph.D. Thesis,
UC Berkeley, Berkeley, CA.

Emiris,I.Z. and Canny,J.F. (1995) Efﬁcient incremental algorithms for the sparse
resultant and the mixed volume. J. Symbolic Comput., 20, 14—19.

Gibson,D.G. et al. (2010) Creation of a bacterial cell controlled by a chemically
synthesized genome. Science, 329, 52—56.

Gottesman,S. (2005) Micros for microbes: non-coding regulatory RNAs in bacteria.
Trends Genet, 21, 399—404.

Hannon,G.J. (2002) RNA interference. Nature, 418, 244—251.

Mathews,D. et al. (1999) Expanded sequence dependence of thermodynamic
parameters improves prediction of RNA secondary structure. J. Mol Biol,
288, 911—940.

McCaskill,J. (1990) The equilibrium partition function and base pair binding
probabilities for RNA secondary structure. Biopolymers, 29, 1105—1119.

Nussinov,R. et al. (1978) Algorithms for loop matchings. SIAM J. Appl Math., 35,
68—82.

Rivas,E. and Eddy,S. (1999) A dynamic programming algorithm for RNA structure
prediction including pseudoknots. J. Mol Biol, 285, 2053—2068.

Rivas,E. et al. (2012) A range of complex probabilistic models for RNA secondary
structure prediction that includes the nearest-neighbor model and more. RNA,
18, 193—212.

Seeman,N. (2005) From genes to machines: DNA nanomechanical devices. Trends
Biochem. Sci., 30, 119—125.

Seeman,N.C. and Lukeman,P.S. (2005) Nucleic acid nanostructures: bottom-up
control of geometry on the nanoscale. Rep. Prog. Phys., 68, 237—270.

Siegfried,N.A. and Bevilacqua,P.C. (2009) Thinking inside the box: designing,
implementing, and interpreting thermodynamic cycles to dissect cooperativity
in RNA and DNA folding. Methods Enzymol, 455, 365—393.

Simmel,F. and Dittmer,W. (2005) DNA nanodevices. Small, 1, 284—299.

Storz,G. (2002) An expanding universe of noncoding RNAs. Science, 296,
1260—1263.

Tinoco,I. et al. (1973) Improved estimation of secondary structure in ribonucleic
acids. Nat. New Biol, 246, 40—41.

Venkataraman,S. et al. (2007) An autonomous polymerization motor powered by
DNA hybridization. Nat. Nanotechnol, 2, 490—494.

Wagner,E. and Flardh,K. (2002) Antisense RNAs everywhere? Trends Genet, 18,
223—226.

Waterman,M.S. and Smith,T.F. (1978) RNA secondary structure: a complete
mathematical analysis. Math. Biosci., 42, 257—266.

Yin,P. et al. (2008) Programming DNA tube circumferences. Science, 321, 824—826.

Yoshpe,M. (2006) Distance from a point to a 2D polygon. http://www.mathworks.
com/matlabcentral/ﬁleexchange/12744-distance-from—a—point-to-polygon (14 May
2013, date last accessed).

Zakov,S. et al. (2011) Rich parameterization improves RNA structure prediction.
In: Bafna,V. and Sahinalp,S. (eds.) Proceedings of the 15th Annual International
Conference on Research in Computational Molecular Biology, Vol. 6577, Lecture
Notes in Computer Science. Springer, Berlin-Heidelberg, pp. 546—562.

Zamore,P.D. and Haley,B. (2005) Ribo-gnome: the big world of small RNAs.
Science, 309, 1519—1524.

Zuker,M. and Stiegler,P. (1981) Optimal computer folding of large RNA sequences
using thermodynamics and auxiliary information. Nucleic Acids Res., 9,
133—148.

 

112 /810's112umo[p101x0'sor112u1101quIq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV uo 22

