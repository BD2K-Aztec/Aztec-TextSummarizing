APPLICATIONS NOTE

Vol. 31 no. 2 2015, pages 287-289
doi: 10. 1 093/bioinformatics/btu632

 

Data and text mining

Advance Access publication September 30, 2014

KDDN: an open-source Cytoscape app for constructing
differential dependency networks with significant rewiring

Ye Tian‘, Bai Zhang2, Eric P. Hoffman3, Robert Clarke4, Zhen Zhang2, le-Ming Shih2,
Jianhua Xuanl, David M. Herrington5 and Yue Wang”

1Department of Electrical & Computer Engineering, Virginia Tech, Arlington, VA 22203, 2Departments of Pathology and
Oncology, Johns Hopkins University, Baltimore, MD 21231, 8Research Center for Genetic Medicine, Children’s National
Medical Center, Washington, DC 20010, 4 Lombardi Comprehensive Cancer Center, Georgetown University,
Washington, DC 20057 and 5Department of Medicine, Wake Forest University, Winston—Salem, NC 27157, USA

Associate Editor: Jonathan Wren

 

ABSTRACT

Summary: We have developed an integrated molecular network learn-
ing method, within a well-grounded mathematical framework, to con-
struct differential dependency networks with significant rewiring. This
knowledge-fused differential dependency networks (KDDN) method,
implemented as a Java Cytoscape app, can be used to optimally
integrate prior biological knowledge with measured data to simultan-
eously construct both common and differential networks, to quantita-
tively assign model parameters and significant rewiring p-values and
to provide user-friendly graphical results. The KDDN algorithm is
computationally efficient and provides users with parallel computing
capability using ubiquitous multi-core machines. We demonstrate the
performance of KDDN on various simulations and real gene expres-
sion datasets, and further compare the results with those obtained by
the most relevant peer methods. The acquired biologically plausible
results provide new insights into network rewiring as a mechanistic
principle and illustrate KDDN’s ability to detect them efficiently and
correctly. Although the principal application here involves microarray
gene expressions, our methodology can be readily applied to other
types of quantitative molecular profiling data.

Availability: Source code and compiled package are freely available
for download at http://apps.cytoscape.org/apps/kddn

Contact: yuewang@vt.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on May 5, 2014; revised on September 5, 2014; accepted on
September 18, 2014

1 INTRODUCTION

Modeling biological networks is an important tool in systems
biology to study the orchestrated activities of gene products in
cells (Mitra et al., 2013). Signiﬁcant rewiring of these networks
provides a unique perspective on phenotypic transitions that can
occur in biological systems. Thus, instead of asking “which genes
are differentially expressed’, a more interesting question is “which
genes are differentially connected?’ (Hudson et al., 2012; Mitra
et al., 2013). To systematically characterize selectively activated

 

*To whom correspondence should be addressed.

or deactivated regulatory components and mechanisms, the
modeling tools must effectively distinguish signiﬁcant rewiring
from random background ﬂuctuations. Although speciﬁc biolo-
gical networks cannot be constructed by the existing knowledge
alone, novel incorporation of prior knowledge into data-driven
approaches can improve the robustness and biological relevance
of network inference.

Differential dependency network (Zhang et al., 2009; Zhang
and Wang, 2010) and its knowledge-fused extension (Tian et al.,
2011, 2014) KDDN have been developed to infer biological net-
works with signiﬁcant rewiring by integrating experimental data
and biological knowledge. The unique and attractive features of
the KDDN software tool are as follows: (i) it is easy to use with a
user-friendly graphic user interface (GUI) and cutting-edge
performance; (ii) both conserved and differential biological
networks can be inferred via efﬁcient closed-form numerical
solutions; (iii) model parameters are determined statistically
aligned with the expected performance; (iv) prior knowledge
(condition speciﬁc or non-speciﬁc) is incorporated for inferring
dependency networks under different conditions; and (v) statis-
tical signiﬁcance on the differential connections and the type I
error rate are rigorously assessed.

The KDDN Cytoscape 3.x app adapts and extends recent
KDDN algorithms in the literature (Tian, et al., 2011, 2014;
Zhang et al., 2009; Zhang and Wang, 2010) (Fig. 1). Via a
user-friendly GUI, users can easily install KDDN software and
perform network analysis by just a few clicks. KDDN software
has been tested thoroughly on both synthetic and real gene
expression data, and has been successfully applied to a wide
range of research projects, including yeast oxidative stress
response, breast cancer recurrence, muscular dystrophy and
estrogen exposures. Helpful tips for users to use the software
in an efﬁcient manner yet with fully informed limitations are
provided in Supplementary Information.

2 DESCRIPTION

2.1 Methods and software

KDDN algorithm jointly learns the conserved biological
network and statistically signiﬁcant rewiring across different
conditions. Condition-speciﬁc data and prior knowledge are

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 287

112 /310's113umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq uIOJj pepBOIUAAOG

910Z ‘091sn3nv uo ::

Y.Tian et al.

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

CytoscapeiUSEr ‘ KDDN slgnrithrn
f I Stop 0 _ _ ‘1'
Experiment condition IF E II..— Condition —.. E
_ 1.1.1.2: -:r.1rl.r.|.-.-.I-.'r'rl.r-.--' E
I Ski-DJ ta 3 l HH-Jwa'J-L'hirl "strum": I E
“P” a I. E, Data. 1 __l g
rﬁl Balaz —_. I—
SM: 2 I F'riur _I
Parameter SEI'IJ ngs ' ' I knmlrledge I
slap 3  .i_. -- 1.11rlw1ig1l11ulunrk
Runmng Dptlﬂna J - .5 l 3.; -- LIil'li:rr:n1i;I| rwhH-rlu.
Ulauaﬂmm ' Summary L H -- pnnr LHI'IUI'IL‘IJIIC Inuuﬁmmllun
I1IIIIIII'L‘II1'IIILILIII'I I I
.r'
R 1... Hal In.th L “em ﬂaming ]
“I I‘JilTrn'cILIL-Ll
_ L‘dalt'h '- r I 1
n ' l - - Signiﬁcance testing
if  Results construction ]

.-'

 

 

Fig. 1. Architecture and ﬂowchart of KDDN software

quantitatively fused via an extended Lasso model with 6-1 reg-
ularized convex optimization formulation (Tian et al., 2014).
Based on the unique nature of the problem, we derive an efﬁcient
closed-form solution for the embedded subproblem solved by the
block-wise coordinate descent algorithm. We conduct the
computational complexity analysis on the KDDN algorithm
(Supplementary Information). As existing knowledge is often
non-speciﬁc or imperfect, KDDN uses a ‘minimax’ strategy to
maximize the beneﬁt of prior knowledge while conﬁning its nega-
tive impact under the worst-case scenario. Furthermore, KDDN
matches the values of model parameters to the expected false-
positive rates on network edges at a speciﬁed signiﬁcance level,
and assesses edge-speciﬁc P—values on each of the differential
connections (Tian et al., 2014).

KDDN is implemented as an open-source cross-platform
Cytoscape 3.x app with parallel computing capability in Java.
The control panel will guide users to navigate through the
experiment settings that allow ﬂexible conﬁguration of the ana-
lytic tasks. KDDN software takes the quantitative expression
values of relevant genes/proteins as input, and incorporates the
prior knowledge applicable to either or both conditions (e.g.
KGML ﬁles downloaded from KEGG pathway Web site can
be directly imported as prior knowledge). In addition to inferring
common and/or signiﬁcant rewiring with edge-speciﬁc P—values,
conventional differential analysis is simultaneously performed
allowing users to compare expression fold changes and network
rewiring side by side. The constructed networks are visualized
seamlessly in Cytoscape, and detailed numerical results together
with model parameters are presented in dedicated panels (Fig. 2).
All experimental settings and results can be conveniently
exported for further analysis.

2.2 Case study

We applied KDDN to analyze the network rewiring in budding
yeast Saccharomyces cerevisiae in response to oxidative stress,
focused on cell cycle-related genes. Integrating the prior biolo-
gical knowledge in the KEGG yeast pathway and gene expres-
sion data (GSE7645), the signiﬁcant differential networks
constructed by KDDN are given in Figure 2, where red edges

n r I r H L . - "-

msnalnzatunn   '  

u... I I—_.u..|_. _

I'MI: IIIII uiwlrid M 
E] ii I: B .31 IIIII n

EIL-I'EfrII'I-IE'I'IIIIH- -:-:h:-:-1. v1: I'..I' "-I'- .'..'. L'. II

Sun‘nmr '
ESE-ﬁlings 

_..I.

Fig. 2. KDDN software interface allowing for user-computer interaction,
network/differential analysis, and result presentation/export

indicate the connections existing under control and green edges
indicate the connections created under stress, exclusively.

Oxidative stress is a harmful condition in cell, due to the fail-
ure of the antioxidant defense system to effectively remove reac-
tive oxygen molecules and other oxidants (Lee et al., 2011). The
result shows that Yap], Rho] and Msn4 are among differential
hubs and at the center of the network response to oxidative
stress; they are activated under oxidative stress and many con-
nections surrounding them are created (green edges). Yap] is a
major transcription factor that responds to oxidative stress;
Msn4 is considered as a key responder to environmental stresses,
including oxidative stress; Rho] is known to resist oxidative
damage and facilitate cell survival; Ctt] acts as an antioxidant,
and it coordinates with Yap] to protect cells from oxidative
stress. The stress-induced interaction between Hog] and Fas],
detected by KDDN, is also observed in an earlier study. The
biologically plausible results suggest not only the network rewir-
ing as a mechanistic principle in determining phenotypes but also
KDDN’s ability to detect them efﬁciently and correctly.

Detailed descriptions of method, software and more case stu-
dies are included in the Supplementary Information.

3 DISCUSSION

The KDDN Cytoscape app presents an integrated software tool
to construct biological networks and detect signiﬁcant rewiring
across different conditions. Supported by a well-grounded math-
ematical framework, KDDN integrates the abundant biological
knowledge and condition-speciﬁc experimental data to depict the
overall dependency networks and their dynamics. Tested on both
simulations and real gene expression data, KDDN outperforms
peer methods (Supplementary Information) and demonstrates
its effectiveness in revealing signiﬁcant topological changes.
We expect KDDN to be a useful tool for performing
differential network analysis in many biological contexts (Mitra
et al., 2013).

Funding: National Institutes of Health, under Grants [CA160036,
CA164384, NS29525, CA149147, HL111362].

Conﬂict of interest: none declared.

 

288

112 /310's113u1no [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq uIOJj prBOIUAAOG

9IOZ ‘091sn3nv uo ::

KDDN

 

REFERENCES

Hudson,N.J. et al. (2012) Beyond differential expression: the quest for causal mu-
tations and effector molecules. BM C Genomics, 13, 356.

Lee,M.E. et al. (201 l) The rhol GTPase acts together with a vacuolar glutathione S-con—
jugate transporter to protect yeast cells from oxidative stress. Genetics, 188, 859—870.

Mitra,K. et al. (2013) Integrative approaches for ﬁnding modular structure in bio-
logical networks. Nat. Rev. Genet, 14, 719—732.

Tian,Y. et al. (2014) Knowledge-fused differential dependency network models for
detecting signiﬁcant rewiring in biological networks. BM C Systems Biol, 8, 87.

Tian,Y. et al. (2011) Knowledge-guided differential dependency network
learning for detecting structural changes in biological networks. Proceedings
of the 2nd ACM Conference on Bioinformatics, Computational Biology and
Biomedicine, ACM BCB 2011, pp. 254—263.

Zhang,B. et al. (2009) Differential dependency network analysis to identify condi-
tion-speciﬁc topological changes in biological networks. Bioinformatics, 25,
526—532.

Zhang,B. and Wang,Y. (2010) Learning structural changes of Gaussian graphical
models in controlled experiments. Proceedings of the 26th Conference on
Uncertainty in Artiﬁcial Intelligence, UAI 2010, pp. 701—708.

 

289

112 /§JO's112umo [p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq uIOJj pep1201umoq

910Z ‘091sn3nv uo ::

