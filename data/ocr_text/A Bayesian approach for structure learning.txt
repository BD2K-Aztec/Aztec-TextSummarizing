Bioinformatics, 31 (22), 2015, 3617—3624

doi: 10.1093/bioinformatics/btv414

Advance Access Publication Date: 14 July 2015
Original Paper

 

Gene expression

A Bayesian approach for structure learning in
oscillating regulatory networks

Daniel Trejo Banos1'*, Andrew J. Millarz'3 and Guido Sanguinetti1'2

1School of Informatics, University of Edinburgh, 10 Crichton St, Edinburgh EH8 9AB, UK, 2SynthSys—Systems and
Synthetic Biology, University of Edinburgh, CH Waddington Building, King's Buildings, Mayfield Road, Edinburgh
EH9 3JD, UK and 3School of Biological Sciences, University of Edinburgh, Darwin Building, King's Buildings,
Mayfield Road, Edinburgh EH9 3JR, UK

*To whom correspondence should be addressed.
Associate Editor: Janet Kelso

Received on October 25, 2014; revised on June 5, 2015; accepted on July 7, 2015

Abstract

Motivation: Oscillations lie at the core of many biological processes, from the cell cycle, to circadian os—
cillations and developmental processes. Time—keeping mechanisms are essential to enable organisms
to adapt to varying conditions in environmental cycles, from day/night to seasonal. Transcriptional
regulatory networks are one of the mechanisms behind these biological oscillations. However, while
identifying cyclically expressed genes from time series measurements is relatively easy, determining
the structure of the interaction network underpinning the oscillation is a far more challenging problem.
Results: Here, we explicitly leverage the oscillatory nature of the transcriptional signals and present
a method for reconstructing network interactions tailored to this special but important class of gen—
etic circuits. Our method is based on projecting the signal onto a set of oscillatory basis functions
using a Discrete Fourier Transform. We build a Bayesian Hierarchical model within a frequency do—
main linear model in order to enforce sparsity and incorporate prior knowledge about the network
structure. Experiments on real and simulated data show that the method can lead to substantial im—
provements over competing approaches if the oscillatory assumption is met, and remains competi—
tive also in cases it is not.

Availability: DSS, experiment scripts and data are available at http://homepages.inf.ed.ac.uk/gsan
guin/DSS.zip.

Contact: d.trejo—banos@sms.ed.ac.uk

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

Cyclic behaviour is ubiquitous in biology. The importance of oscilla—
tory systems stems both from the necessity to adapt to the many en—
vironmental cycles (circadian, annual, etc.), as well as to maintain
intrinsically periodic processes such as the cell cycle. Both of these
type of oscillations are essential to many physiological processes,
and malfunctions in the cellular time keeping mechanisms are fre-
quently associated with disease, further motivating the study of
these systems (Bell et 61]., 2005).

Genetic regulatory networks are at the core of many of these
biological oscillators. These networks can sustain oscillatory

©The Author 2015. Published by Oxford University Press.

behaviour in protein levels through specific architectures involving
multiple feedback loops of transcriptional regulation. For example,
a transcriptional oscillator is thought to drive the Arabidopsis
thalicma circadian clock through mutual repression of three tran—
scriptional regulators (McClung, 2011; Pokhilko et al., 2012). The
cell cycle is another oscillatory process, which controls cell division
and duplication. In the case of Saccharomyces cerevisiae, eXperi—
ments and dynamical models suggest that the cell cycle is the result
of a transition between two self—maintaining steady states, driven
by two antagonistic classes of proteins (Chen et 61]., 2004).
Evidence suggests that a transcriptional network is an important

3617

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

112 /310'spaumo [p.IOJXO'SOTlBIIHOJUTOTQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

3618

D. Trejo Banos et al.

 

part of this mechanism (Li et al., 2004; Orlando et al., 2008;
Spellman, 1998).

These oscillators have been the subject of study for many years,
but uncovering the exact mechanism is a challenge that involve
many complex chemical, genetic and physiological components. It is
therefore important to devise computational statistical methods
which may guide experimental analyses by inferring potential regu—
latory interactions directly from time series gene expression data,
which is usually easier to obtain.

Network inference is a well—established and rich domain of re-
search in systems biology. State of the art methods for regulatory net—
work inference include a wide variety of techniques from statistics
and machine learning. For example, mutual information between
gene expression levels under different experimental conditions is used
by ARACNE (Margolin et al., 2006) and CLR (Faith et al., 2007),
two of the most widely used methods for network reconstruction.
GENIE3 (Huynh—Thu et al., 2010), another method which was a top
performer at the DREAM network inference challenges, and the more
recent extension Jump3 (Huynh—Thu et al., 2015) use random forests
to produce a weighted ranking over the network edges. Other meth—
ods recently used include regularized regression (Haury et al., 2012),
ANOVA (Kuffner et al., 2012) and Hierarchical Gaussian models (Li
et al., 2006). Most of these methods focus on steady state data, which
is by definition not available for oscillatory networks.

Regularization—based and Bayesian methods can also be adapted
to time series data. Dynamic Bayesian Networks have long been a
popular choice in network inference (e.g. Dondelinger et al., 2012;
Oates et al., 2012). Such methods present considerable advantages
in being able to quantify uncertainty and to incorporate prior know—
ledge, but are often severely limited by computational constraints.
Optimization—based methods based on regularized regression (e.g.
Bonneau et al., 2006) present often a scalable alternative at the cost
however of some modelling flexibility.

Here, we use a first order model of the system dynamics to con—
strain the network inference, but we explicitly take advantage of the
oscillatory behaviour of the system by pursuing frequency—based es—
timation. We build a hierarchical Bayesian model over the network
dynamics which can set and infer structural constraints and account
for the inevitable uncertainty that experimental settings convey.
Furthermore, our method can easily integrate non—trivial side infor-
mation, for example in the form of sequence similarity between pro—
moter sequence of genes. Experimental results on real and simulated
data highlight that the method offers an effective and flexible plat—
form for statistical inference in oscillatory systems, and can uncover
non-trivial biological information.

The rest of the paper is organized as follows: the next section de—
scribes the methodology we use, reviewing the linear time-invariant
approximation we use as well as introducing the Bayesian hierarch-
ical framework for network inference. We then present an experi—
mental evaluation on three datasets: a synthetic dataset from the
DREAM network inference challenge, a simulated dataset obtained
from a state of the art model of the Aﬂoalicma circadian clock
(Pokhilko et al., 2010), and a real dataset from the yeast S.cerevisiae
cell cycle (Orlando et al., 2008). We then conclude the paper by dis—
cussing our method in the light of these experimental results and the
existing literature on network inference.

2 Materials and Methods

Our approach is centred on the assumption that the oscillatory
dynamics of the regulatory network can be reasonably approxi—
mated, in Fourier space, by a linear time invariant (LTI) system.

This is of course a simplification, but it is not an unreasonable
one, and has been previously proposed as a formalism to model
oscillatory genetic circuits with considerable success, see Dalchau
2012 for a recent review. From the inferential point of view, adopt—
ing a frequency domain perspective is convenient, as it enables us
to transform the network reconstruction problem in a regres—
sion problem, for which many advanced estimation tools
exist. We choose a Bayesian regression approach, as it provides an
effective methodology to integrate diverse information in the infer-
ential machine. As a proof of principle of how non-trivial informa-
tion can be incorporated, we discuss how sequence similarity
between promoter regions could be used within a hierarchical model
framework.

2.1 LTl model

The starting point for our modelling is the approximation of the sys—
tem’s dynamics as a LTI model:

dag-(t) N
dt = 2 0617990) + bi — Ilixdt) + Z Cikuk- (1)
#i k

 

Here, the expression level of gene 1', denoted as xi(t), depends on the
expression levels of the other N — 1 genes (potential regulators)
through activating or repressing intensity at),- E R. Gene expression
levels decay linearly with rates 2,. Additionally, gene expression de—
pends on a set of K inputs 14k which can be either external signals
(light for example) or any other gene signal that is not modelled ex—
plicitly in the network. Finally, each gene has a basal transcription
rate by.

Having a set of M samples from an experiment (e.g. mRNA
levels from a microarray experiment), let the vector X,- E RM denote
the set of M expression level measurements for gene 1'. We can fur—

RMXN, which contains the sample

ther construct the matrix X E
points for the set of N genes. Let X be the derivative of X, so
Equation (1) in matrix form for this set of gene expression levels is

given by:
x = XAT + b1 + UCT (2)

where A E RNXN

agonal elements (xii, the input signals are contained in matrix

is the matrix with diagonal elements 2,- and off—di—

U E RMXK. To complete the notation, we denote with b vector of
basal expression levels, which multiplies the M x N matrix of ones
1 to add a constant term to the equation.

We proceed to compute the derivative x by first projecting the
gene expression levels into a set of orthogonal basis functions. The
chosen set of basis functions is the one given by the Discrete Fourier
Transform of the gene expression levels. We emphasize that the
choice of basis function is dictated by the nature of the problem:
while in the limit of a continuously sampled signal this choice would
be irrelevant (any complete basis would yield perfect reconstruc—
tion), for discretely sampled signals the quality of the approximation
to the signal (and its derivative) will depend on the expressiveness of
the chosen finite set of basis functions. Our choice of basis functions
is motivated by the prior knowledge that the signals of interest
should be oscillatory, making the choice to work in the frequency
domain particularly appealing. We denote X(w), X for brevity, as
the frequency representation of X, with each column containing the
frequency spectrum of the expression of a gene over the time points.
The frequency domain derivative can be computed analytically by

112 /310'spaumo [p.IOJXO'SOTlBIIHOJUTOTQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

 

Oscillating network structure learning 3619
X : 27twiX, so the frequency domain representation of the system is Thus, the hierarchical model is defined by equations:
given by: K
X I XAT   0D) : HP(Xk|A7C7U7Xk70D)
[3:1
Basal rates b are 1ncluded 1n the zero frequency component of X. Pktﬂlbﬂ7 W) N Nv<07 hii
The frequency representatlon of the 1nputs 1s g1ven by U.
To account for any discrepancies between the linearized model PUMIW) N (1 — W)5u0 + W51 (6)
and the true system dynamics, we assume normally distributed error 7100) N Beta(a1, a2)
with variance 0%). The likelihood function for Equation (3) is: “(14) N Gamma (b1, b2)
1t(0'132) N Gamma(c1, cz).

. N _ 1
p(X|X7A7U7C70D) O< HGDMexp (—%Qi>

1:

AiT AiT
CT

1

T
> Xi—lX Ul

 

 

Qi = (XilX Ul
T
i
In general, multiple replicate time series may be available.
Denoting with K the number of replicate time series, the overall like—
lihood, under an assumption of normal i.i.d error between series,

can be generalized as:

K
P({Xk}|{Xk}A,U,C, 0D) 2 HP(Xk|Xk,A,U, C, 0D) (5)

[3:1
which is a product of Gaussian densities.

Notice that the form of Equation (5) is identical to a regression
problem where the output variables (Fourier coefficients of the de—
rivatives of the signals) are regressed onto the Fourier coefficients of
the signals. The inference problem of estimating the interaction and
input response matrices [AT CT]T in Equation (4) can therefore
be attacked using the vast repertoire of regression methods.
Regularized regression methods have been tested in a network infer—
ence context (see Bergersen et al., 2011; Bonneau et al., 2006;
Charbonnier et al., 2010; Haury et al., 2012). Here, we opt for a
hierarchical Bayesian approach that will allow us to leverage prior
knowledge and integrate other sources of information.

2.2 Hierarchical Bayesian modelling
To interpret dynamical systems in a network perspective, we assume
that the interaction matrix in our LTI representation (1) has a sparse
structure representing discrete interactions between regulators and
target genes. We introduce the structural adjacency matrix
H E RNXN, which sits at the top of the hierarchy. This matrix con-
tains elements 19,-,- = 1 if gene j regulates gene 1' for 17$ 1'. In this
Bayesian approach, a sparsity inducing prior over elements of H is
necessary to aid identifiability and interpret-ability. The prior form
chosen for elements 19,-,- is a Bernoulli distribution, with parameter w
which has a Beta distribution prior due to conjugacy.

We chose a spike and slab prior to relate the connection matrix
H and interaction matrix A. This distribution consists of a mixture
of a degenerate distribution and a long tailed distribution. The
form chosen is derived from the one presented in Ishwaran et al.
(2005), where the a,-,- elements are drawn from a scale—mixture
model where a zero—mean normal distribution has variance gov—
erned by hyper—parameter 1,7. In this form, the hyper—variance him-2]-
has a continuous bi—modal distribution. With this prior, the poster—
ior distribution of the less relevant parameters is shrunk towards
zero and the non—zero elements are selected by the distributions
tail. The advantage of the continuous distribution implied by the
scale—mixture model of Ishwaran et al. (2005) lies primarily in the
fact that we avoid the need to parametrize these bi—modal distribu—
tions manually.

The parameter 0D accounts for uncertainty related to noise and
model mismatch, for example arising from the linear approximation
to the system dynamics. The parameter 120 is introduced for numer-
ical stability and is fixed to the value of 0.005. The hyperparameters
a172, b1; and c172 can be fixed to reflect prior beliefs, or set to vague
values to reﬂect prior ignorance; in the rest of the paper they are set
to the default values of (1, 1), (5, 50) and (0.001, 0.001)
respectively.

2.3 Sequence information integration
A major advantage of hierarchical modelling is the possibility of
integrating different data sources. By branching from the top of the
hierarchy, we can define models for different network related char—
acteristics and keep all the information coupled by the top of the
hierarchy. For example, protein interaction and binding data from
ChIP-chip or ChIP-seq experiments can be used in a straightforward
manner to modulate the prior probabilities over matrix H, for ex-
ample by adjusting the parameter w for individual edges.
Hierarchical models also allow us to exploit more subtle sources
of structural information derived from an analysis of sequence infor—
mation. Transcription factors bind to the promoter region of their
targets by recognizing specific motifs, short DNA words; thus co—
regulated genes (genes that are regulated by a common transcription
factor) should share common motifs in their promoted regions. We
use this information to draw the basic model for our sequence inte—
gration approach. As the transcription binding sites share a common
motif, we assume that the similarity between two promoter regions
varies proportionally to the number of shared regulators. In this
way, an observed pairwise similarity matrix S = [51,-] between gene
promoters, derived from a multiple alignment method like Sievers
et al. (2011) or an alignment—free method (Bonham et al., 2014),
can be related to the structural adjacency matrix at the top of the
hierarchical model. Assuming for simplicity a Gaussian observation
model, we can then incorporate sequence similarity by positing the
following relationship between promoter similarity scores and the
structural adjacency matrix

 

2
_ 1 N

p(sii|H7ﬂ7 O'seq) oc aseZI/Zexp — 202 (511' — Zhilhjlm) (7)
1:1

seq

Here, the parameter {ﬂl}1§l§N is the similarity ‘induced’ by the
l—th transcription factor (a proportionality constant), and the prod—
uct [oil/oil equals 1 if and only if genes 1' and j are both regulated by I.
This model is a form of additive clustering (Mirkin, 1987). By condi—
tioning on H, we can derive the distribution [)(ﬂll), which is a
Gaussian with non—negative constraints, (see Supplementary
Information Eq. 4). This distribution can be used for sampling pos—
terior values of B; in our applications, however, we preferred to fix
the value of B to its non—negative maximum likelihood solution, ef-
fectively approximating this conditional posterior with a (3 function.

112 /810'spaumo [p.IOJXO'SSUBUHOJUTOTQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

3620

D. Trejo Banos et al.

 

The similarity score variance aseq is given a weakly informative in-
verse Gamma prior. By completing the square we can derive a
Gaussian distribution for the beta; parameters, for its derivation and
estimation see Supplementary Information Section 1. The overall
structure of the model is depicted graphically in Figure 1.

2.4 Inference

Inference of parameters {A, C, H, 01), w, 17} is done through a simple
Gibbs sampling scheme. Given conjugacy among distributions, sam—
pling of these parameters is straightforward for all distributions ex—
cept p(ﬂl). This distribution is not conjugate, so a Metropolis within
Gibbs would be necessary for exact inference. In order to improve
performance and given the fact that retrieving the distribution over
ﬂ; is not an objective; we use the non—negative least square estimate
for the vector [3. Convergence was tested by applying Geweke diag—
nostic over the last 1000 samples of matrix H. Mathematical deriv—
ations of the required conditional posteriors and the general
sampling algorithm are described in the Supplementary Material.

3 Results

In this section, we assess the performance of our method on two
realistic simulated datasets and a real dataset, comparing its per—
formance to two other state of the art methods. We call our method
DSS, for DFT—based Spike and Slab model. The first simulated
dataset was generated from a well—known model for the A.t/oaliana
circadian clock network (Pokhilko et al., 2010). This model is a
non-linear Ordinary Differential Equation (ODE)—based model
which exhibits regular oscillations (for suitable parametrisations),
thus matching one of our main modelling assumptions. However, it
is a non-linear model, hence introducing an element of model mis—
match. As a second synthetic benchmark dataset we used one of the
datasets provided by the DREAM 4 challenge (Marbach et al.,
2010). This is again a non-linear model, which exhibits damped os—
cillatory dynamics in some of the nodes; thus, this dataset presents
considerably more elements of model mismatch. The last experiment
tested the method on a real dataset of gene expression levels ob—
tained in a micro-array experiment for the Saccharomyces cerevisiae
cell cycle transcriptional network (Orlando et al., 2008).

Results were assessed in terms of area under the Precision-Recall
(AUPR) curve; PR curves plot the fraction of correctly called in—
stances versus the ratio of true positives over true positives plus false
negatives. An ideal classifier would give a AUPR of 1, while a

H “T

W
“a.
\ /
a A JD
.. I/
q\s k

kaU

 

 

 

 

Fig. 1. Hierarchical Bayesian model, on top of the hierarchy lies the adjacency
matrix H and sparsity parameter W. In chequered circles the frequency-
domain gene expression model and its parameters. In stripes the sequence
similarity and its parameters

random baseline would return the ratio of positives negatives.
Inference of the models parameters was conducted by Gibbs
Sampling from the model presented in (Fig. 1). In total, 5000 sam—
ples were obtained. The last 1000 samples were selected and aver—
aged to compute the conditional probability of a link p(/o,-,- : 
given the model and the expression data, see Supplementary infor—
mation Sections 1.1.1 and 1.1.2 for details into the inputs and out—
puts of the program.

3.1 Competing methods

As a first comparison, in order to establish the validity of our claim
that frequency domain analysis is beneficial for oscillatory net—
works, we sought to compare our results with a complete analogue
in time domain. To do this, we implemented a spline—based alterna—
tive to the Discrete Fourier Transform (DFT), using cubic splines in-
terpolation as means of computing the time domain derivative,
while the rest of the hierarchical model was left unchanged. As com—
peting methods to assess the performance of DFT based Spike and
Slab (DSS) we selected GENIE3 (Huynh—Thu et al., 2010), which is
based on random forests, and the ODE—regression—based Inferelator
(Bonneau et al., 2006; Greenfield et al., 2013).

In a network of N genes, GENIE3 solves N regression problems
by predicting, using random forests, the expression level of each
gene as a function of the other N —1 genes (putative regulators). Then
the relative importance of each gene expression is evaluated and the
putative gene interactions are ranked. GENIE3 was designed for
steady state data, but time—series adaptation can be readily derived
and was provided to us by one of the authors.

The Inferelator estimates the parameters of an ODE system using
regression with L1-regularization over a finite element approxima-
tion of the derivative. The method has been extended (Greenfield
et al., 2013), with new functionalities to incorporate prior informa-
tion over the network links, and to use alternative optimization
methods for model selection, including the elastic—net (regularization
over L1 and L2 norms) and Bayesian regression with best subset
selection.

Finally, as a simple baselines, we implemented a L1 regularized
version of the regression problem in Equation (5), using the LASSO
implementation (Tibshirani, 1994).

3.2 Arabidopsis thaliana circadian clock

As a first example, we used data generated from a well known oscil—
latory network model, the A.t/oaliana circadian clock. The data con—
sist of simulated mRNA measurements from the model found in
Pokhilko et al. (2010). This non—linear model has seven transcrip—
tion factors and two post—transcriptional elements ZTL and
LHYmod. In order to replicate experimental conditions, we assume
that only mRNA data are available, so protein concentrations for
the transcriptional and post—transcriptional elements are assumed
unobserved. The transcription factors used for network inference
are ‘LHY’, ‘TOC1’, ‘PRR5’, hypothetical gene ‘Y’, ‘GI’, ‘PRR9’ and
‘PRR7’, the post—transcriptional elements are not considered. A
graphical representation of the model can be observed in
(Supplementary Information Fig. 1). This model was simulated for
three cycles obtaining 28 samples. The procedure was performed
with a light/dark photo period of 12/12, 6/18, 8/16, 18/6 and 20/4 h
which are represented in our model by binary input signals U. This
design of our study is created to mimic a realistic experimental set—
ting as in Edwards et al. (2010); the biological rationale for such de—
sign is that stimulating the system with these different inputs may
tease out the contribution of the main drivers of the clock at

112 /810's112umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Oscillating network structure learning

3621

 

different times of day. We also simulated knock—out mutants
ATOC1, APRR7PRR9, ALHY and AGI by the same procedure as
presented in Pokhilko et al. (2010) with photoperiods of 12/12 h.
These experiments amount to 14 time series; as these data are dir—
ectly the outputs of an ODE model (without any additional noise)
we define this idealized dataset as the noiseless dataset. To assess
statistically the performance and robustness of our method, we gen—
erated additional noisy datasets by adding Gaussian white noise
with a Signal—to—noise (SNR) of 50 (low noise regime, as could be
found in e.g. luciferase reporter time series) and 10 (high noise re-
gime, similar to a noisy microarray time series). For each noise level,
we generated 100 independent datasets. An example of the simu—
lated expression levels is plotted in the upper left panel of Figure 2.

Using the model specification as ground truth, we proceeded to
draw the PR—curves for the different methods and computed the
area under the PR—curve for all the resulting networks. These areas
are plotted for the noiseless (simulated data without added noise)
and noisy data in the upper right panel of Figure 2. The DSS method
achieved an AUPR of 0.57 for noiseless data, 0.56 i 0.01 for
5 0SNR and 0.5 7 i 0.1 for 10SNR, and performed significantly bet—
ter than LASSO, GENIE3 and Inferelator at all noise levels. The
DSS method also consistently outperforms the spline—based method
in the presence of noise, more strongly for low noise levels but still
significantly at higher noise levels (paired t—test P < 1e — 4). It is
intriguing that the method’s average performance is stable on noisy
datasets; we speculate that this may be due to the fact that adding
noise alleviated the effects of model mismatch (resulting from the
LTI approximation). Intuitively, in the absence of noise the attempts
to fit non—linear data with a linear model could become more
problematic.

To test the effect of including side information, we simulated a
between—gene similarity matrix by drawing B; from a uniform distri-
bution U(0.1,0.6) and using Equation 7. In this case, we notice an
important improvement by observing an increment in the AUPR to
0.68 in the noiseless case, 0.63 i 0.07 at 50SNR and 0.59 i 0.12 at
10SNR (both statistically significant at P < 1e — 4 when compared
with results without side information). The difference between the
spline solution with side information and the DSS solution with side
information was not statistically significant in our experiments at
different noise levels. The principal objective of using this simple
simulated similarity matrix was to confirm that structural informa-
tion can be retrieved and used as aid for inference. By clustering the
co—regulated elements we added additional structural constraints
into the inference scheme.

Finally, we included a graphical representation of the true net—
work (Fig. 2 bottom left) and a network resulting from averaging

Expression profiles for the A. thaliana simulated wild type AU PR for The A- Thaliana Circadian CIOCk model
- 1 0.3

 

 

 

 

 

 

 

an
E 0 6
c 0.5 a: .
g “- o 4
w o \ 2 _
g \ \ \ x 0.2
a: _ _. o
o 5 10 T15 2° 25 30 No Noise so SNR 1o SNR
Ime . .
True network HRS - Random Inferreé'jlﬂéJ atg’r'kgiga set
-genieS
TOC1 |:I Inferelator W‘RATOC1
Y 1:1 LAsso Yg
LHY |:ISp|ines I LHY
Gr; -[S)%|gieswnhs GK
RF" - 033 with 3 RR?
PRR9 PRR9

Fig. 2. Top left is the simulated gene expression profiles for the wild-type
dataset with SNR 100. Top right is the AU PR values for the two different noise
levels. Bottom left is the true network topology, gradient lines represent regu-
lation, solid lines bidirectional regulation. Bottom right is the inferred network
topology obtained by setting a threshold of 0.5 over the inferred matrix H
(average over the 100 repetitions at 1OSNR)

over all inferred networks at 10SNR and setting a threshold of 0.5
over the inferred matrix H (Fig. 2 bottom right). We notice that the
0.5 threshold, while reasonable, is still arbitrary and is used here
only for the purposes of graphical visualisation. The full output
from the method is a probability over the existence of edges, and
can be better visualized as a heatmap, see Supplementary
Information Sections 1.2 and 2. Directed edges are represented by a
gradient line (from regulators in blue to targets in red on the color
version of the figure), black edges mean bidirectional regulation. As
can be appreciated important features such as the bidirectional regu—
lation between ‘LHY’—‘PRR7’ and ‘LHY’—‘PRR9’ are recovered.
Errors are related to the roles of ‘PRR7’ and ‘PRR9’ regulating ‘GI’
instead of ‘TOC1’. This may be due to the method confounding the
effects of ‘TOC1’ over these former elements as being closer to the
expression patterns of GI. This difficulty discriminating between the
roles of the ‘PRR’ genes is also expressed by inferring the spurious
bidirectional edge between ‘PRR7’—‘PRR9’.

3.3 DREAM Challenge

As a second example, we considered a dataset from the fourth edi—
tion of the DREAM competition (Marbach et al., 2010).This dataset
is obtained from simulating a 10—node network, of which three
nodes are input nodes; 15 regulatory links are present. Three simula-
tions were present, one with an ODE—based system, another one
with a Stochastic Differential Equation (SDE) system and a third
one with SDE—based system and added experimental noise. Five time
series are provided for each system, a time series contains 21 sam—
ples. The network is subjected to a single node perturbation, which
mathematically corresponds to a change in the basal expression par—
ameter, so the mean expression level of the node changes for half of
the time points. The expression profiles for the set of 10 genes in one
time series is presented in Figure 3, top left. This dataset does not
comply with the main assumption of the model (it shows irregular
damped oscillations); we therefore expect performance not to be op—
timal, but it is still useful to evaluate comparatively the model under
such a model mismatch scenario.

Figure 3 shows a comparison of the area under the P—curve for
the three simulated systems. Of these, DSS achieves better perform—
ance in the ODE—based simulation, by having an AUPR of 0.31,
higher than the nearest best method (GENIE3). Inferelator could not
be executed on this dataset due to numerical issues (some expression
levels are exactly zero in this example). The performance improved
for the SDE—based simulation, by achieving an AUPR of 0.35, above
inferelator’s 0.27. Slightly worse results were achieved for the SDE
model with experimental noise, achieving an AUPR of 0.3. By simu—
lating a sequence similarity matrix performance was improved for

 

 

WM”“MW'W“EMWW M mrnmmmwinmnnmmamm

[ID _ .
'-.-. '.—'_‘__F"\-. .2", '75-‘3— ... :__
Ian 'I' Il_i-l_._l-\.I ___ .‘_l_-‘_ "L,_.-' 551...,

I“. .I - I. . .IL __._. ._ I: _  .
l '. raw" 9“ 27‘???” _
n2 ﬂan-r,“ I. --..., -1._.--_-1_-- -

__1--.' -4154:

 

F1. - _

1D 15. 1o

 

 

 

 

5
Tune mama: "' Infmrl numeric
'31- '33- “or “or
'65" 'GE' 'GE' ' J'GE'
131'

135' ' 1131' we": 
"GTEJEMEGN' wgéiﬁr G1?

Fig. 3. Top left is the expression profiles for the SDE model with experimental
noise, node ‘G9' in red presents a perturbation over half the time points. Top
right is the AUPR values for the three simulation models. Bottom left is the
true network topology, gradient lines represent regulation, solid lines repre-
sent bidirectional regulation. Bottom right is the inferred network obtained by
setting a threshold of 0.5 over the inferred matrix H

112 /810's112umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

3622

D. Trejo Banos et al.

 

both ODE and SDE solutions. In the case of SDE the solution im-
proved dramatically to 0.42.

As in the previous experiment, the network and its inferred coun—
terpart are presented in Figure 3 bottom left and bottom right, re—
spectively. The inferred network is obtained by setting the threshold
to 0.5 over the inferred adjacency matrix for the SDE data with
added similarity matrix. As can be observed in the true network,
nodes ‘G1’ and ‘G10’ are constant inputs. Node ‘G9’ is subjected to
perturbation for half the time points, thus its effect is propagated
through the network by node ‘G5’.

In the inferred network, we can observe some interesting charac—
teristics. First, nodes ‘G1’ and ‘G9’ are identified as input nodes,
node ‘G10’ is incorrectly identified as an output only node. Node
‘G2’ maintains its out—degree of 4 even though it is regulators are
not correctly identified. Nodes ‘G9’ and ‘G5’ are shown with
increased in and out—degree, this may also be due to the confounding
effects of the their ‘parent—son’ relationship, specially considering
that the perturbed ‘G9’ node has the biggest amplitude of the gene
expression profiles, as appreciated by the red curve in the top left
plot in Figure 3.

3.4 Saccharomyces cerevisiae cell cycle

For the last experiment, we used a real time series dataset collected
during the S.cerez/isiae cell cycle. Our evaluation is based on the
genes identified by Haase et al. (2014) and Orlando et al. (2008)
and some of their interactions on the dynamical model found in
Chen et al. (2004). The main transcriptional elements selected were
‘SWI5’, ‘YHPI’, ‘SWI4’, ‘FKHI’, ‘SIC1’, ‘ACE2’, ‘YOXI’, ‘STBI’,
‘NRMl’, ‘WHI5’, ‘FKHZ’, ‘MCMI’, ‘SWI6’, ‘HCM1’, ‘NDDI’ and
‘MBP1’. Their putative regulations were extracted from literature
(see Supplementary Information) for the putative network used as
ground truth.

The source for the gene expression data is Orlando et al. (2008),
it contains two wild—type replicates and two mutant replicates
(Ac/b1,2,3,4,5 ,6) each one containing 14 samples for each gene
during N2 cell cycles. Additionally, we downloaded promoter se—
quence information from Zhu et al. (1999) for all the network elem—
ents. We then proceeded to use the multiple alignment software
Clustal Omega (Sievers et al., 2011) to obtain an alignment—based
similarity matrix S between sequences. As an alternative way of
encoding sequence information, an alignment-free similarity matrix
52 was built using the method described in Sims et al. (2009).

We tested three subsets of data, one containing only the wild-
type expression profiles, other containing only the mutants expres—
sion levels, the last dataset was the normalized concatenation of
both. As an example of the observed gene expression levels, Figure 4
top panel shows the gene expression levels for the wild—type
conditions.

The AUPR from applying the various methods to this data are
presented in Figure 4 bottom left panel. In this case DSS identifies
the putative network well above the random baseline of 2.1 and
above the competing methods. In the case of wild types the AUPR of
DSS was of 0.24. In the mutant datasets, the performance of DSS
improves by including sequence similarity achieving an AUPR of
0.2607 and 0.2608 for S and S2, respectively. The best overall per—
formance was achieved by using the combined dataset with sequence
similarity matrix S2, resulting in an AUPR of 0.267.

The network in (Fig. 4) bottom right is obtained by setting the
threshold of 0.9 to the inferred network from the combined wild
type and mutant dataset with added similarity matrix. In this case,
FKH1 has a central role in the inferred network, being fully

'II'II'Ild type 5. cmvln: expression level profit:
I I

 

 

 

 

I2 - _,- -' ' " ' - - — —
E. -_ —-—';._'.-_ — ——__
E 11 _. ' I _d__:-'”-'.-_-5:r_'_ﬁ_ Ix _.-'-""- I_— . _ -"-
. .. ' , w" 1"» a “a.  "-—.._ ...--_
E "I: - 1:”, .-.L_ _-_I-I_,_L_ at! '_ ___H_.-I- I___...='|=:__

. . .-' ' {L _ — _ .I'

E1“   fvjifcztt? - - — _ '1_ __._._--.'_:;a ,__—_--=.:.-T-_'
Lu  .' - "."r' T" _ - - _ I “'

B " _..r'-_',.--' {1.x HE __ __ — — —_

-,_—_..._..r-' _ . ._ .__ r;
n """_'_-__—F__‘_'——o-"TTTI | I
"II 5 In
Time

   

E I: — 3pm
3 U 15 :lsnlhe mm 3
-E155
11.1 -t:ue.s wﬂh s
u :5 -ps§ unll‘l 52
n
'Md'lypu hurt 'Mtllwland mum

Bm'ulaﬂm data set

Fig. 4. Top wild-type yeast expression profiles for the selected genes, bottom
left AUPR for the three different data combinations, wild type, mutants
and both. Bottom right network obtained by setting a threshold of 0.9 over
matrix H

connected to the other elements. Even though this fully connected
position is biologically implausible, it does reinforce the important
role of FKH1 in the cell cycle, e.g. its role in regulating the M—phase
response (Kumar et al., 2000). Another noticeable inferred link con-
cerns the post—transcriptional regulation of SWI6 by WHI5p
(Turner, 2012); this regulation was also considered as part of the
ground truth network, as in the case of the yeast cell cycle transcrip—
tional and post—transcriptional regulations are intertwined (Haase
et al., 2014). Also worth noticing the regulation of SWI6 by YOX1
(member of the SBF complex) even though evidence suggests causal—
ity may be in the opposite direction (Venters, 2011). SWI4 and
SWI6 form part of transcription factor complexes SBF and MBF, as
such, their regulations may be confounded. This can be appreciated
in the regulation of NRM1 by SWI4 in the inferred network, when
in fact NRM1 appears to be regulated by SWI6 (DeJesus et al.,
2013). The transcriptional activator NDD1 is essential during the S—
phase (Loy et al., 1999), NDD1p along MCM1p bind to FKH2p
(Haase et al., 2014), this effect may be observable in the inferred
network by directed edges from NDD1 to YOX1 and from YOX1
t0 FKH2.

By observing the AUPR plot we see that mutant data appears to
be more informative in this case than wild type, being only margin-
ally inferior to the combined dataset with similarity matrix. Part of
the experimental design in selecting mutations in Orlando et al.
(2008) was aiming at attenuating the effects of the post—transcrip—
tional elements of the cell cycle; the stronger performance of our
method on the mutant datasets may be explained by this experimen-
tal design.

Generally, the DSS solution will find the most relevant edges in
the network to explain the observed dynamics, while the DSS with
similarity method will find the most relevant solution that includes a
grouping of the proposed edges according to the similarity matrix.
So both results can be analysed separately and may offer additional
insight over the whole network behaviour. With this purpose the six
inferred networks and the putative ground truth are included in
Supplementary information Figure S3 for analysis.

4 Discussion

Inference of gene regulatory networks from expression data is one
of the best studied problems in systems biology. Despite this consid—
erable collective effort, the general problem remains ill—posed and,

112 /810's112umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Oscillating network structure learning

3623

 

in the absence of extensive datasets and strong domain expertise, a
solution to this problem remains elusive. In this light, it is of interest
to consider more delimited problems which may be amenable to spe—
cialised but more effective solutions. Oscillatory systems present a
prime example of such a problem: while they obviously constitute a
specialized subset of regulatory networks, in our opinion they are
sufficiently widespread to warrant tailor—made solutions. DSS cou—
ples a simplified mechanistic approach (LTI) with frequency domain
information to provide such a method. LTI methods in the time do—
main for A. thaliana with experimental data have been studied in
Dalchau (2011). Our results on the circadian clock simulation sug—
gest that this frequency domain approach can indeed be fruitful
when the model assumptions are reasonably met. As results over the
DREAM and S. cerevisiae datasets suggest that the method can per—
form competitively with state of the art methods also when the
model assumptions are not precisely met (damped oscillatory behav—
iour); however, in these cases the method’s competitive advantage is
smaller or inexistent.

The use of derivative and ODE information in a network infer-
ence framework has some precedents. A method that is in spirit
similar to our approach is Inferelator (Bonneau et al., 2006). It casts
the network inference problem as a a parameter inference problem
over a first order differential equation system, then estimates the sys—
tem parameters via regularized regression over a finite differences
solution to the system. Recently Bayesian approaches that make use
of the derivative information have also been proposed. In Oates
et al. (2012), a probabilistic model for integrating a linearized ver-
sion of network dynamics in a regression framework is presented.
Dondelinger et al. (2013) attacked the problem of parameter infer—
ence of an ODE system jointly with a Bayesian regression over the
gene expression levels. The basis of this model is a Gaussian process
with product of experts likelihood, not dissimilar from our model in
Equation (5). However, the authors in Dondelinger et al. (2013) did
not attempt a joint parameter estimation and variable selection
problem, stopping short of formulating the problem in terms of net—
work inference. Basis functions in time domain (splines) have al—
ready been applied to network inference problems in systems
biology to model unknown non—linear transition functions
(Morrissey et al., 2011); to our knowledge, splines were not directly
used to turn the network inference problem into a regression prob—
lem in the projected space in the spirit of our contribution. The dis—
tinctive part of our work is the proposal of a frequency domain
approach for oscillatory systems, and in particular the embedding of
our method within a hierarchical framework where integration of
additional information is natural. We expect that non—linearities
encoded as basis functions as in Morrissey et al. (2011) would be a
valuable extension of our work and likely result in an improvement
in performance.

While we believe that the DSS method provides promising re-
sults, there are several inherent limitations in our approach.
Importantly, the LTI approximation implies that self—regulation is
confounded with decay, so such types of interactions cannot be iden—
tified. Empirical results also seem to suggest that post—transcrip—
tional interactions may be confounded with transcriptional
interactions; this is to be expected, as post—transcriptional inter—
actions are not modelled in our framework. For such reasons, direct
application to models that include complex post—transcriptional
interactions, such as Pokhilko et al. (2012), is not advised.
Furthermore, as all Bayesian network inference methods, DSS also
suffers from multi—modal posterior distributions. The use of auxil—
iary information, such as sequence similarity, can be beneficial to
ameliorate this problem. Many different types of auxiliary

information can be considered, and indeed alternative models for
incorporating sequence similarity could also be used. A major
strength of a Bayesian hierarchical model is that different models for
auxiliary information could be easily incorporated within the DSS
framework.

Acknowledgement

We thank Botond Cseke, Van-Anh Huynh-Thu and Daniel Seaton for useful
discussions. The GENIE3 software adapted for time series data was kindly
provided to us by Dr Van-Anh Huynh-Thu.

Funding

“D.T.B. was funded by Microsoft Research through its PhD Scholarship
Programme”. G.S. acknowledges support from the European Research
Council under grant MLCS30699. SynthSys was founded as a Centre for
Integrative Biology by BBSRC/EPSRC award D19621 to A.].M. and others.

Conﬂict of Interest: none declared.

References

Bell,D. et al. (2005) Circadian rhythms from multiple oscillators: lessons from
diverse organisms. Nat. Rev. Genet., 7, 544—5 5 6.

Bergersen,L.C. et al. 2011. Weighted lasso with data integration. Stat. Appl.
Genet. Mol. Biol., 10, 1—29.

Bonham,O. et al. (2014) Alignment-free genetic sequence comparisons: a re-
view of recent approaches by word analysis. Brief. B ioinform, 15, 890—905.

Bonneau,R. et al. (2006 ), The inferelator: an algorithm for learning parsimoni-
ous regulatory networks from systems-biology data sets de novo. Genome
Biol., 7, R36.

Charbonnier,C. et al. (2010) Weighted-LASSO for structured network infer-
ence from time course data. Stat. Appl. Genet. Mol. Biol., 9, 15.

Chen,K.C. et al. (2004) Integrative analysis of cell cycle control in budding
yeast. Mol. Biol. Cell, 15, 3841—3862.

Dalchau,N. (2012) Understanding biological timing using mechanistic and
black-box models. New Phytol., 193, 852—858.

De]esus,M. et al. (2013) A hidden Markov model for identifying essential and
growth-defect regions in bacterial genomes from transposon insertion
sequencing data. BMC Bioinformatics, 14, 303.

Dondelinger,F. et al. (2012) Dynamic Bayesian networks in molecular plant
science: inferring gene regulatory networks from multiple gene expression
time series. Eaphytica, 183, 361—377.

Dondelinger,F. et al. (2013) ODE parameter inference using adaptive gradient
matching with Gaussian processes. In: Sixteenth International Conference
on Artiﬁcial Intelligence and Statistics 29 Apr—1 May 2013, Scottsdale, AZ,
USA, pp. 216—228.

Edwards,K.D. et al. (2010) Quantitative analysis of regulatory ﬂexibility
under changing environmental conditions. Mol. Syst. B iol., 6, 425.

Faith,].]. et al. (2007) Large-scale mapping and validation of Escherichia coli
transcriptional regulation from a compendium of expression proﬁles. PLoS
Biol., 5, e8.

Greenﬁeld,A. et al. (2013) Robust data-driven incorporation of prior know-
ledge into the inference of dynamic regulatory networks. Bioinformatics,
29, 1060—1067.

Haase,S.B. et al. (2014) Topology and control of the cell-cycle-regulated tran-
scriptional circuitry. Genetics, 196, 65—90.

Haury,A.-C. et al. (2012) TIGRESS: trustful inference of gene regulation using
stability selection. BMC Syst. Biol., 6,145.

Huynh-Thu,V.A. et al. (2010) Inferring regulatory networks from expression
data using tree-based methods. PLoS One, 5, e12776.

Huynh-Thu,V.A. et al. (2015) Combining tree-based and dynamical sys-
tems for the inference of gene regulatory networks, Bioinformatics,
31,1614—1622.

Ishwaran,H. et al. (2005 ) Spike and slab variable selection: frequentist and
Bayesian strategies. Ann. Stat., 33,730—773.

112 /310's112umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

3624

D. Trejo Banos et al.

 

Kuffner,R. et al. (2012) Inferring gene regulatory networks by ANOVA.
Bioinformatics, 28, 1376—13 82.

Kumar,R. et al. (2000) Forkhead transcription factors, Fkh1p and Fkh2p, col-
laborate with Mcmlp to control transcription required for m-phase. Curr.
Biol., 10, 896—906.

Li,F. et al. (2004) The yeast cell-cycle network is robustly designed. Proc. Natl
Acad. Sci. USA., 101, 4781—4786.

Li,F. et al. (2006) Inferring Regulatory Networks Using a Hierarchical
Bayesian Graphical Gaussian Model. Carnegie Mellon University, School of
Computer Science, Machine Learning Department, Retrieved October 2014
from http://reports-archive.adm.cs.cmu.edu/anorﬂanon/usr/ftp/ml/CMU-
ML-06-117.pdf..

Loy,C.]. et al. (1999) NDD1, a high-dosage suppressor ofcdc28-1n, is essential
for expression of a subset of late-s-phase-speciﬁc genes in Saccharomyces
cerevisiae. Mol. Cell. Biol., 19, 3312—3327.

Marbach,D. et al (2010), Revealing strengths and weaknesses of
methods for gene network inference. Proc. Natl Acad. Sci. USA., 107,
6286—6291

Margolin,A.A. et al. (2006) ARACNE: an algorithm for the reconstruction of
gene regulatory networks in a mammalian cellular context. BMC
Bioinformatics, 7(Suppl 1), S7.

McClung,C.R. (201 1) The genetics of plant clocks. Adv Genet., 74, 105—139.

Mirkin,B.G. (1987) Additive clustering and qualitative factor analysis meth-
ods for similarity matrices. ]. Classif, 4, 7—31.

Morrissey,E.R. et al. (201 1) Inferring the time-invariant topology of a nonlin-
ear sparse gene regulatory network using fully Bayesian spline autoregres-
sion. Biostatistics, 12, 682—694.

Oates,C.]. and Mukherjee,S. (2012) Network inference and biological dy-
namics. Ann. Appl. Stat., 6, 1209—1235.

Orlando,D.A. et al. (2008) Global control of cell-cycle transcription by
coupled CDK and network oscillators. Nature, 453, 944—947.

Pokhilko,A. et al. (2010) Data assimilation constrains new connections and
components in a complex, eukaryotic circadian clock model. Mol. Syst.
Biol., 6, 416.

Pokhilko,A. et al. (2012) The clock gene circuit in Arabidopsis includes a
repressilator with additional feedback loops. Mol. Syst. Biol., 8, 574.

Pramila,T. (2006 ) The forkhead transcription factor Hcm1 regulates chromo-
some segregation genes and ﬁlls the s-phase gap in the transcriptional cir-
cuitry of the cell cycle. Genes Deu, 20, 2266—2278.

Sievers,F. et al. (2011) Fast, scalable generation of high-quality protein
multiple sequence alignments using Clustal Omega. Mol. Syst. B iol., 7, 539.

Sims,G.E. et al. (2009), Alignment-free genome comparison with feature fre-
quency proﬁles (FFP) and optimal resolutions. Proc. Natl Acad. Sci. USA.,
106, 2677—2682.

Spellman,P.T. (1998) Comprehensive identiﬁcation of cell cycle regulated
genes of the yeast Saccharomyces cerevisiae by microarray hybridization.
Mol. Biol. Cell, 9, 3273—3297.

Tibshirani,R. (1996) Regression shrinkage and selection via the lasso. Journal
of the Royal Statistical Society. Series B (Methodological). 58, 267—288.

Turner,]. (2012) Cell size control in yeast. Curr. Biol., 22, R350—R359.

Venters,B.J. (2011) A comprehensive genomic binding map of gene and chro-
matin regulatory proteins in Saccharomyces. Mol. Cell, 41, 480—492.

Zhu,]. et al. (1999), SCPD: a promoter database of the yeast Saccharomyces
cerevisiae. Bioinformatics, 15 , 607—6 11.

112 /310's112umo [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

