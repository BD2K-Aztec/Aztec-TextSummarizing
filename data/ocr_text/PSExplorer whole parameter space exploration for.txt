Vol. 26 no. 19 2010, pages 24 77-24 79
APPS NO  doi:10.1093/bioinformatics/btq440

 

Systems biology

Advance Access publication August 2, 2010

PSExplorer: whole parameter space exploration for molecular

signaling pathway dynamics
Thai Quang Tung and Doheon Lee*

1Department of Bio and Brain Engineering, KAIST 373—1 Guseong—dong, Yuseong—gu, Daejeon 305—701,

Republic of Korea
Associate Editor: Trey Ideker

 

ABSTRACT

Motivation: Mathematical models of biological systems often have
a large number of parameters whose combinational variations can
yield distinct qualitative behaviors. Since it is intractable to examine
all possible combinations of parameters for non-trivial biological
pathways, it is required to have a systematic strategy to explore the
parameter space in a computational way so that dynamic behaviors
of a given pathway are estimated.

Results: We present PSExplorer, a computational tool for exploring
qualitative behaviors and key parameters of molecular signaling
pathways. Utilizing the Latin hypercube sampling and a clustering
technique in a recursive paradigm, the software enables users to
explore the whole parameter space of the models to search for
robust qualitative behaviors. The parameter space is partitioned
into sub-regions according to behavioral differences. Sub-regions
showing robust behaviors can be identified for further analyses. The
partitioning result presents a tree structure from which individual
and combinational effects of parameters on model behaviors can
be assessed and key factors of the models are readily identified.
Availability: The software, tutorial manual and test models
are available for download at the following address:
http://gto.kaist.ac.kr/~psexplorer

Contact: tqtung@kaist.ac.kr; tqtung@gmail.com

Received on April 26, 2010; revised on July 4, 2010; accepted on
July 25, 2010

1 INTRODUCTION

Computational modeling is a valuable tool to understand the
complex biological systems. Such models often possess complex
topological structures with multiple positive and/or negative
feedbacks and a large number of parameters so that combinational
perturbations on these parameter values can greatly affect qualitative
behaviors of the models. Two important issues in this approach are
to understand the scope of behaviors that the model can experience,
and to identify key parameters regulating the behaviors.
Bifurcation analysis (Borisuk and Tyson, 1998) is one of well—
developed methods for qualitative behavior analysis of dynamical
models. Its application to systems biology is limited, however, since
it can examine the effects of only a few parameters, mostly one or
two at a time. Although a tool for the global parametric perturbation
analysis of biochemical models is available (Zi et al.. 2008), it is
focusing on parameter sensitivity analysis, i.e. a quantiﬁcation of

 

*To whom correspondence should be addressed.

individual effects of parameter variations respecting to quantitative
changes in the model outputs.

In this note, we outline PSExplorer, an efﬁcient computational
tool to explore high—dimensional parameter space of biochemical
models for identifying qualitative behaviors and key parameters.
The software supports input models in SBML format. It provides
a friendly graphical user interface allowing users to vary model
parameters and perform time—course simulations at ease. Various
graphical plotting features helps users analyze the model dynamics
conveniently. Its output is a tree structure that encapsulates the
parameter space partitioning results in a form that is easy to visualize
and provide users with additional information about important
parameters and sub—regions with robust behaviors.

2 METHODS

An ordinary differential equation (ODE) model of a biochemical network is
often represented in the following form:

dX

E=f(X,0);X(I=0)=X0 (1)
where X is a vector of state variables and X0 a vector of their corresponding
initial values; 0 is a vector of kinetic parameters.

To begin with, users are required to specify a set of k parameters
P1,P2, ...,Pk (P,- can be a kinetic parameter or an initial value, 1' = 1,2, ...,k)
and their admissible value ranges to be perturbed; a set of target variables
to represent the model behaviors; for convenience, let us say that there is
only one target variable Y. The general framework of PSExplorer has six
steps that are performed in a recursive manner. To help readers grasp main
concepts, an illustrative example is provided in Figure l complementing to
following brief explanations of the steps:

(1) Latin hypercube sampling technique (Helton er al., 2005) is used to
generate N points in the parameter space (Fig. 1A); N is initially
speciﬁed by users. Each sampling point represents a parameter
combination pm 2 [pl-1,193, ...,pl-k] whose element pl-j is a randomly

generated value of the parameter Pj within its admissible range.
(2 For each pm, the software solves the set of ODEs in (1) to estimate

temporal proﬁle y(i)of the target variable, (Fig. 1B).

V

(3) The simulated temporal proﬁles are grouped into 6 clusters (Fig. 1C)
using a feature—based k—mean clustering algorithm. Each cluster is
regarded as a qualitative behavior of the model. The software supports
a set of features from which users need to select a subset that ﬁts to
their analysis purpose. The number of clusters is speciﬁed by users.

(4

V

This step is to estimate a vector b“) = [bl-119,2, ...,bl-C] for each y“);
where lay-(1' = 1,2, ...,c) is the similarity measure between ya) and j—th
cluster center. For visualizing, we assign each pm to a cluster j if bi]-
is the maximum value of b“), then points in each cluster is plotted
with a distinct color in the parameter space as shown in Figure 1D.

 

© The Author(s) 2010. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/2.5), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIHJOJUIOIQ/ﬁdnq urog popeoprmoq

9IOZ ‘Ig1sn8nv I102:

IQ.Tung and D.Lee

 

 

 

 

 

 

 

 

 

     

 

 

B C E 3-;
E E
LL .I.
|.. I"
| . ' .
E E
.— li: 5:
F FIE 3:;
s 2 r.
:- _ I 'l 9:an .m: ' n’ ' '  '-'r-' mir-
: E} TII I: [II II: II Ilt'l:l I l:|
‘5 chm] diam-rm":
' I _.. _ _ r - .
g I 5, . E I,. éw
a :L. *1 'E' '
l_- __—_
E E I;
i- _l
f 
7 1‘. .
. a . .
T ""6 1'1""! _ _ Elf. _:_I_'._ my”
TIF'IE Ll'l'll': TI’I'II':-:I"'l’l:|

-’-i'll'l"

".-|L|".I.'

 

 

 

 

 

 

 

 

 

 

Fig. 1. An example illustrating a 2—parameter perturbation analysis of a pathway model. (A) Parameter space is ﬁlled with sampling points. (B) Plotting
of simulation results. (C) Clustering shows three distinctive clusters representing model qualitative behaviors. (D) Sampling points is colored respecting to
clustering results. (E) The parameter space is nicely partitioned into sub—regions with different behaviors. (F) A tree represents the parameter space partitioning.

(G) Parameter ranking estimated from the tree.

(5) Let Bj(j=1,2,...,c) be a variable representing similarity measure
between the j—th cluster center and simulated temporal proﬁles.
Considering a regression problem where P1,P2, ...,Pk are predictors
and 31,32, ...,BC are responses, a multi—response regression (Segal,
1992) is constructed using N learning cases <p(i), b“) > (i:
1,2,...,N). Loosely speaking, the goal of this step is to partition the
parameter space into sub—regions containing homogenous points (as
shown in Fig. 1E). The partitioning is represented in a binary tree
(Fig. 1F) whose terminal nodes correspond to the sub—regions.

(6

V

Heterogeneous sub—regions are identiﬁed and additionally sampled
with N0 (speciﬁed by users) points. These sampling points are
proportionally distributed to the sub—regions respecting to their
heterogeneities. The Steps 2—6 are then repeated iteratively until
the total number of generated parameter combinations exceeding a
maximum value. Note that in Step 2, simulations are performed only
on a newly generated data and results are combined with the data of
previous iterations. N is then replaced by N +N0 afterward.

Finally, PSExplorer presents the result tree from Step 5 of the ﬁnal iteration
in a graphical format where users can intuitively pinpoint regions of robust
behaviors for further analyses. From the tree structure, the software evaluates
parameters in terms of their importance and key parameters can be readily
to be identiﬁed (Fig. 1G).

3 EXAMPLE

An application example of how to use PSExplorer to study system
dynamics of computational models is provided in the user’s manual
of the software. The Wnt—ERK crosstalk model (Kim et al., 2007)
is selected as an example model. Fifty—ﬁve kinetic parameters of the
model were varied from 10—1 to 101 times of their reference values.
PSExplorer has identiﬁed ﬁve distinct qualitative behaviors. Three
among them were mentioned in a previous study explaining co—
operatively working modes of the two pathways. In contrast, the two
remaining ones show that ERK and Wnt can behave independently
regardless the existence of a hidden positive feedback between them.
Literature information has been found to support the existence of

such behaviors. We refer readers to the user’s manual for a detail
description of the example.

4 DISCUSSION

It is imperative to employ an in silico analysis to systematically
identify the speciﬁc perturbations that have signiﬁcant effects on the
system behaviors, especially when numerous experiments on living
systems are not practical. Globally perturbing model parameters
to analyze system dynamics was used in previous studies (Hua
et al., 2006; Sung et al., 2009). For automating the approach,
PSExplorer has been developed from the framework proposed by
Hua et al. (2006) with necessary reﬁnements to boost computational
performance.

Instead of using an exhaustive sampling approach, PSExplorer
utilizes a novel recursive stratiﬁed sampling approach that can
help explore high—dimensional spaces efﬁciently. On each recursion
step, the Latin hypercube sampling requires less samples to be
generated, thanks to its balancing distribution property. Then, the
coupling of a clustering algorithm with a regression tree model
provides a mean for a parameter space stratiﬁcation, which allows
the sampling process to concentrate on highly heterogeneous regions
while ignoring homogeneous ones. As a result, the number of
samples required to properly explore the parameter spaces can
signiﬁcantly reduce.

Last but not the least, one unique feature of the software that
makes it more interesting than the sensitivity analysis technique is
the ability to identify combinatory effects of parameter variations
on model behaviors. The result tree not only identiﬁes sensitive
parameters but it also can tell how they combine to produce a speciﬁc
behavior of interest.

Funding: WCU (World Class University) program (R32—2008—
000—10218—0) and Korean Systems Biology Research Project
(20100002164) of the Ministry of Education, Science and

 

2478

112 /3.IO'SIBUJHOIpJOJXO'SOHBIHJOJUIOIQ/ﬂdnq 11101; prBOIUAAOG

9IOZ ‘Ig lsnﬁnv (10::

PSExplorer

 

Technology (MEST) through the National Research Foundation of
Korea.

Conﬂict of Interest: none declared.

REFERENCES

Borisuk,M.T. and Tyson,J.J. (1998) Bifurcation analysis of a model of mitotic control
in frog eggs. J. Theor. Biol., 195, 69—85.

Helton,J.C. et al. (2005) A comparison of uncertainty and sensitivity analysis results
obtained with random and Latin hypercube sampling. Reliab. Eng. Syst Saf, 89,
305—330.

Hua,F. et al. (2006) Integrated mechanistic and data-driven modelling for multivariate
analysis of signalling pathways. J. R. Soc. Inteiface, 3, 515—526.

Kim,D. et al. (2007) A hidden oncogenic positive feedback loop caused by crosstalk
between Wnt and ERK pathways. Oncogene, 26, 4571—4579.

Segal,M.R. (1992) Tree-structured methods for longitudinal data. J. Am. Stat. Assoc,
87, 407—418.

Sung,M.H. et al. (2009) Sustained oscillations of NF-kappaB produce distinct genome
scanning and gene expression proﬁles. PLoS One, 4, 67163.

Zi,Z. et al. (2008) SBML-SAT: a systems biology markup language (SBML) based
sensitivity analysis tool. BMC Bioinformatics, 9, 342.

 

2479

112 /810'smumofploarxosor1nu1101urorq//zd11q 111011 pep1201umoq

9IOZ ‘Ig lsnﬁnv (10::

