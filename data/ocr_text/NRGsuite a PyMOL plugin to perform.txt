Bioinformatics, 31 (23), 2015, 3856—3858

doi: 10.1093/bioinformatics/btv458

Advance Access Publication Date: 6 August 2015
Applications Note

 

 

Structural bioinformatics

NRGsuite: a PyMOL plugin to perform docking
simulations in real time using FlexAID

Francis Gaudreault, Louis-Philippe Morency and

Rafael J. Najmanovich*

Department of Biochemistry, Faculty of Medicine and Health Sciences, University of Sherbrooke, Sherbrooke,

Canada

*To whom correspondence should be addressed.
Associate Editor: Anna Tramontano

Received on November 28, 2014; revised on July 22, 2015; accepted on August 2, 2015

Abstract

Ligand protein docking simulations play a fundamental role in understanding molecular recogni-
tion. Herein we introduce the NRGsuite, a PyMOL plugin that permits the detection of surface cav-
ities in proteins, their refinements, calculation of volume and use, individually or jointly, as target
binding-sites for docking simulations with FlexAlD. The NRGsuite offers the users control over a
large number of important parameters in docking simulations including the assignment of flexible
side-chains and definition of geometric constraints. Furthermore, the NRGsuite permits the visual-
ization of the docking simulation in real time. The NRGsuite give access to powerful docking simu-
lations that can be used in structure-guided drug design as well as an educational tool.
The NRGsuite is implemented in Python and C/C++ with an easy to use package installer. The

NRGsuite is available for Windows, Linux and MacOS.

Availability and implementation: http://bcb.med.usherbrooke.ca/flexaid.

Contact: rafael.najmanovich@usherbroke.ca

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Docking simulations can be used to understand the specificity and
selectivity of ligands as well as guide in the identification and design
of inhibitors. Docking simulations seek to address three inter-
dependent but distinct problems: (i) The prediction of the structure
of a ligand-protein complex (binding mode), (ii) The discrimination
of binders from non-binders (virtual screening) and (iii) The predic-
tion of binding affinities. Docking methods are not yet successful in
these three tasks simultaneously (Huang et al., 2010). FlexAID was
primarily developed with the task of predicting binding modes.
When docking on non-native-complex structure (i.e. the structure of
the target was not crystallized in the presence of the ligand of inter-
est), FlexAID has been shown (Gaudreault and Najmanovich, 2015)
to outperform existing methods such as AutoDock Vina (Trott and
Olson, 2010) and FlexX (Kramer et al., 1999) irrespective of target
ﬂexibility as well as rDock (Ruiz-Carmona et al., 2014) when side-
chain conformational changes are crucial.

©The Author 2015. Published by Oxford University Press.

PyMOL (DeLano) is a powerful, open source program for
molecular visualization that allows users to extend the capabilities
of the program via plugins. The source code of the latest ver-
sion 1.7.6 of PyMOL is available in Sourceforge. Two PyMOL plu-
gins exist for docking simulations (Lill and Danielson, 2011;
Seeliger and de Groot, 2010), both use AutoDock Vina and require
additional software compilation/installation. The latter permits
docking with SLIDE (Zavodszky et al., 2002) but requires an
AMBER license.

A number of docking web-servers exist, including SwissDock
(Grosdidier et al., 2011), istar (Li et al., 2014), Rosetta (Combs
et al., 2013) and DOCK Blaster (Irwin et al., 2009) primarily
focused on virtual screening. In this work we present the NRGsuite,
an open-source and self-contained precompiled PyMOL plugin
(for PyMOL versions 1.2 and above) focused on the prediction of
binding-poses with docking simulations. The NRGsuite cohesively
combines tools we develop (GetCleft and FlexAID) into an intuitive

3856

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 ﬂJO'sleumo[pJOJXO'sopeuuogurorq/ﬁdnq IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

Docking simulations in PyMOL

3857

 

and project-oriented environment making structure-guided drug
design accessible to non-experts.

2 GetCleft

The definition of the binding-site is important in docking simula-
tions. Whereas in the case of single chain enzymes the binding-site
lies within the largest cleft in 83% of cases (Laskowski et al., 1996),
the volume occupied by the binding-site within this cleft is smaller
(Glaser et al., 2006; Kahraman et al., 2007). At a practical level,
easy to use tools for the detection, refinement and measurement of
the volume of buried cavities and surface clefts are not readily avail-
able. In the NRGsuite we implement the SURFNET algorithm
(Laskowski, 1995) to detect surface clefts and buried cavities in
proteins and nucleic acids. Our implementation of the SURFNET
algorithm is called GetCleft. In short, for every pair of atoms in the
macromolecule, we assess the possibility of placing a sphere mid-
point between them with the largest possible radius within a user-
defined range that does not overlap with the van der Walls surface
of any atom. Surface exposed clefts as well as buried cavities are
defined by the union of overlapping spheres and are roughly sorted
by volume. The user can refine the shape of any cleft or cavity
interactively and accurately measure their volumes (Supplementary
Fig. S1). Users can save and utilize any original or refined cleft and
cavities as target binding-sites in docking simulations. Whereas an
alternative PyMOL plugin for the detection of cavities is available
for Linux and Windows (Oliveira et al., 2014) the resulting cavities
cannot be used with FlexAID and the NRGsuite.

3 FlexAID

The NRGsuite interface for FlexAID contains four primary panels
to define the input target and ligand to be docked, configuration of
the target and ligand and simulation. Two further panels (Scoring
and Genetic algorithm) give access to more advanced parameters.
Each panel is brieﬂy described in what follows.

3.1 Input files

Both target and ligand can be defined from the list of PyMOL
objects or loaded from a previously saved NRGsuite session.
Ligands can also be input with the use of SMILES strings. SMILES
strings can be easily found in databases such as PubChem or
ChEMBL for existing molecules or produced with chemoinformatics
software. FlexAID utilizes internal coordinates and defines automat-
ically an anchor ligand atom as the center of rotation and transla-
tion. Users can however choose to define the anchor atom
themselves. Targets must be loaded into PyMOL but are not
restricted to experimental structures, homology models can also be
used. For further details see Gaudreault and Najmanovich (2015).

3.2 Target configuration

In this panel users can define the binding-site search area, for
example using a cleft previously defined with GetCleft. Users can se-
lect and use more than one cleft at the same time to perform a global
search when the binding-site is unknown and interactively choose
binding-site flexible side chains.

3.3 Ligand configuration

Users have full control on ligand degrees of freedom. Whereas rota-
tional and translational degrees of freedom are set by default, in spe-
cific situations a user may wish to restrict them. Users can manually

choose individual ligand bonds as flexible. In all cases the original
ligand pose can be used as reference to calculate RMSD values.
Lastly, users can set distance constraints that can be used to emulate
covalent docking (Duchene et al., 2014).

3.4 Scoring configuration

Other ligands present in complex with the target are considered by
default while water molecules are ignored; again, the user may
change these settings as well as the van der Walls permeability
(decreasing the penalty for steric clashes). Irrespective of the inclu-
sion of structural water molecules in the simulation, FlexAID
considers solvent interactions implicitly. Users can define a solvent
exclusion force or use the pairwise energy parameters considering
the implicit solvent as an extra atom-type. In this panel it is also
possible to change the step size used for sampling translational,
rotational and internal (dihedral angles) degrees of freedom of the
ligand as well as the sampling of side-chain rotameric
conformations.

3.5 Genetic algorithm parameters

FlexAID uses genetic algorithm. A number of important parameters,
notably the number of chromosomes and generations can be defined
in this panel. Additionally, the number of top results that are visual-
ized during the simulation and the frequency (in numbers of gener-
ations) to refresh the visualization can be set.

3.6 Simulate

Once all parameters are set, users can start the simulation and
observe in real time the display of the selected number of top solu-
tions as the simulation progresses (Supplementary Fig. 52). At the
end of the simulation the top 10 results obtained and their potential
hydrogen bonds with the target are displayed. Simulations can be
paused, stopped or aborted. Paused simulations can be restarted and
the final genetic algorithm population of solutions from stopped or
completed simulations can be used to as the initial population to
start a new simulation continuing where the previous one has
stopped. The continuation of a simulation can only be done when
all parameters remain the same except for the genetic algorithm par-
ameters that can be changed. Users can also reload previous simula-
tion results as well as inspect the parameters used.

4 Conclusions

The NRGsuite PyMOL plugin is easy to install, available for
MacOS, Linux and Windows. It gives access to state-of-the-art
docking simulations using FlexAID as well as the analysis of buried
cavities and surface clefts using GetCleft. The NRGsuite can be used
for the prediction of binding poses to understand molecular recogni-
tion and in structure-guided drug design. In our experience the
NRGsuite is also an invaluable educational tool. An extensive man-
ual is available as Supplementary Information and online at http://
bcb.med.usherbrooke.ca/ﬂexaid for up-to-date versions.

Acknowledgements

RJN is part of the CR-CHUS, Institute of Pharmacology of Sherbrooke,
PROTEO (the Québec network for research on protein function, structure
and engineering) and GRASP (Groupe de Recherche Axé sur la Structure des
Protéines).

112 ﬂJO'sleumo[pJOJXO'sopeuuogurotq/ﬁdnq wort pepeolumoq

910K ‘09 lsnﬁnV no :2

3858

F. Gaudreault et al.

 

Funding

FG is the recipient of a PhD fellowship from the Natural Sciences and
Engineering Research Council of Canada (NSERC). LPM is the recipient of a
PhD fellowship from the Fonds de Recherche du Quebec — Nature et technol-
ogies (FRQ-NT). This project was funded by NSERC Discovery Grant
RGPIN—2014-05766.

Conﬂict of Interest: none declared.

References

Combs,S.A. et al. (2013) Small-molecule ligand docking into comparative
models with Rosetta. Nat. Protoc., 8, 1277—1298.

DeLano,W. The PyMOL Molecular Graphics System. Schrodinger, LLC.
(www.pymol.org).

Duchéne,D. et al. (2014) Analysis of subpocket selectivity and identiﬁcation of
potent selective inhibitors for matriptase and matriptase-2. ]. Med. Chem.,
57, 10198—10204.

Gaudreault,F. and Najmanovich,R.]. (2015) FlexAID: revisiting docking on
non-native-complex structures. ]. Chem. Inf. Model., 55, 1323—1336.

Glaser,F. et al. (2006) A method for localizing ligand binding pockets in pro-
tein structures. Proteins, 62, 479—488.

Grosdidier,A. et al. (2011) SwissDock, a protein-small molecule docking web
service based on EADock DSS. Nucleic Acids Res., 39, W270—W277.

Huang,S.-Y. et al. (2010) Scoring functions and their evaluation methods for
protein-ligand docking: recent advances and future directions. Phys. Chem.
Chem. Phys., 12, 12899—12908.

Irwin,].]. et al. (2009) Automated docking screens: a feasibility study. ]. Med.
Chem., 52, 5712—5720.

Kahraman,A. et al. (2007) Shape variation in protein binding pockets and their
ligands]. Mol. Biol., 368, 283—301.

Kramer,B. et al. (1999) Ligand docking and screening with FlexX. Med.
Chem. Res., 9, 463—478.

Laskowski,R. (1995 ) Surfnet—a program for visualizing molecular-surfaces,
cavities, and intermolecular interactions. ]. Mol. Graph, 13, 323—330.

Laskowski,R.A. et al. (1996) Protein clefts in molecular recognition and func-
tion. Protein Sci., 5, 2438—2452.

Li,H. et al. (2014) istar: a web platform for large-scale protein-ligand docking.
PLoS ONE, 9, e85678.

Lill,M.A. and Danielson,M.L. (2011) Computer-aided drug design platform
using PyMOL. ]. Comput. Aided Mol. Des., 25, 13—19.

Oliveira,S.H. et al. (2014) KVFinder: steered identiﬁcation of protein cavities
as a PyMOL plugin. BMC Bioinformatics, 15, 197.

Ruiz-Carmona,S. et al. (2014) rDock: a fast, versatile and open source pro-
gram for docking ligands to proteins and nucleic acids. PLoS Comput. Biol.,
10, e1003571.

Seeliger,D. and de Groot,B.L. (2010) Ligand docking and binding site analysis
with PyMOL and Autodock/Vina. ]. Comput. Aided Mol. Des., 24,
417—422.

Trott,O. and Olson,A.]. (2010) AutoDock Vina: improving the speed and ac-
curacy of docking with a new scoring function, efﬁcient optimization, and
multithreading. ]. Comput. Chem., 31, 455—46 1.

Zavodszky,M. et al. (2002) Distilling the essential features of a protein surface
for improving protein-ligand docking, scoring, and virtual screening.
]. Comput. Aided Mol. Des., 16, 883—902.

112 ﬁlO'SIBIIan[p.IOJXO'SODBIIHOJIITOTQ/ﬂ(11111 111011 pepeolumoq

910K ‘09 lsnﬁnV no 22

