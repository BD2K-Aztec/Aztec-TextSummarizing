Bioinformatics, 32( 14), 2016, 2089—2095

doi: 10.1093/bioinformatics/btw069

Advance Access Publication Date: 16 March 2016
Original Paper

 

Genome analysis

Integrated genome browser: visual analytics
platform for genomics

Nowlan H. FreeseT, David C. Norris* and Ann E. Loraine*

Department of Bioinformatics and Genomics, University of North Carolina at Charlotte, Kannapolis, NC 28081, USA

*To whom correspondence should be addressed.
TThe authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.
Associate Editor: Alfonso Valencia

Received on September 14, 2015; revised on December 6, 2015; accepted on January 20, 2016

Abstract

Motivation: Genome browsers that support fast navigation through vast datasets and provide
interactive visual analytics functions can help scientists achieve deeper insight into biological sys—
tems. Toward this end, we developed Integrated Genome Browser (IGB), a highly configurable,
interactive and fast open source desktop genome browser.

Results: Here we describe multiple updates to IGB, including all—new capabilities to display and
interact with data from high—throughput sequencing experiments. To demonstrate, we describe ex—
ample visualizations and analyses of datasets from RNA—Seq, ChlP—Seq and bisulfite sequencing
experiments. Understanding results from genome—scale experiments requires viewing the data in
the context of reference genome annotations and other related datasets. To facilitate this, we
enhanced lGB’s ability to consume data from diverse sources, including Galaxy, Distributed
Annotation and IGB—specific Quickload servers. To support future visualization needs as new gen—
ome—scale assays enter wide use, we transformed the IGB codebase into a modular, extensible
platform for developers to create and deploy all—new visualizations of genomic data.

Availability and implementation: IGB is open source and is freely available from http://bioviz.orgﬁgb.

 

Contact: aloraine@uncc.edu

 

1 Introduction

Genome browsers are visualization software tools that display gen—
omic data in interactive, graphical formats. Since the 19905, genome
browsers have played an essential role in genomics, first as tools for
building, inspecting, and annotating assemblies and later as tools for
distributing data to the public (Durbin and Thierry-Mieg, 1991;
Harris, 1997; Kent et 61]., 2002). Later, the rise of genome—scale
assays created the need for a new generation of genome browsers
that could display user’s experimental data alongside reference se—
quence data and annotations.

Integrated Genome Browser (IGB), first developed in 2001 at
Affymetrix, was among the first of this new breed of tools. IGB was
first written to support Affymetrix scientists and collaborators who
were using whole genome tiling arrays to probe gene expression and
transcription factor binding sites as part of the ENCODE project
(Kapranov et 61]., 2003). As such, IGB was designed from the start to

©The Author 2016. Published by Oxford University Press.

display what we would now call ‘big data’ in bioinformatics—mil-
lions of probe intensity values per sample. IGB was one of the first
genome browsers to support visual analytics, in which interactive
visual interfaces augment our natural ability to notice patterns in
data (Keim et 61]., 2006). The ‘thresholding’ feature described below
is an example.

Because early IGB development was publicly funded, Affymetrix
released IGB and its companion graphics library, the Genoviz
Software Development Kit (Helt et 61]., 2009), as open source soft—
ware in 2004. Since then, we have continued to develop IGB, adding
new features and incorporating libraries and code from many other
open source projects, e.g. Cytoscape (Shannon et 61]., 2003). Our first
article introducing IGB appeared in 2009 (Nicol et 61]., 2009)
and focused on visualization of tiling array data. Here, we describe
new visual analytics and data integration features developed for high—
throughput sequencing data. We also introduce a new plug—in

2089

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

112 /§JO'S{eumo [p.IOJXO'SODBIHJOJUIOIQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

2090

N. H. Freese et al.

 

application programmers interface (API) for developers to add new
functionality, transforming IGB into an extensible visual analytics
platform for genomics.

2 Results

IGB is implemented as a stand—alone, rich client desktop program
using the Java programming language. To run IGB, users download
and run platform—specific installers; these support automatic updates
and include the Java virtual machine, making it unnecessary for
users to install (and maintain) Java separately.

IGB’s implementation as a local application rather than as a
Web app means that IGB can access the full processing power of the
user’s local computer. IGB is always present on the user’s desktop,
regardless of internet connection status, but IGB can also use the
Web to consume data, as described below. Because IGB runs locally,
users view their own datasets without uploading them to a server,
which can be important when working with confidential data.

2.1 Viewing genomes and annotations

On startup, IGB displays a ‘home’ screen featuring a carousel of
images linking the latest versions of model organism, crop plant and
reference human genome assemblies. More species and genome ver—
sions are available via menus in the Current Genome tabbed panel,
including more than seventy animal, plant and microbial genomes.
Users can also load and visualize their own genome assemblies,
called ‘custom’ genomes in IGB, provided they have a reference
sequence.

Once a user selects a species and a genome version, IGB auto—
matically loads the reference gene model annotations for that gen—
ome, if available. Annotations are loaded from files in various
formats hosted on the main IGB Quickload site, described below.
For any given genome version, additional annotations or high-

interface. These datasets can come from different sites, and to high—
light this, IGB can display a favicon.ico graphic distinguishing these
different data sources. This is why IGB is named ‘integrated’—it in-
tegrates data from different sources into the same view. To illus—
trate, Figure 1 shows an example view of integrated datasets from
the human genome. Reference gene model annotations and other
datasets from IGB Quickload are shown, together with tracks
loaded from a DAS1 server hosted by the UCSC Genome
Bioinformatics group.

2.2 Navigating and interacting

Genomic datasets span many scales, and fast navigation through
these different scales is a key feature for a genome browser. Users
need to be able to quickly travel between base—level views depicting
sequence details like splice sites, gene—level views depicting the exon—
intron organization of genes, and chromosome—level views showing
larger—scale structures, like centromeres and chromosome bands.
Tools that support fast navigation through the data can accelerate
the discovery process.

For this reason, IGB implements a visualization technique called
one-dimensional, animated semantic zooming, in which objects
change their appearance in an animated fashion around a central
line, called the ‘zoom focus’ (Loraine and Helt, 2002). Animation
helps users stay oriented during zooming and can create the impres—
sion of ﬂying through one’s data (Bederson and Boltman, 1999;
Cockburn et al., 2009).

To set the zoom focus, users click a location in the display. A
vertical, semi—opaque line called the ‘zoom stripe’ indicates the
zoom focus position and also serves as a pointer and guideline tool
when viewing sequence or exon boundaries. When users zoom, the
display appears to contract or expand around this central zoom
stripe, which remains in place, thus creating a feeling of stability and
control even while the virtual genomic landscape is rapidly

 

 

 

  

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

throughput datasets may also be available via the Data Access Panel changing.
it E in T'— ﬁ 9 a   : '—:'- ﬂ Selection rnfo. ucIZIET-‘huqJ 1H
chrl F?.ﬁEF.ﬂEﬁ-Fi’.992.415 It {"11 4 "  D ' ~'- : lrml lint-1 i: Lennie-aura“ 3.51am
E1 4411 4.41:: ¢.¢I.|.|..j.......q -.|1m rpm-r 1| Hum:- sap-lens
— *1 li  “I; 4.; 4 g 4. |-I : |- :. I-a I-h-ﬁ—'h h-1f'h-I r:-|- I-e- I:- 1. :-
 1"!""I"l4'i'q'"i'+"'l-<'€1+<ll-‘i-‘l-"hi 'i'F-d-a-r-a-l |-I--:--I--=---|- a-r-a-u—a-r-i-f-:-->--:-+It:-IL-<-| iI-Inln—q-e-ﬁ-a-ua-a-J thﬂmtvtrilnn
I _ : i{-ll-<—I-l!-1-1-H--<|-1-:l-l-<-I+I-<-l EI-a-I-aI-Jirja-r::--I--:I-I::-I-III-aI-EJ_-I:I-I--:-_:II-H --:--I-:- l-5--J--:--J-¢LJ-:--:+-1-I-I-I-*-£---+-l ‘-l-£-'-k--l.--€--lt|--!-I-!--I H_:IP4EI'IL_DH.--- :
ﬁi-dni-l  s-qu-IE-ItuL-i-L [-ej-e-ee re-I-Je-b-e-He-e-e 1'|- ‘I"-"“I'#“‘-""-‘II’ ""'   .. . . .
*t-ll-t-I. I|4 l'ﬁ-tf‘l-E: I.--:--Cin|--:-I. -:-I.---:-1 -:1-.I-:- .I-:---.I-|--LI--o- .I-+|-.I-:--.I  -I.-¢|I.-d-I:'q!-ll-I:-l +-:-I-> |- tasslse" Len “1
I E 0 {Jet Info .. a
._ .[_, _ _ thrE 2121535...
I, _ | an View Cerium-t Sequence :hr] 1952955...
El '1 ' ' ' ' ' rm 19oz H 5...
anmnr‘. I | | I I chrS 111153-53
WP“ 1 '1‘“ I II II Illllll II llll r III I Itllllllllllll II "III III IllI lllllllltlll1lllll :lIll llill F 3mm '1' “mm” database IIIIIJ HIIHIIIIII II I III“ “I ll "Ill-I'll” W6 1103059"-
:.‘.I'I!- -—_; "' ' _ ' . HIII‘I'
lII-H-I-I-l'H-lll-Hi-llll-i-lw-i-r-i-i 9+I-r-I-H-1-Ifj-r-* T: 1555159"-
Refﬁene "923 Select Parent "W t ' 155“ GE "
H I _] +rl-~--tHl—l-H~H-Il-H~-Hl~--H-~-1 i~+H+r+re—~—=+r»-r+ q, 3W,“ ,9 Selected +++«—=-+I—i—++»-+ cm 14513—55"-
.m. m" :th 15539:?” E
+1-It-1-t-ﬂ-H-j-Hd-H-HI-IHIIII-Ie-d-e-I-q |-1+a-1--a -i--a +4: nun-:- -1-|v-:--1--:r-i--:I -i- -:I--r--:I--r-J--r-:I-rluﬂn-|-+-r+- h-i-I'I +1-H1-HII-Ib-t-1-nl “I.” Jaﬁuﬁﬁﬁm 331‘
. |. . . L |. " r . r . r r |. |. 1. |. u |. . a. . . . . L . " . . . . . . . . a. a. 1. . . . . . . r . . I (“In 1313.514" 5'
Coordinates ' ' ' H a" m ' mu: 1312 m... ‘"
. ‘ ' mu nus-13... :
' (NIH Inﬁll-1:3}... E
v _ Annotation Eraph Anal-ran: eel search LEIEEIIDH Info Sliced View External 'N'IIEI’I‘ Plug—m5 ehIIE 101991 I... E,
U
Available [tau - W Data Management Table 1:1: 23:23:: i
._._.___._...._  .___.._.._. __. _..___ c I :
, pmmmlﬂjﬂd ,Qﬂlﬂmm Fl: If. +r- load Hull! Track Name “1'” “guns 3
M" Lmuanu; ﬂ 5 3"" - Manual : a. mrn', A
.v'" germ”! n 3 1'" - If Manual : .__5_-,._ .J_ ;_ x ﬂ'lllﬂ E-l-dIHIET
mﬂnﬁﬂ : 1'- . id" Mama; : ccmmunwhliqzl ﬁ mm 53513515
m n _. ,_ - If Manual : _,_ A thr'l' Starr-115
1" _ UCSETratks I 3’" - Manual : "'-'- -'-i '-"-"" 3" ("in mun“
“ _ Manning and SEHUEI'IEII'HI .' 1' - I‘d" Genome Rem“! A Lhrd 1 453095-111

 

thr15_lfl.. 5161-11-1-
HIE! 51.0... 19292ﬁ5'

 

 

Fig. 1. Viewing multiple human genome datasets in IGB. IGB screen showing human genome build 38, released in December 2013. Gene annotations load by de-
fault, with additional, data available in the section labeled Available Data (lower left). Each dataset occupies a separate track within the main window, and can be
colored according to user preference. Right-clicking items in the main window activates a context menu with options to search Google, run BLAST or view the

underlying genomic sequence

112 /810'S[12umo [p.IOJXO'SOTlBIIHOJUTOTQ/ﬂClllq 11101; popeoIII/noq

9IOZ ‘09 lsnﬁnv uo ::

Integrated genome browser

2091

 

IGB also supports ‘jump zooming,’ in which a request to zoom
triggers instantaneous teleportation to a new location. To jump—
zoom, users can double—click an item, click—drag a region in the co-
ordinates track, or search using the Advanced Search tab or the
Quick Search box at the top left of the display.

Moving without changing the scale (panning) is also important
for fast navigation through data. In IGB, clicking arrows in the tool—
bar moves the display from left to right, and scrollbars offer ways to
move more rapidly. Users can click—drag the selection (arrow) cursor
into the left or right border of the main display window to activate
continuous pan. For finer—scale control, a move tool cursor enables
click-dragging the display in any direction.

IGB helps users ask and answer questions about their data by
supporting multiple ways for users to interact with what they see.
Selecting data display elements (Glyphs) triggers display of meta—
data about the selected item and mouse—over causes a tooltip to ap—
pear. Right-clicking items within tracks activates a context menu
with options to search Google, run a BLAST search at NCBI, or
open a sequence viewer (Fig. 1). Right—clicking track labels activates
context menus showing a rich suite of visual analytics tools and
functions, some of which we discuss in more detail below.

2.3 Loading data from files or URLs

IGB can consume data from local files or URLs and can read more
than 30 different file formats popular in genomics. When users open
a dataset, a new track is added to the main display. Users then
choose how much data to add to the new track by operating data
loading controls. Larger datasets, such as RNA—Seq data, should be
loaded on a region—by—region basis, while others that are small
enough to fit into memory can be loaded in their entirety, e.g. a BED
file containing ChIP—Seq peaks. To load data into a region, users
zoom and pan to the region of interest and click a button labeled
‘Load Data.’ To load all data in an opened dataset, they can change
the dataset’s loading method by selecting a ‘genome’ load mode set—
ting in the Data Access Panel.

This behavior differs from other genome browsers in that most
other tools link navigation and data loading. In other tools, a re—
quest to navigate to a new location or change the zoom level both re—
draws the display and also triggers a data loading operation.
Although sometimes convenient for users, this limits the types of
navigation interactions a tool can support. This trade—off can be
seen in the Integrative Genomics Viewer (IGV), a desktop Java ap—
plication developed after IGB (Thorvaldsdottir et al., 2013). IGV
auto—loads data but restricts movement; for example, it lacks pan-
ning scrollbars and does not support fast, animated zooming. IGB,
by contrast, prioritizes navigation speed and gives users total control
over when data load, which can be important when loading data
from distant locations over slower internet connections. IGB gives
users control over when such delays might occur, thus making wait—
ing more palatable.

2.4 Sharing and integrating data

IGB aims to support the scientific discovery process by making it
easy for users to document and share results. Taking a cue from
Web browsers, IGB for many years has supported bookmarking gen-
omic scenes. In IGB, genomic scene bookmarks record the location,
genome version, and datasets loaded into the current view. Users
can also add free text notes and thus record conclusions about what
they see. Selecting a bookmark causes IGB to zoom and pan to the
bookmarked location and load all associated datasets, thus enabling
users to quickly return to a region of interest. Users can sort, edit,

import and export bookmarks using the Bookmarks tab. Exporting
bookmarks creates an HTML file which users can re-import into
IGB or open in a Web browser. If IGB is running, clicking an IGB
bookmark in a Web browser causes IGB to zoom to the book—
marked location and load associated data.

IGB loads bookmarks through a REST-style endpoint (Fielding
and Taylor, 2002) implemented within IGB itself, using a port on
the user’s computer. This endpoint allows bookmarks to be loaded
from HTML hyperlinks embedded in web pages, spreadsheets, or
any other document type that supports hyperlinks. IGB was the first
desktop genome browser to implement this technique; for many
years, Affymetrix used it to display probe set alignments on their
NetAffx Web site (Liu et al., 2003).

More recently, we used IGB’s REST—style bookmarking system
to implement a Javascript bridge between IGB and the Galaxy bio—
informatics workﬂow system (Goecks et al., 2010). When users gen—
erate IGB—compatible data files within Galaxy, they can now click a
‘display in IGB’ hyperlink. Clicking this link opens a BioViz.org
Web page containing a javascript program that forwards the hyper-
link to IGB, causing IGB to retrieve that data directly from Galaxy.
If IGB is not running, the j avascript instead invites the user to launch
IGB. Once they do, the dataset loads.

IGB supports multiple formats and protocols for sharing dataset
collections and integrating across data sources. The most light—
weight and easy to use of these is the IGB specific ‘Quickload’ for-
mat, which consists of a simple directory structure containing plain
text, metadata files. The metadata files can reference datasets stored
in the same Quickload directory or in other locations, including
Web, ftp sites, or cloud storage resources such as Dropbox and
iPlant/CyVerse (Goff et al., 2011). This ﬂexibility makes it possible
for a Quickload site to aggregate datasets from multiple locations.
The metadata for a Quickload site also includes styling and data ac—
cess directives controlling data loading strategies and appearance.

Sharing a Quickload site is straightforward. Users simply copy the
contents to a publicly accessible location and then publicize the URL,
which IGB users then add as a new Quickload site to their copy of
IGB. Typically, users copy their Quickload sites to the content direc—
tories of Web sites, and IGB supports secure access via the HTTP
basic authentication protocol, making it easy to keep datasets private
if desired. If users do not require password—protection for their data,
they can also use Public Dropbox folders to share Quickload sites.

2.5 Visualizing RNA—seq data

As ultra high-throughput sequencing of cDNA (RNA—Seq) has sup—
planted microarrays for surveying gene expression (Ozsolak and
Milos, 2011), we added new features to IGB to support visualization
of RNA—Seq data. RNA—Seq analysis data processing workﬂows typ—
ically produce large read alignment (BAM) files, which IGB can
open and display. IGB also implements many new visual analytics
functions that operate on BAM file tracks and highlight biologically
meaningful patterns in the data.

Right-clicking a BAM track label opens a context menu listing
options to create coverage graphs, called ‘depth’ graphs in IGB. At
present, IGB supports two depth graph types: ‘depth graph start’
that counts a read’s first mapped base and ‘depth graph all’ that
counts the number of reads overlapping a position. The latter is use—
ful for viewing overall expression at a locus, and the former is useful
for investigating sequencing bias. Both graph types are implemented
using IGB’s track operations API, which developers can use to add
all-new graph generation algorithms as plug—ins, described in
Section 2.8.

112 /§JO'Sjeumo [p.IOJXO'SOTlBIIHOJUTOTQ/ﬁdllq 11101; popeoIII/noq

9IOZ ‘09 lsnﬁnv uo ::

2092

N. H. Freese et al.

 

By comparing depth graphs for multiple samples, users can iden—
tify differences in transcript levels. Using the Graph tab, users can
place multiple graphs on the same scale, and if sequencing depth is
similar, peaks that are the same height and shape reflect similar ex—
pression. Figure 2a shows ‘depth graph all’ graphs made from RNA-
Seq alignment (BAM) tracks; reads were from sequencing lung
cancer samples bearing wild—type or mutant copies of the KRAS
oncogene (Kalari et al., 2012). One peak is much taller in the mutant
sample, indicating higher expression. The gene is AQP3, encoding a
water/glycerol—transporting protein (Hara-Chikuma and Verkman,
2005)

Visual analysis of RNA—seq data can also highlight alternative
splicing differences between samples. Figure 2b shows PFNZ, which
produces two isoforms due to alternative splicing. Here, the depth
graphs from Figure 2a were merged into a single track. Comparing
the peak discontinuities to the gene models shows that the mutant
sample favors the shorter isoform. To further aid splicing analysis,
we developed FindJunctions, a visual analytics tool that identifies

split read alignments in an RNA—Seq track, uses them to identify po—
tential exon—exon junctions, and then creates an all—new track con—
taining junction features annotated with the number of alignments
that supported them. Figure 2b shows an example where
FindJunction’s quantification of split reads reinforces the finding
that PFNZ is differentially spliced between samples. Viewing the
read alignments is also informative. Figure 2c shows a zoomed—in
view of the alternatively spliced region from Figure 2b. Read align-
ments show that the shorter isoform predominates in the sample
bearing mutant KRAS. Details on FindJunctions are available from
the IGB User’s Guide.

Users can interact with reads and other data displayed in the
viewer using selection operations. Clicking a single item selects it, and
click—dragging over multiple items selects all of them. Pressing key—
board modifiers while clicking an item adds (SHIFT) or removes
(CNTRL) it from the pool of selected items. IGB reports the identity
or number of selected items in the upper right corner. In this way,
users can identify and count items that match a biologically interesting

 

(a)
Mutant

*llrllllll  . 
lll .  .. |..J.......

 

"I Illa-hit 'l

 

 

 

 

 

I: a ._._._._

u I H H I. .
REfGene Wfl‘ﬂl’Jrll'Hl‘r‘)‘ It++rf++*++:*l“+t'lHl*t+thl+"lH|“**“lHl‘f {ﬁlm
“H ¢H“H°H++ll‘“l“+ lt++++*l'*++tlt+t+f“+thif lli‘ttt'lttt’rl flit'l “H HHH

 

 

a
-_._-_-. -_-_._._ ._n_n_._-_

 

 

 

 

 

 

 

 

_I|II'IL': I'_:I'IJ
I'-":-r.-:l"|.
I- I '51!

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

m_353+324
Refﬁene I - —
[+l-l M_BBE'EIZ’B
lfeord-nates
i a
—_ _
11(4an === _
 r— ——- I
I' : I I = ===
— _—
===
——_=—l-—-—— I——
====.======
'J." ﬁ===.=.= = = = =
I1--.i-.i-. ——————.——= = = = = =
l_ _ — — —-.— — —— — — — _—
II‘ Ill-ml
Refﬁene —'H"'
H H _ mm“
—n:rmm—1Hmm 135mm- IIIII ﬁlm—1m Illmlﬂ mmm ﬁnlrm—
Cnnrdinnu —'—'—'—‘—"—"—'—'—" =—"—'—‘—'- =—-'—-—'—-— “I‘J—l—h H'—-—I—-—-—-—-—-—-—-—-'—-—-I—-— =_._._I._.. :._-_-_I'_-_ =_.-_._a_._._._._._._

 

 

 

 

 

 

 

 

Fig.2. RNA-Seq data from human lung adenocarcinomas bearing mutant or wild-type (WT) alleles of the KRAS oncogene. (a) Coverage depth graphs show tran-
script abundance across a 250 kb region. Mutant samples contain a peak indicating higher expression in the mutant sample. (b) Overlaid depth graphs showing a
discontinuity in coverage indicating differential splicing in PFN2. Quantification of split reads by FindJunctions further supports differential splicing. (c) Zoomed

in view of (b), showing aligned reads

112 /310'S[12u1no [p.IOJXO'SOTlBIHJOJUTOTQ/ﬂClllq 11101; pepeommoq

9IOZ ‘OE lsnﬁnv uo ::

Integrated genome browser

2093

 

 

 

(a) HACS
M. 1 1 |

Refﬁene
E+|-l

 

 

 

c J

 

 

I II.III,III II,Iaa,Iaa EI,Il-I.III “,H,H

“IL-u,"- m,ﬂ,ﬂ “Lieu, Ial,eee.eee 1n.m,lee
— —

 

 

LL

 

{b}

Lh1P-5eq _,5
'.".'IIIJ '
r .- l u l- A r'l.l" *4 r . .---i J- —

 

 

.. ..-I.-r. .. Us. .1... I. l- ..1.- "h. l. .l.. L -J- killer. - -- .e.. .. hi. .. -. “J

 

 

_ mu- :a,aal,laa aa.|as,lal man,” li.l]'5,lll

 

 

MAE.
i+|—J I I
Refﬂene H5551].
[+|-l I —

r
'3
I

“.015,” 35. III. III- 3‘,

35.1",“- 35.1as,m

 

 

 

 

Flefﬂene H 5 6'51; 1
I:+|-}

 

HEB-,IEI 3i.-I5I-..1II ILHIJH 3E1. HEEL-l“ 35-..ﬂljﬂl
LDE'I'HII'HH'I I

 

 

(a) I||I|||||||||
I 15 I 15
[hll'- seq
wm IIIIIIIIIIIIIII
Illlllill  .___--I‘ll h'ln-lll-III—
— —

3.5.m.m amen"- 3E.Ia-I.1u sung! amending
'-

 

 

 

 

 

 

 

Fig. 3. Visualizing ChlP-Seq data. (a) MACS BED file with peak regions from mouse ChlP-Seq data investigating binding sites for transcription factor SOX9. Peak
regions in the track labeled ‘MACS' are colored by score, making the higher-scoring regions more noticeable. (b) Zoomed in view of (a). MACS identified four sig-
nificant peaks, of which two exceeded a user-defined coverage threshold, visible as a thin horizontal line in the ChlP-Seq WIG track (top). (c) Zoomed in view of
(b). Searching for the motif AGCCGYG identified sites under the most significant peaks in (b)

pattern, e.g. spliced reads that support a junction. As an additional vis—
ual cue, when a read or annotation is selected, all items with matching
boundaries on either the 5’ or 3’ end are highlighted. This technique,
called ‘edge matching,’ aids in visualization of read boundaries and
identifying alternative donor/acceptor sites.

2.6 Visualizing ChlP—seq data
Knowing where a transcription factor binds DNA in relation to
nearby genes is tantamount to understanding its function, as genes
whose promoters are bound by a given transcription factor are likely
to be regulated by it. Identifying binding sites of DNA-binding pro-
teins is now routinely done using whole—genome ChIP-Seq, in which
DNA cross-linked to protein is immunoprecipitated using antibodies
against the protein of interest and then sequenced (Park, 2009).
Subsequent data analysis typically involves mapping reads onto a
reference genome, identifying regions with large numbers of immu-
noprecipitated reads, and then performing statistical analysis to as—
sess significance of enrichment. Each step requires users to choose
analysis parameters whose effects and importance may be hard to
predict. To validate these choices, it is important to view the ‘raw’
alignments and statistical analysis results in a genome browser. As
an example, we describe using IGB to view results from a ChIP—Seq
analysis done using MACS, a widely used tool (Zhang et al., 2008).
MACS produces a file containing peak locations and significance
scores indicating which peaks likely contain a binding site. Opening

and loading this file in IGB creates a new track with single—span an—
notations representing the extent of each peak. At first, they look
identical, varying only by length, and it is difficult to distinguish
them. To highlight the highly scoring peak regions, IGB offers a
powerful ‘Color by’ visual analytics feature that can assign colors
from a heatmap using quantitative variables associated with fea—
tures. For this, users right—click a track, select ‘Color by’ from the
context menu, and then operate a heatmap editor adopted from
Cytoscape to color—code by score. This makes it easy to identify high
scoring regions likely to contain a binding site (Fig. 3a).

ChIP—Seq analysis tools also typically produce WIG—format
depth-graph files that report where immunoprecipitated sequences
have ‘piled up,’ forming peaks. Loading this WIG file into IGB cre-
ates a new graph track that shows how these peaks coincide with re—
gions from the BED file. In IGB, users can move tracks to new
locations in the display. As shown in Figure 3b, placing the WIG
track above the color—coded BED track makes it easy to observe
how taller peaks typically have higher significance values.

IGB’s graph thresholding function, originally developed for tiling
arrays, is useful for exploring the relationship between coverage depth
and peak score. Available from the Graph tab, thresholding identifies
regions in a graph track where consecutive y—values exceed a user—
defined value. Users can change this threshold value dynamically
using a slider and observe in real—time how this affects the number
and extent of identified regions. Users can promote regions to new

112 /810'S[12umo [p.IOJXO'SOTlBIIlJOJUTOTQ/ﬂClllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

2094

N. H. Freese et al.

 

(a)

I Lu,” II..H.H Lil,” I.III', “I 11.“..H 12 ,H.“

__.-I-Ill-IIIIIIIIIIIIII|||| I” III
—||||||| "III"

a .W...L.urmlluumtlwllwlllwlmoraltmm1w

“.m," IE.III,III II,III-,III ELM,“ ELM,“ N.H.III ILHIJII 2!,III.III ll,

 

 

_Ld

 

__.__________________________

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

    
     

  
  

  
       

     

  

 
     

 

   

        

        

         

  

 

 

 .ll | l. I I I
WEBB   l l I  l
I l I _ J   I III  | “A h“ __ _,..__ .___JIJL. _ __ _.-___-l. .__.._. __...._l._l__:- ..
'H I'JIII I-III i-I'IIIII III I I II- I“ ll ilIIIIIIIII II |' ' ' I I
 = I = __Hu-H-r
mRNh
 , . = -l_H~+~-=--
:1 III III :1 HI Ill 21.15:,11- 21,152.!" H.151. 21.155," 11.155.” annual: 11.15:,aaa 21,154,11-
Emlﬂllﬁl — — — — — — — — —
(a) =H=_-=- _— 1::*___..__._-. - 5::
==:———= ==I===IE==1-—- E ====== "I."-=:
wcas '_E'E—ai-=—= " ‘  E  
“*1 EE_—“ sizes?“ iéeael a EEE;.-a 5555
=:. EEEEE_.._=:EEE E EEEEEr_=EE EE=5
=15;— EgEZEEEEEEE§1= i'iiiiiii_-Ei EE=E
— —— I-----_-l_-l_ —-  
I: J_  31.7“.5'" .3- 11 .1M 21,159.“! ll. HRH-.15-
III III.- IIIlI-I I IIIII III. I I I'll I I'll II II II II I IIIII IIII I III I IIII “._I-I;-w- “III... 'I
 _.._I===—   
'-—__—;_=E_= _'-I =_'-—=—.  EEEE §§_=_-ri§=_
woes t—i =_E'=—‘_-E =_=_=_ §§§::—-EEE§ Egg 2:;
=$ —= =§§ EEEE: gag! 5!-
_=—.§_———:—_——'__'. =_—=_—=_— “gag—age =55 EE=—:-E=—'-

 

 

 

 

       

 

 

Fig. 4. Visualizing bisulfite sequencing data. (a) Bismark output file from an Arabidopsis bisulfite sequence experiment. Peaks indicate regions containing many
methylated cytosine residues. (b) Zoomed in view of (a). A user-defined threshold shows that most cytosines in the first intron are methylated. (c) Zoomed in
view of (b), showing the positive and negative strand aligned reads. Thymines are colored white, and cytosines red. Unmethylated cytosines that were converted
to thymines appear as white columns occupying the same base pair position as a mark below the sequence axis, which indicate cytosines in the reference
sequence. The highly-methylated region on the left contains many marks and few white columns

tracks and save them in various formats. As an example, Figure 3b
shows four MACS—detected peaks near the Hs6st1 gene, a regulatory
target for the SOX9 transcription factor in mouse (Kadaja et al.,
2014). Two peaks exceed the threshold, providing a visual cue that
these locations may be most important for regulation.

Sometimes the recognition sequence for a transcription factor
being studied is known or can be deduced from the data. IGB offers
a way for users to visualize instances of binding site motifs. Using
the Advanced Search tab, users can search the genomic region in
view using regular expressions. For instance, to search for the motif
AGCCGYG (where Y can be C or T) a user would enter
‘AGCCG[CT]G’. In this example, the search found several instances
of this motif, with one located in each of the two user—defined sig—
nificant peaks near the Hs6st1 gene (Fig. 3c).

2.7 Visualizing bisulfite sequencing data

Whole genome bisulfite sequencing (WGBS) refers to bisulfite conver—
sion of unmethylated cytosines to thymines followed by sequencing
(Krueger et al., 2012). This technique can identify methylated sites
throughout a genome and reveal potential epigenetic regulation of
gene expression. Analyzing bisulfite data involves mapping the reads
onto the genome using tools that can accommodate reads where many
but not all cytosine residues have been converted. Several such tools

are available; here we describe using IGB to visualize output of
Bismark (Krueger and Andrews, 2011).

Bismark produces a file containing read alignments and a depth—
graph file reporting percent methylation calculated from sliding win-
dows along the genome. Figure 4a shows a Bismark depth graph
from an experiment investigating methylation in the model plant
Arabidopsis thalicma (Yelagandula et al., 2014). All of chromosome
one is shown, and peaks indicate regions of high methylation. This
whole chromosome view makes it easy to observe that the centro—
meric region is highly methylated. From here, users can zoom in to
examine methylation at a region, gene, or base pair level.

Figure 4b shows a zoomed—in view of one of the tallest peaks vis—
ible in Figure 4a. Similar to the ChIP—Seq data analysis described in
the previous section, users can apply the thresholding feature to
identify regions of high methylation within a gene. In this example,
the threshold for percent methylation is set to 70% or greater, high—
lighting how the first intron, but not the second and third introns, is
highly enriched with methylated cytosines.

Closer examination of aligned reads provides further support of
methylation. In IGB, nucleotide residues are color—coded, and users
can change these colors. In addition, read alignment tracks can be
configured so that only mismatched bases are color—coded. Figure 4c
shows a view of bisulfite sequencing data in which cytosines are red

112 /310'S[12u1no [p.IOJXO'SOTlBIHJOJUTOTQ/ﬂdllq 111011 pep1201umoq

9IOZ ‘OE lsnﬁnv uo ::

Integrated genome browser

2095

 

and thymines are white. White columns in the read track (labeled
WGBS) represent unmethylated cytosines, and marks in the coordin-
ates track indicate cytosine residues in the reference. Regions with
many cytosines and few white columns are highly methylated.

2.8 Extending IGB

Developers have created many genome browser tools, each aiming
to meet a need not met by preceding tools. And yet, each new tool
has faced similar problems, such as how to consume data from files,
how to lay out genomic features and graphs into tracks, and how to
support zooming through vast differences in scale. As described
above, IGB has solved many of these problems and offers a flexible
and fast environment for users to explore the genomic landscape. In
order for developers to quickly create new visualizations we trans—
formed IGB into a modular, extensible platform for developers to
create and deploy all—new visualizations of genomic data.

The IGB software architecture now resembles other popular
open source Java—based projects that support adding new functional—
ity via plug-ins, including Eclipse, the Netbeans Rich Client
Platform and Cytoscape (Shannon et al., 2003). This similarity
comes from our common use of OSGi, a services based architectural
framework and community standard for building modular software.
By adopting this framework, we increased IGB extensibility, simpli-
fied adding new features, and created a new Apps API that em—
powers community developers to contribute new functionality
without needing deep understanding of IGB internal systems. The
Apps API is new, but community developers are already using it to
create novel visualizations (Céol and Muller, 2015). Documentation
and tutorials are available from the IGB developer’s guide.

3 Future directions

IGB offers powerful utilities for viewing, analyzing, and interacting
with data within an environment that feels fast, ﬂexible and highly
interactive. In the future, we plan to make the IGB’s Quickload data
sharing system easier to use by providing tools for building
Quickload sites from within IGB, along with a Quickload registry
for users to publicize their sites. In addition, we will continue de—
veloping and improving the IGB APIs, providing documentation and
example Apps to demonstrate how developers can use IGB as a plat—
form to support genomics research.

Acknowledgements

We thank the many developers, testers, and designers who contributed to IGB,
some of whom include Gregg Helt, lVIichael Lawrence, Lance Frohman, John
Nicol, Hiral Vora, Alyssa Gulledge, Fuquan Wang, David Nix, Ido Tamir,
Vikram Bishnoi, Anuj Puram, Richard Linchangco, Mason Myer, Katherine
Kubiak, Zhong Ren, Tarun Kanaparthi, Kyle Suttlemyre and Tarun Mall. We
thank Nick Schurch for the JavaScript-to-IGB bridge concept.

Funding

This work was supported by the National Institutes of Health
[R01GM103463 to A.L.].

Conﬂict of Interest: none declared.

References

Bederson,B.B. and Boltman,A. (1999) Does animation help users build mental
maps of spatial information? In: Information Visualization. (Info Vis ’99)
Proceedings. IEEE Symposium, pp. 28—35.

Céol,A. and Miiller,H. (2015) The M1 bundle: enabling network and struc-
tural biology in genome Visualization tools. B ioinformatics, 31, 3679—36 81.

Cockburn,A. et al. (2009) A review of overview—l—detail, zooming, and
focus—l—context interfaces. ACM Comput. Surv., 41, 1—31.

Durbin,R. and Thierry-Mieg,J. (1991) A C. elegans database. In:
Documentation, code and data available from anonymous FTP servers at
lirmm.lirmm.fr, cele.mrc-lmb.cam.ac.uk and ncbi.nlm.nih.gov.

Fielding,R.T. and Taylor,R.N. (2002) Principled design of the modern Web
architecture. ACM Trans. Internet Technol, 2, 1 15—150.

Goecks,J. et al. (2010) Galaxy: a comprehensive approach for supporting ac-
cessible, reproducible, and transparent computational research in the life
sciences. Genome Biol., 11, R86.

Goff,S.A. et al. (2011) The iPlant collaborative: cyberinfrastructure for plant
biology. Front. Plant Sci., 2, 34.

Hara-Chikuma,M. and Verkman,A.S. (2005) Aquaporin-3 functions as a gly-
cerol transporter in mammalian skin. Biol. Cell Under Auspices Eur. Cell
Biol. Org., 97, 479—486.

Harris,N.L. (1997) Genotator: a workbench for sequence annotation.
Genome Res., 7, 754—762.

Helt,G.A. et al. (2009) Genoviz Software Development Kit: Java tool kit for
building genomics Visualization applications. BMC Bioinf., 10, 266.

Kadaja,M. et al. (2014) SOX9: a stem cell transcriptional regulator of secreted
niche signaling factors. Genes Dev., 28, 328—341.

Kalari,K.R. et al. (2012) Deep sequence analysis of non-small cell lung cancer:
integrated analysis of gene expression, alternative splicing, and single nu-
cleotide variations in lung adenocarcinomas with and without oncogenic
KRAS mutations. Front. Oncol., 2, 12.

Kapranov,P. et al. (2003) Beyond expression proﬁling: next generation uses of high
density oligonucleotide arrays. Brief. Funct. Genomics Proteomics, 2, 47—5 6.

Keim,D.A. et al. (2006) Challenges in Visual data analysis. In: Tenth
International Conference on Information Visualization, 2006. IV 2006,
pp. 9—16.

Kent,W.J. et al. (2002) The human genome browser at UCSC. Genome Res.,
12, 996—1006.

Krueger,F. and Andrews,S.R. (2011) Bismark: a ﬂexible aligner and methyla-
tion caller for Bisulﬁte-Seq applications. B ioinformatics, 27, 15 71—1 5 72.

Krueger,F. et al. (2012) DNA methylome analysis using short bisulﬁte
sequencing data. Nat. Met/rods, 9, 145—151.

Liu,G. et al. (2003) NetAffx: Affymetrix probesets and annotations. Nucleic
Acids Res., 31, 82—86.

Loraine,A.E. and Helt,G.A. (2002) Visualizing the genome: techniques for
presenting human genome data and annotations. BMC Bioinf., 3, 19.

Nicol,J.W. et al. (2009) The Integrated Genome Browser: free software for dis-
tribution and exploration of genome-scale datasets. Bioinformatics, 25,
2730—2731.

Ozsolak,F. and Milos,P.M. (2011) RNA sequencing: advances, challenges and
opportunities. Nat. Rev. Genet., 12, 87—98.

Park,P.J. (2009) ChIP-seq: advantages and challenges of a maturing technol-
ogy. Nat. Rev. Genet., 10, 669—680.

Shannon,P. et al. (2003) Cytoscape: a software environment for integrated mod-
els of biomolecular interaction networks. Genome Res., 13, 249 8—2504.

Thorvaldsdottir,H. et al. (2013) Integrative Genomics Viewer (IGV): high-per-
formance genomics data Visualization and exploration. Brief Bioinform.,
14, 178—192.

Yelagandula,R. et al. (2014) The histone variant H2A.W deﬁnes heterochro-
matin and promotes chromatin condensation in Arabidopsis. Cell, 158,
98—109.

Zhang,Y. et al. (2008) Model-based analysis of ChIP-Seq (MACS). Genome
Biol., 9, R137.

112 /810'S{12umo [p.IOJXO'SOIlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

