APPLICATIONS NOTE

Vol. 29 no. 8 2013, pages 1095-1097
doi: 10. 1 093/bioinforma tics/btt084

 

Data and text mining

Advance Access publication February 19, 2013

IRootLab: a free and open-source MATLAB toolbox for vibrational

biospectroscopy data analysis

Julio Trevisan1’2’*, Plamen P. Angelov1’2, Andrew D. Scott3, Paul L. Carmichael3 and

Francis L. Martin2

1School of Computing and Communications, lnfolab21, Lancaster University, Lancaster LA1 4WA, UK, 2Centre for
Biophotonics, Lancaster Environment Centre, Lancaster University, Lancaster LA1 4YQ, UK and 8Safety and
Environmental Assurance Centre, Unilever Colworth Science Park, Bedfordshire MK44 1LQ, UK

Associate Editor: Jonathan Wren

 

ABSTRACT

Summary: IRootLab is a free and open-source MATLAB toolbox for
vibrational biospectroscopy (VBS) data analysis. It offers an
object-oriented programming class library, graphical user interfaces
(GUls) and automatic MATLAB code generation. The class library con-
tains a large number of methods, concepts and visualizations for VBS
data analysis, some of which are introduced in the toolbox. The GUls
provide an interface to the class library, including a module to merge
several spectral files into a dataset. Automatic code allows developers
to quickly write VBS data analysis scripts and is a unique resource
among tools for VBS. Documentation includes a manual, tutorials,
Doxygen-generated reference and a demonstration showcase.
IRootLab can handle some of the most popular file formats used in
VBS.

License: GNU-LGPL.

Availability: Official website: http://irootlab.googlecode.com/.
Contact: juliotrevisan@gmail.com

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on December 3, 2012; revised on February 8, 2013;
accepted on February 13, 2013

1 INTRODUCTION

Vibrational biospectroscopy (VBS) is the application of infrared
and Raman spectroscopy to biological studies and biomedical
applications (Martin et al., 2010). In the past decades, Vibrational
spectroscopy data processing was developed on the grounds of
signal processing, statistics and pattern recognition, resulting in a
large number of computational methods that are routinely
applied in the ﬁeld. However, the ﬁeld needs further development
and establishment of data analysis strategies, partially owing to a
continuous push from instrumental advancements, but also
motivated by challenges in pre—processing, biomarker extraction
and standardization of inter-experimental datasets, and inspired
by the increasing power of computers (Trevisan et al., 2012).
VBS data analysis is largely carried out by commercial soft-
wares such as CytoSpec (www.cytospec.com), Neurodeveloper
(www.neurodeveloper.com), Unscrambler (www.camo.com),
Pirouette (www.infometrix.com), OPUS (www.bruker.com) and

 

*To whom correspondence should be addressed.

Wire (www.renishaw.com). Popularly used commercial
MATLAB toolboxes include the Neural Network and the Bioin-
formatics Toolbox. Others are free to use, but closed-source,
such as PRTools (Duin et al., 2007) and GA_ORS (Nikulin
et al., 1998). While these are all high-quality software, the use
of closed-source software contradicts the multidisciplinary aspect
of the ﬁeld, as researchers looking for new analysis strategies
remain dependant from the software manufacturers. On the
other hand, open-source softwares available are largely restricted
to a given task, such as LibSVM (Chang and Lin, 2011), Func-
tional Data Analysis toolbox (Ramsay et al., 2009) and various
other resources available online.

IRootLab is a free/libre and open-source (FOSS) MATLAB
toolbox created to fulﬁl the need for FOSS software encompass-
ing every stage of VBS data analysis. It is a highly modular
software that was created based on existing theory of data ana-
lysis (Alpaydin, 2004; Bishop, 2006; Duda et al., 2001; Guyon
et al., 2006; Hastie et al., 2007; Kuncheva, 2004), and as such,
applied to VBS (Grifﬁths and Haseth, 2007; Somorjai, 2009),
bringing together families of methods such as outlier removal,
pre—processing, feature extraction, feature selection, feature con-
struction, classiﬁcation, classiﬁer aggregation, clustering; con-
cepts such as cross-validation, random sub-sampling, peak
detection, biomarker identiﬁcation; a set of unique Visualization
options (Supplementary Fig. S1) and a MATLAB code gener-
ator. The basic modular design is simple, which makes IRootLab
a ﬂexible and intuitive resource for Vibrational spectroscopy data
analysis developers.

2 CLASS LIBRARY

The majority of IRootLab code lines are attributed to its hier-
archically organized object-oriented programming (OOP) classes.
The basic framework is constituted of three branches: datasets,
blocks and logs. A dataset is an object representing point spectra
(with their respective classes, patient names, etc.), image maps,
clustering data or classiﬁer estimations. A block is the basis of
data manipulation. It is an object that allows mainly two oper-
ations: training and using. Training involves the use of training
data to modify a block (according to its speciﬁc idiosyncrasy).
Using consists of inputting data into a block to get various re-
sults, including output data, estimation data, ﬁgures and HTML
reports. Finally, logs represent the output of special blocks called

 

© The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1095

112 /310's113umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

910Z ‘091sn3nv uo ::

J. Trevisan et aI.

 

analysis sessions, which perform complex analyses and generate
output that does not ﬁt into the usual dataset class.

Additionally, there are a few complementary branches, from
which the most important are sub-dataset generation specs (SGS),
feature sub-set grader (FSG) and peak detector. SGS is an ab-
straction of the concept of random sub-sampling (e.g.
cross-validation, repeated random sub-sampling); FSG is used
to evaluate sub-sets of features in feature selection tasks, freeing
the feature selection algorithm from having to implement its own
evaluation; and peak detection (Coombes et al., 2003) is used in
Visualizations and biomarker identiﬁcation.

Blocks can be created and combined recursively (e. g. a special
block called ‘block cascade’ is composed of other blocks, which
in turn can be used as a component of a higher level block cas-
cade) to build analyses as complex as desired.

Many complex operations are already offered as sub-classes of
a special class of block called analysis session, including grid
search optimization (Hsu et al., 2010), repeated train-test using
an SGS object to obtain performance estimation of a classiﬁer
and cross-calculation of Linear Discriminant Analysis (LDA)
scores (Riding et al., 2012).

3 GRAPHICAL USER INTERFACES

Figure 1 shows the interaction of IRootLab graphical user inter-
faces (GUIs) with the class library and their surrounding envir-
onment. IRootLab offers a ﬂexible and intuitive GUI called
objtool that is an interface to the class library. Objtool allows
datasets and other objects present in the MATLAB workspace
to be browsed and manipulated using new or existing blocks.
Objtool can handle three types of TXT ﬁles, OPUS image
maps and a native IRootLab MAT format.

Mergetool is another GUI that allows a collection of
single-spectrum ﬁles to be merged together to form a dataset.
Currently, mergetool can import three different types of

-!__ tool

‘1?
ram  

 

 

 

'0
“a? Class 5'. function __ .  
'E  library -. Databasn

 

 

 

Disk

   
 
   

-

- - - 9- Function calls

HATIAE workspace

 

 

Data input} on tput

 PETLAE code —h State variablesfnbjenta

Fig. 1. IRootLab GUIs (objtool, mergetool, sheload) and their surround-
ing environment

single-spectrum ﬁles: Pirouette.dat, OPUS single-spectrum ﬁles
and Wire TXT ﬁles. Finally, the SHEload GUI accesses an
online MySQL database that is part of a chemical database pro-
ject (Trevisan et al., 2010), importing datasets from there.

4 CODE GENERATION

One of the major features of IRootLab is the ability of objtool to
generate MATLAB code (similar to macro recording in
Microsoft Word). This is a highly efﬁcient resource for
MATLAB scripting. In fact, a signiﬁcant part of IRootLab
was written using this resource. Code generation also keeps de-
velopers from having to consult the library documentation too
often.

5 DOCUMENTATION

IRootLab has a clear documentation project. The ofﬁcial docu-
mentation (available at http://bioph.1ancs.ac.uk/irootlabdoc) is
generated directly from the source code using Doxygen software.
Apart from this, IRootLab has a manual and a series of tutorials
(available at downloads area of the ofﬁcial website) that together
provide a friendly start for new users. The ofﬁcial reference can
be accessed from MATLAB in two different occasions: from the
command line, by using the help2 command, and from the GUIs,
by pressing the F1 key (context-sensitive help). Additionally, a
demonstration showcase was prepared (which can be opened by
typing the command browse_demos at MATLAB command
line), and a number of sample datasets are shipped with the
toolbox.

6 CONCLUSION

Although the most valuable contributions of IRootLab are its
framework and its code generation, there are currently more
than 200 implemented OOP classes representing methods, algo-
rithms, concepts and Visualizations. One of the advantages of
FOSS software is that any user can potentially expand the tool-
box to include the methods necessary to their own analysis,
should these methods not be already present, and then share
the additions, creating a synergic effort among the scientiﬁc com-
munity. Expansion is facilitated by IRootLab modular structure,
which allows developers to target or inherit a speciﬁc OOP class.
IRootLab is a unique and innovative contribution to the inter-
disciplinary research ﬁeld of VBS, providing researchers with a
valuable tool for the development of VBS data analysis.

ACKNOWLEDGEMENT

IRootLab uses a number of third-party packages, whose devel-
opers we would like to thank: Chih-Chung Chang, Chih-J en Lin,
Jacob Filik, James O. Ramsay, Michael Nasse, Paul Bassan and
Yannick Maret. We would also like to thank our colleagues
Abdullah A. Ahmadzai, Imran I. Patel, Jemma G. Kerns and
Valon Llabjani for their participation in the conception.

Funding: This work was funded by Unilever as ‘part of Unilever’s
ongoing effort to develop novel ways of delivering consumer

 

1096

112 /310's113umo [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq 11101; papeoIII/noq

9IOZ ‘091sn3nv uo ::

IRootLab - MATLAB toolbox for biospectroscopy

 

safety’. We would also like to thank Rosemere Cancer
Foundation for their support over the years.

Conflict of Interest: none declared.

REFERENCES

Alpaydin,E. (2004) Introduction to Machine Learning. MIT Press, Cambridge, MA,
USA.

Bishop,C.M. (2006) Pattern Recognition and Machine Learning. Springer,
Cambridge, UK.

Chang,C.-C. and Lin,C.-J. (2011) LIBSVM: a library for support vector machines.
ACM TIST, 2, Article no. 27.

Coombes,K.R. et al. (2003) Quality control and peak ﬁnding for proteomics data
collected from nipple aspirate ﬂuid by surface-enhanced laser desorption and
ionization. Clin. Chem, 49, 1615—1623.

Duda,R.O. et al. (2001) Pattern Classiﬁcation. 2nd edn. John Wiley & Sons, New
York.

Duin,R.P.W. et al. (2007) PRTools4ﬁa MATLAB toolbox for pattern recognition.
Pattern Recognit, l—61.

Grifﬁths,P. R. and Haseth,J.A. (2007) Fourier Transform Infrared Spectroscopy.
2nd edn. Wiley, Hoboken, NJ, USA.

Guyon,I. et al. (2006) Feature ExtractioniFoundations and Applications. Springer,
New York.

Hastie,T. et al. (2007) The Elements of Statistical Learning. 2nd edn. Springer, New
York.

Hsu,C. et al. (2010) A practical guide to support vector classiﬁcation.
Bioinformatics, 1, l—l6.

Kuncheva,L.I. (2004) Combining Pattern Classifiers: Methods and Algorithms.
Wiley, Hoboken, NJ, USA.

Martin,F.L. et al. (2010) Distinguishing cell types or populations
based on the computational analysis of their infrared spectra. Nat. Prot., 5,
1748—1760.

Nikulin,A.E. et al. (1998) Near-optimal region selection for feature space reduction:
novel preprocessing methods for classifying MR spectra. NMR Biomed, 11,
209—16.

Ramsay,J. et al. (2009) Functional Data Analysis with R and MAT LAB. Springer,
New York.

Riding,M.J. et al. (2012) Concentration-dependent effects of carbon nanoparticles
in gram-negative bacteria determined by infrared spectroscopy with multivariate
analysis. Environ. Pollut., 163C, 226—234.

Somorjai,R.L. (2009) Creating robust, reliable, clinically relevant classiﬁers from
spectroscopic data. Biophys. Rev., 1, 201—211.

Trevisan,J. et al. (2010) Syrian hamster embryo (SHE) assay (pH 6.7) coupled with
infrared spectroscopy and chemometrics towards toxicological assessment.
Analyst, 135, 3266—3272.

Trevisan,J. et al. (2012) Extracting biological information with computational ana-
lysis of Fourier-transform infrared (FTIR) biospectroscopy datasets: current
practices to future perspectives. Analyst, 137, 3202—3215.

 

112 /310's112umo [p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq 111011 pop1201umoq

910Z ‘091sn3nv uo ::

