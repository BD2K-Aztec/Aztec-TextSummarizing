Bioinformatics, 32(3), 2016, 441—443

doi: 10.1093/bioinformatics/btv551

Advance Access Publication Date: 7 October 2015
Applications Note

 

 

Genome analysis

HapFlow: visualizing haplotypes in
sequencing data

Mitchell J. Sullivan, Nathan L. Bachmann, Peter Timms and
Adam Polkinghorne*

Faculty of Science, Health, Education and Engineering, University of the Sunshine Coast, Sippy Downs, Australia

*To whom correspondence should be addressed.
Associate Editor: John Hancock

Received on May 31, 2015; revised on August 15, 2015; accepted on September 16, 2015

Abstract

Summary: HapFlow is a python application for visualizing haplotypes present in sequencing data.
It identifies variant profiles present and reads and creates an abstract visual representation of these
profiles to make haplotypes easier to identify.

Availability and implementation: HapFlow is freely available (under a GPL license) for download

(for Mac OS X, Unix and Microsoft Windows) from github (http://mjsull.github.io/HapFlow).

Contact: apolking@usc.edu.au

 

1 Introduction

The emergence of high—throughput sequencing has enabled new ex—
perimental approaches such as the sequencing of populations of bac—
teria. Infections frequently contain multiple strains of the same
species (Darch et 61]., 2015; Taylor et 61]., 1995). This has important
implications for detecting transmission events (Bachmann et 61].,
2015) and determining treatment outcomes (Cohen et 61]., 2012).
Several methods have been developed to analyze mixed—strain popu—
lations. ShoRAH (Zagordi et 61]., 2011) reconstructs a minimal set
of global haplotypes and estimates the frequency of inferred haplo—
types. It requires variants be dense enough to be linked by overlap—
ping reads. A two—step maximum likelihood approach has also been
described to identify the portion of infection rising from dominant
and minor strains (Eyre et 61]., 2013). This approach does not rely on
variant density but is unable to infer local or global haplotypes. A
tool that visualizes haplotypes in sequencing data is needed to iden—
tify the best strategy for genomic analysis of multiple strains of the
same bacteria within a sample.

Many excellent read alignment visualization tools exist including
Savant (Fiume et 61]., 2010), Tablet (Milne et 61]., 2010) and Consed
(Gordon and Green, 2013). These tools arrange reads in a linear fash-
ion with each read represented as a line, or row of bases. This layout
is satisfactory for identifying variants or misaligned reads, however, is
not ideal for identifying haplotypes present in reads. Reads are packed
tightly together making it difficult to determine whether distant vari—
ants are located on the same read pair. Additionally, reads are not

grouped by haplotype making it difficult to identify how frequently a
haplotype is represented in the sequencing data.

HapFlow addresses these problem by abstracting read alignment
data to make the haplotypes present easier to identify. HapFlow can
be used to help identify sequencing artifacts, identify the minimum
number of strains present in a sample and determine whether defin-
ing local or global haplotypes is possible using sequence data alone.

2 Implementation

HapFlow is a Python tool that uses the Tkinter windows system
(https://wiki.python.org/moin/TkInter). It has been designed for bac—
terial sequencing datasets of all sizes that use short, paired—end or
single—end reads. HapFlow is available as both a Python script and
as a binary for Linux, OSX and Windows. It contains two parts:
HapFlow—generator, a process for creating a flow file which contains
the count of reads with each haplotype profile and HapFlow—viewer,
a tool for visualizing the ﬂow file.

HapFlow-generator can be executed from the GUI or the com—
mand—line. It takes a VCF file (Danecek et 61]., 2011) of called
variants and an indexed BAM file (Li et 61]., 2009) of aligned
reads as input. Pysam (github.com/pysam—developers/pysam) is
used to create a profile of alleles present in each read of the align-
ment. This profile consists of which allele is present at each vari—
ant the read aligns to, on which pair each allele is present and the
direction of the read. A list of ‘flows’ is then written to the ﬂow

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 441

91% ‘09 1sn3nv uo sopﬁuv s01 111110;th aIo Amie/xtqu 112 /§.IO'S[BU.IHO[p.IOJXO'SODBIHJOJUIOIQ/ﬁdllq 11101; popeommoq

442

M.J.Sullivan et al.

 

 

EH? 1:11:03: Enarc. . :ILop-I Poi-:22. . icECEI-ZI

 

 

 

IIEII
I111)
l

 

 

 

 

 

 

 

 

  

III-".1. IL'aT-TTI'FAAM'IU'. II.
*AARE‘T-"EAMTITA *I'.

 

 

’lﬁ *5“!

u.

 

 

    

 

“f

 

 

 

Eli—3:3: 5:17;? “ﬁning :eqﬁc. lﬁq'itFt; iﬁ-ELFR 31-15311“?
TET'T'T'Z'EEIWT T'T'I'A I'm-IT." A n' i' '
ran'rt'rtrr *I'T'Z'l'. *Tl'lr‘u'ThT 1"": *‘T h"; 11'

Fig. 1. HapFlow diagram of sequencing data from a urogenital tract infection in a Koala mapped to C. pecorum. Flows containing only the dominant variant
group at the top, flows containing only the minor variant group at the in the second row, mixed flows switch between top and middle. The bottom row indicates
flows containing an alignment or sequencing error. All reads with the most common variant at base 363,598 have the least common variant at base 363,732, sim-
ilarly all reads with the least common variant at site base 363,598 have the most common variant at base 363,732. This pattern is repeated at sites C and D

file, where each ‘ﬂow’ is a unique allele profile and a count of the
reads with that profile. Flows are then assigned to groups. If all
overlapping alleles of a flow are in consensus with a previously
defined group, it is assigned to that group. Otherwise, it is as—
signed a new group number. These groups are used to colour
ﬂows when visualized. When multiple chromosomes are present in
a BAM file, the user is prompted to select which chromosome to
create a flow file for. A complete description of the ﬂow file is
included in the manual.

HapFlow-Viewer displays the created flow file on the canvas of
the GUI. A blue bar at the top of the screen represents the genome,
an orange rectangle within the blue bar represents the portion of the
genome currently being displayed. Underneath, an orange bar with
vertical lines represents where the variants are located within the
displayed section of the genome. These lines are extended below and
spaced an equal distance apart in the area where the ﬂows are
viewed. At each variant, each flow covering the given variant is rep—
resented by an arrow, with the width of the arrow representing the
number of reads the flow contains. The arrows representing each
ﬂow at adjacent variants are joined by lines, with solid lines repre-
senting variants covered by the same read of the flow and dashed
lines representing variants covered by different reads in the pair.
Arrows grouped at the top of the canvas represent the most fre—
quently observed allele, the second group of ﬂows represents the se—
cond most common allele and so on. The last group represents
alleles not identified in the VCF file. This can be caused by potential
sequencing, alignment or variant calling errors. All flows in a group
are coloured using the same hue; saturation and lightness are ran—
domly assigned. Information about the sequence of each variant is
represented underneath the flows. The canvas is scrollable and
zoomable allowing the user to easily navigate through whole gen—
omes. Reads can then be separated into individual BAM files by se—
lecting individual ﬂows or group of flows, or by selecting all reads
that conform to a user defined haplotype profile.

3 Case study

To demonstrate the application of HapFlow, reads from the recent
sequencing of a Chlamydia pecorum PCR—positive swab sample col—
lected from the urogenital tract of a koala with mixed C. pecomm
infections were analyzed. C. pecorum DNA was extracted directly
from the host cell contaminants using Sure—Select RNA probes and
sequenced using an Illumina Hi—Seq to produce 101 bp paired—end
reads, as previously described (Bachmann et al., 2015). These reads
were then mapped back to a publicly available C. pecomm reference
(E58) strain’s genome using Bowtie 2 (Langmead and Salzberg,
2012). Variant calling was performed using FreeBayes (Garrison
and Marth, 2012) and the resulting data was visualized using
HapFlow. Two distinct strains were immediately identifiable in the
HapFlow diagram. Variants are also close enough that local haplo—
types can be inferred from read data. Importantly, several regions
where read coverage in the dominant strain dropped below that of
the minor strain were identified (Fig. 1). This was not unexpected as
sequence capture is less efficient at cazpturing DNA in areas where
the sequence of the strain varies significantly from the probe. This
meant that any method of consensus calling that uses a majority call
would result in a chimeric genome not representative of either
strain. These insights can help with the design of an automated ap—
proach for assigning reads to strains. Alternatively, reads can be
manually separated using HapFlow.

Funding

This work was ﬁnancially supported by an Australian Research Council
Discovery Grant (DP130102066) and a Queensland Department of
Environment and Heritage Protection Koala Research Grant (KRG18)
awarded to AP and PT.

Conﬂict of Interest: none declared.

9mg ‘09 1sn3nv uo sojoﬁuv s01 ‘BIUJOJIIBD aIo Amie/xtqu 112 /3JO'S[‘8UJHO[p.IOJXO'SOIJBIIIJOJUIOIQ/ﬂC1111) 11101; popeommoq

HapFlow

443

 

References

Bachmann,N.L. et al. (2015) Culture-independent genome sequencing of clin-
ical samples reveals an unexpected heterogeneity of infections by Chlamydia
pecorum.]. Clin. Microbiol., 53, 1573—1581.

Cohen,T. et al. (2012) Mixed-strain mycobacterium tuberculosis infections
and the implications for tuberculosis treatment and control. Clin. Microb.
Reu, 25, 708—719.

Danecek,P. et al. (2011) The variant call format and VCFtools.
Bioinformatics, 27, 2156—2158.

Darch,S.E. et al. (2015) Recombination is a key driver of genomic and pheno-
typic diversity in a Pseudomonas aeruginosa population during cystic ﬁbro-
sis infection. Sci. Rep, 5, 7549.

Eyre,D.W. et al. (2013) Detection of mixed infection from bacterial Whole
genome sequence data allows assessment of its role in Clostridium difﬁcile
transmission. PLOS Comput. Biol., 9, e1003059.

Fiume,M. et al. (2010) Savant: genome browser for high-throughput sequenc-
ing data. Bioinformatics, 26, 193 8—1944.

Garrison,E. and Marth,G. (2012) Haplotype-based variant detection from
short read sequencing. arXiv preprint, arXiv:1207.3907.

Gordon,D. and Green,P. (2013) Consed: a graphical editor for next-
generation sequencing. Bioinformatics, 29, 293 6—293 7.

Li,H. et al. (2009) The Sequence Alignment/Map format and SAMtools.
Bioinformatics, 25 , 2078—2079.

Langmead,B. and Salzberg,S.L. (2012) Fast gapped-read alignment with
Bowtie 2. Nat. Methods, 9, 357—359.

Milne,I. et al. (2010) Tablet—next generation sequence assembly Visualiza-
tion. Bioinformatics, 26, 401—402.

Taylor,N.S. et al. (1995) Long-term colonization with single and multiple
strains of Helicobacter pylori assessed by DNA ﬁngerprinting. ]. Clin.
Microbiol., 33, 918—923.

Zagordi,O. et al. (2011) ShoRAH: estimating the genetic diversity of a mixed
sample from next-generation sequencing data. BMC Bioinformatics,
12, 119.

91% ‘09 1sn3nv uo sojoﬁuv s01 ‘1211110111123 310 Amie/gun 112 /§.IO'S[BU.IHO[p.IOJXO'SODBIHJOJUIOIQ/ﬁdllq 11101; pop1201umoq

