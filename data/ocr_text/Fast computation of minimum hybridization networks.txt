ORIGINAL PAPER

Vol. 28 no. 2 2012, pages 191-197
doi: 1 0. 1 093/bioinformatics/btr61 8

 

Phylogenetics

Advance Access publication November 9, 2011

Fast computation of minimum hybridization networks

Benjamin Albrecht“, Celine Scornavaccal’”, Alberto Cenci2 and Daniel H. Huson1’*

1Department of Computer Science, Center for Bioinformatics (ZBH), T bingen University, Sand 14, 72076 T bingen,
Germany and 2|RD, Institut de Recherche pour Ie D veloppement, BP 64501, 34394 Montpellier Cedex 5, France

Associate Editor: David Posada

 

ABSTRACT

Motivation: Hybridization events in evolution may lead to
incongruent gene trees. One approach to determining possible
interspecific hybridization events is to compute a hybridization
network that attempts to reconcile incongruent gene trees using a
minimum number of hybridization events.

Results: We describe how to compute a representative set of
minimum hybridization networks for two given bifurcating input trees,
using a parallel algorithm and provide a user-friendly implementation.
A simulation study suggests that our program performs significantly
better than existing software on biologically relevant data. Finally, we
demonstrate the application of such methods in the context of the
evolution of the Aegilops/Triticum genera.

Availability and implementation: The algorithm is implemented
in the program Dendroscope 3, which is freely available from
www.dendroscope.org and runs on all three major operating
systems.

Contact: scornava@informatik.uni-tuebingen.de;
huson@informatik.uni-tuebingen.de

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on July 13, 2011; revised on November 2, 2011; accepted
on November 3, 2011

1 INTRODUCTION

Speciation by hybridization (Gross and Rieseberg, 2005; Mallet,
2007) is a widespread phenomenon not only in plants (Rieseberg
et al., 2000; Soltis and Soltis, 2009), but also occurs in some other
types of organisms (Giraud et al., 2008; Schwenk et al., 2008).
When two individuals from distinct species hybridize and merge
their sets of chromosomes, the hybrid organism is often sterile
and does not produce any progeny. Differences among homologous
chromosomes prevent correct meiotic pairing and Viable gamete
production. However, the eventual doubling of the chromosome
number could restore a correct pairing (each chromosome pair
with its double), and the fertile genotype could give rise to a new
allopolyploid species. In this case, homologous chromosomes do
not mix and the number of the genes is doubled. In other words, the
genes from both parental species coexist in the polyploid genome
and evolve independently.

 

*To whom correspondence should be addressed.
IThe authors wish it to be known that, in their opinion, the ﬁrst two authors
should be regarded as joint First Authors.

In the case that the parental species are genetically similar enough,
the pairing between homologous chromosomes is not completely
prevented and balanced meiosis could take place. In this case, the
hybrid genotype could produce Viable hybrid gametes (containing
portions of both parental chromosomes) and progeny. If the progeny
remains reproductively isolated from the parental genotypes, it could
give rise to a new species (homoploid hybrid speciation).

This implies that, in a hybrid species, different genes may have
different evolutionary histories, in which case they will give rise
to incongruent gene trees. Thus, using a single rooted phylogenetic
tree to represent the evolutionary history of a set of taxa may be
inaccurate in the presence of interspeciﬁc hybridization. A more
precise description may be possible using a rooted phylogenetic
network, in which internal tree nodes (nodes of indegree 1) represent
putative speciation events, whereas reticulate nodes (nodes of
indegree Z 2) represent possible hybridization events.

Suppose we are given a collection of species for which we suspect
that hybridization events have played an important role in their
evolution. One way to determine a set of possible hybridization
events is to compute a hybridization network for a given set of
gene trees that aims at explaining the incongruences between the
different trees using a minimum number of putative hybridization
events. Ahybridization network for a set of trees T is simply a rooted
phylogenetic network containing the trees in T. In computational
terms, the problem can be formulated as follows: given a set T of
two or more rooted phylogenetic trees, determine all hybridization
networks for T that are minimum in the sense that they have a
minimum reticulate number (see below). This problem is known to
be a computationally hard problem even for the case of determining
only one hybridization network for two bifurcating trees on the same
set of taxa (Bordewich and Semple, 2007b).

In this article, we present an algorithm that takes as input two
bifurcating, rooted phylogenetic trees T1 and T2 on the same taxon
set X and produces as output a representative set of minimum
hybridization networks N on X that contain both trees. Such a
representative set is deﬁned to contain exactly one network derived
from each of the possible maximum acyclic agreement forests
(MAAF), as deﬁned below. The number of reticulation nodes in any
such minimum network is called the hybridization number, denoted
by h(T1, T2), fOI‘ T1 and T2.

Our algorithm is based on previous work described in Baroni
et al. (2006); Bordewich and Semple (2005, 2007a), which aims
at computing the hybridization number, and on the work on the
rooted SPR distance computation reported in Whidden and Zeh
(2009); Whidden et al. (2010). We extend the published approach
and provide a parallel implementation to compute a representative
set of minimum hybridization networks containing one network per

 

© The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 191

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIIIJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

B.Albrecht et al.

 

MAAF. In this context, a number of theoretical issues arise and we
will show how to address them in a forthcoming paper (Scomavacca
et al., 2011).

In our experience, the number of resulting networks can be quite
large and so we provide methods for showing how the two input
trees are embedded in the networks and for determining the number
of different networks that contain a speciﬁc reticulation. We also
provide variants of the algorithm that can be used to compute the
rooted SPR distance (deﬁned below) or the hybridization number of
two bifurcating, rooted phylogenetic trees.

We report on a simulation study that we have undertaken to
compare our implementation with other competing methods. This
study indicates that our approach is much faster than existing
methods. Moreover, to illustrate how one may apply our method
to a practical problem, we use it to investigate the evolution of the
Aegilops/Triticum genera.

The algorithm presented in this article is implemented in our
program Dendroscope 3 (Huson and Scornavacca, 2011), which is
freely available from www.dendroscope.org and runs on all three
major operation systems.

2 METHODS

Throughout this article, we follow the terminology and notation deﬁned in
Huson et al. (2011) and assume that the reader is familiar with graphs and
related terminology. Let T be a phylogenetic tree on X and let X ’ CX
be a subset of taxa. We use T(X/) to denote the minimum connected
subgraph of T that contains all leaves that are labeled by elements of X ’ .
The restriction of T to X ’ is deﬁned as the phylogenetic tree T | X/ that
is obtained from T (X ’ ) be suppressing all nodes that have both in— and
outdegree 1.

We deﬁne a rooted phylogenetic network on X as a directed acyclic
graph with a single node with indegree zero (the root), no nodes with both
indegree and outdegree equal to l, and nodes with outdegree zero (the leaves)
bijectively labeled by the set X.

Given a rooted bifurcating phylogenetic tree T, a rooted Subtree Prune
and Regraft move (rSPR move for short) on T is performed by ﬁrst detaching
a subtree of T rooted at the target of e1=(v1,w1) by deleting the edge e1
and re—grafting the subtree on a different branch e2 of T, by ﬁrst creating a
new node z2 in e2 and then a new edge (z2,w1). Finally, any node with both
in— and outdegree l is suppressed. Note that, in the case of regrafting above
the root ,0, a new root node ,0/ has to be created, as well as two new edges
(pﬂp) and (pﬂm).

Let T1 and T2 be two rooted bifurcating phylogenetic trees on a taxon set
X. The rSPR distance between T1 and T2 is deﬁned as the minimum number
of rSPR moves required to transform T1 into T 2. The problem of computing
the rSPR distance between two rooted bifurcating phylogenetic trees on the
same taxon set is known to be NP—hard, but ﬁxed—parameter tractable (FPT)
(Bordewich and Semple, 2005).

Let T1 and T2 be two rooted bifurcating phylogenetic trees on X. For
technical purposes, we assume that the root ,0 of both trees is a pendant node
that has been adjoined to the original root and no re—grafting is permitted
above ,0. An agreement forest for T1 and T2 on X U {,0} is a set of phylogenetic
trees, called also aforest, .7:={Fp,F1,...,Fh_1} on X U {,0} that has the
following properties:

(1) Each tree F ,- in .7: is the restriction of T1, and also of T2, to the set of
taxa X,- that appear in F ,-.

(2) The root ,0 is contained in F p.

(3) The trees in {T1(X,-)|ie{,0,l...,h—l}} and {T2(X,-)|ie
{,0, l, ...,h — 1}} are node disjoint subtrees of T1 and T 2, respectively.

An agreement forest with minimum cardinality is called a maximum
agreement forest (MAF). The concepts of rSPR distance and MAFs are
closely related. Indeed, a pair of rooted bifurcating phylogenetic trees {T 1 , T2}
has an rSPR distance equals to d if and only if there exists a MAF .7:(T1, T2)
with size d+l (Bordewich and Semple, 2005; Hein et al., 1996). Hence,
to determine the rSPR distance between T1 and T2, it sufﬁces to compute a
MAF for these two trees.

Recall that a hybridization network for two rooted bifurcating
phylogenetic trees T1 and T2 on X, is a rooted phylogenetic network that
contains both trees. Given a rooted phylogenetic network N =(V,E), the
reticulate number of N is deﬁned as

r(N)= Z (8‘(v)—1)=|El—|Vl+1,

veV28T(v)>0

where (3—(v) denotes the indegree of v. In the special case that N is
bicombining, that is, all nodes have indegree at most two, then this is simply
the number of reticulation nodes.

The hybridization number for T1 and T2 is the minimum reticulation
number obtained over all hybridization networks N for T1 and T2. The
problem of computing the hybridization number for two rooted bifurcating
phylogenetic trees on the same taxon set is known to be NP—hard, but FPT
(Bordewich and Semple, 2007a; Linz and Semple, 2011). The hybridization
number can be calculated by computing a maximum acyclic agreement
forest. An agreement forest fa(T 1,T 2) for T1 and T2 is called acyclic if
its ancestor-descendant graph AG (T1 , T2, fa(T1 , T2)) does not contain any
directed cycle. This graph is deﬁned as the directed graph whose vertex set
is .7-“0(T1 , T 2) and for which an edge (F i,Fj) exists precisely whenever i# j,
and either

(1) the root of T1(X,-) is an ancestor of the root of T1(Xj) in T1, or
(2) the root of T2(X,-) is an ancestor of the root of T2(Xj) in T2.

where Xi,  g X are the sets of taxa that appear in F ,- and Fj, respectively.
An acyclic agreement forest with a minimum number of components is called
a MAAF. If a MAAF with h components exists, then a hybridization network
with reticulation number h — 1 containing both T1 and T2 exists (Baroni et al.,
2005). For example, if a MAAF with only one component exists, then we
have that T1 and T2 are congruent and 0 reticulations are needed.

2.1 The algorithm

In this section, we give a high level description of an algorithm that takes
as input two rooted bifurcating phylogenetic trees T1 and T2 on the same
taxon set X, and produces as output a representative set of minimum
hybridization networks N on X that contain both trees, providing exactly
one network per MAAF. The problem of computing the rSPR distance or the
hybridization number between two trees is algorithmically a much simpler
problem than computing the hybridization networks and the algorithm that
we have implemented deals with these two problems, too.

The algorithm consists of three phases, namely, a reduction phase, an
exhaustive search phase and a ﬁnal phase. In the latter, either the rSPR
distance or hybridization number is reported, or the ﬁnal hybridization
networks are constructed. Whereas the ﬁrst and the third phases can be
executed in polynomial time, the exhaustive search phase is known to
be NP—hard (Bordewich and Semple, 2007b). The main aim of the initial
reduction phase is to decrease the practical running time by reducing the
size of the two trees that are passed to the exhaustive search phase.

2.1.] Reduction phase In the ﬁrst phase of the algorithm, certain patterns
present in both T1 and T2 are identiﬁed and used to reduce the instance of
the problem. There are three types of reductions [see Huson et al. (2011) for
a review]. A subtree reduction reduces pendant subtrees that are common
to both trees (Bordewich and Semple, 2005). This simpliﬁcation preserves
both the rSPR distance and the hybridization number. A chain reduction

 

192

112 /§JO'smurnofproJIXO'soneumoatutotq/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

Computation of minimum hybridization networks

 

reduces maximal chains of at least three leaves. Chain reductions for the
MAF and the MAAF problem are described in Bordewich and Semple
(2005) and Bordewich and Semple (2007a), respectively. Finally, a cluster
reduction divides the problem into a number of smaller subproblems using
the set of minimal clusters common to both trees. A cluster reduction for the
computation of MAAFs can be found in Baroni et al. (2006). Recently, a
cluster reduction for the computation of MAFs has been proposed (Linz and
Semple, 2011).

2.1.2 Exhaustive search phase The ﬁrst phase of the algorithm will
usually subdivide the original problem into several smaller subproblems.
For each such subproblem (T115), we must compute a MAF, a MAAF
or the set of all MAAFs, depending on whether we want to compute the
rSPR distance, the hybridization number or a set of hybridization networks,
respectively. To compute a single MAF, we use the FPT—algorithm described
in Whidden and Zeh (2009). A lower bound for the rSPR distance can be
found using the three—approximation algorithm of Whidden et al. (2010). In
Whidden and Zeh (2009), the authors also describe an FPT—algorithm for
computing acyclic agreement forests. Unfortunately, that work is based on
the incorrect assumption that it sufﬁces to avoid all cycles of length two so as
to obtain an acyclic agreement forest. In a forthcoming paper (C. Scomavacca
et al., manuscript in preparation, available at http://arxiv.org/abs/1109.3268),
we will show how to correct and extend their algorithm so as to obtain all
MAAFs for a given pair of trees. Broadly speaking, the algorithm works as
follows: suppose that we are interested in computing a MAAF for two trees
T1 and T 2. Our algorithm takes as input a tree R and a forest .7: and it proceeds
in a bounded—search type fashion by recursively deleting an edge in .7: or
reducing a common cherry of R and .7: until the resulting forest .7: is a forest
for T1 and T2. (The algorithm is called the ﬁrst time with R 2 T1 and .7: 2 T2).
More precisely, each recursion starts by picking an arbitrary cherry {a, c} in
R, i.e. a pair of leaves a and 0 adjacent to a common vertex. Depending on
whether {a, c} is a common cherry of R and .7: or not, and whether a and c
are vertices of the same component in .7: or not, the algorithm branches into
at most three computational paths by recursively calling itself. Regardless of
whether {a, c} is a common cherry of R and .7: or not, the algorithm branches
into two new computational paths that correspond to deleting one of the edges
entering a and c in .73, denoted ea and ec, respectively. Additionally, if {a, c}
is not a cherry in .7: and a and c are in the same connected component in .73,
then the algorithm branches into a third computational path that corresponds
to deleting an edge whose starting node lies on the shortest path connecting
a and c in .7, ea and ec excluded. Similarly, if {a, c} is a common cherry of
R and .73, then the algorithm branches into a third path that corresponds to
reducing the cherry {a,c} to a new leaf labeled {aUc} both in R and .73. If
only one MAAF is required, then the algorithm is terminated as soon as the
ﬁrst MAAF is found.

2.1.3 Output phase In the case that our aim is only to compute the
rSPR distance or the hybridization number, we simply report the number
of components in the MAF or MAAF, respectively, minus one. Otherwise, if
our aim is to generate a representative set of hybridization networks, then we
construct a phylogenetic network on X for each different MAAF computed
in the exhaustive search phase as described in Baroni et al. (2006). To do this,
we ﬁrst need to undo all the reductions performed in the reduction phase.

2.1.4 Parallelization and additional analysis For the computation of the
hybridization number or networks, each application of a cluster reduction in
the reduction phase of the algorithm gives rise to two subproblems. Since
the hybrid number for the unreduced problem is equal to the sum of the
hybrid number for the two subproblems (Baroni et al., 2006), the exhaustive
search can be run independently on the two subproblems. In our parallel
implementation of the algorithm, each subproblem produced in this way
is placed in a queue and the subproblems in the queue are dispatched to
individual cores subject to availability.

For the parallelization of the computation of the rSPR distance, it is not
that simple and a cluster hierarchy H has to be computed (Linz and Semple,

2011). A parallel analysis of the subproblems is then possible, but respecting
the cluster hierarchy: a subproblem in the hierarchy is analyzed only once
all its ‘descendent subproblems’ are. Note that the sum of MAF sizes of
each subproblem only provides an upper bound of the rSPR distance. For
computing the exact rSPR distance, some additional steps are required, see
Linz and Semple (2011).

When constructing a hybridization network in the output phase of the
algorithm, we assign the number 1 or 2 to each reticulate edge, depending
on whether the edge corresponds to tree T1 or T 2, respectively. With this
information, we can highlight the edges of T1 or T2 in each of the computed
networks.

The exhaustive search phase is also performed in a parallel fashion,
launching different threads to search for agreement forests of increasing
sizes. When an agreement forest of size k has been found, then all threads
searching for an agreement forest of larger size are aborted. A similar strategy
is used when searching for a single MAAF or for the set of all MAAFs. Thus,
parallelism is used even when the two input trees do not share any common
cluster.

Let N be the set of output networks. For each network N,- in N and for
each reticulate node rz in Ni, we compute the set of leaves LUZ) that can be
reached by direct paths from rz without crossing any reticulate node. (Note
that this leaf set represents the leaf set of a component of the underlying
MAAF.) Given two networks Ni,ZVj EN and a reticulate node rz in N1, we
say that N]- contains rz if there exists a reticulate node r; in N]- such that
L(rz)=Z(rl). Then, for each reticulate node in one of the output networks
N1, ...,Nt, we determine how many networks contain that particular node and
then label the node by this number divided by the total number of computed
networks t. Thus, a reticulate node that occurs in all computed t minimum
hybridization networks obtains a support value of 1, whereas a reticulate node
that occurs only once has a support value of  In addition, the computed
networks are listed in descending order with respect to the sum of the support
values of their reticulate nodes. When interpreting support values, remember
that only one network per MAAF is computed, when there might be many
networks per MAAF.

3 SIMULATION STUDY

To study the performance of our approach and implementation, we
undertook a simulation study. We generated 2000 synthetic datasets,
each consisting of a pair of rooted bifurcating phylogenetic trees. The
datasets are based on three parameters, namely the number of taxa
n, the number of rSPR moves k used to obtain the second tree from
the ﬁrst,1 and the tangling degree d (as deﬁned below). For each of
the following choices of the parameters, n in {20, 50, 100, 200}, k in
{5,10,...,50} and d in {3,5,10,15,20}, we constructed 10 pairs of
trees, thus obtaining 2000 different datasets in total.

The tangling degree is an ad hoc concept that we introduce to
control how tangled the resulting network will be and it inﬂuences
the way we obtain the second tree from the ﬁrst using rSPR moves.
More precisely, let R be an rSPR move performed on a tree T by
choosing two edges el and e2, pruning the subtree of T rooted at
the source of el = (v1 ,wl) and re—grafting it on e2 = (v2,w2). We say
that R respects a tangling degree of d, if the path from the lowest
common ancestor of the nodes v1 and v2 to the node v1 contains at
most d edges. The tangling degree is a useful concept because the
smaller it is, the more likely it is that one or more cluster reductions
can be performed on the resulting dataset. As we will see, the number
of common clusters in the two input trees has a major effect on the
performance of our algorithm. Indeed, the more cluster reductions

 

1Note that this number is an upper bound on the true rSPR distance.

 

193

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

B.Albrecht et al.

 

 

 

 

 

 

 

 

 

 

(a) O
o
N _
,_
o
o
o _
,_
A o
i”, o -
a, 00
.g o 54%
E 8 ' 62%/’°
E o
o
o -
<1-
0 900/
8 - o
100 7/
O - o
I I I I I
0 50 100 150 200
Number of Leaves
(0) 0
o
N -
,_
o
8 -
,_ 30% 2g%
0 0——
13 8 360/0/
0 oo 48%
E O
E 8 - 62°/
3 ‘9 3
CE
0
o _
<1- 81 %/
O
8 - 94%/
N 0
O
100% 100% 990/°/
o 0—0,
I I I I I I
0 1O 2O 30 40 50
Number of rSPR—Moves
(e) O
o
N -
,_
o
O -
o
.—
A o
L”, o -
a, co
.2 o
c O '
3 (O
[I 56%
7‘5
8 ' 78°/7a%78°/ /° 6°/
TI- 76 Ab-o}°‘°~oo’?4 %\22 /° 75%
75%
o .80%
O - o
N 90% 1007
100% ° ° 100% 100% 100%
_ 1oo%o u-o~/\_____
0 10° /°° 100%o 10 oatmun °

 

 

 

0 5 1O 15 20 25

Number Of Common Clusters

 

Runtime(s)
200 400 600 800 1000 1200
4:.
o$\

 

 

o100%

0

 

0 50 100 150 200
Number of Leaves

 

 

 

 

 

o
 o 1% 0% 0% 0%
N - 5% __ _ _
,_ ° .0 o o o
o 21 
o -
o
1—
" 0 46°/
3 o - 3
a, 00
.E o
E O -
E to
o
o -
<1-
8
N ' 98%°
100°/ 100%
O - 0—D 0/
I I I I I I
O 10 20 3O 40 50
Number of rSPR—MOW"S
(f) O
o
N -
,_
o
o -
o
1—
A o 34%
EL 0 - °
a, 00 45% 44% 47% \12%
E 48%o 0.1; o
-— O ° \52% \50% 50% 50% 67%
‘H o ' o o o o o
C to 0—0 \ o
9?; 57% 57% o; 57%
o 60% 67°/
3 ' °71% o
o o100°/
o - 84/
N 100% 40%
°\ o
O - o1oo% afoot/a

 

 

 

Number Of Common Clusters

Fig. 1. Comparison of the running time of Dendroscope 3 (on the left) and HybridNet (on the right). (a and b) Average running time as function of the number
of leaves. (c and (1) Average running time as function of the rSPR moves. (e and 1') Average running time as function of the number of common clusters. In
all plots, the percentages report the proportion of the executions that were completed within 20 mins.

we can perform, the smaller the problem instances are and the more
effective our parallelization is.

In more detail, each pair (T1, T2) of rooted bifurcating
phylogenetic trees for a given set of parameters n, k, and d is created
as follows: the ﬁrst tree T1 on X ={x1, ...,xn} is generated by ﬁrst
creating a set of n leaf nodes bijectively labeled by the set X. Then,
two nodes u and v, both with indegree 0, are randomly picked and a
new node w, along with two new edges (w, u) and (w, v), is created.
This is done until only one node with no ancestor, the root, is present.
The second tree T2 is obtained from T1 by applying k rSPR moves,
in each move respecting the given tangling degree d.

We compared our implementation with the best available
software for computing the exact hybridization number
between two rooted bifurcating trees on the same taxon set,
which is HybridNET (Chen and Wang, 2010), available from
http://www.cs.cityu.edu.hk/~lwang/software/Hn/. [The underlying
algorithm is described in Chen and Wang (2011)]. We do not
consider the program HybridInterleave (Collins et al., 2011),

because it has been shown to be much slower than the HybridNET
software (Chen and Wang, 2010). Both programs have been run on
a AMD Phenom X4 955 Processor with 4 GB RAM.

We present the results of our simulation in Figures 1 and 2. Each
program run that took >20 mins was aborted and then counted as
if it took 20mins. In Figure 1, aborted runs have been included in
the averages and, in all plots, the percentages report the proportion
of the executions that were completed within 20 min. In Figure 2,
aborted runs have not been included in the averages because
their hybridization number is unknown. In the latter ﬁgure, we
report the number of the executions that were completed within
20 minutes.

Figures 1 and 2 show that the average running time (as function
of the number of leaves, of the number of rSPRs or of the
hybridization number) of our implementation is always lower than
that of HybridNET. For both programs, the running time increases
with the number of taxa (Fig. 1a and b), and also with the rSPR
distance (approximated by the number of rSPR moves) (Fig. 1c

 

194

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Computation of minimum hybridization networks

 

 

 

 

 

 

 

 

 

(a) o
O
N _
’Ja‘ ‘— _
V 0
OJ 0 _
.E 00 4) 3
E o _ 6 8 O
E g — 29 26221174527 5/°\6/ \1 1 2/
48 4 500 33 ,o 0—0 0 oz ,0
_ 39 58 31 542 / \34 /O~o_o O
9 52144 33 6415022185 38 35516217 24 ,0 °\O-O—o’° o—0
o — I o—o—o—o—o—o—o—o—o—o—o'0-O-o’O I I I
0 10 2O 30 40
Hybrid Number
(b) o
a _
13 '- 3
v _ O
O
2 a — 208/
B _ 290—0
g o
— 9 52144 33 6415022185 3834 /o-o/
O — I o—o—o—o—o—o-cID—o-o-O’ I I I
O 10 20 3O 40

Hybrid Number

Fig. 2. Average running time as function of the hybridization number for Dendroscope 3 (a) and HybridNet (b). In both plots, we report the number of the

executions that were completed within 20 mins.

and d) and the hybridization number (Fig. 2). Figure 2 also shows
that, in our simulations, HybridNet was unable to compute the
hybridization number for any tree pair with hybridization number
>21, while our program produces results for tree pairs having a
hybridization number up to 40.

Note that the number of common clusters has a signiﬁcant effect
on the performance of our algorithm (Fig. 1e and f), and this explains
much of the performance advantage over HybridNet. However, even
in the case that no parallelization is performed, namely when the
number of common clusters is equal to 1, our implementation is still
faster than HybridNet (Fig. 1e and 1). Note that the plot in Figure 1f
is very erratic when the number of common clusters is >15. This
is due to the fact that few datasets share such a high number of
common clusters.

Using the same datasets, we also studied the performance
of our implementation for the problems of computing the
rSPR distance for two rooted bifurcating phylogenetic trees.
We compared the running time of our implementation with
that of the best available software for computing the exact
rSPR distance between two rooted bifurcating trees on the
same taxon set, i.e. rSPR (Whidden et al., 2010), available at
http://kiwi.cs.dal.ca/Software/RSPR. In all conditions, the program
rSPR performs better than our implementation (data not shown).
Since the underlying algorithms are the same in this case, we
suspect the difference in performance may be due to the fact that
our program is implemented in Java, whereas the rSPR program is
written in C++.

For the sake of completeness, in Supplementary Figure S1 we
report the running time of Dendroscope 3 and HybridNET when
computing the exact hybridization number and a set of hybridization
networks, containing a network per MAAF, on a grass (Poaceae)
dataset provided by the Grass Phylogeny Working Group (Grass
Phylogeny Working Group, 2001). This dataset has been often
used to evaluate programs computing the hybridization number or
hybridization networks for two rooted bifurcating phylogenetic trees
on the same taxon set.

Table 1. Accession numbers in GenBank of the sequences used for obtaining
the trees in Figure 3

 

 

PinA matK
Triticum urartu TU55 EU307589 FJ 897889
Triticum monococcum DP57 EU307591 FJ 897868
Aegilops tauschii DP16 FJ898213 FJ897861
Aegilops comosa DP13 FJ898210 FJ897858
Aegilops uniaristata DP56 FJ898218 FJ 897867
Aegilops bicomis DP18 FJ 898215 FJ 897863
Aegilops longissima DP17 FJ 898214 FJ 897862
Aegilops sharonensis DP53 FJ 898216 FJ 897864
Aegilops speltoides SP6 FJ 898222 FJ 897884
Hordeum vulgare (Morex) AY643 843 EF115541

 

4 APPLICATION TO PHYLOGENY OF
AEGILOP/TRITICUM GENERA

The Triticeae tribe (Family Poaceae) consists of diploid and
polyploid grasses with the same basic haploid chromosome
number (x = 7), and they are distributed worldwide. Phylogenic
analysis performed with different sequence datasets show signiﬁcant
inconsistencies (Kellogg et al., 1996; Mason—Gamer and Kellogg,
1996; Sasanuma et al., 2004). In particular, inconsistencies between
chloroplast and genomic data are often detected (Sasanuma et al.,
2004). We used two datasets of sequences from number of diploid
species belonging to the close genera Triticum and Aegilops: matK
and PinA, located on the chloroplast and the Triticeae chromosome
5, respectively. Sequence data were obtained from GenBank. The
accession numbers can be found in Table 1.

The best—ﬁt model of nucleotide substitution for each dataset was
chosen using JModeltest (Posada, 2008), and PhyML 3.0 (Guindon
et al., 2010) was used to obtain maximum likelihood phylogenetic
trees (heuristic search with BIONJ starting tree, SPR and NNI
swapping and 100 bootstrap replicates). Majority—rule extended

 

195

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pap1201umoq

9IOZ ‘09 lsnﬁnv uo ::

B.Albrecht et al.

 

consensus trees were computed from 100 bootstrap replicates
by the CONSENSE program of the PHYLIP package (Felsenstein,
2005), using the default parameters in the rooting setting. The two
consensus trees are shown in Figure 3.

Two kinds of inconsistencies were found. One involves
Aegilops speltoides and the ancestor of A.bicomis, Alongissima and
Asharonensis (hereafter referred to as the BLS species). Aspeltoides
has a basal position in both trees, but in the matK tree it is isolated,
whereas in the PinA gene it is very close to the BLS. In the matK
tree, the BLS species are close to species that radiated more recently.
This deep phylogenetic inconsistency could be a consequence
of a hybridization between Aspeltoides and an ancestor of BLS
species that introgressed into portions of Aspeltoides genome. This
hypothesis is supported by the observation of similar inconsistencies
involving Aspeltoides and A. longissima in a larger sample of nuclear
genes (Escobar et al., 2011). Note that this hypothesis is present in
all three hybridization networks obtained by Dendroscope 3 from
the two consensus trees (Fig. 4). The other inconsistency involves
the relative position of A.tauschii, of the ancestors of two groups of
species, i.e. A. uniaristata +A.com0sa and of the BLS species. Three
alternative hybridizations could be inferred (Fig. 4). However, this
inconsistency is more recent and could also be explained by an
incomplete allele sorting (that is, allelic variants coexisting in the
common ancestor of all these species were randomly ﬁxed in the
derived species).

 

 

( a) T_monacoccum (  T _m anacoccum
T _urartu T _urartu
Ae_tauschi i Ae_tauschii
Ae_c0m0sa Ae_comosa
Ae_uniaristata Aeiuniaristata
Aeibicomis Ae_bicornis
Ae_langissima Ae_longissima
Ae_sharonensis Aeisharonensis
Ae_ r " ‘1 Ae_spelt0ides
H ordeum H ordeum

 

 

 

Fig. 3. The two consensus trees computed from 100 bootstrap replicates for
the matK (a) and PinA (b) datasets.

(  l— T imanucoccum

'— T_urartu ( 

   

A e_tauschi i
E A e_camosa
A eiuniaristata

A 67bicomis

 

 

 

5 DISCUSSION

It has become standard practice to base evolutionary studies on
multiple genes. When incongruences between different gene trees
are small, then they are usually deemed insigniﬁcant and are dealt
with by performing a consensus analysis. However, when the
differences between the gene trees are more signiﬁcant, and when
mechanisms such as hybridization may have played an important
role in the evolutionary history of a set of species, then an alternative
approach may be to try to reconcile the different gene trees by
combining them into a rooted phylogenetic network in which
reticulation nodes represent possible hybridization events.

While some papers in the literature have focused on reconciling
incongruent gene phylogenies in terms of a network (Koblmuller
et al., 2007), a major problem has been the lack of software
implementing an algorithm for computing and investigating such
networks. In this article, we address the need for such software by
providing an algorithm that runs fast on most practical problems
and produces a representative set of minimum hybridization
networks, containing one network for each MAAF. Our algorithm is
implemented in the program Dendroscope 3, which allows the user
to visualize and compare the resulting networks, both among each
other, and also with the original input trees.

Our simulation study shows that our implementation is faster
than existing implementations and the study of grasses, reported in
Section 4, shows how one may use the software to obtain different
possible hybridization scenarios.

ACKNOWLEDGEMENTS

The authors would like to thank Simone Linz for helpful discussions.

Conﬂict of Interest: none declared.

REFERENCES

Baroni,M. et al. (2005) Bounding the number of hybridization events for a consistent
evolutionary history. Math. Biol., 51, 171—182.

Baroni,M. et al. (2006) Hybrids in real time. Syst. Biol., 55, 46—56.

Bordewich,M. and Semple,C. (2005) On the computational complexity of the rooted
subtree prune and regraft distance. Ann. Combinatorics, 8, 409—423.

Bordewich,M. and Semple,C. (2007a) Computing the hybridization number of two
phylogenetic trees is ﬁxed-parameter tractable. IEEE/ACM Trans. Comput. Biol.
Bioinformatics, 4, 458—466.

Bordewich,M. and Semple,C. (2007b) Computing the minimum number of
hybridisation events for a consistent evolutionary history. Discrete Appl. Math,
155, 914—928.

Tim onococcu m Timonacoccum

(C)

   
 
 

T_urmtu T_urartu

Ae_tauschii Ae_tauschii

A e_comasa
—E A eiuniaristata

A eibicomis

A e_comosa

A eiunian'stata

A eibicamis

 

 

 

 

—E A e_longissima
A e_sharonensis

A e_speltoides

 

Hordeum

 

 

 

Aeilongissima

 

A e_longissima
—E A e_sharonensis

A e_speltoides

A e_shamnensis

A e_speltoides

 

 

Hordeum “M” “m

 

Fig. 4. The three hybridization networks (a—c) obtained by the described algorithm for the matK and PinA consensus trees of Figure 3.

 

196

112 /§.IO'SIBUJHOprOJXO'SOllBIHJOJUIOIQ/ﬁdllq 11101; popnommoq

9IOZ ‘09 lsnﬁnv uo ::

Computation of minimum hybridization networks

 

Chen,Z.-Z. and Wang,L. (2010) HybridNET: a tool for constructing hybridization
networks. Bioinformatics, 26, 2912—2913.

Chen,Z.-Z. and Wang,L. (2011) Algorithms for reticulate networks of multiple
phylogenetic trees. IEEE/ACM Trans. Comput. Biol. Bioinformatics, 99.

Collins,J. et al. (2011) Quantifying hybridization in realistic time. J. Comput. Biol., 18,
1305—1318.

Escobar,J. et al. (2011) Multigenic phylogeny and analysis of tree incongruences in
Triticeae (Poaceae). BMC Evol. Biol., 11, 181.

Felsenstein,J. (2005) Phylip (phylogeny inference package) version 3.6. Department of
Genome Sciences, University of Washington, Seattle.

Giraud,T. et al. (2008) Speciation in fungi. Fungal Genet. Biol., 45, 791—802.

Gross,B. and Rieseberg,L. (2005) The ecological genetics of homoploid hybrid
speciation. J. Hered., 96, 241—252.

Guindon,S. et al. (2010) New algorithms and methods to estimate maximum-likelihood
phylogenies: assessing the performance of PhyML 3.0. Syst. Biol., 59, 307—321.

Hein,J. et al. (1996) On the complexity of comparing evolutionary trees. Discrete Appl.
Math, 71, 153—169.

Huson,D. and Scornavacca,C. (2011) Dendroscope 3 - a program for computing and
drawing rooted phylogenetic trees and networks. In preparation, software available
from: w . dendroscope . org.

Huson,D.H. et al. (2011) Phylogenetic Networks: Concepts, Algorithms and
Applications. Cambridge University Press, Cambridge, UK.

Kellogg,E. et al. ( 1996) When genes tell different stories: the diploid genera of Triticeae
(Gramineae). Syst. Bot., 21, 321—347.

Koblmuller,S. et al. (2007) Reticulate phylogeny of gastropod-shell-breeding cichlids
from Lake Tanganyika - the result of repeated introgressive hybridization. BMC
Evol. Biol., 7, 7.

Linz,S. and Semple,C. (2011) A cluster reduction for computing the subtree distance
between phylogenies. Ann. Combinatorics, 15, 465—484.

Mallet,J. (2007) Hybrid speciation. Nature, 446, 279—283.

Mason-Gamer,R. and Kellogg,E. (1996) Testing for phylogenetic conﬂict among
molecular data sets in the tribe Triticeae (Gramineae). Syst. Biol., 45, 251338.

Posada,D. (2008) jModelTest: phylogenetic model averaging. Mol. Biol. Evol., 25,
1253—1256.

Rieseberg,L.H. et al. (2000) Hybridization, introgression, and linkage evolution. Plant
Mol. Biol., 42, 205—224.

Sasanuma,T. et al. (2004) Characterization of genetic variation in and phylogenetic
relationships among diploid aegilops species by AFLP: incongruity of chloroplast
and nuclear data. Theor. Appl. Genet, 108, 612—618.

Schwenk,K. et al. (2008) Introduction. extent, processes and evolutionary impact of
interspeciﬁc hybridization in animals. Philos. Trans. R. Soc. Lond. Ser. B Biol. Sci.,
363, 2805—2811.

Scornavacca,C. et al. (2011) A ﬁrst step toward computing all hybridization networks
for two rooted binary phylogenetic trees. In preparation.

Soltis,P. and Soltis,D. (2009) The role of hybridization in plant speciation. Annu. Rev.
Plant Biol., 60, 561—588.

Whidden,C. and Zeh,N. (2009) Aunifying view on approximation and FPT of agreement
forests. In Salzberg,S. and Warnow,T. (eds) Algorithms in Bioinformatics. vol. 5724
of Lecture Notes in Computer Science, Springer, Berlin/Heidelberg, pp. 390—402.

Whidden,C. et al. (2010) Fast FPT algorithms for computing rooted agreement forests:
theory and experiments. In Festa,P. (ed) SEA, vol. 6049 of Lecture Notes in
Computer Science. Springer, Heidelberg, Germany, pp. 141—153.

 

197

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIHJOJUIOIQ/ﬁdnq 11101; popnommoq

9IOZ ‘09 lsnﬁnv uo ::

