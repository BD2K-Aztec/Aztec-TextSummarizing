APPLICATIONS NOTE

Vol. 31 no. 1 2015, pages 121—122
doi: 10. 1 093/bioinformatics/btu5 74

 

Structural bioinformatics

Advance Access publication September 2, 2014

ballaxy: web services for structural bioinformatics

Anna Katharina Hildebrandt1’*, Daniel Stockell, Nina M. Fischer2, Luis de la Garza2,
Jens Krijgerz, Stefan Nickelsl, Marc Rottigz, Oharlotta Scharfez, Marcel Schumannz,
Philipp Thielz, Hans-Peter Lenhofl, Oliver Kohlbacher2 and Andreas Hildebrandt3’*

1Center for Bioinformatics, Saarland University, 66041 Saarbriicken, 2Applied Bioinformatics, Center for Bioinformatics,
Quantitative Biology Center, University of Tiibingen, 72607 Tijbingen and 3Chair for Software—Engineering and
Bioinformatics, Institute for Informatics, Johannes—Gutenberg—University Mainz, 55128 Mainz, Germany

Associate Editor: Alfonso Valencia

 

ABSTRACT

Motivation: Web-based workflow systems have gained considerable
momentum in sequence-oriented bioinformatics. In structural bio-
informatics, however, such systems are still relatively rare; while
commercial stand-alone workflow applications are common in the
pharmaceutical industry, academic researchers often still rely on com-
mand-line scripting to glue individual tools together.

Results: In this work, we address the problem of building a web-
based system for workflows in structural bioinformatics. For the under-
lying molecular modelling engine, we opted for the BALL framework
because of its extensive and well-tested functionality in the field of
structural bioinformatics. The large number of molecular data struc-
tures and algorithms implemented in BALL allows for elegant and
sophisticated development of new approaches in the field. We
hence connected the versatile BALL library and its visualization and
editing front end BALLView with the Galaxy workflow framework. The
result, which we call ballaxy, enables the user to simply and intuitively
create sophisticated pipelines for applications in structure-based
computational biology, integrated into a standard tool for molecular
modelling.

Availability and implementation: ballaxy consists of three parts:
some minor modifications to the Galaxy system, a collection of tools
and an integration into the BALL framework and the BALLView appli-
cation for molecular modelling. Modifications to Galaxy will be sub-
mitted to the Galaxy project, and the BALL and BALLView integrations
will be integrated in the next major BALL release. After acceptance of
the modifications into the Galaxy project, we will publish all ballaxy
tools via the Galaxy toolshed. In the meantime, all three components
are available from http://www.ba|I-project.org/ballaxy. Also, docker
images for ballaxy are available at https://registry.hub.docker.
com/u/anhi/ballaxy/dockerfi|e/. ballaxy is licensed under the terms of
the GPL.

Supplementary information: Supplementary data are available at
Bioinformatics online.

Contact: anna.hildebrandt@bioinf.uni-sb.de or andreas.hildebrandt@
uni-mainz.de

Received on January 29, 2014; revised on August 7, 2014; accepted
on August 20, 2014

 

*To whom correspondence should be addressed.

1 INTRODUCTION

Workﬂow systems have become increasingly popular in many
areas of computational biology. In addition to the creation
and sharing of powerful workﬂows that can be seen as a
modern alternative to shell-based scripting, such systems foster
the reproducibility of results in computational science and offer
beneﬁts with respect to the deployment and conﬁguration of
software packages. This latter part is particularly clear for sys-
tems that offer a web-based user interface that can be accessed
using a standard web browser with its commonly accepted set of
interface metaphors. Installation and maintenance of such sys-
tems can be centralized, although parameter settings and special
combinations of tools into processing chains can be stored per
user and manipulated through the browser. One important ex-
ample is the popular Galaxy system (Goecks et al., 2010).

In structural bioinformatics, the number of workﬂow-enabled
portals appears to be smaller than in computational genomics,
for instance. One prominent example of such a system for com-
putational chemistry is the MoSGrid (Molecular Simulation
Grid) portal (Herres-Pawlis et al., 2012), which offers predeﬁned
workﬂows for quantum calculations, molecular dynamics and
docking, based on UNICORE and WS-PGrade/gUSE technol-
ogies (Gesing et al., 2012). Although many typical use cases are
well covered, it remains difﬁcult for novice users to modify or
extend the existing MoSGrid workﬂow.

One reason for the relative scarcity of easily extensible struc-
ture-based workﬂow systems is the difﬁculty of supporting much
of the functionality of an inherently 3D discipline through the
conﬁnes of a typically 2D workspace of a workﬂow toolkit, such
as the one offered by the browser connected to a Galaxy in-
stance. While sequence-based tools mainly require text-based
visualization and 2D plots, sophisticated molecular structure ma-
nipulation demands versatile tools that interact with a 3D mo-
lecular system.

Hence, a web-based workﬂow system for structural computa-
tional biology would, at present, require constant switching be-
tween tools: from the commonly locally installed molecular
modelling application to the web service, and vice versa.
Recurrent data transfer causes repeated up- and downloads,
which are cumbersome and can be time-consuming.

In this work, we present an approach to combine web-based
workﬂow management with a classical powerful molecular mod-
elling interface.

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 121

112 [glO'SIBILInO[plOJXO'SODBIILIOJHIOIQ/[ldllq IIIOJJ papeolumoq

910K ‘09 lsnﬁnV no :2

A.K.Hildebrandt et al.

 

2 IMPLEMENTATION

The ﬁrst step of our approach consists in an extension of the BALL
project (Hildebrandt et al., 2010), where common functionality has
been encapsulated in command-line tools. These have then been supple-
mented with a mechanism for the generation of description ﬁles for work-
ﬂow systems—Galaxy in particular—which then allows for the
integration of the tools into a workﬂow. In the process, we also extended
the Galaxy system to support molecular ﬁle formats and automatically
load the BALL tools.

To solve the problem of providing workﬂow functionality in combin-
ation with a versatile modelling environment, we then extended
BALLView (Moll et al., 2005, 2006) by a plugin that tightly integrates
communication with a ballaxy server (local or remote) into the modelling
toolkit. ballaxy is based on the Galaxy workﬂow engine and uses its
powerful user management, tool handling and workﬂow environment.
To this end, we extend Galaxy to understand molecular ﬁle formats
such as PDB or MOL2, and by tools for structural data in the context
of molecular modelling and computer-aided drug design. Automated ﬁle
format detection inside Galaxy uses the python interface of BALL.
Structures can be downloaded, visualized and manipulated in
BALLView and, through an entry in their context menu, directly up-
loaded to the server. A browser window embedded into BALLView is
then used to interact with ballaxy in the usual fashion to create or run
tools and workﬂows. The results of these workﬂows can then be directly
downloaded into the BALLView instance through the click of a button,
where they are displayed in 3D and can be further manipulated or stored.

To provide a collection of useful tools, we further extended the BALL
library. These tools will be integrated into BALL version 1.5, which is in
development at the time of writing. Besides convenience tools like mo-
lecular ﬁle converters or a connected component splitter, we currently
account for four main application areas: NMR shift prediction (Dehof
et al., 2013, 2011a), ligand optimal bond order assignment (Dehof et al.,
2011b), pose clustering (Hildebrandt et al., 2013) and docking
(Kohlbacher, 2012).

Furthermore, various tools for computer-aided drug design provide
functionality to set up ligand-based and structure-based virtual screening
workﬂows. The ligand-based part comprises quantitative structure—activ-
ity relationship (QSAR) tools for reading and preprocessing of QSAR
datasets, model generation and validation, feature selection and activity
prediction. The structure-based part offers tools to read, check and pre-
pare protein structures and virtual compound libraries, for pocket detec-
tion, receptor grid generation and protein-ligand docking. Tools for
target and antitarget rescoring of initial docking poses allow customized
improvement of the docking outcome. Post-docking analysis tools like a
ScoreAnalyzer or an RMSDCalculator enable the examination of ﬁnal
docking results and their clustering. All the tools support a standard set
of parameters, e.g. for ﬁle input, output and help texts. All the tools also
support different execution environments: the same tool can be used for
standard command line usage as well as for integration into a workﬂow
toolkit. Each tool is additionally able to export its own conﬁguration ﬁle
used to tell the workﬂow package about its existence and mode of
operation.

3 EXAMPLE

Workﬂow systems such as Galaxy offer great beneﬁts for many
ﬁelds of science. Using a system such as ballaxy, these beneﬁts

also apply to applications in structural-based drug discovery. A
typical docking workﬂow using CADDSuite (Kohlbacher, 2012)
tools is shown in Supplementary Figure S1, where it is described
in detail.

Finally, addition of new tools using BALL is simple and is
described in our documentation (http://ball—trac.bioinf.uni-Sb.de/
wiki/ballaxy).

ACKNOWLEDGEMENTS

The authors wish to thank the BALL development team. They
gratefully acknowledge the use of software from OpenEye
Scientiﬁc Software, Inc.

Funding: A.H. acknowledges ﬁnancial support from the Intel
Visual Computing Institute (IVCI) of Saarland University and
the ‘Schwerpunkt Rechnergestiitzte F orschungsmethoden in den
Naturwissenschaften’ of J ohannes-Gutenberg University Mainz,
AH. and H.P.L. ﬁnancial support from DFG (BIZ4:1-4). O.K.
acknowledges ﬁnancial support from DF G core facilities (grant
KO 2313 /6-1), the European Commissions Seventh Framework
Programme (FP7/2007-2013) under grant agreement no. 283481
(SCI-BUS). J .K. and OK. would like to thank the German
Federal Ministry of Education and Research (BMBF) for the
opportunity to do research in the MoSGrid project (reference
011G09006).

Conﬂict of interest: none declared.

REFERENCES

Dehof,A. et al. (2011a) Predicting protein NMR chemical shifts in the presence of
ligands and ions using force ﬁeld-based features. Proceedings of the German
Conference on Bioinformatics (GCB 2011).

Dehof,A.K. et al. (2011b) Automated bond order assignment as an optimization
problem. Bioinformatics, 27, 619—625.

Dehof,A.K. et al. (2013) NightShift: NMR shift inference by general hybrid model
training-a framework for NMR chemical shift prediction. BM C Bioinformatics,
14, 98.

Gesing,S. et al. (2012) A single sign-on infrastructure for science gateways on a use
case for structural bioinformatics. J. Grid. Comput, 10, 769—790.

Goecks,J. et al. (2010) Galaxy: a comprehensive approach for supporting accessible,
reproducible, and transparent computational research in the life sciences.
Genome Biol., 11, R86.

Herres-Pawlis,S. et al. (2012) Workﬂow-enhanced conformational analysis of guan-
idine zinc complexes via a science gateway. Stud. Health Technol. Inform, 175,
142—151.

Hildebrandt,A. et al. (2010) BALL-Biochemical Algorithms Library 1.3. BM C
Bioinformatics, 11, 531.

Hildebrandt,A. et al. (2013) Efﬁcient computation of root mean square deviations
under rigid transformations. J. Comput. Chem, 35, 765—771.

Kohlbacher,0. (2012) CADDSuite—a workﬂow-enabled suite of open-source tools
for drug discovery. J. Cheminform., 4, 02.

Moll,A. et al. (2005) BALLView: an object-oriented molecular visualization and
modeling framework. J. Comput. Aided M01. Des., 19, 791—800.

Moll,A. et al. (2006) BALLView: a tool for research and education in molecular
modeling. Bioinformatics, 22, 365—366.

 

122

112 ﬁhO'smumo[pJOJXO'sopemJogutotq/ﬁd11q IIIOJJ papeolumoq

910K ‘09 lsnﬁnV uo ::

