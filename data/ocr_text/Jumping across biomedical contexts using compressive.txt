Bioinformatics, 32, 2016, i90—i100
doi: 10.1093/bioinformatics/btw247
ISMB 2016

 

Jumping across biomedical contexts using
compressive data fusion

Marinka Zitnik1'2'* and Blaz Zupan2'3'*

1Department of Computer Science, Stanford University, CA 94305, USA, 2Faculty of Computer and Information
Science, University of Ljubljana, Ljubljana, Slovenia 1000 and 3Department of Molecular and Human Genetics,
Baylor College of Medicine, TX 77030, USA

*To whom correspondence should be addressed.

Abstract

Motivation: The rapid growth of diverse biological data allows us to consider interactions between
a variety of objects, such as genes, chemicals, molecular signatures, diseases, pathways and envir—
onmental exposures. Often, any pair of objects—such as a gene and a disease—can be related in
different ways, for example, directly via gene—disease associations or indirectly via functional
annotations, chemicals and pathways. Different ways of relating these objects carry different se-
mantic meanings. However, traditional methods disregard these semantics and thus cannot fully
exploit their value in data modeling.

Results: We present Medusa, an approach to detect size—k modules of objects that, taken together,
appear most significant to another set of objects. Medusa operates on large—scale collections of
heterogeneous datasets and explicitly distinguishes between diverse data semantics. It advances
research along two dimensions: it builds on collective matrix factorization to derive different se—
mantics, and it formulates the growing of the modules as a submodular optimization program.
Medusa is flexible in choosing or combining semantic meanings and provides theoretical
guarantees about detection quality. In a systematic study on 310 complex diseases, we show the
effectiveness of Medusa in associating genes with diseases and detecting disease modules. We
demonstrate that in predicting gene—disease associations Medusa compares favorably to methods
that ignore diverse semantic meanings. We find that the utility of different semantics depends on
disease categories and that, overall, Medusa recovers disease modules more accurately when
combining different semantics.

Availability and implementation: Source code is at http://github.com/marinkaz/medusa

Contact: marinka@cs.stanford.edu, blaz.zupan@fri.uni—Ij.si

 

1 Introduction

OXFORD

 

In recent years, there is increasing evidence that gene—disease associ—
ation prediction and disease module detection can benefit from inte—
grative data analysis (Moreau and Tranchevent, 2012; Ritchie et 61].,
2015). Large—scale molecular biology data systems analyzed with in—
tegrative approaches are typically heterogeneous and contain objects
of different types, such as genes, pathways, chemicals, disease symp—
toms and exposure measurements. These objects interconnect
through multiple, most often pairwise, relations encoded in the
data. Consider an example of such a data system from Figure 1 that
contains 16 datasets (solid edges) and objects of 13 different types
(nodes). For example, dataset RZ’7 encodes the clinical manifest—
ations of diseases, whereas dataset R5’3 describes associations of
chemicals with biological processes and molecular functions. The
ubiquity of complex data systems of this kind presents many unique

©The Author 2016. Published by Oxford University Press.

opportunities and challenges for uncovering genotype—phenotype
interactions, or, in general, interactions between any kind of objects.

Challenges in the joint consideration of systems of datasets, such
as that in Figure 1, include inferring accurate models to predict dis—
ease traits and outcomes, elucidating important disease genes and
generating insight into the genetic underpinnings of complex dis-
eases (Barabasi et 61]., 2011; Han et 61]., 2013; Ruffalo et 61]., 2015;
Tasan et 61]., 2015). We would like these models to collectively con—
sider the breadth of available data, from whole—genome sequencing
to transcriptomic, methylomic and metabolic data (Navlakha and
Kingsford, 2010; Greene et 61]., 2015; Zitnik et 61]., 2015). A major
barrier preventing existing methods from fully exploiting entire data
collections is that individual datasets usually cannot be directly
related to each other. For example, datasets R5’3 (annotation of
chemicals with Gene Ontology (GO) terms) and R2’7 (symptoms of

i90

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/Iicenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

112 /§JO'S{eumo [p.IOJXO'SSUBUHOJUIOIQ/ﬁdllq 11101; popeoprmoq

9IOZ ‘09 lsnﬁnv uo ::

Jumping across biomedical contexts

i91

 

‘~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
‘~
~

‘~

 

      

Exposure
events

Fig. 1. Data fusion graph showing relations between the datasets used in this
study. Each node represents a distinct type of objects, such as chemicals,
pathways or exposure events, and each edge represents a dataset. For ex-
ample, R2’6 is a matrix of curated exposure data containing environment-
disease connections from the CTD database (Davis et al., 2015). In total, the
analysis based on this graph considers objects of 13 different types and 16
datasets (ignoring dotted edges, see Section 4.2). For a detailed description
of the data, see Section 4.1

diseases) in Figure 1 reside in completely different feature space. As
we will learn in this manuscript, we can relate distant objects by
chaining through the fusion graph, for example, we can relate mo—
lecular signatures with disease symptoms through genes, GO terms,
chemicals and diseases. But such chaining actually exacerbates the
problem, as distant objects can be linked in many different ways.
For example, another way to relate molecular signatures with dis—
ease symptoms is via genes, pathways, chemicals, GO terms
(Ashburner et al., 2000), exposure events and diseases. A priori, it is
not obvious which of the two ways, or which of any existing ways
of connecting the signatures with the symptoms, performs better
and should thus be preferred when mining disease data.

Different ways of relating objects often carry different semantic
meanings and can potentially generate different results. Intuitively,
different semantics imply different similarities. However, traditional
methods that we review in the next section disregard the subtlety of
different types of objects and links. These methods mix, discard or
ignore different semantics, which might impede their performance
and explanatory capabilities. In this work, we aim to fill this gap by
developing an approach for disease module detection that can con—
sider diverse semantics in a principled manner.

We here introduce a novel approach, called Medusa, for auto—
matic detection of size—k significant modules from heterogeneous
systems of biological data. Unlike previous works in integrative data
analysis, Medusa explicitly takes different semantics into consider—
ation during module detection by allowing a user to either choose a
particular semantic or combine them. Our goal is to answer associ—
ation queries on possibly complex data systems, such as the one in
Figure 1. For example, given a small number of diseases, infer the
most significant group (module) of genes of size 13. Or, given a list of
genes, propose a group of [a other genes that, taken together, will
give the highest significance under a particular null hypothesis.

Or, given a selection of molecular pathways of interest, find which [a
chemicals have the largest collective impact on these pathways. To
achieve this level of versatility, Medusa builds upon a recent collect—
ive matrix factorization algorithm (Zitnik and Zupan, 2015 ). In
addition, Medusa formulates a submodular optimization program,
which provides theoretical guarantees about the significance of the
detected modules (Fujishige, 2005).

In a case study with datasets shown in Figure 1, we applied
Medusa to find gene—disease associations and infer disease modules.
We demonstrate that Medusa—inferred associations are more accur—
ate than those of alternative approaches, which conflate distinct se—
mantics that exist in the data system. Importantly, we find that
different semantics vary in their ability to make accurate predictions.
We also show that the performance of different semantics depends
on the disease category. Finally, we observe that the overall best per—
formance is achieved when Medusa infers associations by combining
distinct semantics.

2 Related work

The question of distinguishing different semantics that exist within
biomedical data systems remains largely unexplored. Two notable ex—
ceptions include a meta-path-based approach for gene—disease link
prediction in heterogeneous networks (Himmelstein and Baranzini,
2015) and a latent-chain-based approach for gene prioritization
(Zitnik et al., 2015 ). These approaches, however, are algorithmically
different. The approach of Himmelstein and Baranzini (2015) is a
network—based technique that relies on meta-paths (Sun et al., 2011a,
2011b, 2012; Wan et al., 2015 ). Meta—paths represent the number of
path instances between two objects that follow a particular sequence
of object types in a heterogeneous network. In contrast to meta—paths,
Zitnik et al. (2015 ) use collective matrix factorization (Zitnik and
Zupan, 2015) to estimate a latent data representation of a data system
and then derive new connections by appropriately multiplying the la-
tent matrices. In Section 5.3, we empirically compare our Medusa,
which formulates module detection on top of latent representation of
the system, to alternative meta—path—based approaches.

Advances in computational approaches for mining disease related
relationships, such as gene—disease, drug—disease or disease—disease
associations may lead to better understanding of human disease and
may help identify new disease genes, drug targets and biomarkers
Barabasi et al. (2011). Representative studies include Davis and
Chawla (2011); Goncalves et al. (2012); Kohler et al. (2008); Li and
Patra (2010); Warde—Farley et al. (2010); Zitnik et al. (2013).
Barabasi et al. (2011) and Navlakha and Kingsford (2010) found that
random walk approaches usually outperform clustering and neighbor-
hood approaches when predicting gene—disease associations from net—
work data, although most methods make unique predictions not
proposed by any other method. Recently, latent factor models (e.g.
Natarajan and Dhillon (2014); Zitnik et al. (2013); Zitnik and Zupan
(2016)) have been successful in predicting gene—disease and disease—
disease associations. These methods can combine heterogeneous data
for diseases and genes by estimating latent models that are coupled
across different datasets and explain well the observed associations.
Cofunction (Ruffalo et al., 2015; Tasan et al., 2015) networks are
also important for fine—scale mapping of diseases by prioritizing genes
located at disease—associated loci, for example, by connectivity to
known causal genes. Most of these approaches are restricted to infer—
ring pairwise associations.

There are several lines of research on how to consider many
datasets to derive good groupwise disease associations. Vanunu

112 /§JO'S{eumo [p.IOJXO'SSUBUHOJUIOIQ/ﬁdllq 11101; popeommoq

9IOZ ‘09 lsnﬁnv uo ::

i92

M.Zitnik and B.Zupan

 

et al. (2010); Ghiassian et al. (2015 ) considered network propaga—
tion and random walk analysis for prioritizing disease genes and
inferring protein complex associations. Han et al. (2013) sought
groupwise disease associations for sets of single nucleotide poly—
morphisms mapping to a given functional category. On a related
note, guilty—by—association methods (Wang et al., 2012) have used
cofunction networks to assign functions to uncharacterized genes in
various organisms and to functionally characterize whole sets of
genes. Functionally coherent subnetworks were also used to aug—
ment curated functional annotations by connecting genes that share,
or are likely to share, functions (Greene et al., 2015; Lee et al.,
2004; Tasan et al., 2015 ), for example, by sharing protein domain
annotations or tissue—specific interactions.

However, while these gene—disease association and disease mod—
ule detection methods use the information from different data sour—
ces, none, including our previous work on this topic (Zitnik et al.,
2013; Zitnik and Zupan, 2016), explicitly considers that different
purposes of disease—related analysis might benefit from considering
different, potentially distant, semantics between genes and diseases,
nor do they ask users to select/combine different ways of connecting
genes with diseases. Medusa, the algorithm presented here, differs
from the above methods in that it utilizes semantically distinct
chains consisting of possibly many relations to derive relationships
between objects, such as genes and diseases. Medusa can establish
connections between objects for which direct relationships are not
available in present data. It then uses these connections to find size—
le modules of objects that together exhibit near—highest significance
to the preselected pivot objects. The ﬂexibility of Medusa is further
shown in that the object type of the pivots can, but not necessarily,
coincide with the object type of the candidates and that chains carry—
ing different semantic meanings can be combined in a principled

manner.

3 Methods

Medusa is an approach for the detection of size—la modules that are
maximally significant for a predefined set of pivot objects. On the
input, Medusa accepts (i) a set of candidate objects that are potential
module members, (ii) a set of pivot objects that are not necessarily
of the same type as the candidates and (iii) a possibly large and het—
erogeneous collection of datasets represented in the form of a data
fusion graph such as that shown in Figure 1.

Medusa uses collective matrix factorization to jointly estimate a
latent data model from all datasets included in a fusion graph. It ex-
ploits the latent data model to establish semantically distinct connec-
tions between candidate objects and domains of other object types
in the fusion graph (Section 3.2). The module detection algorithm in
Medusa (Sections 3.3—3.5) is a submodular optimization program
which yields an efficient algorithm and provides theoretical guaran—
tees about the significance of the detected modules.

3.1 Preliminaries and notation

3.1.1 Data fusion graph

A data fusion graph g : (V,R, T) is a relational map of datasets
(Zitnik and Zupan, 2015 ). Nodes of the graph V represent different
types of objects, such as ontological terms, genes, diseases, pathways
and chemicals. The edges of the graph correspond to datasets, which
are given in matrices annotated next to the edges. An exemplar data
fusion graph is shown in Figure 1. Matrix RZ’7 therein is a n2 >< n7
real—valued matrix whose rows correspond to diseases indexed by a
respective disease—based controlled vocabulary and whose columns

indicate disease symptoms indexed by a symptom—based vocabulary.
Elements of matrix RZ’7 represent a dataset, such as disease—symp—
tom associations.

Technically, the edges of the fusion graph are given by a set of re-
lation matrices R : {RIJ;I,] E V,I 7E],RIJ E Rmxnl} that repre—
sent dyadic datasets and a set of constraint matrices
T : {®I; I E V, OI E R"I Xm } that represent unary datasets. It is pos—
sible to have multiple relation matrices that relate object types I and
] (i.e. more than one edge between I and ] in the fusion graph) or
multiple constraint matrices for object type I (i.e. more than one
loop for I in the fusion graph). Here, this possibility is suppressed
for notational brevity.

3.1.2 Collective matrix factorization
Collective matrix factorization (Zitnik and Zupan, 2015 ) is an algo-
rithm that considers a fusion graph g = (V, R, T) and infers its la—
tent model by compressing the datasets with co—factorization of
matrices in R. Matrices T are used for regularization of the latent
model. The method simultaneously co—factorizes all the relation
matrices into the products of much smaller latent matrices through a
procedure which (i) ensures the transfer of information between
related matrices and (ii) promotes good generalization via a high-
quality data compression. To achieve the first point, collective fac—
torization reuses the latent matrices when decomposing distinct but
related relation matrices. The second feature is possible due to the
low—dimensional nature of matrix factorization.

The collective matrix factorization algorithm aims to estimate
low—dimensional latent matrices GI, I E V, and S”, I, ] E V, which
minimize the following objective:

2 ||RIJ—GISIJ(GJ)T||§rO+ Z tr((GI)T®IGI). (1)

RIJER OIET

Here/13116 inferred latent matrices tri—factorize each relation ma—
trix as R = GISIJ(GI)T. Matrix G’ is a n; x la; (131 << n1) non-
negative latent matrix containing latent profiles of objects of type I
in rows, G] is a n] X 13; (la; << n]) non—negative latent matrix with
profiles of objects of type ] in rows and SM is a k; X 13; latent matrix
that models interactions between latent components in the (I , ])—th
dataset. The latent profile of an object of type I is given by its corres—
ponding row vector in GI. Semantically, the profile encodes mem—
bership of the object to the la; latent components.

The parameters of the algorithm are factorization ranks, k1, for
every object type I in the data fusion system, which are selected as in
Zitnik et al. (2015 ). We refer the reader to Zitnik and Zupan (2015 )
for a detailed description and theoretical analysis of the factoriza—
tion algorithm.

3.1.3 Chaining of latent data matrices

A factorized system of latent data matrices returned by the collective
matrix factorization can be used to establish connections between
distant object types, i.e. non—neighboring nodes in the fusion graph
(Zitnik et al., 2015).

DEFINITION 1: Chain: A chain CS”T is a sequence of relations defined
on a fusion graph g = (V, R, T) that connects object type S E V
with possibly distant object types T E V. The chain CS”T
in the form of:

is denoted

057T : R5711 oRth O . . . ORE—2,114 ORE—1,7"7 (2)

which defines a composite relation between object types S and T,
where 0 denotes the composition operator on relations. Here, for I1,

112 /§IO'S{eumo [p.IOJXO'SOilBIIIJOJUIOIQ/ﬁdllq 11101; popeoIIImoq

9IOZ ‘09 lsnﬁnv uo ::

Jumping across biomedical contexts

i93

 

12, . . . ,II the object types I,- and 1,11 must be adjacent in the fusion
graph g.

The length l of chain CS”T is measured by the number of its con—
stituent relations. We now formulate how to materialize a given
chain and derive the profiles of objects of one type in the space of
objects of another type.

DEFINITION 2: Materialized chain: Given a fusion graph
g = (V, R, T) and a latent data system estimated by collective ma-
trix factorization, a materialized chain CS’T E R"anT for chain C’S’T
specified in Equation (2) is defined as:

C” = ﬁs’hﬁh’h ...ﬁI"Z’I"1ﬁI"“T, (3)

AU . . .

where R AiIthhe relation matrix reconstructed from the latent data
system as R : GISI’](G])T. ((-)T is matrix transposition.)

3.1.4 Submodular functions and optimization

Submodular functions (Edmonds, 1970; Fujishige, 2005) have re—
cently attracted much interest, e.g. see Krause and Guestrin (2011).
Let us assume we are given a finite set of n objects V and a valuation
function f : 2V —> R+ that returns a non—negative real value for any
subset X Q V. The function f is said to be submodular if it satisfies
the property of diminishing returns. That is, for any set X Q Y and
i E Y, we must have: f(XU  —  2 f(YU  —  This
means that the incremental gain of element i decreases when the
background in which i is considered grows from X to Y 2 X. We de—
fine the ‘gain’ as f(i, X) : f(X U  — f(X), which implies that fis
submodular if f(i, X) 2 f(i, Y).

In this article, we deal with functions that are not only submodu—
lar but also non—negative (i.e. f (X) Z 0 for all X Q V) and mono—
tone non—decreasing (i.e. f (X) 2 f (Y) for all X Q Y). Such functions
are trivial to uselessly maximize, since f(V) is the largest possible
valuation. However, we would typically like to identify a valuable
subset of bounded and small cost. Here, we are interested in subsets
whose costs are measured by their size. This leads to the optimiza-
tion problem X* E arg maxXngXlS kf (X), where la is the desired
subset size. Solving this problem exactly is NP—complete (Feige,
1998). However, when f is submodular, then the greedy algorithm
has a worst case guarantee of  2 (1 — 1/e)f(Xopt) %
0.63f(X0pt), where Xopt is the optimal and X* is the greedy solution
(Nemhauser et al., 1978).

3.2 Problem definition
In this section, we introduce a framework for module detection on
data fusion graphs, a novel approach to find size-la maximally sig-
nificant modules, Medusa, and propose a Medusa—based top—la mod—
ule detection problem that takes into consideration diverse
semantics in heterogeneous data systems.

We start by defining the concepts needed to guide the module de—
tection procedure and to assess the significance of the modules.

DEFINITION 3: Candidate objects: Given a fusion graph g :
(V,R, T), candidate objects are given by a set I : {i1,i2, . . . , im} of
all the entities that belong to type I E V. Candidates constitute a pool
of objects from which a module is identified.

DEFINITION 4: Pivot objects: Given a fusion graph g = (V,R, T),
pivot objects are given by a subset SO : {s1,s2, . . . ,su}, u < n], of
the entities of type ] E V. Pivots are the objects against which the
significance of the current Medusa module is assessed.

0 Candidate disease gene

   
  

O Pivot disease gene
El Target profile object

IIIDIIIDEI

   
      
   
  
 
 
   
     

’ Gene
Ontology
terms

EIEIEIEI

Chemicals

Pathways

Inf_e_r_e_nce bv Medus_a___ E
El
El

  

.0-

Diseases

 

- Genes
m Diseases

m Chemicals

- Pathways

Gene Ontology terms
'1' Exposure events
- Disease symptoms
m Molecular signatures

Disease
symptoms

 

EIEIEIEIEI

Exposure
events

EIEIEIEIEIEI

 

 

 

 

 

 

 

 

Molecular
signatures

Fig. 2. The CPE regime in Medusa. In the CPE environment, Medusa detects a
relevant module of candidate objects based on a set of pivot objects, which
belong to the same object type as the candidates. For example, given three
disease genes (pivots, black circles), we want to find other potentially relevant
disease genes (candidates, white circles), a task denoted with a black dashed
line. In a special case where the studied objects are genes, as shown here,
and we are interested in size-1 modules, the CPE regime coincides with the
well-known gene prioritization task. The figure shows 15 distinct semantic as-
pects (solid black lines) that exist in the fusion graph in Figure 1 to relate
genes with all other types of objects. For example, one semantic to relate
genes with disease symptoms goes through Gene Ontology terms (‘GO'), ex-
posure events (‘E') and diseases ('D’). Notice that we cannot directly relate
genes to disease symptoms, i.e. at least one other object type is needed to es-
tablish the connection (gray dashed line)

Depending on whether the pivots and the candidates belong to
the same or different type of objects in g, we distinguish two predic—
tion settings. This distinction is important because it will lead to dif—
ferent optimization objectives when detecting modules in
Section 3.4.

TASK 3.1: We aim to find a size-k module Mk : {m1,m2, . . . ,mk} of
the candidates I that display the maximal significance with respect to
the given pivots S0.

Let ] be the object type of the pivots. (i) In the candidate—pivot—
equivalence (CPE) regime, candidates and pivots are of the same
data type, I = ]. (ii) In the candidate—pivot—inequivalence (CPI) re-
gime, candidates and pivots are of different types, I 7E ].

We illustrate the CPE and the CPI regimes with concrete examples
in Figures 2 and 3, respectively. We proceed by formulating a meas—
ure, which we optimize for when detecting Medusa modules.

3.3 Submodularity for detection of Medusa modules
Submodularity is a natural model for detection of size-la maximally
significant modules in multiplex data. In this case, each i E Vsource is

112 /§.IO'S[BU.IHO[p.IOJXO'SOilBIHJOJUIOIQ/ﬁ(1111] U101} popeoIIImoq

9IOZ ‘09 lsnﬁnv uo ::

i94

M.Zitnik and B.Zupan

 

 

Genes Diseases

- Genes II Chemicals Gene Ontology terms - Disease symptoms
m Diseases - Pathways '1' Exposure events Ill MOIeCUIar Signatures

O Candidate gene I Pivot disease El Target profile disease

Fig. 3. The CPI regime in Medusa. In the CPI regime, Medusa detects a rele-
vant module of candidate objects based on a set of pivot objects, which be-
long to a different object type than the candidates. For example, given three
diseases (pivots, black squares), we want to find potentially relevant genes
(candidates, white circles), a task denoted with a dashed line. The figure
shows six distinct semantics (solid lines) that exist in the fusion graph in
Figure 1, which Medusa can choose or combine to identify the relevant mod-
ule. For example, highlighted is an aspect that connects genes with diseases
via chemicals (‘C'), pathways (‘P'), genes (‘G'), Gene Ontology terms (‘GO’)
and exposure events (‘E')

a distinct candidate and Vsource corresponds to a set of all candidate
objects. An important characteristic of a good model for this prob—
lem is that we wish to decrease the ‘value’ of a candidate i E Vsource
based on how much that candidate has in common with candidates
S, that have been chosen in the first r rounds.

The value p(i, S,) of a given candidate i in a background of previ—
ously chosen objects S, Q Vsource further diminishes as the back—
ground grows Vsource 2 S,, t > r. When, for example, both
candidate and pivot objects are genes and a candidate’s value is rep—
resented as the statistical significance of its concentration, it is nat—
ural for the significance to be discounted based on how much
representation of that candidate already exists in a previously
chosen subset. When the module grows, it naturally becomes more
diverse, and hence, its characterization is less distinctive, which re—
sults in the overall reduction of statistical power. This means that
the candidate is pulled into the module when its significance to—
wards the pivot objects is the highest. If the candidate were added to
the module later, its significance could only be smaller. That is, if we
were to observe that candidate after being included into the module,
its significance would fade into insignificance.

This paradigm corresponds to submodularity, which we express
mathematically by functions in Equations (5) and (7) below.

3.4 Detection of size—k maximally significant modules
Next, we describe the Medusa module detection algorithm. Recall
that Medusa is able to operate in two prediction regimes defined in
Section 3.2. We start by describing the algorithm for the CPE regime
and proceed with the algorithm for the CPI regime.

Recall that a particular semantic aspect connecting object types S
and T is realized as matrix CS”T (Definition 2). For notational con—
venience, we here denote a given aspect simply as a matrix C. Prior
to the analysis, matrix C is row—wise normalized by the sum of the
matrix rows, and then multiplied by the number of matrix columns.

3.4.1 Medusa in the CPE regime

We capture the distinct connectivity patterns of the candidates by
evaluating the significance of their connections in matrix C. For a
randomly picked candidate we evaluate the probability that a cer—
tain fraction of the candidate’s strongest connections to the objects
in the columns of matrix C match exactly with the strongest connec—
tions of the pivots.

In the simplest case, we would simply count the connections, and
this notion would correspond to the hypergeometric distribution.
However, since matrix C is a real—valued object inferred by a latent
model, we take into account the estimated strength of connectivity
rather than its mere existence (cf. experiments in Section 5.3). For
this, we need to extend the binomial coefficient to the real line using
the gamma function (Fowler, 1996). Technically, this is imple-
mented in the following definition.

DEFINITION 5: Candidate concentration: Given a semantic C, pivots
S0, and a candidate i, we define the concentration of candidate i as:

I’JCPE(C, SQ,  = Bin 2 cngso, C X
CIEQi

Bin chiawsp—Zgjcngsmcn—c x (4)
I 616 i

1/Bin ZCSTO,5(WSO cl),
1'

where c is the observed strength of connectivity of candidate i,
Bin(n, la) : F(n —l— 1)/(F(le —l— 1)F(n — la —I— 1)), and F(x) is the
gamma function evaluated at x. Here, 5(x) is the indicator function,
5(x) : 1 ifx : 1 and 5(x) : 0 otherwise. Also, X50 returns the rows
oinndexed by set S0. Here, Q,- is a set containing column indices of
i’s strongest connections. The weights in vector w are defined as
W,- = 1 ifi E S0, else W,- = (1 — oc)’ ifi E S,, where r is the iteration
when i was included into the module, and W,- = 0 otherwise. The
value for at, which promotes modules that are tight around the initial
set of pivots S0, and the size of Q,, are user-defined parameters.

We evaluate whether candidate i has greater correspondence
with the pivots than expected under this null hypothesis by calculat—
ing the cumulative probability for the observed or any weaker con—
centration of the connectivity:

PCPEU, 50; Q") g bCPE(Ca 50, Qildc (5)

lQil

where E,- : Cigi 1. A better candidate will have a lower pcpE value.

It can be shown that the use of this cumulative probability to se—
lect a candidate object, which is to be included into the current mod—
ule, leads to a submodular program (the proof is omitted here for
brevity). This appealing property allows us to use the greedy algo—
rithm to find modules of size la that approximate the optimal mod—
ules within a constant factor (Section 3.1.4). Recall that the optimal
modules can only be found using a prohibitively expensive exhaust—
ive enumeration of all size—la modules. Building on these observa—
tions, we propose the algorithm to identify a maximally significant
module of size la, which solves Task 3.1 in the CPE regime:

1. Start with an empty module M0 = 
Compute concentration signiﬁcance (Equation (5 )) for all
candidates.

3. Rank the candidates according to their respective pcpE values.

4. Add the candidate i with the highest rank (i.e. lowest pCpE value)
to the current Medusa module, M, —> M,+1 : M, U {i}, and to
the set of pivot objects, S, —> S,+1 : S, U 

5. Repeat steps 2—4 le—times with the expanded set of pivot objects.

The order in which the candidates are pulled into the module re—
ﬂects their relevance to the pivot objects according to semantic C.
Figure 4 is an example for finding a size—3 gene module based on a

112 /§IO'S{12LIIno [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Jumping across biomedical contexts

i95

 

Chain: -—IEEZI—III—III—-
Iteration 1 Iteration 2 Iteration 3
Disease symptoms Disease symptoms Disease symptoms

 
 
     

   
 
   

    
 

---------------------- ..2.aox10‘3

9.5 8.8 10.0 10.4

8811.3 10.6 11.6
39.1.19.199.112" 994 x 10-3 ||-*
116106 11.3 8.8

8.311.0 10.311.5

...................... --s.1sx1o“
9.5 8.8 10.0 10.4

8811.3 10.6 11.6

8911.6 10.9 11.8

_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ __ ~3
11.610.611.3 8.8 “4"” "' I

9.5 8.8 10.0 10.4
8811.3 10.6 11.6
 238 x 10‘3
11.6106 11.3 8.8

8.3110 10.3 11.5 8311.0 10.3 11.5

 

 

 

-3
"éfi'§.§"1'6?6'16§";::X1°. 9-7 9-8 10-010-9 .. "9-12-51.199.192..1.20m3
...................... .._ x10 
10.2 9.6 8.4 10.5 10.2 9.6 8.4 10.5 10.2 9.6 8.4 10.5
Genes Genes Gene i
Nsource = 7 Nsource = 7 Nsource = 7
Ntarget = 4 Ntarget = 4 Ntarget = 4
50 = [91:92:94] 51 = [9119219495] 52 = [91192194195190]
u=0.5 u=0.5 u=0.5
3-MEDUSA = [95] 3-MEDUSA = [95,90] 3-MEDUSA = [95,90,961

 

 

 

 

 

 

 

 

 

O Candidate disease gene . O Pivot disease genes . Detected disease gene El Target profile symptom

Fig. 4. Inferring a three-maximally significant distant module with Medusa in
the CPE regime. Shown is a toy example of a chain that relates seven genes
in rows to four disease symptoms in columns via GO terms, exposure data
and diseases (see the highlighted chain in Fig.2). Given the three pivot genes
shown as black circles, we would like to identify the most significant size-3
gene module. Notice that we operate in the CPE regime where both pivot and
candidate objects are of the same type (i.e. genes). In the first iteration, candi-
date gs achieves the lowest score (i.e. pCpE = 1.72 x 103) and is thus added
to the module and included into the pivot set. However, the importance of gs
as a pivot object is downweighted according to the or = 0.5. Notice also that
candidate 93 has a predominantly reversed concentration relative to the pivot
genes 91,92, 94 in the first iteration, which results in the poor score of 93 (i.e.
pcpE = 9.94 x 103). In particular, candidate 93 is concentrated on symptoms
do and d2, whereas pivot genes are concentrated on d1 and d3. The score for
93 improves in later iterations when the Medusa module becomes more di-
verse. The final module is M3 = {95, go, 95}.

semantic that relates genes to disease symptoms via GO terms, ex—
posure events and diseases.

3.4.2 Medusa in the CPI regime

So far, we have seen that in the CPE regime, candidates and pivots
are given by the rows of matrix C. However, in the CPI regime this
is not true anymore. Here, pivots correspond to columns of matrix
C, whereas candidates are still given by rows of matrix C. To adjust
for this change, we assess a candidate’s significance by its visibility,
which we define next.

DEFINITION 6: Candidate visibility: Given a semantic C, pivots S0
and a candidate i, we define the visibility of candidate i as:

I’JCPI(C, SO) I   CiSO 1, C) X
i
Bin(ZC, —ZC,-501,C,1 —c)>< (6)
I) i
1/Bin (2 C1,, Q1).

Li

The notation follows that in Equation (4).

Intuitively, the visibility of a candidate is the strength of its con—
nections with the pivots. We evaluate whether candidate i has stron—
ger connections to the pivots than expected under this null
hypothesis by calculating the cumulative probability for observed or
any stronger visibility:

m

19080750) 9 hCPI(Ca Sold6 (7)

Ci

where E,- : Cigi 1 and m is the number of columns in C. A better can—
didate will have a lower pcpl value.

Chain: m
Iteration 1 Iteration 2 Iteration 3
Diseases Diseases Diseases

...................... -- 0_46 x 10‘1
.1.-.Q.-.5§..1.-P..1;9..-§52.. 058x101
.149.1:9.J;9..1:Q..1.'9.. 0.25 x10"
 o_45x1o-1 "'*
 Q48 x 10'1

 o_41 x10:1

.19 .44 .86 .90 .23

 
 
   
  

  
  
 
   
  
   

   

...................... .. 0.52 x10'1
1.0 .56 1.0 1.0 .59 _1
o T61151511515" “2* 1°

1.0.26 1.0 1.0 .37 1
---------------------- -- 0.52x10‘
0 1.0.561.0 1.0 .59 1
---------------------- -- 0.54x10‘
0 .57 .57 .52 .61 .13

.19 .44 .86 .90 .23

...................... -- 0.53x10'1
1.0.5610 1.0 .59 _1
'ifé'i?6"1'.b"iié"i.'6" 072* 1°

 

1.0.26 1.0 1.0 .37 053 104 m.»
'Iié'iéé'Tbuliéuiéu ' x
---------------------- -- 0.55x10‘1

.57 .57 .52 .61 .13 047 104

.19 .44 .86 .90 .23 ' X

 

 

 

 

 

 

Genes Genes Genes
Nsource : 6 Nsource : 6 Nsource : 6
Ntarget : 5 Ntarget : 5 Ntarget : 5
So = [daydzydal S1 =[duyd21dal So = [daydzldal
IS = 0.05 IS = 0.05 IS = 0.05
3-MEDUSA = [92] 3-MEDUSA = [92,95] 3-MEDUSA = [929590]

 

 

 

 

 

 

O Candidate gene I Pivot disease O Detected gene El Target profile disease

Fig. 5. Inferring a three-maximally significant distant module with Medusa in
the CPI regime. Shown is an example of a chain that relates six genes to five
diseases via chemicals, pathways, genes, GO terms and exposure data (see
the highlighted chain in Fig. 3). In this toy example, we are given three pivot
diseases shown in black squares and would like to find a three-maximally sig-
nificant gene module. Notice that we operate in the CPI data regime because
the pivots (i.e. diseases) are of different type than the candidates (i.e. genes).
In the first iteration, gene 92 shows the most significant visibility for the pivot
diseases (i.e. pCP| = 0.25 x 10‘1) and is thus included into the module. Gene
91 does not discriminate between the pivot and non-pivot diseases and is
hence considered an unlikely candidate (i.e. pCP| = 0.68 x 10‘1 in the first iter-
ation and pCPI = 0.72 x 10‘1 in later iterations). In second iteration, the algo-
rithm picks gs, although one might expect that 91 would be selected due to its
distinctive connections to the pivot disease. This is because Medusa detects
modules that are not only highly visible to the pivot objects but are also di-
verse, which is important when trying to identify non-redundant comprehen-
sive modules. Such behavior of Medusa is regulated by parameter 6, which
promotes diverse modules in this example, 6: 0.05. The final module is
M3 :{92195190}

Similarly as for the CPE regime, the use of cumulative probabil—
ity pcpl leads to a submodular optimization program, which has
the same appealing properties as the cumulative probability pen;
in Section 3.4.1. Building on the theory of submodular functions,
we tackle Task 3.1 in the CPI regime by proposing the following
greedy algorithm to identify a maximally significant module of
size la:

1. Start with an empty module M0 = 
Compute visibility signiﬁcance (Equation (7)) for all candidates.
Visibility of candidate i naturally decreases in iteration r accord—
ing to E,- = (1 — 2:21 ﬂtexp(—KL(C,-,Cxt_1)))C,501, where KL
denotes the Kullback—Leibler divergence, Cxt_1 is matrix row of
the candidate selected in iteration t — 1 and ﬂ is a user—deﬁned
parameter promoting diverse modules.

3. Rank the candidates according to their respective pcpl values.

4. Add the candidate i with the highest rank (i.e. lowest pcpl value)
to the current Medusa module, M, —> M,+1 : M, U 

5. Repeat steps 2—4 le—times, bringing in one candidate object at a
time into the growing module.

Figure 5 shows a toy example for finding a size—3 gene module
based on a semantic that relates genes with diseases via chemicals,
pathways, genes, GO terms and exposure events.

3.5 Combining chains carrying different semantics
So far, we have described the Medusa algorithm that operates on
one particular semantic given by a single matrix C. To be able to
combine d different semantics, given by a set of chained matrices
Cm, C(Z), . . . , C(d), we employ the following technique.

In the r—th iteration of Medusa, we independently score the can—
didates according to Equation (5) (in the case of the CPE regime) or

112 /§IO'S{12LIIno [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁ(11111 U101} pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

 

 

 

i96 M.Zitnik and B.Zupan
Table 1. Datasets used for the analyses presented in this article

Matrix Reference Size Matrix Reference Size

R175 Ashburner (2000) 19 828 x 19 951 R576 Davis (2015) 19951 x 565
R173 Davis (2015) 19 828 x 12 614 R178 Subramanian (2005) 19 828 x 326
R174 Davis (2015) 19 828 x 291 R179 Subramanian (2005) 19 828 x 3, 395
sz6 Davis (2015) 9350 x 565 R1710 Subramanian (2005) 19 828 x 186
R277 Zhou (2014) 9350 x 321 RL11 Subramanian (2005) 19 828 x 1, 330
R372 Davis (2015) 12 614 x 9350 EL12 Subramanian (2005) 19 828 x 221
R374 Davis (2015) 12 614 x 291 R1713 Subramanian (2005) 19 828 x 615
R573 Davis (2015) 19 951 x 12 614 01 Chatr—Aryamontri (2014) 19 828 x 19 828

 

 

Equation (7) (in the case of the CPI regime) for all matrices Cm,
C(Z), . . . , C(d). We then combine candidate scores from different se—
mantics into one score per candidate by an affine combination of se—
mantics’ weights.

In the CPE regime, this is done such that the semantics which
rank the pivots higher are assigned larger weights than those in
which the pivots are ranked lower. Intuitively, this means that se—
mantics that are more informative for the given set of pivots contrib—
ute more towards the final candidate score.

In the CPI regime, the combination of semantics is done such
that the semantics in which the pivots have more similar profiles
measured by the KL divergence are assigned larger weights than
those in which the pivots have more heterogeneous data profiles.
Detailed steps are provided within the online implementation of
Medusa.

Once the aggregated candidate scores are calculated, Medusa
uses algorithms from Sections 3.4.1 and 3.4.2 to detect the modules.

4 Experimental setup

4.1 Datasets in the data fusion graph

In our experiments, we consider a collection of datasets shown in
Figure 1. Table 1 lists public sources from which data were obtained
to build 16 data matrices.

GO (Ashburner et al., 2000) annotations were downloaded from
http://geneontology.org in December 2015 containing 481 685
human gene product annotations. UniProt protein accession identi—
fiers were collapsed to human NCBI’s Entrez gene identifiers using
the mapping provided by the HUGO Gene Nomenclature
Committee resource (Gray et al., 2015). Curated human protein—
protein interactions were retrieved from the BioGRID 3.4.131 data—
base (Chatr—Aryamontri et al., 2014). The recourse contained inter—
actions for 19 702 genes. Data on clinical manifestation of diseases
were obtained from the human symptoms—disease network (HSDN;
Zhou et al., 2014; Suppl. data S4) and included 147 978 relation—
ships between symptoms and diseases. Term co—occurrences between
symptoms (MeSH Symptom terms) and diseases (MeSH Disease
terms) were weighted by the TF—IDF values.

We also compiled gene sets from the Molecular Signatures
Database (MSigDB; Subramanian et al., 2005) in December 2015:
326 positional gene sets (MSig—C1) corresponding to each human
chromosome and each cytogenetic bands; 3395 curated gene sets
(MSig—C2) representing expression signatures of genetic and molecu—
lar perturbations; 1330 gene sets (MSig—C2) corresponding to ca—
nonical representations of biological processes from the pathway
databases; 186 gene sets (MSig—C2) derived from the KEGG data—
base; 221 motif gene sets (MSig—C3) with genes sharing microRNA
binding motifs; and 615 gene sets (MSig—C3) with genes sharing

transcription factor binding sites. Curated chemical—gene inter—
actions (R1’3), chemical—pathway interactions (R3’4), gene—pathway
associations (R1’4), chemical—function associations (R5’3 ), chemical—
disease (R32), function—exposure events (R5’6), exposure event—dis—
ease relationships (R2’6) and gene—disease relationships were
retrieved from the Comparative Toxicogenomics Database (CTD;
Davis et al., 2015) in December 2015.

Each dataset was represented with a real—valued data matrix as
indicated in Table 1. Prior to the analysis, all matrices were inde—
pendently column—row normalized according to the second vector
norm.

4.2 Disease modules and gene—disease associations
The corpus of 310 diseases was downloaded from the CTD (Davis
et al., 2015) with the criteria that every disease should have at least
10 and at most 100 curated gene associations for which direct evi—
dence is available in the CTD database. These diseases and their
associated genes constituted our ground—truth information against
which we evaluated disease module detection and gene—disease asso—
ciation prediction. On average, each disease had 28 associated
genes.

To ensure there was no leakage of information from training to
test set in our integrative analysis, we used the following protocol.
From our data system we excluded datasets that directly or indir—
ectly rely on disease—gene associations (dotted lines in Fig. 1). For
example, we skipped the pathway—to—disease dataset (a hypothetical
data matrix RA"2 in Fig. 1) because a particular pathway would only
be linked to a particular disease if there was a disease—associated
gene in this pathway. Another example of an excluded dataset is
the GO term—to—disease dataset (a hypothetical data matrix R5’2 in
Fig. 1). Here, a given term and a given disease would be linked only
if there existed a gene that was both annotated with the term in the
GO and associated with the disease.

This protocol enabled us to construct a data system for perform—
ance evaluation of various methods that was not contaminated by
existing gene—disease associations. For example, dataset R3”2 in
Figure 1 contained curated chemical—disease associations that were
extracted from the published literature by the CTD curators (Davis
et al., 2015). However, this dataset omitted inferred chemical—dis—
ease associations from our training data, which associated chemicals
and diseases through shared gene interactions.

4.3 Performance evaluation

We evaluated prediction accuracy using a disease—centric cross—
validation procedure. (i) Prediction of gene—disease associations was
evaluated as follows. For a particular disease in our corpus of 310
diseases, we conducted a leave—one—gene—out cross—validation to

112 /8IO'S{12LIIno [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁ(11111 U101} pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Jumping across biomedical contexts

i97

 

obtain an estimated score for the left—out gene. The remaining (train-
ing) genes were considered positive instances and were used to select
and fit the model parameters. (ii) Detection of disease modules was
evaluated using the procedure from Ghiassian et al. (2015). For each
disease module, we randomly removed a certain fraction (25%,
50% and 75%) of the disease genes and used the remaining genes as
pivots.

For Medusa, we need to specify the parameters required by col—
lective matrix factorization, the value for 0c, the size of Q (in the case
of the CPE regime) and the value for 6 (in the case of the CPI re—
gime). We tuned 0c, 6 and the size of Q in an internal cross-
validation procedure on the training genes. Factorization ranks for
collective matrix factorization were selected using a procedure simi—
lar to the one described in Zitnik et al. (2015); 13 values were
required, each representing latent dimension of one object type in
our fusion graph. We selected these dimensions through a single par—
ameter p, which specified latent dimension for an object type as a
fraction of the number of objects of that type: lar : pm. The value
p = 0.05 was used in the experiments because it maximized the
mean areas under precision—recall curves (AUPRC) achieved on a set
of 10 diseases from the CTD, which were later not considered for
performance comparison. The selection of parameters for other
approaches was made based on internal cross—validation.

We measured accuracy using the AUPRC and the area under the
receiver operating characteristic curve (AUROC).

5 Results and discussion

5.1 Capturing biological semantics with Medusa
First, our goal was to investigate the effects of different biological se—
mantic aspects on the prediction of gene—disease associations. We
used Medusa to estimate disease genes for 310 diseases included in
the CTD database (Section 4.1). We considered eight distinct seman—
tic aspects denoted as C1—C8 (Fig. 6, left). For example, chain C6
corresponds to a matrix that relates genes to diseases via GO terms
and exposure events (see Definition 2).

Medusa detects significant modules of a specified size la. To
apply it to the prediction of gene—disease associations, we search for

 

 

 

 

 

size—1 modules and use probability estimates returned by the algo—
rithm (Equation (5)) to make predictions.

Figure 6 shows the performance of Medusa in terms of AUROC
and AUPRC. In addition to the eight distinct semantics, we also ana—
lyzed the performance of Medusa in its mode, which combines dif—
ferent semantic aspects, denoted as CA in the figure (Section 3.5).
We further studied how prediction accuracy varies across classes of
diseases, which were identified using Disease Ontology (Kibbe et al.,
2014). A cutoff at level 2 of the Disease Ontology graph revealed 25
disease classes (Fig. 6), such as ‘cognitive disorders’ and ‘gastrointes—
tinal diseases’.

We observed substantial variation of AUROC and AUPRC val-
ues across different semantic aspects (i.e. chains). In terms of the
AUROC, the best single semantic appeared to be C1, which was fol—
lowed closely by C3 and C5. In addition to genes, chemicals were
the common object type considered for construction of these three
chains. These results are important because they demonstrate that
different ways of establishing connections between genes and dis—
eases can result in more or less accurate predictions. The results also
suggest that objects of different types and links carry different se-
mantic meanings, and it might not make sense to mix them without
distinguishing their semantics when associating genes with diseases.
This experiment also alludes to the explanatory value of Medusa.
Medusa is able to provide insights into the utility of different seman-
tics, a capability, which most present models for co—factorization of
multiple matrices do not have.

While a user might explicitly specify a semantic that he would
like to consider in a concrete application, Medusa can also make
predictions that are consistent with multiple chains. In particular,
combining semantics C1—C8 in Figure 6 yielded the most accurate
predictions overall. However, prediction accuracy in Figure 6 varies
greatly by disease and we explore this issue next.

5.2 Detecting disease modules with Medusa

We analyzed the extent to which Medusa could recover the full dis—
ease module if we removed a certain fraction of disease associated
genes. Recall that a disease module is given by the set of genes asso—
ciated with that disease in the CTD (Davis et al., 2015). For a given
disease, Medusa used 5 0% of the disease genes as pivots and

 

 

 

 

I—I—I . l'l‘l
I - _ i . . », a A V -
C1 _ Reproductive system disease ‘I ' av . . o - . o _.. a ‘J ‘ — o , 5"0‘ — t o Nervous system disease
Musculoskeletal system disease Lu 0 Urinary system disease
CZ  _ Monogenic disease I "._, .r«« I . I I ~ n, ‘_.. ‘ _ ‘ ‘1 L 5' ..I o \ Y _.3 0 Unknown
Cognitive disorder ' ‘ ' T I I I j - ( I I I ‘ ' o Endocrine system disease
Substance-related disorder my V‘I—I—I r _ _ ‘ ‘ V I—I—I » \ ‘ Inherited metabolic disorder
Gastrointestinal system disease I—'—' I—'—' Respiratory system disease
C4 Parasitic infectious disease I , I I I _..l Cardiovascular system disease
0 Psoriatic arthritis kl". I I - ‘ 5 i Acquired metabolic disease
0 Orofacral cleft w l—I—I . I ' A ‘lv—l—I _ Immune system disease
— Sleep disorder I— 0.‘ 1.- “ 0 v y _ _..0_~./ A ir’ 0; 0 Developmental disorder of mental health
C5 [in n g t - - . . . 9 a-.- . V I
Congenital nervous system abnormality I_I_I I_I_I Benign neoplasm
I o v 1. o , . \ .. gs  7 ,
I_I_l I_I_l
C? - cup-a   r~   _ _ :'—'—'- . r  
C8 —-— ‘ ‘ " ‘ ' ' "' ' ‘ '
_ l_. -1“ ( _ 9—~ ‘\ A817 _'
I—I—I I—I—l
' ' l ' ' I I
CA Allchains — «3.-.. . — . o , r .. - .
I_I_l I_I_I
I I I I I I I l l l l I
00 02 0.4 06 08 10 00 02 0.4 06 08 10
AUROC AUPRC

Fig.6. Gene-disease association prediction with Medusa. Nine different biological semantics (C1—C8, CA) were considered in the analysis. Each semantic is
shown as a sequence of object types contained in the fusion graph (Fig. 1). For example, in the ‘C4’ semantic, Medusa estimated gene-disease associations
based on the latent chain that related genes (‘G') with disease symptoms (‘DS’) via Gene Ontology terms ('GO’), chemicals ('C'), diseases (‘D') and disease
symptoms (‘DS’). For each distinct biological semantic we report the AUROC and AU PRC values aggregated over 310 complex diseases. For visualization pur-
poses, diseases were partitioned into 25 disease classes based on Disease Ontology (Kibbe et al., 2014), such as ‘reproductive system diseases' and ‘muscu-
loskeletal system diseases’, and the points representing accuracy scores of each individual disease are colored according to corresponding disease classes.
Notice the substantial variation of performance across different semantics. Generally, Medusa achieved the highest accuracy when combining semantics

from C1—C8 (i.e. CA, last row).

112 /8IO'S{12LIIno [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

i98

M.Zitnik and B.Zupan

 

detected a size—la module, where la was set to the size of the full dis—
ease module. Notice that Medusa pulls in one gene at a time into the
growing module and given the inferred latent model, the running
time of the module detection increases linearly with the desired
module size la. Figure 7 shows the fraction of held—out disease genes
(recall) that were found in Medusa modules. Higher values indicate
better performance.

We found that the highest rate of true positives was achieved in
the early iterations of the Medusa algorithm, i.e. when the number
of executed iterations was less than the size of the full module. This
is an important observation because it indicates that the highest
ranked genes are most likely to be part of the disease module.

The results in Figure 7 further show that the estimated recovery
rates varied across different semantic aspects as can be seen by com—
paring rows in the heat map. Typically, the best performance was
observed when Medusa was used to detect modules based on joint
analysis of all semantics (see CA in Fig. 7).

It is interesting to examine which classes of diseases display
higher recovery rates than others and how the rates compare to
each other. The dendrogram in Figure 7 shows that ‘monogenic
diseases’ exhibited a distinct recovery pattern. For example, mod—
ules corresponding to monogenic disorders according to Disease
Ontology (Kibbe et al., 2014) were best recovered using the chain
C7, whereas other disease classes (with the exception of cognitive
disorders) were best detected when Medusa was used in the CA set—
ting. We also observed that related disease classes displayed similar
patterns of recovery rates across different semantics. For example,
immune system diseases and viral infectious diseases are placed
closely together in the dendrogram, as well as acquired metabolic
diseases and diseases of the gastrointestinal system. It is known

0.4

 

0.3

— 0.2

 

 

Average recall

—0.1

 

 

macaw

CA-IIIIIIIIIIIIIIIIIIIIIIIII
01- II IIIII I II II I

C2 —-

I
C3-I I I II I II

C4-
cs—l
C6—
07-.
C8—
IIIIIIIIIIIIIIIIIIIIIIIII
whwtwwwcoowmoowghm.g>..cI—L<DL
888288838888888w88EE68888
O‘-wowwwoomwwoowﬂcmcmwhhm‘
o _ C m E 00 o
.2 m .2 (v .2 .2 .2 x .2 .2 .2 .2 .2 .2 .2 Q- 0 .2 t ._ 5 (I) m .2 w
‘cza‘c-a‘c'O‘OSUU‘c-O‘c'c‘cg 'cmoﬁzaza'cza
2655ng 6563656: 99522651:
Egogwom 0300300300): ogmmamog
gt‘ﬁio‘ﬁiz‘ﬁ' 555933739 a:h E99735:
oc>s >so>s >.>.>s9>.>.>sc ogEme>E
o 11: 113cm LbbE——E.m c a); 030',
O: c": t“ a“ '- >-a.)E >
E '— 3—0 SW‘UUE’ESO o w-c :0
5 SE OCEm“—E} :- wL'C 0:
0 55a: “Cw-=83: '5 :02 :53
‘c E Z (EDEza—uwg m 0.2': '03
= - 6 av-sew 5 avg 9:
“J -- 019239 o. 02$: D-w
'E w<uom CH— (D
m E 80> _= n:
o _ 3 (ﬁll)
(92 EE
$0.
532
:(D
o>
08

Disease class

Fig. 7. Disease module detection with Medusa. We considered nine different
semantic meanings (C1—C8, CA; rows in the heat map) listed in Figure 6.
Reported is the recovery rate when 50% of genes from known disease mod-
ules were left out. The recall values were calculated for 310 diseases in our
corpus and then average aggregated into 25 groups based on a categoriza-
tion of diseases in the Disease Ontology (Kibbe et al., 2014; columns in the
heat map). The dendrogram reveals that recovery rates of disease modules
from related disease classes are similar.

that diseases from similar disease classes are more likely to be asso—
ciated with sets of genes that overlap (Barabasi et al., 2011). The
similar recall patterns from related disease classes thus suggest that
the Medusa outcome is robust with respect to variations in the set
of pivot genes.

5.3 Comparing Medusa with existing methods
So far we have studied the utility of Medusa to take into consider—
ation distinct semantics that exist in heterogeneous biological data
when predicting gene—disease associations and detecting disease
modules. We proceed by examining how Medusa performs relative
to several other approaches for mining gene—disease associations.
First, we compare Medusa with meta—path based approaches
(Section 2). These approaches have just recently been tested on pre—
diction problems in biology for the first time (Himmelstein and
Baranzini, 2015) and have shown promising performance for priori-
tizing genetic associations from genome—wide association studies.
Meta—paths (Sun et al., 2011b) are sequences of object types. They
are used to represent complex relationships between objects beyond
what links in a homogeneous network capture. For example, given a
meta—path that corresponds to the chain C6: Genes —> GO terms —>
Exposure events —> Diseases (Fig. 6, left), a meta—path—based ap—
proach in its simplest form relates a particular candidate gene with a
particular pivot disease by counting the number of paths in a hetero—
geneous network between a candidate and pivot node. These counts
then serve to derive features. Each feature represents one meta—path
originating in a given candidate gene and terminating in a given
pivot disease and quantifies the prevalence of that meta—path be—
tween any gene—disease pair. To describe different aspects of con—
nectivity, we computed eight features based on chains C1—C8 (Fig.
6, left) and then used a rank—correlation metric or a sophisticated
PathSim meta—path—based metric (Sun et al., 2011b; Wan et al.,
2015) to score gene—disease associations. The results in Table 2
show that Medusa compares favorably to both meta—path models in
terms of AUROC and AUPRC values. It is important to understand
the subtlety: Medusa relates candidate genes to diseases by deriving
new connections between them based on matrices estimated by a
collective latent factor model. This highlights Medusa’s advantage
of taking into consideration projections of data into the latent space,
which potentially give more informative connections than the rather
crude meta—path count metrics. Furthermore, Medusa’s technique to
estimate associations considers the significance of derived

Table 2. Cross-validated performance for predicting gene—disease
associations using a heterogeneous data system shown in
Figure1.

 

Approach AUPRC AUROC

 

Data model Prediction

model

 

Meta—path model Correlation 0.339 : 0.17 0.599 : 0.07
Meta—path model PathSim 0.587 :0.18 0.754 :0.13
Heterogeneous network Random walk 0.566 i0.14 0.772 :0.11
Collective latent model Correlation 0.483 :0.23 0.605 :0.09
Collective latent model Random walk 0.535 :0.17 0.762 :0.16

Medusa’I 0.617 i021 0.831 :0.14

 

Higher values indicate better performance. Reported are averaged values
over 310 diseases and the maximum of the upper/lower quartile distances.

"‘The analysis combined eight distinct biological semantics (C1—C8) shown
in Figure 6.

112 /8IO'S{12LIIno [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Jumping across biomedical contexts

i99

 

connections under a particular null hypothesis, whereas alternative
methods rely on similarity scoring.

Second, we applied a random walk algorithm (Li and Patra, 2010)
to the heterogeneous network whose schema is shown in Figure 1. It
is known that random walk approaches are often the best performing
methods for associating genes with diseases (Navlakha and
Kingsford, 2010). We found that the random walk approach has per—
formance comparable to the meta—path—based approach that used the
PathSim metric (Table 2). However, in the majority of the diseases,
Medusa achieved higher cross—validated accuracy.

Finally, we also considered two simplified variants of Medusa
(Table 2, third block). To measure the effect of Medusa’s submodular
optimization program, we ran Medusa against variations, which asso—
ciated genes to diseases based on: (i) the rank—correlation between
candidate gene profile and disease gene profiles in a materialized
chained matrix or (ii) the gene—disease score returned by the random
walk approach. Medusa offered an overall improvement of 37% over
the correlation—based variant and a 10% improvement over the ran—
dom walk approach as measured by the AUROC. The results suggest
that both key ingredients of Medusa, the collective latent model and
the submodular program, are important for its good performance.

6 Conclusion

We here presented a novel and practical approach to infer connec—
tions between objects that are either close to each other or far away
from each other in heterogeneous biological data domains. We
introduced Medusa, a module detection algorithm that, given a set
of pivot objects, finds a size—la module of candidate objects that are
jointly relevant to the pivots. Importantly, this module achieves sig—
nificance that is provably close to the maximum significance that
could be achieved by any size—la set of the candidates. Our experi—
ments reveal the versatility of Medusa to accurately detect disease
modules and predict gene—disease associations by either ﬂexibly
choosing or combining different semantic meanings. The distinct
property of Medusa to distinguish diverse semantics enabled
Medusa to compare favorably against several alternative methods.
These findings put Medusa on the path towards a biomedical data
fusion search engine.

Funding

This work was supported by the ARRS (P2-0209, J2-5480) and the NIH
(P01-HD39691).

Conﬂict of interest: none declared.

References

Ashburner,M. et al. (2000) Gene Ontology: tool for the uniﬁcation of biology.
Nat. Genet., 25, 25—29.

Barabasi,A.L. et al. (2011) Network medicine: a network-based approach to
human disease. Nat. Rev. Genet, 12, 5 6—68.

Chatr-Aryamontri,A. et al. (2014) The BioGRID interaction database: 2015
update. Nuc. Ac. Res, 43, D470— D478.

Davis,A.P. et al. (2015) The Comparative Toxicogenomics Database’s 10th
year anniversary: update 2015. Nuc. Ac. Res, 43, D914—D920.

Davis,D.A. and Chawla,N.V. (2011) Exploring and exploiting disease interactions
from multi-relational gene and phenotype networks. PLoS One, 6, e22670.

Edmonds,]. (1970) Submodular functions, matroids, and certain polyhedra.
Comb. Struc. Applic., 69—87.

Feige,U. (1998) A threshold of 1n n for approximating set cover. ]. ACM, 45,
634—652.

Fowler,D. (1996) The binomial coefﬁcient function. Am. Math. Mon., 103,
1—17.

Fujishige,S. (2005 ). Submodular Functions and Optimization. Vol. 58. The
Netherlands: Elsevier.

Ghiassian,S.D. et al. (2015) A DIseAse MOdule Detection (DIAMOnD) al-
gorithm derived from a systematic analysis of connectivity patterns of dis-
ease proteins in the human interactome. PLoS Comput. Biol., 11,
e1004120.

GonqalvesJP et al. (2012) Interactogeneous: Disease gene prioritization using
heterogeneous networks and full topology scores. PLoS One, 7, e49634.

Gray,K.A. et al. (2015) Genenames.org: the HGNC resources in 2015. Nuc.
Ac. Res, 43, D1079—D1085.

Greene,C.S. et al. (2015) Understanding multicellular function and disease
with human tissue-speciﬁc networks. Nature Genetics, 47, 5 69—5 76.

Han,S. et al. (2013) Integrating GWASs and human protein interaction net-
works identiﬁes a gene subnetwork underlying alcohol dependence. Am. ].
Hum. Genet., 93, 1027—1034.

Himmelstein,D.S. and Baranzini,S.E. (2015) Heterogeneous network edge pre-
diction: A data integration approach to prioritize disease-associated genes.
PLoS Comput. Biol., 11, e1004259.

Kibbe,W.A. et al. (2014) Disease Ontology 2015 update: an expanded and
updated database of human diseases for linking biomedical knowledge
through disease data. Nuc. Ac. Res, 43, D1071- D1078.

KOhler,S. et al. (2008) Walking the interactome for prioritization of candidate
disease genes. Am. ]. Hum. Genet., 82, 949—958.

Krause,A. and Guestrin,C. (2011) Submodularity and its applications in opti-
mized information gathering. ACM Tran. Int. Sys. Tech., 2, 32.

Lee,I. et al. (2004) A probabilistic functional network of yeast genes. Science,
306, 1555—1558.

Li,Y. and Patra,].C. (2010) Genome-Wide inferring gene—phenotype relation-
ship by walking on the heterogeneous network. Bioinformatics, 26,
1219—1224.

Moreau,Y. and Tranchevent,L.C. (2012) Computational tools for prioritizing
candidate genes: boosting disease gene discovery. Nat. Rev. Genet., 13,
523—536.

Natarajan,N. and Dhillon,I.S. (2014) Inductive matrix completion for predict-
ing gene—disease associations. B ioinformatics, 30, i60—i6 8.

Navlakha,S. and Kingsford,C. (2010) The power of protein interaction net-
works for associating genes with diseases. Bioinformatics, 26,
105 7—1063.

Nemhauser,G.L. et al. (1978) An analysis of approximations for maximizing
submodular set functions—I. Math. Program., 14, 265—294.

Ritchie,M.D. et al. (2015) Methods of integrating data to uncover genotype-
phenotype interactions. Nat. Rev. Genet., 16, 85—97.

Ruffalo,M. et al. (2015) Network-based integration of disparate omic data to
identify ‘silent players’ in cancer. PLoS Comput. B iol., 11.

Subramanian,A. et al. (2005) Gene set enrichment analysis: a knowledge-
based approach for interpreting genome-Wide expression proﬁles. Pnas,
102, 15545—15550.

Sun,Y. et al. (2011a). Co-author relationship prediction in heterogeneous bib-
liographic networks. In: Advances in Social Networks Analysis and Mining
(ASONAM), 2011 International Conference, IEEE, Kaohsiung, Taiwan,
pp. 121—128.

Sun,Y. et al. (201 1b). Pathsim: Meta path-based top-k similarity search in het-
erogeneous information networks. In: The 37th International Conference
on Very Large Data Bases, VLDB Endowment, Seattle, Washington, USA.

Sun,Y. et al. (2012). Integrating meta-path selection with user-guided object
clustering in heterogeneous information networks. In: ACM Transactions
on Knowledge Discovery from Data, New York, NY, USA, ACM
pp. 1348—1356.

Tasan,M. et al. (2015) Selecting causal genes from genome-Wide association
studies Via functionally coherent subnetworks. Nat. Meth., 12, 154—159.

Vanunu,O. et al. (2010) Associating genes and protein complexes with disease
Via network propagation. PLoS Comput. Biol., 6, e1000641.

Wan,C. et al. (2015). Classiﬁcation with active learning and meta-paths in het-
erogeneous information networks. In: CIKM ’15 Proceedings of the 24th
ACM International on Conference on Information and Knowledge
Management, p. 443—452.

112 /8IO'S{12LIIno [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

i100

M.Zitnik and B.Zupan

 

Wang,P.I. et al. (2012) RIDDLE: reﬂective diffusion and local extension reveal
functional associations for unannotated gene sets Via proximity in a gene
network. Gen. Biol., 13, R125.

Warde-Farley,D. et al. (2010) The GeneMANIA prediction server: biological
network integration for gene prioritization and predicting gene function.
Nuc. Ac. Res, 38, W214—W220.

Zhou,X. et al. (2014) Human symptoms—disease network. Nat. Commun.,
5,4212.

Zitnik,M. et al. (2013) Discovering disease-disease associations by fusing
systems-level molecular data. Sci. Rep., 3, 3202.

Zitnik,M. et al. (2015) Gene prioritization by compressive data fusion and
chaining. PLoS Comput. Biol., 11, e1004552.

Zitnik,M. and Zupan,B. (2015) Data fusion by matrix factorization. IEEE
Tpami, 37, 41—53.

Zitnik,M. and Zupan,B. (2016). Collective pairwise classiﬁcation for multi-way
analysis of disease and drug daata. In Pac. Symp. Biocomput., 21, 81—92.

112 /8IO'S{12LIIno [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

