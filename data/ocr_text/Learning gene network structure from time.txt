ORIGINAL PAPER

Vol. 29 no. 12 2013, pages 1534—1540
doi:10. 1093/bioinformatics/btt179

 

Systems biology

Advance Access publication April 17, 2013

Learning gene network structure from time laps cell imaging in

RNAi Knock downs

Henrik Failmezgerl’l, Paurush Praveen2’l, Achim Tresch1 and Holger Frohlich2’*

1Computational Biology and Regulatory Networks, Max—Planck Institute for Plant Breeding Research, Carl—von—Linne—
Weg 10, 50829 Cologne, Germany and 2Algorithmic Bioinformatics, Bonn—Aachen International Center for IT, Rheinische
Friedrich—WIIhelms—Universitat Bonn, Dahlmannstr. 2, 53113 Bonn, Germany

Associate Editor: Ivo Hofacker

 

ABSTRACT

Motivation: As RNA interference is becoming a standard method for
targeted gene perturbation, computational approaches to reverse en-
gineer parts of biological networks based on measurable effects of
RNAi become increasingly relevant. The vast majority of these meth-
ods use gene expression data, but little attention has been paid so far
to other data types.

Results: Here we present a method, which can infer gene networks
from high-dimensional phenotypic perturbation effects on single cells
recorded by time-lapse microscopy. We use data from the Mitocheck
project to extract multiple shape, intensity and texture features at each
frame. Features from different cells and movies are then aligned along
the cell cycle time. Subsequently we use Dynamic Nested Effects
Models (dynoNEMs) to estimate parts of the network structure be-
tween perturbed genes via a Markov Chain Monte Carlo approach.
Our simulation results indicate a high reconstruction quality of this
method. A reconstruction based on 22 gene knock downs yielded a
network, where all edges could be explained via the biological
literature.

Availability: The implementation of dynoNEMs is part of the
Bioconductor R-package nem.

Contact: frohlich@bit.uni-bonn.de

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on December 7, 2012; revised on April 8, 2013; accepted on
April 14, 2013

1 INTRODUCTION

The availability of large RNAi screens (Fire et al., 1998) has
raised the interest in computational approaches for reverse en-
gineering parts of biological networks from measurable effects of
targeted gene perturbations. Examples thereof range from graph
theoretical algorithms (Klamt et al., 2010; Rung et al., 2002;
Tresch et al., 2007; Wagner, 2001) over Bayesian Networks
(Maathuis et al., 2009, 2010; Pe’er et al., 2001; Sachs et al.,
2005) to factor graphs (Gat-Viks et al., 2006), epistasis analysis
(Driessche et al., 2005; Kanabar et al., 2009) and ordinary dif-
ferential equation systems (Nelander et al., 2008). Most of these
methods make use of gene expression data. The few attempts to

 

*To whom correspondence should be addressed.
TThe authors wish it to be known that, in their opinion, the ﬁrst two
authors should be regarded as joint First Authors.

reverse engineer gene networks from phenotypic data include
studies by Bakal et a]. (2007), who rely on hierarchical clustering
of static images, and Kaderali et a]. (2009), who use a probabil-
istic graphical model for only one binary phenotypic variable in
static images. To our knowledge, there is yet no method for the
inference of networks from time-lapse microscopy based on large
numbers of statistical image features.

Nested Effects Models (NEMs) are a class of probabilistic
graphical models that have been introduced originally by
Markowetz et a]. (2005) and extended substantially later on by
Anchang et a]. (2009); Frohlich et al. (2007, 2008, 2011);
Markowetz et a]. (2007); Niederberger et a]. (2012); Tresch and
Markowetz (2008); Vaske et a]. (2009); Zeller et a]. (2009). In
NEMs, indirect high-dimensional downstream effects of multiple
single-gene knock downs are studied. NEMs allow for inferring
the signaling flow between these perturbed genes on a transcrip-
tional as well as non-transcriptional level based on the measured
intervention effects. Anchang et a]. (2009) and Frohlich et a].
(2011) extended the theory of NEMs to time-series data, and
applied it to infer parts of a transcriptional network involved
in murine stem cell development. Originally, NEMs assumed
downstream effects to be measured via gene expression profiling,
but here we use phenotypic image features from movies instead.
Our movies were taken from the Mitocheck database (Neumann
et al., 2010), in which about 20 000 human genes were silenced
via RNAi and subsequently screened for cell cycle defects. We
use Dynamic NEMs (Frohlich et al., 2011) to estimate the net-
work between perturbed genes based on the dynamic response of
the phenotype along the cell cycle. The inference is based on a
Markov Chain Monte Carlo (MCMC) algorithm, which is intro-
duced in this article.

2 METHODS

2.1 Movie preprocessing and feature extraction

The time-lapse movies were downloaded from the Mitocheck database
(Neumann et al., 2010). In this database, about 20 000 human genes were
knocked down and screened for cell cycle defects via time-lapse micros-
copy. The nuclei of HeLa cells were ﬂuorescently labeled by tagging the
core histone 2B with GFP. Images of these cells were taken in 30 min
intervals for 48 h. Movie processing was based on the following main
steps: (i) cell nuclei detection in the individual frames of the movies; (ii)
tracking of the nuclei over time; (iii) calculation of morphological fea-
tures; and (iv) calculation of cell cycle time. Please note that in each
movie, many cells were affected by a common gene perturbation. These

 

1534 © The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com

112 /810's113umo [p.IOJXO'SOllBIIIJOJUlOTQ/ﬁdllq 11101; popeoIII/noq

9IOZ ‘091sn3nv uo ::

Learning gene network structure

 

cells were tracked over time, and for every cell and every time point, a
feature vector was calculated.

The OpenSource software CellProﬁler (Kamentsky et al., 2011) was
used for all of these steps. Cells nuclei were detected by Otsu thresholding
(Otsu, 1979), followed by the watershed algorithm to separate clustered
nuclei (Malpica et al., 1997). As we realized that the watershed algorithm
often oversegmented nuclei, we implemented a segmentation correction
scheme in CellProﬁler based on Chen et a]. (2006). Standard CellProﬁler
features were used for morphological description of the nuclei. Thirteen
shape features were calculated including area, perimeter and eccentricity
of the cell nuclei. Sixteen features characterized the pixel intensities for the
nuclei, e.g. mean intensity and standard deviation of intensities. The 14
texture features were calculated from the co-occurrence matrix of pixel
intensities. Furthermore, 12 radial distribution features were added.
These features measure the pixel intensities from the nucleus center to
the boundaries using four bins. Finally, 30 Zernike moments were
included into the feature pool (Boland et al., 1998).

As the cells did not move fast between frames, the standard
CellProﬁler nearest neighbor tracker delivered good results. For each
cell, the time point of cell division was taken from the tracking procedure.
Later analysis steps require the conversion of the absolute time at which a
cell was recorded into a relative time (called cell cycle time) within an
idealized cell cycle. For every movie, we ﬁrst estimated the mean cell cycle
time T as the quotient of the length of all trajectories (in minutes), divided
by the total number of division events that have been observed in the
movie. For cells that were observed at time t between two division events
at times 11 <12, we deﬁne the (relative) cell cycle time r as the quotient
r = (t — 11) / (t2 — t1). For cells that were observed before the ﬁrst division
event of their trajectory, the cell cycle time is deﬁned as
r = 1 — t/max(tl, T) with 11 being the time of the ﬁrst division event.
Analogously, if cells in a trajectory of length ta, were observed after the
last cell division, we deﬁne r = (t — tn)/max(tw — In, T) with In being the
time of the last division event. Cells that never divided during the obser-
vation period were assigned the relative cell cycle time r = t/tw.

2.2 Estimation of perturbation effects

For this paragraph, consider one ﬁxed image feature. We need to quan-
tify the extent to which a perturbation confers a phenotype (as measured
by that feature) that differs in the observed cell population compared with
the wild-type cell population. Such a comparison was done in awareness
of the physiological phenotypic changes occurring in wild-type cells
during the cell cycle. We therefore split the cell cycle time into 10 equally
sized intervals and computed for each trajectory and each feature the
median value per interval. Please recall at this point that there is one
trajectory per individual cell. We typically obtained more than 50
median feature values (corresponding to 50 cells) per interval from one
movie. Manual inspection of the data revealed that we could not assume
feature values to follow any known parametric distribution. Thus treated
and control conditions were compared via a Mann—Whitney U—test.

We then ﬁtted the distribution of P-values obtained for all 85 features
at a given time step via a Beta-uniform mixture (BUM) model, as
described in Frohlich et a]. (2008). The idea is that the distribution of
P-values can be decomposed into a uniform part (the null distribution)
and a second part (the alternative distribution), which itself can be mod-
eled via two Beta distributions (Fig. 1). It has to be mentioned here that at
each time point, the number of compared cells is different. Therefore, the
null distribution of P-values (the uniform part of the BUM model) also
differs between time points. However, we are here only interested in the
alternative distribution (describing the likelihood of an effect).

After having learned the BUM model, each P-value can be
converted into a probability of being generated by the null respectively
the alternative distribution. Thus, for each perturbation, feature and
interval, we calculate the probability of being phenotypically different
from the wild-type.

Histogram

15
I

Density

 

 

 

 

| l l
0.0 0.2 0.4 0.6 0.8 1.0

p—value

Fig. 1. Empirically observed histogram of P-values for 85 image features
in one of our movies (CDK2 knock down at time step 10). Black 2 ﬁtted
BUM model; red 2 estimated alternative distribution indicating the prob-
ability of being phenotypically different from the wild-type

2.3 Dynamic NEMs

NEMs distinguish between silenced/perturbed entities (genes or proteins,
which cannot be observed directly), called S-genes (S), and other entities
(here, phenotypic image features) describing measurable downstream ef-
fects (5). The idea of NEMs is to separate the upstream signaling pathway
(the graph connecting the S-genes, (ID) from the downstream effects (the
graph connecting S-genes to effect features, 8). Consequently, the edge set
of an NEM is partitioned into a directed edge set connecting S-genes (<13),
and another one (8) describing the connections between the S-genes and
effect features. It is assumed that each 6 e 5 is attached to at most one
S e 8 only. Knocking down a speciﬁc S-gene k e S interrupts the signal
ﬂow in the downstream pathway, and hence an effect on feature 6 attached
to k or one of the S-genes depending on k is expected. Perturbing each
S-gene once will thus result in a nested subset structure of effects, which can
be used to reverse engineer the upstream signal ﬂow graph.

Dynamic NEMs (dynoNEMs, Frohlich et al., 2011) extend this idea
further by assuming that each interaction between S-genes requires a
certain amount of time, which yields to a time-delayed response of down-
stream effects (Fig. 2a). A positive time lag between nodes k and S de-
scribes the number of time steps, after which a knockdown of node k
results in an observed effect for features attached to node 5. We do not
make any assumptions about the physical time it takes a signal at node
k to produce an effect for feature 6.

Formally a dynoNEM model is represented by the adjacency matrix 111
of an edge-weighted graph between S-genes (111,;C e {0, . . . , T} for all s, k)
and the adjacency matrix 8 of the feature-attachment graph. That
means 85,- = 1, if feature 1' (i = 1,...,€) is attached to S-gene S, and
0 otherwise. Furthermore, by convention, let 1111,], = 1. Let
D ={D,-j(t)|t=1,...,T,i=1,...,£,j=1,...,n} denote the complete
array of P-values for T time points, 6 = 85 features and n perturbations.
The likelihood of a dynoNEM model can be computed in closed form
(Frohlich et al., 2011):

T
P(D|‘1’)= H 2 Hl‘lmDiaw, e..- = 1)Pr<®..- = 1) <1)

1'65 568 keS [:1
The attachment positions 8 are integrated out because they are treated
as nuisance parameters. The prior Pr(®s,- = 1) is taken to be uniform over
all S-genes in the absence of further information. To compute
p(D,-j(t)|\IJ, 85,- = 1), we can unroll 111 over time, similar to a Dynamic

 

1535

112 /810's113umo [p.IOJXO'SOllBIIIJOJUlOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘091sn3nv uo ::

H.Failmezger et aI.

 

 

III 53

III-III. S.
.- Sz =1

III 53

III-III. S.
III-- 52 t=2

III 33

(b)
51(1) Elm 51(2) Elm 51(3) 51(3)

IV

   

53(1) E6”)

t=1 t=2 t=3

 

Fig. 2. (a) A dynamic NEM is parameterized by a directed edge-
weighted graph between S-genes encoded (11!) together with a dir-
ected graph (8) attaching each feature to an S-gene. According to the
graph structure, perturbation effects on observable features (dark)
are predicted in dependency on the time point of observation. A
perturbation of S-gene S1 affects S2 and S3 already after one time
step, but a knock down of S2 yields an effect on S3 after two time
steps. Hence, an effect on the features attached to S3 (E6,E7,Eg) is
predicted after one time step, if S1 and after two time steps, if S2
is silenced. 0)) Unrolling of the signal ﬂow network along time
(t=time index). For the sake of better visualization, only one feature
per S-gene is shown

Bayesian Network (Fig. 2b). More precisely, p(D,-j(t)|\IJ, 85,- = 1) can be
decomposed as

p(Dik(t)|qJ9 ®Si =  =
5(l)€{0, 1} 

(ma-x0150) = so), (9..- = 1) Prom = s<t)lpa<s)<r»)

where S(t) denotes a random variable for the unobservable perturbation
state of S-gene S at time 1. Its value is given by S(t). Let pas(t) denote the
set of parent nodes of S at time t. Then, according to the unrolling of the
signal ﬂow over time, we write:

1 EIreR:r=1

Prose) = OIPaSU) = R) = {0 otherwise (3)

The deﬁnition means that S is perturbed at time t if any of its parents
(including S itself) are perturbed. Lastly, we deﬁne the local likelihoods

p(D,k(t)|S(t) = S(t), 85,- = 1). Using the BUM model, this quantity can be
decomposed as:

mature..- = 1, so) = so» = {f1(D1"‘(’» :8 ; (1, (4)
The density function f1 quantiﬁes the impact on feature 1' under the
alternative hypothesis of expecting an effect and can be extracted from
the BUM model. We refer the reader to Fréhlich et a]. (2008) for details.
To account for possibly irrelevant features, we used a trick described
earlier in Tresch and Markowetz (2008): a dummy S-gene ‘null’ was
added to the signaling graph 111, which was always unconnected to all
other S-genes, i.e. not predicting any downstream effects. Features as-
signed to ‘null’ are hence irrelevant and do not show signiﬁcant effects in
any of the perturbation experiments.

2.4 Markov Chain Monte Carlo

In this article, we propose to learn the network structure (111) via a
Metropolis—Hastings algorithm. For this purpose, we deﬁne three pos-
sible MCMC moves within the space of edge-weighted graphs:

(1) edge weight increase
(2) edge weight decrease

(3) swap of the weight between edges 1' —> j and j —> i.

The ﬁrst move is only allowed if the edge weight is smaller than T — 1,
the third only if 111,-]- 75 \IJJ-i. Each of the allowed steps is chosen with equal
probability.

To enforce sparse network structures and to prevent unlikely large
time lags, we adopt the structure prior proposed in Fréhlich et a]. (2007).

pm) = Hﬁexp <—  <5)

.. l)
1,}

which is essentially a product of independent Laplacian distributions with
means 111,-}. Please note that setting 111,]- = 0 corresponds to enforcing
sparsity, while any other choice allows for incorporating prior knowledge
(Fréhlich et al., 2009, 2011). The scale parameter 1) trades the degree of
sparsity against the likelihood of the model. A large 1) reduces the inﬂu-
ence of the prior, whereas a smaller 1) increases it. In a Bayesian manner
we deﬁne an exponential distribution prior over 1) itself,

v ~ Expw) (6)

(here: 6 = 1) and include 1) into the sampling process of the MCMC.
More precisely, logv is modiﬁed every 100th iteration via a Gaussian
transition kernel.

In summary, an MCMC move is accepted with probability

. p( DI 111116141) popnew I vneW) p(vneW) N(qjold)
a = n 1 ,
p(D|wold)p(1poldlvoid)p(vold)N(1ynew)

 

(7)

where N(-) denotes the number of networks reachable within one MCMC
move from the current graph.
To speed up convergence, we initialized each MCMC run with the
solution of the greedy hill climber described in (Fréhlich et al., 2011).
Our whole approach, which consists of image feature extraction, esti-
mation of perturbation effects and network estimation via dynoNEMs is
called MovieNEM in the following (Fig. 3).

3 RESULTS
3.1 Simulations

3.1.] Network sampling To assess the reconstruction perform-
ance of our MovieNEM approach, we ran simulations on 10

 

1536

112 /310's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; popeoIII/noq

9IOZ ‘091sn3nv uo ::

Learning gene network structure

 

Cell cycle time

Perturbation
movies

 
 

 

 

 

 

 

 

Image Processing Alignment of features

oCell nuclei detection and along ce” Cyde time
tracking

OCalculation of morphological
features

_ given time bin
oCalculatIon of cell cycle time

 

\ oCollect perturbation effects from

~Divide cell cycle time into 10 bins
0 collect features from all cells at

 

 

 

 

 

 

 

c  J

    
 
    
 
   

Network Inference

 

several experiments Network Inference
~Dynamic Nested Effects Models

_ 0Co|lect perturbation effects from
oMarkov Chain Monte Carlo

several experiments
0Dynamic Nested Effects Models

- I p—va ue IS n u on or each °Markov Chain Monte Carlo

 

J

time point

   

 

—

Fig. 3. Overview about MovieNEM: individual movies are ﬁrst fed into an image processing pipeline consisting of four steps: (i) cell nuclei detection in
the individual movie frames; (ii) tracking of the nuclei over time; (iii) calculation of morphological features; and (iv) calculation of cell cycle time. After
image processing features are grouped according to the binned cell cycle time. This allows for estimating time-wise perturbation effects. Several movies,
each showing one perturbation, are processed in this way and the perturbation likelihoods collected along the binned cell cycle time axis. This allows for
applying Dynamic NEMs to infer the network between perturbed genes via MCMC

networks with n e {5, 10, 15} S-genes, which were generated in a
random fashion from KEGG signaling pathways as follows: a
random KEGG signaling pathway was picked as base graph.
Only gene nodes were considered within that graph, of which a
core node was selected randomly. Starting from that core node, a
random walk (visiting nodes with equal probability) was started
and continued until the total number of visited nodes was n. The
subgraph of visited nodes was regarded as an S-gene network,
and 85 features were attached randomly to the S-genes (with
uniform probability). Finally, time lags for edges between con-
nected S-genes were sampled from the set {1,2, 3,4} via a geo-
metric distribution P(X = k) = (l — p)kp with parameter p. We
further ensured that at least one of the sampled networks was
cyclic. All sampled networks can be found in the Supplementary
Materials.

3.1.2 Data sampling To generate phenotypic data for the
sampled 10 networks, we simulated knock downs of each of
the network S-genes according to Equation (3). That means, if
S-gene k was “knocked out’, then a downstream S-gene S was
supposed to be perturbed as soon as the perturbation signal
reached S (here the time lags came into play). If S was perturbed
at time step t, then we sampled P—values for all features attached
to S from the alternative part of the BUM model, otherwise from
a uniform distribution. The alternative distribution f1 was
assumed to be itself a mixture of a Beta(l, ,8) and a Beta(a, 1)
distribution, and parameter or was sampled uniform randomly
from [0.l,0.2, ...,0.9], whereas parameter ,8 was drawn uni-
formly from [5,6, ...,15]. The coefﬁcient for the mixture of
both Beta distributions was sampled uniformly from
[001,002, ...,0.49]. The length of simulated perturbation
time series was in agreement with our experimental data T: 10
time steps (see above). It should be emphasized that the sampling

process was done independently for each time step and per-
turbation, hence simulating different distribution characteris-
tics (speciﬁcally different null distributions). After P—value
sampling, BUM models were ﬁtted to each time point and per-
turbation, allowing for computing local effect likelihoods
p(D,-k(t)|S(t) = S(t), @S, = l). The whole data generation process
was repeated ﬁve times for each network.

For each network and sampled data set, a dynoNEM model
was inferred using MCMC. For this purpose, 50 000 burn-in and
50 000 sampling iterations were executed. A thinning of 100 it-
erations was done to obtain an estimate of the edge-wise poster-
ior expectation network. Edges with mean time lag not being at
least 2 standard deviations above 0 were ﬁltered out. In other
words, edges with large variance were not considered.

3.1.3 Dependency on network Size Initially the time-lag distri-
bution parameter p was ﬁxed to 0.5 and networks of size
n = 5, n = 10 and n = 15 were simulated. Supplementary
Figures Sl—S6 revealed a high reconstruction accuracy in terms
of sensitivity and speciﬁcity as well as a low mean squared error
(MSE) of estimated time lags. For n = 5, we observed a median
sensitivity of 1 together with a median speciﬁcity of 0.98 and a
MSE of 0.12. For n: 10, the median sensitivity and speciﬁcity
was about 0.9 with a MSE of about 0.9, and for n = 15, we still
observed a median sensitivity of 0.83 with a speciﬁcity of about
0.85 and a MSE of about 1.4. Notably, we observed a certain
dependency of the reconstruction performance on the network
structure. For example, for n = 10 network #10, a dense network
with lots of feedback loops, appeared to be hardest to infer,
whereas network #3, a sparse acyclic graph, was estimated
with high quality.

 

1e /310's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; papeoIII/noq

9IOZ ‘091sn3nv uo ::

H.Failmezger et aI.

 

3.1.4 Dependency on time-lag distribution Next we ﬁxed the
network size to n = 10 and varied the parameter p to investigate
the dependency on the time-lag distribution. The smaller the p
the more the time-lag distribution is uniform. In comparison
with our previous results with p = 0.5, we observed for a smaller
p = 0.2 (distribution is more uniform) on average a small de-
crease with respect to the sensitivity from approximately 0.9 to
0.8, while at the same time the speciﬁcity rose from approxi-
mately 0.9 to 0.94 (Supplementary Fig. S7) and the MSE
increased from approximately 0.8 to 1.3 (Supplementary Fig.
S8). In contrast, an increase of p to 0.8 lead to a drop of the
MSE to 0.45. The speciﬁcity remained high at approximately 0.9,
while the median sensitivity was 1 (Supplementary Figs S9 and
S10).

3.1.5 Dependency on uninformative features In a ﬁnal simula-
tion, we looked in how far our results were dependent on
possible unspeciﬁc/noise image features. For that purpose we
ﬁxed n = 10, p = 0.5 and removed a varying number (5, 10,
40) of informative features from our dynoNEM model.
Subsequently we added the same number (5, 10, 40) of unspeciﬁc
features, for which p-values were drawn from a uniform [0,1]
distribution. These noise features had thus no relation to the
network to be estimated. As can be observed, our method is
highly robust against noise features with respect to reconstruc-
tion of the network topology (see Supplementary Materials).
Even with 40 uninformative features the average sensitivity and
speciﬁcity was almost identical to the situation with 85 inform-
ative features, which underlines the effectiveness of our feature
selection approach described above.

3.2 Application to movie data

3.2.1 Example: subnetwork of Six genes We ﬁrst exemplify the
results produced by MovieNEM on a subnetwork of six genes,
which we picked from a larger set of 22 genes revealing signiﬁ-
cant phenotypic perturbation effects in our movies. According to
a literature-based network reconstruction, these 22 genes are
relatively close to each other and are mainly involved into cell
cycle, transcriptional regulation and cell differentiation. The
purpose of the example is to visualize the results produced by
MovieNEM, which would be hard for the whole network of 22
genes. The number of MCMC iterations in the burn-in and
sample phase was both set to 100 000.

Figure 4 visualizes the edge-wise posterior expectation net-
work together with the observed and predicted phenotypic effects
and corresponding typical cell morphologies at different time
points. Already at time point 1 CREBl knock down leads to
certain perturbation effects. STAT3 knock down affects fewer
features than the CREBl perturbation. Accordingly, STAT3 is
placed downstream of CREBl in the network graph. Similar
observations can be made, e.g. for CREBl and YYl, E2F5
and STAT3, YYl and STAT3 and MDM2 and STAT3.
Generally the number of phenotypic effects increases over time.
At time point 2, we can see a noisy subset relation between
CREBl and MDM2. At time point 4, yet more effects and cor-
responding subset relations are observable, e.g. between E2F5
and YYl as well as SP1 and MDM2.

The estimated dynoNEM model allows for making predictions
of intervention effects on feature sets: according to the model
features assigned to STAT3, which is placed most downstream
in the network, should exhibit signiﬁcant perturbation effects at
all time points, and indeed this is visible in the heatmaps in
Figure 4. In contrast, MDM2 features at time point 1 should
react only to MDM2 and YYl knock down, which is again in
agreement with the data. However, at time point 2, MDM2-
assigned features are predicted to show effects also under
CREBl and at time point 4 also under SP1 and E2F5 perturb-
ation. Once again, this can be conﬁrmed in our data. Similar
observations can be made for other feature sets.

We conducted a permutation test to check whether our
inferred network could have been expected by chance. For this
purpose, we permuted the node labels in each network 1000
times and calculated for each permuted network its likelihood
[Equation (1)]. All of these likelihoods were inferior to that of
our inferred network.

Our example demonstrates that dynoNEMs are able to learn
network structures, which are in agreement with the observed
phenotypic data.

3.2.2 Complete network In the last step, we applied
MovieNEM in the same way as described above to infer the
complete network between the 22 genes with signiﬁcant pheno-
type (Supplementary Figs Sl2—Sl6). As mentioned above, these
22 genes are mainly involved into cell cycle, transcriptional regu-
lation and cell differentiation. Again our edge-wise posterior
expectation network scored better than 1000 random S-gene
permutations.

We investigated, in how far our edge-wise posterior expect-
ation network contained edges, which were explainable by
paths contained in the literature network (see Supplementary
Materials). This way, all 122 edges could be mapped to known
literature pathways (see Excel ﬁles in Supplementary Materials).
Moreover, out of these pathways, ~82% had a length shorter
than 3 (Supplementary Fig. S14). On the other hand and not
surprisingly, the literature network contained additional inter-
actions, which could not be observed in our estimated networks.
In consequence, ~60% of all paths between the 22 genes within
the literature network corresponded to paths within our esti-
mated network. This can have two reasons: either the additional
literature-known interactions exist in reality, but MovieNEM
could not infer them or they do not exist in HeLa cells and are
hence not inferred. An important factor for false negatives is that
we can only infer interactions between genes that show a clear
phenotypic knock-down effect. If, for example, proteins A and B
can independently activate C, then the knock-down effect of A
may be partially compensated by B. In this case, we would only
see a weak or no knock-down phenotype of A and consequently
the edge A —> C could be missed in our MovieNEM model.

According to our inferred model, speciﬁcally CDKl,
CDC25A, CDKNlA and E2F5 are central hub nodes. All
these proteins play an important role into Gl/S and (except
for E2F5) G2/M phase transitions according to their GO anno-
tation. CDC25A, E2F5 and CDKl have an extraordinary high
in-degree, whereas CDKNlA has a high number of out-going
interactions. CDKNlA and CDKl are both involved into Ras
signaling. It is known that CDKNlA binds to and inhibits

 

1e /310's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; papeoIII/noq

9IOZ ‘091sn3nv uo ::

Learning gene network structure

 

 

 

 

 

*II I

 

 

 

 

 

 

 

 

I I I CREBl
MDM2 SP1CREBl E2F5 YY1 STAT3

 

 

Cell cycle time

 

 

 

Fig. 4. Inferred MovieNEM model (edge-wise posterior expectation) for six sample genes (top). Inferred edges are not necessarily direct physical
interactions, but can represent whole pathways. Heatmaps (bottom) depict estimated perturbation effects (log f1 (P — value)—compare Section 2.2) at
different time points. The ordering of phenotypic features in the heatmaps is due to the MovieNEM model, and gray lines indicate the maximum
likelihood assignment of features to perturbed genes. For clearer demonstration purposes, features sets being unaffected by a perturbation are plotted in
gray here. The original ﬁgure can be found in the Supplementary Materials. The right-hand side of the ﬁgure depicts examples of morphological

phenotypes along the cell cycle for each of the six gene knock downs

CDKl (Dulic et al., 1998), which is in agreement with the
inferred edge CDKN IA —> CDK 1 in our model. E2F5 is a tran-
scription factor playing a role into cell cycle control (GO anno-
tation) and is inhibited by CDKNlA (Dimri et al., 1996), which
is reﬂected by the edge CDKN IA —> E2F5 in our inferred
network.

4 CONCLUSION

We have shown that it is possible to learn pathway structures
from phenotypic perturbation effects recorded in time-lapse
movies. At the heart of the method lies the extraction of mor-
phological features yielding measurable differences in cell pheno-
types. We have developed a method to quantify these differences
such that an extended version of the dynoNEM method
(Frohlich et al., 2011) is applicable. To do so, cell trajectories
were automatically aligned to the standard cell cycle, and a like-
lihood ratio score for the detection of feature changes was calcu-
lated. Here, this was done by comparing the distribution of each
feature across different cells in a control and treated population,
which makes the detection of signiﬁcances sensitive given the
large number of observed cells. One might also imagine
comparing each feature in a single treated cell against the popu-
lation of control cells as an alternative. This would probably be

less sensitive, but could also be valuable, if cell by cell differences
are of relevance.

We have developed a novel MCMC sampler for network
structure learning to estimate the posterior likelihood of each
interaction. Our method allows for the inclusion of prior know-
ledge in a Bayesian fashion. Our whole approach aims at the
reconstruction of small networks on the order of 10 nodes, for
which the search space of signaling graphs can be sampled rep-
resentatively. For larger networks, possible solutions include the
restriction of the number of possible interaction partners of each
node as well as divide and conquer approaches (Frohlich et al.,
2007, 2008), but this is subject to future research.

Our simulations demonstrate the high sensitivity and speciﬁ-
city of our approach. This is also reﬂected in our application to
movies of 22 siRNA knock downs from the Mitocheck database,
where all estimated interactions were explainable by literature-
known pathways.

We detect and exploit phenotypic differences that develop in
response to a perturbation of the cell. In our present application,
all phenotypic differences are derived from merely one ﬂuores-
cence staining of the cell (GFP-histone tagging). We expect a
signiﬁcant increase in power of our method if multiple stainings
were used, and the individual ﬂuorescence labels were indicative
of the biological process under investigation.

 

1e /310's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; papeoIII/noq

9IOZ ‘091sn3nv uo ::

H.Failmezger et al.

 

A basic assumption of our present MovieNEM approach is
that phenotypic perturbation effects should occur at some point
during the cell cycle and then remain until the end of the cell
cycle. This assumption may not be fulﬁlled in all cases. Even
more, some perturbations may not yield a phenotypic effect at
all. In such cases, MovieNEM is not applicable. Finally, it is
worth emphasizing that MovieNEM up to now is certainly not
an approach for large-scale network reconstruction. This is due
to the huge network space (increasing exponentially with the
number of network nodes), which makes sampling-based meth-
ods (as well as heuristic approaches) computationally slow.

The reconstruction of cellular networks affords a better insight
into the organization of a cell. Targeted RNAi screens have re-
vealed their great potential for this purpose during the past years.
Given the fact that the combination with omics-data is not
always possible or affordable, image-based techniques can offer
a promising alternative. Our MovieNEM approach is therefore a
step toward better exploiting this information-rich data to un-
cover biological mechanisms.

Funding: P.P. is supported by the state of NRW through a B-IT
research school grant.

Conﬂict of Interest: none declared.

REFERENCES

Anchang,B. et al. (2009) Modeling the temporal interplay of molecular signaling
and gene expression by using dynamic nested effects models. Proc. Natl Acad.
Sci. USA, 106, 6447—6452.

Bakal,C. et al. (2007) Quantitative morphological signatures deﬁne local signaling
networks regulating cell morphology. Science, 316, 1753—1756.

Boland,M.V. et al. (1998) Automated recognition of patterns characteristic of sub-
cellular structures in ﬂuorescence microscopy images. Cytometry, 33, 366—375.

Chen,X. et al. (2006) Automated segmentation, classification, and tracking of
cancer cell nuclei in time-lapse microscopy. IEEE Trans. Biomed. Eng, 53,
762—766.

Dimri,G.P. et al. (1996) Inhibition of e2f activity by the cyclin-dependent protein
kinase inhibitor p21 in cells expressing or lacking a functional retinoblastoma
protein. Mol. Cell. Biol., 16, 2987—2997.

Driessche,N.V. et al. (2005) Epistasis analysis with global transcriptional pheno-
types. Nat. Genet, 37, 471—477.

Dulic,V. et al. (1998) Nuclear accumulation of p2lcipl at the onset of mitosis: a role
at the g2/m-phase transition. Mol. Cell. Biol., 18, 546—557.

Fire,A. et al. (1998) Potent and speciﬁc genetic interference by double-stranded
RNA in caenorhabditis elegans. Nature, 391, 806—811.

Fr6hlich,H. et al. (2007) Large scale statistical inference of signaling pathways from
RNAi and microarray data. BM C Bioinformatics, 8, 386.

Fr6hlich,H. et al. (2008) Estimating large scale signaling networks through nested
effect models with intervention effects from microarray data. Bioinformatics, 24,
2650—2656.

Fr6hlich,H. et al. (2011) Fast and efﬁcient dynamic nested effects models.
Bioinformatics, 27, 238—244.

Fr6hlich,H. et al. (2009) Nested effects models for learning signaling networks from
perturbation data. Biom. J., 2, 304—323.

Gat-Viks,I. et al. (2006) A probabilistic methodology for integrating knowledge and
experiments on biological networks. J. Comput. Biol., 13, 165—181.

Kaderali,L. et al. (2009) Reconstructing signaling pathways from RNAi data using
probabilistic boolean threshold networks. Bioinformatics, 25, 2229—2235.

Kamentsky,L. et al. (2011) Improved structure, function and compatibility for
cellproﬁler: modular high-throughput image analysis software. Bioinformatics,
27, 1179—1180.

Kanabar,P. et al. (2009) Infering disease-related pathways using probabil-
istic epistasis model. In: Pacific Symposium on Biocomputing. Vol. 14,
pp. 480—491.

Klamt,S. et al. (2010) TRANSWESD: inferring cellular networks with transitive
reduction. Bioinformatics, 26, 2160—2168.

Maathuis,M. et al. (2009) Estimating high-dimensional intervention effects from
observational data. Ann. Stat., 37, 3133—3164.

Maathuis,M.H. et al. (2010) Predicting causal effects in large-scale systems from
observational data. Nat. Methods, 7, 247—248.

Malpica,N. et al. (1997) Applying watershed algorithms to the segmentation of
clustered nuclei. Cytometry, 28, 289—297.

Markowetz,F. et al. (2005) Non-transcriptional pathway features reconstructed
from secondary effects of RNA interference. Bioinformatics, 21, 4026—4032.
Markowetz,F. et al. (2007) Nested effects models for high-dimensional phenotyping

screens. Bioinformatics, 23, i305—i3l2.

Nelander,S. et al. (2008) Models from experiments: combinatorial drug perturb-
ations of cancer cells. Mol. Syst. Biol., 4, 216.

Neumann,B. et al. (2010) Phenotypic proﬁling of the human genome by time-lapse
microscopy reveals cell division genes. Nature, 464, 721—727.

Niederberger,T. et al. (2012) Mc eminem maps the interaction landscape of the
mediator. PLoS Comput. Biol., 8, e1002568.

Otsu,N. (1979) A threshold selection method from gray-level histograms. IEEE
Trans. Syst. Man Cybern., 9, 62—66.

Pe’er,D. et al. (2001) Inferring subnetworks from perturbed expression proﬁles.
Bioinformatics, 17 (Suppl. 1), $215—$224.

Rung,J. et al. (2002) Building and analysing genome-wide gene disruption networks.
Bioinformatics, 18 (Suppl.2), S202—S210.

Sachs,K. et al. (2005) Causal protein-signaling networks derived from multipara-
meter single-cell data. Science, 208, 523—529.

Tresch,A. et al. (2007) Discrimination of direct and indirect interactions in a net-
work of regulatory effects. J. Comput. Biol., 14, 1217—1228.

Tresch,A. and Markowetz,F. (2008) Structure learning in nested effects models.
Stat. Appl. Genet. Mol. Biol., 7, Article 9.

Vaske,C.J. et al. (2009) A factor graph nested effects model to identify networks
from genetic perturbations. PLoS Comput. Biol., 5, e1000274.

Wagner,A. (2001) How to reconstruct a large genetic network from 11 gene perturb-
ations in fewer than n2 easy steps. Bioinformatics, 17, 1183—1197.

Zeller,C. et al. (2009) A bayesian network view on nested effects models. E URASIP
J. Bioinform. Syst. Biol., 195272.

 

1e /810's113umo [p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq 11101; popeoprmoq

9IOZ ‘091sn8nv uo ::

