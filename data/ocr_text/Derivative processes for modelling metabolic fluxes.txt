ORIGINAL PAPER

Vol. 30 no. 13 2014, pages 1892-1898
doi:10. 1093/bioinformatics/btu069

 

Systems biology

Advance Access publication February 26, 2014

Derivative processes for modelling metabolic fluxes

Justina Zurauskiene*, Paul Kirk, Thomas Thorne, John Pinney and Michael Stumpf*
Theoretical Systems Biology Group, Centre for Bioinformatics, Imperial College London, South Kensington Campus,

London SW7 2AZ, UK

Associate Editor: Igor Jurisica

 

ABSTRACT

Motivation: One of the challenging questions in modelling biological
systems is to characterize the functional forms of the processes that
control and orchestrate molecular and cellular phenotypes. Recently
proposed methods for the analysis of metabolic pathways, for
example, dynamic flux estimation, can only provide estimates of the
underlying fluxes at discrete time points but fail to capture the com-
plete temporal behaviour. To describe the dynamic variation of the
fluxes, we additionally require the assumption of specific functional
forms that can capture the temporal behaviour. However, it also
remains unclear how to address the noise which might be present in
experimentally measured metabolite concentrations.

Results: Here we propose a novel approach to modelling metabolic
fluxes: derivative processes that are based on multiple-output
Gaussian processes (MGPs), which are a flexible non-parametric
Bayesian modelling technique. The main advantages that follow
from MGPs approach include the natural non-parametric representa-
tion of the fluxes and ability to impute the missing data in between the
measurements. Our derivative process approach allows us to model
changes in metabolite derivative concentrations and to characterize
the temporal behaviour of metabolic fluxes from time course data.
Because the derivative of a Gaussian process is itself a Gaussian
process, we can readily link metabolite concentrations to metabolic
fluxes and vice versa. Here we discuss how this can be implemented
in an MGP framework and illustrate its application to simple models,
including nitrogen metabolism in Escherichia coli.

Availability and implementation: R code is available from the authors
upon request.

Contact: j.norkunaite@imperial.ac.uk; m.stumpf@imperial.ac.uk
Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on October 20, 2013; revised on December 28, 2013;
accepted on January 26, 2014

1 INTRODUCTION

It is generally impossible to simultaneously measure the abun-
dance of all the molecular entities making up biological systems.
In gene expression assays, for example, we typically measure
messenger RNA expression, but not the activity of transcription
factors and/or the occupancy of transcription-factor binding
sites. Similarly, in metabolomic analyses (Chou and Voit, 2012;
Voit, 2013), key metabolites can be measured using, e.g. mass
spectrometry or nuclear magnetic resonance quantiﬁcation, but
it is rarely possible to comprehensively quantify the metabolites

 

*To whom correspondence should be addressed.

even within a single pathway. Typically, more interesting than
metabolite and enzyme abundance are the ﬂuxes through bio-
chemical reactions and metabolic networks (Orth et al., 2010;
Schuster et al., 1999). Fluxes, v = (121, ...,vm)T, correspond to
the rates at which molecules, x = (x1, . . . ,xn)T, are turned over
by the m reactions; regulation of ﬂuxes in light of changes in
environmental and physiological conditions is also intimately
linked to cellular physiology.

Although the ﬂuxes are of central concern, they are hard to
measure directly. Estimates for intracellular ﬂuxes can be ob-
tained by tracking products from isotope-labeled (13C and 15N
metabolic ﬂux analysis) metabolites through the metabolic net-
work (Blank and Ebert, 2012; Zamboni, 2011). However, such
an approach is restricted to a metabolically steady-state analysis
and is not appropriate for capturing dynamical ﬂux variations.
Instead, theoretical analysis has often progressed by assuming
stationarity of the metabolic processes, which in turn allows
for characterizing the sets of steady-state ﬂuxes under a set of
suitable assumptions (Klamt and Stelling, 2003; Schwartz and
Kanehisa, 2006; Voit and Almeida, 2004). Flux-balance analysis
is the most popular example of this strategy, but it becomes
questionable once the steady-state assumption can no longer be
upheld. Furthermore, as more data on enzyme abundance be-
come available, we should attempt to include such information
and the impact on metabolic processes (Colijn et a], 2009; Rossell
et al., 2013).

Here we provide a new framework that allows us to model
metabolic ﬂuxes and their dynamics, and which deals with the
missing data problem in metabolic analysis in a ﬂexible and con-
sistent manner. Gaussian processes (GP) belong to the armoury
of non—parametric Bayesian methods and have been widely used
to describe dynamical processes (Kirk and Stumpf, 2009) and to
infer hidden states, e.g. transcription-factor activities (Honkela
et al., 2010). In applications to metabolic modelling, parametric
approaches can offer potentially incorrect representations of the
underlying ﬂuxes (Voit, 2013). The strengths of GP models arise
from their non-parametric nature, which enables us to put priors
directly on a function rather than on the parameters of a para-
metric function. With a multiple-output GPs (MGPs), single GP
framework can be extended to handle many outputs, enabling us
to learn the unknown relationships between metabolic species. In
turn, MGPs can be used to infill the sparsely sampled data
(Boyle and Frean, 2004). This means that by using MGPs, it is
possible to impute the missing data in between the metabolic
measurements more efﬁciently.

Here we develop a more general framework that uses so-called
derivative GPs (Solak et al., 2003), which allow us to link

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which
permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /310's113umo [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 11101; prBOIUAAOG

9IOZ ‘091sn3nv uo ::

Derivative processes for modelling metabolic fluxes

 

metabolite abundance, x (or concentrations) and ﬂuxes v. This in
turn enables us to also treat time course data on metabolites and
monitor the changes that occur in ﬂuxes, e. g. over the course of
physiological responses, such as to changes in the environment
(Bryant 61 al., 2013).

2 METHODS
2.1 GP regression

Gaussian process regression (GPR) can be applied to recover an under-
lying dynamical process from noisy observations. A GP deﬁnes a prior
distribution over all possible functions, and to specify a GP, we need
expressions for the mean and covariance function that describe the be-
haviour of the system output over time (Haykin and Moher, 2010). Below
we review the standard GPR methodology.

In a typical regression problem, we connect inputs x and outputs 2 via
functions, 2 =f(x), where x = (x1, . . . ,xn) and z = (21, . . . ,2") are con-
tinuous n-dimensional real-valued vectors. The observed values of the
dependent variable, 2, can be related to the independent variables, f(x)
through,

y,=f(x,-)+6, i: 1, ...,n,

where e is a noise term, which is here assumed to be independent and
identically distributed according to a Gaussian distribution, 6 ~ N(0, of .
In GPR, we place a GP (Haykin and Moher, 2010; McKay, 1998) prior
over the functions f(x), f ~ 973, meaning that at any ﬁnite number of
input points x1, ...,x,, the values f(xi) have a multivariate Gaussian
distribution with zero mean and covariance function, K,

[f(XI), ---»f(Xn)]T~ N(0, K(X, X9).

Different functional forms can be chosen for the covariance function
(Rasmussen and Williams, 2006), either to simplify computations or to
reﬂect constrains imposed by the data. A ﬂexible and generic choice is to
set the covariance function to

1
K(x1,,xq) = a: exp(—2—l|xp — quz),

where 6 = (05%,!) represent a set of unknown hyper-parameters, and x1,
and xq are inputs. Thus, y = (yl, .. . , yn)T has a multivariate normal dis-
tribution with zero mean and covariance matrix C(Q) = K + 0621, with I the
identity matrix. The unknown set of hyper-parameters, 6, can be estimated

from the data by evaluating the following log-likelihood function,
1 1
2(6) = — 510g IC(0)I — EyTerly — 310g 2:1, (1)

using either a maximum likelihood approach or by sampling from the
posterior distribution with Markov chain Monte Carlo methods (Neal,
1997).

For any ﬁnite number of input (test) points, x’f, . . . , x’;, we deﬁne the
joint prior probability distribution

* * K(x ,x )+o§I K(x ,x*)
iy,f<x1), ...,f<x.)1T ~ N(0,( IQXSDXCI) may: 

With the GP prior, it is possible to evaluate the posterior distribution
over the functions; the values of f evaluated at inputs (x’f, ...,x’;) and
conditioned on the observations y are jointly distributed as (Rasmussen
and Williams, 2006),

[f(x’f), ---,f(x:)]TIy ~ N(mp, K17): (2)
where
m, = K(x;, xq)[K(X1,, x,) + 0311-1y,
and
K1, = K(x;, xg) — K(x;, xq)[1<(x,,, x,) + ofl]K(xp, x; .

Although Equation (2) deﬁnes an appropriate GP posterior, which
allows us to make predictions about a single variable y, it remains unclear
how to deal with several variables simultaneously: if outputs are corre-
lated then the standard GPR framework may fail in providing an ad-
equate description.

2.2 Multiple—output GPs

Boyle and Frean (2004) introduced MGPs, where a set of dependent
GPs is constructed via multiple-input multiple-output linear ﬁlters. This
perspective can capture the dependencies between several variables by
solving a convolution integral and specifying a suitable covariance func-
tion, which in turn includes the cross and auto correlations among related
variables. Our construction of derivative processes below builds on MGPs.

Dealing with linear ﬁlters is central to signal processing where such
ﬁlters describe a physical systems that can generate an output signal in
response to a given input signal (Haykin and Moher, 2010; Roberts,
2008). Linear ﬁlters are characterized by their kernel function (an impulse
response) 11(1), and the output 2(1) can be expressed via convolution
integral,

00

2(1) 2 h(t) ® x(t) = / h(t)x(t — 1')d‘l.',

—00

where the symbol ‘8)” denotes the convolution operator. To transmit the
signal that has the mathematical properties of a GP, the kernel function,
11(1) must be absolutely integrable, i.e.

/ |h(t)|dt<oo,

Then if the input X (t) is speciﬁed to be a Gaussian white noise process,
the output process, Z(t), will also be a GP.

Specifying a stable linear time-invariant ﬁlter with M white noise pro-
cesses as inputs, X1(t), ...,XM(I), K outputs, Z1(t), ...,ZK(t) and
M x K impulse responses results in a dependent GP model (Boyle and
Frean, 2005). A multiple-input multiple-output ﬁlter can thus be deﬁned
as

M 00
2140:: / hmkUM/mU—TMT,
m=l _00

where hmk(t) are kernel functions and Zk(t) is the kth output. As dis-
cussed previously, the observed variables might differ from expected vari-
ables owing to the measurement noise, and we thus consider

YkU) = 21.0) + WW), (3)

where Wk(t) is a Gaussian white noise process with variance 02.

Multiple-input multiple-output ﬁlters are able to capture the relation-
ships between several variables Yk(t); in the model, these kind of depen-
dencies are build in via shared input noise sources that enable the
speciﬁcation of valid covariance functions. For the sake of simplicity,
let the impulse response be a Gaussian kernel, hmk(t) = vmk exp{—%(t—
umk)2Amk}. Then evaluating the convolution integral leads to the follow-
ing covariance function,

M 00
6,-(d) = :1 / hmrrmmja + d)dr
’"Z -°° (4)

M l
(271)2vmivmj { 1 2
= —€Xp __(d_[Mmi —Mm']) S 9
m=l v Ami + Amj 2 J
where S = Am,(Am,- + Amj)—1Amj and d = Id — I], is the temporal separ-
ation between two input points, (see Boyle and Frean (2004) appendix for
derivation and generalization to multidimensions). Constructing

 

1 893

112 /§JO'smumo [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 11101; prBOIUAAOG

9IOZ ‘091sn3nv uo ::

Jiurauskiene et aI.

 

intermediate matrices Ci]- permits the deﬁnition of a positive deﬁnite sym-
metric covariance matrix C between K variables,

Cll+0fl  CIK
C:    .
CK1  CKK+0‘%<I [NXN]

Here N = 1 N,- is total number of observations, and N,- the number
of observations of variable 1'. Having deﬁned the covariance matrix, we
can use the log-likelihood, which has the form (1) for the inference of the
hyper-parameters 6 = {vmk, umk, Amk}. Again, following Bayesian frame-
work, we can use the results from the GPR section to evaluate the joint
predictive distribution (2) for all outputs. Alternatively, for a particular
variable i, predictions can be made using the appropriate marginal
distribution, which is Gaussian, with mean m,(1’) and variance van-(1’),
given by

m,(1’) = kTC‘ly, 5
van-(1’) = K — kTCTIk, ( )

where
K = Cii(0) ‘1‘ 0129
kT = [kT, ...,kIT<],
k]? = [(CUU’ — 11,1) - - - CW’ — ELM-)1

2.3 Derivative processes

For a GP that is derived through a linear ﬁlter, Y(1) = 11(1) (8) X (1) + W(1),
where X(1) is a white noise GP, 11(1) is a kernel function and W(1) is an
additive noise, it is easy to formulate the expression of a derivative process.
Taking a derivative of Y with respect to 1, it is possible to obtain a new
process U that is also a GP (Boyle, 2007),

d °° d
U(1) E a Y(1) = / {aha — r)}X(r)dr 2 g(t) ® X(1),

Thus, it is possible to construct the derivative process by convolving a
white noise GP X (1) with a derivative kernel function g(1). This deﬁnition
enables us to consider derivative processes and the corresponding original
processes as a collection of dependent GPs. This is true because the de-
rivative processes and the original processes are derived from exactly the
same input, X(1).

To construct a dependent model for several related variables
Y 2 (Y1, . . . , YK) and their derivatives U = (U 1, .. . , U K), it is necessary
to deﬁne a suitable covariance structure, which in principal arises from
the initial covariance function (4). For example, for a set of four depend-
ent outputs (two original and two derivative processes), the following
equations can be applied to compute the covariances (Girard, 2004;
Kirk, 2011; Solak et al., 2003),

o Autocovariance function of derivative process U,-

 

 

 

 

 

 

dY, dY, d2
DDCl'l' E 9 2 Ch. ;
(‘0 COV< d1 ma d1 Mb) dtadtb (‘0
o Cross-covariance function between two derivative processes U,-
and U]-
dY- dY~ d2
’(d) cov<d1 ,2,“ d1 Mb) dtadtb ’(d)

 

 

o Covariance between original process Y,- and corresponding derivative
process U,-

d Y,-
d1

 

 

DCl-l-(d) E cov Y,- = laid);
lzlb d1],

0 Covariance between original process Y,- and derivative process U]-

dY, d
= —C,~(d).
11b) dtb J

DCl-j(d) E c0v<Y,-, W

 

Let R denote a block matrix,

C11 C12 DC11 DC12 T
R = , L = R ,
(C21 C22 DC21 DC22)

which describes the correlations between observations Y 2 (Y1, Y2) and
their ‘function’ values Z = (Z 1,22), and corresponding derivative vari-
ables U 2 (U1, U2) evaluated at any ﬁnite number of test points
11,  ,1,. In a similar manner, let H denote

611 612 5611 5612

621 622 5621 5622
5611 5612 DDCu DDC12
5621 5622 DDC12 DDC21
where the Ci]- matrices contain the correlations between functions 21 and
Z2 evaluated at a ﬁnite set of test points 11, .. .,1r; Dij the correlations
between functions Z = (21,22) and derivative variables U 2 (U1, U2)
evaluated at the same test points; and ﬁnally, DDC,-J- consists of auto/
cross-correlations between derivative variables U1 and U2. The matrices

R, L and H are building components of the overall covariance matrix K,
which is symmetric and positive deﬁnite,

_ C+021 R
K_( L H).

At a ﬁnite number of input points 11, . ..,1,, the matrix K allows us to
place a joint prior over observations Y, functions Z and derivatives U,

[Y1, Y2, Z1, Z2,U1, U2] ~ N(0, K).
Evaluating a GP posterior
[Zn Z2, U1, U2]1[Y1, Y2] N N(mp0519 Kposl): (6)
where
mp0,, = L[C + 021]_1R and KM, = H — L[C + 021]_1Y,

enables us to make joint predictions for the original and derivative pro-
cesses simultaneously. Alternatively, if there is no need to sample from
the posterior process, we can use marginal Gaussian distributions to
make predictions for individual output. The marginal distributions for
output 1' and its derivative process at any input point 1*,

mm = ky,[C + 021]_1Y,
mUl.(1*) = k2, [C + 021]_1Y,
vary,(1*) = K — ky,[C + 021]_1k§i,
varU,(1*) = n — kZ,[C + 021]_1k2,
where my, is the mean of the original process, mUl. the mean of the de-

rivative process, vary, the variance of the original process and vary, the
variance of the derivative process, and furthermore

(7)

K = 011(0) + 0,-2» 77 = DDCii(0)
0110* — 11,1) 190Mtik — 11,1)
0110* — 11,N1) DCil(t* — 11,N1)
kYi : * Ul : t
012(1 — 12,1) 190120 — 12,1)

0120* — t2,N2) DCi2(t* — t2,N2)

Equations (6) and (7) can easily be extended to make predictions about
any number of variables.

 

1 894

112 /310's112umoprijo'sor112u1101urorq/ﬁd11q 1110131 pop1201umoq

9IOZ ‘091sn3nv uo ::

Derivative processes for modelling metabolic fluxes

 

3 APPLICATIONS AND RESULTS

To demonstrate the performance of derivative processes, we
consider two simulation examples—a system of two oscillating
signals and a simple model of linear metabolic pathway—before
turning to a more complicated metabolic process and, ﬁnally,
some real metabolic network data. The derivative processes can
be used to address the ﬂux estimation problem from time course
data. Here GPs describe the dynamics of metabolites, and
the corresponding derivative processes capture the functional
forms of the associated ﬂuxes. Below, all examples were imple-
mented using the free statistical computing platform R www.r-
project.org.

3.1 Oscillating signals

A simple oscillating signal can be expressed as
2(1) = A sin(a)1+ qb), where A is the amplitude, to = 271f the an-
gular frequency and o the phase angle. This is a particularly
useful example because it is easy to evaluate the performance
of derivative processes, as the derivative signals have a known
analytic form. We consider a simple system that consists of two
oscillating signals, 21(1) and 22(1),

21(1) = sin(21), => 21(1) = 2cos(21),
22(1) = sin(21—I— 2), => 22(1), = 2cos<21+§>,

with 1 e [0, 471]. To model real experimental measurements, we
add random noise to the simulated trajectories, Y1(1) =
21(1) 4— 61, Y1(1) = 22(1) 4— 62, where 61' ~ N(0, 0.12); we have
observations of both signals at regular time intervals,
D1 2 {115,3 Yljiﬁilflo and D2 = “251', Y2J}j~v:21 =  TO  a
single model that captures the relationship between the two sig-
nals, we apply the dependent GP framework (3) (K=2) on a
combined dataset D = {D1, D2}; each signal can be expressed as
a superposition of three GPs—two of which are constructed via
convolution between a noise source and a Gaussian kernel, and
the third one is an additive noise. We set parameters A,- of each
Gaussian kernel to be exp(f,-) and noise levels to
01 = exp(n1), 02 = exp(n2), leading to a set of hyper-parameters
6 = (v,,f,-,,u.1, ,u.2, n1, 772), i: l, . . . ,4. To build the model the fol-
lowing priors are chosen: vhf, ~ (1,22), 77,- ~ N(—2, 22) and
,uj ~ N (0.5, 12), j = 1,2; the maximum a posteriori (MAP)
estimate 6 is determined using a multistarting Nelder—Mead op-
timization algorithm (Nelder and Mead, 1965). Dependent GP
posteriors (6) allow us to make joint predictions about both sig-
nals and their derivative processes at any ﬁnite number of input
points, and the resulting posterior processes are summarized in
Figure 1. From these posterior processes, it can be seen that the
mean behaviour of our model agrees with trajectories of under-
lying noiseless signals, and to make predictions about derivative
processes, it is enough to consider only samples from the original
sinusoidal trajectories.

3.2 Linear pathway

Next we consider a linear metabolic pathway with two regulatory
signals (see Goel eat a]. (2008) Supplementary Material for de-
tails), which is summarized in Figure 3a. Here the ﬂow from x1
to x2 is negatively regulated by metabolite x3, and x3 increases

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

(a) sin(2t) ([3) sin (2t + 2)
co — co —
‘T - W ‘T - W
(‘0 _ (‘0 _
I I
I I I I I I I I I I I I I I
O 2 4 6 8 10 O 2 4 6 8 10
Time Time
71'
(C) 2cos(2t)  Zoos (2t -l- 
co — co —
‘T ‘ ‘T ‘
(‘0 _ (‘0 _
I I
I I I I I I I I I I I I I I
O 2 4 6 8 10 O 2 4 6 8 10
Time Time

Fig. 1. Predictions with MGPs model for two oscillating signals. (a and b)
Dashed lines represent true behaviour of noiseless sin(-) trajectories; dots
correspond to the noisy observations for both signals (data); solid lines
are the mean behaviour of the MGPs model (predictions with original
GPs); light areas correspond to two standard deviations at each predic-
tion point. (c and d) Dashed lines represent true behaviour of noiseless
cos(-) trajectories; solid lines show the mean behaviour of the MGPs
model (predictions with derivative processes); light areas correspond to
two standard deviations at each prediction point

the transformation of x2 into x3. A set of ordinary differential
equations (ODEs) can be used to describe the dynamics of these
two metabolites, x2 and x3 (x1 is the constant external input),

: lemax _x0.5x
Km(1+%i)+x1 2 3’ (8)

X3 = 3635363 — x95.

562

To apply the derivative process approach, we simulate the
ODE model with the following parameter values
(Vmax,Km,Ki) = (18.6819,9.782l, 0.5992) and initial conditions
x2(0) = l, x3(0) = 1. In this model, the concentration of x1 is
assumed to be constant and equal to 2. The dataset consists of
selected points from simulated trajectories with added Gaussian
noise N(0, 0.052). Again we combine the ‘noisy’ measurements,
and ﬁt the dependent GP model to make predictions about the
original trajectories and their derivatives. To obtain a functional
expressions for ﬂuxes v1 and v2 we need to estimate a dynamical
variations of metabolic, x2,x3, derivatives. The derivative pro-
cesses provide the predictions for the left side of Equation (8) at
any ﬁnite number of time points, whereas the original GPs de-
scribe the solution on the same ODE (8). This enables us to link
the metabolite measurements to metabolic ﬂuxes. Figure 2 illus-
trates the predictions with posterior processes, where solid blue
lines correspond to the mean behaviour of the model, dashed
lines to the original x2 and x3 trajectories and solid green lines
to their derivatives. In addition, if we assume that we are able to
measure ﬂux V3 = x95, we can obtain the functional expressions
for ﬂuxes v1 and 122 that are summarized in Figure 2c and d. The
dark pink lines illustrate predicted ﬂuxes from noisy metabolite

 

1 895

112 /810's112umo prijo'sor112u1101urorq/ﬁd11q 1110131 pop1201umoq

9IOZ ‘091sn8nv uo ::

Jiurauskiene et aI.

 

E
§

 

 

1.5
5

:ng 

LC!
—\j;2/X/-\/-\ _W

0.5
0

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Lo Lo
0| _ I I I I I I 0| _ I I I I I I
O 5 10 15 20 25 O 5 1O 15 20 25
Time Time
(C) Flux ’01 (d) Flux 122
0°. _ 0°. _
v. I v. I
Q : W  : III:
to — co —
o" ' o" '
| | | | | I | | | | | I
O 5 10 15 20 25 O 5 1O 15 20 25
Time Time

Fig. 2. Predictions with MGPs model for linear metabolic pathway.
(a and b) Dashed lines represent a simulated x2 and x3 trajectories
from ODE model; dots correspond to the sparse noisy observations for
x2 and x3 (data); solid blue/ green lines are the mean behaviour of the
MGPs model (blue, predictions with original GPs; green, predictions with
derivative process); light areas correspond to two standard deviations at
each prediction point. (c and d) Dark lines are predicted ﬂuxes, light areas
correspond to the conﬁdence region, and dashed lines represent true be-
haviour of noise-free ﬂuxes v1 and v2 (calculated from ODE system)

measurements, dashed lines are real ﬂuxes (calculated from
ODEs (8)) and light pink area corresponds to the conﬁdence
region.

3.3 Branched pathway

We now turn to an example of metabolic pathway that was ori-
ginally proposed by Voit (2013) (see Example of actual charac-
teriZation); Figure 3b illustrates a schematic representation of a
branched pathway with two regulatory responses, where x3 in-
hibits the conversions of x1 into x2, and x2 positively regulates
reaction v4. The following ODE model describes the dynamics of
the metabolites that are involved in this pathway,

561 = 0.05 — l.l)c(l)5x3_0‘75 — 2.8xg’gxg’4,
x2 = 1.1x‘3-5x3—0-75 — 1.1xg-6, (9)
3&3 = 1.1xg’6,
where x1,x2,x3 denote the metabolites. For a given pathway
(Fig. 3b), the change in metabolite concentration can be
described by the differences between incoming and outgoing
ﬂuxes. For this reason, we are able to obtain the following ex-
pressions for ﬂuxes v1, V2, V3 and v4,
V1 —V4 =X1+V2,
V2 = 562 + 563, (10)

X3 =V3, V3 =X3.

X1=V1—V2—V4,

X2=V2—V3, =>

These expressions deﬁne a system of linear equations that is
underdetermined, as we have more ﬂuxes to estimate than

(a) LINEAR PATHWAY
l>' 9 ‘~
X1 v—> X2 —v> X3 T’
 BRANCHED PATHWAY

(c) NITROGEN ASSIMILATION
nutrients

I
i j' - I35
m
—> —p GLN
1}.
aKG - a ketoglutarate l

GLU - glutamate EDEN
GLN - glutamine

 

Amino acids Amino acids

 

Fig. 3. Pathway information. (a) A simple linear metabolic pathway; red
and green dashed lines correspond to the inhibition and activation sig-
nals. (b) Illustrates a branched pathway with positive (green) and negative
(red) regulatory signals. (c) Illustrates a metabolic pathway in E.coli, here
vi, 1': 1...4 denote the ﬂuxes; aKG, GLU and GLN correspond to the
metabolites; TCA is a short notation for the citrate cycle in E.coli

available equations, and it cannot be solved using standard
Gaussian elimination techniques. For this reason, additional in-
formation is required to uniquely determine ﬂuxes v1 and v4. In
this example, we will focus only on estimation of ﬂuxes v2 and 123
from available data rather than try to address a uniqueness prob-
lem of v1 and v4.

The above ODE model enables us to generate simulated time
course data using the initial conditions x1(0) = 4, x2(0) = l and
x3 (0) = 2. Next, we apply the dependent GP framework (3)
(K: 2) on the combined dataset D 2 {D1, D2}, where
D1 = {12,i,x2,i}f:11:20 and D2 = {13,i,x3,,-}f:11:20 contains the meas-
urements of metabolites x2 and x3 with added random Gaussian
noise N(0, 0.012) (we chose a low noise level so that predictions
with derivative processes could be easily compared with the ori-
ginal ﬂuxes in the example in Voit (2013). For a set of model
hyper-parameters 6 = (v,,f,-, 771, 772,11), 1' = l, . . . ,4 we use the fol-
lowing priors, v, ~ (2, 22),f,- ~ (—3, 22), 77,- ~ N(—2, 22),j = 1,2
and ,u. ~ N(0.5, 12), and calculate the MAP estimate 6 as before.
Figure 4 illustrates the predictions with posterior processes using
Equation (7); (a and b) graphs summarize metabolite data. The
dark blue lines correspond to the mean behaviour of the original
GPs and agree well with simulated x2 and x3 dynamics; the green
lines describe the derivatives of the same metabolites and can be
understood as a slope estimates. In Figure 4c and d, dark pink
lines illustrate the predicted metabolic ﬂuxes v2 and v3 under
consideration of pathway Figure 3b. From ODE model (9), we
can calculate original ﬂuxes over the time (in real situations this

 

1 896

112 /810's112umo prijo'sor112u1101urorq/ﬁd11q 1110131 pop1201umoq

9IOZ ‘091sn8nv uo ::

Derivative processes for modelling metabolic fluxes

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

(a) (b)
S ‘ 552 <I- — 373
L0 or) _
d — K
N _
o
d' F_\
g _ .732 O - 1.53
I | | | l l l | | | l l l
0 2 4 6 8 10 0 2 4 6 8 10
Time Time
(C) Flux 112 (CI) Flux v3
“'2 _
1— o a
I  - \
o ' X
"I _ I L”. _ \
‘ o \
L0. _ ‘. \\
o ‘ _ - - - - - - - - --
\
Q _ ‘ - — - - - - - - - - -- Lo
0 0' _
| | | l l l | | | | l l l
0 2 4 6 8 10 0 2 4 6 8 10
Time Time

Fig. 4. Predictions with MGP model for a branched metabolic pathway.
(a and b) Dashed lines represent simulated x2 and x3 trajectories from
the ODE model; red dots correspond to the sparse observations for x2
and 363 (data); solid lines are the mean behaviour of the MGPs model
(blue, predictions with original GPs; green, predictions with derivative
process); light areas correspond to two standard deviations at each pre-
diction point. (c and d) Dark lines are predicted ﬂuxes; dashed lines rep-
resent true behaviour of ﬂuxes v2 and v3 (calculated from the ODE
system)

would not be possible). Figure 4c and d shows a good agreement
between predicted and original ﬂuxes.

3.4 Escherichia coli nitrogen assimilation

Finally, we apply our technique to the experimental data from
E. coli, where we have measurements of the abundance of several
key metabolites involved in nitrogen assimilation. Nitrogen is
one of the key chemical elements that acts as a nutrient for the
cells; ammonium is a preferred source of nitrogen for E. coli
growth (Schumacher et al., 2013; van Heeswijk et al., 2013). In
E. coli, ammonium can be absorbed via two pathways: glutamate
dehydrogenase (GDH) that operates during cell growth in am-
monium-rich environments, and glutamine synthetase—glutamate
synthase (GS-GOGAT) that operates during cell growth in low-
ammonium conditions (van Heeswijk et al., 2013). Here, we are
focussing on experimental conditions, where after a period of
nitrogen starvation, the bacterial cultures are spiked with ammo-
nium (Schumacher et al., 2013); Figure 5a shows experimentally
obtained measurements for a-ketoglutaraa’e (aKG), glutamate
(GLU) and glutamine (GLN) metabolites over the time after am-
monium spike; red dots correspond to a wild-type (WT) E. coli
metabolic measurements, and in squares—isogenic glnG deletion
(AglnG) measurements. Below we focus on the pathway
summarized in Figure 30, which includes both GDH and GS-
GOGAT. For modelling purposes, we assume that ﬂuxes v3 and
v4 can be summarized by the overall ﬂux 123 that describes the
ﬂow from GLU to GLN, as there is not enough information to
discriminate between them. From the pathway, we can construct

 

14

3

aKG
12 13 14 15 16
T .
GLU
17.5 .
GLN
12 13

 

 

 

 

aKG derivative
GLU derivative
GLN derivative

 

 

 

   

o-
0']
_|.
O
_|.
0']

 

 

 

— WT model
— AglG model
ﬁ- — 5 WT data

° AglG data

 

 

Flux v1
Flux v2
Flux v3

 

 

 

 

 

 

     

 

 

 

| I | I | I
0 5 10 15 0 5 10 15 0 5 10 15

Time(min) Time(min) Time(min)

Fig. 5. Predictions with MGPs model for E. coli (WT and AglnG). (a)
The symbols indicate experimentally measured concentrations of aKG,
GLU and GLN metabolites (dots for WT, squares for AglnG). Solid lines
correspond to the mean behaviour of dependent GPs model. (b) Predicted
derivative behaviour for aKG, GLU and GLN metabolites, where solid
lines correspond to the mean behaviour of dependent derivative pro-
cesses. (c) Predicted ﬂuxes v1, v2 and v3 for convenience, dotted line illus-
trates horizontal O-axis

a system of linear equations that describe the dependencies be-
tween ﬂuxes and metabolites,

aKG: v1— v2, v1 =01KG—I—GLU—I—GLN,
GLU: V2 — V3, => V2 = GL'U+ GLN, (11)
GLN: V3, V3 = 

We ﬁt a dependent GP model (3) (K = 3) to the WT data and
then to AglnG data (collected from a strain where glnG is
absent). In the model, aKG is expressed as a sum of three GPs:
the ﬁrst GP describes aKG, the second expresses the relationship
between aKG and GLU and the third one describes additive
noise; GLN is modelled similarly. However, GLU is modelled
as the sum of four GPs, where the ﬁrst three describe GLU;
the dependence between GLU and aKG; the dependence between
GLU and GLN; and the fourth is an additive noise. Choosing
kernel functions to be Gaussian hk(t) = vk exp{—%12Ak}, we
obtain the MAP estimate for all hyper-parameters (17 in total).
The predictions with posterior process (7) are summarized in
Figure 5, where solid blue lines describe predictions with depend-
ent GP models for WT E. coli, and green lines for AglnG. Using
the relationship (11), we can estimate ﬂuxes v1, v2 and 123
(Fig. 50).

To evaluate our predictions, we can compare ﬂux v3 and GS
protein levels in WT and AglnG E. coli (see Supplementary Fig.
S1). In E. coli, glnG encodes the transcription factor, NtrC (ni-
trogen regulator) that controls GS expression levels, and in its
active form, GS catalyses glutamine synthesis (van Heeswijk

 

1 897

112 /810's112umo prijo'sor112u1101urorq/ﬁd11q 1110131 pop1201umoq

9IOZ ‘091sn8nv uo ::

J2urauskiene et al.

 

et al., 2013). Experimentally, it was observed that in AglnG case
protein, GS levels were signiﬁcantly lower compared with the GS
levels in WT E. coli (see Supplementary Fig. SlC and D).
Because there is less enzyme available to catalyse the reaction
in AglnG, the ﬂux v3 in the mutant will be noticeably reduced
compared with the WT ﬂux v3 (see Supplementary Fig. SlA
and B).

4 DISCUSSION AND CONCLUSIONS

Flux estimation has become central to many analyses into the
metabolic processes and mechanisms. Typically, the estimates for
a set of ﬂuxes are obtained in a point-wise manner at discrete
time points. It is clear that this fails to capture the temporal
behaviour of the ﬂuxes and additional consideration of paramet-
ric models is compulsory to fully explain the ﬂuxes; further, this
approach is susceptible to noise that is present in experimentally
measured metabolite data.

Here we have addressed these problems and proposed a novel
non-parametric Bayesian approach to modelling metabolic
ﬂuxes. This is based on MGPs that enable the construction of
derivative processes. Because the derivative processes and ori-
ginal processes share the same input source, we can complement
the dependent GP model and make joint predictions about ori-
ginal and derivative processes at any ﬁnite number of input
points. Such derivative processes can be applied to characterize
the temporal behaviour of metabolic ﬂuxes from time course
data—without having to make reference, e.g. transcriptomic
data, to explain temporal variation—and here we have demon-
strated the applicability on simple models and a real-world
example.

GPs, including our approach, propagate uncertainty in line
with the assumed covariance structures. This can lead to
large conﬁdence intervals, especially if the dependencies among
different observations are not considered explicitly. With increas-
ing number of metabolic species within the pathway, the deriva-
tive process approach might become computationally costly due
to the inference of a large number of hyper-parameters and a
matrix inversion step; however, this limitation potentially might
be addressed by considering a sparse approximation for the full
covariance matrix of all metabolic species (Alvarez and
Lawrence, 2009). These can in principle deal with genome-level
data.

ACKNOWLEDGEMENT
The authors thank Jake Bundy and Volker Behrends for the E.
coli metabolite data.

Funding: Leverhulme Trust (to J .Z. and M.P.H.S.), the Royal
Society (to JP. and M.P.H.S.), HFSP (to PK. and M.P.H.S.)
and BBSRC (to T.T. and M.P.H.S.).

Conﬂict of Interest: none declared.

REFERENCES

Alvarez,A.M. and Lawrence,D.N. (2009) Sparse convolved Gaussian processes for
multi-output regression. Adv. Neural Inf. Process. Syst., 21, 57—64.

Blank,L.M. and Ebert,B.E. (2012) From measurement to implementation of meta-
bolic ﬂuxes. Curr. Opin. Biotechnol, 24, 13—21.

Boyle,P. (2007) Gaussian processes for regression and optimisation. Doctoral dis-
sertation. Victoria University of Wellington.

Boyle,P. and Frean,M. (2004) Multiple-output Gaussian process regression. In:
Technical report. Victoria University of Wellington.

Boyle,P. and Frean,M. (2005) Dependent Gaussian processes. Adv. Neural Inf.
Process. Syst., 17, 217—224.

Bryant,W.A. et al. (2013) Analysis of metabolic evolution in bacteria using whole-
genome metabolic models. J. Comp. Biol, 20, 755—764.

Chou,I-C. and Voit,E.O. (2012) Estimation of dynamic ﬂux proﬁles from metabolic
time series data. BM C Syst. Biol, 6, 84.

Colijn,C. et al. (2009) Interpreting expression data with metabolic ﬂux models:
predicting M ycobacterium tuberculosis mycolic acid production. PLoS
Comput. Biol, 5, l—l4.

Goel,G. et al. (2008) System estimation from metabolic time-series data.
Bioinfromatics, 24, 2505—2511.

Girard,A. (2004) Approximate methods for propagation of uncertainty with
Gaussian process models. Doctoral dissertation. University of Glasgow.

Haykin,S. and Moher,M. (2010) Communication Systems. 5th edn. Wiley, Asia.

van Heeswijk,W.C. et al. (2013) Nitrogen assimilation in Escherichia coli: puttin
molecular data into a systems perspective. M icrobiol Mol Rev., 77, 628—695.

Honkela,A. et al. (2010) Model-based method for transcription factor target iden-
tiﬁcation with limited data. Proc. Natl Acad. Sci. USA, 107, 7793—7798.

J ia,G. et al. (2011) Parameter estimation of kinetic models from metabolic proﬁles:
two-phase dynamic decoupling method. Bioinformatics, 27, 1964—1970.

Kirk,P. (2011) Inferential stability in systems biology. Doctoral dissertation.
Imperial College London.

Kirk,P. and Stumpf,M.P.H. (2009) Gaussian process regression bootstrapping.
Bioinformatics, 25, 1300—1306.

Klamt,S. and Stelling,J. (2003) Two approaches for metabolic pathway analysis?
Trends Biotechnol, 21, 64—69.

McKay,D.J.C. (1998) Introduction to Gassign processes. In: Bishop,C.M. (ed.)
Neural Networks and Machine Learning. NAT 0 A51 Series. Springer-Verlag,
pp. 133—165.

Neal,R.M. (1997) Monte Carlo implementation of Gaussian process models for
Bayesian regression and classiﬁcation. Arxiv Preprint Physics/9701026,
Technical report 9702, Department of Statistics, University of Toronto.

Nelder,J.A. and Mead,R. (1965) A simplex method for function minimization.
Comp. J., 199, 133—154.

Orth,J.D. et al. (2010) What is ﬂux balance analysis? Nat. Biotechnol, 28, 245—248.

Rasmussen,C.E. and Williams,C.K.I. (2006) Gaussian Processes for Machine
Learning. 1st edn. The MIT Press, Cambridge.

Roberts,M.J. (2008) Fundamentals of Signals and Systems. 1st edn. MC Graw Hill,
New York.

Rossell,S. et al. (2013) Inferring metabolic state in uncharacterized environments
using gene-expression measurements. PLoS Comput. Biol, 9, l—ll.

Schwartz,J-M. and Kanehisa,M. (2006) Quantitative elementary mode analysis of
metabolic pathways: the example of yeast glycolysis. BM C Bioinformatics, 7,
186.

Solak,E. et al. (2003) Derivative observations in Gaussian process models of dy-
namic systems. Adv. Neural Inf. Process. Syst., 15, 1033—1040.

Schumacher,J. et al. (2013) Nitrogen and carbon status are integrated at the tran-
scriptional level by the nitrogen regulator NtrC in vivo. MBio, 4, 1—9.

Schuster,S. et al. (1999) Detection of elementary ﬂux modes in biochemical net-
works: a promising tool for pathway analysis and metabolic engineering. Trends
Biotechnol, 17, 53—60.

Voit,E.O. and Almeida,J. (2004) Decoupling dynamical systems for pathway iden-
tiﬁcation from metabolic proﬁles. Bioinformatics, 20, 1670—1681.

Voit,E.O. (2013) Characterizability of metabolic pathway systems from time series
data. Math. Biosci., 5, 1—11.

Zamboni,N. (2011) 13C metabolic ﬂux analysis in complex systems. Curr. Opin.
Biotechnol, 22, 103—108.

 

1 898

112 /810's112umo[proarxo'sor1eu1101urorq//:d11q 1110131 pop1201umoq

9IOZ ‘091sn8nv uo ::

