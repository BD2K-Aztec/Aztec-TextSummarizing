APPLICA TIONS NOTE V0" 2305-1?hi4o§§$g£iiii§i§i§§§§

 

Genome analysis

Advance Access publication September 24, 2013

BlastGraph: a comparative genomics tool based on BLAST and

graph algorithms

Yanbo Ye1’2, Bo Well, Lei Wen“2 and Simon Rayner1’3’*

1Key Laboratory of Agricultural and Environmental Microbiology, Wuhan Institute of Virology, Wuhan, Hubei, China,
430071, 2Graduate School of Chinese Academy of Sciences, Beijing, China and 8Exiqon A/S, Vedbaek, Denmark

Associate Editor: John Hancock

 

ABSTRACT

Summary: BlastGraph is an interactive Java program for comparative
genome analysis based on Basic Local Alignment Search Tool
(BLAST), graph clustering and data visualization. The software gener-
ates clusters of sequences of multiple genomes from all-to-all BLAST
results and visualizes the results in graph plots together with related
information such as sequence features, gene conservation and simi-
larity relationships. Pruning algorithms are used to reduce results
to more meaningful subclusters. Subsequent analyses can then be
conducted based on the predicted clusters, including gene content,
genome phylogenetics and gene gain and loss.

Availability and implementation: https://github.com/bigwiv/
BlastGraph.

Contact: simon.rayner.cn@gmai|.com

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on March 28, 2013; revised on July 31, 2013; accepted on
September 19, 2013

1 INTRODUCTION

Sequence analysis, especially comparative genomics, often starts
with a sequence similarity search using standard tools such as
Basic Local Alignment Search Tool (BLAST) (Altschul et al.,
1990) or BLAT (Kent, 2002), and homology/orthology detection
and clustering using additional tools such as BLASTClust (in the
BLASTALL package), Clustering Database at High Identity with
Tolerance (CD-HIT) (Li et al., 2006), Inparanoid, OrthoMCL
(Markov Cluster Algorithm), EuKaryotic Orthologous Groups
(KOG) and TribMCL (Chen et al., 2007). Nevertheless, BLAST
remains the most widely used method and is central to the major-
ity of associated secondary packages. Additionally, although
there are many clustering tools based on BLAST and graph clus-
tering algorithms, including BLASTClust using single-linkage
clustering, OrthoMCL (Li et al., 2003) and TribMCL (Enright
et al., 2002) using the Markov Cluster algorithm (MCL) (Van
Dongen, 2000), these command line tools provide only a simple
clustering result. Currently, there is no single integrated tool avail-
able for post clustering analyses, such as phyletic pattern study,
genome level phylogenetics or gene gain and loss analysis. We
have developed BlastGraph for the generation and visualization
of clusters as a graph with accompanying statistics, evaluation
metrics and associated background information. The user can

 

*To whom correspondence should be addressed.

check the coherence of a cluster, identify useful relationships
(such as indels and fusion events) or gene types and interactively
split and edit the cluster. This is especially useful when remote
homologies with low similarities exist among sequences. Thus,
we present a user-friendly workﬂow (Supplementary Data S1)
for integrated comparative genomics analyses.

2 IMPLEMENTATION

BlastGraph uses several widely used programs and libraries for
implementation: BLAST, MCL, BioJava (Holland et al., 2008)
and JUNG (O’Madadhain et al., 2003).

2.1 Input data and graph creation

BlastGraph accepts BLAST extensible mark-up language (XML)
results generated from a GenBank file with multiple genomes as
input. For the GenBank file, all coding DNA sequences in the
genomes are extracted into a FASTA amino acid or nucleic acid
file with formatted information (Supplementary Data S2) in the
FASTA header. The FASTA file is then converted to a BLAST
database using and BLASTed to generate an XML result. One
or more BLAST XML (Supplementary Data S3) results with
different parameters can then be parsed and merged into an un-
directed graph, in which the vertices represent proteins or nu-
cleotides of coding DNA sequences and edges represent the
better sequence alignment of the reciprocal BLAST hits for
that pair of vertices. This graph can be saved in graph XML
format (Supplementary Data S4) and serves as raw data for clus-
tering and subsequent analysis. Although BlastGraph was ori-
ginally created to analyze large virus genome data, it is also
possible to be applied to bacteria data with bigger genomes
(Supplementary Data S9).

2.2 Graph clustering, ﬁltering and visualization

Normally, the raw graph from a BLAST result is too complex to
show any meaningful information. We use two strategies to
reduce the raw graph into smaller independent subgraphs:
MCL clustering and edge filtering.

The MCL algorithm is designed for graph clustering by ﬂow
simulation (Van Dongen, 2000) and is widely used for biological
network clustering (e.g. TribMCL, OrthoMCL) (Enright et al.,
2002; Li et al., 2003) as it can minimize effects introduced by mul-
tiple domains in a single protein or shorter ‘promiscuous’ domains
that have similar sequence but different function. In BlastGraph,
there are three steps for MCL clustering: (i) generation of a

 

3222 © The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com

112 /310's113umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq 11101; pep1201umoq

9IOZ ‘09 lsnﬁnv uo ::

BlastGraph

 

(a) main interface {b} gene content

Elle Halogen-.4
H. a 4 ' .1 — _. imam. ulnlagmn uumrn -

   
     

 

I -' In'n"-u I- 1' ' 'u--'.' '\-N .II .'\.

      
  
 

Gm him-mum???
He'displarins 3.1.71

global information .'_'_

abeul currently I?
-L

 

Graph Fund In Eda-:1. m1 _
K'I' I1“ . '" . I .
display  W*”5Wh“d;j:.,..  ;.' -_ _' : 2 . f . . :: : _ . _ _ 5 . a : l . . . . . . -
I pin-a. I sub [1 '

sequence cluem- m.“ m gm]: " ‘

“Wm-1,, mm fix/9 (c) phylogenetlc analysm

. . _ 'I'i‘u-O mule-null“ .- Slatiﬁtiﬂ

 H .— VIII-Ir ‘w-III' "IIIIHII a' ' I' I'lul'N'ur-I— (II-'iIﬂ-l Ih-III-IIII “"I'IIH IF "I'III'II'II-h'llr'l'ﬂll

a II-rurwr ImI-n Mum-III" I- ranian-m I rrrr mummy

' Infm'mmim Pam] » run-nun.

rclatinnnltips ' . a. u- .i "0
displayingseiecued 1 [

 

Marianna

 
     

Em panel I _ infurruutiun about 1 l m I
' .
lu display Plump-n m'm 3"" 39395 I
aﬂrihutca {If '-u' 1 “If.  1‘ '-"" Pr P 1 I - 
I I n u". -. a g! m
“Imd Rum“! . .. _..I. I.._ _,. __. H ....._ ..h I ...I. .. I. . ._I__:. ..__.. ..._.'. ... ._.. I. ..I.. m ‘_
l _ '_ '  - ' ": .' ' -  :_' " ' . . diSPlaﬁﬂEN-lﬁk

I-
Ell'lr Ii,“ Fl

W1dees  :j .I.

 

progress

 

 

Fig. 1. a) BlastGraph main interface showing the one cluster of the baculovirus data; (b) gene content window showing the presence time of different
gene families by summarizing all gene clusters; (c) genome phylogenetic analysis window showing the gene content tree and the gene gain and loss result

weighted graph in ‘abc’ format (O’Madadhain et al., 2003) from the
raw graph based on BLAST E—value or score; (ii) MCL clustering;
(iii) creation of subgraphs from the raw graph according to cluster-
ing results. At the first step, the user can specify the parameters for
weighting the graph (Supplementary Data S5), thus controlling the
granularity of the MCL results along with the inﬂation parameter
in the MCL algorithm.

Besides MCL clustering, edge filtering can serve as a supple-
mentary method to create sub graphs and achieve meticulous trim-
ming. We use several filtering criteria based on BLAST results (E-
value, score density, percentage identity, percentage positive and
three criterion of alignment coverage) to provide greater flexibility
for pruning the graph (Supplementary Data S6).

BlastGraph allows visualization and navigation of subgraphs
using the Java Universal Network/Graph (J UNG) graph library
(O’Madadhain et al., 2003) (Fig. 1). Each subgraph can be
customized by layout, user annotation and vertex colors to rep-
resent different attributes. Vertices and edges of a subgraph can
be selected to show the associated information and imported
data together with corresponding statistical analysis (Fig. 10)
to provide a comprehensive overview of the conservation of
gene families and gene relationships among different species,
and filtering and graph editing may be performed in the presence
of multiple gene families. This also makes it possible to identify
sequence similarities in more distantly related species.

2.3 Phyletic pattern and phylogenetics

After clustering and downstream analysis and processing, the final
result can be used to create a phyletic pattern (or profile) in the
form of a binary gene content matrix N, where ‘l’ or ‘0’ indicates
the presence or absence of a gene, respectively. Rows correspond
to genomes and columns correspond to gene families (i.e. element
N] of row i and column j corresponds to gene j in genome 1').
Based on the phyletic pattern, BlastGraph provides several
configurable methods to build the gene content trees. To calcu-
late the genome distance matrix, the Simple Matching, J eccard
Distance and the Snel (Snel et al., 1999) methods are imple-
mented (Supplementary Data S6). Two distance-based tree con-
struction algorithms (UPGMA, NJ) are implemented, and the
consensus tree can be viewed directly within the program. The

Bootstrap and Delete-Half Jackknife methods are used to esti-
mate the tree branch support (Supplementary Data S7).

2.4 Core gene and ancestor estimation

The aforementioned features also facilitate the identification of
core genes or branch-speciﬁc genes and the estimation of an
ancestor genome (gene gain and loss) among different species,
two important tasks in comparative genomics that can provide
insight into function and phenotype changes or speciation his-
tory during evolution. In the tree window (Fig. 1), they can be
conducted by the simple mapping and the Dollo parsimony
method, respectively, and the result can be mapped on to the
gene content tree (Supplementary Data S8).

3 CONCLUSION

BlastGraph is a user-friendly tool for comparative genomics
analyses such as homologous sequence identification and cluster-
ing, phyletic patterns, genome phylogenetics, core gene identifi-
cation and gene gain and loss. The workﬂow implemented in
BlastGraph provides an enhanced and convenient environment
that allows researchers to address speciﬁc questions relevant to
genome comparison and evolution.

ACKNOWLEDGEMENTS

The authors would like to thank all members in the bioinfor-
matics group and Dr James Adams for their valuable comments
and suggestions.

Funding: 973 program [2012CB721102] and CAS project
[KSCX2-EW-Z—3].

Conﬂict of Interest: none declared.

REFERENCES

Altschul,S.F. et al. (1990) Basic local alignment search tool. J. Mol. Biol., 215,
403—410.

Chen,F. et al. (2007) Assessing performance of orthology detection strategies
applied to eukaryotic genomes. PloS One, 2, e383.

 

3223

112 /310's113umo [pJOJXO'SOIlBIIIJO}UIOIQ//Zdllq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

Y.Ye et aI.

 

Enright,A.J. et a]. (2002) An efficient algorithm for large-scale detection of protein
families. Nucleic Acids Res., 30, 1575—1584.

Holland,R.C.G. et al. (2008) BioJava: an open-source framework for bioinfor-
matics. Bioinformatics, 24, 2096—2097.

Kent,W.J. (2002) BLATithe BLAST-like alignment tool. Genome Res., 12,
656—664.

Li,L. et al. (2003) OrthoMCL: identiﬁcation of ortholog groups for eukaryotic
genomes. Genome Res., 13, 2178—2189.

Li,W. et al. (2006) Cd-hit: a fast program for clustering and comparing large sets of
protein or nucleotide sequences. Bioinformatics, 22, 1658—1659.

O’Madadhain,J. et al. (2003) The Jung ( Java Universal Network/Graph)
Framework. University of California, Irvine, California.

Snel,B. et al. (1999) Genome phylogeny based on gene content. Nat. Genet, 21, 108—110.

Van Dongen,S.M. (2000) Graph clustering by ﬂow simulation. PhD thesis,
University of Utrecht, http://micansorg/mcl/.

 

3224

112 /310's113umo [pJOJXO'SOIlBIIIJO}UIOIQ//Zdllq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

