ORIGINAL PAPER

Vol. 30 no. 11 2014, pages 1547—1554
doi: 10. 1 093/bioinformatics/btu0 79

 

Gene expression

Advance Access publication February 11, 2014

An efficient algorithm for accurate computation of the
Dirichlet-multinomial log-likelihood function

Peng Yu” and Chad A. Shaw2’*

1Department of Electrical and Computer Engineering & TEES—AgriLife Center for Bioinformatics and Genomic Systems
Engineering (CBGSE), Texas A&M University, College Station, TX 77843, USA and 2Department of Molecular and Human
Genetics, Baylor College of Medicine, Houston, TX 77030, USA

Associate Editor: lnanc Birol

 

ABSTRACT

Summary: The Dirichlet-multinomial (DMN) distribution is a fundamen-
tal model for multicategory count data with overdispersion. This dis-
tribution has many uses in bioinformatics including applications to
metagenomics data, transctriptomics and alternative splicing. The
DMN distribution reduces to the multinomial distribution when the
overdispersion parameter w is 0. Unfortunately, numerical computation
of the DMN log-likelihood function by conventional methods results in
instability in the neighborhood of w = 0. An alternative formulation cir-
cumvents this instability, but it leads to long runtimes that make it
impractical for large count data common in bioinformatics. We have
developed a new method for computation of the DMN log-likelihood to
solve the instability problem without incurring long runtimes. The new
approach is composed of a novel formula and an algorithm to extend
its applicability. Our numerical experiments show that this new method
both improves the accuracy of log-likelihood evaluation and the run-
time by several orders of magnitude, especially in high-count data
situations that are common in deep sequencing data. Using real meta-
genomic data, our method achieves manyfold runtime improvement.
Our method increases the feasibility of using the DMN distribution to
model many high-throughput problems in bioinformatics. We have
included in our work an R package giving access to this method and
a vingette applying this approach to metagenomic data.

Availability and implementation: An implementation of the algorithm
together with a vignette describing its use is available in
Supplementary data.

Contact: pengyu.bio@gmail.com or cashaw@bcm.edu
Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on August 19, 2013; revised on December 10, 2013;
accepted on January 31, 2014

1 INTRODUCTION

The analysis of count data (Cameron and Trivedi, 2013;
Winkelmann, 2008) or categorical data (Agresti, 2002) is an
important topic in statistics and has a wide variety of applications
in bioinformatics. The advent of high-throughput sequencing
technologies (Metzker, 2010) provides unprecedented opportu-
nities for investigating new and more powerful analysis methods
on count data (Anders and Huber, 2010; Robinson et al., 2010).

 

*To whom correspondence should be addressed.

The Poisson distribution is a basic distribution for modeling
count data. An important property of the Poisson distribution is
that the mean and variance are the same, which is called equi-
dispersion. However, the mean and the variance of real count
data are often not the same; in fact, the variance is often greater
than the mean. This makes the Poisson distribution not ideal for
analyzing such data because the equidispersion assumption is
violated. The phenomenon where a dataset exhibits greater vari-
ance than what would be expected in a statistical model is called
overdispersion. A commonly used overdispersed model for the
Poisson distribution is the negative-binomial distribution. This
distribution has been extensively studied in Hilbe (2011) and is an
indispensable model for high-throughput sequencing data
(Anders and Huber, 2010).

Another fundamental model in count data analysis is the
multinomial (MN) distribution, which is useful for analysis of
count proportions among multiple categories. One important use
case of the MN distribution is Fisher’s exact test of contingency
tables (Fisher, 1973; Mehta and Patel, 1986), which has been
used in the analysis of alternative 3’ UTR utilization WV an,
2012) and splicing (Lu et al., 2013), as well as
metagenomics (Gomez-Alvarez et al., 2012). In the regression
context, MN logistic regression is also commonly used
(Agresti, 2002). However, real data often exhibit heterogeneity
that is usually thought to be caused by dependencies or the simi-
larity of responses of members of the same cluster in cluster
sampling (Brier, 1980). This leads to extra-multinomial variation
(Haseman and Kupper, 1979), i.e. overdispersion with respect to
the MN distribution.

The modeling of overdispersion of the MN distribution has
been addressed by extending the MN distribution to the
Dirichlet-multinomial (DMN) distribution (Mosimann, 1962;
Poortema, 1999). The beta-binomial (BB) distribution—a special
case of the DMN distribution with only two categories—has
been studied by many (Crowder, 1978; Kleinman, 1973;
Skellam, 1948). Because of its ﬂexibility and its mathematical
convenience, the DMN distribution is widely applied to diverse
ﬁelds, such as topic modeling (Mimno and McCallum, 2008),
magazine exposure modeling (Leckenby and Kishi, 1984; Rust
and Leone, 1984), word burstiness modeling (Madsen et al.,
2005), language modeling and (MacKay and Bauman Peto,
1994) multiple sequence alignment (Brown et al., 1993;
Sjolander et al., 1996). Bouguila (2008) also considered a gener-
alization of the DMN distribution and applied it to count data

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 1547

112 ﬂJO'smumo[pJOJXO'sopchOJuioiq/ﬁd11q IIIOJJ pepcolumoq

910K ‘09 lsnﬁnV no :2

P. Yu and C.A.Shaw

 

clustering. Another related distribution for handling overdisper-
sion is the Dirichlet negative MN distribution (Mosimann, 1963)
allowing the modeling of correlated count data without an upper
bound, which has many possible uses in biostatistics and bio-
informatics (Farewell and Farewell, 2013).

Likelihood functions play a key role in statistical inference
(Casella and Berger, 2002). For example, likelihood functions
can be used for parameter estimation, hypothesis testing and inter-
val estimation. In the context of the DMN distribution, there has
been recent research to investigate the Fisher information matrix
(Paul et al., 2005) and maximum likelihood estimation (MLE)
(Neerchal and Morel, 2005). Not all statistical inference methods
are based on likelihood functions. For instance Kim and Margolin
(1992) developed a method for testing the goodness of ﬁt of the
MN distribution against the DMN distribution based on the C(01)
test statistic (Tarone, 1979), a ﬂexible framework built on the
likelihood approach that enables the analysis of complex experi-
mental designs (McCullagh and Nelder, 1989) that frequently
appear in genomic and bioinformatics studies.

In this article, we study the fundamental problem of the evalu-
ation of the DMN log-likelihood function. In Section 2, we dem-
onstrate the instability and runtime problems of two existing
methods for computing the DMN log-likelihood function and
propose a novel parameterization of the log-likelihood function
to allow smooth transition from the overdispersed case (the DMN
distribution) to the non-overdispersed case (the MN distribution).
For this new parameterized form, in Section 3 we introduce a new
formula based on a truncated series consisting of Bernoulli poly-
nomials. In Section 4, a mesh algorithm is devised to increase the
applicability of this new formula. In Section 5, we show numerical
results of the mesh algorithm, conﬁrm its stability and runtime
improvements. Finally, we applied our method to human micro-
biome data and demonstrated its large performance improvement
over the most accurate existing method.

2 DMN DISTRIBUTION

The DMN distribution, a.k.a., the compound MN distribution
(Mosimann, 1962), is an extension of the MN distribution. The probabil-
ity mass function (PMF) of the K categories MN distribution of N—inde—
pendent trials is given by

f 0N» M ﬁve m
MN 9 9 = — k
“1:1 xk! k=1

where n! denotes the factorial of a non-negative integer n; the observa-
tions x = (x1, ..., xK), satisfying 2le xk = N, are non-negative integers;
and p = (p1,...,pK), satisfying 2le pk = 1, are the probabilities that
these K categories occur.

The DMN distribution can be generated if the probabilities p follow a

prior distribution (of the positive parameters or = (051, . . . , 05K» conjugate
to the PMF fMN(x; N, p) (Bishop, 2006)

K
fDir(P; 05) 0C “Pin—1
i=1

This distribution is called the Dirichlet distribution whose normalized
form is

K
1mmm=fw)nﬁﬂ m
n I‘(060 i=1
i=1

 

where I‘(x) is the gamma function and A = 1 04,-.

The PMF of the DMN distribution is derived by taking the integral of
the product of the Dirichlet prior (2) and the MN likelihood (1) with
respect to the probabilities p (Mosimann, 1962),

N! I‘(A) K r(ak+xk)

 

x; Ma 2 3
EW( ) K Fm+mﬂ mm ()
l_I xk!
k=1
where, same as the MN distribution, x = (x1, ..., xK) are non-negative

integers, satisfying N = 2le xk. The DMN distribution reduces to the
BB distribution when there are only two categories (K = 2).

The ﬁrst term on the right side of (3) does not depend on the parameter
or. For common uses of the likelihood function in statistics, e.g. in the
maximum-likelihood estimation, we are not interested in the ﬁrst term
but in the product of the remaining two terms, i.e. we are interested in the
last two terms of the DMN likelihood function in (3)

mm KN%+M)
FM+Mh1FMJ

By taking the logarithm of both sizes of (4), we get the log-likelihood
function

 

£(Ot; x) = (4)

ln cm; x) = — (ln I‘(A + N) — ln I‘(A))

K

+§janr0k+x0—Jnrma) (3
k=1

When A —> 00, it can be shown that the DMN distribution is reduced to

the MN distribution. As 10 = 1 /A becomes 0 under this limit, it is con-

venient to use the parameter 10 instead of A.

The parameter (0 characterizes how different a DMN distribution is
from the corresponding MN distribution with the same category prob-
abilities. The greater the parameter 10, the greater the difference. This
additional parameter gives the DMN distribution the ability to capture
variation that cannot be accommodated by the MN distribution. We call
10 the overdispersion parameter in this article, with the understanding that
the greater the 10, the greater the variance. As an example, Figure 1 shows
that increasing the dispersion parameter (0 of the BB dispersion increases
the variance of the count of the ﬁrst category x1. Using 10 = l/A, (5)
becomes

1n£(P,10;x) = -(1nF(1/10 + N) -1n Ill/10))

K t )- (9) ‘6)
+;(1nF(l/pk+xk 1111“ l/pk

 

0.25 —

0.20 —

1P

0.15 — ° 0
'8 A 0.1
H
9-1

0.10 — u 0.2

+ 0.3
0.05 —
0.00 —
| | | | |
0.0 2.5 5.0 7.5 10.0
:31

Fig. 1. The PMFs of a family of the BB distributions (N: 10) with dif-
ferent dispersion parameters 10. The spread of the distributions increases
with the dispersion parameter, whereas the mean remains constant

 

112 /810's112umo[pJOJXO'sor1chOJurorw/2d11q 11101; pepcolumoq

910K ‘09 lsnﬁnV no :2

High-perfonnance DMN log-likelihood function computation

 

0.00025 -

0.00000 -

log-11k error

-0.00025 -

-0.00050 - I I I
2.5e—11 5.0e—11 7.5e—11 1.06-10

Fig. 2. The function implementing (6) is unstable when 10 approaches 0.
The parameters are x = (2, 3, 1) andp = (.2, .3, .5)

where p = 1005. One shortcoming of (6) is that it is undeﬁned for 10 = 0.
Hence, R (R Core Team, 2013) functions implementing (6), such as
di rmult () from dirrnult (Tvedebrink, 2009) and betabin () from
aod (Lesnoff and Lancelot, 2012), return NaN when 10 = 0. Another
shortcoming of (6) is that as 10 —> 0 the function implementing (6) is
unstable as shown in Figure 2.

Alternatively, the likelihood representation used in the method in the
R package VGAM (Y cc, 2010, 2012; Yee and Wild, 1996), (4) can be
written as

n}; n22. (on. + (r — 1»
115:. (A + (r — 1))

2 H1521 Hf:1(Apk + (r — 1))

nil—01 (A + (r — 1»
_ 11:11 112:. (Hap. + 

115:? (1%. + 1:1.)
2 11152111210120 — p) + (r — up)
115:. ((1 — p) + (r —1)p)

where p = 1 / (1 + A) is the overdispersion parameter deﬁned therein,
which is different from our deﬁnition of the overdispersion parameter
(0 in (6). The log-likelihood function can be written as

K xk
1n£(p,p;x) = zzlneka — p) + (r —1)p)

k=1 r=1

N
- Zln((1- 10)+(r - 1)10)
r=1

 

£(a; x) =

 

 

 

 

(7)

When there is 0 overdispersion (p = 0), (7) reduces to the MN log-like-
lihood and it is numerically stable when p —> 0. But the number of terms
on the right side of (7) is proportional to N. When N is large, the runtime
is long.

3 APPROXIMATION OF PAIRED LOG-GAMMA
DIFFERENCE

We see that (6) consists of paired lnP differences, such as
lnF(1/1p+N)—lnF(1/1p). When «p is close to 0, each lnP

term becomes exceedingly large, but the paired differences
become relatively small. Because of the limited precision of the
ﬂoating-point arithmetic (IEEE Task P754, 2008), the large
terms cancel and the result is left with large errors. We solve
this large error problem by a new approximation to the lnl‘
difference. Let us consider ln P(z + a) and ln P(z). Rowe (1931)
showed that ln P(z + a) (z and a are complex numbers) can be
asymptotically expanded as

lnF(z+a) = (2+a—l) lnz—z+%ln(27t)

2
m n (8)
Z (—1) EM) _m
+n=2W+O(Z ),aSZ—>OO

where Bn(a) denotes the nth Bernoulli polynomial. The term
O(z"") means that, for any ﬁxed m, the error of the right side
of (8) (with the term O(z"") removed) as an approximation to
log P(z + a) is bounded by 2"" times some constant as z —> 00.
Let a = 0,

ln F(z) =(Z —  lnz — z + %1n(27r)

m (—1)an —m
+ g—nm _1)Zn_1+ (9(2 ), as z —> 00

where 3,, denotes the nth Bernoulli number (3,, = B” (0)). Let
z = 1 /x and a: y, the difference between the above two equa-
tions is

In r(1/x +y) — 1n1‘(1/x) = — ylnx + iﬂﬂl (9)
n=2

+ (9(xm), as x —> 0
where
(1)1101) = 3110/) _ Bn 

is the old type Bernoulli polynomial Whittaker and Watson,
1927). The inﬁnite series

Decay) = gWﬂ-l (11)

converges absolutely when y is an integer and
|x|min(|y— 1|, |y|)<1 (Freitag and Busam, 2009). Note that
x=0 is a removable singularity of In F(1/x+ y)—
ln F(1/x) + yln x. Using the properties of analytic functions,
we have (Freitag and Busam, 2009)

In F(l/x +y) — lnF(1/x) = —ylnx +Doo(x,y) (12)

Therefore, for any integer y, we can use the following
approximation

lnF(1/x+y) —lnF(l/x) % —ylnx+Dm(x,y) (13)

when y is an integer and |x| min(|y — 1|, |y|)<1 and

Dm<x, y) = 2:23—(;(1I2f”1()”x"-1 (14)

 

112 /810's112umo[pJOJXO'sor1chOJurorw/2d11q 11101; pepcolumoq

910K ‘09 lsnﬁnV no 22

P. Yu and C.A.Shaw

 

The error is bounded by

°° 1

Z n_ 13" (15)

n=m+1

 

if |x| min(|y — 1|, |y|) < 8, where 8 is a constant <1. For the appli-
cation of computing the DMN log-likelihood function, we have
x Z 0 and y 6 IV“. So we instead require

xy 5 8 (16)

for simplicity.

The error bound (15) can be arbitrarily small for arbitrarily
large m without considering the numerical errors in computing
the Bernoulli polynomials (1),,(12). In practice, high order polyno-
mials are difﬁcult to compute using ﬂoating-point arithmetic
(Lauter and Dinechin, 2008). Because the subscript n equals
the order of the Bernoulli polynomial 0),,(12), if m is too large,
the error of each terms of Dm(x, y) may actually be large, which
makes Dm(x, y) inaccurate. Hence, we do not want too many
terms in (14). So we choose m=20 such that 0),,(12) (n 5 m) are
still numerically accurate. We also do not need the error bound
(15) to be smaller than the machine epsilon of the double pre-
cision data type (W 2.22 x 10‘“). Therefore, we choose 8 = 0.2,
which leads to an error bound of ~1.30 x 10‘“, which is a little
less than the machine epsilon.

4 THE MESH ALGORITHM FOR COMPUTING THE
DMN LOG-LIKELIHOOD

We apply (13) to compute the DMN log-likelihood function (6).
To cope with the requirement (16), by using the idea of analytic
continuation (Freitag and Busam, 2009), we introduce a mesh
algorithm and allow the computation of the DMN log-likelihood
using the approximation (13) in the whole parameter domain of
the DMN log-likelihood function. First, we study ln £(p, «p; x) in
(6) in detail. Let x+ be the vector of the non-zero elements in x,
p+ be a vector of the corresponding elements in p and K“ be the
length of x+, then (6) becomes

111£(P,1ﬂ;x) = — (1n r<1/w+ N) — 1n F0012)

>1:

K+ (17)
+2 1nr(1/ w +xg) —1nr(1/i+)

 

12:1 Pi! Pk ,
= ln£(p+,1p; x+).
When
«ﬁx; 5 812:, (18)

after taking the sum over k on both sides, we have

K+
«W s 6:12;: 8 (19)
k=1

Therefore, the (*) term and all the K“ (**) terms in (17) meet the
condition (16). Then the approximation (13) can be used for all
K+ + 1 paired In F differences in (17),

In £(p+a  x+) m  I0 +  

K+
+ Z (—x,: ln(pi+) + Dm %,x;))
k=1 k k

K+
= _me, N) + Z (x; 111p; + Dm  , peg»
k=1 k
(20)

When some of the K“ (**) terms in (17) do not meet the con-
dition (18), we can rewrite the vector x into the sum of L terms
choosing the terms to meet this condition

L

x 2 Ex“) (21)

[:1

We describe the choice of x“) below. For convenience, we
deﬁne

l
a<l>=a+zx<i>, forl=0,...,L (22)
i=1

Note that we have the following relation between the adjacent
(l)’
01 s,

010—1) + x0) = a“), for l: 1, ...,L, (23)
01'
p(l_1)/1ﬂ(l_1) + x0) =p(D/1ﬂ(l), for l: 1, ...,L (24)

By taking the sum of all the elements in each vector in (22), we
have

1 1 ’ .
_—_ l) _
w(0_w+ZN(,forl_0,l,...,L (25)
1:1
where l/wa) = 101%!) and N") 2 1x3). Or we write it as
l l
W=W+N<D,forz=1,...,L (26)

Strictly speaking, (25) is undeﬁned for «p = 0, but when «p = 0,
all 100) should be Os. To make (25) numerically valid for all
«p e [0, + 00), we write

1 .
i=1
()0) = II _ (27)
i=1
Similarly, for p, we have
2 ’ xo)
—;(+Z;=1N@ if 11 3 1
(I) _ W+Zi=1
_ ’ 0 (28)
—”+‘”Z;=1x 110 5 1p<1
1+wzi=1 N0)

 

112 /810's112umo[p101x0'sor112u1101u101q/ﬁd11q 111011 pepcolumoq

910K ‘09 lsnﬁnV no 22

High-perfonnance DMN log-likelihood function computation

 

 

 

 

 

 

 

 

X1
01! A ‘ +
r I I r “1 X1
/
I | I ’3
/
a2I I I /
i i Y ? faz+X2
I X I1 2, / 3
I 3 I ’/
G31 1 -“’a +x
I I h 3 3
0| | \ x
I I1 2“ ‘3
a I I x
4: e ‘: ‘: cr4+x4
\ I
Y
X4

Fig. 3. A graphical depiction of the mesh algorithm for evaluation of the
log-likelihood in (29). The count in the ith category is represented by a
line segment and can be partitioned into a sum of L = 3 sub-counts rep-
resented by sub-segments. At points connected by the dashed lines (05(1)),
the DMN log-likelihood can be evaluated using (20), and there are three
such evaluations in this example

Then’ 11$ng (24) and (26), (6) can be broken into a sum of L
log-likelihoods,

1115(1), w; x)

= — 2:1 (1n +  _ 1n

+ 21:1 21:1 (lnF(Pg_1)/I”(I_l) + x1?) — 1n F(pg—1)/Ip(l—1)))

2 21:1 (— (1nF(1/w("1)+ N9) — 1111*(1/110—0»

+ E; (1nF(p§."”/ 10‘”) + x1?) —1nF(p§."”/w<’—1>)))

= 1 1,150,114), 1111—1); x10)

2 11n£(p(1—1)+1Ip(1—1); x(l)+)
(29)

The sum in (29) is used in our algorithm to evaluate the log-
likelihood function. We can always increase L and set x“) intel-
ligently, so that the condition (16) is satisﬁed for all the terms in
the last formula in (29). In this case, each of the L terms in (29)
can be computed using (20). This means that the log-likelihood
function ln£(p,1p; x) can be evaluated incrementally on a mesh
(Fig. 3). Hence, we name this method the mesh algorithm. Note
that there can be many ways to generate the mesh. We describe
below how the mesh is generated in our implementation. We ﬁrst
create an initial mesh with the following scheme

xg’) = 1011-031, for 1: 1, ...,L (30)

where H denotes the ﬂoor function. The level of mesh L is
chosen so that it is the smallest integer satisfying

L
Ex?)be foralli=1,...,K (31)
1:1

 

 

 

0.00025 — 53 
:3 --
1.: _
0 0.00000 _ mesh
ﬁ
50 aod,djrmult
.2
0.00025 —
—0.00050 —

I I I I
2.56-11 5.06-11 7.56-11 1.0e-10
1P

Fig. 4. The ﬁgure presents a comparison of methods for evaluation of the
DMN log-likelihood function when the dispersion parameter 10 varies.
For the mesh algorithm, the evaluation is accurate and stable when the
dispersion parameter 10 approaches 0. The aod(dirmult) algorithm is un-
stable. The parameters are x = (2, 3, 1) and p = (.2, .3, .5)

This initial mesh needs to be adjusted because the end of the
mesh should total to match x,- exactly. To do so, let L;- be the
smallest number satisfying

L;
ng’) 2x1, forz': 1, ...,K (32)
[:1

We adjust ngi) so that  x?) = x,-. For each i, all the re-
maining x?) (l> Lg) are set to 0. With this adjusted mesh, we can
use the approximation (20) to compute the DMN log-likelihood
(29). Figure 3 shows an example with L = 3. The 3 segments of x2
is 0; hence, there are only two non-zero segments as shown. x1, x3
and x4 are broken into three non-zero segments. The last non-
zero segments of all the four lines are adjusted so the segment
sums equal x,- (z' = 1, 2, 3, 4), respectively.

Note that the time complexity of the mesh algorithm is pro-
portional to 1 Li’ ~ 1longr, which is smaller than
1 x,- = 1 x?“, the time complexity of (7) (VGAM). The
difference becomes especially prominent for high count data
(Figs 6 and 8).

5 THE NUMERICAL RESULTS

We implemented the mesh algorithm for computing the DMN
log-likelihood in C++. In this section, we demonstrate the ac-
curacy and runtime of the mesh algorithm. All experiments were
run on a Linux machine with a 4-core Intel Xeon CPUs E5630@
3.53 GHz. Each log-likelihood function call is single-threaded.

In contrast to Figure 2, Figure 4 shows that the mesh algo-
rithm is numerically stable when «p approaches 0.

 

112 /810's112umo[p101x0's01112u1101u101qﬂ2d11q 111011 pepcolumoq

910K ‘09 lsnﬁnV no 22

P. Yu and C.A.Shaw

 

2000 -

1000 -

 

A
<1 I: EIEIEIEKEI
T
S I: III I:
T: “'3' El VGAM
o _
1: 0 W—m— m—v ——n ><><
‘9 x mesh
g III: I: III
is” I: I: I: x
-1000- I:
1:1 I:
-2000—
1:1
I | | | I
0 2500 5000 7500 10000
n

Fig. 5. The error of the mesh algorithm is smaller than the error of the
method in VGAM. The error of the aod(dirmult) algorithm is larger than
the scale presented. The parameters are x = n(1, 1, 1, 1), 10 2 1/200 and
p = (.1, .2, .3, .4)

TL
100 1000 10000 1e+05 1e+06 le+07
o
100- El:
’8 o
O.)
(I)
3.
V O
.E 10‘ . g
H
5 ; .I.
_._ -o-
1' 4— 4' +
O
-O-
| | | | | | | | | | | |
a E a E a a a E a E
d.) d) d) 0) d) 0.)
(D (D (D (D (D (D
a > a > a > a > a > a >

Fig. 6. The mesh algorithm is much faster than the algorithm in VGAM
for the DMN log-likelihood computation. The parameters are
x = n(1, 2, 3), p = (1/6,1/3,1/2) and 10 = 1/60. The computation using
VGAM is only up to n = 1 x 105, as it takes too much runtime when n is
beyond this point. Each boxplot represents 100 DMN log-likelihood
evaluations

We compute the error of the mesh algorithm by comparing its
results with the results of an implementation of (4) in Sage
(Stein et al., 2012), which can achieve arbitrarily high accuracy.
Figure 5 compares the error of the mesh algorithm and the error
of the method in VGAM. We can see the mesh algorithm is more
accurate.

Figure 6 shows that the runtime of the mesh algorithm in-
creases more slowly as the counts 11 increase than the method
in VGAM. Note that only R code is used to implement the
method in VGAM, whose speed can be improved by using
C++. However, its runtime scalability with respect to the par-
ameter n is intrinsic to the representation of the log-likelihood
function (7) and independent of the implementation. The slower
increase of runtime is especially important for the high count that
is typical in contemporary high-throughput sequencing datasets.

Sample
5

 

I—an-bmoqooxo

HNMVI'WOFOOQOHNMVWOFOOGO
I—tv—IHv—II—iu—II—II—tv—IHN

a
Taxa
Fig. 7. The heatmap of the saliva 16S rRNA pyrosequencing dataset.

Each row represents a sample and each column represents a taxa. The
brighter the color, the higher the proportion of the taxa within the sample

6 BIOINFORMATICS APPLICATION

We demonstrate below the application of our new method in
analyzing human microbiome data from the Human
Microbiome Project clinical production pilot study (The NCBI
BioProject website, 2010). This dataset consists of the pyrose-
quencing of 16S rRNA genes in samples from four body sites,
namely, saliva, throat, tongue and palatine tonsil of 24 human
subjects (Rosa et al., 2013). The sequences obtained from the
V1—V3 and V3—V5 variable regions of the 16 S ribosomal
RNA gene are classiﬁed into the 20 most abundant taxa at the
genus level and the remaining sequences are classiﬁed as the 2lst
taxa (La Rosa et al., 2012). Figure 7 shows the taxa distribution
with each sample of the saliva dataset.

On real datasets, the mesh algorithm is much faster than the
algorithm in VGAM. For example, the mesh algorithm improves
the speed by over 50x on the saliva dataset (Fig. 8).

Because the C(a)—based test (Kim and Margolin, 1992) rejects
the hypothesis that the data from any of the four body sites are
distributed according to the MN distribution (the P—values are 0
for all the four body sites), we use the DMN distribution to
model each of the four datasets. Table 1 shows the maximum
likelihood estimates of the dispersion parameters «1 for the data
from all four body sites.

7 DISCUSSION

Overdispersion is important and needs to be accommodated in
modeling count data. To handle overdispersion in MN data, the
DMN distribution is commonly used. The numerical computa-
tion of the log-likelihood function is important for performing
statistical inference using this distribution. Previous work has
provided useful methods for this calculation, but the require-
ments of bioinformatics are difﬁcult to satisfy. Our method
solves the accuracy and runtime challenges.

 

1552

112 /810's112umo[p101x0's01112u1101u101qﬂ2d11q 111011 pepcolumoq

910K ‘09 lsnﬁnV no 22

High-perfonnance DMN log-likelihood function computation

 

100 — P
C
=
’8
d.)
U}
3;
o 10 -
E
E
B
O
1 _
_—
| |
mesh VGAM

Fig. 8. The mesh algorithm is much faster than the algorithm in VGAM
on the saliva dataset. The parameters are p = (0.195, 0.147, 0.117, 0.088,
0.065, 0.054, 0.041, 0.033, 0.026, 0.022, 0.019, 0.017, 0.015, 0.014, 0.012,
0.011, 0.009, 0.009, 0.008, 0.007, 0.090) and 1b = 0

Table 1. The MLE of the dispersion parameters of the 16S
rRNA pyrosequencing data from all four body sites

 

 

Body site 10

Saliva 0.00389
Throat 0.00639
Tongue 0.00802
Tonsils 0.01039

 

Overdispersion is commonly found in high-throughput
sequencing data. The overdispersed Poisson model (the nega-
tive-binomial distribution) has been used to detect differential
gene expression. However, the DMN distribution has seen lim-
ited use in analyzing high-throughput sequencing data, possibly
because the existing methods based on the DMN distribution did
not anticipate the high counts and the vast amount of such count
tables extracted from the high-throughput sequencing
technologies.

To overcome the instability problem and the runtime problem
of the existing methods for computing the log-likelihood, we
derived a new approximation of the DMN log-likelihood func-
tion based on Bernoulli polynomials. Using a novel mesh algo-
rithm, we are able to compute the log-likelihood for any
parameters in the domains of the log-likelihood function.
Comparing with the existing methods, the mesh algorithm is
more accurate and is much faster. We demonstrate the applica-
tion of the new method in analyzing human microbiome data
with a large runtime improvement. This method is generally ap-
plicable to other scenarios involving proportions, such as alter-
native exon utilization WVang et al., 2008) and alternative poly-A
utilization (Lutz and Moreira, 2011). For example, suppose we
have 10 000 alternative splicing events that need to be tested and
each test requires 1000 log-likelihood function evaluations. Our
method can reduce the runtime to hours instead of potentially
days. This work paves the way for application of the DMN

distribution to model overdispersion in large-scale count data
available in the high-throughput sequencing era.

Funding: This work was supported by Baylor College of
Medicine Computational and Integrative Biomedical Research
grant internal funding for CAS (January 2013—June 2013) as
well as National Institute Health U54CA149196 to M. Lewis
and the startup funding to PY from the ECE department and
Texas A&M Engineering Experiment Station/Dwight Look
College of Engineering at Texas A&M University.

Conflict of Interest: none declared.

REFERENCES

Agresti,A. (2002) Categorical Data Analysis. Wiley Series in Probability and
Statistics. 2nd edn. Wiley-Interscience, Hoboken, New Jersey.

Anders,S. and Huber,W. (2010) Differential expression analysis for sequence count
data. Genome Biol, 11, R106.

Bishop,C.M. (2006) Pattern Recognition and Machine Learning. Information Science
and Statistics. Springer.

Bouguila,N. (2008) Clustering of count data using generalized Dirichlet multinomial
distributions. IEEE Trans. Knowl. Data Eng., 20, 462—474.

Brier,S.S. (1980) Analysis of contingency tables under cluster sampling. Biometrika.,
67, 591—596.

Brown,M. et al. (1993) Using Dirichlet mixture priors to derive hidden Markov
models for protein families. In: Proceedings of the First International Conference
on Intelligent Systems for Molecular Biology. AAAI Press, pp. 47—55.

Cameron,C.A. and Trivedi,P.K. (2013) Regression Analysis of Count Data.
Econometric Society Monographs. 2nd edn. Cambridge University Press,
Cambridge.

Casella,G. and Berger,R. (2002) Duxbury advanced series in statistics and decision
sciences. In: Statistical inference. Thomson Learning, Paciﬁc Grove, CA.

Crowder,M.J. (1978) Beta-binomial ANOVA for proportions. Appl. Stat., 27,
34—37.

Farewell,D.M. and Farewell,V.T. (2013) Dirichlet negative multinomial regression
for overdispersed correlated count data. Biostatistics., 14, 395—404.

Fisher,R.A. (1973) Statistical Methods for Research Workers. 14th edn. Hafner
Publishing Company, Edinburgh.

Freitag,E. and Busam,R. (2009) Complex Analysis. 2nd edn. Springer.

Gomez-Alvarez,V. et al. (2012) Metagenome analyses of corroded concrete waste-
water pipe bioﬁlrns reveal a complex microbial system. BM C Microbiol, 12,
122.

Haseman,J.K. and Kupper,L.L. (1979) Analysis of dichotomous response data
from certain toxicological experiments. Biometrics., 35, 281—293.

Hilbe,J.M. (2011) Negative Binomial Regression. 2nd edn. Cambridge University
Press, Cambridge, UK.

IEEE Task P754. (2008) IEEE 754-2008, Standard for Floating-Point Arithmetic.
IEEE, New York, NY.

Kim,B.S. and Margolin,B.H. (1992) Testing goodness of ﬁt of a multinomial model
against overdispersed alternatives. Biometrics., 48, 711—719.

Kleinman,J.C. (1973) Proportions with extraneous variance: single and independent
sample. J. Am. Stat. Assoc, 68, 46—54.

La Rosa,P.S. et al. (2012) Hypothesis testing and power calculations for taxonomic-
based human microbiome data. PLoS One, 7, e52078.

Lauter,C. and Dinechin,F.D. (2008) Optimizing polynomials for ﬂoating-point im-
plementation. In: Proceedings of the 8th Conference on Real Numbers and
Computers, Santiago de Compostela, Spain.

Leckenby,J.D. and Kishi,S. (1984) The Dirichlet multinomial distribution as a
magazine exposure model. J. Mark. Res., 21, 100—106.

Lesnoff,M. and Lancelot,R. (2012) aod: Analysis of Overdispersed Data. R package
version 1.3.

Lu,X. et al. (2013) Son connects the splicing-regulatory network with pluripotency
in human embryonic stem cells. Nat. Cell Biol, 15, 1141—52.

Lutz,C.S. and Moreira,A. (2011) Alternative mRNA polyadenylation in eukaryotes:
an effective regulator of gene expression. Wiley Interdiscip. Rev. RNA, 2, 22—31.

MacKay,D.J.C. and Bauman Peto,L.C. (1994) A hierarchical Dirichlet language
model. Nat. Lang. Eng., 1, 1—19.

 

112 /810's112umo[p101x0's01112u1101u101qﬂ2d11q 111011 popcolumoq

910K ‘09 lsnﬁnV no 22

P. Yu and C.A.Shaw

 

Madsen,R.E. et al. (2005) Modeling word burstiness using the Dirichlet distribution.
In: Proceedings of the 22nd International Conference on Machine Learning.
ICML’05. ACM, New York, NY, pp. 545—552.

McCullagh,P. and Nelder,J.A. (1989) Generalized Linear Models. Monographs on
Statistics and Applied Probability. Chapman and Hall/CRC, New York.

Mehta,C.R. and Patel,N.R. (1986) Algorithm 643: Fexact: a fortran subroutine for
Fisher’s exact test on unordered r X c contingency tables. ACM Trans. Math.
S0ftw., 12, 154—161.

Metzker,M.L. (2010) Sequencing technologies — the next generation. Nat. Rev.
Genet, 11, 31—46.

Mirnno,D. and McCallum,A. (2008) Topic Models Conditioned on Arbitrary
Features with Dirichlet-Multinomial Regression. UAI, Helsinki, Finland.

Mosirnann,J.E. (1962) On the compound multinomial distribution, the multivariate
,B-distribution, and correlations among proportions. Biometrika., 49, 65—82.

Mosirnann,J.E. (1963) On the compound negative multinomial distribution and
correlations among inversely sampled pollen counts. Biometrika., 50, 47—54.

The NCBI BioProject website. (2010) Human Microbiome Project 16S rRNA
Clinical Production Pilot (ID: 48335). http://www.ncbi.nlm.nih.gov/
bioproject?term=48335.

Neerchal,N.K. and Morel,J.G. (2005) An improved method for the computation of
maximum likelihood estimates for multinomial overdispersion models. Comput.
Stat. Data Anal., 49, 33—43.

Paul,S.R. et al. (2005) Fisher information matrix of the Dirichlet-multinomial dis-
tribution. Biom. J., 47, 230—236.

Poortema,K. (1999) On modelling overdispersion of counts. Stat. Neerl., 53, 5—20.

R Core Team. (2013) R: A Language and Environment for Statistical Computing.
R Foundation for Statistical Computing, Vienna, Austria.

Robinson,M.D. et al. (2010) edgeR: a Bioconductor package for differential expres-
sion analysis of digital gene expression data. Bioinformatics, 26, 139—40.

Rosa,P.S.L. et al. (2013) HMP: Hypothesis Testing and Power Calculations for
Comparing Metagenomic Samples from HMP. R package version 1.3.1.

Rowe,C.H. (1931) A proof of the asymptotic series for log y(z) and log y(z + a).
Ann. Math., Second Ser, 32, 10—16.

Rust,R.T. and Leone,R.P. (1984) The mixed-media Dirichlet multinomial distribu-
tion: a model for evaluating television-magazine advertising schedules. J. Mark.
Res., 21, 89—99.

Sjélander,K. et al. (1996) Dirichlet mixtures: a method for improved detection of
weak but signiﬁcant protein sequence homology. Comput. Appl. Biosci., 12,
327—45.

Skellam,J.G. (1948) A probability distribution derived from the binomial distribu-
tion by regarding the probability of success as variable between the sets of trials.
J. R. Stat. Soc. Ser. B Methodol, 10, 257—261.

Stein,W. et al. (2012) Sage Mathematics Software (Version 5.0.1). The Sage
Development Team.

Tarone,R.E. (1979) Testing the goodness of ﬁt of the binomial distribution.
Biometrika., 66, 585—590.

Tvedebrink,T. (2009) dirmult: Estimation in Dirichlet-Multinomial Distribution.
R package version 0.1.2.

Wan,J. (2012) Global analysis of alternative polyadenylation regulation using high-
throughput sequencing. PhD Thesis, University of Iowa.

Wang,E.T. et al. (2008) Alternative isoform regulation in human tissue transcrip-
tomes. Nature, 456, 470—476.

Whittaker,E.T. and Watson,G.N. (1927) A Course of Modern Analysis. 4th edn.
Reprinted 1990. Cambridge University Press, Cambridge, UK.

Winkelmann,R. (2008) Econometric Analysis of Count Data. 5th edn. Springer,
Berlin, Germany.

Yee,T.W. (2010) The VGAM package for categorical data analysis. J. Stat. S0ftw.,
32, 1—34.

Yee,T.W. (2012) VGAM: Vector Generalized Linear and Additive Models. R pack-
age version 0.9-0.

Yee,T.W. and Wild,C.J. (1996) Vector generalized additive models. J. R. Stat. Soc.
B, 58, 481—493.

 

112 /810's112umo[p101x0's01112u1101u101qﬂ2d11q 111011 popcolumoq

910K ‘09 lsnﬁnV no 22

