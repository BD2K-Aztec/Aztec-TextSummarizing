ORIGINAL PAPER

Vol. 28 no. 14 2012, pages 1858-1864
doi: 1 0. 1 093/bioinformatics/bts301

 

Structural bioinformatics

Advance Access publication May 18, 2012

Efficient RNA pairwise structure comparison by SETTER method

David Hokszamﬁk and Daniel Svozil2’*

1SIRET Research Group, Department of Software Engineering, FMP, Charles University in Prague, 11800 Czech
Republic and 2Laboratory of Informatics and Chemistry, Institute of Chemical Technology Prague, 16628 Czech

Republic

Associate Editor: lvo Hofacker

 

ABSTRACT

Motivation: Understanding the architecture and function of RNA
molecules requires methods for comparing and analyzing their
3D structures. Although a structural alignment of short RNAs is
achievable in a reasonable amount of time, large structures represent
much bigger challenge. However, the growth of the number of large
RNAs deposited in the PDB database calls for the development of
fast and accurate methods for analyzing their structures, as well as
for rapid similarity searches in databases.

Results: In this article a novel algorithm for an RNA structural
comparison SETTER (SEcondary sTructure-based TERtiary Structure
Similarity Algorithm) is introduced. SETTER uses a pairwise
comparison method based on 3D similarity of the so-called
generalized secondary structure units. For each pair of structures,
SETTER produces a distance score and an indication of its statistical
significance. SETTER can be used both for the structural alignments
of structures that are already known to be homologous, as well as
for 3D structure similarity searches and functional annotation. The
algorithm presented is both accurate and fast and does not impose
limits on the size of aligned RNA structures.

Availability: The SETTER program, as well as all datasets, is freely
available from http://siret.cz/hoksza/projects/setter/.

Contact: hoksza@ksi.mff.cuni.cz, or svozild@vscht.cz
Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on November 18, 2011; revised on May 15,2012; accepted
on May 16, 2012

1 INTRODUCTION

In addition to its role in the transfer of biological information, the
evidence shows that RNA molecules also play key roles in a variety
of cellular processes (Mattick and Makunin, 2006). RNA shows,
among others, an enzymatic activity in ribozymes (Scott, 2007),
it takes part in the transcription regulation (Bartel, 2004) and it is
involved in the chromatin modeling (Kelley and Kuroda, 2000).
RNA 3D structure is hierarchical (Tinoco, 1999) and can be
divided into primary, secondary, tertiary and quaternary levels.
RNA secondary structure motifs (Hendrix et al., 2005) can be
deﬁned as double helices interconnected by various types of loop
structures and are stable independently of their 3D folds. Tertiary
interactions (Holbrook, 2008) stabilize the overall arrangement
and packing of double helices in large RNA structures. The ﬁrst
resolved RNA crystal structure was that for the yeast phenylalanine

 

*To whom correspondence should be addressed.

transfer RNA (tRNA) (Kim et al., 1974). This achievement
was followed by solving structures of other naturally occurring
tRNAs (Amez and Steitz, 1994), as well as of a variety of
oligomeric RNA model structures (Holbrook et al., 1991). With
the improvements in molecular biological methods (Kim et al.,
1995) and in crystallographic techniques (Garman, 2003), the size
of solved RNA structures has later increased dramatically. Large
RNAs (An arbitrary limit of 100 residues is used to deﬁne large
RNAs (Holbrook, 2008)). allowed for the ﬁrst detailed studies of
RNA structure elements not found in smaller molecules, such as
continuous interhelical base stacking, RNA domain structure and
helical packing.

The function of an RNA molecule is largely determined by the
3D structure that is typically more evolutionarily conserved than its
sequence (Chursov et al., 2012). Thus, methods for the comparative
RNA function annotation based on structural similarity usually
yield much better results than sequence—based approaches. Although
detecting optimal structural similarity between two biomolecules in
3D has been shown to be NP—hard (Kolodny and Linial, 2004),
the development of automatic tools capable of an efﬁcient and
accurate RNA structural alignment has become an important part of
structural bioinformatics. The study of RNA tertiary and quaternary
structures must be facilitated by the software that is able to work
both with small and large RNA molecules. To be computationally
tractable, currently available software tools for comparing two
RNA 3D structures, such as ARTS (Dror et al., 2005, 2006),
DIAL (Ferre et al., 2007), iPARTS (Wang et al., 2010), SARA
(Capriotti and Marti—Renom, 2008, 2009), SARSA (Chang et al.,
2008) or R3D Align (Rahrig et al., 2010) are therefore based on
heuristic approaches. ARTS (Dror et al., 2005, 2006) detects a
maximum common substructure between two RNA 3D structures
using backbone phosphate atoms. Based on 3D similarity between
1333 solved RNA structures assessed by the ARTS algorithm,
a database of hierarchically classiﬁed structures DARTS was
subsequently developed (Abraham et al., 2008). ARTS is not
practical for comparison of large RNA molecules due to its cubic
time complexity. To overcome this problem, the DIAL server using
a dynamic programming algorithm and running in a quadratic time
was developed (Ferre et al., 2007). The DIAL alignment algorithm is
based on torsion and/or pseudotorsion similarity sequence similarity
and base pairing similarity, and it provides access to global, local
and semi— global structural alignments. An improvement in the speed
over the DIAL algorithm was later brought by PARTS (Chang et al.,
2008), an algorithm based on the so—called structural alphabet (SA).
SA is an emerging concept in the structural biology of proteins.
A protein structure is represented as a limited series of ‘letters’
each assigned to a well—characterized conformation (de Brevern

 

1858 © The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com

112 /§.IO'SIBUJHOprOJXO'SOIlBIIIJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

SE TTER

 

et al., 2000). PARTS uses the vector quantization approach to
derive an RNA SA of 23 letters representing the most common
backbone conformations. The RNA structures are represented as
1D sequences of SA letters, and these are aligned using classical
methods for pairwise and multiple sequence alignments. A new
set of SA letters was derived for the improved version of PARTS
called iPARTS (Wang et al., 2010). iPARTS outperforms its previous
version PARTS, as well as (in some aspects) another highly efﬁcient
algorithm SARA (Capriotti and Marti—Renom, 2008, 2009). In
SARA, distances among selected atoms are represented as unit
vectors existing on unit spheres (Chew et al., 1999). All—to—all unit—
vector Root Mean Square Division (RMSD) distances of consecutive
unit spheres are computed and used as scoring matrix for the
dynamic programming—based global alignment. Highly accurate
alignments of homologous molecules are produced by the R3D Align
approach (Rahrig et al., 2010) which is based on local nucleotide
by nucleotide superpositions that effectively accommodate the
ﬂexibility of RNA molecules. Local alignments are then merged
to form a global alignment by using a maximum clique algorithm
on a specially deﬁned ‘local alignment’ graph.

In this article, a novel pairwise RNA comparison method
(SEcondary sTructure—based TERtiary Structure Similarity
Algorithm) SETTER is proposed. The method divides the whole
RNA structure into non—overlapping generalized secondary structure
units (GSSUs). The structural alignment is then obtained by using
a distance measure based on RMSD transformations between all
possible pairs of GSSUs. The algorithm scales as 0(n2) with
the size of GSSU and as 0(n) with the number of GSSUs in
the structure. The segmentation to GSSUs offers the advantage
of high speeds even for the largest structures. The algorithm
can be used both for the 3D structural alignments (Figs. 1—12
in the Supplementary Information show several examples of
pairwise structural alignments), as well as for 3D structural
similarity searches and for functional annotation. High speed of
the algorithm does not compromise its accuracy as is demonstrated
by benchmarking of both structural alignment and functional
annotation against other published methods.

2 METHODS
2.1 GSSU identiﬁcation

Three important elements are recognized in the GSSU: a loop, a neck and a
stem (Fig. 1). A formal description of the GSSU is given by the following
deﬁnition.

DEFINITION 1. Let R be an RNA structure with a nucleotide sequence {ml-£721
and let WC g R denote its subset participating in a Watson—Crick (WC) base
pair. By a GSSU G, we understand a pair of substrings of R, {rzt,-}:.2:il and
{nag-2:].1 (i1 512 <j1§j2,i2 =j1 — 1) of maximum lengths such that each
nucleotide ntx 6 Q :

0 i1 5x511 : ntx ¢ WC or ntx is paired with nty where j1 5y sz
' jl stjz : ntx ¢ WC or ntx is paired with nty where i1 5y 5 i2

In case of ambiguity, a maximum length is assigned to the substring
occurring earlier in the sequence. Let imax and jmin be the highest/lowest
indexes of the WC paired bases in Q. We deﬁne a loop as L = {ml-Jr1 C
Q, a stem as 9 \£ and a neck as the pair {ntimmntjmin }.

Nucleotides are represented by their P atoms. WC hydrogen bonds are
identiﬁed using 3DNA (Lu and Olson, 2008). Non—WC pairs are not used

Ag U9 Am

A? 011
5-  A.   I,  ” A
3' U.. 6.6.. ’   0 A21”

 

 

stern loop

Fig. 1. Three GSSUs extracted from an RNA structure. The sequence starts
at the 5’ end. The borders between individual GSSUs are indicated by dashed
lines and the numbers show the order of the GSSU generation

because they often mediate RNA tertiary contacts, the presence of which
does not allow an unambiguous distinction between GSSUs.

To identify all GSSUs, the process iteratively applies two following steps.
The RNA structure is processed in a sequence order and in the ﬁrst step,
nucleotides are stored on a stack. This process stops by encountering a
nucleotide ntl- WC bonded with a nucleotide ntj already in the stack. Then,
in the second step, a new GSSU 9 starts to be formed from the pair {nth ntj}
(i.e. the neck) and from all nucleotides found between ntl- and ntj (i.e. the
loop). These residues are then removed from the stack. Finally, the stem is
formed from all residues encountered either before the residue WC bonded
to the residue not stored on the stack or before the residue WC bonded with
the residue that was pushed on the stack before the previous GSSU was
generated. By repeating these two steps, the algorithm iteratively searches
for GSSUs, and it stops when the end of the sequence is reached. All residues
remaining on the stack (if any) then form the last GSSU. Note that even a
structure without a single WC pair has a GSSU which is identical with the
structure itself. A detailed description of the process of generating GSSUs
from Fig. 1, as well as the pseudocode algorithm are given in Sections 2 and
3 in Supplementary Information.

2.2 Comparing two GSSUs

GSSU pairwise comparison lies in the heart of the method. Each GSSU is
represented by an ordered set of 3D coordinates of P atoms annotated with
bonding and nucleotide—atom—type information. A common way to assess
similarity between two sets of points is to deﬁne a pairing between them.
The sets are then superposed by ﬁnding translation and rotation of one
of them over the other minimizing the mutual distances of the respective
paired points. Usually, the RMSD is used as the distance measure and two
structures can be superposed given a pairing (alignment) in polynomial
time (Kabsch, 1976). However, ﬁnding the optimal alignment is an NP—hard
problem (Kolodny and Linial, 2004). The optimal solution can be found by
exhaustive search, which is computationally not feasible. This problem can
be resolved by identifying suboptimal alignments that will likely participate
in the optimal alignment. This is the principle idea behind SETTER’s
structure comparison process. SETTER generates a set of short alignments,
the quality of which is evaluated by the Kabsch (Kabsch, 1976) RMSD
algorithm. Working with relatively short alignments allows to superpose
even the largest RNA structures in a reasonable amount of time.

To superpose two GSSUs means to match their loops which implies
matching their necks (Fig. 1). To deﬁne the superposition in 3D space
unambiguously at least three pairs of points are needed. A set of these points
is called a triplet and the alignment is formed by matching triplets between
two given structures. SETTER aligns necks ﬁrst, and then the ﬁnal pair in
the triplet is identiﬁed by aligning each possible pair of loops’ nucleotides.
For example, if two GSSUs with loops consisting of n and m nucleotides are
to be aligned, n x m alignments are generated (Fig. 2).

 

1 859

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIHJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

D.Hoksza and D.Svozil

 

3 I.
u 1‘1"" .4 o .1"

EH I u'  :3. A rotation  
E: —G 3 “Po 4 —_II- 1 5:“?
, W translallon I
.3 ____ G A a I  

wire ﬁ—_G

 

Fig. 2. The alignment of the GSSU from the tRNA domain of the transfer—
messenger RNA (PDB code 1P6V) with the GSSU from the glutamine
tRNA (PDB code lEXD). The ﬁnal structural alignment is deﬁned by
three nucleotide pairs forming a triplet (Lines 1—3). To ﬁnd the optimal
superposition for the given neck pairs (Lines 1 and 2), the position of the
middle pair is varied (Line 3)

For each alignment, the rotation matrix and the translation vector deﬁning
optimal superposition of two triplets are calculated. Although these are
optimal for the given triplet pair only, they are used to superpose whole
GSSUs. This possible inaccuracy is the trade—off for an efﬁciency.

After the superposition, for each nucleotide in GSSU A, its nearest
neighbor in GSSU B is found, and their distance is added to the distance of
two GSSUs referred to as S —distance. Finally, the S —distance is normalized.
The whole process is formalized by equation (1).

NNg(x.g)— { minlfiflglmagl.» otherwise,
1 'gA' l 'fNN A B <

0 otherwise

lgBl . A B
+ 1 1fNN1(g ,Q 056
0 otherwise

1:

1 WW (1)
8(QA.QB)=rtréi1r} 5 gNNAQAt-aﬂgBJ»
IQBI
+ZNNrtgA,r(gB.-.t» ,
i=1
atgAngminllgAhlgBl}
x(1+(lgAl—lgBl)/min{lgAl.lgBl})

A B _
5(9 ,9 >- l/(QA.I(QBJopt)) ’

 

where CA and GB represent two GSSUs to be compared, 9,- stands for
the ith nucleotide in the sequence of Q and lg | for its length. NN (x, Q ) is the
Euclidean distance from the nucleotide x to its nearest neighbor in Q. If x
and its nearest neighbor share the same nucleotide type (the function t(x) in
the formula), the distance is modiﬁed by a factor 4“. It takes values from the
interval 0 < 4“ 5 1, the lower its value, the more matching identical nucleotides
are rewarded. 8 computes the raw distance—T is the set of transpositions
resulting from the candidate triplet alignments and t(g, t) transposes GSSU
C using the transposition t. The S —distance is then normalized by the function
y counting a number of nearest neighbors within the distance 6 after the
optimal transposition topt.

Since hydrogen bonds are identiﬁed using simple geometric criteria, their
detection may sometimes be incorrect. This leads to the shift of the neck
position within the GSSU. SETTER simulates the neck shift by aligning
also the residues next to (under) the necks. These tweakings are necessary
for accurate GSSU comparison; however, they slightly increase the running
time of SETTER.

Although in most cases, the GSSU consists of a stem and a loop, it is not
a strict rule. Two particular situations can occur—the GSSU has no loop or
RNA does not have a single WC hydrogen bond at all. In the case of the

GSSU without the loop, the third nucleotide of the triplet is selected from the
stem such that the S—distance is minimized. When dealing with the GSSU
with no WC hydrogen bond, several triplets covering the whole structure are
formed and used as a basis for the alignment. Such a simpliﬁed comparison
may not lead to the best possible result and SETTER was not developed for
these cases. However, the probability of encountering such defective GSSUs
in large RNA structures is very small (indeed, no such GSSU is found either
in 16S rRNA or in 23S rRNA).

2.3 Comparing more than two GSSUs

If structures contain more than one GSSU, the following three—step multiple
GSSU comparison process is implemented (Fig. 3):

1. All—to—all pairwise GSSU comparisons are performed.

2. Few best GSSU pairs (with low S —distances) are used as seeds for the
alignment of the rest of the GSSUs.

3. The structures’ GSSUs are aligned, their S—distances are aggregated
into the S —distance and the alignment with the lowest S—distance is
identiﬁed.

If comparing structures RA and RB , each GSSU from RA is compared
with each GSSU from R8 , but only top K pairs with the minimum distance
is processed further. For each of the K selected pairs {913915} the value of

S is set to $914,915). In the second step, S—distances of the neighboring

GSSU pairs are iteratively added to the S—distance. For the GSSU pair
{91.11 , 91111} the value of S (91.11 , 913“) and the penalty for the rotation needed

to transform the structures from the state corresponding to $914,915) to the

state corresponding to S (91.11 , 91111) are added to S. This process goes from
{i+ 1, j+ 1} until either i+1 or j+ 1 reaches the number of GSSUs in RA or
R8 . Similarly, the other ends of the structures need to be aligned and so the
process is repeated for {i — 1, j — 1}. However, the case when GSSUs in the
RNA structure are oriented in the opposite direction must also be considered,
and another K alignments must be performed aligning i— 1 residues with j + 1
residues (not shown in Fig. 3).

The rotation between two GSSUs imposes a penalty to the S. This
penalty is calculated as a distance between the rotation matrices deﬁning
two consequent GSSU superpositions (Fig. 30). However, the penalty for
translation is not included explicitly. The translation is limited only to the
pair of GSSUs just being aligned, and such a translation is already implicitly
present in the S—distance (see Section 2.2 and Fig. 2).

Currently, there is no provision for a situation in which one structure is
missing a GSSU that is present in the other structure. This potential limitation
may have a possible undesirable effect on the alignment; however, it cannot
be improved without an increase in computational demands.

2.4 Early termination

The nearest neighbor search, which is a part of the S —distance computation,
has 0(n2) time complexity with respect to the GSSU’s length n. In addition,
the search is performed for each of the candidate alignments decreasing the
efﬁciency of SETTER. To increase the algorithm’s speed, a simple early
termination condition is thus implemented. Alignments that are not likely
to be the part of the optimal superposition are identiﬁed, and for these, the
nearest neighbor search is skipped. Such alignments will very likely have
the triplet S—distance higher than the lowest GSSU distance obtained up to
that time. Speciﬁcally, triplet—based S—distance will probably be lower than
‘real’ S—distance. If the triplet TA c 94 is aligned with the triplet TB c g3
with S (GA, QB ) = X being the best result so far, the comparison computation
can be terminated if S (TA, TB ) x 1 /)t > X. Since the early termination is a
heuristic (5(TA,TB)<S(QA,QB) does not have to be valid), the early
termination condition is strengthened by introducing the parameter A Z 1.
By varying the )t parameter, the trade—off between accuracy and speed can
be set. The higher the )t is, the less often early termination occurs and the
more accurate and slower the algorithm is. The effect of the )t parameter

 

1 860

112 /§.IO'SIBUJHOIPJOJXO'SOIlBIHJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

SE TTER

 

(R... h. .  , xii '

-+
E- I
I.- { l1? {7' 4‘ 'l' I"
r -' n' . I "
R .. gt 
\‘v ‘ *
" . ,' If
" LIX
U
113}
—.,. . ‘H ,....' .,r;, I .II I I .
.MT4.R“n=lﬁmytoll moomoﬂtdhl
I”?! :-.L'I-|_E-::'illr : — IIIEI  _  :II;I
_I- If". .- E'i -.
K .J|_ 1'1 {Li-J." —  |{I_-l_'__.,'l"_ll

Fig. 3. A multiple GSSU structural comparison works in four steps. The
ﬁgure represents a situation where only the optimal GSSU pair is considered
(K = 1) and the direction of the alignment is given by the order of GSSUs. (a)
A schematic representation of two RNA structures RA and R3 with ﬁve and
four GSSUs, respectively. The most similar GSSUs pair is {9;}, 95} (shown
in rectangle). Structures RA and R3 are aligned based on the rotation and
translation of this pair. The superposition needed to optimally align 9;? and
Q? was obtained during the all—to—all GSSU pairwise comparison stage and
the rotation angle needed to get from the state {g§‘,g§} to {9A, 9?} (ﬁrst
down arrow in the ﬁgure) is thus known. The current state is changed to {9A,
9?}, and the process is repeated for the pair {934, Cf} (second down arrow
in the ﬁgure). Similarly, the algorithm must also process in the opposite
direction from the position of Q? and 9119 (up arrow in the ﬁgure). (b) The
rotation angles 5,- from the previous step are used in the penalty function
710, which represents a weight function for the GSSU distances. To get the
ﬁnal S—distance, the sum of weighted GSSU S—distances is normalized by
the ratio of non—aligned GSSUs over the maximum number of non—aligned
GSSUs. The parameter B was empirically set to 6

on the quality of the functional annotation is demonstrated in Section 4 of
Supplementary Information.

For each alignment, SETTER outputs the list of residues forming
individual GSSUs; S—distance characterizing the overall quality of the
alignment; P—value quantifying the statistical signiﬁcance of the alignment;
list of aligned GSSUs, rotation and translation matrices; 3D coordinates of
each residue after the superposition; triplet pair of the best scoring GSSU
pair and list of residues with their respective nearest neighbors and the
corresponding distances.

2.5 Structural alignment accuracy

The assessment of the quality of structural alignments is not an easy task
because it is not possible to deﬁne what a perfect 3D—to—3D alignment is
(Brown et al., 2009). The commonly used measures such as e. g. the RMSD
requires the knowledge of which residues are aligned against which ones.
However, because SETTER is not based on a sequence alignment algorithm
such information is missing. Therefore, the list of aligned residues was
generated using a simple geometric approach. Two residues A and B are
considered to be aligned if A is the closest residue to B and, at the same time,
B is the closest residue to A. Such a deﬁnition is, in our opinion, suitable
for an evaluation of the quality of the superposition and can be used for an
approximate comparison with others alignment—based methods.

In the present work, the quality of the structural alignments was assessed
by using the following measures: the RMSD, the percentage of structural

identity (PSI), the percentage of sequence identity (PID) (Capriotti and Marti—
Renom, 2008, 2009) and the number of nucleotides aligned and the number
of exact base matches (Rahrig et al., 2010). RMSD captures the general 3D
shape of RNA, but it can be misleading as the errors are spread over the
whole molecule. PSI is deﬁned as a percentage of superimposed residues
within 4.0 A with respect to the length of the shorter of the two structures.
PID is the percentage of aligned nucleotides of the same type with respect
to the length of the shorter of the two structures. Number of nucleotides
aligned and number of exact base matches give similar information as PSI and
PID. We note that these measures do not account for the speciﬁcity of RNA
base pairing and base—stacking interactions. Therefore, some new metrics
particularly suitable to RNA structure comparison have been developed
(Parisien et al., 2009). However, these are not used in the present study
as they would not allow to compare SETTER results with other approaches.

2.6 Statistical signiﬁcance of the structural alignment

The quality of the structural alignment can be assessed by means of statistical
hypothesis testing. The key idea is to create a set of randomly generated
structures, to align them and to ﬁt the distribution of their S—distances. For
the given S—distance its P—value can then be calculated. The alignment is
a good one if its S—distance is good compared with the distribution of E—
distances. This is reﬂected by its low P—value; the smaller the P—value, the
more statistically signiﬁcant the S—distance is. To show how well data follow
the ﬁtted distribution a visual inspection of quantile—quantile plots (QQ—
plots) can be used, or the ﬁt can be tested by two—sample Kolmogorov—
Smimov test.

S—distance follows the log—normal distribution (see Section 5 in
Supplementary Information), the probability density function ,0(x) of which
is given as
_ 1 —(1nx—M)2/202
“’0 NW6 ’
where parameters )1. and o are the mean and standard deviation, respectively,
of the variable’s natural logarithm that is by deﬁnition, normally distributed.
On a non—logarithmized scale, )1. is called a location parameter and o a
scale parameter. These parameters must be determined, and once they are
known, they can be used to derive the statistical signiﬁcance of the particular
alignment given as its P—value. P—value corresponds to the probability P(x 5
X) that the variable X takes a value lower or equal to x

1 1 1 X —
P(X 5x): — + —erf —n( ) M a
2 2 202
where erf(x) is the error function deﬁned as

2 x _t2
erf(x): —+ 6 dt.
77 0

For the determination of u and 0 parameters, a set of reasonably unrelated
structures was prepared. Such a set should cover the whole range of
alignments starting from the exceptionally good ones going up to the very
bad ones. The unrelatedness of the structures was based on their sequence
similarity. The used threshold of 80% sequence similarity guarantees the
uniform coverage of the alignments in terms of their quality. Because the
u and 0 parameters depend on the length of the shorter structure N in
the alignment they must be determined for different lengths separately. For
each length, a dataset containing 50000 structure pairs was generated by
randomly cutting the regions of the given length from structures longer than
N. The datasets of lengths 5, 10, 15, 20,  ,300 residues were prepared.
The S—distance was determined for each alignment in the given dataset and
the parameters )1. and o of the log—normal distribution were found by a
maximum—likelihood ﬁtting. All statistical calculations were performed using
the R system version 2.13.1 (R Development Core Team, 2011) with the
package MASS (version 73—14).

2.7 Functional annotation accuracy

The quality of the functional annotation was assessed by SETTER’s ability
to correctly assign the SCOR functional classiﬁcation to the query RNA

 

1861

112 /§.IO'SIBUJHOIpJOJXO'SOTlBIIIJOJUTOTQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

D.Hoksza and D.Svozil

 

 

Fig. 4. PSI values produced by SARA and SETTER approaches for the
all—to—all alignments using the FSCOR dataset

structure using three datasets from the SCOR database (Tamura et al.,
2004). The FSCOR dataset contains all RNA chains with more than three
nucleotides with a unique functional classiﬁcation, the R—FSCOR dataset
is a structurally dissimilar subset of the FSCOR and the T—FSCOR dataset
contains structures from the FSCOR set not present in the R—FSCOR set
(Capriotti and Marti—Renom, 2008). Two RNA structures can be either
functionally identical (referred to as the exact classiﬁcation, they have
the same deepest SCOR classiﬁcation) or functionally similar (referred to
as the similar classiﬁcation, they do not agree at the deepest level but
share classiﬁcation at the parent level). Particularly, two experiments were
performed—a leave—one—out test on the FSCOR dataset and a test assigning
functions to structures from the T—FSCOR with the R—FSCOR serving as
the database set. The accuracy of a functional annotation was assessed by
using two different measures: a classiﬁcation accuracy (ACC) and an area
under the receives—operating characteristic (ROC) curve (AUC). ACC is
calculated as a percentage of correctly classiﬁed structures. To obtain the
ROC curve, the alignments of all pairs of RNA structures were sorted by their
P—values. A P—value threshold is varied between minimum and maximum of
the sorted P—values. For the ﬁxed threshold, all pairs of aligned structures
which P—values are above the threshold are assumed positive. Moreover, the
pairs are counted as true positives (TP) if they belong to the same family (i.e.
they are structurally similar) and false positives (FP) otherwise (i.e. they are
structurally dissimilar). If P (positives) is the number of structurally similar
pairs in the whole result set and N (negatives) is the number of structurally
dissimilar pairs, then F P /N is called a false positive ratio (FPR) and TP / P a
true positive ratio (TPR). The point on the ROC curve corresponding to the
ﬁxed threshold is produced by plotting its TPR (y—axis) against FPR (x—axis).
The area under the ROC curve (AUC), a threshold independent measure, is
considered a robust indicator of a classiﬁer quality (Fawcett, 2006). An AUC
of 1.0 indicates a perfect classiﬁer and an AUC of 0.5 corresponds to a random
classiﬁcation. High AUC means that correct classiﬁcations are present mostly
at the top of aligned structures sorted by their P—values. We also notice that it
is difﬁcult to obtain high values of both ACC and AUC simultaneously (see
Section 6 in Supplementary Information), and both measures should thus be
reported.

3 RESULTS AND DISCUSSION

3.1 Assessment of the structural alignment quality

SETTER structural alignments were compared with SARA by
calculating PSI values for the all—to—all comparisons using the
FSCOR dataset. The results are summarized in Figure 4 showing
that SETTER yields less alignments with very low PSI (up to 20%),
and SARA returns slightly more alignments with PSI >90%. In
terms of remaining PSI levels, both methods perform similarly.

In addition, SETTER was compared with R3D Align, ARTS,
SARA and DIAL by calculating various measures reﬂecting the
quality of the alignment of two 16S rRNA structures and of the

Location parameter

 

 

 

 

 

“:3 _ r.-
r":
Ln
:1. hi _
L“!
|
0 50 100 15E:I 2'30 250 SUD
Length
Scale parameter
‘3! _
(“J
‘3! _
'5 co
‘3! _

 

 

 

Fig. 5. Length dependence of log—normal parameters

alignment of the sarcin/ricin domain from 28S rRNA with the
central part of the 5S rRNA. The results summarized in Section 7
in Supplementary Information also demonstrate that SETTER
produces alignments of the quality comparable with other automated
approaches considering its approximate nature in obtaining the list of
aligned residues (see Section 2.5). The ability of SETTER to produce
good structural alignments is demonstrated on the visualizations
of the superpositions of several 23S rRNA, 16S rRNA, 5S rRNA,
tRNA and other RNA structures (see Section 1 in the Supplementary
Information).

3.2 Assessment of the functional annotation quality

3.2.] Statistical parameters evaluation QQ—plots show that data
follow the ﬁtted log—normal distribution very closely except for
the region of high S—distances (see Section 5 in Supplementary
Information). However, poor ﬁtting in this region will not seriously
inﬂuence the results of database searching, as we are generally
not interested in highly dissimilar structures. The quality of the ﬁt
was further conﬁrmed by Kolmogorov—Smirnov test that provided
P—values close to 0 for all sequence lengths. The location and scale
parameters (,u and a) of the log—normal distribution depend on the
length N of the shorter structure in the alignment (Capriotti and
Marti—Renom, 2008). The location parameter ,u can be ﬁtted by the
following curve (Fig. 5):

b
,u.=a><\/N+ﬁ, (2)

where a=0.1729 and 19: 14.3753. Similarly, the scale parameter
was ﬁtted (see Fig. 5) by

1 2
o=aX——l—b><ln(N), 3
where a 27.3325 and 19200136. The relations (2) and (3) provide

a simple way to calculate ,u and 0 parameters for any sequence
length N.

 

1 862

112 /§.IO'SIBUJHOIpJOJXO'SOTlBIIIJOJUTOTQ/ﬁdnq 111011 pep1201umoq

9IOZ ‘09 lsnﬁnv uo ::

SE TTER

 

Table 1. ACC and AUC comparison of SETTER, iPARTS and SARA on
the FSCOR and T/R—FSCOR datasets

Table 2. Runtime comparison of iPARTS, SARA and SETTER for datasets
of RNA structures of various size

 

 

 

FSCOR T/R—FSCOR
AUC ACC AUC ACC
iPARTS 72/92 ? 77/90 ?
STRpVZLO 82/91 61.8/72.8 87/89 67.4/71.8
SARA 61/83 81.4/95.3 58/85 78.0/94.5
STva=0.013 71/87 80.5/95.1 83/91 91.7/95.0

 

The values are given in % and are reported for exact/similar classiﬁcation. iPARTS
should be compared with SETTER with the P-value threshold of 1.0 (i.e. no ﬁltering
applied), and SARA should be compared with SETTER with the P-value threshold of
0.013. For iPARTS, ACC was not reported and necessary tests cannot be performed
using the iPARTS web interface. ROC curves from which AUC value were calculated
are shown in Section 8 of the Supplementary Information.

3.2.2 Eﬂectiveness comparison The capabilities of SETTER for
a functional annotation of new RNA structures were compared with
SARA and iPARTS approaches using the published AUC (SARA,
iPARTS) and ACC (SARA only) values on the FSCOR and T/R—
FSCOR datasets. Following settings were used in SETTER: g“ = 0.2,
,8 =2, 6 :6 A K :3 and )t :1 (see Sections 2.2—2.4 for details).

The results are summarized in Table 1. The percentage of
classiﬁed structures for the given P—value threshold is called a
coverage and two sets of results with different coverage are
presented for SETTER. STva=1 corresponds to the classiﬁcation
where the structures are sorted according to their P—values but no
threshold is applied (coverage equals to 100%). At this coverage,
SETTER is compared with iPARTS which does not use any ﬁltering.
Results in Table 1 show, that SETTER outperforms iPARTS in AUC
for exact classiﬁcation both in FSCOR and T/R—FSCOR datasets and
performs comparably for similar classiﬁcation.

SARA was evaluated (Capriotti and Marti—Renom, 2009) at the
coverage of 58.7%. To achieve this coverage in SETTER, the
P—value threshold of 0.013 was used. At this coverage, SETTER
performs better than SARA in terms of AUC both for the FSCOR
and T/R—FSCOR datasets (Table 1). In addition, SETTER can also
be compared with SARA in terms of ACC. SETTER’s ACC is
comparable to that of SARA in the similar classiﬁcation both for the
FSCOR and T/R—FSCOR datasets, and in the exact classiﬁcation for
the FSCOR dataset. However, it is much higher (by 13.7%) for the
exact classiﬁcation for the T/R—FSCOR dataset.

Thus, it can be concluded that SETTER performs better than
iPARTS and SARA in terms of AUC and is comparable with SARA
in terms of ACC.

3.3 Speed comparison

SETTER’s nearest neighbor identiﬁcation procedure scales as 0(n2)
with the size of the GSSU (not with the size of structure!), and
employment of the heuristic speed optimization with )t :1 further
reduces the number of 0(n2) computations. The speed of SETTER
was compared with that of iPARTS and SARA measuring the
runtimes of all—to—all comparisons on four datasets containing RNA
structures of various sizes (Table 2). The runtime of SETTER
was measured on Linux machine with 4 Intel(R) Xeon(R) CPUs
E7540, 2 GHz (the algorithm is not parallelized thus only one core
per comparison was used) and 132 GB of RAM (however, the
average memory size needed to store the representations of all

 

 

data set iPARTS SARA SETTER
D1 1.1 s 1.7 s 0.3 s
D2 2.6 s 9.2 s 2.4 s
D3 17.0 s ? 3.6 s
D4 2.8 min ? 21.3 s
D5 ? ? 79.8 s

 

The D1 set contains tRNA structures 1EHZ:A, 1H3E2B, 119V2A, 2TRA:A and 1YFG:A
(average length 76 nucleotides), D2 set contains ribozyme P4-P6 domain 1GID2A,
1HR2:A and 1L8V:A (average length 157 nucleotides), D3 contains domain V of 23S
rRNA 1FFZ:A and 1FGO:A (average length 496 nucleotides), D4 contains 16S rRNA
1J5E:A and 2AVY:A (average length 1522 nucleotides) and D5 contains the currently
largest RNA structures in PDB—yeast 25S rRNA 305821 and 305H:1 (average length
3396 nucleotides). The runtimes of SARA and iPARTS were obtained from their server
versions. A comparison with SARA is difﬁcult, because for three of ﬁve datasets, the
server times out and returns no results.

RNA structures from the FSCOR set was <33 MB) running Red
Hat Linux. The comparison was based on measuring the runtimes
using iPARTS and SARA server versions which limit the size of
aligned structures (1900 residues for iPARTS and 1000 residues for
SARA) from the performance reasons. Such a comparison can thus
be only qualitative; however, the variations between SETTER and
SARA/iPARTS are substantial (Table 2) and cannot be attributed
to a different hardware setup only. SETTER clearly outperforms
both SARA and iPARTS methods and is much better suited for the
alignment of even the largest RNA structures.

4 CONCLUSIONS

0 The SETTER method divides the RNA structure into non—
overlapping structural elements called GSSUs. The structural
alignment is then based on the pairwise comparison using 3D
similarity of the GSSUs.

- SETTER was not developed for aligning RNA molecules not
containing any secondary structure. However, such cases are
very rare, no such a structure is present either in the FSCOR
dataset or in large 16S or 23S rRNAs.

The SETTER algorithm scales as 0(n2) with the size of GS SU
and as 0(n) with the number of GSSUs in the structure.
This scaling gives SETTER its unprecedented speed as the
average size of GSSU remains constant irrespective of the
size of the structure. However, it has been noted that due
to the complexity of RNA 3D alignment, the quadratic time
algorithms (or better) cannot be expected to be highly accurate
(Ferre et al., 2007). Therefore, the main utility of the SETTER
can be in identifying potential alignment regions which can
further be processed by more accurate but computationally
intensive methods such as R3D Align (Rahrig et al., 2010).

0 SETTER can be used both for pairwise structural alignment,
as well as for functional annotation of a new RNA structure.

The quality of the structural alignment was assessed by
the comparison with R3D Align, ARTS, SARA and DIAL
approaches. The results demonstrate that SETTER produces
structural alignments of comparable quality.

 

1 863

112 /§.IO'SIBUJHOIpJOJXO'SOTlBIIIJOJUTOTQ/ﬁdnq 111011 pep1201umoq

9IOZ ‘09 lsnﬁnv uo ::

D.Hoksza and D.Svozil

 

0 The functional assignment was benchmarked against iPARTS
and SARA using the classiﬁcation accuracy (ACC) and the
area under the ROC curve (AUC) measures for three datasets
from the SCOR database. SETTER performs better than
iPARTS and SARA in terms of AUC and is comparable with
SARA in terms of ACC.

The SETTER method is capable of aligning even the largest
RNA structures deposited in the PDB database in a reasonable
amount of time (e.g. two structures of the 25S rRNA each
having 3396 nucleotides and represented by 89 GSSUs are
aligned in 1min and 20 s) and represents thus an important
addition to the portfolio of automatic RNA structural analysis
tools.

ACKNOWLEDGEMENTS

The authors thank anonymous referees whose stimulating critique
and comments lead to the signiﬁcant improvements of this article.

Funding: Czech Science Foundation (GACR) (project Nr. P202/
11/0968) and Ministry of Education of the Czech Republic
(MSM6046137302).

Conﬂict of Interest: none declared.

REFERENCES

Abraham,M. et al. (2008) Analysis and classiﬁcation of RNA tertiary structures. RNA,
14, 2274—2289.

Arnez,J.G. and Steitz,T.A. (1994) Crystal structure of unmodiﬁed tRNA(Gln) complexed
with glutaminyl-tRNA synthetase and ATP suggests a possible role for pseudo-
uridines in stabilization of RNA structure. Biochemistry, 33, 7560—7567.

Bartel,D.P. (2004) MicroRNAs: genomics, biogenesis, mechanism, and function. Cell,
116, 281—297.

Brown,J.W. et al. (2009) The RNA structure alignment ontology. RNA, 15, 1623—1631.

Capriotti,E. and Marti-Renom,M.A. (2008) RNA structure alignment by a unit-vector
approach. Bioinformatics, 24, i112—i118.

Capriotti,E. and Marti-Renom,M.A. (2009) SARA: a server for function annotation of
RNA structures. Nucl. Acids Res., 37, W260—W265.

Chang,Y.-F. et al. (2008) SARSA: a web tool for structural alignment of RNA using a
structural alphabet. Nucleic Acids Res, 36, 19—24.

Chew,L.P. et al. (1999) Fast detection of common geometric substructure in proteins.
J. Comput. Biol, 6, 313—325.

Chursov,A. et al. (2012) Sequence-structure relationships in yeast mRNAs. Nucleic
Acids Res., 40, 956—962.

de Brevern,A.G. et al. (2000) Bayesian probabilistic approach for predicting backbone
structures in terms of protein blocks. Proteins, 41, 271—287.

Dror,O. et al. (2005) ARTS: alignment of RNA tertiary structures. Bioinformatics, 21
(Suppl. 2), ii47—ii53.

Dror,O. et al. (2006) The ARTS web server for aligning RNA tertiary structures. Nucleic
Acids Res, 34, W412—W415.

Fawcett,T. (2006) An introduction to ROC analysis. Pattern Recogn. Lett, 27, 861—874.

Ferre,F. et al. (2007) DIAL: a web server for the pairwise alignment of two RNA
three-dimensional structures using nucleotide, dihedral angle and base-pairing
similarities. Nucleic Acids Res., 35, 659—668.

Garman,E. (2003) ‘Cool’ crystals: macromolecular cryocrystallography and radiation
damage. Curr. Opin. Struct. Biol, 13, 545—551.

Hendrix,D.K. et al. (2005) RNA structural motifs: building blocks of a modular
biomolecule. Quart. Rev. Biophy, 38, 221—243.

Holbrook,S.R. et al. (1991) Crystal structure of an RNA double helix incorporating a
track of non-Watson—Crick base pairs. Nature, 353, 579—581.

Holbrook,S.R. (2008) Structural principles from large RNAs. Ann. Rev. Biophy, 37,
445—464.

Kabsch,W. (1976) A solution for the best rotation to relate two sets of vectors. Acta
Crystallogra. A, 32, 922—923.

Kelley,R.L. and Kuroda,M.I. (2000) Noncoding RNA genes in dosage compensation
and imprinting. Cell, 103, 9—12.

Kim,R. et al. (1995) Synthesis and puriﬁcation of milligram quantities of short RNA
transcripts. BioTec/miques, 18, 992—994.

Kim,S.H. et al. (1974) Three-dimensional tertiary structure of yeast phenylalanine
transfer RNA Science, 185, 435—440.

Kolodny,R. and Linial,N. (2004) Approximate protein structural alignment in
polynomial time. Proc. Natl. Acad. Sci. USA, 101, 12201—12206.

Lu,X.-J. and Olson,W.K. (2008) 3DNA: a versatile, integrated software system for the
analysis, rebuilding and visualization of three-dimensional nucleic-acid structures.
Nat. Protoc, 3, 1213—1227.

Mattick,J.S. and Makunin,I.V. (2006) Non-coding RNA Hum. Mole. Genet, 15,
(Suppl. 1) R17—R29.

Parisien,M. et al. (2009) New metrics for comparing and assessing discrepancies
between RNA 3D structures and models. RNA, 15, 1875—1885.

Rahrig,R.R. et al. (2010) R3D Align: global pairwise alignment of RNA 3D structures
using local superpositions. Bioinformatics, 26, 2689—2697.

R Development Core Team. (2011) R: A Language and Environment for Statistical
Computing. R Foundation for Statistical Computing, Vienna, Austria. ISBN
3-900051-07-0.

Scott,W.G. (2007) Ribozymes. Curr. Opin. Struct. Biol, 17, 280—286.

Tamura,M. et al. (2004) SCOR: structural classiﬁcation of RNA, version 2.0. Nucleic
Acids Res., 32, D182—D184.

Tinoco,I. (1999) How RNA folds. J. Mol Biol, 293, 271—281.

Wang,C.-W. et al. (2010) iPARTS: an improved tool of pairwise alignment of RNA
tertiary structures. Nucleic Acids Res., 38 (Suppl), W340—W347.

 

1 864

112 /§.IO'SIBUJHOIpJOJXO'SOIlBIIIJOJUIOIQ/ﬁdnq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

