Bioinformatics, 31 (1 8), 2015, 2963—2971

doi: 10.1093/bioinformatics/btv309

Advance Access Publication Date: 18 May 2015
Original Paper

 

Sequence analysis

lMSEQ—a fast and error aware approach to
immunogenetic sequence analysis

Leon Kuchenbecker1'2'3'*, Mikalai Nienen1, Jochen Hecht1'3,
Avidan U. Neumann”, Nina Babel1'5, Knut Reinertz'3 and
Peter N. Robinson1'2'3'6'*

1Berlin-Brandenburg Center for Regenerative Therapies, Charité Universitatsmedizin, Berlin, 2Department of
Computer Science, Freie Universitéit, Berlin, 3Max Planck Institute for Molecular Genetics, lhnestrasse 63-73,
14195 Berlin, Germany, 4Goodman Faculty of Life Sciences, Bar-llan University, Ramat Gan, Israel, 5Marien
Hospital Herne, Ruhr University Bochum, Bochum and 6Institute of Medical Genetics and Human Genetics, Charité
Universitatsmedizin Berlin, Berlin, Germany

*To whom correspondence should be addressed.
Associate Editor: lnanc Birol

Received on February 20, 2015; revised on May 8, 2015; accepted on May 11, 2015

Abstract

Motivation: Recombined T- and B-cell receptor repertoires are increasingly being studied using
next generation sequencing (NGS) in order to interrogate the repertoire composition as well as
changes in the distribution of receptor clones under different physiological and disease states. This
type of analysis requires efficient and unambiguous clonotype assignment to a large number of
NGS read sequences, including the identification of the incorporated V and J gene segments and
the CDR3 sequence. Current tools have deficits with respect to performance, accuracy and docu-
mentation of their underlying algorithms and usage.

Results: We present IMSEO, a method to derive clonotype repertoires from NGS data with sophisti-
cated routines for handling errors stemming from PCR and sequencing artefacts. The application
can handle different kinds of input data originating from single- or paired-end sequencing in differ-
ent configurations and is generic regarding the species and gene of interest. We have carefully
evaluated our method with simulated and real world data and show that IMSEO is superior to other
tools with respect to its clonotyping as well as standalone error correction and runtime
performance.

Availability and implementation: IMSEO was implemented in C++ using the Squn library for effi-
cient sequence analysis. It is freely available under the GPLv2 open source license and can be
downloaded at www.imtools.org.

Supplementary information: Supplementary data are available at Bioinformatics online.

Contact: Ikuchenb@inf.fu-berlin.de or peter.robinson@charite.de

 

1 Introduction

 

T- and B-cells are lymphocytes that form part of the adaptive or
acquired immune system in vertebrates. These cells express an anti-
gen receptor on their surface, the T—cell receptor (TCR) or B-cell
receptor/Immunoglobulin (IG), which is responsible for the recogni-
tion of antigens. Due to the enormous number of potential antigens,

a large diversity among these receptors is required. The key behind
that diversity is that in the germline genome there is no functional
TCR or IG gene. Instead, it is generated by recombination of germ-
line encoded gene segments as well as random base additions and
deletions upon differentiation of T- and B-cell precursors in the thy-
mus and bone marrow. This somatic recombination process is

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2963

9mg ‘09 isnﬁnV uo seleﬁuV socl ‘erulomeg JO AirSJQAru [1 112 [3.10811211an[plOJXO'SODBIILIOJIITOTQ/ﬂ(11111 wort pepeolumoq

2964

L.Kuchenbecker et al.

 

referred to as V(D)]—recombination and explained in more detail in
the following section. The cells transmit their recombined receptor
gene to daughter cells upon proliferation, allowing for a targeted im-
mune response against antigens.

Recently, methods have been developed to enrich these recom-
bined genes in order to capture the repertoires of unique gene se-
quences using next generation sequencing (NGS). The derived data,
i.e. populations of such unique gene sequences, referred to as clono-
types, can be used to better understand how the adaptive immune
system works. The underlying samples for this analysis can be full T
or B cell populations from blood, urine, biopsies or other sources or
antigen specific subpopulations that have been exposed to antigen
in vitro and subsequently selected for activation markers using
methods such as flow cytometry. Also, specialized cells (e.g. regula-
tory, memory or effector T cells) can be sorted with immunopheno-
typing protocols.

NGS based T- and B-cell clonotype analysis thus opens up new
possibilities of qualitative and quantitative repertoire assessment.
Recently, such methods were applied for TCR and IG repertoire
analysis in healthy and diseased conditions. A number of data char-
acteristics can be measured and are medically relevant, including
repertoire size and diversity under different conditions or for differ-
ent subpopulations as well as shared clonotypes across different in-
dividuals and the tracking of particular clonotype subgroups.
Applications in medical and clinical research include the identifica-
tion and tracking of clonotypes with known antigen specificities in
vaccination studies (Jackson et al., 2014; Vollmers et al., 2013), dif-
ferential diagnosis in transplant patients (Dziubianau et al., 2013) or
the usage of clonotypes as biomarkers in patients with lymphoid
malignancies (Wu et al., 2012).

Here, we present IMSEQ, a method to derive clonotypes from
NGS sequence data. It can recognize and correct likely sequencing-
or PCR-errors, can quickly process large datasets and was exten-
sively tested on simulated and experimental data. We also show that
it outperforms currently available software tools. IMSEQ is open
source and available online (http://www.imtools.org).

1.1 Preliminaries

The generation of a functional TCR or IG gene follows the same
principle and will be brieﬂy explained using the TCR as an example.
In humans, the TCR gene locus consists of an a and a [3 chain. The
TCRﬁ locus on chromosome 7 has a cluster of over 50 variable (V)
segments located at some distance to other clusters, two diversity
(D) segments and 13 joining (J) segments. During differentiation of
T lymphocytes in the thymus, somatic recombination in the thymus
leads to the production of a functional TCRﬁ gene with one V, D
and J segment each as well as a constant, conserved (C) segment.
Additional diversity is added through random nucleotide removal
and addition at the junction sites between the segments. A homolo-
gous process governs recombination of both the TCRs and the IGs,
which are protein complexes that comprise two subunits, the beta
(TCRB) or heavy chain (IGH), as well as the alpha (TCRA) or light
chain (IGL). All four genes undergo an analogous somatic recombin-
ation process, however, the TCRA and IGL genes comprise only a V
and] segment without an intervening D segment.

The structure of a recombined TCRB locus is shown in Figure 1.
Given the number of functional gene segments in the human genome
as well as the average number of nucleotides randomly added or
removed at the junction sites, it has been estimated that the size of
the theoretical space of clonotypes that can be generated is on the
order of 1018 (Janeway et al., 1999). In vivo, about 106 unique TCR

V D J

I—II—I

—III
|_l |_l
R1 R2

Cyslo4 Ph6118

 

Fig. 1. The basic structure of a recombined TCRB or IGH gene. V, D and J de-
note conserved germline sequence, R1 and R2 denote random nucleotides at
the junction sites. The highlighted area between the conserved Cys- and Phe-
triplets denotes the CDR3 region

 

V D

I I I—I lél

—III‘__
—

Fig. 2. Read positioning supported by IMSEQ. The V(D)J region must be cov-
ered by a single read. This also reflects the minimal configuration, as shown
in (A). A second read covering additional parts of the V region as shown in
(B) is optional and improves the accuracy of the V segment identification. If a
paired-end configuration where the reads overlap (C) is chosen, the reads
must be pre-processed and merged before IMSEQ analysis

recombinations (clonotypes) among 1012 cells were detected in the
peripheral blood of humans (Arstila et al., 1999).

The recombined genes are commonly enriched by a multiplex
PCR targeting the V and J segments. Different target sites result in
different sequencing read positions. The configurations supported
by IMSEQ are shown in Figure 2.

1.2 Technical artifacts in TCR and IG sequencing

PCR amplification and sequencing are error-prone processes, mainly
due to false base incorporations. These errors cause the detection of
additional unique clonotypes which are in fact not present in the
sample, particularly when the errors lie within the hypervariable
CDR3 region, since it cannot be compared with any reference and
redundancy through coverage (Sims et al., 2014) cannot be applied
to handle these errors. Sequencing reads usually come with a quality
score per base and it is common practice to define a quality thresh-
old for reads to be discarded. False base incorporations do however
not occur independent of the sequence, hence they can alter the
derived clonotype frequency distributions if reads are selected for
their quality scores. An extreme case of such a distribution change is
shown in Figure 3. This analysis demonstrates that it is preferable to
process the raw data in an attempt to correctly assign the clonotypes
of low-quality reads rather than removing them.

Another technical artifact that can occur in TCR and IG gene se-
quence data are primer induced base substitutions due to multiplex
PCR amplification. If a primer designed to amplify a fragment incor-
porating segment A binds to a fragment incorporating segment B
due to similarity in the primer sequence, the replicated sequence will
have false base incorporations making it more similar to segment A
at the primer binding site. Generally, this only plays a role for] seg-
ment identification, since for single-end (SE) V(D)J reads the V pri-
mer site is usually not part of the read and for paired-end data there
is sufficient V segment sequence present in the V read to safely

9mg ‘09 isnﬁnV uo sejeﬁuV SO’I ‘erulomeg JO AirSJQAru [1 1e ﬁlO'Sjeumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

IMSEQ

2965

 

 

20 — Quality threshold I I 10 I I 30

15- -

5- I -

, III-ii_
| | | | | | |

 

Frequency [%]

 

 

 

Y?” e v ‘0 C5\ 00
6‘0 «>3? «4‘ «6‘ $0 s“ 3 x? 5 9%"
055) ‘39 9% ($20 (5%? V9 0 ‘2‘ 0 0?.
0V 09 0‘? cf 0‘?

Fig. 3. A dataset from an antigen specific sample with frequencies for the top
10 clonotypes. The reads were initially filtered according to average quality
scores, once with a threshold of 10 and once with a threshold of 30 [CMV spe-
cific (pp65+) T cells sequenced on an Illumina GAIIx sequencer, 150 bp SE]

identify the V segment. Therefore, immunogenetic sequence analysis
tools should provide methods to quantify this error in the data
and accurately identify the gene segments despite such base
substitutions.

1.3 Available tools

Many resources supporting research on immunogenetic sequence
data have been made available by the International Immunogenetics
Information System (IMGT), including a database providing se-
quences and annotations of known gene segments (Giudicelli et al.,
2005) as well as Web-based tools for the analysis of recombined re-
ceptor gene sequences, V—Q UEST (Brochet et al., 2008) and HigbV—
QUEST (Li et al., 2013). IgBlast (Ye et al., 2013) provides a similar
functionality as V-QUEST and is also available as a standalone ap-
plication, as is the software Decombinator (Thomas et al., 2013).
These tools, however, do not attempt to characterize the TCR reper-
toires, i.e. they only perform clonotyping per read and do not in-
corporate further error corrections that take the entire repertoire
into account. Tools that include error correction mechanisms are
MiTCR (Bolotin et al., 2013) and MIGEC (Shugay et al., 2014);
however, the latter requires additional experimental effort by using
primers with random identifier sequences, so called unique molecu-
lar identifier (UMI) tags, in order to do so. Another tool, TCR/class
(Yang et al., 2015), although performing some error correction
doesn’t correct false bases inside the CDR3 region.

1.4 Scope of IMSEQ

IMSEQ is designed to identify the clonotypes of recombined TCR or
IG genes from NGS data, to correct PCR and sequencing errors, and
to count identical clonotypes to characterize the repertoire of clones
in a population of cells. We will explain the algorithms and the use
of the software in the context of the TCR beta gene (TCRB, Entrez
Gene ID 6957 for Homo sapiens) in detail, but the TCR alpha chain
or the IG genes, as well as the corresponding genes of other species,
can be investigated simply by substituting FASTA files with the cor-
responding sequences. Our method requires every gene copy present
in the sample to be represented by a read covering the CDR3 region
of the gene as well as parts of the ﬂanking V and J regions.
Additionally, it can process a second, paired read covering only the
V region. If the read pairs overlap, they must be pre-processed with
a paired read overlapper such as PEAR (Zhang et al., 2014) and

presented to IMSEQ as single end data. The different configurations
supported by IMSEQ are illustrated in Figure 2.

2 Methods

Processing the input read data happens in three stages. At first, a
pre—processing step filters reads based on quality constraints. The
user can specify a minimum average quality score, reads that fall
below that value are discarded. As discussed in Section 1.2, this
threshold should not be set too high, however, some threshold, e.g.
10, should be set in order to remove entirely erroneous reads.
Furthermore, clonotyping assigns each read to a clonotype deter-
mined according to its V and J segment identity and the sequence of
the CDR3 region. Finally, in the repertoire generation step, identical
clonotypes are consolidated and counted. If desired, these clonotype
clusters can be merged further to correct for sequencing and PCR
errors. IMSEQ outputs both the repertoire in form of clonotype
counts as well as detailed information containing the clonotype or
reason for rejection for every single input read. The read clonotyping
and repertoire generation steps are described in more detail in the
following sections.

2.1 Read clonotyping

The initial step of the read clonotyping is the identification of the V
andJ gene segments. For that purpose, the best matching segments
are identified by pairwise alignments between the read sequence and
the germline V andJ segment sequences. Although other tools imple-
ment alignment free segment identification approaches (Thomas et
al., 2013; Yang et al., 2015) in order to improve the clonotyping
runtime, only alignment based approaches can actually output de-
tailed per read information regarding exact error positions in the V
andJ segment alignments. This can be valuable information for the
assessment of the data quality or base substitutions induced by un-
specific primer binding, as discussed in Section 1.2. An example for
the analysis of such effects from the IMSEQ output is shown in
Section 5.3. To accelerate the alignment based identification pro-
cess, the segment sequences are pre-processed and a fast alignment
filter is used to exclude sequences that cannot yield a good align-
ment with the read and reduce the required computations for those
that can.

2.1.1 Segment core fragment matching

To identify the V and J segments that yield the best scoring overlap
alignments against the read sequence in an efficient way, IMSEQ ini-
tially matches a set of short segment substrings, denoted as segment
core fragments (SCFs), against each read. The SCFs are built in a
pre-processing step from the V andJ segment sequences and have a
fixed length and location relative to the Phe/Cys triplet within the
segments and are not necessarily unique. They are chosen to be
small enough to enable a semi-global alignment against the read se-
quences, which can be computed efficiently using filtering and align-
ment score computation methods as described below. Only the SCFs
5V—SCF

max I5JmTaSXCF errors are then extended to

alignments with at most
full segment overlap alignments, which drastically reduces the
number of full overlap alignments that have to be computed. The
pre-computed SCF alignments form the innermost part of the final
overlap alignments, i.e. for V segments the SCF alignment is
extended in the 5’ direction and forJ segments in the 3’ direction.
For every read, the set of SCFs is reduced to those that can actu-
ally yield a semi-global alignment with the read sequence within the

specified error margins using the SWIFT filter (Rasmussen et al.,

9mg ‘09 isnﬁnV uo sejeﬁuV soq ‘erulomeg JO AirSJQAru [1 1e ﬁhO'sIeumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

2966

L.Kuchenbecker et al.

 

)— SCF hit region _| read sequence
—

m .

)— SCF hit region _|

 

\
\ \

\ SWIFT output that is
x K— MBVA veriﬁed (1)

K Exact alignment band from MBVA
output (2)

r
2 x
e

)— SCF hit region _|

 

Banded computation of the full segment
/_ overlap alignment

Elm

 

Fig. 4. The three stages ofV segment identification (J is analogous except for
the positioning of the J segment within the read). (A) Given the read, the
SWIFT filter returns a hit region for one or more SCFs. (B) Each SCF with a hit
region is verified using Myers bitvector algorithm. A full alignment is com-
puted for an SCF only it has a match within the user specified error rate.
(C) The full overlap alignment between the read and the segment sequence is
computed within a band derived from the exact SCF match location deter-
mined by MBVA and the desired maximum error rate. The best overall align-
ment is reported as the matching segment

2006). It is fully sensitive, i.e. it guarantees to report every SCF that
might yield a match. The SWIFT filter returns not only a set of can-
didate SCFs but also the corresponding potential bit region within
the read, i.e. it reduces the search space within the read sequence as
illustrated in Figure 4A. Whether or not there is an occurrence of the
SCF in the hit region within the error threshold is verified using
Myers bit vector algorithm (MBVA) (Myers, 1999) (Fig. 4B). Its
asymptotic runtime is linear in the length of the hit region if the SCF
length is chosen such that it does not exceed the machine word size
of the underlying architecture in bits. It does not compute an align-
ment, but can determine the score as well as the begin and end pos-
ition of the best alignment.

Because the SCF alignments later form the innermost part of the
segment overlap alignments, the position of the SCFs defines if and
how far the alignment reaches into the CDR3 regions. Because bases
inside the CDR3 region undergo modification during the recombin-
ation, they shouldn’t be considered for segment identification.
However, since the J segment region of the read often suffers from
base substitutions originating from unspecific PCR primer binding,
it can make sense to include a few bases from the CDR3 region to
increase the segment identification precision. Therefore, the V align-
ment is configured to end with the Cys triplet while the J alignment
starts 6 bp before the Phe triplet. In turn, the default values for
allowed SCF errors are set to 6;;36: = 1 and 5JH1—a1CF = 2. TheJ SCF
length is set to 12 bp and the V SCF length is set based on the short-
est read in the input data by default. For reads with a length of at
least 120 bp it is set to 20 bp, otherwise it is reduced down to 10 bp
if reads of length 100 bp or shorter occur in the input data. All par-
ameters can be modified by the user.

2.1.2 Alignment computation and segment assignment

Last, based on the exact alignment location of the SCF and the max-
imum segment match error rates exax and elnax, IMSEQ computes a
full overlap alignment between the read and the segment sequence in
a banded fashion (Chao et al., 1992). The maximum error rates can
be specified by the user and should be chosen generously according
to the expected error rate of the underlying PCR protocols and
sequencing platform. The default values are exax = 0.05 and
elnax = 0.15, since the J-segment area of the read often suffers from
primer-induced base substitutions. The alignment computation step
is illustrated in Figure 4C.

If an SCF originates from more than one gene segment, the align-
ment has to be computed for all of these segments. In the end, the
best scoring overlap alignment is used to assign the gene segment to
the clonotype. If no alignment within the user-specified error rate
boundary can be found, the read is rejected. If there is no unique
best matching segment, multiple segments are assigned. For the V
segment, this can be due to insufficient read lengths, i.e. the read
does not cover enough of the gene segment to uniquely identify the
incorporated segment. This can be addressed by non-overlapping
paired-end sequencing, which can resolve most ambiguity even at
the same overall read length, since the forward read can be used to
cover upstream regions with a higher degree of sequence divergence
(CDR1 and CDR2) (Tonegawa, 1983) and thus identifiability.
IMSEQ supports this approach and also implements another strat-
egy to handle V ambiguity, as described below.

2.1.3 Non overlapping paired-end segment alignment

If each VDJ-covering read has an additional paired-end read cover-
ing only the V region of the read (Fig. 2B), the SCF matching and
alignment computation as described earlier is omitted for the V seg-
ment. Instead, a combination of the SWIFT filter and MBVA is used
to find the best match of the V read against the set of reference V
segments, and then to compute an overlap alignment with the VDJ-
read.

2. 1 .4 CDR3 identification

After the V and the J segment have been identified, the CDR3 region
is determined based on the Cys104 and P116118 triplet positions
known from the V andJ segment sequences. If these triplets are out
of frame or if a stop codon occurs inside the CDR3 region, the read
is rejected as non-functional. Each rejected read as well as the rea-
sons for the rejection are recorded in a log file.

2.2 Repertoire generation

After all input reads have been clonotyped, the clonotype repertoire
is derived from the counts of all uniquely occurring clonotypes. The
number of unique clonotypes identified is generally over-estimated
due to PCR and sequencing errors as well as V orJ segment identifi-
cation ambiguities. To resolve this, the repertoire generation in-
volves several correction steps that cluster clonotypes in order to
correct these errors. IMSEQ offers three clustering methods, two of
which are designed to cluster clonotypes with different CDR3
sequences (simple clustering and quality clustering) and one that
corrects for ambiguously identified V orJ segments, the segment am-
biguity clustering.

2.2.1 Segment ambiguity clustering

As described in Section 2.1.2, for some reads the V- or J-segment
cannot be uniquely identified and multiple segments are assigned to
that read. If sufficiently many other reads that originated from the

91m ‘09 isnﬁnV uo sejeﬁuV s01 ‘erulomeg JO AirSJQAru [1 1e /810's1eumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

IMSEQ

2967

 

same clonotype can be unambiguously assigned, then it is possible
to correct the ambiguous reads under the assumption that relatively
few clonotypes share the same CDR3 region and that this is unlikely
to coincide with overlapping V- and J-segment assignments. Thus, in
order to correct for additional clonotypes induced by such segment
matching ambiguity, we partition the set of unique clonotypes C
into sets of clonotypes that share the same CDR3 sequence,
C = {(31, - - - ,C;}. For every ordered pair of clonotypes (c1, c2) where
c1,cz E CZ‘,c1 75 c2 IMSEQ checks whether the set of identified
V andJ segments of c1 are a subset of or equal to the corresponding
sets of c2, i.e. V(c1) g V(cz) /\](c1) §](c2). If that is the case,
the pair (c1, c2) is added to the set of correctable clonotype pairs
73. After all pairs in one clonotype subset have been checked,
the count of every clonotype ce is distributed among all
c* E {c,- | (ci,ce) E 73}, maintaining the frequency ratios among
these clonotypes. This procedure is repeated for all clonotype sub-
sets contained in C.

2.2.2 Quality clustering

Erroneous base calls inside the CDR3 region generate new clono-
types, i.e. increase the repertoire size, and falsify the clonotype fre-
quencies, as they affect some clonotypes more than others due to the
sequence dependency of sequencing errors (Dohm et al., 2008). To
keep this bias as low as possible, reads with low quality bases should
also be incorporated into the analysis. This requirement, however,
increases the demand for error correction inside the CDR3 sequence.
Therefore, we perform a post-processing step that checks for every
identified clonotype cluster whether it is likely to be erroneously
derived from another clonotype cluster. Let qk(c) denote the mean
sequencing quality of the lath base within the CDR3 region among
all reads that were clonotyped as c and q(c) and oq(c) denote the
mean and SD of these mean qualities. In order to consider clonotype
cluster cc to be an erroneous version of c,-, we demand that the same
V and J segments were identified in cc and ci, that their CDR3 se-
quences are of the same length and differ only in eﬁnax positions and
that

qk(ce) Sake) _ 5min ' 0q(6e)

for all la 6 £(ci, ce), where smin and eﬁnax are user-defined parameters
(see Section 2.2.4) and £(ci,ce) is the set of positions at which c,
and c6 differ. Clonotype pairs that fulfill these conditions are stored
and the counts of erroneous clonotype clusters redistributed as
described in Section 2.2.1.

2.2.3 Simple clustering

Errors in the multiplex PCR or library preparation steps are not
associated with reduced sequencing quality scores, but usually dis-
play a low edit distance to a genuine clonotype. Additionally to the
quality dependent clonotype clustering approach described in
Section 2.2.2, we therefore also implemented the same clustering ap-
proach without the quality score requirement, i.e. simply based on a
threshold efnax for the maximum number of errors inside the CDR3
region. In contrast to quality clustering, this step can therefore cor-
rect PCR errors. However, there is a risk that this clustering method
might erase true positive clonotypes that are highly similar to other
clonotypes.

2.2.4 Clustering parameters

The two clustering methods previously described are performed in a
combined fashion. That is, given two clonotypes that differ in given
number of positions inside the CDR3 region, if only some of them

can be explained by a low-quality score clustering will still be per-
formed if the number of remaining errors is less or equal than that
allowed in the simple clustering step. The default parameters for the
number of allowed errors are eﬁnax = 4 and smin = 1 for quality
based and efnax = 1 for simple clustering. The parameters can be ad-
justed by the user. Optionally a maximum ratio n(ce)/n(ci)grsmax
can be configured, where n(ce) denotes the count of the erroneous
clonotype and n(c,-) denotes the count of the target clonotype for

clustering.

2.3 Implementation

IMSEQ was implemented in C++ using Squn (Doring et al., 2008)
and is available for download at www.imtools.org. In the most basic
setup it requires the reference V and J segment sequences in FASTA
format with annotations that indicate the positions of the Cys104
and P116118 triplets in the segments as well as at least one input file in
FASTA or FASTQ format. GZIP compression is supported for all in-
put files. The program can write different kinds of output files. The
most verbose output file is a tab separated file containing detailed
per-read information such as the identified V and J segment(s), the
begin and end position of the CDR3 region, the number of V andJ
bases aligned outside the CDR3 region as well as the error positions
among those bases. IMSEQ can also write aggregated files with (po-
tentially corrected) clonotype counts, using either nucleotide or
amino acid-based clonotype identities. Furthermore, a file contain-
ing the IDs of all rejected reads associated with the rejection reason
such as low sequence quality, out of frame CDR3 boundaries or
stop codons inside the CDR3 can be written.

3 Clonotyping evaluation

We compared IMSEQ to five other tools: HighV-QUEST (Li et al.,
2013), Decombinator (Thomas et al., 2013), MITCR (Bolotin et al.,
2013), MIGEC-CdrBlast (Shugay et al., 2014) and TCRklass (Yang
et al., 2015). TCR beta chain genes were simulated as described in
the following section, and Illumina reads were simulated using
Mason 2 (Holtgrewe, 2010). Additionally, data from a real sequenc-
ing experiment was analyzed.

3.1 Data simulation

We simulated VDJ-recombined human TCRB genes by implement-
ing a simple model: The V, D andJ segments are chosen uniformly
from the set of functional gene segments as defined by the IMGT
(Giudicelli et al., 2005). For every junction and involved segment, nd
nucleotides are removed from the segment end, np nucleotides are
added as a complementary palindrome and nn nucleotides are added
randomly. For every junction, an overlap of no nucleotides is created
between the involved segments and nucleotide mismatches are
resolved randomly. The distributions for the parameters nd,np,nr1
and no were manually tuned such that the CDR3 length distribution
matches the one observed in five deeply sequenced (average 7.5 mio.
reads), unspecific TCRB repertoires from different donors. To in-
corporate PCR errors, a simple replication model was used where in
every cycle every sequence has a probability of Pr to be replicated
and every base incorporation has a probability of PC to to result in a
random false base. Insertions and deletions were not considered in
the PCR model.

3.2 Dataset description
We generated two human TCR-ﬂ gene datasets, one with 5 X 105
unique clonotypes and one with 150 unique clonotypes. To simulate

9mg ‘09 isnﬁnV uo sejeﬁuV s01 ‘erulomeg JO AirSJQAru [1 1e /810's1eumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

2968

L.Kuchenbecker et al.

 

the data as realistically as possible, the reference segments passed to
the simulator were truncated according to the enrichment PCR
primer sites used by Dziubianau et al. (2013). As some of the tools
come with their own gene segment reference data, in order to
exclude effects of different reference segment datasets, only seg-
ments denoted as ‘functional’ in the IMGT reference database were
used during the simulation, as this can be considered the minimal set
of gene segments that should be supported by all tools. The first
dataset was kept error-free and used to validate the basic clonotyp-
ing functionality of each tool tested. The dataset was also tested
against IMGT HighV-QUEST in order to ensure that the clonotype
simulation generated valid sequences. The second dataset was in-
silico PCR-amplified to a total size of 1.5 X 105 sequences using a
per cycle amplification probability of P21 2 0.8 and a per-base substi-
tution probability of Pe 2 10‘4, referred to as PCR. Finally, another
dataset was generated, introducing sequencing errors into each of
the PCR amplified fragments and reducing the fragment length
to 150 bp in order to establish conditions that correspond to real
sequencing as closely as possible. This step was performed
using Mason 2 (Holtgrewe, 2010), using its default error profile op-
tions. This dataset is referred to as PCR +Seq. Although the
simulator provides paired-end data, only the VDJ-read was used
for the analysis since not all of the tools in our comparison can han-
dle paired-end data. A separate evaluation showing the improve-
ment of split paired-end (SPE) workﬂows is presented in Section 4.

Additionally, data originating from a real experiment was ana-
lyzed to show the runtime performance in real life applications as
well as differences in the estimated number of clonotypes. The
dataset originates from antigen unspecific CD4+T cells which
were prepared according to the protocol described by Dziubianau
et al. (2013) and sequenced on an Illumina HiSeq sequencing sys-
tem. The dataset is referred to as real data and contains 3 504 203
reads.

3.3 Evaluation criteria

To assess the clonotyping and repertoire generation performance,
two different evaluations were performed. One assesses the perform-
ance only on a clonotype level, i.e. discarding the frequencies of the
clonotypes, and the other evaluation assesses the per-read clonotyp-
ing performance.

3.3.1 Clonotype level evaluation

In many studies it is crucial to know whether or not a clonotype is
present in a sample, while its exact frequency is less important. That
includes different measures to assess the diversity of a sample, which
are affected by over- or underestimation of the number of clono-
types or comparative methods that take into account whether or not
two samples share a clonotype. Hence, if clonotypes are falsely
removed from a repertoire, i.e. due to over-clustering or biased clo-
notyping, or if insufficient error handling enlarges the number of
clonotypes in the repertoire, the performance of these methods will
suffer. Therefore, one of the evaluations we performed is a binary
classification based on the presence and absence of clonotypes in the
repertoires generated by the different methods.

3.3.2 Per read clonotyping performance

Because the competing tools do not provide per-read result informa-
tion, the performance was estimated based on the clonotype fre-
quencies. That is, given the simulated count of a clonotype nC and
the detected count of that clonotype nc’, we define the number of

true positive, false positive and false negative read to clonotype as-
signments for a particular clonotype c as

FPC = max (0,nc’ — nc)
FNC = max (0, nC — nc’)

TPC = min (nc,nc’

The overall number of events is computed as the sum of events over
all simulated and detected clonotypes.

3.4 Tool parameters

The tools DECOMBINATOR, HighV-QUEST and MIGEC-
CdrBlast were run with their default parameters. None of these tools
support error correction and therefore could not be parameterized
in that respect. Each tool comes with their own set of reference se-
quences for human TCRB gene segments. To assess only the core
clonotyping capability, the correction-capable tools were instructed
to skip clustering (MITCR maxClusterizationRatio=0, IMSEQ -
qcme 0 -scme 0). For the erroneous datasets PCR and PCR+SEQ
and the real data, MITCR was invoked with default parameters and
the IMSEQ parameters were set as indicated.

4 Paired-end evaluation

To assess the impact of an SPE protocol versus an SE protocol under
real world conditions, we analyzed 14 different (8 antigen specific
and 6 polyclonal) samples on an Illumina MiSeq machine in paired-
end mode with 100 bp forward reads and 200 bp reverse reads. The
reads were then processed using IMSEQ, once in a 100/100 bp
paired-end setting and once in a 200 bp SE setting. For each setting,
the analysis was performed with and without segment ambiguity
clustering (Section 2.2.1). The results depicted in Figure 5 show the
proportion of V segment ambiguity removed relative to the 200 bp
SE analysis without segment ambiguity clustering.

5 Results

5.1 Clonotyping and error correction

The results of the clonotyping performance for all tools are shown
in Table 1. The evaluation of the error-free dataset analysed by
IMGT HighV—QUEST shows that the simulated TCRB gene se-
quences are valid and correctly labelled according to the IMGT
naming scheme. IMSEQ can correctly clonotype all provided

 

I 200 bp single-end with correction
I 100 bp paired-end without correction
I 100 bp paired—end with correction

 

 

 

 

 

I—-
Polyclonal - |———|
l——|
antigen- — I
. — |———|

spec1ﬁc II
| l l I I I
0 20 40 60 80 100

Fig. 5. Impact of paired-end sequencing on V segment ambiguity. Datasets
from eight influenza specific and six polyclonal samples were analyzed in
four ways: 200 bp SE and 100 bp paired-end, each with and without V ambigu-
ity correction. For each sample type the percentage of remaining V-
ambiguous clonotypes compared with the 200 bp SE data with no correction
is shown

9mg ‘09 isnﬁnV uo sejeﬁuV s01 ‘erulomeg JO AirSJQAru [1 1e /810's1eumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

IMSEQ

2969

 

sequences in absence of any errors and also TCRklass reports only
correct clonotype assignments, missing a small fraction of the reads
resulting in a recall of 99.9%. MIGEC-CdrBlast also derives almost
all clonotypes correctly with a very low number of false positive and
false negative calls. MITCR fails to clonotype some reads correctly,
resulting in about 94% precision and recall for both reads and
clonotypes. Decombinator clonotypes only 57% of the reads cor-
rectly, generally having difficulties to define the CDR3 region
correctly, which confirms previous results by Bolotin et al. (2013).
Decombinator was therefore excluded from the subsequent evalu-
ations. IMGT HighV/QUEST was only included to verify the valid-
ity of the simulated data, but was not included in the subsequent
tests because it is of no practical use for the analysis of real world
NGS data—it is limited to 500 000 reads, performs only per read
clonotyping without repertoire generation and error correction,
there is no standalone software and the online analysis of a dataset
usually takes days.

For sequences with PCR errors, IMSEQ has the highest read level
recall and precision even without any posterior clustering (99%
each). It recovers all clonotypes, however, generates additional clo-
notypes which aren’t corrected for without clustering (CT precision
79%). MIGEC-CdrBlast, which doesn’t support error clustering,
performs similarly. It is unclear whether TCRklass performs any
kind of error correction inside the CDR3 region, however, it’s per-
formance is only slightly better than that of MIGEC-CdrBlast, indi-
cating that it doesn’t. With simple clustering enabled, IMSEQ
outputs only correct clonotype assignments and covers 99% of the
input reads. MITCR again performs worse than IMSEQ with about
95% precision and recall for both reads and clonotypes.

The evaluation with 150 bp sequencing reads simulated from the
dataset containing PCR errors firstly illustrates the impact of poster-
ior error correction. MIGEC-CdrBlast and IMSEQ without cluster-
ing detect about 10 000 unique clonotypes, whereas only 150 are
actually present in the sample. Again, TCRklass performs only

slightly better than these tools, overestimating the total number of
clonotypes to be 8666. With both clustering methods enabled,
IMSEQ detects 185 clonotypes with a 100% recall and 81% preci-
sion. On the read level, precision and recall reach 99%. MITCR per-
forms again about 5% worse than IMSEQ in read precision as well
as read and clonotype recall, the clonotype precision drops to 14%
due to the many false positive clonotypes called. Overall, MITCR
detects 1026 unique clonotypes.

Finally, the experimental data revealed a large variability regard-
ing the number of clonotypes detected across the different tools. As
expected, the tools that do not perform any correction of sequencing
and PCR errors report the largest number of clonotypes (MIGEC-
CdrBlast 34 006 and TCRklass 37 514 clonotypes). However, there
is also a more than threefold difference between MITCR (6213 clo-
notypes) and IMSEQ (20 725). Manual inspection revealed that
MITCR clusters all clonotypes with the same CDR3 sequence—even
if they have clearly distinct V or J segments incorporated and add-
itionally fails to detect some, even highly abundant clonotypes for
no apparent reason. All tools were able to assign clonotypes to
~72% of the reads, except for MIGEC-CdrBlast, which detected
clonotypes for only 65% of the input sequences.

The runtimes were measured on a dual 6-core Intel Xeon X5675
(3.06 GHz) Mac Pro system with 64 GB of RAM running Mac OS
10.9. This does not apply to IMGT/HighV-QUEST, which is a web-
service hosted by the IMGT consortium. IMSEQ, MITCR and
MIGEC-CdrBlast are multi-threading capable and were therefore
run utilizing all 24 CPUs (including hyper-threading) presented by
the operating system. Among the locally run tools regarding the 500
000 unique sequences dataset (error-free), IMSEQ processed the
data in 37 s, followed by MITCR requiring 57 s. The other tools
were significantly slower, i.e. the DECOMBINATOR analysis took
231 s, MIGEC-CdrBlast 393 s and TCRklass 341 s.

The PCR dataset was processed in 3 s by MITCR and IMSEQ,
MIGEC-CdrBlast required 7s and TCRklass 99 s. The PCR+Seq

Table 1. Evaluation results for four different datasets: 500 000 unique error-free clonotypes (first box), 150 unique clonotypes amplified up
to 150 000 sequences, with and without simulation of errors induced by sequencing (second and third box) and a dataset originating from a
real experiment (fourth box). The best values for each dataset are highlighted in bold

 

 

Clonotype level Read level

Tool Options Dataset No. CTs Precision Recall Precision Recall Time

DECOMBINATOR default error-free 49 8 996 0. 645 6 0.5 703 0.5757 0.5745 23 1 s
MITCR no clust error-free 498 415 0.9549 0.9418 0.9448 0.9418 5 7s
MIGEC-CdrBlast default error-free 499 987 0.9987 0.9987 0.9987 0.9987 393 s
TCRklass default error-free 499 395 1.0000 0.998 8 1.0000 0.998 8 341 s
HighV-QUEST no clust error-free 500 000 1.0000 1.0000 1.0000 1.0000 >24 h
IMSEQ no clust error-free 500 000 1.0000 1.0000 1.0000 1.0000 37 s
MIGEC-CdrBlast default PCR 1 89 0.7884 0.9933 0.9887 0.9886 7 s
TCRklass default PCR 185 0.8054 0.9933 0.9970 0.9951 99 s
MITCR default PCR 151 0.9536 0.9600 0.9521 0.9519 3 s
IMSEQ no clust PCR 190 0.7895 1.0000 0.9969 0.9969 3 s
IMSEQ efnax = 1 PCR 150 1.0000 1.0000 1.0000 0.9999 3 s
MIGEC-CdrBlast default PCR + Seq 10 413 0.0143 0.9933 0.8932 0.8859 40 s
TCRklass default PCR + Seq 8666 0.0172 0.9933 0.9154 0.8938 79 s
MITCR default PCR + Seq 1026 0.1404 0.9600 0.9464 0.9215 4 s
IMSEQ no clust PCR + Seq 9541 0.0157 1.0000 0.9073 0.8954 6 s
IMSEQ efnax : 1 PCR + Seq 365 0.4110 1.0000 0.9985 0.9854 7 s
IMSEQ eﬁnax = 4, efnax = 1 PCR + Seq 185 0.8108 1.0000 0.9991 0.9860 10 s
MIGEC-CdrBlast real data 34 006 — — — — 228 s
TCRklass default real data 3 7 5 14 — — — — 13 1 0 s
MITCR default real data 6213 — — — — 37 s
IMSEQ eﬁnax = 4, efnax = 1 real data 20 725 — — — — 69 s

 

9mg ‘09 isnﬁnV uo sejeﬁuV s01 ‘erulomeg JO AirSJQAru [1 1e /810's1eumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

2970

L.Kuchenbecker et al.

 

dataset analysis required 6, 7 and 10 s (no clustering, simple- and
combined error correction) using IMSEQ, 4s using MITCR, 405
using MIGEC-CdrBlast and 79 s using TCRklass.

Last, the experimentally generated dataset was processed rela-
tively quickly by MITCR (37 s) and IMSEQ (69 s), while MIGEC-
CdrBlast required 228 s and the single threaded TCRklass
took > 20 min to process it.

5.2 Split paired-end sequencing

The SPE data evaluation shows the impact of SPE sequencing (as de-
picted in Fig. 2B) on two types of real datasets, eight antigen-specific
and six polyclonal repertoires. It shows that 100 bp SPE sequencing
in conjunction with posterior segment ambiguity resolution can
drastically reduce the V segment ambiguity compared with a SE-
sequencing configuration with 200 bp, i.e. the same overall read
length. The posterior clustering can correct a limited amount of am-
biguity on the 200 bp SE data, i.e. 80—98% of the ambiguous clono-
types remain after correction compared with the 200 bp SE data
without correction for the polyclonal data and 62—95 % for the anti-
gen-specific data. Running the analysis on the 100 bp SPE data
instead reduces the number of ambiguous clonotypes down to 40—
75% in the polyclonal and down to 18—6 1% in the antigen-specific
case. In conjunction, i.e. when processing the 100 bp SPE dataset
with posterior ambiguity clustering, almost all ambiguity can be
resolved in the antigen specific samples (0—4% ambiguous clono-
types remain). In the polyclonal datasets the reduction leaves 20%
or less of the ambiguous clonotypes.

5.3 Segment alignment analysis

Because IMSEQ computes the full alignment between the gene seg-
ments and the input read, it can also reveal details about those align-
ments and the errors encountered in the input reads.

Supplementary Figure S1.1A shows the match/mismatch fre-
quencies along the TRBJ 2-7 segment observed in a sample of unspe-
cific CD8 + T cells generated from the detailed IMSEQ output. The
genes were amplified using the multiplex PCR primers published by
Dziubianau et al. (2013). In the underlying sample, >40 000 reads
originated from clones that incorporate the TRBJ 2-7 segment. The
distribution of alignment errors across the positions clearly shows
that positions 17, 27 and 28 mismatch in about 50% of the reads,
positions 23 and 26 even in about 75% of the reads. Supplementary
Figure S1.1B shows the alignments of the TRBJ 2-7 gene (bases up-
stream the Phe triplet are omitted) against the primers designed to
amplify genes incorporating the TRBJ segments 1-1 and 1-6. All the
error positions are explained by unspecific binding of the TRBJ 1-1
primer, while positions 23 and 26 additionally suffer from unspe-
cific binding of the TRBJ 1-6 primer.

An example for the alignment match/mismatch distribution in
the V segment is shown in Supplementary Figure 51.1C. When the
recombined gene is sequenced from the J segment, i.e. reverse, the
coverage is uniform in the J segment while it varies towards the end
inside the V segment, depending on the length of the J segment and
the CDR3 region. The fewer V segment bases are covered by the
read the higher is the chance that, in a SE experiment, the V segment
cannot be uniquely identified.

Therefore, IMSEQ’s detailed per-read alignment error diagnos-
tics provide valuable information about potential issues regarding
the gene enrichment and sequencing to the experimentalist. The
data can be used to detect and quantify unspecific primer binding
artifacts, analyze the V coverage distribution and also to detect
errors in the reference database or new alleles.

6 Conclusion

We have presented IMSEQ, a fast and ﬂexible tool for TCR/IG rep-
ertoire analysis from NGS data. Our method is capable of handling
SE as well as overlapping and SPE data. Apart from per-read clono-
typing it also features error correction methods to resolve false clo-
notype calls originating from PCR and sequencing errors as well as a
method to correct for ambiguously assigned gene segments.

The results produced by IMSEQ were thoroughly validated using
simulated data. The tools performance was compared with that of
other state of the art standalone TCR/IG clonotypers available,
namely DECOMBINATOR, TCRklass, MITCR and MIGEC-
CdrBlast. Our evaluations show that the clonotyping capabilities of
IMSEQ are superior to those of DECOMBINATOR and MITCR
while being comparable to those of MIGEC-CdrBlast and TCRklass.
However, IMSEQ substantially outperformed the latter tools with re-
spect to runtime.

When it comes to the error correction performance, IMSEQ could
only be compared with MITCR, and showed superior performance es-
pecially with regards to the precision of clonotype detection. MIGEC-
CdrBlast has additional requirements for the experimental setup,
namely the incorporation of UMIs, to be able to perform any kind of
error correction. DECOMBINATOR does not support error correc-
tion at all and was also excluded from the evaluation due to its poor
clonotyping performance. The TCRklass error correction does not
seem to include the CDR3 region and therefore does not effectively re-
duce the number of false clonotype calls due to errors.

The evaluation of the impact of SPE sequencing showed a great
improvement in V segment accuracy when compared with SE
sequencing with the same overall read length.

To conclude, IMSEQ is a rapid, well tested, flexible and error-
aware clonotyping and repertoire generation tool that was shown to
be superior to available tools with regard to clonotyping and stand-
alone error correction capabilities.

Funding

This research was funded by the German Federal Ministry of Education and
Research (BMBF) within the grants “Primage” (0315 895A) to N.B. and
“eKid” (01ZX1312A) to N.B. as well as by the Investitionsbank Berlin (IBB)
within the “Profit” grant (10142562) to N.B.

Conﬂict of Interest: none declared.

References

Arstila,T.P. et al. (1999) A direct estimate of the humanocb’ T cell receptor di-
versity. Science, 286, 95 8—6 1.

Bolotin,D.A. et al. (2013) MiTCR: software for T-cell receptor sequencing
data analysis. Nature Methods, 10, 813—814.

Brochet,X. et al. (2008) IMGTN-QUEST: the highly customized and inte-
grated system for IG and TR standardized VJ and VDJ sequence analysis.
Nucleic Acids Res., 36(Suppl. 2), W503—W508.

Chao,K.M. et al. (1992) Aligning two sequences within a speciﬁed diagonal
band. Comput. Appl. Biosci., 8, 481—487.

Dohm,J.C. et al. (2008) Substantial biases in ultra-short read data sets from
high-throughput DNA sequencing. Nucleic Acids Res., 36, e105.

D6ring,A. et al. (2008) Squn an efﬁcient, generic C++ library for sequence
analysis. BMC Bioinformatics, 9, 11.

Dziubianau,M. et al. (2013) TCR repertoire analysis by next generation
sequencing allows complex differential diagnosis of T cell—related path-
ology. Am. ]. Transplant, 13, 2842—2854.

Giudicelli,V. et al. (2005) IMGT/GENE-DB: a comprehensive database for
human and mouse immunoglobulin and T cell receptor genes. Nucleic Acids
Res., 33(Suppl. 1), D256—D261.

9mg ‘09 isnﬁnV uo sejeﬁuV s01 ‘erulomeg JO AirSJQAru [1 1e /810's1eumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

IMSEQ

2971

 

Holtgrewe,M. (2010) Mason—a read simulator for second generation sequenc-
ing data. Technical report PU Berlin. Institut fiir Mathematik und
Informatik, Freie Universitat Berlin

Jackson,K.J. et al. (2014) Human responses to inﬂuenza vaccination show
seroconversion signatures and convergent antibody rearrangements. Cell
Host and Microbe, 16, 105—114.

Janeway,C.A. et al. (1999) Immunobiology: The Immune System in Health
and Disease. Current Biology Publications, New York, NY.

Li,S. et al. (2013) IMGT/HighV QUEST paradigm for T cell receptor IMGT
clonotype diversity and next generation repertoire immunoproﬁling. Nat.
Commun., 4, 2333.

Myers,G. (1999) A fast bit-vector algorithm for approximate string matching
based on dynamic programming. ]. ACM, 46, 395—415.

Rasmussen,K.R. et al. (2006) Efﬁcient q-gram ﬁlters for ﬁnding all e-matches
over a given length. ]. Comput. Biol., 13, 296—308.

Shugay,M. et al. (2014) Towards error-free proﬁling of immune repertoires.
Nat. Methods, 11, 653—655.

Sims,D. et al. (2014) Sequencing depth and coverage: key considerations in
genomic analyses. Nat. Rev. Genet, 15, 121—132.

Thomas,N. et al. (2013) Decombinator: a tool for fast, efﬁcient gene assign-
ment in T-cell receptor sequences using a ﬁnite state machine.
Bioinformatics, 29, 542—5 5 0.

Tonegawa,S. (1983) Somatic generation of antibody diversity. Nature, 302,
575—5 81.

Vollmers,C. et al. (2013) Genetic measurement of memory B-cell recall using
antibody repertoire sequencing. Proc. Natl. Acad. Sci, 110, 13463—13468.
Wu,D. et al. (2012) High-throughput sequencing detects minimal residual dis-

ease in acute T lymphoblastic leukemia. Sci. Trans. Med., 4, 134ra63.

Yang,X. et al. (2015) TCRklass: a new k-string—based algorithm for human
and mouse TCR repertoire characterization. ]. Immunol., 194, 446—454.

Ye,J. et al. (2013) IgBLAST: an immunoglobulin variable domain sequence
analysis tool. Nucleic Acids Res., 41, W34—W40.

Zhang,J. et al. (2014) PEAR: a fast and accurate Illumina Paired-End reAd
mergeR. Bioinformatics, 30, 614—620.

9mg ‘09 isnﬁnV uo sejeﬁuV s01 ‘erulomeg JO AirSJQAru [1 1e /810's1eumo[pJOJXO'soriemJOJurorw/zdnq wort pepeolumoq

