Bioinformatics Advance Access published July 31, 2016

Bioinformatics, 2016, 1—3

doi: 10.1093/bioinformatics/btw415

Advance Access Publication Date: 8 July 2016
Applications Note

 

Systems biology

SYNBADm: a tool for optimization-based
automated design of synthetic gene circuits

Irene Otero-Muras*, David Henriques and Julio R. Banga*

BioProcess Engineering Group, llM-CSIC, Spanish National Research Council, 36208, Vigo, Spain

*To whom correspondence should be addressed.
Associate Editor: Jonathan Wren

Received on April 5, 2016; revised on June 3, 2016; accepted on June 23, 2016

Abstract

Motivation: The design of de novo circuits with predefined performance specifications is a chal-
lenging problem in Synthetic Biology. Computational models and tools have proved to be crucial
for a successful wet lab implementation. Natural gene circuits are complex, subject to evolutionary
tradeoffs and playing multiple roles. However, most synthetic designs implemented to date are
simple and perform a single task. As the field progresses, advanced computational tools are
needed in order to handle greater levels of circuit complexity in a more flexible way and consider-
ing multiple design criteria.

Results: This works presents SYNBADm (SYNthetic Biology Automated optimal Design in Matlab),
a software toolbox for the automatic optimal design of gene circuits with targeted functions from
libraries of components. This tool makes use of global optimization to simultaneously search the
space of structures and kinetic parameters. SYNBADm can efficiently handle high levels of circuit
complexity and can consider multiple design criteria through multiobjective optimization. Further,
it provides flexible design capabilities, i.e. the user can define the modeling framework, library of
components and target performance function(s).

Availability and Implementation: SYNBADm runs under the popular MATLAB computational en-
vironment, and is available under GPLv3 license at https://sites.google.com/site/synbadm

Contact: ireneotero@iim.csic.es orjulio@iim.csic.es

 

 

1 Introduction

Computer-aided design (CAD) is fundamental in modern engineer-
ing. During the last decade, many efforts in the context of Synthetic
Biology have been dedicated to incorporate CAD as part of the
forward-engineering design cycle (Arpino et al., 2013). Marchisio
(2014) and Huynh and Tagkopoulos (2014) offer a comprehensive
review of computational tools for the design of synthetic biological
circuits. The GEC language by Pedersen and Phillips (2009) and the
Parts 8C Pools framework by Marchisio and Stelling (2008, 2011)
are pioneering works conceptualizing modular computational de-
sign of synthetic gene circuits. Both tools use search algorithms not
based on optimization to explore designs compatible with pre-
specifications. Automated design of biocircuits was first formulated
as an optimization problem in Optcircuit (Dasika and Maranas,

2008) and Genetdes (Rodrigo et al., 2007). Optimization-based al-
gorithms ensure a more efficient search in the design space, attempt-
ing to find the circuit with overall best possible performance. In
contrast to GEC and Parts 8C Pools, neither Optcircuit nor Genetdes
are suitable for modular design. In terms of modularity,
AutoBioCad (Rodrigo and Jaramillo, 2012), SBROME (Huynh
et al., 2013) and iBioSim (Myers et al., 2009; Roenher and Myers,
2014) made an important step forward. SBROME allows reusing
preexisting constructs, and its extension by Huynh and
Tagkopoulos (2014) identifies the smallest number of modules for a
specified function. iBioSim handles module reuse, operates at a low
specification level and do not account for biological diversity.
Biological diversity (one functional behavior can be carried out by
different biological processes) is important when all topologies

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1

9mg ‘09 isnﬁnV uo salaﬁuV soq ‘eiulomeg JO AiiSJQAiu [1 112 ﬂJO'sleumo[pJOJXO'sopeuuoguioiq/ﬁdnq wort papeolumoq

I. Otero-Muras et al.

 

including those non-intuitive or previously unknown want to be
considered, allowing identifying new design principles.

Here we present SYNBADm (SYNthetic Biology Automated op-
timal Design in Matlab), a software toolbox that enables to auto-
matically find biocircuit designs with pre-specified performance
starting from a library of biological components, using global opti-
mization. SYNBADm is developed aiming for optimality, modular-
ity, biological diversity, and a high ﬂexibility regarding the target
behaviours and components. SYNBADm includes state of the art
global mixed-integer nonlinear programming (MINLP) optimization
solvers with proven efficiency in biocircuit design (Otero-Muras and
Banga, 2014). It handles high levels of circuit complexity, and in-
corporates multi-objective design to find gene-circuits with best
trade-offs between multiple conﬂicting criteria.

2 Summary of features

SYNBADm is a Matlab-based multiplatform (Windows and Linux)
software toolbox for automated optimal design of gene circuits. To
our knowledge, it is the first tool incorporating multiobjective
(Pareto optimal) design together with a suite of robust global opti-
mization solvers, offering:

i. ﬂexibility for the deﬁnition of biological components (pro-
moters, coding regions, inducers). Mass action and Hill type
kinetics are currently supported;

ii. ﬂexibility for the deﬁnition of design targets (objective
functions);

iii. multi-criteria (Pareto optimal) design, ﬁnding the best trade-offs
between competing design criteria (Pareto optimal solutions);

iv. simultaneous optimization of topology and parameters using a
MINLP framework;

v. a suite of global optimization methods for MINLP, all provid-
ing a good compromise between diversiﬁcation (exploration by
global search) and intensiﬁcation (local search), and ensuring
robustness and efﬁciency;

vi. efﬁcient dynamic simulation in Matlab and C++ (using
CVODES).

2.1 Problem definition

2.1.1 Library of components

Users can employ built-in libraries or easily define new libraries of
components using the templates provided. SYNBADm library func-
tions generate the necessary Matlab and C ++ codes.

2. 1 .2 Objective functions

Users can easily define objective functions with available templates
(built-in objective functions include switch-like behaviour upon in-
duction, protein production cost and sustained oscillations).

2. 1 .3 Design specifications

Users can specify the minimum and maximum number of promoter-
coding regions pairs allowed in the design, the optimization and in-
tegration solver options etc.

2.2 Available tasks

2.2.1 Single objective design

SYNBAD_Design_SO solves the single objective optimization prob-
lem returning the circuit (topology and parameters) with the best
performance.

2.2.2 Multi-objective design

SYNBAD_Design_MO solves the multi-objective optimization
problem searching for best trade-offs between competing criteria;
SYNBAD_Plot_Pareto depicts the set of circuits in the Pareto front.

2.2.3 Simulation of biocircuit dynamics
SYNBAD_Simulate simulated the dynamics of biocircuit designs
(time course levels of the species involved).

2.3 Illustrative examples
A number of examples are provided with the tool, including:

(i)Design of an endogenous oscillator (single objective): the aim
is to find endogenous oscillators from a built-in library (containing
4 promoters and 11 coding regions) assuming kinetics of mass ac-
tion type for transcription and translation reactions and taking into
account mRNA dynamics. The target behaviour is encoded in the
objective function OF_Oscil, which is optimal at a perfect (non-
dumped) oscillator. Using SYNBADm we find (considering circuits
with 3 promoter-transcript pairs) the sustained oscillator in
Figure 1A in a short computation time.

(ii) Design of circuit with switch-like performance upon induc-
tion at minimal protein production cost (multiple objective): the aim
is to find circuits behaving in a switch-like manner upon induction
and minimizing the protein production cost from a built-in library
(containing eight promoters, four transcripts and two inducers)
assuming Hill kinetics for for the lumped transcription-translation

A Number of library components: 4 promoters, 11 coding regions
Type of kinetics: Mass Action mRNA dynamics: Yes
Targeted behaviour: Sustained oscillation (endogenous)

 

 

 

 

 

 

 

 

 

 

 

 

 

 

— lelR — PM
1 [—1 l—l I _ araC Pbad
—1acI — Plac
1 — lelR-P‘e‘ lelRm
600 Pm lacI Pl“ aIaC B’ad lelR — mac-Pm! aracm
_ — lacI-Plac lacIm
Circuit
1200 _ _
T, 800 _ _
E
400 — -
0 . .
0 0.5 1 1.5 2 2.5 3 3.5 4
time (s) x10 4

B Number of library components: 8 promoters, 4 coding regions
Type of kinetics: Hill Kinetics mRNA dynamics: No
Targeted behaviour: 1.Switch—1ike performance (upon induction)
2 . Protein Production Cost
Minimum/Maximum promoter—coding region pairs: 2/2

w
I

Plac 1
I

para 
aIaC Lac lelR
’—
D o Ibo u 

Placl 

Pl ac 3 
LacI LacI lelR
Plot 2
[R L

a Tc

 
    

Pl c 2 Plac 1 ------- m

     
 

H a

8 LacI LacI lelR
o ,

'3 P3 «i, IPTG

:3 ::
'8 uTc
5-1 5
a" Plac 1 Plac 1 
.8 1 5 00 cI LacI lelR
0 P4

5-1 .r

D-i  IPTG

 

 

Pareto front
of circuits

 

 I I I I
—1 —0.95 —0.9 —0.85 —0.8 —0.75
Switch-like performance

Fig. 1. SYNBADm results (A) Repressilator—like circuit (Elowitz and Leibler,
2008) obtained from a single objective design of an endogenous oscillator
(B) multiple objective design of circuits with switch-like performance at opti-
mal protein production cost

9mg ‘09 isnﬁnV uo salaﬁuV soq ‘eiulomeg JO AiiSJQAiu [1 112 ﬂJO'spaumo[pJOJXO'sopeuuoguioiq/ﬁdnq moi; papeolumoq

A tool for optimization-based automated design of synthetic gene circuits 3

 

reactions. The objective functions OF_Switch and OF_Cost encode
the two target criteria. Using SYNBADm we find (considering cir-
cuits with 2 promoter-transcript pairs) the Pareto front of solutions
in Figure 1B.

Funding

We acknowledge funding from the Spanish MINECO (and the European
Regional Development Fund) project SYNBIOFACTORY (grant number
DP12014-55276-C5-2-R)

Conﬂict of Interest: none declared.

References

Arpino,].A.J. et al. (2013) Tuning the dials of synthetic biology. Microbiology,
159, 1236—1253.

Dasika,M.S. and Maranas,C.D. (2008) OptCircuit: An optimization based
method for computational design of genetic circuits. BMC Syst. Biol., 2, 24.

Elowitz,M.B. and Leibler,S. (2000) A synthetic oscillatory network of tran-
scriptional regulators. Nature, 403, 335—338.

Huynh,L. et al. (2013) SBROME: A scalable optimization and module match-
ing framework for automated biosystems design. ACS Syntb. Biol., 2,
263—273.

Huynh,L. and Tagkopoulos,I. (2014) Optimal part and module selection for
synthetic gene circuit design automation. ACS Syntb. Biol., 3, 5 5 6—5 64.

Marchisio,M.A. and Stelling,]. (2008) Computational design of synthetic gene
circuits with composable parts. Bioinformatics, 24, 1903—1910.

Marchisio,M.A. and Stelling,]. (2011) Automatic design of digital synthetic
gene circuits. PLOS Comput. Biol., 7, e1001083.

Marchisio,M.A. (2014) Parts SC Pools: a framework for modular design of
synthetic gene circuits. Front. Bioeng. Biotechnol, 2, 42.

Myers,C.J. et al. (2009) iBioSim: a tool for the analysis and design of genetic
circuits. Bioinformatics, 25, 2848—2849.

Otero-Muras,I. and Banga,].R. (2014) Multicriteria global optimization for
biocircuit design. BMC Syst. Biol., 8, 113.

Pedersen,M. and Phillips,A. (2009) Towards programming languages for gen-
etic engineering of living cells. ]. R. Soc. Interface, 6, 5437—5450.

Rodrigo,G. and Jaramillo,A. (2013) AutoBioCAD: full biodesign automation
of genetic circuits. ACS Syntb. Biol., 2, 230—236.

Rodrigo,G. et al. (2007) Genetdes: automatic design of transcriptional net-
works. Bioinformatics, 23, 1 85 7—1 85 8.

Roenher,N. and Myers,C.]. (2014) Directed acyclic graph-based technology
mapping of genetic circuit models. ACS Syntb. Biol., 3, 543—5 5 5 .

9mg ‘09 1sn8nV uo salaﬁuV soq ‘121u101n123 10 AllSleAlu [1 112 [BJO'SIBILIHO[plOJXO'SODBIIHOJIIlOlQ/ﬂ(11111 111011 papeolumoq

