Bioinformatics Advance Access published July 31, 2016

Bioinformatics, 2016, 1—3

doi: 10.1093/bioinformatics/btw4l4

Advance Access Publication Date: 13 July 2016
Applications Note

 

 

Data and text mining

VISUALGRAPHX: interactive graph visualization

within Galaxy
Richard A. Schafer and Bjorn VolS*

Institute of Biochemical Engineering, Computational Biology, University of Stuttgart, Allmandring, 31, 70569

Stuttgart, Germany

*To whom correspondence should be addressed.
Associate Editor: Jonathan Wren

Received on February 23,2016; revised on June 6, 2016; accepted on June 23,2016

Abstract

Motivation: We developed VISUALGRAPHX, a web—based, interactive visualization tool for large—scale
graphs. Current graph visualization tools that follow the rich—internet paradigm lack an interactive
and scalable visualization of graph—based data. VISUALGRAPHX aims to provide a universal graph
visualization tool that empowers the users to efficiently explore the data for themselves at a large
scale. It is available as a visualization plugin for the Galaxy platform, such that VISUALGRAPHX can be

integrated into custom analysis pipelines.

Availability and Implementation: VISUALGRAPHX has been released as a visualization plugin for the
Galaxy platform under AFL 3.0 and is available with instructions and application data at http://

gitlab.com/comptrans/VisualG raphX/.
Contact: bjoern.voss@ibvt.uni—stuttgart.de

 

1 Introduction

Any biological system carries out its function through an elaborate
interaction of a multitude of molecular components that together
form complex biological networks. Visualization of these networks
is of great interest in modern biology as it helps to gain insight into
complex biological processes. Zhu et al. (2007) provide an overview
of some of the major biological networks for which graphs are an
appropriate mathematical representation (Pavlopoulos et 61]., 2011).
As of today, various desktop—based applications that are able to
visualize large—scale graphs exist. Most notable are CYTOSCAPE
(Shannon et 61]., 2003), GEPHI (Bastian et 61]., 2009) and TULIP (Auber
et 61]., 2012). In addition, the GRAPHVIZ software package provides a
comprehensive collection of open—source tools for the visualization
of graphs on the basis of the DOT graph description language
(Ellson et 61]., 2004). It is widely distributed, because it can be called
from general purpose languages via specific interfaces. However, the
emergence of the internet as the default software platform triggered
a shift toward Rich Internet Applications. These provide a rich and
interactive user experience in a cross—platform manner through a
standard web browser. Visualization of large—scale graphs benefits
from this paradigm as web development technologies facilitate

interactivity and scalability. TOUCHGRAPH® (Touchgraph, LLC,
USA), TOM SAWYER VISUALIZATION® (Tom Sawyer Software, USA)
and MANY EYES (Viegas et 61]., 2007) follow the rich—internet para—
digm and are able to visualize graph data in a sophisticated manner,
but still lagging behind the possibilities offered by current web
standards and are, beyond that, not optimized for biological net—
works. Similarly, Cytoscape Web (Lopes et 61]., 2010) is a web—based
network visualization tool that is modeled after Cytoscape.
HYPERSCAPE (Cromar et al., 2015) implements hypergraphs to cap—
ture complex hierarchical structures, but has its limitations in the
generalization for biological networks. Nevertheless, hypergraphs
provide an interesting concept both in the visualization and analysis
of biological networks (Klamt et 61]., 2009). The Galaxy system for
biological data analysis (Giardine et 61]., 2005), for a long time, did
not offer graph visualization. Recently, an effort for the visualiza—
tion of graphs (GraphVis, https://github.com/eteriSokhoyan/
GraphVis) has been integrated into the Galaxy Main instance. It is
based on the cytoscape library for JavaScript (Franz et 61]., 2016).
We aim to contribute to this field and present VISUALGRAPHX for the
interactive exploration of large—scale graphs in a scalable manner
that utilizes current web standards to provide a rich user interaction.

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com l

91% ‘09 1sn3nv uo sepﬁuv s01 ‘EIUJOJIIBQ aIo AllSJQAlUn 112 /§.IO'S[BU.IHO[p.IOJXO'SODBIHJOJUIOIQ/ﬁdllq 11101; popcorn/hog

R.A.Schafer and B. V08

 

2 Implementation

VISUALGRAPHX follows the Model—View—Controller (MVC) concept
in order to isolate the data (M) from the presentation (V) and its ma—
nipulation (C). Gamma et al. (1994) consider MVC as an architec—
tural pattern that merely expresses the separation of concerns, while
allowing it to be adapted to specific needs. It has been widely
adopted as an architecture for rich—internet applications due to a
variety of open—source frameworks that make use of this pattern.
Although the interpretation of MVC distinguishes these frameworks
from one another, the basic concept stays the same. VISUALGRAPHX
utilizes the Backbone.js library for JavaScript that provides an uno—
pinionated set of primitives to build single—page applications.

The JSON graph format (http://jsongraphformat.info) is an ap—
propriate file format for describing graphs where the nodes and
edges are deposited as arrays of objects. In addition, its usage eases
the processing of the data as Backbone.js provides a RESTful JSON
interface. Visualization of graphs requires algorithms to determine
the arrangements of its components in the multi—dimensional space.
Multiple layout strategies are used in practice, but the force—directed
layout (Kobourov, 2012) seems to be the most prominent one. In
VISUALGRAPHX we use the D3 javascript (http://www.d3js.org) li—
brary, which implements the force—directed layout with a high de—
gree of freedom using position Verlet integration. However, D3
does not offer graph traversal algorithms, which we implemented
primarily as depth-first and breath—first searches. Shneiderman
(1996) coined the information seeking mantra “Overview first,
zoom and filter, then details—on—demand”, that we fulfill in both
ways. In more detail, upon setting the parameters for graph depth
and the start (root) node, VISUALGRAPHX starts to precompute the
corresponding subgraph, which is displayed upon clicking “visual-
ize”. Here, the precomputed subgraph can be expanded, contracted
and moved by common user interactions, such as double—clicks on
nodes. As opposed to other graph visualization environments this
decoupling ensures a high efficient buildup of the graph, thus pro—
viding a high degree of scalability. VISUALGRAPHX achieves a high de—
gree of flexibility as it allows nodes to be embedded as single
predefined scalable vector graphics or as arbitrary external graphics
when specified as Uniform Resource Locator (URL) in the nodes at—
tributes of the JSON data. Furthermore, asynchronous method dis—
patch enables VISUALGRAPHX to update the subgraph without delay.

3 Results

We used VISUALGRAPHX for the visualization of the results of
COVENNTREE (Lott et al., 2015), which is a method for the compara—
tive analysis of large datasets (Fig. 1). COVENNTREE generates a
rooted tree based on the NCBI taxonomy, in which the nodes are
associated with weighted Venn diagrams to illustrate the relation of
the different datasets. Creation of the diagrams is outsourced, be—
cause they are given as URLs to the Google Chart API, which
VISUALGRAPHX can handle directly. The output of COVENNTREE con—
sists of a network file that defines the structure of the tree and a cor—
responding attribute file that contains the properties of the nodes.
We wrote a tool that converts these files to the JSON graph format,
namely vgx_converter installable through the Galaxy Toolshed. As
VISUALGRAPHX precomputes an initial subgraph as opposed to load—
ing the full graph at once it accelerates the buildup of large—scale
graphs. Loading a graph that contains 4692 nodes and 7688 edges
(mTOR_ChEMBL.jgf) with VISUALGRAPHX took 6 s, while loading
into CYTOSCAPE took roughly 15 s, which corresponds to 2.5 X
speedup. We further increased the network size to 100K nodes/egdes

    
   
 
 
 
        
    
  

   
    

. unassigned_viruses [0.413

  

  

Not_assigned

   

 

Viruses [0'029] .7 nclassified_viruses [0.271]

etro-transcribing_viruses [1.000]
/ I assigned_root
- . ' ‘_viruses 0:.

. - _assign_Vi ss

 

 
    
 

   

classified_phages

DA ' , RNA sta e 0.071
.5 J" es "0— — g [ ] RNA_viruses [0.234]

.2 iron ental_samples_<viruses> [0.137]

 

1 ' _sequences [0.209 y
D NA_viruses [1.000]

 

uences [0.000]

ia [0.001]

p -.. -.‘- 003]

haea [0.0:

 

“Bigned_cellu|ar_organisms

Fig. 1. Snapshot of a VISUALGRAPHX visualization. We took the results from a
comparative analysis of three 16S ribosomal RNA datasets (Steglich et al.,
2015) with CoVennTree (Lott et al., 2015) and classified according to the NCBI
taxonomy. Weighted Venn diagrams at the nodes represent the relations be-
tween the three datasets, taxon names are given and augmented by the so
called Venn Decomposition Score (see Lott et al., 2015 for details) in square
brackets

for which the buildup of the graph took about 180 s. For further il—
lustration of the general applicability of VISUALGRAPHX we visual-
ized data from the CAUSAL BIOLOGICAL NETWORKS DATABASE (Boué
et al., 2015). We have converted several different biological net—
works from this database and deposited them in the repository for
visualization with VISUALGRAPHX.

4 Conclusion

With VisualGraphX we present a general visualization plugin for
the Galaxy platform through which it can be easily integrated in any
bioinformatics pipeline where interactive graph visualization is of
interest. VISUALGRAPHX has been structured with regard to the MVC
concept and utilizes internal libraries of Galaxy to accurately fit to
the platform. For the visualization we made use of widespread web
standards that allow us to provide a more dynamic and interactive
visualization of large—scale graphs than current tools. Furthermore,
the structure of VISUALGRAPHX allows it to be extended for more spe—
cific use cases of graph visualization and its streaming design, where
data is loaded and visualized on—demand, ensures its performance
even for large scale graphs.

Funding

This work was funded by the German Ministry of Education and Research
through the ezBio project “inteRNAct” (grant number 031A310 to B.V.).

Conﬂict of Interest: none declared.

References

Auber,D. et al. (2012) The Tulip 3 framework: a scalable software library for
information Visualization applications based on relational data. Research
report RR-7860, INRIA, p.31.

91% ‘09 1sn3nv uo sejeﬁuv s01 ‘EIUJOJIIBQ aIo Amie/xtqu 112 /3.IO'S[BUJHOIpJOJXO'SODBIHJOJUIOIQ/ﬂdllq 11101; prBOIUAAOG

VISUALGRAPHX.’ interactive graph visualization Within Galaxy

 

Bastian,M. et al. (2009) Gephi: an open source software for exploring and
manipulating networks. In 3 tb International AAAI Conference on Web and
Social Media, AAAI Press.

Boué,S. et al. (2015) Causal biological network database: a comprehensive
platform of causal biological network models focused on the pulmonary
and vascular systems. Database, 2015, bav030.

Cromar,G.L. et al. (2015) Hyperscape: Visualization for complex biological
networks. Bioinformatics, 31, 3390—3391.

Ellson,]. et al. (2004) Graphviz and dynagraph—static and dynamic graph
drawing tools. In Junger, M. et al. (eds.), Graph Drawing Software,
Mathematics and Visualization, Springer, Berlin, pp. 127—148.

Franz,M. et al. (2016) Cytoscapejs: a graph theory library for Visualisation
and analysis. Bioinformatics, 32, 309—31 1.

Gamma,E. et al. (1994) Design Patterns: Elements of Reusable Object—
Oriented Software, 1st edn. Addison-Wesley Professional, Reading.

Giardine,B. et al. (2005) Galaxy: a platform for interactive large-scale genome
analysis. Genome Res., 15, 1451—1455.

Klamt,S. et al. (2009) Hypergraphs and cellular networks. PLoS Comput.
Biol., 5, e1000385.

Kobourov,S.G. (2012) Spring Embedders and Force Directed Graph Drawing
Algorithms. ArXiV1201301 1 Cs.

Lopes,C.T. et al. (2010) Cytoscape web: an interactive web-based network
browser. B ioinformatics, 26, 2347—2348.

Lott,S.C. et al. (2015) CoVennTree: a new method for the comparative ana-
lysis of large datasets. Front. Genet., 6, 43.

Pavlopoulos,G.A. et al. (2011) Using graph theory to analyze biological net-
works. BioData Min., 4, 10.

Shannon,P. et al. (2003) Cytoscape: a software environment for integrated
models of biomolecular interaction networks. Genome Res., 13,
2498—2504.

Shneiderman,B. (1996). The eyes have it: a task by data type taxonomy for in-
formation Visualizations. In Proceedings of the IEEE Symposium on Visual
Languages, IEEE Comput. Soc. Press, Silver Spring, pp. 336—343.

Steglich,C. et al. (2015) Dataset for metatranscriptome analysis of
Prochlorococcus-rich marine picoplankton communities in the Gulf of
Aqaba, Red Sea. Mar. Genomics, 19, 5—7.

Viegas,F. et al. (2007) ManyEyes: a site for Visualization at internet scale.
IEEE Trans. Vis. Comput. Crap/7., 13, 1121—1128.

Zhu,X. et al. (2007) Getting connected: analysis and principles of biological
networks. Genes Dev., 21, 1010—1024.

91% ‘09 1sn3nv uo sejeﬁuv s01 ‘BIUJOJIIBD aIo Amie/xtqu 112 /§JO'S[BU.IHO[p.IOJXO'SOUBIHJOJUIOIQ/ﬁdllq 11101; pepaommoq

