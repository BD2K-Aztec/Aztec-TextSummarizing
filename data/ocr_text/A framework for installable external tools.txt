APPLICA TIONS NOTE V"" “33.5%. légi‘iéi’aﬁéiiiifﬁiﬁii

 

Systems biology

Advance Access publication May 9, 2014

A framework for installable external tools in Slwline

Daniel Broudy1 ’I, Trevor KilleenI’I, Meena Choi2, Nicholas ShulmanI, Deepak R. Mani3,
Susan E. Abbatiel|03, Deepak Mani3, Rushdy Ahmad3, Alexandria K. Sahu4, Birgit Schilling4,
Kaipo TamuraI, Yuval BossI, Vagisha SharmaI, Bradford W. Gibson4, Steven A. Carr3,
Olga Vitek2, Michael J. MacCoss1 and Brendan MacLean”

1Department of Genome Sciences, University of Washington, Seattle, WA 98195, 2Department of Statistics, Purdue
University, West Lafayette, IN 47907, 8Broad Institute of MIT and Harvard, Cambridge, MA 02142 and 4Buck Institute for

Research on Aging, Novato, CA 94945, USA

Associate Editor: Alfonso Valencia

 

ABSTRACT

Summary: Skyline is a Windows client application for targeted
proteomics method creation and quantitative data analysis. The
Skyline document model contains extensive mass spectrometry
data from targeted proteomics experiments performed using selected
reaction monitoring, parallel reaction monitoring and data-independ-
ent and data-dependent acquisition methods. Researchers have
developed software tools that perform statistical analysis of the
experimental data contained within Skyline documents. The new
external tools framework allows researchers to integrate their tools
into Skyline without modifying the Skyline codebase. Installed tools
provide point-and-click access to downstream statistical analysis of
data processed in Skyline. The framework also specifies a uniform
interface to format tools for installation into Skyline. Tool developers
can now easily share their tools with proteomics researchers using
Skyline.

Availability and implementation: Skyline is available as a single-click
self-updating web installation at http://skyline.maccosslab.org. This
Web site also provides access to installable external tools and
documentation.

Contact: brendanx@u.washington.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on September 21, 2013; revised on February 19, 2014;
accepted on March 11, 2014

1 INTRODUCTION

The Skyline software for quantitative targeted proteomics has
become increasingly popular since its original publication
(MacLean et al., 2010), with >3000 registered users and >6000
instances started most weeks. The rich Skyline document schema
contains extensive data generated from targeted proteomics
experiments. This combination has motivated researchers and
instrument vendors developing software tools with applications
in targeted quantitative proteomics to seek seamless integration
with Skyline. The raw material for this integration has long been

 

*To whom correspondence should be addressed.
IThe authors wish it to be known that, in their opinion, the ﬁrst two
authors should be regarded as joint First Authors.

available through custom reports, designed inside Skyline and
exported to comma-separated value ﬁles for further analysis.
The impact of third-party tools created to analyze these reports,
however, has been limited by the difﬁculty with which they could
be shared among researchers. Existing tools have been developed
outside of Skyline in R, Python and Java or exist as Web sites
(Rost et al., 2012). Without detailed and speciﬁc knowledge of
these tools and their running environments outside Skyline,
researchers using Skyline have found them difﬁcult to install
and use. The Skyline external tools framework was designed to
address these issues by providing a mechanism for researchers to
create extensible, shareable and user-friendly tools for use with
Skyline.

2 DESIGN AND IMPLEMENTATION

The prior existence of tools for analysis of Skyline results
required the creation of an extensible interface that could
integrate a wide variety of tool implementation approaches
into a uniform medium. The other signiﬁcant goal of the
framework was to enable Skyline users to easily use these
tools. These two requirements motivated decisions to support
the following:

o Point-and-click integration within the Skyline graphical user
interface (GUI)

0 Different tool implementation platforms, including but not
limited to R and Python scripts, executable ﬁles and Web
sites

0 Guided installation of tools from a single ZIP ﬁle
0 T 001 versioning and installation of upgrades

0 Inclusion in the web-based Tool Store
http://skytools.maccosslab.org

0 Integration of the Tool Store with Skyline

Striving to achieve these goals motivated advances in Skyline
that include per replicate annotations, forms support for collect-
ing arguments to command-line programs, posting report data to
a web page, automated installation of R, Python and required
packages and report caching for repeated tool use.

To demonstrate the usefulness and broad applicability of this
software framework, we integrated the following statistical tools

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com 2521

112 /310's113umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq 11101; pepBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

D.Broudy et aI.

 

implemented in R and Python: MSstats (Choi et al., 2014),
QuaSAR and MSI Probe (Supplementarty Note Sl). Others
have added more tools (Supplementarty Note S2), available
from the Skyline External Tool Store.

2.1 Integration

Integrating external tools within the existing Skyline application
provided an opportunity to greatly improve the user experience
when running tools. The initial points of integration are
accomplished by adding new menu items to a Tools menu
inside Skyline (Fig. 1, Supplementary Fig. S1), a Tool Store
from which they can be installed and upgraded
(Supplementary Figs S2—S4), and a form for conﬁguring them
(Fig. 2, Supplementary Fig. S5), modeled after similar User
Interface (UI) in Microsoft Visual Studio (Supplementary Fig.
S6). These menu items allow users to run each tool through a
simple point-and-click interface. To gain more than simply
launching separate software, however, the framework must
provide these tools with data and context from the open
Skyline document. This transfer of information is achieved by
allowing each menu item to be associated with a speciﬁc Skyline
custom report format, giving tool creators a wide range of data
values to select from as input for their tools. In the process of
integrating our three initial tools, it became clear that each
required extra information about the mass spectrometric acqui-
sitions being processed, such as concentration, condition, time
point and subject ID. Support for this level of annotation had
been implemented in the tools by parsing ﬁle names or,
alternatively, by requiring a separate sample annotation ﬁle.
To formalize entry of these values and alleviate the need for an
extra ﬁle, we implemented per replicate annotations—speciﬁed
as text, numbers, true/false values and value lists—that can be
exported with any custom report (Supplementary Figs S7—S8).
Additionally, context-sensitive macros—using the format
$(DocumentDir), $(SelPeptide)imay be speciﬁed on the tool
command line allowing tools to target highly speciﬁc data

1'. 54; "g- Ilu'I'AII_;;.-I,':II-Hl-'.- - n u
HI l.:: 'ru-ii- Irm'gl I::II H145
_' _l. A 'ri. CHIS—1' I
"F mum + z:
lam-rm '_I I-l'S-l ilcb: thmlle
in- “NE 1-1:l'i|:.i M'J‘Lhr‘hl‘m'
'? mmEmFI-Tl'r Edllnl'lnll.

:aIJIIIdIIK mm '1":

= '5 :zi'.
- 55*IFE'.IJTL'.:.K- i‘l-J-i-TI‘

     

_|.

.-
n- m

r? LELL'I‘LF'K
I'-

. ii-
hir-mim innit... II
| I
I ‘1... FHA-VHF”an

3

IE

Flt-INN [IG‘EL

._ ._u
.1- u:-

L-aui-d 'IIIJ Fl.

MSstats DICJp Lur':pd'i5Li-n n

in
1:!
II-
E
., F
' I
ITlurllllt'f |1-n

 

'Ir, AFR-JE-
.-'? rs-xmuwvur'umui
a WE Hurralzie-bo '5'".-
-"-" MW’GSL‘EG‘LCIE‘! Eons!“
. ‘1"
r'ﬂ RELE Em TPMAEETI-l I:
J." EWFEF'LV'EEMJI'I lug-anim-
"4'. Half-Vi _
.1.“ '.'El-3.'.I.SF3K J (Tim.
-"." 'I'TIIH'W'LQJFH
i
'9 am mdﬂ"
I?“ ELGFQDTTM‘ HEI'I'I' I"
iIt. E'IE‘E
a n .
p... ..HIEI.H.MII .r mam

 

-":".. LEGG-Iﬂw'TLl-ITJK - I
a c 4' Mm lanai-1::

I d.
I" '1' ilgi'JJdcrlu'fiu'cnctlmm'u

Bowedumpcalma
Ema-Ida] II “admiral

5cm: d t-rs‘I-mcd reﬂtale
I EDI-did Rammed

Fig. 1. Skyline UI with populated tools menu and immediate window
output. A GUI form to collect user input

elements within a Skyline document, such as the document dir-
ectory or the amino acid sequence of the selected peptide.

The framework allows installed tools to complete a full
analysis and provide feedback without ever leaving the Skyline
application. When running a tool, Skyline will automatically
generate a required custom report and provide it directly to the
tool itself, through standard input, a temporary ﬁle on disk or a
post to a web page. Exported reports are cached to support
multiple runs of a given tool quickly.

2.2 Ease of use

When a user clicks a tool menu item, Skyline invokes the external
tool itself, whether that tool is an executable ﬁle, a Web site or a
script for another program like R or Python. Tools can be
speciﬁed so that the output from the tool run is redirected into
the Skyline’s immediate window, a text pane docked in the
Skyline application main display (Fig. 1). As a result, the tool
can be run entirely within Skyline, without requiring the user to
open or switch to another program.

Our three initial tools were implemented in R and Python,
with many options but also with interfaces that limited na'ive
user interaction. Before full integration with Skyline, MSstats
and MSI Probe both used command window input prompts
and QuaSAR used a web form on a page that required user
sign-in, preventing direct integration with Skyline. To improve
ease of use for Skyline users, we introduced GUI forms that can
be used to specify input values to each tool and change settings
and options associated with each tool. A tool creator with basic
knowledge of any Microsoft .NET language can create a small
.NET project implementing a simple form to collect user input.
The project can be compiled to a dynamically linked library ﬁle
and included in the tool installation ZIP ﬁle, described below.
Skyline will check the existence of such a form when a tool is run
and display it to the user (Fig. 1).

All three initial tools beneﬁted greatly from adding .NET
forms to provide tool users with a more intuitive interface. The
forms provide default values and settings that allow the user to
run a basic analysis by simply clicking an OK button, or chan-
ging just a few values for a custom analysis. The forms also verify
input, display information about what certain settings do and
save settings changes from run to run.

EHE'I'I-Ztl Tools n P, Ir1.5|;.3| e» n

'I'Ierumrl-Eﬂ: Tl'dmquuutr-emeulqlti‘wﬂ'efmarq
."-" ‘E-‘.'=3.'-__  and packages
MSstats J}:
Min-5|: Err-:1: Wm (.41le  - '-
r-l'Sslal-s Jew-I Barr-pit Sill: -I'rie£
MS' Pry: Frnm FIII... gig-ﬂ

@112

From Tcal Sign... 1“ lat]!
Il'l—EI
“WI [it'll-'1 awaits-e

Tlle can: =F Is‘FP

IIIEJ'DIH-

MSEH
Emu-m SJF‘m-fri‘aﬂ' =1 1 c 11:. 5
.‘ﬁ'izrrlert: 4' '!-_'I':I:-'Du" :wEﬁR-S-g‘m F ' "liar: ""l h
maid-ream Emirate: !- H'l' M
«w Plural
M593 I'D-ll u- 1f 019:1: weal: 'r'u'nu-nw

IIIK ﬂannel

Fig. 2. The External Tools form for adding a zipped tool. Skyline sup-
port for automated R and package installation

 

2522

112 /310's113umo [p.IOJXO'SOIlBIIIJOJUIOICI/ﬁdllq 11101; pepeoIII/noq

9IOZ ‘09 lsnﬁnv uo ::

A framework for installable external tools in Skyline

 

2.3 Sharing installable tools

The external tools framework was designed to be compatible
with existing tools and also ﬂexible enough to support many
future tools and tool version upgrades. External tools are
packaged as compressed ZIP ﬁles that contain all the necessary
components required to install and use the tools (Supplementary
Fig. S9). Once users have obtained the ZIP ﬁle of an external
tool, they can simply navigate to the External Tools form (Fig. 2)
within Skyline and begin the installation process by selecting the
ﬁle location on the local directory. Skyline will then perform a
number of steps to install the tool. For example, Skyline will
verify whether the ZIP ﬁle is structured properly and handle
conﬂicts if the tool requires the use of the existing custom reports
or custom annotations (Supplementary Fig. S10).

The installable tools framework has extra support for tools
using R or Python scripts (Supplementary Fig. S11). If necessary,
Skyline will download these programs and guide the user
through their installation and the installation of any associated
packages required to use a tool (Fig. 2). Ultimately, once a tool is
fully installed into Skyline, the user will not have to perform any
other steps to use the tool.

3 SUMMARY AND FUTURE DIRECTION

Through the Skyline external tools framework, Skyline users will
gain broader access to tools developed within the scientiﬁc

community that can provide meaningful analyses of the data
generated in their experiments, and tool creators will reach a
large audience of proteomics researchers. We have established
an External Tool Store web page (http://skytools.maccosslab.
org) to connect the Skyline user base with tool creators, so
that users may easily search for and install new tools and tool
developers may push changes in existing tools to researchers
using them.

Funding: This work was supported in part by a grant from
National Institutes of Health (R01 GM103551). Additional
support was provided by Agilent Technologies through an
industry gift to the Skyline project.

Conﬂicts of Interest: none declared.

REFERENCES

MacLean,B. et al. (2010) Skyline: an open source document editor for
creating and analyzing targeted proteomics experiments. Bioinformatics, 26,
966—968.

Rost,H. et al. (2012) A computational tool to detect and avoid redundancy
in selected reaction monitoring. Mol. Cell. Proteomics, 11, 540—549.

Choi,M. et al. (2014) MSstats: an R package for statistical analysis of quantitative
mass spectrometry-based proteomic experiments. Bioinformatics, 30, 2524—2526.

 

2523

112 /310's113u1no [p.IOJXO'SOIlBIIIJOJUIOICI/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

