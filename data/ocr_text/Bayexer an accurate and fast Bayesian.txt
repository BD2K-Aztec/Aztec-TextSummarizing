Bioinformatics, 31 (24), 2015, 4000—4002

doi: 10.1093/bioinformatics/btv501

Advance Access Publication Date: 26 August 2015
Applications Note

 

 

Sequence analysis

Bayexer: an accurate and fast Bayesian
demultiplexer for Illumina sequences

HaiSi Vim, Zhe Li3'*, Tao Li1'* and Jindong Zhao1'4

1Key Laboratory of Algal Biology, Institute of Hydrobiology, Chinese Academy of Sciences, Wuhan, Hubei 430072,
China, 2University of Chinese Academy of Sciences, Beijing 100049, China, 3State Key Laboratory of Systematic
and Evolutionary Botany, Institute of Botany, Chinese Academy of Sciences, Beijing 100093, China and 4College of

Life Science, Peking University, Beijing 100871, China

*To whom correspondence should be addressed.
Associate Editor: John Hancock

Received on June 29, 2015; revised on August 14, 2015; accepted on August 19, 2015

Abstract

Summary: Demultiplexing is used after high-throughput sequencing to in silico assign reads to the
samples of origin based on the sequenced reads of the indices. Existing demultiplexing tools based
on the similarity between the read index and the reference index sequences may fail to provide
satisfactory results on low-quality datasets. We developed Bayexer, a Bayesian demultiplexing
algorithm for Illumina sequencers. Bayexer uses the information extracted directly from the con-
taminant sequences of the targeting reads as the training dataset for a naive Bayes classifier to as-
sign reads. According to our evaluation, Bayexer provides higher capability, accuracy and speed

on various real datasets than other tools.

Availability and implementation: Bayexer is implemented in Perl and freely available at https://

github.com/HaisiYi/Bayexer.
Contact: litao@ihb.ac.cn or lizhe@ibcas.ac.cn

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Although the rapid improvement of next-generation sequencing is
dramatically increasing data output and reducing sequencing costs,
multiplexing, which allows large numbers of samples to be
sequenced simultaneously during a single sequencing run, is also
raising sample throughput. Commonly, multiplexing is achieved by
adding different specifically designed short sequences, referred to as
indices, to the sequencing adapters of each sample. The in silico pro-
cess after sequencing to determine the origin sample of each read by
comparing the sequenced indices (SIS) with the reference indices
(R15) is called demultiplexing.

Because sequencing errors occur, 515 do not always perfectly
match the R15. The demultiplexers (CASAVA, bc12fastq) provided
by Illumina allow for 0, 1 or 2 Hamming distances between the 515
and R15. Splitaake (https://github.com/faircloth-lab/splitaake) and
deindexer (https://github.com/ws6/deindexer) use Levenshtein dis-
tances to tolerate the IN-DEL (insertion and deletion) errors.

Recently developed, deML (Renaud et al., 2015) uses the quality
scores of 51 bases to assign each read to the origin sample with the
maximum likelihood.

These approaches work well for high-quality reads but for low-
quality reads the results may be unsatisfactory due to misassignment
or assignment failure. It is widely reported that there are various
types of inherent error profiles in Illumina sequencing data (Dohm
et al., 2008; Harismendy et al., 2009; Hoffmann et al., 2009;
Kircher et al., 2009; Nakamura et al., 2011), which suggests
that certain miscalls may be more likely than others, and an error-
containing 51 probably originated from one certain RI. Additionally,
it is a ubiquitous phenomenon during Illumina sequencing that in-
sert sequences shorter than the read length result in adaptor contam-
ination on the ends of common reads and the index bases are often
contained in the contaminant sequences. Therefore, demultiplexing
could be seen as a classification problem with R15 identified
from contaminant sequences as classes, and the corresponding SIs

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 4000

9mg ‘09 isnﬁnV uo sejeﬁuV soq ‘eiulomeg JO KitSJQAtu [1 112 [3.10811211an[plOJXO'SODBIILIOJIIlOlQ/ﬂ(11111 wort pepeolumoq

Bayexer

4001

 

in the separate index reads as observations. Based on this idea, we
developed a novel application, Bayexer, which applies a naive Bayes
classifier (NBC) to the demultiplexing of Illumina sequences.
Bayexer extracts training datasets directly from the contaminant se-
quences of targeting reads and then uses them to train the NBC and
assigns the reads. The evaluation on real sequencing datasets
showed the great advantage of Bayexer compared with other tools.

Bayexer is compatible with both single-index and dual-index
sequencing and supports various Illumina sequencers.

2 Methods

Given a multiplexed dual-index paired-end sequence dataset, let S
be all the observed SI pairs and R be all the RI pairs in it. Every s
(569), both reads having I bases, is iteratively split into overlapping
k-mers, where k=21, l, [—1, l—2,...,1. For each s, the set of
k-mers with size k is denoted by Wk, and the set of all k-mers is W
Let C(r) be the observed number of r (reR), c(w) be the observed
count of k-mer w (weW) and c(w|r) be the count of w originating
from 1'. For each read cluster, Bayexer searches every pre-supplied
RI-containing adapter-1 sequence in the first read and the RI-
containing sequences of adapter-2 in the second read. If the adapter
sequences containing 1' are detected in both reads and the SI pair is s,
Bayexer takes this into the training set and adds one to C(r), c(w)
and c(w|r) for VweW An example of this procedure is shown in
Supplementary Figure 51 and Table 51. When the search is com-
pleted for all read clusters, any given 5 can be assigned by the NBC
according to the maximum a posteriori decision rule as:

1° 2 argmax, (P0) x H w) (1)
weW’ r

where N is the number of observed different k-mers in the current
feature. To eliminate zeros and reduce the effect of uneven training
sets, a modified smooth factor 0:, (Supplementary Methods) is
applied to the NBC. The priori probabilities P(r) can be either sup-
plied by users based on their prior knowledge (e.g. the DNA amount
of each sample) or inferred from the input data itself by Bayexer
(Supplementary Methods).

For every given 5, we included a feature selection procedure to
form W’CW, based on the following observations: (i) longer k-mers
contain more complete information of the error profile and (ii) some
k-mers in the dataset may have frequencies too low to provide reli-
able estimation. For a given 5, Bayexer investigates all we Wk from
k = 21 down to k = 1. When all the we Wk have c(w) greater than a
pre-defined threshold value T, all the we W,- with i<k are aban-
doned and all the weW,- with i > k having c(w) smaller than T are
also abandoned, then all the remaining w form the W’.

We tested Bayexer and deML, which was reported to be the most ro-
bust demultiplexer available (Renaud et al., 2015), on three real sequenc-
ing datasets. To evaluate the accuracy of our algorithm, we used the
dual-index paired-end MiSeq dataset described in Renaud et al. (2015)
that contains 99 libraries of polymerase chain reaction (PCR) products
of a human genome region and a library of PhiX DNA fragments as a
control. By mapping these reads to the reference genomes
(Supplementary Methods), their samples of origin were identified and
used to measure the misassignment rates of demultiplexing. To evaluate
the robustness of Bayexer and deML, we used them to demultiplex a sin-
gle-index GAIIx dataset that we produced, which had an average index
quality score of 2.01. It consisted of a mate-pair library of Microcystis
aemginosa TAIHU98 whole-genome (NZ_ANKQ00000000.1) shotgun
sequences and two libraries of metagenomic sequences (Supplementary

Methods). We assembled the demultiplexed M.aemginosa reads and
investigated the statistics of the constructed unitigs and their similarity to
the reference genome. To evaluate the applicability and performance of
the two tools, we tested them on a 384-plex NextSeq500 run that
included 153 078 446 read clusters (https://basespace.illumina.com/run/
11358363)

3 Results

Among the total of 15 245 844 read clusters in the MiSeq dataset, we
detected 9 635 948 clusters unambiguously aligned to the human gen-
ome and 4 933 839 to the PhiX (Supplementary Table 52). In the
mapped reads, we found 435 177 different 515. We counted the fre-
quencies of every SI and computed the proportion of PhiX clusters in
every one of them. Supplementary Figure 52 indicates that most of the
SIs, especially those with greater frequencies, were much more likely
to have originated from one certain RI than others, and thus could be
safely assigned. We evaluated the accuracy of our estimation by com-
paring these proportions with the probability values estimated by
Bayexer and found that 95.41% of the 515 containing 99.53% of the
read clusters have estimation deviation smaller than 0.05. Figure 1
shows that the 515 with higher frequencies have more accurate estima-
tion, whereas the estimation for low-frequency 515 may not be accur-
ate enough, which suggested that the vast majority of the reads were
correctly assigned by Bayexer and the misassignment rate could be
controlled by excluding the low-frequency 515. When assigning both
100% reads, Bayexer showed a total misassigned read number
22.67% smaller than deML. The advantage of Bayexer was more ob-
vious for reads with lower quality scores, while on higher quality
reads the two tools performed comparably (Supplementary Fig. S3
and Table S4). The misassignment rates on different total assignment
rates are shown in Supplementary Figure S4 and Table S3.

The assembly of the M.aeruginosa reads from the GAIIx run
demultiplexed by Bayexer had much less fragments, higher N50,
more similar size and GC content to the reference genome, and
higher sequence identity to the reference genome compared with
deML (Supplementary Table S5). This suggests that even on an
extremely low-quality dataset, Bayexer can still achieve a very
high assignment rate while providing highly reliable demulti-
plexed reads.

The performance evaluation on all three datasets shows that
Bayexer also required a much shorter runtime, especially on the
huge GAIIx dataset and highly multiplexed NextSeq500 dataset,
where it was five times faster than deML (Supplementary Table S6).

 

100%

50%

-5[|”i"n

 

 

 

 

 

 

JEN

['1 3'2 1:11:24 32553 1m55re
The El onwwence Frequencrllﬂg me}
Fig. 1. P—P’ with respect to the SI frequency. P is the true proportion of PhiX

clusters in all the clusters of a certain SI, and P is the estimated probability of
this SI originating from PhiX

9mg ‘09 isnﬁnV uo sejeﬁuV soq ‘eiulomeg JO KitSJeAtu [1 112 [3.10811211an[plOJXO'SODBIILIOJIIIOIQ/ﬂ(11111 moi; pepeolumoq

4002

H. Yi et al.

 

In summary, we present Bayexer, an Illumina sequence demulti-
plexer which outperforms other available tools on both accuracy
and speed. In particular, the great advantage of accuracy on
low-quality reads indicated that Bayexer can significantly improve
the utilization ratio of low-quality sequencing data and thus benefit
a wide range of high-throughput sequencing projects.

Acknowledgements
The authors thank Gabriel Renaud for his help with the use of deML.

Funding

Autonomous Projects of the State Key Laboratory of Freshwater Ecology and
Biotechnology [2011FBZ31 and 2011FBZ32].

Conﬂict of Interest: none declared.

References

Dohm,].C. et al. (2008) Substantial biases in ultra-short read data sets from
high-throughput DNA sequencing. Nucleic Acids Res., 36, e105.

Harismendy,O. et al. (2009) Evaluation of next generation sequencing
platforms for population targeted sequencing studies. Genome Biol., 10,
R32.

Hoffmann,S. et al. (2009) Fast mapping of short sequences with mismatches,
insertions and deletions using index structures. PLoS Comput. Biol., 5,
e1000502.

Kircher,M. et al. (2009) Improved base calling for the Illumina genome
analyzer using machine learning strategies. Genome Biol., 10, R83.

Nakamura,K. et al. (2011) Sequence-speciﬁc error proﬁle of Illumina sequen-
cers. Nucleic Acids Res., 39, e90.

Renaud,G. et al. (2015) deML: robust demultiplexing of Illumina sequences
using a likelihood-based approach. Bioinformatics, 31, 770—772.

9mg ‘09 1sn8nV uo sejeﬁuV soq ‘121u10111123 JO A1iSJeAiuf1 112 [BJO'SIBILIHO[p.IOJXO'SODBIIHOJIIIOIQ/ﬂ(11111 111011 pepeolumoq

