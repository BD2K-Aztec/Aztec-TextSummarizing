Bioinformatics, 32(11), 2016, 1601—1609

doi: 10.1093/bioinformatics/btv485

Advance Access Publication Date: 26 August 2015
Original Paper

 

Genome analysis

Identification of hierarchical chromatin domains

Caleb Weinreb1 and Benjamin J. Raphael1'2'*

1Center for Computational Molecular Biology and 2Department of Computer Science, Brown University,
Providence, R102912, USA

*To whom correspondence should be addressed.
Associate Editor: Gunnar Ratsch

Received on April 7, 2015; revised on July 25,2015; accepted on August 10, 2015

Abstract

Motivation: The three—dimensional structure of the genome is an important regulator of many cel—
lular processes including differentiation and gene regulation. Recently, technologies such as Hi—C
that combine proximity ligation with high—throughput sequencing have revealed domains of self—
interacting chromatin, called topologically associating domains (TADs), in many organisms.
Current methods for identifying TADs using Hi—C data assume that TADs are non—overlapping, des—
pite evidence for a nested structure in which TADs and sub—TADs form a complex hierarchy.

Results: We introduce a model for decomposition of contact frequencies into a hierarchy of nested
TADs. This model is based on empirical distributions of contact frequencies within TADs, where
positions that are far apart have a greater enrichment of contacts than positions that are close to—
gether. We find that the increase in contact enrichment with distance is stronger for the inner TAD
than for the outer TAD in a TAD/sub—TAD pair. Using this model, we develop the TADtree algorithm
for detecting hierarchies of nested TADs. TADtree compares favorably with previous methods,

 

finding TADs with a greater enrichment of chromatin marks such as CTCF at their boundaries.
Availability and implementation: A python implementation of TADtree is available at

http://compbio.cs.brown.edu/software/
Contact: braphael@cs.brown.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

The 3D architecture of the genome influences key cellular processes
such as gene regulation, replication timing and differentiation
(Cavalli and Misteli, 2013). Chromosome conformation capture
(3C) technologies use proximity ligation of DNA to elucidate gen—
ome structure at high resolution (De Wit and de Laat, 2012).
Recently, techniques such as Hi—C that couple proximity ligation
and high—throughput sequencing have revealed megabase—sized do—
mains of self-interacting chromatin called topologically associating
domains (TADs) in both mammals and fruit flies (Dixon et 61].,
2012; Hou et 61]., 2012; Nora et 61]., 2012; Sexton et 61]., 2012).
Conserved across cell types and species, TADs may partition the
genome into functional units and help regulate the distribution of
epigenetic marks (Symmons et 61]., 2014; Tanay and Cavalli, 2013).
Hi—C uses proximity—based ligation to measure the frequency of
physical interaction between pairs of genomic loci (Lieberman-Aiden

et 61]., 2009). Typically, the raw read pairs generated by a Hi—C
experiment are assigned to bins of fixed width (e.g. 40 kb),
resulting in a contact matrix A, where A,,- is the number of con—
tacts between bins i and j, normalized for experimental bias.
Several methods have been developed for the identification of
TADs from Hi—C data. These methods may be roughly classified
into two categories: (i) methods that define a one—dimensional
(1D) test statistic from the contact matrix A,,- and (2) methods
that exploit the two—dimensional (2D) structure of the contact
matrix.

Dixon et al. (2012) compute a 1D ‘directionality index’ (DI)
from the contact matrix. This index defines whether contacts have
an upstream bias, downstream bias or no bias. Next, they use a hid—
den Markov model (HMM) to partition the genome into regions
defined by changes in the DI. Each transition into downstream bias

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1601

9mg ‘09 1sn3nv uo sopﬁuv s01 ‘BTUJOJTIBD aIo Amie/xtqu 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; popeommoq

1602

C. Weinreb and B.J. Raphael

 

marks the start of a domain and the next transition out of upstream
bias marks its end. Sauria et al. (2014) introduce a 1D statistic called
the ‘boundary index’ (BI) which captures sudden shifts in interaction
preference. Sauria et al. (2014) identify domain boundaries by call—
ing peaks in the BI, but do not explicitly pair these boundaries into
domains, leaving the domain structure ambiguous.

Recently, a number of methods have been introduced to identify
chromatin domains using the full 2D contact matrix. Filippova et al.
(2014) use dynamic programing to find domains with maximal
intra—domain contact frequency. This method includes a tunable size
parameter and outputs the set of non—overlapping domains that are
most robust to changes in the parameter value. More recently, Levy—
Leduc et al. (2014) developed a 2D model that fits a block diagonal
matrix to observed contacts using maximum likelihood. This
method is based on a generative model where the expected contact
frequency across a TAD is uniform.

All the methods above assume that TADs are non—overlapping.
However, several studies have observed a hierarchical chromatin
organization including both TADs and sub-TADs within them
(Fig. 1). Although TADs are conserved across cell types, sub—TADs
are thought to vary between cell types and may facilitate changes
in gene regulation during differentiation (Phillips-Cremins et 61].,
2013) and development (Berlivet et 61]., 2013). In addition, distinct
combinations of proteins such as CTCF, Mediator and Cohesin
may demarcate TAD and sub—TAD boundaries (Phillips-Cremins
et 61]., 2013; Zuin et 61]., 2014). The distinct properties of TADs
and sub-TADs highlight the need for methods that can detect both
simultaneously. A very recent development in this direction is the
‘Arrowhead’ algorithm (Rao et 61]., 2014). Although this algorithm
can identify overlapping domains, it does not explicitly require
that overlapping domains be nested, and it is at present not pub—
licly available.

In this article, we introduce the TADtree algorithm, which de—
tects nested hierarchies of TADs. In contrast to previously published
methods that rely on ad 1906 assumptions about the structure of
TADs, we derive a straightforward model for the frequency of con—
tacts within TADs. Our model is based on the empirical observation
that within TADs, the enrichment of contacts over background
grows linearly with the distance between bins, but at a rate that de—
pends on the TAD length. Thus, every TAD can be characterized by
two parameters: ﬂ, the baseline enrichment for contacts between ad—
jacent bins within the TAD and (3, the rate at which contact fre—
quency increases with distance between bins. Using reported TADs

from previous studies, we derive relationships between the values of
ﬂ and (3 when one TAD is nested inside another. From these observa—
tions, we propose a model for TAD hierarchies.

We combine our model for contact enrichment within TADs
with a 1D BI similar to the one used by Sauria et al. (2014). We for—
mulate and optimize an objective function that scores a hierarchy of
nested TAD trees according to both the fit to the observed contact
matrix and the BI of each TAD and sub-TAD in the hierarchy. We
demonstrate that our resulting TADtree algorithm outperforms
existing methods on real data, predicting TADs that have greater en—
richment for binding of factors known to delineate chromatin or—
ganization, and showing greater overlap with high—resolution data.

2 Methods
2.1 Model

Background contact frequencies

Consider a chromosome of length ] (in bins) and a ] >< ] symmetric
matrix A, where A,-,- is the frequency of contact between bins i and 1'.
Typically, A,-,- represents a normalized count of paired sequencing
reads, where each read represents a ligation event between DNA
fragments derived from bins i and 1', respectively. Based on A, we
form a ‘background’ function B giving the mean contact frequency
for bins at each distance d. Formally,

1 H
BM) ZﬂzAi,i+d- (1)

1:1

Modeling TADs

A TAD, D, is modeled by the quadruple D : (L1), RD, 51), ﬂD), spe—
cifying an interval [LD, RD] of bins and two parameters (3D and ﬂD,
which determine the expected contact frequency at each intra—TAD
bin pair, as follows:

Ana, k) = ((k — 051) + ﬂD)B(/e — l) for LD gig k 3 RD. (2)

AD expresses the expected enrichment of contacts over background

gig??? as a linear function of the distance |k — 1|, having slope (3D and

 

intercept ﬂD.

This model is motivated by the observed properties of TADs
identified by Dixon et al. (2012). We grouped TADs with similar
sizes and computed the enrichment of contacts over background for

 

 

  

 

 
 
   

lit-i  r "- ‘3‘
lam. it‘ll-,3; ht} we...“

‘II: II ‘1‘..."
2!; a”

Fig. 1. Illustration of hierarchical TAD structure. A Hi-C contact map is shown on the left, with a close-up of the diagonal top-right. TADs and sub-TADs are anno-

tated as triangles. The corresponding DNA structure is illustrated below

91% ‘09 1sn3nv uo sopﬁuv s01 ‘BTUJOJTIBD aIo Amie/xtqu 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; popeommoq

Hierarchical chromatin domains

1 603

 

bin pairs in each group. We observed that across many TAD groups,
contact enrichment increases linearly with distance (Fig. 2A), with
slope dependent on the size of the TAD. Although small deviations
from linearity are observed for pairs of bins near TAD boundaries
(Fig. 2B), a linear model is favored for the sake of simplicity.
Because contact enrichment increases with distance, we require
(31) > 0. The positive correlation between contact enrichment and
distance may arise from looping interactions between TAD bounda—
ries, or because local interactions due to sequence proximity pro—
duce most of the contacts between closely spaced bins, drowning
out the contacts that arise from the higher order structure imposed
by TADs.

Modeling sub-TADs

Consider two TADs, D : (LD,RD, 5D,ﬂD) and D’ : (LD/,RD/,
(SD/$13,), such that D’ lies within D (i.e. LDSLD/ < RD/gRD).
Because D’ represents a proper subset of the bins in D, the param-
eters (31);, my may differ from (3 D, ﬂD. We investigated this difference
systematically using pairs of TADs from Filippova et al. (2014) and
Dixon et al. (2012) where a TAD from one dataset was contained
by a TAD from the other dataset. We find that enrichment over

 

 

    

 

      

A ALE] B 30_—-lADsfrom_(Dixon,2012.) random intervals
—-- ' 1 2 b 1.6 mb
1'3“?- — I)  25 800kb 'm
A_ a a - 400kb ‘
> \
. o 3
_ ‘05, S 2.0 .
'- ' E E I
6 E 15
E g |: ‘
(I)
I k E 10 B W i
10W — - high 0 400 800 1,200 1,600
distance between bins (kb)

3 True nested pairs Random nested pairs E _ outer TADS
0'4 ' _. innerTADs
- 4

0.3 u  in I. ‘ I E)

«o J .. t. . _ao ' * o'o
  'I  Infill-.1... 9 ll .- l' I I" {- EE 3 I

_ I, — U) '
0.1 8 I I__ I .‘X' 8 g. 1.... E’ Eﬁ '

.2 .-.- 2:» a  w" 222 ﬁrmwa-
°'°.§ - E '- '+  a '
Ff! "  J I I I
-o.1 / . I: .1: o 400 {500

I,» _,.r 1". . . - distance between bins (kb)
"0'2 outer delta: 6 outer delta: 5 F _
D -o.1 o. - 0.0 9.
3.0
Ea. _ . Ea. ; 
26 . .' 26 h
2.0 H ' 3. --' ‘D . .
8 8 5g 4'
'5 a E e 3
a, .
1-0 E E 5% 2 M‘
outer beta: [3 / outer beta: [3 5 1

0%.0 1.0 2.0 3.0 0.0 1.0 2.0 3.0 distance between bins

Fig. 2. TADs from a previous study (Dixon et al., 2012) were each rescaled to
match the closest of four sizes (400kb, 800 kb, 1.2 Mb, 1.6 Mb) using bilinear
interpolation. (A) The superposition of all TADs in the 1.2 Mb size class shows
that contact enrichment increases with increasing distance between bins. (B)
For each size class, the average enrichment of intra-TAD contacts increases
linearly with distance. This linear function has slope 5 and intercept if.
Average enrichment for a set of random intervals is shown in red for compari-
son. Next, combining TADs from Filippova et al. (2014) and Dixon et al. (2012)
revealed 114 nested pairs D’ C D, where D’ had length 400—600 kb and D had
length 800 kb to 1.2 Mb. (C) Nearly all nested pairs (black dots) had 5’ 2 5 (left),
while this relationship was not true for nested pairs with randomized pos-
itions (right). (D) No similar inequality holds for values of if, although [i and [i’
are strongly correlated for both real and randomized nested pairs. (E)
Rescaling nested TADs so that D’ was 500 kb and D was 1Mb shows that
average contact enrichment for D’ (green) and D (black) follows the linear
model [Equation (2)] with 5’ > 5 and [i’ = if. (F) Examples of nested pair
(above) with contact enrichment plotted against distance (below)

background (36:51)) rises with distance at a higher rate for inner

TADs than for their respective outer TADs, that is (SD > (31)
(P < 10—29; Fig. 2C). This inequality is not just a consequence of

 

TAD size, because it does not hold for nested pairs with randomized
positions (P = 0.3). In contrast, the values ﬂD and my for the outer
and inner TADs show no systematic difference, but are strongly cor—
related (r = 0.88,P < 10—35; Fig. 2D).

Based on these observations, we define D’ to be a sub-TAD of D
provided

1.LD SLD/ < RD! SR1) (i.e.D’ C 
2.51)! > 51).

Thus, sub—TADs are defined as local regions within a larger TAD
that have a different distribution of contacts, characterized by higher
rate of increase in contact frequency with distance (Fig. 3A). In the
same way that a single TAD D specifies an expected contact
frequency function AD, a TAD/sub-TAD pair T : {D,D’} has an
expected frequency function AT, defined below. For convenience,
we write (1,12) E D when L133] < kgRD.

' /
ATUJQ) : AD/(lJe) 1f(l,/e) E D (3)
AD(l,/e) if(l,/e) E D\D’

Note that AT is defined for all bin pairs (1,12) E D, because D is the
union of the domains of AD and AD, respectively. AT is identical to
AD outside the sub—region defined by D’, where it becomes identical
to AD. This definition reflects the role of sub—TADs in capturing
local regions within an existing TAD that have a distinct distribution
of contacts, characterized by higher (3.

Generalizing the TAD/sub-TAD arrangement shown in
Figure 3A, we allow a single TAD to have multiple sub—TADs, and
also allow sub—TADs to have their own sub—TADs. Formally, define
a TAD tree T to be a rooted hierarchy of TADs, such that for each
D,D’ E T where D’ C D, (SDI > 5D. A collection of disjoint TAD
trees is called a TAD forest (Fig. 3B). Each TAD forest F specifies a
map AF of expected contact frequencies. Because sub—TADs model
the local distribution of contacts, which differs from that of the
enclosing TAD, the expected contact frequency for each pair of bins
in a TAD forest F is modeled using the minimal TAD D E F that
contains them both or by background if there is no such TAD.

  
  

A B F={T1’T2)T3}
L A
T1 T2 T3
Di‘n, ED: 'x’fD’R i. DR
3 ' r c

 

 

:‘T'  "/ am i
ill—.- .1
i!  J"

.—
Erﬂl'i'J', D}

 

 

 

' enrichment-over
background

distance between bins

EFT) = 515} +515”) - Ecii’ii’.ﬂ}

— outerTAD — innerTAD

Fig. 3. (A) When one TAD lies inside another, the enrichment of contacts in-
creases at a faster rate for the inner TAD (green line) than for the outer TAD
(black line), that is 50/ > (SD. (B) Example of a TAD forest containing TAD trees
T1, T2 and T3. (C) The squared error £(T) for a TAD tree Twith root D and
sub-tree T’ is obtained as £(T) = 8(0) +£(T’) —£C, where EC is an ‘error
compensation' term that corrects double counting of the squared error over
bin pairs in T’

91% ‘09 1sn3nv uo sojoﬁuv s01 ‘121u103up23 aIo Amie/xtqu 112 /§.IO'S[BU.IT10[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; pop1201umoq

1604

C. Weinreb and B.J. Raphael

 

Formally, let minp(l, la) denote the minimal D E P such that
(1,12) E D, where minp(l, la) : 0 if there is no such D. Then

- : {Apa 1e) ifminp(l,le) =1) (4)

A Lie
F( ) B(/e—l) ifminp(l,/e)=0.

Boundary index

SO far we have described a model for the distribution Of contacts
within TADs, requiring that intra-TAD contact frequencies are en—
riched over background, especially for bins that are far apart.
Another important feature Of TADs is that their boundaries mark
a shift in interaction preference. Dixon et al. (2012) use this fea—
ture as the basis for an HMM that predicts TADs by detecting
shifts from upstream tO downstream preference. Here, we define a
1D test statistic called the BI that measures local shifts in inter-
action preference. NOte that Sauria et al. (2014) recently posted a
preprint that also uses the term BI for their 1D statistic, which has
a more complicated form. For constants p, q representing the scale
and persistence Of interaction shift, we define the BI 13qu as
follows:

i+q p

EMU) = Z IZAUH: — Al,i—k|- (5)

l=i—q [2:1

The BI measures the shift in contacts around an interval i.
Specifically, in an interval Of length p containing i, the BI 13qu totals
the differences in contact frequencies up tO q bins upstream and
downstream Of i. Let EMU) :2 (Bp7q(i) — mean(Bp7q))/var(l3p7q) be
the Z—score Of BM, where mean and variance are taken over all bins
on the given chromosome. We define Bpaq for a TAD forest as
follows:

EMF) = Z BMLD) + Bp,q(RD)- <6)
DEF

Because the end points Of TADs should have high BI, we say that
D has valid boundaries if EMALD) > 0 and BEARD) > 0.

2.2 Fitting TAD trees to data

Given a matrix A Of observed contacts, we aim tO find a TAD forest
F that best fits the data. Specifically, we want a TAD forest F that
has high BI and minimizes the error between A and the expected
contact frequency function A F. We measure the latter using the sum
squared error,

5(F) = Zebu. 1e) — AM <7)

1,]:

Finally, we require that F has valid boundaries in order tO exclude
false—positive TAD calls in regions Of the genome that have high con—
tact frequencies but low BI. We combine these criteria intO the fol-
lowing optimization problem.

PROBLEM 1: Given N E N and y E RT, find a TAD forest F, with
|F| = N and each D E F having valid boundaries, that maximizes the
objective function Oy : pr7q(F) — 5

Here, N and y are user—defined parameters controlling the num-
ber Of TADs and the balance between 5 and BM, respectively.

We now define a recursive algorithm that solves Problem 1.
First, we note that any TAD forest can be decomposed intO a set
Of non-overlapping TAD trees. Thus, we will first show how tO
find TAD trees that locally maximize the objective 0,. TO

that end, we define an objective function (I>(i,j,N, 5) over inter-
vals [i,j].

DEFINITION 1: Given the interval [i, j] and parameters N E N and
(3 E RT, let @(i,j, N, 5) 2: max OAT) over all TAD trees Tsuch that
(i) Tis rooted at the interval [i,j]; (ii) Tcontains N TADs  : N);
(iii) each D E T satisfies (SD > (3 and (iv) each D E T has valid
boundaries.

We will compute @(i, j, N, 5) by dynamic programing. At each
step, beginning with the interval [i , i], we must make optimal choices
Of the following.

1. Parameters (3D, ﬂD deﬁning the rOOt TAD D : (i,j, 5D, ﬂD).

2. A collection Of non—overlapping sub—intervals [ix, ix] which deﬁne
the locations Of the top—level sub—trees in T.

3. For each interval [ix, ix], a ‘multiplicity’ nx representing the tOtal
number Of TADs in that sub—tree. NOte that in order for T tO
have N TADs, the multiplicities nx must satisfy 2 nx : N — 1.

TO implement the steps above, one must be able tO compute the
optimal score for a TAD tree having the specified rOOt and first—
level sub—trees. Recall that O,(T) : yEp7q(T) — 5(T), where 5 is
the sum squared error defined in Equation (7). Suppose T is a
TAD tree consisting Of a rOOt TAD D and a single sub—tree T’.
From Equation (6), we have BEAT) : BRAD) +Bp7q(T’).
However, 5(T) 7S 5(D) —l— 5(T’), because pairs Of bins within the
sub—tree T’ contribute tO both 5(T’) and 5(D), and are double
counted when these terms are summed. Because the expected
contact frequency for a pair Of bins is modeled using the smallest
TAD that contains them both [Equation (4)], we retain the con—
tribution tO squared error made by the sub—tree T’, and subtract
the contribution tO squared error from the rOOt TAD D (Fig.
3C). Thus, if T’ spans the interval [i’,j’], then 5(T) :
5(D) —l— 5(T’) — 5c(i’,j’, D), where 5c(i’,j’, D) is the error compen-
sation term defined below.

DEFINITION 2: Consider a TAD D and interval [i, i] Q [D L, D R]. Let
the error compensation 5c(i,j, D) be
i i ~ 2
sat/3D) = ZZMDU, Ia) — Ark) . <8)

=i k=l

N

Using the error compensation, we derive an expression for the score
Of a TAD tree in terms Of its rOOt TAD and sub—trees.

PROPOSITION 1: Let T be a TAD tree consisting of a root TAD D
and a collection of non-overlapping sub-trees T1,...,Tm,
spanning the intervals [i1,j1],...,[im,jm]. The score OAT) can be
decomposed as

0M) = 02D) + imp) + swam». <9)

x=1

We now describe Steps (1—3) above in greater detail. TO perform
step (1), recall that a TAD is defined by four parameters
(LD,RD, (3D,ﬂD). Thus, in choosing the rOOt TAD D, two param—
eters are given ahead Of time ([LD,RD] : [i,j]), meaning we only
need tO select Optimal values for (3D and ﬂD. Next, for a given choice
Of (3D and ﬂD, we must choose a set Of non—overlapping sub—trees,
defined by sub—intervals [ix, ix] and multiplicities nx (steps 2—3). TO
that end, let I(i,j, N) be the collection Of sets {(ix,jx,nx)} that
satisfy the following properties: (i) [ix, ix] are non—overlapping
sub—intervals Of [i, i]; (ii) an : N — 1 and (iii) ix and ix are valid

91% ‘09 1sn3nv uo sojoﬁuv s01 ‘BTUJOJHBD 10 [{1ISIoAIun 112 /B.IO'S[BU.IT10[p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁ(1111] U101} pop1201umoq

Hierarchical chromatin domains

1 605

 

boundaries. Using I(i,j,N) as a search space, we evaluate
@(i,j, N, 5) as follows.

PROPOSITION 2: For each interval [i, j] and positive integer N,

«D ',',N,5 = 0 D W
“I > «tarsal i  

WhereWx : @(ixgjxgnxa  + 
(10)

TO our knowledge, there is nO efficient algorithm for evaluating
Equation (10). TO see why, note that Wx depends on both (ix, jx, nx)
and (ﬂD, 5D), meaning the two maximizations cannot be performed in-
dependently. TO perform the maximizations jointly, we could proceed
in two directions. On the one hand, we could enumerate interval sets
from the collection I (i, j,N ) and Optimize (ﬂD, (3D) for each. This is
nOt practical, however, because I (i, j,N ) is very large: (|1'(i, j,N N
0((j — i)N). Going in the Other direction, we could discretize the space
R X RT and test a finite set Of pairs ((31), ﬂD), Optimizing the interval
set {(ix, jx, nx)} for each. This method has the advantage that the Opti—
mization over interval sets can be performed efficiently using a version
Of weighted interval scheduling (described below). However, there
would still be a very large set Of (5D, ﬂD) pairs tO check, making
this approach impractical as well. Therefore, instead Of evaluating
@(i, j, N, 5) exactly, we approximate it, using pre—computed values for
((3 D, ﬂD) rather than true argmax. The pre—computed values are chosen
tO be Optimal in the trivial case where D has nO sub—TADs.

DEFINITION 3: For each interval [i, j], let

(B(i,i),5(i,i)) = argmin 5((i,i,5,/3))- <11)
(ﬁ,5)ERxR+

We define a TAD D tO be locally fitted if (31) : 5(LD,RD) and
ﬂD : f3(LD, RD). Thus, D is locally fitted if its parameters are Opti—
mal in the case where D has nO sub—TADs. We use D i,- tO denote the
unique locally fitted TAD spanning [i, j]. Using 3(i, j) and B (i, j) as
pre—computed TAD parameters is convenient because they are easily
found by linear regression. By restricting tO locally fitted TADs, we
Obtain a simpler Optimization problem which admits an efficient

algorithm.

PROBLEM 2: Given N E N and y E RT, find the TAD forest F that
maximizes the objective 0, : pr7q(F) — 5(F) such that  : N,
and each D E F is locally fitted and has valid boundaries.

Once again, our first step in solving Problem 2 will be tO find op-
timal TAD trees over every interval.

DEFINITION 4: Given N E N and the interval [i, j], define @(i, j, N) 2:
max O,(T) over all TAD trees Tsuch that (i) Tis rooted at the interval
[i,j], (ii) Tcontains N TADs  : N) and (iii) each D E T is locally
fitted has valid boundaries.

A

In contrast tO (I>(i,j,N, (3), @(i,j, N) does nOt take (3 as an argu—
ment, because it maximizes over TAD trees whose (3 values are fixed
by the requirement that they be locally fitted. This leads tO the fOl—
lowing proposition, which shows how tO evaluate @(i, j, N

PROPOSITION 3: For each interval [i, j] and positive integer N,

on, j, N) = o,(15,-,-)+ max

2m (12)
{(ixaixanx)}ez(iaivN) x

where

—OO otherwise.

W _ {©(ixajxanx) +5C(ixajx7Dij)  Z 

2.3 Algorithm

TO evaluate Equation (12), we must choose a set Of non—overlapping
intervals [ix, jx] and multiplicities nx that maximize 2x Wx and satisfy
2 nx : N — 1. Similarly, tO assemble a TAD forest from TAD trees,
we will likewise be choosing a non—overlapping set Of intervals (leaves
Of TAD trees) with multiplicities (number Of TADs in each tree) such
that the sum Of their scores is maximized and the multiplicities sum tO
a predefined N. These tasks are both similar tO the weighed interval
scheduling problem (Kleinberg and Tardos, 2005), which asks for the
highest weight set Of non—overlapping intervals from a given collec—
tion. However, the two tasks described above have the added require—
ment that the interval multiplicities sum tO a predefined value.
Therefore we define a variant Of weighted interval scheduling called
weighted interval scheduling with multiplicities (WISM).

DEFINITION 5: WISM: Let {[imja] | or E A} be a set of intervals with
multiplicities leg, and weights wa. For a given integer N, the WISMN
problem asks for the subset B Q A that maximizes ZaeBwa subject
to the following constrains: (i) the intervals {[imja] | or E B} are non-
overlapping and (ii) 2,1631%, : N.

We solve the WISM problem using a dynamic programing ap-
proach based on the following recurrence.

PROPOSITION 4: Let N be an integer and let {[imja] | or E A} be a set
ofintervals with multiplicities leg, and weights wa. Let WISMN(n) be
the score of the solution to the WISMN problem, restricted to inter-
vals that end before n. When n < mine, id, then clearly
WISMN(n) : 0. In all other cases

max 0, F" W0, —1— WISM _ a i,
WISMN(n) : max {'7 }( (N k )(  (13)
WISMN(n — 1).

TADtree algorithm

We now outline an algorithm for solving Problem 2, which we call
TADtree. (Fig. 4) Consider a chromosome with a ] >< ] contact matrix
A. Let N be the number Of TADs in the desired TAD forest. TO con—
strain runtime, we limit the maximum TAD size tO S and the number

Dynamic program

A

 

 

.2”

 

TAD scores

{_. \
Optimal TAD-trees
A

J.

 

 

 

INSIM

WSIM
4—

II
I . .

Optimal TAD-forest

 

 

 

 

 

 

Absolute contact matrix

Boundary Index

Fig. 4. Overview of TADtree algorithm. (A) Beginning with contact matrix A,
we compute the fold-enrichment over background for each pair of positions.
(B) For each interval [i,j], we estimate parameters 5(i,j),[3(i,j). (C) Next, for
each genomic position iwe compute the BI, a 1D statistic that looks for local
shifts in interaction frequency at TAD boundaries. (D) Finally, a dynamic pro-
gram finds TAD trees that maximize the BI and best fit the contact matrix A,
then selects an optimal set of TAD trees to form a TAD forest

9mg ‘09 1sn3nv uo sojoﬁuv s01 ‘BTUJOJHBD 10 Anus/nun 112 /B.IO'S[BU.IT10[p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁ(1111] U101} pop1201umoq

1606

C. Weinreb and B.J. Raphael

 

Of TADs in each tree tO M. The TADtree algorithm contains WISM as
a subroutine, for which we do not provide pseudocode. The runtime Of
TADtree is (’)(]N2 —l— ]S3’M2 —1— ]S5). Beyond the contact matrix A,
TADtree accepts six user—defined parameters: N, M, S, y, p and q. We
do nOt provide a rigorous procedure for setting these parameters, but
have detailed the rationale for our choices in Section 3.

 

Algorithm 1: TADtree(A, N, M, S, y, p, q)

 

Input : Matrix A Of length ] and parameters N, M, S, y, p, q.
Output: TAD forest F representing solution tO Problem 2.

T :  // list Of Optimal TAD trees
for i E {1, ...,j — 1} do
forj E {i, ...,i+S} do
compute 8(i, j) and [3(i, j) by linear regression
if Ema) > o, EMU) > o and 8(1', j) > 0 then
«but 1) 4 01(5))
8 =  // list Of sub—trees
for i’ E {i, ...,j — 1} do
for j’ E {i’ + 1, ...,j} do
if Emu") > 0, BMU’) > 0 and
8(1", j’) > 8(2', j) then
for m’ E {1, ...,M — 1} do
W <— d’U’JCM’) + 5C(i/7j/7Dii)
S <— append (i’,j’,m’,W)
for m E {2, ...,M} do
on, j, m) <— WISM(m,8)
T <—append (i, j, m, on, j, m))
return WISM(N, T)

 

 

Algorithm 2: WISM(n, J)

 

Input : n E N and list J containing tuples (i, j,m,W) repre—
senting intervals [i, j] with multiplicity m and weight
W. Assume that J is ordered by the right end points
Of its constituent intervals.

Output: Highest weight subset Of J with non-overlapping
intervals whose multiplicities sum tO n.

 

3 Results

We used TADtree tO analyze Hi—C data from Dixon et al. (2012) for
mouse embryonic stem cells, which had been binned at 40 kb and nor—
malized for sequencing bias using the method from Yaffe and Tanay
(2011). This dataset included a matrix Of contact frequencies for each
chromosome (available at http://yuelab.org/hi—c/download.html).

3.1 TADtree parameters

For each contact matrix A, we ran TADtree (Algorithm 1) with the
following parameters. We set the maximum TAD size tO be 2Mb
(S250 bins), because TADs were originally defined at a scale Of
1Mb. We nOte that chromatin ‘megadomains’ larger than 2Mb
have been Observed (Lieberman—Aiden et al., 2009), but the current
focus is on TADs. In theory, it is desirable tO use a large value Of S in
order tO avoid biasing the solution by prior assumptions on TAD
size. However, in practice, the O(S5) runtime Of TADtree makes
large values Of S impractical.

We allowed at most M = 10 TADs per TAD tree. We find that
TAD trees almost never attain this limit for the number Of TADs
(data nOt shown), implying that our choice for M did not limit the
complexity Of our output. We hypothesize that setting M = 10
allows our algorithm tO detect the full complexity Of TAD structure
in the underlying Hi—C data used in this study, although higher reso—
lution Hi—C data may warrant larger values Of M.

For the remaining parameters, we used the following values:
y=500, p=3 (120kb) and q: 12 (480kb). These values were
chosen based on visual inspection Of output for small subsets Of the
full Hi—C contact maps. Although we do nOt have a rigorous proced—
ure for choosing values Of p and q, we Observed that larger values Of
p and q make the BI insensitive tO small—scale boundaries, while
smaller values result in the algorithm outputting many TADs and
sub-TADs, many Of which are likely nOise.

We varied the tOtal number N Of TADs tO examine the tradeOffs
in sensitivity and specificity (see below). Because TADtree runs inde—
pendently on each chromosome, we chose N for each chromosome
such that the number Of TADs per megabase was consistent, using a
range Of densities (0 TADs/Mb, up tO 6 TADs/Mb) across the differ—
ent runs. For large values Of N, we Observed some duplicate TAD
calls defined as pairs Of TADs whose boundaries are both within
1 bin (40 kb) Of each Other (Fig. 5A). We filtered these duplicates by
removing the inner TAD from each pair. Because Of the dynamic
programing approach used in TADtree, computing the Optimal
TAD forest for a given value N = N0 also entails computing Optimal
TAD forests for all N < N0. Thus our implementation Of TADtree
outputs a duplicate—filtered set Of TADs (as well as the percentage Of
duplicates in the unfiltered set) across a user—specified range Of val—
ues Of N. Because a high percentage Of duplicates suggests that
TADtree is saturating the space Of TAD forests, users can examine
this percentage—or Other relevant data—to choose a final value Of
N for downstream analysis.

3.2 TAD nesting

We found that the TADs returned by TADtree show extensive nest—
ing. We define the order Of a TAD as the number Of TADs that con—
tain it: TADs with nO sub—TADs are order 0, sub—TADs have order
1, sub—sub—TADs have order 2 and so on. When we run TADtree
with N : 2200 TADs, which is the number identified by Dixon et al.
(2012), we find that 13% have order greater than 0. When we allow
5200 TADs, which is close tO the number identified by Filippova et
al. (2014), 45% have order greater than 0 (Fig. 5B). Although TADs
Of high order (up tO 4) are Observed, they are relatively rare. For ex—
ample, with 5200 TADs, 10% have order 22 and only 1.4% have
order 23. As expected, TADs Of increasing order have decreasing
size (Fig. 5C) and decreasing genomic coverage (Fig. 5D).

3.3 Comparison with previous studies

We compared the TADs from TADtree with those found in two pre—
vious studies (Dixon et al., 2012; Filippova et al., 2014) that ana—
lyzed the same contact matrices. TO compare TADs from different
approaches, we compared the partitions Of bins determined by TAD
end points using the variation Of information (VI) measure (Meila,
2003). The VI is a distance measure for set partitions, and thus
lower values Of VI mean that two partitions Of bins intO TADs are
more similar. We find that the VI between TADtree TADs with
N=2200 and TADs from Dixon et al. (2012) was 0.82, compared
tO 1.72 when the positions Of our TADs were randomly shufﬂed.
Similarly, we find that VI:0.99 between TADtree TADs with
N :5200 and those reported in Filippova et al. (2014), compared

91% ‘09 1sn3nv uo sojoﬁuv s01 ‘BTUJOJHBD 10 Anus/nun 112 /§.IO'SIBU.ITIO[p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

 

 

 

 

 

 

 

 

 

 

 

      

 

 

 

 

 

 

Hierarchical chromatin domains 1607
A L B 0 C 2.0 D 10 E H" _____._._. -
A 0: ° =
g E 2500 08 ° 5
E 6000 g 1.5 a, ' g
3 m 2000 - 3 O) I1 115
w 0 1° 2 9 06
D "'6 V a: F 0.0 1:15 10
< 4000 a, 1500 a) 1.0 S 1.0
I— D '— 0 1:
“5 < w : o 04 D
a 1— 1000 2 , i E 1., E,
8 2000 ‘5 I— 05 ' E g 02 E
g 5 500 2,, g a , g . US ____..
C "E : .r ..  2° '
O 3 o 3. M 3° 0.11 0.5 1.0
o 4000 8000 C o 2500 5000 0° 10 2° 3° 0 2500 5000 _ Rel-:3" ._
number of TADs (total) number of TADs 5200 TADs number of TADs | 3.0 @nﬂ
G .(Dixon, 2012) . (Filippova, 2014) —TADtree H 1 7 a 2-5 I
m (U
A x '0
. 51.6 Egz'o- . .'
DIXOn et 31- megabase : .._ 8 1.8 pom
.9 " S o
g 1.5 éE 1.4
.9 E 2 l
E 1.4 co 5 1-0 _ .-
"5 3”; crc1=
 13 g; 3.3
E 3 2.9
g 1 2 ' ' ' ' ' ' 2 5 j.
' o 2000 4000 6000 - 0 2500 5000
number Of TADS number of TADs

Fig. 5. (A) Total number of unique TAD output by TADtree (solid green curve) as a function of the value of N, the desired number of TADs. Dotted line is equality.
(B) Number of TADs of each order as a function of total number of TADs. As the total number of TADs increases, the number of zero-order TADs (indicating new
positions not covered by TADs) start to plateau and high order TADs appear. (C) Higher order TADs have smaller sizes and (D) lower coverage of the genome,
consistent with their nesting inside larger TADs. (E, F) Precision-recall curves comparing TADs found by TADtree with those reported in Dixon et al. (2012). (G)
Example of TADs from TADtree (bottom) and two previous studies (Dixon et al., 2012; Filippova et al., 2014). (H) TADs found by TADtree (black line) are more
similar (lower VI) to those found in a recent analysis of higher resolution Hi-C data (Rao et al., 2014), compared with TADs reported in Dixon et al. (2012) (blue
square) and Filippova et al. (2014) (red disk). (I) Number of ChlP-seq peaks for CTCF, Polll and the histone modification H3K4me3 within 50 kb of TAD boundary
(y—axis) versus total number of TADs (x—axis) for TADtree TADs (black line), Dixon et al. (2012) (blue square) and Filippova et al. (2014) (red disk). TADtree shows

greater enrichment for all four chromatin marks

with 1.73 when our TADs were shufﬂed. Interestingly, the VI: 1.2
is much higher between Dixon et al. (2012) TADs and Filippova
et al. (2014) TADs. This higher VI is likely a consequence Of differ-
ing size preference. The method used by Dixon et al. (2012) tends tO
favor large TADs, while the approach used by Filippova et al.
(2014) tends tO favor small TADs. The greater similarity between
our TADs and those from both Dixon et al. (2012) and Filippova et
al. (2014) highlights the ability Of TADtree tO robustly identify
TADs across a range Of scales.

As an additional comparison between TADs from Dixon et al.
(2012) and TADtree, we computed precision—recall curves, treating
the Dixon et al. (2012) TADs as the true set. We performed the com—
parison in two ways: first counting bins inside TADs as true posi—
tives (Fig. 5E) and then counting the positions Of TAD boundaries
(Fig. 5F), where boundaries within one bin (40kb) Of each Other
were considered tO match. TADtree Obtained a recall Of 89% at a
precision Of 95% in determining which bins were inside TADs, and
a recall Of 85% at a precision Of 41% in determining TAD bounda-
ries. NOte that a low precision in the later comparison is expected
since a large fraction Of TAD boundaries predicted by TADtree be—
long tO sub—TADs, and therefore lie between the boundaries Of
TADs called by Dixon et al. (2012).

As an independent measure Of the quality Of TADs output by the
three approaches, we compared them tO the TADs identified by Rao
et al. (2014) in higher resolution Hi—C data. Specifically, Rao et al.
(2014) generated Hi—C maps for mouse lymphoblasts at 5 kb reso—
lution. Because this increased resolution allows significantly more
data for estimating TADs, the TADs from these data are a useful
benchmark for evaluating the accuracy Of TAD calls based on the
lower resolution (40 kb) contact maps used here. Fixing the number
Of TAD output by TADtree tO the same as the Other approaches, we
find that the TADtree TADs are more similar tO the TADs in the

higher resolution (Rao et al., 2014) data than those from the Other
methods. The difference is relatively small in comparison with
Dixon et al. (2012): VI: 1.24 for TADtree versus 1.27 for Dixon et
al. (2012), and nOt statistically significant (P = 0.3) using a paired t—
test that compares the values across individual chromosomes. A
larger difference was Observed in comparison with Filippova et al.
(2014): VI: 1.28 for TADtree versus 1.54 for Filippova et al.
(2014) (P < 10T6). Interestingly, we also Observe that the lowest VI
occurs when TADtree is run with N = 2600 TADs, a number in be-
tween the number Of TADs in Dixon et al. (2012) and Filippova et
al. (2014) (Fig. 5H).

3.4 Enrichment of chromatin marks

As another measure Of the quality Of TADs produced by each algo—
rithm, we examined the enrichment Of Chip—Seq derived binding
sites Of several proteins and chromatin marks that were shown by
Dixon et al. (2012) tO cluster at domain boundaries. Specifically, we
examined binding sites Of the transcription factor CTCF, an insula—
tor protein that has been shown experimentally tO contribute tO
TAD boundary formation (Zuin et al., 2014). We also examined the
presence Of PolII sites, as well as H3K4me3 marks—a transcription-
associated chromatin mark—because TAD boundaries are fre—
quently gene dense sites Of active transcription (Hou et al., 2012)
and have been shown tO be enriched for housekeeping genes (Dixon
et al., 2012). These marks were also used by Filippova et al. (2014)
tO validate their TAD predictions. We downloaded ChIP—Seq data
for mES cells from ENCODE (GEO accession ID GSE29184). Peak
calling for these data was performed in their initial publication
(Shen et al., 2012). For each dataset, we counted the average num—
ber Of ChIP—Seq peaks within 50 kb Of a TAD boundary. Below, we
present summary statistics for the whole genome, but compute P

91% ‘09 1sn3nv uo sojoﬁuv s01 ‘BTUJOJHBD 10 Anus/nun 112 /§.IO'SIBU.ITIO[p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

1608

C. Weinreb and B.J. Raphael

 

values using a paired t—test that compares the values across each
chromosome. We found that TADs from TADtree show a signifi-
cantly greater enrichment for all four ChIP-Seq signals than TADs
from previous studies. For PolII and H3K4me3, our TADs have at
least 14% more ChIP—seq peaks within 5 0 kb Of a TAD boundary
than the TADs from Dixon et al. (2012) and Filippova et al. (2014)
when controlling for number Of TADs (Fig. 5I) (P < 0.005 for 4/4
comparisons). Although our TAD boundaries show a similar enrich-
ment Of CTCF as those from Dixon et al. (2012), they have a 30%
greater enrichment compared with TADs from Filippova et al.
(2014) (P < 10‘6). Enrichment Of these marks decreases as we in—
crease the tOtal number Of TADs, indicating a tradeOff between sen—
sitivity and specificity. However, the robust improvement compared
with previous methods over a large range Of TAD numbers demon—
strates the advantages Of the hierarchical decomposition performed
by TADtree.

4 Discussion

Hi—C and Other approaches that combine high—throughput sequenc—
ing with 3C are becoming widely used tO probe the 3D organization
Of the genome. There is increasing evidence that sub—TAD structure
varies between cell types and contributes tO changes in gene regula—
tion during differentiation and development (Berlivet et al., 2013;
Phillips-Cremins et al., 2013). TADtree is the first publicly available
algorithm that detects nested hierarchies Of TADs in Hi—C data.
Thus, TADtree will enable further research intO the organization Of
TADs and sub—TADs.

TADtree employs a straightforward linear model Of contact en—
richment that is derived from earlier annotations Of TADs. TADtree
finds the best TAD hierarchy via a dynamic programing algorithm,
using an approximation Of this model. We demonstrate that
TADtree outperforms earlier methods on real Hi—C data. In particu—
lar, we show that TADs determined by TADtree on lower resolution
(40kb) data match more closely tO TADs derived on higher reso—
lution (5 kb) Hi—C data from Rao et al. (2014). Moreover, we find
that TADtree—derived TADs have a higher enrichment at their boun—
daries for binding sites Of factors such that CTCF than are known tO
demarcate chromatin boundaries.

Although the TADtree algorithm demonstrates that TAD hier-
archies can be informative, there are several areas where the algo—
rithm can be improved. First, TADtree finds only an approximate
best fit tO our model. Tests on smaller datasets using a brute force
search suggest that the approximate solution differs little from the
true solution (data nOt shown). Nonetheless, finding an exact solu—
tion in polynomial time—or proving that this cannot be done—
may be an interesting problem for future research. A second limita—
tion Of TADtree is the rapid increase in runtime N (9(S5) with max—
imum TAD size S. Third, although our use Of a parameter N
specifying the number Of TADs returned by TADtree is a novel
contribution compared with previous methods, we have nOt
included a procedure for model selection, leaving the choice Of N
tO the user.

Chromatin structure is highly dynamic and varies widely from
cell tO cell (Lanctot et al., 2007). Because approaches such as Hi—C
typically pOOl contacts from across a whole population, it is unclear
tO what extent the TAD trees identified in this article represent true
chromosomal structures within individual cells. Although efforts
have been made tO deconvolve Hi—C contacts computationally (Sefer
et al., 2015), this remains a challenging problem. In the future, ad—
vances in microscopy and single cell Hi—C (Nagano et al., 2013) may

shed light on whether TAD trees are true chromosomal structures or
artifacts Of super position.

The emerging field Of higher order chromatin organization is
providing a new lens for viewing the regulatory landscape Of cells.
Chromatin structure may provide a missing link for understanding
the regulatory changes that occur during differentiation and disease
(Andrey et al., 2013; Jager et al., 2015). Because megabase—scale
TADs appear tO be highly conserved across both cell types and spe—
cies, it is likely that key changes in chromatin organization occur at
the sub—TAD scale. For example, changes in the structure Of sub—
TADs could fine—tune Opportunities for contact between genes and
enhancers. Therefore, methods for deciphering the hierarchical
structure Of chromatin will be important for linking genome archi-
tecture tO cellular state.

Funding

This research is supported by a National Science Foundation (NSF) CAREER
Award CCF-1053753 and NIH RO 1HG005 690. B.].R. is also supported by a
Career Award at the Scientiﬁc Interface from the Burroughs Wellcome Fund,
an Alfred P Sloan Research Fellowship.

Conﬂict of Interest: none declared.

References

Andrey,G. et al. (2013) A switch between topological domains underlies
HoxD genes collinearity in mouse limbs. Science, 340, 1234167.

Berlivet,S. et al. (2013) Clustering Of tissue-speciﬁc sub-TADs accompanies the
regulation Of HoxA genes in developing limbs. PLOS Genet, 9, e1004018.

Cavalli,G. and Misteli,T. (2013) Functional implications Of genome topology.
Nat. Struct. Mol. Biol., 20, 290—299.

De Wit,E. and de Laat,W. (2012) A decade Of 3C technologies: insights into
nuclear organization. Genes Dev., 26, 1 1—24.

Dixon,].R. et al. (2012) Topological domains in mammalian genomes identi-
ﬁed by analysis Of chromatin interactions. Nature, 485, 376—380.

Filippova,D. et al. (2014) Identiﬁcation Of alternative topological domains in
chromatin. Algorithms Mol. Biol., 9, 14.

Hou,C. et al. (2012) Gene density, transcription and insulators contribute to
the partition Of the Drosophila genome into physical domains. Mol. Cell,
48, 471—484.

Jager,R. et al. (2015) Capture Hi-C identiﬁes the chromatin interactome Of
colorectal cancer risk loci. Nat. Commun., 6, 6178.

Kleinberg,]. and Tardos,E. (2005) Algorithm Design. Addison-Wesley
Longman Publishing CO., Inc., Boston, MA, USA.

Lanctot,C. et al. (2007) Dynamic genome architecture in the nuclear space: regu-
lation Of gene expression in three dimensions. Nat. Rev. Genet, 8, 104—115.
Lévy-Leduc,C. et al. (2014) TWO-dimensional segmentation for analyzing Hi-

C data. Bioinformatics, 30, i386—i392.

Lieberman-Aiden,E. et al. (2009) Comprehensive mapping Of long-range
interactions reveals folding principles Of the human genome. Science,
326, 289—293.

Meila,M. (2003) Comparing clusterings by the variation Of information.
Lecture Notes in Computer Science, 2777, 173—187.

NaganO,T. et al. (2013) Single-cell Hi-C reveals cell-tO-cell variability in
chromosome structure. Nature, 502, 5 9—64.

Nora,E.P. et al. (2012) Spatial partitioning Of the regulatory landscape Of the
X-inactivation centre. Nature, 485 , 381—385.

Phillips-CreminsJE. et al. (2013) Architectural protein subclasses shape 3-D 0r-
ganization Of genomes during lineage commitment. Cell, 153, 1281—1295.

RaO,S.S.P. et al. (2014) A 3D map Of the human genome at kilobase resolution
reveals principles Of chromatin looping. Cell, 159, 1665—1680.

Sauria,M.E. et al. (2014) Hiﬁve: a normalization approach for higher-
resolution hic and 5c chromosome conformation data analysis. bioinv.

9mg ‘09 1sn3nv uo sojoﬁuv s01 ‘BTUJOJHBD 10 [{1ISIoAqu1 112 /§.IO'SIBU.ITIO[p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

Hierarchical chromatin domains

1 609

 

Sefer,E. et al. (2015) Deconvolution Of ensemble chromatin interaction data
reveals the latent mixing structures in cell subpopulations. In: Przytycka,T.
(ed). Research in Computational Molecular Biology. Springer, Switzerland.

Sexton,T. et al. (2012) Three-dimensional folding and functional organization
principles Of the Drosophila genome. Cell, 148, 45 8—472.

Shen,Y. et al. (2012) A map Of the cis-regulatory sequences in the mouse gen-
ome. Nature, 488, 116—120.

Symmons,O. et al. (2014) Functional and topological characteristics Of mam-
malian regulatory domains. Genome Res., 24, 390—400.

Tanay,A. and Cavalli,G. (2013) Chromosomal domains: epigenetic contexts
and functional implications Of genomic compartmentalization. Curr. Opin.
Genet. Dev., 23, 197—203.

Yaffe,E. and Tanay,A. (2011) Probabilistic modeling Of Hi-C contact maps
eliminates systematic biases to characterize global chromosomal architec-
ture. Nat. Genet., 43, 1059—1065.

Zuin,]. et al. (2014) Cohesin and CTCF differentially affect chromatin archi-
tecture and gene expression in human cells. Proc. Natl. Acad. Sci. USA, 111,
996—1001.

91% ‘09 1sn3nv uo sojoﬁuv s01 ‘BTUJOJHBD 10 [{1ISIoAqu1 112 /§.IO'SIBU.ITIO[p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq U101} pop1201umoq

