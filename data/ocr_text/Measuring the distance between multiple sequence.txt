ORIGINAL PAPER

Vol. 28 no. 4 2012, pages 495-502
doi: 10. 1093/bioinformatics/btr701

 

Sequence analysis

Advance Access publication December 23, 2011

Measuring the distance between multiple sequence alignments

Benjamin P. Blackburne and Simon Whelan*

Computational and Evolutionary Biology, Faculty of Life Sciences, University of Manchester, Manchester M13 9PT

Associate Editor: John Quackenbush

 

ABSTRACT

Motivation: Multiple sequence alignment (MSA) is a core method
in bioinformatics. The accuracy of such alignments may influence
the success of downstream analyses such as phylogenetic
inference, protein structure prediction, and functional prediction.
The importance of MSA has lead to the proliferation of MSA
methods, with different objective functions and heuristics to search
for the optimal MSA. Different methods of inferring MSAs produce
different results in all but the most trivial cases. By measuring
the differences between inferred alignments, we may be able to
develop an understanding of how these differences (i) relate to
the objective functions and heuristics used in MSA methods, and
(ii) affect downstream analyses.

Results: We introduce four metrics to compare MSAs, which include
the position in a sequence where a gap occurs or the location on a
phylogenetic tree where an insertion or deletion (indel) event occurs.
We use both real and synthetic data to explore the information
given by these metrics and demonstrate how the different metrics
in combination can yield more information about MSA methods and
the differences between them.

Availability: MetAl is a free software implementation of these metrics
in Haskell. Source and binaries for Windows, Linux and Mac OS X
are available from http://kumiho.smith.man.ac.uk/whelan/software/
metal/.

Contact: simon.whelan@manchester.ac.uk

Received on July 19, 2011; revised on December 06, 2011; accepted
on December 19, 2011

1 INTRODUCTION

Many methods used in bioinformatics require one or more accurate
multiple sequence alignments (MSAs) as input. Each MSA arranges
a set of homologous amino acid or nucleotide sequences in a
matrix, where each column of the matrix corresponds to a set of
characters that are homologous, functionally related or superposable
in a protein structure (Edgar and Batzoglou, 2006). These deﬁnitions
may coincide when the sequences are closely related, but may
conﬂict as the sequences diverge. Methods of phylogenetic tree
reconstruction (Felsenstein, 2003), structure prediction (Arnold
et al., 2006), functional annotation (Eisen, 1998) and the creation of
proﬁle hidden Markov models for database searching (Eddy, 2009)
all depend on an alignment, and the performance of these methods
depends inevitably on the accuracy of these alignments. A variety
of MSA methods have been developed over the past two decades
that are still in active use (Notredame, 2007), including methods that
co—estimate trees and alignment (Hagopian et al., 2010; Liu et al.,

 

*To whom correspondence should be addressed.

2009; Redelings and Suchard, 2005). These algorithms vary in their
objective function and the heuristic used to ﬁnd the best MSA.

The performance of MSA methods is frequently assessed by their
ability to recover a reference alignment (e. g. Golubchik et al., 2007),
which may be produced from biological information, such as a
conserved structure (Thompson et al., 2005). The output of each
method can then be scored against the reference alignment, either
by the fraction of residue pairs in the reference alignment that are
correctly identiﬁed by a given method, known as the Sum—of—Pairs
(SP) score, or by the Total Column (TC) score, which describes the
fraction of reference columns identiﬁed (Thompson et al., 2005).

Several studies have noted the effect of sequence alignment
algorithm on, for example, phylogenetic tree topology (Cantarel
et al., 2006; Hall, 2005; Morrison and Ellis, 1997; Ogden and
Rosenberg, 2006; Wang et al., 2011; Wong et al., 2008). Many of
these studies used simulated data and the parameter of interest was
generally assessed against alignment quality, measured as TC or SP
score against the true alignment. Neither the TC nor the SP score
are true metrics because they violate the principles of symmetry
and the triangle inequality (see below). Producing a valid metric
would allow alignment to be projected as points in an alignment
space, enabling the comparison of distances between different
MSA methods or across different datasets. When these comparisons
include a reference alignment, the metric would give some indication
of the similarity of alignment methods as well as an accuracy
score. Alternatively, such a metric could be used to characterize
alignment uncertainty. Previous work on uncertainty has relied on
annotating a ‘best’ alignment with uncertainty information based on
the proportion of base pairs that are present when the sequences are
reversed before alignment (Landan and Graur, 2007; Wise, 2010),
or when the guide tree is varied (Penn et al., 2010). A true metric
could also provide direct comparison of equally or similarly high
scoring paths through the dynamic programming matrix produced
during MSA, allowing one to identify regions of high uncertainty in
the ﬁnal alignment.

In this study, we derive four true metrics for the comparison
of MSAs: (i) a simple correction to the SP score; (ii) a metric
that incorporates raw gap information; (iii) a metric that includes
the position where gaps occur in a sequence; and (iv) a metric
that includes the position where insertion/deletion (indel) events
occur both in a sequence and on a phylogenetic tree. We proceed
to demonstrate that the SP and TP score are not metrics and
cannot be used to investigate many questions about how MSA
methods perform. We then show the usefulness of our metrics on
MSAs produced by a selection of methods on real data extracted
from BAliBASE (Thompson et al., 2005), and simulated data
produced using INDELible (Fletcher and Yang, 2009). Through
these analyses, we also demonstrate that the combined use of
our metrics can identify similarities and differences between

 

© The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 495

112 /§JO'SIBUJn0[p.IOJXO'SOllBIHJOJUTOTQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

B.P.Blackburne and S. Whelan

 

MSA methods and characterize the rate of decline in alignment
performance over increasing evolutionary distances.

2 METHODS

2.1 General deﬁnitions

Consider a set of n sequences S = {S 1,52, ..., 5”} where the j—th character in
sequence i is denoted S; and the sum of the sequence lengths is given by c:
:1- |Si |. Also consider a phylogenetic tree, T, that describes the evolutionary
relatedness of the sequences in S by a series of edges, e: {e1,e2, ..., e2n_3}
where ek describes an edge in the tree that splits S into two non—empty
sets. Distances between MSAs should compare where in the MSAs each
observable character, S}, is placed in relation to the characters in the other
sequences. We begin by assigning S]? to a homology set, which contains the
characters in the other sequences that share a common ancestor with S}.
Where there is no such relationship due to an indel, the set may include a
character representing the gap state. When assigning such homology sets, we
may also wish to include additional information in the labelling of the gap
states to alter the information given by the distance. First, we can include
information about the placement of the gap characters in their respective
sequences. Secondly, we can include information about the likely edge that
corresponds to the location of the indel event on the tree that resulted in
the gap.

2.2 Receding the insertion and deletion history of an
alignment

The next step in computing a distance between alignments is to recode the
alignment so that all the characters and gaps can be correctly compared. The
transition from S to an alignment requires the placement of gap characters,
which represent all the indels that have occurred during the history of
the sequences. We assume no direction to evolution and, therefore, cannot
differentiate between insertions or deletions. To incorporate information from
indels, we recode gap characters in our alignments in one of four ways (see
Fig. 1 for examples):

( 1) SSP: the ‘Symmetrized SP’ recoding ignores gaps and treats them as
blanks in an alignment. The name reﬂects the similarity to the existing
SP method for comparing alignments.

(2) seq: this recoding provides a simple record of gap information and
treats all gaps in a sequence equally. Each gap is simply recoded as
G’, indicating it occurred in sequence i.

(3) pos: our third recoding incorporates the positional information about
where a gap occurs in a sequence, but not the temporal (phylogenetic)
location of the indel that produced the gap. Each gap is labelled as
G}, where j is the location of the real character to the left. In Figure 1,
both gaps occurring after the ﬁrst character in Sequence 3 are labelled
as G? Note any gap occurring before the ﬁrst character would be
labelled G6.

(4) evol: our ﬁnal recoding includes all the information of pos recoding,
and also incorporates where the indel event leading to that gap occurs
in a phylogenetic tree. Each column in an alignment is considered
independently and the indel history inferred as the most parsimonious
set of events under Dollo parsimony (Huson and Steel, 2004). Dollo
parsimony enforces that the history of each column is restricted to a
maximum of one insertion and any number of deletion events, with
the mapping of indel events to edges the same regardless of the tree
rooting. Gap characters in the column are then recoded using the
nomenclature GJ’:(k), where k is an index used to label edges in the
tree.

 

 

 

 

 

Distance Labeling Labeled Alignment Example Homology
measure Sets
Original multiple (1) A A T A T T G
sﬁquence (2) A A T T A G
allgnment (3) A _ _ A _ T A G
w
dSSP Label characters (1) $11 $12 $13 $14 $15 $16 $17 HSSP11={SZI, S31}
only (2) $21 522 $23 $24 525 $26 —> Hssp21={511, 531}
(3) 531 512 533 534 $35 HSSP23={315}
9
dm Label gaps by (1) $11 $12 $13 $14 $15 $16 $17 61 Hseq11={Szl, S31}

sequence (2) 52 62 62 52 52 52 52 52 ‘ HsquI={Sll,S31}
1 2 3 4 5 6 2_ 1 G3
(3) 531 G3 G3 512 G3 533 534 s35 Hseq3—{S 5, }

 

 

 

W
dpos Label gaps-by (1) $11 $12 $13 $14 515 $16 $17 617 Hp0511={Szl,S31}
posmon (2) 521 621 621 522 523 524 525 526 ‘ HP05221={5111,CS;:1}
(3) $31 631 631 $12 632 $33 534 $35 Hpos 3={S S, 2}

W

 

deval Labelgaps 14 (1) 511 512 $13 5'14 $15 516 S'17 617(4) Hev0111={5217531}
by bran?P__E(2) $21 621(4)G21(4) 522 $23 $24 $25 $26 “Hevofz={51e531}

2- 1
2 (3) $31 631(4)G31(4) 512 632(2) 533 534 S35 Hev0l3_{S 5702(2)}

 

Fig. 1. Labelling of sequence alignments in order to determine distances
by different metrics. Gap states are given in bold to highlight the difference
between the four methods.

A B

(1)AAAGTT—G(1)AAAGTTG-
(2)AAAG--A-(2)AAAG---A
(3)AAAGTTA-(3)AAAGTT-A

Fig. 2. Two alternative representations of the same alignment. Before our
recoding procedure, the columns of representation B would be re—ordered to
give representation A.

2.3 Enforcing a unique representation of an alignment

When comparing MSAs, the ﬁrst step is to ensure that any given assignment
of gaps has a unique representation in alignment space. When gaps are
considered as independent events, the order of some columns in an alignment
may be arbitrary. For example, the last two columns in Figure 2 could be
placed in any order because they contain no overlapping bases. To enforce
a unique alignment representation, we reorder sequences alphabetically by
their names. We then sort the non—overlapping columns so that the leftmost
column contains a gap in a higher row than the column to the right.

2.4 Including evolutionary information

The labelling step for the eve] recoding requires a tree in order to label
each gap by the inferred indel event that caused it, assuming that each
position in a multi—site gap can be considered independently. Although this
approach is not ideal from a biological perspective, it does allow efﬁcient
and simple computation of where indels occur on the tree. Allowing gaps to
span multiple columns makes identifying their placement on the tree more
difﬁcult, because there may be many equally parsimonious solutions for gap
placement (Simmons and Ochoterena, 2000), each of which may induce a
different homology assignment to a site and result in a different distance
between alignments. Our approach may be viewed as similar to using a
linear gap penalty when identifying where an indel occurs.

2.5 Comparing homology sets

Once a pair of alignments are recoded appropriately the process of calculating
the distances between them can begin. The ﬁrst step is to calculate the site—
wise homology set for each alignment under each metric, so for alignment
A and metric x e {SSP, seq, pos, evol} we have HX (A) = {HX 01);}. To create
the homology set HX(A)’:, one identiﬁes the column in alignment A with
character 5’3 and store all the other characters in that column, including gaps
if they are labelled. Note that gaps do not have a homology set of their

 

496

112 /B.IO'SIBUJHOprOJXO'SOllBIIIJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

Measuring the distance between MSAs

 

own because they do not represent observable data and their presence varies
between alignments. For example, taking the eve] recoding from Figure 1 the
homology set for sequence character 5% is Hev01(A)§ = {551 , G3(2)}. We deﬁne
the dssp metric as the J accard distance on the homology sets Hssp. Previous
research has shown the J accard distance to be a valid metric (Lipkus, 1999).

ZiZj |H(A)J’- r)H(13)}|
ZiZj |H(B)}UH(A)}|

We call this measure of distance between alignments our Symmetrized
SP (SSP) metric, reﬂecting its inspiration from the original SP score. This
metric has a mixture of desirable and undesirable properties. It has a direct
link to the information used by most methods of sequence analysis (homology
pairs), but the contribution of base—gap pairs to the metric is less clear. By
explicitly encoding gap characters, we can extend the metric to include other
information that may be considered important.

For the remaining three metrics, we can deﬁne them such that they take
advantage of the fact that the homology set sizes remain constant for any
given alignment. In Figure 1, for example, one can see that for seq, pos and
evol recoding every homology set is of size n — 1, in contrast to SSP where
the size of homology sets varies between alignments. We take advantage of
this consistency to use the following to compute the distance metric dX (A, B);
for X e {seq,p0s, evol}:

615513043): 1 — (1)

,- le(A)Jl-AHX(B)JI-|
dXV‘vB) = %
|HX(A)j| ‘1‘ 
The numerator of this equation is the symmetric difference, which in
our case is equivalent to the Hamming distance, as each member of
HX(A)J’: has a corresponding member in HX(B)J’:. Previous research has
shown the Hamming distance is a true metric (Deza and Deza, 2009). The
inclusion of gaps in the homology sets means the normalizing denominator
in equation 2 is constant for any given alignment of the same set of
sequences, and therefore |HX(A);Z| = |HX(B);Z|. A function remains a metric
after normalization by a constant. The formulation of a per character
homology distance allows us to compute two useful quantities. First, we
can compute the distance between a pair of alignments by taking the average
across all characters in the sequences.

d(A,B)= EZZdMB); (3)
l J

(2)

The second quantity of interest is a measure of how differently the
characters of a single sequence Si are incorporated into two MSAs. This
metric could, in principle, be used to identify sources of error in aligners,
particularly those associated with a guide tree.

. 1 .
d(A,B)’ = m Edam); (4)
1‘

2.6 Interpreting alignment distances

The metrics described here provide a distance between two alignments that
lies between 0 and 1. Note that this distance can equally be expressed as
a percentage. For dseq, dpOS and devol, these distances can be interpreted
as the probability that a randomly selected base (x) will be aligned to
a different location against a sequence randomly selected from the n—l
sequences that do not contain x. The remaining metric, dssp, represents
the fraction of pairings between observable characters that overlap in the
two alignments. The limitations of this metric are best demonstrated by
example. Consider an arbitrary alignment of n sequences each of length
Z. If we modify this alignment by breaking the homology between two bases
and aligning them both with gaps, the distance between the two alignments
under dseq will be mil) . Under dssp, the distance will depend on how many
pairwise homologies are present in the starting alignment; if more pairwise
homologies are inferred, then the denominator will be larger, and so the
difference between the two alignments will be smaller. In other words, the
structure of one part of the alignment affects the distance caused by a change
in another part of the alignment.

 

2.7 Alignment programs examined

To demonstrate the performance and usefulness of our four metrics, we use
them to compare the alignments produced from a range of popular alignment
programs with their default options on two different datasets. We consider the
progressive aligners ClustalW (Larkin et al., 2007); Muscle (Edgar, 2004);
MAFFT’s FFT—NS—i algorithm (Katoh and Toh, 2008), which includes
additional reﬁnement steps; DIALIGN—TX (Subramanian et al., 2008),
which includes an additional greedy matching step; the consistency aligners
T—Coffee (Notredame, 2000), ProbCons (Do et al., 2005) and the L—INS—i
algorithm of MAFFT; and the phylogenetically aware aligner Prank, with
the recommended ‘+F’ option (L0ytynoja and Goldman, 2008). Although
other non—default parameters have the potential to improve the quality of
alignments, our aim is not to judge alignment quality but to show how the
metrics presented here reveal differences in the algorithms.

We examine two datasets, one synthetic, and one real (described below).
For each dataset examined, we align the sequences using each of the
procedures detailed above. We also include the true or reference alignment for
comparison. Given these alignments, we can calculate the all—against—all set
of distances under each of the four metrics proposed here. We visualise mean
distance matrices using the heatmap.2 package from the gplots R package.
The mean distance is equivalent to a renormalized Manhattan distance;
results using the euclidean distance are similar but a mean distance is more
interpretable.

Where devol was used a reference phylogenetic tree topology was required.
For the BAliBASE alignments, a maximum—likelihood tree was generated
using RAxML (Stamatakis, 2006) on the BAliBASE reference alignment. For
the synthetic data, the reference tree was the tree used to generate the data.

2. 7.1 Test data I : BAliBASE We examine alignment performance on three
sections of the BAliBASE 3 database, which has been widely used to assess
the performance of alignment algorithms at recovering reference alignments
derived from protein structure information. We use sections RV12 (medium—
to—divergent sequences with 20—40% identity), RV30 (subfamilies) and RV50
(internal insertions), with 20 alignments randomly chosen from each section
for subsequent analysis. Results are also presented for the truncated versions
of the same sequences, containing only the homologous regions. Alignments
contain between 4 and 142 sequences (mean of 34.9).

2.7.2 Test data 2: synthetic data Simulated data provides a useful test
of alignment where all properties of the data are known, at the cost of
not reﬂecting the complexity of real data. In this study, we use synthetic
data to assess the effect of evolutionary distance on alignment. We generate
data under a balanced tree topology with eight leaves, where all 14
branches are of equal length and the total tree branch length is one of
{0.14,0.42,0.84,1.4,2.8,7}. We also generate a second dataset with an
unbalanced tree where each internal branch has equal length and the overall
tree length is scaled the same as the corresponding balanced tree. All trees
used are clock—like. INDELible v1.03 (Fletcher and Yang, 2009) was used
to simulate data under the WAG (Whelan and Goldman, 2001) substitution
matrix, with an indel rate parameter of 0.1 and a power—law indel length
distribution with parameter a = 1.7. The root sequence has length 1000, and
20 replicates were made of each run.

3 RESULTS

3.1 The problem with existing scores

A non—negative function, d(x, y), is a metric if it obeys the following
conditions:

(1) d(x, y) :0 if and only if x = y (identity of indiscernibles).
(2) d(x,y)=d(y,x) (symmetry)-

(3) d(x, z) 5 d(x, y) —l—d (y, z) (triangle inequality).

 

497

112 /BJO'S[BUJHOIPJOJXO'SOIlBUIJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

B.P.Blackburne and S. Whelan

 

 

 

 

 

x AGA B B
Y TC 1/2: 0/\1
A c A c
1/2
All A All rB AII rC B
A1
x: AGA x: -AGA x: AG-A A c
v: TC- Y: T-C- Y: T—C- 0
A 9C
'3 B
x: -AGA
Y: T-C-
“7/ \\1 “4 1
o 1 D
A 0 c
. . _ A c
x: AGA _> x. AG A m
V. TC- m V: T-C-
B D

 

 

Fig. 3. The process of analysing the alignment of two toy sequences with
three sequence aligners, using the SP score. See Section 3.1 for discussion.
(A) Perform sequence alignments; (B) calculate SP differences; (C) choose
one reference and compare; (D) use mean difference as pseudo—distances.

We demonstrate that existing methods for comparing
alignments are not metrics, starting with the widely used SP
similarity (Thompson et al., 2005), recoded as a dissimilarity, dsp.
Using our labelling deﬁnitions (Fig. 1), the dissimilarity dsp(A,B)
between a test alignment A and a reference alignment B is:

ZiZJ-IHssr(A>joHssr(B)jl
Zr 2,- IHSSP(B);1

This dissimilarity score is not a true metric because it fails to
satisfy the conditions of symmetry and the identity of indiscernibles.
The asymmetry occurs because the denominator may be different for
each alignment. Note this asymmetry is also true for the similarly
deﬁned TC score. The overlap score (Lassmann and Sonnhammer,
2002), another related measure of alignment similarity, introduces
symmetry and is deﬁned as:

ZiZjIHssr(A)joHssr(B)jI
(El-Z,-IHssr<B>jI+IHssr<A>jI>/2

This formulation is also known as Dice’s Coefﬁcient and its
dissimilarity measure, deﬁned as 1—Qab, does not satisfy the
triangle inequality and so is not a valid metric (Leach and Gillet,
2003). Failure to satisfy the triangle inequality means that the
alignment distances A<—>B, A<—>C, and B<—>C cannot be projected
into Euclidean space. In other words, the path A—>B—>C may be
shorter than the direct path A—>C.

These theoretical failings expose a major limitation of existing
scores: although they can calculate a measure of similarity to
a reference alignment, they cannot be used for all—against—all
comparisons, with or without a reference. This limitation is
illustrated in Figure 3, where we show that existing metrics
prevent any meaningful comparison between a set of toy MSAs.
In Figure 3A, we align two short sequences using three alignment
programs. In Figure 3B, we calculate SP differences between
the three alignments, but because we need to normalize the
SP (and TC) score using one of the alignments as a reference

 

dSP(AaB)=1— (5)

 

Qab : (6)

All regions

46.4 39.7 39.2 34.1 35.2 39.7 38.7 41.1 BAliBASE
34.8 45.6 45.3 43.5 45.1 44.9 49.4 47.7 Prank
23.5 32.4 26.6 34.6 38.9 38.2 45.6 41.4 T—Coffee
23.9 32.1 13.1 33.8 38.6 38 45.4 40.9 ProbCons
25.2 30.9 20.7 20.1 33 31.3 41.5 38.5 MAFFT L—INS—i
27.2 33.1 23.5 23.8 21.4 36.2 39.6 41 Muscle
27.7 32.4 24.1 24 20.2 23.1 45 41.7 MAFFT FFT—NS—i
31.1 36.9 29.9 29.9 29.9 30.7 31.6 45.4 Clustal W

32.4 36.3 28.5 28.5 28.8 31.5 31.5 35 DIALIGN—TX

Homologous regions

BAliBASE

Prank

T—Coffee
ProbCons

MAFFT L—lNS—i
Muscle

MAFFT FFT—NS—i
Clustal W
DIALIGN—TX

Fig. 4. Distance matrix computed using devol. The upper part of the matrix
gives the (mean) distance between two alignments over all of BAliBASE
RV12, RV30 and RV50, scaled as percentages. The lower part gives the
same information but for the homologous regions only. Darker shades of
grey indicate increasing distance.

alignment, the distance (e.g.) A—>B is different to the distance
B—>A, demonstrating that the SP (and TC) violates the symmetry
requirement for a distance.

To demonstrate how the choice of reference alignment affects
these scores, Figure 3C demonstrates the different conclusions
drawn when each MSA is taken to be the reference. If we take
A to be the reference, we infer that B and C are equally similar
to A, perhaps concluding that B and C are equally good aligners.
However, if we take B to be the reference alignment, we ﬁnd A and
B produce the same alignment, whereas C is maximally different.
In this case, we would conclude B is an excellent method and C is
a poor method.

One may try to solve these problems by taking the mean of the
score A<—>B and B<—>A. This approach enforces symmetry, but the
resultant distances do not obey the triangle inequality. In Figure 3D,
we demonstrate that averaged distances result in a triangle between
A, B and C that cannot exist in Euclidean space.

These observations make evident the need for a true alignment
metric that allows accurate comparison between alignment methods.
We have implemented the metrics described in Section 2 in the
command—line program MetAl. Below, we demonstrate the utility of
these metrics by examining the performance of MSA methods using
real and simulated sequence data.

3.2 Comparing alignment methods using BAliBASE

Mean distances across the full BAliBASE alignments from RV12,
RV30 and RV50 are plotted for dew] as the upper part of Figure 4.
The trends for other metrics are similar and generally highly
correlated (devol and dseq is the least correlated pair, with r2 = 0.68).
The different subgroups tested (RV12, RV30 and RV50) are also
correlated, with r2 > 0.85 for devol. Our results show that all methods
produce alignments in which bases share the majority of their base—
base or base—gap pairings with the reference alignment (distance:

 

498

112 /§.IO'SIBUJHOIpJOJXO'SOIlBUIJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

Measuring the distance between MSAs

 

Balanced tree

14.7 28.9 27.1 20.3 26.3 20 48.9 28.4 True alignment
15.1 27.5 26 18.4 25 17.2 48.1 28.6 Prank
21.3 20.6 15 25.3 28.6 27.4 48.4 32.2 T—Coffee
20.2 19.7 11.7 24.2 27.9 26.7 48.2 30.9 ProbCons
17.4 16.4 18.3 17.6 20.5 15.1 46.6 26.9 MAFFT L-lNS-i
20.7 19.7 20.7 20.1 16.9 19.6 46.8 30.9 Muscle
16.2 15.2 19 18.2 12.5 14.6 47.1 28.3 MAFFT FFT—NS—i
36.2 35.8 34.9 35.2 35.1 34.6 34.7 49.2 Clustal W

24.2 24.2 24.7 23.7 23.5 24.9 23.7 36.6 DIALIGN-TX

Unbalanced tree

True alignment
Prank

T—Coffee
ProbCons

MAFFT L—INS—i
Muscle

MAFFT FFT—NS—i
Clustal W
DIALIGNeTX

Fig. 5. Distance matrix computed using devol, as Figure 4 but for synthetic
data on balanced (upper) and unbalanced (lower) trees. The tree length of
the trees used to simulate the data was 1.4.

34.1—46.4%). Each method also tends to produce alignments that
are substantially different from one another. Prank and ClustalW, for
example, show the greatest dissimilarity (49.4%), whereas T—Coffee
and ProbCons give the most similar alignments (26.6%). Prank
has a noticeable tendency to have high distances to other aligners
(43.5—49.4%).

These results suggest that although the different MSA methods
are producing alignments that are roughly of equal similarity to
the BAliBASE alignment, the way they achieve these alignments
can be quite different. BAliBASE also provides alignments where
only regions of identiﬁed homology are included. Results for these
datasets are plotted below the diagonal of Figure 4. Trends are
similar for both the full sequences and the homologous regions,
although absolute distances are larger for the full sequences.

3.3 Comparing alignment methods using data
simulated by INDELible

To investigate the performance of our metrics on alignments with
a known origin and history, we apply the metrics to data simulated
using INDELible on a balanced and an unbalanced tree, each with
tree length of 1.4. The mean values of dew] are plotted in a matrix
in Figure 5 across the balanced (upper matrix) and unbalanced
(lower matrix) datasets. These ﬁgures show that the differences
between methods are more pronounced in simulated data relative
to real data, with ClustalW performing noticeably worse than other
methods. In both examples, the phylogenetically aware aligner,
Prank, has the best performance, although MAFFT L—INS—i also
performs well. The performance of Prank may be expected because
its alignment model closely resembles that used by INDELible to
generate the data.

To explore the effect of increasing evolutionary distance on
accuracy, we examine the average distance from the true alignment
for a subset of methods for dseq and devol under a range
of evolutionary divergences on balanced trees. The trends for
unbalanced trees are similar. For dseq, we ﬁnd that as the

 

:9

Distance (dam) to true alignment Distance (dseq) 10 [rue alignment

    
   
 

 

Balanced. dsgq

 

 

5:1

 

 

Balanced. dew;
Clustal W
Muscle
'I'eCoffee
MAFFT L—INS—i
Frank

I I I I I I I I

0 l 2 3 4 5 6 7

Total Branch Length

 

 

 

1111+

 

0.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2 0.4 0.6 0.8 1.0

Fig. 6. Mean distances [(A) dseq and (B) devol] between inferred and true
alignments calculated for data simulated on increasing total tree length on
balanced trees.

evolutionary divergence increases, the distance between alignments
inferred by the MSA methods also begins to increase, but it reaches
a maximum distance when the tree length is ~4, and then plateaus
or declines (Fig. 6A). In contrast, for dew] the distance between
inferred MSAs and the true MSA steadily increases as evolutionary
divergence increases (Fig. 6B). Curves for dpos and dssp are
similar to devol, reaching 1.0 at or after a tree length of 7. The
differences between dseq and devol in Figure 6 are due to the way
they treat gaps in the divergent sequences. For dseq, the decrease
in alignment distance for divergent sequences occurs because the
majority of amino acids are aligning with gap characters, which
cannot be distinguished from one another. On the other hand,
dew] includes evolutionary and positional information about gaps,
which allows the metric to correctly identify falsely inferred indel
events.

Equation (4) makes it possible to calculate how differently a pair
of MSAs treat a single sequence, potentially highlighting sequences
that are aligned particularly inconsistently between two methods.
We investigate this approach by examining the performance of the
different MSA methods on simple balanced and unbalanced tree
topologies. We expect that each sequence on the balanced tree
will have a similar distance under the same method, but for the
unbalanced tree the most distantly related sequences will be harder
to align than the more closely related sequences. In Figure 7, we
use simulation to investigate the distance from the true alignment
of individual sequences for equal length balanced and unbalanced
trees using the devol metric. The results match our expectations.
For balanced trees, all leaf nodes are topologically identical, and
the observed distances between sequence are broadly similar. For
the unbalanced tree, we observe it is harder to align sequences
from long terminal branches than those from short terminal
branches.

3.4 Relationship between metrics

The structure of our metrics enforces the relationship dew] Z dpos Z
dseq, with the lack of gap information in dssp making it somewhat
different from the other three metrics. Our results demonstrate that
incorporating positional and evolutionary information can provide
useful information to a bioinformatician. BAliBASE, example
BB 12038, contains one sequence that is much longer than the others,

 

499

112 /§.IO'SIBUJHOIpJOJXO'SOIlBIIIJOJUIOIQ/ﬁdnq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

B.P.Blackburne and S. Whelan

 

13.4 25.8 24.5 18.5 23.8 17.3 45.5 26.3

_ 13.3 27.7 26.3 20.6 26.5 19.6 49.5 27.7

— 14.2 28.2 26.2 19.7 25.8 18.3 49.1 29.7

— 16.6 30.6 30 23.8 27.9 20.7 50.7 30.6

— 13.1 26.7 24.8 18 24 19.3 46.4 24.8

 

 

14.1 28.9 27 19.3 26.4 21.7 50.8 28.3
14.5 27.7 25.9 19.4 25.5 19.1 47 27.2
15.8 28.3 26.6 20.3 26 20 47.1 28.3
x 0 w 'T 2 'T X
8 e S a: a <0 i '7
i 63 8 Z =3 i '5 Z
I 9 _|| 2 I— 2 (2
'— n. |— & O :{I
h E a

< U.

E <

2

9.57 16.4 14.7 13 15.5 12.6 25.9 18

9.85 16.3 15.3 12.8 15.5 12.3 26.2 17.9

12.2 17.7 16.8 12.7 15.9 12.2 28.8 18.5

11.5 17.9 17 13.2 16.8 12.9 28.2 19.6

15.4 20.7 20.3 18.1 19.1 17.3 36.1 25.5

 

 

13.2 22.3 20.8 16 19.8 15.3 39.5 25.4

19.7 25.8 24.4 22.5 26.8 19.2 47.6 31.3
24.6 29.4 28.7 26.5 32.1 24.4 54.4 34.2
—‘< w w '— 2 '- ><
E :93 8 0'3 a 0') i r.
0— 8 33 Z 3 i 'e Z
| 9 _'r E I— 3. <2
'— 0. |— & O :{I

E E a
< U.
E <

2

Fig. 7. The effect of tree topology on sequence—wise distances from the true alignment. Sequence—wise distances (devol) are similar (within a margin of error)
on the balanced tree, but increase with terminal branch length for the unbalanced trees.

BB12020

22 20.2 18.1 23 21.4 22.4 20.9 23.1 BAliBASE

50.4 19.5 19.2 16.5 26.2 25 21.4 28.3 Prank
58 64.2 4.45 16.4 19.7 18.6 12.7 18.5 T—Coffee
57.4 62.1 51.4 17.1 19.5 19.6 13.3 17.9 ProbCons
29.8 56 56.3 55.9 20.5 17.4 17.5 24.4 MAFFT L~INS~i
15.1 49.7 58.2 57.7 28.4 9.16 22 23.8 Muscle
28 52.8 58 57.9 30.9 22.2 21.3 26.2 MAFFT FFT—NS—i

18.1 50.7 60.9 60.8 32 16.1 30.4 20 Clustal W

BB12038

N
(0
01
00
—L

58 57.2 30.7 27.5 27.2 29.6 DIALIGN—TX

BAliBASE

Prank

T—Coffee
ProbCons

MAFFT L—lNS—i
Muscle

MAFFT FFT—NS—i
Clustal W
DIALIGN—TX

Fig. 8. Distance matrix computed using devol, as Figure 4 but for BAliBASE
alignments BB12038 (lower) and BB12020 (upper).

with a length of 2314 aa relative to the next longest of 437 aa.
The extreme nature of this alignment makes it a useful case study.
Results comparing alignment methods on BB12038 are plotted in
Figure 8 below the diagonal. For comparison, scores for a more
typical alignment are plotted above the diagonal. By considering
each of the four metrics in turn, using the distance from the reference
sequence to ClustalW and Prank, we can evaluate the information
encoded by each metric. In the case of dssp, the distance between
ClustalW and the reference is 0.37, so of all the base—base pairs
across the two alignments, 63% of them are present in both. For
Prank, the distance is larger (0.44). Substantially lower distances

are seen under dseq (Prank = 0.19 and ClustalW = 0.14). The dssp
distance is not nested in the other distances, so care should be taken
when comparing the other distances with dssp. In this case, we
interpret the large decrease as evidence that the alignments are quite
gappy and those locations aligned to gaps in the reference alignment
also tend to be aligned with gaps by the MSA methods. Under dpos,
the distance increases only slightly for ClustalW (0.17) but Prank
increases to 0.47, indicating that many of the gap locations differ
between the Prank and reference alignments. A small further increase
under devol is observed (ClustalW = 0.18, Prank = 0.50). Prank
frequently aligns bases to gaps located differently from the reference
alignment, but only occasionally corresponding to different events
in time.

To explore further the similarities and differences between our
metrics, we investigate the distances they produce on BAliBASE
RV12. We plot the distances between all pairs of aligners across
all data from RV12 as scatterplots. Figure 9 shows comparisons
between dssp and our gap—aware metrics dseq (Fig. 9A) and
dpos (Fig. 9B). The inclusion of non—speciﬁc gap information in
dseq means that it tends to produce lower distances than dssp as
characters aligned with gaps in both alignments reduce the distance.
This observation reinforces the result presented in Figure 6A,
where dseq tends to decrease after a certain degree of divergence.
The comparison between dssp and dpOS shows no such clean
relationship, with dssp sometimes being greater than or less than
dpos. This variation is because for dpos the location of the gap is
important, so if two methods align gappy regions similarly dpOS
is lower than dssp, whereas for inconsistent gappy regions dpos is
greater than dssp.

The substantial differences between dpos and dseq are also
illustrated in Figure 9C. In common with the dssp and dseq
comparison, these differences arise due to the treatment of gaps. The
deﬁnitions enforce the relationship dpOS Z dseq, but sometimes dpOS
is substantially higher than dseq and we infer that such alignments are
gappy with much variation in the base—gap homology assignments.

 

500

112 /§.IO'SIBUJHOIpJOJXO'SOIlBIIIJOJUIOIQ/ﬁdnq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Measuring the distance between MSAs

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

A o B o
‘— r2=O.890 ‘— r2=O.749
CD
3 — 9° 0' — 63
(O (O
S d _ KS 0' — o  O
3'" 2t _ 0 "3“ at _ 6’
C) O
8”
N. _ 0! _ ° 0
o o o
O
O. _ o. _
O I I I I I I o I I I I I I
0.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2 0.4 0.6 0.8 1.0
dSSP dSSP
C O D O
‘— r2=O.561 ‘— 3:0.996
‘39 _ °Q _
C) O
(.D 8 (D
s d _ of E C5 _
73‘ q- E V
o‘ — O o' —
“I _ “I _
O O O
q _ O. _
O I I I I I I O I I I I I I
0.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2 0.4 0.6 0.8 1.0
dseq dpos

Fig. 9. Scatterplots of distances calculated according to different metrics
on the RV12 BAliBASE dataset. Each circle corresponds to a single
distance computed on one set of homologous sequences from RV12 between
alignments performed by two of: ClustalW, Muscle, ProbCons, T—Coffee,
Prank, MAFFT L—INS—i and MAFFT FFT—NS—i. A solid line is plotted to
indicate x = y.

Figure 9D shows that dpos N devol, which suggests that the different
placement of gaps by different aligners rarely alters the inferred
evolutionary history of indel events in the RV12 dataset.

4 DISCUSSION

In this study, we have deﬁned four metrics to compare MSAs. Our
metrics are superior to the most commonly used scores (i.e. the SP
and TC scores) in two ways. First, our scores are valid metrics,
whereas existing methods, such as the SP and TC scores are not.
Secondly, our methods can incorporate indel information, including
their location and when they occur during evolution. In contrast
to existing scores, our metrics also allow the simple comparison
of sets of sequence alignments, allowing us to investigate how
similar methods of sequence alignment are to one another rather
than how well individual alignments compare to a reference
alignment. This is an important difference; we ﬁnd that for real
data, different alignment methods tend to produce alignments with
similar magnitude in distance to the BAliB ASE reference alignment,
but that these inferred alignments are frequently at least as different
from one another as they are from the reference alignment.

A multitude of studies have examined the effect of sequence
misalignment on, for example, phylogenetic inference (Cantarel
et al., 2006; Hall, 2005; Morrison and Ellis, 1997; Ogden and
Rosenberg, 2006; Wang et al., 2011; Wong et al., 2008), detection
of positive selection (Fletcher and Yang, 2010; Markova—Raina
and Petrov, 2011; Schneider et al., 2009; Wong et al., 2008),
detection of co—varying sites in proteins (Dickson et al., 2010),
studies of non—coding DNA (Pollard et al., 2006) and protein
structure prediction (Miklos et al., 2008). The metrics introduced
here will permit several important analyses that may beneﬁt
such studies. First, our metrics allow the direct comparison of

alternative alignments and their outcomes, which may be especially
important as different algorithms may be subject to similar kinds of
bias (Golubchik et al., 2007). Second, comparing the differences
between our metrics allows one to examine how variation in
an alignment correlates with differences observed in downstream
analyses. Finally, comparing sets of optimal or near—optimal
alignments may allow one to discriminate between the effects
brought about by uncertainty in an alignment and bias introduced by
the alignment algorithms. By providing valid metrics for the direct
comparison of alignments, we hope future studies will be able to
more thoroughly understand the similarities and differences between
alignment methods, and make progress in the task of disentangling
alignment heuristics from their effect on downstream inference.

ACKNOWLEDGEMENTS

We thank two anonymous reviewers for comments that improved
the manuscript.

F anding: Biotechnology and Biological Sciences Research Council
(UK) (grant number BB/H000445/ 1).

Conﬂict of Interest: none declared.

REFERENCES

Arnold,K. et al. (2006) The SWISS-MODEL workspace: a web-based environment for
protein structure homology modelling. Bioinformatics, 22, 195—201.

Cantarel,B. et al. (2006) Exploring the relationship between sequence similarity and
accurate phylogenetic trees. Mol. Biol. Evol., 23, 2090—2100.

Deza,M.M. and Deza,E. (2009) Encyclopedia of Distances. Springer, Berlin,
Heidelberg.

Dickson,R.J.et al. (2010) Identifying and seeing beyond multiple sequence alignment
errors using intra—molecular protein covariation. PLoS One, 5, e11082.

D0,C.B. et al. (2005) ProbCons: probabilistic consistency-based multiple sequence
alignment. Genome Res., 15, 330—340.

Eddy,S.R. (2009) A new generation of homology search tools based on probabilistic
inference. Genome Inform, 23, 205—21 1.

Edgar,R.C. and Batzoglou,S. (2006) Multiple sequence alignment. Curr. Opin. Struct.
Biol, 16, 368—373.

Edgar,R.C. (2004) MUSCLE: a multiple sequence alignment method with reduced time
and space complexity. BMC Bioinformatics, 5, 113.

Eisen,J.A. (1998) Phylogenomics: improving functional predictions for uncharacterized
genes by evolutionary analysis. Genome Res., 8, 163—167.

Felsenstein,J. (2003) Inferring Phylogenies. Sinauer Associates Inc., Sunderland,
Massachusetts.

Fletcher,W. and Yang,Z. (2009) INDELible: a ﬂexible simulator of biological sequence
evolution. Mol. Biol. Evol., 26, 1879—1888.

Fletcher,W. and Yang,Z. (2010) The effect of insertions, deletions, and alignment errors
on the branch-site test of positive selection. Mol. Biol. Evol., 27, 2257—2267.

Golubchik,T. et al. (2007) Mind the gaps: evidence of bias in estimates of multiple
sequence alignments. Mol. Biol. Evol., 24, 2433—2442.

Hagopian,R. et al. (2010) SATCHMO—J S: a webserver for simultaneous protein multiple
sequence alignment and phylogenetic tree construction. Nucleic Acids Res., 38,
W29—W34.

Hall,B.G. (2005) Comparison of the accuracies of several phylogenetic methods using
protein and DNA sequences. Mol. Biol. Evol., 22, 792—802.

Huson,D.H. and Steel,M. (2004) Phylogenetic trees based on gene content.
Bioinformatics, 20, 2044—2049.

Katoh,K. and Toh,H. (2008) Recent developments in the MAFFT multiple sequence
alignment program. Brief. Bioinformatics, 9, 286—298.

Landan,G. and Graur,D. (2007) Heads or tails: a simple reliability check for multiple
sequence alignments. Mol. Biol. Evol., 24, 1380—1383.

Larkin,M.A. et al. (2007) Clustal W and Clustal X version 2.0. Bioinformatics, 23,
2947—2948.

 

501

112 /§.IO'SIBUJHOIpJOJXO'SOIlBUIJOJUIOIQ/ﬁdnq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

B.P.Blackburne and S. Whelan

 

Lassmann,T. and Sonnhammer,E.L.L. (2002) Quality assessment of multiple alignment
programs. FEBS Lett, 529, 126—130.

Leach,A.R. and Gillet,V.J. (2003) An Introduction to Chemoinformatics. Dordrecht
Kluwer Academic Publishers, Dordrecht, Netherlands.

Lipkus,A. (1999) A proof of the triangle inequality for the Tanimoto distance. J. Math.
Chem, 26, 263—265.

Liu,K. et al. (2009) Rapid and accurate large-scale coestimation of sequence alignments
and phylogenetic trees. Science, 324, 1561—1564.

L0ytynoja,A. and Goldman,N. (2008) Phylogeny-aware gap placement prevents
errors in sequence alignment and evolutionary analysis. Science, 320,
1632—1635.

Markova—Raina,P. and Petrov,D. (2011) High sensitivity to aligner and high rate of
false positives in the estimates of positive selection in the 12 drosophila genomes.
Genome Res., 21, 863—874.

Miklos,l. et al. (2008) How reliably can we predict the reliability of protein structure
predictions? BMC Bioinformatics, 9, 137.

Morrison,D.A. and Ellis,J.T. (1997) Effects of nucleotide sequence alignment on
phylogeny estimation: a case study of 18S rDNAs of apicomplexa. Mol. Biol. Evol.,
14, 428—441.

N otredame,C. (2000) T—Coffee: a novel method for fast and accurate multiple sequence
alignment. J. Mol. Biol., 302, 205—217.

Notredame,C. (2007) Recent evolutions of multiple sequence alignment algorithms.
PLoS Comput. Biol., 3, e123.

Ogden,T.H. and Rosenberg,M.S. (2006) Multiple sequence alignment accuracy and
phylogenetic inference. Syst. Biol., 55, 314—328.

Penn,O. et al. (2010) An alignment conﬁdence score capturing robustness to guide tree
uncertainty. Mol. Biol. Evol., 27, 1759—1767.

Pollard,D.A. et al. (2006) Detecting the limits of regulatory element conservation and
divergence estimation using pairwise and multiple alignments. BM C Bioinformatics,
7, 376.

Redelings,B.D. and Suchard,M.A. (2005) Joint Bayesian estimation of alignment and
phylogeny. Syst. Biol., 54, 401—418.

Schneider,A. et al. (2009) Estimates of positive darwinian selection are inﬂated by
errors in sequencing, annotation, and alignment. Genome Biol. Evol., 1, 114—118.

Simmons,M.P. and Ochoterena,H. (2000) Gaps as characters in sequence-based
phylogenetic analyses. Syst. Biol., 49, 369—381.

Stamatakis,A. (2006) RAxML-VI—HPC: maximum likelihood-based phylogenetic
analyses with thousands of taxa and mixed models. Bioinformatics, 22, 2688—2690.

Subramanian,A.R. et al. (2008) DIALIGN—TX: greedy and progressive approaches for
segment-based multiple sequence alignment. Algorithms Mol. Biol., 3, 6.

Thompson,J.D. et al. (2005) Balibase 3.0: latest developments of the multiple sequence
alignment benchmark. Proteins, 61, 127—136.

Wang,L.—S. et al. (2011) The impact of multiple protein sequence alignment
on phylogenetic estimation. IEEE/ACM Trans. Comput. Biol. Bioinform., 8,
1108—1 1 19.

Whelan,S. and Goldman,N. (2001) A general empirical model of protein evolution
derived from multiple protein families using a maximum-likelihood approach. Mol.
Biol. Evol., 18, 691—699.

Wise,M. (2010) No so hot - heads or tails is not able to reliably compare multiple
sequence alignments. Cladistics, 26, 4384143.

Wong,K.M. et al. (2008) Alignment uncertainty and genomic analysis. Science, 319,
473—476.

 

502

112 /B.IO'SIBUJHOIPJOJXO'SOIlBIHJOJUIOICI/ﬁ(11111 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

