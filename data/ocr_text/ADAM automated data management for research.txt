APPLICA TIONS NOTE 9353339Qiﬁifﬁi‘iiiﬁééﬁ

 

Databases and ontologies

Advance Access publication October 29, 2012

ADAM: automated data management for research datasets

Mark Woodbridge", Christopher D. Tomlinson and Sarah A. Butcher
Centre for Integrative Systems Biology and Bioinformatics, Imperial College London, London SW7 2AZ, UK

Associate Editor: Janet Kelso

 

ABSTRACT

Existing repositories for experimental datasets typically capture snap-
shots of data acquired using a single experimental technique and
often require manual population and continual curation. We present
a storage system for heterogeneous research data that performs dy-
namic automated indexing to provide powerful search, discovery and
collaboration features without the restrictions of a structured reposi-
tory. ADAM is able to index many commonly used file formats gener-
ated by laboratory assays and therefore offers specific advantages to
the experimental biology community. However, it is not domain spe-
cific and can promote sharing and re—use of working data across sci-
entific disciplines.

Availability and implementation: ADAM is implemented using Java
and supported on Linux. It is open source under the GNU General
Public License v3.0. Installation instructions, binary code, a demo
system and virtual machine image and are available at http://www.
imperial.ac.uk/bioinfsupport/resources/software/adam.

Contact: m.woodbridge@imperial.ac.uk

Received on April 2, 2012; revised on October 3, 2012; accepted on
October 24, 2012

1 INTRODUCTION

Research studies often require the collation of large quantities of
working data of varied types, typically stored in the ﬁle system of
a researcher’s computer. Use of such an unstructured repository
has advantages over specialized data silos or a generic document
management system in terms of familiarity, support for hetero-
geneous ﬁle types and ease of data modiﬁcation. Further beneﬁts
such as data security, scalability and remote access can be gained
by using a centrally managed networked ﬁle system.

However, as data volumes increase over the lifetime of a pro-
ject, it can be increasingly hard to track the origin, status and
location of datasets in such systems. The use of private reposi-
tories in collaborative projects does not encourage data sharing,
meaning that ﬁles are often unnecessarily duplicated. Standard
ﬁle systems also do not provide any intelligence to project co-
ordinators or infrastructure providers as to the nature of data
being acquired.

ADAM is a software tool designed to address these issues and
has been developed in consultation with researchers involved in
cross-discipline systems biology studies. It is designed to auto-
matically classify, annotate and index data ﬁles without disrupt-
ing a user’s typical workﬂow. The researcher can choose to
consult the additional metadata when necessary to retrieve or
share data items and can provide further annotation as desired.

 

*To whom correspondence should be addressed.

As a centralized system, it can enable data sharing, assist re-
searchers in ﬁnding potential collaborators and can provide
aggregated statistics indicating data type prevalence and instru-
ment usage amongst others.

2 USAGE

ADAM is a storage system that acts as a networked ﬁleserver,
accessible using the SMB protocol by any computer running a
recent version of Mac OS, Windows and Linux. Any data ﬁles
stored in the system are automatically inspected and indexed,
regardless of the ﬁle system directory structure. This is an ap-
proach shared with the ‘dropbox’ component of OMERO (Allan
at al., 2012) for image archival. Files of unrecognized type are
added to the index but are not associated with any additional
metadata until it is optionally provided by the user. Table 1 lists
the recognized ﬁle types and the typical metadata automatically
extracted for each type.

A web interface Viewable using any modern browser provides
access to data, metadata and tools for browsing, ﬁltering and
searching. Data can be ordered by upload or modiﬁcation date,
providing a chronological View of acquisition. Uploaded journal
articles are indexed automatically using heuristics to extract bio-
graphic information, and can be browsed using facets such as
author, publication date and Medical Subject Headings terms.
Filtering is possible based on ﬁle name, type, tag and date of
upload or modiﬁcation. Searching allows data to be identiﬁed
using these ﬁlter criteria in addition to an index of the text ex-
tracted from relevant ﬁle types. This enables queries such as
‘Find all Word and Excel documents that mention NFKBl’
and ‘Find mass spectrometry data from the Aspergillus project
that were generated last year’.

The web interface allows users to preview documents and
images, to tag data items with textual annotations or ontology
terms and to upload ﬁles when direct access to the ﬁleserver is
not possible. It also attempts to incorporate knowledge from
public sources where appropriate, for example, linking out to
related articles in PubMed or UniProt when a protein name is
recognized in an uploaded document. 2D barcodes are generated
for uploaded documents such as experimental protocols so that
their content can easily be transferred to mobile devices for con-
sultation in the laboratory.

Data can easily be shared with individual users or
administrator-deﬁned user groups, typically corresponding to
project membership. The recipients are notiﬁed in real time
over the web and can optionally be notiﬁed through email
when sharing is conﬁgured. If a folder is shared, then any ﬁles
subsequently added to that dataset will automatically be made
available to the recipients. Files or folders can also be published,

 

© The Author 2012. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0), which
permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 ﬂJO'SIBumo[pJOJXO'sot1BmJOJurotw/2d11q IIIOJJ pepsolumoq

910K ‘09 lsnﬁnV no :2

ADAM

 

Table 1. Supported ﬁle formats

 

Type Supported formats Example metadata

 

Publication Journal article PDF
Document Word, Excel, PowerPoint
Script Python, MATLAB, R
Image JPEG, GIF, Zeiss LSM,
Leica LIF, SimplePCI CXDa
Affymetrix CEL, Waters
MS, Bruker NMR

Author, journal, DOI, date
Word count, named entities
Language, line count
Image count, dimensions

Dataset Acquisition parameters

 

aFormats list additionally includes those accessible using the Bio-Formats library.

producing a URL that can be distributed to users without an
account on the system. This link can be revoked at any time, thus
enabling ad hoc data sharing with minimal effort.

Importantly, the use of the web interface is entirely optional
and no manual steps are required to import data into the ADAM
repository beyond copying ﬁles to the server. The interface can
be used whenever a user wishes to take advantage of the features
that the system provides over and above a traditional networked
drive.

In addition to the features designed for end users, there are
also clear beneﬁts to infrastructure providers in having access to
aggregated resource of data and the associated systematically
derived metadata. It enables, for example, the determination of
the most widely used ﬁle formats, and, by deduction, the kinds of
experimental techniques and high-throughput assays being per-
formed, and which instruments were used for acquisition. This
should enable better planning including targeted use of hardware
resources and development of analysis software to satisfy
demand. It would also allow, with user consent, for alerts to
be provided if researchers have uploaded ‘similar’ datasets or
articles as a means to initiate collaboration.

3 IMPLEMENTATION

ADAM consists of several loosely coupled components:

0 A network-accessible ﬁle system (SMB using Samba).

0 File system monitoring daemon written using Java/inotify.
o Metadata database stored in the MongoDB system.

c F ull-text index provided using the ElasticSearch library.

0 J SON HTTP API written using the J ava/Play Framework.
0 Web interface implemented with HTML/CSS/Javascript.

The principal components are the data store, which will typ-
ically be located on a disk array mounted on the ADAM server
and the metadata store, which is implemented using a
high-performance document-oriented database well suited to
ad hoc schema changes. All indexed ﬁles are assigned a globally
unique identiﬁer so that they can be unambiguously linked to
their metadata and referenced externally even if their location
changes.

Data type classiﬁcation, metadata extraction and format con-
version are performed using the Apache Tika, LOCI

Bio-Formats (Linkert et al., 2010) and Apache PDF Box
libraries. The system additionally attempts to perform
named-entity recognition using the Whatizit (http://www.ebi.ac.
uk/webservices/whatizit/) or Reﬂect (O’Donoghue et al., 2010)
web services and generates repository content statistics using
MongoDB MapReduce queries, which it makes Viewable on
the web to administrators.

The ADAM system architecture is modular by design, with a
decoupled user interface. The HTTP API provides access to all
search and retrieval functionality, meaning that custom inter-
faces can easily be developed to supplement the provided web
application. The ﬁle type detection module of the server consists
of pluggable components, making it straightforward for an
experienced developer to extend the system to support new
types. Simple HTML View templates allow the web interface to
be customized to display these types.

The simplest deployment strategy for ADAM involves instan-
tiating a provided VirtualBox machine image that bundles the
core components with a CentOS Linux installation and includes
scripts to start/stop the server and to add new users. The only
required post-installation step is to conﬁgure any user-facing
ﬁrewall and to mount a remote drive to act as the data store,
if required.

4 DISCUSSION

ADAM is designed to encourage the usage of centralized storage
in preference to potentially unreliable local facilities. It achieves
this by providing access to valuable additional features without
restricting researchers in how they organize their working data. It
is not an alternative to established public repositories for pub-
lishing data associated with peer-reviewed research, nor does it
eliminate the need for the types of manual annotation that fa-
cilitate data integration. It does, however, assist researchers in
dealing with increasingly overwhelming digital data volumes by
providing a powerful search interface and promotes data re-use
by making it easy to share datasets with collaborators long
before publication. It can additionally provide administrators
with a means to analyse the nature and quantity of data being
generated by users of the system and so ultimately beneﬁt
researchers and their supervisors too.

ACKNOWLEDGEMENTS

Funding: This work was funded by the Biotechnology and
Biological Sciences Research Council grant [BB/C5 19670/1]:
a Centre for Integrative Systems Biology at Imperial College
(CISBIC).

Conﬂicts of Interest: none declared.

REFERENCES

Allan,C. et a]. (2012) OMERO: ﬂexible, model-driven data management for experi-
mental biology. Nat. Methods, 9, 245—253.

Linkert,M. et a]. (2010) Metadata matters: access to image data in the real world.
J. Cell. Biol., 189, 777—782.

O’Donoghue,S.I. et a]. (2010) Reﬂect: a practical approach to web semantics. Web
Semant, 8, 182—189.

 

147

112 /810's112umo[pJOJXO'sot1emJOJutotw/2d11q IIIOJJ pepsolumoq

910K ‘09 lsnﬁnV no :2

