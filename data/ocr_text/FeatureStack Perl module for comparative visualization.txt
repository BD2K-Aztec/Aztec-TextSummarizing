APPLICATIONS NOTE V°" 250,-?$5.33é‘iéiaiﬁgiifailE/Ziéii

 

Genome analysis

Advance Access publication September 27, 2012

FeatureStack: Perl module for comparative visualization of

gene features

Christian Frech, Caleb Choo and Nansheng Chen*

Department of Molecular Biology and Biochemistry, Simon Fraser University, Burnaby, British Columbia,

Canada V5A 186

Associate Editor: Alex Bateman

 

ABSTRACT

Summary: FeatureStack is a Perl module for the automatic generation
of multi-gene images. FeatureStack takes BioPerl-compliant gene or
transcript features as input and renders them side by side using a
user-defined BioPerl glyph. Output images can be generated in SVG
or PNG format. FeatureStack comes with a new BioPerl glyph, dec-
orated_gene, which can highlight protein features on top of gene
models. Used in combination, FeatureStack and decorated_gene
enable rapid and automated generation of annotation-rich images of
stacked gene models that greatly facilitate evolutionary studies of
related gene structures and gene families.

Availability and implementation: Bio-Draw—FeatureStack and
Bio-Graphics-glyph-decoratedgene are freely available at the
Comprehensive Perl Archive Network (CPAN) and GitHub.

Contact: chenn@sfu.ca

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on June 28, 2012; revised on August 29, 2012; accepted on
September 17, 2012

1 INTRODUCTION

Comparative analysis of gene structures is important for under-
standing gene function and evolution. To facilitate gene structure
comparison, multiple related gene models need to be shown side
by side in a single compact image. In addition, sequence features
such as protein domains should be highlighted for functional
annotation and to provide reference points for comparison
(Pain et al., 2008).

Few specialized tools have been developed for the comparative
Visualization of gene structures, including F ancyGene (Rambaldi
and Ciccarelli, 2009), GECA (Fawal et al., 2012) and GSDS
(Guo et al., 2007). F ancyGene provides rich annotation options
but is limited to the display of a single genomic locus and image
generation cannot be automated. Conversely, GECA and GSDS
allow rapid image generation for many genes, but options to
highlight sequence features on top of gene models are limited.

Here, we present two Perl modules, Bio::Draw::FeatureStack
and Bio:sGraphicsssglyph:.'decorated_gene, which build upon
existing BioPerl (Stajich et al., 2002) and BioGraphics
(Stein et al., 2002) functionality for the highly generic and ver-
satile Visualization of multiple gene structures. When used in
combination, these two modules allow for fully automated and

 

*To whom correspondence should be addressed.

yet highly conﬁgurable image generation, which greatly facili-
tates comparisons of many gene structures.

2 METHODOLOGY

FeatureStack takes an array of BioPerl feature objects as input;
projects them onto a common coordinate space; ﬂips features
on the negative strand (option—flip_minus), removes untrans-
lated regions (option—ignore_utr); left-aligns them by start
codon, protein domain or a user-deﬁned offset (option—
feature_oﬂ9ets); sets a ﬁxed intron size (option—intr0n_size);
removes unwanted transcripts (option—transcrzpts_to_skzp) and
then draws a SVG or PNG image of the so transformed features
using a user-speciﬁed glyph (option—glyph). Below is a brief
synopsis for the use of F eatureStack:

$feature_stack = new Bio: :Draw: :FeatureStack
(

—features => \@features

—glyph => ’ gene’ ,

—flip_minus => 1 ,

—ignore_utr => 1 ,

—panel_params => {

—width => 1024,
—pad_left => 80,
—pad_right => 20,
—grid => 1

} ,

—glyph_params => {
—utr_color => ’white’ ,
—label_transcripts => 1,
—description => 1

}

# feature array— ref

# passed on to panel

# passed on to glyph

) ;
$png= $feature_stack—>png; # or —>svg

Input features can represent BioPerl genes or transcripts
with a three-tier (gene—>mRNA—>CDS/UTR) or two-tier
(mRNA—> CDS/UTR) level structure, respectively. The way
features are retrieved is F eatureStack—independent and can, for
example, be achieved using Bio::DB::Sequature::Store or
Bio::DB::GenBank, both BioPerl modules.

FeatureStack was designed with the goal of providing
maximum ﬂexibility in image generation. As such, the user can
control the output both Via F eatureStack’s own options and by
providing panel— and glyph-speciﬁc parameters to ﬁne-control all
aspects of the rendering process. F eatureStack can be used with

 

© The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 3137

112 /810's112umo[pJOJXO'sopnmJogutoiq/ﬁd11q IIIOJJ papnolumoq

910K ‘09 lsnﬁnV no :2

C.Frech et al.

 

 

 

 

 

 

I
I
4k

 

 

 

 

 

 

amAMAG_1:I.60:I. - - - —

B C

Fig. 1. FeatureStack example output showing RFX gene family members over a diverse set of species, including human (hs), ﬂy (dm), Caenorhabditis
elegans (06, four isoforms), C. briggsae (Cb), Monosiga brevicollis (mb), Acanthamoeba castellanii (ac), Saccharomyces cerevisiae (sc) and Allomyces
macrogynus (am). Only exons drawn to scale. Colours: DNA-binding domain (black); N-terminal activation domain (dark slate blue); A, B, C and D
domains (red, yellow, blue and green, respectively); combined BCD domain (dark gray); low complexity regions (LCRs) in white; dark green bars below

DBD indicate regions of similarity with viral Pox_D5 domain

any BioPerl glyph that is compatible with the input features’
structure and is particularly powerful when used in combination
with our newly implemented decorated_gene glyph, which in-
stalls together with F eatureStack as Comprehensive Perl
Archive Network (CPAN) dependency. decorated _gene allows
the highlighting and labeling of protein motifs such as signal
peptides, transmembrane domains or protein domains on top
of gene models, which greatly facilitates the comparison of
gene structures. Protein features can be speciﬁed in amino acid
coordinates and will be automatically mapped to nucleotide
coordinates. Please refer to the CPAN module description of
decorated_gene for a detailed documentation of glyph options.

Figure l showcases the functionality of F eatureStack and dec-
orated_gene on the example of the regulatory factor X (RFX)
transcription factor gene family (Chu et al., 2010). Genes were
ordered by their phylogenetic distance and automatically aligned
horizontally by the start of the DNA-binding domain (shown in
black), which represents their most conserved feature. Note that
exons were drawn to scale, whereas introns were displayed with a
ﬁxed size of 50 bp to accommodate for the large intron size dif-
ferences between species. By default, F eatureStack draws both
exons and introns to scale. Differences in gene structure and fea-
tures become evident once gene models are displayed with
FeatureStack as shown in Figure 1. For example, the DNA-
binding domain can be encoded by one to three exons, and the
transcription activation domain is only conserved in some human
and ﬂy genes.

F eatureStack can also be used (option—altfeature_type) to dis-
play various types of features associated with gene models, such as
cis—regulatory elements or genomic variations. Supplementary
Figure S1 shows RFX target genes in Caenorhabditis elegans
next to their associated X-box motifs. X-box motifs are cis—regu—
latory elements bound by RFX and are found in the promoters of
almost all C.elegans ciliary genes. Typically, X-boxes locate ~50—
200 bp upstream of translation start sites. Outliers like nud—I and
dyf-5 that have their X-box motif farther upstream are easily
identiﬁed from the image.

Finally, we want to emphasize FeatureStack’s usefulness in
identifying atypical members of a gene family, pointing towards
biologically interesting family members or gene prediction errors
(Supplementary Fig. S2).

Additional documentation as well as source code and data ﬁles
used to produce the three ﬁgures in this article are available
online at CPAN.

ACKNOWLEDGEMENTS

We thank Western Canada Research Grid and Ata Roudgar for
providing computational infrastructure and support. NC. is a
Michael Smith Foundation for Health Research (MSFHR)
Scholar and a Canadian Institutes of Health Research (CIHR)
New Investigator.

Funding: NSERC of Canada (to NC.) and the Simon Fraser
University Community Trust Endowment Fund through the
BCID Project. C.F. was supported by Weyerhaeuser and
Simon Fraser University graduate scholarships.

Conﬂict of Interest: none declared.

REFERENCES

Chu,J.S.C. et al. (2010) Convergent evolution of RFX transcription factors and
ciliary genes predated the origin of metazoans. BMC Evol. Biol., 10, 130.

Fawal,N. et al. (2012) GECA: a fast tool for Gene Evolution and Conservation
Analysis in eukaryotic protein families. Bioinformatics, 28, 1398—1399.

Guo,A.Y. et al. (2007) GSDS: a Gene Structure Display Server. Yi Chuan, 29,
1023—1026.

Pain,A. et al. (2008) The genome of the simian and human malaria parasite
Plasmodium knowlesi. Nature, 455, 799—803.

Rambaldi,D. and Ciccarelli,F. (2009) FancyGene: dynamic visualization of gene
structures and protein domain architectures on genomic loci. Bioinformatics,
25, 2281—2282.

Stajich,J.E. et al. (2002) The Bioperl toolkit: Perl modules for the life sciences.
Genome Res., 12, 1611—1618.

Stein,L.D. et al. (2002) The generic genome browser: a building block for a model
organism system database. Genome Res., 12, 1599—1610.

 

3138

112 /810's112umo[pJOJXO'sot1nmJOJutotw/2d11q IIIOJJ papnolumoq

910K ‘09 lsnﬁnV no :2

