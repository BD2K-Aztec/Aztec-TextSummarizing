APPLICATIONS NOTE

Vol. 31 no. 4 2015, pages 587—589
doi: 10. 1 093/bioinformatics/btu661

 

Genome analysis

Advance Access publication October 22, 2014

A5-miseq: an updated pipeline to assemble microbial genomes

from Illumina MiSeq data

David Coill, Guillaume Jospin2 and Aaron E. Darling2’*
1Genome Center, University of California Davis, Davis, CA 95616, USA and 2ithree institute, University of Technology

Sydney, New South Wales, Australia

Associate Editor: lnanc Birol

 

ABSTRACT

Motivation: Open-source bacterial genome assembly remains in-
accessible to many biologists because of its complexity. Few software
solutions exist that are capable of automating all steps in the process
of de novo genome assembly from Illumina data.

Results: A5-miseq can produce high-quality microbial genome
assemblies on a laptop computer without any parameter tuning. A5-
miseq does this by automating the process of adapter trimming, qual-
ity filtering, error correction, contig and scaffold generation and detec-
tion of misassemblies. Unlike the original A5 pipeline, A5-miseq can
use long reads from the Illumina MiSeq, use read pairing information
during contig generation and includes several improvements to read
trimming. Together, these changes result in substantially improved
assemblies that recover a more complete set of reference genes
than previous methods.

Availability: A5-miseq is licensed under the GPL open-source license.
Source code and precompiled binaries for Mac OS X 10.6 + and Linux
2.6.15+ are available from http://sourceforge.net/projects/ngopt
Contact: aaron.darling@uts.edu.au

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on January 5, 2014; revised on June 4, 2014; accepted on
October 2, 2014

1 INTRODUCTION

Genome assembly involves an entire data processing workﬂow
starting with raw sequence data and ending with scaffolded con-
tigs. The steps often consist of adapter trimming, quality ﬁlter-
ing, error correction, creation of contigs, veriﬁcation of contigs
by mapping reads to the assembly and the creation/veriﬁcation
of scaffolds.

We previously published A5, a pipeline that automated all the
steps to generate bacterial genome assemblies from raw Illumina
data (Tritt et al., 2012). The workﬂow included ﬁve steps, and
the parameters for each step were optimized on assemblies of
Halophilic archaea and tested on Escherichia coli.

Since the publication of A5, Illumina’s chemistry has advanced
signiﬁcantly and the MiSeq instruments are now capable of pro-
ducing reads in excess of 400 nt long, which is 4-fold longer than
what was previously possible on a HiSeq 2000. The original A5
could not process reads longer than 150 nt. The longer reads
make it possible to assemble genomes from less data overall,

 

*To whom correspondence should be addressed.

but doing so required major revisions to the data processing
algorithms in A5.

We introduce a revised pipeline called A5—miseq, which re-
places several components of the original A5 pipeline with new
software modules and produces substantially improved
assemblies.

2 METHODS

The A5-miseq pipeline consists of ﬁve steps: (i) Read cleaning—sequence
adapters and low-quality regions are removed by Trimmomatic (Lohse
et al., 2012). Errors in the reads are then corrected using SGA’s k—mer-
based error correction algorithm (Simpson and Durbin, 2012). (ii) Contig
assembly—paired and unpaired reads are used for assembly with the
IDBA-UD algorithm (Peng et al., 2013). (iii) Crude scaffolding—contigs
are scaffolded with any available large insert libraries using permissive
parameters. (iv) Misassembly correction—misassemblies are detected on
the basis of read pairs that do not map within the expected distance.
Contigs and scaffolds found to contain misassemblies are broken. (v)
Final scaffolding—a ﬁnal round of scaffolding with stringent parameters
repairs any previously broken contigs. Assembly summary statistics and
base-call quality estimates are also produced in stage 5.

A5-miseq substantially revises steps (i) and (ii) relative to A5. In step
(i), A5 would discard entire reads found to contain any amount of adap-
ter readthrough. The standard Nextera XT protocol results in libraries
where a large fraction of the reads (>50% in extreme cases) contain
adapter readthrough when sequenced with the currently standard
paired-end 300 nt read chemistry. Instead of discarding such reads, only
the contaminated portion of the read gets trimmed.

In step (ii), AS-miseq uses a contig assembly algorithm (implemented
in the IDBA-UD software) that exploits read pairing information during
contig generation. This improvement reduces the frequency with which
misassembled contigs are formed during the contig generation step. Thus,
fewer misassemblies must be detected and corrected in step (iv) of the
pipeline. IDBA-UD required extensive source code revision to operate on
Mac OS X and reduce its memory usage for laptop hardware. These
changes are available in the A5-miseq source code repository.

We benchmarked AS-miseq 20140521 and A5 on the raw GAGE-B
MiSeq datasets. GAGE-B includes paired-end 250 nt MiSeq reads at
100x coverage for four organisms. We ran A5-miseq and A5 assemblies
and obtained results for other assemblers from the GAGE-B publication
(Magoo et al., 2013). The original A5 cannot assemble 250 nt reads, so
we used Trimmomatic to cut the reads down to 150 nt (discarding
100 nt) before assembly. Running time and peak memory were measured
with/usr/bin/ time —v on a 2012 MacBook Air running Ubuntu
13.10.

To evaluate assembly accuracy, we ran QUAST v2.2 (Gurevich et al.,
2013) with the following parameters: quast .py ——gage —u —G
ref . gff —R ref . fa ass . fa, where ref . fa is the reference assembly

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 587

112 [glO'SIBILInO[plOJXO'SODBIILIOJIITOIQ/[i(11111 IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

D. Coil et al.

 

Table 1. Comparison of assembly accuracy between A5-miseq and other assemblers

 

 

 

Organism Size A5-miseq A5 GAGE-B
Frac NGA50 MA MM Genes Frac NGA50 MA MM Genes Frac NGA50 MA Genes
Bacillus cereus 5.43 99.9 486.8 7 1.4 5734 99.8 488.3 12 14.3 5669 99.9 (S) 456 (sdn) 1 (sdn) 5439 (M)

Rhodobacter Sphaeroides 4.60 99.9 130.5 6 2.5 4426 99.6
M ycobacterium abscessus 5.09 99.4 232.5 12 3.1 4922 99.3
Vibrio cholerae 4.03 99.6 196.7 15 5.1 3645 98.9

146.9 19 10.3 4325 99.9 (S) 151.8 (S) 0(sga) 3562 (S)
109.7 9 1.8 4873 99.4 (S) 215.4 (S) 3(A) 4361 (S)
67.8 22 4.4 3510 99.6 (S) 246.6 (S) 3(A) 3564 (S)

 

Assembly accuracy for the A5-miseq and A5 pipelines measured on raw 100x coverage MiSeq PE250 GAGE-B data. Accuracy was measured by QUAST. Frac is the fraction
of the reference genome represented in assembly scaffolds. NGA50: the N50 after breaking contigs at misassemblies. MA: number of misassemblies, MM: number of
nucleotide mismatches per 100 kbp, Genes: number of intact full-length genes recovered. For GAGE-B results, the single best assembly result for each metric and genome
reported in Magoo et al. (2013) is shown, with the assembler producing the best result indicated as follows: S = SPAdes 2.3, sdn = SOAPdenovo, M = MaSuRCA,

A = ABySS, sga = SGA.

from NCBI, ref . gf f is the reference’s annotated genes from NCBI and
ass . fa is the assembly. The —u option causes the genome fraction to be
calculated in the manner used by QUAST v1.3. This yields results that are
comparable with those in the GAGE-B paper.

In a separate experiment, we evaluated how the completeness of assem-
blies produced by A5 and A5-miseq changes in response to decreasing
amounts of sequence data. To do so, we took the 100x coverage GAGE-
B datasets and randomly downsampled them to 50x , 40x , 30x , 20x ,
10x and 5x coverage, assembled them and measured assembly accuracy
with QUAST.

3 DISCUSSION

The benchmarking results for A5-miseq on the GAGE-B data
(shown in Table 1) indicate that it offers substantial improve-
ments over the original A5 pipeline. A5—miseq assemblies contain
more full-length reference genes than A5 or any of the GAGE-B
assemblers. Relative to the original A5, the number of genes
missing from A5-miseq assemblies is reduced by 1.6—3.8-fold
on the GAGE-B datasets. In most cases, A5—miseq assemblies
have higher NGA50 values, fewer misassemblies and fewer base-
calling errors than the original A5 pipeline. A5-miseq produces
results that are competitive with the best achieved by other
assemblers on the GAGE-B data, but requires only minimal
user-effort.

A5-miseq can recover nearly complete genome assemblies with
much less sequence data than its predecessor. Figure 1 shows
that to recover a ﬁxed fraction of the genome, e.g. 95%,
A5-miseq requires about half as much sequence data. Relative
to A5, A5-miseq achieves higher degrees of contiguity with less
data. This permits deeper multiplexing of sequencing
experiments.

A5-miseq is computationally efﬁcient. Assembly of the
B.cereus GAGE-B data completed in 2.2h with a peak
memory usage of 4GB and 5.7 GB disk usage on a laptop.
Computational requirements for other bacterial genomes are
similar.

One limitation of the GAGE-B data is that following its pub-
lication, assembly pipelines might be inadvertently tuned to pro-
duce high scores speciﬁcally on that dataset. This could result in
artiﬁcially high scores that do not accurately reﬂect the expected

Assembly contiguity by depth of coverage

 

— A5—miseq,250PE 40x 30x ,-
— A5—miseq,150PE - ‘ r" - '
— — A5,15OPE

   

 

 

 

Total nucleotides included

 

 

 

 

0e+00 1e+06 26+06 3e+06 4e+06 5e+06

log total scaffolds included

Fig. 1. Contiguity of assemblies of the B.cereus data from GAGE-B with
increasing depths of coverage. A5 was run on reads cut down from 250nt
to 150nt. A5-miseq was run on both the cut down reads (red) and the full-
length 250nt reads (black). A5-miseq assemblies become highly contigu-
ous with 20x coverage, whereas A5 (blue) requires 50x coverage to
achieve comparable contiguity

performance on other datasets. We assert that we have not tuned
A5—miseq in any way to improve scores on the GAGE-B dataset,
and to our knowledge, none of the component programs used by
A5—miseq has been optimized for GAGE-B.

4 CONCLUSION

Genome assembly is a fast evolving ﬁeld, and software has been
advancing rapidly. Although A5—miseq produces assemblies that
are competitive with results in a recently published assembler
evaluation (Magoc et al., 2013), it is likely that versions of
other software that are currently under peer review (e. g.
SPAdes 3.0) might produce even better results. SPAdes 2.3 auto-
mates many of the same steps that A5-miseq automates
(Bankevich et al., 2012), and in general, produces excellent

 

588

112 ﬁle'slcumo[pJOJXO'sopchoguroiq/ﬁd11q 11101; pepcolumoq

910K ‘09 lsnﬁnV uo ::

A5-miseq

 

assemblies (Table 1), with A5—miseq’s main advantages being
automated adapter trimming, more full-length genes assembled,
NCBI-ready outputs and production of base-call quality scores.
If possible, researchers interested in genome assembly should
become acquainted with the various algorithms available
before selecting a particular approach. A5—miseq should be par-
ticurlarly useful for researchers with limited bioinformatics ex-
perience or computing resources.

ACKNOWLEDGEMENTS

The authors would like to thank users of the A5 pipeline for
reporting bugs and usability problems with the software, in par-
ticular Piklu Roy Chowdhury and the manuscript peer reviewers.

Funding: This work was supported in part by a collaborative
agreement with the NSW Department of Primary Industries.

Conflict of interest: none declared.

REFERENCES

Bankevich,A. et al. (2012) SPAdes: a new genome assembly algorithm and its ap-
plications to single-cell sequencing. J. Comput. Biol., 19, 455—477.

Gurevich,A. et al. (2013) QUAST: quality assessment tool for genome assemblies.
Bioinformatics, 29, 1072—1075.

Lohse,M. et al. (2012) RobiNA: a user-friendly, integrated software solution for
RNA-Seq-based transcriptomics. Nucleic Acids Res, 40, W622—W627.

Magoc,T. et al. (2013) GAGE-B: an evaluation of genome assemblers for bacterial
organisms. Bioinformatics, 29, 1718—1725.

Peng,Y. et al. (2013) IDBA-UD: a de novo assembler for single-cell and metage-
nomic sequencing data with highly uneven depth. Bioinformatics, 28, 1420—1428.

Simpson,J.T. and Durbin,R. (2012) Efﬁcient de novo assembly of large genomes
using compressed data structures. Genome Res., 22, 549—556.

Tritt,A. et al. (2012) An integrated pipeline for de novo assembly of microbial
genomes. PLoS One, 7, e42304.

 

589

112 ﬁlm'sleumo[pJOJXO'sopemJogurorq/ﬁd11q 11101; pepeolumoq

910K ‘09 lsnﬁnV no 22

