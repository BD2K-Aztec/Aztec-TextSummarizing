APPLICATIONS NOTE W213.- i85139232155233512.5321?

 

Genome analysis

Advance Access publication January 13, 2014

PanGP: A tool for quickly analyzing bacterial pan-genome profile
Yongbing Zhao1 ’2, Xinmiao Jia1’2, Junhui Yang1 ’2, Yunchao Ling1 ’2, Zhang Zhangl, Jun Yul,

Jiayan Wu” and Jingfa Xiao”

1CAS Key Laboratory of Genome Sciences and Information, Beijing Institute of Genomics, Chinese Academy of
Sciences, Beijing 100101, People’s Republic of China and 2University of Chinese Academy of Sciences, Beijing 100049,

People’s Republic of China

Associate Editor: John Hancock

 

ABSTRACT

Summary: Pan-genome analyses have shed light on the dynamics
and evolution of bacterial genome from the point of population. The
explosive growth of bacterial genome sequence also brought an ex-
tremely big challenge to pan-genome profile analysis. We developed a
tool, named PanGP, to complete pan-genome profile analysis for
large-scale strains efficiently. PanGP has integrated two sampling
algorithms, totally random (l' R) and distance guide (DG). The DG
algorithm drew sample strain combinations on the basis of genome
diversity of bacterial population. The performance of these two algo-
rithms have been evaluated on four bacteria populations with strain
numbers varying from 30 to 200, and the DG algorithm exhibited over-
whelming advantage on accuracy and stability than the TR algorithm.
Availability: PanGP was developed with a user-friendly graphic inter-
face and it was available at http://PanGP.big.ac.cn.

Contact: xiaojingfa@big.ac.cn or wujy@big.ac.cn

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on November 27, 2013; revised on December 30, 2013;
accepted on January 6, 2014

1 INTRODUCTION

Since the conception ‘pan—genome’ was introduced in 2005
(Medini et al., 2005), pan-genome had shed light on the genomic
diversity and evolution of bacterial genome. To make pan-
genome analyses more expediently, several software tools were
designed. Panseq could identify single nucleotide polymorphism
on core genome and strain’s speciﬁc region (Laing et al., 2010),
and PGAP was designed to perform ﬁve analytic functions with
only one command (Zhao et al., 2012). At the same time, a series
of mathematic models had been proposed to characterize pan-
genome proﬁle of bacteria, such as the Streptococcus agalactiae
pan-genome model (Tettelin et al., 2005), the Haemophilus inﬂu-
enzae pan-genome model (Hogg et al., 2007), heaps law model
(Tettelin et al., 2008) and inﬁnitely many genes model
(Baumdicker et al., 2010). All current models could well depict
the pan-genome proﬁle of a launch of bacteria with their
time complexity O(n2”), where n is the strain number. In this
article, we developed two sampling algorithms to efﬁciently

 

*To whom correspondence should be addressed.

perform pan-genome proﬁle analysis for larger scale genomes.
These two algorithms were integrated in the software with a
graphic interface, PanGP.

2 METHODS
2.1 Test dataset

Gene clusters from seven bacterial populations were used to test the
performance of sampling algorithms; the detailed strain list and gene
clustering method were introduced in Supplementary Material.

2.2 Sampling algorithm

To analyse the pan-genome proﬁle of N strains, the pan-genome size and
core genome size of n strains (1 5 n 5 N) would be calculated. If a popu-
lation has N strains, there are C’]V combinations. When C’]V grows
to a large number, two sampling algorithms, totally random (TR) and
distance guide (DG), would be available to sample s (s: sample size)
combinations consisted of n strains.

For the TR algorithm: when C7V>s x r (r: sample repeat times), ran-
domly sample .9 non-redundant combinations from the total C}, combin-
ations. The average pan-genome size and core genome size of these .9
non-redundant combinations were record as Epanm) and 560,901).

For the DG algorithm: when C}, > s x r, sample .9 x k (k: ampliﬁcation
coefﬁcient, which could be modiﬁed to control sample size for evaluating
the genome diversity of the total combinations) non-redundant combin-
ations from the total C}, combinations. Calculate the Dev _geneCluster
value of these s x k combinations, sort all the s x k combinations by their
Dev _geneCluster value and sample .9 combinations from end to end with
the same interval. The average pan-genome size and core genome size of
these s combinations were record as 5pm, (n) and 560,901).

The above sample process would repe_at r times Er both TR and
DG algorithms, and their average value (Emma) and 560,900) would be
taken as the pan-genome size and core genome size of n strains,
respectively.

2.3 Genome diversity characterizing models in the
DG algorithm

In the DG algorithm, genome diversity was taken as a criterion to sample
a certain number of strain combinations. To ﬁgure out a suitable model
to characterize genome diversity, three models were proposed. In the
following models, G(n) represents a combination consisted of n strains.
i and j represent the ith and jth strain in G(n). In the population with N
strains, there are C}, G(n) combinations.

Model A: Genome diversity was characterized by the discrepancy of
evolutionary distance on phylogenetic tree. Branch length (Bij) and node
depth (Dij) between the ith and jth strain on phylogenetic tree were
calculated respectively (Calculating method for Bi]- and Di]- were

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/
by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial
re-use, please contact journals.permissions@oup.com

112 [glO'SIBILInO[plOJXO'SODBIILIOJHIOIQ/[ldnq IIIOJJ p9p1201umoq

910K ‘09 lsnﬁnV no :2

Y.Zhao et al.

 

introduced in Supplementary Fig. S1 in Supplementary Material). The
average branch length (Bavg(n)) or node depth (Davg(n)) of every strain
pair in a given combination G(n) represented genome diversity of the
combination G(n) and were calculated using the following formulas,
respectively.

1
Bavg(n) : a Z 

n 15i<j5n

1
Davg(n) : a Z 

n15i<j5n

In model A, six methods were provided, which were introduced in
Supplementary Material.

Model B: Genome diversity was characterized by the difference of each
strain’s gene number. For each combination G(n), the total gene number
of all strains (marked as Sum _geneNum) and the variance of gene num-
bers among those strains (marked as Dev _geneNum) were calculated by
two different formulas, shown as follows.

VSum_geneNum(n) = Z gi

15i5n

1/2
VDev_geneNum(n) = < Z (gi _ VSW—gmern(n)/n)2)

15i5n

Note: VSum_geneNum(n) means the Sum_geneNum value; VDev_geneNum(n)
means the Dev _geneNum value; g,- is the gene number of the ith strain.
Model C: Genome diversity was characterized by the discrepancy
among gene clusters. For each combination G(n), the average number
of the different gene clusters between two strains (marked as
Dev _geneCluster) was calculated to represent genome diversity in
a given combination G(n). The value of Dev _geneCluster
(VDev_geneC[uster(n)) is calculated by the following formula.

1
VDev_geneCluster(n) = a Z 

n15i<j5n

Note: Ci]- is the number of different gene clusters between the ith and jth
strains.

2.4 Evaluate the performance of sampling algorithm

To evaluate the accuracy of sampling algorithm, the pan-genome size and
core genome size of n (1 5 n 5 N) strains were calculated by TR and DG
algorithms. Real data were calculated without sampling; ampliﬁcation
coefﬁcient k was set to 4; and the simulation were carried out with the
sample size set to 300, 500, 800, 1000, 2000, 3000, 5000, 8000 and 10000.
For each population, the simulation for two sampling algorithms was
repeated 100 times respectively. The accuracy for every simulation
result was measured by root mean square (RMS) value, which calculated

the deviation between sample result (Gg’zzulationm) and Gigglatiown» and
real data (G’e“’(n) and Greg] (n)) at each point.

pan core

2
1 N = . . r
RM Saccuracy =   (Gigglanon(n) — Gciié(n))
n=1

N _ 2 1/2
+ ﬂammamnm) — 0mm) 
n=1

The stability for every simulation result was also measured by RMS
value, which calculated the deviation between the ith simulation result

.ul.i =.l.i .. I 
(G22; “’0” (n) and  “no” (11)), and the jth s1mulat10n result (G22; “no”! (n)

and Emulationjm» at each point (15i<j5 100).

core

.. 1N=. ._ =.u.. 2
Imam-[ﬂy = (a (Heart‘mm) — GiZ’i.’“”"”J(n))

n=1
N 2 1/2
+ Z<Egigzulatiom _ azgulationj  
11:1

2.5 Nonlinear ﬁtting for the pan-genome proﬁle
When the pan-genome size and core genome size of n strains (1 5 n 5 N)

were available, a series of mathematics models (Supplementary Material)
were used to depict pan-genome size, core genome size and new gene size.

3 RESULTS

The performance of sampling algorithms. It was found in
Supplementary Fig. S1 that genome diversity, characterized by
Dev _geneCluster method in Model C, exhibited strong correl-
ation to pan-genome size, and difference in gene cluster number
may primarily affect pan-genome size. Hence, we take
Dev _geneCluster as the method to characterize genome diversity
in the DG algorithm. The performance of two sampling algo-
rithms was estimated from three aspects—accuracy, stability and
time cost. Seen from Supplementary Figs S2—S4, the result from
the DG algorithm was closer to the real data and more stable
than the TR result with the same sample size. For the same
species, population size almost did not affect the accuracy and
stability of the two sampling algorithms. When the sample size
was set to 500, the error proportion in the total gene clusters,
either between the DG result and the real data or between any
two sample results from the DG algorithm, were <O.1% in all
test populations. Regarding time cost, the DG algorithm took
slightly more time than the TR algorithm with the same sample
size (Supplementary Table S1). When sample size was set to 500,
the analysis for 550 genomes could be ﬁnished within 3 min.

Application for PanGP. Among pan-genome analysis tools,
PGAP, a comprehensive pan-genome analysis pipeline with
ﬁve modules, could only deal with small-scale genomes in the
pan-genome proﬁle analysis module, while PanGP was a highly
efﬁcient tool for large-scale bacterial pan- genome proﬁle analysis
with sampling algorithms. Besides TR and DG algorithms, an-
other one named traverse all algorithm (TA algorithm) was also
provided in PanGP. When TA algorithm was selected, the pan-
genome proﬁle would be analysed without sampling. PanGP
required orthologs information as the input data, which could
be generated by series of software, such as PGAP (Zhao et al.,
2012), OrthoMCL (Li et al., 2003) and PanOCT (F outs et al.,
2012), with the format introduced in the online manual. When
sampling ﬁnished, the pan-genome proﬁle would be present as
curves images (shown as Supplementary Fig. S5). The curves
images could be revised and exported via the user-friendly gra-
phic interface, and non-linear ﬁtting with three mathematic
models was also available for pan-genome size, core genome
size and new gene size. More usages about PanGP were provided
in the online manual.

Funding: The National Basic Research and Development
Program (973 Program; 2010CB126604 to J.X.); National
Programs for High Technology Research and Development
(863 Program; 2012AAO20409), the Ministry of Science and
Technology of People’s Republic of China; Key Program of

 

112 [glO'SIBILInO[plOJXO'SODBIILIOJHIOIQ/[l(11111 IIIOJJ popcommoq

910K ‘09 lsnﬁnV uo ::

PanGP

 

Chinese Academy of Sciences grant (KSZD—EW-TZ—OO9-O2
to J .X).

Conﬂict of Interest: none declared.

REFERENCES

Baumdicker,F. et al. (2010) The diversity of a distributed genome in bacterial popu-
lations. Ann. Appl. Probab., 20, 1567—1606.

Fouts,D.E. et al. (2012) PanOCT: automated clustering of orthologs using con-
served gene neighborhood for pan-genomic analysis of bacterial strains and
closely related species. Nucleic Acids Res., 40, e172.

Hogg,J.S. et al. (2007) Characterization and modeling of the Haemophilus inﬂuen-
zae core and supragenomes based on the complete genomic sequences of Rd and
12 clinical nontypeable strains. Genome Biol., 8, R103.

Laing,C. et al. (2010) Pan-genome sequence analysis using Panseq: an online tool
for the rapid analysis of core and accessory genomic regions. BM C
Bioinformatics, 11, 461.

Li,L. et al. (2003) OrthoMCL: identiﬁcation of ortholog groups for eukaryotic
genomes. Genome Res., 13, 2178—2189.

Medini,D. et al. (2005) The microbial pan-genome. Curr. Opin. Genet. Dev., 15,
589—594.

Tettelin,H. et al. (2005) Genome analysis of multiple pathogenic isolates of
Streptococcus agalactiae: implications for the microbial “pan-genome”. Proc.
Natl Acad. Sci. USA, 102, 13950—13955.

Tettelin,H. et al. (2008) Comparative genomics: the bacterial pan-genome. Curr.
Opin. Microbiol., 11, 472—477.

Zhao,Y. et al. (2012) PGAP: pan-genomes analysis pipeline. Bioinformatics, 28,
416—418.

 

112 [3.10811211an[p.IOJXO'SODBIIIJOJIIIOIQ/[Z(11111 IIIOJJ popcommoq

910K ‘09 lsnﬁnV uo 22

