APPLICATIONS NOTE

Vol. 28 no. 4 2012, pages 584-586
doi: 1 0. 1 093/bioinformatics/btr688

 

Sequence analysis

Advance Access publication December 9, 2011

JDet: interactive calculation and visualization of function-related
conservation patterns in multiple sequence alignments and

structures

Thilo Muthl’l, Juan A. Garc a-Mart n2, Antonio Rausell3, David Juan3,

Alfonso Valencia3 and Florencio Pazosl’*

1Computational Systems Biology Group, National Center for Biotechnology (CNB—CSIC), 28049 Madrid,
2Department of Plant Molecular Genetics (CNB—CSIC) and 8Structural Biology and Biocomputing Programme

(CNIO), 28029 Madrid, Spain

Associate Editor: John Quackenbush

 

ABSTRACT

Summary: We have implemented in a single package all the features
required for extracting, visualizing and manipulating fully conserved
positions as well as those with a family-dependent conservation
pattern in multiple sequence alignments. The program allows, among
other things, to run different methods for extracting these positions,
combine the results and visualize them in protein 3D structures and
sequence spaces.

Availability and implementation: JDet is a multiplatform
application written in Java. It is freely available, including the source
code, at http://csbg.cnb.csic.es/JDet. The package includes two of
our recently developed programs for detecting functional positions in
protein alignments (Xdet and S3Det), and support for other methods
can be added as plug-ins. A help file and a guided tutorial for JDet
are also available.

Contact: pazos@cnb.csic.es

Received on September 30, 2011; revised on December 1, 2011;
accepted on December 6, 2011

1 INTRODUCTION

Sequence—based protein functional analysis has become a
fundamental part of a number of studies. Multiple sequence
alignments (MSAs) of protein families are valuable sources of
structural and functional information (Pazos and Bang, 2006).
These MSAs can be obtained from the vast amounts of genomic
information coming from high—throughput sequencing initiatives,
and there are many resources with automatically pre—compiled
alignments for thousands of families.

MSAs can be used to assess the importance of the different
residues for a given protein (Zuckerkandl and Pauling, 1965). The
most obvious ‘important’ positions are those not allowed to change
(fully conserved). Conserved positions were the ﬁrst indicators of
functionality and consequently many methods were developed for
detecting them (Valdar, 2002).

Most protein families can be subdivided into subfamilies with
different functional speciﬁcities, a division which is reﬂected in the

 

*To whom correspondence should be addressed.
TPresent address: Bioprocess Engineering, Max Planck Institute for
Dynamics of Complex Technical Systems, Magdeburg, Germany.

structure of the MSA (Rausell et al., 2010). This division is related
to a class of positions with a subfamily—dependent conservation
pattern (i.e. the conserved amino acid is different for the different
subfamilies). These positions are intuitively related to sites with
some importance for deﬁning the functional speciﬁcity of the
different subfamilies within the MSA and, for that reason, they are
commonly known as ‘speciﬁcity—determining positions’ (SDPs). A
plethora of methods have been developed which, based on different
concepts, try to detect these positions [see Pazos and Bang (2006)
and Rausell et al. (2010) for an exhaustive list of the most important
methods].

The presence of SDPs in protein regions related to functional and
interaction speciﬁcity has been recently shown to be a widespread
phenomenon (Rausell et al., 2010). Moreover, the role of SDPs
(automatically extracted from MSAs) in controlling the functional
speciﬁcity of the family has been, in many cases, experimentally
demonstrated by mutating the corresponding residues [see for
example Bauer et al. (1999); Morillas et al. (2003)].

Working with SDPs usually involves running different programs
for extracting them from MSAs, interactively visualizing and
combining their results, and mapping them onto protein structures
when available. Since no single package implemented all these
capabilities, we developed JDet, a user—friendly program which
contains all the features we consider practical and indispensable
for the daily work with SDPs and conserved positions.

2 PROGRAM AND INTERFACE

J Det is a stand—alone multiplatform application written in Java.
The basic input for JDet is a MSA. This input alignment can be
ﬁltered (e.g. to remove redundancy, fragments ...) according with
the parameters provided by the user or using pre—compiled sets of
parameters. The user can also edit and modify the alignment by
introducing/removing gaps or amino acids in one or more sequences
simultaneously. Two of our recently developed methods for
detecting SDPs and conserved positions are included in the package
and can be run within it: Xdet (Pazos et al., 2006) and S3Det (Rausell
et al., 2010). Additionally, JDet can read pre—generated results from
these programs, and from any other program for detecting SDPs and
conserved positions provided these are converted to a simple format.
Moreover, ﬁlters for other methods (or even the methods themselves)

 

584 © The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com

112 /§.IO'SIBUJHOprOJXO'SOTlBIIIJOJUTOTQ/ﬁdnq U101} pepBOIUAAOG

9IOZ ‘091sn8nv uo ::

JDet

 

I 1m: 1 ."r [in] 1 -'1L'I_.'I'Ia1]

Willie“? _


HIE:  |—.(_}—... '3 I
Murry 2-5 2:32:93 i an an i “ran” n

Hitler- in.” I=I_-:I=I 'E I III
24: 
I: L
Ir
1:,


l.

  

  
   
    
    
  
    
   

Ih'l

l 1'

.«E

lgl
l!

U.

I
H.
h
FrutIxhlIll 

If
5.1

FDIEQ1+2=DITJEEISTJ2§3EIT
umu+ 1=uaLscHPDﬂ+an
ﬂmﬂi- IIDITJLITUI31-35ﬁ
qmnm- l: ﬁlTJIJFDfEl‘EEEI
PIHTIE-I- 1=EIIT I -' E l-EE-‘I-
PEI-1 151 + 1 : BIT HLIMJI N E 1:33:1-
'1.r. I. i:-.|-... - a:

.*********‘**i:ﬁ=ﬁté l****_ I
'4. r _ r I

 

 

 

       
  
 
    
     

H iIiIIIHIIIIII he: mm

E

I "-.|In-.IrI|1n1I..1nII

IEIIII Ellﬂlilllﬁl? IHIIHI

_ Fl 1.
_'
I '1|"|llJl'llll'Ell-IIH". .. T 3:.
MING 151:“: If Int-r13“: ruin-I: v Him: 3-de v ' DUI! _ l
I. 1
I. I.
I. I.
I. I. i.
I. -" _‘ . I. I! r'
I. 'l L'. _ - =-' y
.l ‘ I " ' . 1f- : . I” .‘P' L
_,_ i "1. -_ u -
"t -._ 'I. J .' '- I'I- " " I": .I l -
-. ._ ,.-. '2'.
H -l. _\_'I F, -"I _\_lII J'
.--".-I- : - _-i .aﬁ'a“
z ". "' - PI II“; " j.‘ a. '
2' , r  .e  . , j-
J' . ' I. '1' - .
I. - . .I ..I. I
'I. '- -' I.
._ I 2:. .I '1'
,'._1r'
Drutuirwfﬁubl'allliiic'i Ra'sitlucs [urva
- Cluster Centers {black}

 

    

'.-|.
I

  I .1...“
. "- ' ' '4 I." ' 1' '-' rp.‘ :'.
I. I  ..-. '3‘: . ﬂ“: .:-.'-'.'  '. 'tﬁaﬁei.  .    .  . ."
:I.
u | 'I I

   

    

' Y

i

 

  Fl‘i‘ﬁ
 
LRF NELN

 

 

 

 

 

  

 

 

Fig. 1. Screenshots of the JDet interface. (A) Main window with an alignment and the results of three methods loaded into it. The subfamilies automatically
detected are shown with different colors on the left. (B) 3D interactive views of the protein and residue spaces generated by S3Det. (C) J mol window showing
the 3D structure of one of the proteins of the alignment. Panels (A)—(C) are communicated with each other: proteins or residues selected in any of them
become selected in the other two. (D) Subalignment showing only the currently selected proteins and positions, and with amino acids colored according to
their polarity. (E) Sequence logos for the selected positions/proteins calculated for each subfamily independently. (F) Global sequence logos for the selected

positions/proteins, and amino acids colored according with their polarity.

can be incorporated into J Det as plug-ins. With this feature, support
for any method can be added to J Det by developers. As an example,
JDet includes a plugin for importing the results of the widely
used methods. Conseq and Consurf (Armon et al., 2001), which
adds to the other methods commented above that can be read by
the program.

The main interface of the program (Fig. 1A) shows the MSA
and the results of the different programs loaded. The program
can simultaneously show the results of an unlimited number of
programs/methods, which are piled up in the top bar and whose
score thresholds can be changed in order to control the number
of predicted positions shown. The user can freely select a set of
positions (columns) in the alignment, those predicted by a given
method or those concomitantly predicted by two or more of them
(i.e. looking for consensus or ‘stable’ predictions). Proteins (rows)
can be selected too, and the subalignment deﬁned by the subsets of
selected proteins and positions can be exported (Fig. 1D). Amino

acids can be colored by a number of color schemas included in the
program, and by any schema provided by the user.

If a protein in the alignment, or a close homolog, has a known 3D
structure, that can be interactively displayed in the integrated J mol
viewer (www.jmol.org) (Fig. 1C). The program can automatically
look for the most suitable structure for a given protein of the
alignment, or the user can ‘force’ the program to use a given one.
Positions selected in the alignment window are highlighted in the
structure and vice versa (positions—Le. columns—can be selected
by clicking the corresponding residues in the Jmol window).

S3det detects not only SDPs but also the subfamily composition
of the MSA as well (Rausell et al., 2010). These subfamilies are
highlighted with different colors in the alignment window (Fig. 1A).
Moreover, within S3det proteins and residues are represented as
points in a multidimensional space. 3D projections of that space
can be interactively inspected and rotated (Fig. 1B). Selections of
proteins and residues (points) in these 3D spaces are automatically
translated to the alignment and 3D structure windows, and vice

 

585

112 /3JO'S[BUJHO[pJOJXO'SOllBIIlJOJIllOTQ/ﬁdnq 11101; pepBOIIIAAOq

9IOZ ‘OE lsnﬁnv uo ::

IMuth et aI.

 

versa. In this sense, the three main windows (Fig. lA—C) are
fully connected and selections in any of them are automatically
reﬂected in the other two. In this way, it is possible for example
to inspect the conservation pattern of a residue with a given
structural characteristic (e. g. binding a cofactor) and its position
in the sequence space, and all the other combinations.

The program incorporates other features we found very useful
when working with SDPs and MSAs in general, such as the
generation of sequence logos for a selected subset of proteins and
positions (Fig. 1E and F).

3 CONCLUSION

Based on our own experience working with subfamilies and SDPs,
we have implemented in J Det all the features we consider useful for
that activity. Previously, these operations had to be done manually
or by integrating diverse software. Although some of these features
are individually present in existing resources oriented to SDPs
[e.g. Treedet server (Carro et al., 2006)] or to MSAs in general
[e. g. J alview (Waterhouse et al., 2009)], no single package integrates
all of them. For this reason, we think this software would be really
useful for people working in extracting functional features from
MSAs.

ACKNOWLEDGEMENTS

We want to thank the members of the Computational Systems
Biology Group (CNB—CSIC) for comments and suggestions.

Funding: This work has been funded in part by the project BIO2010—
22109 from the Spanish Ministry for Science and Innovation.

Conﬂict of Interest: none declared.

REFERENCES

Armon,A. et al. (2001) ConSurf: an algorithmic tool for the identiﬁcation of functional
regions in proteins by surface mapping of phylogenetic information. J. Mol. Biol,
307, 447—463.

Bauer,B. et al. (1999) Effector recognition by the small GTP-binding proteins Ras and
Ral. J. Biol. Chem, 274, 17763—17770.

Carr0,A. et al. (2006) TreeDet: a web server to explore sequence space. Nucleic Acids
Res., 34, W110—W115.

M0rillas,M. et al. (2003) Identiﬁcation of conserved amino acid residues in rat liver
carnitine palmitoyltransferase I critical for malonyl-COA inhibition. Mutation of
methionine 593 abolishes malonyl-COA inhibition. J. Biol. Chem, 278, 9058—9063.

Pazos,F. and Bang,J.-W. (2006) Computational prediction of functionally important
regions in proteins. Curr. Bioinformatics, 1, 15—23.

Pazos,F. et al. (2006) Phylogeny-independent detection of functional residues.
Bioinformatics, 22, 1440—1448.

Rausell,A. et al. (2010) Protein interactions and ligand binding: from protein subfamilies
to functional speciﬁcity. Proc. Natl Acad. Sci. USA, 107, 1995—2000.

Valdar,W.S. (2002) Scoring residue conservation. Proteins, 48, 227—241.

Waterhouse,A.M. et al. (2009) J alview Version 2—a multiple sequence alignment editor
and analysis workbench. Bioinformatics, 25, 1189—1 191.

Zuckerkandl,E. and Pauling,L. (1965) Molecules as documents of evolutionary history.
J. Theor. Biol, 8, 357—366.

 

586

112 /BJO'SIBUJHOIP.IOJXO'SOIlBIHJOJUIOIQ/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘09 lsnﬁnv uo ::

