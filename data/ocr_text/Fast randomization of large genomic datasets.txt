Vol. 30 ECCB 2014, pages i617-i623
doi: 10. 1093/bioinformatics/btu4 74

 

Fast randomization of large genomic datasets while preserving

alteration counts

Andrea Gobbil’l, Francesco Iorio2’3’1’*, Kevin J. Dawson3, David C. Wedge3,
David Tamborero4, Ludmil B. Alexandrov3, Nuria Lopez-Bigas4, Mathew J. GarnettB,

Giuseppe Jurmanl and Julio Saez-Bodriguez2

1Fondazione Bruno Kessler, I—38100 Povo (Trento), Italy, 2European Molecular Biology Laboratory, European
Bioinformatics Institute, Cambridge CB10 1SD, UK, 8Wellcome Trust Sanger Institute, Cambridge CB10 ISD, UK and

4Universitat Pompeu Fabra, Barcelona 08003, Spain

 

ABSTRACT

Motivation: Studying combinatorial patterns in cancer genomic data-
sets has recently emerged as a tool for identifying novel cancer driver
networks. Approaches have been devised to quantify, for example, the
tendency of a set of genes to be mutated in a ‘mutually exclusive’
manner. The significance of the proposed metrics is usually evaluated
by computing P-values under appropriate null models. To this end, a
Monte Carlo method (the switching-algorithm) is used to sample simu-
lated datasets under a null model that preserves patient- and gene-
wise mutation rates. In this method, a genomic dataset is represented
as a bipartite network, to which Markov chain updates (switching-
steps) are applied. These steps modify the network topology, and a
minimal number of them must be executed to draw simulated datasets
independently under the null model. This number has previously been
deducted empirically to be a linear function of the total number of
variants, making this process computationally expensive.

Results: We present a novel approximate lower bound for the number
of switching-steps, derived analytically. Additionally, we have de-
veloped the R package BiRewire, including new efficient implementa-
tions of the switching-algorithm. We illustrate the performances of
BiRewire by applying it to large real cancer genomics datasets.
We report vast reductions in time requirement, with respect to existing
implementations/bounds and equivalent P-value computations. Thus,
we propose BiRewire to study statistical properties in genomic data-
sets, and other data that can be modeled as bipartite networks.
Availability and implementation: BiRewire is available on
BioConductor at http://www.bioconductor.org/packages/2.13/bioc/
htmI/BiRewire.htm|

Contact: iorio@ebi.ac.uk

Supplementary information: Supplementary data are available at
Bioinformatics online.

1 INTRODUCTION

In the past few years, next-generation sequencing (NGS) tech-
nologies have progressed swiftly, and currently hundreds of gen-
omes can be simultaneously sequenced in a matter of weeks, at
more affordable costs. This opens a wide range of new avenues in
biological and biomedical research. In particular, because of the
established impact of the genomic background on disease

 

*To whom correspondence should be addressed.
TThe authors wish it to be known that, in their opinion, the ﬁrst two
authors should be regarded as Joint First Authors.

progression and response to drug treatment, cancer research
has significantly benefited from these advances. Comprehensive
catalogues of mutations in multiple cancer types have been
assembled and fruitfully used to identify new diagnostic, prog-
nostic and therapeutic targets (Barretina et al., 2012; Garnett
et al., 2012; ICGC et al., 2010; TCGA et al., 2008). Existing
large-scale projects, such as the Cancer Genome Atlas (TCGA;
TCGA et al., 2008), the International Cancer Genome
Consortium data portal (ICGC et al., 2010) and, recently, the
Genomics of Drug Sensitivity in Cancer (Garnett et al., 2012)
and the Cancer Cell Line Encyclopedia (Barretina et al., 2012),
provide invaluable opportunities to explore molecular alterations
that could potentially play a crucial role in a plethora of different
cancer types and their response to therapy (Stratton et al., 2009).

A key task in these projects is to distinguish between driver
mutations (i.e. those conferring selective clonal growth advan-
tage) and functionally neutral passenger mutations (which do
not contribute to tumour development) (Bignell et al., 2010;
Greenman et al., 2007). Once key driver mutated genes are iden-
tiﬁed, a fruitful analysis is to consider them in the context of the
pathways where they operate. This allows the identification of
cancer driver biological networks, whose altered functionality
results in the acquisition of a cancer hallmark (Hanahan and
Weinberg, 2011; Vogelstein et al., 2013). One of the ideas ex-
ploited to identify these networks is based on the assumption
that sets of mutations exhibiting statistically significant levels
of mutual exclusivity (ME) are likely to alter genes involved in
a common biological process that drives cancer development. It
has been noted that driver mutations in cancer occur in a limited
number of pathways and driver lesions in the same pathway do
not tend to occur in the same patient (Yeang et al., 2008).
A possible biological explanation is that if a crucial node is
altered in an oncogenic pathway, a secondary mutation on the
same pathway is unlikely to provide further selective advantage
to the cancer cell, thus it does not tend to be selected during
somatic evolution. Hence, sets of mutations exhibiting statistic-
ally signiﬁcant levels of ME are likely to alter genes involved in a
common biological process that drives cancer development. On
the other hand, mutations of genes participating in different bio-
logical pathways may exert a synergistic effect in conferring
growth advantages to tumour cells. Therefore, investigations
have been devoted to searching for groups of genes that are
simultaneously mutated more often than expected by random
chance (Thomas et al., 2007; Uren et al., 2008).

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/Iicenses/by—nc/S.0/), which permits
non—commercial re—use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re—use, please contact journals.permissions@oup.com

112 /310's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

A.Gobbi et al.

 

Based on these premises, the emergence of combinatorial
properties among patterns of genomic events has been investi-
gated in a number of recent studies, through the application of
novel statistical measures quantifying, for example, the ‘mutual
exclusivity’ or the ‘co-occurrence’ of different genomic lesions
(Ciriello et al., 2012; Cui, 2010; Gu et al., 2010; Miller et al.,
2011; Vandin et al., 2012; Yeang et al., 2008). Among these
studies, those aimed at identifying groups of genes whose muta-
tion patterns tend to ME are based on the same principle and are
conceptually similar (Ciriello et al., 2012; Miller et al., 2011;
Vandin et al., 2012), although they differ in two crucial meth-
odological aspects:

(i) The way sets of genes to be tested for ME are selected.
(ii) The way ME of a gene set is assessed and its statistical
signiﬁcance is quantiﬁed.

In (Ciriello et al., 2012), for example, the authors designed
MEMO, a computational framework in which gene sets to be
tested for ME are derived from cliques (i.e. groups of genes
with complete pair-wise connectivity) identiﬁed in functional net-
works, assembled from publicly available signalling and pathway
maps. For the statistical assessment of ME, a variety of strategies
have been followed. Vandin et al. (2012) perform a signiﬁcance
test simulating a null model by independently permuting the mu-
tations of each gene across patients, thus preserving the mutation
frequency gene-wise (but not sample-wise). In (Miller et al.,
2011), authors make use of tools from coding theory, and the
ME signiﬁcance for a set of genes is computed algorithmically. In
contrast to these two methods, MEMO quantiﬁes the sample
coverage (SC) of a set of genes in terms of the number of samples
in which at least one of them is mutated. Then the ME of the
gene set under consideration is computed as the divergence of its
SC from expectation. To evaluate the statistical signiﬁcance of
this ME measure, P—values are computed under an appropriate
null model. This can be achieved by randomly permuting the
analysed dataset, while preserving the overall distribution of
observed alterations across both genes and samples. This is cru-
cial to preserve tumour speciﬁc alterations, heterogeneity in mu-
tation/copy-number alteration rates across patients and to let the
SC signiﬁcance be proportional to the gene set ME. To generate
this null model, the authors make use of a permutation strategy
based on a random network generation model referred to as the
switching-algorithm (Milo et al., 2003). First the relevant infor-
mation in the data is represented as a binary event matrix (BEM)
(Fig. 1A): a ‘0—1 table’ in which the generic entry WW) is equal to
1 if in the i-th sample, the j-th gene is altered (by a non-synonym-
ous somatic mutation, a homozygous deletion or an ampliﬁca-
tion), and is equal to 0 otherwise.

The uniform distribution on the set of 0—1 tables with ﬁxed
marginal totals (i.e. with prescribed row-wise and column-wise
sums) is used as a null model in various contexts (Besag and
Clifford, 1989; Ponocny, 2001; Rasch, 1993). In ecological re-
search 0—1 tables, called ‘presence—absence’ matrices (PAMs)
(Miklos and Podani, 2004) are randomized to evaluate the devi-
ation of observed phenomena, such as the co-occurrence of dif-
ferent species in the same habitat, from random expectations
(Connor and Simberloff, 1979; Gotelli, 2000; Wilson, 1987).
Several algorithms exist to generate constrained and non-

{A} as incidence matrix {B}

 

 

 

Bipartite Network

_ _______{_)aample1
r” ___—---' (H

gene1  Osamplei
QEHEEO__\-\,></ HEW—"Oaamples
geneEO—kwﬁosampm
gene‘iO‘f'E. xgéﬁgéhhpsamplﬂs'
. «"':-""’- Ki“ Osampled

f, 
geneﬁ-J_ _ j“:

n“- "Usample?

repeat
it} ' ' Switching Step ' ' ' ' '{Df‘

GE I'IIDI'TIIG binary-event matrix

 

 

 

 

 

 

 

D wild-type I altered

 

 

 

edge rewiring

'r I‘Er‘ldﬂi’l‘l edge SEIEﬂiﬂl‘l

 

 

 

 

 

 

i if (a,d) and (a,b) dd not axial T

they are added it: the netwnric
and {adj and [ad] removed

 

 

 

 

i take incidence matrix

 

{E} i Randomised
Genomic binary-event matrix

 

  

 

“Edgar”?qu
, aagafaa
E gene1 '__ _m
i geneEl
i genea
i gene4
i geneﬁl

 

 Dene-type .altered

Fig. 1. BEM randomization through the switching-algorithm. A bipartite
graph (B) is derived from the initial BEM by considering it as a graph
incidence matrix (A). A sequence of switching-steps (C and D) is per-
formed. In each of these steps, two edges (a,b) and (c,d) are randomly
chosen (C) and, if the edges (a,d) and (c,b) do not exist yet, they are added
to the network, while (a,b) and (c,d) removed (D). A rewired version of
the BEM is derived by considering the incidence matrix of the resulting
network after a sufﬁciently long sequence of switching-steps (E)

 

constrained null models depending on which basic features of
the PAM are retained in the computations (Gotelli, 2000;
Gotelli and Entsminger, 2001). Nevertheless, the randomization
of moderately large matrices in a short space of time is still
challenging.

Ciriello et al. took advantage of tools from graph theory by
considering a BEM as the incidence matrix of a bipartite graph
(Gross and Yellen, 2006) (Fig. 1B). Then, they adapted the
switching-algorithm for network randomization with node
degree preservation to the problem of randomizing a BEM

 

i618

112 /310's113umo [p.IOJXO'SOllBIIHOJUIOIQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

Genomic data randomization preserving alteration counts

 

while preserving its row- and column-wise sums (Milo et al.,
2003). If a BEM derived from a genomic dataset is considered
as the incidence matrix Of a bipartite network G, then nOdes in
the ﬁrst set Of G correspond tO genes, and those in the second set
correspond tO samples. Additionally, a nOde i in the ﬁrst set is
connected tO a nOde j in the second set if the gene mapped by nOde
i is altered in the sample mapped by nOde j (Fig. 1A and B).
Deﬁning the degree Of a nOde as the number Of its incident
links, row-wise sums Of the BEM will correspond tO degrees Of
the nOdes in the ﬁrst set, whereas column-wise sums Of the BEM
will correspond tO degrees Of the nOdes in the second set. The
problem Of randomizing a BEM while preserving its row- and
column-wise sums can then be reduced tO the problem Of shufﬂing
the links in the corresponding network G while preserving its nOde
degrees, or ‘network rewiring’, with the additional constraint that
the shufﬂing should preserve bipartiteness (i.e. nOdes in the
same subset should never be connected). Based on these premises,
in MEMO (Ciriello et al., 2012), randomized versions Of a BEM
are generated by adapting the switching-algorithm tO bipartite
networks. This methOd proceeds through a series Of Monte
CarlO switching-steps tO produce rewired networks, starting
from the original one, and preserving its degree distribution, as
summarized in Figure 1. For the Markov chain underlying this
algorithm tO ‘forget’ the initial network (thus tO minimize the
initial bias), a sufﬁciently large number Of switching-steps
should be performed.

The presence Of trends in the time series Of network metrics
along the sample path Of a Markov chain simulation is evidence
that the chain has not yet reached its stationary distribution (Ray
et al., 2012) (the required uniform distribution). If the Markov
chain has a slow mixing time (Stanton and Pinar, 2012), then the
number Of iterations required tO reach (approximate) stationarity
(the so-called burn-in time) may be very long. In (MilO et al.,
2003), the authors propose on empirical grounds that 100 times
the number Of existing links (|E|) is an adequate burn-in time,
and this lower bound is generally used. In what follows, we will
refer tO this bound as the ‘empirical bound’ (N’). The desired
number Of random networks needed tO compute empirical P-
values should then be multiplied by this number tO Obtain an
estimation Of the total time requirements. When dealing with a
large number Of tests (as are Often required in the identiﬁcation
Of cancer network drivers, where the number Of gene sets tO test
is potentially very large), tO achieve signiﬁcance after multiple
hypothesis test correction, the number Of random networks tO be
generated (hence Of switching-algorithm runs) could be in the
order Of hundreds Of thousands. Consequently, the amount Of
time required tO accomplish this task could be very high. This
would make routine analyses practical only on server clusters.
Here we propose a novel, analytically derived, approximate
lower bound tO the number Of switching-steps required by the
switching-algorithm tO generate randomized versions Of a BEM,
preserving genomic event distributions both across samples and
genes. Finally, we have implemented BiRewire, an R package
(Ihaka and Gentleman, 1996) allowing users

(i) tO study and visualize trends in metrics over different num-
bers Of switching-steps for a given BEM;

(ii) tO determine the minimum number Of switching-steps
required tO reach the approximate stationary distribution

(here the uniform distribution on the set Of allowed
BEMs);

(iii) tO generate randomized BEMs using the switching-
algorithm with the number Of switching-steps set tO
either this lower bound or a user-deﬁned one.

We illustrate the application Of BiRewire with examples where
the BEMs are derived from real datasets from the TCGA
(TCGA et al., 2008) and other studies, after the applications of
state-of—the—art ﬁlters for the identiﬁcation Of somatic mutations
affecting protein function and cancer-speciﬁc driver genes.
Finally, we compare the Obtained execution times and P—value
computations with those Obtained with different implementa-
tions Of the switching-algorithm and different bounds.

2 METHODS

We analytically derived an approximate lower bound for the number Of
switching-steps to be performed by the switching-algorithm, when applied
to a bipartite network G: (V, E) (where Vis the set Of vertices and E the
set of links, with V: {V,, VC}). This bound is equal to

Z IEI
2(1 — d)

where d is the edge density Of the original network, deﬁned as the ratio
between IE I and the number of edges Of a fully connected bipartite graph
with the same number of nodes in the two classes: d= |E|/(| Vrl X IVCI).
With respect to the empirical bound proposed in (Milo et al., 2003) (i.e.
N’ = lOOlEl), our bound can be expressed as

Z N’ In (1 —d)N’
200(1 —d) 100

 

ln (1 — d)|E| (1)

N

 

(2)

at least for bipartite graphs.

In what follows, we will denote with GU‘) a rewired version Of the bi-
partite network G Obtained with the switching-algorithm through k switch-
ing-steps. We assume intuitively that GU‘) is a rewired version Of G if

(1) The average similarity between G and its rewired version GU‘) tends
to remain constant when k is further increased (i.e. performing
additional switching-steps does not make GU‘) more different
from G, on average);

(2) The average similarity between G and GU‘) is sufﬁciently close
to the expected similarity between any pair Of random bipartite
networks with the same size, edge density and node degrees of G
(i.e. between any pair Of rewired versions Of G).

The ﬁrst condition above is Often used when monitoring convergence
Of the sampler, where trends within chains are studied to quantify the
‘forgetting’ Of the initial state (Brooks and Gelrnan, 1998). Taken to-
gether, the two conditions are necessary and sufﬁcient to claim that
after k switching-steps the initialization bias Of the underlying Markov
chain reaches a minimum. When they are veriﬁed, performing additional
switching-steps does not make GU‘) any more different from G, on aver-
age. The second property guarantees that G and GU‘) are indistinguishable
from any pair Of networks sampled independently from the null distribu-
tion. As a consequence, GU‘) can be considered as an approximate Obser-
vation drawn from the uniform distribution of all the possible bipartite
networks with the same number Of nodes, links and degrees as G. By
running the switching-algorithm on bipartite networks of different sizes
and edge densities, we ﬁrst veriﬁed that after a speciﬁed number k Of
switching-steps, which is much lower than N’, Conditions 1 and 2 are
met. Then, we went on to empirically verify that the fulﬁlment Of our
convergence criteria provides a good estimation Of the autocorrelation

 

i619

112 /§JO's112umO [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pop1201um0q

9IOZ ‘09 lsnﬁnv uo ::

A.Gobbi et al.

 

time (Stanton and Pinar, 2012): a standard tool for estimating the con-
vergence Of a Markov chain to its stationary distribution (Sokal, 1989).
Finally, we present a novel approximate lower bound N (which was
derived analytically) for the number of switching-steps k at which our
two conditions hold. We show that after N switching steps the distribution
Of the Jaccard index (J I; a measure of similarity) between Ga‘) and G
reaches the same steady state as is reached at N’, at least on the tested
networks. These networks were chosen to have topological features
make their incidence matrix comparable with a BEM derived from a typ-
ical large-scale NGS dataset. These results were Obtained using an efﬁcient
implementation Of the switching-algorithm, detailed in the Supplementary
Materials, and the R package igraph (Csardi and Nepusz, 2006).

3 RESULTS

3.1 Randomness convergence across switching step

Based on the same premises Of the output-based methOd prO-
posed in (Johnson, 1996), tO show that after a speciﬁed number
Of k switching-steps the average similarity between G and GU‘)
converges (i.e. it tends tO remain constant even if applying add-
itional switching-steps), we generated several random bipartite
networks containing a total number Of nc x n, =20, 000 nOdes
(with nc = chl and n, = | Vrl), a ﬁxed edge density equal tO 15%
(3000 edges) and different levels Of squareness (i.e. nc/nr ratiO).
By adopting an experimental setting similar tO that described in
(Stanton and Pinar, 2012), for a given level Of squareness, each Of
the corresponding networks G was then given as input tO 50
different instances Of the switching-algorithm, each performing
N’ = 100 x 3000 = 3 x 105 switching-steps. The output Of each Of
these instances was then sampled every 100 switching-steps and
collected, at the j-th sample time, intO a set Of rewired networks
Rj={G(100j)’i} with 1': 1, 50 and j= 1,  100. Finally, at
each sample time j, the average similarity between each rewired
network in Rj and the original network was computed (tO verify
Condition 1), as well as the average pair-wise similarity between
each pair Of networks in Rj (tO verify Condition 2). TO quantify
the extent Of similarity between two networks, the J accard Index
(JI) (Jaccard, 1901) between their incidence matrices was com-
puted. If we denote with B the incidence matrix Of the network G
and with B“ the incidence matrix Of its rewired version GU‘), then
it can be easily veriﬁed that the J I between G and GU‘) is equal tO

xac)

JI(G, G(k)) = W

(3)
where |E| is the number Of links contained in G (equal tO that Of
G09) and x09 = ZthiJ-Bffj, is the bitwise sum Of the Hadamard
product between the two matrices (i.e. the number Of ones in
common between them, hence the number Of common links
across the two networks). Results Of this simulation are depicted
in Supplementary Figure S1A. After an adequate number Of
switching-steps (which is much lower than N’), both the average
similarity between the rewired networks and the initial networks
(indicated by the blue curves) and the average pair-wise similarity
computed between each pair Of rewired networks (red curves)
plateau at the same level (consistently with Conditions 1 and 2).
These results suggest that the true lower bound for the number Of
switching-steps required by the switching-algorithm tO rewire bi-
partite networks, providing them with the maximal level Of ran-
domness, is much lower than N’. For reference, we include in
Supplementary Figure S1A the expected similarity between any

pair Of random bipartite networks with the same number Of nOdes
and edges Of G (green line in Supplementary Fig. SlA) but with
possibly different nOde degrees, derived as detailed in the
Supplementary Materials. This gives an indication Of how much
the distribution Of networks under the null mOdel differs from the
distribution under the alternative mOdel in which nOde degrees are
not preserved. Results from a similar simulation but starting from
bipartite networks containing |V,| = 100 and | Vcl = 200 nOdes and
different levels Of edge densities are shown in Supplementary Fig.
S1B. Also in this case, after an adequate number Of switching-
steps (which is again much lower than N’), the average similarity
between the rewired networks and the initial ones (indicated by
the blue curves) reaches a plateau level that is equal tO the one
reached by the average pair-wise similarity computed between
pairs Of rewired networks (consistently with Conditions 1 and
2). A ﬁnal empirical study showing that the fulﬁhnent Of our con-
vergence criteria provides a gOOd estimation Of the autocorrel-
ation time (Stanton and Pinar, 2012), hence Of the mixing Of the
underlying Markov chain, is detailed in the Supplementary
Materials and Supplementary Figure S2.

3.2 A novel lower bound to the number of switching-steps
required to rewire bipartite networks

In this section, we summarize the derivation Of a lower bound N tO
the number Of switching-steps that the switching-algorithm should
perform tO rewire a bipartite network, as a function Of its number Of
nOdes and edges. The starting pOint Of our prOOf is the deﬁnition Of
similarity between a bipartite network G and its rewired version GU‘)
(deﬁned in the previous section) based on the JI:

s —— (4)

In the ﬁrst part Of our prOOf (provided as Supplementary Material),
we formulate the mean-ﬁeld equation (Barabasi et al., 1999) for
ad“ 1) (see Lemma 1 Of the prOOf) and consequently for Equation
(4). Then from this mean-ﬁeld equation, we derive a ﬁxed pOint X
and a convergence time N, in terms Of the number Of switching-
steps k (Lemma 2). Finally, we show that the switching-algorithm
can be used tO approximate null mOdels for G through a minimum
number Of N switching-steps (Lemma 3). The mean-ﬁeld equation
for ad“ 1) is equal tO

5
x<k+1>=Zp§k)f.-(x<k>) (5)
i=1

where the functions f(x(k)) represent ﬁve possible values of ad“ 1)
given x09, depending on the switching step performing successfully
or not, and pgk) are the probabilities associated with these values
(see Propositions 1, 2, 3 in the prOOf). Specifying these probabilities
allow the mean-ﬁeld Equation (5) tO be written as a second-order
linear recursive sequence x(k+1)=(|E| + 1)x(k) — IE |x(k_1) for
which a closed form is provided in (Brousseau, 1971). This yields
x(k)=mk(|El _L> + L (6)
1 — m 1 — m
(tlEl — 21‘ + 2|E|)

, and
lEll

where m and q can be expressed as m=

 

i620

112 /§JO's112umO [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pop1201um0q

9IOZ ‘09 lsnﬁnv uo ::

Genomic data randomization preserving alteration counts

 

(ZIIEI — 2|E|2)
q = t—z
edges preserving bipartiteness.
For a ﬁxed 8, where 0 < 8 g 1, we estimate N as the minimum
value such that

, with I: lVrl x chl the number Of possible

|x(N) — XI <8 <—> N>1og mg(z, 8) (7)

81‘
with g(z, 8) = —,
IIEI — |E|2

in Equation (6).

As shown in our prOOf (Proposition 4), for the purpose Of
ﬁnding a lower bound N (rather than the exact value Of required
switching-steps), we can take X = IE I2 / t as the unique ﬁxed pOint
Of 6, (Proposition 5 in the prOOf).

Fixing 8= 1, from the asymptotical equivalence 1n (1 +x) ~
1n x and Lemma 2 Of the prOOf it follows that

_ |E|
N_2<1—d)

where IE I and d are deﬁned as in the previous sections.

With a similar procedure, a mean-ﬁeld equation can also be
estimated for the similarity between any pair Of networks 30‘)
and C09 derived from the original network G through two dif-
ferent instances Of the switching-algorithm, performing k switch-
ing-steps (Lemma 3 Of the prOOf). Brieﬂy, we derived a recursive
sequence for r09 =s(B(k), C(19). As shown in the prOOf
(Proposition 6, 7) and similarly tO Equation (6), this sequence
can be expressed as a second-order linear sequence:

(k): k _ q >+ q
r WEI H. —1_m <8)

and x is the ﬁxed pOint Of the recursion

1n (1 —d)|E|

 

. E—4t2— E2—8Et—4E2
but w1th parametersm=(I I ) (I I I I) I I a

2
(lElt2 — 2t|E|2 + |E|3) lElt_2 — |E| t
q: _ |E|;2 _ t3 - COmPaflng the two mean-ﬁeld

Equations (6) and (8), it follows that W” 3 x09. This implies

nd

 

that the average similarity between any two rewired versions Of a
network G cannot be greater than the similarity between G and
each Of the two individual rewired versions. As a conclusion, our
prOOf shows that our novel bound guarantees a maximal level Of
edge mixing, and that the similarity between any pair Of rewired
versions Of a given network can not be greater than those between
them and the original one.

Finally, we conducted an empirical study tO show that after N
switching steps, the initial bias Of the Markov chain underlying
the switching-algorithm, quantiﬁed by the residual similarity tO
the original network (i.e. ad“), is minimized at least as much as it
is minimized after N’ = 100|E| switching steps [i.e. the empirical
bound proposed in (MilO et al., 2003)]—detai1s are provided in
the Supplementary Materials and Supplementary Figures S3 and
S4. Taken together with our formal prOOf, and empirical
study Of equivalence between our convergence criteria and the
auto-correlation time estimation criteria (detailed in the
Supplementary Materials and Supplementary Fig. S2), these re-
sults suggest that N can be considered as a gOOd ‘burn-in time’
(in terms Of switching-steps) for the Markov chain underlying the
switching-algorithm. As a consequence, N switching-steps are

enough tO simulate samples from the uniform distributions Of
all the possible bipartite networks with prescribed nOde degree,
through individual consecutive executions Of the switching-algo-
rithm, with an approximation power equal tO the one attainable
when performing N’ switching-steps.

3.3 Time requirements and statistics comparison for
different bounds and implementations on real datasets

We compared the performances Of the switching-algorithm when
applied tO a real large cancer genomics dataset, in terms Of exe-
cution time on a typical desktOp computer, by using different
software implementations and two user-deﬁned numbers Of
required switching-steps: our novel lower bound N and the em-
pirical one suggested in (MilO et al., 2003), N’. For the purpose Of
this comparison, we used breast cancer samples and their respect-
ive mutations downloaded from the TCGA (TCGA et al., 2008)
data portal. A BEM (provided as Supplementary Dataset) was
constructed from the deleterious somatic mutations derived from
this dataset (as detailed in the Supplementary Materials), yielding
757 rows (i.e. samples), 9757 columns (i.e. genes), 19 758 non-null
entries (i.e. variants), corresponding tO an edge density equal tO
0.27% in the corresponding bipartite network. For this dataset,
the lower bound tO the number Of switching step computed with
our methOd corresponds tO N = 97 951, whereas the empirical
one is N’ = 1975 800 (Supplementary Fig. S5). Results, in terms
Of execution times required tO generate 10 000 rewired versions Of
the resulting BEM through our implementation Of the switching-
algorithm, the rewire function Of the igraph package (Csardi and
Nepusz, 2006), the commsimulator function Of vegan package
(one Of the most famous packages for ecology research)
(Dixon, 2003) and two different numbers Of required switch-
ing-steps (respectively, N and N’), are summarized in Table 1.
In Table 1, we report also the residual average J accard similarity
scores Of the rewired networks with respect tO the original one.
First columns Of the table refer tO our Optimized implementation
Of the switching-algorithm, while data in the second and the third
ones refer tO the rewire function, provided in two different versions
Of the igraph package (respectively, v0.6.1 and the latest v0.6.5)
(Csardi and Nepusz, 2006). In the fourth column, we report time
requirements Of the commsimulator function contained in the
vegan package (Dixon, 2003) when used with the ‘swap’ methOd
parameter (i.e. the switching-algorithm). The rewire function con-
tained in igraph v0.6.1 does not implement the switching-algorithm
but proceeds through a series Of rewiring steps (detailed in the
Supplementary Materials) through a strategy that systematically
biases the edge selection and requires, at each step, a local explor-
ation Of the network that is generally slower than storing and
retrieving individual edges from an edge list (time complexity ana-
lysis provided in the Supplementary Materials). In the rewire func-
tion contained in the latest version Of the igraph package (v0.6.5),
authors implemented the switching-algorithm. As a consequence,
for this version Of the package, executing N switching-steps guar-
antees that the residual similarity reaches its plateau (as shown in
the third column Of Table 1). However, computational time re-
quirements for this implementation (third column in Table 1) are
vastly higher than the previous one, making this function practic-
ally unusable On large genomics datasets. A detailed analysis Of its
asymptotical time complexity (far from being trivial) has not been

 

i621

112 /§JO's112umO [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pop1201um0q

9IOZ ‘09 lsnﬁnv uo ::

A.Gobbi et al.

 

Table 1. Performance comparisons in terms Of execution time and residual bias across different algorithms and bounds

 

 

BiRewire igraph v0.6.1 igraph v0.6.5 vegan swap vegan Patefield
(A) Execution time
N 53 min 20s 5h 58s 43 days 154 days 5h 21 min 29s
6h 21 min 21h 36min(‘1
28 s
N’ 9h 47 days 2 years 145 days 8 years 114 days

37min30s 7h 37min55s

(B) Residual average Jaccard similarity

N 0.006716 0.907788 0.006744
0.006723(‘1

N’ 0.006744 0.299971

41min 12sa

22h 53 min 20 s(‘1

0.006762a 0.006921
0.006879a

 

N are: aEstimations.

included yet in the documentation Of the package. In Table 1, the
performance scores marked with (a) have been estimated starting
from the execution time requirements and the average residual
similarities Observed on limited number Of samples Of rewired ver-
sions Of the original network. For reference, we also include in
Table 1 the performances (in terms Of time requirements and re-
sidual similarity tO the original network) Of the r2a’table function,
included in the vegan package, tO generate 10000 random 0—1
tables with same marginal totals Of our BEM. This function
makes use Of Pateﬁelds algorithm (Pateﬁeld, 1981). Also in this
case, the time requirements were signiﬁcantly higher (~1.92 x 104
s versus ~3.2 x 103 s), and the residual similarity is comparable
with the one Obtained with our implementation Of the switching-
algorithm and our bound.

Finally, tO investigate the consistency Of ME signiﬁcance when
using null mOdels generated with different number Of switching
steps, we analysed ME patterns for the protein affecting muta-
tions Of a colorectal cancer dataset assembled from the TCGA
(TCGA et al., 2008) and other studies, as described in the
Supplementary Material. This yielded a small BEM (provided
as Supplementary Dataset) composed by 206 rows (i.e. samples),
78 columns (i.e. genes), 793 non-null entries (i.e. variants), cor-
responding tO an edge density equal tO 5% in the corresponding
bipartite network. For this dataset, the lower bound tO the
number Of switching step computed with our methOd corres-
ponds tO N = 2497, whereas the empirical one is N’=79 300.
We tested the ME signiﬁcance (as described in the MEMO ap-
proach and in the previous sections) for all the possible 3003 gene
pairs by using two different null mOdels, simulated by generating
10 000 randomized version Of the BEM through N and N’ switch-
ing steps, respectively. We Observed an overall concordance Of
resulting coverage P—values across the two null mOdels and a
perfect match between the corresponding two sets Of gene pairs
with a signiﬁcant ME (P<0.05 and fdr<20% after Benjamini—
Hochberg correction Of the P—values for multiple hypothesis test-
ing). Results for gene pair with coverage > 50% are provided as
Supplementary Data and Figure 2.

3.4 The BiRewire package

We have developed R package BiRewire (available on
Bioconductor; Gentleman et al., 2004), which provides high-

=,;-.«  FIKddA-Tpsd
3.5— e.- , '

 ERAS - wees
3 El .
- AKAPQI — TpﬁwﬁPﬁ - MECDM
EHAF- ERAS
2.5 — .I ATM - TF'53
I

2.1] - . - m.- _'J.': .

1.5—

1.0

—|ﬂgm p-value {N'}

0.5—

 

{1.0—

 

{1.0 0.5 1.0 115 2:0 2.5 3.0 3.5
-ldgm p-vaiue {N}

Fig. 2. ME P-value comparisons. ME P—values for 237 gene pairs, whose
coverage is > 50% in the BEM derived from the colorectal cancer data-
set. Positions On the two axes indicate —log10 P—values computed by using
two different null models simulated by generating 10 000 randomized
version Of the original BEM, through the switching algorithm and differ-
ent numbers Of switching steps: our novel lower bound and the empirical
one. An overall consistency Of P—values can be Observed and a set Of 11
gene pairs has a signiﬁcant level Of ME (at a false discovery rate < 20%)
on both the null models

performing routines for generating random bipartite graphs
with prescribed nOde degrees (using the switching-algorithm),
for the analysis Of convergence diagnostics across switching-
steps, and the estimation Of the minimal number Of steps accord-
ing tO the formula described in Equation (1). BiRewire is vastly
faster than other existing implementations, not only because it
uses our new lower bound but also because it implements an
Optimal version Of the switching-algorithm, as detailed in the
Supplementary Materials. Speciﬁcally, with BiRewire, users can
(i) create bipartite graphs starting from genomic binary event
matrices (or, generally, from any kind Of PAMs), (ii) perform
an analysis, which consists Of studying the sample path (time
series) Of the JI across switching-steps (with user-deﬁned sam-
pling times), and estimating the lower bound tO achieve

 

i622

112 /§JO's113umO [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pop1201um0q

9IOZ ‘09 lsnﬁnv uo ::

Genomic data randomization preserving alteration counts

 

convergence tO the uniform distribution on the set Of allowed
bipartite networks, (iii) generate rewired versions Of a bipartite
graph with the analytically derived bound Of switching-steps or a
user-deﬁned one and (iv) derive projections Of the starting net-
work and its rewired version and perform different graph-theory
analysis on them. All the functions Of the package are written in
C and R-wrapped.

4 CONCLUSIONS

We presented a novel approximate lower bound for the minimal
number Of steps required by the switching-algorithm tO simulate
genomic datasets from relevant null mOdels. This new lower
bound was derived analytically, and it considerably reduces the
computational time for estimating the signiﬁcance Of combina-
torial metrics such as mutation mutual exclusivity and co-occur-
rence under these null mOdels. We showed that this novel bound
strongly reduces computational time requirements, when tested
on a real dataset and a typical desktOp computer architecture
paired with the R package BiRewire (which we have developed).
Our methOds can be readily adapted tO the computation Of P-
values under similar null mOdels, which are appropriate for other
kinds Of data that can be modelled as a presence-absence matrix
(hence, a bipartite network) preserving the ‘presence—distribu-
tions’ both across rows and columns. We believe that its applic-
ability range covers different ﬁelds Of computational biology and
will grow in the future, as increasingly more data for which bi-
partite graphs provide a natural representation become available.

ACKNOWLEDGEMENT

We thank Ultan McDermott for a number Of insightful discus-
sions on the ideas underlying our manuscript. We thank Chris
Greenman and Michael Schubert for their helpful comments and
Martina Rossi for her kind help in editing and formatting our
formal prOOf.

Funding: F.I. has been partially funded by the jOint EMBL-EBI
and Wellcome Trust Sanger Institute post-doctoral (ESPOD)
programme.

Conﬂict of Interest: none declared.

REFERENCES

Barabasi,A.L. et al. (1999) Mean-ﬁeld theory for scale-free random networks.
Physica A, 272, 173—187.

Barretina,J. et al. (2012) The Cancer Cell Line Encyclopedia enables predictive
modelling Of anticancer drug sensitivity. Nature, 483, 603—607.

Besag,J. and Clifford,P. (1989) Generalized montecarlo signiﬁcance tests.
Biometrika, 76, 633—642.

Bignell,G.R. et al. (2010) Signatures Of mutation and selection in the cancer genome.
Nature, 463, 893—898.

Brooks,S.P. and Gelman,A. (1998) General methods for monitoring convergence Of
iterative simulations. J. Comput. Graph. Stat., 7, 434—455.

Brousseau,A. (1971) Linear Recursion and Fibonacci Sequences. The Fibonacci as-
sociation, San Jose (CA) USA.

Cancer Genome Atlas Research Network. (2008) Comprehensive genomic charac-
terization deﬁnes human glioblastoma genes and core pathways. Nature, 455,
1061—1068.

Ciriello,G. et al. (2012) Mutual exclusivity analysis identiﬁes oncogenic network
modules. Genome Res, 22, 398—406.

Connor,E.F. and Simberloff,D. (1979) The assembly Of species communities: chance
or competition? Ecology, 60, 1132—1140.

Csardi,G. and Nepusz,T. (2006) The igraph software package for complex network
research. Int. J. Complex Syst., 38, 1695.

Cui,Q. (2010) A network Of cancer genes with co-occurring and anti-co-occurring
mutations. PLoS One, 5, 613180.

Dixon,P. (2003) VEGAN, a package Of R functions for community ecology. J. Veg.
Sci., 5, 613180.

Garnett,M.J. et al. (2012) Systematic identiﬁcation Of genomic markers Of drug
sensitivity in cancer cells. Nature, 483, 570—575.

Gentleman,R.C. et al. (2004) Bioconductor: Open software development for com-
putational biology and bioinformatics. Genome Biol, 5, R80.

Gotelli,N.J. (2000) Null model analysis Of species co-occurrence patterns. Ecology,
81, 2606—2621.

Gotelli,N.J. and Entsminger,G.L. (2001) Swap and ﬁll algorithms in null model
analy-sis: rethinking the knight’s tour. Oecologia, 129, 281—291.

Greenman,C. et al. (2007) Patterns Of somatic mutation in human cancer genomes.
Nature, 446, 153—158.

Gross,J.L. and Yellen,J. (2006) Graph Theory and Its Applications. Chapman and
HallCRC, Boca Raton (FL) USA.

Gu,Y. et al. (2010) Systematic interpretation Of comutated genes in large-scale
cancer mutation proﬁles. Mol. Cancer T her., 9, 2186—2195.

Hanahan,D. and Weinberg,R.A. (2011) Hallmarks Of cancer: the next generation.
Cell, 144, 646—674.

Ihaka,R. and Gentleman,R. (1996) R: a language for data analysis and graphics.
J. Computat. Graph. Stat., 5, 299—314.

International Cancer Genome Consortium et al. (2010) International network Of
cancer genome projects. Nature, 464, 993—998.

J accard,P. (1901) Etude comparative de la distribution ﬂorale dans une portion des
Alpes et du J ura. Bulletin de la Socit Vaudoise des Sciences Naturelles, 37, 142.

Johnson,V.E. (1996) Studying convergence Of Markov chain Monte Carlo algo-
rithms using coupled sample paths. J. Am. Stat. Assoc, 91, 154—166.

MiklOs,I. and Podani,J. (2004) Randomization Of presence-absence matrices: com-
ments and new algorithms. Ecology, 85, 86—92.

Miller,C.A. et al. (2011) Discovering functional modules by identifying recurrent
and mutually exclusive mutational patterns in tumors. BM C Med. Genomics, 85,
86—92.

MilO,R. et al. (2003) On the uniform generation Of random graphs with prescribed
degree sequences. In: Arxiv preprint cond-mat. 0312028.

Pateﬁeld,W.M. (1981) Algorithm AS 159: an efﬁcient method Of generating random
RxC tables with given row and column totals. J. R. Stat. Soc., 30, 91—97.
Ponocny,I. (2001) Nonparametric goodness-Of-ﬁt tests for the Rasch model.

Psychometrika, 66, 437—459.

Rasch,G. (1993) Probabilistic Models for Some Intelligence and Attainment Tests.
University Of Chicago Press, Chicago (IL) USA.

Ray,J. et al. (2012) Are we there yet? When to stop a markov chain while generat-
ing random graphs. In: Bonato, A. and J anssen, J. (eds) Algorithms and Models
for the Web Graph. Lecture Notes in Computer Science. Vol. 7323, Springer,
Berlin Heidelberg, pp. 153—164.

SOkal,A.D. (1989) Monte Carlo methods in statistical mechanics: foundations and
new algorithms Functional Integration. NAT 0 ASI Series, 361, 131—192.

Stanton,I. and Pinar,A. (2012) Constructing and sampling graphs with a prescribed
joint degree distribution. J. Exp. Algorithmics, 17, 3.1.

Stratton,M.R. et al. (2009) The cancer genome. Nature, 458, 719—724.

Th0mas,R.K. et al. (2007) High-throughput oncogene mutation proﬁling in human
cancer. Nat. Genetics, 39, 567.

Uren,A.G. et al. (2008) Large-scale mutagenesis in p19ARF-and p53-deﬁcient mice
identiﬁes cancer genes and yheir collaborative networks. Cell, 133, 727—741.
Vandin,F. et al. (2012) De novo discovery Of mutated driver pathways in cancer.

Genome Res, 22, 375—385.

Vogelstein,B. et al. (2013) Cancer genome landscapes. Science, 339, 1546—1558.

Wilson,J.B. (1987) Methods for detecting non-randomness in species co-
occurrences: a contribution. Oecologia, 73, 579—582.

Yeang,C.H. et al. (2008) Combinatorial patterns Of somatic gene mutations in
cancer. FASEB J ., 22, 2605—2622.

 

i623

112 /8JO's112urnO IPJOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pop1201um0q

9IOZ ‘09 lsnﬁnv uo ::

