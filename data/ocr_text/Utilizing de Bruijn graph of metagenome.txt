Bioinformatics, 32(7), 2016, 1001—1008

doi: 10.1093/bioinformatics/btv510

Advance Access Publication Date: 29 August 2015
Original Paper

 

Sequence analysis

Utilizing de Bruijn graph of metagenome
assembly for metatranscriptome analysis

Yuzhen Ye* and Haixu Tang

School of Informatics and Computing, Indiana University, Bloomington, IN 47405, USA

*To whom correspondence should be addressed.
Associate Editor: Jan Korbel

Received on March 10, 2015; revised on June 3, 2015; accepted on August 24, 2015

Abstract

Motivation: Metagenomics research has accelerated the studies of microbial organisms, providing
insights into the composition and potential functionality of various microbial communities.
Metatranscriptomics (studies of the transcripts from a mixture of microbial species) and other
meta—omics approaches hold even greater promise for providing additional insights into functional
and regulatory characteristics of the microbial communities. Current metatranscriptomics projects
are often carried out without matched metagenomic datasets (of the same microbial communities).
For the projects that produce both metatranscriptomic and metagenomic datasets, their analyses
are often not integrated. Metagenome assemblies are far from perfect, partially explaining why
metagenome assemblies are not used for the analysis of metatranscriptomic datasets.

Results: Here, we report a reads mapping algorithm for mapping of short reads onto a de Bruijn
graph of assemblies. A hash table of junction k—mers (k—mers spanning branching structures in the
de Bruijn graph) is used to facilitate fast mapping of reads to the graph. We developed an applica—
tion of this mapping algorithm: a reference—based approach to metatranscriptome assembly using
graphs of metagenome assembly as the reference. Our results show that this new approach (called
TAG) helps to assemble substantially more transcripts that otherwise would have been missed or
truncated because of the fragmented nature of the reference metagenome.

Availability and implementation: TAG was implemented in C++ and has been tested extensively
on the Linux platform. It is available for download as open source at http://omics.informatics.indiana.
edu/TAG.

Contact: yye@indiana.edu

 

1 Introduction

 

Metagenomes are being generated at an accelerating pace, reveal—
ing important properties of microbiomes. Other meta—omic (e.g.
metatranscriptomic and metaproteomic) techniques can provide
additional insights, in particular into functional characteristics of
microbial communities, such as gene activities and their regulatory
mechanisms. Bacteria have low inventories of short—lived mRNAs;
as such, fluctuations in their mRNA pools provide a highly sensi-
tive bioassay for environmental signals [e.g. the concentrations of
dissolved organic carbon (Shi et 61]., 2012) and pollutant concen—
trations (de Menezes et 61]., 2012) relevant to microbes (Moran
et 61]., 2013)]. The acquisition of meta—omics data on human

©The Author 2015. Published by Oxford University Press.

microbiomes Will enable us to refine the annotations of the metage—
nomes [the ENCODE (Dunham et 61]., 2012) and modENCODE
(Roy et 61]., 2010) projects are great exemplars], and more import-
antly to study gene activity and its regulation (Maurice et 61].,
2013) in complex microbial communities in order to understand
how microbial organisms work as a community in response to
changes in their environment, e.g. health conditions of their human
hosts (Jorth et 61]., 2014). A recent metatranscriptomic study of the
human oral microbiome using patient—matched healthy and
diseased (periodontal) samples revealed that health— and disease—
associated communities exhibit defined differences in metabolism
that are conserved between patients While the metabolic gene

1001

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/Iicenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

112 /§JO'S{eu1no [p.IOJXO'SSUBUHOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

1002

Y. Ye and H. Tang

 

expression of individual species was highly variable between pa—
tients (Jorth et 61]., 2014).

In a metatranscriptomic RNA—seq study, total RNA is first iso—
lated from the sample (with rRNAs removed to enrich for mRNA),
which is then reverse transcribed into cDNA, and subjected to
sequencing using next—generation sequencing platforms (Gosalbes
et 61]., 2011). Unlike metagenomics, which reveals potential activity
(as reflected in genes or pathways that can be coded for by metage—
nomic sequences), metatranscriptomic data indicate which of the
genes/metabolic pathways are actually active (and the level of their
activities) on the basis of their transcription within the community.
Giannoukos et al. (2012) presented a protocol for metatranscrip—
tomic analysis of bacterial communities that accommodates both in—
tact and fragmented RNA and combines efficient rRNA removal
with strand—specific RNA—seq. Currently, only a handful of meta—
transcriptomic datasets are available (and metaproteomic datasets
are even scarcer), but we envision a ﬂood of metatranscriptomic
data in the near future, as experimental techniques mature
(Franzosa et 61]., 2014; Giannoukos et 61]., 2012).

Metatranscriptome analyses typically include the assignment of
the predicted function and taxonomic origin of RNA—seq reads, by
directly searching metatranscriptomic sequences (bags of reads)
against prokaryotic genomes (the reference genomes) (Leimena
et 61]., 2013) or known protein sequences (Franzosa et 61]., 2014).
This way, tools and pipelines—including MG—RAST (Meyer et 61].,
2008), MEGAN (Huson et 61]., 2011) and HUMAnN (Abubucker et
61]., 2012)—that have been developed for metagenome data analysis
can be utilized for analyzing metatranscriptomic datasets. For ex—
ample, Franzosa et al. (2014) analysed metagenomic and metatran—
scriptomic datasets of human gut microbiomes using the HUMAnN
pipeline, revealing that metatranscriptional profiles were signifi-
cantly more individualized than DNA—level functional profiles. One
potential pitfall of such approaches is that they cannot identify tran—
scripts of new genes, which however may be better annotated using
assembly approaches (de 110120 or reference based). A recent study
(Celaj et 61]., 2014) compared the performances of currently em-
ployed transcriptome assemblers—including Trinity (Grabherr
et 61]., 2011), Cases (Schulz et 61]., 2012a), Metavelvet (Namiki
et 61]., 2012) and IDBA—MT (Leung et 61]., 2013)—and showed that
assembly helps to improve the rate of functional annotation for
metatranscriptomic datasets.

A matched metagenome can be helpful for the analysis of meta—
transcriptomic dataset. Metagenomes are often represented as con-
tigs and scaffolds (although de Bruijn graphs are often the
underlying data structure of the assemblers that were used), and are
fragmented, limiting the utilization of metagenome for metatran—
scriptome analysis. There are pros and cons with the contig (and
scaffold) representations of metagenomes. Most existing computa—
tional tools for sequence analysis work with linear representations
of assemblies, so these tools (or modified versions) can be employed
to analyse these representations of metagenomes. However, metage-
nomes are often very fragmented, and the connections between con—
tigs or scaffolds are not captured in linear representations, which
otherwise could be utilized later. For example, after we assembled
two metagenomic datasets of stool samples from the Human
Microbiome Project (Huttenhower et 61]., 2012), the total lengths of
scaffolds and contigs (2300 bp) reported by SOAPdenovoZ (Luo
et 61]., 2012) were about 85 and 90 Mb, respectively, whereas the
total length of the edge sequences in the de Bruijn graph from the
same assembly was 150 Mb for each. This comparison indicates that
the de Bruijn graph representation of the assembly contains 50%
more sequences than scaffolds reported from the assembler: most of

these extra sequences are relatively fragmented sequences connect—
ing long contigs. Furthermore, many short contigs contain only gene
fragments; even long contigs contain broken genes at their ends due
to the complexity of metagenome assembly (Wu et 61]., 2012b).

Here, we propose a novel application of de Bruijn graphs for
metatranscriptomic data analyses, taking advantage of the fact that
de Bruijn graph representations of metagenome assemblies contain
more information than the contigs and scaffolds reported by assem—
blers. The de Bruijn graph was first proposed for de novo genome
assembly in EULER, replacing the traversal of Hamiltonian paths in
the overlap graph by the traversal of Eulerian paths (Pevzner et 61].,
2001), and is now employed as an efficient data structure in most
short—read assemblers [e.g. Velvet (Zerbino and Birney, 2008),
ALLPATHS-LG (Gnerre et al., 2011), SOAPdenovo (Li et al., 2010)
and IDBA-UD (Peng et al., 2012)] for single genomes and metage—
nomes. Our approaches based on de Bruijn graph representation of
metagenomes provide a natural way of compressing the data, and,
more importantly, allow direct utilization of the graphs. We note
that we have developed several applications previously, based on de
Bruijn graph representation of genomes and metagenomes, for min—
ing of functional elements (Wu et 61]., 2012a) and reads mapping
(Wang et 61]., 2012), demonstrating the utility of direct computation
on de Bruijn graphs. Application of our method to simulated and
real metatranscriptomic datasets showed that our approach can sig—
nificantly improve the assembly of metatranscriptomic datasets, re—
sulting in substantially more transcripts that otherwise would have
been missed or truncated because of the fragmented nature of the
reference metagenome.

2 Methods

In this article, we propose a novel algorithm (i.e. reangmp/o) for
aligning short reads from RNA-seq experiments to de Bruijn graphs
of assemblies. We note in this article we focused on de Bruijn graphs
of metagenome assemblies, but the mapping algorithm can be
applied to mapping short reads to any de Bruijn graph of assembly.
We also developed an application of the mapping algorithm for
metatranscriptome assembly using matched metagenomes as the ref—
erence. Based on reads mapping results, we will derive putative tran—
scripts (encoding a single bacterial gene or multiple genes within an
operon), using paired—end RNA—seq reads to traverse the de Bruijn
graph. We named our transcript assembly approach TAG, in which
TA stands for Transcript Assembly, and G is used to emphasize the
fact that our approach utilizes the graph of metagenome assembly
instead of the linear sequences. We note that our method is different
from the de novo approaches to transcriptome assembly, including
Trinity (Grabherr et al., 2011), IDBA—MT (Leung et 61]., 2013) [and
also a hybrid approach (Leung et 61]., 2014) that utilizes known
protein sequences], and that it is different from the traditional
reference—based assembly approaches. In our method, metatran—
scriptomic sequences are mapped onto matched metagenomes repre-
sented as de Bruijn graphs. So our method represents a new variant
of the reference—based approaches, which uses the de Bruijn graph of
matched metagenome, instead of a genome (or a collection of gen—
omes), as the reference.

2.1 Fast reads mapping onto de Bruijn graph using a
hash table of k—mers spanning branching structure in
the graph

Given a de Bruijn graph, more exactly, a contracted de Bruijn graph
(Cazaux et 61]., 2014; Chang et 61]., 2015), in which each edge

112 /§JO'S{eu1no [p.IOJXO'SOTlBIIHOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘09 lsnﬁnv uo ::

Metagenome assembly graph for metatranscriptome analysis

1003

 

 

 

 

 

 

 

 

Hash table of A

junction k-mers M—r

k-mer Reads B

@ A z @ :
C

@ A B 1 ® :

@ C D D _

® D <—o—>o—’ a

Fig. 1. A schematic illustration of the algorithm for mapping reads onto de
Bruijn graphs. (a) A toy example showing four reads spanning junction
k-mers in the graph (shown as the vertices). (b) Using a hash table ofjunction
k—mers, candidates of reads that span multiple edges can be retrieved by
looking up in the table. (c) For each candidate, a matched k—mer determines a
unique putative location of the read in the graph (i.e. a seed match). The seed
match will then be used to constrain the alignment between the read and the
graph by a dynamic programming algorithm

represents an assembled unique sequence from metagenomic reads,
and a set of short reads from an RNA—seq experiment, the goal of
our read2graph algorithm is to find the location of each read on the
graph. Because bacterial genes do not have split gene structure, we
can assume each read should be contained in the graph as a whole;
equivalently, each read, if its location in the graph is known, can be
represented as a path (i.e. sequence of edges) in the graph. The reads,
therefore, can be classified into two groups depending on the path
length: some reads are located within a single edge, whereas many
others may cross one or more vertices in the graph. The first class of
reads can be mapped to the graph using conventional fast reads
mapping algorithms by using all edge sequences longer than the read
length as the target sequences. In this article, we used Bowtie 2
(Langmead and Salzberg, 2012) for this purpose; but other mapping
algorithms including BWA (Li and Durbin, 2009) can be used. Here,
we focus on the methods for mapping reads spanning multiple edges
(i.e. multi-edge-spanning reads; see Fig. 1), which cannot be mapped
using conventional mapping algorithms. A substantial number of
reads may belong to this class, due to the incompleteness of metage—
nome assembly.

Recall that each vertex in the de Bruijn graph represents a k—mer
in metagenomic reads [typically [a :23—31 for metagenome assem—
bly (Huttenhower et 61]., 2012; Qin et 61]., 2010)]. Therefore, as illus—
trated in Figure 1, each multi—edge—spanning read contains one or
more junction k—mers (i.e. corresponding to vertices with either inde—
gree or outdegree >1): reads A and D span three edges in the graph,
and thus each contains two such k—mers, whereas reads B and C
span two edges, and thus each contains one such k—mer (Fig. 2a).
Hence, we can build a hash table for all junction k-mers that span
branching structures in the de Bruijn graph assembly and then
search for their exact occurrences in each putative multi—edge—
spanning read (i.e., those that cannot be mapped to the edge se—
quences) with the assistance of the hash table (Fig. 1b). Because each
k-mer in the de Bruijn graph is unique (Pevzner et 61]., 2001), every
k—mer in a read matches at most one k—mer stored in the hash table.
Each matched k—mer determines a unique putative location of the
multi-edge—spanning read in the graph (i.e. a seed match between the
read and the graph), and simultaneously breaks the read into two or

 

Induced D
transcript

 

D

Fig. 2. A schematic example illustrating the induced transcript graph derived
from four reads (A—D) mapped to a de Bruijn graph of metagenome assembly

more segments (Fig. 1c). The seed match will then be used to con—
strain the alignment between the read and the graph, starting from
the seed match, going in opposite directions, using a constrained dy—
namic programming algorithm allowing only a small number of
indels and mismatches. The bandwidth for constrained alignment is
set to 7 by default for metatranscriptome assembly using matched
metagenome as the reference, and this parameter can be changed by
users for other purposes.

The mapping of multi-edge—spanning reads should run fast and
consume reasonable memory because usually there are only hun—
dreds of thousands of junction k—mers in a typical metagenome as—
sembly in practice. We note that the multi—edge—spanning reads
considered here are different from the split reads considered in tran—
script assembly for eukaryotes (Grabherr et 61]., 2011), and in rare
cases for archaeal species (due to tRNA splicing and self-splicing in-
trons) (Doose et 61]., 2013). Since strand—specific RNA—seq protocols
are often used in metatranscriptome analysis (Giannoukos et 61].,
2012), our algorithm can consider the strand information and map
reads to one appropriate strand in the de Bruijn graph that contains
sequences from both DNA strands (and thus is symmetric).

2.2 Construction of transcripts from mapped reads

Once all RNA—seq reads including multi—edge—spanning reads are
mapped to the graph, each read can be represented by a path
(referred to as the read pat/o) traversing the graph < e1, 62, . . . ,6; >
(61,192,  ,6; are edges; for non—multi—edge—spanning reads, path
length l = 1) as well as two offset values representing the locations
of the read in the first and last edges in the graph. Furthermore, in
most cases, two paired—end reads can also be represented as a path
(i.e. the read-pair pat/o) if there exists a unique path in the graph
whose length is consistent with the expected insert size. As a result,
the assembly of RNA—seq reads is equivalent to the superpath prob—
lem, which attempts to find a minimal set of superpaths (each cor—
responding to a transcript) that covers a given set of paths in a de
Bruijn graph (Nagarajan and Pop, 2009). Although this problem is
generally hard, we can represent the solutions of the problem in a
much simpler subgraph (the transcript graph) that contains only the
edges present in at least one of the read paths or read—pair paths.
Figure 2 shows such an example: assuming four read paths (A, B, C
and D) are derived from multi—edge—spanning reads, we will induce
the transcript graph by retaining all edges in these paths, and then

112 /§JO'S{12u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

1004

Y. Ye and H. Tang

 

contracting all vertices with both indegree and outdegree of 1. We
note that many read paths may contract into a single edge in the
transcript graph if they are not tangled with reads from another
transcript (e.g. k1 and k4 in Fig. 2 can be contracted because there
are no conflicting transcript reads traversing through these nodes);
as a result, the corresponding transcript sequences can be retrieved
as a subsequence of an edge sequence in the transcript graph. In
other cases, read paths remain spanning multiple edges in the tran-
script graph. These read paths sometimes can be used to further
simplify transcript graph, as illustrated in the heuristic algorithms
in genome assembly (Pevzner et al., 2001; Zerbino and Birney,
2008). For instance, in the example shown in Figure 2, if we have
two read—pair paths spanning AC and BD, respectively, we can ob—
tain two resolved transcripts from the graph. Otherwise, we can
only obtain partial transcript sequences. We note that, even if the
transcripts cannot be fully resolved, the transcript graph is still
useful for inferring the abundances of putative transcripts in a
metatranscriptome sample based on the counts of reads on the
edges in the transcript graph, a problem similar to the inference of
splicing variants in eukaryotic RNA—seq experiments (see Pachter,
2011 for a review).

2.3 Metatranscriptome assembly using metagenome
assembly graph as the reference

Our approach for metatranscriptome assembly (called TAG) is
based on the read2graph mapping algorithm and the transcript con-
struction approach as described above. Given a metatranscriptomic
dataset and a matched metagenomic dataset, SOAPdenov02 (Luo
et al., 2012), one commonly used assembler in metagenomic shot—
gun sequencing, is used to assemble the metagenomic dataset.
Notably, SOAPdenov02 is a de Bruijn graph—based assembler, and
in its final output, both the de Bruijn assembly graph and the contig
sequences (representing the edges in the graph) are produced. The
mapping of metatranscriptomic sequences to the de Bruijn graph is
conducted in two consecutive steps: (1) all reads are first mapped to
the edges (i.e. contigs) in the de Bruijn graph using Bowtie 2 (version
2.2.3) (Langmead and Salzberg, 2012), and then, (2) the un—mapped
reads in the previous step are further mapped to the graph based on
the matching with junction k—mers. Next, TAG traverses the de
Bruijn graph along with the mapped metatranscriptomic reads, and
reports the transcripts that may span multiple edges in the assembly
graph. To use the strand—specific information, the mapping of a
metatranscriptomic sequence is only considered for the strand of the
read that represents the transcript (i.e. the forward strand of R2
reads and the reverse—complement strand of R1 reads for the data—
sets we have tested). We note that other short read assemblers [such
as IDBA (Peng et al., 2012)] and mapping tools [such as BWA (Li
and Durbin, 2009)] can be utilized for generating the inputs (i.e. the
de Bruijn assembly graph and the mapping of metatranscriptomic
reads to contigs) for TAG. For the rest of this article, we will focus
on the utility of TAG on improving the assembly of transcripts,
which will be demonstrated by using the SOAPdenov02 and
Bowtie2 tools. The construction of an optimal pipeline (in particular
the selection of upstream software tools) utilizing TAG is beyond
the scope of this article.

3 Results

We tested our tool (TAG) on two metatranscriptomic datasets
(Giannoukos et al., 2012): one derived from a mock microbial com-
munity consisting of three bacterial species, and the other derived

from a real microbiome sample in human stool. Results showed that
our graph—based reads mapping algorithm (read2graph) is efficient,
and TAG, which is based on the mapping algorithm, significantly
improves the assembly of metatranscriptomes by considering reads
mapping to branching structures in de Bruijn graphs of matched
metagenomes.

3.1 Evaluation of assembly accuracy on a

mock dataset

We first tested TAG using a metranscriptomic data from the mock
bacterial community of three species (Giannoukos et al., 2012). The
‘matched’ metagenomic dataset used in TAG were simulated from
the reference genomes of these bacteria [Escherichia coli (GenBank:
NC_000913.3), Perkinsus marinas (GenBank: NC_005072.1) and
Rhodohacter sphaeroides (GenBank: NC_007493.2)] using NeSSM
(Jia et al., 2013) with the Illumina error model. We used this hybrid
approach here because (1) there is currently no metatranscriptomic
dataset from a mock community with a matched metagenomic data—
set available, and (2) there is no proper software tool for simulating
metatranscriptomic dataset. (Flex Simulator is a tool for simulating
RNAseq data for single species, and it has been mainly used for eu—
karyotic species. Bacteria have complicated transcription regulation
mechanisms, which are not completely understood.) In total,
1M paired—end reads of length 101 bp (i.e. ~20 >< coverage) were
simulated from the three species with equal abundances.
SOAPdenov2 (version 2.04—r240) (k = 31; see below for the choice
of k—mer size) was used to assemble the simulated reads, and the as—
sembly results (including the contigs and the de Bruijn assembly
graph) were then used as the inputs to TAG. Because this is a simple
community with bacterial species that are phylogenetically distant
(Giannoukos et al., 2012), the assembly graph of the metagenome is
not very tangled, and thus we do not anticipate that many tran—
scripts reported by TAG will span multiple edges (referred to as the
multi—edge transcripts) in the assembly graph. In fact, TAG reported
a total of 9428 transcripts (of 2100 bp), among which only 138 are
multi—edge spanning transcripts.

3.1.1 Accuracy evaluation for the TAG transcripts

We blasted transcripts assembled by TAG against the three reference
genomes to evaluate the accuracy of metatranscriptome assembly.
Our results showed that only 16 out of 9428 (0.17%) transcripts
cannot be perfectly aligned back to the reference genomes: among
the 16 transcripts, 14 can be aligned with minor differences, and
only two contain potentially serious problems (see Table 1). We
note that there are two types of potential errors in the transcripts
assembled by TAG: the errors introduced by TAG, and the errors in-
herited from the metagenome assembly (i.e. the mis—assemblies pre—
sent in the metagenome assembly that propagates into the
transcript). One of the problematic transcript is single—edge tran—
script, suggesting that this assembly error was propagated from the
metagenome assembly. The other problematic transcript (of 390 bp)
is a multi—edge spanning transcript, and the error was introduced by
TAG (as no matching sequence can be found in the metagenome as—
sembly). Our results suggest that TAG achieves high assembly accur—
acy overall with an error rate of <<1%. If we only focused on
multi-edge spanning transcripts (which are more difficult to assem—
ble than transcripts contained within edges and therefore more error
prone), the assembly error rate is still very low: only one out of 138
multi—edge transcripts contains such large assembly problem (the
error rate is 0.7%).

112 /810'S{12u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Metagenome assembly graph for metatranscriptome analysis

1005

 

Table 1. Performance comparison of TAG and other assemblers on the mock dataset

 

Oases

Trinity TAG

 

No. of transcriptsa 12598
Perfectly aligned transcripts (percentage)C
Transcripts with minor problems (percentage)C

5483 (43.5%)
2724 (21.6%)

24804b 9428
12392 (50.0%) 9412 (99.8%)
2725 (11.0%) 14 (0.15%)

Problematic transcripts (percentage)C 4391 (34.9%)d 9687 (39.1%)d 2 (0.02%)
Total length of the transcripts 6860841 bp 7428187 bp 7020975 bp
Total length of perfectly aligned transcripts 2265224 bp 3858486 bp 7002290 bp
Total length of good transcripts 4076481 bp 5025072 bp 7020484 bp

 

aOnly transcripts of at least 100 bp were considered for all programs.

bTrinity has many more transcripts, but their total length is comparable to the other methods.

CA transcri t that is erfectl ali ned to one of the reference enomes with an ali nment coverin the entire transcri t at 100% se uence identit ) is considered
P P y g g g g P ‘1 y

to be correctly assembled. We consider the problem of a transcript is ‘minor’ if its longest alignment with the reference genomes is not 10 nt shorter than the tran-

script and the alignment has 95 % sequence identity or better. Other transcripts that do not meet these criteria are considered to be problematic.

dA large fraction of the problematic transcripts for Oases and Trinity are likely caused by the presence of contaminated sequences or other artifacts so should

not be considered as mis-assemblies. For example, 3494 (out of 4391) Oases transcripts have no signiﬁcant alignments with the reference genomes with E-Values

better than 1e — 4, and therefore are unlikely transcripts from the reference genomes.

3.1.2 Comparison with de novo assembly

We further compared the performance of TAG with Oases (version
1.2.10) (Schulz et al., 2012a) and Trinity (release 2014—07—17)
(Grabherr et al., 2011), de novo assemblers for transcriptomic se—
quences. (Trinity has been applied to analyse metatranscriptomic
datasets (Celaj et al., 2014), although the program was developed
targeting splicing isoforms in Eukaryotes.) For Oases, we used
merged results from assemblies using le-mer sizes ranging from 19
to 31. Table 1 summarizes the comparison results. Although Oases
and Trinity produced larger numbers of transcripts than TAG, the
total bases in the transcripts assembled by these three methods are
comparable (i.e. TAG assembled longer transcripts). If we con—
sidered only the ‘good’ transcripts by excluding the transcripts that
cannot be aligned well to the reference genomes [which are likely
misassembles, or assemblies from contaminated sequences or other
artifacts commonly found in RNA—seq experiments (Lahens et al.,
2014)], the difference in the total lengths of transcripts is even
more significant. TAG produced a total of 9426 good transcripts
with a total of 7020484 bp, while Oases and Trinity assembled
transcripts of 407648 and 5 025 072 total bases, respectively. This
result shows that using reference genomes for metatranscriptome
assembly helps to improve the coverage and quality of the
assemblies.

We ran CD-HIT-EST (version 4.6) (Li and Godzik, 2006) to
cluster the good transcripts from all programs at 95% sequence
identity cutoff (—c 0.95), resulting in 10 944 clusters: only a modest
number of clusters (2309) are shared by all methods, 2965 clusters
are shared by two methods (1399 shared Trinity and Oases; 1369
by Trinity and TAG; and 116 by TAG and Oases), and the remain—
ing clusters are unique to one method (TAG: 2571, Trinity: 2983,
and Oases: 197). We quantified the abundances of the transcripts by
mapping metatranscriptomic sequences onto the transcripts using
Bowtie2. The transcripts that are shared by all methods are highly
abundant with an average coverage of 28.2 (i.e. on average, each
position is covered by 28.2 reads). In contrast, the average abun—
dances of the transcripts that can be assembled by Oases, Trinity
and TAG are 11.4, 8.0 and 6.4, respectively. This result suggests
that de novo assembly and reference—based approaches can comple—
ment each other: transcripts of highly expressed genes in rare species
(and therefore less well represented in metagenomes) may be
assembled by de novo assembly, while transcripts of low expression
level can be better identified using reference—based approaches.

3.2 Application of TAG to a real metatranscriptomic
dataset

We applied TAG to analysing a metatranscriptomic dataset derived
from a human stool sample, using its matched metagenomic dataset
as the reference (Giannoukos et al., 2012). (We combined the meta—
transcriptomic reads from four fractions of sequencing of the same
sample, downloaded from SRA (SRX130930, SRX130937,
SRX130922 and SRX130928), and the metagenomic reads from
four fractions of sequencing, also downloaded from SRA
(SRX130930, SRX130954, SRX130936 and SRX130949). Note
that we used the metatranscriptomic dataset sequenced on 5 ug
RNA extracted from an individual’s stool microbiome, which was
shown to yield the best sequencing results (Giannoukos et al.,
2012).) As described above, the metagenomic sequences were first
assembled using SOAPdenov02, and the metagenome assembly was
then used as the reference for the metatranscriptome assembly by

TAG.

3.2.1 Time and memory cost of the reads mapping to the de Bruijn
graph

Metatranscriptome assembly by TAG (including reads mapping
onto the graph and the transcript inference afterwards) for this data—
set takes about 7 min to complete on a Linux computer with Intel(R)
Xeon(R) CPU E5 —2680 v2 @ 2.80 GHz (using single processor). The
actual reads mapping step takes about 1 min to complete—the re—
maining 6min were spent on other I/O steps including processing
the input SAM alignment file (from Bowtie2) and reads files. This
indicates that our graph—based reads mapping algorithm (read2-
graph) is efficient. TAG adds only a small amount of computational
time to the whole pipeline for the metatranscriptome analysis—
SOAPdenov02 takes several hours to assemble the metagenome, and
mapping metatranscriptomic reads onto the metagenome contigs by
Bowtie2 takes about 1700 CPU minutes (the actual job was done in
parallel using 32 processors).

The memory consumption by TAG is bounded by the size of the
input metagenome assembly (which is used as the reference). TAG
consumed <2 GB RAM for the stool dataset. It shows another ad—
vantage of using metagenome assembly as the reference for meta—
transcriptome analysis, since de Bruijn graph provides a compact
representation of the metagenome assembly (but still keeps the
uncertainties of the assembly in the graph for future applications).

112 /810'S{12u1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

1006

Y. Ye and H. Tang

 

 

 

 

 

 

3.5e+07

-e— single—edge & multi—edge transcripts combined
- EI- single—edge transcripts only

total length of the transcripts (nt)

 

 

3.2e+07

 

26 28 30 32 34
k—mer

Fig. 3. The impact of k—mer size on the performance of TAG. When the k—mer
size increases from 25 to 31 in SOAPdenov02 assembly, the performance of
TAG remains the same: a substantial fraction of multi-edge transcripts can be
assembled by TAG. However, when further increasing the k—mer size to 35,
most transcripts assembled by TAG are single-edge transcripts, indicating
the TAG algorithm is not effective when a large k—mer is used. This is prob-
ably because, in this case, the metagenome assembly is fragmented rather
than tangled, and as a result the total length of the transcript also decreases.
Therefore, in the experiments of this article, we choose k=31 in
SOAPdenov02 assembly, which seems to yield the best results here

 

 

 

 

 

 

 

 

 

 

 

’m‘
'8 1200 —
(t5
9
O 1000 —
E.
E 800 —
8 600 —
(U
“.3
B 400 —
g 200 —
E
z 0 —
1 2 3 4 5 6 7
Path length

Fig. 4. The path length distribution for multi-edge-spanning reads that span
two or more edges when mapped to the de Bruijn graph by TAG. The X-axis
represents the length of multi-edge-spanning read paths (i.e. the number of
edges that the multi-edge-spanning reads span) and the Y-axis represents the
total number of multi-edge-spanning reads spanning the paths of certain
lengths. Paths of length 1 represent the cases when the seed extension in one
direction resulted in an alignment of at most 7 bp, and thus were considered
insignificant and discarded

3.2.2 Exploiting tangles in de Bruijn graph to improve
metatranscriptome assembly

We tested the performance of TAG using reference metagenomes
assembled with different le—mer sizes, considering that the choice of
le-mer size is important for the metagenome assembly (Li et al.,
2010; Zerbino and Birney, 2008) and therefore metatranscriptome
assembly. As shown in Figure 3, when a relatively small le—mer (e.g.
25) was used, the metagenome assemblies are more tangled, and as
a result, fewer transcripts can be assembled using the contigs as the
reference. This pitfall, however, can be alleviated by retaining
the tangled structure (i.e. the ambiguous connection caused by short
repeats) in the metagenome assembly in the de Bruijn graph,
which can be exploited by TAG to connect metatranscriptomic
reads into complete transcripts, resulting in improved assembly of
metatranscriptome.

As shown in Figure 3, the total length of the assembled tran—
scripts by TAG decreases slowly when le—mer size increases from 25
to 31. Considering that most transcripts are longer at le—mer : 31 as
compared with smaller le—mers (e.g. average lengths of the tran—
scripts are 264 and 273 for le—mer :25 and 31, respectively),

Table 2. Some statistics of TAG assembly on the human stool
metatranscriptomics dataset

 

27962127 x 2 (paired)
19233474 x 2 —I— 7645742 (single)

Total number of reads

Number of reads mapped to
contigs

Number of multi—edge—spanning 1893157
reads

Number of resolveda single—edge 112527 (32216351 bp)
transcripts (length)

Number of partial a single—edge 2573 (340276 bp)
transcripts (length)

Total number of single-edgeb 115100 (32556627 bp)
transcripts (length)

Number of resolved of multi— 20903 (4596622 bp)
edge transcripts (length)

Number of partial multi—edge 552 (110063 bp)
transcripts (length)

Total number of malti—edgeb 21455 (4706685 bp)
(length) transcripts (length)

Total number of transcripts 177463 (40456052 bp)
(length)

Proportion of multi—edge 15.7% (1 1.6%)

transcripts (in length)

 

Only transcripts of at least 100 bp were considered in this summary.

aPartial transcripts: the transcripts that are not fully resolved by TAG (i.e.
the edge sequences); Resolved transcripts: the transcripts that are resolved by
TAG and therefore likely represent full-length transcripts.

bSingle-edge transcripts: the transcripts reported by TAG that are fully con-
tained Within edges (contig) in the de Bruijn graph of the metagenome assem-
bly (they can be considered as the results of a baseline reference-based
metatranscriptome assembly approach that uses the contigs as the reference);
Multi-edge transcripts: the transcripts reported by TAG that span multiple
edges in the de Bruijn graph.

we selected le—mer:31 to demonstrate the improvement of meta—
transcriptome assembly by using TAG. Figure 4 shows the distribu—
tion of the path lengths (i.e. the number of edges that are traversed
in the de Bruijn graph to form a transcript by TAG) of the tran—
scripts assembled by TAG: most of the multi—edge transcripts span
two edges (contigs), although a single transcript may span as many
as seven edges.

Table 2 summarizes the metatranscriptome assembly results by
TAG. A majority of the metagenomic reads can be mapped to meta—
genomic assembly: for 68.8% of read pairs, both reads can be
mapped to contigs by Bowtie2, whereas an additional 13.6% reads
can be mapped to contigs although their mate—pairs cannot be
mapped. Among the m9.8M remaining unmapped reads, m1.9M
(18.9%) can be mapped to multiple edges (i.e. through one or more
junction le-mers in the de Bruijn graph) by TAG. Thanks to these
reads, TAG was able to improve the metagenomic assembly signifi-
cantly. In total, TAG assembled about 177K transcripts, among
which about 21K (15 .7%) are multi—edge transcripts. These multi—
edge transcripts cannot be fully assembled if only those reads
mapped to contigs are considered in the metatranscriptome assem—
bly; instead, they are likely to be broken into partial transcripts,
each contained in a separate contig (i.e. the edge in the de Bruijn
graph). We note that TAG did not resolve all transcripts. A small
fraction of TAG—assembled transcripts are partial transcripts, each
of which represents a unique edge in the tangled transcript graph,
formed by two or more transcripts sharing some common segments
(see Section 2 for details) that cannot be resolved without additional
information. About 2.6% (552 out of 21455) of the multi—edge

112 /810'spau1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Metagenome assembly graph for metatranscriptome analysis

1007

 

transcripts were not fully resolved by TAG and remained as partial
transcripts. Similarly, 2.2% (25 73 out of 115100) of the single—edge
transcripts are also partial transcript as some multi—edge—spanning
reads connect them with other partial transcripts, although their ac—
tual connections remain ambiguous. We note that these two num—
bers increase substantially (to 21.1 and 8.1%, respectively) when
there is no minimum length applied for output transcripts.

We also compared the TAG assemblies with the de novo tran—
script assemblies from Trinity. We note that this is a real metatran—
scriptomic dataset, so that we cannot compare the results in terms of
the accuracy of the assembly as we did for the mock dataset (but we
have shown using the mock dataset that de novo assembly tends to
produce more problematic transcripts). In total, TAG produced
136 555 transcripts with a total of 37.4 Mb, whereas Trinity gener-
ated 207697 transcripts with a total of 44.8 Mb. Similar to the re-
sults on the mock dataset, TAG transcripts are longer than Trinity
transcripts: the average lengths of the transcripts are 273 and
216 bp, for TAG and Trinity, respectively. Combining the tran—
scripts from both assemblers (and removing redundant transcripts at
95 % sequence identity by CD—HIT—EST) resulted in 233 201 tran-
scripts with a total of ~55 .8 Mb, again demonstrating that refer—
ence—based and de novo approaches can complement with each
other to improve the coverage of transcript assembly.

4 Discussion

Even though thousands of complete prokaryotic genomes and many
more draft genomes are available, metagenomes are constantly
found to contain many new species and new genes (Huttenhower
et al., 2012; Qin et al., 2010; Vital et al., 2014). It is therefore im-
portant to develop methodologies for metatranscriptome data ana—
lysis that are not constrained by the sequenced genomes. With
‘matched’ metagenomic and metatranscriptomic datasets, we believe
that proper utilization of the metagenome data will help greatly the
analysis of metatranscriptomic data (and vice versa). The eventual
integration of these datasets (as well as other meta—omic datasets)
will provide new insights on the composition, function and regula—
tion of microbiomes. Well—assembled transcripts are important for
the function annotation of the metatranscriptome, and also for
inferring gene regulatory mechanisms such as the operons.

We developed a novel reads mapping algorithm (read2graph)
that allows fast mapping of short reads from transcriptome sequenc—
ing onto the assembly graphs of reference genomes. We applied this
mapping algorithm for metatranscriptome assembly, showing the
utility of the de Bruijn assembly graph of the metagenome in down—
stream applications such as the metatranscriptome analysis. Our
mapping tool is fast and can be applied to other applications, for ex—
ample, mapping metagenomic sequencing reads onto the de Bruijn
graph of closely related species for estimating the relative abun—
dances of these species (Wang et al., 2012). We have shown in a
related research that genes are often broken into fragments in meta-
genome assembly, and multi—edge—spanning reads can stitch them to—
gether (Wu et al., 2012b). The mapping of multi-edge-spanning
reads will also improve quantification of gene expression based on
read counts, in particular for genes (from the same or different or-
ganisms) sharing highly similar sequences. In reality, however, we
may still miss the mapping of a small fraction of multi—edge—
spanning reads: if a read contains a sequencing error in the occur—
rence of a branching le—mer, we cannot find its location in the graph.
Because of the low error rate (<1%) in Illumina reads, we believe
this fraction of reads is indeed negligible in metatranscriptomic data
analysis.

We note that de Bruijn graphs will naturally capture the genomic
variations of the metagenomes in the graphs [e.g. the single—nucleotide
variations are represented as bulges (Nijkamp et al., 2013), the vari—
ations in tandem repeats are represented as wheels, and structural
variations are represented long loops (Pevzner et al., 2001)], which is
yet another advantage of using graphs instead of contigs to represent
metagenomes. Genomic variations in metagenomes are naturally
handled by our graph—centric mapping approach.

We expect that a combination of different approaches
(reference—based and de novo) need to be applied to accomplish the
comprehensive metatranscriptome analysis. As the references for
metatranscriptome analysis, the matched metagenome will never be
perfect, due to biological (rare species may be poorly sampled), ex—
perimental (some genomic regions may not be covered well)
and computational (assemblers are not perfect) reasons. Integration
of known reference genomes, matched metagenomes and even non—
matched metagenomes can maximize the coverage of references for
reference—based approaches. On the other hand, if a microbial com-
munity contains new, rare but highly expressed microbial species,
their transcripts can only be revealed by de novo metatranscriptome
assembly (Schulz et al., 2012b) but not by the reference—based
approaches such as the one presented in this article.

Funding

This research was supported by National Institutes of Health (NIH) grant
1R01A1108888-01A1.

Conﬂicts of Interest: none declared.

References

Abubucker,S. et al. (2012). Metabolic reconstruction for metagenomic data
and its application to the human microbiome. PLoS Comput. Biol., 8,
e100235 8.

CazauX,B. et al. (2014). From indexing data structures to de bruijn graphs.
InzKulikov, A., Kuznetsov, S. and Pevzner, P. (eds), Combinatorial Pattern
Matching, volume 8486 of Lecture Notes in Computer Science, pages 89—
99. Springer International Publishing.

Celaj,A. et al. (2014). Comparison of assembly algorithms for improving rate
of metatranscriptomic functional annotation. Microbiome, 2, 39.

Chang,Z. et al. (2015). Bridger: a new framework for de novo transcriptome
assembly using RNA-seq data. Genome Biol., 16, 30.

de Menezes,A. et al. (2012). Comparative metatranscriptomics reveals Wide-
spread community responses during phenanthrene degradation in soil.
Environ. Microbiol., 14, 2577—2588.

Doose,G. et al. (2013). Mapping the RNA-Seq trash bin: unusual transcripts
in prokaryotic transcriptome sequencing data. RNA Biol., 10, 1204—1210.
Dunham,I. et al. (2012). An integrated encyclopedia of DNA elements in the

human genome. Nature, 489, 5 7—74.

Franzosa,E.A. et al. (2014). Relating the metatranscriptome and metagenome
of the human gut. Proc. Natl Acad. Sci. U. S. A., 111, E2329—E2338.

Giannoukos,G. et al. (2012). Efﬁcient and robust RNA-seq process for cultured
bacteria and complex community transcriptomes. Genome B iol., 13, R23.

Gnerre,S. et al. (2011). High-quality draft assemblies of mammalian genomes
from massively parallel sequence data. Proc. Natl Acad. Sci. U. S. A., 108,
1 5 13—15 1 8.

Gosalbes,M.]. et al. (201 1). Metatranscriptomic approach to analyze the func-
tional human gut microbiota. PLoS One, 6, e17447.

Grabherr,M. et al. (2011). Trinity: reconstructing a full-length transcriptome
Without a genome from RNA-Seq data. Nat. Biotechnol., 29, 644—652.

Huson,D.H. et al. (2011). Integrative analysis of environmental sequences
using MEGAN4. Genome Res, 21, 1552—1560.

Huttenhower,C. et al. (2012). Structure, function and diversity of the healthy
human microbiome. Nature, 486, 207—214.

112 /810'spau1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

1008

Y. Ye and H. Tang

 

Jia,B. et al. (2013). NeSSM: a Next-generation sequencing simulator for meta-
genomics. PLoS One, 8, e75448.

Jorth,P. et al. (2014). Metatranscriptomics of the human oral microbiome dur-
ing health and disease. MBio, 5, e01012—e01014.

Lahens,N.F. et al. (2014). IVT-seq reveals extreme bias in RNA sequencing.
Genome Biol., 15, R86.

Langmead,B. and Salzberg,S.L. (2012). Fast gapped-read alignment with
Bowtie 2. Nat. Methods, 9, 357—359.

Leimena,M.M. et al. (2013). A comprehensive metatranscriptome analysis
pipeline and its validation using human small intestine microbiota datasets.
BMC Genomics, 14, 530.

Leung,H.C. et al. (2013). IDBA-MT: de novo assembler for metatranscrip-
tomic data generated from next-generation sequencing technology.
]. Comput. Biol., 20, 540—550.

Leung,H. et al. (2014). IDBA-MTP: A hybrid metatranscriptomic assembler
based on protein information. Res. Comput. Mol. Biol.. Lect. Notes
Comput. Sci., 8394, 160—172.

Li,H. and Durbin,R. (2009). Fast and accurate short read alignment with
Burrows-Wheeler transform. B ioinformatics, 25, 1754—1760.

Li,W. and Godzik,A. (2006). Cd-hit: a fast program for clustering and com-
paring large sets of protein or nucleotide sequences. Bioinformatics, 22,
165 8—1659.

Li,R. et al. (2010). De novo assembly of human genomes with massively paral-
lel short read sequencing. Genome Res., 20, 265—272.

Luo,R. et al. (2012). SOAPdenov02: an empirically improved memory-
efﬁcient short-read de novo assembler. Gigascience, 1, 18.

Maurice,C.F. et al. (2013). Xenobiotics shape the physiology and gene expres-
sion of the active human gut microbiome. Cell, 152, 39—50.

Meyer,F. et al. (2008). The metagenomics RAST server—a public resource for
the automatic phylogenetic and functional analysis of metagenomes. BMC
Bioinformatics, 9, 386.

Moran,M.A. et al. (2013). Sizing up metatranscriptomics. ISME ]., 7,
237—243.

Nagarajan,N. and Pop,M. (2009). Parametric complexity of sequence assem-
bly: theory and applications to next generation sequencing. ]. Comput.
Biol., 16, 897—908.

Namiki,T. et al. (2012). MetaVelvet: an extension of Velvet assembler to de
novo metagenome assembly from short sequence reads. Nucleic Acids Res.,
40, 6155.

Nijkamp,].F. et al. (2013). Exploring variation-aware contig graphs for (com-
parative) metagenomics using MaryGold. B ioinformatics, 29, 2826—2834.
Pachter,L. (2011). Models for transcript quantiﬁcation from rna-seq. arXiv

preprint arXiv:1104.3889.

Peng,Y. et al. (2012). IDBA-UD: a de novo assembler for single-cell and meta-
genomic sequencing data With highly uneven depth. Bioinformatics, 28,
1420—1428.

Pevzner,P.A. et al. (2001). An Eulerian path approach to DNA fragment as-
sembly. Proc. Natl Acad. Sci. U. S. A., 98, 9748—9753.

Qin,]. et al. (2010). A human gut microbial gene catalogue established by
metagenomic sequencing. Nature, 464, 5 9—65 .

Roy,S. et al. (2010). Identiﬁcation of functional elements and regulatory cir-
cuits by Drosophila modENCODE. Science, 330, 1787—1797.

Schulz,M.H. et al. (2012a). Oases: robust de novo RNA-seq assembly across
the dynamic range of expression levels. B ioinformatics, 28, 1086—1092.

Schulz,M.H. et al. (2012b). Oases: robust de novo rna-seq assembly across the
dynamic range of expression levels. Bioinformatics, 28, 1086—1092.

Shi,Y. et al. (2012). Transcriptional responses of surface water marine micro-
bial assemblages to deep-sea water amendment. Environ. Microbiol., 14,
191—206.

Vital,M. et al. (2014). Revealing the bacterial butyrate synthesis pathways by
analyzing (meta)genomic data. MBio, 5, e008 89.

Wang,M. et al. (2012). A de Bruijn graph approach to the quantiﬁcation of
closely-related genomes in a microbial community. ]. Comput. Biol., 19,
814—825.

Wu,Y.W. et al. (2012a). Oral spirochetes implicated in dental diseases are
Widespread in normal human subjects and carry extremely diverse integron
gene cassettes. Appl. Environ. Microbiol., 78, 528 8—5296.

Wu,Y.W. et al. (2012b). Stitching gene fragments with a network matching al-
gorithm improves gene assembly for metagenomics. Bioinformatics, 28,
i363—i369.

Zerbino,D.R. and Birney,E. (2008). Velvet: algorithms for de novo short read
assembly using de Bruijn graphs. Genome Res., 18, 821—829.

112 /810'spau1no [p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pep1201umoq

9IOZ ‘09 lsnﬁnv uo ::

