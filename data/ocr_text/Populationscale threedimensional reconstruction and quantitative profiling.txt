Bioinformatics, 31 (13), 2015, 2190—2198

doi: 10.1093/bioinformatics/btv109

Advance Access Publication Date: 19 February 2015
Original Paper

 

Bioimage informatics

Population-scale three-dimensional
reconstruction and quantitative profiling of
microglia arbors

Murad Megjhani‘, Nicolas Rey-Villamizar1, Amine Merouane1,
Yanbin Lu‘, Amit Mukherjee3, Kristen Trettz, Peter Chongz,
Carolyn Harrisz, William Shainz and Badrinath Roysam1'*

1Department of Electrical and Computer Engineering, University of Houston, Houston, TX, USA, 2Center for
Integrative Brain Research, Seattle Children’s Hospital, Seattle, WA 98101, USA and 3Cold Spring Harbor
Laboratory, Cold Spring Harbor, NY 11724, USA

*To whom correspondence should be addressed.
Associate Editor: Robert F. Murphy

Received on September 26, 2014; revised on February 12,2015; accepted on February 16, 2015

Abstract

Motivation: The arbor morphologies of brain microglia are important indicators of cell activation.
This article fills the need for accurate, robust, adaptive and scalable methods for reconstructing 3—D
microglial arbors and quantitatively mapping microglia activation states over extended brain tissue
regions.

Results: Thick rat brain sections (100—300 pm) were multiplex immunolabeled for IBA1 and
Hoechst, and imaged by step—and—image confocal microscopy with automated 3—D image mosaic—
ing, producing seamless images of extended brain regions (e.g. 5903x9874><229 voxels). An
over—complete dictionary—based model was learned for the image—specific local structure of micro—
glial processes. The microglial arbors were reconstructed seamlessly using an automated and scal—
able algorithm that exploits microglia—specific constraints. This method detected 80.1 and 92.8%
more centered arbor points, and 53.5 and 55.5% fewer spurious points than existing vesselness
and LOG—based methods, respectively, and the traces were 13.1 and 15.5% more accurate based on
the DIADEM metric. The arbor morphologies were quantified using Scorcioni’s L—measure.
Coifman’s harmonic co—clustering revealed four morphologically distinct classes that concord with
known microglia activation patterns. This enabled us to map spatial distributions of microglial acti—
vation and cell abundances.

Availability and implementation: Experimental protocols, sample datasets, scalable open—source
multi—threaded software implementation (C—l——l—, MATLAB) in the electronic supplement, and
website (VWlAN.farsight—toolkit.org). http://www.farsight—toolkit.org/wiki/Population—scale_Three—
dimensional_ Reconstruction_and_Quanti—tative_Profiling_of_Microglia_Arbors

Contact: broysam@central.uh.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com

112 /§JO'S{eumo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

Three-dimensional reconstruction and quantitative profiling of microglia populations 2191

 

1 Introduction

Microglia are immune cells of the mammalian central nervous sys—
tem whose importance to brain function is receiving growing recog—
nition (Fields, 2013; Streit, 2005). Normally, these cells are
distributed throughout the brain in non—overlapping territories, and
comprise up to 20% of the glial cell population (Fields, 2013;
Gehrmann et 61]., 1995). Their arbor morphologies are dynamic, in-
formative of their internal state of activation and are related to tis—
sue perturbations. Resting microglia exhibit motile and highly
branched arbors that constantly screen for perturbations in their
local environment. There is considerable heterogeneity in microglial
populations, even in normal brain tissue. When perturbed by patho—
logical stimuli, they undergo rapid changes in arbor morphology
and migrate toward the lesion site (Ohsawa and Kohsaka, 2011).
The arbor morphologies are indicators of cell activation, and are
valuable regardless of any molecular markers of activation. For
these reasons, there is a need for methods to analyze individual
microglial arbors, profile arbor alterations and map spatial distribu—
tions over extended tissue regions. Capturing these phenomena
given the small dimensions of microglial processes (<2 um) requires
high—resolution microscopy. Accurately capturing the asymmetrical
arbors of non—resting microglia, requires three-dimensional (3-D)
imaging of tissue samples that are thick enough to include entire
cells. Capturing perturbations to spatial distributions of these cells
requires high-extent imaging, especially when the lesions are much
larger than the field of view of the microscope (Rey-Villamizar
et 61]., 2014). Figure 1 illustrates the use of step—and—image confocal
microscopy and computational image mosaicing to record large 3—D
images of brain tissue. Our goal is to describe automated methods
for quantifying microglial arbor morphologies and spatial distribu—
tions of activation in such images.

In considering arbor tracing methods, we note that there is a vast
literature on tracing algorithms for neurons (Meijering, 2010). In
contrast, the literature on microglial arbor analysis is much smaller
(Galbreath, 2011; Rouchdy and Cohen, 2013; Wang et 61]., 2011;
Xiao and Peng, 2013). Importantly, the prior efforts have tackled

'E-lil [rm

fl

_"l..

__._i. 1. IT"
- I-
_‘l‘__

 _'...'_'_. .1._ _

 

Fig. 1. Illustrating the problem of large-scale microglia reconstruction. (A)
Maximum-intensity projection of a 3-D two-channel mosaic image (size
5903 >< 9874>< 229 voxels, 3117 microglia, yellow: IBA1, blue: Hoechst). (A1)
close-up of the boxed region. (B) Automated reconstructions with microglial
soma in red and arbor reconstructions in green. (B1) Close-up of the recon-
structions in the boxed region. (C1—C5) Close-ups of individual microglial
arbor reconstructions illustrating the diversity of cellular morphologies

much smaller cell populations than reported here, cannot recon—
struct microglia seamlessly and three—dimensionally across signifi-
cant extents of brain tissue (multiple mm—cm), and do not guarantee
that the reconstructions have a tree topology. Finally, the prior lit-
erature does not address population—scale quantitative analysis of
microglial arbors as a function of activation. The prior literature on
automated neuron tracing provides a valuable basis for reconstruct—
ing microglia, but there are important limitations that are specific to
microglia that remain unaddressed. Most of the methods are based
on pre—defined analytical models of the tubularity (‘vesselness’) and
continuity of neurites. For example, Narayanaswamy et al. (2011)
used the multi—scale curvelet transform to model neurites.
Automated neurite tracing methods are generally based on model—
based sequential tracing (Al—Kofahi et 61]., 2008; Bas and Erdogmus,
2010; Peng et 61]., 2010); probabilistic extraction of centerlines
(Breitenreicher et 61]., 2013; Gonzalez et 61]., 2010; Tiiretken et 61].,
2014, 2011) or on segmentation (Chothani et 61]., 2011; Vasilkoski
and Stepanyants, 2009). The neurite centerlines are usually detected
by variations of skeletonization (He et 61]., 2003; Peng et 61]., 2014;
Yuan et 61]., 2009), or voxel coding (Chothani et 61]., 2011; Jimenez
et 61]., 2014). For handling complex/dense neurite fields, various
approaches have been proposed for negotiating branches and cross—
overs (Al—Kofahi et al. 2008; Schmitt et 61]., 2004; Wearne et al.
2005). The tracing performance depends on the quality of seed
points, effective modeling of the peculiarities of the images being
processed, and tracing control criteria (stopping, branching, negoti-
ating crossovers, etc.).

Our method is designed to address the needs of large—scale
microglia reconstruction by exploiting microglia—specific constraints
(e.g. known topology), and using algorithms that are specifically de—
signed for mosaiced high—extent imaging of brain tissue (Tsai et 61].,
2011). Specifically, we address the need to cope with biological and
imaging variability within and across samples, without having to re—
tune algorithm parameters. For this, we propose a machine learning
approach for modeling the characteristics of microglia in actual
images, rather than resorting to a pre—defined analytical model as in
the prior work on neuron tracing. To overcome the difficulty of tun—
ing parameters over large-extent images, we propose algorithms
with very few parameters that are easy to interpret and adjust. Our
method detects the microglial processes reliably using a machine-
learning algorithm, and traces the arbors subject to a topological
constraint. Appropriately designed cost terms guide our algorithm
to exploit the fact that microglia, unlike neurons, are spatially local—
ized (lacking long processes, e.g. axons). Whereas tight fiber cross—
overs are common for neurite fields, they are rare for microglia.
Furthermore, microglia do not form inter-connections with neigh-
boring cells. The more pressing challenge in our work to correctly
reconstruct microglia that are split across the microscope fields to
enable accurate spatial distribution analysis. Our method uses these
same constraints to handle such cells. To achieve scalability, our
method is designed to exploit parallel computers. This results in an
array of arbor reconstructions, one per IBA1—l— microglial cell that
can be visualized and proofread using 3—D visualization tools that
are capable of handling thousands of cells at a time (Luisi et 61].,
2011). The overall pipeline is very usable and scalable. The few ad—
justable parameters of our method affect the results smoothly, per—
mitting stable and objective analysis of microglia morphologies. The
resulting reconstructions are directly amenable to quantitative ana—
lysis using Scorcioni’s L—measure (Scorcioni et 61]., 2008). The quan—
titative arbor measurements are analyzed by Coifman’s harmonic
co—clustering to reveal morphologically distinct arbor classes that
concord with the known microglia activation patterns. Application

112 /§JO'Sjeumo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

2192

M. Megjhani et al.

 

of these methods to brain tissue analysis will provide unprecedented
measurements of microglia as a function of physiological and patho—
logical stimuli.

2 Methods

Quantitative tissue—scale microglia profiling requires three-dimen-
sional (3-D) imaging of large numbers of cells spread across signifi—
cant lateral and axial extents of brain tissue (multi-millimeter lateral
extent, and 100—300 um depth). For the experiments reported here,
coronal sections of 4% paraformaldehyde fixed rat brain tissue
from the motor cortex region were cut into 100 pm thick sections,
and ﬂuorescently labeled for microglia-specific protein IBA1 to
highlight microglia, and DNA stain Hoechst to highlight all nuclei).
A Rolera EM—C2 camera (QImaging, Surrey, Canada; 1004 X 1002
pixels) mounted on an Olympus DSU spinning-disk confocal micro-
scope with a x30 objective (NA. 1.05, Silicone oil) was used for
imaging individual 3-D image fields of interest (resolution of
0.267 urn/pixel, 14 bits/pixel (x, y), z—step size of 0.3 pm), and also
to record a series of overlapping 3—D images for mapping tissue re-
gions that are larger than the field of the microscope. For example,
the dataset in Figure 1 is a mosaic constructed from 12 rows and 7
columns of overlapping image tiles, each covering a 267 um square
region. The tiles are collected with a 15—20% overlap, spanning a
2.615 mm x 1.550 mm x 0.1mm region of tissue. The image tiles
were combined into a 3—D montage of the whole field using a previ—
ously published method, and displayed in Figure 1A (Tsai et al.,
2011). In addition to these large montages, randomly selected fields
from different animals were also analyzed.

2.1 Sparsity—based modeling of microglia processes
Given 3—D images I(x,y,z), our method learns the structure of
microglial processes from actual images to construct a computa—
tional ‘dictionary—based’ model for microglial processes, and then
utilizes this model to reconstruct the arbors. The term ‘dictionary’
refers to a set of basis vectors that can be combined linearly to repre—
sent the given image. These basis vectors are learned from image
patches that are labeled as being foreground (microglia processes),
or background. Several authors have shown that learning a diction-
ary from images rather than using a predetermined analytical model
can lead to more effective image representations, and can therefore
provide improved results in many practical image—processing appli—
cations such as restoration, segmentation and classification
(Rubinstein et al., 2010). Our modeling approach is based on the
sparse over—complete dictionary learning method described by
(Zhang and Li, 2010) that was inspired by the K—singular value de—
composition (K—SVD) algorithm (Aharon et al., 2006). Specifically,
Zhang and Li (2010) described an extension of the K—SVD method,
known as the label-consistent K—singular value decomposition
method (LC—KSVD). In this method, small image patches that are
labeled to indicate classes (e.g. foreground/background) are used as
training examples. The typical patches in our work are quite small,
typically, 15 x 15 X 3 voxels for the current image stacks. These
labeled image patches are extracted from representative training
images. The LC—KSVD algorithm has the important advantage of
simultaneously and consistently learning a single discriminative dic-
tionary (that is typically more compact compared to the K—SVD
method), and a linear classifier. In our work, the dictionary typically
consists of 675 — 2000 dimensional vectors (atoms).

A mathematical description of our approach is presented next.
Let X : {x1, . . . ,xN} E RWN denote a set of image patches drawn

from the 3-D image I (x, y, z), where n denotes the number of voxels
in each patch, and N denotes the total number of image patches. We
wish to learn an over—complete dictionary, denoted D : {d1, . . . ,dK}
E RHXK(K > n making the dictionary over—complete)containing K
basis elements, usually referred to as ‘atoms’ for building a sparse rep—
resentation of X. The patch data X is approximated by DF,where F
: {y1, . . . ,yN} E RKXN is a matrix that is chosen to respect a spars—
ity constraint. Specifically, we are interested in representations that
minimize the number of non-zero entries in yi for representing signal
x;. In practice, the number of non—zero entries is a user—selected par—
ameter that is known as the sparsity constraint, and denoted T. This
requires solving the following optimization:

< D, r >= erg n61? ||X — DF||12: s.t.Vi, “Vino 3T, (1)

The term ||X — D17||123 denotes the squared signal reconstruction
error where ‘F’ is the Frobenius norm. The reconstruction error is
minimized subject to the L0 sparsity constraint ||yi||0 g T. The
K—SVD algorithm is an iterative approach for implementing this op—
timization in equation that operates in two steps. First, Equation (1)
is minimized with respect to F to learn a dictionary D. Given D, the
sparse coding algorithm computes the sparse representation F of sig—
nal X by solving:

< r >= arg m1i_n ||X — 1)erF s.t. v i, “Vino 3T. (2)

An exact determination of sparse representations is proven to be
a NP—hard problem (Natarajan, 1995). Several algorithms have been
proposed in the literature to solve the above sparse coding problem,
usually by relaxing the L0 penalty to use the convex L1 penalty in—
stead, as in the basis pursuit method (Chen et al., 1998). The Focal
Underdetermined System Solver (FOCUSS; Gorodnitsky and Rao,
1997) is very similar in using the Lp norm, with P < 1 as a replace—
ment for the L0 norm. Another approach is to use greedy algorithms
like Matching Pursuit (Mallat, 1993), or Orthogonal Matching
Pursuit (0MP; Pati et al., 1993), that select the dictionary atoms se—
quentially. In this work, we chose 0MP to solve the sparse coding
problem with computational efficiency in mind.

The next step is to classify the voxels as seed points using these
sparse features. The sparse codes from Equation (1) can be directly
used for classification. An effective classifier f (y) can be obtained by
determining the model parameters W E RmXK, satisfying

_ . t 2
< W >— arg Invlvn  + j“ 

where g is the classification loss function, 19,- are the labels (seed
point / not a seed point) and 2 is a regularization term that is incor-
porated to prevent overfitting. Widely used loss functions include
the logistic function, hinge function and the quadratic. We used the
linear predictive classifier in our study so f(y,W) : Wy. However,
separating the dictionary learning from the classifier learning will
make D suboptimal for classification (Jiang et al., 2011). It is pos—
sible to jointly learn dictionary and classification models (Mairal
et al., 2009; Yang et al., 2010) by implementing the following

optimization:
< D, W, F >= arg glgvnr ||X — DF||12:+ ﬂIIH — Wer,

St V i, ||yi||0 ST,

where H : {191,192,  I’JN} E RMXN denotes the class labels for N
examples and m classes. These approaches require relatively large
dictionaries to achieve good classification (Jiang et al., 2011),

112 /810'spaumo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁdllq 11101; popeoIII/vxoq

9IOZ ‘09 lsnﬁnv uo ::

Three-dimensional reconstruction and quantitative profiling of microglia populations 2193

 

making it difficult to set the dictionary size (K). By introducing the
label consistency term, a concise unified dictionary can be learned
using the LC—KSVD algorithm. The resulting dictionary enables reli-
able classification using only a small, unified dictionary and a single
multi—class linear classifier. The central idea behind this approach is
to incorporate two additional terms to the objective function for
learning the dictionary, specifically a label consistency term and a
classification error term. The dictionary learned in this manner will
adapt to the underlying structure of the training data, and generate
discriminative sparse codes regardless of the size of the dictionary,
as described by Jiang et al. (2011). Let Q = {q1, q2, ... qN} E RKXN
denote such a discriminative set of sparse codes. Let A denote a
linear transformation matrix that transforms the original sparse
codes to the most discriminative sparse codes in the sparse feature
space RK. Let H : {191,192,  I’JN} E RMXN denote the class labels
for the N examples for m classes. With this notation, the LC—KSVD
algorithm can be expressed as the following expanded optimization
problem:

< D, W,A, r >= are Dngg, ||X — DFllic + a IIQ — AFllfr

+13IIH— WFIIIZ: s-t. v 2', “WHOST, (3)

where the first term ||X — D17||12F represents the squared reconstruc—

tion error. The second term Q — A17||12F represents the discrimina-
tive sparse—coding error. It is intended to penalize sparse codes P
that deviate from the discriminative sparse codes Q. Intuitively, it
forces the signals from the same class to have similar representa—
tions. For example, if q, is the discriminative sparse code corres—
ponding to the input signal x,, then the non—zero values of q, occur
at those indices where the input signal X, and the dictionary element
dk share the same label. The third term  —  represents the
classification error, and H : {191,192, . . . I’JN} E RmXN is the matrix
of class labels for N samples and m classes. As a concrete example,
for a two—class problem (Classes 1 and 2). Suppose the size of the
dictionary K is 4, i.e. , D : {d1,  ,d4}, and the number of ex—
amples N is 4, i.e. , X = {x1,  ,X4}. To create a discriminative
dictionary we want the examples of Class 1, (x1, xz) to be associated
with the first two dictionary atoms {d1, d2}, and the remaining ex-
amples of Class 2, (X3, X4) to be associated with {d3, d4}. The Q ma—
trix can then be written as follows:

OOHH
OOHH
HHOO
HHOO

This matrix is set automatically in our implementation. For the
1 1 0 0

0011

this manner has excellent representational power, and enforces

above Q matrix, H = [ . The dictionary learned in

 

strong discrimination between the two classes (e.g. seed points ver—
sus non—seed points), as detailed later. Importantly, the dictionary is
selected to provide a sparse representation of the image. We are
interested in constructing a dictionary such that a small number of
its atoms can be linearly combined to represent the image.
Following (Zhang and Li, 2010) the above optimization can be
rewritten as follows:

2

S.t.  yio S T
F

< D, W,A, F >= arg min
D,W,A,F

 

 

X D
e/EH e/EW

This can be recast concisely as follows:

 

 

< D’, r >: erg r31? ||x’ — or“?F s.t. v i, “Vino 3T

where

X D
X’: ﬁQ , and D’ 2 WA (4)
x/BH x/PW

The above optimization is conducted using the Orthogonal
Matching Pursuit (OMP) algorithm. Given the nature of the L0
norm, the non—zero values of q, in the solution occur at those indices
where the input signal x; and the dictionary element dk share the
same label. We then solve Equation (4) using the KSVD method.
The matrix D’ is L2 -normalized column—wise. We then compute the
matricesD : {d1, ..,dk}, A = {a1, ..,ak}, andW : {w1, ..,wk} from
D’. However, we cannot simply use D, A, andW for classifying
new image patches since they are jointly normalized in D’, i.e.
“di, ﬁai, ﬁwinz : 1. The normalized dictionary D, transform
parameters A, and classifier parameters W are computed as follows:

 

 

A d1 dk }

D = —,  ,— ;
{lldlllz lldkllz

A a1 ak

A = ,  , ;
{lldlllz lldkHz}

A w1 wk

W = —,  ,— .
{lldlllz lldkHz}

The inputs to the seed detection algorithm are the set of training
image patches X, and a corresponding label matrix H. The algo-
rithm requires two adjustable parameters or and 8. The setting of
these parameters is described in the Experimental Results section.
They merely serve to adjust the relative importance of the respective
penalty terms in Equation (3). The outputs of the algorithm consist
of the dictionary D, classifier weights W, transformation matrix A,
and the sparse features F. The sample dictionary shown in Figure 2,
shows two distinct classes despite the variability, corresponding to
the arbor processes (IBA1—l— foreground), and the background. Once
the dictionary is learned from the training images, it can be applied
to seed detection in other (non—training) images that are collected
using the same imaging protocols. Given the dictionary D, the sparse
features P can be computed using Equation (2) by any sparse coding
algorithm, including OMP. Once the sparse features P and the clas—
sifier W, are learned, the next step is to classify each pixel in the test
image as a seed point or otherwise, based on the sparse image repre—
sentation. For this, we first extract the image patch xi, surrounding
the voxel in question from the test image It(x, y, z), and compute the
sparse feature 1),, with respect to the learned dictionary D. Then, we
classify the pixel using a linear classifier W as follows,

W1
i. Compute Wyi : ,
W2
1 or w1 seed oint if w1 > wz
ii. Set V(x,y,z) : ( p )
0 (background) else

where V is the seed point image whose voxel value is set to 1 or w1
for pixels that are classified as a seed point, and to 0 otherwise. In

112 /810'S{12umo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁ(1111] 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

N
_\
CD
.5

M. Megjhani et al.

 

.
' ii

|— .-
I“.

MIIEEI

l

E

IIIHEHIHE
HEEIEDEED
IEIIIEIEH
EIIHEQIEH
ﬁlllﬂﬂﬁlﬂ
EIEIIEIED
IHIIIHIEE

IEHEEIEHE

Imiﬂ

EEEHWEIEH
Elﬂﬂﬂlllﬂ

Fig. 2. A subset of the 3-D image patch dictionary entries displayed as max-
imum-intensity projections. It is clear from this illustration that some patches
(highlighted by red boxes) clearly belong to parts of microglial arbors,
whereas the other patches are either ambiguous or part of the background

 

Fig. 3. Illustrating 3-D seed points used for arbor reconstruction. (A) Sample
|BA1+ cell (grayscale) overlaid with initially detected seed points (red). (B)
Close-up of boxed region in Panel A. The white arrows indicate some valid
seed points that lie on the cellular arbor, and the yellow arrows some indicate
invalid seed points. Only a subset of the seed points are marked by arrows
here to avoid clutter

Section 3, we present experimental data showing that the seed points
detected by the above algorithm (Fig. 3) are sufficiently reliable and
accurate for reconstructing microglial arbors.

2.2 Automated microglia arbor reconstruction

Microglia consist of branching processes that form a tree, and the
processes stem from a central soma that envelops the cell nucleus.
Detecting the soma is the first step to reconstructing the microglia.
For this, we proceed in two steps. First, we perform an automated
segmentation of the Hoechst image channel (the nuclear label) to de—
tect all cell nuclei (Al—Kofahi et al., 2010). From the segmentation
results, we compute a set of features including the 3—D location, vol—
ume, shape factor and chromatin—intensity variance (a texture meas—
ure) for each nucleus. Next, we compute the total amount of the
microglial marker IBA1 within a distance of eight voxels to each nu—
cleus (Bjornsson et al., 2008). We then isolate the microglial cell nu-
clei based on these features, using an active learning—based classifier
(Padmanabhan et al., 2014). Microglial cell somas that extend

beyond the nuclei are segmented using a level—set algorithm. The
centroids of the somas are used as the starting point for the tracing
algorithms.

The soma segmentations allow us to eliminate any false seed
points that lie within the soma. The remaining seeds are used to re—
construct the cellular arbors. As noted above, individual microglia
are known a priori to have a tree topology. Furthermore, microglia
do not form inter—connections with neighboring cells (Rouchdy
et al., 2011). These constraints enable us to develop fast and scalable
algorithms that are appropriate for tracing the arbors of these cells.
The tree assumption is also helpful from the standpoint of extracting
quantitative measurements of arbors, since existing computational
neuroanatomy tools, e.g. the L—measure (Scorcioni et al., 2008) ex—
pect a tree topology. Based on these considerations, we designate the
centroids of the microglial somas as the root points for their respect—
ive cellular arbors. Starting from all root points, we simultaneously
construct a forest of R minimum spanning trees (MST’s), where R is
the total number of detected root points. Each MST consists of
nodes and directed edges. The nodes for a single cell include the root
point, a subset of the seed points, referred to here as the primary
nodes and denoted v E V0, an all intermediate pixels that are termed
secondary nodes. The secondary nodes are used for calculating the
costs associated with their neighbors (as explained further below).

Each node is identified by its 3—D image coordinates. The dir—
ected edges, denoted eij E E, link the nodes and their orientations al—
ways point towards the root point. Each edge is associated with a
weight value that is used for determining whether or not a given
pixel belongs in the arbor reconstruction. The process of growing
each MST is based on an adaptation of Prim’s algorithm (Mariano
et al., 2013; Teacher and Griffiths, 2011). Starting from each root
node, our algorithm connects each successive node to the nearest
primary node (in the sense of the cost metric defined below), to form
an edge (link). This process is repeated at each added node. The al—
gorithm iterates as it expands all the trees starting from their re-
spective roots concurrently to cover all the primary nodes V0. For
each cell, the tree—growing procedure is stopped when a cumulative
cost function (described next) exceeds a preset threshold. Once the
computation of the MST’s is complete, we obtain a forest of trees

Tk : (Vk, Ek), where k is the index of a tree, Vk is the list of all
nodes belonging to tree k and Ek is the list of all edges belonging to
tree k. Each tree captures the morphology of a single microglial cell.

2.3 Dynamic cost metric for linking nodes

The tree—growing process described above is guided by a cost metric
that takes into account the normalized weight, denoted wi, for the
classified seed points, and the spatial proximity of points being con-
sidered for a connection. Intuitively, this method traces microglial
processes by linking nodes forming the shortest geodesic path along
the brightest (IBA1—l—) voxels representing the image foreground.
With this in mind, we compute our connection costs using the Fast
Marching Method (FMM; Sethian, 1996) that provides an efficient
way to identify geodesic paths from each node to the corresponding
root node. The FMM provides a fast approximation to the station—
ary Hamilton—Jacobi equation, commonly referred to as the Eikonal
equation. This non—linear partial differential equation is used for
path planning problems in non—homogeneous media. Given a do—
main Q C R“, the Eikonal Equation is of the form:

IIVoC(xa%z)ll = F(x,y,z),

5
C(xO) : 07 ( )

where C(x,y,z) is the cost function, F(x,y,z) is a positive—valued

112 /810'S{12umo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁ(1111] 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Three-dimensional reconstruction and quantitative profiling of microglia populations 2195

 

function, V denotes the gradient operator, and  -  is the Euclidean
norm. In our formulation, the function F(x, y, z) is set to the inverse
of the score given by the result of seed detection algorithm, instead
of the voxel intensity. In our FMM implementation, a vertex vi from
a growing MST Tk can be thought to emanate ‘waves’ that propa—
gate through the image with their speed of propagation proportional
to the normalized weight of the classifier. The wave propagation
from the vertex v; is allowed to continue to the next closest vertex
vj, that is not part of any previously detected tree. The new vertex
vi, and the edge e; at this point are included in Vk and Ek, respect—
ively, resulting in an expansion of the tree Tk. This process is re—
peated concurrently for all trees (one per microglial cell) until all the
primary nodes in V0 are linked, or the minimum distance between
all possible links exceeds a pre—defined cost threshold '5. Nodes that
are deemed more expensive than this threshold are not added to a
tree. This is a mechanism to prevent unreliable points from being er-
roneously added to the distal portions of microglia reconstructions.
In other words, ‘5 sets the overall sensitivity of the reconstruction
method. A higher threshold makes the algorithm more sensitive to
image—intensity values, and vice versa. Further details about the pri—
ority queue—based reconstruction algorithm and pseudo code sum—
maries of our algorithm are provided in the Electronic Supplement.

3 Experimental results

For proofreading the 3—D arbor reconstructions, we used the open
source FARSIGHT Trace editor (Luisi et al., 2011). This tool allows
the user to view the reconstructions from any angle, and edit the re—
constructions if desired. The editing capability was not utilized for
the experiments described here, since our end goal was an analysis
of microglial activation patterns rather than exact reconstructions of
each cell. The core of the dice and trace method is also embedded
into this tool for tracing individual cells interactively—the user can
trigger the reconstruction of an entire missed arbor by manually spe—
cifying the root point. Manually reconstructing thousands of cells,
or even editing automatically generated reconstructions at this scale
is not feasible and is time consuming. Our expectations of recon—
struction accuracy are also appropriately pragmatic—we expect
valid reconstructions with sufficient accuracy to analyze microglia
activation patterns.

With these considerations in mind, our experiments are primar-
ily designed to study the impact of parameter selection on recon—
struction performance. For this, we randomly selected a population
of 50 cells across multiple images from multiple animals. These cells
were reconstructed manually by a pool of volunteers. Each cell was
reconstructed by at least two different users using the Neuromantic
tool (Myatt et al., 2012), and saved into the standard SWC file for—
mat. This is a labor—intensive activity that takes between 40 and
60 min per cell. The next step was to compute a metric to compare
the automatic reconstructions against the manual reconstructions.
The DIADEM (Gillette et al., 2011) metric is currently the most re—
spected metric for comparing two different reconstructions.
However there are a few limitations, for example, two reconstruc—
tions performed manually by different users do not necessarily con—
cord with a perfect score of 1, and this metric was originally
intended for neurons. Despite these limitations, we found this metric
to be helpful in comparing reconstructions of the tree-like microglial
arbors.

To compare the quality of the seed points we computed three
scores for every cell in the test set. The first score is the number of
seed points in the vicinity (we used a radius of 5 voxels) of the

Table 1. Validation of seed points

 

 

% seed % seed Coverage (% of
Algorithm points points traces covered
on traces not on by seed points)
traces
Wang et al. (2011) 40.1 59.8 94.3
Galbreath et al. (2011) 37.5 62.5 98.6
Our method 72.3 27.8 94.7

 

manual trace. Higher percentage values indicate greater concord—
ance. However, this does not inform us about the quality of the seed
points. The next score is the percentage of seed points that are in the
background. This measure indicates the potential for spurious
traces. The third score is the percentage of traces missed or not cov—
ered by the detected seed points. This measure indicates the poten—
tial for missed processes. The average scores for 25 cells are
presented in Table 1.

3.1 Parameter selection

Seed point selection is the primary determinant of reconstruction
performance. For this reason, our first experiments are designed to
evaluate the impact of parameters that directly affect this step. The
first step in seed detection is to learn the patch—based dictionary.
Based on the expected range of diameters of the arbor processes, we
used a fixed 3—D block (patch) size of 15 X 15 X 3 voxels. The labels
for learning the dictionary and training the classifier within the LC-
KSVD algorithm were selected randomly from the manual traces. A
total of 50 000 seed points from the image foreground were ran-
domly selected from the training images, and the same numbers of
pixels were selected from the background. The dictionary D and the
classifier W were derived jointly using the LC—KSVD method.

The seed detection algorithm has four parameters (T, K, oc,ﬂ)
for the dictionary learning step. The parameters or and ﬂ set the rela—
tive importance of the terms in Equation (3). For our experiments,
these parameters were set to 5 and 8, respectively following (Jiang
et al., 2011). We observed that changing these parameters did not
have a substantial impact on the type of dictionary learned. We also
compared the DIADEM metric for K—SVD (by setting or to zero) ver—
sus LC—KSVD. Our results demonstrated that discriminative diction—
ary learning (LC-KSVD) outperforms the K—SVD method.
Furthermore, the DIADEM metric did not vary significantly with re-
spect to the size of the dictionary. During the classification stage,
there is only one parameter—the sparsity constraint (T) that must be
set by the user. This parameter can be set to the same value that was
used for the learning stage. To examine how the reconstruction per—
formance varies with different choices of T and K, we divided our
dataset of 50 cells into two groups, a training set containing 25 cells
and a test set containing 25 cells. We varied T from 2 to 15 and K
from 675 to 1800, respectively, and plotted the average DIADEM
metric for these 25 cells in Figure 4B and 4C. As pointed out in
describing the LC—KSVD algorithm, the performance of the classifi-
cation algorithm was not very sensitive to the size of the dictionary
and the sparsity constraint, due to the discriminative term that was
added during the dictionary and classifier learning stage. The per-
formance of our algorithm was between 0.7 and 0.8 for different
values of K and T, indicating that it is stable against parameter
changes. The tracing algorithm is, by design, sensitive to one param—
eter—the cost threshold '5. Figure 4D presents a plot of the average

112 /810'S{12umo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁ(1111] 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

 

 

 

 

 

 

 

 

 

 

 

2196 M. Megjhanl et al.

:3 e il a
A .c-Kwo

U a , «furl

_ . _ X‘—

E I  u "'- __"' -I-H" J Alix,” _J‘r
E 1;. " | E
E E _ ..
a: "li [I '5 r
L _ ._
_u m
2, '3' '5 r2. -.. . '
E 1 . - e- ' '
:1 ,3 r ‘ 1:. :1 5 -

13.: a 4.

||| rel Pres-cm we eat:- hill-o vitic-
Tracing Type 312E ofthe ﬂute-la"; K
D il D 1.[.‘
D B E'.E|
.2 I” _
.E _ '—"l-i- Max _,____ r‘--.. ._____. E _"-.
.3 o - "r ~- -=._,,./ E I} . “aka
I.— .
.= -: “we.
.— I ‘— 12 "‘-—_._
he" or; g E“ - - 1L—
3 D 5 E L" 5
CI
l:--'-I
El ‘- r r I} 3 - I r I - r '
[I 5 IIZI 1E 50 551) IIEISJZI 1551]
Erraer [Zone-1.1mm T ED5TThthGId_ I

Fig. 4. Performance of our algorithm compared to manual reconstruction as
measured by the DIADEM metric. (A) The mean DIADEM metric for our algo-
rithm (0.77) was higher than the value for the algorithm of (Galbreath,
2011)[1](0.65) and the GVF based Vesselness-(Wang et al., 2011)[2] (0.68)
based algorithm. (B) Our algorithm was insensitive to the size of the diction-
ary parameter K. (C) Our algorithm was insensitive to variations in the spars-
ity constraint T. (D) Increasing the cost threshold 1.“ led to reduced
performance, as expected. A threshold of 200 was chosen empirically for all
the subsequent experiments based on this analysis

DIADEM metric for 25 different cells against the cost threshold. As
expected, the performance of the algorithm was sensitive to this par—
ameter. To test the robustness of the parameters to perturbations,
we selected the parameters (K, T, t) with the highest DIADEM met-
ric on the training set and traced the test set. The algorithms per—
formed equally well on this dataset with a mean DIADEM metric of
0.77 and a standard deviation of 0.07.

We also compared the performance of our algorithm with two
different state of the art algorithms based on Laplacian of Gaussian
(LOG) and vesselness measures for detecting the seed points
(Galbreath, 2011; Wang et al., 2011) for microglia images. The re-
sults were found to be on par, and in some cases, better, as shown in
Figure 4A. However our algorithm has the important advantage of
performing reconstructions in a scalable and seamless manner across
large 3—D image mosaics containing thousands of cells as exempli—
fied by Figure 1B. This gives us the ability to perform arbor analytics
seamlessly, on a large scale, over extended tissue regions.

3.2 Population—scale arbor morphology analysis by
harmonic co—clustering of L—measure data

Given the reality that no single number captures all aspects of a
complex cellular arbor, it is necessary to compute libraries of arbor
features. Scorcioni et al. (2008) have compiled a comprehensive li-
brary called the L—measure, containing approximately 130 features
per arbor that quantify various aspects of arbor morphology (e.g.
size and shape of the soma, number of stems, branching and taper—
ing profiles, etc.). These features capture the seemingly abstract no—
tion of ‘arbor morphology’ in the aggregate. In this work, we
adopted this methodology for microglia populations, taking advan-
tage of the fact that our reconstructions are guaranteed to be trees.
This computation yields a large table of L—measure data with 130
columns and as many rows as there are cells. Interpreting this large
table to extract usable insight is a difficult task for several reasons.
First the data dimensionality is high, and individual L—measure fea—
tures represent dissimilar quantities (lengths, areas, volumes, ratios,
counts, etc.).

 

Fig. 5. Quantitative analysis of the microglial cell population by harmonic co-
clustering of the L-measure data. (A) 3-D rendering of the reconstructed
microglial field in Figure 1, with the arbor traces color coded to indicate the
automatically identified groups (red: Group 1, Yellow: Group 2, Green: Group
3, Blue: Group 4). (B) Heatmap representation of the co-clustering results.
Each row in the heatmap corresponds to one cell, and each column corres-
ponds to one feature in the L-measure. The co-clustering identified four prin-
cipal groups. Representative cells from these groups are shown in Panels
G1—G4, and correspond to ramified cells (G1), elongated cells (G2), activated
cells (G3) and amoeboid/round cells (G4), respectively

The most common need for microglia analysis is to organize the
cell population into groups of similar cells so the data interpretation
can be attempted one group at a time. Another practical need is to
identify features and groups of features that distinguish groups of
cells. Co—clustering is a natural strategy for achieving these goals
simultaneously. The choice of an appropriate distance measure is a
central decision for co—clustering. Traditional metrics, such as the
Euclidean distance measure, are quite inadequate for at least two
reasons. First, the various features in the L—measure are dissimilar
quantities with different units (e.g. soma volume versus process
length). Second, the dimensionality of the data is high. Third, the
data is inherently noisy. For these reasons, we prefer the non-linear
stochastic diffusion distance (Coifman and Lafon, 2006) to compare
arbor morphologies. Coifman’s unsupervised harmonic co—cluster—
ing algorithm (Lu et al., 2014) uses this measure in conjunction with
Haar wavelet smoothing to robustly identify groups of cells and fea—
tures in a hierarchical manner. Importantly, this algorithm has very
few tunable parameters, and usable results are produced with de—
fault parameter settings. The harmonic co—clustering algorithm clus—
ters both cell reconstructions and cell features at multiple scales
simultaneously. This reveals groups of cells with similar morpho-
logical properties, and the corresponding features that distinguish
the cell groups. The results of co—clustering are presented as a heat—
map and dual—tree representation in Figure 5B. Each row in the
heat—map corresponds to one cell, and each column corresponds to
one feature. The horizontal tree on the left—hand side of the heat—
map shows the grouping of the cells, whereas the tree on the top
shows the grouping of features. The analysis reveals that microglia
in this dataset fall into four major groups (indicated by circles drawn
on the horizontal tree). Close—up renderings of representative cells
from the four groups are presented in Panels 5 G1—5 G4. They clearly
correspond to the known microglial activation states including rami-
fied/resting, elongated, activated, and amoeboid/round, respectively.
The percentages of these four groups in the population are listed in

112 /810'spaumo [p.IOJXO'SOTlBIHJOJUTOTQ/ﬁ(1111] 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

Three-dimensional reconstruction and quantitative profiling of microglia populations 2197

 

Table 2. Relative abundances of arbor morphology groups

 

Group 1 Group 2 Group 3 Group 4 Total

 

Population 993 960 927 430 3310
Percentage 31% 29% 27% 13% 100%

 

Table 3. Selected features of arbor morphology groups

 

Group Surface Volume Segments Stems Branch Bifurcation Skewness

 

area ( pm3) point

(MHZ)
1 159 174 35 8 14 13 30.1
2 78 84 19 5 7 6 28.3
3 42 44 9 2 4 5 19.6
4 2 1 0 0 0 0 0

 

Table 2. The ramified and elongated cells have the highest propor—
tion in this data set and they are evenly distributed, whereas the acti—
vated and amoeboid cells are the smallest populations. The
morphological complexities of the four groups are in decreasing
order. We also calculated the mean values of the significant features
from each group in Table 3. The overall size (surface area and vol—
ume) of the four groups are dramatically different from each other.
Ramified cells and elongated cells are much larger than the activated
cells and amoeboid cells. The complexities (segments, bifurcation,
branch point and skewness) of different groups are also distinct.
Ramified and elongated cells exhibit higher complexity compared to
the other two types. This example illustrates the practical utility of
our method.

4 Conclusion and Discussion

Our method provides a comprehensive population—scale solution for
reconstructing, mapping, and quantitatively profiling microglial
arbors in a scalable and seamless manner over extended 3—D regions
of brain tissue. At the scale of individual cells, our method outper—
forms current approaches as summarized in Figure 4. At the tissue
scale, our method provides novel capabilities. It can be used to study
structural and functional alterations of microglia in response to di—
verse stimuli, for example, experimental drugs (Dambach et al.,
2014), injury (Rey-Villamizar et al., 2014), and alcohol abuse (de la
Monte and Kril, 2014). By reconstructing each and every cell in the
image field, we avoid the problem of high variance associated with
sub—sampling—based methods like unbiased stereology (Mouton,
2011), important for precise measurement of microglial responses at
precisely chosen sites. Our algorithms are capable of adapting to
novel image collections by machine learning, and are not restricted
to a limited range of samples that fit a predefined set of analytical
models. The ‘dice and trace’ method guarantees that our method
can generate seamless reconstructions of the microglia that straddle
imaging windows, and is indefinitely scalable with existing com—
puters. This design will be crucial as large—scale brain tissue mapping
efforts turn their focus towards the under—served ‘other brain’ com—
posed of glia and vasculature (Fields, 2013).

Formulating the reconstruction problem in terms of minimal
spanning trees is important—it not only guarantees that the recon—
structions are trees but also avoids the difficult problem of breaking
non—tree reconstructions. Our algorithm for dynamic linking of
nodes improves upon the traditional FMM algorithm in several

ways. First, we construct multiple trees simultaneously from a com—
mon pool of nodes. This design not only takes advantage of how
microglia are distributed in non—overlapping spaces, but also pro—
vides an approach to parallel computing for scalability. Second, the
edge costs between nodes are not all defined when the algorithm
begins execution. This is because our cost metric depends on the
costs of the neighboring nodes. As the trees grow from their respect—
ive roots, more nodes are included in the queue dynamically, and
their costs are updated as they are added. The final difference is that
our algorithm incorporates a cost threshold '5, as explained above.
Nodes that are deemed more expensive than this threshold are not
added to a tree. This is a reliable mechanism to prevent distant and
ambiguous pixels from being erroneously incorporated into our
reconstructions.

Harmonic co—clustering is an effective exploratory analysis
method that opens the door to subsequent group—specific analysis.
This method is robust to noise in features, produces biologically
meaningful yet concise results, and is scalable to large datasets (Lu
et al., 2014). Our experimental results show that our method is able
to identify morphologically distinct subpopulations of microglia
that concord with the known biology. On a practical note, we have
found our linked software implementation method (www.farsight—
toolkit.org) to be particularly suited to microglia analysis. Each row
of the harmonic co—clustering heat map is directly linked to an indi-
vidual cell, and its corresponding L—measure data. This linking ex-
tends to other analytics tools (Xu et al., 2013), and a comprehensive
3—D visualization and proofreading system (Luisi et al., 2011). In
summary, our method will enable comprehensive analysis of micro-
glia morphology and distribution, and coupled with multi—channel
3-D imaging (Bjornsson, 2008), will provide unprecedented methods
for mapping cellular—scale alterations as a function of development,
function, disease, or injury.

Acknowledgements

We are grateful to Prof. Lawrence Carin at Duke University and Prof. Ronald
Coifman at Yale University for advice on harmonic co-clustering analysis. We
also thank Ms. Audrey Cheong for manual reconstruction assistance, Mr.
Zachary Galbreath at Kitware Inc., for software process assistance and Dr.
Raghav Padmanabhan, for his assistance in revising this manuscript. Funding:
DARPA Grant N66001-11-1-4015, and NIH Grant R01EB014955.

Conﬂict of Interest: none declared.

References

Aharon,M. et al. (2006 ) K-SVD: an algorithm for designing overcomplete dic-
tionaries for sparse representation. IEEE Trans. Signal Process, 54,
4311—4322.

Al-Kofahi,Y. et al. (2010) Improved automatic detection and segmentation of
cell nuclei in histopathology images. IEEE Trans. Biomed. Eng., 57,
841—852.

Al-Kofahi,Y. et al. (2008) Improved detection of branching points in algo-
rithms for automated neuron tracing from 3D confocal images. Cytom. Part
A, 73, 36—43.

Bas,E. and Erdogmus,D. (2010) Piecewise linear cylinder models for 3-dimen-
sional axon segmentation in brainbow imagery. In: Proceedings oft/7e IEEE
International Symposium on Biomedical Imaging: From Nano to Macro.,
pp. 1297—1300.

Bjornsson,C.S. et al. (2008) Associative image analysis: a method for auto-
mated quantiﬁcation of 3D multi-parameter images of brain tissue.
]. Neurosci. Methods, 170, 165—178.

112 /810'spaumo [p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

2198

M. Megjhani et al.

 

Breitenreicher,D. et al. (2013) Hierarchical discriminative framework for de-
tecting tubular structures in 3D images. Inf. Process. Med. Imaging, 23,
328—339.

Chen,S.S. et al. (1998) Atomic decomposition by basis pursuit. SIAM ]. Sci.
Comput., 20, 33—61.

Chothani,P. et al. (201 1) Automated tracing of neurites from light microscopy
stacks of images. N euroinformatics, 9, 263—278.

Coifman,R.R. and Lafon,S. (2006) Diffusion maps. Appl. Comput. Harmon.
Anal., 21, 5—30.

Dambach,H. et al. (2014) Glia and epilepsy: experimental investigation of
antiepileptic drugs in an astroglia/microglia co-culture model of inﬂamma-
tion. Epilepsia, 55, 184—192.

Fields,R.D. (2013) Neuroscience: map the other brain. Nature, 501, 25—27.

Galbreath,Z.S. (2011) Tracing, extracting features, and classifying microglia
from volumetric images of brain tissue. New York (Troy): Rensselaer
Polytechnic Institute, 56p.

Gehrmann,]. et al. (1995) Microglia: intrinsic immuneffector cell of the brain.
Brain Res. Reu, 20, 269—287.

Gillette,T.A. et al. (2011) The DIADEM metric: comparing multiple recon-
structions of the same neuron. Neuroinformatics, 9, 233—245.

Gonzalez,G. et al. (2010) Delineating trees in noisy 2D images and 3D image-
stacks. In: 2010 IEEE Computer Society Conference on Computer Vision
and Pattern Recognition. IEEE, pp. 2799—2806.

Gorodnitsky,I.F. and Rao,B.D. (1997) Sparse signal reconstruction from lim-
ited data using FOCUSS: a re-weighted minimum norm algorithm. IEEE
Trans. Signal Process, 45, 600—616.

He,W. et al. (2003) Automated three-dimensional tracing of neurons in con-
focal and brightﬁeld images. Microsc. Microanal., 9, 296—310.

Jiang,Z. et al. (2011) Learning a discriminative dictionary for sparse coding
Via label consistent K-SVD. In: IEEE Conference on Computer Vision and
Pattern Recognition (CVPR). IEEE, pp. 1697—1704.

Jiménez,D. et al. (2014) Improved automatic centerline tracing for dendritic
and axonal structures. Neuroinformatics, 13, 1—18.

De la Monte,S.M. and Kril,].J. (2014) Human alcohol-related neuropathol-
ogy. Acta Neuropathol., 127, 71—90.

Lu,Y. et al. (2014) Quantitative arbor analytics: unsupervised harmonic co-
clustering of populations of brain cell arbors based on L-measure.
Neuroinformatics, 13, 47—63.

Luisi,]. et al. (201 1) The FARSIGHT trace editor: an open source tool for 3-D
inspection and efﬁcient pattern analysis aided editing of automated neuronal
reconstructions. Neuroinformatics, 9, 305—315.

Mallat,S.G. (1993) Matching pursuits with time-frequency dictionaries. IEEE
Trans. Signal Process, 41, 3397—3415.

Mariano,A. et al. (2013) Hardware and software implementations of Prim’s
algorithm for efﬁcient minimum spanning tree computation. In: Embedded
Systems: Design, Analysis and Veriﬁcation. Springer, Heidelberg, pp.
1 5 1—1 5 8 .

Meijering,E. (2010) Neuron tracing in perspective. Cytom. A, 77, 693—704.

Mouton,P.R. (2011) Unbiased Stereology: A Concise Guide. The Johns
Hopkins University Press, Baltimore, MD.

Myatt,D.R. et al. (2012) Neuromantic - from semi-manual to semi-automatic
reconstruction of neuron morphology. Front. N euroinform., 6, 4.

Narayanaswamy,A. et al. (2011) 3-D image pre-processing algorithms for im-
proved automated tracing of neuronal arbors. Neuroinformatics, 9,
219—231.

Natarajan,B.K. (1995 ) Sparse approximate solutions to linear systems. SIAM
]. Comput., 24, 227—234.

Ohsawa K. and Kohsaka S. (2011) Dynamic motility of microglia: purinergic
modulation of microglial movement in the normal and pathological brain.
Glia, 59, 1793—1799.

Padmanabhan,R.K. et al. (2014) An active learning approach for rapid charac-
terization of endothelial cells in human tumors. PLoS One, 9, e90495.

Pati,Y.C. et al. (1993) Orthogonal matching pursuit: recursive function ap-
proximation with applications to wavelet decomposition. In: Proceedings of
27th Asilomar Conference on Signals, Systems and Computers. IEEE
Comput. Soc. Press, pp. 40—44.

Peng,H. et al. (2010) Automatic reconstruction of 3D neuron structures using
a graph-augmented deformable model. Bioinformatics, 26, i3 8—i46.

Peng,H. et al. (2014) Virtual ﬁnger boosts three-dimensional imaging and
microsurgery as well as terabyte volume image Visualization and analysis.
Nat. Commun., 5, 4342.

Rey-Villamizar,N. et al. (2014) Large-scale automated image analysis for com-
putational proﬁling of brain tissue surrounding implanted neuroprosthetic
devices using Python. Front. Neuroinform., 8, 39.

Rouchdy,Y. et al. (201 1) Minimal path techniques for automatic extraction of
microglia extensions. Int. ]. Comput. Vis. Biomech., 4, 35—42.

Rouchdy,Y. and Cohen,L.D. (2013) Geodesic voting for the automatic extrac-
tion of tree structures. Methods and applications. Comput. Vis. Image
Underst., 117, 1453—1467.

Rubinstein,R. et al. (2010) Dictionaries for sparse representation modeling.
Proc. IEEE, 98, 1045—1057.

Schmitt,S. et al. (2004) New methods for the computer-assisted 3-D recon-
struction of neurons from confocal image stacks. Neuroimage, 23,
1283—1298.

Scorcioni,R. et al. (2008) L-Measure: a web-accessible tool for the analysis,
comparison and search of digital reconstructions of neuronal morphologies.
Nat. Protoc., 3, 866—876.

Sethian,].A. (1996) A fast marching level set method for monotonically
advancing fronts. Proc. Natl. Acad. Sci. USA, 93, 1591—1595.

Streit,W.]. (2005) Microglia and neuroprotection: implications for
Alzheimer’s disease. Brain Res. Reu, 48, 234—239.

Teacher,A.G.F. and Grifﬁths,D.]. (2011) HapStar: automated haplotype net-
work layout and Visualization. Mol. Ecol. Resour., 11, 151—153.

Tsai,C.-L. et al. (2011) Robust, globally consistent and fully automatic multi-
image registration and montage synthesis for 3-D multi-channel images. ].
Microsc., 243, 154—171.

Turetken,E. et al. (2011) Automated reconstruction of dendritic and axonal
trees by global optimization with geometric priors. Neuroinformatics, 9,
279—302.

Turetken,E. et al. (2013) Reconstructing Loopy Curvilinear Structures Using
Integer Programming. In: 2013 IEEE Conference on Computer Vision and
Pattern Recognition. IEEE, pp. 1822—1829.

Vasilkoski,Z. and Stepanyants,A. (2009) Detection of the optimal neuron
traces in confocal microscopy images]. Neurosci. Methods, 178, 197—204.

Wang,Y. et al. (2011) Novel 4-D open-curve active contour and curve
completion approach for automated tree structure extraction. In: IEEE
Conference on Computer Vision and Pattern Recognition (C VPR). IEEE, pp.
1105—1112.

Wearne,S.L. et al. (2005 ) New techniques for imaging, digitization and ana-
lysis of three-dimensional neural morphology on multiple scales.
Neuroscience, 136, 661—680.

Xiao,H. and Peng,H. (2013) APP2: Automatic tracing of 3D neuron morph-
ology based on hierarchical pruning of a gray-weighted image distance-tree.
Bioinformatics, 29, 1448—1454.

Xu,Y. et al. (2013) Unsupervised inference of arbor morphology progression
for microglia from confocal microscope images. In: Proceedings of the IEEE
10th International Symposium on Biomedical Imaging: From Nano to
Macro. IEEE, San Francisco, pp. 135 6—1359.

Yuan,X. et al. (2009) MDL constrained 3-D grayscale skeletonization algo-
rithm for automated extraction of dendrites and spines from ﬂuorescence
confocal images. N euroinformatics, 7, 213—232.

Zhang,Q. and Li,B. (2010) Discriminative K-SVD for dictionary learning in
face recognition. In: 2010 IEEE Comput. Soc. Conf. Comput. Vis. Pattern
Recognit., pp. 2691—2698.

112 /810'spaumo [p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘09 lsnﬁnv uo ::

