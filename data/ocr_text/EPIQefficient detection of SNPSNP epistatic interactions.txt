Vol. 30 ISMB 2014, pages i19—i25
doi: 10. 1 093/bioinformatics/btu261

 

EPIQ—efficient detection of SNP—SNP epistatic interactions for

quantitative traits

Ya’ara Al’kil’l1, Elior Rahmahil, Marcus E. Kleberz, Reijo Laaksonen3’4, Winfried Marzz’5’6 and

Eran Halperih1’7’8’*

1The Blavatnik School of Computer Science, Tel Aviv University, Tel—Aviv 69978, Israel, 2Vth Department of Medicine
(Nephrology, Hypertensiology, Endocrinology, Diabetology, Rheumatology), Medical Faculty of Mannheim, University of
Heidelberg, Mannheim D—68167, Germany, 3Zora Biosciences Cy, Espoo 02150, Finland, 4Medical School, University of
Tampere, Tampere 33104, Finland, 5Clinical Institute of Medical and Chemical Laboratory Diagnostics, Medical
University of Graz, Graz A—8036, Austria, 6Synlab Academy, Synlab Services GmbH, Mannheim D—68165, Germany,
7Department of Molecular Microbiology and Biotechnology, George Wise Faculty of Life Science, Tel—Aviv University, Tel—
Aviv 69978, Israel and 8International Computer Science Institute, Berkeley, CA 94704, USA

 

ABSTRACT

Motivation: Gene—gene interactions are of potential biological and
medical interest, as they can shed light on both the inheritance mech-
anism of a trait and on the underlying biological mechanisms.
Evidence of epistatic interactions has been reported in both humans
and other organisms. Unlike single-locus genome-wide association
studies (GWAS), which proved efficient in detecting numerous genetic
loci related with various traits, interaction-based GWAS have so far
produced very few reproducible discoveries. Such studies introduce a
great computational and statistical burden by necessitating a large
number of hypotheses to be tested including all pairs of single nucleo-
tide polymorphisms (SNPs). Thus, many software tools have been
developed for interaction-based case—control studies, some leading
to reliable discoveries. For quantitative data, on the other hand, only a
handful of tools exist, and the computational burden is still substantial.
Results: We present an efficient algorithm for detecting epistasis in
quantitative GWAS, achieving a substantial runtime speedup by avoid-
ing the need to exhaustively test all SNP pairs using metric embedding
and random projections. Unlike previous metric embedding methods
for case—control studies, we introduce a new embedding, where each
SNP is mapped to two Euclidean spaces. We implemented our
method in a tool named EPIQ (EPlstasis detection for Quantitative
GWAS), and we show by simulations that EPIQ requires hours of pro-
cessing time where other methods require days and sometimes
weeks. Applying our method to a dataset from the Ludwigshafen
risk and cardiovascular health study, we discovered a pair of SNPs
with a near-significant interaction (P = 2.2 x 10—13), in only 1.5 h on 10
processors.

Availability: https://github.com/yaarasegre/EPIQ

Contact: heran@post.tau.ac.il

1 INTRODUCTION

Genome-wide association studies (GWAS) have so far detected
thousands of single nucleotide polymorphism (SNP) loci that are
associated with various traits (Hindorff et al., 2009).
Unfortunately, for most complex traits the discovered SNPs
explain only a small fraction of the estimated heritability, a

 

*To whom correspondence should be addressed.

phenomena often referred to as the ‘missing heritability’
(Maher, 2008). One plausible explanation suggested for this
problem is the existence of an epistatic effect, where two or
more loci have a synergetic inﬂuence on the phenotype, also
referred to as gene—gene interactions (Maher, 2008). The discov-
ery of interacting SNP loci has an additional beneﬁt, as it may
shed light on the underlying biological mechanism or involved
pathways.

Despite evidences of gene—gene interactions reported in both
human and other organisms (Evans et al., 2006), very few repro-
ducible discoveries were reported by GWAS (Liu et al., 2011;
Prabhu and Pe’er, 2012 for example). The amount of data pro-
duced in a single study is a possible cause: when searching for
groups of k SNPs with an epistatic effect, the number of possible
k—sized groups is @(mk), where m is the number of SNP loci.
With current GWAS typically including hundreds of thousands
of SNPs, this implies both a computational and statistical burden
even for groups sizes as small as k = 2: the numerous tests takes
days and even weeks to compute and require a substantial cor-
rection for multiple hypothesis, leading in some cases to a loss of
power (Evans et al., 2006). One common approach is the reduc-
tion of the search space, usually by ﬁltering candidate loci pairs:
Marchini et al. (2005) suggested selecting a subset of SNPs with a
moderate marginal effect and testing for interaction in pairs
where at least one locus is included in the subset. Reduction of
the search space can also be done by manipulating contingency
tables WVan et al., 2010; Zhang et al., 2010) or searching for a
linkage disequilibrium (LD) contrast between cases and controls
(Brinza et al., 2010; Prabhu and Pe’er, 2012). A more straight-
forward approach is increasing the computational power, either
by multi-threaded implementations or by utilizing special hard-
ware (Hu et al., 2010; Yung et al., 2011). Binary operations are
used in some cases to speedup performance (Prabhu and Pe’er,
2012; Wan et al., 2010).

All of these tools, and many others, are designed for case—
control studies; whereas for the quantitative case, where the
tested phenotypes are physiological measurements of some
sort, the selection of available software is limited. Since the
phenotype tested is not dichotomous, testing for quantitative
associations can be more challenging compared with case—con-
trol studies, as methods utilizing contingency tables, LD—contrast
or binary operations are usually inapplicable. Methods tailored

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.orgﬂicenses/
by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial
re-use, please contact journals.permissions@oup.com

112 [3.10811211an[plOJXO'SODBIILIOJIIlOlQ/ﬂ(11111 IIIOJJ popcolumoq

910K ‘09 lsnﬁnV no :2

Y.Arkin et al.

 

for case—control studies can be applied on quantitative traits
after dichotomizing the phenotype (as in Bhattacharya et al.,
2011); however, the resulting statistical test is different than the
original, thus a loss of power is inevitable and would be difﬁcult
to quantify.

In this study, we present EPIQ (EPIstasis detection for quan-
titative GWAS)—an efﬁcient algorithm for detecting pairs of
SNP loci that have an epistatic effect on quantitative phenotypes.
EPIQ achieves a substantial runtime speedup by avoiding the
need to exhaustively test all SNP pairs: it applies a carefully
chosen transformation that maps each genotyped SNP to a
vector in a Euclidean space. This transformation has the prop-
erty that SNP pairs with an epistatic effect are converted
to vector pairs with a large inner product. A random projections
method is subsequently applied to efﬁciently recover these
SNPs. A novelty of our method is that each SNP is projected
to two different points, for a more efﬁcient detection of
interacting SNPs. We show on simulated data that in just >3 h
our algorithm was able to process a dataset that would take
days or weeks using state of the art software, and present the re-
sults of running EPIQ on data from the Ludwigshafen risk and
cardiovascular health (LURIC, Winkelmann et al. 2001) study.

2 METHODS

2.1 Outline

EPIQ is designed to efﬁciently discover SNPs that have a signiﬁcant
epistatic effect over a quantitative phenotype, without exhaustively test-
ing all pairs of SNPs in a dataset. This goal is achieved in two steps: a
ﬁltering stage—generating a list of candidate SNP pairs, and a validation
stage—ﬁtting a linear regression model to these pairs. By shortening the
list of pairs to be tested during the ﬁltering stage, running time for the
linear regression step is reduced substantially. Filtering is performed by
assigning a score to each SNP; this score is stochastically generated so
that for each pair of SNPs, the expected value for the product of their
scores is proportional to the generalized likelihood ratio (GLR) test stat-
istic of their interaction. This means epistatic pairs are expected to have a
high score product. By performing multiple iterations and collecting pairs
that pass a given threshold, we assure with high probability that if an
interacting pair exists, it is included in the candidates list and will be
reported during validation stage. To do so we present a new test-statistic
‘52 which is roughly proportional to the GLR test score, and apply a
random projection algorithm that discovers pairs with exceptionally
high :2 scores.

2.2 Model description

2.2.] Model input EPIQ receives as input a vector y e R”, represent-
ing the phenotypic values of all n individuals in the cohort, and a matrix
anm 6 {0,1}”’“” representing the cohort at m polymorphic loci. The
algorithm is adjusted for binary SNPs; therefore genotypes should be
converted to a binary representation according to the expected type of
interaction. For example, converting AA to 0 and aA, aa to 1 states a
dominant model of interactions. The phenotype vector y is centered
so that it has zero mean and SD of 1. x e {0, 1}” denotes the column
vector of allelic values measured for all n samples at a certain locus. x,-
is the allele value of this locus for person number i and y, is the
phenotype value of person number i. We denote p=Pr[x,-=1], and
estimate it with the maximum likelihood estimator 13 =mean(x).
Denote x2 = (xi xg, . . . , x31)T, xx’=(x1x’1,x2x’2, .. . ,xnx;)T and
yxx’ = (ylxlx’1,y2x2x’2, . . . ,ynxnx;)T.

2.2.2 Linear model When testing for an epistatic interaction between
a pair of SNPs, the linear model can be deﬁned as follows (Cordell, 2009):

yi=oco +a1xi+a2xg+a3xixg+ei (1a)
6,-~N(0, 02) (1b)
Hola3=0,H12053750 

Since tests for interaction are usually performed after testing for a main
effect for each of the SNPs, it is reasonable to zero the main effects from
the model. By altering the model so that 041 = a2 = 0 and a0, 053 are
replaced with ,80, ,81 respectively, a new, simpler model is obtained:

yi = .30 + 5135195;- + 6i (23)
€,-~N(0, 02) (2b)
Ho:,31=0,H12,31750 (20)

In this case, using ordinary least squares (OLS), the GLR tests statistic is:

Z (yi — Bo — .31 9519592
2lnGLR=—nln i (3)

20% —7)2

Where y = mean(y). This simpliﬁcation allows us to deﬁne an alternative
test statistic, 12, which is an approximation of the GLR test statistic and
can be very useful for our ﬁltering stage. Disregarding the main effect can
in fact lead to false positive results, but these will only be a fraction of the
total number of SNP pairs and will all be discarded during the validation
stage, where pairs are tested against the full linear model (Equation 1).

To achieve simplicity and efﬁciency, the model does not include cov-
ariates—the residuals from the phenotype adjusted for other parameters
should be used as the response variable. Population stratiﬁcation can be
addressed by applying an adjustment method such as EIGENSTRAT
(Price et al., 2006) and using the ﬁrst axes of variation as covariates
while adjusting the phenotype. The model assumes linkage equilibrium
between SNPs, an assumption that does not hold for GWAS, where
proximal SNPs are in LD. As a result, the distribution of the 12 score
for proximal SNPs deviates from what is expected under the null assump-
tion, which results in an excess of pairs passing the ﬁltering stage. This
problem can be addressed by dismissing proximal pairs during the ﬁlter-
ing stage, and exhaustively testing them later during post-processing time.
As the number of proximal pairs in LD is 0(m), the cost of this correction
is minor.

 

2.3 GLR test and the new test-statistic T2

In the following section we introduce our new test statistic :2 and show
that for large sample sizes, 2ln GLR % 12. The new tests statistic is pre-
sented not as a means to achieve more power, rather as a means for
reducing runtime by serving as a proxy to the GLR test statistic: we
show in the next section how random projections methods can efﬁciently
detect pairs with a high 12 score, as a ﬁltering stage for detecting statis-
tically signiﬁcant interactions.

Since y is standardized, the denominator of Equation (3) equals n.

Replacing [30, [31 in Equation (3) with their OLS estimators

7—81ﬁ

 

 

L’_2 respectively, it is easy to verify that:
_XX/

’ XZX’2
A A XX’ _ 2
Z (yi — .30 — 513519592 = Z<yi — ﬂog-x;- — XX’)) (43)
i i XX — XX
yxx’ 2
= n 1 — _—_2 (4b)
XX’ — XX’

 

i20

112 ﬁhO'smumo[pJOJXO'sor1emJOJurorw/2d11q IIIOJJ papeolumoq

910K ‘09 lsnﬁnV no :2

EPIQ

 

2ln GLR: —n1n(1  (5)

R — ﬁz
Under the linkage equilibrium assumption, W —>1’ pp’. Using ﬁrst order

Taylor expansion, after neglecting 52, we conclude that for a large
sample size:

—2
2 yXX’

1' n w 2 ln GLR (6)

AA,

Figure 1a displays 2ln GLR versus 12. With r2 of 0.99, 12 is a good
approximation of the GLR score. As seen in Figure 1c, under the null
assumption of no interaction, the distribution of 12 is very close to a chi-
square distribution with 1 degree of freedom, similar to the GLR test
statistic (chi-square goodness-of—ﬁt test P = 0.396). As a result, the task
of ﬁnding an interacting SNP pair can now be replaced with the task of
ﬁnding a pair with signiﬁcantly high 12 score. In the next section, we show
that this task can be done efﬁciently without testing all pairs.

2.4 Efﬁcient discovery of interacting SNPs

We describe an algorithm for ﬁnding pairs of SNP where ‘52 is larger
than a given threshold. For each binary SNP x we deﬁne a vector

 

v=(v1,...,v,,) where vi= ﬁlial—1x,- and a vector u=(u1, ...,un) where
ui=sign(y,-)v,-. For example, if y=(—0.1,0.2, —0.3, —0.4, —0.5, 0.6)

and x=(1,1,0,1,0, 0) then v= 01m(s/0.1,s/0.2, 0, «0.4, 0, 0) and

(—s/0.1,s/0.2,0, —s/0.4,0,0). It is easy to see that

 

_ 1
u _ —
«ass/6
1 n
VX, x’ : v - u’= —ANZyix,-x;=t (7)
WWI) i=1
So instead of searching for pairs with an exceptional ‘L’ score, we are now

looking for an exceptional inner product size. To do so we apply a
random projections method: we perform multiple iterations; in each

 

 

 

 

(a)   (b) 1 , . . .
Q) O
80 e o :3 0‘99 0.8 '
.  @1223" °°
60 03 :8?  0.6
NP #33? ° (\L
40 ogéﬁ, 0.4
o o O {0:0 o
20 ° #23 ° 0.2
40 so 100 "0 1000 2000 3000 4000 5000
2ln(GLR) n

New test statistic T2 (b) r2 as a function of n

 

 

4 12 16

8
x2 distribution
QQ Plot of r2 vs X2 distribution

Fig. 1. The new test-statistic: (a) 2 ln GLR versus 12. Data were gener-
ated with n = 5000, MAF e [0.01, 0.5]; marginal and epistatic effects were
sampled uniformly from the range (0, 1); r2 = 0.99. (b) r2 of the linear
correlation between 2ln (GLR) and 12, as a function of n: :2 is highly
correlated with the original test statistic for all tested sample sizes. (c) 12
distribution is proportional to the chi-square distribution with 1 degree of
freedom. Passed a chi-square goodness-of—ﬁt test with P—value of 0.396

iteration we sample a random vector r= (r1, r2, ..., rn), where
r,-~N(0,1). For each SNP x, we calculate two scores: a=v - r and
b=u - 1'. Since r,- are sampled i.i.d. with mean 0 and variance 1, the ex-
pected value of the two scores’ product is T:

VX, X’ : E,[ab’] = E,  rim-Z rjuj’] = v . u’ = ‘L’ (8)
i 1

Note that while non-interacting SNPs have a zero expected value for ab],
6
pairs with a signiﬁcant P—value after a Bonferroni correction of (I: ) are

expected to have 12 of over 55. It can also be shown that
Var[ab’]=t'2+||v||2||u’||2. As a result, the distribution of ab] has a
longer tail under the alternative assumption, so for any positive threshold
t, the probability of lab/l at is always greater for interacting pairs
(Fig. 2a). We utilize this fact to distinguish between interacting and
non-interacting pairs: we perform several iterations where a vector 1' is
sampled, and the scores a and b are calculated for all SNPs. In each
iteration we collect the pairs of SNPs whose scores product pass a
given threshold t. The last part can easily be done without testing all

pairs: we deﬁne a vector 5 = (a? . . .afn) and a vector li= (b? . . .bfn).
Both vectors are ﬁrst sorted in descending order and then scanned in
linear time to ﬁnd pairs x, x’ such that asz2 > t2.

Since, as seen in Figure 2b, the variance of ab, is affected by the com-
bination of minor allele frequencies (MAFs) of both SNPs, different t
thresholds are used for different MAF combinations. This is done by
assigning SNPs to bins of similar MAF: each bin B has two score vectors,
:3, :3, sorted by their score value. For each pair of bins, B and B’, we
report all SNP pairs x e B, x’ e B’ where azb'2 2 if”, /\ a'zb2 Z rig,
when t3”, is the appropriate threshold. Reported SNP pairs are validated
against the linear model. Optimal t thresholds for each pair of bins were
empirically calculated, as described in the following section. See algo-
rithm pseudo-code 1.

 

for l = 1 to L do
sample a vector r E R” st. 7“,- ~ N(0, 1) ;
foreach SNP x do
B := bin number of x;
append a2 := (v - r)2 to 5'3;
append b2 := (u - r)2 to EB;
end
foreach bin B do
sort vector 53 ;
sort vector EB ;
end
foreach pair of bins B, B’ do
scan vectors 53 , BB, and validate all pairs x, x’ where
min(a2b’2, a’2b2) 2 #33,;
report pairs that pass validation as interacting;

 

end
end

 

 

 

Algorithm 1: EPIQ pseudo-code

2.4.1 Runtime analysis The improvement in runtime achieved by
EPIQ is due to the fact that only a fraction of the SNP pairs is tested.
The algorithm performs L iterations, each iteration has O(nm) operations
for calculating a, b scores and O(mlog m) operations for sorting score
vectors. If we denote 1b as the average fraction of SNP pairs that pass the
threshold t at each iteration, then scanning the vectors for interaction

 

i21

112 [3.10'SIBIIJHO[plOJXO'SODBIILIOJHIOIQ/[I(11111 111011 papeolumoq

910K ‘09 isnﬁnV uo ::

Y.Arkin et al.

 

(a)

- interacting pairs
- non-interacting pairs

  

0 t

 

ab’ score distribution

variance of ab’ vs Pr(a:,- = 1)

Fig. 2. (a) An illustration of the ab’ score distribution for interacting pairs
(blue) and non-interacting pairs (gray): interacting pairs have a higher
probability of passing a threshold t during the ﬁltering stage. 0)) Variance
of ab’ as a function of MAFs, for an interacting pair with corrected
P—value of 0.05

candidates would take  and the total runtime including valid-
ations is O(L(nm +mlog(m) + (Dim). As exhaustive testing of all pairs

take O((:)n), speedup is achieved when L <10 and also L << m. To

speedup performance, EPIQ keeps all SNP data in memory; therefore
space complexity is O(nm).

2.4.2 Choosing the parameters L, t to assure the requested power
with minimal runtime Given the stochastic nature of the algorithm,
there is always a possibility that interacting pairs will be missed. This
creates a trade-off between power and runtime, controlled by a success
rate parameter. Setting this parameter to 90%, for example, would mean
that the probability of missing a SNP pair with a signiﬁcant GLR score is
at most 10%, and the overall power achieved is at least 90% compared
with an all-pairs scan. Strongly interacting pairs have an even larger
chance of being detected, as the probability of passing the ﬁltering
stage is a function of the GLR score.

According to the success rate requested by the user, optimal values for
L and t can be set. The two parameters are strongly linked with runtime:
higher t values reduce probability of success, which means more iterations
are required in order to provide the requested success rate. This elongates
the ﬁltering stage, and also might shorten the validation stage by reducing
false positive rate. To calculate optimal parameters one must ﬁrst
calculate f E Pr [min (azb'z, a'zbz) 2 t2] for both interacting and non-
interacting pairs. One can show that (a, b’)~N2 ([0, 0], [Ilvli2 H imp, so

1' ll

the probability of the event azblzz t2 can be easily calculated. The
value off, on the other hand, is not as simple to calculate analytically.
As a result, the choice of the parameters was done empirically: A sample
dataset was randomly generated, using MAFs taken from the 1000 gen-
omes project (Abecasis et al., 2012), as explained in the results section.
SNPs were distributed among bins of similar MAFs, and each pair of
bins was assigned with the maximal threshold value that enabled the
required success rate, given the current number of iterations. As a ﬁnal
step, the number of iterations that led to the shortest runtime was chosen.

2.5 Simulated datasets

In order to test our algorithm we generated several datasets of diploid
genotypes, with cohort sizes varying between 1000 and 5000, and the
number of SNP loci between 10000 and 1 million. While generating
the SNPs we used the MAF distribution found on the 1000 genomes
project (Abecasis et al.,2012) and assumed Hardy—Weinberg equilibrium.
We later converted the datasets to a binary representation using a dom-
inant coding, where AA was translated to 0 and aA, aa to 1. We used

these datasets to demonstrate the runtime and power of EPIQ under
different conditions.

2.6 The LURIC study

We applied our method to measurements of lipid concentration in cells
(Cer(d18:0/24:1)), taken from the LURIC study. The LURIC study con-
sists of 3316 white patients hospitalized for coronary angiography be-
tween 1997 and 2000 at a tertiary care center in Southwestern
Germany (Winkelmann et al., 2001). To limit clinical heterogeneity, in-
dividuals suffering from acute illnesses other than acute coronary syn-
drome (ACS), chronic non-cardiac diseases and a history of malignancy
within the past 5 years were excluded.

2.6.1 Laboratory procedures Fasting blood samples were obtained
by venipuncture in the early morning. Genomic DNA was prepared from
EDTA anticoagulated peripheral blood by using a common salting—out
procedure. Genotyping was done using the Affymetrix Human SNP
Array 6.0 at the Synlab Center of Laboratory Diagnostics Heidelberg
and the Mannheim Institute of Public Health of Heidelberg University.

2.6.2 Quality control We used PLINK (Purcell et al., 2007) for qual-
ity control, excluding SNPs with call rate <95%. We excluded individuals
with call rate <97%, ambiguous on genetic sex test or showing high
estimated identity by descent (IBD) scores (PI_HAT 2 0.1875), control-
ling for cryptic relatedness. For the population stratiﬁcation part, we used
the Population Reference Sample (POPRES) dataset (Nelson et al., 2008)
as a reference population. We considered the ﬁrst four components of a
multidimensional scaling (MDS) on both LURIC and POPRES individ-
uals for determining and removing outliers. Finally, we had 687 253 SNPs
and 859 individuals remaining for the analysis, of which 826 had lipid cell
concentration measurements.

3 RESULTS

In this section, we show that in just a few hours EPIQ can pro-
cess amounts of data that would take weeks and even years on
common existing software. We demonstrate how the power of
EPIQ is affected by the underlying model of interaction and
present the results of applying EPIQ to a dataset from the
LURIC study.

3.1 Runtime improvement

While epistasis detection tools for case—control studies are rela-
tively common, not many quantitative pairwise epistasis tools
were found. We chose to compare EPIQ against PLINK
(Purcell et al., 2007), FastEpistasis (Schiipbach et al., 2010),
EpiGPU (Hemani et al., 2011) and EpiGPUHSIC (Kam-
Thong et al., 2011). All four tools perform an exhaustive
search, using different hardware and various statistical tests.
PLINK is a commonly used whole-genome association analysis
toolset. Its epistasis option performs linear regression tests on all
SNP pairs. F astEpistasis is an efﬁcient parallel extension of the
PLINK epistasis module. While the ﬁrst two tools run on regular
processors, EpiGPU and EpiGPUHSIC run on graphical pro-
cessing units (GPUs), which are specialized electronic circuits
that provide up to 100x speedup in performance. The former
two tools utilize different statistical tests as well: EpiGPU per-
forms an F-test, while EpiGPUHSIC is a quantitative extension
of the Hilbert-Schmidt Independence Criterion (HSIC) (Gretton
et al., 2005), which uses the correlation coefﬁcient difference be-
tween cases and controls, as an approximation to the signiﬁcance

 

112 /810's112umo[pJOJXO'sor112u1101urorq//2d11q 111011 papeolumoq

910K ‘09 isnﬁnV uo ::

EPIQ

 

of the interaction term. Since EPIQ was run with the parameter
success rate set to 80%, we compared its runtime against testing
80% of the pairs in the exhaustive search algorithms. As seen in
Table 1, EPIQ shows a great improvement in runtime, compared
with the exhaustive tools.

We ran EPIQ using different inputs in order to test how the
program scales with changes in the number of SNPs, cohort size
or requested power. As seen in Figure 3a, EPIQ scales linearly
with the number of SNP pairs in the dataset. Figure 3b shows
that gaining more power becomes increasingly time consuming
when approaching 100% power, as can be expected in stochastic
algorithms of this sort. However, one can achieve 95% power in
a matter of hours. Scaling in the number of samples is above
linear as well: while testing 5 x 1011 pairs takes 3.2h for 1000
individuals, it takes 7 times longer for 3000 samples, and 30 times
longer for 5000 samples. Nevertheless, for moderate cohort sizes
EPIQ remains an efﬁcient choice. (All benchmark tests were per-
formed on the Ubuntu Linux server with 2.5 GHz processor.)

3.2 Power analysis

To evaluate the power of our algorithm, we compared it against
two commonly used baseline methods suggested by Marchini
et al. (2005). First is a simple exhaustive all-pairs test, where all
SNP pairs are tested for interaction. Although this method is not
feasible for large datasets, the power achieved by an all-pairs test
is of relevance, as this is the upper bound for the power of our
algorithm. The second baseline we compared against is a method
in which the top K marginal predictors are identiﬁed, and then
tested for all pairwise iterations between them. When choosing

K = s/ 2m, for example, the number of tests performed
is  w m. We refer to this method as the ‘two-step’ algorithm.

In all our tests we apply the conservative Bonferroni correction,
in order to address the issue of multiple hypothesis. Since EPIQ
implicitly evaluates all SNP pairs, the number of tests for a mul-

tiple testing correction is  as in the all-pairs algorithm. For

each test the program generated a quantitative phenotype ac-
cording to the linear model described earlier,
yi=ﬁ0+ﬁ1xixg+€b where x, x’ are two SNPs that were ran-
domly chosen as the interacting pair. The phenotype was later
standardized so that y = 0, stdev(y) = 1.

We compared EPIQ against the two methods, using different
MAFs for the interacting SNPs and success rate equal to 80%
(Fig. 4a—c). Note that although the requested success rate was
80%, the actual power of EPIQ (shown in dark blue) is consist-
ently >80% of the power achieved by the all-pairs algorithm
(light blue), as this parameter states the minimal relative
power. Another conclusion drawn from these ﬁgures is that in
some cases there is a substantial difference in power between the
all-pairs test and the two-stage test (green), in favor of the all-
pairs test. The opposite is true for large MAFs, as in this case the
marginal effect is easy to detect, and the multiple testing correc-
tion is less stringent for a two-stage approach (data not shown).
Similar results were described by Evans et al. (2006), which
showed that for various models of interaction, an exhaustive
all-pairs search is more powerful compared with the two-step
strategy, despite the harsher multiple testing correction [0(m2)
compared to 0(m)]. In these cases, using EPIQ can yield a sub-
stantial improvement in power.

3.2.] Comparison with PLINK In order to further investigate
the power achieved by EPIQ, we carried 50 experiments compar-
ing our method with the linear regression performed by PLINK
and F astEpistasis, using the 50 distinct models of interaction
from Li and Reich (2000), which were adapted for quantitative
traits. These models assume that there are two phenotypic means
in the population: 0 and 1, and each model of interaction deter-
mines a different partitioning of the population to either mean.

(a) (b)15 o

12

2 9

Hours

6
1 O

3 O
O

 

 

00
n A 0000000000

O 1 4 5 u 10% 20% 30% 40% 50% 60% 70% 80% 90%
x 1011 Success rate

 

 

2 3
Number of pairs

Runtime vs number of SNP pairs Runtime vs power

Fig. 3. Runtime of EPIQ for different settings: (a) runtime for various
numbers of SNP pairs, n = 1000; EPIQ scales linearly with the number of
pairs. (b) Runtime of EPIQ for different power thresholds; nearly 100%
power can be achieved in a matter of hours (n = 1000, m = 106)

Table 1. Runtime of the C+ + implementation of EPIQ, compared with other programs available

 

 

Tool Computational method Statistical test Cores Runtime
PLINK (Purcell et al., 2007)a Exhaustive search OLS 1 ~10 years
FastEpistasis (Schiipbach et al., 2010)b Exhaustive search OLS 8 381 h
EpiGPU Oiemani et al., 2011)b Exhaustive search F-test — 9.3—90 h°
EpiGPUHSIC (Hemani et al., 2011)b Exhaustive search HSIC — 194h
EPIQ (Kam-Thong et al., 2011)b Random projections OLS on binary SNPs 8 3.2h

 

EPIQ was run with the parameter success rate set to 80%, therefore runtime is compared against testing 80% of the pairs in the exhaustive search algorithms (n = 1000,

m = 106).

aTimes were extrapolated according to a test of 1000 SNPs performed on the same 2.5 GHz processor, scaling linearly with the number of SNP pairs.

bTimes were extrapolated according to self-reported performance.
cRuntime varies with the chosen GPU.

 

i23

112 /810's112umo[pJOJXO'sor112u1101urorq//2d11q 111011 papeolumoq

910K ‘09 isnﬁnV uo ::

Y.Arkin et al.

 

 

1
|=égr§irs 
. 0 - 0.8

 

 

 

 

 

4 13 22
interaction effect size
p = 0.05,p’ = 0.05

(c) 1 (d) 0,,
0.8 .
O
0. g o o
5 0.6 b 0000 o
g I ° 00 o g
0.0 4 3 o o
. - 8
O
' O
0.2 . o
0 1.0

1 2 3
interaction effect size
p = 0.2,p’ = 0.2

4 10 16
interaction effect size
p = 0.1,p’ = 0.5

difference in power
e'a cl: 0
-h [\1 O N h

e

8

0

<'>
m
o

 

 

 

I
.0
3

 

50 100 150 200
model number

Compared to PLINK

Fig. 4. Evaluating the power of EPIQ: (a—c) The power of the different
algorithms: EPIQ, all-pairs search and the two-stage search, to discover
the true interacting SNP pair. P and P are Pr [x,-= 1] and Pr [x;.=1],
respectively. Under all settings, the relative power of EPIQ compared
with the exhaustive search exceeds the requested success rate of 80%.
(d) The power of EPIQ compared with the full linear model used by
PLINK: Each dot represents a distinct model of interaction from Li
and Reich (2000): the x axis is the model number, the y axis is the average
power of EPIQ minus the power of PLINK

For example, model M1 states that only the individuals that are
homozygous with the minor allele on both SNPs have the higher
phenotypic mean [see Li and Reich (2000) for more details].
We generated datasets with 2000 individuals, where the two
SNPs account for 10% of the trait variance. Before running
EPIQ, we converted the genotypes to two binary representations,
a dominant one and a recessive one, and applied EPIQ to both
encodings [as in Brinza et al. (2010) and Prabhu and Pe’er
(2012)]. We compared EPIQ’s results with the power achieved
by applying the full linear model of PLINK on the original geno-
types. Figure 4d shows the results for all models, when the x axis
is the model number and the z axis is the power of EPIQ minus
the power of PLINK, averaged over all MAF combinations. Out
of the 50 models, 23 showed greater power when using EPIQ, 15
showed greater power with PLINK and the remaining 12 result
in a similar power when using either method. Several of the 15
models where PLINK shows higher power describe either a com-
plex and biologically unintuitive pattern of interaction (such as
M101), or have a large marginal effect, which makes them easy
to discover using Marchini’s two-stage algorithm (Marchini et al.
2005).

3.3 Results from the LURIC study

We applied EPIQ to measurements of lipid concentration in cells
(Cer(d18:0/24:1)), taken from the LURIC study, setting the suc-
cess rate parameter to 90%. Lipid concentration in cells was
converted to the log scale, standardized and corrected for
BMI, sex, age and statins usage, using the residuals as the

 

 

 

 

 

(a)‘2' ; (bra ' (c) 4
10 1° . 3'5
.‘ A +
9; 3 is
a 8 3 :5"
' O) 2.5 f
a :e‘ . 2
‘52 6- ‘o' 6 I 2
<3 . 3 8
' . 3' ' . g 1.5
4- $: "3' .' I 4 : a . g
.3": pi: - ‘4» - i
2.23.»:-5;i~f‘:-'  r»; O
25.12" t. 212-. 2 at at. 
é)- . I -  I I - I 1.5 — 2.5 3 3.5 4
0° Glgositigriz “:7” 5 955PogiIion965x1if’7 ExpeCtedz I°g10(p)
chr5 chr6 QQplOt of p-values distribution

Fig. 5. Results on the LURIC dataset. (a and b) Manhattan plots of 100
SNPs up- and down-stream of rs436969, rs9385393. The epistasis option
of PLINK was used to test for interactions in all 40 401 pairs and the
smallest P—value for each SNP was recorded. Note that the P—value for
the top scoring pair is slightly higher than the one calculated by EPIQ, as
EPIQ was run on the binary representation of the SNPs. (c) A QQ—plot of
the P—values distribution shows a negligible inﬂation. P-values were cal-
culated for a sample of 10000 SNP pairs

input for EPIQ. Processing of 826 individuals and 687253
SNPs took 1.5h on 10 processors, identifying a single pair of
SNPs (rs436969 (chr5, HWE p = 0.005), rs9385393 (chr6, HWE
p = l)) with a P—value of 2.2 x 10713, which is near signiﬁcant
after applying a Bonferroni correction. No genes exist within 100
kb up- and down-stream of the SNPs. Figure 5 shows a
Manhattan plot of the SNPs surrounding the pair of SNPs.

4 DISCUSSION

In this article we demonstrated how random projections methods
can be applied on quantitative GWAS, achieving in most cases at
least an order of magnitude speedup compared with other exist-
ing tools, scaling linearly with the number of SNP pairs. We
showed that EPIQ required only 1.5 h on 10 processors for a
real dataset of 687253 SNPs and 826 individuals, identifying a
pair of SNPs with a possible epistatic interaction, demonstrating
that the model’s assumptions do not hinder an efﬁcient discovery
of interacting pairs. This speedup is gained in exchange of a
minor loss of power. As mentioned before, a search for interact-
ing SNP pairs in current GWAS suffers from an inherent mul-
tiple testing problem, where P—values must be as small as 10—13
or less in order to be considered signiﬁcant. Like RAPID (Brinza
et al., 2010) and SIXPAC (Prabhu and Pe’er, 2012) have done,
EPIQ turns this limitation into an advantage: for a given sample
size, smaller P—values are a result of larger effect sizes. This in
turn makes interacting pairs more distinct from the rest of the
SNPs and consequently easier to detect by EPIQ. The drawback
is that as sample size increases, a smaller effect size is required for
achieving the same signiﬁcance level. In this case EPIQ is
required to perform more iterations in order to distinguish be-
tween interacting and non-interacting pairs, and therefore does
not scale linearly with sample size. Thus, as GWAS expand to
include increasingly larger cohorts, further adjustments in the
algorithm would be required.

We wish to state that the settings used in this article are only a
portion of a wide range of options. The approach we described
can be extended to ﬁt other statistical tests, and the binary

 

i24

112 /810's112umo[pJOJXO'sot112u1101utotq//2d11q 111011 papeolumoq

910K ‘09 isnﬁnV uo ::

EPIQ

 

coding of the genotypes can be performed differently than
described, to match other underlying models of interaction.
EPIQ can also be used in conjunction with methods such as
the genome-wide rapid association testing (GRAT) (Kostem
and Eskin, 2013), which utilize LD between SNPs for choosing
a subset of proxy SNPs, thus reducing the number of tests and
further improving runtime. Moreover, the runtime reported re-
lates to the current code implementation of the algorithm.
Different implementations, such as GPU-based code, are likely
to achieve even better results. With the decrease in runtime, per-
mutation tests for signiﬁcance become a feasible option, resulting
in increased power compared with stringent methods for multiple
hypothesis correction.

ACKNOWLEDGEMENTS

The collections and methods for the POPRES are described by
Nelson et al. (2008). The genotype dataset was obtained from the
LURIC study. The datasets used for the analyses described in
this article were obtained from dbGaP at http://www.ncbi.nlm.
nih.gov/projects/gap/cgi-bin/study.cgi?study_id = phs000145.v4.
p2 through dbGaP accession number phs000145.v4.p2.

Funding: This study was supported in part by a Fellowship from
the Edmond J. Safra Center for Bioinformatics at Tel-Aviv
University. E.H. and Y.A. were supported by the Israel
Science Foundation grant no. 1425/13. E.H. was also partially
supported by National Science Foundation grant III-1217615.
The LURIC study was supported by the 6th Framework
Program (integrated project Bloodomics, grant LSHM-CT-
2004-503485), by the 7th Framework Program (integrated pro-
ject AtheroRemo, grant agreement number 201668 and
RiskyCAD, grant agreement number 305739) of the European
Union and by the INTERREG IV Oberrhein Program (Project
A28, Genetic mechanisms of cardiovascular diseases) with sup-
port from the European Regional Development Fund (ERDF)
and the Wissenschaftsoffensive TMO. E.H. is a Faculty Fellow
of the Edmond J. Safra Center for Bioinformatics at Tel Aviv
University.

Conflict of Interest: none declared.

REFERENCES

Abecasis,G.R. et al. (2012) An integrated map of genetic variation from 1,092
human genomes. Nature, 491, 56—65.

Bhattacharya,K. et al. (2011) Rapid testing of gene-gene interactions in genome-
wide association studies of binary and quantitative phenotypes. Genet.
Epidemiol, 35, 800—808.

Brinza,D. et al. (2010) RAPID detection of gene-gene interactions in genome-wide
association studies. Bioinformatics, 26, 2856—2862.

Cordell,H.J. (2009) Detecting gene-gene interactions that underlie human diseases.
Nat. Rev. Genet., 10, 392—404.

Evans,D.M. et al. (2006) Two-stage two-locus models in genome-wide association.
PLoS Genet., 2, e157.

Gretton,A. et al. (2005) Measuring statistical dependence with Hilbert-Schmidt
norms. In: Algorithmic Learning Theory. Springer, Singapore, pp. 63—77.

Hemani,G. et al. (2011) EpiGPU: exhaustive pairwise epistasis scans parallelized on
consumer level graphics cards. Bioinformatics, 27, 1462—1465.

Hindorff,L.A. et al. (2009) Potential etiologic and functional implications of
genome-wide association loci for human diseases and traits. Proc. Natl Acad.
Sci. USA, 106, 9362—9367.

Hu,X. et al. (2010) SHEsisEpi, a GPU-enhanced genome-wide SNP-SNP inter-
action scanning algorithm, efﬁciently reveals the risk genetic epistasis in bipolar
disorder. Cell Res., 20, 854—857.

Kam-Thong,T. et al. (2011) Epistasis detection on quantitative phenotypes by ex-
haustive enumeration using GPUs. Bioinformatics, 27, i214—i221.

Kostem,E. and Eskin,E. (2013) Efﬁciently identifying signiﬁcant associations in
genome-wide association studies. J. Comput. Biol, 20, 817—830.

Li,W. and Reich,J. (2000) A complete enumeration and classiﬁcation of two-locus
disease models. Hum. Hered., 50, 334—349.

Liu,Y. et al. (2011) Genome-wide interaction-based association analysis identified
multiple new susceptibility loci for common diseases. PLoS Genet., 7, e1001338.

Maher,B. (2008) Personal genomes: the case of the missing heritability. Nat, 456,
18—21.

Marchini,J. et al. (2005) Genome-wide strategies for detecting multiple loci that
inﬂuence complex diseases. Nat. genet., 37, 413—417.

Nelson,M.R. et al. (2008) The Population Reference Sample, POPRES: a resource
for population, disease, and pharmacological genetics research. Am. J. Hum.
Genet., 83, 347—358.

Prabhu,S. and Pe’er,I. (2012) Ultrafast genome-wide scan for SNP-SNP interactions
in common complex disease. Genome Res., 22, 2230—2240.

Price,A.L. et al. (2006) Principal components analysis corrects for stratiﬁcation in
genome-wide association studies. Nat. Genet., 38, 904—909.

Purcell,S. et al. (2007) PLINK: a tool set for whole-genome association and popu-
lation-based linkage analyses. Am. J. Hum. Genet., 81, 559—575.

Schiipbach,T. et al. (2010) FastEpistasis: a high performance computing solution
for quantitative trait epistasis. Bioinformatics, 26, 1468—1469.

Wan,X. et al. (2010) BOOST: a fast approach to detecting gene-gene interactions in
genome-wide case-control studies. Am. J. Hum. Genet., 87, 325—340.

Winkelmann,B.R. et al. (2001) Rationale and design of the LURIC study—a re-
source for functional genomics, pharmacogenomics and long-term prognosis
of cardiovascular disease. Pharmacogenomics, 2 (Suppl. 1), S1—S73.

Yung,L.S. et al. (2011) GBOOST: a GPU-based tool for detecting gene-gene inter-
actions in genome-wide case control studies. Bioinformatics, 27, 1309—1310.
Zhang,X. et al. (2010) TEAM: efﬁcient two-locus epistasis tests in human genome-

wide association study. Bioinformatics, 26, i217—i227.

 

112 /810's112umo[pJOJXO'sot112u1101utotq//2d11q 111011 papeolumoq

910K ‘09 isnﬁnV uo ::

