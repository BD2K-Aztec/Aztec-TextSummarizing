Bioinformatics, 32(13), 2016, 2008—201 6

doi: 10.1093/bioinformatics/btw107

Advance Access Publication Date: 26 February 2016
Original Paper

 

Systems biology

An algorithm for designing minimal microbial
communities with desired metabolic capacities

Alexander Eng1 and Elhanan Borenstein1'2'3*
1Department of Genome Sciences, 2Department of Computer Science and Engineering, University of Washington,
Seattle, WA, USA and 3Santa Fe Institute, Santa Fe, NM, USA

*To whom correspondence should be addressed.
Associate Editor: Janet Kelso

Received on September 29, 2015; revised on January 29, 2016; accepted on February 19, 2016

Abstract

Motivation: Recent efforts to manipulate various microbial communities, such as fecal microbiota
transplant and bioreactor systems’ optimization, suggest a promising route for microbial commu-
nity engineering with numerous medical, environmental and industrial applications. However,
such applications are currently restricted in scale and often rely on mimicking or enhancing natural
communities, calling for the development of tools for designing synthetic communities with spe-
cific, tailored, desired metabolic capacities.

Results: Here, we present a first step toward this goal, introducing a novel algorithm for identifying
minimal sets of microbial species that collectively provide the enzymatic capacity required to syn-
thesize a set of desired target product metabolites from a predefined set of available substrates.
Our method integrates a graph theoretic representation of network flow with the set cover problem
in an integer linear programming (lLP) framework to simultaneously identify possible metabolic
paths from substrates to products while minimizing the number of species required to catalyze
these metabolic reactions. We apply our algorithm to successfully identify minimal communities
both in a set of simple toy problems and in more complex, realistic settings, and to investigate
metabolic capacities in the gut microbiome. Our framework adds to the growing toolset for sup-
porting informed microbial community engineering and for ultimately realizing the full potential of
such engineering efforts.

Availability and implementation: The algorithm source code, compilation, usage instructions
and examples are available under a non-commercial research use only license at https://github.
com/borenstein-lab/CoMiDA.

Contact: elbo@uw.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

Complex microbial communities can be found everywhere on our
planet, spanning marine communities inhabiting the deep ocean to
symbiotic communities living on and Within host organisms. These
communities impact a broad set of processes ranging from environ-
mental resource cycles to host organism health. For example, deep
sea rock and vent communities play a fundamental role in oxidizing
environmental methane (Marlow et al., 2014), Whereas the human
gut microbiome crucially aids in drug metabolism, energy harvest

and immune system response (Sekirov et al., 2010). Microbial com-
munities affect these processes through a variety of metabolic reac-
tions catalyzed by enzymes encoded in the member species’
genomes, and ultimately through the diverse compounds each com-
munity can degrade or produce.

These critical roles microbial communities play in shaping their
environment, combined with the potential to manipulate these com-
munities, suggest a promising route for numerous medical and envir-
onmental applications (Brenner et al., 2008). Specifically, several

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2008

9mg ‘09 isnﬁnV uo seleﬁuV sorl ‘erulomeg JO AirSJQAru [1 112 ﬂJO'sleumo[pJOJXO'sopemJOJurorq/ﬁdnq mm; pepeolumoq

An algorithm for designing minimal communities

2009

 

such efforts to shift target communities toward preferred states have
used samples from naturally occurring communities as an inocula-
tion source. For instance, transplanting healthy donor microbiome
samples into patient guts has recently been used to treat a variety of
gut disorders (Aroniadis and Brandt, 2013). Such fecal microbiota
transplants (FMTs) have been shown to perturb a patient’s dysbiotic
gut community, shifting it to a healthier state and ameliorating their
condition (Hamilton et al., 2013; Song et al., 2013). These FMT-
based therapies have had a >90% success rate at curing recurrent
Clostridium difficile infections and have promising results for ad-
dressing other gut disorders including inﬂammatory bowel disease
and metabolic syndrome (Rossen et al., 2015). Similarly, wastewater
treatment bioreactors are often seeded by microbial communities
cultivated from naturally occurring wastewater microbes or from
previously established bioreactors (Alleman and Prakasam, 1983).
These seed communities colonize the new bioreactor and thereby
provide the metabolic processes necessary to degrade biological mat-
ter in wastewater.

Following the success of such transplants, recent efforts have fur-
ther aimed to use engineered, rather than naturally occurring, com-
munities in an attempt to increase control over transplant outcomes.
For example, a synthetic stool substitute was recently developed
using a mixture of cultured bacterial isolates to mimic a healthy gut
community (Petrof et al., 2013). Such a synthetic community re-
moves the need for sample donors, allows greater regulation over
the bacteria present in the transplant community, and reduces the
risk for inadvertent transfer of pathogens. This synthetic and mark-
edly simpler community was shown to still be effective in treating
C. difﬁcile infections. Another effort applied a simple selection-
based approach to optimize the species composition of a bioreactor
seed community for increased biopolymer production from glycerol
(Moralejo-Garate et al., 2011). The final community’s biopolymer
production rate was demonstrated to be noticeably increased com-
pared to the original community.

Such community engineering approaches are clearly an import-
ant first step towards customizing microbial community compos-
ition, yet they still largely rely on imitating natural community
structures or enhancing existing community capabilities and cannot,
for example, produce communities with potentially desired abilities
absent from the initial community. Indeed, even optimizing an exist-
ing community function involves developing a carefully controlled
selection procedure tailored to the preferred function and may re-
quire a long time for the community to reach an optimal state. The
applications of such engineering efforts are therefore inherently con-
strained and are often very system-specific and hard to generalize.

One approach to address these challenges is to rationally design
and construct synthetic communities with desired and predefined
metabolic capabilities. Such a design process would involve the care-
ful selection of member species and their abundances, hopefully
defining a community composition that would achieve the desired
metabolic task in the target environment. The ability to design such
communities would significantly broaden the applicability of com-
munity engineering, could alleviate the reliance on naturally occur-
ring community functions, and would ultimately support the
construction of communities tailored to perform specific tasks
within the context of various environmental settings.

Designing microbial communities, however, is a daunting task.
Microbial species are endowed with tremendously diverse and com-
plex capacities, which may not be trivial or easy to discern.
Moreover, the various species comprising each community do not
function independently, and each community impacts its environ-
ment through the orchestrated activity of its members. Interaction

between species can lead to emergent behaviors that cannot be
attributed to the function of just a single species or to additive spe-
cies functions (Pelz et al., 1999; Pettit, 2009). One species can, for
example, provide the necessary precursors that allow a second spe-
cies to produce metabolites that it could not produce when growing
in isolation (Chiu et al., 2014). Similarly, costly metabolic tasks
could be distributed among community members such that each
member performs a specific part of a complex metabolic pathway
(Moran, 2007). A successful design framework should therefore ac-
count for such interactions and their impact on the metabolism of
the community as a whole.

As a first step to address this challenge, here we develop
CoMiDA (@mmunity Metabolism Qesign Algorithm), an algo-
rithmic framework for designing simple communities with some
predefined metabolic capacities. Specifically, we aim to identify a
set of species that, as a community, have the metabolic potential to
convert a set of metabolic substrates to a set of desired target me-
tabolites. We further aim to discern the smallest set of species
required to provide this desired metabolic potential, reducing
downstream complexities and providing more streamlined com-
munities. In other words, our goal is to identify a minimal set of
species whose genomes collectively encode a set of enzymatic genes
that can catalyze a collection of metabolic reactions forming meta-
bolic paths to each desired product metabolite from the available
substrates.

Communities designed with our framework will therefore have
the required metabolic potential to achieve the specified metabolism.
Obviously, there are additional factors and processes that should be
ultimately considered in designing a stable and functional commu-
nity that carries out a specific task. First and foremost, possessing
the set of reactions leading from substrates to products does not ne-
cessarily imply that the community would actively and efficiently
perform the desired metabolic function. Toxin production, signaling
between microbes, the capacity to transport metabolites between
cells, and the ability of the selected species to survive in the target
environment could further affect the community behavior, stability
and dynamics. Yet, having the metabolic potential to carry out the
desired function is an important and essential prerequisite for any
community that could achieve the specified task, and is therefore a
natural first step in rational community design and a critical compo-
nent of any design task (see also Section 4).

2 Methods

2.1 Problem statement and approach

The goal of our design task is, given a set of substrate metabolites
and a set of target product metabolites, to find a minimal subset of
the available species that can collectively synthesize this set of target
products using the available substrates. Specifically, here we view
each microbial species as a simple assemblage of metabolic reac-
tions, corresponding to the set of enzymatic genes encoded in its
genome. Each reaction is represented as a hyperedge, linking the re-
action’s substrates to the reaction’s products. We further initially as-
sume that metabolites can transfer freely between species, a
common simplifying assumption in various community models
(Gordon and Klaenhammer, 2011; Raymond and Segre, 2006; Song
et al., 2014; Taffs et al., 2009), though we relax this assumption
later. The metabolic potential of each community can accordingly
be viewed as the aggregate set of metabolic reactions of the member
species. A solution to our design task is therefore a minimal set of
species that collectively include some set of metabolic reactions

9mg ‘09 isnﬁnV uo seleﬁuV sorl ‘erulomeg JO AirSJQAru [1 1e ﬂJO'sleumo[pJOJXO'sopemJOJurorq/ﬁdnq mm; pepeolumoq

 

 

 

2010 A.Eng and E.Borenstein
Desired Species and Desired Minimal For now assume that each reaction has one substrate metabolite
Metabolism Reactions Community and one product metabolite. This assumption will be relaxed later.
SUBSTRATE 51 SUBSTRATE Similarly, let S = {$1, $2, . . ., sq} denote the set of species, where q is
the number of species. Each species, 5, in our formulation can be
r1 r2 r3 ! _ _ _
Q 51 defined as the set of reactions it can catalyze:
I
| 52 O O 5i = {Ti_1,rz'_2, - - - Mm}-
' Design r6 r1 r2 r3 . . . . .
I . . We additionally define the set of available substrate metabolites
: ) s3 and set of target product metabolites as:
I ‘1
: S3 @  = {msubstrate_1a msubstrate_27 - - - a msubstrate_b}a
r 8
 = {mproducLla mproduct_27 - - - improduch}:
PRODUCT PRODUCT where b is the number of substrates and c is the number of products.

Fig. 1. Schematic representation of the design task. Circles represent metab-
olites, with arrows between metabolites representing metabolic reactions
and ovals representing species. The presence of a reaction within a species
indicates that this species can catalyze that reaction. Given desired products
and available substrates (left) and a set of available species (middle), our al-
gorithm aims to identify a minimal subset of species that can collectively syn-
thesize the desired products from the available substrates (right)

sufficient to form valid paths to all target products from available
substrates. This design task is depicted in Figure 1.

To solve the above design problem, we used an integer linear
programming (ILP) formulation. ILP is a framework for defining a
linear expression of variables to maximize/minimize, along with a
set of linear equations and inequalities that constrain those vari-
ables. ILP is a well-established framework, with several efficient
solvers and numerous applications (Wolsey and Nemhauser, 2014).

Below, we introduce an ILP formulation of our design task,
inspired by ILP-based solutions to both the set cover problem and the
network ﬂow problem. To outline the different conceptual parts of
our algorithm, we construct this ILP formulation in multiple steps.
We first assume that all reactions are simple (connecting a single sub-
strate to a single product) and that a set of reactions necessary to form
paths from available substrates to all target products is specified. We
show that, with these assumptions, identifying a minimal set of spe-
cies that collectively encode this required set of reactions can be repre-
sented as a set cover problem and solved using an ILP formulation.
Next, we relax our assumption of specified paths (or a specified set of
reactions), introducing an array of network ﬂow-inspired ILP con-
straints that defines possible paths from available substrates to target
products using terms that can be linked to the set cover formulation.
Finally, we consider the presence of multiple-substrate multiple-prod-
uct reactions and adjust our network ﬂow constraints to account for
such hyperedges in the metabolic network.

2.2 Species, reactions and metabolites in a simple
metabolic network representation

There are three main components to our community design prob-
lem: the set of available species, the metabolic reactions catalyzed by
each species, and the metabolites these reactions consume and pro-
duce. Let M 2 {m1, m2, . . ., mn} denote the set of possible metabol-
ites where n is the number of metabolites. We additionally define
R = {r1, r2, . . ., rp} to be the set of reactions, where p is the number
of reactions. Each reaction can then be defined as an ordered pair of
metabolites, representing the reaction’s substrate and product,
respectively:

Ti 2 (mi_substratea mi _ product) -

Notably, with these definitions, metabolites and reactions can also be
viewed as a graph or a network, where nodes represent metabolites
and edges represent reactions connecting substrates to products. Notice
also that each species can be associated with some subgraph of this
metabolic graph based on the set of reactions that species can catalyze.

2.3 Finding a minimal set of species with a pre-specified
collection of metabolic capacities

To focus on the minimization aspect of the algorithm, first assume
that there is a specified set of necessary metabolic reactions, N g R,
that provides valid paths from SUBSTRATE to PRODUCT, such as
the set of metabolic reactions in Figure 1 (right). Given this assump-
tion, our aim is to identify a solution set of species that both can col-
lectively catalyze this set of necessary reactions, and is minimal (in
terms of the number of species). Since each species is viewed as some
subset of the possible reactions, this task corresponds to identifying
the minimal set of such subsets whose union contains the specified
set of necessary reactions N. This representation of our task forms
an instance of the well-defined set cover (SC) problem, which can be
solved using an ILP formulation (see also Ye and Doak, 2009).
Specifically, first we define a set of binary ILP species variables
I_S = {I_sl, I_sz, .. ., I_sq} such that each ILP species variable, I_s,
corresponds to a species 5:

I_Sz' E  31.6 {1727"'7q}7

with I_ s,- = 1 indicating that the ith species is included in the solution spe-
cies set, and I_s,- : 0 indicating that the ith species is not included. Given
these ILP species variables, the objective function of minimizing the num-
ber of species included in the solution species set can be defined as:

q
min E 1.5,. (1)
i=1

To link the set of species to be included in the solution set to the
sets of reactions each species can catalyze and the set of specified
necessary reactions N, we define an additional set of binary ILP
reaction variables I_R = {I_r1, I_rz, . . ., I_rp} such that each ILP re-
action variable, I_r, corresponds to a reaction r:

I_TI' E  37.6 {1727"'7p}7

with I_r,: 1 indicating that the jth reaction is included in N, and
I_r,- : 0 indicating that the ith reaction is not included. Given these
ILP reaction variables, the constraints ensuring that each necessary
reaction can be catalyzed by at least one species can be defined as:

Egg) 2 u,- :je {1,2,...,p}. (2)
Vi 5.2:.
1’,‘ ES,‘

9mg ‘09 isnﬁnV uo sejeﬁuV sorl ‘eiHJOJijeg JO AiiSJeAiu [1 1e /810'S{12umofpiOJXO'soiiemJOJuioiw/zdiiq moi; pepeolumoq

An algorithm for designing minimal communities

2011

 

In other words, these constraints require that if a reaction is ne-
cessary (I_ r,- = 1), then there must be at least one species in the solu-
tion species set that catalyzes that reaction. The objective function
(1) and the set of constraints (2) thus fully define an ILP formulation
of the SC component of the algorithm, minimizing the number of
species required to catalyze a known set of necessary metabolic
reactions.

As a brief example of such a formulation, consider the set
of available species in Figure 1 (middle) and the set of reac-
tions in the displayed solution (right). By appropriately assigning
ILP species variables, the objective function for this instance
would be:

min(I_51 + 1.52 + 1-53).

Similarly, when we assign the ILP reaction variables and their
values, we can formulate the set cover constraints associated with
this instance (following the general form of constraint (2)):

I_r2=1—>I_s1 21
I_r6=1—> I_sz+I_5321
I_r1=1—>I_s1 21
I_rg=1—> 1-5321.

Together, this specific objective function and these specific con-
straints define ILP problem associated with the task depicted in
Figure 1 assuming the reactions in the presented path are
necessary.

2.4 Considering all possible paths from available
substrates to target products

When defining the SC component of the algorithm above, a set of
necessary metabolic reactions connecting SUBSTRATE to
PRODUCT was assumed to be predefined. Clearly, however, when
considering the complex network of metabolic reactions that can
be catalyzed by microbial species, there are likely numerous alter-
native paths connecting the available substrates to the desired tar-
get products. Since one cannot know a priori which paths require
the fewest species to catalyze, a complete solution to our design
problem must consider all possible paths when minimizing the
number of species. To address this challenge and to remove the as-
sumption of a specified set of necessary reactions, we use network
ﬂow (NF)-inspired constraints. Specifically, instead of predefining
the values of the I_r variables to denote which reactions are neces-
sary, we allow I_r values to vary freely and introduce a set of con-
straints that guarantee that the collection of reactions for which
I_r=1 form valid paths from SUBSTRATE to PRODUCT.
Intuitively, an NF problem considers a graph as a network of pipes
where the task is to push the maximal flow through these pipes
from a source node to a sink node. Here, we use this NF-based ap-
proach to define a valid path in the metabolic network as a set of
reactions that allow flow to pass from SUBSTRATE to
PRODUCT.

To define such a valid path, first we define a set of ILP flow vari-
ables, F_R = {F_r1, F_rz, . . ., F_rp}, where F_rj denotes the amount
of ﬂow passing through the jth reaction. Since ﬂow has to be non-
negative and since real-valued ﬂow variables are unnecessary and
slow computation, we further limit the values for ﬂow variables to
non-negative integers:

F_r, esze {1,2,...,p}.

The first NF constraint requires that only metabolites in
SUBSTRATE can be sources of ﬂow, hence forcing any viable path
to start from an available substrate metabolite (Fig. 2A):

2 — E F,,n+ E  =|PRODUCT|,

Vi s.t. Vin s.t. Vout s.t.
m,- E SUBSTRATE rim 2 (m;,m,-) rout = (mi,mk)

(3)

where i,i,k E {1,2,...,n}, iyéj, jyék, and in,out E {1,2,...,p}. In other
words, the sum of flow leaving all available substrate metabolite
nodes must be greater than the sum of flow entering these metabol-
ites. Specifically, we require that the difference in ﬂow be equal to
the number of target product metabolites (|PRODUCT|), ensuring
that each target product can receive one unit of flow if a viable path
exists. Note here that even though we would not usually need flow
to enter a substrate metabolite node, it may be necessary for prob-
lems involving forced substrate usage (see Supplementary Text 1).

The second NF constraint requires that metabolites in
PRODUCT be ﬂow sinks, forcing every viable path to end at a tar-
get product (Fig. 2B):

E F—rin — E F—rout = 1

Vin s.t. Vout s.t. (4)
Tin = (mnmj) Tout = (mjimk)

:vi s.t. m,- 6 PRODUCT.

This forces the flow into any target metabolite node to be greater
than the ﬂow leaving that node by one unit of flow. Thus, each
product metabolite must be reached by some viable path. It should
be noted that the network ﬂow solution does not necessarily reflect
all metabolic activity and, for example, intermediate reactions’ bi-
products could still be generated even when no ﬂow is associated
with these bi-products.

The third NF constraint asserts that all metabolites not in
SUBSTRATE or PRODUCT have zero net ﬂow (i.e. neither sources
nor sinks of flow), allowing such metabolites to serve as intermedi-
ate nodes in any viable path (Fig. 2C):

E F—rin = E F—rout

Vin s.t. Vout s.t. (5)
Tin : (miamj) rout : (miamk)

: vi s.t. m,- e R, m,- g SUBSTRATE, m,- g PRODUCT.

A B C

Substrates Provide Products Consume
Flow Flow

1 1 1
X1 \/ X \/ X1 \/
1
1 1 1 1 1
X x X X  x
1
Fig. 2 The network flow constraints. (A) The net flow out of all available sub-
strates must be equal to the number of target products. (B) The net flow into
any target product must be equal to one. (C) The net flow for any intermediate
metabolite must be zero. Together these constraints define any viable set of

metabolic reactions that form paths from available substrates to target
products

Flow In = Flow Out

9mg ‘09 isnSnV uo sejeﬁuV sorl ‘eiHJOJijeg JO AiiSJeAiu [1 1e /810'S{12umofpiOJXO'soiiemJOJuioiw/zdiiq moi; pepeolumoq

2012

A.Eng and E.Borenstein

 

Given these NF constraints, any viable set of metabolic reactions
for converting SUBSTRATE to PRODUCT will have non-zero asso-
ciated ILP flow variables.

Finally, to appropriately set the I_r reaction variables to 1 if the
reaction is used in the NF task and 0 otherwise, an additional set of
conversion constraints is added:

F_rl- g |PRODUCT| >< I_r,-:Vi e {1,2,...,p}, (6)

ensuring that if a reaction’s ﬂow variable is greater than 0, then the
ILP reaction variable for that reaction must be 1.

Combining the objective function (1) and the constraints (2)—(6)
for the SC and NF tasks therefore provides a complete ILP formula-
tion for minimizing the number of species in the solution species set
while ensuring the existence of viable paths from available sub-
strates to all target products.

2.5 Allowing for metabolic reactions with multiple
substrates and products

The ILP formulation above relies on the assumption that each meta-
bolic reaction has a single substrate and a single product. This is a
common simplification in metabolic network analysis and various
protocols exist to reconstruct metabolic networks in which this as-
sumption holds (Levy and Borenstein, 2013; Parter et al., 2007).
Yet, a more complete and accurate metabolic network formulation
allows metabolic reactions to have multiple substrates (accounting,
for example, for co-factors) and/or multiple products. To account
for such metabolic reactions, we modify our metabolic network rep-
resentation and instead of connecting substrate nodes to product
nodes directly, we introduce a new type of node, representing reac-
tions, and connect the (potentially multiple) substrates of each reac-
tion to the (potentially multiple) products through the appropriate
reaction node (Fig. 3A). In this representation, reactions, r, are
therefore no longer representing edges in the network, but rather
nodes that connect

{mi_substrate_17 mi_substrate_27 - - - a mi_substrate_d }

t0

{mj_product_17mj_product_27 - - - 7mj_product_e}7

where d is the number of substrates and e is the number of products
for the jth reaction. Specifically, we define two new classes of edges:
a set of reaction input edges, I = {i1, i2, . . ., it} where t is the number
of substrate metabolites across all reactions, connecting a substrate
metabolite m to a reaction r:

if = (mj_inputari_reaction)a

and a set of reaction output edges, O = {01, 02, ..., 0”} where u is
the number of product metabolites across all reactions, similarly
connecting a reaction r to its product metabolite m:

of = (rj_reactiona mj_output)-

Together, these new nodes and edges thus define a bipartite
graph where edges only exist between one metabolite node and one
reaction node, but never between two metabolites or two reactions
(Fig. 3A).

Now we redefine the set flow variables in this network as two
sets, F_I={F_i1, F_i2,..., F_it} and F_O={F_01, F_oz, ..., F_ou}
where F_i and F_o represent ﬂow along input and output edges re-
spectively. Notably, most of the ﬂow constraints defined above are

still valid when applied to both metabolite and reaction nodes; how-
ever, constraint (6), which aimed to link the ﬂow variables to the
ILP reaction variables, I_r, needs to be updated to represent the link
between a reaction’s multiple substrates and products. Specifically,
one set of constraints is introduced to ensure that a reaction can be
active only if all its substrates are present (in other words, if all reac-
tion input edges have flow):

F_i,- 2 I_rk : Vj,k s.t. i,- = (ml,rk). (7)

Then, another set of constraints is introduced to allow active re-
actions to generate products (by providing flow on the reaction out-
put edges):

2 (Ron 3 (III + IOI) >< I_r,- : vie {1,2,...,p}. <8)

Vi s.t.
0i = (Ti? W)

The only difference between constraints (6) and (8) is that the
maximum ﬂow across a single edge is no longer bounded above by
just the number of target products but instead the number of edges
in the network. This difference is due to the need for all substrates
of a reaction to provide ﬂow instead of just a single substrate, which
may require multiple units of flow to reach a single target product.
Combined, constraints (7) and (8) guarantee that a reaction’s prod-
ucts can be available only if all of the reaction’s substrates are avail-
able, and that if the reaction is required for generating flow the ILP
reaction variable for that reaction must be 1.

2.6 Compartmentalizing species and defining

transport reactions

The algorithm so far has treated the community as a single super-
organism, whereby metabolites can transfer freely between species.
A more realistic scenario, however, assumes that metabolites are
compartmentalized within each species and requires species to have
the necessary transport reactions to allow environmental metabolite

B
Metabolite Metabolite

Reactions Require

 

Nodes Nodes All Substrates To
Generate Any Products
Metabolite Metabolite
Nodes Nodes
1
1 X
Reaction
Node

Fig. 3. The bipartite graph representation of multi-substrate, multi-product
metabolic reactions and associated flow constraints. (A) Each metabolic reac-
tion is replaced by a new node type representing the enzyme that catalyzes
that reaction. New edges are added to indicate the input and output metabol-
ites for each reaction. (B) The new flow constraints require that all reaction
substrates can provide flow to use a reaction and that reaction output edges
can have flow only if all input edges have flow

9mg ‘09 isnSnV uo sejeﬁuV sorl ‘eiHJOJijeg JO AiiSJeAiu [1 1e /810'S{12umofpiOJXO'soiiemJOJuioiw/zdiiq moi; pepeolumoq

An algorithm for designing minimal communities

2013

 

uptake and secretion. Such a compartmentalized problem can in fact
be solved by the algorithm as currently defined simply by modifying
the sets of metabolites and reactions. Specifically, rather than having
a single variable to denote each metabolite (regardless of its com-
partment), a set of variables should be defined to denote the metab-
olite in each compartment in which it exists (be it a specific species
or the shared environment). Given this extended set of metabolite
variables, metabolic reactions are now viewed as operating within a
species (and accordingly connect species-specific substrates to spe-
cies-specific products). An additional set of transport reactions
(which correspond to each species’ uptake and secretion capacities)
can then convert species-specific metabolites to environmental me-
tabolites and vice-versa. In this compartmentalized setting, one spe-
cies can only use metabolites produced by another species if both
species have the appropriate transport reactions. For example, for a
given metabolite m to transfer from species A to species B, species A
must include a transport reaction to convert the A-specific version
of m to an environmental version, and similarly species B must in-
clude a transport reaction to convert the environmental version of m
to a B-specific version.

More formally, we now define M: {m0,1, mm, ..., mom, mu,
. . ., mqm} as the set of metabolites such that mug where i 6 {0,1,. . .,q}
and la 6 {1,2,. . .,n} denotes metabolite la in species i. We interpret
the 0th species as the shared environment. We then replace each re-
action, r,-, present in species I in our previous formulation with a
new reaction:

riy' = ({mi,j_substrate_17 mi,i_substrate_2a - - - a mi,j_substrate_d}a

{mi,i_product_17 mi,/'_product_27 - - - a mi,i_product_e})-

Each species may also include a set of transport reactions that
convert environmental metabolites to species-specific metabolites
(reflecting uptake reactions):

ri,transport_l = (7710,12, mi,k)a

or species-specific metabolites to environmental metabolites (repre-
senting secretion):

ri,transport_l = (mi,k7 m0,k) -

Together, these new metabolite and reaction definitions relax
the assumption of freely transferred metabolites and allow our algo-
rithm to solve problems in a compartmentalized species setting.

2.7 Forcing substrate usage and incorporating

species costs

The above ILP-based formulation can be further extended to force
the obtained solution to meet additional requirements or to consider
additional factors. Specifically, we have developed and implemented
algorithm extensions to handle two biologically relevant consider-
ations, the first forcing the solution to utilize (or degrade) specified
substrates, and the second to weigh species’ predefined desirability
when constructing a community. For a detailed description of the
associated constraints and modifications, see Supplementary Text 1.

3 Results

3.1 Algorithm implementation and availability

We implemented the algorithm outlined above as a C ++ program
which takes as input a file describing the various parameters of the
design task, including available substrates, target products and the

set of available species with their associated metabolic reactions.
The program then generates the associated ILP instance in the
Mathematical Programming System (MP5) format (default) or the
CPLEX format (depending on the requirements of the ILP solver
used). The source code for the algorithm is available under a non-
commercial research use only license at https://github.com/boren
stein-lab/CoMiDA. To obtain solutions for our test cases and data-
set analysis, we used the COIN-OR Branch and Cut (CBC) solver
(Lougee-Heimer, 2003).

3.2 Unit test validation

We first aimed to verify our algorithm using a set of simple design
problems. Specifically, we generated a suite of toy problems as unit
test cases for our algorithm. These toy problems test whether our al-
gorithm identifies an optimal solution under different scenarios that
cover a variety of edge cases. These test cases focus on simple design
tasks, with up to five species and up to seven associated metabolic
reactions. For example, some cases examined scenarios in which the
minimal species solution requires a longer metabolic path from sub-
strate to product than a non-minimal species solution. Other cases
examined scenarios in which a solution does not exist (e.g. because
no path exists from substrate to product, regardless of which species
are used). We have applied our algorithm to each of these test cases
and confirmed that our algorithm correctly produces the ILP formu-
lation and ultimately identifies an optimal solution for each design
task (or the absence of one). These toy problems, along with their
expected ILP formulations, can be found (with the source code) at
https://github.com/borenstein-lab/CoMiDA, providing users with
simple examples of the expected input/output format and allowing
users to confirm that the algorithm is working properly.

3.3 Glycolysis pathway validation

The toy problems described above are limited in size and may not be
comparable in scale to many real-world scenarios. To examine our
algorithm’s performance on datasets of a more practical size, we
next focused on a well-characterized metabolic pathway, the
Embden—Meyerhof glycolysis pathway (KEGG entry M00001
(Kanehisa et al., 2014; Ogata et al., 1999)), defining glucose and
pyruvate as the available substrate and target product respectively
(Supplementary Fig. 51). For the set of available species, we selected
all 284 species identified from the 2013 Human Microbiome Project
(HMP) (Human Microbiome Project Consortium, 2012a) stool sam-
ple datasets that contained the entire set of metabolic reactions in
the glycolysis pathway as predicted by PICRUSt (Langille et al.,
2013). Combined, this set of species corresponds to an aggregate
metabolic network containing 1803 metabolites and 3120 metabolic
reactions. Since each species in this set can catalyze the entire path-
way from glucose to pyruvate, our algorithm identifies, as expected,
a single species solution (one of the 284 possible choices). To test
our algorithm’s performance when minimal solutions required mul-
tiple species, we next therefore modified the metabolic network of
each species, deleting various reactions and forcing a multi-species
solution. Specifically, we first removed all alternate reaction paths
between glucose and pyruvate by removing the first reaction in each
alternate path that was not also part of the glycolysis pathway
(Supplementary Fig. 51), filtering out 39 reactions and leaving a
total of 3081 metabolic reactions in the aggregate network. We then
removed selected reactions in the glycolysis pathway from subsets of
the available species such that no single species contained all reac-
tions in the path (e.g. by removing one reaction in the pathway from
half of the available species and a different reaction from the other

9mg ‘09 isnﬁnV uo sejeﬁuV sorl ‘eiHJOJijeg JO AiiSJeAiu [1 1e /810'S{12umofpiOJXO'soiiemJOJuioiw/zdiiq moi; pepeolumoq

2014

A.Eng and E.Borenstein

 

half). Through numerous such modifications, we forced minimal
solutions for providing the glycolysis pathway to require multiple
species, fully controlling the size of these minimal solutions. We con-
firmed that our algorithm was able to handle such cases and to pro-
vide a correct minimal solution in each such scenario.

3.4 Analysis of minimal communities of gut
microbiome species

Naturally occurring microbial communities often comprise an ex-
tremely complex and diverse collection of species (Human
Microbiome Project Consortium, 2012b; Lozupone and Knight,
2007). This diversity can be the product of numerous factors,
including a variety of niches species can occupy (Escalante et al.,
2015; Rainey and Travisano, 1998), metabolic specialization of in-
dividual species within the community (Johnson et al., 2012; Zhou
et al., 2002), intricate multi-species interactions (Doebeli and
Ispolatov, 2010), or functional redundancy (Ley et al., 2006;
Nemergut et al., 2013). Yet, when designing synthetic communities,
markedly fewer species may be required (Petrof et al., 2013). To ex-
plore this possibility and to characterize potential redundancy in
naturally occurring communities, we used our algorithm to identify
minimal communities required to perform various simple metabolic
syntheses within the context of a diverse natural community.
Specifically, given the promise of gut microbiome-based therapies,
we focused on minimal communities that consist of gut dwelling
species. To this end, we selected a set of 2051 species (represented as
Operational Taxonomic Units; OTUs) detected via 16S sequencing
of HMP stool samples. The set of metabolic reactions each OTU
could catalyze was determined using PICRUSt (Langille et al.,
2013). Combined, the aggregate metabolic network of this set of
species included 2225 unique metabolites. We then selected 10 000
random pairs of metabolites from this set, one as the available sub-
strate and one as the target product, and used our algorithm to iden-
tify minimal communities that could provide a pathway from
substrate to product. We specifically used our algorithm in three dif-
ferent settings: one with the metabolic network simplified such that
each reaction has a single substrate and a single product (see above),
one with the full bipartite graph representation of the metabolic net-
work (allowing each reaction to have multiple substrates and/or
multiple products), and one with the full bipartite graph representa-
tion but also including a set of common currency metabolites (based
on (Greenblum et al., 2012)) as available substrates.

As shown in Figure 4, for most random metabolite pairs, no set
of species had the capacity to perform the desired synthesis (poten-
tially owing to various gaps in the aggregate metabolic network and
incomplete annotation of the various species). Yet, when a solution
existed, it generally required only very few species (35 for all metab-
olite pairs tested). Notably, since the simplified graph representation
requires only one substrate of a reaction to be available to generate
any of that reaction’s products (ignoring, for example, the need for
additional co-factors), many more solutions existed when this sim-
ple graph representation was used compared with the complete bi-
partite representation. Making currency metabolites available
evidently allowed additional reactions to be active and therefore re-
covered some of the metabolic capacity that could not be realized in
the bipartite graph representation. Given the small minimal com-
munities identified and the small number of unique species used in
these communities across all pairs (379 OTUs), one might suspect
that a small number of metabolic generalist species are responsible
for providing the required metabolic capacity in many of these min-
imal communities. Indeed, the number of reactions a species can

catalyze was found to be positively correlated with the frequency
with which that species was used in the identified minimal solutions
(r: 0.496, P-value 3 10—15; Pearson correlation test). Importantly,
however, even the species that appears most frequently in identified
minimal solutions occurs in only <10% of the solutions, with the
next most frequent species occurring in <5 %. Together, these results
suggest that even though a small number of species are required to
perform any relatively simple target synthesis, a variety of species
may be needed to catalyze a range of simple substrate/product
conversions.

4 Discussion

Recent efforts to manipulate various naturally occurring commun-
ities and to impact their activities have shown tremendous promise.
For example, efforts to modify the human gut microbiome have
demonstrated that properly perturbing this community can treat or
ameliorate certain conditions (Aroniadis and Brandt, 2013).
Expanding this approach to effectively treat a wider variety of dis-
eases, as well as alter the functions of environmentally and industri-
ally-relevant microbial communities, requires methods for rationally
designing communities with specific metabolic capacities. Above,
we take a first step towards this goal, introducing and validating a
novel algorithm which identifies minimal microbial communities
that provide specified and desired metabolic capacities.

Clearly, various biological factors are currently not considered
by our algorithm, including, for example, species-level interactions
(Hansen et al., 2007), the expected flux through each metabolic re-
action, and whether member species, or even the community as a
whole, can survive in the target environment (Ley et al., 2006).
Ignoring such factors may render communities designed by our algo-
rithm markedly different than naturally occurring communities and
synthetic communities constructed based on such designs may con-
sequently fail to survive or to perform specific desired tasks. For ex-
ample, the discrepancy between the small communities identified in
our analysis above and the extreme diversity observed in many nat-
urally occurring communities (Human Microbiome Project
Consortium, 2012b; Lozupone and Knight, 2007) may be likely ac-
counted for, at least partly, by such factors. Yet, our algorithm

1 5.5.. Design Parameter

|$Irnple Graph

' Bipartite Graph

Biperlite Graph I.I'rith
CurrencyI Metabolites

Frequency eLSelutien Size C

{:4
m
III-I

 

 

2 .'l
Seluticin Size

 

 

 

 

Fig. 4 Solution sizes identified for 10 000 random substrate/product metabol-
ite pairs, using species from the Human Microbiome Project

9mg ‘09 isnﬁnV uo sejeﬁuV sorl ‘eiHJOJijeg JO AiiSJeAiu [1 1e /810'S{12umofpiOJXO'soiiemioiuioiw/zdiiq moi; pepeoiumoq

An algorithm for designing minimal communities

2015

 

provides a starting point for such design efforts and for future
method development in this area. Specifically, selecting a commu-
nity based initially on the presence of desired metabolic capacities
provides a simple way to address an important prerequisite for com-
munity metabolism; any community designed to consume or pro-
duce given metabolites or to have some metabolic activity must
obviously also have the metabolic capacity to carry out those func-
tions. Our attempt to identify minimal communities may again not
necessarily be aligned with biological assembly rules, but offers sim-
ple candidate communities for further design refinement. Moreover,
by formulating our program as an ILP algorithm, we provide an
easy way to introduce additional design considerations. As our
understanding of the various constraints affecting community as-
sembly improves, such considerations can be added to this frame-
work by devising equations and inequalities that encode these
constraints.

Of the various considerations that could be implemented to fur-
ther refine any design approach, two stand out as logical next
steps. First, the expected stability of designed communities could
be improved by examining the likelihood that a combination of
species will coexist in a community. Specifically, information on
species co-occurrence in natural communities can be used to esti-
mate the tendency of various species pairs to co-exist or the ex-
clude one another from a shared environment (Faust et al., 2012;
Levy and Borenstein, 2013). Such information would allow an al-
gorithm to prioritize communities that minimize the risk of losing
member species due to antagonistic species interactions, ultimately
stabilizing community structure. Second, considering the predicted
activity of candidate communities, rather than just the presence of
specific metabolic capacities, could increase the likelihood that de-
signed communities would perform the desired task. Several frame-
works for predicting the metabolic activity of microbial
communities have recently been introduced (Chiu et al., 2014;
Harcomb et al., 2014; Zhuang et al., 2011; Zomorrodi et al.,
2014), potentially allowing future design algorithms to consider
predicted rates of metabolite consumption and production and pre-
dicted changes in species abundances over time. Our algorithm
could be used, for example, as an initial filtering step, providing a
set of candidate minimal communities that have the capacity for
some desired metabolism, followed by a metabolic model-based
prediction of the metabolic activity of each candidate community
to further refine the design process. Moreover, such metabolic
modeling could allow the design process to account for important
factors that our current algorithm may not be able consider. For in-
stance, our algorithm does not explicitly prevent community mem-
bers from degrading one or more of the specified target products.
Such inadvertent target metabolite degradation may depend on the
set of microbes present, other available substrates, and various en-
vironmental conditions, and could therefore be predicted and po-
tentially avoided using metabolic modeling-based design.

The ability to computationally design microbial communities
will be a useful tool for many purposes. For example, designed syn-
thetic communities could be ultimately used in place of FMTs,
removing the need for screening donor samples while also optimiz-
ing treatments to target specific conditions. Communities could also
be created for industrial resource and pharmaceutical production,
potentially obviating the need for extensive microbial genetic engin-
eering and providing novel mechanisms for production control in
the form of inter-species signaling (Brenner et al., 2008). Clearly,
such applications are not yet feasible and the development of a com-
prehensive, general-purpose design framework may still be out of
our reach for years to come. We hope, however, that our framework

will encourage future developments of such design methodologies
and will lay the foundation for future efforts in microbial commu-
nity design.

Acknowledgements

We are grateful to all members of the Borenstein lab for helpful discussions.

Funding

This work has been supported by New Innovator Award DP2 AT007802-01
to EB from the National Institutes of Health.

Conﬂict of Interest: none declared.

References

Alleman,].E. and Prakasam,T.B.S. (1983) Reﬂections on seven decades of acti-
vated sludge history. ]. Water Pollut. Fed., 55, 436—443.

Aroniadis,O.C. and Brandt,L.J. (2013) Fecal microbiota transplantation: past,
present and future. Curr. Opin. Gastroenterol., 29, 79—84.

Brenner,K. et al. (2008) Engineering microbial consortia: a new frontier in syn-
thetic biology. Trends Biotechnol, 26, 483—489.

Chiu,H.C. et al. (2014) Emergent biosynthetic capacity in simple microbial
communities. PLoS Comput. Biol., 10, e1003695.

Doebeli,M. and Ispolatov,I. (2010) Complexity and diversity. Science, 328,
494—497.

Edwards,].S. and Palsson,B.O. (1998) How will bioinformatics inﬂuence
metabolic engineering? Biotechnol. Bioeng., 58, 162—169.

Escalante,A.E. et al. (2015) Ecological perspectives on synthetic biology: in-
sights from microbial population biology. Front. Microbiol., 6, 143.

Faust,K. et al. (2012) Microbial co-occurrence relationships in the human
microbiome. PLoS Comput. Biol., 8, e1002606.

Gordon,].I. and Klaenhammer,T.R. (2011) A rendezvous with our microbes.
Proc. Natl. Acad. Sci. U. S. A., 108, 4513—4515.

Greenblum,S. et al. (2012) Metagenomic systems biology of the human gut
microbiome reveals topological shifts associated with obesity and inﬂamma-
tory bowel disease. Proc. Natl. Acad. Sci. U. S. A., 109, 594—599.

Hamilton,M.J. et al. (2013) High-throughput DNA sequence analysis reveals
stable engraftment of gut microbiota following transplantation of previ-
ously frozen fecal bacteria. Gut Microbes, 4, 125—135.

Hansen,S.K. et al. (2007) Evolution of species interactions in a bioﬁlm com-
munity. Nature, 445, 533—536.

Harcomb,W.R. et al. (2014) Metabolic resource allocation in individual mi-
crobes determines ecosystem interactions and spatial dynamics. Cell Rep.,
7, 1104—1115.

Human Microbiome Project Consortium. (2012a) A framework for human
microbiome research. Nature, 486, 215—221.

Human Microbiome Project Consortium. (2012b). Structure, function and di-
versity of the healthy human microbiome. Nature, 486, 207—214.

Johnson,D.R. et al. (2012) Metabolic specialization and the assembly of mi-
crobial communities. ISME ]., 6, 1985—1991.

Kanehisa,M. et al. (2014) Data, information, knowledge and principle: back
to metabolism in KEGG. Nucleic Acids Res., 42, D199—D205.

Langille,M.G.I. et al. (2013) Predictive functional proﬁling of microbial com-
munities using 16S rRNA marker gene sequences. Nat. Biotechnol, 31,
814—821.

Levy,R. and Borenstein,E. (2013) Metabolic modeling of species interaction in
the human microbiome elucidates community-level assembly rules. Proc.
Natl. Acad. Sci. U. S. A., 110, 12804—12809.

Ley,R.E. et al. (2006) Ecological and evolutionary forces shaping microbial di-
versity in the human intestine. Cell, 124, 837—848.

Lougee-Heimer,R. (2003) The Common Optimization INterface for
Operations Research: promoting open-source software in the operations re-
search community. IBM]. Res. Dev., 47, 5 7—66.

Lozupone,C.A. and Knight,R. (2007) Global patterns in bacterial diversity.
Proc. Natl. Acad. Sci. U. S. A., 104, 11436—11440.

9mg ‘09 isnﬁnV uo sejeﬁuV sorl ‘eiHJOJijeg JO AiiSJeAiu [1 1e /810'S{12umofpiOJXO'soiiemioiuioiw/zdiiq moi; pepeoiumoq

2016

A.Eng and E.Borenstein

 

Marlow,].]. et al. (2014) Carbonate-hosted methanotrophy represents an un-
recognized methane sink in the deep sea. Nat. Commun., 5, 5094.

Moralejo-Garate,H. et al. (2011) Microbial community engineering for bio-
polymer production from glycerol. Appl. Microbiol. Biotecbnol., 92,
631—639.

Moran,N.A. (2007) Symbiosis as an adaptive process and source of pheno-
typic complexity. Proc. Natl. Acad. Sci. U. S. A., 104, 8627—8633.

Nemergut,D.R. et al. (2013) Patterns and processes of microbial community
assembly. Microbiol. Mol. Biol. Rev. MMBR, 77, 342—356.

Ogata,H. et al. (1999) KEGG: Kyoto Encyclopedia of Genes and Genomes.
Nucleic Acids Res., 27, 29—34.

Parter,M. et al. (2007) Environmental variability and modularity of bacterial
metabolic networks. BMC Evol. Biol., 7, 169.

Pelz,O. et al. (1999) Towards elucidation of microbial community meta-
bolic pathways: unravelling the network of carbon sharing in a pollutant-
degrading bacterial consortium by immunocapture and isotopic ratio mass
spectrometry. Environ. Microbiol., 1, 167—174.

Petrof,E.O. et al. (2013) Stool substitute transplant therapy for the eradication of
Clostridium difﬁcile infection: “RePOOPulating” the gut. Microbiome, 1, 3.
Pettit,R.K. (2009) Mixed fermentation for natural product drug discovery.

Appl. Microbiol. Biotechnol, 83, 19—25.

Rainey,P.B. and Travisano,M. ( 1998) Adaptive radiation in a heterogeneous
environment. Nature, 394, 69—72.

Raymond,]. and Segré,D. (2006) The effect of oxygen on biochemical net-
works and the evolution of complex life. Science, 311, 1764—1767.

Rossen,N.G. et al. (2015 ) Fecal microbiota transplantation as novel therapy in
gastroenterology: a systematic review. World ]. Gastroenterol. W] G, 21,
5 359—5371.

Sekirov,I. et al. (2010) Gut microbiota in health and disease. Pbysiol. Rev., 90,
85 9—904.

Song,Y. et al. (2013) Microbiota dynamics in patients treated with fecal micro-
biota transplantation for recurrent Clostridium difﬁcile infection. PloS One,
8, e81330.

Song,H.S. et al. (2014) Mathematical modeling of microbial community dy-
namics: a methodological review. Processes, 2, 711—752.

Taffs,R. et al. (2009) In silico approaches to study mass and energy ﬂows in
microbial consortia: a syntrophic case study. BMC Syst. Biol., 3, 1 14.

Wolsey,L.A. and Nemhauser,G.L. (2014) Integer and Combinatorial
Optimization. John Wiley SC Sons, New York.

Ye,Y. and Doak,T.G. (2009) A parsimony approach to biological pathway re-
construction/inference for genomes and metagenomes. PLoS Comput. Biol.,
5, e1000465.

Zhou,]. et al. (2002) Spatial and Resource Factors Inﬂuencing High Microbial
Diversity in Soil. Appl. Environ. Microbiol., 68, 326—334.

Zhuang,K. et al. (2011) Genome-scale dynamic modeling of the competition
between Rbodoferax and Geobacter in anoxic subsurface environments.
ISME]., 5, 305—316.

Zomorrodi,A. et al. (2014) d-OptCom: dynamic multi-level and multi-ob-
jective metabolic modeling of microbial communities. ACS Syntb. Biol., 3,
247—25 7.

9mg ‘09 isnﬁnV uo sejeﬁuV sorl ‘eiHJOJijeg JO AiiSJeAiu [1 1e /810'S{12umofpiOJXO'soiiemioiuioiw/zdiiq moi; pepeoiumoq

