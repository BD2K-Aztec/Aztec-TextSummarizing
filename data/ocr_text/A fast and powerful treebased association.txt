ORIGINAL PAPER

Vol. 30 no. 15 2014, pages 2171—2178
doi: 10. 1 093/bioinformatics/btu 1 86

 

Genetics and population analysis

Advance Access publication April 9, 2014

A fast and powerful tree-based association test for detecting
complex joint effects in case—control studies
Han Zhang‘, William Wheeler2, Zhaoming Wang1’3, Philip R. Taylor‘ and Kai Yu”

1Biostatistics Branch, Division of Cancer Epidemiology and Genetics, National Cancer Institute, Rockville, MD 20850,
USA, 2Information Management Services, Inc., Silver Spring, Maryland 20904, USA, and 3Cancer Genomics Research
Laboratory, Division of Cancer Epidemiology and Genetics, National Cancer Institute, Gaithersburg, Maryland

20877, USA

Associate Editor: Jeffrey Barrrett

 

ABSTRACT

Motivation: Multivariate tests derived from the logistic regression
model are widely used to assess the joint effect of multiple predictors
on a disease outcome in case—control studies. These tests become less
optimal if the joint effect cannot be approximated adequately by the
additive model. The tree-structure model is an attractive alternative, as
it is more apt to capture non-additive effects. However, the tree model is
used most commonly for prediction and seldom for hypothesis testing,
mainly because of the computational burden associated with the resam-
pling-based procedure required for estimating the significance level.
Results: We designed a fast algorithm for building the tree-structure
model and proposed a robust TREe-based Association Test (TREAT)
that incorporates an adaptive model selection procedure to identify
the optimal tree model representing the joint effect. We applied TREAT
as a multilocus association test on >20 000 genes/regions in a study of
esophageal squamous cell carcinoma (E800) and detected a highly
significant novel association between the gene CDKN2B and E800
(P = 6.0 x 10—8). We also demonstrated, through simulation studies,
the power advantage of TREAT over other commonly used tests.
Availability and implementation: The package TREAT is freely
available for download at http://www.hanzhang.name/softwares/
treat, implemented in C++ and R and supported on 64-bit Linux
and 64-bit MS Windows.

Contact: yuka@mail.nih.gov

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on December 24, 2013; revised on March 26, 2014;
accepted on April 2, 2014

1 INTRODUCTION

The logistic regression model is the most widely used approach
for studying the relationship between a binary outcome and a set
of explanatory variables. Under the logistic regression model, the
cumulative effect of all the considered explanatory variables is
assumed to be additive on the logit scale. In situations where the
summation of the main effects from all considered variables is
not adequate, the addition of interaction terms, each of which is
a product of two chosen main effects, can be considered. The
logistic regression model is a convenient tool for studying the
joint effect of multiple risk factors if their effects are nearly

 

*To whom correspondence should be addressed.

additive, but it can be less efﬁcient if the joint effect is more
complicated and cannot be approximated adequately by the
additive model, even with the inclusion of interaction terms.

The tree-structure model (Breiman et al., 1984; Zhang and
Singer, 1999), which hierarchically partitions the data into mul-
tiple exclusive subsets and models each subset individually, can
be an attractive alternative to the linear model approach, espe-
cially in the situation where the joint effect of multiple risk fac-
tors (predictors) is non-additive. Tree-structure models are used
most often for outcome prediction but seldom for hypothesis
testing. When building a tree model, a predictor is chosen to
split each subset (a node of a tree) according to certain criteria.
Also, the tree size is decided through a model selection proced-
ure, such as cross-validation. Thus, there are extensive model and
variable selections in the tree-model—building process. As a result,
it is hard to obtain the asymptotic distribution for the test stat-
istic derived from the ﬁnal tree model. Instead, we have to resort
to a computationally intensive resampling-based procedure to
evaluate the statistical signiﬁcance (Chen et al., 2007; Yu et al.,
2007). This greatly limits the application of the tree-structure
model in the setting of hypothesis testing.

Our goal is to develop a robust hypothesis-testing procedure
based on the tree-structure model that is computationally efﬁ-
cient, even with the resampling-based procedure. The procedure
is for testing the null hypothesis that none of the considered risk
factors is associated with the outcome. One motivated applica-
tion is to conduct a gene-level association test on a genome-wide
association (GWA) study. GWA studies typically measure geno-
types on 200 000—2 million single-nucleotide polymorphisms
(SNPs) on a group of cases and controls. One way to identify
loci that are associated with the disease condition is to perform
an association test on each SNP separately. Another strategy is
to conduct a gene-level analysis by treating each chromosomal
region as a testing unit and testing whether all SNPs in the con-
sidered region are associated with the disease condition. A con-
sidered region can contain a few to a few hundred SNPs
measured by a commercial genotype array. When conducting
an agnostic screen over the genome, we usually need to test
>20 000 genes or annotated regions. When the Bonferroni cor-
rection for multiple comparisons is used, the P—value threshold
for declaring the global (genome-wide) signiﬁcance at the family-
wise type I error rate of 0.05 is about 2.5 x 10—6 (2 0.05/20 000).
This creates a huge computational burden on existing gene-based

 

Published by Oxford University Press 2014. This work is written by US Government employees and is in the public domain in the US. 2171

112 /810's112umo[pJOJXO'soi1BmJOJuioiw/2d11q IIIOJJ papeolumoq

910K ‘09 lsnﬁnV no :2

H.Zhang et al.

 

tests that rely on a resampling-based procedure to estimate their
signiﬁcance levels. For example, it requires about 108 iterations
for a resampling-based procedure to achieve a reliable estimate
for a P—value at the level of 1.0 x 10—6, which would normally
occur when >20 000 tests are performed.

Our proposed method is a general testing procedure that can
be used as a multivariate test for the association between a set of
predictors and a binary outcome. The test statistic is derived
from a tree-structure model that approximates the joint effect
of a set of predictors on the disease risk and relies on a permu-
tation procedure to evaluate its signiﬁcance level. We reduce the
computational burden considerably by developing memory— and
CPU-efﬁcient algorithms for evaluating splitting rules in the tree-
building process. We further speed up the testing procedure by
deriving closed-form score test statistics for assessing the joint
effect summarized by the tree-structure model. We use this new
procedure to perform a genome-wide gene-based analysis on
>20 000 genes/regions in a GWA study of esophageal squamous
cell carcinoma (ESCC) based on about 2000 cases and 2000 con-
trols. We also demonstrate the advantage of the proposed pro-
cedure over existing ones through extensive simulation studies.

2 METHODS
2.1 Notations

Here, we describe the proposed testing procedure as a multilocus test for
the association between a disease condition and a set of genetic markers
within a chromosomal region or gene (henceforth we use ‘gene’ for brevity,
but everything applies equally to annotated regions). But the procedure is a
general joint testing procedure and is applicable in areas beyond genetics.
We consider a case—control study with n1 cases and no controls. The total
sample size is n = no + n1.The observation for a subject can be represented
as (y, g, x), where the outcome y = 1 for an affected subject and y = 0 for
a subject without the disease condition, g = (g1, ..., gp) is a vector of
measured genotypes (encoded as the counts of the minor allele) at 12
SNPs within the considered gene, and x is the vector of all adjusted cov-
ariates. We consider a binary tree-structure model, in which a node is
always split into two off-spring nodes by a binary splitting rule. We con-
sider splitting rules deﬁned by dichotomized genotypes. For a given SNP,
we can create three binary variables, with each of them being the indicator
for one type of the genotype g (0, 1 or 2) at a given SNP. We can also deﬁne
other types of binary variables as candidate splitting rules. For example, to
be more interpretable, we can restrict the splitting rules to two types of
indicator variables, g“) and 57(2), where g“) = I(g = 1 or 2) and
57(2) 2 I(g = 2), I(-) is the indicator function. Regardless of how the set
of binary variables is deﬁned, we can represent all possible binary variables
derived from genotypes of a set of SNPs as f = (fl, . . . , f1). For example,
there are 2]) binary variables in f, if only g“) and g9) are considered for each
SNP. In the following real data application and in numerical experiments,
we use splitting rules deﬁned by gm and gm.

2.2 The statistical test based on the tree-structure model

We assume that the subjects can be assigned into C unknown genetic risk
groups according to the genetic proﬁle characterized by the joint geno-
types within a considered gene. The latent assignment can be denoted by
a set of binary variables {zk,k = 1, ..., C}, with 2;, = 1 if the subject’s
genotype proﬁle belongs to risk group k and Z], = 0 otherwise. We further
assume that the underlying risk model has the form:

Pr(y=1ix,g) _ , “I
O  —05+Xy+k;1zk,8k 

 
 
  
  
 
 
 
     

Nude D

r51063192=ﬂ rleES 192:1, 2

Node 1 Node 2

r53?3121?=ﬂ r53?3121?=1, 2

Nude 3 “Glue 4

on = l.5:i DR =03?
p-iialui: = {1.23

p-Uﬂluﬁ = l_ll2li:ii lii'”

Fig. 1. The optimal tree model for the gene CDKN2B identiﬁed by
TREAT. m1 /m0 are the numbers of cases and controls in the node.
The odds ratios (ORs) and P-values are post hoc estimates based on
the standard logistic regression model, with node 1 being the reference

group

where y and ,Bk, 1 5 k 5 C — 1, are regression coefﬁcients. We need only
C — 1 dummy variables in (1) to represent the genetic risk factor with C
categories. In practice, because the exact number of risk groups and their
deﬁnition are unknown, the standard C — 1 degree-of-freedom chi-
squared test for testing the global null hypothesis Ho : ,8], = 0,
1 5 k 5 C — 1, is not applicable. Instead, we propose to use a tree-struc-
ture model to approximate the latent risk group assignment. For ex-
ample, in the tree-structure model shown in Figure 1, subjects are
assigned into three risk groups according to their genotypes.

We begin by describing the testing procedure in the absence of covari-
ates and then extend it to account for covariates. We build the tree model
by a sequential binary partitioning of the samples. Figure 1 illustrates a
tree model built on the gene CDKN2B detected by our test. All subjects in
the root node (node 0) are ﬁrst divided into two offspring nodes (node 1
and 2) according to the splitting rule deﬁned by a binary variable chosen
from f. Next, according to the criteria described later, we expand the tree
by splitting one of the two offspring nodes (node 1 or 2). In this example,
node 2 is chosen. This procedure is continued until certain pre-speciﬁed
stopping rules are met (described later).

We want to choose a binary variable from f to split a node in such a
way that the difference in the disease risk between the two resultant off-
spring nodes is maximized. Suppose that we want to expand a tree TK
with K leaf nodes (terminal nodes) Ak,k = 1, . . . , K. For any given pair
(Ak,fj), the samples in Ak can be summarized as the 2 x 2 contingency
table shown in Table 1. We use the following 1-df chi-squared test statistic
to measure the ‘goodness-of-split’ when the node Ak is split by (Agresti,
2007):

k k k k 2
natal? — mania

t(kJ) _
"(anaemgkamgkﬁ

 

(2)
The best pair (the node and the corresponding splitting rule) is therefore
deﬁned as:
(koptajopt) = argmax tag) 
(16,1)
The tree T K is then grown by splitting the leaf node Akopt according to the

rule deﬁned by ﬁopt, which results to a new tree T [(+1 with K + 1 leaf
nodes. This binary partitioning procedure is continued until the number

 

2172

112 /810's112umofpinXO'soi1emJOJuioiw/2d11q moxj papeolumoq

910K ‘09 lsnﬁnV no :2

Tree-based association test for complex joint effects

 

Table 1. The 2 x 2 contingency table for the samples in the leaf node Ak,
cross-tabulated by the outcome y and the binary variable fj-

 

 

f, = o f,- = 1 Total
k k k

y:0 nix? "81” n8)
k k k

y =1 nil? nil” ni)

Total mg”) mg?) "(16)

 

Table 2. The 2 x k contingency table for all subjects, cross-tabulated by
the outcome y and the set of binary variables F1, . . . ,Fk deﬁned by the
leaf nodes of the tree T k

 

 

F121 F221  Fk=1 Total
k k k
y = 0 n81) n82) . .. ngk) no
k k k
Total mgk) mg’) . . . mg’) n

 

of leaf nodes reaches a pre-speciﬁed value Ko. To make the procedure
more robust, a leaf node that is eligible for splitting has to contain at least
No subjects. We set Ko 2 5 and No 2 50 in the simulation studies and
real data application. Issues involved in choosing values for Ko and No
will be examined in Section 4.

By growing the tree with the partitioning algorithm described earlier,
we can obtain a sequence of Ko — 1 nested tree models T2, . . . , TKO, with
T k having k leaf nodes. Each tree model in the sequence provides an
estimate for the latent genetic risk groups. For a given tree model T k,
we deﬁne a set of binary variables F1, ..., Fk indicating a subject’s assign-
ment to one of the k leaf nodes of Tk, with F]- =1,j=1,...,k, if the
subject falls in the j-th leaf, and F]- : 0 otherwise. We model the associ-
ation between gene and disease as:

k—l
logitP(y=1|F1,...,Fk_1)=a+Z,Bj1§ (4)
j=l

The departure from the null hypothesis Ho : ,8]- : 0, j = 1, . . . ,k — 1, can
be measured by the score test statistic. Table 2 provides notation for the
frequency distribution for samples in each leaf node in Tk. We show in
Supplementary Materials that the score test statistic based on (4) can be
represented as:

2 k

(k) n 1 < (k) (k) n1)2
.9 = —n.—m- — , k=2,...,Ko 5
0 nomgmjlk 1] J n 

Because the building of the tree model is ‘supervised’ by the outcome, the
deﬁnition of F1 , . . . , Fk is partially driven by the outcome. As a result, sg‘)
no longer has an asymptotic chi-squared distribution. Instead, the empir-
ical signiﬁcance level of sg‘), 2 5 k 5 Ko, denoted by pg‘), can be evalu-
ated through a permutation procedure that generates null datasets by
randomly shufﬂing the outcome among subjects, while keeping their
genotypes unchanged. Let the number of permutation steps be M. For
the m-th permuted dataset, the same tree growing algorithm is applied,
and the score test statistics (s55), . . . , 51550)) deﬁned in (5) are obtained for

the sequence of the Ko — 1 nested tree models. We can estimate the em-
pirical signiﬁcance level of sg’) by:

M
Z I(ng) 2 Sold)

pg")=m=°M—+1, k=2,...,Ko (6)
Because we have Ko — 1 candidate risk models for assessing the disease—
gene association, each having empirical P-value 1281‘), k = 2, . . . , Ko, a nat-
ural choice for the ﬁnal test statistic is To = min{pgk); k = 2, . . . , Ko}. We
identify the tree model with the smallest empirical P-value pg’) as the
optimal tree model representing the gene’s effect. In principle, the
P-value of To could be estimated by a computationally intensive two-
layer permutation procedure. The inner layer is required for getting the
empirical P-value [i.e. 173’) in (6)] for the tree models ﬁtted from the
observed and permuted datasets, and the outer layer is required for get-
ting the empirical null distribution of To. Instead, we adopt the minP
algorithm proposed by Ge et al. (2003), where only a single-layer permu-
tation procedure is needed. We describe Ge’s algorithm in more detail in
Supplementary Materials.

2.3 Accelerating the growth of the tree by Boolean
operations

As mentioned in the Introduction, testing procedures based on the tree
model can be computationally intensive, as the evaluation of the P-value
requires a permutation procedure. Even though the computational
burden is reduced considerably by the use of closed-form formula for
the evaluation of splitting rules (2) and the score test statistics (5), as
well as Ge’s algorithm, it is still not practical to use the proposed pro-
cedure as a gene-based test to screen >20 000 genes, some of which have
P-values< 1.0 x 10—6. The main bottleneck is to build the contingency
table shown in Table 1, which is required for the evaluation of every
candidate-splitting rule in the tree-model—building process on observed
and permuted datasets. For any given pair (Ak,fj), 0(nJ) if-else oper-
ations on y and f are required to obtain Table 1. Thus, about 0(nJKo) if-
else operations are performed during the growth of a tree with Ko leaf
nodes. The computational overhead for calculating the score statistics in
(5) is negligible, as Table 2 can be obtained from Table 1 directly. When
the permutation procedure is used with M iterations, the total number of
the if-else operations scales up to the order of 0(nJKoM), whereas M can
be as large as 108 to estimate the P-value for genome-wide signiﬁcance
reliably.

To make our proposed test computationally feasible for large-scale
genome-wide gene-based analysis, we adopt the BOolean Operation
(BOO) method, which was originally proposed by Wan et al. (2010) for
detecting SNP—SNP interaction at the genome-wide scale, to accelerate
the calculation of contingency table, e.g. Table 1. The BOO method is a
memory— and CPU-efﬁcient strategy for constructing tens of millions of
contingency tables swiftly. To be more speciﬁc, we illustrate the use of the
B00 algorithm in our setting. For the binary outcome y, instead of
storing it as a vector with n standard integers (a standard integer
would be represented by 64 binary digits in a 64-bit computing system),
we encode 64 binary outcomes (say y1, . . . , y64) into one 64-bit integer w
according to the following rule:

64
W = Z 264—154
i=1
Thus, the binary outcome y can be stored as a length-ln/64l vector yb
consisting of 64-bit integers. We also need to maintain a binary vector
0k, with its i-th entry indicating whether the i-th subject falls in the k-th
leaf node. Similar representation can be applied to 0k and each of the
dichotomized genotypes fj, 1 5 j 5 J. Hence, 0;, and are converted to
length-ln/64l vectors 0}; and fjb as well. We can obtain a length-ln/64l
vector v2]. = yb&0}€’&fji’, where & represents the CPU-efﬁcient logical

 

2173

112 /810's112umofpinXO'soi1chOJuioiw/2d11q moxj papeolumoq

910K ‘09 lsnﬁnV no 2:

H.Zhang et al.

 

Table 3. The 2 x 2 contingency table for the subjects in the leaf node Ak
with x1 = 1, cross-tabulated by the outcome y and the binary variable fj-

 

 

f, = o f,- = 1 Total
k' k' k
y:0 "80’" nail n3”
k' k' k
y:1 on on 40
Total mg)ij mgkjl) nod)

 

AND operation in an element-wise manner. The numbers in Table 1 can
be obtained by counting and summing over the ‘1’ bits in each of the
entries of v2]. Supplementary Figure Sl illustrates an example showing
how the B00 method works when the total sample size is 64. The tree-
based testing procedure incorporating the B00 method is roughly 60-
fold faster than the one using the standard if-else operations. More dis-
cussion of the computing time will be given in Supplementary Materials.

2.4 Adjusting covariates

In this section, we extend the proposed testing procedure by allowing the
adjustment of covariates. To make the B00 method applicable in this
situation, we need to extend the statistics in (2) and (5) accordingly, so
that they are closed-form functions of subject frequencies under various
restrictions. We assume that the adjusted covariates can be discretized
and represented by a multilevel categorical variable. For example, if we
wanted to adjust two covariates with two and three levels, respectively, we
would adjust these two covariates jointly as a categorical variable with six
levels. Equivalently, both main and interactive effects from the two ad-
justed covariates are adjusted. Under such a strategy, we can represent all
adjusted covariates as a factor encoded by a set of dummy variables
x = (x1,...,xL).

For any candidate leaf node Ak to be split, the samples in Ak can be
summarized as L 2 x 2 contingency tables (Table 3 shows the l-th table,
for those samples with x1 = 1). We extend (2) to allowing the adjustment
of x by use of the Cochran—Mantel—Haenszel test statistic (Mantel, 1963;
Mantel and Haenszel, 1959). Deﬁne the test statistic:

2
L . . (kl)
k k n
(2 (11311” — mi 1” 
t(kJ) : [:1

L . . k k
2 m(k)l)m(k)l) n3 0"? D
l_1 1 0 ("(1:0)3

 

(7)

The best split is again chosen as (kopt,jopt) = argmaxawj to“).

We also modify the score statistics so in (5) for testing the association
between the gene and the disease condition by assuming the following risk
model:

L—l k—l
 =1|x19°°°9xL9F19°°°9Fk)=a+  
[=1 j=l

For any subtree Tk with k leaves, k = 2, . . . ,Ko, the samples can be
summarized as L 2 x k contingency tables (Table 4 shows the l-th table
for those samples with x1 = 1). To test the null hypothesis Ho : ,8]- : 0,

j = 1, . . . , k — 1, we can derive the score test statistic under the risk model
(8) as:
33") = U; V,;1 Uk (9)
where
Uk 2 (“k1, ° ° ° Wick-1)” Vk : (Vjijz)(k—1)x(k—1)

Table 4. The 2 x k contingency table for subjects with x1: 1, cross-
tabulated by the outcome y and the binary variables F1, . . . ,Fk deﬁned
by the leaf nodes of the tree T k

 

 

F1 :1 F2 :1 Fk :1 Total
(kl) (kl) (kl) (l)
(kl) (kl) (kl) (1)
Total mg”) mg”) . . . mg!) n“)

 

L (l)
_ (kl) (kl)"1 -_
ukj_Z<nlj —mj W), ]_1,...,k—1

L (kl) (kl) "80"?)
ij-Zz—Emjlmj2 (D3, 15117E125k—1
i=1 (n )

XL: (kl) (l) (kl) "30"?)

vjj= m. (n —m- )—3, j=1,...,k—1

[:1 J J ("(1’)

The signiﬁcance of this extended tree-based multilocus test can be eval-
uated by a permutation procedure in which we randomly shufﬂe the
outcome y within each stratum deﬁned by the dummy covariate x,
while keeping the genotypes and x the same within each subject. The
steps for estimating the P-value remain the same. With minor modiﬁca-
tion, the B00 method described earlier can be applied. For example,
instead of applying the CPU-efﬁcient logical AND operations on yb, 0,2
and fjl’, we apply them on yb, 0,2,  and xjh with x? being the vector of
64-bit integers converted from the vector of x).

3 RESULTS

3.1 Application to a GWA study of ESCC

We demonstrated the application of our TREe-based
Association Test (TREAT) as a gene-based test by applying it
on a GWA study of ESCC. We focused on 1942 cases and 2111
controls taken from the Shanxi Upper Gastrointestinal Cancer
Genetics Project and the Linxian Nutrition Intervention Trials
(Abnet et al., 2010). Both studies were conducted in the Taihang
mountain area in China. The analysis was conducted on 22193
genes or annotated regions extracted by the software GLU
(http://code.google.com/p/glu-genetics/). We set the threshold
for genome-wide signiﬁcance at 2.3 x 10‘6 (% 0.05/22 193) ac-
cording to the Bonferroni correction adjusting for all 22 193 tests.
With the 1000 Genomes data (version 3) as the reference (1000
Genomes Project Consortium et al., 2012), we used the software
IMPUTE2 (Howie et al., 2009) to impute the missing genotypes.
Besides TREAT, we also applied several other multilocus tests,
such as the Min-P test (Seaman and Muller-Myhsok, 2005), the
Adaptive Joint test (AdaJoint) (Zhang et al., 2013), the Adaptive
Rank Truncated Product test (ARTP) OK u et al., 2009), the SNP
set association test (SKAT) Wu et al., 2010) and its variation
(SKAT—O) (Lee et al., 2012).

All tests considered here were adjusted for study, sex and an
indicator for whether a subject was younger than 40 years. Those
covariates were chosen because of their signiﬁcant marginal

 

2174

112 /810's112umofpinXO'soi1chOJuioiw/2d11q moxj papeolumoq

910K ‘09 lsnﬁnV no 2:

Tree-based association test for complex joint effects

 

Table 5. Testing results on the GWA studies of ESCC

 

 

Gene Location Size Min P-value Strongest SNP TREAT Min-P ARTP AdaJoint SKAT SKAT-O-5 SKAT-O-lO
CDKN2B 9p21.3 6 3.8e-6 rle63192 6.0e-8 4.1e-5 3.0e-5 2.2e-5 2.4e-4 2.8e-4 2.8e-4
CDKN2A 9p21.3 10 3.8e-6 rle63192 1.9e-7 6.8e-5 2.2e-5 5.8e-5 5.1e-5 4.4e-5 4.4e-5
M T AP 9p21.3 30 3.8e-6 rle63192 1.3e-6 1.9e-4 9.3e-5 4.6e-5 1.2e-3 2.4e-3 2.4e-3
PLCEI 10q23.33 34 5.5e-8 rs3781264 6.4e-5 3.4e-6 2.0e-6 8.5e-6 9.7e-4 1.7e-3 1.7e-3
CR599I44 10q23.33 3 1.4e-7 rs12263737 1.3e-5 6.9e-7 1.2e-7 1.5e-6 7.1e-8 9.1e-8 3.2e-8
KIAAI5I6 10q23.33 5 5.5e-8 rs3781264 8.9e-6 5.7e-7 1.0e-7 1.2e-6 1.1e-7 4.1e-8 5.1e-8
H SCB 22q12.1 6 1.3e-7 rs73 8722 2.1e-6 1.7e-6 1.8e-6 1.3e-7 3 .7e-5 3 .4e-5 3 .4e-5
CHEK2/Chk2 22q12.1 8 1.3e-7 rs738722 4.5e-5 2.4e-6 1.9e-6 1.2e-6 1.2e-4 2.2e-4 2.3e-4
CASP8 2q33.1 8 3.3e-6 rsl3016963 4.2e-5 2.7e-5 5.8e-5 2.4e-7 1.0e-3 1.7e-3 1.7e-3

 

Note: These are genes on which at least one of the considered tests produces a P<2.3 X 10‘6 (bold values). The P-values of TREAT, Min-P, ARTP and AdaJoint tests are

estimated with 109 replicates of permutation.

effects (P<0.05) on the outcome. After imputation, SNPs with
missing rate >5% or minor allele frequencies (MAFs) <5% were
excluded from the analysis. For two SNPs with pairwise linkage
disequilibrium (LD) coefﬁcient >0.95, the one with a smaller
MAF was abandoned. In the end, we had 159046 unique
SNPs in 22193 genes and/or annotated regions. The inﬂation
factor of the single-marker test on those SNPs is 1.037, which
suggests that there is no major effect due to population stratiﬁ-
cation after adjusting for the three covariates. Adjusting for the
top 10 eigenvectors yields a similar inﬂation factor of 1.038.
Therefore, we did not adjust eigenvectors in subsequent analysis.
For TREAT, we considered a tree with up to ﬁve leaf nodes. A
node was considered for splitting if it contained at least 50 sam-
ples. For AdaJoint and ARTP, the optimal models were built by
checking the combinations of the top 1, 2,..., 5 SNPs. For
SKAT-O, the P-values were calculated using 5 or 10 points of
equal-sized grids searching for the weight parameter from 0 to l
(denoted as SKAT-O-5 and SKAT-O-lO, respectively). The P-
values of the Min-P, AdaJoint, ARTP and TREAT were calcu-
lated by 105 replicates of permutation. For genes with initially
estimated P-values<1.0 x 104, we further reﬁned their P-
values by 109 replicates of permutation.

Table 5 lists the genes with at least one P-value produced by
the considered tests less than the genome-wide threshold
2.3 x 10‘6. TREAT identiﬁed a novel gene CDKNZB in the
region 9p21.3 with P-value 6.0 x 10‘8, much lower than the
threshold for the family-wise signiﬁcance level. For this gene,
the Min-P, ARTP, AdaJoint, SKAT, SKAT-O-5 and SKAT-
O-10 tests reported far less impressive P-values, which were
4.1 x 10—5, 3.0 x 10—5, 2.2 x 10—5, 2.4 x 10—4, 2.8 x 10‘4 and
2.8 x 104, respectively. Figure 1 illustrates the optimal tree
model for the gene CDKNZB. The optimal tree model deﬁnes
a risk factor with three levels, corresponding to leaf nodes 1, 3
and 4. We ﬁtted a post hoc logistic regression model on this
derived risk factor. With leaf node 1 as the reference group,
the ORs for leaf nodes 3 and 4 were 1.55 (P = 1.10 x 10—9)
and 0.87 (P = 0.23), respectively. Although these estimates are
biased, as the risk factor is deﬁned and analyzed within the same
dataset, it nonetheless suggests the genotype group deﬁned by
the leaf node 3 is the high-risk group. In the same region,

TREAT also identiﬁed another two genes CDKN2A
(P = 1.9 x 10‘7) and MTAP (P = 1.3 x 10‘6), one having
four overlapping SNPs with CDKNZB, the other containing
CDKNZB. The other six tests failed to detect them. Among the
three known ESCC-associated regions at 10q23.33, 22q12.1
(Abnet et al., 2010) and 2q33.1 (Abnet et al., 2012), TREAT
identiﬁed gene HSCB (P = 2.1 x 10—6) at 22q12.1. In general,
the ARTP and AdaJoint tests, each of which found ﬁve asso-
ciated genes that exceeded the genome-wide threshold, appear to
have the most success in these three established regions.

3.2 Simulation Studies

We conducted extensive simulation studies to compare the per-
formance between the proposed TREAT and several commonly
used approaches, including Min-P, ARTP, AdaJoint and SKAT.
Results of SKAT-O-5 and SKAT-O-10 are similar to that of
SKAT, and thus are not shown here.

First, we used observed genotypes at the six SNPs within the
gene CDKNZB in the GWA study of ESCC described earlier as a
template to simulate data. Each simulated dataset consisted of
3000 cases and 3000 controls. Genotypes of controls were dir-
ectly sampled from the joint genotype distribution observed in
the ESCC study. We generated the genotypes of cases by sam-
pling from the ESCC data with the weight for each subject spe-
ciﬁed by the assumed risk model [see Yu et al. (2009) for more
details on how the genotypes were assigned]. We considered the
risk model used in Figure l, which can be represented as:

logitPr(y = 1 I 13,14) = Cl + [3313 + [3414 

where [3 (I4) is the indicator variable on whether a sample falls in
the third (fourth) leaf node in the tree shown in Figure 1. We set
,63 = ,64 = 0 in (10) under the null hypothesis, and generated
10 000 datasets for assessing type I errors of all considered tests
under the signiﬁcance level at 0.05 and 0.001. Table 6 shows that
all considered tests can properly maintain their empirical type I
errors. More results about the empirical type I error of TREAT
applied to genes with various sizes are given in the
Supplementary Table S1.

We set ,63 = 0.5 and ,64 = —0.2 in (10) and generated 1000
datasets for the power comparison. Power for various tests at

 

2175

112 /810's112umofpinXO'soi1chOJuioiw/2d11q moxj papeolumoq

910K ‘09 lsnﬁnV no 2:

H.Zhang et al.

 

Table 6. The empirical type I errors at the levels of 0.05 and 0.001

 

Level TREAT Min-p ARTP AdaJoint SKAT

 

.05 .047 .046 .045 .052 .047
.001 .0007 .0009 .0007 .0012 .001 1

 

Table 7. Power comparisons under the risk model (10)

 

Level TREAT Min-p ARTP AdaJoint SKAT

 

.05 .855 .756 .749 .728 .690
.001 .483 .237 .229 .233 .116

 

the levels of 0.05 and 0.001 is summarized in Table 7. It is obvi-
ous that TREAT has a clear power advantage over other tests
under this scenario.

Next, we conducted simulations by generating genotypes under
various LD structures. Instead of relying on observed joint geno-
type distribution in an existing study, we simulated genotypes at
multiple SNPs in a study population according to the algorithm in
the study by Wang and Elston (2007). We considered a gene with
20 SNPs, and a study with 2000 cases and 2000 controls. We
generated vectors of continuous variables U = (U 1, . . . , U2o)’
under a multivariate normal distribution with mean zero and
the covariance matrix 2 = (co-)ZOXZO, where 0,]- : ,o'i_j'. We then
generated genotypes at the i-th SNP by discretizing U,- into three
levels corresponding to genotypes 0, l and 2, so that the resultant
SNP had a minor allele frequency of 0.4. The correlation among
genotypes of the 20 SNPs was controlled by p. In the simulation,
we considered p = 0, 0.5 and 0.9 to represent a low, median and
high LD relationship among SNPs, respectively. We used this
procedure to generate genotypes for controls, and we used the
weighted sampling procedure to generate genotypes for cases ac-
cording to the assumed risk model.

We designated the 10th and 11th SNPs as the risk SNPs, and
we deﬁned the two following indicator variables to represent the
way that the two risk SNPs affect the outcome:

I _ l, ifG1o=10r2andG11=00r1
1_ 0, otherwise,

and

I_ 1,ifG1o=10r2andG11=2
2 _ 0, otherwise.
The risk model was deﬁned as

10glt P10} =1 I G10, G11) = Cl -I- [3111+ [3212 

This model can be represented as a tree model with three leaf
nodes. Table 8 compares the power of all considered tests under

Table 8. Power comparisons under the risk model (11)

 

Setting TREAT Min-p ARTP AdaJoint SKAT

 

.31 = 0, .32 = 1080-5)

)0 = .0 .644 .481 .450 .456 .359
p = .5 .936 .783 .790 .736 .674
p = .9 .991 .927 .946 .882 .872
131 = —log(1-2), 132 = 108(1-2)

p = .0 .568 .314 .320 .340 .283
p = .5 .691 .233 .257 .354 .137
p = .9 .812 .195 .166 .212 .122

 

Table 9. Power comparisons under the risk model (12)

 

Setting TREAT Min-p ARTP AdaJoint SKAT

 

p = .0 .338 .201 .243 .251 .202
p = .5 .732 .633 .650 .544 .541
p = .9 .960 .887 .900 .866 .886

 

various scenarios, which were speciﬁed by p, ,61 and ,62. The
power was evaluated at the level 0.05 based on 1000 replicated
datasets simulated under each scenario. It is evident from Table 8
that TREAT is the most powerful under model (11). The Min-P,
ARTP and AdaJoint tests performed similarly to each other and
showed some advantage over SKAT.

The risk models considered in Table 8 are essentially tree
models. We then conducted simulation under the following
two-locus epistasis risk model:

10glt P10} =1 I G10, G11) = Cl -I- [311(G10 = 2) -I- [321(G11 = 2)
+ l/I(G1o = G11: 2)
(12)

with ,61 = ,62 = y = 0.15. Power results based on 1000 replicates
are summarized in Table 9. Again, TREAT outperformed all
other tests under the risk model (12).

Finally, we compared the performance of all considered tests
under traditional linear additive models (on the logit scale) with
one, two or three disease risk SNPs. The results are summarized
in Supplementary Table S2. As TREAT is not designed to detect
additive effects, it is not a surprise to see that TREAT has a less
favorable performance compared with other tests, such as
ARTP, AdaJoint and SKAT, which aim at the linear additive
risk model. In practice, we recommend the use of TREAT in
conjunction with one of the tests that target detection of additive
joint effects.

3.3 Computing time

Here, we provide a summary of computing time when applying
TREAT on a gene with 5, 10, 20, 50 and 100 SNPs in a study
consisting of 2000 cases and 2000 controls. We assume that the
adjusted covariates are treated as a 5-level categorical variable.

 

2176

112 [3.10811211an[p.IOJXO'SOImIIIlOJIIIOIQ/ﬂdilqu 111011 pep1201umoq

910K ‘09 lsnﬁnV no 2:

Tree-based association test for complex joint effects

 

We set Ko 2 5 and No 2 50 and used 105 replicates of permuta-
tion when applying TREAT. In Supplementary Table S3, we
report the averaged running time over 100 experiments for
each scenario on a Linux machine with a 2.8-GHz Xeon CPU.
It appears that it is practical to run TREAT as a routine test, as
the computing time is reasonable.

4 DISCUSSION

The linear regression model, such as the logistic regression
model, has been the dominant tool for assessing the joint effect
of multiple predictors. The following three factors contribute to
its popularity. First, the linear regression is convenient to use, as
the asymptotic distributions have been established for derived
test statistics. Second, it is generally accepted that the linear
model is usually adequate for depicting the joint effect. Third,
there are not many alternative options available. There is clearly
a demand for more robust testing procedures, especially in situ-
ations when the cumulative effect from multiple predictors is
non-additive. Here, we have proposed a general testing proced-
ure based on the tree-structure model. Leveraging a computa-
tionally efﬁcient tree-building algorithm, the procedure has
limited requirements for CPU time and memory. For a gene
with 20 SNPs in a study of 2000 cases and 2000 controls, it
takes 45s to run the procedure with 105 permutation steps on
a Linux machine with a 2.8-GHz Xeon CPU. We have demon-
strated the power advantage for the proposed procedure in the
setting of gene-based association analysis through real and simu-
lated datasets.

The proposed testing procedure is general and can be used for
testing the association between a set of risk factors and a binary
outcome. It can adjust the covariates’ effects by treating them as
a categorical variable with multiple levels. It has two major
tuning parameters that have to be set by the user: the maximum
tree sizes Ko (the number of leaf nodes) and the minimum sample
size No required for each leaf node to be split. In practice, the
maximum tree size depends on the sample size of the study, the
number of risk factors and the prior knowledge on the complex-
ity of the underlying risk model. For the purpose of hypothesis
testing, we favor a relatively small tree size, as we want to limit
the number of considered candidate risk models, which are sub-
trees of the full tree with the maximum number of leaf nodes, to
control multiple-comparison effects. On the other hand, the max-
imum tree size has to be large enough to allow the searching
space to be sufﬁciently broad to cover a model that adequately
approximates the true risk model. In the setting of gene-based
analysis, we recommend choosing Ko in the range of 5 to 10,
under the assumption that the number of true disease-associated
loci within a gene tends to be relatively small. The choice of the
minimum sample size No required in each leaf node is driven
mainly by the total sample size. Because each leaf node repre-
sents a candidate risk group, we suggest No 2 50 for robust
testing results.

The computational burden associated with the tree-structure
model is one major barrier to its use for hypothesis testing. We
overcame this obstacle by combining several strategies to speed
up the proposed procedure, including the derivation of closed-
form formulas for evaluating splitting rules and score test statis-
tics for assessing the joint effect summarized by the tree-structure

model, the use of Ge’s one-layer permutation algorithm (Ge
et al., 2003) for the evaluation of the P-value and the adaptation
of the B00 method WV an et al., 2010) for swift scanning over
candidate splitting rules. We demonstrated that it is feasible to
apply the proposed procedure as a multilocus association test in
large-scale gene-based association studies with >20 000 candidate
genes or annotated regions. The tree-building algorithm can be
accelerated further by noticing that the evaluation of splitting
rules at each given tree node is parallelizable. We are currently
working on a GPU (graphic processing unit) implementation to
take advantage of the parallelizability (Greene et al., 2010; Yung
et al., 2011).

We developed a general testing procedure based on the tree-
structure model and presented a fast algorithm for building the
tree-structure model by adopting the computationally efﬁcient
Boolean operator for swift evaluation of the splitting rule. This
procedure has broad applications, and it is a valuable tool that
can be run routinely in conjunction with other tests that target an
additive joint effect. We have created an R package implement-
ing the procedure (http://www.hanzhang.name/softwares/treat).

ACKNOWLEDGEMENT

We thank the anonymous referees for their helpful comments.
This study used the high-performance computational capabilities
of the Biowulf Linux cluster at the National Institutes of Health,
Bethesda, MD. (http://biowulf.nih.gov).

Funding: The work of H.Z., P.R.T. and KY. was supported by
the Intramural Program of the National Institutes of Health, the
National Cancer Institute and the Division of Cancer
Epidemiology and Genetics.

Conﬂict of Interest: none declared.

REFERENCES

Abnet,C.C. et al. (2010) A shared susceptibility locus in PLCEI at qu23 for gastric
adenocarcinoma and esophageal squamous cell carcinoma. Nat. Genet, 42,
764—767.

Abnet,C.C. et al. (2012) Genotypic variants at 2q33 and risk of esophageal squa-
mous cell carcinoma in china: a meta-analysis of genome-wide association stu-
dies. Hum. Mol. Genet, 21, 2132—2141.

Agresti,A. (2007) An introduction to categorical data analysis. In: Wiley Series in
Probability and Mathematical Statistics. Vol. 423, 2 edn. John Wiley & Sons,
Hoboken, NJ.

Breiman,L. et al. (1984) Classiﬁcation and Regression Trees. Wadsworth & Brooks,
Monterey, CA.

Chen,J. et al. (2007) A partially linear tree-based regression model for assessing
complex joint gene-gene and gene-environment effects. Genet. Epidemiol., 31,
238—251.

Ge,Y. et al. (2003) Resampling-based multiple testing for microarray data analysis.
Test, 12, 1—77.

Greene,C.S. et al. (2010) Multifactor dimensionality reduction for graphics process-
ing units enables genome-wide testing of epistasis in sporadic als. Bioinformatics,
26, 694—695.

Howie,B.N. et al. (2009) A ﬂexible and accurate genotype imputation method for
the next generation of genome-wide association studies. PLoS Genet, 5,
e1000529.

Lee,S. et al. (2012) Optimal tests for rare variant effects in sequencing association
studies. Biostatistics, 13, 762—775.

Mantel,N. (1963) Chi-square tests with one degree of freedom; extensions of mantel-
haenszel procedure. J. Am. Stat. Assoc, 58, 690—700.

 

2177

112 /810's112umo[pJOJXO'sot1cm101u1otw/2d11q 111011 popcommoq

910K ‘09 lsnﬁnV no 2:

H.Zhang et al.

 

Mantel,N. and Haenszel,W. (1959) Statistical aspects of the analysis of data from
retrospective studies of disease. J. Natl Cancer Inst, 22, 719—748.

Seaman,S.R. and Muller-Myhsok,B. (2005) Rapid simulation of P values for prod-
uct methods and multiple-testing adjustment in association studies. Am. J. Hum.
Genet, 76, 399—408.

Wan,X. et al. (2010) BOOST: a fast approach to detecting gene-gene interactions in
genome-wide case-control studies. Am. J. Hum. Genet, 87, 325—340.

Wang,T. and Elston,R.C. (2007) Improved power by use of a weighted score test for
linkage disequilibrium mapping. Am. J. Hum. Genet, 80, 353—360.

Wu,M.C. et al. (2010) Powerful SNP-set analysis for case-control genome-wide
association studies. Am. J. Hum. Genet, 86, 929—942.

Yu,K. et al. (2009) Pathway analysis by adaptive combination of P-values. Genet.
Epidemiol, 33, 700—709.

Yu,K. et al. (2007) Two-sample comparison based on prediction error, with
applications to candidate gene association studies. Ann. Hum. Genet, 71,
107—118.

Yung,L.S. et al. (2011) GBOOST: a GPU-based tool for detecting gene—
gene interactions in genome—wide case control studies. Bioinformatics, 27,
1309—1310.

Zhang,H. et al. (2014) A fast multilocus test with adaptive SNP selection for
large-scale genetic association studies. Eur. J. Hum. Genet, 22, 696—702.

Zhang,H. and Singer,B. (1999) Recursive Partitioning in the Health Sciences.
Springer Verlag, New York.

1000 Genomes Project Consortium et al. (2012) An integrated map of genetic vari-
ation from 1,092 human genomes. Nature, 491, 56—65.

 

2178

112 /810's112umo[p101x0's31112u1101u101q/ﬁd11q 111011 pep1201umoq

910K ‘09 lsnﬁnV no 2:

