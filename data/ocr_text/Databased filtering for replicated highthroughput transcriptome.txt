ORIGINAL PAPER

Vol. 29 no. 17 2013, pages 2146—2152
doi:10. 1093/bioinformatics/btt350

 

Gene expression

Advance Access publication July 2, 2013

Data-based filtering for replicated high-throughput transcriptome

sequencing experiments

Andrea Raul”

, Melina Gallopinl’z, Gilles Celeux3 and Florence Jaffrézicl’2

llNRA, UMR1313 Génétique animale et biologie integrative, 78352 Jouy—en—Josas, France, 2AgroParisTech, UMR1313
Génétique animale et biologie integrative, 75231 Paris 05, France and 3lnria Saclay — lle—de—France, 91405 Orsay, France

Associate Editor: lnanc Birol

 

ABSTRACT

Motivation: RNA sequencing is now widely performed to study differ-
ential expression among experimental conditions. As tests are per-
formed on a large number of genes, stringent false-discovery rate
control is required at the expense of detection power. Ad hoc filtering
techniques are regularly used to moderate this correction by removing
genes with low signal, with little attention paid to their impact on down-
stream analyses.

Results: We propose a data-driven method based on the Jaccard
similarity index to calculate a filtering threshold for replicated RNA
sequencing data. In comparisons with alternative data filters regularly
used in practice, we demonstrate the effectiveness of our proposed
method to correctly filter lowly expressed genes, leading to
increased detection power for moderately to highly expressed
genes. Interestingly, this data-driven threshold varies among experi-
ments, highlighting the interest of the method proposed here.
Availability: The proposed filtering method is implemented in the R
package HTSFilter available on Bioconductor.

Contact: andrea.rau@jouy.inra.fr

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on November 20, 2012; revised on May 24, 2013; accepted
on June 17, 2013

1 INTRODUCTION

During the past 5 years, next-generation high-throughput
sequencing (HTS) technology has become an essential tool for
genomic and transcriptomic studies. In particular, the use of
HTS technology to directly sequence the transcriptome, known
as RNA sequencing (RNA-seq), has revolutionized the study of
gene expression by opening the door to a wide range of novel
applications. Unlike microarray data, which are continuous,
RNA-seq data represent highly heterogeneous counts for gen-
omic regions of interest (typically genes) and often exhibit
zero-inﬂation and a large amount of overdispersion among
biological replicates; as such, a great deal of methodological
research (e.g. Anders and Huber, 2010; Dillies et al., 2012;
Robinson et al., 2010) has recently focused on appropriate nor-
malization and analysis techniques that are adapted to the char-
acteristics of RNA-seq data; see Oshlack et al. (2010) for a review
of RNA-seq technology and analysis procedures.

 

*To whom correspondence should be addressed.

As with data arising from previous technologies, such as
microarrays or serial analysis of gene expression, HTS data are
often used to conduct differential analyses. In recent years, seV-
eral approaches for gene-by—gene tests using gene-level HTS data
have been proposed, with the most popular making use of
Poisson WVang et al., 2010), overdispersed Poisson (Auer and
Doerge, 2011) or negative binomial distributions (Anders and
Huber, 2010; Robinson et al., 2010). Because a large number
of hypothesis tests are performed for gene-by—gene differential
analyses, the obtained P-Values must be adjusted to address the
fact that many truly null hypotheses will produce small P—Values
simply by chance; to address this multiple testing problem, seV-
eral well-established procedures have been proposed to adjust
P—Values to control various measures of experiment-wide false
positives, such as the false-discovery rate. Although such proced-
ures may be used to control the number of false positives that are
detected, they are often at the expense of the power of an experi-
ment to detect truly differentially expressed (DE) genes, particu-
larly as the number of genes in a typical HTS dataset may be in
the thousands or tens of thousands. To reduce this impact, seV-
eral authors in the microarray literature have suggested the use
of data ﬁlters to identify and remove genes that appear to gen-
erate an uninformative signal (Bourgon et al., 2010) and have no
or little chance of showing signiﬁcant evidence of differential
expression; only hypotheses corresponding to genes that pass
the ﬁlter are subsequently tested, which in turn tempers the cor-
rection needed to adjust for multiple testing.

In recent work, Bourgon et al. (2010) advocate for the use of
independent data ﬁltering, in which the ﬁlter and subsequent test
statistic pairs are marginally independent under the null hypoth-
esis, and the dependence structure among tests remains largely
unchanged pre- and post-ﬁlter, ensuring that post-ﬁlter P—Values
are true P—Values. For such an independent ﬁlter to be effective, it
must be positively correlated with the test statistic under the al-
ternative hypothesis; indeed, it is this correlation that leads to an
increase in detection power after ﬁltering. In addition, Bourgon
et al. demonstrate that non-independent ﬁlters for which depend-
ence exists between the ﬁlter and test statistic (e. g. making use of
condition labels to ﬁlter genes with average expression in at least
one condition less than a given threshold), can in some cases lead
to a loss of control of experiment-wide error rates.

Several ad hoc data ﬁlters for RNA-seq data have been used in
recent years, including ﬁltering genes with a total read count
smaller than a given threshold (Sultan et al., 2008) and ﬁltering
genes with at least one zero count in each experimental condition
(Bottomly et al., 2011); however, selecting an arbitrary threshold

 

© The Author 2013. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/|icenses/
by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial
re-use, please contact journals.permissions@oup.com

112 /810's112umo[pJOJXO'sot1emJOJutotw/2d11q IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

Data-based filtering for HTS experiments

 

value to ﬁlter genes in this way does not account for the overall
sequencing depth or variability of a given experiment. One ex-
ception to these ad hoc ﬁlters is the work of Ramskéld et al.
(2009), in which a comparison between expression levels of
exonic and intergenic regions was used to ﬁnd a threshold for
detectable expression above background in various human and
mouse tissues, where expression was estimated as Reads Per
Kilobase per Million mapped reads (RPKM) (Mortazavi et al.,
2008). The threshold of 0.3 RPKM identiﬁed in this work has in
turn been applied to several other studies (e. g. Canovas et al.,
2010; Labaj et al., 2011; Sam et al., 2011). However, to our
knowledge, although ﬁlters for read counts are routinely used
in practice, little attention has been paid to the choice of the type
of ﬁlter or threshold used or its impact on the downstream
analysis.

In this article, we propose a novel data-based procedure to
choose an appropriate ﬁltering threshold based on the calcula-
tion of a similarity index among biological replicates for read
counts arising from replicated high-throughput transcriptome
sequencing data. This technique provides an intuitive data-
driven way to ﬁlter RNA-seq data and to effectively remove
genes with low constant expression levels. Our proposed ﬁltering
threshold may be useful in a variety of applications for RNA-seq
data, including differential expression analyses, clustering and
co-expression analyses, and network inference.

2 METHODS
2.1 Types of ﬁlters used for RNA-seq data

Data ﬁlters are routinely used in practice for differential analyses of
RNA-seq data. Most such ﬁlters are applied to data that have been
normalized in some way, rather than directly to the raw counts, to ac-
count for systematic inter-sample biases typical of RNA-seq data, e.g.
differences in library size (Anders and Huber, 2010; Robinson and
Oshlack, 2010) or GC content (Hansen et al., 2012; Risso et al., 2011).
In particular, the Trimmed M-Means library size normalization
(Robinson and Oshlack, 2010) and the normalization included in the
DESeq Bioconductor package (Anders and Huber, 2010) have been
found to be robust methods to correct for library size biases, even in
the presence of widely different library compositions (Dillies et al., 2012).

We consider two broad categories of ﬁlters for RNA-seq data based on
the ﬁltering criterion used: mean-based ﬁlters and maximum-based ﬁlters.
We note that although variance-based ﬁlters are routinely used for micro-
array data (Bourgon et al., 2010), they have not been applied to RNA-seq
data; this is likely due to the small number of replicates available in most
RNA-seq datasets (and thus, the difﬁculty in obtaining accurate estimates
of per-gene variances) and the fact that the variance is assumed to be a
function of the mean under a negative binomial model.

2.1.] M earl-based ﬁlters In mean-based ﬁlters, genes with mean nor-
malized counts across all samples less than or equal to a pre-speciﬁed
cutoff are ﬁltered from the analysis. Some authors (Sultan et al., 2008)
have also proposed ﬁltering genes with a total read count less than or
equal to a given threshold s; we note that this is equivalent to mean-based
ﬁlters for threshold .9 divided by the number of samples.

In addition to normalized counts, we also consider mean-based ﬁlters
for the RPKM (Mortazavi et al., 2008) measure, which was initially
proposed to simultaneously normalize RNA-seq data for biases due to
library size and gene length. However, we note that it has been shown
that counts, rather than RPKM values, are preferable for the differential
analysis of RNA-seq data (Oshlack and Wakeﬁeld, 2009). For this

reason, after ﬁltering genes with a RPKM mean ﬁlter, raw counts are
used for the subsequent differential analysis. A comparison of differential
analysis methods developed for counts and RPKM values is beyond the
scope of this work.

2.1.2 M aximum-based ﬁlters In maximum-based ﬁlters, genes
with maximum normalized counts across all samples less than or equal
to a pre-speciﬁed threshold are ﬁltered from the analysis. As aforemen-
tioned, in addition to normalized counts, we also consider maximum-
based ﬁlters for RPKM values, which we refer to as a RPKM maximum
ﬁlter.

A generalization of the maximum-based ﬁlter has also been proposed
in the edgeR analysis pipeline (Robinson et al., 2010) based on counts
per million (CPM), calculated as the raw counts divided by the library
sizes and multiplied by one million. Genes with a CPM value less than a
given cutoff (e.g. 1 or 100) in more samples (ignoring condition labels)
than the size of the smallest group are subsequently ﬁltered from the
analysis. To distinguish this approach from the other maximum-based
ﬁlters, we refer to this strategy as a CPM ﬁlter.

We note that maximum-based ﬁlters are not independent ﬁlters as
described by Bourgon et al. (2010); in particular, for extremely large
ﬁltering thresholds, maximum-based ﬁlters do not guarantee control of
the Type I error rate if P-values are computed using the pre-ﬁlter null
distribution. For the threshold values typically used in practice (e. g. based
on a quantile, or the data-based threshold proposed later in the text), this
is usually not a concern (see Supplementary Fig. S28). Although it may be
difﬁcult to verify that conditional and unconditional P—value distributions
coincide for real data, it may be useful to examine histograms of each
(e.g. as shown in Fig. 3).

2.2 A data-based threshold for maximum-based ﬁlters

For each of the ﬁlter types previously deﬁned, a biologically pertinent
cutoff (or alternatively, number of genes to be ﬁltered) must be chosen; in
practice, arbitrary thresholds are routinely used with little or no discus-
sion of their impact on the downstream analysis. To address this issue, we
propose a data-based choice for the threshold to be used in maxirnum-
based ﬁlters. The main idea underlying this choice is to identify the
threshold that maximizes the ﬁltering similarity among replicates, i.e.
one where most genes tend to either have normalized counts less than
or equal to the cutoff in all samples (i.e. ﬁltered genes) or greater than the
cutoff in all samples (i.e. non-ﬁltered genes).

To deﬁne this ﬁltering similarity, we begin with some notation. Let ygi
represent the observed normalized read count (6. g. after scaling raw
counts by library size) for gene g in sample j, and let (30‘) represent the
experimental condition of sample j, with g e {1, ..., G} and
j e {1, ..., J}. Typically, in the context of differential analyses, the
number of conditions is equal to 2. We denote the full vector of read
counts in a given sample as yj. We now wish to deﬁne a similarity index
between a pair of replicates within the same condition
{(yj,yj,) : CO) = C(i’)} after binarizing the data for a ﬁxed cutoff s (1 if
ygj >s and 0 otherwise). We note that a variety of similarity indices have
been proposed since the early 1900s; however, in a comparison among
a set of similarity indices (see the Supplementary Materials), we
found the J accard index (J accard, 1901) to be simple, natural and
easy to interpret for the analysis of HTS data. This index is deﬁned as
follows:

JS(yj9 yj’) = (1)

a
a+b+c
where a, b and c are deﬁned in Table 1. We note that Js(yj, yj,) takes on
values from 0 (dissimilar) to 1 (similar). Because multiple replicates and/
or conditions are typically available in HTS experiments, we extend the
deﬁnition of the pairwise Jaccard index in Equation (1) to a global

 

2147

112 [glO'SIBILInO[p.IOJXO'SODBIIIJOJIIIOIQ/ﬂ(11111 IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

A.Rau et al.

 

Table 1. Deﬁnition of the constants used to calculate the Jaccard simi-
larity index for a pair of samples j and j’ and a given threshold s

 

 

 

Sample j
Normalized Normalized
counts >s counts 5 .9
Sample j’
Normalized counts >s a b
Normalized counts 5 s c d

 

Note: The constant a represents the number of genes with normalized counts greater
than s in both samples j and j’ and so on.

J accard index by averaging the indices calculated over all pairs in each
condition:

my) = mean{J.(y,-. y,» :j<j’ and 60') = 6a)}. (2)

Using the global J accard index deﬁned in Equation (2) as a measure of
similarity, we now wish to identify the cutoff s* for normalized counts
that corresponds to the greatest similarity possible among replicates, i.e.
the value of .9 corresponding to the maximum value of the global J accard
index:

s* = argmaxSJ: (y). (3)

In practice, for the calculation of the data-based global ﬁltering threshold
in Equation (3), we calculate the value of the global Jaccard index in
Equation (2) for a ﬁxed set of threshold values and ﬁt a loess curve
(Cleveland, 1979) through the set of points; the value of s* is subsequently
set to be the maximum of these ﬁtted values.

Once the data-driven ﬁlter threshold for normalized counts s* has been
identiﬁed, the subsequent steps to be taken may change for different
applications. To perform an analysis of differential expression between
two experimental conditions, we propose using this threshold s* in a
maximum-based ﬁlter, as deﬁned in Section 2.1.2; in the following, we
refer to this technique as the Jaccardfilter.

2.3 The Bioconductor package HTSFilter

The proposed ﬁltering method is implemented in the HTSFi lter pack-
age, currently available as part of the Bioconductor project (Gentleman
et al., 2004) within the statistical environment R (R Development Core
Team, 2009). The HTSFilter package is compatible with a variety of
data classes and analysis pipelines, including matrix and data . frame
objects, the S4 class CountDataSet in the DESeq pipeline (Anders and
Huber, 2010) and the S3 class DGEList in the edgeR pipeline (Robinson
et al., 2010). A package vignette describes the use of the HTSFilter
package within each of these pipelines.

3 RESULTS

In the following, we apply the normalization approach proposed
by Anders and Huber (2010) for mean- and maximum-based
ﬁlters, although other types of normalization may be appropriate
for some data. For gene-by—gene comparisons between two con-
ditions, we illustrate the use of the proposed ﬁlter in conjunction
with the model proposed in the DESeq Bioconductor package
(version 1.8.3), which has been developed to model count data
with a small number of replicates in the presence of

overdispersion (Anders and Huber, 2010); P—values are adjusted
for multiple testing using the Benjamini—Hochberg procedure
(Benjamini and Hochberg, 1995) to control the false-discovery
rate. We note that the ﬁltering method proposed here may also
be used in conjunction with other popular methods, e. g. edgeR
(Robinson et al., 2010). See the Supplementary Materials for
additional discussion of the normalization and statistical testing
methods used in this work.

In practice, there may be some question about the appropriate
point in the analysis pipeline to apply data ﬁlters: Should nor-
malized data ﬁrst be ﬁltered, then normalization factors re-esti-
mated and the model ﬁt (i.e. mean and dispersion parameters
estimated)? Should normalization factors and model parameters
be estimated based on the full data, and the data ﬁltered only at
the end of the analysis pipeline? The difference between the two
options is non-trivial, particularly as the differential analysis
approaches implemented in the DESeq and edgeR packages
both borrow information across genes (whether all or only
those passing the ﬁlter) to obtain per-gene parameter estimates.
In this work, we present results based on the application of ﬁlters
applied as late in the pipeline as possible, i.e. after library size and
dispersion parameter estimation; a more detailed discussion of
this issue is included in the Supplementary Materials.

3.1 Description of data

We applied our proposed J accard index ﬁlter, in addition to the
alternative ﬁlter types described earlier in the text, on the follow-
ing data:

0 Sex-speciﬁc expression of liver cells in human. Sultan et al.
(2008) obtained high-throughput transcriptome sequencing
data from a human embryonic kidney and a B cell line, with
two biological replicates each. The raw read counts and
phenotype tables were obtained from the ReCount online
resource (Frazee et al., 2011).

0 Differential striatal expression between inbred mouse strains.
Bottomly et al. (2011) performed RNA-seq experiments for
10 biological replicates of the C57BL/6J inbred mouse strain
and 11 for the DBA/2J strain, and the results were com-
pared with those arising from two different microarray plat-
forms. The raw read counts and phenotype tables were
obtained from the ReCount online resource (Frazee et al.,
201 1).

o MiTF repression in a human melanoma cell line. Strub et al.
(2011) obtained HTS data to compare gene expression in
a melanoma cell line expressing the Microphtalmia
Transcription Factor to one in which small interfering
RNAs were used to repress Microphtalmia Transcription
Factor, with three biological replicates in each group. The
raw read counts and phenotype tables are available in the
Supplementary Materials of Dillies et al. (2012).

0 Simulated data. To investigate the effect of the various
ﬁltering methods on downstream results, we developed a
simulation framework as described in Section 3.3.

For the three real datasets (described in further detail in
Supplementary Table S1), gene annotations for Mus masculas
(NCBIM37) and Homo sapiens (GRCh37.p7) were obtained

 

2148

112 ﬁlm'spaumofpinXO'sor1chOJurorw/2d11q IIIOJJ popcolumoq

910K ‘09 lsnﬁnV uo 22

Data-based filtering for HTS experiments

 

from Ensembl version 67 (Birney et al., 2004) using the Biomart
tool (Kasprzyk et al., 2004), and the length of each gene in base
pairs was calculated. In the Bottomly, Sultan and Strub data,
~4, 2 and 5% of the genes, respectively, had been retired from
Ensembl; for these genes, RPKM-based ﬁlters were not used.
Readers wishing to examine the complete analyses in detail
may ﬁnd a Sweave document containing commented R code
for the analyses of each of the datasets in the Supplementary
Materials.

3.2 Comparison of ﬁlters on real data

For the three real datasets, differential analyses were performed
using a negative binomial model (Anders and Huber, 2010) for
unﬁltered data and after ﬁltering the data using the techniques
described earlier in the text. For the Jaccard index ﬁlter, the
global Jaccard index in Equation (2) was calculated for a range
of threshold values 5, yielding a largely unimodal distribution of
values for all datasets considered (Fig. 1 and Supplementary Figs
S11 and S18). We also note that the data-driven threshold values
5* identiﬁed for the Bottomly, Sultan and Strub data were not
equal; in the case of the Bottomly data, the threshold for normal-
ized counts was found to be 14.7, whereas this threshold was
found to be 11.5 for the Sultan data and 103.5 for the Strub
data. These differences in ﬁltering threshold among experiments
are due to both sequencing depth and variability within the data;
in particular, experiments with greater sequencing depth will tend
to have higher ﬁltering thresholds, and those with greater vari-
ability will tend to have lower ﬁltering thresholds. Among the
data considered in our study, the Strub data have the highest
sequencing depth (1.5 x 108) coupled with low intra-condition
variability (minimum correlation among replicates equal to
0.98), and they also have the highest threshold considered here.
On the other hand, the Sultan data have a much lower sequen-
cing depth (1.8 x 106) and thus have a much lower threshold.
For each dataset, the J accard ﬁlter was applied with the cor-
responding data-based threshold calculated earlier in the text.
For the alternative mean- and maximum-based ﬁlters for nor-
malized counts and RPKM values, cutoffs were chosen based on
the 15% quantile of the respective criterion. For the CPM ﬁlter,
as suggested in the edgeR pipeline Robinson et al. (2010), genes
with a CPM value <1 in more samples than the size of the
smallest group are subsequently ﬁltered from the analysis.
Among the ﬁlters considered, it may immediately be seen in
Figure 2 that in the Strub data, with the exception of the CPM
and J accard ﬁlters, most of the ﬁlters considered here appear to
be ineffective as they are largely unable to ﬁlter genes with low
levels of expression and small log-fold changes; a similar phe-
nomenon may be observed in the Bottomly and Sultan data
(Supplementary Figs S7 and S14). Although these techniques
are thus unlikely to (incorrectly) ﬁlter truly DE genes, the
number of statistical tests is not markedly reduced, and as such
the power to detect differential expression will remain largely
unchanged as compared with the unﬁltered data. With the ex-
ception of the RPKM-based ﬁlters, all are able, to some extent,
to identify and remove genes contributing to a peak of raw
P—values close to one (Fig. 3 and Supplementary Figs S13 and
S20), a phenomenon due to the discretization of P—values for
small counts; indeed, histograms of raw P—values following the

 

Global Jaccard index
0.905 0 910 0.915 0.920 0.925
I I I I

0.900
I

 

 

 

 

0.895

 

1 2 5 10 20 50 100 200

Threshold
5 = 14.7

Fig. 1. Global J accard index for the Bottomly data calculated for a var-
iety of threshold values for normalized counts, with a loess curve (solid
line) superposed and data-driven threshold value (dotted line) equal to
s* = 14.7

application of most ﬁlters appear to be roughly uniformly dis-
tributed under the null hypothesis. In addition, we note that the
proposed J accard ﬁlter is able to more effectively remove genes
with moderate log base means and small log fold changes (see
Fig. 2). Similar conclusions may be drawn from the volcano plots
shown in Supplementary Figures S8, S15 and S22.

It is also of interest to consider the effect of each ﬁlter on the
number of DE genes identiﬁed at various levels of expression; in
Figure 4 and Supplementary Figures S5 and S12, we note that in
all datasets, the J accard ﬁlter leads to more discoveries at all but
weak levels of expression (i.e. mean expression <10), with this
difference being particularly marked for moderate levels of ex-
pression (i.e. mean expression greater than 50). We note that a
large number of the missed discoveries for the J accard ﬁlter at
low levels of expression correspond to genes with zero read
counts in one condition and a small number of read counts in
the other; for example, in the Sultan data, 50.3% of the 449
discoveries among genes with mean normalized read counts
<10 had zero read counts in one of the two conditions.
Among the other ﬁlter types, the CPM ﬁlter appears to come
closest to the J accard ﬁlter, with the remaining ﬁlters performing
similarly.

In considering the overlap of genes ﬁltered using each method
(Supplementary Figs S9, S16 and S23), it is clear that a large
number of genes may be ﬁltered, regardless of the technique
used. However, the J accard index is better able to ﬁlter a large
number of weakly expressed genes in all three of the datasets
considered here, leading to a more moderate correction for mul-
tiple testing; the direct consequence of this is a larger number of
discoveries at moderate-to-high levels of expression. To deter-
mine whether this advantage is due to the ﬁltering type (i.e. max-
imum) or the threshold used for each (i.e. using the 15 % quantile
or the data-based threshold identiﬁed by the global Jaccard
index), we consider a set of simulation studies in the next section.

3.3 Simulated data

Data were simulated using a negative binomial model, with par-
ameters chosen based on the Bottomly, Sultan and Strub

 

2149

112 ﬁlm'spaumofpinXO'soI1chOJquIw/2d11q IIIOJJ popcolumoq

910K ‘09 lsnﬁnV uo 22

A.Rau et al.

 

 

 

 

 

 

Log fold change

 

 

RPKM Mean

Jaccard

 

  

 

 

 

 

 

-1

 

 

3 5 -1 1 3 5 -1 1 3 5

Log base mean

Fig. 2. Log mean expression versus log fold change values for the Strub data. For each ﬁlter, genes identiﬁed as non-DE are drawn in black, those
identiﬁed as DE are drawn in color (online) or grey (print), and those ﬁltered from the differential analysis are omitted from the plot. From left to right,
the ﬁlters are as follows: none, CPM, maximum, mean, RPKM maximum, RPKM mean and maximum using the global Jaccard index threshold

CPM Max Mean
1250- 1250- 1250-

 

 

 

1000- 1000- 1000-
750-

Count

500-
250-

 

 

 

 

 

 

 

0 _
0.0 0.5 1.0 0.0 0.5 1.0 0.0 0.5 1.0
P—value P—value P-value

 

 

 

 

 

 

 

 

 

 

 

 

   

 

 

 

RPKM Max RPKM Mean Jaccard
1250- 0- 0- I
1000- 1000- 1000-
E 750- E 750- E 750-
8 8 8
o 500- o 500- o 500- I
250- 250- 250- 'Hnnluhﬂ,
0- I I I 0- I I I 0- I I I
0.0 0.5 1.0 0.0 0.5 1.0 0.0 0.5 1.0
P—value P—value P-value

Fig. 3. Histograms of raw P—values from a differential analysis of the Bottomly data for a variety of ﬁlter types. Histograms in the background represent
the raw P-values from a differential analysis of the Bottomly data using unﬁltered data; histograms in the foreground represent the raw P—values from a
differential analysis of the data ﬁltered with various ﬁlter types. Figure made using the ggplot2 package Wickham, 2009)

datasets. Brieﬂy, for each dataset, genes with zero counts in one
of the two groups and mean <5 were removed (see
Supplementary Table S1). Differential analyses were performed
on unﬁltered data using the DESeq Bioconductor package
(Anders and Huber, 2010) as described in the Supplementary
Materials. After adjusting raw P—values for multiple testing
using the Benjamini—Hochberg procedure (Benjamini and
Hochberg, 1995), we identiﬁed 570, 2515 and 2485 DE genes,
respectively, at the 5% signiﬁcance level in the Bottomly, Sultan
and Strub data. In addition, the parametric gamma regressions
ﬁtted to the per-gene dispersion estimates a and gene expression
means ,u. (Supplementary Fig. S25) were identiﬁed for each
dataset:

OtBottomeUL) = 0-03 + 0-72/M, (4)
OtsuItanUL) = 0-01 1' 1-23/M, (5)
06Strub(.u) = 0-03 + 13-35/M- (6)

Subsequently, simulation parameters for each dataset were ﬁxed
as follows. For genes identiﬁed as being DE, means for each
condition were set to be the empirically calculated means from
each condition from the normalized data; for genes not identiﬁed
as being DE, means for each condition were both set to be the
global mean (across both conditions) from the normalized data.
This allows genes to be simulated as DE across the full range of
mean expression values (Supplementary Fig. S27). Per-gene dis-
persion parameters were set to be the ﬁtted values from the re-
gression equations deﬁned in Equations (4)—(6) as a function of
the overall mean for each gene; for the simulations based on the
Bottomly and Sultan data, dispersion parameters for genes with
overall mean expression <20 were ﬁxed to be equal to 10‘10 to

simulate negligible overdispersion, as shot noise appears to dom-
inate biological noise at low expression levels in these data
(Supplementary Fig. S26). Once these parameters were ﬁxed
for each gene, a negative binomial model was used to simulate
300 individual datasets each for the parameters based on the
Bottomly, Sultan and Strub data, with 21 samples (10 in one
condition and 11 in the other), 4 samples (2 in each condition)
and 6 samples (3 in each condition), respectively. Real lengths
corresponding to the genes in each dataset were used for the
calculation of RPKM values.

3.4 Comparison of ﬁlters on simulated data

To assess performance on simulated data, we focus on the sen-
sitivity of detecting DE genes after each data ﬁlter, deﬁned as
the proportion of truly DE genes detected among all truly
DE genes. In addition, we construct Receiver Operating
Characteristic (ROC) curves of each ﬁlter, based on the filtering
sensitivity, deﬁned as the proportion of correctly unﬁltered genes
(i.e. DE and unﬁltered) among all truly DE genes, and the
filtering specificity, deﬁned as the proportion of correctly ﬁltered
genes (i.e. non-DE and ﬁltered) among all non-DE genes.

In Figure 5, we note that the sensitivity to detect DE genes
greatly varies among the ﬁltering types for simulations based on
the Strub data, as well as among different thresholds within each
ﬁltering type; in addition, the RPKM maximum and RPKM
mean ﬁlters actually lead to lower detection power than unﬁl-
tered data. Similar results may be seen for the simulations based
on the Bottomly and Sultan data in Supplementary Figure S30.
For the simulation setting shown in Figure 5, larger thresholds
appear to yield the highest detection sensitivity (i.e. maximum or
mean-based ﬁlters for normalized counts using the 30% quantile
as a threshold). However, this trend is reversed for the other

 

2150

112 ﬁlm'spaumofpinXO'soI1chOJquIw/2d11q IIIOJJ papeolumoq

910K ‘09 lsnﬁnV uo 22

Data-based filtering for HTS experiments

 

simulation settings, where smaller cutoffs (i.e. cutoffs of 5 or
15% for the maximum or mean-based ﬁlters) lead to higher de-
tection sensitivity. This highlights the difﬁculty in pre-selecting a
ﬁxed threshold for a given ﬁltering method, as well as the ad-
vantage of our proposed J accard ﬁlter. Indeed, the J accard ﬁlter
appears to lead to high detection sensitivity for all simulations
with the exception of those based on the Bottomly data; for these
data, because many weakly expressed genes were simulated to be
DE (see Supplementary Fig. S27), unﬁltered data had the highest
sensitivity.

To assess the role of the choice of threshold for each ﬁlter type,
we constructed ROC curves of the ﬁltering sensitivity and speci-
ﬁcity over varying cutoffs in Figure 6 and Supplementary Figure
S29. We note that the mean and maximum RPKM-based ﬁlters
tend to have lower ﬁltering sensitivity than the others, and the
maximum ﬁlters (for both normalized counts and CPM values)
tend to be similar; however, for all simulation settings, the max-
imum ﬁlter for normalized counts has a slight advantage over
that for CPM values. In other words, regardless of the threshold

 

1200-

Filter type
900 -

0.

x<'1o 1os$<<25 25s$<<5o 50'sx
Means

Count

.RPKM Mean

Jaccard

 

 

 

 

Fig. 4. Number of DE genes detected in the Sultan data, categorized by
normalized base mean for each ﬁlter type (from left to right in each bin:
none, CPM, maximum, mean, maximum RPKM, mean RPKM, and
Jaccard). Figure made using the ggplot2 package Wickham, 2009)

used for ﬁltering, maximum-based ﬁlters appear to more effect-
ively ﬁlter non-DE genes than the remaining methods. Finally,
we note also that the data-based threshold using the global
J accard index appears to ﬁnd a good compromise between
ﬁltering sensitivity and ﬁltering speciﬁcity.

4 CONCLUSIONS AND DISCUSSION

Data ﬁltering has proven to be of great practical importance for
the differential analysis of high-throughput microarray and
RNA-seq data by identifying and removing genes with unin-
formative signal before testing. In recent years, many ad hoc
procedures have been used to ﬁlter RNA-seq data, such as

 

 

 

 

 

0. _
09 _
0
<0. _
O
.é‘
.5
'13
C
a:
a)
V. _
O
“I _
O
— cpm
— max
— mean
— rpkm.max
g _ — rpkm.mean
I I I I I I
0.0 0.2 0.4 0.6 0.8 1.0

1 — Speciﬁcity

Fig. 6. ROC curves (averaged over 300 datasets) for the ﬁltering perforrn-
ance on simulated data based on the Sultan data for the CPM, maximum,
mean, maximum RPKM and mean RPKM ﬁlters over a range of cutoffs.
The yellow cross labeled with a ‘J’ corresponds to the ﬁltering sensitivity
and speciﬁcity for the data-based threshold chosen via the global J accard
index

 

074
I
o
-- o
I
-|oc

072
-|o
I
1]]
_._____,.,
-|ro
-|an
I

Sensitivity

 

 

I
I
l


1 
I.

g In
i1»

 

 

,0 :
co. - : -- --
O .1—
CD I
to. — _-_ "' --
O
I I I I I I I I I I I I I I I I I I I l
none 1 J Q5 Q15 Q30 5 1o 25 Q5 Q15 Q30 5 1o 25 Q5 Q15 .03 Q5 Q15 .03
cpm max mean rpkm.max rpkm.mean

Fig. 5. Sensitivity (over simulated 300 datasets) to detect DE genes for a variety of ﬁlter types and cutoffs, with simulation parameters based on the Strub
data. None, no ﬁlter; CPM, genes with a CPM less than one in more than half the samples are ﬁltered; Max, maximum-based ﬁlter, using the threshold
based on the J accard index (J), quantiles (5, 15 and 30%), or values (5, 10, 25); Mean, mean-based ﬁlter, using the threshold based on quantiles (5, 15 and
30%), or values (5, 10, 25); RPKM.max, maximum RPKM ﬁlter, using the threshold based on quantiles (5 and 15%) or the value 0.3; RPKM.mean,
maximum RPKM ﬁlter, using the threshold based on quantiles (5 and 15%) or the value 0.3

 

2151

112 ﬁlm'spaumofpinXO'sor1chOJquIw/2d11q IIIOJJ papeolumoq

910K ‘09 lsnﬁnV uo 22

A.Rau et al.

 

ﬁltering genes with a total or mean normalized read count less
than a speciﬁed threshold. However, despite its impact on the
downstream analyses, no clear recommendations have yet been
provided concerning the choice of ﬁltering technique.

Among the ﬁlter types considered here, we have found that
ﬁlters using the maximum normalized count appear to be best
able to correctly ﬁlter genes with low levels of expression and
little evidence of differential expression. In addition, we have
proposed a method to calculate a data-driven and non-pre-
ﬁxed ﬁltering threshold value for normalized counts from repli-
cated RNA-seq data, based on the global Jaccard similarity
index. In particular, our proposed ﬁltering technique was
found to remove from the analysis a large number of genes
with little or no chance of showing evidence of differential
expression, and therefore to increase detection power at moder-
ate-to-high levels of expression through a moderation of the
correction for multiple testing. As such, we recommend that
genes with a normalized count value less than this data-driven
threshold in all samples be ﬁltered from subsequent differential
analyses. We emphasize that the data-driven threshold value
may vary greatly among RNA-seq experiments owing to differ-
ences in sequencing depth and intra-condition variability (see
Supplementary Fig. S31 for the data-based thresholds calculated
on three additional RNA-seq datasets); as such, the threshold
value must be recalculated for each dataset of interest.

The impact of the proposed ﬁltering method has been inves-
tigated here in the context of differential analyses. We anticipate
that it will also be useful in a variety of other applications, e. g.
detecting genes that are speciﬁcally expressed in one condition or
ubiquitously expressed across several conditions, which is often a
crucial biological question. In addition, we anticipate that such
ﬁltering will be useful, for example, in co-expression or network
reconstruction analyses to remove genes with low constant levels
of expression. Finally, we note that although this ﬁlter was pre-
sented here for the analysis of RNA-seq data, it can readily be
applied to other types of replicated HTS data, such as CHIP-seq
data.

ACKNOWLEDGEMENTS

The authors thank the three anyonymous reviewers for their
valuable comments and suggestions that helped to considerably
improve the quality of the manuscript.

Funding: This work was supported by the French National
Research Agency (Agence nationale de la recherche) [ANR-09-
GENM—006, Biocart project].

Conflict of Interest: none declared.

REFERENCES

Anders,S. and Huber,W. (2010) Differential expression analysis for sequence count
data. Genome Biol, 11, 1—28.

Auer,P.L. and Doerge,R.W. (2011) A two-stage Poisson model for testing RNA-seq
data. Stat. Appl. Genet. Mol. Biol, 10, 1—26.

Benj amini,Y. and Hochberg,Y. (199 5) Controlling the false discovery rate: a practical
and powerful approach to multiple testing. J. R. Stat. Soc. Ser. B, 57, 289—300.

Birney,E. et al. (2004) An overview of ensembl. Genome Res., 14, 925—928.

Bottomly,D. et al. (2011) Evaluating gene expression in C57BL/GJ and DBA/2J
mouse striatum using RNA-seq and microarrays. PLoS One, 6, e17820.

Bourgon,R. et al. (2010) Independent filtering increases detection power for high-
throughput experiments. PNAS, 107, 9546—9551.

Cénovas,A. et al. (2010) SNP discovery in the bovine milk transcriptome using
RNA-seq technology. Mamm. Genome, 21, 592—598.

Cleveland,W.S. (1979) Robust locally weighted regression and smoothing scatter-
plots. J. Am. Stat. Assoc., 74, 829—836.

Dillies,M.A. et al. (2012) A comprehensive evaluation of normalization methods for
Illumina high-throughput RNA sequencing data analysis. Brief. Bioinformatics,
[Epub ahead of print, September 17, 2012].

Frazee,A.C. et al. (2011) ReCount: a multi-experiment resource of analysis-ready
RNA-seq gene count datasets. BM C Bioinformatics, 12, 449.

Gentleman,R.C. et al. (2004) Bioconductor: open software development for comp-
tuational biology and bioinforrnatics. Genome Biol, 5, 2004.

Hansen,K.D. et al. (2012) Removing technical variability in RNA-seq data using
conditional quantile normalization. Biostatistics, 13, 204—216.

J accard,P. (1901) Etude comparative de la distribution ﬂorale dans une portion des
Alpes et des Jura. Bull. Soc. Vaudoise Sci. Nat., 37, 547—549.

Kasprzyk,D. et al. (2004) EnsMart: a generic system for fast and ﬂexible access to
biological data. Genome Res., 14, 160—169.

Labaj,P.P. et al. (2011) RNA-seq precision in quantitative expression proﬁling.
Bioinformatics, 27, i383—i381.

Mortazavi,A. et al. (2008) Mapping and quantifying mammalian transcriptomes by
RNA-Seq. Nat. Methods, 5, 621—628.

Oshlack,A. et al. (2010) From RNA-seq reads to differential expression results.
Genome Biol, 11, 220.

Oshlack,A. and Wakeﬁeld,M.J. (2009) Transcript length bias in RNA-seq data
confounds systems biology. Biol. Direct, 4, 14.

R Development Core Team. (2009) R: a Language and Environment for Statistical
Computing. R Foundation for Statistical Computing, Vienna, Austria. http://
www.R-project.org (16 July 2013, date last accessed).

Ramskéld,D. et al. (2009) An abundance of ubiquitously expressed genes revealed
by tissue transcriptome sequence data. PLoS Comput. Biol, 5, e1000598.

Risso,D. et al. (2011) GC-content normalization for RNA-seq data. BM C
Bioinformatics, 12, 480.

Robinson,M.D. et al. (2010) edgeR: a bioconductor package for differential
expression analysis of digital gene expression data. Bioinformatics, 26, 139—140.

Robinson,M.D. and Oshlack,A. (2010) A scaling normalization method for differ-
ential expression analysis of RNA-seq data. Genome Biol, 11, R25.

Sam,L.T. et al. (2011) A comparison of single molecule and ampliﬁcation based
sequencing of cancer transcriptomes. PLoS One, 6, e17305.

Strub,T. et al. (2011) Essential role of microphthalrnia transcription factor for DNA
eplication, mitosis and genomic stability in melanoma. Oncogene, 30,
2319—2332.

Sultan,M. et al. (2008) A global View of gene activity and alternative splicing by
deep sequencing of the human transcriptome. Science, 15, 956—960.

Wang,L. et al. (2010) DEGseq: an R package for idenetifying differentially
expressed genes from RNA-seq data. Bioinformatics, 26, 136—138.

Wickham,H. (2009) ggplot2: Elegant Graphics for Data Analysis. Springer, New
York.

 

2152

112 [3.1081120an[plOJXO'SODBIIIlOJIIIOIQ/[Zdllq IIIOJJ papeolumoq

910K ‘09 lsnﬁnV uo 22

