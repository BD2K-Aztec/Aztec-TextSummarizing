Vol. 26 ISMB 2010, pages i217—i227
doi: 10. 1093/bioinformatics/btq 186

 

TEAM: efficient two-locus epistasis tests in human genome-wide

association study

Xiang Zhanglﬁk, Shunping Huangl, Fei Zou2 and Wei Wang1

1Department of Computer Science and 2Department of Biostatistics, University of North Carolina at Chapel Hill

 

ABSTRACT

As a promising tool for identifying genetic markers underlying
phenotypic differences, genome-wide association study (GWAS) has
been extensively investigated in recent years. In GWAS, detecting
epistasis (or gene—gene interaction) is preferable over single locus
study since many diseases are known to be complex traits. A brute
force search is infeasible for epistasis detection in the genome-
wide scale because of the intensive computational burden. Existing
epistasis detection algorithms are designed for dataset consisting
of homozygous markers and small sample size. In human study,
however, the genotype may be heterozygous, and number of
individuals can be up to thousands. Thus, existing methods are not
readily applicable to human datasets. In this article, we propose an
efficient algorithm, TEAM, which significantly speeds up epistasis
detection for human GWAS. Our algorithm is exhaustive, i.e. it does
not ignore any epistatic interaction. Utilizing the minimum spanning
tree structure, the algorithm incrementally updates the contingency
tables for epistatic tests without scanning all individuals. Our
algorithm has broader applicability and is more efficient than existing
methods for large sample study. It supports any statistical test that is
based on contingency tables, and enables both family-wise error rate
and false discovery rate controlling. Extensive experiments show that
our algorithm only needs to examine a small portion of the individuals
to update the contingency tables, and it achieves at least an order
of magnitude speed up over the brute force approach.

Contact: xiang@cs.unc.edu

1 INTRODUCTION

Genetic association analysis examines the statistical correlation
between an organism’s genotype with its phenotype. With the
development of high—throughput genotyping technologies, genetic
variation of human and other model organisms has been measured
at genome—wide scale. As the most abundant source of genetic
variation, the number of single nucleotide polymorphism (SNPs)
in public databases (dbGaP, JAX) is up to millions. Genome—wide
association study (GWAS) has been shown to be a promising tool to
locate the genetic factors that cause phenotypic differences (Saxena
et al., 2007; Scuteri et al., 2007; WTCCC, 2007; Weedon et al.,
2007). Epistasis, or gene—gene interaction detection, has received
increasing attention in complex trait analysis. Different from single—
locus approach, the goal of two—locus epistasis detection is to
identify interacting SNP pairs that have strong association with the
phenotype. Please refer to Balding (2006), Hirschhorn and Daly
(2005), Hoh and Ott (2003) and Musani et al. (2007) for reviews of
current progress and challenges in epistasis detection in GWAS.

 

*To whom correspondence should be addressed.

There are two grand challenges in epistasis detection. The ﬁrst is
to develop statistical tests that can effectively capture the interaction
between SNPs. Various tests have been proposed for two—locus
association study, such as the chi—square test, likelihood ratio test
and entropy—based test (Balding, 2006). Another crucial challenge
in two—locus association study is the intensive computational burden
imposed by the enormous search space. Suppose that there are
N SNPs for M individuals. The overall search space of pairwise
interactions is MN (N — 1) / 2. The large number of tests also causes
the multiple testing problem (Miller, 1981). Controlling the family—
wise error rate (FWER) and false discovery rate (FDR) are standard
ways to control the error rate (Dudoit and Laan, 2008; Westfall
and Young, 1993). In the FWER and FDR controlling, permutation
test is preferred over simple Bonferroni correction since many
SNPs are correlated (Churchill and Doerge, 1994). The correlation
structure among genotype proﬁles is preserved across permutations
and is incorporated into permutation P—value estimation. The idea of
permutation test is to randomly shufﬂe the phenotype values among
the individuals and recalculate the test statistics. The distribution
of these test values are used to estimate the null distribution.
Permutation test dramatically increases the search space. With
K permutations, the entire search space of two—locus association
mapping is KMN (N — 1) / 2. Consider a moderate GWAS setting, in
which M: 1000, N: 100000 and K = 1000. The size of the search
space is about 5 X 1015. Apparently, a brute force enumeration of
the search space is infeasible and thus efﬁcient algorithms are in
demand.

Although the computational challenge of epistasis detection
has been well recognized, the algorithmic development is still
very limited. For a small number of SNPs, e. g. from tens to a
few hundreds, exhaustive algorithms that explicitly enumerate all
possible SNP combinations have been developed (Nelson et al.,
2001; Ritchie et al., 2001). These methods are not scalable for
genome—wide computing. Genetic algorithm (Carlborg et al., 2000)
has been proposed. This approach is heuristic, which does not
guarantee to ﬁnd the optimal solution. To avoid explicitly exploring
the entire search space, a common heuristic used in epistasis
detection is a two—step approach (Evans et al., 2006; Hoh et al., 2000;
Yang et al., 2009). First, a subset of SNPs are selected according to
certain criteria. Then the selected SNPs are used for subsequent
epistatic analysis. However, the SNP screening process suffers from
the same problem as the single—locus approach. SNPs with strong
epistasis but low marginal effects are likely to be ﬁltered out (Zhang
et al., 2009a).

Recently, the approach based on search space pruning has
been shown to be able to dramatically speed up the process of
epistasis detection without compromising the optimality of the
results. FastANOVA (Zhang et al., 2008) and FastChi (Zhang et al.,
2009b) are speciﬁcally designed for ANOVA test and chi—square test,

 

© The Author(s) 2010. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/2.5), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /§.IO'SIBUJHOprOJXO'SOTlBIHJOJUTOTCI/ﬁdnq 11101; prBOIUAAOG

9IOZ ‘Ig lsnﬁnv uo ::

X.Zhang et aI.

 

Table 1. An example dataset consisting of six SNPs {X1,...,X6}, the original phenotype Y0 and ﬁve phenotype permutations {Y1, ..., Y5} for 24 individuals

 

 

 

{51, ...,SZ4}
51 52 S3 S4 55 S6 S7 S8 S9 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524

X1 0 0 0 l 2 0 2 0 2 0 0 2 0 0 0 2 0 2 l 0 0 2 2 0
X2 2 2 O 2 O 2 O 2 2 2 2 O l O O 2 O 2 l O 2 2 2 2
X3 2 O O 2 O 2 O l 2 l 2 2 l O 2 2 O 2 l 2 2 2 2 2
X4 0 2 2 O 0 0 2 l 0 2 2 0 0 0 0 0 0 0 l 0 l 2 0 0
X5 0 2 2 O O O l l 2 l 2 O O O O O O 2 l O 2 2 O 2
X6 0 2 2 O O O 2 l 0 l 2 0 0 0 0 2 0 2 l 0 2 2 0 0
Yo I l l l l l l l l l l l 0 0 0 0 0 0 0 0 0 0 0 0
Y1 O l O O l l l O O O l l l l I 0 I 0 0 I 0 I 0 0
Y2 O O l O l l l l l l O O l 0 0 I I I 0 0 0 I 0 0
Y3 l O l l l l O l l l O O 0 l 0 l 0 0 l 0 0 0 l 0
Y4 O l l l l l O O O l O O l O I 0 0 0 I I 0 I I 0
Y5 l O l l O O O O O l l l l O l l O O O O O l l l

 

respectively. The COE algorithm (Zhang et al., 2009a) is a more
general approach that is applicable to all convex tests. Utilizing an
upper bound derived for the test being used, these algorithms only
need to examine a small number of promising SNP pairs and prune
the SNP pairs that are proven to have no strong association with
the phenotype. Unlike heuristic approaches, these algorithms are
guaranteed to ﬁnd the optimal solution. Although these methods
provide promising alternatives for GWAS, there are two major
drawbacks that limit their applicability. First, they are designed for
relatively small sample size and only consider homozygous markers
(i.e. each SNP can be represented as a {0,1} binary variable). In
human study, however, the sample size is usually large and most
SNPs contain heterozygous genotypes and are coded using {0, 1,2}.
These make existing methods intractable. Second, although the
FWER and the FDR are both widely used for error controlling,
existing methods are designed only to control the FWER. From a
computational point of view, the difference in the FWER and the
FDR controlling is that, to estimate FWER, for each permutation,
only the maximum two—locus test value is needed. To estimate the
FDR, on the other hand, for each permutation, all two—locus test
values must be computed. Further details of the FWER and the
FDR controlling are described in Section 2.

In this article, we propose an exhaustive algorithm, TEAM
(Tree—based Epistasis Association Mapping), for efﬁcient epistasis
detection in human GWAS. TEAM has several advantages over
previous methods.

0 It supports to both homozygous and heterozygous data.

0 By exhaustively computing all two—locus test values in
permutation test, it enables both FWER and FDR controlling.

0 It is applicable to all statistics based on the contingency table.
Previous methods are either designed for speciﬁc tests or
require the test statistics to satisfy certain property.

0 Experimental results demonstrate that TEAM is more efﬁcient
than existing methods for large sample study.

TEAM incorporates permutation test for proper error controlling.
The key idea is to incrementally update the contingency tables
of two—locus tests. We show that only four of the 18 observed

frequencies in the contingency table need to be updated to compute
the test value. In the algorithm, we build a minimum spanning
tree (Cormen et al., 2001) on the SNPs. The nodes of the tree are
SNPs. Each edge represents the genotype difference between the
two connected SNPs. This tree structure can be utilized to speed
up updating process for the contingency tables. A majority of the
individuals are pruned and only a small portion are scanned to update
the contingency tables. This is advantageous in human study, which
usually involves thousands of individuals. Extensive experimental
results demonstrate the efﬁciency of the TEAM algorithm.

2 THE PROBLEM OF TWO-LOCUS EPISTASIS
DETECTION IN HUMAN GWAS

Suppose that the genotype dataset consists of N SNPs {X1, ...,XN}
for M individuals {51, ...,SM}. We adopt the convention of
using 0 and 2 to represent the homozygous majority and
homozygous minority genotypes, respectively, and 1 to represent
the heterozygous case. Let Y0 E {0, 1} be the phenotype of interest
(0 for controls and 1 for cases). Let Y’ ={Y1,..., YK} be the set of
K permutations of Y0. In each permutation Y k, the phenotype labels
are randomly reassigned to individuals with no replacement.

Table 1 shows an example dataset of SNPs and phenotype
permutations. The genotype dataset consists of six SNPs {X 1 , . . . ,X6}
for 24 individuals {Sl,...,524}. Individuals {Sl,...,512} are cases
and {S 1 3 , . . . , 524} are controls. The phenotype is permuted ﬁve times,
i.e. Y’={Y1,...,Y5}.

Let .7 denote the statistical test to be used. Speciﬁcally, we
represent the test value of SNP X,- and phenotype Yk (Ofka)
as .7 (Xi, Y k), and represent the test value of SNP pair (Kl-Xj) and Y k
as 9(Xl-Xj, Y k). A contingency table that records the observed values
of certain events, is the basis of many statistical tests. Tables 2—4
show contingency tables for the single—locus tests .7(X,-,Yk) and
9(Xj, Yk), genotype relationship between SNPs X,- and  and
two—locus test 9(Xl-Xj, Yk), respectively.

Due to the large number of hypotheses being tested, multiple
testing problem has received considerable attention in GWAS.
Controlling the FWER and FDR are two widely used approaches
to control the error rate. The FWER is the probability of having

 

i218

112 /810'smanoproJIxosor1au110jurorq//zd11q 11101; prBOIUAAOG

9IOZ ‘Ig lsnﬁnv uo ::

TEAM

 

Table 2. Contingency tables for single—locus tests 9(Xi, Yk) and 9(Xj, Yk)

 

Contingency table for 9(Xi, Yk)

Contingency table for 9(Xj, Yk)

 

 

 

 

 

 

 

 

 

 

 

Xi=0 Xi=l Xi=2 Total Xj=0 X121 Xj=2 Total
Y k = 0 Event A Event B Event E Y k = 0 Event G Event H Event I
Y k = 1 Event C Event D Event F Y k = 1 Event J Event L Event 0
Total Total M
Table 3. Contingency table for genotype relation between two SNPs X,- and X]-
Xi=0 Xi=l Xi=2 Total
X]- = 0 Event S Event T Event R
X]- : 1 Event P Event Q Event U
X]- = 2 Event V Event W Event Z
Total M
Table 4. Contingency table for two—locus test 9(Xl-Xj, Yk)
X, :0 X, :1 Xi=2 Total
ijo Xj=1 Xj=2 ijo Xj=1 Xj=2 ijo Xj=1 Xj=2
Y k = 0 Event an Event a2 Event a3 Event 191 Event 192 Event 193 Event e1 Event e2 Event e3
Y k = 1 Event c1 Event 02 Event C3 Event d1 Event d2 Event d3 Event f1 Event f2 Event f3

 

Total

 

at least one false positive. The FDR is the expected proportion of
false positives among rejected hypotheses. Permutation test is the
standard way to estimate the null distribution in both approaches.
Next, we brieﬂy describe the typical procedures of the FWER and
FDR control. For statistical background of these approaches, refer to
Dudoit and Laan (2008) and Westfall and Young (1993) for details.

The F WER controlling procedure: for each permutation Yk E
Y’, let yyk represent the maximum test value among all SNP
pairs, i.e. yyk =max{.7(X,-Xj, Yk)|1 5 i <j 5N}. The distribution of
{yyk |Yk E Y’ } is used as the null distribution. Given an error rate
threshold 0!, the critical value .70) is the OtK—th largest value in
{yyk |Yk E Y’ }. A SNP pair (Kl-Xj) is considered signiﬁcant if its test
value with the original phenotype Y0 exceeds the critical value, i.e.
2X99, Y 0) 2 ya.

The FDR controlling procedure: let PV represent the
set of the pooled test values of all permutation tests,
i.e. PV:{9(X,-Xj,Yk)|1§i<j§N,1§k§K}. The P—value of
test 9(Xl-Xj, Y0) can be calculated as p(.7(X,-Xj, Y0))= Ht:
9(Xin, Y0)|t€PV}|/|PV|, i.e. the proportion of the values in PV
that are no less than y(Xij, Y0). Let pa) pr)... §p(N(N_1)/2)
be the ordered P—values of the original tests. Let v=max{u 2pm) 5
WOW}. The classic Benjamini—Hochberg method rejects all
hypotheses for which the corresponding P—values are in the set

{19(1),}?(2), - - - ,p(v)}-

In the FWER controlling, we only need the maximum test value
of each permutation. To control the FDR, all test values need to be
computed to estimate the P—value of the original tests. The existing
algorithms, such as FastChi (Zhang et al., 2009b) and COE (Zhang
et al., 2009a), prune the SNP pairs having weak associations. Thus
they cannot be used to control the FDR. Our algorithm, TEAM,
exhaustively computes the test values of all SNP pairs for every
permutation. It can be used for both the FWER and FDR controlling.
In this article, we mainly focus on the problem of permutation test,
since it is the most computationally intensive procedure. Testing
SNP pairs using original phenotype can be treated as a special case
of permutation test.

3 FREE VARIABLES IN THE CONTINGENCY
TABLE OF TWO-LOCUS TEST

Let Eevent and Oevent denote the expected frequency and observed
frequency of an event in Tables 2—4. Note that each event
represents a subset of individuals. For example, event D is a subset
of individuals satisfying (XizlAYkzl), and 0D represents its
observed frequency, i.e. 0D=|D|. Using the dataset in Table 1,
considerX3 and Y4 (i.e. i=3 and k=4), we haveD={Slo,Sl3,Slg},
and 0D 2 3.

Many statistics, such as chi—square test and likelihood ratio
test are deﬁned as functions of the observed frequencies in

 

i219

112 /810'Sreurnofproarxosor1eu1101urorq//zd11q 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

X.Zhang et aI.

 

contingency tables. For any test .7 based on the contingency table,
to calculate the two—locus test value .7 (Kl-X], Y k), one needs all 18
observed frequencies for the events in the two—locus contingency
table shown in Table 4. The following theorem shows that we only
need four of the 18 values to calculate the two—locus test value given
the three contingency tables in Tables 2 and 3.

THEOREM 3.1. For SNPs Xi,  and permutation Yk, given the
observed frequencies in Tables 2 and 3, speciﬁcally, the values of
{0D,0F,0J,0L,00,05,0P,OV,0T,0Q,0W,0R,0U,OZ}, all
of the observed frequencies in Table 4 can be determined if the
values of {0d2 , 0613 , 0f2, 0f3} are known.

PROOF. See Appendix.

Suppose that we have all the single—locus contingency tables,
i.e. Table 2. Given a SNP pair (Xi,XJ-), Table 3 is ﬁxed. Thus,
from Theorem 3.1, for permutation Y k, once we have the values
of {0612,06,3 , OfZ, 0f3}, 9(Xl-Xj, Yk) can be calculated accordingly.
In the following, we show that these values can be computed
incrementally utilizing a minimum spanning tree built on SNPs. We
focus on the incremental process for 0612. The same process can be
applied to update 0613, 0f2 and 0f3. We ﬁrst discuss how to update
0612 for a speciﬁc permutation. Then we show that the procedure
can also handle all the permutations in a batch mode.

4 BUILDING THE MINIMUM SPANNING TREE ON
THE SNPS

To build a minimum spanning tree (Cormen et al., 2001) on the
SNPs, let the SNPs {X1,X2, ...,XN} be the nodes and SNP pairs
(Kl-Xj) (i 75 j) be the (undirected) edges. For each edge (Kl-Xj),
we denote its weight (the number of individuals having different
genotypes in the two SNPs) as w(X,-Xj). A spanning tree T is a tree
that spans (connects) all SNPs. Let V(T) be its node set and E (T)
be its edge set. A minimum spanning tree is a spanning tree whose
weight W7~=Zw(X,-Xj), where (Kl-Xj)€E(7'), is no greater than

x1 X2

X4

Fig. 1. The minimum spanning tree built on the SNPs in the example dataset
shown in Table 1.

any other spanning tree. Figure 1 shows the minimum spanning tree
built using the example dataset in Table 1. The number on each
edge represents its weight. For example, in X3 and X2, there are six
individuals, {52,58,510,512,515,520}, having different genotypes.

For any individual, the genotype difference from X,- to  can
be any one of the six combinations, i.e. 0—> 1 (indicating that the
genotype in X,- is 0, and the genotype ian is 1), 1 —> 0, 0 —> 2, 2 —> 0,
1—>2 and 2—> 1. Using the example dataset in Table 1, Table 5
shows the genotype differences between the connected two SNPs
in the minimum spanning tree in Figure 1. We use (Kl-Xj){u_)v}
(u, v E {0, 1,2}) to represent the set of individuals whose genotype in
X,- is u and genotype ian is v. For example, (X3X2){1_,2} = {Sg , 510}
and (X3X2){1—>2}U{0—>2} = {52,58,510}-

5 INCREMENTALLY UPDATING OBSERVED
FREQUENCY oo,2

In this section, we discuss how to update 0612 by utilizing the
minimum spanning tree. For clarity, from now on, we use
d2(X,-Xj,Yk) to denote the speciﬁc event d2 for the SNP pair
(Kl-Xj) and permutation Yk, i.e. the subsets of individuals
satisfying (Xi=1/\Xj=1/\Yk=1). We use 0d2(X,-Xj,Yk) to
represent its observed frequency, i.e. 0612 (Kl-X], Y k) = |d2(X,-Xj, Yk)|.
This notation also applies to other events in the contingency
tables shown in Tables 2—4. For example, D(X,-, Y k) represents the
subset of individuals satisfying (X,- = 1 /\Yk =1), and 0D(X,-, Yk)=
|D(Xi, Y k)|-

Next, we show that for any SNP pair (Xin) and an edge
)€E(T), given 0d2(X,-Xj,Yk), how to update the value for
0d2(XiXJ{ , Yk). From the contingency tables in Table 2—4, it is easy
to see that

0d2(XinaYk)=ID(Xi,Yk)ﬂQ(Xi,)9)I,
and
0d2(XiX{, Yk)= |D(Xi, Yk)OQ(Xi,X;)|-

The following theorem shows that, given 0612 (Kl-X], Y k) and
D(X,-, Y k), using the genotype difference associated with edge ),

we can get the value of 0612 (Kl-X; , Y k).

THEOREM 5.1. For any SNP pair (XI-Xj) and an edge (XjXJUE
 we have 0612 (XiX;, Yk) = 0012 (Xin, Yk)-I— |D(Xl', Yk)ﬂ
(XjX;){0—>1}U{2—>1}I— ID(Xi,Yk)ﬂ(Xj)g){1—>0}U{l—>2}I-

PROOF. See Appendix.

EXAMPLE 5.2. Using the example dataset in Table I, let i =3,
j=2, j’=5, and k=4, i.e. we consider SNP pair (X3X2),

Table 5. Genotype difference between the connected SNPs in the minimum spanning tree shown in Figure 1

 

 

0—>1 1—>0 0—>2 2—>0 1—>2 2—>1
(X3X2) 0 0 {52} {512, 515 . 520} {58,510} 0
(X2X5) {S7} {513} {S3} {515456516523} 0 {58,510}
(X5X6) 0 0 {516} {59,524} {57} 0
(X6X1) {54} {58,510} {55.59.512.523} {52.53.511.521} 0 0
(X6X4) 0 0 0 {516,518} {510} {521}

 

 

i220

112 /B.IO'SIBU.IT10IP.IOJXO'SOIlBIIIJOJUIoIQ/ﬁdnq 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

TEAM

 

Table 6. Entries of DK(X3) with empty entries omitted for all permutations

Table 7. Updating 0,12 (X3X5) from 0,12 (X3X2) for all permutations in a batch

 

 

 

 

in a batch mode mode

Individual id. Phenotype permutations Y1 Y2 Y3 Y4 Y5

Sg {Y2, Y3} 0312 (X3X5) after initializing I I I 2 I

510 {Y2, Y3,Y4,Y5} 0312 (X3X5) after updating for S7 1 I I 2 I

513 {Y1,Y2,Y4,Y5} 0d2(X3X5) after updating for $3 I 2 2 2 I

519 {Y3, Y4} 0512 (X3X5) after updating for 510 I 3 3 3 2
0,12 (X3X5) after updating for S13 0 2 3 2 1

 

permutation Y4 and the edge (X2X5) in Figure 1. Suppose that
we already know that 0d2(X3X2,Y4)=2, and event D(X3,Y4)=
{510,513,519}. From Table 5, we have (X2X5){0_)1}U{2_)1}=
{57,58,510}, and (X2X5){1_)0}U{1_)2}={Sl3}. Thus according t0
Theorem 5.], we have 0d2(X3X5,Y4)=0d2(X3X2,Y4)—l—|{S10}|—
|{S13}| =2. Note that by this way, we get the value of0d2(X3X5, Y4)
from 0612 (X3X2, Y4)without scanning all individuals.

So far, we have discussed the procedure to update the value
of 00:2 (Kl-X; , Y k) from 06,12 (Kl-Xj, Y k) for a speciﬁc phenotype
permutation Y k. This procedure can be easily extended to handle
all the permutations. From Theorem 5.1, for any permutation Y k, to
update the value of 0612 (Kl-X; , Yk) from 0612 (Kl-Xj, Yk), we need the
value of D(X,-, Y k) and the genotype difference associated with edge
(XjX ). Note that the genotype difference is ﬁxed once the minimum
spanning tree is built. Next, we discuss how to compute D(X,-, Y k)
for all permutations {Y 1 , Y2, ..., Y K} in a batch mode in detail.

Let DK (Xi) be a list of M entries, with each entry corresponding
to an individual. For each individual Sm, we record in DK(X,-)[m]
the set of phenotypes satisfying (Xi=1/\ Y k :1). For example,
consider the dataset in Table 1, we have that DK(X3)[8] 2 {Y2, Y3}.
Table 4 shows the entries of DK(X3). Only non—empty entries, i.e.
DK (Xi)[m] 7S 2, are shown in the table. It is easy to see that, for any
X,- and Yk, we can get D(X,-, Yk) from DK(Xi) as follows: D(X,-, Yk) is
the set of individuals whose corresponding entries in D K (Xi) contain
Yk as an element, i.e.

D(Xi,Yk)={Sm|Yk€DK(Xi)[mI}- (1)
For example, using the example dataset in Table 1, from Table 6,
we know that D(X3, Y4)={510,Sl3,519}.

For SNP pair (XI-Xj), let 0612 (XI-X1): [0d2 (XI-Xj, Y1),
0612 (Kl-Xj, Y2), ...,0d2 (Kl-Xj, YK)]. From Theorem 5.1 and
Equation (1), for any SNP pair (Kl-Xj) and an edge ) €E(T),
we can get 0612 (Kl-X13 from 0612 (Kl-Xj) using DK(X,-) and the
genotype difference information associated with edge ). First,
initialize 0d2(X,-X)= 0612 (XI-Xj). Next, for every m (1 5m 5M), if
Yk EDK(X,-)[m], we update 0612 (Kl-X16 as follows:

increase 0d2(XJ-XJ{, Yk) if Sm E(XjX;){0_)1}U{2_)1};
decrease 0612  Yk) if Sm E (XjX;){1_)0}U{1_)2} .

EXAMPLE 5.3. Following Example 5.2, we consider the two
SNP pairs (X3X2) and (X3X5), with (X2X5) being an edge of
the tree in Figure 1. Assume that DK(X3) is as shown in
Table 6, and 0d2(X3X2)=[1,1,1,2,1]. From Table 5, the genotype
diﬁ‘erence 0" edge (X2X5) is (X2X5){0—>1}U{2—>1}={S7,58,510},
and (X2X5){1_)0}U{1_)2} ={Sl3}. F0?” individual Sm€{S7,Sg,Slo}
(Sm€{S13}), we need to increase (decrease) the corresponding

 

values in 0612 (X3X2) according to DK(X3). Table 7 shows the
updating process for 0612 (X3X5). Initially, 0612 (X3X5) = 0612 (X3X2).
For individual S7, since its corresponding entry in DK(X 3),
DK(X3)[7] 2%, 0612 (X3X5) remains unchanged. For individual S8,
DK(X3)[8] 2 {Y2, Y3}, we increase the values of 0612 (X3X5, Y2) and
0612 (X3X5, Y3) by 1. Similarly, we increase and decrease the values
in 0612 (X3X5) according to DK(X 3) for S10 and S13. For individual
S19, we do not have any update because S19¢{S7,S8,S10} and
S19 ¢ {S13}. Theﬁnal result is 0d2(X3X5)=[0,2,3,2,1].

Note that to get the value of 0612 (Kl-Xj), using a brute force
approach, we need to scan a (2—l—K) ><M matrix consisting of the
genotype of (Kl-Xj) and permutations {Y 1 , Y2, ..., Y K} for the M
individuals. In the previous example, to compute the value of
0612 (X3X5), the cost of the brute force approach is (3 —l— 5) X 24 = 192.
Using our approach, the total number of updates is |DK(X3)[8]|+
|DK(X3)[10]|+|DK(X3)[13]| = 10, which is signiﬁcantly less than
the cost of the brute force approach. More formally, given DK (Xi),
the time complexity of updating 0d2(X,-XJ{) from 0d2(X,-Xj) is
0(w(XJ-XJ{)K).

The procedure of updating 0612 (Kl-X13 from 0612 (Kl-Xj) can also be
applied to update the remaining free variables 0613 (Kl-Xj), 0f2 (Kl-Xj)
and 0f3(XiXJ-). Note that, to update 0f2(X,-Xj), 0f3 (Kl-X1), we will
need F K (Xi), which can be deﬁned in a similar way to that of D K (Xi):
for each individual Sm, we record in F K (Xi)[m] the set of phenotypes
satisfying (Xi = 2 /\ Yk =1).

6 THE TEAM ALGORITHM

TEAM examines SNP pairs through a double loop, where the outer
loop visits a leaf node at a time, and the inner loop traverse the
rest of the tree, starting from the parent node of the leaf. Let
0222,44 (XI-)9) = [0.1, (XI-Xi), 0d3 (XI-Xi). 0f, (XI-Xi). 0f, (XI-X)». Let
L(T)€ V(T) be the set of leaf nodes of the minimum spanning
tree T. For any leaf node X,- €L(T), let AP(Xi) = {(Xl-Xj)|i 5&ng E
V(T)}. Let Xa be the parent node of X}. Since all SNPs are connected
in T, once we have 06,126,3fo3 (Kl-X61), we can update all 0612 (Kl-Xj) E
AP(Xi) by enumerating the edges in E (T) in a breath—ﬁrst traversal
starting from Xa.

EXAMPLE 6.1. Consider the tree in Figure I. Let X,- =X3 and Xa 2
X2. We have AP(X3)={(X3X2),(X3X5), (X3X6),(X3X1),(X3X4)}-
Starting from X3, a breadth-ﬁrst search will enumerate edges
{(X2X5),(X5X6), (X6X1),(X6X4)}, which can be utilized to update
06126131313 (Xin) for the SNP pairs in AP(X3).

Once the SNP pairs in AP(Xi) have been processed, we delete
X, from L(T), and repeat the same process for another leaf node.

 

i221

112 /§.IO'SIBUJnoIpJOJXO'SOIlBIHJOJquIQ/ﬁdnq 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

X.Zhang et aI.

 

 

Algorithm 1 The TEAM Algorithm
Input: SNPs X’ ={X1,X2, ...,XN}, phenotype permutations
Y’={Y1,Y2,...,YK}
Output: .7 (Kl-Xj, Y k) for all possible two—locus tests

 

compute and store all single—locus contingency tables;

build minimum spanning tree T;

for every Xi €L(T), d0

compute DK(Xi) and FK(X,-);

compute 06,126,13fo3 (Kl-X61);

compute 9(XiXa, Yk) (1 5 k 5K) and output;

EnumS tack .push(0d2 6,13fo3 (XI-X60);

while EnumStack 75 @ d0

06126131313 (Xin) = EnumStack.pop();

for every  =adj(XJ-) d0
update 06112613fo3 (X1299 from 06126113fo3 (Xin);
compute 9(XiXJC Yk) (15k 5K) and output;
EnumStack.push(06,12d3f2f3 (XiX; ));

 

end
end
delete X, from T;

 

end

 

The overall algorithm is summarized in Algorithm 1. Given the SNPs
X’={X1,X2,...,XN}, phenotype permutations Y’={Y1,Y2,...,YK},
we ﬁrst enumerate and store all single—locus contingency tables.
We then build the minimum spanning tree T, with genotype
difference associated with each edge. For leaf node Xi, we compute
DK(Xi), FK(Xi) and 06126113fo3 (XiXa). This information iS then used
to incrementally update 0d2d3f2f3 (XiK;) for all SNP pairs in AP(Xi).
After processing AP(Xi), we delete X,- from T and repeat the
procedure for the remaining leaf nodes.

Time complexity: the time complexity on generating all single—
locus contingency tables and building the minimum spanning tree
is 0(MNK) and 0(MN2), respectively. The time complexity to
compute DK(X,-) and F [{(Xi) for all SNPs is 0(MNK). The total
updating cost for all AP(Xi) is 0(W7~NK). Thus, the overall time
complexity of TEAM is 0(MNK+MN2 +W7~NK). Note that the
complexity of the brute force approach is 0(MN2K). The number
of SNPs N is the dominant factor.

Space complexity: the dataset size is 0(M (N —l—K )). The space
needed to store all single—locus contingency tables is 0(NK). The
size of tree T is 0(W7~). The size of DK(X,-) and FK(X,-) is 0(MK).
Thus, the total space complexity of TEAM is 0(M (N —l—K )—l—
K (N +M ) + W7").

Note that we can do incremental computation using any
exploration order. TEAM utilizes minimum spanning tree to update
the contingency tables. The reason is that the cost of such update
depends on the difference between the SNPs. The more similar
they are, the lower the cost. Since minimum spanning tree has the
minimum weight WT over all spanning trees, using it to guide
the computation leads to optimal efﬁciency. It is not absolutely
necessary to use a minimum spanning tree. As long as the tree is close
to a minimum spanning tree, we should expect good performance.
An implementation issue in building the minimum spanning tree
is that we need 0(N2) space to store all pairwise differences
between the SNPs. In practise, we divide the SNPs into sub groups

of equal size. A minimum spanning tree is built for each group. Then
the sub trees are merged to a larger tree by randomly connecting
leave nodes. The tree built in this way is an approximate minimum
spanning tree. Our focus in this article is not to build an optimal
minimum spanning tree, but to use the tree structure for efﬁcient
updating. Refer to Eisner (1997) and Graham and Hell (1985) for
surveys on minimum spanning tree construction. In the experiments,
we show the performance evaluation using different spanning trees.

7 EXPERIMENTAL RESULTS

In this section, we present extensive experimental results on the
performance of the TEAM algorithm. TEAM is implemented
in C++. We ﬁrst evaluate the efﬁciency of TEAM. Then, we
present the ﬁndings of epistasis detection in simulated human
genome—wide study.

7.1 Efﬁciency evaluation

We use both simulated human and real mouse for the efﬁciency
evaluation experiments. The experiments are performed on a 2.6
GHz PC with 8G memory running Linux system.

7.1.] Human data The human datasets are generated by the
simulator Hapsample (Wright et al., 2007), which is publicly
accessible from the web site http://www.hapsample.org. We evaluate
the performance of TEAM by comparing it with the brute force
approach since there is no previous algorithm readily applicable to
human datasets. Note that the brute force approach is very time
consuming, we use a moderate number of SNPs and permutations
in the experiments so that the brute force approach can ﬁnish
in a reasonable amount of time. Unless otherwise speciﬁed, the
default experimental setting is the following: #individuals =400,
#SNPs = 10 000, #permutations = 100, and the case/control ratio is 1.
These experimental settings are chosen to demonstrate the efﬁciency
gain offered by TEAM over the brute force implementation. TEAM
can handle much larger datasets. The performance of TEAM is
expected to follow the same trends presented in this section.

TEAM contains three major components: building the minimum
spanning tree, updating the contingency tables, and calculating
the actual test values. Note that TEAM can be applied to any
statistics deﬁned on the contingency table. With different statistics,
the only difference in runtime would be caused by the last component
calculating the statistics. In the experiments, we choose chi—square
test as our statistic. Figure 2 shows the running time comparison of
TEAM and the brute force approach using different experimental
settings. The y—axis is in logarithm scale. In these ﬁgures, we also
show the detailed runtime of these three components.

Table 8 shows the percentage of individuals pruned by TEAM
under different experimental settings. Since in theory we can update
the contingency tables in any exploration order, in the table, we also
show the pruning effect of using a random spanning tree and a linear
spanning tree to guide the updating process. The random spanning
tree is generated by starting from a randomly picked SNP and
growing edges that connect the remaining SNPs in a random order.
The linear tree is a single path connecting all SNPs sequentially.
From the table, we can see that TEAM prunes more effectively than
the other two updating methods. In the table, we also show the ratio
of the tree weights and the size of the SNP dataset, i.e. WT/ (M X N),
which is a determining factor of the pruning ratio. Note that varying

 

i222

112 /§.IO'SIBUJnoIpJOJXO'SOIlBIHJOJquIQ/ﬁdnq 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

TEAM

 

 

(a)

 

 

 

 

 

 

I Brute force. 
TEAM Overall —E—
Updating contingency tables ---- 
1000000 Calculating test values -----x....- .
A‘ Building MST "" "°:'.'.':......
 100000  ................ ... ............... ... ..... ..
a) ........ ..
.g  ....................................... .-
E . . . . . I I . . . . . . . . . . - I . . . . . . . . . . u‘:x-_l mix-"m 
a 1000 ....... .- “X”
100
10 .................  ..................  ...................  .................. .4}
1 ' - .
10k 15k 20k 25k 30k
number of SNPs
(c) I I I I Brute force. 
TEAM Overall —E—
Updating contingency tables ---- 
1000000 ' Calculating test values -----)(----- -
A Building MST .... 
§ 100000 - ______ __+ ................ ..+ ............... ..+ ............... .._ .
a) 1 .z. .... .-
 0000
§ 1000
100
10 - A A A
1 .

 

 

 

100 150 200 250 300 350 400 450 500
number of permutations

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

I Brute force. 
1000000 - TEAM Overall —E— -
Updating contingency tables ---- 
_ Calculating test values ---'-)(---'- _
A 100000 Building MST ---- 
§ 10000 + " '
o
 1000 ....................................... ..
a ................... “u .................. a“ u
a n n n
100 -
10 -
1 I
200 250 300 350 400
number of individuals
 I I Brute force. 
TEAM Overall —E—
Updating contingency tables ---- 
1000000 - Calculating test values ---'-x----- -
A Building MST ---- 
6 100000 - '
3 L
0 10000 - '
E
E
a 1000 n n ”
100 -
10 I A A A
1 I
100/300 150/250 200/200 250/150 300/100

case/control ratio

Fig. 2. Comparison between TEAM and the brute force approach on human datasets under various experimental settings: varying the number of SNPs (a),

individuals (b), permutations (c) and varying the case/control ratio ((1).

Table 8. The tree weight and the proportion of the individuals pruned by TEAM on the human datasets

 

 

 

 

 

 

 

Settings TEAM Updating by Random Tree Updating by Linear Tree
Tree weight (%) Pruning ratio (%) Tree weight (%) Pruning ratio (%) Tree weight (%) Pruning ratio (%)
No. of SNPs 10K 17.721 94.104 53.326 88.722 53.158 89.210
20 K 18.692 93.981 52.881 88.895 52.851 89.390
30 K 19.314 93.802 53.011 88.823 52.946 89.380
No. of Individuals 200 16.641 94.376 53.358 88.749 53.179 89.205
300 17.342 94.209 53.343 88.730 53.142 89.213
400 17.721 94.104 53.326 88.722 53.158 89.210
No. of Permutations 100 17.721 94.104 53.326 88.722 53.158 89.210
300 17.721 94.105 53.326 88.724 53.158 89.212
500 17.721 94.104 53.326 88.724 53.158 89.212
Case/control ratio 100/300 17.721 97.049 53.326 94.355 53.158 94.599
200/200 17.721 94.104 53.326 88.722 53.158 89.210
300/100 17.721 97.049 53.326 94.355 53.158 94.599

 

the number of permutations and the case/control ratio does not effect
the tree being built.

Figures 2a depicts the runtime comparison when varying the
number of SNPs. TEAM is more than an order of magnitude faster
than the brute force approach. Among the three components of
TEAM, the procedures on building the minimum spanning tree
and calculating test values only take a small portion of the total
runtime of TEAM. The runtime of TEAM is dominated by the cost
of updating the contingency tables. As will be shown later, TEAM
prunes most of the individuals when updating the contingency tables.

In Figures 2b—d, we can also observe a similar one to two orders of
magnitude speed up of TEAM over the brute force approach when
varying the number of individuals, the number of permutations and
the case/control ratio.

7.1.2 Mouse data The mouse datasets is extracted from a set
of combined SNPs from the 10K GNF (http://www.gnf.org/)
mouse dataset and the 140K Broad/MIT mouse dataset (Wade
and Daly, 2005). This merged dataset has 156 525 SNPs for 71
mouse strains. The missing values in the dataset are imputed

 

i223

112 /§.IO'SIBUJnoIpJOJXO'SOIlBIHJOJquIQ/ﬁdnq 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

X.Zhang et aI.

 

 

A
93
v

I Brute Force. 
COE .. ..  .,,
100000 - TEAM E -

----------- u:
---- I-

10000 - 

runtime (sec)

 

 

 

 

10k 15k 20k 25k 30k
number of SNPS

 

 

 Brute Force 
COE A

10000 - TEAM -
A ....................... -.+ ................. ud
<5 _ ................ ..+ ......... .. +—
a
(E; 1000 A
g IF ﬂ 4.} "—Ek ﬂ

100 A
A"
10

 

 

 

30 35 40 45 50 55 60 65 70
number of individuals

Fig. 3. Comparison between TEAM, COE and the brute force approach on mouse datasets under various experimental settings: (a) varying the number of

SNPs and (b) varying the number of individuals.

Table 9. Identiﬁed signiﬁcant SNP pairs in the simulated human GWAS datasets

 

 

 

 

 

Dataset Signiﬁcant SNP—pair Chromosome and location FDR FWER

1 (rs768529, rs3804940)* (chrlz 51946762, chr3: 7520545) 0.00067 0
(rs768529, rs756084) (chrlz 51946762, chr3: 7536149) 0.00067 0
(rs768529, rs779742) (chrlz 51946762, chr3: 7558058) 0.00067 0
(rs768529, rs1872393) (chrlz 51946762, chr3: 7546236) 0.00067 0.004
(rs768529, rs779744) (chrlz 51946762, chr3: 7555121) 0.00067 0.004
(rs768529, rs6764561) (chrlz 51946762, chr3: 7514592) 0.00067 0.004

2 (rs10495728, rs521882)* (chr2: 22811773, chr8: 16688797) 0.004 0.004

3 (rs1016836, rs2783130)* (chr10: 31935845, chr13: 79068161) 0 0

4 (rs648519, rs1012273)* (chr11: 98972936, chr16: 58525067) 0.002 0.002

 

using NPUTE (Roberts et al., 2007). We compare TEAM and the
recently proposed COE algorithm (Zhang et al., 2009a), which
is speciﬁcally designed for association study in mouse datasets.
The default experimental setting is as follows: #individuals =70,
#SNPs = 10 000, #permutations = 100, and the case/control ratio is 1.
Figure 3 shows the comparison results. In the ﬁgure, we also
plot the runtime of the brute force approach. Figure 3a shows the
runtime of the three approaches when varying the number of SNPs.
It is clear that both TEAM and COE are orders of magnitude faster
than the brute force approach. TEAM is about twice faster than COE.
Figure 3b shows the runtime comparison when varying the number
of individuals. From the ﬁgure, COE is more suitable for datasets
having small number of individual. As the number of individuals
increases, the TEAM algorithm becomes more efﬁcient than COE.
Note that in human study, the number of individuals usually ranges
up to thousands, much larger than that in typical mouse datasets.

7.2 Epistasis detection in simulated human GWAS

In this section, we report the results of epistasis detection using
simulated human GWAS data generated by Hapsample. In total, we
generate four datasets, each of which has 112036 SNPs for 250
cases and 250 controls. In each dataset, a disease causal interacting
SNP pair is embedded. The embedded SNP pairs are: (rs768529,
rs3804940) in dataset 1, (rs10495728, rs521882) in dataset 2,
(rs1016836, rs2783130) in dataset 3 and (rs648519, rs1012273) in
dataset 4. We use standard chi—square test with 500 permutations.
Similar results can be found by using likelihood ratio test.

With an overall FDR threshold of 0.005, Table 9 shows the
identiﬁed signiﬁcant SNP pairs using TEAM. TEAM successfully
identiﬁed the embedded SNP pairs in all simulated datasets. The
embedded SNP pairs are labelled with stars ‘*’. The table shows
the SNP loci on the genome. For example, in dataset 1, we
embed SNP pair rs768529 and rs3804940, which are located on
chromosome 1 at position 51946762bp and chromosome 3 at
7 520 545 bp, respectively. The FWER for each reported SNP pair is
also shown. Note that, for a SNP pair, an FDR (or FWER) value of
0 indicates that permutation tests do not generate any test value
larger than value of the reported SNP pair. In dataset 1, except
for the embedded SNP pair (rs768529, rs3804940), ﬁve other SNP
pairs are also reported. One of the embedded SNP, rs768529, is
involved in all the ﬁve pairs. A closer look at the other SNPs in the
reported SNP pairs shows that they are all adjacent to the embedded
SNP rs3804940. The normalized linkage disequilibrium (Lewontin
and Kojima, 1960) between rs3804940 and the other ﬁve SNPs
are D’ (rs3804940, rs756084): 1, D’ (rs3804940, rs779742): 0.477,
D’ (rs3804940, rs1872393)= 0.442, D’ (rs3804940, rs779744): 0.442
and D’(rs3804940, rs6764561)= 0.454, indicating there is strong
linkage disequilibrium between them.

8 CONCLUSION AND FUTURE WORK

The large number of SNPs genotyped in the genome—wide
scale poses great computational challenges in two—locus epistasis
detection. The permutation test used for proper error rate controlling

 

i224

112 /§.IO'SIBUJnoIpJOJXO'SOIlBIHJOJquIQ/ﬁdnq 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

TEAM

 

makes the problem computationally even more intensive. In this
article, we propose an efﬁcient algorithm, TEAM, for epistasis
detection human GWAS. TEAM has the same strength as the
recently developed epistasis detection methods, i.e. it guarantees
to ﬁnd the optimal solution. Compared with existing methods,
TEAM is more efﬁcient in large sample study, and offers broader
applicability. Existing methods designed for homozygous SNPs
cannot be used for human data where most SNPs are heterozygous.
TEAM, on the other hand, can handle both homozygous and
heterozygous SNPs. Since it exhaustively enumerate all SNP pairs,
TEAM can be used to control the FWER and FDR, both of which
are widely used in controlling error in GWAS; while previous
methods only control the FWER. Existing methods need to exam the
formulation of the statistic. TEAM is focused on efﬁciently updating
contingency tables rather than any speciﬁc statistic. It can, therefore,
be used for any statistical test based on contingency table regardless
of its formulation.

In this artcile, we focus on the disease phenotypes that can be
represented as binary variables. Many association studies involve
phenotypes measured as continuous variables. We will investigate
how to apply the idea of the current algorithm to quantitative
phenotypes in the future study.

Funding: National Science Foundation (awards IIS0448392,
IIS0812464, partially).

Conﬂict of Interest: none declared.

REFERENCES

Balding,D.J. (2006) A tutorial on statistical methods for population association studies.
Nat Rev. Genet, 7, 781—791.

Carlborg,O. et al. (2000) The use of a genetic algorithm for simultaneous mapping of
multiple interacting quantitative trait loci. Genetics, 155, 2003—2010.

Churchill,GA. and D0erge,R.W. ( 1994) Empirical threshold values for quantitative trait
mapping. Genetics, 138, 963—971.

C0rmen,T.H. et al. (2001) Introduction to Algorithms. MIT Press and McGraw-Hill.

Dudoit,S. and Laan,M.J. (2008) Multiple Testing Procedures with Applications to
Genomics. Springer.

Eisner,J. (1997) State-of-the-art algorithms for minimum spanning trees: a tutorial
discussion. Manuscript,University of Pennsylvania.

Evans,D.M. et al. (2006) Two-stage two-locus models in genome-wide association.
PLoS Genet, 2, 6157.

Graham,R.L. and Hell,P. (1985) On the history of the minimum spanning tree problem.
Ann. History Comput, 7, 43—57.

Hirschhorn,J.N. and Daly,M.J. (2005) Genome-wide association studies for common
diseases and complex traits. Nat Rev. Genet, 6, 95—108.

H0h,J. and Ott,J. (2003) Mathematical multi-locus approaches to localizing complex
human trait genes. Nat Rev. Genet, 4, 701—709.

H0h,J. et al. (2000) Selecting snps in two-stage analysis of disease association data: a
model-free approach. Ann. Hum. Genet, 64, 413—417.

Lewontin,R.C. and K0jima,K. (1960) The evolutionary dynamics of complex
polymorphisms. Evolution, 14, 458—472.

Miller,R.G (1981) Simultaneous Statistical Inference. Springer, New York.

Musani,S.K. et al. (2007) Detection of gene x gene interactions in genome-wide
association studies of human population data. Hum. Hered, 63, 67—84.

Nelson,M.R. et al. (2001) A combinatorial partitioning method to identify multilocus
genotypic partitions that predict quantitative trait variation. Genome Res., 11,
458—470.

Ritchie,M.D. et al. (2001) Multifactor-dimensionality reduction reveals high-order
interactions among estrogen-metabolism genes in sporadic breast cancer. Am. J.
Hum. Genet, 69, 138—147.

R0berts,A. et al. (2007) Inferring missing genotypes in large snp panels using fast
nearest-neighbor searches over sliding windows. In Proceeding of ISMB.

Saxena,R. et al. (2007) Genome-wide association analysis identiﬁes loci for type 2
diabetes and triglyceride levels. Science, 316, 1331—1336.

Scuteri,A. et al. (2007) Genome-wide association scan shows genetic variants in the
fto gene are associated with obesity-related traits. PLoS Genet, 3, 1200—1210.
The Wellcome Trust Case Control Consortium (2007) Genome-wide association study
of 14,000 cases of seven common diseases and 3,000 shared controls. Nature, 447,

661—678.

Wade,C.M. and Daly,M.J. (2005) Genetic variation in laboratory mice. Nat Genet,
37, 1175—1180.

Weedon,M. et al. (2007) A common variant of hmga2 is associated with adult and
childhood height in the general population. Nat Genet, 39, 1245—1250.

Westfall,P.H. and Y0ung,S.S. ( 1993) Resampling-based Multiple Testing. Wiley,
New York.

Wright,F.A. et al. (2007) Simulating association studies: a data-based resampling
method for candidate regions or whole genome scans. Bioinformatics, 23,
2581—2588.

Yang,C. et al. (2009) SNPHarvester: a ﬁltering-based approach for detecting epistatic
interactions in genomewide association studies. Bioinformatics, 25, 504—511.
Zhang,X. et al. (2008) FastAN OVA: an efﬁcient algorithm for genome-wide association

study. In Proceeding of KDD.

Zhang,X. et al. (2009a) COE: a general approach for efﬁcient genome-wide two-locus
epistatic test in disease association study. In Proceeding of RECOMB.

Zhang,X. et al. (2009b) FastChi: an efﬁcient algorithm for analyzing gene-gene
interactions. In Proceeding of PSB.

 

i225

112 /B.IO'SIBUJnoIpJOJXO'SOIlBIIIJOJquIQ/ﬁdllq 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

X.Zhang et al.

 

APPENDIX

Proof of Theorem 3.1

PROOF. From the four contingency tables shown in Tables 2—4, it is easy to get the following linear equation system:

Uoéaommam DOB 56“hgogwoﬁdmag.oxmoHEocgamOHQ N: a 0: >595” w H. N05

 

 

 

 

 

 

 

 

 

m
a
«I.
H
pm
a
m
h
.m 3 A
h F
w 0
1n +
. ,m D F
ABCDEFGHIJLOSPVTQWRUZ , 0 0
000000000000000000000 m + _
I 9, WVUD OD F
1 __ l 1, £3 _ 0_
oo _
1
123123123123123123 7 
aaabbbcccdddeeefff 7
000000000000000000 1 00000000000000
{ \ 6,
1
3 A ,
000001000001000000001 .b 101_0001_0101_011
000001000010000000010 M 11000011001101
3
000001000100000000100 1, _ _ _
2
000010001000000000001 1, 00000000000001
1
000010010000000000010  00000000000010
000010100000000000100 (Mm 00000000000100
’8
000100000001000001000 www.00000000001000
S
000100000010000010000 ww101_1_011_0110000
on
000100000100000100000  11011011010000
1m _ _ _
001000000001001000000 ed
n
001000000010010000000  00000000010000
SC
001000000100100000000  00000000100000
t
o
010000001000000001000 Wen 00000001000000
S
.1
010000010000000010000 4.4m 00000010000000
1f
010000100000000100000 mm 00000100000000
100000001000001000000 mom 00001000000000
t
S
100000010000010000000 Wm 00010000000000
1
e
100000100000100000000 MinnV 00100000000000
{ \ me
hd 01000000000000
6
e
vm 10000000000000
0d K \
be
ar
ew
mm
f
om
..,In_.\T
mm
toncm
Tm

Thus, we have the following solution:

 

 

 

 

 

 

 

 

 

 

 

or
I A
10.420004201042011
{ \
_
or
I A
1.4200004210042101
{ \
_
d.
0
I A
10I_:|_201I_20110000
{ \
_
1m.
0
I A
K \
_
I A
F
0
+ F
OD 0
+ _
WVUD D F
000_0 0_ 0
__ _ _
PGTQHWVUDROLF
@80000000000000
{ \
__
I A
oaoaoa0b0b0bocococodoeoeoeor
{ \

 

 

i226

TEAM

 

Clearly, only four variables {0d2,0d3,0f2,0f3} are free. Once the values of these free variables are known, the observed frequencies of
remaining events in the two—locus contingency table are also known.

Proof of Theorem 5.1
PROOF. It sufﬁces to show that
D(Xi, Yk)OQ(Xi,X;)=ID(Xi, Yk)ﬂQ(Xian)IUID(Xia Yk)ﬂ((XjX;){O—>1}U{2—>1})I—ID(Xia Yk)ﬂ((XjX;){1—>0}{1—>2})I-
This is the same as to show that
Q(XiaXJ{)=Q(Xia)9)U(O9)g){O—>1}U{2—>1})—(()9)g){1—>0}{1—>2})-

This is clearly true, hence completes the proof.

 

i227

112 /B.IO'SIBUJnoIpJOJXO'SOIlBIIIJOJquIQ/ﬁdllq 1110131 pop1201um0q

9IOZ ‘Ig lsnﬁnv uo ::

