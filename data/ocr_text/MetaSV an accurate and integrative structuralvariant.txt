Bioinformatics, 31 (1 6), 2015, 2741—2744

doi: 10.1093/bioinformatics/btv204

Advance Access Publication Date: 10 April 2015
Applications Note

 

Genome analysis

MetaSV: an accurate and integrative
structural-variant caller for next generation
sequencing

Marghoob Mohiyuddin”, John c. Mu”, Jian Li‘, Narges Bani Asadi‘,
Mark B. Gersteinz, Alexei Abyzov3, Wing H. Wong‘”5 and
Hugo Y.K. Lam1'*

1Bina Technologies, Roche Sequencing, Redwood City, CA 94065, USA, 2Program in Computational Biology and
Bioinformatics, Yale University, New Haven, CT 06520, USA, 3Department of Health Sciences Research, Center for
Individualized Medicine, Mayo Clinic, Rochester, MN 55905, USA, 4Department of Statistics, Stanford University,
Stanford, CA 94035, USA and 5Department of Health Research and Policy, Stanford University, Stanford, CA 94035,
USA

*To whom correspondence should be addressed.
[The authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.
Associate Editor: lnanc Birol

Received on December 30, 2014; revised on March 27, 2015; accepted on April 7, 2015

Abstract

Summary: Structural variations (SVs) are large genomic rearrangements that vary significantly in
size, making them challenging to detect with the relatively short reads from next-generation
sequencing (NGS). Different SV detection methods have been developed; however, each is limited
to specific kinds of SVs with varying accuracy and resolution. Previous works have attempted to
combine different methods, but they still suffer from poor accuracy particularly for insertions. We
propose MetaSV, an integrated SV caller which leverages multiple orthogonal SV signals for high
accuracy and resolution. MetaSV proceeds by merging SVs from multiple tools for all types of SVs.
It also analyzes soft-clipped reads from alignment to detect insertions accurately since existing
tools underestimate insertion SVs. Local assembly in combination with dynamic programming is
used to improve breakpoint resolution. Paired-end and coverage information is used to predict SV
genotypes. Using simulation and experimental data, we demonstrate the effectiveness of MetaSV
across various SV types and sizes.

Availability and implementation: Code in Python is at http://bioinform.github.io/metasv/.

Contact: rd@bina.com

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

SVs have been implicated in contributing to genomic diversity as
well as genomic disorders (Stankiewicz and Lupski, 2010).
Therefore, a significant amount of work has been done on detecting
SVs. Generally, a tool for detecting SVs uses one or more of the fol-
lowing signals from read alignments: split-read [reads with split
alignments, e.g. Pindel (Ye et al., 2009)], read-pair [abnormal

©The Author 2015. Published by Oxford University Press.

paired-end alignments, e.g. BreakDancer (Chen et al., 2009)], depth-
of-coverage [abnormal coverages, e.g. CNVnator (Abyzov et al.,
2011)], junction-mapping [alignments to known SV breakpoints,
e.g. BreakSeq2 (Abyzov et al., 2015; Lam et al., 2010)] or assembly
around potential breakpoints [e.g. MindTheGap (Rizk et al.,
2014)]. However, there is no signal that comprehensively detects all
types of SVs since each has a niche of SV types and sizes where it

2741

This is an Open Access article distributed under the terms of the Creative Commons Attribution License lhttp://creativecommons.org/licenses/by/4.0/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 [3.10811211an[plOJXO'SODBIILIOJIIlOlQ/ﬂ(11111 wort pepeolumoq

910K ‘09 lsnﬁnV no :2

2742

M.Mohiyuddin et al.

 

works well. This necessitates the development of tools which inte-
grate multiple methods to improve SV detection.

Prior work (Lam et al., 2012; Mills et al., 2011) has shown that
variant calls made by multiple tools and methods generally are more
accurate. For this reason, tools have been developed to employ mul-
tiple methods, e.g. DELLY (Rausch et al., 2012), LUMPY (Layer et
al., 2014) and those that merge the results from multiple tools, such
as SVMerge (Wong et al., 2010). However, LUMPY and DELLY
are unable to detect insertions and SVMerge ignores the SV reso-
lution of individual tools when merging calls. Our work, therefore,
attempts to address the limitations of existing SV merging tools for
detecting SVs of different types and sizes with high accuracy and
resolution.

2 Methods

MetaSV uses multiple SV-detection methods and tools to find a
high-confidence and precise SV callset. The novelty of MetaSV lies
in the combination of the following key ideas: calls reported by mul-
tiple orthogonal methods are generally better quality and that local
assembly with dynamic programming can be used to refine the SV
breakpoints.

2.1 Multi-method SV detection
MetaSV proceeds in the following steps (Fig. 1):

° Intra-tool merging: Potential duplicate calls generated by the
same tool are merged here. Note that two calls are considered
duplicate if they have signiﬁcant overlap.

° Inter-tool merging: Calls which are generated by multiple tools
are merged together. While determining the breakpoints for calls
common to multiple tools, priority is given to methods known to
be precise, e.g. split-read over read-pair. Note that this method-
aware merging is crucial to ensuring that the breakpoints of the
SVs reported are as precise as possible.

° Local assembly: Local assembly is performed on the SV regions
reported by the tools to gather additional evidence as well as de-
termine the SV sequences. The SPAdes (Bankevich et al., 2012)
assembler is used due to its unique ability to use paired-end infor-
mation for assembly.

° Breakpoint resolution: The assembled SV sequences are aligned
against the reference to detect or reﬁne the breakpoints using dy-
namic programming (Abyzov and Gerstein, 2011).

° Genotyping: Read coverage around the SV breakpoints are used
to determine the zygosity of the SVs. The ﬁnal output is then gen-
erated as a VCF ﬁle with the genotypes for each SV.

° Annotation: MetaSV standardizes the inputs as well as the out-
puts in VCF. Each SV is annotated to indicate the corresponding
calls made by the individual tools and to classify its conﬁdence
level. SVs which are detected by multiple tools, are considered
high-conﬁdence.

2.2 Insertion detection enhancement

The overall sensitivity of MetaSV by simply merging calls from mul-
tiple tools is upper bounded by the sensitivity of the union of all SVs
detected by the individual tools. Therefore, for long insertions,
which are underestimated by existing tools due to ascertainment
bias, we augmented MetaSV with a soft-clip based method to boost
insertion detection sensitivity. Soft-clips in read alignments are used
to generate a set of candidate insertion intervals. These intervals are
processed during the local assembly step to generate the final set of

Read Alignments (BAM)

Junction

 

 

 

 

 

 

 

 

 

 

Read-pair Split-read Read-depth sofrbclip
mapping analysis analysis analysis anal sis
(BreakSeq) (Breakdancer) (Pindel) (CNVnator) y

 

VIVCF VIVCF IVCF VIVCF

I Merge overlapping calls per tool (intra-tool merging) I

l

I Method-aware merge of all calls (inter-tool merging) I

 

 

   
  

Detected
by multiple

  
 

False

 

[Low-confidence SVs (VOW)

Potential insertion locations
I Local assembly of SV breakpoints I(—

I Breakpoint resolution I

l

I Genotyping I
I

[High-confidence SVs (VCF)]

 

 

 

 

 

 

Fig. 1. High-level view of the MetaSV methodology

insertion locations. Even though assembly would not be able to de-
termine insertion lengths for long insertions due to short read length,
their locations can still be predicted accurately, which provides valu-
able information for interpretation. The Supplementary Text de-
scribes our method in more detail.

3 Results

We demonstrate the effectiveness of MetaSV using the VarSim simu-
lation and validation framework (Mu et al., 2014). Simulated
2 X 100 bp NGS reads were generated at 50x coverages for the
NA12878 genome using published variant sets. The reads were
aligned using BWA-MEM. For comparing reported SVs against the
ground truth, we use a reciprocal overlap of 90% and a wiggle of
100 bp which captures accuracy at a high breakpoint resolution.
The SV size cutoff was set to 100 bp since smaller variants are a tar-
get of indel callers such as GATK’s HaplotypeCaller. Our results
show that each method has varying performance in different SV size
ranges. By integrating multiple methods, MetaSV achieved a steady
performance across all sizes (Fig. 2). We report accuracy as F1-score,
which is the harmonic mean of sensitivity and precision. For this
dataset, MetaSV achieved an F1-score of 96.2% (sensitivity and pre-
cision were 93.7 and 98.8%, respectively) for deletions, indicating
high accuracy and resolution. For insertions, it achieved an F1-score
of 84.7% (sensitivity and precision were 85.3 and 84.1%, respect-
ively) comparing to less than 65% for all the individual tools ana-
lyzed. Insertion length was omitted from the accuracy analysis since
long insertions cannot be assembled completely with NGS reads.
Nevertheless, the significantly enhanced detection of insertion events
can definitely improve interpretation largely as they may cause
impactful disruption in the genome. Finally, genotyping accuracies
of 95.2 and 95.5% were achieved for deletions and insertions,
respectively.

Figure 2 shows detailed accuracy comparisons for both deletion
and insertion detection across different SV sizes and tools. For dele-
tions (Fig. 2a), MetaSV performance was the highest across all SV
sizes. In most cases, it improves upon the best performing individual
tool for a given size. For insertions (Fig. 2b), the improvement due
to MetaSV was more significant since all tools (with the exception

112 ﬂJO'sleumo[pJOJXO'sopeuuogutoiq/ﬁdnq wort pepeolumoq

910K ‘09 lsnﬁnV no :2

An accurate and integrative structural-variant caller

2743

 

100% —

80% —

60% —

40% —

20% —

 

 

0%—

9‘5 99 99 99 99 99 99 9999 99 9 °.\&
’\ '5 100A?) :5" .65 (L1 93?) , \’\ \02'5 accosoooooooox

9%
P3\ \00’

 

 

 

 

 

 

 

 

 

0' 0'
(L0 “0 8 ‘6 '53 ahookﬁ°°é®°g®°fé¢b§§égm’ \

Tool Sensitivity Precision Fl-score
MetaSV 93.7 98.8 96.2
Pindel 92.8 94.0 93.4
BreakSeq2 85.1 98.4 91.3
LUMPY 84.6 88.9 86.7
BreakDancer 72.7 73.1 72.9
DELLY 43.9 44.2 44.1
CNVnator 30.5 45.8 36.6
MindTheGap NA NA NA

 

 

 

 

 

 

100% —

80% —

Sensitivity

 

60% —

40% —

20% —

 

0%—

 

- \6 X
I I I I I I 'r I I I I I I I
Q 9 9 9 9 9 9 9 9 9 9 0 0 ({\
we 003800590on A6903\9 £39 (L19 (L669 6,69 0,559 0000  0,\,\
x r; b. $00 60 00' 00' 00' A .6 A0 00
\ '5 6b: 1% 66 (L b, 0\ »\
\ 'L a (016000

 

 

 

 

 

 

 

 

 

Tool Sensitivity Precision Fl-score
MetaSV 85 .3 84.1 84.7
Pindel 75.9 20.0 31.6
BreakSeq2 0 0 0
LUMPY NA NA NA
BreakDancer 0.8 3.6 1.4
DELLY NA NA NA
CNVnator NA NA NA
MindTheGap 4.4 14.8 6.8

 

 

 

 

 

 

(a) Deletion accuracy summary for different tools for 50X coverage. (b) Insertion accuracy summary for different tools for 50X coverage.

Fig. 2. Accuracy comparisons for deletions and insertions. Accuracy metrics are shown on a per size bin basis in the plots. The tables below the plots show the
aggregate accuracy scores. If a tool does not support detecting the SV type, an NA is indicated in the table. Each tool name is color coded to match the color code
in the plots. DELLY’s suboptimal deletion performance was due to its lower breakpoint resolution. For insertions, although Pindel’s sensitivity was close to

MetaSV, it had a significantly lower precision and overall accuracy

of Pindel) almost detect no insertions due to inherent limitations of
the methods used. Therefore, almost all improvement in accuracy is
due to our insertion detection enhancement—our soft-clip based ap-
proach is very sensitive while the assembly step for insertion detec-
tion yields high precision in contrast to Pindel which had low
precision. As with deletions, small insertions are more difficult to
detect, in general. Detailed accuracy comparisons for other SV types
are discussed in the Supplementary Text.

In order to study the impact on accuracy and runtime of varying
coverages, we generated additional simulation datasets with
2 X 100 bp reads at 10x and 30x coverages. We also generated
2 X 250 bp reads at 50x coverage to investigate the impact of
increasing read length for the same coverage. Although accuracy
dropped for lower coverages, MetaSV was still the most stable and
most accurate, with deletion F1-scores of 89.1 and 95.8% for 10><
and 30x coverages, respectively. For 250 bp read length, F1-scores
of 96.8 and 80.9% were achieved for deletions and insertions, re-
spectively—insertion accuracy dropped slightly over 100 bp reads
due to reduced read count for the same coverage. Furthermore, it
took around 25h to run all the four aforementioned tools for
MetaSV as well as MetaSV on a single node with dual-hexcore
X5675 Intel Xeon processors for 5 0X coverage. Because MetaSV is
parallelized in all its steps, its speed should scale linearly with the
number of available cores.

In addition to simulation, we used the publicly available
Illumina Platinum Genomes sequencing data for NA12878 as a real
testbed. Due to the lack of high-confidence comprehensive SV calls,
particularly for insertions, false positive rates cannot be accurately
determined using real data. Therefore, only sensitivity for deletions
was reported here. For deletions, a sensitivity of 90.2% was
achieved against the Complete Genomics high-confidence callset for
NA12878 (Drmanac et al., 2009) generated using their analysis
pipeline version 2.0, which is similar to our simulation results.
Complete Genomics was used since it is an orthogonal sequencing
platform, providing a less biased validation.

4 Conclusions

MetaSV significantly improves the accuracy of SV-calling by inte-
grating orthogonal methods and tools. In addition, it is augmented
with soft-clip based insertion detection for significantly higher ac-
curacy compared with the state of the art.

We consider MetaSV as a proof of concept of the effectiveness of
using an ensemble approach for calling SVs. The approach is not
limited to only using the four aforementioned tools—it can be easily
adapted to use additional or even a different set of tools.

Funding

 was supported by National Institute of Health grants
[1R01HG007834] and [1R01GM109836].

Conﬂicts of Interest:  and NB. are co-founders of Bina Technologies.
 and M.B.G. are scientific advisors for Bina Technologies.

References

Abyzov,A. and Gerstein,M. (2011) AGE: deﬁning breakpoints of genomic
structural variants at single-nucleotide resolution, through optimal align-
ments with gap excision. Bioinformatics, 27, 5 95—603.

Abyzov,A. et al. (2011) CNVnator: an approach to discover, genotype, and
characterize typical and atypical CNVs from family and population genome
sequencing. Genome Res., 21, 974—984.

Abyzov,A. et al. (2015) Analysis of deletion breakpoints from 1,092
humans reveals details of mutation mechanisms. Nat. Commun., 6, 7256,
doi: 10.1038/ncomm58256.

Bankevich,A. et al. (2012) SPAdes: a new genome assembly algorithm
and its applications to single-cell sequencing. ]. Comput. Biol., 19,
455—477.

Chen,K. et al. (2009) BreakDancer: an algorithm for high-resolution mapping
of genomic structural variation. Nat. Methods, 6, 677—6 81.

Drmanac,R. et al. (2009) Human genome sequencing using unchained base
reads on self-assembling DNA nanoarrays. Science, 327, 78—81.

Lam,H.Y. et al. (2010) Nucleotide-resolution analysis of structural variants
using BreakSeq and a breakpoint library. Nat. Biotechnol., 28, 47—5 5 .

1e ﬂJO'sleumo[pJOJXO'sopeuJJOJutoIq/ﬁdnq wort pepeolumoq

910K ‘09 lsnﬁnV no 22

2744

M.Mohiyuddin et al.

 

Lam,H.Y. et al. (2012) Detecting and annotating genetic variations using the
HugeSeq pipeline. Nat. Biotechnol., 30, 226—229.

Layer,R.M. et al. (2014) LUMPY: a probabilistic framework for structural
variant discovery. Genome Biol., 15, R84.

Mills,R.E. et al. (2011) Mapping copy number variation by population-scale
genome sequencing. Nature, 470, 59—65.

Mu,].C. et al. (2014) VarSim: a high-ﬁdelity simulation and validation frame-
work for high-throughput genome sequencing with cancer applications.
Bioinformatics, 31, 1469—1471.

Rausch,T. et al. (2012) DELLY: structural variant discovery by integrated
paired-end and split-read analysis. Bioinformatics, 28, i333—i339.

Rizk,G. et al. (2014) MindTheGap: integrated detection and assembly of short
and long insertions. Bioinformatics, 30, 345 1—345 7.

Stankiewicz,P. and Lupski,].R. (2010) Structural variation in the human gen-
ome and its role in disease. Annu. Rev. Med., 61, 437—45 5 .

Wong,K. et al. (2010) Enhanced structural variant and breakpoint detection
using SVMerge by integration of multiple detection methods and local as-
sembly. Genome Biol., 11, R128.

Ye,K. et al. (2009) Pindel: a pattern growth approach to detect break points of
large deletions and medium sized insertions from paired-end short reads.
Bioinformatics, 25, 2865—2871.

112 ﬂJO'sleumo[pJOJXO'sopeuJJOJutoIq/ﬁdnq wort pepeolumoq

910K ‘09 lsnﬁnV no 22

