ORIGINAL PAPER

Vol. 29 no. 8 2013, pages 1018-1025
doi: 1 0. 1093/bioinformatics/btt0 76

 

Structural bioinformatics

Advance Access publication February 15, 2013

Prediction of contact matrix for protein—protein interaction

Alvaro J. Gonzalez, Li Liao* and Cathy H. Wu*

Department of Computer and Information Sciences, University of Delaware, Newark, DE 19716, USA

Associate Editor: Anna Tramontano

 

ABSTRACT

Motivation: Prediction of protein—protein interaction has become an
important part of systems biology in reverse engineering the biological
networks for better understanding the molecular biology of the cell.
Although significant progress has been made in terms of prediction
accuracy, most computational methods only predict whether two pro-
teins interact but not their interacting residues—the information that
can be very valuable for understanding the interaction mechanisms
and designing modulation of the interaction. In this work, we de-
veloped a computational method to predict the interacting residue
pairs—contact matrix for interacting protein domains, whose rows
and columns correspond to the residues in the two interacting do-
mains respectively and whose values (1 or 0) indicate whether the
corresponding residues (do or do not) interact.

Results: Our method is based on supervised learning using support
vector machines. For each domain involved in a given domain—domain
interaction (DDI), an interaction profile hidden Markov model (ipHMM)
is first built for the domain family, and then each residue position for a
member domain sequence is represented as a 20-dimension vector of
Fisher scores, characterizing how similar it is as compared with the
family profile at that position. Each element of the contact matrix for a
sequence pair is now represented by a feature vector from concate-
nating the vectors of the two corresponding residues, and the task is
to predict the element value (1 or 0) from the feature vector. A support
vector machine is trained for a given DDI, using either a consensus
contact matrix or contact matrices for individual sequence pairs, and
is tested by leave-one-out cross validation. The performance aver-
aged over a set of 115 DDIs collected from the 3 DID database
shows significant improvement (sensitivity up to 85%, and specificity
up to 85%), as compared with a multiple sequence alignment-based
method (sensitivity 57%, and specificity 78%) previously reported in
the literature.

Contact: Iliao@cis.udel.edu or wuc@cis.udel.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on October 28, 2012; revised on December 30, 2012;
accepted on February 10, 2013

1 INTRODUCTION

Protein—protein interaction (PPI) plays a central role in cellular
functions, and the prediction of PPI has become an important
part of systems biology in reverse engineering the biological net-
works for better understanding the molecular biology of the cell.
The cost and time of experimental approaches to determining
PPI remain high and thus have motivated development of

 

*To whom correspondence should be addressed.

computational methods. Despite significant progress in predic-
tion accuracy, most computational methods only predict whether
two proteins interact but do not tell which amino acids on these
two proteins actually interact—the very information that can be
extremely valuable for further understanding the interaction
mechanisms and hence for designing modulation of the inter-
action via mutagenesis. It is therefore desirable to develop
computational methods that can predict the contact matrix for
interacting protein domains to indicate which residue pairs
interact.

PPI requires some ‘compatibility’ between the interacting part-
ners in terms of structure, electrostatics and other properties,
which shall be conserved during evolution due to the selection
pressure and ultimately manifest themselves to certain degrees in
the amino acid compositions of the domain sequences that make
up the interaction interface (Chothia and Janin, 1975; Jones and
Thornton, 1996; Larsen et al., 1998; Livingstone and Barton,
1993). It is such compatibility that most computational methods
are trying to establish, by looking at features in protein sequences
and structures, to predict the PPI (Tuncbag et al., 2009). The
conservation of interface sequences leads to the use of interacting
domains as surrogate of PPI, although PPI can not always be
reliably predicted just based on interacting domains—because,
for instance, in the presence of multi-domains, combination of
domains may block interactions that would be otherwise impli-
cated if solely based on individual domain interactions (Moza
et al., 2006).

Nevertheless, domain—domain interaction (DDI) provides a
useful perspective to studying PPI and is adequate for our pur-
pose here, which is to predict the contact matrix for proteins that
are known to interact via certain domains. Speciﬁcally, pairs of
interacting proteins will be organized in groups of domain—
domain interacting (DDI) families. Each member of such a
family is an interacting protein pair whose interaction occurs
through the association of a pair of domains, an interface that
is common to all the members of the family, even though sub-
stantial variance might exist between the whole protein com-
plexes to which the protein pairs belong, such as their folded
state, cellular function, etc. These DDIs form a relatively large
and stable interface of ~ 2000A2 on average. Identifying residues
from the domain sequences that reside on the interface would
provide the training data needed for developing a computational
method with predictive power. Several groups have published
work in organizing and standardizing known DDIs
(Raghavacharil et al., 2008; Finn et al., 2005). The 3DID data-
base (Stein et al., 2010) is among the most successful and widely
used ones. This database identiﬁes all cases of DDIs of known
three dimensional structure by first assigning Pfam domains
(Finn et al., 2010) to each individual protein in the Protein

 

1018 © The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com

112 /310's113umo [p.IOJXO'SOllBIIIJOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘091sn3nv uo ::

The contact matrix

 

Data Bank (PDB) (Berman et al., 2000). Next, the atomic con-
tacts between domains in the same structure are computed,
where a pair of interacting residues are deﬁned by requiring
one or more of hydrogen bonds (N—O distances 3 3.5A), salt
bridges (N—O distances 3 5.5A) or van de Waals interactions
(C—C distances 3 5A). A DDI is called when at least ﬁve of
these contacts exist between a pair of domains (Aloy and
Russell, 2002). As of March 2011, 3DID collected a total of
5971 distinct DDI families, where each family has on average
26.72 different PDB complexes in which the corresponding DDI
was observed.

Figure 1 shows a graphical representation of the contact
matrix for a DDI family. In the top left panel, there are four
protein complexes, each with a pair of interacting sequence
chains. The complexes are not in general homogeneous, but in
the interface region, all of them do exhibit a similar shape. This is
because, for each one of the protein pairs, the interaction occurs
through domain A in the sequences marked red, and through
domain B in the sequences marked green. Therefore, since in the
domain A region of all the red sequences there is high sequence
conservation, they can be aligned in a multiple sequence align-
ment (M SAA), and the same happens to the domain B region of
the green sequences (MSAB). The matrix in the bottom right
panel is the contact matrix of the DDI family. The black dots
in the matrix show those positions in the three dimensional com-
plexes where physical interactions occur between the protein
pairs. Note that these residue—residue interactions do not neces-
sarily occur in all the complexes in the family. For instance, i1 is
observed only in complexes 1, 2 and 3; i2 only happens in com-
plex 1; whereas i3 happens in all the four complexes.

Such a representation of a DDI had previously been used in
Brannetti et a]. (2000) and Ferraro et a]. (2006) to predict speci-
ﬁcity of SH3 proteins binding to their ligands, where the domain
B would correspond to the SH3 domain and the domain A to the
binding ligand (peptide). As an intermediate step toward infer-
ring the binding for a new sequence pair, each sequence will be
aligned to the corresponding MSA and a consensus contact
matrix will be used to determine the contacting residues.
Although this method seems to be reasonable and straightfor-
ward to implement and had worked well in enhancing the

 

/K : : 533
MSA 8

 

 

 

K}

 

 

 

 

 

54A 53A 52A 51A
I—l
MSAA

Fig. 1. Schematic diagram of the contact matrix for a pair of interacting
domains

inference of the SH3 domain speciﬁcity, its performance as a
predictor for protein contact matrix is poor, as shown in the
results when applied to the 3DID data, primarily due to its
rigid reliance on the multiple sequence alignments. Weigt et a].
(2009) proposed a method to construct the consensus contact
matrix for a large number of homologue pairs without using
structural information but only sequence variations, as measured
by the so-called direct information, which is computed by max-
imum entropy with constraints of matching the observed occur-
rence frequencies of amino acids. Being able to differentiate
direct couplings of amino acids from transitive couplings, the
method shows remarkable improvement in speciﬁcity, as com-
pared with similar method of using the mutual information
based on observed occurrence frequencies. Yet, being unsuper-
vised, the method does not address particularly how to predict
the contact matrix for a give pair of sequences, other than having
them as members in the MSAs and then use the consensus con-
tact matrix as the predicted contact matrix.

In this work, we developed a computational method to predict
more accurately the contact matrix for interacting protein
domains, by (i) incorporating the structural information of the
interface with interaction proﬁle hidden Markov models
(ipHMMs) (Friedrich et al., 2006) over MSAs, (ii) tapping into
the more subtle features present in the domain sequence with the
use of Fisher scores over a simple alignment and (iii) using sup-
port vector machines for a supervised learning over the use of a
family consensus contact matrix, which is often dependent on the
initial multiple sequence alignments and the voting mechanism
used to get the consensus. The performance from the leave-one-
out cross validation averaged over 115 DDIs for both methods
shows signiﬁcant improvement as compared with a multiple
sequence alignment-based method previously reported in the
literature.

2 METHOD

The method is based on supervised learning using support vector ma-
chines. The training and testing data are composed of 115 DDIs, collected
from the 3DID database, whose contact matrices are known from the 3D
structure of the protein complexes. As the ﬁrst step, interacting domains
are identiﬁed and proﬁled using ipHMMs, which is discussed in section
2.1. At the second step, each residue for a member domain sequence is
represented as a 20-dimension vector of Fisher scores, characterizing how
similar it is as compared with the family proﬁle at that position. Each
element of the contact matrix for a sequence pair is now represented by a
feature vector from concatenating the vectors of the two corresponding
residues. The third step is to train a support vector machine for each DDI
family, and the last step is to use the trained SVM to predict the element
value (1 or 0) from its feature vector for the contact matrix of a new
sequence pair.

2.1 Identiﬁcation and proﬁling of interacting domains

Since the contact matrix is referring to an interacting domain pair, it is
helpful to brieﬂy review how interacting domains are identiﬁed and
proﬁled, and their use in predicting DDI and PPI.

A typical scenario is presented in Figure 1, where the contact matrix
for two new proteins, Sf, and 5% will be predicted. The ﬁrst question is
what is the likelihood that these two proteins can form an interaction?
The DDI-based approach is to identify interacting domains in the two
sequences: is there a domain dA found in Sf“ and a domain dB found in
5%, such that dA—dB constitute a known interacting interface, namely, a

 

1019

112 /310's113umo [p.IOJXO'SOllBIIHOJUTOTQ/ﬁdllq 11101; prBOIIIAAOG

9IOZ ‘091sn3nv uo ::

AALGonzﬂezetaL

 

dA—dB DDI family that can be found in a database like 3DID? If yes, then
5% and 5% interact, otherwise they do not interact. This simple scheme
works but with false positive and false negative predictions, even assum-
ing the domain identiﬁcation is reliable. Because of the incompleteness of
DDI databases, absence of a known interacting domain cannot rule out
a PPI. On the other hand, because of multi-domains, combination of
domains may block interactions that are otherwise suggested by individ-
ual domains (Moza et al., 2006). Some of these issues and their work-
arounds have been addressed in our previous work (Gonzalez and Liao,
2010), and the techniques used will be applied here.

For the above scheme to work, it is essential to identify the presence of
dA in 5% and of dB in 5%. Protein domains often contain signiﬁcant
sequence variations. Proﬁle hidden Markov model (pHMM) (Eddy,
1998) is a successful method to capture the commonalities of a given
domain while allowing variations. A collection of pHMMs covering
many common protein domains and families is available in the Pfam data-
base (Finn et al., 2010). Not only can pHMMs provide a statistical char-
acterization for a family of conserved protein sequences, but they can also
be used for efﬁciently identifying presence of domains in protein sequences
through the Viterbi or the posterior decoding algorithms (Rabiner, 1989).
However, pHMMs are designed to model domains in general, and the
special case of interacting domains must be treated with care because
interaction sites impose strong constraints and therefore play a key role
in the identiﬁcation of these domains. To this end, Friedrich et a]. (2006)
developed a new model, called ipHMM, which modiﬁes the ordinary
pHMM by adding to the model architecture new states explicitly repre-
senting residues on the interface. As shown in Figure 2, the match states of
the classical pHMM are now replaced by a non-interacting (Mm) and an
interacting match state (M,). The new match state is provided with the
same properties of a match state in the ordinary proﬁle hidden Markov
model architecture, i.e. these interacting match states are able to emit all
amino acid symbols with probabilities, which are parameters to be ﬁxed
according to the training examples. It has been shown that this modiﬁca-
tion leads to improved accuracy in interacting domain prediction, which
makes ipHMMs a better choice for our method.

 

Algorithm 1 Average Fisher vectors

 

/* P is the number of sequences in the MSAs at training */
/* Fi5herVector() is a function that uses Equation (2) to calculate a
residue’s Fisher vector */
/* FamilyContactMatrix is the contact matrix of Figure 1 where all the
interactions in the family (from any sequence pair) are accounted for */
/* c0ncat() is a function that concatenates two vectors to form one new
vector */
/* Training */
for each interacting sequence pair 5le1 —5%, 1 5 m 5 P do
Align 5le1 to ipHMMA, 5% to ipHMMB.
for each amino acid 531(1), 1 5 i 5 LA do
Calculate Fi5herVector(5;j‘,(i)) and save it.
end for
for each amino acid 5520'), 1 5 j 5 LB do
Calculate Fi5herVector(5%(/')) and save it.
end for
end for
P0 2 empty array;/* Positive dataset */
NE=empty array;/* Negative dataset */
for each cell (i,j) in the contact matrix do
AvFiSherA <— average{Fi5herVect0r(5,j1,(i))}|15mg};
AvFiSherB <— average{Fi5herVector(5%(j))}|15mg};
if FamilyContactMatrix(i, j) is interacting then
Add c0ncat(AvFi5herA,AvFiSherB) to PO.
else
Add c0ncat(AvFi5herA, AvFiSherB) to NE.
end if

    
    

 
   
  
  

A‘v’Aﬁku
V‘V V

 

Fig. 2. State diagram of the ipHMM. The usual match states are now
split between non-interacting (Mm) and interacting (Mi) match states

end for
Sample negative dataset so that size(PO) = size(NE).
Train support vector machine (SVM) using PO and NE.
/* Testing */
Align 5% to ipHMMA, 5% to ipHMMB.
for each cell (i,j) in the contact matrix do
Calculate T 125tFi5/112rA <— Fi5herVector(5%(i)).
Calculate T e5tFi5herB <— Fi5her Vector(5%(j)).
Evaluate c0ncat(Te5tFi5herA, T e5tFi5herB) in the SVM and predict
+1 (interacting) or — 1 (not interacting).
end for

 

 

Algorithm 2 All Fisher vectors in the family (no average)

 

/* P is the number of sequences in the MSAs at training */
/* Fi5herVector() is a function that uses Equation (2) to calculate a resi-
due’s Fisher vector */
/* ContactMatrix’" is the contact matrix where only the interactions from
sequence pair m are accounted for */
/* c0ncat() is a function that concatenates two vectors to form one new
vector */
/* Training */
P0 2 empty array;/* Positive dataset */
NE: empty array;/* Negative dataset */
for each interacting sequence pair 5?1 —5%, 1 5 m 5 P do
Align 5le1 to ipHMMA, 5% to ipHMMB.
for each cell (i,j) in the contact matrix do
Calculate T rainFi5herA <— Fi5herVector(5,j1,(i)).
Calculate T rainFi5herB <— Fi5herVector(5%(/')).
if ContactMatrixm(i, j) is interacting then
Add c0ncat(TrainFi5herA, T rainFiSherB) to PO.
else
Add c0ncat(TrainFi5herA, T rainFiSherB) to NE.
end if
end for
end for
Sample negative dataset so that size(PO) = size(NE).
Train support vector machine (SVM) using PO and NE.

/* Testing: the same as in Algorithm 1 */
Align 5% to ipHMMA, 5% to ipHMMB.
for each cell (i,j) in the contact matrix do
Calculate T 125tFi5/112rA <— Fi5herVector(5%(i)).
Calculate T e5tFi5herB <— Fi5her Vector(5%(j)).
Evaluate c0ncat(Te5tFi5herA, T e5tFi5herB) in the SVM and predict
+1 (interacting) or — 1 (not interacting).
end for

 

With the two interacting domains each being modelled as ipHMMs,
the contact matrix can be used to predict potential interacting contacts in
a new pair of sequences, 5% and 5%, that contain dA and dB, in the

 

1 020

112 /310's112u1no [p.IOJXO'SODBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘091sn3nv uo ::

The contact matrix

 

following way: (i) align 5% to ipHMMA and 5% to ipHMMB, using Viterbi
or posterior decoding; (ii) project the interacting contacts i1 through is in
the contact matrix horizontally onto 5% and vertically onto 5%; and (iii)
predict the residues marked by these projections as interacting contacts in
the two new sequences. The rationale for this simplistic approach, which
will serve as a baseline in this study, is that the domain—domain inter-
action characterized by the contact matrix is assumed to behave uni-
formly across all the complexes in which the interface is found. An
important strength of this baseline method—and of the algorithms we
will propose in subsection 2.3—is that for aligning the sequences to the
domain families in step (i) it is not required a given sequence similarity
between the sequence and its corresponding family: even at low levels of
sequence homology, the alignment can be calculated via Viterbi or pos-
terior decoding, and this is all that is needed to construct feature vectors
and make contact predictions. We will show that even at low similarity
levels, our predictions can be highly accurate (Fig. 6).

Brannetti et a]. (2000) and later Ferraro et a]. (2006) have previously
used this alignment-based approach to study SH3 domain speciﬁcity.
While their goal is to predict whether a protein containing an SH3
domain interacts with a ligand, their method aligns the query protein
and ligand, respectively, with the training proteins (in an MSA) and
ligands (in another MSA) whose contact matrices are known. From
the alignment, the putative contact points for the query protein—ligand
pair are identiﬁed, and the amino acid pairs at these contact points are
compared with the distribution of amino acid pairs at these contact
positions for the training protein—ligand pairs to infer how likely the
query protein and ligand interact. It is worth noting that our baseline
approach is already a slight reﬁnement to the method of Ferraro by
using ipHMMs, which take into account the structural information
about interacting residues at the model construction stage. The
ipHMMs allow for more accurate alignment of a query sequence to
the existing sequences in the model by using the Viterbi algorithm than
a progressive approach does, as the one used in multiple sequence
alignments. Still, the assumption that all the protein complexes in a
given DDI family share the same contact matrix does not hold in
general because of sequence and structural variations, even within
the same family. Consequently, the prediction would suffer; a false
negative may be caused from missing the interacting sites that are
new to 5% and 5% and are not recorded in the contact matrix, and a
false positive may occur when the interacting sites annotated in the

contact matrix are not conserved in 5% and 5%.

2.2 Representing residues with Fisher scores

To overcome the shortcomings of the alignment-based approach that we
discussed above, we will have to allow a pair of residues to be considered
as a contact point even when they are not aligned to any contact point in
the known contact matrix in the DDI family (false negative) and also
allow the pair to be considered as a non-contact point when they are
aligned to a known contact point in the DDI family (false positive). To
achieve these goals, we propose to (i) characterize each residue in the
sequence in a way that captures how it contributes to the alignment of
the sequence with the whole family as an ipHMM, and (ii) determine for
each residue pair its candidacy as a contact point, not based on a rigid
alignment to the existing contact matrix, but by comparing it with
the known contacting pairs and non-contacting pairs, all expressed in a
representation from step (i), in a supervised learning approach. We
address the ﬁrst part in this subsection and the supervised learning part
in the next subsection.

The representation that we adopted for characterizing the residues is
the Fisher scores derived from aligning the sequence to the ipHMM. The
use of Fisher vectors to represent protein sequences was ﬁrst proposed by
Jaakkola et a]. (1999) in the context of detection of remote protein homo-
logues, and was later adopted for other applications in bioinformatics,
including discriminating signal peptides from transmembrane proteins

(Kahsay et al., 2005) and PPI prediction (Gonzalez and Liao, 2009;
Gonzalez and Liao, 2010). Given an ipHMM for the family of domain
dA, the probability of 5% in Figure 1 being a member, i.e. containing
domain dA, can be calculated as P(5% IQA), where 6% are the parameters
(emission and transition probabilities) of ipHMMA. The Fisher score of
the alignment with respect to parameter 6% is deﬁned as

wiAlogPQfllQ/l) (1)
0

In this work, we use a vector of Fisher scores to represent not the
protein sequences in the multiple sequence alignments, but rather each
one of their residues. Take the sequence 5% and ipHMMA in Figure 2, and
let domain dA be of length LA, i.e. ipHMMA has LA match states (see
Fig. 2). The alignment of 5% to ipHMMA will also be of length LA,
although some amino acids in the original sequence when its length is
longer than LA will not appear in the alignment, as they would align to
insert states. Let us thus denote this alignment as the amino acid chain
{5%(1),5%(2), ...,5%(LA)}. Each residue in the sequence can be charac-
terized by a set of Fisher scores deﬁned as follows:

 

a a
<36AA. 10gP(S‘f‘|6A)» 361A, 10gP(s‘f‘I6A)»
Mi M,-
a (2)
A A
 7963141320 logP(51 ie )>

where 631%", 1 5 k 5 20 is the emission probability of amino acid k at

match state M ,-. Note that these match states can be either interacting or
non-interacting (see Fig. 2); both types will be used in this study and a
comparison of the inﬂuence on the prediction performance will be made.

The same can be done for all the residues in the alignment of 5% to
ipHMMB. The element (i,j) in the contact matrix for the sequence pair
can now be represented by the concatenation of the Fisher vector for 5% (i)
and the Fisher vector for 5%(1'). The value of element (i,j), as the ground
truth, is used to label the concatenated vector with +1 for interacting
or — 1 for non-interacting correspondingly. In the next section, we pro-
pose to use a support vector machine to learn and predict the interacting
condition between pairs of residues coming from two unseen protein
sequences, for instance 5% and 5% in Figure 1.

2.3 Supervised learning with SVMs

We propose two algorithms to conduct the supervised learning with sup-
port vector machines. These two algorithms differ in how the training
examples are prepared.

The ﬁrst algorithm is based on the consensus contact matrix for the
sequence pairs in the training set. The idea is illustrated in Figure 3, and
the pseudocode is in panel Algorithm 1. The following is done for all the
sequence pairs in the training data, for which we know their residue
contacts information from the corresponding three dimensional

madman B

 

 

 

 

 

seqs B
Average .
FishervectorsA domaln B
< 1,2,5
C I
a; 1 2 3,4,5 
3
o I 2 3,-4,5
"C

 

 

 

 

seqs A Family Contact Matrix
Fig. 3. Schematic diagram of Algorithm 1 (Average Fisher vectors)

 

1021

112 /310's112u1no [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘091sn3nv uo ::

A.J.Gonzélez et aI.

 

structures: the two sequences are aligned to their ipHMMs, and their
residues in the alignment are represented as Fisher vectors. Once this is
done for all the sequence pairs in the two MSAs, each element (i ,j) in the
(LA >< LB)-sized contact matrix will be represented by the concatenation
of two Fisher vectors: one is the average of all the Fisher vectors from the
training sequences in M SAA at position i, and the other is the average of
all the Fisher vectors from the training sequences in M SAB at position j.
The vector for this element will be labeled +1 if any of the training
sequence pairs presents an interaction at this position; otherwise it will
be labeled —1. In this way, we construct a dataset with (LA X LB) ex-
ample vectors, where the features of each vector encapsulate characteris-
tics of the family through the averages of Fisher vectors across all the
training sequence pairs. These vectors belong to one of two categories:
positive examples or negative examples, according to contacts in the
matrix. The dataset is then learned with a SVM, and evaluated on a
test set of (LA X LB) examples coming from two protein sequences
whose three dimensional structure is also known but preserved for testing.
These test examples are constructed in the same way that train examples
are built, except that they are not averaged across the family. Notice that
in training, all the positive examples are used, but not all the negatives are
included in the training set: we randomly choose negative examples so
that the positive and the negative sets are the same size. This is done to
keep the convergence time of the SVM manageable and to avoid a mi-
nority class problem. Furthermore, our experiments showed that the
learning ability of the SVM is robust towards this decrease in the
number of negative train examples. The same is done in testing.

The second algorithm is illustrated in Figure 4, and its pseudocode is in
panel Algorithm 2. For a pair of interacting sequences in training set, they
are aligned to the ipHMMs and each of their residues is represented as
Fisher vectors. The contact matrix for this speciﬁc pair of sequences,
which may be different from the contact matrix of the other sequence
pairs in the training set, is used to label the concatenated Fisher vectors at
each position as +1 or —1. The same is done for all the training sequence
pairs. This means that the positive and negative datasets are prepared for
each sequence pair in the training set individually, not relying on a

HHHHHHHHHHHHHHH

B 1
domainB seq H

 

Fisher vectors A (1)

 

.E
E
:1
O
‘C

 

 

 

seq A (1) Contact Matrix 1

HHHHHHHHHHHHHHH

B 5
domainB seq H

 

Fisher vectors A (5

I:I<E

 

)
E
(U
E E
o I

 

 

1:1 '5
seq A (5) Contact Matrix 5

Fig. 4. Schematic diagram of Algorithm 2 (All Fisher vectors)

 

consensus contact matrix and ﬁsher vectors averaged across the DDI
family. This scheme of using all ﬁsher vectors, of course, results in a
signiﬁcantly increased number of training examples—the number is
roughly P times more than that in the ﬁrst algorithm, where P is the
number of sequence pairs in the training set. It is expected that by taking
the residue pairs out of the constraints of a rigid alignment, the method
can better handle the sequence and structural variations in the interacting
domains and contact points. The sampling of negative examples done in
Algorithm 1 is also done here.

3 RESULTS

The method was trained and tested on a dataset collected from
the 3DID database with close to 6000 DDI families. Of those, we
have chosen a subset of 115 DDIs where for each family, (i) the
two interacting domains are no longer than 550 amino acids, and
(ii) the number of different PDB structures in the family is be-
tween 3 and 300. In this way, we are testing our methods on a
rich dataset, while avoiding big families that could take prohibi-
tive times to train and cross-validate.

For each DDI family, we assess the predictive power of the
two proposed algorithms using leave-one-out cross validation. If
there are P protein pairs in a family (i.e. P PDB complexes for
the family), we set aside one of the pairs for testing, and use the
remaining (P — l) examples for training the models. This is re-
peated such that each protein pair in the family is used once as
the test example. It is common to ﬁnd DDI families in 3DID
contain highly similar sequence pairs. To avoid trivial test cases
(when the test pair has an almost identical counterpart in the
train set), we represent each sequence pair by its two concate-
nated sequences, and group these artiﬁcial sequences in clusters,
within which any two sequences have a 290% BLAST sequence
similarity. Then in training and testing, we use only one sequence
pair from each cluster. In this way, we tested a total of 473
protein pairs. As a baseline, we present prediction results when
only the alignment of the two sequences to the ipHMMs and the
family contact matrix are used to predict contacts in the test
sequence pair. In this case, to assign a real number to each pre-
dicted residue pair, we use the number of contacts that were
observed at that point in the family contact matrix; then we
will predict interaction when this number is greater than zero,
and when it is zero we predict no interaction. When algorithms 1
and 2 are used, each element in the contact matrix of the test pair
is assigned a prediction score in the form of a real number, which
is the signed distance from the vector representation of the elem-
ent to the hyperplane of the trained SVM. We predict an element
to be interacting when the distance is greater than zero, and no
interaction otherwise. For all three methods (baseline, ‘Average’
and ‘All vectors’), we measure the sensitivity and speciﬁcity of
the predictions as deﬁned as follows:

sensitivity 2 TP/(TP + FN)
speciﬁcity = TP/(TP + FP)

where TP: True Positives, FN: False Negatives, FP: False
Positives. Since we have real-valued predictions for each point
in the test contact matrix, we also measured the performance by
the area under the ROC curve (AUC), which does not rely on a
preset threshold for making predictions and therefore can more
reliably assess a method’s power to differentiate positive

 

1 022

112 /310's112u1no [p.IOJXO'SOIlBIIIJOJUIOIQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘091sn3nv uo ::

The contact matrix

 

Table 1. Comparison between proposed methods and baseline, according
to sensitivity, speciﬁcity and AUC

 

 

Method Sensitivity Speciﬁcity AUC
(%) (%) (%)
Average (Algorithm 1) Mm: 84.46 Mm: 69.54 Mm: 81.01
M,: 71.75 M,: 84.81 M,: 89.35
All vectors (Algorithm 2) Mm: 84.10 Mm: 66.53 Mm: 83.33
M,: 59.90 M,: 82.62 M,: 91.20
Baseline 56.92 78.22 78.16

 

examples from negative examples. Table 1 lists the results aver-
aged over the 115 tested DDI families, and Figure 5 shows the
histograms of these averages: in these curves, for any given value
of the ﬁgure of merit in the horizontal axis (sensitivity, speciﬁ-
city or AUC), the vertical axis shows the number of families that
attained a performance greater than this value. The table shows a
generalized performance analysis over all the families, whereas
the histograms allow for a more per-family based analysis. This
is an important analysis because the models we propose are built
independently for each family.

In Equation (2) we had shown how the Fisher scores can be
calculated with respect to non-interacting (Mm) or interacting
(M,) match states. In Table 1 and Figure 5, we show results
for each of these cases. In terms of AUC, which measures the
learning ability of the algorithm, the best results are obtained,
expectedly, with the M ,- vectors, because these encapsulate infor-
mation more directly relevant to the interaction. This is true for
both algorithms (‘Average’ and ‘All vectors’). Also, according to
the AUC, the ‘All vectors’ algorithm achieves more learning
power than the ‘Average’ algorithm, and the two of them per-
form considerably better than the baseline. These conclusions
can be drawn from both, Table 1 (AUC column) and Figure 5
(bottom). Even though more computationally expensive, the ‘All
vectors’ approach, by treating equally each residue pair in the
family, independent of what sequence pair the two residues come
from, can better learn the correlation between the evolutionary
and the structural features of the residue pair and its likelihood
of being a contact. To assess the performance in terms of sensi-
tivity and speciﬁcity, a thresholding scheme needs to be adopted.
Our thresholding for the baseline method is to predict as positive
points in the matrix where training sequences have contacts. For
the supervised learning algorithms, we predict as positive the
residue pairs with a positive distance to the hyperplane. Even
though this thresholding scheme is arbitrary, the results show
that, for both algorithms, the non-interacting match states
have higher sensitivity, whereas the interacting match states
have higher speciﬁcity.

It is well known that sequence similarity is a factor that can
inﬂuence the prediction accuracy in a signiﬁcant way for many
methods that use sequence information. To investigate how our
method is affected, we divided the 115 families into four groups
based on sequence similarity: 2M0%, 40—60%, 60—80% and
80—90%. Here, we treat all protein pairs in a family as concate-
nated pseudo-sequences, and calculate the sequence similarity
between all pairs of pseudo-sequences. The average family

 

 

number of families

 

 

Average, M n 7;
Average, M1-

All vectors, Mn 7;
A11 vectors, M ,-
Baseline

I

20-

O><O><

 

 

 

 

 

 

I I I I I I I (T)
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 ’
sensitivity (%)

 

number of families

 

 

Average, M n i
Average, M 7;

All vectors, M n ,-
A11 vectors, M 7;
Baseline

I

20-

‘OXOX

 

 

 

 

 

0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
specificity (%)

 

 

 

80-

60-

number of families

40—

 

Average, M n i
Average, M 7;

All vectors, M n 1-
All vectors, M ,i
Baseline

20-

OXOX

 

 

 

 

 

 

 

o 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
AUC(%)

 

Fig. 5. Results in terms of sensitivity (top), speciﬁcity (middle) and AUC
(bottom). In each histogram, a point in the curve shows in the vertical
axis the number of DDI families that have a performance greater or equal
than the position in the horizontal axis

similarity is the mean of all the pairwise comparisons. The box
plots in Figure 6 show how the prediction performance, mea-
sured as AUC, varies across these four groups. It can be seen
that, while the average prediction accuracy in these groups

 

1 023

112 /810's112u1no [p.IOJXO'SOilBIIHOJUIOIQ/ﬁdllq 111011 pop1201umoq

9IOZ ‘091sn8nv uo ::

A.J.Gonzélez et aI.

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

    

 

Average
1.0 - _,_ _:_ I _'_
0.9 — 5 E
9famIIes
0'8 _ 29 famIlIes
O 54 families '
3 0.7 — : O
< I
-3 fa Ie
0.6 _ :h'lll : O
0.5 - I _._
0.4 — I (I) mean similarity I I
o\° °\° °\o °\°
O o o o
V 0 w o)
O o o o
N w to w
All vectors
1.0 - _:_ I _'_
 I
9fam‘ilies
0.8 —
o 54 amnes 29 amIIes o
2 Q7 _ a:mIIes  
0.6 — : E .
0.5 - O
0 mean similaritv

 

 

 

20 to 40% -
40 to 60% —
60 to 80% —
80 to 90% —

Fig. 6. The 115 DDI families being studied have been categorized into
four groups according to their average within family similarity. That is,
we treat all protein pairs in a family as concatenated pseudo-sequences,
and calculate the sequence similarity between all pairs of pseudo-
sequences. The average family similarity is the mean of all the pairwise
comparisons. The box plots show a general trend that the performance is
improved, as expected, as the similarity increases. It is worth noting that
the methods achieve high accuracy even at low sequence similarity, which
may be attributed to the incorporation of structural information

indeed increase as the sequence similarity increases, the method
achieves high accuracy (median AUC > 0.8) even when sequence
similarity is very low, in the so-called twilight zone. This is likely
due to our method’s incorporation of structural information,
such as contact points, which tend to be more conserved during
evolution than sequence similarity for remote homologues.

It is worth noting that in this work, we assume the interacting
domains are already identiﬁed and our method addresses the
question: where are the contact points/residues for the pair of
interacting domains? Domain identiﬁcation is a challenging task
by itself and the performance varies depending on the methods
being used and input data available. The ipHMM, on which our
method is based, was originally developed to identify interacting
domains, and it has reported overall 0.64 and 0.70 sensitivity
and speciﬁcity respectively, and as high as 0.81 sensitivity and
0.97 speciﬁcity for Ext. Ser/Thr-type protein kinase (Friedrich
et al., 2006). As future work, it is possible that we integrate
our method (as a second step) with interacting domain identiﬁ-
cation (as ﬁrst step), namely, by feeding back the prediction of
contact points to verify the domain identiﬁcation, and then using
the improved domain identiﬁcation to enhance contact points
prediction, iteratively.

       

1f6b:A13—197intB13-197 1hur:A5—177ir:it 35-177

 

126x: A5-I 77 int BS-i 77 1263!: A44 75 int 134-175 29”: M3497 int 814'] 97

     

. in
2h16.A15_176intD15,176 2h57:A17-181int3167181 215X=A11-l73intBll*l73

Fig. 7. Nine different protein complexes from the ‘ARF interacting with
ARF’ DDI family. In each complex, we show a pair of interacting pro-
teins. Lines connect interacting residues in the interface. The domain dA
in each PPI is coloured red, and the domain dB is green. Interacting
residues in dA are coloured magenta, and interacting residues in dB are
coloured cyan. Each PPI is labelled with the PDB code of the complex,
the chain name of the sequence containing dA and the one containing at",
and also the coordinates of the two domains within the corresponding
sequences

We present a case study that illustrates the beneﬁts of using the
Fisher vectors followed by supervised learning to produce a
robust model for the contact matrix. Let us analyse the DDI
family that involves ARF—ARF domain interaction. The ARF
(ADP Ribosylation Factor) domain family (Pfam accession
number PF00025) constitutes a family of GTP-binding proteins,
all belonging to the Ras superfamily. They primarily function as
regulators of vesicular trafﬁc and actin remodelling, and are
found interacting with membrane proteins (Pasqualato et al.,
2002). Figure 7 shows the molecular structures of nine protein
pairs that interact through the ‘ARF interacting with ARF’ DDI
interface. Although the nine structures share high structural simi-
larity, the way the interaction occurs in each example exhibit
signiﬁcant variations. For instance, PDB 1f6b shows a complex
interaction with as many as 39 interacting residue pairs. This is
reﬂected in the two dimensional contact matrix for this pair
(Supplementary Fig. S1, ﬁrst row, ﬁrst column), where the 39
contact points are represented as black dots. A similar (but
slightly lower) complexity can be seen in PDB lhur (ﬁrst row,
second column), with 25 contacts, and in PDB 1z6x (second row,
ﬁrst column), with 26 contacts. PDB 2h16 (third row, ﬁrst
column) is an interesting example with a high number of contacts
(40) spread across the interface. At the other side of the spec-
trum, we have PDB lmoz (ﬁrst row, third column) and PDB
2gao (second row, third column), with a looser interaction
(notice how the two proteins appear more separated from each
other), which is reﬂected in a lower number of contact residue

 

1 024

112 /810's112u1no [p.IOJXO'SOIlBIIlJOJUIOIQ/ﬂClllq 111011 pop1201umoq

9IOZ ‘091sn8nv uo ::

The contact matrix

 

pairs (9 and 16, respectively). For illustration, let us predict the
contact points of PDB lmoz using remaining eight structures
for training. By using the baseline method, the family contact
matrix would include all the contacts observed in the training
structures. We show this consensus matrix with black dots
in Supplementary Figure S2 in which the test contact matrix
(PDB lmoz) is shown with red dots. In this case, the consensus
contact matrix would fail to predict each of the real contacts (no
true positives, sensitivity 0%, speciﬁcity 0%). However, when the
training is deferred to the Fisher vectors on interacting match
states (M,) and the ‘All vectors’ algorithm is used, the 34 596
residue pairs in the test contact matrix can be evaluated against
the learned SVM. Inspecting the sorted list of distances to the
hyperplane from higher to lower, we would ﬁnd the ﬁrst two real
contacts in positions 24 and 37. In the ﬁrst 500 predictions, six
contacts will be found, and the ninth (last) contact is found at
position 2607 in the list. This ordering produces an AUC of
98.10%, whereas the baseline produces an AUC of 44.40%.

4 CONCLUSION

We have shown in this work that the contact matrix for a pair
of interacting proteins can be predicted with high accuracy by
combining sequence, structural and evolutionary information in
an integrative manner, as captured in the ipHMMs for the two
protein domain families of these interacting proteins. By devising
Fisher score vectors to represent amino acids at the interacting
domains, our method is capable of extracting characteristic
features without constraining the residues in the rigid multiple
sequence alignments used in the previous methods. This enables
our method to handle residues corresponding to delete and insert
states, and allows for a supervised learning on individual contact
points, eliminating the need of a consensus contact matrix for the
domain families, which has been a main source for false predic-
tions. While designed for predicting contact points between inter-
acting protein domains, the method may be useful as a module
in protein folding and docking, in which a recent study (Marks
et al., 2011) has shown that the co-evolution couplings, distin-
guished from the noise set of observed correlation using max-
imum entropy, provide an excellent indicator for residue—residue
proximity in folded structures. As future work, we will investi-
gate how to adapt the maximum entropy model into the
framework of ipHMM-Fisher-SVM for further improvement
in accuracy.

Funding: Delaware INBRE program, with grants from the
National Center for Research Resources—NCRR
(5P20RR016472—12) and the National Institute of General
Medical Sciences—NIGMS (8 P20 GM103446-12) from the
National Institutes of Health.

Conﬂict of Interest: none declared.

REFERENCES

Aloy,P. and Russell,R. (2002) Interrogating protein interaction networks through
structural biology. Proc. Natl Acad. Sci. U S A, 99, 5896—5901.

Berman,H. et al. (2000) The protein data bank. Nucleic Acids Res., 28, 235—242.

Brannetti,B. et al. (2000) SH3-SPOT: an algorithm to predict preferred ligands to
different members of the SH3 gene family. J. Mol. Biol., 298, 313—328.

Chothia,C. and Janin,J. (1975) Principles of protein-protein recognition. Nature,
256, 705—708.

Eddy,S. (1998) Proﬁle hidden Markov models. Bioinformatics, 14, 755—763.

Ferraro,E. et al. (2006) A novel structure-based encoding for machine-learning
applied to the inference of SH3 domain speciﬁcity. Bioinformatics, 22,
2333—2339.

Finn,R. et al. (2005) inam: visualization of protein-protein interactions in PDB
at domain and amino acid resolutions. Bioinformatics, 21, 410—412.

Finn,R. et al. (2010) The Pfam protein families database. Nucleic Acids Res.
( Database Issue ), 38, D211—D222.

Friedrich,T. et al. (2006) Modeling interaction sites in protein domains with inter-
action proﬁle hidden Markov models. Bioinformatics, 22, 2851—2857.

Gonzalez,A. and Liao,L. (2009) Constrained Fisher scores derived from interaction
proﬁle hidden Markov models improve protein to protein interaction
prediction. In: Proceedings of the First International Conference on
Bioinformatics and Computational Biology (BICoB). International Society for
Computers and their Applications (ISCA), New Orleans, LA, pp. 236—247.

Gonzalez,A. and Liao,L. (2010) Predicting domain-domain interaction based on
domain proﬁles with feature selection and support vector machines. BM C
Bioinformatics, 11, 537.

J aakkola,T. et al. (1999) A discriminative framework for detecting remote protein
homologies. J. Computat. Biol, 7, 95—114.

J ones,S. and Thornton,J. (1996) Principles of protein-protein interactions.
Proc. Natl Acad. Sci. U S A, 93, 13—20.

Kahsay,R. et al. (2005) Discrirninating transmembrane proteins from signal
peptides using SVM-Fisher approach. In: The Proceedings of the Fourth
International Conference on Machine Learning and Applications (ICMLA’05).
Los Angeles, CA, pp. 151—155.

Larsen,T. et al. (1998) Morphology of protein-protein interfaces. Structure, 6,
421—427.

Livingstone,C. and Barton,G. (1993) Protein sequence alignments: a strategy
for the hierarchical analysis of residue conservation. Comput. Appl. Biosci., 9,
745—756.

Marks,D. et al. (2011) Protein 3d structure computed from evolutionary sequence
variation. PLoS ONE, 6, e28766.

Moza,B. et al. (2006) Long-range cooperative binding effects in a T cell receptor
variable domain. Proc. Natl Acad. Sci. U S A, 103, 9867—9872.

Pasqualato,S. et al. (2002) Arf, arl, arp and sar proteins: a family of gtp-binding
proteins with a structural device for ‘front-back’ communication. EMBO Rep.,
3, 1035—1041.

Rabiner,L. (1989) A tutorial on hidden Markov models and selected applications
in speech recognition. Proc. IEEE, 77, 257—286.

Raghavacharil,B. et al. (2008) DOMINE: a database of protein domain inter-
actions. Nucleic Acids Res, 36, D656—D661.

Stein,A. et al. (2010) 3DID: identiﬁcation and classiﬁcation of domain-based inter-
actions of known three-dimensional structure. Nucleic Acids Res, 39,
D718—D723.

Tuncbag,N. et al. (2009) A survey of available tools and web servers for analysis
of protein-protein interactions and interfaces. Brief Bioinform, 10, 217—232.
Weigt,M. et al. (2009) Identiﬁcation of direct residue contacts in protein-protein

interaction by message passing. PNAS, 106, 67—72.

 

1 025

112 /810's112u1no [progxo'sor1eu1101urorq//:d11q 111011 pop1201umoq

9IOZ ‘091sn8nv uo ::

