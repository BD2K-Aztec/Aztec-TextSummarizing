Bioinformatics, 31 (7), 2015, 1 154—1 159

doi: 10.1093/bioinformatics/btv013

Advance Access Publication Date: 25 January 2015
Letter to the Editor

 

Systems biology

Cooperative development of logical modelling
standards and tools with CoLoMoTo

Aurélien Naldi‘, Pedro T. Monteir02'3, Christoph Miissel‘,

the Consortium for Logical Models and Tools*'*, Hans A. Kestler4'5'6,
Denis Thieffry7, loannis Xenarios1'8, Julio Saez-Rodriguezg,

Tomas Helikar10 and Claudine Chaouiya3

1Center for Integrative Genomics (CIG), University of Lausanne, Lausanne, Switzerland, 2Instituto de Engenharia
de Sistemas e Computadores-Investigagao e Desenvolvimento (INESC-ID), Lisbon, Portugal, 3lnstituto Gulbenkian
de Ciéncia (IGC), Deiras, Portugal, 4Medical Systems Biology, Ulm University, Germany, 5Friedrich-Schiller
University Jena, Jena, Germany, 6Leibniz Institute for Age Research, Fritz Lipmann Institute, Jena, Germany,
7Institut de Biologie de I'Ecole Normale Supérieure (lBENS)-UMR CNRS 8197-INSERM 1024, Paris, France, 8Swiss-
Prot & Vital-IT group, Swiss Institute of Bioinformatics (SIB), Lausanne, Switzerland, 9European Molecular Biology
Laboratory, European Bioinformatics Institute, Hinxton, United Kingdom and 10Department of Biochemistry,
University of Nebraska-Lincoln, Lincoln, USA

*To whom correspondence should be addressed.

TThe complete list of members of the Consortium for Logical Models and Tools is provided in the Acknowledgement
secﬁon.

Associate Editor: Igor Jurisica

Received on October 7, 2014; revised on December 17, 2014; accepted on January 5, 2015

Abstract

The identification of large regulatory and signalling networks involved in the control of crucial
cellular processes calls for proper modelling approaches. Indeed, models can help elucidate
properties of these networks, understand their behaviour and provide (testable) predictions by
performing in silico experiments. In this context, qualitative, logical frameworks have emerged as
relevant approaches, as demonstrated by a growing number of published models, along with new
methodologies and software tools. This productive activity now requires a concerted effort to
ensure model reusability and interoperability between tools.

Following an outline of the logical modelling framework, we present the most important achieve-
ments of the Consortium for Logical Models and Tools, along with future objectives. Our aim is to
advertise this open community, which welcomes contributions from all researchers interested in
logical modelling or in related mathematical and computational developments.

Contact: contact@colomoto.org

 

1 Motivation

 

The rapid development of novel biomolecular technologies has fos-
tered the study of complex regulatory systems during the last dec-
ade. Mathematical models have become invaluable tools for
understanding the dynamical behaviour of such systems. There are
various types of formalisms, which differ in the level of detail and
model complexity (de Jong, 2002; Karlebach and Shamir, 2008).

Logical (or logic), discrete models comprise the most abstract dy-
namic models and constitute nowadays a popular modelling frame-
work (for reviews see Bornholdt, 2005; Saadatpour and Albert,
2013; Samaga and Klamt, 2013). In logical models, components are
represented by discrete variables with a small range of possible val-
ues, with the most extreme case being Boolean models, where each
component can be either active or inactive (Kauffman, 1969;

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1154

112 ﬂJO'sleumo[pJOJXO'sopeuuogurorq/ﬁdnq IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

Development of logical modelling standards and tools

1155

 

Thomas, 1973). Regulatory effects are defined by logical rules or
lookup tables. The relative simplicity of these models provides sev-
eral advantages over more complex modelling formalisms, such as
systems of differential equations. In particular, logical models do
not require precise knowledge of kinetic parameters, which makes
them suitable for large models comprising up to several hundreds of
components. Due to their qualitative nature, it is possible to incorp-
orate various kinds of information in logical models. For example,
natural-language statements from publications or expert knowledge
on regulatory interactions can easily be transformed into logical
rules (Helikar et al., 2012).

Although logical models provide a rough approximation of con-
centration levels, they can reproduce the behaviour of many biolo-
gical systems as illustrated in examples of case studies later. The
discrete step functions resulting from simulations of logical models
constitute a plausible simplification of typical sigmoidal response
curves (de Jong, 2002; Thomas and d’Ari, 1990). Biomolecular
measurements can be analysed in the discrete framework by apply-
ing specialized discretization procedures (Shmulevich and Zhang,
2002; Hopfensitz et al., 2012).

Logical models have been successfully applied to a wide range of
regulatory and signalling systems, in a variety of organisms.
Examples include: yeast cell cycle (Davidich and Bornholdt, 2008;
Faure and Thieffry, 2009; Li et al., 2004; Orlando et al., 2008;
Todd and Helikar, 2012), pathogen—host interactions (Franke et al.,
2008; Madrahimov et al., 2012; Thakar et al., 2007), development
of the sea urchin embryo (Peter et al., 2012), development of
Drosophila melanogaster (Albert and Othmer, 2003; Sanchez and
Thieffry, 2001, 2003; Sanchez et al., 2008), mammalian cell cycle
(Faure et al., 2006), murine cardiac development (Herrmann et al.,
2012), determination of cell fates in human (Calzone et al., 2010;
Grieco et al., 2013), multiscale signal transduction in human epithe-
lial cells (Helikar et al., 2013), human T-cell receptor signalling
(Saez-Rodriguez et al., 2007; Zhang et al., 2008) and T-cell differen-
tiation (Naldi et al., 2010).

The Consortium for Logical Models and Tools (CoLoMoTo,
http://colomoto.org) was informally launched during a meeting at
Instituto Gulbenkian de Ciencia (Portugal) in November 2010 to
gather interested scientists and promote the cooperative develop-
ment of shared standards and tools. This meeting was followed by
a second one at the European Bioinformatics Institute (United
Kingdom) in March 2012, which focused more specifically on a
common standard for the exchange of logical model [the Systems
Biology Markup Language (SBML) Level 3 Qualitative Models
or ‘qual’ package, see later]. The third meeting was held at
the University of Lausanne (Switzerland) in April 2014,
bringing together 22 participants from 14 different institutions. It
included sessions devoted to scientific presentations covering
methodological and computational developments, as well as mod-
els for real case applications. In addition, the participants dis-
cussed several topics requiring community consensus, including
the development of standards, collaborative tools and model
repositories.

CoLoMoTo is an international open community that brings to-
gether modellers, curators and developers of methods and tools. It
aims at the definition of standards for model representation and
interchange, and the establishment of criteria for the comparison of
methods, models and tools. Finally, CoLoMoTo seeks to promote
these methods, tools and models.

We first outline the logical modelling approach to then present
the recent achievements of the consortium, as well as the outcomes
of the last meeting regarding future directions.

2 Logical modelling

The definition of qualitative models mainly relies on the network
architectures and does not require precise knowledge about the bio-
logical mechanisms at stake (Samaga and Klamt, 2013). This makes
the logical framework attractive for studying large interaction
networks.

Simulations and analyses of logical models can highlight the key
characteristics of the behaviour of such large systems, but they can-
not make detailed predictions on concentration levels. For such pur-
poses, more complex models, such as biochemical models, may be
more appropriate. These detailed models, in turn, are usually limited
to much smaller networks and require a high amount of information
and measurements. Hence, the purpose of logical modelling is often
to give an overview of a regulatory system and to summarize the
current state of research. They may be complemented by refined
submodels that study parts of the network in detail.

In what follows, we discuss the main distinct ﬂavours of the 10-
gical framework, in what concerns the specification of models and
their dynamics. Properties of interest and current methods for their
analysis are then brieﬂy reviewed.

2.1 Logical models

The development of a logical model for a regulatory and/or signal-
ling network usually starts with the definition of a graph encompass-
ing relevant regulatory components (nodes or vertices) and their
interactions (directed edges or arcs). A variable is associated
with each component to denote its concentration or activity level.
A logical function (or logical rule) defines the evolution (target value
of the corresponding variable) of each component, depending on the
levels of its regulators.

In Boolean models, all variables are binary (0 or 1), (Kauffman,
1969; Thomas, 1973; Bornholdt, 2005), whereas in multivalued
models, variables can take additional (discrete) values (Thomas,
1991). This extension is useful to account for distinct functional lev-
els of a regulator when, for instance, it targets different components.

The definition of the logical rules may be difficult as combined
effects of interactions targeting the network components are often
hard to obtain. Some models are thus limited to specific classes of
functions that derive from the network architecture. This is the case
of threshold functions successfully applied to cell cycle modelling
(Li et al., 2004; Bornholdt, 2008) or canalyzing functions as dis-
cussed in Kauffman et al. (2003). To handle uncertainty,
Shmulevich et al. (2002) proposed to randomly select the logical
functions, according to predefined specifications. Finally, Random
Boolean Networks, where both interactions and logical functions
are randomly assigned, are employed to study global properties of
certain classes of networks (Kauffman, 1993).

2.2 Logical states and dynamics

The current state of a logical model is encoded in a vector giving the
levels of all components. As the number of integer values allowed
for each variable is finite (and usually small), the state space is also
finite. The evolution of each component at a given state is deter-
mined by its logical function but may also depend on the updating
policy.

In the synchronous policy, all components are updated simultan-
eously, leading to a deterministic behaviour, where each state has at
most one successor. With the asynchronous policy, only one compo-
nent is updated at a given time i.e. a state has as many successors
as the number of components called to update. More sophisticated
policies have been proposed, which can be deterministic

112 ﬂJO'sleumo[pJOJXO'sopeuuogurorq/ﬁdnq IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

1156

A.Naldi et al.

 

(e.g. synchronous block-sequential as in Robert, 1986; Aracena
et al., 2013), yield multiple successors (e.g. asynchronous priority
classes, Faure et al., 2006) or introduce stochastic choices (e.g. ran-
domly selecting a successor from those enabled by the asynchronous
policy, Harvey and Bossomaier, 1997). An exhaustive list of these
policies is beyond the scope of this letter, but it is important to real-
ize that model behaviour may substantially change with the choice
of updating.

2.2.1 Logical framework extensions
Brieﬂy described later are a few of the extensions that have been
proposed to extend the scope of the formalism.

Time delays were an early concern of R. Thomas [see Thomas
and d’Ari (1990) and Thomas (2013) for a recent discussion]. As a
matter of fact, several extensions of the logical framework intend to
integrate kinetic information. For example, Siebert and Bockmayr
(2006) considered constraints on delays associated with variables
updates. Boolean models can also be extended by associating dis-
crete time delays with the inputs of the transition functions, hence
incorporating asynchronism in a synchronous updating policy
(Helikar and Rogers, 2009; Mussel et al., 2014).

In Peter et al. (2012), temporal as well as spatial constraints are
simply expressed in the form of additional logical rules.

In classical Boolean networks, external components (input nodes
with no regulator) are fixed at 0 or 1 for the duration of the simula-
tion. Alternatively, the values of these external components can be set
according to a probabilistic distribution over time to cope with vari-
able environmental conditions. Furthermore, the activity levels of indi-
vidual model components can be defined as the ratio of 0’s and 1’s
over a number of time steps and thereby enable analyses mimicking
experimental dose—response curves (Helikar et al., 2012).

Finally, logical models can be refined and translated into con-
tinuous models with similar dynamical properties by generating
standardized ordinary differential equations based on the logical
rules (Di Cara et al., 2007; Wittmann et al., 2009; Ouattara et al.,
2010). Such continuous models introduce numerous parameters,
which then need to be defined or estimated. Alternatively, piece-
wise-linear differential equations (PLDEs) (Glass and Kauffman,
1973) approximate the switch-like properties of regulatory inter-
actions. PLDE can be simulated using the Genetic Network
Analyser (de Jong et al., 2003), provided that qualitative relation-
ships between parameters are defined.

2.3 Analysis of logical models
A first important property of a logical model is the repertoire of its
asymptotic behaviours, namely its attractors. Attractors are sets of
states from which the system cannot escape. They are often assumed
to denote biologically relevant behaviours (Hopfensitz et al., 2013).
For example, stable states may describe cell fates such as differenti-
ation or apoptosis, whereas complex attractors may represent oscil-
latory properties e.g. cell division cycle or circadian rhythms
(Huang, 1999). Alternative stable states have been associated with
multiple differentiated T-helper subtypes (Naldi et al., 2010), with
specific expression patterns associated with the different segments of
fruit ﬂy embryo (Albert and Othmer, 2003), with different cardiac
progenitor cells (Herrmann et al., 2012) and with cell fates in re-
sponse to death receptor engagement (Calzone et al., 2010). In con-
trast, Faure et al. (2006) associated a complex cyclic attractor with
the oscillatory behaviour of the mammalian cell cycle.

Reachability properties are also of high interest. They represent
the capability of the model to generate particular trajectories.

For example, one can analyse the model to identify a trajectory from
an initial condition towards a specific attractor. Hereafter, we pre-
sent some approaches to assess the dynamical properties of logical
models.

2.3.1 Dynamical analysis

The dynamics of a logical model can be conveniently represented by
a state transition graph (STG), where nodes denote states, whereas
arcs denote enabled state transitions. Each transition may involve
the update of one or more components, as determined by the logical
regulatory functions and the updating policy.

Dynamical properties can be obtained through the analysis of
the STG reachable from a set of initial states (or all possible states
for the complete STG). In this STG, an attractor corresponds to a
terminal strongly connected component (SCC), defined as a max-
imal set of states such that each state can be reached from all other
states and with no transition leaving this set of states.

Whenever a terminal SCC encompasses a unique state, the at-
tractor is a stable state, whereas an SCC containing at least two
states denotes a cyclic attractor. To ease the identification of attrac-
tors and the analysis of STG structures, compact representations can
be generated, including SCC graphs, or more compressed hierarch-
ical transition graphs (Bérenguier et al., 2013).

Moreover, efficient data structures greatly facilitate the identifi-
cation of the attractors in Boolean models (Garg et al., 2008).

To mitigate the combinatorial explosion of the state space, Stoll
et al. (2012) proposed a Boolean Kinetic Monte-Carlo algorithm,
which applies a continuous time Markov process to a Boolean state
space. By assigning a transition rate to each component and con-
sidering time as a real number, it uses Monte-Carlo simulations to
compute the temporal evolution of probability distributions and to
estimate the stationary distribution of logical states.

The verification of reachability properties quickly becomes time
consuming even for small models, calling for semi-automated meth-
ods. One popular approach is model checking (Clarke et al., 2000),
which has been widely used for the verification of software and
hardware systems during the last 30 years. More recently, model
checking has been successfully applied to logical models (Bernot
et al., 2004; Monteiro and Chaouiya, 2012), as well to piecewise-
linear differential models (Batt et al.,2005), and Petri nets (Gilbert
et al., 2007), among others.

2.3.2 Static analysis

Methods were proposed to deduce dynamical information from the
model itself, rather than computing explicit state transitions. In this
context, the first question of interest is the identification of attrac-
tors, which is currently the subject of intense research.

Stable states are independent of the updating policy, have a sim-
ple formal definition and can be efficiently computed using con-
straint-solving methods (Devloo et al., 2003; Naldi et al., 2007) or
polynomial algebra (Veliz-Cuba et al., 2010). In contrast, complex
attractors depend on the updating policy and are more tricky to
compute, in particular in the asynchronous case. A number of meth-
ods have been proposed recently for their identification, including
an efficient SAT-based algorithm for the synchronous case
(Dubrova and Teslenko, 2011). The notion of stability has been
generalized from single states to subspaces of states (Siebert, 2011)
with applications in model reduction and attractor detection. Like
stable states, stable subspaces are independent of the updating policy
and can be computed by constraint-solving methods (Zaﬁudo and
Albert, 2013; Klarner et al., 2014).

112 /810'S{12umo[p101x0'831112u1101urorq/ﬁd11q 111011 pepeolumoq

910K ‘09 lsnﬁnV uo ::

Development of logical modelling standards and tools

1157

 

Table 1. Software tools that support the SBML qual format, either directly or through the LogicalModel library

 

 

Tool Reference Main features

BoolNet Miissel et al. (2010) R package for the construction, analysis and simulation of Boolean networks, includes a variety
of updating schemes.

The Cell Collective Helikar et al. (2012) Web-based platform for the construction, simulation, and analysis of Boolean-based models.

CellNetAnalyser Klamt et al. (2007) MATLAB toolbox providing a graphical user interface with various computational methods and
algorithms for exploring structural and functional properties of metabolic, signalling,
and regulatory networks.

CellNOpt Terfve et al. (2012) Free open-source (R/BioConductor, Python, and Cytoscape) tool to train logical models to
experimental data, using Boolean, Fuzzy-logic and ODE formalisms.

GINsim Naldi et al. (2009) Java application for the construction and analysis of multivalued logical models.

MaBoSS Stoll et al. (2012) C++ software for the simulation of continuous time Markov processes directly derived from
Boolean models.

BoolSim Di Cara et al. (2007) Efﬁcient identiﬁcation of all the attractors (stable states and cyclic attractors).

SQUAD Construction of continuous dynamical models from logical models.

 

An updated list with further descriptions and links is maintained at CoLoMoTo’s website (http://colomoto.org/software).

Multistability (existence of multiple attractors) or sustained os-
cillations (or homeostasis) require the presence of positive or nega-
tive regulatory circuits in the corresponding network (Thomas,
1981; Thieffry, 2007; Remy et al., 2008). The connection between
network topology and dynamics is currently studied by several
groups. It can be used to deduce dynamical properties, at least in
some specific cases (Comet et al., 2013).

Finally, model reduction techniques aim at deriving simpler
models preserving most dynamical properties. In this respect, auto-
mated reduction methods facilitate this process by properly rewrit-
ing logical rules (Naldi et al. , 201 1).

3 Standard and tools

While numerous independent software packages supporting logical
models have been proposed over the years, no standard existed for
exchanging models between them. The CoLoMoTo consortium was
created to foster the design of such standards. Collaborative efforts
within CoLoMoTo already led to a novel model exchange format,
SBML qual, along with a standard Java LogicalModel library to
handle logical models.

SBML qual (Qualitative Models package for SBML) is an exten-
sion of the SBML Level 3 standard (Hucka et al., 2003). It is de-
signed for the representation of multivalued qualitative models of
biological networks (Chaouiya et al., 2013a,b). After various meet-
ings and refinements by logical modelling software developers, this
new package was accepted by the SBML community in 201 1 and fi-
nally approved by the SBML Editors in the spring of 2013. SBML
qual is supported in libSBML (Bornstein, 2008) and JSBML (Drager
et al., 2011). Models encoded in SBML qual can be submitted to the
BioModels database, which also includes a branch dedicated to non-
metabolic models automatically generated from pathway resources
(Chelliah et al., 2013; Buchel et al., 2013).

The SBML qual format supports the definition of the model itself
as a list of components (or SBML species), each with a maximum
value and an optional initial value. Interactions between these com-
ponents and logical rules complete the model definition. This first
version thus accounts for generic multivalued logical models. The
extensions brieﬂy described in Section 2 and simulation settings (e.g.
updating mode, perturbations, etc.) are not yet supported. It is the
goal of the consortium to tackle these issues.

The LogicalModel library provides a reference implementation
of logical models as supported by SBML qual, relying on logical
functions and decision diagrams. While SBML qual is the main

supported format, the API enables the definition of additional im-
port and export formats. The LogicalModel library can thus act as a
format conversion module for tools that do not support SBML qual
directly. It is freely available at https://github.com/colomoto/logical-
model. As shown in Table 1, several tools can now exchange logical
models thanks to the new SBML qual format and this conversion
tool.

4 Conclusions and prospects

Logical modelling of biological regulatory networks constitutes a
very active field involving scientists with diverse interests, ranging
from methodological developments and computational implementa-
tions to biological applications. With the aim to foster synergies be-
tween these multiples developments, the Consortium for the
development of Logical Models and Tools (CoLoMoTo) was
launched 4 years ago and already delivered the following results: (i)
the definition of the SBML Level 3 Qualitative Modelling (SBML
qual) package for the representation of multivalued qualitative mod-
els of biological networks and (ii) the implementation of the stand-
ard LogicalModel library, which can be used by various modelling
and simulation tools.

During the last meeting in April 2014, it was decided to organize
CoLoMoTo activities along four main axes.

The first axis aims at standardization. The reproducibility of re-
sults is enforced by defining and extending standards for the repre-
sentation and interchange of models and their simulation
parameters. Useful enhancements of SBML qual have already been
discussed by the community. Improvements considered include the
definition of models where rules are not (all) instantiated, models
for which timing constraints (or rates) are specified, etc. In addition,
further integration with core SBML Level 3 concepts will be needed.
In particular, such integration would facilitate support of hybrid
models, which combine features of both discrete and continuous for-
malisms. This activity is developed in close connection with the
COmputational Modeling in BIology NEtwork community, which
drives the development of standards for model interchange. One fu-
ture direction addresses the issue of exchanging simulation settings
for logical models, using the simulation experiment description
markup language (Waltemath et al., 2011). Moreover, the adoption
of the kinetic simulation algorithm ontology (KiSAO) will permit a
better description of the algorithms, their parameters and relation-
ships (Courtot et al., 2011). Finally, CoLoMoTo is currently work-
ing on the definition of a controlled vocabulary (ontology) covering

112 /810'S{12umo[p101x0'831112u1101utotq/ﬁd11q 111011 pepeolumoq

910K ‘09 lsnﬁnV uo ::

1158

A.Naldi et al.

 

the essential terms related to logical modelling, with textual defin-
itions and corresponding references.

The second axis aims at defining an umbrella model repository
with links to existing model repositories. Authors of manuscripts
describing new logical models will be encouraged to publish their
models in one of these repositories.

The third axis consists in defining benchmarks for the compari-
son of models and tools. Furthermore, successful modelling collab-
orations between experimentalists and modellers will be
documented, in order to guide novel projects.

The fourth axis is the creation of a repository of methods and
tools that are made available by the different research groups work-
ing on logical modelling. This repository should not only list the dif-
ferent features and functionalities provided by each of the tools and
methods but also provide guidelines for the selection of tools and
methods suitable for typical use cases.

A recently launched portal (http://colomoto.org) provides access
to the reports of the CoLoMoTo meetings, a list of all involved re-
search groups, as well as methods and tools available for the logical
formalism. An important current aim consists in reaching more sci-
entists and making them aware of existing models, methods and
tools, which could be used for their own research lines. We thus con-
clude this letter by warmly inviting the international community
interested in logical modelling to participate in future CoLoMoTo
activities.

Acknowledgements

Members of the Consortium for Logical Models and Tools: Reka Albert,
Matteo Barberis, Laurence Calzone, Claudine Chaouiya, Anastasia Chasapi,
Thomas Cokelaer, Isaac Crespo, Julien Dorier, Andreas Drager, Tomas
Helikar, Celine Hernandez, Michael Hucka, Hidde de Jong, Sarah M.
Keating, Hans A. Kestler, Steffen Klamt, Hannes Klarner, Reinhard
Laubenbacher, Nicolas Le Novére, Pedro T. Monteiro, Christoph Mussel,
Aurélien Naldi, Anne Niknejad, Nicolas Rodriguez, Julio Saez-Rodriguez,
Heike Siebert, Gautier Stoll, Denis Thieffry, loannis Xenarios, Jorge G. T.
Zaﬁudo.

Funding

We acknowledge the ﬁnancial support from the Fundagao Calouste
Gulbenkian, the European Commission [FP6 NoEs ENFIN LSHG-CT-2005-
518254], the European Bioinformatics Institute (EMBL-EBI), the European
Union through the BioPreDyn project to JSR [ECFP7-KBBE-2011-5 grant No
289434], Swiss State Secretariat for Research and Innovation,
AgeBrainSysBio contract No [305299] and SystemsX.ch-Swiss Systems
Biology Initiative which made the three CoLoMoTo meetings possible.

Conﬂict of Interest: none declared.

References

Albert,R. and Othmer,H. (2003) The topology of the regulatory interactions
predicts the expression pattern of the segment polarity genes in Drosophila
melanogaster. ]. Theor. Biol., 223, 1—18.

Aracena,J. et al. (2013) On the number of different dynamics in Boolean net-
works with deterministic update schedules. Math. Biosci., 242, 188—94.

Batt,G. et al. (2005 ) Validation of qualitative models of genetic regulatory net-
works by model checking: analysis of the nutritional stress response in
Escherichia coli. Bioinformatics, 21 (Suppl. 1), i19—i28.

Bérenguier,D. et al. (2013) Dynamical modeling and analysis of large cellular
regulatory networks. Chaos, 23, 025114.

Bernot,G. et al. (2004) Application of formal methods to biological regulatory
networks: extending Thomas’ asynchronous logical approach with temporal
logic. ]. Theor. Biol., 229, 339—348.

Bornholdt,S. (2005) Systems biology. Less is more in modeling large genetic
networks. Science, 310, 449—451.

Bornholdt,S. (2008) Boolean network models of cellular regulation: prospects
and limitations. ]. R. Soc. Interface, 5 (Suppl. 1), 585—94.

Bornstein,B.J. A. (2008) LibSBML: an API library for SBML. Bioinformatics,
24, 880—881.

Buchel,F. et al. (2013) Path2Models: large-scale generation of computational
models from biochemical pathway maps. BMC Syst. Biol., 7, 1 16.

Calzone,L. et al. (2010) Mathematical modelling of cell-fate decision in re-
sponse to death receptor engagement. PLoS Comput. Biol., 6, e1000702.

Chaouiya,C. et al. (2013a) Qualitative models, Version 1 Release 1. http://
identiﬁers.org/combine.speciﬁcations/sbml.level-3.version-1.qual.version-1 .
release-1 (26 January 2015, date last accessed).

Chaouiya,C. et al. (2013b) SBML qualitative models: a model representation
format and infrastructure to foster interactions between qualitative model-
ling formalisms and tools. BMC Syst. Biol., 7, 135.

Chelliah,V. et al. (2013) BioModels database: a repository of mathematical
models of biological processes. Methods. Mol. Biol., 1021, 189—199.

Clarke,E. et al. (2000) Model Checking. MIT Press, Cambridge, MA.

Comet,J.-P. et al. (2013) On circuit functionality in Boolean networks. Bull.
Math. Biol., 75, 906—919.

Courtot,M. et al. (2011) Controlled vocabularies and semantics in systems
biology. Mol. Syst. Biol., 7, 543.

Davidich,M.I. and Bornholdt,S. (2008) Boolean network model predicts cell
cycle sequence of ﬁssion yeast. PLoS One, 3, e1672.

de Jong,H. (2002) Modeling and simulation of genetic regulatory systems: a
literature review. ]. Comput. Biol., 9, 67—103.

de Jong, H. et al. (2003) Genetic network analyzer: qualitative simulation of
genetic regulatory networks. Bioinformatics, 19, 336—344.

Devloo,V. et al. (2003) Identiﬁcation of all steady states in large networks by
logical analysis. Bull. Math. Biol., 65, 1025—1051.

Di Cara,A. et al. (2007) Dynamic simulation of regulatory networks using
SQUAD. BMC Bioinformatics, 8, 462.

Drager,A. et al. (201 1) JSBML: a ﬂexible Java library for working with SBML.
Bioinformatics, 27, 2167—2168.

Dubrova,E. and Teslenko,M. (2011) A SAT-based algorithm for ﬁnding at-
tractors in synchronous Boolean networks. IEEE/ACM Trans. Comput.
Biol. Bioinform., 8, 1393—1399.

Fauré,A. et al. (2006) Dynamical analysis of a generic Boolean model for the
control of the mammalian cell cycle. Bioinformatics, 22, e124—e131.

Fauré,A. and Thieffry,D. (2009) Logical modelling of cell cycle control in eu-
karyotes: a comparative study. Mol. BioSyst., 5, 1569—1581.

Franke,R. et al. (2008) Host-pathogen systems biology: logical modelling of
hepatocyte growth factor and Helicohacter pylori induced c-met signal
transduction. BMC Syst. Biol., 2, 4.

Garg,A. et al. (2008) Synchronous versus asynchronous modeling of gene
regulatory networks. Bioinformatics, 24, 1917—1925.

Gilbert,D. et al. (2007) A unifying framework for modelling and analysing
biochemical pathways using Petri nets. In: Calder,M. and Gilmore,S. (eds.)
CMSB, Vol. 4695 of Lecture Notes in Bioinformatics. Berlin, pp. 200—216.

Glass,L. and Kauffman,S. (1973) The logical analysis of continuous non-linear
biochemical control networks. ] Theor. Biol., 39, 103—129.

Grieco,L. et al. (2013) Integrative modelling of the inﬂuence of MAPK net-
work on cancer cell fate decision. PLoS Comput. Biol., 9, e1003286.

Harvey,I. and Bossomaier,T. (1997) Time out of joint: attractors in asynchron-
ous random Boolean networks. In: Husbands,P. and Harvey,I. (eds) 4th
European Conf. on Artiﬁcial Life (ECAL). MIT Press, Cambridge, pp. 67—75.

Helikar,T. et al. (2012) The cell collective: toward an open and collaborative
approach to systems biology. BMC Syst. Biol., 6, 96.

Helikar,T. et al. (2013) A comprehensive, multi-scale dynamical model of
ErbB receptor signal transduction in human mammary epithelial cells. PLoS
One, 8, e61757.

Helikar,T. and Rogers,J.A. (2009) ChemChains: a platform for simulation
and analysis of biochemical networks aimed to laboratory scientists. BMC
Syst. Biol., 3, 58.

112 /810'S{12umo[p101x0'831112u1101utotq/ﬁd11q 111011 pepeolumoq

910K ‘09 lsnﬁnV uo ::

Development of logical modelling standards and tools

1159

 

Herrmann,F. et al. (2012) A Boolean model of the cardiac gene regulatory net-
work determining ﬁrst and second heart ﬁeld identity. PLoS One, 7,
e46798.

Hopfensitz,M. et al. (2012) Multiscale binarization of gene expression data
for reconstructing Boolean networks. IEEE/ACM Trans. Comput. Biol.
Bioinform., 9, 487—498.

Hopfensitz,M. et al. (2013) Attractors in Boolean networks—a tutorial.
Comput. Stat., 28, 19—36.

Huang,S. (1999) Gene expression proﬁling, genetic networks, and cellular
states: an integrating concept for tumorigenesis and drug discovery. ]. Mol.
Med., 77, 469—480.

Hucka,M. et al. (2003) The systems biology markup language (SBML): a me-
dium for representation and exchange of biochemical network models.
Bioinformatics, 19, 524—531.

Karlebach,G. and Shamir,R. (2008) Modelling and analysis of gene regulatory
networks. Nat. Rev. Mol. Cell Biol., 9, 770—780.

Kauffman,S. et al. (2003) Random Boolean network models and the yeast
transcriptional network. Proc. Natl Acad. Sci. USA., 100, 14796—14799.
Kauffman,S.A. (1969) Metabolic stability and epigensis in randomly con-

structed genetic nets. ]. Theor. Biol., 22, 437—467.

Kauffman,S.A. (1993) The Origins of Order: Self-Organization and Selection
in Evolution. Oxford University Press, New York.

Klamt,S. et al. (2007) Structural and functional analysis of cellular networks
with cellnetanalyzer. BMC Syst. Biol., 1, 2.

Klarner,H. et al. (2014) Computing symbolic steady states of Boolean net-
works. In: Cellular Automata, Vol. 8751 of Lecture Notes in Computer
Science, pp. 561—570.

Li,F. et al. (2004) The yeast cell-cycle network is robustly designed. Proc. Natl
Acad. Sci. USA, 101, 4781—4786.

Madrahimov,A. et al. (2012) Dynamics of inﬂuenza virus and human host
interactions during infection and replication cycle. Bull. Math. Biol., 75,
988—1011.

Monteiro,P.T. and Chaouiya,C. (2012) Efﬁcient veriﬁcation for logical models
of regulatory networks. In: PACBB’12, Vol. 154 of Advances in Intelligent
and Soft Computing, pp. 25 9—267.

Miissel,C. et al. (2010) BoolNet—an R package for generation, reconstruction
and analysis of Boolean networks. Bioinformatics, 26, 1378—1380.

Miissel,C. et al. (2014) BoolNet: generation, reconstruction, simulation and
analysis of synchronous, asynchronous, and probabilistic Boolean net-
works. R package version 2.0. http://cran.r-project.org/web/packages/
BoolNet/index.html (26 January 2015, date last accessed).

Naldi,A. et al. (2007) Decision diagrams for the representation and analysis of
logical models of genetic networks. In: CMSB, Vol. 4695 of Lecture Notes
in Computer Science, pp. 233—247.

Naldi,A. et al. (2009) Logical modelling of regulatory networks with GINsim
2.3. Biosystems, 97, 134—139.

Naldi,A. et al. (2010) Diversity and plasticity of the cell types predicted from
regulatory network modelling. PLoS Comput. Biol., 6, e1000912.

Naldi,A. et al. (2011) Dynamically consistent reduction of logical regulatory
graphs. Theor. Comput. Sci., 412, 2207—2218.

Orlando,D.A. et al. (2008) Global control of cell-cycle transcription by
coupled CDK and network oscillators. Nature, 453, 944—947.

Ouattara,D.A. and Aothers (2010) From structure to dynamics: frequency
tuning in the p5 3-Mdm2 network. 11 Differential and stochastic approaches.
]. Theor. Biol., 264, 1177—1189.

Peter,I.S. et al. (2012) Predictive computation of genomic logic processing
functions in embryonic development. Proc. Natl Acad. Sci. USA, 109,
16434—16442.

Remy,E. et al. (2008) Graphic requirements for multistability and attractive
cycles in a Boolean dynamical framework. Adv. Appl. Math., 41, 335—350.
Robert,F. (1986) Discrete Iterations: A Metric Study. Vol. 6. Springer-Verlag,

Berlin.

Saadatpour,A. and Albert,R. (2013) Boolean modeling of biological regula-
tory networks: a methodology tutorial. Methods, 62, 3—12.

Saez-Rodriguez,J. et al. (2007) A logical model provides insights into T cell re-
ceptor signaling. PLoS Comput. Biol., 3, e163.

Samaga,R. and Klamt,S. (2013) Modeling approaches for qualitative and
semi-quantitative analysis of cellular signaling networks. Cell Commun.
Signal., 11, 43.

Sénchez,L. et al. (2008) Segmenting the ﬂy embryo: logical analysis of the role
of the segment polarity cross-regulatory module. Int. ]. Dev. Biol., 52,
1059—1075.

Sénchez,L. and Thieffry,D. (2001) A logical analysis of the drosophila gap-
gene system. ]. Theor. Biol., 211, 115—141.

Sénchez,L. and Thieffry,D. (2003) Segmenting the ﬂy embryo: a logical
analysis of the pair-rule cross-regulatory module. ]. Theor. Biol., 224,
517—537.

Shmulevich,I. et al. (2002) Probabilistic Boolean networks: a rule-based
uncertainty model for gene regulatory networks. Bioinformatics, 18,
261—274.

Shmulevich,I. and Zhang,W. (2002) Binary analysis and optimization-based
normalization of gene expression data. Bioinformatics, 18, 5 5 5—5 65 .

Siebert,H. (2011) Analysis of discrete bioregulatory networks using symbolic
steady states. Bull. Math. Biol., 73, 873—898.

Siebert,H. and Bockmayr,A. (2006) Incorporating time delays into the logical
analysis of gene regulatory networks. In: CMSB, Vol. 4210 of Lecture
Notes in Computer Science, pp. 169—183.

Stoll,G. et al. (2012). Continuous time Boolean modeling for biological signal-
ing: application of Gillespie algorithm. BMC Syst. Biol., 6, 1 16.

Terfve,C.D.A. et al. (2012) CellNOptR: a ﬂexible toolkit to train protein sig-
naling networks to data using multiple logic formalisms. BMC Syst. Biol., 6,
133.

Thakar,J. et al. (2007) Modeling systems-level regulation of host immune re-
sponses. PLoS Comput. Biol., 3, e109.

Thieffry,D. (2007) Dynamical roles of biological regulatory circuits. Brief.
Bioinform., 8, 220—225.

Thomas,R. (1973) Boolean formalization of genetic control circuits. ]. Theor.
Biol., 42, 563—585.

Thomas,R. (1981) On the relation between the logical structure of systems
and their ability to generate multiple steady states or sustained oscillations.
In: Della Dora,J. et al. (eds.) Numerical Methods in the Study of Critical
Phenomena. Springer, Berlin Heidelberg, pp. 180—193.

Thomas,R. (1991) Regulatory networks seen as asynchronous automata: a lo-
gical description. ]. Theor. Biol., 153, 1—23.

Thomas,R. (2013) Remarks on the respective roles of logical parameters and
time delays in asynchronous logic: an homage to El Houssine Snoussi. Bull.
Math. Biol., 75, 896—904.

Thomas,R. and d’Ari,R. ( 1990) Biological Feedback. CRC Press, Boca Raton,
Florida, USA, pp. 316.

Todd,R.G. and Helikar,T. (2012) Ergodic sets as cell phenotype of budding
yeast cell cycle. PLoS One, 7, e45 780.

Veliz-Cuba,A. et al. (2010) Polynomial algebra of discrete models in systems
biology. Bioinformatics, 26, 1637—1643.

Waltemath,D. et al. (2011) Reproducible computational biology experiments
with SED-ML — the simulation experiment description markup language.
BMC Syst. Biol., 5, 198.

Wittmann,D. et al. (2009) Transforming Boolean models to continuous mod-
els: methodology and application to T-cell receptor signaling. BMC Syst.
Biol., 3, 98.

Zaﬁudo,J.G.T. and Albert,R. (2013) An effective network reduction approach
to ﬁnd the dynamical repertoire of discrete dynamic networks. Chaos, 23,
0251 1 1 .

Zhang,R. et al. (2008) Network model of survival signaling in large granular
lymphocyte leukemia. Proc. Natl Acad. Sci. USA, 105, 16308—16313.

112 /810'S{12umo[p101x0'831112u1101utotq/ﬁd11q 111011 pepeolumoq

910K ‘09 lsnﬁnV uo ::

