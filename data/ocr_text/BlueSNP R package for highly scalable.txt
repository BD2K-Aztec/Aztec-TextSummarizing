APPLICATIONS NOTE

Vol. 29 no. 1 2013, pages 135—136
doi: 10. 1093/bioinformatics/bt3647

 

Genetics and population analysis

Advance Access publication November 29, 2012

BlueSNP: R package for highly scalable genome-wide association

studies using Hadoop clusters

Hailiang Huang”, Sandeep Tata3 and Robert J. Prill1’*

1Healthcare Informatics, IBM Almaden Research Center, San Jose, CA 95120, 2Analytic and Translational Genetics Unit,
Massachusetts General Hospital, Boston, MA 02114 and 3Information Management, IBM Almaden Research Center,

San Jose, CA 95120, USA

Associate Editor: Jeffrey Barrett

 

ABSTRACT

Summary: Computational workloads for genome-wide association
studies (GWAS) are growing in scale and complexity outpacing the
capabilities of single-threaded software designed for personal com-
puters. The BlueSNP R package implements GWAS statistical tests in
the R programming language and executes the calculations across
computer clusters configured with Apache Hadoop, a de facto stand-
ard framework for distributed data processing using the MapReduce
formalism. BlueSNP makes computationally intensive analyses, such
as estimating empirical p-values via data permutation, and searching
for expression quantitative trait loci over thousands of genes, feasible
for large genotype—phenotype datasets.
Availability and implementation:
bioinformatics/bluesnp

Contact: rjprill@us.ibm.com
Supplementary information: Supplementary data are available at
Bioinformatics online.

http://github.comﬁbm-

Received on July 18, 2012; revised on October 18, 2012; accepted on
October 26, 2012

1 INTRODUCTION

Depending on the study design and statistical methodology,
GWAS statistics can be handily computed on a personal com-
puter, or require substantially greater computational resources.
Usually, study designs and statistical methodologies that entail
massive computation are avoided for practical reasons. Yet,
there are times when intensive computation can not be avoided.
An example of a computationally demanding task is estimating
empirical p-Values Via data permutation when a test statistic does
not follow a standard distribution. Up to 108 permutations of the
data can be required to assess genome-wide signiﬁcance, a mas-
sive computational burden. Another example is in the analysis of
expression quantitative trait loci (eQTL) study designs with tens
of thousands of gene expression phenotypes (Schadt et al., 2003).

The superb genetics software, PLINK (Purcell et al., 2007), is
an open-source whole genome association analysis program writ-
ten in C++ that is extremely fast and efficient at computing com-
monplace association statistics (e. g. allelic test, linear regression,
etc.). However, it can be a logistical challenge to run PLINK on
computer clusters, manually partitioning large jobs into sub-parts
and stitching-together potentially thousands of output ﬁles.

 

*To whom correspondence should be addressed.

MapReduce is a parallel programming methodology for split-
ting a large problem into sub-parts (the map step), computing
partial solutions on sub-parts independently, then assembling the
partial solutions into the overall solution (the reduce step).
Fortunately, a GWAS analysis is usually decomposable into
small independent sub-parts—for example, single-SNP associ-
ation tests assume independence of SNPs—making it straight-
forward to apply MapReduce. Apache Hadoop (http://hadoop.
apache.org), an open-source MapReduce implementation, solves
three technical problems confronted by developers of parallel
algorithms: it handles the distributed storage of large data, it
handles the scheduling of jobs and re-scheduling of failed jobs,
and the limited expressiVity of the MapReduce formalism sim-
pliﬁes parallel program design. Hadoop is a de facto standard
framework for big-data analytics and is gaining popularity in
bioinformatics (Langmead et al., 2009; Schadt et al., 2010).
Hadoop instances can be provisioned on-demand from ‘cloud
computing’ service providers.

We introduce the BlueSNP R package which distributes
GWAS computation over a cluster conﬁgured with the
Hadoop framework, making computationally intensive analyses
feasible for large genotype—phenotype datasets. Genetics re-
searchers can utilize the association tests provided with BlueSNP
or supply a novel association test as a user-deﬁned R function.
BlueSNP removes the complexity of interacting with the cluster,
freeing the researcher to focus on advanced analytics using the R
programming environment (R Core Team, 2011).

1.1 BlueSNP architecture and core functionality

The BlueSNP R package sits atop a software stack that hides the
details of interacting with a multiplicity of multi-core processors
from the user (Fig. l). Proceeding from the bottom up, Hadoop

 

BlueSNP {R Package} GWAS functions

 

 

Rhipe {Ft Package} Ft — Hedeep interface

 

 

 

 

Distributed storage and

comp ute tram e work

I l
l l
| R ‘ Programming language
I Hadoop Distributed F5 and MapReduce I

 

 

 

Made 1 Made 2 . I. ' Node N Physical preseason;
| | | | | | l | | “"“ﬂi‘mml

Fig. 1. BlueSNP builds upon packages and frameworks for parallel pro-
gramming and big-data analytics

 

 

 

 

 

 

 

 

 

 

 

© The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 135

112 ﬁhO'srcumo[pJOJXO'sor1chOJurorw/2d11q IIIOJJ popcorn/hog

910K ‘09 lsnﬁnV no :2

H.Huang et al.

 

Table 1. Minutes to test 1M SNPs in 10K individuals

 

 

Phenotypes 10 Nodes 20 Nodes 40 Nodes
1 3.6 2.7 1.6
10 14.0 8.2 4.7
100 128.2 65.2 33.7

 

5 Map cores, 2 reduce cores, 1 unused core per node.

handles the distributed data storage and the distributed task
management. The RHIPE R package (http://www.datadr.org)
provides a facility for authoring and running MapReduce pro-
grams from within the R environment (Guha, 2010). BlueSNP
builds upon RHIPE, providing high-level GWAS functions suit-
able for genetics researchers who might not have an interest in
the low-level details of parallel programming.

Example 1. Analysing many phenotypes

Some study designs, for example, expression QTL studies which
treat gene expression values as quantitative phenotypes, can in-
volve analysing thousands of phenotypes. Manually distributing
tens to thousands of separate GWAS jobs over a computer clus-
ter and collating the separate outputs would be time-consuming
and error-prone. Using BlueSNP, scaling from one phenotype to
thousands of phenotypes is automatic, as is the generation of
collated reports of p-Values, test statistics, etc.

The R syntax for analysing one phenotype or thousands of
phenotypes is identical, the crucial difference being the dimen-
sions of the phenotype data structure. Analysing many pheno-
types is a simple matter of supplying a matrix of phenotype
values, one phenotype per column (one sample per row), to the
gwas function. The gwas function is called with parameters
specifying the locations of the input and output ﬁles/directories
on the Hadoop distributed ﬁle system (HDF S):

gwas (genotype .hdfs .path = " /snps " ,
phenotype . hdfs . path = " /phenotypes .

RData",
output .hdfs .path = " /output " ,
method 2 " qt . linear . regression" )

P <— gwas . results ( " /output " , type="p .value")

In this example, linear regression is performed for all SNP-
phenotype pairs and a table of p-Values is retrieved. Collating
voluminous data (e. g. the outputs of many statistical tests) into ac-
tionable reports is a particular strength of the Hadoop framework.

On our 40-node cluster it took 34 min to analyse 100 pheno-
types using a linear regression association test on 106 simulated
SNPs in 104 individuals (Table 1). In most of our performance
assessments, the time to analyse a given number of phenotypes
was halved by doubling the number of compute nodes, indicating
near-optimal scaling. (See Supplementary Material for a compre-
hensive performance assessment and machine speciﬁcations.)

Example 2. Empirical p-values by data permutation

When test statistic does not follow a standard distribution, or if
small sample size renders a standard distribution unreliable,

 

TE]
1
I:
D

 

 

 

w .
n. _ , i“
E 1 _
'L

m E - ~ tn. m
E ‘ '5
m ' ‘. ‘ e
E r: _ n — m I
‘D m ‘ n
e — a o -
U D ﬁDFﬂ-Fuﬂyﬁiﬁ____. _ ‘-
n " I I I I

HF 105 1e? 1t]a

Permutations (leg seats}

Fig. 2. In adaptive permutation, the pool of candidate SNPs decreases as
p-Value estimates become more precise. Running time increases with the
number of permutations but is substantially faster than in exhaustive
permutation

Monte Carlo methods can be used to estimate empirical
p-Values. Monte Carlo methods are conceptually simple but com-
putationally expensive. The null distribution of any test statistic
can be estimated by observing the test statistic for many instances
of random data that preserve some essential aspects of the real
data. In practice, the BlueSNP functions for estimating empirical
p-Values shuﬁle the phenotype vector to randomize the bivariate
distribution of genotype and phenotype while preserving the uni-
variate distributions.

BlueSNP computes both exhaustive and adaptive
permutation-based p-Values. Adaptive permutation drops
non-signiﬁcant SNPs from subsequent rounds of permutation,
vastly decreasing the number of calculations and therefore the
running time compared with exhaustive permutation. The con-
cept of adaptive permutation is well established; our MapReduce
implementation of adaptive permutation is novel. Calculations
are periodically rebalanced over the cluster nodes to maximize
processor utilization.

On our 40-node cluster, it took 7.6h to estimate empirical
p-Values to precision 510—8 using linear regression on the dataset
described in Table 1. With adaptive permutation, a 10-fold in-
crease in the number of permutations takes much less than a 10-
fold increase in time (Fig. 2). This efﬁcient permutation frame-
work opens the door to novel user-deﬁned association tests that
do not rely on the assumed validity of standard distributions.
Any user-deﬁned function of genotype and phenotype can be a
test statistic.

Funding: H.H., ST. and R.J.P. funded by IBM Research.

Conﬂict of Interest: none declared.

REFERENCES

Guha,S. (2010) Computing environment for the statistical analysis of large and
complex data. PhD Thesis, Department of Statistics, Purdue University, West
Lafayette, IN, USA.

Langmead,B. et al. (2009) Searching for SNPs with cloud computing. Genome Biol.,
10, R134.

Purcell,S. et al. (2007) Plink: a tool set for whole-genome association and
population-based linkage analyses. Am. J. Hum. Genet, 81, 559—575.

R Core Team. (2011) R: a language and environment for statistical computing.
R Foundation for Statistical Computing, Vienna, Austria.

Schadt,E.E. et al. (2003) Genetics of gene expression surveyed in maize, mouse and
man. Nature, 422, 297—302.

Schadt,E.E. et al. (2010) Computational solutions to large-scale data management
and analysis. Nat. Rev. Genet, 11, 647—57.

 

136

112 ﬁhO'spaumo[pJOJXO'sot1emJOJutotw/2d11q won pepeorumoq

910K ‘09 lsnﬁnV uo :2

