Bioinformatics, 31 (8), 2015, 1307—1309

doi: 10.1093/bioinformatics/btu820

Advance Access Publication Date: 10 December 2014
Applications Note

 

Sequence analysis

repDNA: a Python package to generate various
modes of feature vectors for DNA sequences by
incorporating user-defined physicochemical
properties and sequence-order effects

Bin Liu1'2'3'*, Fule Liu1, Longyun Fang1, Xiaolong Wang1'2 and
Kuo-Chen Chou3'4'*

1School of Computer Science and Technology and 2Key Laboratory of Network Oriented Intelligent Computation,
Harbin Institute of Technology Shenzhen Graduate School, Shenzhen, Guangdong 518055, China, 3Gordon Life
Science Institute, Belmont, MA 02478, USA and 4Center of Excellence in Genomic Medicine Research (CEGMR),
King Abdulaziz University, Jeddah, 21589, Saudi Arabia

*To whom correspondence should be addressed.
Associate Editor: John Hancock

Received on October 1, 2014; revised on November 5, 2014; accepted on December 5, 2014

Abstract

Summary: In order to develop powerful computational predictors for identifying the biological fea-
tures or attributes of DNAs, one of the most challenging problems is to find a suitable approach to
effectively represent the DNA sequences. To facilitate the studies of DNAs and nucleotides, we de-
veloped a Python package called representations of DNAs (repDNA) for generating the widely used
features reflecting the physicochemical properties and sequence-order effects of DNAs and nucleo-
tides. There are three feature groups composed of 15 features. The first group calculates three nu-
cleic acid composition features describing the local sequence information by means of kmers; the
second group calculates six autocorrelation features describing the level of correlation between
two oligonucleotides along a DNA sequence in terms of their specific physicochemical properties;
the third group calculates six pseudo nucleotide composition features, which can be used to repre-
sent a DNA sequence with a discrete model or vector yet still keep considerable sequence-order in-
formation via the physicochemical properties of its constituent oligonucleotides. In addition, these
features can be easily calculated based on both the built-in and user-defined properties via using
repDNA.

Availability and implementation: The repDNA Python package is freely accessible to the public at
http://bioinformatics.hitsz.edu.cn/repDNA/.

Contact: bliu@insun.hit.edu.cn or kcchou@gordonIifescience.org

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

1 Introduction

With the avalanche of biological sequences generated in the
post-genomic age, one of the most challenging problems in compu-
tational biology is how to formulate a biological sequence with a
discrete model or vector, yet still keep considerable sequence-order

information. This is because almost all the existing machine-learning
algorithms were developed to handle vector but not sequence sam-
ples. However, a vector defined in a discrete model may completely
lose all the sequence-order information. To avoid completely losing
the sequence-order information for proteins, the pseudo amino acid

©The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1307

112 [3.10811211an[plOJXO'SODBIILIOJIITOTQ/ﬂ(11111 wort pepeolumoq

910K ‘09 lsnﬁnV no :2

1308

B.Liu et al.

 

composition or PseAAC (Chou, 2001, 2005) was propose. Ever
since the concept of PseAAC was proposed in 2001, it has been
widely used in almost all the areas of computational proteomics [see
e.g. (Cao et al., 2013) as well as a long list of references cited in a re-
cent article (Du et al., 2014)]. Encouraged by the successes of using
PseAAC to deal with protein/peptide sequences, a natural question
has occurred: how to use the similar approach to deal with DNA se-
quences? Actually, this problem had been encountered in various
genome analysis studies, such as DNA recombination spot identifi-
cation (Chen et al., 2013; Qiu et al., 2014), prediction of nucleo-
some positioning in genomes (Guo et al., 2014), investigation of
nucleosome organization’s functions (Chen et al., 2010) and pro-
moter prediction (Zhou et al., 2013; Lin et al., 2014).

Since various features derived from DNA sequences have been
increasingly used for developing different models to analyze many
genome analysis problems, recently a web server called pseudo
k-tupler nucleotide composition (PseKNC) (Chen et al., 2014) was
established to generate PseKNC. However, PseKNC is limited to a
certain kind of features without the function of user-defined physi-
cochemical properties.

In this study, we proposed an open source Python package called
representations of DNAs (repDNA), which implemented a selection
of sophisticated DNA features, including 15 different kinds of fea-
tures in three categories. To our best knowledge, repDNA is the first
Python package computing comprehensive DNA features based on
the built-in and user-defined physicochemical properties. The
repDNA package may hold very high potential for enhancing the

Table 1. Fifteen feature vectors of DNA data calculated by repDNA

power in dealing with many problems in computational genomics
and genome sequence analysis.

2 Package description

Fifteen different features derived from DNA sequences can be com-
puted by repDNA package, which can be grouped into three catego-
ries (Table 1). The first category nucleic acid composition includes
three kinds of features: basic kmer, reverse compliment kmer and
increment of diversity (ID). The nucleic acid composition features
describe the local sequence information by means of kmers (subse-
quences of DNA sequences). The second category autocorrelation
includes six kinds of features: dinucleotide-based auto covariance
(DAC), dinucleotide-based cross covariance (DCC), dinucleotide-
based auto-cross covariance (DACC), trinucleotide-based auto
covariance (TAC), trinucleotide-based cross covariance (TCC) and
trinucleotide-based auto-cross covariance (TACC). The autocorrel-
ation features describe the level of correlation between two oligo-
nucleotides along a DNA sequence in terms of their specific
physicochemical properties. The third category pseudo nucleotide
composition contains six kinds of features: pseudo dinucleotide
composition (PseDNC), PseKNC, parallel correlation PseDNC (PC-
PseDNC), PC-pseudo trinucleotide composition (PC-PseTNC), ser-
ies correlation PseDNC (SC-PseDNC) and series correlation
PseTNC (SC-PseTNC). The pseudo nucleotide composition features
can be used to represent a DNA sequence with a discrete model or
vector yet still keep considerable sequence-order information,

 

Category Feature

Dimensiona

Description

 

Nucleic acid composition Basic kmer 4"

Reverse compliment kmer {

ID 2k
Autocorrelation DAC N ‘“‘ LAG
DCC N(N—1)‘"‘LAG
DACC NZ‘tLAG
TAC N T LAG
TCC N(N—1)‘"‘LAG
TACC NZ‘tLAG
Pseudo nucletide composition PseDNC 16 —|— 2
PseKNC 4k +2
PC-PseDNC 16 + 2
PC-PseTNC 64 + 2
SC-PseDNC 16 + 2N
SC-PseTNC 64 + 2N

22k—1(k :
2%1 + 2k—1(k = 2,4,...)

k-tuple nucleotide composition

1,3,...)

A variant of the basic kmer, in which the kmers are not
expected to be strand-speciﬁc, so reverse complemen-
tary are collapsed into a single feature

Measuring the relation between target sequence and
standard source based on kmers

Incorporating the correlation of the same property be-
tween two dinucleotides

Incorporating the correlation of the different properties
between two dinucleotides

Combination of DAC and DCC

Incorporating the correlation of the same property be-
tween two trinucleotides

Incorporating the correlation of the different properties
between two trinucleotides

Combination of TAC and TCC

Combining dinucleotide composition and global se-
quence-order effects

Improving PseDNC by incorporating k-tuple nucleotide
composition

Improving PseDNC by incorporating 38 built-in prop-
erties and user-deﬁned properties

Combining trinucleotide composition and global se-
quence-order effects by parallel correlation

Combining dinucleotide composition and global se-
quence-order effects by series correlation

Combining trinucleotide composition and global se-
quence-order effects by series correlation

 

alThe dimension of the feature vector depends on the parameter values of the algorithm and the number of physicochemical properties used, where k means the

k value of kmer; N is the total number of physicochemical properties; LAG is the maximum value of lag (lag = 1, 2,. . ., LAG), where lag is the distance between

two oligonucleotides along a DNA sequence; 2 represents the highest counted rank (or tier) of the correlation along a DNA sequence. For more information of

these algorithms, parameters and physicochemical properties, please refer to online Supplementary information 51.

112 [3.10811211an[plOJXO'SODBIILIOJIITOTQ/ﬂ(11111 wort pepeolumoq

910K ‘09 lsnﬁnV no :2

repDNA for computing comprehensive DNA features

1309

 

particularly the global or long-range sequence-order information,
via the physicochemical properties of its constituent oligonucleo-
tides. In the second and third categories, 38 dinucleotide physico-
chemical properties and 12 trinucleotide physicochemical properties
have been used for calculating the corresponding features. Besides
these built-in properties, the user-defined properties can also be used
to calculate these features.

There are four modules in the repDNA package, including util,
nac, ac and psenac. The util module contains several basic functions
manipulating DNA data, including reading DNA data from files or
list (a data structure in Python), checking the validity and normaliz-
ing the user-defined physicochemical indices, etc. The three modules
nac, ac and psenac respond to the calculation of the 15 different fea-
tures from three feature categories. In order to use the repDNA
package to calculate these features as needed, the users need to im-
port the appropriate class from the corresponding module, construct
a responding object and then call the corresponding methods to cal-
culate these features. A user guide for how to use repDNA is given
in online Supplementary information 51.

As mentioned earlier, one of the main advantages of repDNA is
that the user-defined physicochemical properties can be used to
calculate the 12 features in autocorrelation category and pseudo
nucleotide composition category. The user-defined properties should
be normalized by normalize_index function in module util, and then
the normalized properties will be stored in a dictionary (a data struc-
ture in Python), which can be directly used as the user-defined prop-
erty to calculate the aforementioned features.

The repDNA was written by the pure Python language, which is
a free, cross-platform language with a clean and uniform syntax.
Furthermore, there are many public available Python packages of
machine-learning algorithms. Therefore, it is convenient for users to
construct their own predictors by using repDNA and these machine-
learning packages. Some examples of how to construct computa-
tional predictors for some specific tasks by using repDNA are given
in online Supplementary information 52.

3 Conclusion

To facilitate the studies of DNA and nucleotides, repDNA was
proposed, which is able to generate various feature vectors for DNA
sequences. The performance and efficiency of the various features in
repDNA have been validated by a series of recent publications

(Chen et al., 2013, 2014). The implementation of each algorithm in
repDNA has been extensively tested by a large number of testing
DNA sequences, and the output results were compared with the
known values of these sequences to make sure that our implementa-
tion is correct.

Funding

This work was supported by the National Natural Science Foundation of
China [grant no 61300112, 61370010 and 61272383] and the Scientific
Research Foundation for the Returned Overseas Chinese Scholars, State
Education Ministry.

Conﬂict of Interest: none declared.

References

Cao,D.S. et al. (2013) Propy: a tool to generate various modes of Chou’s
PseAAC. Bioinformatics, 29, 960—962.

Chen,W. et al. (2010) The organization of nucleosomes around splice sites.
Nucleic acids Res., 38, 278 8—2798.

Chen,W. et al. (2013) iRSpot-PseDNC: identify recombination spots with
pseudo dinucleotide composition. Nucleic Acids Res., 41, e68.

Chen,W. et al. (2014) PseKNC: a ﬂexible web server for generating pseudo
K-tuple nucleotide composition. Anal. Biochem., 456, 5 3—60.

Chou,K.C. (2001) Prediction of protein cellular attributes using pseudo amino
acid composition. Proteins, 43, 246—255. See Erratum: ibid., (2001).
Proteins, 44, 60.

Chou,K.C. (2005 ) Using amphiphilic pseudo amino acid composition to
predict enzyme subfamily classes. Bioinformatics, 21, 10—19.

Du,P. et al. (2014) PseAAC-General: fast building various modes of general
form of Chou’s pseudo-amino acid composition for large-scale protein data-
sets. Int. ]. Mol. Sci., 15, 3495—3506.

Guo,S.H. et al. (2014) iNuc-PseKNC: a sequence-based predictor for predict-
ing nucleosome positioning in genomes with pseudo k-tuple nucleotide com-
position. Bioinformatics, 30, 1522—1529.

Lin,H. et al. (2014) iPr054-PseKNC: a sequence-based predictor for identify-
ing sigma-54 promoters in prokaryote with pseudo k-tuple nucleotide com-
position. Nucleic Acids Res., 42, 12961—12972.

Qiu,W.R. et al. (2014) iRSpot-TNCPseAAC: identify recombination spots
with trinucleotide composition and pseudo amino acid components. Int. ].
Mol. Sci., 15, 1746—1766.

Zhou,X. et al. (2013) Predicting promoters by pseudo-trinucleotide compos-
itions based on discrete wavelets transform. ]. Theor. Biol., 319, 1—7.

112 ﬂJO'sleumo[pJOJXO'sopeuuogutoiq/ﬁdnq wort pepeolumoq

910K ‘09 lsnﬁnV no 22

