Bioinformatics Advance Access published July 19, 2016

Bioinformatics, 2016, 1—3

doi: 10.1093/bioinformatics/btw379

Advance Access Publication Date: 4 July 2016
Applications Note

 

 

Genome analysis

Icarus: visualizer for de novo assembly

evaluation

Alla Mikheenko‘, Gleb Valinz, Andrey Priibelski‘, Vladislav Saveliev1

and Alexey Gurevich1'*

1Center for Algorithmic Biotechnology, Institute of Translational Biomedicine, St. Petersburg State University,
St. Petersburg, Russia, 199034 and 2 Department of Mathematics and Information Technology, St. Petersburg
Academic University, Russian Academy of Sciences, St. Petersburg, Russia, 194021

*To whom correspondence should be addressed.
Associate Editor: Bonnie Berger

Received on April 13,2016; revised on May 25,2016; accepted on June 10,2016

Abstract

Summary: Data visualization plays an increasingly important role in NGS data analysis. With ad—
vances in both sequencing and computational technologies, it has become a new bottleneck in gen—
omics studies. Indeed, evaluation of de novo genome assemblies is one of the areas that can benefit
from the visualization. However, even though multiple quality assessment methods are now avail—
able, existing visualization tools are hardly suitable for this purpose. Here, we present Icarus—a novel
genome Visualizer for accurate assessment and analysis of genomic draft assemblies, which is based
on the tool QUAST. Icarus can be used in studies where a related reference genome is available, as
well as for non—model organisms. The tool is available online and as a standalone application.
Availability and Implementation: http://cab.spbu.ru/software/icarus

Contact: aleksey.gurevich@spbu.ru

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Dozens of assembly algorithms have been developed in recent years,
unfortunately none of them is perfect. Several evaluation studies
(Bradnam et 61]., 2013; Earl et 61]., 2011; Magoc et 61]., 2013;
Salzberg et 61]., 2012) showed that genome size, coverage depth,
sequencing technology and many other aspects may dramatically af—
fect quality of genome assembly. Thus, it is challenging to create a
universal assembly approach, and an everyday tool for assembly
evaluation and comparison is needed for choosing the best algo—
rithm for a specific experiment.

QUAST (Gurevich et 61]., 2013) is a commonly used tool for
quality assessment of genome assembly. It computes a full range of
assembly quality metrics such as N50, number of erroneous contigs,
covered genes, etc. One of the main drawbacks of the tool is a lack
of proper visualization of assemblies and their alignment to the ref—
erence genome.

Genome browsers have proven to be instrumental in genomic
studies (Nielsen et 61]., 2010). It is not a coincidence that there are

now a great variety of interactive visualization tools, which include
UCSC Genome Browser (Speir et 61]., 2016), Integrative Genome
Viewer (Robinson et 61]., 2011) and many others. The most success—
ful genome browsers are adapted to specific analysis goals, and it is
unlikely that a universal tool for genomics analysis is practical
(Nielsen et 61]., 2010).

Special classes of interactive graphical tools are genome annotat—
ing sofware, such as Web Appolo (Lee et 61]., 2013), and sequence
finishing applications, such as Consed (Gordon et 61]., 1998). These
programs allow users not only to browse genome sequences, but
also to edit them in place. However, the later examples are more
complicated in use than regular genome browsers, and intented for
experienced users. In addition, some of these tools are proprietary
software, which also limits its usage by a wider community.

We present Icarus, a lightweight browser for draft assemblies ex—
ploration and evaluation. Icarus is integrated in QUAST and com—
plements its output with interactive visualizations of assembly
alignments to the reference genome, and various features detected

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com l

91% ‘09 1sn3nv uo sepﬁuv s01 ‘arulomag aIo Amie/qua 112 /§.IO'S[BLLIHO[p.IOJXO'SODBIHJOJUIOIQ/ﬁdllq 11101; prBOIUAAOG

A.Mikheenko et al.

 

by QUAST (e.g. misassemblies). Icarus is an open—source software
and it is freely available as a web tool and as a command—line utility.

2 Methods

Icarus pipeline consists of the following steps (see Supplementary
Fig. 1):

1. Running QUAST: aligning contigs to the reference (if available),
gene ﬁnding, detecting assembly errors;

2. Post—processing: detecting similarities between the assemblies;

3. Creating JavaScript—based web pages.

Icarus outputs two types of interactive HTML files: contig align-
ment viewer and contig size viewer. Each viewer contains at least
two panes: an assembly overview with all contigs shown at full
scale, and a pane where users can zoom into any region of interest.
Both panes display all assemblies in several tracks next to each
other. The viewers support standard genome browser functionality:
navigating, dragging, zooming, clicking on elements for detailed in-
formation such as contig name, type and length. Specific features of
each viewer are described below. Examples of Icarus output for
assemblies of B.impatiens, Sameus and CAMI (http://cami—chal
demonstrated in the

lenge.org) metagenomic dataset are

Supplementary Material and on our website.

2.1 Contig alignment viewer

This type of viewer is available only if a reference genome is pro—
vided. If the genome consists of large chromosomes ( 250 Mb), each
sequence is displayed in a separate viewer. This is also true for mul-
tiple reference genomes (see Mikheenko et al., 2016). An example of
the viewer is given in Figure 1.

Main me no

Move ca: a: '2 3} zoom +5):

Icarus

QUAST Contig Browser

+ 21-:

The contig alignment viewer places contigs according to their map—
ping to the reference genome produced by Nucmer aligner (Kurtz et al.,
2004). The color scheme is designed to differentiate between correct
contigs (green or blue) and contigs with assembly errors (misassemblies,
red or orange). Misassembled contigs are broken into correctly aligned
blocks, so users can easily identify and switch between blocks of the
same erroneous contig. The side of the block with the misassembly
event is highlighted. Icarus supports all types of misassembly events de—
tected by QUAST (relocations, inversions, etc). Users can show and
hide all blocks containing specific types of misassemblies.

If several assemblies are provided, Icarus identifies all contigs
that are similar in most of the assemblies and colors them in blue
(for correct contigs) or orange (for misassembled ones). This feature
helps researchers and assembly algorithms developers to see analo—
gies between various assembly approaches. Details of Icarus similar-
ity identification algorithm and examples of its performance are
presented in the Supplementary Material.

The viewer can additionally visualize genes, operons and read
coverage distribution along the genome using two additional tracks.
The annotation track helps to understand which assembly contains
more functional elements, and whether any of them are not covered
by any assemblies at all. The coverage distribution track helps to
monitor behaviour of assembly algorithms in regions of extremely
high or low coverage.

2.2 Contig size viewer

This type of viewer shows contigs sorted by size in descending order.
This ordering is suitable for comparing the largest contigs (which
are the most interesting ones in most genomic studies). The viewer
also labels the commonly used assembly quality statistics, N50 and
N75. If the approximate genome length for the organism is known,

—2)I —5X 90 It} Eﬂﬂfﬁi'll'l-EIIE 141035?-1?EQEBE

Show misassemblies:  relocations i9} transiocations [Di  inversions ED}  local {1)

 

Contig alignment viewer. Contig: aligned to "Staphylococcus aureus"

 

ABySB item]
leiruih: ewe-ea
contigs: 119
misassemblies.: 3+0

sebum... ssn_sseu3_rssa174... 5311;...

 

 

 

 

 

Name: NUDE_5_EE ngth_1?593 2_cI;I-.r_1 2
11.43_lD_ﬁB-|l-1

Type: misassembled [both sides}

 

snide-I Elm]
IEIrIgII'I: 2113951112
contigs: 58
misassernblies: 3+1

 

MODEL... |

 

Paslllon:1530.?2 -15¢4.0B kbp
(Staphyqu aumus]

 

reloronoaﬂ 030?16— ‘I 544033 [13

 

WWII [ten]
length: 213900

contigs: 339
misassemblies.: 3+0

 

 

 Im-I Him-I iii

 

Staphtrlococcu Laurens {25121159 boil
1 l

 

NDDEJQIL... none. mouse... 353’ bi”
contig: 53 1'31— 3'2 0981113 1363} hp

ID'I': 139.99 '3":

 

I— I l i
1410.?6 1445.55 1431151 1515.41 1550.33 1555.22
Show reno coverage

 

I I I
1520.11 1555.01 15813.9

I 1
1?24.?9 ‘I?59.EB Itbp

Eloclts: EI-

AHﬁS HWF— 'lnl It “III-ill I I “ ll lml' I" I I l' T l i '5) i:' I'W'Ti'lmml'tll'FI-n l"r lull-'l'l'lmll'll I _' I .., _ in,
gem IIIHI HI I I I nﬂii i r III I I III III -' HI I I II' '  '“f'

 

 

 

why.“ IiilllIi 11 Iili Ii- 1 Hill] I iIliI ii in Hill 1 Iiiil III II I E Iii-Ii Iii Iii: Ii -'I ll Illiiﬂllil' 'll'il mlililillﬂliﬂilliillﬂililllilii III 1.
cl] 3:5 1I 1:5 é 2:5 392 him relocation. inconsistency = 9503-16
Hid, 3°00 estates .-
ens)
EIIID
% relocation. inconsistency - 43631113
moo _
g + PDBHIIJrI: EBBRT—T-‘Eliiii itin-
U 2090 {Slﬁphytﬂms_ﬂumusji
I I I l I l I
{I 05 1 1 5 2 2.5 292 lulu:

Fig. 1. An example of the contig alignment viewer for ABySS (Simpson et al., 2009), SPAdes (Bankevich et al., 2012) and Velvet (Zerbino and Birney, 2008) assem-
blies of S.aureus single-cell dataset from Chitsaz et al. (2011). The top grey panel shows Icarus controls for moving and zooming, and it also includes checkboxes
for showing and hiding all types of detected misassemblies. The right grey panel presents details of the selected block. In this example, the highlighted block is a
fragment of the misassembled contig NODE_5, which consists of three misassembled blocks. Users can expand detailed information on these blocks on this
panel, or switch to any of them in the detailed view pane. The main viewer section is divided into four panels. From top to bottom: detailed assembly view, de-
tailed read coverage (minimized to ‘Show read coverage' button here), assembly overview and read coverage overview. Most of the contigs are correct (colored
green and blue), but the assembly overview panel clearly shows that there are two regions where all three assemblers generate erroneous contigs (misassem-
blies, colored red and orange). One of these regions is depicted on the detailed assembly view. The orange color of ABySS and SPAdes misassembled blocks
means that they have similar mappings to the reference. Worth noting that Velvet also made a misassembly at the same position, but its contig is shorter

9mg ‘09 1sn3nv uo sepﬁuv s01 ‘orulomeg aIo Amie/gun 112 /3.IO'S[BUJHOIpJOJXO'SOilBIHJOJUIOIQ/ﬂdllq 11101; prBOIUAAOG

Icarus

 

NG50 and NG75 are also labelled (see Gurevich et al. (2013) for de—
tails). If the full reference genome is provided, the viewer shares the
coloring scheme with the contig alignment viewer in order to high-
light correctly mapped contigs (green blocks), unaligned contigs
(grey blocks) and misassembled contigs (red blocks). Misassembly
breakpoints are marked with dashed lines. All blocks are linked to
their representations in the alignment viewer, allowing to quickly
navigate between the viewers.

3 Conclusion

Inspired by genomic data browsing software, we developed Icarus—
a browser for quality assessment and comparison of draft assem—
blies. Icarus engine is based on QUAST, a tool for de novo genome
assembly evaluation, and complements its output with interactive
visualizations of contig alignments, features and errors. As an open
source project, our web—based and command—line tool can be easily
utilized by the research community. We believe that Icarus will also
help developers of assembly algorithms to improve their methods.

Acknowledgement

We would like to thank Shaun Jackman for substantial feedback on our
software.

Funding

This work was supported by St. Petersburg State University, St. Petersburg,
Russia [grant number 15.61.951.2015].

Conﬂict of Interest: none declared.

References

Bankevich,A. et al. (2012) SPAdes: a new genome assembly algorithm and its
applications to single-cell sequencing. ]. Comput. Biol., 19, 455—477.

Bradnam,K. et al. (2013) Assemblathon 2: evaluating de novo methods of gen-
ome assembly in three vertebrate species. Gigascience, 2, 10.

Chitsaz,H. et al. (201 1) Efﬁcient de novo assembly of single-cell bacterial gen-
omes from short-read data sets. Nat. B iotecknol., 29, 915—921.

Earl,D. et al. (2011) Assemblathon 1: a competitive assessment of de novo
short read assembly methods. Genome Res., 21, 2224—2241.

Gordon,D. et al. (1998) Consed: a graphical tool for sequence ﬁnishing.
Genome Res., 8, 195—202.

Gurevich,A. et al. (2013) QUAST: quality assessment tool for genome assem-
blies. Bioinformatics, 29, 1072—1075.

Kurtz,S. et al. (2004) Versatile and open software for comparing large gen-
omes. Genome Biol., 5, R12.

Lee,E. et al. (2013) Web Apollo: a web-based genomic annotation editing plat-
form. Genome Biol., 14, R93.

Magoc,T. et al. (2013) GAGE-B: an evaluation of genome assemblers for bac-
terial organisms. Bioinformatics, 29, 1718—1725.

Mikheenko,A. et al. (2016) MetaQUAST: evaluation of metagenome assem-
blies. Bioinformatics, 32, 108 8—1 090.

Nielsen,C. et al. (2010) Visualizing genomes: techniques and challenges. Nat.
Methods, 7, 85—815.

Robinson,]. et al. (2011) Integrative genomics Viewer. Nat. Biotechnol., 29,
24—26.

Salzberg,S. et al. (2012) GAGE: A critical evaluation of genome assemblies
and assembly algorithms. Genome Res., 22, 55 7—5 67.

Simpson,]. et al. (2009) ABySS: a parallel assembler for short read sequence
data. Genome Res., 19, 1 1 17—1 123.

Speir,M. et al. (2016) The UCSC Genome Browser database: 2016 update.
Nucleic Acids Res., 44, D717—D725.

Zerbino,D. and Birney,E. (2008) Velvet: algorithms for de novo short read as-
sembly using de Bruijn graphs. Genome Res., 18, 821—829.

91% ‘09 1sn3nv uo sepﬁuv s01 ‘121u10m123 310 [(1319111qu 112 /§.IO'S[BU.IT10[p.IOJXO'SOilBIHJOJUIOIQ/ﬁdllq 11101; pep1201umoq

