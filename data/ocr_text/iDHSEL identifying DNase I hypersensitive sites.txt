Bioinformatics, 32(16), 2016, 2411—2418

doi: 10.1093/bioinformatics/btw186

Advance Access Publication Date: 8 April 2016
Original Paper

 

Sequence analysis

iDHS-EL: identifying DNase I hypersensitive
sites by fusing three different modes of pseudo
nucleotide composition into an ensemble
learning framework

Bin Liu1'2'3'*, Ren Long1 and Kuo-Chen Chou3'4

1School of Computer Science and Technology, Harbin Institute of Technology Shenzhen Graduate School,
Shenzhen, Guangdong 518055, China, 2Key Laboratory of Network Oriented Intelligent Computation, Harbin
Institute of Technology Shenzhen Graduate School, Shenzhen, Guangdong 518055, China, 3Gordon Life Science
Institute, Belmont, MA 02478, USA and 4Center of Excellence in Genomic Medicine Research (CEGMR), King
Abdulaziz University, Jeddah 21589, Saudi Arabia

*To whom correspondence should be addressed.
Associate Editor: John Hancock

Received on January 22, 2016; revised on March 26, 2016; accepted on April 3, 2016

Abstract

Motivation: Regulatory DNA elements are associated with DNase I hypersensitive sites (DHSs).
Accordingly, identification of DHSs will provide useful insights for in—depth investigation into the
function of noncoding genomic regions.

Results: In this study, using the strategy of ensemble learning framework, we proposed a new pre—
dictor called iDHS-EL for identifying the location of DHS in human genome. It was formed by fusing
three individual Random Forest (RF) classifiers into an ensemble predictor. The three RF operators
were respectively based on the three special modes of the general pseudo nucleotide composition
(PseKNC): (i) kmer, (ii) reverse complement kmer and (iii) pseudo dinucleotide composition. It has
been demonstrated that the new predictor remarkably outperforms the relevant state—of—the—art
methods in both accuracy and stability.

Availability and Implementation: For the convenience of most experimental scientists, a web ser—
ver for iDHS-EL is established at http://bioinformatics.hitsz.edu.cn/iDHS—EL, which is the first web—
server predictor ever established for identifying DHSs, and by which users can easily get their
desired results without the need to go through the mathematical details. We anticipate that iDHS-
EL will become a very useful high throughput tool for genome analysis.

Contact: bliu@gordonIifescience.org or bliu@insun.hit.edu.cn

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

1 Introduction

In genetics, DNase I hypersensitive sites (DHSs) are the regions of
chromatin that are sensitive to cleavage by the DNase I enzyme. In
these specific regions of the genome, chromatin has lost its condensed
structure. As a consequence, the corresponding DNA region will be-
come more exposing and easier to be accessible by enzymes, such as
DNase I, and hence enhance its degradation. These accessible

chromatin zones are functionally related to transcriptional activity be—
cause of the necessity to bind With proteins, such as transcription fac—
tors. Since its discovery about 30 years ago (Wu et 61]., 1979), DHSs
have been used as the markers for detecting the regulatory DNA
regions.

In general, these specific regions are usually nucleosome—free and
associated With a Wide variety of genomic regulatory elements, such

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2411

9mg ‘09 1sn3nv uo sepﬁuv $01 ‘etulomeg JO Amie/xtqu 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIHJOJUTOTQ/ﬁ(1111] 11101; pepeommoq

2412

B.Liu et al.

 

as promoters, enhancers, insulators, silencers and suppressors (Chen
et al., 2016b; Felsenfeld, 1992; Felsenfeld and Groudine, 2003;
Gross and Garrard, 1988; Liu et al., 2016b). Accordingly, one ef—
fective approach for discovering functional DNA elements from the
noncoding sequences is to identify DHSs.

The gold—standard approach for identifying DHS is the Southern
blot technique, but it is a tricky, time—consuming and inaccurate to
acquire the DHS information by using the Southern blot approach
(Crawford et al., 2006). In 2010, by combining the DNase I diges—
tion and high throughput sequencing technology, the DNase—seq
technique was proposed (Song and Crawford, 2010), leading to a re—
markable enhance in resolution. Unfortunately, there is no effective
methodology for analysing the DNase—seq data (Madrigal and
Krajewski, 2012). Therefore, one has to resort to the computational
approaches for identifying DHSs. In fact some efforts have been
made in this regard. For example, Noble et al. (2005) proposed a
predictor based on the Support Vector Machine (SVM) in which the
nucleotide composition was used to formulate the feature vector for
predicting DHSs in K562 cell line. Recently, by using the pseudo nu—
cleotide composition (PseKNC) (Chen et al., 2014c, 2015; Liu et al.,
2015d), which was developed based on the idea of pseudo amino
acid composition for proteins (Chou, 2001a), Feng et al. (2014) pro—
posed a more powerful predictor to identify DHSs by incorporating
both the local and global sequence—order effects of DNA.

Although the aforementioned computational approaches yielded
quite encouraging results, and they did stimulate the development of
this area, some further work is needed due to the following reasons.
(i) These existing methods were based on different features extracted
from a DNA sequence, and hence lacking the elegance and efficiency
of uniform treatment; in other words, a new framework is needed to
combine them into one framework. (ii) None of these methods has
ever provided a web—server or stand—alone tool, and hence their
practical usage value is quite limited, particularly for the majority of
experimental biologists (Chou, 2015).

This study was initiated in an attempt to address these shortcom—
ings by developing a more powerful and also more uniform pre-
dictor for identifying DHSs. As manifested in a series of recent
publications (Chen et al., 2016a; Jia et al., 2016a,b,c; Liu et al.,
2015b,f, 2016a,b,c; Xiao et al., 2015), to develop a really useful se—
quence—based statistical predictor for a biological system and also to
make the developing process logically clearer and easier to follow,
according to Chou’s five—step guidelines (Chou, 2011) we should
make the following five procedures crystal clear: (i) benchmark
dataset; (ii) sample representation; (iii) operation engine; (iv) cross
validation; (v) web—server. Below, let us describe how to deal with
these steps one—by one.

2 Materials and Methods

2.1 Benchmark datasets

To develop a statistical predictor, the first important thing is to es—
tablish a reliable and stringent benchmark dataset for training and
testing the predictor. In this study, the benchmark dataset S con—
structed by Noble et al. (2005) was adopted; it can be formulated as

SzSTUST (1)

where the positive subset S+contains 280 DHS sequences collected
from the human genome, the negative subset ST contains 737 non—
DHS sequences, and U denotes the ‘union’ in the set theory. For
readers’ convenience, the benchmark dataset are given in
Supplementary Material.

2.2 Feature description

Three different features are used to construct three kinds of pre—
dictors. They are (i) kmer (Lee et al., 2011), (ii) reverse complement
kmer (Gupta et al., 2008) and (iii) pseudo dinucleotide composition
(PseDNC) (Chen et al., 2013). These features can be used to reﬂect
the characteristics of a DNA sequence from its different angles, as
elaborated below.

2.2.1 Kmer
For a DNA sequence

D = R1R2R3R4R5R6R7- - - RL (2)
where

R,- E {A(adenine), C(cytosine), G(guanine),T(thymine)} (3)

(i : 1, 2, - - - , L) and E is a symbol in the set theory meaning ‘mem-
ber of’. If using kmer (Lee et al., 2011) or k—tuple nucleotide com—
position to represent the DNA sequence, we have (Chen et al.,
2014c; Liu et al., 2015c)

D : [ flkmer fzkmer fgkmer ﬁrmer . . . fﬁmer ]T (

where firmer (u : 1, 2,  , 4k) is the occurrence frequency of the
u—th k—tuple nucleotide in the DNA sequence and T is the transpose
operator. For example, when k = 2, Equation 4 will be reduced to
the case of 2mer; i.e.

D=lf(AA) f(AC) f(AG) r<AT>  Am 1T
: [flzmer f22mer f32mer ffmer  flzéncr] T (5)

2.2.2 Reverse complement kmer

The reverse complement kmer (Gupta et al., 2008; Noble et al.,
2005) is a variant of the basic kmer, in which the kmers are not ex-
pected to be strand—specific, so reverse complements are degenerated
into a single feature. For example, if k = 2, there are totally 16 basic
dinucleotides (‘AA’, ‘AC’, ‘AG’, ‘AT’, ‘CA’, ‘CC’, ‘CG’, ‘CT’, ‘GA’,
‘GC’, ‘GG’, ‘GT’, ‘TA’, ‘TC’, ‘TG’, ‘TT’), but by removing the re—
verse complement 2mers, there are only 10 dinucleotides in the re—
verse compliment kmer approach (‘AA’, ‘AC’, ‘AG’, ‘AT’, ‘CA’,
‘CC’, ‘CG’, ‘GA’, ‘GC’, ‘TA’). For more information of this ap-
proach, please refer to (Gupta et al., 2008; Noble et al., 2005).
Accordingly, instead of Equation 5, we have

D = mAA) f(AC) f(AG) r<AT>  AM) 1T

: [ flRCZmer fZRCZmer fgCZmer ffCZmer flROCZmer ]T (

where ffczmer (u : 1, 2,

u—th reverse complement 2—tuple nucleotide in the DNA sequence.

- - , 10) is the occurrence frequency of the

2.2.3 Pseudo dinucleotide composition

PseDNC is an approach by incorporating the contiguous local se—

quence—order information (via 2mer) and the global sequence—order

pattern (via the concept of pseudo components (Chou, 2001a)) into

the feature vector of the DNA sequence (Chen et al., 2013).
According to PseDNC (Chen et al., 2014c), the DNA sequence D

of Equation 2 can be formulated by a vector given by

D: [d1 d2  d16 d16+1  d16+xllT (7)

91% ‘09 1sn3nv uo sopﬁuv s01 ‘etulomeg aIo Amie/xtqu 112 /§.IO'S[BLLIHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; popeommoq

DNase I hypersensitive site identification

2413

 

where

% (1 g k g 16)
21:1 fi + W Zj=1 0i
die = (8)

# (17 g k g 16+,1)

21:1 fi + W Zj=1 9i
where fk (k : 1, 2,. . .,16) is the normalized occurrence frequency of
dinucleotide in the DNA sequence; the parameter 2 is an integer,
representing the highest counted rank (or tier) of the correlation
along a DNA sequence; w is the weight factor ranged from 0 to 1; 0,-
(j : 1, 2,. . .,2) is called the j—tier correlation factor that reflects the
sequence—order correlation between all the most contiguous di—
nucleotides along a DNA sequence, which is defined by Chen et al.
(2014ck

 

,
1 L—z
81 = EZ®(R1R1+17 Ri+1Ri+2)
i=1
1 L—3
82 = L—_3 ®(RiRi+17Ri+2Ri-I-3)
i=1
1 L—4
< 93 Z—L _4 ®(RiRi+1aRi+3Ri+4) (A < L) (9)
i=1
1 L—1—2t
0;, = — ®(RiRi+1aRi+}tRi+/I+1)
\ L—1—1,ﬂ

where the correlation function is given by
,u

1
®(RiRi+1aRiR/'+1) =; E [Pu(RiRi+1) — Pu (RiRi+1)l2 (10)
H=1

where ,u = 6 is the number of physicochemical properties considered
in this study (see Table 1); Pu(R,-R,-+1) and Pu(R,-R,-+1) are the nor-
malized numerical values of the u—th physicochemical index for the
dinucleotides RiRi+1 and R,-R,-+1, respectively.

The aforementioned three types of feature vectors are actually
three special modes of the general PseKNC (Chen et al., 2015c), as
can be formulated as

D=l<l>1<l>2  <1.  of (11)
where Z is the dimension of the general PseKNC vector; e.g.
16 for 2mer vector
Z = 10 for RC2mer vector (12)

16 —l— 2 for PseDNC vector

Therefore, they can be easily generated by the web—server called
‘Pse-in-One’ (Liu et al., 2015 e) established very recently.

2.3 Random Forests algorithm

Widely used in various areas of computational biology [e.g. (Jia
et al., 2015a,b, 2016a,b,c; Kandaswamy et al., 2011; Lin et al.,
2011; Pugalenthi et al., 2012)], the random forests (RF) algorithm is
a powerful algorithm. Its detailed formulation has been clearly
described in Breiman (2001), and hence there is no need to repeat
here.

Table 1. The normalized values for the six DNA dinucleotide physi-
cochemical properties

 

Dinucleotidea Physicochemical property

 

Roll Tilt Twist Slide Shift Rise

 

AA 0.11 0.27 0.5 0.06 1.59 —0.11
AC 1.29 0.80 0.5 1.5 0.13 1.04
AG —0.24 0.09 0.36 0.78 0.68 —0.62
AT 2.51 0.62 0.22 1.07 —1.02 1.17
CA —0.62 —0.27 —1.36 —1.38 —0.86 —1.25
CC —0.82 —0.09 1.08 0.06 0.56 0.24
CG —0.29 —0.44 —1.22 —1.66 —0.82 —1.39
CT —0.24 0.09 0.36 0.78 0.68 —0.62
GA —0.39 0.27 0.5 —0.08 0.13 0.71
GC 0.65 1.33 0.22 —0.08 —0.35 1.59
GG —0.82 0.09 1.08 0.06 0.56 0.24
GT 1.29 0.80 0.5 1.5 0.13 1.04
TA —1.51 —0.44 —2.37 —1.23 —2.24 —1.39
TC —0.39 0.27 0.5 —0.08 0.13 0.71
TG —0.62 —0.27 —1.36 —1.38 —0.86 —1.25
TT 0.11 0.27 0.5 0.06 1.59 —0.11

 

3See the main text for further explanation.

As shown above, by using 2mer, RC2mer, and PseDNC, the
sample of Equation 2 can be defined by three different PseKNC vec—
tors, as indicated in Equations 5—7, respectively. Accordingly, we
have three different basic RF predictors; i.e.

RF(1), when the sample is based on 2mer or Eq.5
RF(2), when the sample is based on RC2mer or Eq.6 (13)
RF(3), when the sample is based on PseDNC or Eq.7

2.4 Ensemble random forests
As demonstrated by a series of previous studies, such as signal pep—
tide prediction (Chou and Shen, 2007c; Shen and Chou, 2007c),
membrane protein type classification (Chou and Shen, 2007a; Shen
and Chou, 2007d), protein subcellular location prediction (Chou
and Shen, 2006; Shen and Chou, 2007b), protein fold pattern recog—
nition (Shen and Chou, 2006), enzyme functional classification
(Shen and Chou, 2007a), protein—proteins interaction prediction (Jia
et al., 2015a) and protein—protein binding site identification (Jia
et al., 2015b), the ensemble predictor formed by fusing an array of
individual predictors via a voting system can generate much better
prediction quality.

Here, the ensemble predictor is formed by fusing the aforemen—
tioned three different individual RF predictor of Equation 13; i.e.

RIPE = RF(1)V RF(2)V RF(3) = v§21RF(z') (14)

where RIPE denotes the ensemble predictor, and the symbol V de—
notes the fusing operator (Chou and Shen, 2007b). In this study, the
concrete fusion process can be formulated as follows.

For a given DNA sequence sample D (see Eq.2), suppose

RHDDDszh2L2,® no

where the symbol l> is an action operator (Chou and Shen, 2007b)
meaning using RF(i) to identify the query sequence D, and P,- is the
probability thus obtained for the sample query sample D belonging
to the DHS sequence. Define

13
Y:— ER 16
3; H

91% ‘09 1sn8nv uo sopﬁuv s01 ‘etulomeg aIo AliSJQATUn 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; popeommoq

2414

B.Liu et al.

 

where F,- is the fractional factor, and their optimal values were deter—
mined via the grid search as given by

F1 2 0.05
F2 2 0.90 (17)
F3 2 0.05

Thus, we have

DHS, if Y 20.5
D e (18)

non — DHS, otherwise

The predictor thus established is called iDHS—EL, where ‘i’ stands
for ‘identify’, ‘DHS’ for ‘DNase I hypersensitive site’ and ‘EL’ for ‘en—
semble learning’. To provide an intuitive picture, a ﬂowchart is pro—
vided in Figure 1 to illustrate the prediction process of iDHS—EL.

3 Results and discussion

As pointed out in Section 1, among the five guidelines in developing
a useful predictor, one of them is how to objectively evaluate its
anticipated success rates (Chou, 2011). To fulfil this, the following
two things need to consider: one is what metrics should be used to
measure the predictor’s quality; the other is what kind of test
method should be taken to derive the metrics rates. Below, let us to
address such two problems.

3.1 Metrics used to reflect the success rates
A set of four metrics are usually used in literature to measure the
quality of a predictor: (i) overall accuracy or Acc; (ii) Mathew’s cor—
relation coefficient or MCC; (iii) sensitivity or Sn and (iv) specificity
or Sp (Chen et al., 2007). But the four metrics have the following
two problems.

First, they are seriously affected by the imbalance degree of a
benchmark dataset S as defined by

_ Number of samples in SF _ N (S_)
_ Number of samples in ST _ N (ST)

 

13(8) (19)

 

Input gueryr DNA
sequence

 

 

m

 

    
      

 
 

Fusion
1 3
Y = E i=1Fi P;

Fig. 1. The flowchart to show how the iDHS-EL predictor works. The three
operation engines RF1, RF2 and RF3 are based on the 2mer, RC2mer and
PseDNC feature vectors, respectively. See Equations 5—7 and the relevant
text forfurther explanation

When s13(S) : 1, the benchmark dataset S is completely balanced;
when s13(S) > 1, it is negatively imbalanced; when s13(S) < 1, it is
positively imbalanced. The larger the ‘B(S), the more skewed the
benchmark dataset will be. For the case of this study, N (S_) = 737
and N (ST) : 280 (see Eq. 1 and Supplementary Material), we have
s13(S) % 2.63, meaning that the dataset is very skewed in favour to
the negative case. To make the performance measurement more ob—
jectively reflect a prediction method for a system with high imbal-
ance degree, two additional metrics have been incorporated. One is
the product of sensitivity Sn and specificity Sp (Jin and Dunbrack,
2005), denoted here as Pt; the other is the property excess (Yang
et al., 2005) denoted here as Py (Jin and Dunbrack, 2005).

Second, the conventional formulations for the four metrics are
not intuitive, and most experimental scientists feel hard to under—
stand them, particularly for the MCC. To overcome this problem,
let us adopt the formulations proposed in Chen et al. (2013) and Xu
et al. (2013) based on the symbols used by Chou (2001b) in studying
the signal peptides.

Thus, we finally have a set of six new metrics as given below

 

 

 

r N+
Snzl—N—_ 0 SSngl
Ni
sp=1—m 0<Sp<1
NJr N—
ACC:  
NT N—
< 1— —‘+—f
N+ N
MCC: —1£MCC£1
1+—N;_Ni 1+—Nt—NT
N+ N—
NJr N—
1) : __— __+ < <
. (1 My N) 
Ni N;
(20)

where N + represents the total number of true—phosphorylation sam—
ples investigated, whereas N; the number of phosphorylation sam-
ples incorrectly predicted to be of false— phosphorylation sample;
N _ the total number of false—phosphorylation samples, whereas N;
the number of false—phosphorylation samples incorrectly predicted
to be of true—phosphorylation sample.

According to Equation 20, the following are crystal clear. (i)
When N f : 0 meaning none of the DHS samples is incorrectly pre—
dicted to be of non—DHS sample, we have the sensitivity Sn : 1;
whereas N; = N + meaning that all the DHS samples are incorrectly
predicted to be of non—DHS sample, we have the sensitivity Sn : 0.
(ii) When N; : 0 meaning none of the non-DHS samples is incor—
rectly predicted to be of DHS sample, we have the specifi—
city Sp : 1; whereas N; = N _ meaning that all the non-DHS
samples are incorrectly predicted to be of DHS sample, we have the
specificity Sp : 0. (iii) When N; = N; = 0 meaning that none of
the DHS samples in the positive dataset and none of the non—DHS
samples in the negative dataset is incorrectly predicted, we have the
overall accuracy Acc : 1 and MCC : 1; whereas N; = N +and N;
: N _ meaning that all the DHS samples in the positive dataset and
all the DHS samples in the negative dataset are incorrectly predicted,
we have the overall accuracy Acc : 0 and MCC : —1. (iv) When
N; : N+/2 and N; : N_/2, we have Acc : 0.5 and MCC : 0
meaning no better than random guessing.

As we can see from the above discussion, the set of metrics for—
mulated in Equation 20 has made the meanings of sensitivity,

91% ‘09 1sn8nv uo soroﬁuv s01 ‘1211110111123 10 [(1319111qu 112 /§.IO'SIBU.IHO[p.IOJXO'SOTlBIIIJOJUTOTCI/ﬁdllq 111011 prEOIUAAOG

DNase I hypersensitive site identification

2415

 

specificity, overall accuracy, and MCC much more intuitive and eas—
ier—to—understand, particularly for the meaning of MCC, as con—
curred and adopted by many authors in a series of recent
publications [e.g. (Chen et al., 2014a,b; Ding et al., 2014; Jia et al.,
2015a; Lin et al., 2014, 2015a; Xiao et al., 2015)].

Note that, of the six metrics in Equation 20, the most important
are the Pt and Py in dealing with a system in which the number of
negative samples is overwhelmingly greater than that of positive
samples, as elaborated in Jin and Dunbrack (2005 ) and Yang et al.
(2005). The metrics Acc and MCC reﬂect the overall accuracy of a
predictor and its stability. The metrics Sn and Sp are used to meas—
ure a predictor from two opposite angles. When, and only when,
both Sn and Sp of the predictor A are higher than those of the pre—
dictor B, we can say A is better than B.

Also, it is instructive to point out that the set of equations given
in Equation 20 is valid for the single—label systems only. As for the
multi-label systems existing in the system biology (Chou et al.,
2012; Lin et al., 2013; Xiao et al., 2011) and system medicine (Xiao
et al., 2013), a completely different set of metrics is needed as eluci—
dated in Chou (2013).

3.2 Cross—validation

With a set of intuitive evaluation metrics clearly defined, the next
step is what kind of validation method should be adopted to derive
the metrics values.

The following three cross—validation methods are often used in
literature: (i) independent dataset test, (ii) subsampling (or K—fold
cross—validation) test and (iii) jackknife test (Chou and Zhang,
1995). Of these three, however, the jackknife test is deemed the least
arbitrary that can always yield a unique outcome for a given bench—
mark dataset as elucidated in Chou (2011). Accordingly, the jack—
knife test has been widely recognized and increasingly used by
investigators to examine the quality of various predictors [e.g.
(Ahmad et al., 2015; Chou and Cai, 2005; Dehzangi et al., 2015;
Khan et al., 2015; Kumar et al., 2015; Liu et al., 2015e; Nanni
et al., 2014; Shen and Chou, 2007e)].

In this study, however, to reduce the computational time, we
adopted the 5—fold cross—validation method, as done by many inves—
tigators with RF as the prediction engine. To do this, we first ran-
domly divided the benchmark dataset S of Equation 1 into five
groups that they were approximately equal to each other in the size
of their subsets, as formulated below

8:81U82U83US4US5 20,5218,- (21)
where

SileTLJSl-T (i=1, 2, ---,5) (22)
with
S+mS+mS+mS+mS+
{l1l lil |3_| lil |s_| (23)

|S1|%|52|%|S3|%|S4|%|55|

where  denotes the number of samples (or cardinalities) in ST,
and so forth. Actually, Equations 21—23 can also be formulated as

51952953954955 (24)

where the symbol 9 means that the divided five benchmark datasets
in Equation 21 are about the same in size, and so are their subsets (Jia
et al., 2016a). Thus, each of the five sub—benchmark datasets was
singled out one—by—one and tested by the model trained with the re—
maining four sub—benchmark datasets. The cross—validation process

was repeated for five times, with their average as the final outcome.
In other words, during the process of 5 —fold cross—validation, both the
training dataset and testing dataset were actually open, and each sub—
benchmark datasets was in turn moved between the two. The 5 —fold
cross—validation test can exclude the ‘memory’ effect, just like con—
ducting 5 different independent dataset tests.

3.3 Comparison with the existing methods

Listed in Table 2 are the 5 —fold cross—validation results by iDHS—EL
on the benchmark dataset of Equation 1 (see Supplementary
Material). For facilitating comparison, listed in that table are also
the corresponding results obtained by the S VM-Rechmer predictor
(Noble et al., 2005) and SVM-PseDNC predictor (Feng et al.,
2014), respectively. From the table, we can see the following. (i)
Among the three predictors the newly proposed one achieved the
highest success rates in both Pt and Py, the two most important met—
rics used to measure the quality of a predictor as elucidated in the
follow—up text to Equation 20. (ii) Although the Sp rate by the pro—
posed predictor was slightly (2.04%) lower than that by SVM-
Rechmer, its Sp rate was 5.71% higher than that by S VM-
Rechmer. As mentioned in Section 3.1, the two metrics are used to
measure a predictor from two opposite angles, and they are con—
strained with each other (Chou 1993). Therefore, it is meaningless
to use only one of the two for comparing the quality of two pre—
dictors. In other words, a meaningful comparison in this regard
should count the rates of both Sn and Sp, or even better, the rate of
their combination that is none but Pt and Py. As shown in Table 2,
the Pt and Py rates achieved by iDHS-EL are remarkably higher
than those by the existing predictors.

3.4 Feature analysis

RF is a combination of decision trees, which have the ability to select
important ones from many features and ignore others. Furthermore,
because decision trees generate explicit models describing the rela-
tionship between features and the predictions, which facilities the in-
terpretation of the models. A measure of how each feature
contributes to the prediction can be calculated in the training pro-
cess. A random noise value is used to replace a feature. If the per—
formance is obviously degraded, it means that this feature
contribute to the prediction. On the other hand, if the performance
is stable, it means that this feature is irrelevant. Thus, we can calcu—
late each relative importance of features according to the following
procedure (Jiang et al., 2007). For each tree, the average prediction
accuracy of the OOB (Out Of Bag) portion of the data is calculated.
For each feature, replace its value with random noise, and then the
average accuracy is recalculated. Finally, the difference between the
two accuracies is then averaged over all trees, and normalized by the
standard error. As a result, the mean decrease accuracy represents

Table 2. A comparison of the proposed predictor with the existing
ones via the 5-fold cross-validation on a same benchmark dataset
of Supplementary Material 81

 

Predictor Sna(%) Spa(%) Acca(%) MCCa(%) Pta(%) Pya(%)

 

SVM—Rechmerb 65.36 92.81 85.25 0.616 60.66 58.17
SVM—PseDNCC 61.07 92.26 83.68 0.571 56.34 53.33
iDHS—ELd 64.64 94.30 86.14 0.636 64.51 61.84

 

aSee Equation 20 for the deﬁnition of the metrics.

bThe prediction method developed by (Noble et al. 2005 ).
cThe prediction method developed by Feng et al. (2014).
dThe prediction method proposed in this paper.

91% ‘09 1sn8nv uo sojoﬁuv s01 ‘1211110111123 10 [(1319111qu 112 /§.IO'SIBU.IHO[p.IOJXO'SOTlBIIIJOJUTOTCI/ﬁdllq 111011 p9p120111moq

2416

B.Liu et al.

 

Table 3. Ranking the top 10 most important features for the three different individual RF classifiers (see Eq. 13)

 

 

 

 

 

RF(1) RF(Z) RF(3)

Rank Feature MDAa (%) Rank Feature MDAa (%) Rank Feature MDAa (%)
1 CG 35.46 1 CG 11.12 1 CG 29.70
2 GC 14.13 2 CA 9.27 2 GC 14.82
3 CA 12.46 3 GC 7.29 3 CA 10.86
4 TG 11.19 4 AA 3.04 4 TG 10.38
5 AT 8.63 5 CC 2.82 5 AT 8.58
6 TT 7.20 6 AG 2.58 6 x1 = 2 6.14
7 TA 6.98 7 AT 2.13 7 TT 6.09
8 AA 6.87 8 GA 1.87 8 TA 5.99
9 CC 6.56 9 AC 1.86 9 x1 = 3 5.67
10 CT 6.05 10 TA 1.76 10 x1 = 1 5.44

 

aThe abbreviation of mean decrease accuracy.

the relative importance of each feature. As is shown in Table 3, it
lists the top 10 most important features of the three individual RF
classifiers (see Eq. 13). From the table, we can see the following. (i)
Among the three RF classifiers, there are some common important
features, such as CG, GC, CA, which are fully consistent with previ-
ous studies (Wang et al., 2012; Zhang et al., 2012). (ii) Some fea-
tures are only important for one RF classifier but not for the others,
such as CT, and 2 = 1, 2, 3. These features describe the characteris—
tics of DHSs in different aspects, and therefore, the predictive per—
formance can be improved by combining these complementary
features via the proposed ensemble learning framework.

3.5 Web server and user guide

For the convenience of the vast majority of experimental scientists, a
web server for the iDHS-EL predictor has been established. To our
best knowledge, it is the first web—server ever established for predict—
ing the DHSs in human genome. Moreover, to maximize users’ con—
venience, a step—by—step guide on how to use it to get the desired
results is given below.

Step 1.0pen the web server at http://bioinformatics.hitsz.edu.cn/
iDHS—EL, and you will see its top page as shown in Figure 2. Click
on the Read Me button to see a brief introduction about the pre—
dictor and the caveat when using it.

Step 2. You can either type or copy/paste the query DNA se—
quence into the input box at the center of Figure 2, or directly up—
load your input data by the ‘Browse’ button. The input sequence
should be in the FASTA format. For the examples of DNA sequences
in FASTA format can be seen by clicking on the Example button
right above the input box.

Step 3. Click on the ‘Submit’ button to see the predicted results.
For example, if you use the four query DNA sequences in the
Example window as the input, you will see the following shown on
the screen of your computer: (i) the first query DNA sequence (mis—
c_ppid_8090) is of DHS; (ii) the second query sequence (mis—
c_ppid_7576) is of DHS; (iii) the third query sequence
(misc_ppid_7953) is of non—DHS; (iv) the fourth query sequence
(misc_ppid_6460) is of non—DHS. All these predicted results are
fully consistent with the experimental observations.

Step 4. Click on the ‘Benchmark Data’ button to download the
datasets used to train and test the model.

Step 5. Click on the ‘Citation’ button to find the relevant papers
that document the detailed development and algorithm of iDHS-EL.

 

iDHS-EL: identifying DNase I hypersensitive sites by fusing three
different modes of pseudo nucleotide composition into
an ensembte learning framework
| Sewer | Read Me | Benchmark Data | Citation |

 

Enter or copyfpaste tluerjiI DNA sequences in FASTA format (Example)

 

 

 

Upload input file in FAST-CI. format {Examgle}
Upload your input file.) “Bruwsel

Contact @ Bin Liu

 

 

 

 

 

Fig. 2. A semi-screenshot to show the top page of the iDHS-EL web-server.
Its web-site address is http://bioinformatics.hitsz.edu.cn/iDHS-EL/

4 Conclusion

A novel predictor called iDHS-EL was proposed for identifying the
location of DHS in human genome by fusing the kmer approach, re—
verse complement kmer approach, dinucleotide—based auto cross co—
variance approach, and pseudo dinucleotide composition approach
into an ensemble classifier.

It was demonstrated by cross—validations on a same benchmark
dataset that the new predictor outperformed the state—of—the—art
methods (Feng et al., 2014; Noble et al., 2005) in this area.
Furthermore, a user—friendly a web server for iDHS-EL was pro—
vided at http://bioinformatics.hitsz.edu.cn/iDHS—EL/, by which users
can easily obtain their desired results without the need to go through
the complicated mathematics involved, which were presented here
just for its integrity. Also, it is the first web—serve predictor ever es—
tablished for identifying the location of DHS in human genome.

Acknowledgements

The authors would like to thank Shumin Li for her helpful discussions. The
authors also wish to thank the three anonymous reviewers for their construct-
ive comments, which were very helpful in strengthening the presentation of
this study. This work was supported by the National Natural Science
Foundation of China (No. 61300112, 61573118 and 61272383), the
Scientiﬁc Research Foundation for the Returned Overseas Chinese Scholars,
State Education Ministry, the Natural Science Foundation of Guangdong

9mg ‘09 1sn8nv uo sojoﬁuv s01 ‘121u10111123 10 [(1319111qu 112 /§.IO'SIBU.IHO[p.IOJXO'SOTlBIIIJOJUTOTCI/ﬁdllq 111011 pop1201umoq

DNase I hypersensitive site identification

2417

 

Province (2014A0303 13695 ), Shenzhen Foundational Research Funding
(Grant No. JCY]20150626110425228), and Development Program of China
(863 Program) [2015AA015405].

Conﬂict of Interest: none declared.

References

Ahmad,S. et al. (2015) Identiﬁcation of heat shock protein families and J-pro-
tein types by incorporating dipeptide composition into Chou’s general
PseAAC. Comput. Methods Programs Biomed., 122, 165—174.

Breiman,L. (2001) Random forests. Mac/7. Learn., 45, 5—32.

Chen,]. et al. (2007) Prediction of linear B-cell epitopes using amino acid pair
antigenicity scale. Amino Acids, 33, 423—428.

Chen,W. et al. (2013) iRSpot-PseDNC: identify recombination spots with
pseudo dinucleotide composition. Nucleic Acids Res., 41, e68.

Chen,W. et al. (2014a) iTIS-PseTNC: a sequence-based predictor for identify-
ing translation initiation site in human genes using pseudo trinucleotide
composition. Anal. Biochem., 462, 76—83.

Chen,W. et al. (2014b) iSS-PseDNC: identifying splicing sites using pseudo di-
nucleotide composition. Biomed. Res. Int., 2014, 623149.

Chen,W. et al. (2014c) PseKNC: a ﬂexible web-server for generating pseudo
K-tuple nucleotide composition. Anal. Biochem., 456, 53—60.

Chen,W. et al. (2015 ) Pseudo nucleotide composition or PseKNC: an effective
formulation for analyzing genomic sequences. Mol. BioSyst., 11,
2620—2634.

Chen,W. et al. (2016a) iACP: a sequence-based tool for identifying anticancer
peptides. Oncotarget, 7, 16895—16909.

Chen,W. et al. (2016b) Using deformation energy to analyze nucleosome pos-
itioning in genomes. Genomics, 107, 69—75.

Chou,K.C. (1993) A vectorized sequence-coupling model for predicting HIV
protease cleavage sites in proteins. ]. Biol. Claem., 268, 1693 8—16948.

Chou,K.C. (2001a) Prediction of protein cellular attributes using pseudo
amino acid composition. PROTEINS: Structure, Function, and Genetics
(Erratum: ibid., 2001, Vol.44, 60), 43, 246—255.

Chou,K.C. (2001b) Prediction of protein signal sequences and their cleavage
sites. Proteins, 42, 136—139.

Chou,K.C. (2011) Some remarks on protein attribute prediction and pseudo
amino acid composition (50th anniversary year review). ]. Theor. Biol., 273,
236—247.

Chou,K.C. (2013) Some remarks on predicting multi-label attributes in mo-
lecular biosystems. Mol. Biosystems, 9, 1092—1100.

Chou,K.C. (2015 ) Impacts of bioinformatics to medicinal chemistry. Med.
Claem., 11, 218—234.

Chou,K.C. and Cai,Y.D. (2005 ) Prediction of membrane protein types by
incorporating amphipathic effects. ]. Chem. I Model., 45 , 407—413.

Chou,K.C. and Shen,H.B. (2006) Hum-PLoc: a novel ensemble classiﬁer for
predicting human protein subcellular localization. Biochem. Biophys. Res.
Commun., 347, 150—157.

Chou,K.C. and Shen,H.B. (2007a) MemType-2L: a web server for predicting
membrane proteins and their types by incorporating evolution information
through Pse-PSSM. Biochem. Biophys. Res. Comm., 360, 339—345.

Chou,K.C. and Shen,H.B. (2007b) Review: recent progresses in protein subcel-
lular location prediction. Anal. Biochem., 370, 1—16.

Chou,K.C. and Shen,H.B. (2007c) Signal-CF: a subsite-coupled and window-
fusing approach for predicting signal peptides. Biochem. Biophys. Res.
Comm., 357, 633—640.

Chou,K.C. and Zhang,C.T. (1995) Review: prediction of protein structural
classes. Crit. Rev. Biochem. Mol. Biol., 30, 275—349.

Chou,K.C. et al. (2012) iLoc-Hum: using accumulation-label scale to predict
subcellular locations of human proteins with both single and multiple sites.
Mol. Biosyst., 8, 629—641.

Crawford,G.E. et al. (2006) Genome-wide mapping of DNase hypersensitive
sites using massively parallel signature sequencing (MPSS). Genome Res.,
16, 123—131.

Dehzangi,A. et al. (2015 ) Gram-positive and gram-negative protein subcellu-
lar localization by incorporating evolutionary-based descriptors into Chou’s
general PseAAC.]. Theor. Biol., 364, 284—294.

Ding,H. et al. (2014) iCTX-Type: a sequence-based predictor for identifying
the types of conotoxins in targeting ion channels. BioMed. Res. Int., 2014,
286419.

Felsenfeld,G. (1992) Chromatin as an essential part of the transcriptional
mechanism. Nature, 355, 219—224.

Felsenfeld,G. and Groudine,M. (2003) Controlling the double helix. Nature,
421, 448—45 3.

Feng,P. et al. (2014) Prediction of DNase I hypersensitive sites by using pseudo
nucleotide compositions. Sci. World ]., 2014, 740506.

Gross,D.S. and Garrard,W.T. (1988) Nuclease hypersensitive sites in chroma-
tin. Ann Rev Biochem., 57, 159—197.

Gupta,S. et al. (2008) Predicting human nucleosome occupancy from primary
sequence. PLoS Comput. Biol., 4, e1000134.

Jia,]. et al. (2015a) iPPI-Esml: an ensemble classiﬁer for identifying the inter-
actions of proteins by incorporating their physicochemical properties and
wavelet transforms into PseAAC. ]. Theor. Biol., 377, 47—5 6.

Jia,]. et al. (2015b) Identiﬁcation of protein-protein binding sites by incorpo-
rating the physicochemical properties and stationary wavelet transforms
into pseudo amino acid composition (iPPBS-PseAAC). ]. Biomol. Struct.
Dyn., doi:10.1080/07391102.07392015.1095116.

Jia,]. et al. (2016a) iPPBS-Opt: a sequence-based ensemble classiﬁer for iden-
tifying protein-protein binding sites by optimizing imbalanced training data-
sets. Molecules, 21, 95.

]ia,]. et al. (2016b) iSuc-PseOpt: identifying lysine succinylation sites in pro-
teins by incorporating sequence-coupling effects into pseudo components
and optimizing imbalanced training dataset. Anal. Biochem., 497, 48—5 6.

Jia,]. et al. (2016c) pSuc-Lys: predict lysine succinylation sites in proteins with
PseAAC and ensemble random forest approach. ]. Theor. Biol., 394,
223—230.

Jiang,P. et al. (2007) MiPred: classiﬁcation of real and pseudo microRNA pre-
cursors using random forest prediction model with combined features.
Nucleic Acids Res., 35, W339—W344.

Jin,Y. and Dunbrack,R.L. Jr. (2005) Assessment of disorder predictions in
CASP6. Proteins, 61 (Suppl. 7), 167—175.

Kandaswamy,K.K. et al. (2011) AFP-Pred: a random forest approach for pre-
dicting antifreeze proteins from sequence-derived properties. ]. Theor. B iol.,
270, 5 6—62.

Khan,Z.U. et al. (2015 ) Discrimination of acidic and alkaline enzyme using
Chou’s pseudo amino acid composition in conjunction with probabilistic
neural network model. ]. Theor. Biol., 365, 197—203.

Kumar,R. et al. (2015 ) Prediction of beta-lactamase and its class by Chou’s
pseudo-amino acid composition and support vector machine. ]. Theor.
Biol., 365, 96—103.

Lee,D. et al. (2011) Discriminative prediction of mammalian enhancers from
DNA sequence. Genome Res., 21, 2167—2180.

Lin,H. et al. (2014) iPro54-PseKNC: a sequence-based predictor for identify-
ing sigma-54 promoters in prokaryote with pseudo k-tuple nucleotide com-
position. Nucleic Acids Res., 42, 12961—12972.

Lin,W.Z. et al. (2011) iDNA-Prot: identiﬁcation of DNA binding proteins
using random forest with grey model. PLoS One, 6, e2475 6.

Lin,W.Z. et al. (2013) iLoc-Animal: a multi-label learning classiﬁer for pre-
dicting subcellular localization of animal proteins. Mol. BioSyst., 9,
634—644.

Liu,B. et al. (2015 a) Identiﬁcation of real microRNA precursors with a pseudo
structure status composition approach. PLoS One, 10, e0121501.

Liu,B. et al. (2015 b) Identiﬁcation of microRNA precursor with the degenerate
K-tuple or Kmer strategy. ]. Theor. Biol., 385, 153—159.

Liu,B. et al. (2015c) repDNA: a Python package to generate various modes of
feature vectors for DNA sequences by incorporating user-deﬁned physico-
chemical properties and sequence-order effects. Bioinformatics, 31,
1307—1309.

Liu,B. et al. (2015 d) Pse-in-One: a web server for generating various modes of
pseudo components of DNA, RNA, and protein sequences. Nucleic Acids
Res., 43, W65—W71.

Liu,B. et al. (2015e) PseDNA-Pro: DNA-binding protein identiﬁcation by
combining Chou’s PseAAC and physicochemical distance transformation.
Mol. Inf., 34, 8—17.

91% ‘09 1sn8nv uo sojoﬁuv s01 ‘121u10111123 10 [(1319111qu 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

2418

B.Liu et al.

 

Liu,Z. et al. (2015f) iDNA-Methyl: identifying DNA methylation sites Via
pseudo trinucleotide composition. Anal. Biochem., 474, 69-77.

Liu,B. et al. (2016a) iMiRNA-PseDPC: microRNA precursor identiﬁcation
with a pseudo distance-pair composition approach. ]. Biomol. Struct. Dyn.,
34, 223—235.

Liu,B. et al. (2016b) iEnhancer-2L: a two-layer predictor for identifying en-
hancers and their strength by pseudo k-tuple nucleotide composition.
Bioinformatics, 32, 362—3 89.

Liu,Z. et al. (2016c) pRNAm-PC: predicting N-methyladenosine sites in RNA
sequences Via physical-chemical properties. Anal. B iockem., 497, 60—67.

Madrigal,P. and Krajewski,P. (2012) Current bioinformatic approaches to
identify DNase I hypersensitive sites and genomic footprints from DNase-
seq data. Front. Genet., 3, 320.

Nanni,L. et al. (2014) Prediction of protein structure classes by incorporating
different protein descriptors into general Chou’s pseudo amino acid com-
position. ]. Theor. Biol., 360, 109—116.

Noble,W.S. et al. (2005 ) Predicting the in Vivo signature of human gene regula-
tory sequences. Bioinformatics, 21, i338—i343.

Pugalenthi,G. et al. (2012) RSARF: prediction of residue solvent accessibility from
protein sequence using random forest method. Protein Pept. Lett., 19, 5 0—5 6.

Shen,H.B. and Chou,K.C. (2006) Ensemble classiﬁer for protein fold pattern
recognition. B ioinformatics, 22, 1717—1722.

Shen,H.B. and Chou,K.C. (2007a) EzyPred: a top-down approach for predict-
ing enzyme functional classes and subclasses. Biochem. Biophys. Res.
Commun., 364, 53—59.

Shen,H.B. and Chou,K.C. (2007b) Gpos-PLoc: an ensemble classiﬁer for pre-
dicting subcellular localization of Gram-positive bacterial proteins. Protein
Eng. Des. Sel., 20, 39—46.

Shen,H.B. and Chou,K.C. (2007c) Signal-3L: a 3-layer approach for predicting
signal peptide. Biochem. Biophys. Res. Commun., 363, 297—303.

Shen,H.B. and Chou,K.C. (2007d) Using ensemble classiﬁer to identify mem-
brane protein types. Amino Acids, 32, 483—488.

Shen,H.B. and Chou,K.C. (2007e) Virus-PLoc: a fusion classiﬁer for predicting
the subcellular localization of Viral proteins within host and Virus-infected
cells. Biopolymers, 85, 233—240.

Song,L. and Crawford,G.E. (2010) DNase-seq: a high-resolution technique
for mapping active gene regulatory elements across the genome from mam-
malian cells. Cold Spring Harb. Protoc., 2010, pdb prot5384.

Wang,Y.M. et al. (2012) Correlation between DNase I hypersensitive site dis-
tribution and gene expression in HeLa S3 cells. PLoS One, 7, e42414.

Wu,C. et al. (1979) The chromatin structure of speciﬁc genes: 1. Evidence for
higher order domains of deﬁned DNA sequence. Cell, 16, 797—806.

Xiao,X. et al. (201 1) iLoc-Virus: a multi-label learning classiﬁer for identifying
the subcellular localization of Virus proteins with both single and multiple
sites. ]. Theor. Biol., 284, 42—51.

Xiao,X. et al. (2013) iAMP-2L: a two-level multi-label classiﬁer for identifying
antimicrobial peptides and their functional types. Anal. Biochem., 436,
168—177.

Xiao,X. et al. (2015 ) iDrug-Target: predicting the interactions between drug
compounds and target proteins in cellular networking Via the benchmark
dataset optimization approach. ]. Biomol. Struct. Dyn., 33, 2221—2233.

Xu,Y. et al. (2013) iSNO-PseAAC: predict cysteine S-nitrosylation sites in pro-
teins by incorporating position speciﬁc amino acid propensity into pseudo
amino acid composition. PLoS One, 8, e5 5 844.

Yang,Z.R. et al. (2005) RONN: the bio-basis function neural network tech-
nique applied to the detection of natively disordered regions in proteins.
Bioinformatics, 21, 3369—3376.

Zhang,W. et al. (2012) Genome-wide identiﬁcation of regulatory DNA elem-
ents and protein-binding footprints using signatures of open chromatin in
Arabidopsis. Plant Cell, 24, 2719—2731.

91% ‘09 1sn8nv uo sojoﬁuv s01 ‘121u10111123 10 [(1319111qu 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 111011 pop1201umoq

