Bioinformatics, 31 (17), 2015, 2912—2914

doi: 10.1093/bioinformatics/btv300

Advance Access Publication Date: 11 May 2015
Applications Note

 

Data and text mining

GOplot: an R package for visually combining
expression data with functional analysis

2,*,T

Wencke Walter‘, Fatima Sénchez-Cabo and Mercedes Ricote1'*'T

1Department of Cardiovascular Development and Repair and 2Bioinformatics Unit, Centro Nacional de
lnvestigaciones Cardiovasculares (CNIC), Madrid, Spain

*To whom correspondence should be addressed.
TThe authors wish it to be known that, in their opinion, the last two authors should be regarded as Joint Senior Authors.
Associate Editor: Jonathan Wren

Received on February 6,2015; revised on April 22,2015; accepted on May 5, 2015

Abstract

Summary: Despite the plethora of methods available for the functional analysis of omics data, ob—
taining comprehensive—yet detailed understanding of the results remains challenging. This is
mainly due to the lack of publicly available tools for the visualization of this type of information.
Here we present an R package called GOplot, based on ggplot2, for enhanced graphical
representation. Our package takes the output of any general enrichment analysis and generates
plots at different levels of detail: from a general overview to identify the most enriched categories
(bar plot, bubble plot) to a more detailed View displaying different types of information for mol—
ecules in a given set of categories (circle plot, chord plot, cluster plot). The package provides a
deeper insight into omics data and allows scientists to generate insightful plots with only a few
lines of code to easily communicate the findings.

Availability and Implementation: The R package GOplot is available via CRAN—The Comprehensive
R Archive Network: http://cran.r—project.org/web/packages/GOplot. The shiny web application of
the Venn diagram can be found at: https://wwalter.shinyapps.io/Venn/. A detailed manual of the

 

package with sample figures can be found at https://wencke.github.io/

Contact: fscabo@cnic.es or mricote@cnic.es

 

1 Introduction

Omics technologies have become standard tools in biological re—
search for identifying and unraveling transcriptional networks,
building predictive models and discovering candidate biomarkers.
Gene/protein/metabolomic expression data is especially challenging
for investigators due to its high—dimensional nature. Exploratory
data analysis techniques are used to get a first impression of the im-
portant characteristics of the dataset and to reveal its underlying
structure. Statistical analyses are then performed to detect subsets of
elements owing the ability to provide valuable insight into the
underlying patterns of the investigated biological process. One com—
mon approach is to map the molecules to their associated biological
annotations, e.g. gene ontology (GO) terms, and to further perform
an enrichment analysis. Although many visualization methods, tools

(Supek et 61]., 2011) and packages (Yin et 61]., 2012; Zhang et 61].,
2013) have been developed, none of them enables the user to com—
bine expression data with the results of functional analysis in a way
that guarantees the preservation of the power of both analyses.

R is commonly used by the omics community to analyze high-
dimensional expression data. We therefore developed the R package
GOplot based on the implementation of the grammar of graphics
(Wickham, 2009). GOPlot follows the path of deductive reasoning
to allow the user to go from the most general to the most specific de—
tails of the functional analysis results. The package implements
novel, original, high-quality plots which also allow the integration
of other quantitative information about molecules, i.e. the expres—
sion levels. GOplot improves understanding of omics data and aids
the communication of biologically relevant findings in publications.

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2912

9mg ‘09 1sn3nv uo sopﬁuv s01 111110;er aIo Amie/nun 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; popeommoq

 

 

GOplot 2913
{a}
. I 4}
Q“; ' .r
t- . tr ' ’i -'-e' '72-.
.l ., r - . ' 5.
It: . I I... r “TR. .1... I J"
E |.1 _'  1
*3 t - ' ' a
E rI III II J
. '1' K31. __r
E  .‘ _. _ ' II:
'11— .- __ .- H
Ti»;  -   3y
'-|'_;_.J. . - 1“
a “a” IMF:  hes-'1 deeelenmenl  phosphor-flan“  was-mlalure development I Blood vessel nevelanment “in:
I - :- dﬂ‘h'l'II'E-QuI-MEH I upregulnseu GDTEI'ME _ H _ -
35in“ inmasinﬁ  lluul manna-annals [:I all Iﬂ'llllﬂl'l _ pIIl-ﬂ'll mtmbrlna {a 41:

Fig. 1. (a) GOCircle plot; the inner ring is a bar plot where the height of the bar indicates the significance of the term (—log1o adjusted P-value), and color corres-
ponds to the z—score. The outer ring displays scatterplots of the expression levels (logFC) for the genes in each term. (b) GOChord plot; the genes are linked via
ribbons to their assigned terms. Blue-to-red coding next to the selected genes indicates logFC. (c) GOCluster plot displaying a circular dendrogram of the cluster-
ing of the expression profiles. The inner ring shows the color-coded logFC (up to three conditions), the outer ring the assigned functional terms

2 Package description

GOplot imports various R packages and was built on ggplot2, one
of the three graphic systems in R. The package makes use of the
complexity of ggplot2 to provide the user with a collection of pre—
specified and multilayered charts. Each layer adds valuable informa—
tion to the displayed context to convey the intended message. Two
kinds of datasets are required as input: a list of selected molecules
with their expression levels and the results of a functional analysis.

We implemented two kinds of function: preprocessing and
plotting.

Preprocessing functions: Although using the preprocessing func—
tions is not mandatory, it is highly recommended to ensure easy
workﬂow. circle_dat () allows the user to easily combine ex—
pression and functional enrichment data and generates the appropri—
ate input for most of the plotting functions. chord_dat ()
generates a binary matrix that assigns the molecules to each prede—
fined functional term. This kind of binary matrix is used as input for
GOChord ( ) . The input format for the preprocessing functions can
be checked with the help function in R.

Plotting functions: The package provides the user with a guide to
explore the data and to select lists of elements and terms of interest.
The exploratory part of the data analysis starts at a very general
level with the GOBubble() and GOBar() plotting functions for
comparative charts. Both charts display information about the sig—
nificance of the enrichment (—log10 of the adjusted P—value)
and the z—score of the term. GOBar () allows processes to be sorted
by z-score or P—value to provide a better overview. The circles of the
bubble plot are area—proportional to the number of molecules in the
given category. Based on these charts a list of relevant terms can be
selected. With GOCircle ( ) , GOChord () and GOCluster () , the
user can add quantitative molecular information to the terms of
interest (Fig. 1).

With GOVenn ( ) we have implemented a Venn diagram, that dis—
plays the number of overlapping elements as well as their expression
patterns (commonly upregulated, commonly downregulated or
contraregulated). In addition we have used shiny (http://CRAN.R—
project.org/package:shiny), the web application framework for R,
to create an interactive web application of GOVenn ( ) .

3 Example

This section brieﬂy exemplifies some of the functionalities of the
GOplot package. Further details of the available functions and their
usage can be found in the GOplot vignette.

GOplot comes with a manually compiled sample dataset (EC).
Selected samples were downloaded from the Gene Expression
Omnibus (accession number: GSE47067). The data were normalized
and a statistical analysis was performed to determine differentially
expressed genes. The DAVID functional annotation tool
(Huang et al., 2009) was used to perform a gene—annotation
enrichment analysis of the set of differentially expressed genes
(adjusted P—value < 0.05). Figure 1 shows three sample plots from
the package created by the example code below.

> library (GOplot)

# Load the dataset

> data (EC)

# Generate the plotting object

> circ <— circle_dat (EC$david, EC$genelist)

# Generate the binary matrix

> chord <— chord_dat (circ, EC$genes, EC$process)
# Create the plots

> GOCircle (circ)

> GOChord(chord, ribbon.col : brewer.pal (7,
‘ Set3 ’ ) )

> GOCluster (circ , EC$process)

Acknowledgements

We thank Manuel Gomez (Bioinformatics Unit, CNIC) for his valuable con-
tributions in the initial steps of this work and Carlos Torroja (Bioinformatics
Unit, CNIC) for his comments that helped to improve and reﬁne the imple-
mentation. We thank 8. Bartlett (CNIC) for editorial assistance.

Funding

This work was supported by grants from the Spanish Ministry of Economy
and Competitiveness (SAF2012-31483), Fundacién Marato TV3 and the

91% ‘09 1sn3nv uo sopﬁuv s01 ‘eruiomeg aIo AlTSJQATUn 112 /3,IO'S[BUJHO[pJOJXO'SOTlBIIIJOJUTOTQ/ﬂdllq 11101; popeommoq

2914

W. Walter et al.

 

European Commision FP7 (CardioNeXt-ITN-608027) to M.R. The CNIC is
supported by the Spanish Ministry of Economy and Competitiveness and the
Pro-CNIC Foundation.

Conﬂict of Interest: none declared.

References

Huang,D.W. et al. (2009) Systematic and integrative analysis of large gene lists
using DAVID Bioinformatics Resources. Nat. Protoc., 4, 44—5 7.

Supek,F. et al. (2011) REVIGO summarizes and Visualizes long lists of gene
ontology terms. PLOS one, 6, e21800.

Wickham,H. (2009) ggplot2: elegant graphics for data analysis. Springer-
Verlag, New York.

Yin,T. et al. (2012) ggbio: an R package for extending the grammar of graph-
ics for genomic data. Genome Biol., 13, R77.

Zhang,H. et al. (2013) RCircos: an R package for Circos 2D track plots. BMC
Bioinformatics, 14, 244.

91% ‘09 1sn3nv uo sopﬁuv s01 ‘eruiomeg aIo AlTSJQATUn 112 /§.IO'S[BU.IHO[p.IOJXO'SOTlBIIIJOJUTOTQ/ﬁdllq 11101; popeommoq

