APPLICATIONS NOTE

Vol. 31 no. 2 2015, pages 273-274
doi: 10. 1 093/bioinformatics/btu622

 

Gene expression

Advance Access publication September 26, 2014

switchBox: an R package for k—Top Scoring Pairs classifier

development

Bahman Afsari”, Elana J. Fertigl, Donald Gieman2 and Luigi Marchionni”

1Department of Oncology, Sidney Kimmel Comprehensive Cancer Center, School of Medicine, Johns Hopkins
University, Baltimore, MD 21205 and 2Department of Applied Mathematics and Statistics, Johns Hopkins University,

Baltimore, MD 21218, USA

Associate Editor: Janet Kelso

 

ABSTRACT

Summary: k—Top Scoring Pairs (kTSP) is a classiﬁcation method for
prediction from high-throughput data based on a set of the paired
measurements. Each of the two possible orderings of a pair of meas-
urements (e.g. a reversal in the expression of two genes) is associated
with one of two classes. The kTSP prediction rule is the aggregation of
voting among such individual two-feature decision rules based on
order switching. kTSP, like its predecessor, Top Scoring Pair (TSP),
is a parameter-free classifier relying only on ranking of a small subset
of features, rendering it robust to noise and potentially easy to interpret
in biological terms. In contrast to TSP, kTSP has comparable accuracy
to standard genomics classification techniques, including Support
Vector Machines and Prediction Analysis for Microarrays. Here, we
describe ‘switchBox’, an R package for kTSP-based prediction.
Availability: The ‘switchBox’ package is freely available from
Bioconductor: http://www.bioconductor.org.

Contact: bahman@jhu.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on April 23, 2014; revised on August 13, 2014; accepted on
September 12, 2014

1 INTRODUCTION

Finding ‘omics’-based biomarkers for clinical use has been ex-
tensively studied in numerous diseases. However, mature clinical
applications of these biomarkers are scarce due to technological,
mathematical and translational barriers Winslow et al., 2012).
Basing the prediction solely on the ordering of a small number of
features (e. g. gene expression ranks within proﬁles) may over-
come such barriers to clinical translation (Eddy et al., 2010).
Rank-based classiﬁers are robust to data normalization and
yield transparent decision rules (Eddy et al. 2010). The ﬁrst and
simplest of these rank-based methods, the Top Scoring Pair
(TSP) classiﬁer, in which the decision rule is entirely determined
by the ordering of two features (i.e. the relative expression of two
genes), was introduced in Geman et al. (2004). Multiple exten-
sions to TSP were proposed [e.g. Lin et al. (2009); Tan et al.
(2005)] and some have been successfully applied to human can-
cer such as simplifying clinical biomarkers (Marchionni et al.,
2013). A theoretical analysis, R implementation and descrip-
tion of the TSP algorithm can be found in Denis (2013;

 

*To whom correspondence should be addressed.

http://hal.archives-ouvertes.fr/docs/OO/78/48/69/PDF/Article.pdf),
Leek (2009) and Leek (2014), respectively. One powerful suc-
cessor of TSP is k—Top Scoring Pairs (kT SP; Tan et al., 2005),
which applies majority voting among multiple pairs of features.
kT SP has outperformed Support Vector Machines in an open
challenge for cancer classiﬁcation (Geman et al., 2008) and
yielded comparable accuracy to the Mammaprint breast
cancer assay (Marchionni et al., 2013).

Here, we introduce an R package, ‘switchBox’, for kT SP. This
package selects the gene pairs for the kT SP decision rule. The
package also implements a new approach to choose the number
of pairs, k, based on the analysis of variance introduced in Afsari
et al. (2014), which is less computationally intensive and less
prone to overﬁtting than the original method introduced in
Tan et al. (2005) and implemented in the R ‘ktspair’ package
(Damond, 2011). In addition, ‘switchBox’ provides more ﬂexi-
bility in the selection of candidate ranges of k, as well as
alternative strategies for pair votes aggregation compared with
the previous R implementation (Damond, 2011). Finally,
‘switchBox’ has a method for calculating sample-speciﬁc scores
based on the pairs (see Methods), which can be extended beyond
classiﬁcation to class discovery problems.

2 METHODS

kT SP decision is based on k feature (e. g. gene) pairs, denoted by
G) = {(i1,j1),  , (ik,jk)}. We also denote the feature proﬁle by
7 = (X 1, X 2, . . .). The particular decision rule using the k comparisons X i,
<le is simply determined by the aggregate vote statistic

k
K=ZI(Xi1<A/jl)’ 
l=1

where I is the logical indicator function. The kTSP classiﬁcation decision
is based on thresholding IC, i.e. f7= I{IC> I} provided the labels Y e {0, 1}.
The standard threshold is T: ’5‘, equivalent to majority voting. The only
parameters required for calculating 1c are the number and choice of fea-
ture pairs. In the introductory paper to TSP (Geman et al., 2004), the
authors proposed a score for each pair of features, which measures the
discriminative power of a two-feature comparison. The score assigned to

genes i and j was deﬁned as
sij=|P(X,-<Xj|Y=1) — P(X,-<XJ-|Y=0)|.

The ﬁrst training algorithm proposed for training kTSP, i.e. for ﬁnding
6), was an ad hoc method based on the score (Tan et al., 2005).

The ‘switchBox’ package implements a formal method of feature se-
lection based on analysis of variance (Afsari et al., 2014). Brieﬂy, this

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 273

112 ﬁhO'smumo[pJOJXO'sor1BmJOJurorw/2d11q IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

B.Afsari et al.

 

method selects the feature pairs maximizing the distance between the
expectation of 1c in each group normalized by the variance. The target
set of feature pairs is then

E(K(®)l Y= 1) - E(K(®)l Y= 0)
\/Var(1c(®)| Y= 1) + Var (K(e)| Y= 0) '

 

(2)

(9* = argmax®

 

This method as implemented in ‘switchBox’ uses a greedy search for
G)* for computational efﬁciency. This search process simultaneously se-
lects the optimal number of features, requiring only an upper bound on
the number of feature pairs as input. To ﬁnd (9*, we optimize Equation
(2) greedily and with empirical estimates from the data.

3 IMPLEMENTATION

For computational efﬁciency and speed, ‘switchBox’ calculates
the score between all feature pairs using C routines. The user
can directly calculate the score of a desired set of features or fea-
ture pairs by invoking the SWAP.CalculateSignedScore
function.

The package provides a training function (SWAP .
KTSP . Train) for the classiﬁer and a function
(SWAP .KTSP .Classify) for predicting the label of an
unseen sample. The training function allows the user to ﬁlter
either the individual features or the feature pairs, thereby redu-
cing the variability in the learned decision rules. The package
also provides a function (SWAP .CalculateSignedScore)
to calculate the pairwise scores from any subset of features or
subset of feature pairs.

Below we brieﬂy show how to train a kT SP classiﬁer for breast
cancer recurrence within 5 years using gene expression data from
Marchionni et al. (2013), described in further detail in the
‘switchBox’ package vignette. First, we load the example training
and testing gene expression data contained in the ‘switchBox’
package. We then train the classiﬁer and compute the confusion
matrix for predictions on the test samples as follows:

###Loading training and test data

data (matTraining)

data (matTes ting)

### Training kTSP and classifying new samples

classifier <— SWAP.KTSP.Train(matTraining, trainingGroup)
testPrediction <— SWAP.KTSP.Classify (matTesting, classifier)
### Making confusion matrix

table (testPrediction, testingGroup)

We have found that the kT SP classiﬁer from ‘switchBox’ is
more robust and inferred at greater computational speed than
that from the ‘ktspair’ R package (Supplementary Document).
In addition, ‘switchBox’ provides an additional function
SWAP.KTSP.Statistics to calculate kT SP statistics, i.e. K?
in Equation (1). This function is useful for generating ROC
curves and for calculating ranked-based statistics from TSPs
found in the classiﬁer. For example, the code below generates
a heatmap to depict classiﬁcation results for each pair in the
classiﬁer (Fig. 1).

kappa <— SWAP.KTSP.Statistics( matTraining, classifier)

heatmap (l*kappa$comparisons, scale= “none” , labRow=
trainingGroup)

  
   
 
  
 
 

RC>OXCT
RC

_RC>CFFM4

RC>IGFBP5

Fig. 1. The comparisons votes (y-axis) versus samples (x-axis). The sam-
ples are labeled either good prognosis or bad prognosis for breast cancer.
Truth and falsehood of the comparisons are indicated by blue (lighter
shade) and red (darker shade), respectively. The combination of the votes
can be used to classify, illustrated by requiring at least three votes for
declaring bad prognosis. More explanation and code for this ﬁgure can
be found in the Supplementary Document

4 CONCLUSION

We introduced ‘switchBox’, an R package for kT SP classiﬁer
with a robust procedure for pair selection as previously described
in Afsari et al. (2014). As mentioned in Afsari et al. (2014), the
procedure requires less computation and is less prone to over-
ﬁtting than the one described in Tan et al. (2005) and imple-
mented in ‘ktspair’ package (Damond, 2011). Moreover, we
provide functions for calculating auxiliary statistics as well as
any user-deﬁned combination of the comparisons.

Funding: L.M. was supported by the National Institutes of
Health (NIH-)NCI [P30 CA006973]; L.M. and E.J.F. by the
Cleveland Foundation The Helen Masenhimer Fellowship
Award; BA. and D.G. by the NIH-NCRR [ULl RR 025005].
E.J.F. and BA. by NIH-NCI [K25 CA141053].

Conﬂict of interest: none declared.

REFERENCES

Afsari,B. et al. (2014) Rank discrirninants for predicting phenotypes from RNA
expression. Ann. Appl. Stat.

Damond,J. (2011) ktspair.‘ k—Top Scoring Pairs for Microarray Classification. R
package version 1.0, CRAN.

Denis,C. (2013) Top Scoring Pair Classifiers: Asymptotics and Applications, in
archive.

Eddy,J.A. et al. (2010) Relative expression analysis for molecular cancer diagnosis,
prognosis. T echnol. Cancer Res. T reat., 9, 149—159.

Geman,D. et al. (2004) Classifying gene expression proﬁles from pairwise mrna
comparisons. Stat. Appl. Genet. Mol. Biol., 3. Articlel9.

Geman,D. et al. (2008) M icroarray Classification from Several T wo-gene Experssion
Comparisons, ICMLA, San Diego, CA, IEEE (Winner, ICMLA Microarray
Classiﬁcation Algorithm Competition).

Leek,J. (2014) tspair: top scoring pairs for microarray classification. R package ver-
sion 1.22.0, Bioconductor.

Leek,J.T. (2009) The tspair package for ﬁnding top scoring pair classiﬁers in r.
Bioinformatics, 25, 1203—1204.

Lin,X. et al. (2009) The ordering of expression among a few genes can provide
simple cancer biomarkers and signal brcal mutations. BM C Bioinformatics,
10, 256.

Marchionni,L. et al. (2013) A simple and reproducible breast cancer prognostic test.
BMC Genomics, 14, 336.

Tan,A.C. et al. (2005) Simple decision rules for classifying human cancers from gene
expression proﬁles. Bioinformatics, 21, 3896—3904.

Winslow,R. et al. (2012) The emerging discipline of computational medicine. Sci.
Transl. Med., 4, 158rv11.

 

274

112 ﬂJO'smumo[pJOJXO'sor1chOJurorw/2d11q won pepcolumoq

910K ‘09 lsnﬁnV no :2

