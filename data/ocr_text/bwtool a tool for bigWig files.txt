APPLICA TIONS NOTE W 23.2%. légi‘ilfaiﬁéi’ﬁqiiSJ/i‘tlgéi

 

Genome analysis

bwtool: a tool for bigWig files
Andy Pohll’2’* and Miguel Beatol’2

Advance Access publication January 30, 2014

1Department of Gene Regulation, Stem Cells, and Cancer, Centre for Genomic Regulation (CRG) and 2Department of
Experimental and Health Sciences (CEXS), Universitat Pompeu Fabra, 08003 Barcelona, Spain

Associate Editor: John Hancock

 

ABSTRACT

BigWig files are a compressed, indexed, binary format for genome-
wide signal data for calculations (e.g. GC percent) or experiments (e.g.
ChlP-seq/RNA—seq read depth). bwtool is a tool designed to read
bigWig files rapidly and efficiently, providing functionality for extracting
data and summarizing it in several ways, globally or at specific regions.
Additionally, the tool enables the conversion of the positions of signal
data from one genome assembly to another, also known as ‘lifting’.
We believe bwtool can be useful for the analyst frequently working
with bigWig data, which is becoming a standard format to represent
functional signals along genomes. The article includes supplementary
examples of running the software.

Availability and implementation: The C source code is freely available
under the GNU public license v3 at http://cromatina.crg.eu/bwtool.
Contact: andrew.pohl@crg.eu, andypohl@gmail.com
Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on November 4, 2013; revised on January 22, 2014;
accepted on January 23, 2014

1 INTRODUCTION

For many laboratories, it has become an everyday task to gen-
erate or to analyze genome-wide data such as ChIP—seq read
depth. To facilitate visualization of these data with tools such
as the UCSC Genome Browser (Kent et al., 2002) or ENSEMBL
(Flicek et al., 2013), or for further processing, it is common to
use the wiggle (WIG) ﬁle format. This format is not without a
few disadvantages, principally that the ﬁles can become large,
particularly when care is not taken to store the data at a minim-
ally necessary decimal precision. Another disadvantage is that
wiggles exist in three different forms, the choice of which depends
on the sparseness of the data. Programs that expect WIG data do
not always allow all three formats interchangeably.

The bigWig format (Kent et al., 2010) was created as a means
for the UCSC Genome Browser to access real-valued signal data
remotely hosted on HTTP/FTP servers worldwide. The format is
binary, compressed, indexed and allows random access to dir-
ectly query a subset of the larger dataset. In general, programs
designed to read bigWig ﬁles should treat remote URLs of
bigWigs the same as they would treat URLs local to that com-
puter. BigWig uses an indexing strategy similar to other binary/
indexed formats such as bigBed (Kent et al., 2010), binary SAM
(BAM) (Li et al., 2009) and tabix-based formats (Li, 2011), but
unlike BAM or tabix-based formats, bigWig is speciﬁc to

 

*To whom correspondence should be addressed.

numerical data. WIG and BAM are both common data formats
and are used by many applications, e. g. Model-based analysis of
ChIP-Seq (MACS) (Zhang et al., 2008) and Mixture of Isoforms
(MISO) (Katz et al., 2010), respectively, but, to date, there are
not many applications that accommodate bigWig data.

We have created command-line software under the UNIX oper-
ating system called bwtool in a similar spirit to bedtools (Quinlan
and Hall, 2010) or samtools (Li et al., 2009) that offers the possi-
bility to carry out a number of diverse operations on bigWigs in a
convenient way. Until now, the common procedure to access the
data within bigWig ﬁles has been to use the tools available from
UCSC: bigWigToWig, bigWigSummary, bigWigAverageOver
Bed, bigWigMerge, bigWigCorrelate or bigWigInfo. These offer
some basic usability for bigWigs. bigWigInfo provides instant in-
formation about a bigWig ﬁle and is useful for glancing at the
overall mean and standard deviation as well as seeing how many
bases are covered by the signal. bigWigToWig is indispensible, as
it is occasionally necessary to convert a bigWig into the original
WIG to use legacy software. Beyond those two, bwtool provides
additional features and ﬂexibility not found in other software.

2 DESCRIPTION

The bwtool program is designed to rapidly collect summary stat-
istics and do common wiggle manipulations. The program is a
collection of utilities (the names of which are in bold), which
allow for the following features:

0 Aggregate data by averaging it over a series of given intervals
with respect to central bases. This common aggregation pro-
cedure is used to produce plots showing enrichment, but has a
tendency to be problematic, particularly when centering on
genomic features without a known strand or directionality
(Kundaje et al., 2012). For this reason, simple k-means func-
tionality is built-in to group regions with similar proﬁles.
Figure 1 demonstrates the aggregate program on data col-
lected from the ENCODE project (Raney et al., 2011).

0 ‘Lift’, i.e. project data from one genome assembly to another
using a ‘liftOver chain’ ﬁle, available from the UCSC
Genome Browser utilities page (Kuhn et al., 2013). Lifting
data often results in a small percentage of data loss, so care
must be taken to ensure that the only lifted data analyzed is
that which is within regions lifting correctly. Options are
available to catalog all of the problematic regions involved.

0 Quickly ﬁnd regions in the bigWig exhibiting local minima/
maxima, or above/below speciﬁed thresholds.

0 Extract equally sized intervals of data as a matrix or as a
sliding window at adjustable steps and sizes. Again, clustering

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which
permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /810's112umo[pJOJXO'sot1emJOJutotw/2d11q IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV no :2

bwtool

 

— HBKZTaC
— H3K2?me3

— H3K36me3 input
H3K9me3

ChlP

:'-l
U.
l

54":
I:-
I

 

ChIP-seq read depth

I”
U.
|

I I I | I
6000 2500 {I 2501] 5000
Position relative to TSS

Fig. 1. Example of aggregated plots of different histone modiﬁcation
ChIP sequence read-depth signals from MCF7 cells from ENCODE
aligned at each of the 20330 protein-coding gene transcription start
sites in GENCODE release v17 (Harrow et al., 2012). See Supplement
for instructions on how to reproduce this plot. The raw signals in this
example are not normalized, so speciﬁc values cannot be compared be-
tween signals; however, the morphological differences in averaged proﬁles
are nevertheless useful in characterizing the patterns of each histone mark

is available as an option when extracting data as a matrix. A
random matrix of data can also be produced, with the ability
to exclude speciﬁc regions in the genome. Unequally sized
intervals can be also extracted with the extract utility.

0 Another way to extract data from multiple bigWigs is to use
the paste utility. This outputs tab-delimited data from a set
of bigWigs, one base per line. Pasting bigWigs together
makes it possible to perform many complex calculations
with small auxiliary scripts. In this way, the functionality
of bwtool can easily expand on the functionality of
bigWigMerge and bigWigCorrelate from UCSC.

o Discretize the real-valued signal into letters, using the
Symbolic Aggregate Approximation (SAX) algorithm
(Shieh and Keogh, 2009).

o Removing data based on thresholds and speciﬁc regions if
desired. Conversely, regions missing data in a bigWig can be
replaced with a constant using the fill utility.

o Summarize data at speciﬁc regions. This functionality is
similar to the combined programs of bigWigSummary and
bigWigAverageOverBed, with the addition of median and
optional quantile information in the output.

Common options to many of the features include the ability to
specify the decimal precision, to ﬁll missing bases with a given
value or to provide a bed ﬁle specifying speciﬁc regions of the
bigWig to read.

3 USAGE AND AVAILABILITY

bwtool is command-line software for UNIX, a common plat-
form for bioinformatics researchers to conduct analysis.

Running the bwtool command without additional parameters
displays a description of the various utilities and some general
options. Combined with a utility name, bwtool will display spe-
ciﬁc information about how to perform an operation using that
utility. A detailed guide has been created on bwtool’s web page
(http://cromatina.crg.eu/bwtool) to provide thorough examples
of using the program.

bwtool is written in C. The source code for the program is
available on its GitHub web page. Distributed (with permission)
with bwtool is the basic C library from Jim Kent that is needed
for routines speciﬁc to bigWig data, as well as other algorithmic
code. Jim Kent and the University of California hold the copy-
right to this speciﬁc library, but the remaining code is covered
by the GNU Public License v3. bwtools makes use of GNU
autotools to simplify the installation process to the standard
‘./conﬁgure’, ‘make’, ‘make install’ procedure most UNIX
users will be familiar with. To verify the accuracy of the software,
tests may be run with ‘make check’. bwtool does not require
additional libraries that are not typically found in common
UNIX environments, but if the GNU Scientiﬁc Library is in-
stalled, it will make use of that for the random utility.

ACKNOWLEDGEMENTS

The authors thanks Daniel Soronellas, J 050 Curado, Alessandra
Breschi, Roderic Guigé, Jakob Skou Pedersen, Jim Kent and
Brian Raney for testing the program and providing feedback
and advice prior to release.

Funding: Supported by grants to M.B. from the Departament
d’Innovacic') Universitat i Empresa (DIUiE) 2009SGR574,
Ministerio de Educacién y Ciencia (MEC) BFU20lO-0153l
and CSD2006-OOO49.

Conﬂict of Interest: none declared.

REFERENCES

Flicek,P. et a]. (2013) Ensembl 2013. Nucleic Acids Res., 41, D48—D55.

Harrow,J. et a]. (2012) GENCODE: the reference human genome annotation for
the ENCODE Project. Genome Res., 22, 1760—1774.

Katz,Y. et a]. (2010) Analysis and design of RNA sequencing experiments for iden-
tifying isoform regulation. Nat. Methods, 7, 1009—1015.

Kent,W.J. et a]. (2002) The human genome browser at UCSC. Genome Res., 12,
996—1006.

Kent,W.J. et a]. (2010) BigWig and BigBed: enabling browsing of large distributed
datasets. Bioinformatics, 26, 2204—2207.

Kuhn,R.M. et a]. (2013) The UCSC genome browser and associated tools. Brief.
Bioinform., 14, 144—161.

Kundaje,A. et a]. (2012) Ubiquitous heterogeneity and asymmetry of the chromatin
environment at regulatory elements. Genome Res., 22, 1735—1747.

Li,H. et a]. (2009) The Sequence Alignment/Map format and SAMtools.
Bioinformatics, 25, 2078—2079.

Li,H. (2011) Tabix: fast retrieval of sequence features from generic TAB-delimited
ﬁles. Bioinformatics, 27, 718—719.

Quinlan,A.R. and Hall,I.M. (2010) BEDTools: a ﬂexible suite of utilities for com-
paring genomic features. Bioinformatics, 26, 841—842.

Raney,B.J. et a]. (2011) ENCODE whole-genome data in the UCSC genome brow-
ser (2011 update). Nucleic Acids Res., 39, D87l—D875.

Shieh,J. and Keogh,E. (2009) iSAX: disk-aware mining and indexing of massive
time series datasets. Data Min. Know]. Disc., 19, 24—57.

Zhang,Y. et a]. (2008) Model-based analysis of ChIP-Seq (MACS). Genome Biol., 9,
R137.

 

1619

112 /810's112umo[pJOJXO'soiiemJOJuioiw/zdnq IIIOJJ pepeolumoq

910K ‘09 lsnﬁnV uo :2

