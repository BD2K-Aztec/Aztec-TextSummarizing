Bioinformatics Advance Access published June 13, 2016

Bioinformatics, 2016, 1—3

doi: 10.1093/bioinformatics/btw286

Advance Access Publication Date: 10 May 2016
Applications Note

 

 

Sequence analysis

SimLoRD: Simulation of Long Read Data

Bianca K. Stécker‘, Johannes Kiisterz'3 and Sven Rahmann1'*

1Genome Informatics, Institute of Human Genetics, University of Duisburg-Essen, Essen, 45147, Germany, 2Life
Sciences, Centrum Wiskunde & Informatica (CWI), Amsterdam 1098 X6, The Netherlands and 3Medical Oncology,
Dana-Farber Cancer Institute, Harvard Medical School, Boston, MA 02215, USA

*To whom correspondence should be addressed.

Received on January 26, 2016; revised on April 11, 2016; accepted on April 25, 2016

Abstract

Motivation: Third generation sequencing methods provide longer reads than second generation
methods and have distinct error characteristics. While there exist many read simulators for second
generation data, there is a very limited choice for third generation data.

Results: We analyzed public data from Pacific Biosciences (PacBio) SMRT sequencing, developed
an error model and implemented it in a new read simulator called SimLoRD. It offers options to
choose the read length distribution and to model error probabilities depending on the number of
passes through the sequencer. The new error model makes SimLoRD the most realistic SMRT read

simulator available.

Availability and Implementation: SimLoRD is available open source at http://bitbucket.org/
genomeinformatics/simlord/ and installable via Bioconda (http://bioconda.github.io).

Contact: Bianca.Stoecker@uni-due.de or Sven.Rahmann@uni-due.de.

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Third generation sequencing technologies like SMRT (single molecule
real time) sequencing are increasingly used because they yield consid-
erably longer reads than second generation methods. The error char-
acteristics of SMRT are fundamentally different from previous
technologies: The basic error rates are higher (10—15%), but errors
are considered unbiased and uniformly distributed (Eid et al., 2009),
which means that they can be reduced by sequencing a molecule sev-
eral times. As more bioinformatics applications are developed for se-
quence analysis tasks from SMRT data or hybrid data, e.g. genome
assembly, SNP calling, structural variant discovery, authors of such
tools will benefit from read simulators that take into account the spe-
cifics of the SMRT technology. The existing manifold simulators for
second generation technologies, such as ART for 454, Illumina and
SOLiD reads (Huang et al., 2012), do not do this.

There are few simulators designed for SMRT reads, e.g. PBSIM
(Ono et al., 2013), FASTQSim (Shcherbina, 2014) and Alchemy from
the BLASR package (Chaisson and Tesler, 2012), the latter now being
deprecated along with the .bas.h5 format. PBSIM’s defaults are based
on now outdated chemistry and cannot be completely re-configured.
Even if the read length is adapted, the conditional read quality

distribution does not match well existing data (Fig. 1 and
Supplement). Also, PBSIM does not provide SAM-formatted align-
ments between the reference and the simulated reads. FASTQSim is a
general-purpose tool for both read analysis and simulation. In particu-
lar, it provides pre-set parameters for SMRT simulation, but also
allows to analyze an existing dataset with regard to its properties and
simulate accordingly. However, it is unable to provide mapping infor-
mation or alignments of simulated reads and it simulates reads rather
slowly (8700 N. crassa reads with 30 cores took 90min). The simu-
lated length/quality distributions do not agree well with data (Fig. 1
and Supplement), and it is difficult to change parameters directly.

To improve upon the existing solutions, we developed a new
read simulator called ‘SimLoRD — Simulation of Long Read Data’
that is convenient to use and easily re-configured when technical
specifications change. The default values provide realistic simulation
results according to the current state of the SMRT technology
(March 2016); see Figure 1.

2 Methods

Because the sequenced DNA fragments in a SMRT library are circu-
lar with adapter sequences between forward and backward strand, a

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1

9mg ‘09 isnﬁnV uo salaﬁuV soq ‘erulomeg JO AirSJQAru [1 112 ﬂJO'sleumo[pJOJXO'soneuuogurorq/ﬁdnq wort papeolumoq

 

Sim LURD

Neuraspora crassa

 

read qualityr
(average base quality)

 

 

PBSIM _ FASTQSim

 

 

 

 

 

I I I I I I I I I I I | I I I 1 l: I I I
u soon moon 15cm 20mm 2500:: u soon ioooo 150m zoom 25am u soon moon 15am zoom 2500:: u soon mono 15am zoom 2500::
read length

Fig. 1. Joint distribution of read length and average base quality per read on a real dataset (D1 in Table 1), in a SimLoRD simulation, in a PBSIM simulation
(--Iength-mean =7000 and --|ength-sd =3000) and in a FASTQSim simulation (parameters estimated from D1)

Table 1. Datasets; see References for URLs

 

 

ID type organism CCSs subreads URL
D1 DNA Neurospora crassa 103 Mbp 982 Mbp a
D2 RNA Homo sapiens 481 Mbp 6 Gbp b

D3 RNA Homo sapiens, MCF-7 line 1.9 Gbp 15 Gbp C
D4 DNA Caenorhabditis elegans 350 Mbp 5 Gbp

O.

 

alhttps://github.com/PaciﬁcBiosciences/DevNet/wiki/Neurospora-Crassa-
(Fungus)-Genome,-Epigenome,-and-Transcriptome

bhttp://blog.paciﬁcbiosciences.com/201 4/1 0/data-release-whole-human-
transcriptome.html

Chttp://blog.paciﬁcbiosciences.com/20 1 3/12/data-release-human-mcf-7-
transcriptome.html

dhttpszllgithub.com/PaciﬁcBiosciences/DevNet/wiki/C.-elegans-data-set

fragment may be sequenced multiple times in a single run. For a sin-
gle pass through the sequence (subread), the error rate is high, but it
is possible to calculate a consensus after multiple passes (circular
consensus sequence read, CCS). Thus the error rate of CCSs
decreases with the number of passes.

Each CCS is simulated as follows from a given (or randomly gen-
erated) reference genome. First, a random chromosome of the refer-
ence and a random start position are chosen. Next, a read length is
chosen according to the user-specified model, usually a log-normal
distribution for genomic data and an empirical distribution corres-
ponding to library size selection for RNA-seq data. If the reference
contains N5 in the relevant part, those Ns are replaced randomly in
the read. This yields an error-free simulated read. To determine base
qualities and error probabilities, we first draw the (fractional) num-
ber of passes over the fragment, depending on the read length, from
a 98 distribution (details below). For example, 2.37 passes means
that the whole read is read at least twice and a part (0.37 of the
read) is read three times. The number of passes is used to determine
final error probabilities for each base, starting from given baseline
error probabilities (different for substitutions, insertions and dele-
tion) for subreads. The read is traversed, and changes are applied for
each base according to the final error probabilities. In the process,
the true alignment to the reference is tracked. With probability 1/2,
the completed read is reverse-complemented.

To determine appropriate distributions and parameters for the
simulation, we analyzed the properties of two freely available data-
sets from Pacific Biosciences (D1, D2; Table 1). The identified mod-
els and parameters were then validated with two different datasets
(D3, D4).

We found that the length of CCS reads has a log-normal distribu-
tion with certain parameters that are now the defaults in SimLoRD,
while RNA reads are usually size selected, so their lengths should be
drawn from a given empirical distribution. We also found that the
number of passes p, given the read length K, can be modeled by a
scaled chi-squared distribution with parameters n(£) (degrees of
freedom) and scale parameter s(£), both of which depend on the
read length Z. The exact dependency of n and s on K is documented
in the Supplement. If f”  := 1 / (2”/ 217(n / 2)) - x”/2_1e_x/2 is the
chi-squared density with n degrees of freedom, then p has scaled
density gm, (p) := f” (p / s) /s. With increasing p, basepair error proba-
bilities decrease. We found that this dependency can be modeled by
a noisy square root function: When 8 is a basepair error probability
in a subread, in a CCS it becomes becomes 31(9) with 1(1)) 2 W
—b+N with parameters a, b and normally distributed noise N
(with additional parameters; see Supplement).

3 The SimLoRD tool

SimLoRD is a command line tool implemented in Python 3 that uses
the observations above to simulate SMRT CCS reads. The only
required positional argument is the path prefix of the simulated
reads. The parameter -n determines the number of simulated reads.
The true alignments of the simulated reads to the reference are
stored in SAM format (using .sam instead of .fastq as file extension;
this can be customized). The reference can be either read from a
FASTA file (—rr PATH) or randomly generated (—gr GC LEN) with
given GC content and length and stored.

Many parameters controlling the properties of the generated
reads exist (see the Supplement for details). For choosing the read
length distribution, there are four possibilities: (i) providing par-
ameters for a log-normal distribution (—1n SIGMA LOC SCALE);
(ii) setting a fixed read length (—fl LEN); (iii) sampling the read
length from an existing FASTQ file (—sf PATH); (iv) sampling the
read length from a file containing one integer per line (— st PATH).
The baseline error probabilities for subreads can be specified indi-
vidually for substitutions (—ps), insertions (—pi) and deletions (—
pd). Consider the following example, where 10 000 reads are simu-
lated, sampled from random positions of the reference ref .fa
and written to reads . f astq. Error probabilities for subreads are
1, 12 and 2% for substitutions, insertions and deletions, respect-
ively, on average (15% total error probability). Alignments are
written to reads . sam. With the Neurospora crassa reference, this
example takes 2:10 min.

9mg ‘09 isnﬁnV uo salaﬁuV soq ‘erulomeg JO AirSJQAru [1 112 ﬂJO'sleumo[pJOJXO'soneuuogurorq/ﬁdnq wort papeolumoq

SimLoRD: Simulation of Long Read Data

 

simlord —n 10000 —rr ref . fa —pi . 12 —pd . 02 —ps . 01 reads

To conclude, we have presented a Python-based read simulator
(SimLoRD) whose error model corresponds to third-generation
SMRT error characteristics, with default parameters based on public
datasets. Relevant parameters are easily adjustable via command
line arguments, so the simulator can be quickly adapted to new
chemistries as they are developed. SimLoRD is convenient to install
with standard Python tools and runs on all standard platforms. We
hope that many researchers will benefit from the ability to generate
simulated SMRT data when developing novel analysis applications.

Conﬂict of Interest: none declared.

References

Chaisson,M.]. and Tesler,G. (2012) Mapping single molecule sequencing
reads using basic local alignment with successive reﬁnement (BLASR): appli-
cation and theory. BMC Bioinformatics, 13, 238.

Eid,]. et al. (2009) Real-time DNA sequencing from single polymerase mol-
ecules. Science, 323, 133—138.

Huang,W. et al. (2012) ART: a next-generation sequencing read simulator.
Bioinformatics, 28, 5 93—5 94.

Ono,Y. et al. (2013) PBSIM: PacBio reads simulator — toward accurate gen-
ome assembly. Bioinformatics, 29, 119—121.

Shcherbina,A. (2014) FASTQSim: platform-independent data characteriza-
tion and in silico read generation for NGS datasets. BMC Res Notes,
7, 533.

9mg ‘09 1sn8nV uo salaﬁuV soq ‘121u101n123 JO A11819Aruf1 112 ﬁlO'SIBIIan[p.IOJXO'SODBIIHOJIITOTQ/ﬂ(11111 111011 papeolumoq

