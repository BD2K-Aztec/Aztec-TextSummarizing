Vol. 30 E008 2014, pages i556—i563
doi:10. 1093/bioinformatics/btu464

 

Drug susceptibility prediction against a panel of drugs using
kernelized Bayesian multitask learning

Mehmet Glc'jnen’“T and Adam A. MargolinI
Sage Bionetworks, Seattle, WA 98109, USA

 

ABSTRACT

Motivation: Human immunodeficiency virus (HIV) and cancer require
personalized therapies owing to their inherent heterogeneous nature.
For both diseases, large-scale pharmacogenomic screens of molecu-
larly characterized samples have been generated with the hope of
identifying genetic predictors of drug susceptibility. Thus, computa-
tional algorithms capable of inferring robust predictors of drug
responses from genomic information are of great practical importance.
Most of the existing computational studies that consider drug suscep-
tibility prediction against a panel of drugs formulate a separate learning
problem for each drug, which cannot make use of commonalities be-
tween subsets of drugs.

Results: In this study, we propose to solve the problem of drug sus-
ceptibility prediction against a panel of drugs in a multitask learning
framework by formulating a novel Bayesian algorithm that combines
kernel-based non-linear dimensionality reduction and binary classifi-
cation (or regression). The main novelty of our method is the joint
Bayesian formulation of projecting data points into a shared subspace
and learning predictive models for all drugs in this subspace, which
helps us to eliminate off-target effects and drug-speciﬁc experimental
noise. Another novelty of our method is the ability of handling missing
phenotype values owing to experimental conditions and quality control
reasons. We demonstrate the performance of our algorithm via cross-
validation experiments on two benchmark drug susceptibility datasets
of HIV and cancer. Our method obtains statistically significantly better
predictive performance on most of the drugs compared with baseline
single-task algorithms that learn drug-specific models. These results
show that predicting drug susceptibility against a panel of drugs
simultaneously within a multitask learning framework improves overall
predictive performance over single-task learning approaches.
Availability and implementation: Our Matlab implementations for
binary classification and regression are available at https://github.
com/mehmetgonen/kbmtl.

Contact: mehmet.gonen@sagebase.org

Supplementary Information: Supplementary data are available at
Bioinformatics online.

1 INTRODUCTION

Human immunodeﬁciency virus (HIW and cancer, which are
two major human diseases causing millions of deaths yearly,
require ‘personalized therapies’ owing to their inherent heter-
ogenous nature. For both diseases, large-scale pharmaco genomic

 

*To whom correspondence should be addressed.
TPresent address: Department of Biomedical Engineering, Oregon Health
& Science University, 3303 SW Bond Avenue, Portland, OR 97239, USA

screens have been performed with the hope of discovering asso-
ciations between genetic subtypes of each disease and drug
susceptibility (Barretina et al., 2012; Garnett et al., 2012; Rhee
et al., 2003).

HIV is usually treated with antiretroviral therapies, which
have demonstrated high efﬁcacy. However, the high mutation
rate of HIV helps the virus adapt fast, leading to drug-resistant
viral strains. Thus, selecting the optimal therapeutic regimen for
a given HIV strain requires the ability to predict drug resistance
based on its genomic sequence. To enable this type of discovery,
Rhee et al. (2003) characterize the susceptibility of >1000
genomically sequenced HIV strains to subsets of multiple HIV
therapeutic agents.

Cancer is a collection of genetically diverse diseases, and many
modern cancer therapeutics have demonstrated selective efﬁcacy
in speciﬁc matched genetic subtypes (Druker et al., 2001). Thus,
patient selection strategies for personalized cancer therapeutics
require the ability to predict drug sensitivity based on molecular
information about a patient’s tumor. For this purpose, Barretina
et al. (2012) and Garnett et al. (2012) characterize the sensitivity
of >500 molecularly proﬁled cancer cell lines to 24 and 138
anticancer compounds, respectively.

For both HIV and cancer, researchers have developed
genomic predictors of drug susceptibility using modern machine
learning techniques for high-dimensional classiﬁcation or regres-
sion. For example, Rhee et al. (2006) use machine learning algo-
rithms such as decision trees, artiﬁcial neural networks, support
vector machines, least squares regression and least angle regres-
sion to predict drug resistance in HIV type 1 (HIV-1) using the
sequence of the viral reverse transcriptase. Barretina et al. (2012)
and Garnett et al. (2012) use a regularized regression method
(elastic net) to predict drug sensitivities based on cancer cell
line molecular proﬁles, and Neto et al. (2014) formulate a
Bayesian extension of this approach in a recent study. Menden
et al. (2013) combine genomic features of cell lines and chemical
features of drugs for sensitivity prediction using a neural network
approach. J ang et al. (2014) and Papillon—Cavanagh et al. (2013)
compare the performance of various machine learning methods
applied to the cancer cell line datasets.

One potential limitation of these approaches is the formulation
of a separate learning task for each drug. In particular, because
each pharmacogenomic screen proﬁles multiple drugs with simi-
lar mechanisms of action, leveraging information across multiple
related drugs may yield improved model robustness by reducing
the impact of ‘off-target effects’ and drug-speciﬁc experimental
noise. Moreover, methods that jointly model sensitivity proﬁles
across multiple drugs may yield insights into groups of drugs
effecting similar biological processes or infer mechanisms of
action for uncharacterized compounds. For example, Wei et al.
(2012) combine elastic net regression with an expectation

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/Iicenses/by-nc/4.0I), which permits
non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re—use, please contact joumals.permissions@oup.com

112 [3.10811211an[p.IOJXO'SODBIIHOJIIIOIQ/ﬂ(11111 IIIOJJ popcorn/hog

910K ‘09 lsnﬁnV no :2

Drug susceptibility prediction against a panel of drugs

 

maximization algorithm to simultaneously cluster groups of
similarly behaving compounds and infer a predictive model for
each cluster. Heider et al. (2013) formulate predicting drug re-
sistance against a panel of HIV-1 drugs as a ‘multilabel learning’
problem (Tsoumakas et al., 2010), which aims to use all available
information by learning models for all drugs simultaneously.
They show that this joint modeling approach is better than in-
dependent modeling in terms of predictive performance.
However, their algorithm has some limitations: (i) It is based
on the classiﬁer chains formulation (i.e. training separate pre-
dictors for all drugs successively linked along a chain) (Read
et al., 2011), which is not sufﬁcient to capture more complex
dependencies between drugs. (ii) It assumes that each data
point have the corresponding drug resistance score for all of
the drugs considered (i.e. no missing output), which limits the
applicability of the proposed method because, in large-scale
pharmacogenomic assays, there may be many missing values
owing to experimental conditions, quality control reasons, etc.

For predicting drug susceptibility against a panel of drugs, we
propose a novel Bayesian formulation that combines kernel-
based non-linear dimensionality reduction (Scholkopf and
Smola, 2002) and binary classiﬁcation (or regression) in a ‘multi-
task learning’ framework (Caruana, 1997), which tries to solve
distinct but related tasks jointly to improve overall generalization
performance. Our proposed method, called ‘kernelized Bayesian
multitask learning’ (KBMTL), has two key properties: (i) It
maps all data points into a shared subspace and learns predictive
models for all drugs simultaneously in this subspace to capture
commonalities between the drugs. Joint modeling of drugs en-
ables us to eliminate off-target effects and drug-speciﬁc experi-
mental noise, leading to a better predictive performance. (ii) It
can handle missing values of drug susceptibility measurements,
which enables us not to discard data points with missing outputs,
leading to larger data collections. As a result, the obtained pre-
dictions become more robust especially for drugs with a large
number of missing phenotype values.

To show the performance gain of our method over standard
modeling approaches, we perform cross-validation experiments
on two benchmark drug susceptibility datasets of HIV and
cancer.

2 MATERIALS

In this study, we use two different drug susceptibility datasets, which we
extract from the following sources: (i) HIV Drug Resistance Database
O-IIVDB) (Rhee et al., 2003), (ii) Genomics of Drug Sensitivity in
Cancer (GDSC) (Yang et al., 2013). These two data sources are publicly
available at http://hivdb.stanford.edu and http://www.cancerrxgene.org,
respectively.

2.1 HIV drug resistance database

HIV DB contains phenotype and genotype information about HIV -1 (i.e.
viral reverse transcriptase sequences with corresponding susceptibility re-
sults and amino acid sequences). We extract all reverse transcriptase
sequences originated from subtype B strains, which gives us 970 reverse
transcriptase sequences in total. We use drug susceptibility results mea-
sured using the PhenoSense method for eight nucleoside analogs, namely,
Lamivudine (3TC), Abacavir (ABC), Zidovudine (AZT), Stavudine
(d4T), Zalcitabine (ddC), Didanosine (ddI), Tenofovir (TDF) and

Emtricitabine (FTC). Drug susceptibility results are given as fold
change in susceptibility (i.e. standardized measure of HIV drug resist-
ance), which is deﬁned as

IC50 of an isolate
IC50 of a standard wild-type control isolate

 

ICSO ratio =

where IC50 of a resistant or wild-type control isolate gives its half max-
imal inhibitory concentration. We label reverse transcriptase sequences as
‘resistant’ or ‘susceptible’ using drug-speciﬁc cutoff values as done simi-
larly in the earlier studies (Heider et al., 2013; Rhee et al., 2006). The
cutoff is set to 1.5 for d4T, ddC, ddI and TDF, and to 3.0 for 3TC, ABC,
AZT and FTC. Supplementary Figure S1 shows the drug resistance labels
and the histogram of available IC50 ratios for 970 reverse transcriptase
sequences.

We remove the sequences with no phenotype information (i.e. 48 re-
verse transcriptase sequences with no IC50 ratios), leading to a ﬁnal
dataset with 922 reverse transcriptase sequences. Table 1 summarizes
the ﬁnal dataset by listing the drug name, the corresponding analog,
the number of reverse transcriptase sequences with measured IC50
ratio, the IC50 ratio cutoff and the ratio between resistant and susceptible
classes for each drug.

For each reverse transcriptase, genotype information is extracted from
the amino acid sequence of positions 1—240. Amino acid differences from
the subtype B consensus wild-type sequence are considered as mutations.
There are 1474 unique mutations for 922 reverse transcriptase sequences
in our dataset, which means each reverse transcriptase sequence can be
represented as a 1474-dimensional binary vector.

2.2 Genomics of drug sensitivity in cancer

GDSC contains phenotype and genotype information about cancer (i.e.
cancer cell lines with corresponding sensitivity results and genomic pro-
ﬁles). We use drug sensitivity results measured against 138 anticancer
drugs, which are given in terms of half maximal inhibitory concentration
(IC50) and area under the dose—response curve (AUC) values. We choose
to perform our analysis on AUC values because IC50 values are not
observed before the maximum screening concentration for a signiﬁcant
proportion of the drug and cell line pairs (i.e. most of the cell lines are
resistant to a given drug within the range of experimental screening con-
centrations). Supplementary Figure S2 shows the AUC values and the
histogram of available dose—response curves for 790 cancer cell lines.
GDSC contains genomic proﬁles in the forms of copy number vari-
ation, gene expression and mutation proﬁles. We choose to use only gene
expression, as it is shown to be the most informative data source in earlier
studies (Jang et al., 2014). Gene expression proﬁle is extracted from
hybridized RNA in HT-HGU133A Affymetrix whole genome array.

Table 1. Summary of HIV -1 dataset

 

 

Drug name Analog Number of IC50 ratio Class ratio
sequences cutoff
3TC Cytidine 910 3.0 2.487
ABC Guanosine 743 3 .0 1 .444
AZT Thymidine 905 3 .0 1 .257
d4T Thymidine 908 1 .5 1 .147
ddC Pyrimidine 472 1.5 1.713
ddI Guanosine 908 1 .5 1 .253
TDF Adenosine 545 1 .5 0.622
FTC Cytidine 165 3.0 2.587

 

Note: Class ratio denotes the ratio between numbers of resistant and susceptible
sequences.

 

112 ﬁhO'smumo[pJOJXO'sorichOJurorw/zdnq IIIOJJ popcorn/hog

910K ‘09 lsnﬁnV no :2

M. Gonen and A.A.Margolin

 

There are 12024 normalized gene expression intensities generated using
the MAS5 algorithm (Hubbell et al., 2002), which means each cell line can
be represented as a 12 024-dimensional real-valued vector.

We remove the cell lines with no phenotype or genotype information,
leading to a ﬁnal dataset with 664 cell lines and 138 drugs.

3 METHODS

We consider the problem of predicting susceptibility against a panel of
drugs simultaneously for each data point, which is a viral reverse tran-
scriptase for the HIV dataset and a cell line for the cancer dataset. Instead
of training drug-speciﬁc models separately, we choose to solve this
problem with a multitask learning formulation by considering each
drug as a distinct task and learning a uniﬁed model for all tasks
conjointly. We ﬁrst discuss our proposed method for binary classiﬁcation
(i.e. classifying a data point as resistant or susceptible) in detail and then
brieﬂy mention how we extend our method to regression (i.e. predicting
real-valued sensitivity measures such as IC50 or AUC).

3.1 Problem formulation

We assume that there are T related binary classiﬁcation tasks deﬁned on
the domain X. We are given an independent and identically distributed
sample X = {xi 6 (Hf-:1. For each task, we are given a label vector
y, = {ym- e {—1, + 1}}idt, where I, gives the indices of data points with
given class labels in task i. There is a kernel function to deﬁne similarities
between the data points, i.e. k : X x X —> R, which is used to calculate
the kernel matrix K= {k(x,-, xﬂﬁé‘ij: 1.

Figure 1 illustrates the method we propose to learn a conjoint model
across the tasks; it is composed of two main parts: (i) projecting data
points into a shared subspace using a ‘kemel-based dimensionality reduc-
tion’ model and (ii) performing ‘binary classiﬁcation’ in this subspace
using the task-speciﬁc classiﬁcation parameters. We ﬁrst brieﬂy explain
these two parts and introduce the notation used.

We ﬁrst perform feature extraction using the input kernel
matrix K e RNXN and the projection matrix A e RNXR, where N is the
number of data points and R is the subspace dimensionality. When we
map the data points into a low dimensional latent subspace using the
projection matrix A, we obtain their hidden representations in this shared
subspace, i.e. H = ATK. Using a kemel—based formulation has three main
implications: (i) We can apply our method to tasks with high dimensional
representations such as genomic information and small sample size
(i.e. large 1), small n). (ii) We can learn better subspaces using non-linear
kernels such as the Gaussian kernel (i.e. kernel trick). (iii) We can use
domain-speciﬁc kernels (e. g. graph and tree kernels for structured objects)

 

 

 

 

 

 

 

 

 

Fig. 1. Flowchart of KBMTL for binary classiﬁcation. In the kernel-
based dimensionality reduction part, we ﬁrst calculate the kernel matrix
K using the original data matrix X and then ﬁnd the hidden representa-
tion matrix H by projecting the kernel matrix into a subspace using the
projection matrix A. In the binary classiﬁcation part, we ﬁrst calculate the
predicted outputs {1",};1;1 over the hidden representations using the task-
speciﬁc classiﬁcation parameters {wt};1 and then map these outputs into
the class labels {’17,};1

to better capture the underlying biological processes (Scholkopf et al.,
2004).

The task-speciﬁc classiﬁcation parts calculate the predicted
outputs {ft = H,T wt}:1 in the shared subspace using the hidden represen-
tations and the task-speciﬁc parameters {wt 6 RR},=1, where H, contains
only the data points in 2,. These predicted outputs are mapped to class
labels by looking at their signs.

3.2 Kernelized Bayesian multitask learning

We formulate a probabilistic model, called KBMTL, for the method
described earlier. We can derive an efﬁcient inference algorithm using
variational approximation because our method combines the kernel-
based dimensionality reduction and task-speciﬁc classiﬁcation parts
with a fully conjugate probabilistic model.

Figure 2 gives the graphical model of KBMTL with hyper-parameters,
priors, latent variables and model parameters. As described earlier, the
main idea can be summarized as (i) ﬁnding hidden representations for the
data points by mapping them into a subspace with the help of kernel and
projection matrices and (ii) performing binary classiﬁcation in this shared
subspace using the task-speciﬁc classiﬁcation parameters.

There are some additions to the notation described earlier: the N x R
matrix of priors for the entries of the projection matrix A is denoted by A.
For these priors, {05), ,BA} are used as hyper-parameters. The standard
deviations for the hidden representations and classiﬁcation parameters
are given as oh and ow, respectively. As short-hand notations, the
hyper-parameters of the model are denoted by = {05), ,8), ch, cw, v}, the
priors, latent variables and model parameters by
G) = {A, A, H, {w,,ﬁ},T=1}. Dependence on is omitted for clarity through-
out the manuscript.

The distributional assumptions of the kemel—based dimensionality
reduction part are deﬁned as

MN g(}~§;061,,3i) VG, S)
aﬁlkg ~ N(a;;0,(}1;)_1) V(i, S)
hilahki ~ N(h;7;a:ki,c%l) V(s, i),

where the superscript indexes the rows, and the subscript indexes the
columns. N(-; IL, 2) represents the normal distribution with the mean
vector [L and the covariance matrix 2. Q(-; a, ,8) denotes the gamma
distribution with the shape parameter a and the scale parameter ,8.

The binary classiﬁcation part has the following distributional assump-
tions:

was ~ N(wt,s; 0, 03,) V(t, S)
ftJIhi, wt ~ N02,; thhi, 1) v0, i e 1,)
J’t,ilft,i N 6(ft.i)’t,i>v) V0, i E It),

where the predicted outputs {ﬂ}; 1, similar to the discriminant outputs in
support vector machines, are introduced to make the inference proced-
ures efﬁcient (Albert and Chib, 1993). The non-negative margin param-
eter v is introduced to resolve the scaling ambiguity and to place a low-
density region between two classes, similar to the margin idea in support
vector machines, which is generally used for semi-supervised learning
(Lawrence and Jordan, 2005). 6(-) represents the Kronecker delta func-
tion that returns 1 if its argument is true and 0 otherwise.

Note that the dimensionality reduction part considers all data points,
whereas the binary classiﬁcation part considers only the data points with
given labels in each task, leading to the ability of handling missing values.

3.2.] Inference using variational Bayes To obtain an efﬁcient
inference mechanism, we formulate a deterministic variational approxi-
mation instead of using a Gibbs sampling approach, which is computa-
tionally expensive (Gelfand and Smith, 1990). The variational methods
use a lower bound on the marginal likelihood using an ensemble of

 

i558

112 /810's112umo[pJOJXO'sor112u1101urorq/ﬁd11q 111011 papeolumoq

910K ‘09 lsnﬁnV no 2:

Drug susceptibility prediction against a panel of drugs

 

2
oh ow

 

rtasks

K coo
04A

co my
ﬁx

Fig. 2. Graphical model of KBMTL for binary classiﬁcation. Small ﬁlled
circles: hyper-parameters; large shaded circles: observed variables; other
large circles: random variables

 

factored posteriors to ﬁnd the joint parameter distribution (Beal, 2003).
We can write the factorable ensemble approximation of the required
posterior as

T
p(elK, 6.1:.) w q(®) = q(A)q(A)qai)1'[[q(wt)q(/1)1
t=1

and deﬁne each factor in the ensemble just like its full conditional distri-
bution:

N' R
M) = H H902; 0:02), 1802))

i=ls=l

R
q(A) = Hmas; mas), 21a.»
s = 1

N
qrﬂ) = TIM/1.; Mai), 20:.»
i= 1

61(Wt) =N(Wt§ MOW), 20%))
W.) = H Won; mm), 202,-), p02,»),

E1,

where a(-), ,8(-), ,a(-) and 2(-) denote the shape parameter, the scale
parameter, the mean vector and the covariance matrix for their argu-
ments, respectively. TN(-; IL, 2, p(-)) denotes the truncated normal dis-
tribution with the mean vector pi, the covariance matrix 2 and the
truncation rule p(-) such that TN(-; 111,2, p(-)) ocN(-;IL,2) if p(-) is
true and TN(-; IL, 2, p(-)) = 0 otherwise.

We can bound the marginal likelihood using Jensen’s inequality:

10g part}; 1 IK) z
Eq(o)[10g19({yt}f=1’ (“)IK)] — Eq(o)[10g Q((”))]

and optimize this bound by maximizing with respect to each factor sep-
arately until convergence. The approximate posterior distribution of a
speciﬁc factor ‘L’ can be found as

qe) oc exp (Eq(o\r)[10g part}; 1, @1119}; 1)1).

For our proposed model, thanks to the conjugacy, the resulting
approximate posterior distribution of each factor follows the same
distribution as the corresponding factor. The technical details of our
inference mechanism can be found in the Supplementary Material.

3.2.2 Prediction scenario We can replace p(AlK, {yu}uT=1) with
its approximate posterior distribution q(A) and obtain the
predictive distribution of the latent representation h, for a new data

point x* as

R
1201.112, K, 6.15:.) = H N021; mam, oi + Ewan).
s=1

The predictive distribution of the predicted output fa, can also be
found by replacing p(wth, {yu}uT=1) with its approximate posterior distri-
bution q(wt):

Pm,*|hn K, {yu}uT=1) =

1 1
N(ft,*;.u(wt)T|: :|,1+[1 h*]2(wt)|: :|),
h, h*

and the predictive distribution of the class label y” can be formulated
using the predicted output distribution:

 

p6,. = +1m,.,K,1v.}§=1)= Z;2¢("(f”*)),

202*)

where Zn, is the normalization coefﬁcient calculated for the test data
point, and d>(-) is the standardized normal cumulative distribution
function.

3.3 Baseline algorithms

To show the practical importance of multitask learning, we compare our
method to two baseline algorithms: (i) Bayesian single-task learning and
(ii) kernelized Bayesian single-task learning. The technical details for the
baseline algorithms can be found in the Supplementary Material.

3.3.1 Bayesian single-task learning Instead of learning a unified
model for all tasks conjointly, we can train a separate model for each
task. For this purpose, we use a Bayesian linear classiﬁcation algorithm,
which is known as ‘probit classiﬁer’ (Albert and Chib, 1993). We call this
algorithm ‘Bayesian probit classiﬁer’ (BPROBIT).

3.3.2 Kernelized Bayesian single-task learning Instead of training
a linear model, we can also use a kernelized algorithm to obtain non-
linear models. For this purpose, we use a kernelized Bayesian classiﬁca-
tion algorithm, which is known as ‘relevance vector machine’ (Bishop and
Tipping, 2000; Tipping, 2001). We call this algorithm ‘Bayesian relevance
vector machine’ (BRVM).

3.4 Extension to regression problems

Our method and two baseline algorithms are deﬁned for the binary clas-
siﬁcation scenario but they can easily be extended to regression problems.
The technical details for the regression variant of our method can be
found in the Supplementary Material. We explain the regression variant
of our method in detail, and the regression variants of baseline algorithms
can also be derived similarly.

4 RESULTS AND DISCUSSION

To illustrate the effectiveness of our proposed KBMTL method,
we report its results on two datasets and compare it with two
baseline algorithms, namely, BPROBIT and BRVM. We have
three main reasons for these particular choices: (i) Both
BPROBIT and BRVM use same type of inference mechanism
with our method. (ii) BPROBIT is from the family of linear and
regularized algorithms, which are considered as the standard ap-
proach for drug susceptibility prediction. (iii) We can see the
effect of multitask formulation by comparing our method to

 

i559

112 /810's112umo[pJOJXO'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

M. Gonen and A.A.Margolin

 

BRVM, which can also make use of kernel functions for drug-
speciﬁc models.

4.1 Experimental setting and performance metrics

For each dataset, data points are split into ﬁve subsets of roughly
equal size. Each subset is then used in turn as the test set, and
training is performed on the remaining four subsets. This pro-
cedure is repeated 10 times (i.e. 10 replications of 5-fold cross-
validation) to obtain robust results.

We use ‘area under the receiver operating characteristic curve’
(AUROC) to compare classiﬁcation results. AUROC is used to
summarize the receiver operating characteristic curve, which is a
curve of true positives as a function of false positives while the
threshold to predict labels changes. Larger AUROC values cor-
respond to better performance.

We use ‘normalized root mean square error’ (NRMSE) to
compare regression results. NRMSE of drug 1 can be calculated
as

 

(.Vt _5’1)T(yt _j’t)
(yr _ IITyt/NZ)T(yt _ IITyt/Nl),

where y, and 9, denote the measured and predicted output vec-
tors, respectively. Smaller NRMSE values correspond to better
performance.

 

NRMSE, = \/

4.2 Performance comparison on HIVDB

On HIVDB, we compare three algorithms, namely,
BPROBIT, BRVM and KBMTL, in terms of their classiﬁcation
performances. For BPROBIT, the hyper-parameter values are se-
lected as (a,,, By) = (1, 1), (an, ,6”) = (1, 1) and v = 1. For BRVM,
the hyper-parameter values are selected as (a,,, By) = (1, 1), (05),,
,BA) = (1, 1) and v = 1. For KBMTL, the hyper-parameter values
are selected as (a1,)3j)=(1,1), oh=0.1, ow=1 and v = 1. The
shape and scale hyper-parameters of gamma distributed priors
are set to non-informative values not to impose sparsity on the
model parameters. The number of components in the hidden
representation space is selected as R = 10. For all algorithms,
we perform 200 iterations during variational inference.

To calculate similarity between reverse transcriptase sequences
for BRVM and KBMTL, we use the Gaussian kernel deﬁned as
kg(x,-,xJ-)=exp (—||x,- —xj||%/s2), where the kernel width s is
chosen among #5, m, 8/5, W and 8/3 using an internal
5-fold cross-validation scheme on the training set. We decide to
make a selection from these particular values because the mean
of pairwise Euclidean distances between data points, which is
frequently used as the default value for s, is approximately J2—5.

Table 2 gives the mean and standard deviation of AUROC
values obtained by BPROBIT, BRVM and KBMTL for each
drug over 50 replications as their performance measures. We see
that KBMTL obtains the highest mean AUROC values for seven
of eight HIV-1 drugs by improving the results from 0.5 (3TC) to
2.3% (TDF) compared with the second highest. For FTC,
BPROBIT obtains the highest mean AUROC value, whereas
KBMTL falls behind by 0.3%. We also report the average
AUROC values over drugs in the last row of Table 2. We see
that KBMTL outperforms BPROBIT and BRVM by 2.1 and
1.7%, respectively. Figure 3 compares the performance of

Table 2. Mean and standard deviations of AUROC values for
BPROBIT, BRVM and KBMTL on HIV -1 drug resistance dataset to-

gether with ranks in parentheses

 

 

Drug BPROBIT BRVM KBMTL
3TC 0.942i0.013 (2) 0.933 $0.018 (3) 0.947i0.014 (1)
ABC 0.881i0.027 (3) 0.908 i0.026 (2) 0.917i0.024 (1)
AZT 0.940i0.015 (3) 0.952i0.015 (2) 0.958i0.013 (1)
d4T 0.904i0.026 (3) 0.927i0.021(2) 0.936i0.020 (1)
ddC 0.880i0.038 (3) 0.886i0.047 (2) 0.897i0.039 (1)
ddI 0.827i0.025 (3) 0.859i0.023 (2) 0.869i0.021(1)
TDF 0.884i0.030 (2) 0.876i0.031(3) 0.907i0.025 (1)
FTC 0.971 i0.030 (1) 0.920i0.053 (3) 0.968i0.034 (2)
Average 0.904i0.011(3) 0.908 $0.013 (2) 0.925i0.012 (1)

 

Note: The best result for each row is marked in bold face if it is statistically signiﬁ-
cantly better than the others according to the paired t-test with P< 0.01.

BPROBIT, BRVM and KBMTL for each drug using box-and-
whisker plots. It also compares KBMTL and the best baseline
algorithm for each drug using scatterplots. We clearly see that
KBMTL is superior to BPROBIT and BRVM on all drugs
except FTC. The performance differences obtained by
KBMTL over BPROBIT and BRVM on these seven drugs are
statistically signiﬁcant according to the paired t-test with
P<0.01. The increased performance of KBMTL cannot be
explained by the non-linearity introduced owing to the
Gaussian kernel alone because BRVM also uses the Gaussian
kernel and is able to outperform BPROBIT by only 0.4%. The
main reason of this increased performance is the joint modeling
of drugs with multitask learning.

To illustrate the biological relevance of our method, we ana-
lyze the ability to identify drugs with similar mechanisms of
action based on hierarchical clustering of drugs based on the
task-speciﬁc classiﬁcation parameters inferred by KBMTL.
Supplementary Figure S3 compares the clustering results ob-
tained using KBMTL parameters versus clustering based on
similarity of IC50 ratios. We see that the analogs of Cytidine
(3F C and FTC) are clustered together at the bottom level of
the dendogram using both IC50 ratios and KBMTL parameters
for correlation calculation. However, the other drugs with the
same analog are not clustered together at the bottom level based
on IC50 ratios. If we use the task-speciﬁc classiﬁcation param-
eters {w,}§=1 found by KBMTL for correlation calculation,
hierarchical clustering is able to ﬁnd three clusters: (i) analogs
of Cytidine (3TC and FTC), (ii) analogs of Guanosine (ABC and
ddI) and (iii) analogs of Thymidine (AZT and d4T). These re-
sults show that KBMTL is able to reveal underlying biological
similarities between drugs and to make use of this information to
improve predictive performance.

4.3 Performance comparison on GDSC

On GDSC, we compare four algorithms, namely, BRVM with
the linear kernel (BRVM[L]), BRVM with the Gaussian kernel
(BRVM[G]), KBMTL with the linear kernel (KBMTL[L]) and
KBMTL with the Gaussian kernel (KBMTL[G]), in terms of

 

i560

112 /810's112umo[pJOJXO'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

Drug susceptibility prediction against a panel of drugs

 

Lamivudine (3TC) Abacavir (ABC)

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

A— o +-DCI—-+ A—+---DCI---+
B-+---I:I:I----+ B- +---DC|-+
c-o +----—-+ c— +---—--+
| | | | | | | | | | |
c o .z 0.96 —c g. ,
O I
0.96 - "33‘!" 0.94 — f:
‘0..." 0.92 — ', §
0.94 — ’0 s'; 0.90 — £053
0 O O. O
, 0.88 - .9“
092 - z 1» ,
- x, 0.86 — ’9
I 0.84 - I
0-90 — I p—vaIue=0.00374 A 082 I p-value<1e-5 B
I I I l - l I I I I I I
0.90 0.94 0.82 0.86 0.90 0.94
Zalcitabine (ddC) Didanosine (ddl)
A—o+----DCI--+ A-+---DC|--4
B—o+-----I:I1---+ B— +-£I]--+
c- oo+---u--+ c— +-.I--+
| | l | | | l
O I
0.95 —C . o g 0.90 —C 33:}
090 — ° '1’“ "9i."
' ‘03... 0.85 - ' v"
o ’ :0. .0
0.85 — . 3‘ ,I
' ’3 080 — ”
 —..” ' ’1
’ p—value = 0.00045 B ’ p—value <1e—5 B
| | l | | | l
0.80 0.90 0.80 0.85 0.90

Zidovudine (AZT) Stavudine (d4T)

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

A-+---I:I]---4 A-r---|:IZI---4
3- Imam-4 3- o +-DCI--+
c- o +---u-+ c- Inuit-4

I I I I I I I I I I

0.98 -

C . ‘o‘ 0.96 -C 00-.

0.96 — .° ° 0 0.94 — gs“ o

‘ 2" 092 - J ’
o , '
0.94 . .éb 0_90 _ t :1 9
’ 0.88 - ’
— I‘ I,
0.92 I 0.86 _ I
’ p—value < 1e—5 B ’ p—value < 1e—5 B
I I I I I I I I I I
0.92 0.94 0.96 0.98 0.86 0.90 0.94
Tenofovir (TDF) Emtricitabine (FTC)
A— o+---£IJ--+ A— cor-{30+
B—o +---I:I}--+ B—+ ---- "CID-4
c- +---u-+ c- o o run
I I I I I I I I I

0.95 -C . : 3:11.00 -C . a

0 90 '26:. 0'95 _ ° ’ °
. — . .

.s :3" 0.90 - '5"

O O ’ I

I I
 — .Il  _ [I
I I O

’ 0.80 - ’

0-80 T ” p-value<1e-5 A ” p-value=0.33536 A
I I I I I I I I I
0.80 0.85 0.90 0.95 0.80 0.90 1.00

Fig. 3. Performance comparison between (A) BPROBIT, (B) BRVM and (C) KBMTL in terms of AUROC values on HIV -1 drug resistance dataset for
each drug. The box-and—whisker plots compare the AUROC values of the algorithms over 50 replications. The scatterplots give the AUROC values of
the best baseline algorithm and KBMTL for 50 replications on the x- and y-axes, respectively. For comparison, blue: KBMTL is better; red: KBMTL is

worse

their regression performances. For BRVM, the hyper-parameter
values are selected as (05y, ,By)=(1, 1), (05),, ,Bj)=(1, 1) and
(a6, ,86) = (1, 1). For KBMTL, the hyper-parameter values are
selected as (a1,)3j)=(1,1), (a6,)36)=(1,1), 0;, :01 and ow =1.
The number of components in the hidden representation space is
selected as R = 100. For all algorithms, we perform 200 iter-
ations during variational inference.

The training set is normalized to have zero mean and unit
standard deviation, and the test set is then normalized using
the mean and the standard deviation of the original training
set. To calculate similarity between cell lines for BRVM and
KBMTL, we use (i) the linear kernel deﬁned as
k£(x,-, xj) =xiij, where we normalize the kernel matrix to unit
maximum value (i.e. dividing the kernel matrix by its maximum
value) to eliminate scaling issues and (ii) the Gaussian kernel
whose width parameter s is chosen among x/15000, \/ 20000,
x/25000, \/ 30000 and x/ 35000 using an internal 5-fold cross-
validation scheme on the training set. We decide to make a
selection from these particular values because the mean of pair-
wise Euclidean distances between data points is ~ 25000.

Figure 4 compares the performance of BRVM and KBMTL
with the same kernel in terms of per-drug performance (i.e. 138
mean NRMSE values calculated over 50 replications) and average
performance (i.e. 50 mean NRMSE values calculated over 138

drugs) using box-and-whisker and scatterplots. We see that
KBMTL[L] obtains statistically signiﬁcantly better results than
BRVM[L] in terms of both per-drug and average performances
according to the paired t-test with P<0.01. This result is also
valid when we compare KBMTL[G] and BRVM[G]. Table 3
gives the pairwise comparison results between the four algorithms
over 138 per-drug performance values. For example, KBMTL[L]
obtains better predictive performance than BRVM[L] on 126
of 138 drugs. On 102 of these 126 drugs, KBMTL[L] is statis-
tically signiﬁcantly better than BRVM[L] according to the
paired t-test with P<0.01. If we sort the algorithms in terms
of their predictive performances, we ﬁnd the following
ordering: KBMTL[G] > KBMTL[L] > BRVM[G] > BRVM[L].
These results show that predicting drug sensitivities with a joint
model obtains superior predictive performance than using drug-
speciﬁc models irrespective of the kernel function used.

5 CONCLUSION

In this study, we consider the problem of drug susceptibility
prediction based on pharmacogenomic screens against a panel
of drugs. In contrast to earlier studies, we choose to solve this
problem with a multitask learning formulation by considering
each drug as a distinct task and learning a uniﬁed model for

 

i561

112 /810's112umo[pJOJXO'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

M. Génen and A.A.Margolin

 

Per—drug performance Average performance

 

 

 

 

 

D—oo|--I-|o D—d—l-{oo
I I I

 

 

 

 

 

 

1.4— I
,’ 1.02— ,’
1.2— ,I’ 1.00— I,’
,’ . 0.98- ,’ .
’ O
08—  I’.d.
' Bo.92—’ " B

 

A-o+-- ---|°° A— I-|I]--I o
c-o+-I1o C-|-- --|°°
I I I I I I I I I I I
C p-value<1e-5 ,’ 1_04 _C p-value<1e-5 ,’
1.4- I z
,’ 1.02 — ,’
1.2- r’ 1.00 — ,’
,”' 0.98 — ,” 0 °
1.0— I? 0.96 - ﬂ:.o
0.94 - ’
0.8- [I
’l I I I A 0'92 —I I I I I I IA
0.8 1.0 1.2 1.4 0.92 0.96 1.00 1.04

Per—drug performance

B—oo|---[I:|---| o o o B— |-- --|o 0

Average performance

 

 

 

 

I I I I I I I I
D p-value < 1e—5 , ’ 1_04 _ D
I

 

 

 

 

 

 

 

 

0.8 1.0 1.2 1.4 0.92 0.96 1.00 1.04

Fig. 4. Performance comparison between (A) BRVM with the linear kernel, 03) BRVM with the Gaussian kernel, (C) KBMTL with the linear kernel and
(D) KBMTL with the Gaussian kernel in terms of NRMSE values on cancer drug sensitivity dataset. The per-drug and average performance results
compare the algorithms using 138 mean NRMSE values calculated over 50 replications and 50 mean NRMSE values calculated over 138 drugs,
respectively. The box-and-whisker and scatterplots compare the NRMSE values of BRVM (on the x-axis of the scatterplots) and KBMTL (on the
y-axis of the scatterplots) with the same kernel. For comparison, blue: KBMTL is better; red: KBMTL is worse

Table 3. Pairwise comparison of four algorithms in terms of per-drug
performances on cancer drug sensitivity dataset

 

 

Algorithm BRVM[L] BRVM[G] KBMTL[L] KBMTL[G]
BRVM[L] 25/45 5/12 2/11
BRVM[G] 70/93 26/43 5/17
KBMTL[L] 102/126 64/95 4/25
KBMTL[G] 114/127 98/121 84/113

 

Note: The numbers in each comparison give statistically signiﬁcant wins according
to the paired t-test with P<0.01 and wins according to the direct comparison,
respectively, for the method of the corresponding row.

all tasks conjointly. For this purpose, we propose a novel
Bayesian multitask learning algorithm that combines kernel-
based non-linear dimensionality reduction and binary classiﬁca-
tion to classify data points as resistant or susceptible. We
formulate a deterministic variational approximation inference
scheme, which is more efﬁcient than using a Gibbs sampling
approach in terms of computation time. We then extend our
algorithm to regression to predict real-valued outputs such as
half maximal inhibitory concentration and AUC.

The main novelty of our approach comes from the joint
Bayesian formulation of projecting data points into a shared
subspace and learning predictive models for all drugs in this
subspace, which enables us to capture commonalities between
subsets of drugs to improve predictive performance. The
increased performance is due to elimination of off-target effects
and drug-speciﬁc experimental noise that may be present in drug
susceptibility values. Another novelty of our approach comes
from the ability to handle missing drug susceptibility values
owing to experimental conditions and quality control reasons,
which increases the effective sample size, leading to more robust
predictions especially for drugs with a large number of missing
phenotype values.

To demonstrate the performance of our algorithm, called
KBMTL, we perform cross-validation experiments on drug sus-
ceptibility datasets of two major human diseases, namely, HIV
and cancer. For the HIV dataset, we classify viral reverse tran-
scriptase sequences as resistant or susceptible against eight nu-
cleoside analogs using mutation proﬁles extracted from sequence
information of the viral genotype. Our multitask learning
method obtains statistically signiﬁcantly better results on seven
of eight drugs compared with two baseline single-task learning
methods that consider each drug separately. For the cancer data-
set, we predict AUC within the range of experimental screening
concentrations for each cell line against 138 anticancer drugs
using gene expression proﬁles. Our method with the linear or
Gaussian kernel obtains statistically signiﬁcantly better results
on 102 or 98 of 138 drugs, respectively, compared to a single-
task learning method with the same kernel function. These re-
sults show that predicting drug susceptibility against a panel of
drugs simultaneously within a multitask learning framework im-
proves overall predictive performance over single-task learning
approaches that learn drug-speciﬁc models.

We implement both single-task and multitask learning meth-
ods using efﬁcient variational approximation schemes, where co-
variance calculations are the most time-consuming steps because
of matrix inversions. BRVM has (9(N3) complexity per iteration,
but we need to train a separate model for each drug, leading to
(9(TN3) overall complexity. KBMTL learns a uniﬁed model for
all drugs conjointly and has (9(RN3 +NR3 + TR3) complexity
per iteration, which shows that our algorithm has comparable
computational complexity with single-task learning methods up
to moderate values of R.

We envision several possible extensions of our work in future
pharmacogenomic applications. Based on an analysis over
KBMTL model parameters, we are able to identify groups of
compounds with similar mechanisms of action. As functional
screens are being performed on increasingly large numbers of
compounds or genetic perturbations, often with poorly charac-
terized mechanisms or strong off-target effects, jointly modeling

 

i562

112 /810's112umo[pJOJXO'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

Drug susceptibility prediction against a panel of drugs

 

each compound in the context of the full screening collection
should yield novel insights into compound mechanisms.
Moreover, the ability to identify groups of related compounds
with a shared robust molecular predictor should aid drug discov-
ery efforts by improving the interpretability of large screens and
providing multiple lead compounds effecting similar biological
processes. From an algorithmic perspective, the kernelized
Bayesian framework provides an extensible template for
incorporating prior knowledge. For example, prior information
may be incorporated to encourage similar predictors to be
inferred for compounds known to target proteins in the same
pathway. Importantly, extensions of more complex prior infor-
mation are computationally tractable owing to the highly efﬁ-
cient inference performed by the variational Bayes algorithm. In
summary, we believe that the method presented in this work
contributes to the ﬁeld of pharmacogenomic analysis by improv-
ing the robustness of drug susceptibility predictions by leveraging
information shared across multiple compounds in a screen, and it
provides an efﬁcient Bayesian inference framework that may be
applied and extended by the community in future applications.

Funding: The Integrative Cancer Biology Program (ICBP) of the
National Cancer Institute (1U54CA149237). Cancer Target
Discovery and Development (CTDD) Network of the National
Cancer Institute (1U01CA176303).

Conflicts of interest: none declared.

REFERENCES

Albert,J.H. and Chib,S. (1993) Bayesian analysis of binary and polychotomous
response data. J. Amer. Statist. Assoc., 88, 669—679.

Barretina,J. et al. (2012) The Cancer Cell Line Encyclopedia enables predictive
modelling of anticancer drug sensitivity. Nature, 483, 603—607.

Beal,M.J. (2003) Variational algorithms for approximate Bayesian inference. PhD
Thesis, The Gatsby Computational Neuroscience Unit, University College
London.

Bishop,C.M. and Tipping,M.E. (2000) Variational relevance vector machines. In:
Proceedings of the 16th Conference on Uncertainty in Artiﬁcial Intelligence.
Stanford, CA, USA, pp. 46—53.

Caruana,R. (1997) Multitask learning. Mach. Learn, 28, 41—75.

Druker,B.J. et al. (2001) Efﬁcacy and safety of a speciﬁc inhibitor of the BCR—ABL
tyrosine kinase in chronic myeloid leukemia. N. Engl. J. Med, 344, 1031—1037.

Gamett,M.J. et al. (2012) Systematic identiﬁcation of genomic markers of drug
sensitivity in cancer cells. Nature, 483, 570—577.

Gelfand,A.E. and Smith,A.F.M. (1990) Sampling-based approaches to calculating
marginal densities. J. Am. Stat. Assoc., 85, 398—409.

Heider,D. et al. (2013) Multilabel classiﬁcation for exploiting cross-resistance infor-
mation in HIV-1 drug resistance prediction. Bioinformatics, 29, 1946—1952.
Hubbell,E. et al. (2002) Robust estimators for expression analysis. Bioinformatics,

18, 1585—1592.

Jang,I.S. et al. (2014) Systematic assessment of analytical methods for drug sensi-
tivity prediction from cancer cell line data. Pac. Symp. Biocomput., 19, 63—74.

Lawrence,N.D. and J ordan,M.I. (2005) Semi-supervised learning via Gaussian pro-
cesses. Adv. Neural Inf. Process. Syst., 17, 753—760.

Menden,M.P. et al. (2013) Machine learning prediction of cancer cell sensitivity to
drugs based on genomic and chemical properties. PLoS One, 8, e61318.

Neto,E.C. et al. (2014) The stream algorithm: computationally efﬁcient ridge-
regression via Bayesian model averaging, and applications to pharmacogenomic
prediction of cancer cell line sensitivity. Pac. Symp. Biocomput., 19, 27—38.

Papillon-Cavanagh,S. et al. (2013) Comparison and validation of genomic
predictors for anticancer drug sensitivity. J. Am. Med. Inform. Assoc., 20,
597—602.

Read,J. et al. (2011) Classiﬁer chains for multi-label classiﬁcation. Mach. Learn, 85,
333—359.

Rhee,S.Y. et al. (2003) Human immunodeﬁciency virus reverse transcriptase and
protease sequence database. Nucleic Acids Res., 31, 298—303.

Rhee,S.Y. et al. (2006) Genotypic predictors of human immunodeﬁciency virus type
1 drug resistance. Proc. Natl Acad. Sci. USA, 103, 17355—17360.

Sch61kopf,B. and Smola,A.J. (2002) Learning with Kemels: Support Vector
Machines, Regularization, Optimization, and Beyond. MIT Press, Cambridge,
MA.

Sch61kopf,B. et al., eds (2004) Kernel Methods in Computational Biology. MIT Press,
Cambridge, MA.

Tipping,M.E. (2001) Sparse Bayesian learning and the relevance vector machine.
J. Mach. Learn. Res., 1, 211—244.

Tsoumakas,G. et al. (2010) Mining multi-label data. In: Maimon,0. and Rokach,L.
(eds) Data Mining and Knowledge Discovery Handbook. Springer, New York,
NY, USA, pp. 667—685.

Wei,G. et al. (2012) Chemical genomics identiﬁes small-molecule MCLl
repressors and BCL-xL as a predictor of MCLl dependency. Cancer Cell, 21,
547—562.

Yang,W. et al. (2013) Genomics of Drug Sensitivity in Cancer (GDSC): a resource
for therapeutic biomarker discovery in cancer cells. Nucleic Acids Res., 41,
D955—D961.

 

112 /810's112umo[pJOJXO'sor112u1101urorq/ﬁd11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

