Bioinformatics Advance Access published June 9, 2016

Bioinformatics, 2016, 1—3

doi: l0.1093/bioinformatics/btw235

Advance Access Publication Date: 2 June 2016
Applications Note

 

 

Systems biology

RANKS: a flexible tool for node label ranking
and classification in biological networks

Giorgio Valentini1'*, Giuliano Armanoz, Marco Frasca1, Jianyi Lin1,

Marco Mesiti1 and Matteo Re1

1AnacletoLab, Department of Computer Science, University of Milan, 20135 Milan, Italy and 2Department of
Electric and Electronic Engineering, University of Cagliari, 09123 Cagliari, ltaly

*To whom correspondence should be addressed.
Associate Editor: Cenk Sahinalp

Received on January 31,2016; revised on March 28,2016; accepted on April 22,2016

Abstract

Summary: RANKS is a flexible software package that can be easily applied to any bioinformatics
task formalizable as ranking of nodes with respect to a property given as a label, such as automated
protein function prediction, gene disease prioritization and drug repositioning. To this end RANKS
provides an efficient and easy—to—use implementation of kernelized score functions, a semi—
supervised algorithmic scheme embedding both local and global learning strategies for the ana—
lysis of biomolecular networks. To facilitate comparative assessment, baseline network—based
methods, e.g. label propagation and random walk algorithms, have also been implemented.

Availability and Implementation: The package is available from CRAN: https://cran.r—project.org/.
The package is written in R, except for the most computationally intensive functionalities which are

implemented in C.
Contact: valentini@di.unimi.it

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Relevant bioinformatics problems can be modeled through net—
works, where nodes represent biomolecular entities (e.g. proteins or
genes) and edges functional relationships between them. In this con-
text a typical class of problems is node label ranking, which consists
of ordering nodes with respect to a given property under study—e.g.
the annotation with a specific Gene Ontology (GO) or Online
Mendelian Inheritance in Man (OMIM) term. Examples of these
problems are represented by protein function prediction, disease
gene prioritization and drug repositioning.

Several software tools have been recently developed for the ana—
lysis of biomolecular networks. The BioNet R package (Beisser
et 61]., 2010) provides a set of methods for the integrated analysis of
gene expression data and biological networks. HTSanalyzeR (Wang
et 61]., 2011) is a tool optimized for network analysis of High-
throughput screens, while SVD—Phy predicts functional associations
between non—homologous genes by comparing their phylogenetic
distributions (Franceschini et 61]., 2016). GeneRev (Zheng et 61].,

2012) aims at assessing the functional relevance of genes from high-
throughput data. SANTA (Cornish et 61]., 2014) uses spatial statistics
techniques to assess the functional information content of a biolo—
gical network with respect to a given set of seed genes. The GeneNet
Toolbox for Matlab (Taylor et 61]., 2015) can evaluate the relevance
of functional relationships by performing a statistical assessment of
gene connectivity using seed nodes, network randomization and per-
mutation techniques.

The aforementioned tools are limited in their application by the
usage of a specific source of data (as in the case of BioNet and
HTSanalyzeR) or do not allow to integrate custom methods in the
analysis workflow (as in the case of GeneRev). Other software tools
can use different sources of data but are devised to evaluate the rele—
vance of functional relationships, as in the case of GeneNet, and
cannot be obviously used to predict functional labels for the nodes
of the network.

To provide a data source—independent bioinformatics tool for
solving arbitrary node label ranking and classification problems in

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journalspermissions@oup.com l

91% ‘09 1sn3nv uo sepﬁuv s01 ‘EIUJOJIIBQ aIo Amie/gun 112 /§.IO'S[BLLIHO[p.IOJXO'SODBIHJOJUIOIQ/ﬁdllq 11101; prBOIUAAOG

G. Valentini et al.

 

biological networks, we devised RANKS (RAnking of Nodes with
Kernelized Score functions), a ﬂexible algorithmic scheme imple-
mented and distributed as an R software package. RANKS embeds
kernelized score functions that have been successfully applied to
gene function prediction (Re et al., 2012), gene disease prioritization
(Valentini et al., 2014) and drug repositioning (Re and Valentini,
2013) problems. Other popular network—based algorithms, such as
random walk and label propagation, are also provided by the
package.

2 Algorithmic framework

RANKS takes as input the adjacency matrix of the graph represent—
ing a functional or genetic network, e.g. a coexpression or a protein—
protein interaction (PPI) network, and a set of ‘seed’ nodes having
the specific biologic property under study, e.g. proteins with a spe—
cific GO annotation or drugs having a specific therapeutic indica—
tion. Then it tries to propagate this property from seeds to the other
nodes, according to a semi—supervised learning strategy which relies
on similarity between nodes. In fact, RANKS can extend the concept
of similarity between nodes, embedded for instance in a PPI net—
work, by applying a kernel (e.g. a graph kernel) to a specific net—
work to compare a node with others according to the topology of
the underlying graph (Fig. 1).

In the most general case a kernel (e.g. a random walk kernel)
accomplishes a global learning strategy by exploiting the overall top—
ology of the network. If no kernels are applied, RANKS adopts a
local learning strategy similar to that of classical guilt—by—association
methods: i.e. each node learns only from its neighborhood. Finally,
nodes are ranked with a specific scoring function, such as the
nearest—neighbour or average score (Fig. 1), according to the weights
of the edges and to the annotations of the neighborhood nodes (see
Supplementary Information for more details).

RANKS implements a modular algorithmic scheme: by choosing
different scoring functions or different kernels one may obtain dif—
ferent semi—supervised learning algorithms applicable to a large
range of node label ranking problems in bioinformatics. Moreover
the low computational complexity of the underlying semi-
supervised learning algorithms allows fast and efficient ranking of
nodes also in large networks: once the kernel is computed, the com—
plexity is linear in the number of nodes in sparse networks.

 

 

Any kernel:
Global Ke m Bl ,, - Linear kernel
learning — Gaussian kernel
1 —§[ggﬂ greets;
' a a . Node
' —" Score function —- ranking
 — . 1 -~ 
 Average score: 5“ 'r-‘Ir’t =|V I 2. K W“ i
5 r x- t' 
Local  . , 
reaming  kNN score: 51.13; mi”. =M  h m: 

NN scum: .“5',Mr v.11", —ril:r.~. “.1. K VJ 

 

Fig. 1. The RANKS algorithmic framework adopts both local and global learn-
ing strategies. Kernels enforce a global learning strategy by extending the no-
tion of similarity between nodes beyond the simple concept of connectivity
between adjacent nodes, while score functions adopt local learning strategies
by considering only the direct neighborhood of a given node v. Vc denotes
the subset of annotated nodes, K(v, X) a kernel function defined on nodes v
and X, and kNN(v) the k nodes most similar to a node v

3 Implementation

The top-level algorithmic scheme is written in R, but the most computa—
tionally demanding parts (e.g. the implementation of kernels) are written
in C language and invoked from R code as .C calls. The user—friendly
software interface of RANKS allows to independently select different
kernels (e.g. linear, Cauchy, random walk kernels) and score functions
(e.g. Nearest—Neighbour, Average Sum scores), simply by passing them
as parameters to the methods and functions implemented in the package.

Moreover, the user can easily add her/his own kernels, score func—
tions or both to extend the algorithmic scheme (the Supplementary
Information shows several examples on how to extend the library).
The package provides four main categories of methods:

1. Methods to implement score functions, including k—Nearest—
Neighbour, Average Score and Weighted Sum with Linear
Decay, the latter being a score function implemented in AraNet
(Lee et al., 2010).

2. Methods to implement kernels, including linear, Gaussian and
graph—speciﬁc kernels able to exploit the overall topology of a
network.

3. Methods to automatically apply score functions and kernels to
each node of the network: a score is assigned to each node of a
network, according to the property under study (e.g. the annota—
tion to a GO or a OMIM term).

4. High—level methods aimed at evaluating the generalization cap—
ability of the learning system. These methods include fully auto—
mated k—fold cross—validation, held—out or multiple held—out
assessment of the generalization error. By a single call to these
very high level functions an entire cross—validation cycle can be
performed by writing few lines of R code. In particular a leave—
one—out (loo) procedure can be efﬁciently performed at the cost
of a single ‘pass’ on the network, without the need of repeating
the learning process for each node.

The Supplementary Information and the Reference Manual
show several usage examples, which explain how to apply RANKS
to relevant problems in bioinformatics. For instance, the
Supplementary Information provides an example concerning the
Human Phenotype Ontology prediction, a ranking task where
RANKS resulted among the top methods in the recent CAFA2 chal—
lenge (Jiang et al., 2016).

4 Conclusion

The RANKS learning framework is well suited to perform func—
tional prediction experiments on the whole genome, as its semi—
supervised learning strategy allows to efficiently infer node labels in
large networks, starting from a small set of annotated examples.
The highly modular structure of the functions and methods available
in the corresponding R package allows users to easily experiment
with different learning algorithms by using a rich collection of inter-
changeable building blocks. Notably, the library can be extended
through user—defined kernels and score functions, and can be easily
used as a stand—alone tool or within software pipelines aimed at
ranking/classifying node labels in complex biological networks.

Conﬂict of Interest: none declared.

References

Beisser,D. et al. (2010) BioNet: an R-Package for the functional analysis of
biological networks. B ioinformatics, 26, 1 129—1 130.

91% ‘09 1sn3nv uo sepﬁuv s01 ‘EIUJOJIIBQ aIo Amie/nun 112 /§.IO'S[BU.IHO[p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq 11101; prBOIUAAOG

RANKS

 

C0rnish,A. et al. (2014) Santa: Quantifying the functional content of molecu-
lar networks. Plos Comput. Biol., 10, e1003 808.

Franceschini,A. et al. (2016) SVD-phy: improved prediction of protein func-
tional associations through singular value decomposition of phylogenetic
proﬁles. Bioinformatics, 32, 1085—1087.

Jiang,Y. et al. (2016). An expanded evaluation of protein function prediction
methods shows an improvement in accuracy. ArXiv e—prints, article ID:
1601.00891.

Lee,I. et al. (2010) Rational association of genes with traits using a genome-
scale gene network for arabidopsis thaliana. Nat. B iotecknol., 28, 149—156.

Re,M. and Valentini,G. (2013) Network-based drug ranking and reposition-
ing with respect to drugbank therapeutic categories. IEEE/ACM Trans.
Comput. Biol. Bioinﬁ, 10, 1359—1371.

Re,M. et al. (2012) A fast ranking algorithm for predicting gene functions in bio-
molecular networks. IEEE/ACM Trans. Comput. Biol. Bioinﬁ, 9, 1812—1818.
Taylor,A. et al. (2015) GeneNet Toolbox for MATLAB: a ﬂexible platform
for the analysis of gene connectivity in biological networks. Bioinformatics,

31, 442—444.

Valentini,G. et al. (2014) An extensive analysis of disease-gene associations
using network integration and fast kernel-based gene prioritization meth-
ods. Artif. Intell. Med., 61, 63—78.

Wang,X. et al. (2011) HTSanalyzeR: an R/Bioconductor package for inte-
grated network analysis of high-throughput screens. Bioinformatics, 27,
879—8 80.

Zheng,S. et al. (2012) GenReV: Exploring functional relevance of genes in mo-
lecular networks. B ioinformatics, 99, 183—188.

91% ‘09 1sn3nv uo sepﬁuv s01 ‘121u10111123 10 Amie/nun 112 /§.IO'S[BU.IHO[p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq 11101; pep1201umoq

