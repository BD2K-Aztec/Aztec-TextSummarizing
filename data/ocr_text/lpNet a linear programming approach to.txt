Bioinformatics, 31 (1 9), 2015, 3231—3233

doi: 10.1093/bioinformatics/btv327

Advance Access Publication Date: 29 May 2015
Applications Note

 

Systems biology

leet: a linear programming approach to
reconstruct signal transduction networks

Marta R. A. Matos1'”, Bettina Knapp1'2'*"r and Lars Kaderali1

1Institute for Medical Informatics and Biometry, Medical Faculty Carl Gustav Carus, Technische Universitat
Dresden, 01307 Dresden, Germany and 2Institute of Computational Biology, Helmholtz Zentrum Miinchen, 85764
Neuherberg, Germany

TThe authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.
1Present address: The Novo Nordisk Foundation Center for Biosustainability, Technical University of Denmark, Lyngby,
Denmark.

*To whom correspondence should be addressed.

Associate Editor: Igor Jurisica

Received on December 17, 2014; revised on April 25, 2015; accepted on May 19, 2015

Abstract

Summary: With the widespread availability of high-throughput experimental technologies it has
become possible to study hundreds to thousands of cellular factors simultaneously, such as cod-
ing- or non-coding mRNA or protein concentrations. Still, extracting information about the underly-
ing regulatory or signaling interactions from these data remains a difficult challenge. We present a
flexible approach towards network inference based on linear programming. Our method
reconstructs the interactions of factors from a combination of perturbation/non-perturbation and
steady-state/time-series data. We show both on simulated and real data that our methods are able
to reconstruct the underlying networks fast and efficiently, thus shedding new light on biological
processes and, in particular, into disease’s mechanisms of action. We have implemented the
approach as an R package available through bioconductor.

Availability and implementation: This R package is freely available under the Gnu Public License
(GPL—3) from bioconductor.org (http://bioconductor.org/packages/release/bioc/html/lpNet.html)
and is compatible with most operating systems (Windows, Linux, Mac OS) and hardware
architectures.

Contact: bettina.knapp@helmholtz-muenchen.de

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

Using network inference approaches it is possible to understand
how different cellular components (e.g. genes, proteins, metabolites)
interact with each other. Several methods for network inference
exist, such as Boolean networks (Bock et al., 2012; Haider and Pal,
2012), (Dynamic) Bayesian networks (BN) (Friedman et al., 2000;
Sachs et al., 2005) and methods based on differential equations
(Gardner et al., 2003; Kimura et al., 2012). Boolean networks scale
up well for larger networks and are easy to interpret. Yet, the biolo-
gical signal is binarized which leads to a substantial loss of informa-
tion. BN and differential equations allow for a more detailed

modeling of the underlying processes, but they are often applicable
only to small-scale problems as they usually scale-up poorly.

One of the major recent approaches to model signaling networks
based on perturbation data are the Nested Effects Models (NEMs)
(Markowetz et al., 2007) which have been widely applied and ex-
tended in different ways. This approach assumes a small number of
candidate pathway genes which are silenced (S-genes), and the ef-
fects of this silencing are measured on a large set of ‘effects’ genes
(E-genes)—thus using indirect observations of effects for network in-
ference. Approaches that use direct observations from perturbed net-
works obtained either at a single or several time-points include

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 3231

9mg ‘09 isnﬁnV uo seleﬁuV socl ‘erulomcg JO misreAtu [1 112 ﬁhO'slcumo[pJOJXO'sopeuJJOJutorq/ﬁdnq wort pepeolumoq

3232

M.R.A.Matos et al.

 

(Dynamic) Deterministic Effects Propagation Networks ((D)DEPNs)
(Bender et al., 2010; Frohlich et al., 2009), Dynamic Probabilistic
Boolean Threshold Networks (D-PTBNs) (Kiani and Kaderali,
2014) and Sorad (Aijo et al., 2014).

However, many of the published network inference approaches
are computationally expensive and thus not suitable for large net-
works. Also, although many methods are publicly available, a sub-
stantial fraction of them are dependent on 3rd—party proprietary
software (e.g. Matlab) and are not properly documented, thus mak-
ing them very hard to use.

Here, we present a ﬂexible approach implemented as a biocon-
ductor package, leet, freely available for any of the major operat-
ing systems. The method implemented in leet extends a previously
developed method in (Knapp and Kaderali, 2013) by adding support
for time-series data. As a result, the method is now suited for any
combination of perturbation/non-perturbation and steady-state/
time-series data, and not only for perturbation steady-state data, as
in the previous version of 2013. Furthermore, the calculation of a
node’s activity, which directly influences the resulting network, was
improved, leading to more accurate results. Finally, since the
method is formulated as a linear programming approach, inferring
networks becomes fast and efficient even for large-scale problems.

2 Methods

The signaling network to be inferred is modeled by a graph
G = (V, W), were 12,- E V, i 6 {1,11} are nodes that can represent,
e.g. genes or proteins, and 112,-,- E W, 112,-,- 6 IR are directed edges from
node 12,- to node 12,-. If 112,-,- > 0 node 12,- activates node 12,-, if 112,-,- < 0
node 12,- inhibits node 12,-, and if 112,-,- = 0 nodes 12,- and 12,- are not con-
nected. For the inference, we define an observation matrix X E RE;
which can be 2- or 3-dimensional, with dimensions representing
nodes 12,, the perturbation experiments k E {1, K} and optionally
the time points t E {1,T} in the third dimension. We have previ-
ously described the use of linear programming for network inference
from steady state data (Knapp and Kaderali, 2013). leet now im-
plements an extension that enables the use of time-series data and
thus uses a 3D observation matrix.

Perturbation experiments are encoded in an activation matrix
B”XK E {0, 1}, where 19,-k = 0 means node 12,- in perturbation experi-
ment k is silenced, otherwise it is not silenced. This matrix can also
be used to encode experiments with different stimuli, by considering
each stimulus to be a different perturbation experiment.

We assume the signal to propagate through the network as an in-
formation flow, starting in the source nodes and ending in the sink
nodes. The signal propagation is interrupted when either a silenced
node or a node inhibited by its parent nodes is reached.
Furthermore, we assume the signal to propagate from parent nodes
to child nodes one step per time point. The activity of a node i is
then given by

w? + ijixjkt—l (1)
i751

where w? 6 IR is the baseline activity of node 12,- and x,kt_1 E IRE; is
the observation value for node 12,-, in perturbation experiment k, at
time point t — 1. A node is said to be active if x,k,26,-, otherwise it is
inactive. 6,- 6 RT is a user-defined threshold, and is key for the meth-
od’s performance. Only active nodes at time point t — 1 can inﬂu-
ence other nodes at t. If a given node 12,- is considered as inactive at
t — 1 with x,k,_1 < 6,, or if it was silenced, 19,-k = 0, then x,k,_1 is set

to 0 in Equation (1), i.e. node 12,- does not contribute to node 12,-’s
activity.

Given all the stated assumptions, the network G = (V, W) is
inferred by solving a linear programming problem as described in
the Supplementary Information, Section 1, using the simplex
method, whose complexity has been shown to be polynomial in
practice.

3 Results

The performance of the first version of leet, suitable only for per-
turbation steady-state data, has been assessed (Knapp and Kaderali,
2013). As for the latest version, with support for a combination of
perturbation/non-perturbation and steady-state/time-series data, it
has been used in the DREAM 8 competition, in the HPN—DREAM
breast cancer network inference challenge, where it scored third for
the in silico challenge (AUROC: 0.68) and 29th for the experimental
challenge (AUROC: 0.57) without using prior information, among
more than 60 competing groups. In the in silico challenge the goal
was to infer the causal edges in a 20 node network given a dataset
containing the 20 nodes observations across 10 time points and 4
perturbation experiments (one of these being the control). In the ex-
perimental challenge the goal was to infer 32 causal networks, one
for each combination of cell line + stimulus—there were 4 cell lines
and 8 different stimuli. Each of the 32 datasets contained ~45 nodes
observations across 7 time points and 4 inhibition experiments (one
of these being the control). In the supplementary information, sec-
tion 3, we briefly compare leet with DDEPN (Bender, 2013), a
method also implemented as a well-documented R package and suit-
able for the same type of data. Two conclusions from this compari-
son are worth emphasizing: i) leet is very robust against noise; ii)
on the same platform, leet takes on average 15 min to infer a net-
work with 10 nodes, 10 time points and 2 perturbations, while
DDEPN takes, on average, 101 min (computations done on an Intel
Xeon X5460 @ 3 GHZ, 2X6MB L2 cache, 32GB RAM, 64 bit Linux
OS). More detailed results are presented in the supplementary ma-
terials and in (Matos, 2013).

4 Discussion and conclusion

The leet package supports now any combination of perturbation]
non-perturbation and steady-state/time-series data, and not only
perturbation steady-state data as in the 2013 version. Moreover, by
formulating network inference as a linear programming problem
and using the simplex method to solve it, leet is computationally
very efficient and runs, on average, 6—7 times faster than the
DDEPN approach. Results are robust against noise, and due to the
fast running time, cross-validation can be used to fit model param-
eters such as 6.

Funding

This work was supported by the German Ministry of Education and Research
(BMBF) via GerontoSys/AgeNet (0315898), the European Union seventh
framework program via SysPatho (grant number 260429), and the German
Research Foundation (SPP1395/InKoMBio Busch 900/6-1). MM also ac-
knowledges the Erasmus scholarship 2012-1-PT1-ERA02-125 86 (11.3) 217/
201.

Conﬂict of Interest: none declared.

9mg ‘09 isnﬁnV uo seleﬁuV socl ‘erulomcg JO AnsleAtu [1 112 ﬂJO'slcumo[pJOJXO'sopeuJJOJutorq/ﬁdnq wort pepeolumoq

IpNet

3233

 

References

Aij6,T. et al. (2013) Sorad: a systems biology approach to predict and modu-
late dynamic signaling pathway response from phosphoproteome time-
course measurements. Bioinformatics, 29, 1283—1291.

Bender,C. (2013) ddepn: dynamic deterministic effects propagation networks:
infer signalling networks for timecourse RPPA data. R package version 2.2.

Bender,C. et al. (2010) Dynamic deterministic effects propagation networks:
learning signalling pathways from longitudinal protein array data.
Bioinformatics, 26, i5 96—i602.

Bock,M. et al. (2012) Hub-centered gene network reconstruction using auto-
matic relevance determination. PLoS One, 7, e35 077.

Friedman,N. et al. (2000) Using Bayesian networks to analyze expression
data. ]. Comput. Biol. ]. Comput. Mol. Cell Biol., 7, 601—620.

Frohlich,H. et al. (2009) Deterministic effects propagation networks for recon-
structing protein signaling networks from multiple interventions. BMC
Bioinformatics, 10, 322.

Gardner,T.S. et al. (2003) Inferring genetic networks and identifying com-
pound mode of action via expression proﬁling. Science, 301, 102—105.

Haider,S. and Pal,R. (2012) Boolean network inference from time series data
incorporating prior biological knowledge. BMC Genomics, 13, S9.

Kiani,N. and Kaderali,L. (2014) Dynamic probabilistic threshold networks to
infer signaling pathways from time-course perturbation data. BMC
Bioinformatics, 15, 250.

Kimura,S. et al. (2012) Inference of S-system models of genetic networks by
solving one-dimensional function optimization problems. Math. Biosci.,
235, 161—170.

Knapp,B. and Kaderali,L. (2013) Reconstruction of cellular signal transduc-
tion networks using perturbation assays and linear programming. PLoS
One, 8, e69220.

Markowetz,F. et al. (2007) Nested effects models for high-dimensional pheno-
typing screens. Bioinformatics, 23, i305—i312.

Sachs,K. et al. (2005 ) Causal protein-signaling networks derived from multi-
parameter single-cell data. Science, 308, 523—529.

9mg ‘09 isnﬁnV uo seleﬁuV socl ‘erulomeg JO AnsleAtu [1 112 ﬂJO'sleumo[pJOJXO'sopeuJJOJutorq/ﬁdnq wort pepeolumoq

