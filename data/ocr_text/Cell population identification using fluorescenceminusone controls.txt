ORIGINAL PAPER

Vol. 30 no. 23 2014, pages 3372-3378
doi: 1 0. 1093/bioinformatics/btu5 75

 

Data and text mining

Advance Access publication August 27, 2014

Cell population identification using fluorescence-minus-one
controls with a one-class classifying algorithm
Kristen Feher*, Jenny Kirsch, Andreas Radbruch, Hyun-Dong Chang and Toralf Kaiser*

Deutsches Rheuma—Forschungszentrum, Berlin 10117, Germany

Associate Editor: Igor Jurisica

 

ABSTRACT

Motivation: The tried and true approach of flow cytometry data
analysis is to manually gate on each biomarker separately, which is
feasible for a small number of biomarkers, e.g. less than five. However,
this rapidly becomes confusing as the number of biomarker increases.
Furthermore, multivariate structure is not taken into account. Recently,
automated gating algorithms have been implemented, all of which rely
on unsupervised learning methodology. However, all unsupervised
learning outputs suffer the same difficulties in validation in the absence
of external knowledge, regardless of application domain.

Results: We present a new semi-automated algorithm for population
discovery that is based on comparison to fluorescence-minus-one
controls, thus transferring the problem into that of one-class classifi-
cation, as opposed to being an unsupervised learning problem. The
novel one-class classification algorithm is based on common principal
components and can accommodate complex mixtures of multivariate
densities. Computational time is short, and the simple nature of the
calculations means the algorithm can easily be adapted to process
large numbers of cells (106). Furthermore, we are able to find rare cell
populations as well as populations with low biomarker concentration,
both of which are inherently hard to do in an unsupervised learning
context without prior knowledge of the samples’ composition.
Availability and implementation: R scripts are available via
https://fccf.mpiib-berlin.mpg.de/daten/drfz/bioinformatics/with{user
name,password} = {bioinformatics,Sar = Gac4}.

Contact: kristen.feher@drfz.de or kaiser@drfz.de

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on February 12, 2014; revised on July 14, 2014; accepted on
August 19, 2014

1 INTRODUCTION

The mainstream method of ﬂow cytometry data analysis is to
“manual hierarchical gate’. In other words, given N observations
(cells) of a p-dimensional random vector, where each
i6 {1,  1)} represents a biomarker coupled to a ﬂuorescent
marker, and f,- is the marginal density of each biomarker, the
cells are sequentially split into :2 groups corresponding to pres-
ence, absence, and possibly discretized biomarker concentration
levels following visual inspection of each f,. Biomarkers are most

 

*To whom correspondence should be addressed.

typically antibodies; however, they can also be ﬂuorescent pro-
teins, among others.

Gating order is based on prior biological knowledge: e.g. only
a particular cell type can be positive for certain biomarkers and
not others; therefore, the general strategy is to gate on highly
speciﬁc biomarkers early to separate broad categories of cells.
Following this, separate gating strategies may be applied to ﬁnd
the nuances within the broad categories. This has been a success-
ful approach over the past three decades, where it has typically
been applied to experiments comprising less than ﬁve bio-
markers. With increasing numbers of biomarkers and/or novel
biomarkers, manual gating becomes difﬁcult, as well as neglect-
ing the multivariate structure (Chattopadhyay et al., 2008;
Baumgarth, 2000).

Compounding these difﬁculties is the impact of data pre—pro-
cessing on gating, namely ‘compensation’. Each biomarker is
coupled to a ﬂuorescent marker that is excited by the appropriate
laser, and in turn, it emits light over a typical range of 400—
800nm. Each biomarker is measured with an optical bandpass
ﬁlter (BP) tuned to its peak, e. g. the intensity of light between 600
and 630 nm is measured. However, the spectra of different ﬁuor-
escent markers overlap; thus, measurement of total light cap-
tured in a BP has contributions from up to p dyes. This is
known as “spectral mixing’, and its theoretical form is simply a
linear transform from “biomarker space’ to “spectral space’.
Compensation is simply the reverse linear transformation back
to the biomarker space, where the features have a direct biolo-
gical meaning as they correspond directly to the biomarkers.

However, compensation is based on the assumption of
Gaussian distributed error, and thus distorts the data owing to
the underlying Poisson distribution of the emitted photons
(Roederer, 2001; Novo et al., 2013). Additionally, it cannot ac-
count for autoﬁuorescence (AF) (Aubin, 1979), which occurs
when a cell falsely appears to have a biomarker concentration
above background, which is simply because of the cell’s proper-
ties. Prior knowledge is required to account for AF, and if not
accounted for, can lead to false conclusions in manual gating.
Additionally, in the case of antibodies, the measurement can be
confounded by unspeciﬁc binding (UB), for which there is no
correction.

In fact, these are such pervasive problems that a speciﬁc type
of biological control has been designed for their detection:
the ﬁuorescence-minus—one (FMO) control (Roederer, 2002).
For each biomarker i6 {1, . . . , p}, a new sample is measured
with all biomarkers minus the ith biomarker. The cells that are
positive for the ith biomarker shift with magnitude proportional
to the original biomarker concentration, and no shift occurs

 

3372 © The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com

112 /§.IO'S[BU.IHO[p.IOJXO'SallBIHJOJUTOTQﬂI(1111] 11101; prBOIIIAAOG

9IOZ ‘091sn3nv uo ::

Cell population identification using FMO controls

 

when the cells are negative. The effects of AF and UB are mini-
mized, as they should be unchanged between the fully stained
sample (full staining) and the FMO. Superposing the full staining
with each FMO is the multivariate spectral analogue of univari-
ate gating on the biomarker marginal densities, while simultan-
eously taking AF and UB into account. The use of FMOs is
the gold standard in experimental design, however, their use
has been restricted to visual inspection thus far, to conﬁrm
that the results of manual hierarchical gating is unlikely to con-
tain artifacts.

Here we use FMOs as training sets in a one-class classiﬁer to
systematically identify cell populations in a semi-automated fash-
ion. By deﬁnition of the spectral mixing equations, the FMOs are
training sets of negative examples for each BM. The full staining
(test set) is compared with the FMOs to determine positive cells
for each BM, as given by those that lie outside the FMOs (Tax,
2001). The output of all the one-class classiﬁers is combined to
yield the ﬁnal populations. Furthermore, we can use the physical
constraints to improve sensitivity of positive cell detection,
namely, that (i) cells are not independent events but rather
they are correlated; (ii) the composition of cells is preserved
between the full staining and FMO; and (iii) the cells that are
negative for a given BM have the same covariance in both the
full staining and FMO. Additionally, we apply the algorithm
iteratively to remove populations that mask others.

This gives the following statistical and technical advantages.
Populations are found in direct relation to a biological control,
thus avoiding unsupervised learning. As larger populations are
successively removed, it becomes easier to ﬁnd smaller popula-
tions even without prior knowledge. Furthermore, no prior
knowledge is required as to the form of AF and UB. Given
that population identiﬁcation occurs directly in spectral space,
spectral overlap no longer needs to be minimized to such a great
extent, giving more ﬂexibility in ﬂuorescent marker selection,
and experiments that are currently difﬁcult are possible on stand-
ard instruments, without requiring the purchase of specialized
equipment.

All ﬂow cytometry applications suffer from contamination
arising from various sources: “junk’ (e.g. debris, dead cells that
were not gated out, doublets, bubbles in the sheath ﬂuid
and unbound ﬂuorescent molecules), altered ﬂuorescence (e.g.
unspeciﬁc staining, bleaching and FRET) or instrumentation
(e.g. electronic noise, laser ﬂuctuations, optical properties and
variation in ﬂow speed), among others. It can be hard to distin-
guish rare populations from contamination, and in traditional
manual hierarchical gating, an operator would probably ignore
small percentages, with the exact threshold depending on the
total number of cells collected, the experience of the operator
and the biological question at hand. In fact, if rare cells are
indeed the focus of the biological question, then different experi-
mental approaches would almost certainly have been taken in
the ﬁrst place, such as magnet pre-enrichment of the rare cell
population (Bacher, 2013). For these reasons, the full algorithm
is quite deliberately only semi-automated in nature, and this
is based on the fact that successive iterations ﬁnd increasingly
smaller groups of positive cells. The issues listed above are too
numerous and complex to be solved by an algorithm. The
approach we therefore take is to let the operator decide the

minimum population size, and return a list of putative popula-
tions for further human interpretation.

The article is organized as follows. The algorithm is described
in Section 2. In Section 3, the algorithm is tested on simulated
data to demonstrate its increased sensitivity over alternatives.
Selected clustering methods are also applied to the simulated
data, to demonstrate that it is difﬁcult to ﬁnd the correct clus-
tering in the absence of prior or external knowledge. The
clustering methods discussed were evaluated in FlowCAP
(Aghaeeour, 2013) and are available via Bioconductor. Finally,
the algorithm is applied to a four-marker staining, and the
output is conﬁrmed with manual hierarchical gating. Selected
clustering methods are also applied but they fail to ﬁnd the
small populations.

2 METHODS

2.1 Sample preparation and data acquisition

Blood collection and staining Human blood was obtained from a healthy
donor and incubated with erythrocyte lysis buffer (Qiagen, Hilden,
Germany) according to the manufacturer instructions to remove the
red blood cells. Cells were centrifuged (10min, 500 g) and washed twice
with PBS/BSA/EDTA. Absolute cell numbers were counted by the
CASY®cell counter (Scharfe System, Reutlingen, Germany). Total
leukocytes were stained on ice for 15 min in the dark with optimal con-
centration (as determined by titration, data not shown) of ﬂuorescent-
conjugated anti-human antibodies: CD14 PE—Alexa Fluor 700 (BP 720/
30) (Invitrogen, Darmstadt, Germany) and CD3 PerCP (BP 670/14),
CD4 FITC (BP 520/30) and CD8 PE—Cy7 (BP 780/60) (all obtained
from Biolegend, San Diego, USA). After staining, the cells were centri-
fuged (10 min, 400 g) and resuspended in PBS/BSA/EDTA. Additionally,
FMO controls were prepared for each cell marker. For dead cell exclu-
sion, 1 11.1 DAPI (2 ng/ml) was added to each sample.

Flow Cytometry Data were collected on a LSRII (BD, San Jose, USA)
equipped with four ﬁxed-aligned 355, 405, 488 and 633 nm lasers. The BD
Cytometer setup and tracking application (CST) was used to determine
the optimal baseline PMT voltage for each ﬂuorescent channel. In all,
50000 events were acquired for each sample (gated on lymphocytes/
monocytes and live cells). Data were collected by using the BD
FACSDiva software (version 6.1.3) and saved as FCS 3.0 data ﬁles.
The data analysis including sequential gating was performed by using
FlowJo 9.8 (Tree Star, USA).

2.2 Hardware and software

All calculations (apart from those in FlowJo) were performed on a
MacBook Pro, OS X 10.8.5, 3GHz Intel Core i7 Processor, and 8 GB
1600 MHz DDR3 Memory.

All calculations were performed with R (R Core Team, 2013) version
3.0.2 (September 25, 2013), Platform: x86_64—apple—darwin10.8.0 (64-bit).

Data were pre-processed in R core team using Bioconductor package
flowCore (Hahne, 2009). All data were logicle transformed with w = l,
and live-cell/monocyte/lymphocyte gated on forward scatter, side scatter
and DAPI parameters.

2.3 Formal deﬁnition

There is a set of p biomarkers {0:1, . . . , 05,-, . . . , 011,} that forms the basis
vectors for the “biomarker space’ (RP). Each cell C1,, 1 5 n 5 N is a
location in [RP deﬁned by a linear combination of 05,-:
C2 = [mall + . . . + CEmOlp.

There is a set of p BPs {,81,  , ,Bi, .. . , ,Bp} that forms the basis vectors
for “spectral space’, also [RP . Each biomarker can be expressed as a linear

 

3373

112 /§JO'S{Bumo [p.IOJXO'SOIlBIHJOJUIOIQ/ﬁdllq 11101; prBOIUAAOG

9IOZ ‘091sn8nv uo ::

K.Feher et al.

 

combination of BPs in spectral space, corresponding to the proportion of
its spectrums light falling in each BP (i.e. spectral mixing):
OlizBl'IIBI +312IB2 ‘l” . . . +BiPIBp

Each cell C" =(C1n, - - - , C1,") is a location in [RP (spectral space) and is
thus deﬁned as follows:
(:1, Bu --- Bin 0,,
C17" 3117 31717 CF"

The 05,8 are not orthogonal in spectral space, and their exact arrange-
ment corresponds to spectral overlap. Using the full complement of anti-
bodies is known as a “full staining’.

The location of C” in spectral space in the im FMO is deﬁned as fol-
lows:

C1,, 311 --- Bpl 0 3,, 0 C,

1’!

CI?" 0 Bi}; 0 C

FMo, Bl},  BM, pn

i.e. the cell shifts in a direction deﬁned by —oz,- and proportional to C,,,.

All  and all 3,,- must be 2 0; thus Cm Z 0. A shift of —oz,- is towards
the origin, and thus, less total light is collected for positive cells in
the FMO compared with the full staining. Thus, positive cells are
“outside’ the FMO, and further from the origin. This fact forms the
basis for the application of common principal components (CPC). This
theoretical description of spectral mixing does not take AF or UB into
account.

2.4 Empirical histogram

Allocating full staining cells as positive/negative is done by comparison of
the distribution of their Mahalanobis distances from the FMO to that
of the cells within the FMO. We can reﬁne simple thresholding by incor-
porating the physical restraints: cells are correlated, cell composition is
preserved and negative cells have the identical covariance in the full
staining and FMO. Thus, when there are many full staining cells occur-
ring in the tail of the FMO distance distribution, it is not possible that
they are all negative. It is desired to detect cells that fall outside the FMO
with respect to both distance and frequency.

Given a set of observations {xn : 1 5 n 5 N} of random variable X, the
empirical cumulative density function is deﬁned as follows:

N
1:0):  1{Xn E y},
n = l
where 1 is the indicator function. The concentration of observations with
respect to y is encoded in the gradient of F, the inverse of which is given
by Axn=x;1—x;1_1, where {x11} is {xn} after permutation such that
x112 xn_1’ and x11: xn+1’Vn e 2...N— 1.

The empirical histogram (EH) H is given by {(xn, Ax") : n = 1, . . . , N}.
Low values of Ax" correspond to a region of high probability of X
occurring, and high values correspond to low probability, either the
tails of a distribution or regions between modes of a multi—modal
distribution.

Deﬁne data matrices Xa and Xb, of respectively Na and Nb rows
(observations) and p columns, and both with some fraction of observa-
tions that share a common covariance. Then, H can be used determine
those datapoints unlikely to arise from the common covariance. This
method is not proposed as an alternative in more standard contexts
that rely on Mahalanobis distance (e.g. outlier detection), as it directly
depends on a common fraction for its success.

The criteria for rejecting a datapoint in Xb for not arising from the
density of Xa are as follows. For A = a, I), deﬁne

MA={MnA(XnA,/,La,2a)InA=1,...,NA} 

as the set of Mahalanobis distances of each observation in either Xa or
X b, with respect to the p-dimensional multivariate mean 11,, and covari-
ance 2a of Xa. Thus,

HA={(MnA,AMnA):nA=1,...,NA} 

is the EH corresponding to X A with respect to Xa. Let
MA(t)={M,,A : AMnA =1} and mmax(t)=Qq(Ma(t)) where Qq(W) is the
q““’ quantile of W. The observations Xb+ that do not arise from the
density of Xa are thus deﬁned by the following:

Xb+ : {xnb I Mb(t)>mmax(t)s VI 6 [Injn (AMnh)a max  (3)

In practice, this is done by partitioning based on quantiles of AMna,
i.e. for q e (q1, q2, . . . , qr) and redeﬁning MA as follows:

MA(qj)={MnA : AMnA >qu(AMna) and AMnA g qu,1(AMna)}
forj= 1, ...,r — 1, as well as end sets:

MAlow:{MnA 2AMnA E Qq1(AMna)}

MAhigh Z {MnA I AMnA > qu(AMn,,)}-

This is graphically depicted in the Appendix.

2.5 Separation-improving dimension reduction via CPC

The aim of CPC (Flury, 1983) is to ﬁnd a linear combination of features 2
that maximize the ratio of variances of populations a and b with respect-
ive population covariances 2a and Eb, i.e. to maximize the function:

 

T
h(z)= 23:2 6 W.

The solution of 11(2) corresponds to the eigensolution of 267121,. An al-
ternative interpretation of CPC is to ﬁnd linear combinations along
which Mahalanobis distance for Xa and Xb is as different as possible,
and 2a and 2b are the respective sample covariances. Deﬁne 12,-(Xa, X 1,) as
the ith eigenvalue of 267121,, and V,(Xa, X 1,) as its ith eigenvector.

In the case when portions of Xa and X b have common covariance, and
covariance difference is caused by shifting populations, CPC ﬁnds the
projection that contains maximum separation between the shifted popu-
lation and common portions. By the spectral mixing equations, all sep-
aration should occur along one direction in the absence of noise. Here we
take the top two components to account for variation.

2.6 Expansion to polynomial space

Even after CPC-based dimension reduction, the separating boundary can
still take on a complex shape. Typically, most separation has been found
to occur in the ﬁrst two eigenvectors of 267121,. Thus, it is feasible to
perform a polynomial basis expansion directly (e.g. [R219 R9 for cubic
expansion). This has the advantage of avoiding tuning additional param-
eters, as is necessary in the proper use of support vector machines (SVM)
(Chapelle, 2002).
Here, we apply the following expansion:

(XMHOW, x3ay3, xzy, xyza x2,y2, xy) (4)
A polynomial expansion of order >3 often leads to singular covari-
ance because of the resulting features spanning over orders of

magnitudes. Rescaling in such cases leads to complex-valued solutions
of CPC.

 

3374

112 /810's112umo [p.IOJXO'SOIlBIHJOJUIOICI/ﬁdllq 1110131 pap1201umoq

9IOZ ‘091sn8nv uo ::

Cell population identification using FMO controls

 

2.7 One-class classifying algorithm

The algorithm to discover each successive population is as follows. Deﬁne
a reference dataset Xref and the comparison dataset Xcomp (assuming a
common covariance is shared among some fraction of the datapoints).
The following separating algorithms ﬁnd the positive datapoints of Xcomp
and are the cornerstones of the full algorithm:

Separating algorithm The operator CPC_proj(Xref, X comp) is deﬁned by
the following steps:

(1) Deﬁne projection Proj = [V1(Xref, Xcomp) V2(Xref, Xcomp)], Where
columns are the CPC eigenvectors.
(2) Transform data: X gef= (Xref)(Proj) and Xgomp = (Xcomp)(Proj)

(3) Deﬁne Mahalanobis distance EHs using
log (M(X;ef, Xéef)) and log (M(XfJ Xgef)) (Eq. 1 and 2).

(4) The positive datapoints Xcomp+ of Xcomp are given by Eq. 3.
(5) Return Xcomp+.

omp ’

Polynomial expanded separating algorithm The
CPC_proj_poly(Xref, Xcomp) is deﬁned by the following steps:

operator

(1) Steps 1 and 2 as for separating algorithm above.

(2) Polynomial expand each row of [Pref and A” according to

comp
Equation 4 to yield Xg’ef and Xg’omp
(3) Deﬁne projection Projl = [V1 (X gomp, X fef) VP(X gomp, X’r’ef)], where

columns are the CPC eigenvectors.
(4) Transform data: X’r’éf=( Q’ef)(Proj’) and Xg’omp =(X1’0mp)(Pr0j’)
(5) Deﬁne Mahalanobis distance EHs using log (M (X ’r’éf, X ’r’éf)) and
log (Mag/(gm, X’r’éf» (Equations 1 and 2).
(6) The positive datapoints X comp+ of X comp are given by Equation 3.
(7) Return Xcomp+.
Main algorithm Denote the full staining dataset as X 2 and the ith FMO
as X1(i). There are Ntot cells in X2.
— Start: set X’2 <— X2.
— While Np> Te(0,1):

(1) For each i:

(a) Filter positive cells out of FMO: CPC_proj(X1 (i), X2)

(b) X1_(i) <— X1(i) \ X1+(i), where S1 \ S2 is the relative
complement of S2 in S1, i.e. the set of elements in S1
but not in S2.

(c) Determine positive cells in full staining:
CPC—proj—p01Y(X’. X1_(i))

(d) For each cell n2 in X’ , deﬁne a binary variable V indicat-
ing if it is positive or negative for BM i: Vn2(i)=0 if
x"2 e X’2+(i) and Vn2(i)=1 if xn2¢X’2+(i).

(e) return V(i)

(2) Combine all full staining/FMO comparisons. Deﬁne the set
of all possible staining patterns as follows:

S={(S1,...,S1,):S1e{0,1},...,S1, 6 {0,1}}
(3) Deﬁne the population corresponding to S e S as follows:
|F”={x,,2 : Vn2(1)=S1,...,Vn2(p)=Sp}
(4) Deﬁne the next population as follows:

IP = max |[F”|
565

where l - | corresponds to the cardinality of a set.

(5) Remove IP and update X72:
X2 <— X2’\|P,
(6) Return Np: llPl/Ntot, IP, X’z.

In short, the main algorithm is repeatedly applied while the percentage
of total cells Np found at each iteration is > T.

2.8 Simulated data

Spectral mixing equations in Section 2.3 are used to generate artiﬁcial full
stainings and FMOs. First, a binary full staining matrix with populations
as rows and EMS as columns is generated using the binomial distribution.
If a population is negative, then its average intensity is uniformly distrib-
uted on [0, 1]. If the cell is positive, its average intensity is exponentially
distributed on (1, +00). After population average intensities are estab-
lished, cells are generated from a multivariate normal distribution with
variance of each BM set to exp (—p.)/ 5 where p. is the BM’s average
intensity, and zero covariance. The FMO corresponds to one column
of the binary staining matrix being set to zero. Finally, the full staining
and the FMO are multiplied by the spectral mixing matrix. Full details
can be found in the Appendix.

3 RESULTS
3.1 Population masking in CPC

When a mixture of populations exists, it is possible that a small
population is masked by a larger one in CPC. It is impossible to
enumerate all conditions under which this can occur; however,
we give one speciﬁc example to demonstrate the possibility, with
all details in the Appendix. In real ﬂow cytometry data, imbal-
anced population sizes are to be expected, and it is likely that
some will be masked. In the proposed algorithm, this situation is
thus accounted for by successively removing large populations
and reapplying CPC.

3.2 Simulations

We demonstrate how the proposed algorithm works by applying
to simulated data. Data are simulated by using a binary popu-
lation staining matrix as a seed, whose elements are binomially
distributed. The generated data are spectrally mixed, as given by
Section 2.3. The binary staining matrix is also used to generate a
seed for a corresponding FMO. Full simulations details can be
found in Section 2.8 and Appendix. Randomly generated full
staining—FMO pairs are used to demonstrate that the novel com-
bination of the algorithm’s components improve the detection of
positive cells compared with Mahalanobis distance thresholding,
while remaining conservative.

As the foundation of the algorithm is a one-class classiﬁer, the
simulations are judged by true-positive (TP) and false-positive
(FP) rates, where “positive’ simultaneously means “outside the
FMO’ and “positively stained for BM’. Formally, let each cell
have a true class that is either poAsitive (P) or negative (N):
C, e {P, N} and an estimated class C,- e {P’, N’} for 1': l, . . . , n.
The TP rate is TP= |{{C,, 61,} : C,=P, 0,-=P’}|/|{C,- : C,=P}|,
where l - | is the cardinality of a set. Similarly, the FP rate is
FP= |{{C,, 6,} : C,=N, C,=P’}|/|{C, : C,=N}|. We present the
results in ROC space and as such they are insensitive to an imbal-
anced number of positive and negative cells (Fawcett, 2006).

 

3375

112 /810's112umo [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq 1110131 pap1201umoq

9IOZ ‘091sn8nv uo ::

K.Feher et al.

 

Four methods are tested: Mahalanobis distance thresholding,
EH, CPC+EH, CPC+polynomial expansion + EH, demon-
strating that the last method is the most advantageous. All
graphical output is included in the Appendix. Here we supply
a summary of the key results; a more detailed discussion is also
included in the Appendix. Over all the methods, when TP rates
decrease the following increase: p, number of positive popula-
tions and population variance. In other words, it is harder to
detect positive cells as complexity increases, and can also be
made easy (in silico) by ensuring population variance is small.
Using Mahalanobis distance is conservative (few FP rates), but
given its assumption of a single multivariate normal population,
TP rates are low in the presence of a mixture of populations.
TP rates are greatly improved with CPC+polynomial+EH
while maintaining low FP rates. The TP rates are only slightly
improved compared with CPC+EH; however, polynomial
expansion is crucial to obtain FP rates comparable with
Mahalanobis distance thresholding.

Concluding, this algorithm can successfully deal with complex
mixtures of multivariate populations with non-constant variance
in single full staining/FMO comparisons. Given that the cells are
correlated, combining the output from multiple comparisons
strengthens this (e.g. in the case when a population is positive
for two BMs but only weakly so for one). Iteratively removing
larger populations makes smaller and possibly masked popula-
tions apparent, and thus, the entire algorithm can deal with
complex mixtures of populations in a computationally tractable
manner.

3.3 Simulations with SVM-based one-class classiﬁer

We now characterize the performance of SVM-based one-class
classiﬁers (Scholkopf, 2000), with full details in the Appendix.
A polynomial kernel of degree 3 is chosen to be comparable with
our algorithm. The ﬁrst thing to note is that in this context
computational time is quadratic in the number of cells (via simu-
lations, not shown), and NC = 10 000 was chosen. The dominant
parameter is v e (0, 1), which controls FP rate. To summarize,
as 1) increases from 0 to 1, so do both the TP and FP rates,
and there is no parameter setting that matches our algorithm.
We do not pursue other kernels as computational time is likely
to be prohibitive for real data (105 is not a large number of cells
in an experiment).

3.4 Simulations with clustering methods

All unsupervised learning output is difﬁcult to evaluate in the
absence of prior knowledge (Hastie, 2009), and a speciﬁc concern
is the choice of number of clusters K. At least two types of clus-
tering have been applied to ﬂow cytometry thus far: partitioning
[e.g. ﬂowMeans (Aghaeepour, 2011)] and model-based clustering
[e.g. ﬂowClust (Lo, 2009)], among others.

ﬂowMeans ﬂowMeans, a K-means variant with automatic
choice of K, is applied to simulated data. It is evaluated via
the number of clusters and cluster agreement (adjusted Rand
index R). It is applied to simulated data, with details included
in the Appendix. The simulated data contain 10 clusters with
sizes ranging from ~05 to ~30% of the total number of cells,
and additionally with the three smallest clusters removed.

The presence of the small clusters gives rise to a greater range
of K, as well as decreasing R and thus it appears that the local
density inﬂuences clustering outcome, and that a more uniform
density improves the clustering output. To test this, a new simu-
lation was performed where all clusters were of equal size.
However, K appears to be generally underestimated, and the
cluster agreement is poor. The clustering could potentially be
retrieved with a different choice of K, but this is difﬁcult to
know in advance. In summary, it appears that the data’s char-
acteristics (local density and population sizes) inﬂuence the
outcome of a clustering algorithm, and these characteristics are
not known in advance.

Model-based clustering Owing to the lengthy computational
time, extensive simulations of density-based clustering are not
performed. However, model-based clustering based on ﬁnite
normal mixture modeling [R package mclust (Fraley, 2012)]
was applied a small number of times and visually inspected.
The clustering is almost perfectly recovered when K is known
in advance. However, even in this ideal case, it is difﬁcult to
choose K without prior or additional knowledge. In practice,
ﬂow cytometry data are not multivariate normal and variants
of mixture modeling have been developed [ﬂowClust, FLAME
(Pyne, 2009)]. It is not informative to apply these methods here,
as the simulated data are multivariate normal.

3.5 Application to data

We apply our algorithm to a simple four-marker staining
(Materials and Methods), with the terminating condition T
being set to 0.001 (see “Main Algorithm’ in Section 2). Some
very small “populations’ were visually judged to be artefacts, as
their scatter is too high. First, the full staining is superposed with
each FMO in Figure 1. Example CPC projections are included
in the Appendix. The populations are summarized in Table l and

 

 

 

 

 

 

 

 

CD3 GEM
c! _ '17-!
E _ ..  g _ .
hi — nl _
CI , N." U
l -=- ‘21??- l e_ ‘1 m H
E - ’7 3 _
| | | I | | I | | |
-G 5 —II- 43- 2 -E 5 —4 —3 2
F‘Ci PC‘I
CD3 CD14

 

 

3.1.]
I
3.0
I

2.0

2.0

PC?
PC?

 


«a
a

 

 

 

 

 

 

c! _ =2 _
D G
| | | | | | | | | |
e 5 4 a 2 45 5 4 a 2
P01 Pm

Fig. 1. The full staining is superposed with each FMO; shown here in a
projection deﬁned by PCA is the full staining. The full staining cells are
red; the FMOs cells are blue

 

3376

112 /810's112umo [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq 1110131 pap1201umoq

9IOZ ‘091sn8nv uo ::

Cell population identification using FMO controls

 

Table 1. Populations found by com-
parison to FMOs

 

 

 

 

 

 

 

 

 

 

Population Proportion
CD4-CD14 0.335401270
CD3-CD4 0.179984676
unstained 0.1723967
CD3-CD8 0. 1543043 57
CD14 0.067475716
CD8 0.059615907
CD4 0.015126424
CD3-CD4-CD8 0.010331447
CD3 0.005363454
CI _
0’3 .
4| unstained
- CD4-CD14
“'1. _ - CD3-CD4
1"" - CD3-CUB
l CD14
1:; _ cue
N CD4
CUE-CEM-CDB
- BB3
N l“. _
O 1.—
El.
GI _
'4”. _
r:
'31 _
C:

 

 

 

PC1

Fig. 2. The ﬁnal populations. The cells of the small populations are
plotted with larger circles for visibility

displayed in Figure 2, and are conﬁrmed with hierarchical
manual gating (FlowJo output in Appendix). There is a variety
of population shapes. The CD3-CD4 and CD3-CD8 populations
are compact and regular. In contrast, the CD4-CD14 population
comprises of a dense core and a less dense tail. The unstained
population is not “stand-alone’, but rather the single positive
populations start directly from its boundaries (i.e. at the detec-
tion limit). The CD3-CD4-CD8 population is only weakly posi-
tive for CD8, and thus it is directly adjacent to the CD3-CD4
population. Despite the heterogeneity of the various population
densities, and the lack of a clear separation between certain
populations, they are all detectable using FMOs. Finally,
these results were found in <40 3, but conceivably could be less
when run in parallel. The algorithm is additionally applied to
an unusual staining with a high degree of spectral overlap,
which is difﬁcult to compensate, with results included in the
Appendix.

3.6 Comparison of algorithm to unsupervised methods

We compare the output of our algorithm to ﬂowMeans,
ﬂowClust and SPADE. All output is in the Appendix.

ﬂowMeans ﬂowMeans is applied to both uncompensated and
compensated data, with K being chosen as 6 and 4 respectively.
In both cases, the major features of the data are retrieved [CD3-
CD4, CD3-CD8, CD4-CD14 (dense), unstained], with the single
positive populations tending to be subsumed into the unstained
population. In the uncompensated data, CD4-CD14 is split into
high density and low density portions, and the single CD3 popu-
lation is also retrieved. Computational time is <10 3 for each.

ﬂowMeans was further applied on each cluster of the uncom-
pensated data (excepting the single 3 cluster), to see if it could
iteratively ﬁnd the small populations. However, for each, K was
found to be 1 and no further splits were possible.

ﬂowClast ﬂowClust is applied to both uncompensated and
compensated data, calculated with K = l, .. . , 11. In both cases,
the Bayesian Information Criterion stops sharply increasing after
K = 4. The exact clustering depends on the outlier identiﬁcation
quantile, which is effectively an additional parameter to tune.
Both ﬁnd similar results [CD3-CD4, CD3-CD8, CD4-CD14
(dense), unstained]. The CD4-CD14 population has its tail that
approaches the unstained cells being designated as outliers when
the quantile is set to 95%. Increasing K fails to ﬁnd the
small populations, but starts artiﬁcially splitting populations.
Computational time is <15 min for each, when parallel compu-
tation is used.

SPADE SPADE (Qiu, 2011) is applied to compensated data
alone, as it is ill-deﬁned for uncompensated data. Down-
sampling target percentiles are 0.05 and 0.005. On visual inspec-
tion of the output trees, both percentiles appear to ﬁnd the major
features of the data (CD3-CD4, CD3-CD8, CD4-CD14, un-
stained). However, it is not clear how to choose the optimal
down-sampling percentile, nor is there a systematic way to syn-
thesize output across different trees. Its main purpose seems to be
an exploration tool.

Summary The three methods ﬁnd the four big populations
of the data. However, they all require parameter tuning, which
is difﬁcult in the absence of prior knowledge. Additionally, it
appears to be difﬁcult to ﬁnd small populations in the absence
of prior knowledge.

4 DISCUSSION

We have demonstrated how FMOs can be compared with full
stainings with a one-class classiﬁcation approach to systematic-
ally discover the sample’s composition of cell populations. The
proposed algorithm requires no tuning of parameters, and each
full staining-FMO comparison (CPC_proj_poly) is linear in the
number of cells, and easily parallelizable. The cell populations
found were heterogenous in terms of cell number, ranging from
0.05 to 30% of the total. When attempting to discover cell popu-
lations via unsupervised methods, the four largest populations
masked the smaller ones, and it was not possible to ﬁnd them
using the investigated methods without further modiﬁcation.
It could be argued that this problem is easily avoided by ﬁrst

 

3377

112 /810's112umo [p.IOJXO'SOllBIIIJOJUIOIQ/ﬁdllq 1110131 pap1201umoq

9IOZ ‘091sn8nv uo ::

K.Feher et al.

 

down-sampling (as is done in SPADE) to approximate a uniform
density; however, the degree of down-sampling requires param-
eter tuning to ensure the smallest populations are not missed,
and it is unclear how to do so without prior knowledge of the
sample’s composition. These difﬁculties are the manifestation of
the general problem of unsupervised learning output validation,
which is not possible in the absence of external information.
When widely used biomarkers are applied, this problem is
not so severe, as output can be compared against accumulated
knowledge, but as novel biomarkers are increasingly used, the
appropriate post hoc controls must be made, e. g. cell sorting and
further tests. Alternatively, FMOs can be made at the outset.
Additionally, it was noted in this data that many populations
that we found (CD4-CD14, all single positive populations) are
in fact on a continuum with long tails stretching down towards
the unstained population. In other words, there is no distinct
out between stained and unstained, and if this is in fact a
common feature of ﬂow cytometry data, it would suggest that
it is inherently ill-suited to being clustered.

Unspeciﬁc contamination is an issue common to all ﬂow cyto-
metry applications, and we do not attempt to solve this here.
As such, the algorithm is presented as being semi-automated.
The major problem is to decide whether a “rare’ population
is a true population or an artefact caused by contamination.
As discussed in Section 1, this cannot be decided from the data
alone, but rather further experiments would be necessarily. More
commonly, if rare populations are speciﬁcally of interest, then
alternative experimental designs would be undertaken from
the beginning. These issues are widely known and lack a “cut-
and-dried’ solution (Roederer, 2008). Thus, our strategy has been
to leave the minimum population size decision to the operator,
and return a list of putative populations. A future improvement
would be to additionally return a measure of scatter for each
population, to improve the interpretation process.

This algorithm not only represents a statistical advance in
the analysis of ﬂow cytometry experiments, but it also confers
signiﬁcant technical advantages. A current limitation of ﬂow
cytometry is the choice of ﬂuorescent markers: for optimal com-
pensation, they must be chosen so as to have minimal spectral
overlap. Because all calculations are done in spectral space, it is
no longer crucial that spectral overlap is minimized to such
large extent. This increases the range of experiments that are
technically possible on standard instrumentation already in
daily use.

5 CONCLUSION

The introduction of FMOs was a major step forward in the
quality control of ﬂow cytometry experiments, and they remain
a gold standard but their use has largely been conﬁned to visual
inspection. We have presented a novel one-class classifying

algorithm that harnesses the properties of FMOs to systematic-
ally identify cell populations. By doing so, the validation prob-
lem of unsupervised learning is circumvented. As all calculations
are done in the spectral space, new technical possibilities are
opened, such as a great deal more ﬂexibility in the choice of
ﬂuorescent markers, as compensation is not required. Finally,
this method is immediately available to any ﬂow cytometry
user, as it can be done on completely standard instrumentation
without requiring the purchase of specialized equipment.

Conﬂict of interest: none declared.

REFERENCES

Aghaeepour,N. et al. (2011) Rapid cell population identiﬁcation in ﬂow cytometry
data. Cytometry A, 79, 6—13.

Aghaeeour,N. et al. (2013) Critical assessment of automated ﬂow cytometry data
analysis techniques. Nat. Methods, 10, 228—238.

Aubin,J.E. (1979) Autoﬂuorescence of viable cultured mammalian cells.
J. Histochem. Cytochem., 27, 36—43.

Bacher,P. et al. (2013) Antigen-reactive T cell enrichment for direct, high-resolution
analysis of the human naive and memory Th cell repertoire. J. Immunol., 190,
3967—3976.

Baumgarth,N. and Roederer,M. (2000) A practical approach to multicolor ﬂow
cytometry for immunophenotyping. J. Immunol. Meth, 243, 77—97.

Chapelle,O. et al. (2002) Choosing multiple parameters for support vector machines.
Mach. Learn, 46, 131—159.

Chattopadhyay,P.K. et al. (2008) A chromatic explosion: the development and
future of multiparamter ﬂow cytometry. Immunology, 125, 441—449.

Fawcett,T. (2006) An introduction to ROC analysis. Patt. Recog. Lett, 27, 861—874.

Flury,B. (1983) Some relations between the comparison of covariance matrices and
principal component analysis. Comp. Stat. Data Anal, 1, 97—109.

Fraley,C. et al. (2012) mclust version 4 for R: normal mixture modeling for model-
based clustering, classiﬁcation, and density estimation. Technical Report No.
597. Department of Statistics, University of Washington.

Hahne,F. et al. (2009) ﬂowCore: a Bioconductor package for high-throughput ﬂow
cytometry. BM C Bioinformatics, 10, 106.

Hastie,T. et al. (2009) Unsupervised learning. Elements of Statistical Learning.
2nd edn. Springer Verlag.

L0,K. et al. (2009) ﬂowClust: a Bioconductor package for automated gating of ﬂow
cytometry data. BM C Bioinformatics, 10, 145.

Novo,D. et al. (2013) Generalized unmixing model for multispectral ﬂow cytometry
utilizing nonsquare compensation matrices. Cytometry A, 83A, 508—520.

Pyne,S. et al. (2009) Automated high-dimensional ﬂow cytometric data analysis.
Proc. Natl Acad. Sci. USA, 106, 8519—8524.

Qiu,P. et al. (2011) Extracting a cellular hierarchy from high-dimensional cytometry
data with SPADE. Nat. Biotech, 29, 886—891.

R Core Team. (2013) R: a language and environment for statistical computing.
R Foundation for Statistical Computing.

Roederer,M. (2001) Spectral compensation for ﬂow cytometry: visualization arti-
facts, limitations, and caveats. Cytometry, 45, 194—205.

Roederer,M. (2002) Compensation in ﬂow cytometry. Curr. Prat. Cytometry,
221.14.1—1.14.20.

Roederer,M. (2008) How many events is enough? Are you positive? Cytometry A,
73, 384—385.

Scholkopf,B. et al. (2000) Estimating the support of a high-dimensional distribution.
Technical Report MSR-TR-99-87. Microsoft Research.

Tax,D.M.J. (2001) One-class classiﬁcation (concept-learning in the absence of
counter-examples). PhD Thesis. Technische Universiteit Delft.

 

3378

112 /810's112umo [p.IOJXO'SOIlBIHJOJUIOICI/ﬁ(11111 1110131 pap1201umoq

9IOZ ‘091sn8nv uo ::

