APPLICA TIONS NOTE V0" 32,713.légi‘iéféiﬁéiiiifiﬁiﬁii

 

Systems biology

Advance Access publication May 13, 2014

PyCorrFit—generic data evaluation for fluorescence correlation

spectroscopy

Paul Miller”, Petra Schwille2 and Thomas Weidemann2’*

1Biotechnology Center, Technische Universitat Dresden, 01307 Dresden and 2Max Planck Institute of Biochemistry,
Cellular and Molecular Biophysics, 82152 Martinsried, Germany

Associate Editor: Alfonso Valencia

 

ABSTRACT

Summary: We present a graphical user interface (PyCorrFit) for the
fitting of theoretical model functions to experimental data obtained by
fluorescence correlation spectroscopy (FCS). The program supports
many data file formats and features a set of tools specialized in FCS
data evaluation.

Availability and implementation: The Python source code is freely
available for download from the PyCorrFit web page at http://pycorrfit.
craban.de. We offer binaries for Ubuntu Linux, Mac OS X and
Microsoft Windows.

Contact: paul.mueller@biotec.tu-dresden.de and
weidemann@biochem.mpg.de

Received on January 27, 2014; revised on April 11, 2014; accepted on
May 6, 2014

1 INTRODUCTION

Fluorescence imaging applications provide a wealth of informa-
tion about the spatiotemporal distribution of ﬂuorescent mol-
ecules in tissues or cells. However, time-lapsed imaging and
related protocols, e. g. ﬂuorescence recovery after photobleaching
(FRAP), operate with a temporal resolution of sub-seconds,
which is not fast enough to access free diffusion of mid-sized
proteins. About a decade ago it was demonstrated that a con-
focal imaging setup can be extended by a ﬂuorescence correlation
spectroscopy (FCS) unit Oil/achsmuth et al., 2003). Such a ﬂuor-
escence ﬂuctuation microscope can be used to measure binding
and diffusion at speciﬁc positions with a sub-microsecond reso-
lution (Kim et al., 2007). Since then, most of the major micro-
scope companies developed FCS extensions for their products,
and ﬂuorescence ﬂuctuation analysis became an integral part of
the analytical repertoire in biomedical research.

FCS is based on the temporal correlation analysis of a ﬂuctu-
ating ﬂuorescence signal (Figure 1). Using microscopes with mul-
tiple detection channels, a measurement generates a set of auto-
and cross-correlation curves, which contains information about
dynamic molecular processes associated with the ﬂuorescence
emission from a femtoliter-sized detection volume (Schwille,
2001). Correlation curves are interpreted by means of theoretical
model functions describing the underlying physical processes.

 

*To whom correspondence should be addressed.

For example, diffusion-driven ﬂuctuations must be evaluated
for a particular geometry of the detection volume. In addition,
molecular behavior like reversible binding at sites within the de-
tection volume, the population of photophysical dark states due
to triplet or blinking phenomena and photobleaching simultan-
eously affect the measured shape of the correlation curves and
must therefore be theoretically treated. In practice, experimental
correlation data are evaluated by ﬁtting appropriate model func-
tions, thereby extracting parameters that describe the spatial and
dynamical properties of the system.

Custom-made evaluation scripts for a particular FCS instru-
ment are usually designed for its speciﬁc optics (confocal, total
internal reﬂection, etc., Figure la) and often contain only a lim-
ited set of model functions. The underlying rationale for deﬁning
parameters and models may not be well-described, leaving the
user with uncertainties for interpretation. Furthermore, the revi-
sion and parameter tweaking of correlation data from different
sources can be a time-consuming procedure, raising the demand
for a framework that is capable of dealing with any conceivable
scenario in which correlation curves need to be processed.
PyCorrFit offers such a framework, focusing on four major no-
tions: (i) the use of established ﬁtting algorithms; (ii) the possi-
bility to implement customized model functions and data ﬁle
formats; (iii) a comprehensive annotation of the evaluation
dataset; and (iv) a user-friendly environment.

2 IMPLEMENTATION

Traditionally, the signal intensity ﬂuctuations are computed with
a multiple-t algorithm as presented by Schatzel (1990). This
algorithm produces correlation curves on a quasi-logarithmic
time scale of the lag time ‘L’, thereby maintaining temporal reso-
lution across orders of magnitude while keeping the ﬁle size
manageable.

Correlation curves, when present in a supported ﬁle format
[e.g. ‘.fcs’ (Zeiss), “.sin’ (correlator.com) and “.ASC’ (ALV)], can
directly be imported. Additional data formats can be added as
separate modular ﬁles to the library of PyCorrFit.

The evaluation of experimental correlation curves involves the
non-linear least squares ﬁt of a model function. Among others,
we use the conventional Levenberg—Marquardt algorithm
(Levenberg, 1944) as implemented in the leastsq function of
Python’s SciPy package.

PyCorrFit offers weighted ﬁtting, i.e. the use of variances to
weight the effect of single data points (t-channels) on the overall
ﬁt. For single curves, the weights can be calculated from the

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which
permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /310's113umo [p.IOJXO'SSUBUHOJUTOTQ/ﬁdllq U101} pepBOIUAAOG

9IOZ ‘091sn3nv uo ::

PyCorrFit

 

{El} detection volume  fluorescence signal

point FCS
—mmr F_/—\\_ ,- {'lmﬂliﬂl {h.JII'L'.IIII'1II1I'III‘r:liﬂ-IIIFII

’ time LI ’
l.IE._""‘-~-l_

lag time 1' multiple-T ourrelutor

 

 

 

 

TIE-FCS

A

{C} data analysis - PyCorrFit

JEN

computer"

It” ﬁtted correlation on we

 

...l . 1... . .--..l....1 1 .... .- ..-.l . .... 1 ...-I.

      
 

on} =  '1

model function

   
  
 

fast "f'

       

I ’ component
ilrI' PyCorrFit '

slow
component H

 

 

lag time 1'

Fig. 1. FCS from data acquisition to parameter extraction. (a) Confocal point FCS (top) and total internal reﬂection (TIR—) FCS (bottom) arrangements
generate different implementations of a femtoliter-sized detection volume. 0)) The ﬂuctuating ﬂuorescence signal (e. g. from diffusing particles) is recorded
and a multiple-t algorithm is applied using a software or hardware correlator. (c) The obtained correlation curve is processed using PyCorrFit.
A theoretical model function G(r) is ﬁtted to the correlation curve to extract physical parameters. (d) Exemplary ﬁt (black) to a measured correlation
curve (gray) yielding a slow and a fast diffusing species of particles at different concentrations. Note that the correlation curve is calculated and displayed

on a logarithmic scale of the lag time T

variance of the difference between the experimental correlation
data, and either the model function or a spline ﬁt to the experi-
mental data. When ﬁtting multiple correlation curves measured
for the same molecular system, the local variances of the indi-
vidual curves can also be used as weights for the curve average.
After ﬁtting, the difference between the experimental correlation
curve and the model function (residuals) are displayed to identify
systematic deviations along the t-axis, which in turn indicate a
wrong parameter set or model.

PyCorrFit comes with a set of pre—implemented model func-
tions covering confocal FCS and total internal reﬂection FCS
(TIR-FCS). These functions include multicomponent diffusion
models, triplet dynamics and blinking. To account for special con-
ditions, external user-deﬁned model functions can be imported
from a self-written text ﬁle (‘.txt’) that follows a simple syntax
and may include various mathematical expressions, including the
Faddeeva function, which is necessary to describe the evanescent
wave component in TIR—FCS. Examples for external model func-
tions treating circular scanning FCS or a combination of diffusion
and ﬂow are available at the PyCorrFit web page.

To simplify data analysis, we implemented a number of fea-
tures that allow to simultaneously operate on larger datasets.
This includes a global correction for non-correlated background,
batch processing when ﬁtting multiple correlation curves mea-
sured in the same system and shared parameters across different
ﬁt models, for example, ﬂuorescence cross-correlation spectros-
copy (FCCS) experiments (Ries et al., 2010; Weidemann et al.,
2002). In addition, the user can visualize parameters by simulat-
ing the corresponding correlation functions, which may help in
deciding on different models.

PyCorrFit allows for exporting acquired data in various ways:
individual correlation curves and ﬁt-functions can be tabulated
as comma-separated values (‘.csv’). These ﬁles include a header
about speciﬁcs of the ﬁt, for example, the type of weights that
were used. For quick monitoring and reporting, plotted data can
be exported as bitmap or vector scaled graphics. Latex format-
ting is also supported. Furthermore, PyCorrFit allows for saving
and restoring the entire session. This is in particular useful when
some parameters evolve during the course of the project, and one
is situated in revisiting previously evaluated data with a slightly
modiﬁed ﬁtting procedure.

3 CONCLUSION

PyCorrFit is an open-source graphical user interface (GUI) that
offers a standardized environment for the analyses of correlation
data. Using the program does not require prior knowledge in
programming.

While the simple GUI permits a transparent workﬂow, software
developers may supplement its capabilities by adding novel tools,
implementing new ﬁle formats or manipulating the code for other
applications involving a quantitative correlation analysis.

For example, we recently generated a software tool
(PyScanFCS) to extract correlation curves from kymographs,
the primary data in perpendicular line scanning FCS, and used
PyCorrﬁt for the ﬁnal evaluation of the correlation functions
(Muller et al., 2014).

Funding: This work was gratefully supported by Deutsche For-
schungsgemeinschaft (DFG) priority program SFB/TRR 64
“Funktionelle Biomaterialien zur Steuerung von Heilungsprozes-
sen in Knochen- und Hautgewebe — vom Material zur Klinik”.

Conflict of interest: none declared.

REFERENCES

Kim,S.A. et al. (2007) Fluorescence correlation spectroscopy in living cells. Nat.
Methods, 4, 963—973.

Levenberg,K. (1944) A method for the solution of certain non-linear problems in
least-squares. Q. J. Appl. Math, 2, 164—168.

Miiller,P. et al. (2014) Scanning ﬂuorescence correlation spectroscopy (SFCS) with
a scan path perpendicular to the membrane plane. In: Engelborghs,Y. and
Visser,A.J. (eds) Fluorescence Spectroscopy and Microscopy, volume 1076 of
Methods in Molecular Biology. Humana Press, New York, pp. 635—651.

Ries,J. et al. (2010) A comprehensive framework for ﬂuorescence cross-correlation
spectroscopy. New J. Phys, 12, 113009.

Schatzel,K. (1990) Noise on photon correlation data. I. autocorrelation functions.
Quantum Opt., 2, 287.

Schwille,P. (2001) Fluorescence correlation spectroscopy and its potential for intra-
cellular applications. Cell Biochem. Biophys., 34, 383—408.

Wachsmuth,M. et al. (2003) Analyzing intracellular binding and diffusion with
continuous ﬂuorescence photobleaching. Biophys. J., 84, 3353—3363.

Weidemann,T. et al. (2002) Analysis of ligand binding by two-colour ﬂuorescence
cross-correlation spectroscopy. Single Mol., 3, 49—61.

 

2533

112 /310's113umo [pJOJXO'SOIlBIHJOJUIOIQ/ﬁdllq urorj pepBOIU/IAOG

9IOZ ‘091sn3nv uo ::

