Bioinformatics, 31, 2015, i44—i52
doi: 10.1093/bioinformatics/btv234
ISMB/ECCB 2015

 

ASTRAL-ll: coalescent-based species tree
estimation with many hundreds of taxa and
thousands of genes

Siavash Mirarab1'* and Tandy Warnow2

1Department of Computer Science, The University of Texas at Austin, Austin, TX 78712, USA and 2Departments of
Computer Science and Bioengineering, The University of Illinois at Urbana-Champaign, Champaign, IL 61801, USA

*To whom correspondence should be addressed.

Abstract

Motivation: The estimation of species phylogenies requires multiple loci, since different loci can
have different trees due to incomplete lineage sorting, modeled by the multi-species coalescent
model. We recently developed a coalescent-based method, ASTRAL, which is statistically consist-
ent under the multi-species coalescent model and which is more accurate than other coalescent-
based methods on the datasets we examined. ASTRAL runs in polynomial time, by constraining
the search space using a set of allowed ’bipartitions’. Despite the limitation to allowed bipartitions,
ASTRAL is statistically consistent.

Results: We present a new version of ASTRAL, which we call ASTRAL-ll. We show that ASTRAL-ll
has substantial advantages over ASTRAL: it is faster, can analyze much larger datasets (up to 1000
species and 1000 genes) and has substantially better accuracy under some conditions. ASTRAL’s
running time is 0(n2k|X|2), and ASTRAL-ll’s running time is O(nk|X|2), where n is the number of
species, k is the number of loci and Xis the set of allowed bipartitions for the search space.
Availability and implementation: ASTRAL-ll is available in open source at https://github.com/smir-
arab/ASTRAL and datasets used are available at http://www.cs.utexas.edu/~phylo/datasets/astral2/.

 

Contact: smirarab@gmail.com

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

The estimation of species trees is complicated by the fact that differ-
ent parts of the genome have different evolutionary histories; there-
fore, the different ‘gene trees’ obtained on different loci are often in
conﬂict with each other and with the true species tree. Gene tree dis-
cord due to incomplete lineage sorting (ILS) is a major challenge to
species tree estimation (Degnan and Rosenberg, 2009; Edwards,
2009; Maddison, 1997) and is a particular problem for rapid radi-
ations (where several speciation events occur in a relatively short
amount of time).

Because of the possibility of gene tree conflict, species tree esti-
mations are increasingly based on multiple loci. One approach to
estimating the species tree simply concatenates the sequence align-
ments for the different loci together and estimates a tree on the con-
catenated alignment. However, concatenation-based analyses can be
statistically inconsistent under the multi-species coalescent (Roch
and Steel, 2014) and can result in incorrect trees with high support
(Kubatko and Degnan, 2007). Because of this potential for

©The Author 2015. Published by Oxford University Press.

concatenation analyses to produce incorrect species trees, many
methods have been developed that are designed to address gene tree
incongruence due to ILS. Some of these methods have been proven
statistically consistent under the multi-species coalescent (Rannala
and Yang, 2003), which means that they will return the true species
tree with high probability, given a large enough number of true gene
trees. Some of these coalescent-based methods [e.g. MP-EST by Liu
et al. (2010) and stt by Liu and Yu (2011)] are now in widespread
use.

Despite the availability of coalescent-based methods, many bio-
logical datasets are too large for the available methods; for example,
MP-EST cannot be used on large datasets due to computational rea-
sons (Bayzid et al., 2014). Other coalescent-based methods are even
more limited; for example, "BEAST (Heled and Drummond, 2010),
a method that co-estimates gene trees and the species tree, cannot be
used with more than about 25 species (Zimmermann et al., 2014).
Computational challenges in real dataset analyses have required the
development of coalescent-based methods that could analyze larger

i44

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License lhttp://creativecommons.org/|icenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journa|s.permissions@oup.com

112 ﬁhO'sIeumo[pJOJXO'soneuuoguioiq/ﬁdnq wort popeolumoq

910K ‘09 lsnﬁnV no :2

ASTRAL-II

i45

 

datasets; for example, MP-EST could not analyze the 1KP (Wickett
et al., 2014) dataset of about 100 species and 600 genes, due to the
dataset size among other issues.

ASTRAL (Mirarab et al., 2014a) was developed to enable coales-
cent-based analyses of these larger datasets. ASTRAL solves a likely
NP-hard problem by constraining the allowed search space to those
species trees that derive their bipartitions from an input set X,
provided by the user. In the default setting for ASTRAL, we set X to
be all bipartitions in the input gene trees. ASTRAL is statistically
consistent under the multi-species coalescent using this setting for X
and runs in polynomial time. ASTRAL also had excellent accuracy
on the datasets (both simulated and biological) that we explored in
Mirarab et al. (2014a); however, all these datasets were relatively
small (at most 37 species). Our subsequent evaluation of ASTRAL,
which we report here, shows that ASTRAL’s running time increases
quickly for large datasets and that setting X to be the bipartitions in
the input gene trees reduces the accuracy for species trees estimated
by ASTRAL under certain model conditions. In particular, this set-
ting for X is a problem in the presence of large numbers of taxa, few
gene trees or high levels of discordance.

We introduce ASTRAL-II, a new version of ASTRAL. We im-
prove the running time asymptotically by a factor of n (where n is
the number of species), and we show how to define the set X so that
ASTRAL is more robust and also explores a larger search space. We
have also modified ASTRAL so that it can handle polytomies in the
input trees. We compare ASTRAL to coalescent-based species tree
estimation methods and to concatenation using maximum likeli-
hood (CA-ML) on a collection of simulated datasets and a biological
dataset. We show that ASTRAL outperforms the coalescent-based
methods, providing improved accuracy, and is able to analyze very
large datasets. In particular, we show that ASTRAL can analyze
1000 species and 1000 genes in about a day, using a single proces-
sor. The comparison between ASTRAL and CA-ML shows that
ASTRAL is more accurate whenever the ILS level is sufficiently high
and comes close to CA-ML under very low ILS levels. Our extensive
simulations show how the choice of the best method to use can often
depend on the amount of gene tree error, number of genes and the
level of discordance. On the biological data, we show that some dif-
ferences between CA-ML and MP-EST previously attributed to the
fact that MP-EST accounts for ILS have to be interpreted with care,
because ASTRAL-II, which is also consistent under ILS, recovers
topologies similar to CA-ML.

2 Background: ASTRAL-l
Given a set g of k binary input gene trees on n taxa, there is a multi-
set of k (  quartet trees induced by the input. We define the

weighted quartet (WQ) score of a given tree as the number of quar-
tet trees from this multi-set that the given tree also induces. The opti-
mization problem solved by ASTRAL is to find the species tree that
maximizes the WQ score (Mirarab et al., 2014a).

ASTRAL solves this problem using a dynamic programming
algorithm. Each internal node of an unrooted tree divides the set of
leaves into three parts, defining a tripartition (Supplementary
Fig. S14), and vice versa, such tripartitions define nodes in an un-
rooted tree. We use X |Y|Z to denote a tripartition and use triparti-
tions and internal nodes interchangeably. Each tripartition also
defines some number of quartet topologies that will be induced by
any tree that includes that tripartition as a node (Supplementary Fig.
514). Mirarab et al. (2014a) presented a formula for calculating the
number of shared induced quartet trees between two given

tripartitions. Let T = A1|A2|A3 and T’ = B1|B2|B3 be two triparti-
tions and let C),- = |A,- ﬂ Bi| for i,i 6 {1,2, 3}. The number of quar-
tets shared by T and T’ is as follows:

QI(T,T’)=QI(C)= Z F(c1.,C2b,c3.) <1)
(a,b,c)€G3

where G3 gives the set of all permutations of {1, 2, 3} and F is given

by:

a b _
F(a,b,c) = <2)bc+a<2)c+ab<:) 2%

Mirarab et al. (2014a) defined an overall score for a tripartition:

w(T)=Z Z QI(T,T’) <2)

geg T’ EN (g)

where N (g) is the set of internal nodes in g. Mirarab et al. (2014a)
showed that the WQ score of the species tree can be computed
by summing w(T) for all nodes in the tree and then dividing this
sum by 2 (every gene tree quartet will be counted twice).

The ability to score a tripartition of the species tree in isolation
from others using the w function allows us to use dynamic program-
ming to maximize the WQ score. The dynamic programming starts
from the set L of all leaves and recursively divides it into smaller
subsets, each time finding the division that maximizes the score. To
solve the problem exactly, all ways of dividing a subset need to be
considered (this is exponential). However, we can restrict the search
space by defining a set X of bipartitions of taxa and restricting our
search to tripartitions derived from X. Let X’ = {A : A|L — A E X}
(thus, X’ is the set of both parts from all bipartitions in X). In the
constrained search, we divide a subset into two parts only when
both parts appear in X’. Thus, the recursion in the dynamic pro-
gramming becomes:

V(A) = max {V(A’) + V(A — A’) + w(A’|A — A’|L — A)}

A',A—A’€X'

where V(A) gives the score for an optimal subtree on A, and w is
defined in Equation (2). Note that bipartitions that we allow in the
species tree we construct are restricted to those found in the set X.
ASTRAL-I, by default, sets X to the set of bipartitions observed in
the input gene trees. Mirarab et al. (2014a) proved that using this
set X ensured statistical consistency for ASTRAL. However,
the proof relies only on the fact that the set X contain all the biparti-
tions in the input gene trees, and so any set X that contains those
bipartitions (and perhaps others) also maintains statistical consist-
ency. Thus,

Theorem 1: Let X0 denote the set of bipartitions found in the in-
put gene trees. If X0 g X, then using ASTRAL with the set X is stat-
istically consistent under the multi-species coalescent model.

3 ASTRAL-II

ASTRAL-II has three new features: (i) it uses a faster algorithm to
compute w, (ii) it searches a larger space by expanding the set X
using heuristics and (iii) it can handle polytomies in its input.

3.1 Running time improvement

The score w (Equation 2) needs to be calculated for each tripartition
and O(|X|2) such tripartitions need to be scored. ASTRAL-I com-
putes w in O(n2k) time for each tripartition, but in ASTRAL-II, we
use a better algorithm that uses only O(nk) time. In ASTRAL-I, we

112 [3.10811211an[p.IOJXO'SODBIIHOJIITOTQ/ﬂ(11111 wort popeolumoq

910K ‘09 lsnﬁnV no :2

i46

S.Mirarab and T. Warnow

 

sum over O(nk) input gene tree nodes, and, for each node, we first
calculate C and then compute QI using Equation (1). We represent
subsets of taxa as bitsets, which results in O(n) running time for cal-
culating C; therefore, calculating each w requires O(n2k). In
ASTRAL-II, instead of looking at tripartitions in input gene trees,
we do a post-order traverse of all gene trees (rooted arbitrarily) and
calculate the score using the algorithm shown in Algorithm 1.

 

Algorithm 1. Weight calculation: The Input is a gene tree g and
a tripartition X | Y|Z. Each part (e.g. X) is a bitset indexed by the
species (thus, X is 1 if leaf u is in X and otherwise is 0). Q1 is
deﬁned as in Eq. 1. Function WEIGHT is called for all g E g and
results are summed to compute w deﬁned in Eq. (2).

RWD =2 and FRQ = LTH 2 1+“).

 

 

function WEIGHT (g,X|Y|Z) w <— 0 and S <— empty stack
for u E postOrder(g) do

if u is a leaf then
(new) e (Xlul, Ylul,Zlul)

else
(C11,C12,C13) <— pull from S
(C21, C22, C23) <— pull from S
(x,y,z) <— (C11 + C21, C12 + C22, C13 + C23)
(C31,C32,C33) <— (IXI — 96’ |Y| — y, IZI —Z)
w <— w + QI(C)

push (x, y, z) to S

 

 

Algorithm 2. Computing similarity matrix: leafCount gives the
number of leaves under a node and is easily precomputed.

 

function GETSIMILARITY (g)
S <— Zeros(n x n)
for g E g and u E postOrder(g) do
for l E Left(u) do

for r 6 Right(“) do n — leafCount(u)
S[l,r] = S[r,l] = Slr’ll + < 2 )

 

 

Algorithm 3. Additions to X using greedy consensus:
See detailed descriptions of functions in Supplementary
Table S3. greedy(g, t, 19) returns the greedy consensus of g,
including only branches with frequency 2 t; if b is true,
polytomies in the consensus are randomly resolved.
updateX(t) adds bipartitions from tree t to the set X; when
edges in t are labeled with a frequency label (e.g. frequencies
in the greedy consensus), it returns the maximum label of
any new bipartition added to X. clusters(p) returns the taxon
partitions deﬁned by an unrooted node p. upgma(S, C) runs
the UPGMA algorithm using the similarity matrix S; when C
is given, UPGMA starts by groups deﬁned in C.
randSample(p) selects a random taxon from each subtree
around a node p and resolve(p, r) resolves polytomy p
according to a tree 1' on such a sampling. Operator l‘ restricts
a tree or a matrix to a subset. pectinate(O) returns a pectin-
ate tree based on O, an ordered list of taxa. sortBy sorts a
list of taxa based on their decreasing similarity to a given

taxon. Constants: THS = {0,1iw,51—0,2i0,11—0,%,%}; MIT: 10;

function ADDBYGREEDY (g, S)
for t E THS do
gc <— greedy(g, t, False)
for p E polytomies(gc) do
updateX(upgma(S, start = clusters(p)))
c <— 0 and max <— MIT
while c < max do
6 <— c + 1
sample <— randSample(p)
r <— greedy(g l‘sample, 0, True)
mt <— updateX(resolve(p, r))
if mt 2 FRQ then max <— max + RWD
updateX(resolve(p, upgma(S l‘sample)))
if t g LTH and c < MIT then
for s 6 sample do
1' <— pectinate(sortBy(S, s, sample)
updateX(resolve(p, r))

 

This algorithm, for each traversal node n, computes the number
of taxa under a that are shared with each side of the tripartition
being scored. This is done using a O(1) calculation that sums the
same quantities already calculated for the children of it. At the
leaves, we simply need to find which side of the tripartition includes
that leaf, which can also be done in O(1) using bitsets. Thus, we eas-
ily compute the C matrix in 0(1) and therefore, calculating w for
each tripartition requires O(nk) running time. Thus,

Theorem 2: The running time of ASTRAL-II is O(nk|X

3.2 Additions to X

We use following heuristic strategies to add bipartitions to the set X.

3.2.1 Similarity matrix

We define the similarly between a pair of taxa as the number of
quartet trees induced by gene trees where the pair appear on the
same side of the quartet. We compute a similarity matrix by travers-
ing all nodes of input gene trees, rooted arbitrarily (Algorithm 2).
For each node n, we look at all pairs of leaves chosen each from one

of the children of n. For each such pair, we add  to their simi-

larity score, where y is the number of leaves outside the subtree
below it. This will process each pair of nodes in each of the input k
genes exactly once and would therefore require O(n2k) computa-
tions. The final score can be normalized by the number of input
quartet trees that include any pair (not shown in Algorithm 2). We
use the similarity matrix to calculate a UPGMA tree and add all its
bipartitions to X. This matrix is also used in our next heuristics.

3.2.2 Greedy

The greedy consensus of a set of trees is obtained by starting from a
star tree and adding bipartitions from input trees in the decreasing
order of their frequency if they do not conflict with previous biparti-
tions. This process ends when no remaining bipartition has frequency
above a given threshold or when the tree is fully resolved. We estimate
the greedy consensus of the gene trees with various thresholds
(Algorithm 3). For each polytomy in each consensus tree, we resolve
the polytomy in multiple ways and add bipartitions implied by those
resolutions to the set X. First, we resolve the polytomy by applying

112 [glO'SIBILInO[p.IOJXO'SODBIIIJOJIITOTQ/ﬂdllq wort popeolumoq

910K ‘09 lsnﬁnV no 2:

ASTRAL-II

i47

 

UPGMA to the similarity matrix, starting from clusters defined by the
polytomy. Then, we sample one taxon from each side of the polytomy
randomly and use the greedy consensus of the gene trees restricted to
this subsample to find a resolution of the polytomy (randomly resolv-
ing remaining polytomies). We repeat this process at least 10 times,
but if the subsampled greedy consensus trees include new bipartitions
that are sufficiently frequent (21%), we do more rounds of random
sampling (we increase the number of iterations by two). For each ran-
dom subsample around a polytomy, we also resolve it by calculating
an UPGMA tree on the subsampled similarity matrix. Finally, for the
two first greedy threshold values and the first 10 random subsamples,
we also use a third strategy that can potentially add a larger number
of bipartitions: for each subsampled taxon x, we resolve the polytomy
as a pectinate tree by sorting the remaining taxa according to their
similarity with x (in decreasing order).

3.2.3 Gene tree polytomies

When gene trees include polytomies, we also add new bipartitions to
set X. We first compute the greedy consensus of the input gene trees
with threshold 0, and if the greedy consensus has polytomies, we re-
solve them using UPGMA; we repeat this process twice to account
for random tie-breakers in the greedy consensus estimation. Then,
for each gene tree polytomy, we use the two resolved greedy consen-
sus trees to infer a resolution of the polytomy, and we add the
implied resolutions to set X.

3.3 Multifurcating input gene trees

Although true gene trees are assumed to be fully resolved (binary),
in some cases, estimated ML trees produce polytomies. Extending
ASTRAL to inputs that include polytomies requires solving the WQ
tree problem when each node of the input defines not a tripartition
but a multi-partition of the set of taxa. We start by a basic observa-
tion: every resolved quartet tree induced by a gene tree maps to two
nodes in the gene tree regardless of whether the gene tree is binary
or not (Supplementary Fig. 514). In other words, induced quartet
trees that map to only one node of the gene tree are unresolved.
When maximizing the quartet support, these unresolved gene tree
quartet trees are inconsequential and need to be ignored. Now, con-
sider a polytomy of degree d, which divides the set of taxa into d
parts. Any selection of three parts around the polytomy defines a tri-
partition. Any selection of two taxa from one part of this tripartition
and one taxon from each of the remaining two parts induces a
resolved quartet tree, and each resolved quartet tree maps to exactly
two nodes in our multifurcating tree. Thus, all the algorithmic as-
sumptions of ASTRAL remain intact, as long as for each degree d

. . . . d .
node in an input gene tree, we treat it as a collection of (3 tripar-

titions. Thus, for a tripartition T = A1|A2|A3 and a multi-partition
M = M1|  lMd, we let Ci) 2  DMI'I for all i6  and

i E {1, . . . ,d} and we generalize Equation (1) to:
QI(T,M) = QI(C) = 2 HQ... (2%, c3.) (3)
(a,b,c)€P3
where P3 is the set of all ordered subsets of size 3 from {1, . . . ,d}.

Extending Algorithm 1 to compute Equation (3) is straightforward.

In the presence of polytomies, the running time analysis can
change because analyzing each polytomy requires time cubic in its
degree and the degree can increase with n. It is not hard to see that
the worst case is when all gene trees have a polytomy with d = g; in
this case, the running time is O(n3k|X

3.4 Statistical consistency

Theorem 3: ASTRAL-II is statistically consistent under the multi-
species coalescent model.

Proof: The changes made to ASTRAL-I to develop ASTRAL-II
affect the running time, enlarge the search space and allow it to ana-
lyze gene trees with polytomies. Under the multi-species coalescent
model, all gene trees are binary. As shown in Theorem 1, as long as
the set X contains all the bipartitions in the input gene trees,
ASTRAL is statistically consistent. The theorem follows.

4 Experimental setup

4.1 Simulation procedure

We used SimPhy (https://github.com/adamallo/SimPhy) to simulate
species trees and gene trees (produced in mutation units) and then
used Indelible (Fletcher and Yang, 2009) to simulate nucleotide se-
quences down the gene trees with varying length and model param-
eters. We estimated gene trees on these simulated gene alignments,
which we then used in coalescent-based analyses.

We simulated 11 model conditions, which we divide into two
datasets, with one model condition appearing in both datasets. We
used SimPhy to simulate species trees according to the Yule process,
characterized by the number of taxa, maximum tree length and the
speciation rate (this combination defines a model condition). In six
model conditions (forming Dataset I), we fixed the number of taxa to
200 and varied tree length (500 K, 2M and 10M generations) and
speciation rates (1e-6 and 1e-7 per generation). The tree length im-
pacts the amount of ILS, with lower length resulting in shorter
branches, and therefore higher levels of ILS (Supplementary Fig. 1a).
Speciation rate impacts whether speciation events tend to happen
close to the tips (1e-06) or close to the base (1e-07). Different tree
shapes (i.e. combinations of tree length and speciation rate) produce
different levels of ILS starting from relatively low [roughly 10% dis-
tance between true gene trees and the species tree, measured by the
Robinson—Foulds (RF) distance; Robinson and Foulds (1981)] and
going up to very high (roughly 70% RF). In the remaining model
conditions (forming Dataset II), we fixed the tree shape to 2 M/1e-06
and set the number of taxa to 10, 50, 100, 200, 500 and 1000.
Thus, the model condition with 200 taxa and the 2 M/1e-6 tree shape
appears in both datasets.

For each model condition, we simulated 50 species trees, form-
ing 50 replicates. On each species tree, 1000 gene trees were simu-
lated according to the multi-species coalescent model with the
population size fixed to 200 000 (a reasonable value for verte-
brates). SimPhy uses various rate parameters and rate heterogeneity
modifiers to convert gene tree branch lengths to mutation units,
introducing deviations from molecular clock and rate heterogeneity
between genes (see Supplementary Table S1 for parameters; simula-
tion scripts available at http://www.cs.utexas.edu/users/phylo/soft-
ware/astrall).

We simulated indel-free gene alignments using Indelible and
under the GTR + F model. First, for each replicate, two parameters,
u and a, were drawn uniformly from (5.7, 7.3) and (0, 0.3) respect-
ively. Then, the sequence length for each gene in that replicate was
drawn from a log-normal distribution with ,u and 0 parameters
(thus, average sequence length is uniformly distributed between
300 bp and 1500 bp). GTR+ F parameters were drawn from
Dirichlet distributions that had parameters estimated using ML
from a collection of real biological datasets (details given in the
Supplementary Material).

112 [glO'SIBILInO[p.IOJXO'SODBIIIJOJIITOTQ/ﬂdllq wort popeolumoq

910K ‘09 lsnﬁnV no 2:

i48

S.Mirarab and T. Warnow

 

4.2 Gene tree estimation

Previous studies (Liu et al., 201 1) have shown that FastTree-II (Price
et al., 2010) is generally as accurate at estimating the tree topology
as more extensive ML heuristics such as RAxML (Stamatakis 2014),
while being much faster. In our simulation studies, we used FastTree
to estimate the 550 000 gene trees ranging from 10 to 1000 species.
Figure 1b shows the distribution of gene tree estimation error and
demonstrate that we have simulated wide-ranging levels of gene tree
error. The tree error was impacted by tree shape parameters; more
IL5 and deeper speciation lead to higher levels of gene tree error.
Moreover, average gene tree estimation error varied across repli-
cates, and gene tree error varied considerably among the 1000 genes
in each replicate; the number of taxa had only a small impact on
gene tree estimation error (Supplementary Fig. 51).

FastTree can output polytomies when sequence alignments can-
not distinguish between competing tree resolutions. We removed
any gene tree where more than 50% of the internal nodes were pol-
ytomies. This pruning left fewer than 500 genes for three replicates
of the 200 taxon/500 K/1e-06 and 5 0-taxon model conditions, two
replicates of the 100-taxon model condition and one replicate of the
10-taxon model condition. Those nine replicates (out of 550) were
removed from our analyses.

4.3 Species tree methods

We run all methods given a maximum of 4 days of running time
and 24 GB of memory. We compare ASTRAL-I to ASTRAL-II and
ASTRAL-II to stt and CA-ML run using FastTree. MP-EST only
finished for datasets with at most 100 taxa within time limits.
Because of its running time, we ran MP-EST once (one random
seed number) for each analysis. stt, ASTRAL-I and MP-EST
could not handle polytomies; therefore, we randomly resolved pol-
ytomies in inputs of these methods. We also ran ASTRAL-II on

 

 

 

 

 

 

 

(a) True gene tree discordance
20 — 3:. rate  tree height
 (Z1e—06§,."§1e—07 |Z|10M|Z|2M|Z|500k
15 — ,5 i
2:
9 10 - '
(D
'C
5 _
o _
I I I I I
0% 20% 40% 60% 80%
RF distance (true species tree vs true gene trees)
(b) Gene tree estimation error
4 _
2:3 '
E
a: 2 -
'C
1 _
o _

 

 

 

 

 

I I I I I
0% 25% 50% 75% 100%
RF distance (true vs estimated)

Fig. 1. Characteristics of the simulation. (a) RF distance between the true spe-
cies tree and the true gene trees (50 replicates of 1000 genes) for Dataset |.
Tree height directly affects the amount of true discordance; the speciation
rate affects true gene tree discordance only with 10 M tree length. The
number of taxa has a modest effect on the discordance (see Supplementary
Fig. 813). (b) RF distance between true gene trees and estimated gene trees
for Dataset |. See also Supplementary Figure S1 for inter- and intra-replicate
gene tree error distributions

gene trees with randomly resolved polytomies and observed no dif-
ferences with ASTRAL-II run on gene trees with polytomies
(Supplementary Fig. 512). Thus, differences between ASTRAL-II
and other methods are not due to the random resolutions of
polytomies.

4.4 Evaluation criteria

We evaluate methods in terms of species tree error and we also
evaluate running time for coalescent-based methods. Species tree
error is measured using the standard RF distance. Running time of
summary methods is measured on a heterogeneous condor cluster
and gives the wall clock running time.

5 Simulation results

We start by comparing ASTRAL-II with ASTRAL-I in terms of ac-
curacy and running time (RQ1). We next focus on ASTRAL-II and
compare it to other coalescent-based methods (RQ2) and then com-
pare it to CA-ML (RQ3). This question leads us to a more in depth
analysis of the effects of gene tree estimation error on the accuracy
of various methods (RQ4). Finally, we evaluate the impact of col-
lapsing low support branches in input gene trees on the accuracy of
ASTRAL-II (RQ5).

5.1 R01: ASTRAL-I versus ASTRAL-II

5.1.1 Search space

ASTRAL-II adds extra bipartitions to the search space, which
allows it to explore a larger search space; this tends to increase the
accuracy of ASTRAL-II over ASTRAL-I. In our simulations, the
extent of the improvement depended on the model condition
(Table 1). In Dataset I, with the lowest level of IL5 or with the me-
dium IL5 level and recent speciation, both ASTRAL-I and
ASTRAL-II had extremely low error (Supplementary Fig. 52) and
no substantial improvements were detected by the addition of
extra bipartitions (Table 1). With 2M length and deep speciations,
ASTRAL-II improved upon ASTRAL-I substantially, with im-
provements ranging from 3.5% with 1000 genes to 10.1% with 50
genes. Most dramatic differences were observed on the high ILS
conditions, where ASTRAL-I performed extremely poorly
(Supplementary Fig. 52), but ASTRAL-II reduced the error by
about 40% (Table 1). Results on Dataset II showed that the effect
of adding extra bipartitions also depended on the number of taxa
in expected ways (Table 1). With this fixed tree shape, ASTRAL-I
was as accurate as ASTRAL-II for up to 200 taxa, but with 500
taxa or more, ASTRAL-II had a substantial advantage (as large as
9%). As expected, the advantage of ASTRAL-II was larger with
few genes and reduced with more genes.

The improvements obtained by ASTRAL-II are due to additions
to the search space. We therefore asked whether the heuristic
approaches used to add bipartitions to set X are sufficient or im-
provements could be obtained by further expanding X. To answer
this question, we tested the impact of adding all the bipartitions
from the species tree to the set X and compared ASTRAL-II with
and without these extra bipartitions (see Supplementary Figs 52 and
53). We saw no significant differences between ASTRAL-II with and
without these potentially new bipartitions (P = 0.77 according to a
two-way analysis of variance test), indicating that the accuracy of
ASTRAL-II is very unlikely to be improved further by expanding the
search space.

112 [glO'SIBILInO[p.IOJXO'SODBIIHOJIIIOIQ/[Z(11111 wort popeolumoq

910K ‘09 lsnﬁnV no 2:

ASTRAL-II i49

 

Table 1. Reductions in species tree error obtained by ASTRAL-ll compared with ASTRAL-l

 

Dataset I [200 taxa, varying tree shape (columns) and number of genes (rows)]

 

 

 

 

10e-6 (recent) 10e-7 (deep)
10M 2M 500K 10M 2M 500K
50 0.2 i 0.2 0.7 i 0.3 37.9 i 1.0 1.7 i 0.6 10.1 i 0.9 38.7 i 0.9
200 0.0 i 0.1 0.2 i 0.1 41.0 i 1.1 0.7 i 0.3 7.4 i 0.7 41.4 i 1.0
1000 0.0 i 0.0 0.2 i 0.1 39.2 i 1.2 0.0 i 0.0 3.5 i 0.7 41.4 i 1.1

 

Dataset II [2M/1e-6 shape, varying the number of taxa (columns) and genes (rows)]

 

 

10 50 100 200 500 1000
50 0.3 i 0.3 0.0 i 0.1 0.3 i 0.2 0.7 i 0.3 6.0 i 0.6 9.3 i 0.6
200 0.0 i 0.0 0.0 i 0.0 0.0 i 0.0 0.2 i 0.09 3.9 i 0.5 8.3 i 0.5
1000 0.0 i 0.0 0.1 i 0.1 0.0 i 0.0 0.2 i 0.08 1.7 i 0.4

 

We report results using the difference in RF percentage; values above 0.0% indicate ASTRAL-II is more accurate.

 

 

 

Species tree topological error (RF)

0.1-

.I... . .o
E

 

 

 

 

 

0.0 -

 

 

0.1-

 

 

 

Species tree topological error (RF)

 

 

 

 

 

 

 

0.0 -
0.5 -
0.4 -
 ' o . . . ° : ;
o . o ' o
 - o 0 0 g o : 0 '
. . . . O . I :
 _ $ 0 l I 3 : # ¥ l . . $ E l i 3
0.0 - E I I  .l l
I I I I I I I I I
50 200 1000 50 200 1000 50 200 1000

genes

ASTRAL—II E NJstEl MP—ESTEI CA—ML

Fig. 2. Comparison of methods with respect to species tree topological accuracy. (Top) Two hundred taxa and varying tree shapes and number of genes.
(Bottom) Varying number of taxa and genes and tree shaped fixed to 2 M/1e-6. ASTRAL-ll is always at least as accurate as NJst and MP-EST

112 /810'SI12umo[p101x0'801112u1101uioiq//2d11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

i50

S.Mirarab and T. Warnow

 

 

method *
3o _ + ASTRAL—II "" NJst '0" MP—EST

genes
0 50 A 200 l 1000

Running time (hours)

 

 

 

 

I
1000
number of taxa

Fig. 3. Running time comparison with varying number of taxa and genes
(Dataset II). Average running time is shown for NJst and ASTRAL-ll. Note
that ASTRAL-ll is much faster on large datasets

5.1.2 Running time

With 200 taxa and lower levels of ILS, ASTRAL-I and ASTRAL-II
had similar running times (Supplementary Fig. 52), but ASTRAL-II
was faster with increased IL5 (3 versus 7.5 h of median run time).
Note that ASTRAL-II searches a larger tree space than ASTRAL-I.
With small numbers of taxa, the two versions had close running
times, but as the number of taxa increased, the running time of
ASTRAL-II increased more slowly (Supplementary Fig. 53). For
500 taxa, ASTRAL-II was twice as fast as ASTRAL-I (a median of
5 versus 10 h), whereas ASTRAL-I did not complete on 1000 taxa
and 1000 genes.

5.2 R02: ASTRAL-ll versus other coalescent methods
We refer to ASTRAL-II as ASTRAL henceforth.

Completion within time constraints ASTRAL completed on all
model conditions, MP-EST completed only on datasets with at most
100 taxa and NJst completed on all model conditions except for the
condition with 1000 genes and 1000 taxa.

Dataset I ASTRAL was more accurate than NJst in all model
conditions, except 1e-07/5 00 K where the two methods had identical
accuracy (Fig. 2). Overall, the differences between ASTRAL-II and
NJst were statistically significant (P < 1e — 05), according to a two-
way analysis of variance test, and the relative performance of the
methods was significantly impacted by the speciation rate
(P = 0.026) but not by the number of genes or tree length. ASTRAL
was faster than NJst, in some cases by an order of magnitude and in
other cases by smaller margins (Supplementary Fig. 54).

Dataset II On 10-taxon datasets, all methods had high accuracy
(Supplementary Table 52). On 5 0- and 100-taxon datasets, MP-EST
was able to finish, but it was the least accurate of all the methods.
ASTRAL was more accurate than NJst for all conditions except for
50 taxa with 50 genes (Supplementary Table 52); however, differ-
ences were generally small when the number of taxa was 200 or less
and more substantial with more taxa. Overall, differences between
ASTRAL and NJst were significant (P: 0.0007) and were signifi-
cantly impacted by the number of taxa (P=0.0004) but not the
number of genes. ASTRAL was also faster than NJst, especially with
more genes and more taxa (Fig. 3). For example, on 500 taxa and
1000 genes, ASTRAL typically finished in 2—10 h, whereas NJst

 

10M || 2M
_ El ASTRAL—II El ASTRAL—II (true gt) ﬂ CA—ML

 

t .
¢0.2- : . '

3’00: E-Q'  $.4- ++ 'f'd-h Iél-ual-

90—9 L

 

 

AO—e L

 

 

 

 

 

 

"32:3: 4.1- ég 4.; is 4* 4*
50 200 1 000 50 200 1 000

genes

Fig. 4. Comparison of ASTRAL-ll run using estimated and true gene trees
and CA-ML on Dataset I

required 12—30 h (Supplementary Fig. 55). MP-EST was by far the
slowest method, but its running time was not impacted by the num-
ber of genes.

5.3 R03: ASTRAL-II versus CA-ML

5.3.1 Dataset I

Interestingly, the relative accuracy of CA-ML and ASTRAL was sig-
nificantly impacted by tree length (P < 1e— 05), speciation rate
(P: 0.00004) and the number of genes (P < 1e — 05). With lower
levels of IL5 (10M and 2M) and recent speciation, CA-ML and
ASTRAL had close accuracy, but CA-ML tended to be better with
more genes and ASTRAL was better with fewer genes
(Supplementary Table 51, Fig. 2). With deep speciation and lower
IL5, CA-ML was substantially more accurate than ASTRAL, but
increasing the number of genes reduced the gap. At the high IL5 lev-
els, ASTRAL was much more accurate than CA-ML for all number
of genes and for both recent and deep speciation.

5.3.2 Dataset 11

Overall, differences between ASTRAL and CA-ML were not signifi-
cant (P= 0.2), but the relative accuracy seemed to be impacted by
the number of genes (P: 0.06). Regardless of the number of taxa,
which did not impact relative accuracy (P = 0.2), CA-ML was
slightly more accurate with 1000 genes and ASTRAL was slightly
more accurate with fewer genes (Supplementary Table 52, Fig. 2).

5.3.3 Running time

We ran CA-ML and ASTRAL-II on different platforms and hence
cannot make direct running time comparisons. Nevertheless, we
provide our running time numbers to give a general idea. CA-ML
using FastTree on 200-taxon model conditions with 1000 genes
took roughly 2 h, whereas ASTRAL-II took roughly one hour to esti-
mate the species tree and estimating gene trees also took about
1.5 h. In general, therefore, the running times of ASTRAL-II and
CA-ML are relatively close on this dataset.

5.4 R04: effect of gene tree error

In RQ3, we observed that under some conditions, CA-ML was
more accurate than ASTRAL, a pattern that we attribute to high
levels of gene tree error present in our simulations. When true
(simulated) gene trees are used instead of the estimated gene trees,
the accuracy of ASTRAL is outstanding, regardless of the model
condition (see Fig. 4 and Supplementary Fig. 56), and ASTRAL is
always more accurate than CA-ML. Thus, the fact that CA-ML is

112 /810'SI12umo[p101x0'801112u1101uioiq//2d11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

ASTRAL-II

i51

 

 

 

 

 

 

 

 

 

 

I I I
low medium high low

2 50 200 H 1000

EL, 0.4 -

§ 0 3 El ASTRAL—II ﬂ NJst ﬂ CA—ML

a ' ' _L
E)  . . o o . . o ' E (I;
g 0.1 —  I   * I i l i \l
g.)- 0_0 _ * *

I I I
medium high low

I I
medium high

Fig. 5. Comparison of species tree accuracy with 200 taxa, divided into three categories of gene tree estimation error. Boxes show number of genes

Arabidopsis
92 Brassica
A Astral- I I 25 Carica 61
Theobroma 70
Gossypium
Citrus 94

B MP-EST

Fragaria
44 Cannabis 25
Cucumis
Medicago
Glycine
93 Ouercus as
Betula
Eucalyptus
Vitis
76 Striga
Mimulus 69
Sesamum
72

Helianthus

Lactuca 6“

Lin'odendron
Aristolochia

92 Musa
Phoenix 5°
75 7e Sorghum 42
Oryza
Phalaenopsis
'— Dioscorea
Nuphar —.
Amborella —'
Picea
r: Pinus :—|
l— Zamia
Selaginella

 

 

 

 

Fig. 6. Comparison of species trees computed on the angiosperm dataset of
Xi et al. (2014). MP-EST and ASTRAL-ll differ in the placement of Amborella;
the concatenation tree agrees with ASTRAL-ll

more accurate than ASTRAL under lower levels of IL5 is related to
estimation error in the input provided to ASTRAL.

In our ASTRAL and NJst analyses, gene tree error had a positive
correlation with species tree error (Supplementary Fig. 57), with cor-
relation coefficients that were similar for ASTRAL and NJst. The
error of CA-ML also correlated with gene tree error (obviously the
relationship is indirect; for example, short alignments impact both
CA-ML and gene tree error), but the correlation was weaker than
the correlation observed for coalescent-based methods
(Supplementary Fig. 58). Interestingly, the correlation between gene
tree estimation error and species tree error was typically higher with
fewer genes.

To further investigate the impact of the gene tree error, we div-
ided replicates of each model condition into three categories: aver-
age gene tree estimation error below 0.25 is low, between 0.25 and
0.4 is medium and above 0.4 is high. We plotted the species tree ac-
curacy within each of these categories (see Fig. 5 for one model con-
dition, but also see Supplementary Figs 59 and 510 for other model
conditions). The relative performance of ASTRAL and NJst is typic-
ally unchanged across various categories of gene tree error, but
increasing gene tree error tends to increase the magnitude of the dif-
ference between ASTRAL and NJst. Furthermore, MP-EST seemed
to be more sensitive to gene tree error than either NJst or ASTRAL
(Supplementary Fig. 510).

The relative performance of ASTRAL and CA-ML depended on
gene tree error. For those model conditions where CA-ML was

generally more accurate than ASTRAL (e.g. 2M/1e-07), ASTRAL
tended to outperform CA-ML on the replicates with low gene tree
estimation error (Fig. 5). Consistent with this observation, we noted
that ASTRAL was impacted by gene tree error more than CA-ML
(Supplementary Fig. 59).

5.5 R05: collapsing low support branches

ASTRAL-II can handle inputs with polytomies. Although we have
not done bootstrapping to get reliable measures of support, we do
get local 5H-like branch support from FastTree-II. We collapsed low
support branches (10%, 33% and 5 0%) and ran ASTRAL on the re-
sulting unresolved gene trees. We measured the impact of contract-
ing low support branches on the RF rate: the median delta RF (error
before collapsing minus error after collapsing) is typically zero
(Supplementary Fig. 51 1), never above zero but in a few cases below
zero (signifying that accuracy was improved in those few cases).
However, these differences are not statistically significant
(P: 0.36). Since this analysis was performed using 5H-like branch
support values instead of bootstrap support values (or other ways of
estimating support values), further studies are needed.

6 Biological results

The evolution of angiosperms, and the placement of Amborella tri-
chopoda Baill., is one of the challenging questions in land plant evo-
lution. One hypothesis recovered in some recent molecular studies
(e.g. Drew et al. 2014; Qiu et al. 2000; Wickett et al. 2014; Zhang
et al. 2012) is that A.trichopoda Baill. is sister to the rest of angio-
sperms, followed by water lilies (i.e. Nymphaeales). In particular, a
recent analysis of 104 plant species based on entire transcriptomes
recovered this relationship both with concatenation and ASTRAL-I,
using various perturbations of the dataset (Wickett et al., 2014). A
competing hypothesis is that Amborella is sister to water lilies, and
this whole group is sister to other angiosperms (Drew et al., 2014;
Goremykin et al., 2013). Xi et al. (2014) examined this question
using a collection of 310 genes sampled from 42 angiosperms and 4
outgroups. They observed that CA-ML produced the first hypothesis
and MP-EST produced the second hypothesis, and they argued that
these differences are due to the fact that CA-ML does not model
ILS, whereas MP-EST does.

We obtained alignments for these 310 genes from Xi et al.
(2014) and estimated gene trees using RAxML under GTR+ F
model with 200 replicates of bootstrapping and 10 rounds of ML
(RAxML was used because running time was not an issue on this
relatively small dataset). We ran MP-EST and ASTRAL and
obtained two different trees (Fig. 6). Reproducing Xi et al. (2014)
results, MP-EST recovered the sister relationship of Amborella and
Nymphaeales with 100% support. However, ASTRAL, just like

112 /810'SI12umo[p101x0'801112u1101uioiq//2d11q 111011 popeolumoq

910K ‘09 lsnﬁnV no 2:

i52

S.Mirarab and T. Warnow

 

CA-ML, recovers Amborella as sister to other angiosperms, with
75% support. Although the exact position of Amborella is debated,
our analysis shows that the differences between CA-ML and
MP-EST results cannot be simply attributed to the fact that CA-ML
does not consider ILS.

7 Discussion and conclusion

Our wide-ranging simulation results show that ASTRAL-II, unlike
the other methods we studied, can analyze datasets with up to 1000
taxa and 1000 genes within reasonable running times. However,
future studies need to compare ASTRAL-II to divide-and-conquer
approaches (e.g. Bayzid et al., 2014; Zimmermann et al., 2014) that
enable slower coalescent-based methods to scale to large datasets.
ASTRAL-II was more accurate than other coalescent-based methods
and was more accurate than CA-ML, unless IL5 levels were low and
gene tree error was high. Although the angiosperm biological data-
set we studied was relatively small (46 species), our simulations
show that upcoming multi-gene datasets with large numbers of
species can be accurately analyzed using ASTRAL-II.

On the angiosperm dataset, ASTRAL recovered the relationship
supported by CA-ML and a large number of recent studies, whereas
MP-EST recovered an alternative topology, also supported by some
previous analyses. There are several possible reasons for the differ-
ences between the two methods, including the possibility that root-
ing gene trees (required by MP-EST but not by ASTRAL) by
Selaginella can be problematic for some genes or that the impact of
the gene tree estimation error is different for the two methods. We
also note that ASTRAL is a non-parametric method that does not
estimate branch lengths, and it is possible that non-parametric meth-
ods are less sensitive to gene tree estimation error than parametric
methods (like MP-EST).

ASTRAL was more accurate than CA-ML, except when gene
tree estimation error was high and IL5 levels sufficiently low. These
results suggest that CA-ML should not be rejected, even though it is
not statistically consistent under the multi-species coalescent model.
Conversely, proofs of consistency of standard summary methods as-
sume gene trees estimated without error (Roch and Warnow, 2015),
and this assumption limits the relevance of consistency results in
practice. Improving gene tree estimation is crucial for coalescent-
based species tree estimation, as observed in the literature (e.g.
Mirarab et al. 2014b, c; Patel et al. 2013); however, the requirement
to use recombination-free regions complicates this pursuit as recom-
bination-free ‘c-genes’ can be very short, especially with increased
numbers of taxa (Gatesy and Springer, 2014). Future studies need to
study the impact of using shorter gene sequence alignments, and
conversely the presence of recombination events within genes, used
as input to coalescent-based species tree estimation methods.

Acknowledgement

We thank the anonymous reviewers for their helpful suggestions.

Funding

This work was supported by the National Science Foundation [0733029,
1461364, and 1062335 (to T.W.)]; and by a Howard Hughes Medical
Institute (HHMI) graduate student fellowship (to S.M.).

Conﬂict of Interest: none declared.

References

Bayzid,M.5. et al. (2014) Disk covering methods improve phylogenomic ana-
lyses. BMC Genomics, 15 (Suppl 6), 57.

Degnan,].H. and Rosenberg,N.A. (2009) Gene tree discordance, phylogenetic
inference and the multispecies coalescent. Trends Ecol. Evol., 24, 332—340.

Drew,B.T. et al. (2014) Another look at the root of the angiosperms reveals a
familiar tale. Syst. Biol., 63, 368—382.

Edwards,5.V. (2009) Is a new and general theory of molecular systematics
emerging? Evolution, 63, 1—19.

Fletcher,W. and Yang,Z. (2009) Indelible: a ﬂexible simulator of biological se-
quence evolution. Mol. Biol. Evol., 26, 1879—1888.

Gatesy,]. and Springer,M. (2014) Phylogenetic analysis at deep timescales:
unreliable gene trees, bypassed hidden support, and the coalescence/
concatalescence conundrum. Mol. Phylogenet. Evol., 80, 231—266.

Goremykin,V.V. et al. (2013) The evolutionary root of ﬂowering plants. Syst.
Biol., 62, 50—61.

Heled,]. and Drummond,A.]. (2010) Bayesian inference of species trees from
multilocus data. Mol. Biol. Evol., 27, 570—5 80.

Kubatko,L.5. and Degnan,]. (2007) Inconsistency of phylogenetic estimates
from concatenated data under coalescence. Syst. Biol., 56, 17—24.

Liu,K. et al. (2011) RAxML and FastTree: comparing two methods for
large-scale maximum likelihood phylogeny estimation. PLoS One, 6,
e27731.

Liu,L. et al. (2010) A maximum pseudo-likelihood approach for esti-
mating species trees under the coalescent model. BMC Evol. Biol.,
10, 302.

Liu,L. and Yu,L. . (201 1) Estimating Species Trees from Unrooted Gene Trees.
Syst. Biol., 60, 661—667.

Maddison,W. (1997) Gene trees in species trees. Syst. Biol., 46, 523—536.

Mirarab,5. et al. (2014a) ASTRAL: genome-scale coalescent-based species tree
estimation. Bioinformatics, 30, i541—i548.

Mirarab,5. et al. (2014b) Evaluating summary methods for multi-locus species
tree estimation in the presence of incomplete lineage sorting. Syst. Biol., pii,
DOI: 10.1093/sysbio/syu063.

Mirarab,5. et al. (2014c) Statistical binning enables an accurate coalescent-
based estimation of the avian tree. Science, 346, 1250463.

Patel,5. et al. (2013) Error in phylogenetic estimation for bushes in the tree of
life. ]. Phylogenet. Evol. Biol., 1, 110.

Price,M.N. et al. (2010) FastTree-2 approximately maximum-likelihood trees
for large alignments. PLoS One, 5, e9490.

Qiu,Y. et al. (2000) Phylogeny of basal angiosperms: analyses of ﬁve genes
from three genomes. Int. ]. Plant Sci., 161, 53—527.

Rannala,B. and Yang,Z. (2003) Bayes estimation of species divergence times
and ancestral population sizes using DNA sequences from multiple loci.
Genetics, 164, 1645—1656.

Robinson,D. and Foulds,L. (1981) Comparison of phylogenetic trees. Math.
Biosci., 53, 131—147.

Roch,5. and Steel,M. (2014) Likelihood-based tree reconstruction on a concat-
enation of aligned sequence data sets can be statistically inconsistent. Theor.
Popul. Biol., 100, 56—62.

Roch,5. and Warnow,T. (2015) On the robustness to gene tree estimation
error (or lack thereof) of coalescent-based species tree methods. Syst. Biol.,
pii, syv016.

Stamatakis,A. (2014) RAxML Version 8: A Tool for Phylogenetic Analysis
and Post-Analysis of Large Phylogenies. Bioinformatics, 30, 1312—1313.

Wickett,N.]. et al. (2014) Phylotranscriptomic analysis of the origin and
early diversiﬁcation of land plants. Proc. Natl. Acad. Sci. USA, 111,
E4859—E4868.

Xi,Z. et al. (2014) Coalescent versus concatenation methods and the place-
ment of Amborella as sister to water lilies. Syst. Biol., 63, 919—932.

Zhang,N. et al. (2012) Highly conserved low-copy nuclear genes as effect-
ive markers for phylogenetic analyses in angiosperms. New Phytol., 195,
923—937.

Zimmermann,T. et al. (2014) BBCA: improving the scalability of *BEAST
using random binning. BMC Genomics, 15 (Suppl 6), 511.

112 /810'SI12umo[p101x0'801112u1101uioiqﬂ2d11q 111011 papeolumoq

910K ‘09 lsnﬁnV no 2:

