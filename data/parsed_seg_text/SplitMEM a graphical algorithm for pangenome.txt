Motivation: Genomics is expanding from a single reference per species paradigm into a more comprehensive pan genome approach that analyzes multiple individuals together. A compressed de Bruijn graph is a sophisticated data structure for representing the genomes of entire populations. It robustly encodes shared segments, simple single nucleotide polymorphisms and complex structural variations far beyond what can be represented in a collection of linear sequences alone. Results: We explore deep topological relationships between suffix trees and compressed de Bruijn graphs and introduce an algorithm, split mem that directly constructs the compressed de Bruijn graph in time and space linear to the total number of genomes for a given maximum genome size. We introduce suffix skips to traverse several suffix links simultaneously and use them to efficiently decompose maximal exact matches into graph nodes. We demonstrate the utility of split mem by analyzing the nine strain pan genome of Bacillus anthracis and up to 62 strains of Escherichia coli, revealing their core genome properties. Availability and implementation: Source code and documentation available open source http://splitmem.sourceforge.net.

INTRODUCTION

discussion comparative genomics has been and continues to be one of our most powerful tools for understanding the genome of a species. Now that genomic data are becoming more abundant, we are beginning to shift away from reference genomes and see the rise of pan genomics. Already hundreds of microbial species have multiple complete genomes available, and through the rise of long read sequencing technologies from pac bio and other companies, we expect a rapid growth in the availability of additional complete genomes (). Sequences that are highly conserved or segregating across the population can reveal clues about their phenotypic roles, and a comprehensive pan genomic approach allows us to directly measure conservation in the context of the flanking sequences. The graphical pan genome approach also consolidates all available information about complex structural variations and gene flow into a unified framework. Our new split mem algorithm efficiently computes a graphical representation of the pan genome by exploiting the deep relationships between suffix trees and compressed de Bruijn graphs. MEMs are readily identified in a suffix tree and through the split mem algorithm are efficiently transformed into the nodes and edges of a compressed de Bruijn graph. This algorithm effectively unifies the most widely used sequence data structures in genomics into a single family containing suffix trees, suffix arrays, fm indexes and now compressed de Bruijn graphs. To accomplish this goal, we have proposed a new construct, called suffix skips, that generalizes the well established concept of suffix links to interrelate more distantly related portions of the suffix tree. To demonstrate the utility of the algorithm, we have applied it to analyze the pan genomes of all 9 b anthracis and all 62 E.coli genomes. Interestingly, when comparing a sample of nine E.coli genomes with the nine b anthracis genomes, the distributions of the lengths of the nodes in the two pan genome graphs are. The running time and peak memory of split mem on the pan genome graphs of increasing numbers of E.coli strains with km er length of 25. Each point represents the minimum value recorded over five trials to reduce measurement noise introduced by competing activity of the server. The line represents the linear regression of the points similar, whereas other properties are markedly different, such as the distributions of the levels of sharing or the distance to the core genomes. This suggests that we have only narrowly explored the genomic variability of b anthracis and future experimental work remains to examine the functional significance of the variable regions. Future work remains to improve split mem and further unify the family of sequence indices. Although our current implementation can easily scale to dozens or hundreds of genomes on a common server, most desired are techniques to reduce the space consumption for even larger numbers of genomes. It is not directly possible to apply recent approaches using Bloom filters or other techniques to save space () but is an interesting research problem to consider. We are also currently investigating techniques to construct a pan genome from the fm index building on the algorithms of the String Graph Assembler () for assembling a genome from short reads. These do not directly apply either without an exhaustive consideration of every km er in the genomes, but there may be ways to generalize our algorithm from suffix trees. We also aim to research additional downstream analysis algorithms for the pan genome especially developing a sequence aligner which can align directly to the graph structure. Finally, we also aim to extend the split mem algorithm to become more robust in the presence of incomplete genomes, so that fragmented draft genomes can be more readily analyzed.
