In this work, we present a cuda based GPU implementation of a poisson boltzmann equation solver, in both the linear and non-linear versions, using double precision. A finite difference scheme is adopted and made suitable for the GPU architecture. The resulting code was interfaced with the electrostatics software for biomolecules DelPhi, which is widely used in the computational biology community. The algorithm has been implemented using CUDA and tested over a few representative cases of biological interest. Details of the implementation and performance test results are illustrated. A speed up of $10 times was achieved both in the linear and non-linear cases. Availability and implementation: The module is open source and available at

introduction the poisson boltzmann equation p be is a widely used tool to estimate the electrostatic energy of molecular systems in ionic solution. Given the continuously increasing size of structural data for proteins and other macromolecules and the need to deal with bigger and more complex structures, the availability of tested and reliable algorithms on the most recent and affordable computational architectures, such as Graphical Processing Units (GPUs), is highly desirable. In this context, we present an implementation on a GPU architecture of both a linear and a non-linear p be solvers based on the finite difference (FD) scheme. The first use of an FD approach to solve the p be can be ascribed to. Our implementation follows that adopted by the DelPhi solver and described in, which exploits the checkerboard structure of the FD discretization of the Laplace differential operator and adopts successive over relaxation to converge to the solution. To our knowledge, this is the first description of a GPU implementation of the non-linear p be which follows the same approach used by DelPhi and detailed in. Our implementation can be executed on any NVIDIA card with Compute Unified Device Architecture (CUDA) capabilities.
