Motivation: Next generation sequencing technologies have revolutionized our ability to rapidly and affordably generate vast quantities of sequence data. Once generated, raw sequences are assembled into contigs or scaffolds. However, these assemblies are mostly fragmented and inaccurate at the whole genome scale, largely due to the inability to integrate additional informative datasets (e.g. physical, optical and genetic maps). To address this problem, we developed a semi automated software tool genome Puzzle Master gpm that enables the integration of additional genomic signposts to edit and build newgen assemblies that result in high quality annotation ready pseudo molecules. Results: With GPM, loaded datasets can be connected to each other via their logical relationships which accomplishes tasks to group, merge, order and orient sequences in a draft assembly. Manual editing can also be performed with a user friendly graphical interface. Final pseudo molecules reflect a users total data package and are available for long term project management. GPM is a web based pipeline and an important part of a Laboratory Information Management System (LIMS) which can be easily deployed on local servers for any genome research laboratory. Availability and Implementation: The GPM (with LIMS) package is available at https://github.com/ jianwei zhang lims Contacts:

introduction illumina and pac bio SMRT sequencing technologies are the two most widely accepted sequencing platforms currently used for large scale genomics driven data generation. Illumina, representing the most widely used second generation sequencing technology, produces short reads (35150 base read lengths), that are highly accurate, with base call outputs that can yield hundreds of millions of bases from a single lane over several days (depending upon complexity) (). pac bio produces hundreds of thousands of long read error corrected sequences (up to 20 kb average read lengths) that can be produced in 36 h per SMRT cell. Data generated by either platform can be used independently, or in combination, to successfully assemble genomes de novo (). Many assemblers have been developed to assemble raw sequence reads into sequence contigs (i.e. minimum sequence units for an assembly), such as soap de novo (), all paths (), h gap (), or Falcon (https://github.com/PacificBiosciences/FALCON-integrate). A few programs or packages (e.g. Bambus, abac as Mauve Aligner, all maps etc.) are also available for scaffolding contigs (). However, software tools that can be used to inspected it NGS sequence assemblies, as well as integrate other evidence types (i.e. physical and genetics maps) to produce an assembly that more accurately and completely reflects the native structure of a given genome, are currently lacking. To analyze, manage and incorporate genome datasets for diverse sequencing projects, such as pseudo molecule construction for the maize and several wild Oryza genome sequencing projects sch n able et al., 2009; J. Stein et al., submitted for publication;), we developed a software tool called 'Genome Puzzle Master' (GPM). GPM does not require sophisticated bioinformatics skills or support, and the final products are ready to use in the form of annotation ready pseudo molecules. GPM can also facilitate the incorporation of additional datasets as new refinements are generated. Here we make GPM available to researchers who have NGS genome assemblies and other unlinked genomic datasets, and are struggling to generate annotation ready or submission ready pseudo molecules
application of the GPM pipeline to assemble two high quality reference genome sequences for indica rice: a case study Recently, our consortia published two high quality reference genome sequences for the two main varietal groups of indica rice zhen shan 97 (ZS97) and Minghui 63 (MH63) (). These genomes were primarily sequenced using pac bio long read sequencing of minimum tiling path BAC pools, combined with Illumina WGS assembled contigs to fill gaps. Once individual BAC sequences were assembled they were loaded into GPM for assembly editing and pseudo molecule construction. Following is a summary of how these data were used to assemble two of the highest quality indica rice genome assemblies produced to date: To assemble the ZS97 and MH63 genomes, the following datasets were loaded in to GPM: (i) Whole Genome Profiling (WGP, van) sequence based PMs for each genome; and (ii) 5363 assembled BAC sequences (including duplicates for the same BAC clones sequenced in multiple jobs or pools) from 188 h gap jobs for ZS97, and 6,801 from 313 jobs for MH63. Here we take ZS97 as an example to demonstrate the assembly procedure once these data were loaded (Supplementary). To start a new assembly, we set the 'FPC: ZS97 v.1' PM as the physical reference and the ir gsp msu (i.e. o sativa subsp. japonica cv. Nipponbare genome sequence,) as the reference genome. We checked 'Assign chromosome number for contigs' and 'Orient contigs based on reference genome' since both ZS97 and Nipponbare belong to the same genus and species (i.e. o sativa and minor differences between the to be assembled and reference genomes would not mislead the results because they are so closely related. seq to seq Alignment' was used to pre build all possible overlapping relationships among all BAC sequences since it was expected that those should be connected. seq to genome Alignment' was also used to map all BAC sequences to the reference genome. We also utilized the end to end Merge,' auto orient Sequences' and 'Filter Redundant Sequences and Overlaps' options. (Note: A similar process was used to assemble the MH63 genome, except we used the 'FPC: MH63 v.1' PM as the physical reference.) After manual checking, editing and removing redundancies, the final assembly products yielded 318 (ZS97, composed of 3862 assembly seqs and 216 (MH63, composed of 3256 assembly seqs assembly ctg s that were ordered, oriented, and assigned to their appropriate chromosomes. The assembly ctg sequences were used as the primary frameworks to build pseudo molecules after gap filling sequences were integrated during the second round of GPM assembly ().

discussion gpm is an integrated pipeline for generating and editing pseudo molecules from existing next gen sequence assembles using evidence based guides such as reference sequences, physical maps, genetic maps and paired BESs. We demonstrated how GPM can be used to generate high quality submission ready pseudo molecules for two indica rice accessions, ZS97 and MH63, by the integration of bac based physical maps and reference sequence guides. To perform an assembly with GPM, not all the resources like those used for ZS97 and MH63 are required, but GPM does require at least one guide type (e.g. genetic, physical or genome reference). Since GPM does not reassemble sequence data from the original short long reads, the kind and quality of the evidence based guides will greatly affect the amount of time required for editing and will impact the final quality of an assembly. Using a reference genome in a GPM assembly is quite valuable, however, the utilization of more evidence guides can greatly enhance the ability to build high quality pseudo molecules and to avoid the overuse of the reference sequences in conforming a GPM assembly to mimic a RefSeq. If a reference genome is the only evidence to guide an assembly, then reference sequence overuse mistakes can't be avoided. However, using other information that is available could detect overuse errors which would be corrected during a manual check step (which is not labor intensive and strongly recommended) with GPM. Hence, evidence data are key factors used to build high quality GPM assemblies. In the current version of our LIMS, we can track each processing step from BAC library construction to the final genome assembly seamlessly during the entire phase of a sequencing project. BAC library resources and wet lab sequencing runs are recorded in our system. As a part of the LIMS, GPM supports fast a formatted sequences. However, the ability to deal with raw reads has been limited due to their huge data size. Some additional features, such as paired end mate and MTP information, are partially adapted for assembly manipulation in the current version of GPM. pseudo molecules in fast a format with an AGP file can be generated as the final output for further downstream analysis and public repository sequence submissions (e.g. genbank a GPM assembly ctg view of a 500-KB region. assembly seqs top and bottom, are shown as overlapping (yellow) and fully redundant assembly seqs are gray. The retained (green) and removed (gray) portions of assembly seqs are indicated. (B) chromosome scale view of a 500-KB region that compares two genome assemblies to a Reference sequence. The Reference Sequence is shown in the middle (bright green) with alignments (yellow) to each assembly ctg (violet) at the top and bottom. The assembly ctg order can be changed by drag and drop the LIMS can be expanded to integrate new functions for a specific project as needed. For example, we built a pipeline called post h gap to perform circular ization and identification of BAC sequences for the two rice genome sequencing projects described above (). As reported in our data descriptor (), we used a map based bac pool sequencing strategy to produce sequence data that were assembled into a set of sequences (termed unit igs by h gap for each pool. We were able to process the output of each corresponding h gap job to circular ize and identify BAC sequences properly using related data information in the LIMS as follows: (i) post h gap first filtered unit igs with lengths shorter than 10 kb, then (ii) trimmed vectors and circular ized plasmid or BAC sequences according to pairs of sequences at specific breakpoints and (iii) assigned BAC IDs to each sequence according to WGP tags or be s information. During the post h gap processing step, two parameters (default: min overlap  500 bp, overlap identity  95%) could be set for sequence circular ization and four optional parameters (default: min clone tag number  5, tag match identity  100%, tag match percent  80%, be s match identity  98% if no WGP tags available) for BAC ID assignment. The program 'blastn' (NCBI BLAST 2.2.29) was used to perform sequence comparison and alignment analysis in post h gap. As a result, a total of 501 h gap jobs (multiple runs for the same pool count multiple times) for 375 pools were run through post h gap in this study and produced 12 164 b acid ready sequences (including duplicates for the same BAC processed in multiple jobs or pools) for both ZS97 and MH63. All b acid ready sequences were seamlessly converted as input datasets for both GPM assemblies. Technically, the use of a one main table database schema design may simplify query processing. However, one possible disadvantage for this schema is that the response time to query might be longer with increasing amounts of data. Based upon our LIMS structure, we used the new 'container' option for less complicated data and created new tables for large datasets (e.g. clones). To date, we are able to operate GPM smoothly on a 4 12-core cluster with more than 1.7 million data records. These kinds of strategies are recommended for other users. We can provide free host services to academic projects of medium size genomes (up to 1 Gb) with full technical support. Several WGS scaffolding packages (e.g. Bambus, Mauve Aligner, abac as all maps etc.) treat assembled contig sequences as nonoverlapping and single copy sequences. Unfortunately, these packages are not focused toward the handling of inherent sequence redundancies and are not programmed to produce incremental assemblies. Further, these scaffolding tools are all file based and do not provide a flexible process for manual checking and editing, especially if the input data has been modified or updated. In contrast, GPM is a relationship based pipeline, which has the flexibility to edit and visualize assembled data, not only by showing the order and orientation of contig sequences and sequence redundancies but also by displaying the necessary guide information for easy user confirmation. One thing GPM can not do is to assemble a genome de novo from raw reads. This deficit can be compensated for by its ability to import results (sequences and a gps from other assembly programs to guide new and improved assemblies. The final quality of a GPM assembly relies heavily on the quality and richness of the guide information used. For example, if a draft genome assembly is used as the guide rather than a map based bac by bac assembly, the quality of the GPM assembly will suffer. DNA sequencing technologies and assembly programs change rapidly, and the GPM pipeline presented here is no exception. We will continue to improve the interactive functionalities of GPM, as well as integrate additional tools to support more data types. With GPM, data types are seamlessly linked and logically integrated into an encompassing LIMS for all genomic data. GPM is an open source software dynamically developed for the genomics research community and can be extensively adapted improved by different research groups for their own applications.
