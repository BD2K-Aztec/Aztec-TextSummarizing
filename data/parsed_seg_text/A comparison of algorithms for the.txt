Motivation: As biological inquiry produces ever more network data, such as protein protein interaction networks, gene regulatory networks and metabolic networks, many algorithms have been proposed for the purpose of pairwise network alignment finding a mapping from the nodes of one network to the nodes of another in such a way that the mapped nodes can be considered to correspond with respect to both their place in the network topology and their biological attributes. This technique is helpful in identifying previously undiscov-ered homologies between proteins of different species and revealing functionally similar subnetworks. In the past few years, a wealth of different aligners has been published, but few of them have been compared with one another, and no comprehensive review of these algorithms has yet appeared. Results: We present the problem of biological network alignment, provide a guide to existing alignment algorithms and comprehensively benchmark existing algorithms on both synthetic and real world biological data, finding dramatic differences between existing algorithms in the quality of the alignments they produce. Additionally, we find that many of these tools are inconvenient to use in practice, and there remains a need for easy to use cross platform tools for performing network alignment.

introduction many areas of bioinformatics now use and produce network data, including protein protein interaction (PPI) networks and gene coexpression networks, and the tools and techniques of graph theory are being brought to bear to produce new techniques for biological network analysis. Comparing two biological networks is a particularly challenging problem, as many interesting questions we might ask about these networks are computationally intractable to answer (). Here, we focus on the task of aligning two PPI networks from different species. That is, we want to find a mapping from the nodes of one network to the nodes of another, in such a way as to maximize the topological and biological similarity of the pairs of nodes that are aligned to one another. This allows for the identification of both homologous proteins as well as similar modules or pathways in the networks themselves. Successes of PPI network alignment so far include uncovering large shared subnetworks between species as diverse as Saccharomyces cerevisiae and Homo sapiens, and reconstructing phylogenetic relationships between species based solely on the amount of overlap discovered between their PPI networks (). Most papers in the literature report promising results in creating alignments that show large regions of biological and topological similarity between the PPI networks of various species. The ultimate goal of network alignment is to transfer knowledge of protein function from one species to another. Because sequence similarity metrics such as BLAST bit scores () are not conclusive evidence of similar function, the purpose of aligning two PPI networks is to supplement sequence similarity with topological information so as to identify orthologs as accurately as possible. The primary challenge in designing such an aligner is to accurately estimate the topological similarity of two nodes and to combine that with sequence similarity to produce an alignment. The aligners published so far vary widely in their approaches to doing so, and some aligners are much better at optimizing for one of these goals than the others. Furthermore, an exact solution to the network alignment problem is unattainable. The problem of global alignment is equivalent to the subgraph isomorphism problem, which is np complete (), so aligners settle for approximate solutions. The variety of approaches in use and the lack of a popular standard solution present a difficult situation for those who would simply like to compare some biological networks that they have produced in the course of their research. These algorithms differ greatly in the quality of the alignments they produce and even more greatly in their compute time. In this article, we survey and benchmark network alignment algorithms that are pairwise and global. Pairwise alignment algorithms align two graphs only. They are contrasted with multiple alignment algorithms, which try to find transitive alignments between more than two input networks at a time (). Borrowing terminology from sequence alignment, we also distinguish between global alignment algorithms, which attempt to find a single overall alignment from one network to another, and local aligners, which may output several mutually incompatible alignments for the input networks (). Local alignment is more useful when we *To whom correspondence should be addressed. desire to identify several potential orthologs per input protein, whereas global alignment is more helpful for identifying larger conserved networks that are indicative of a common ancestor. Global alignments can also be somewhat easier to interpret, as the produced mapping is one to one. Because pairwise global aligners have been much more popular in the recent literature, and because it is unclear how to compare a global algorithm with a local algorithm, or a pairwise aligner to a multiple aligner, we evaluate pairwise global aligners only. We present the problem of network alignment, overview the various approaches that have been proposed to solve the problem and evaluate the quality of the alignments produced by a wide range of different alignment algorithms from the first generation of global alignment tools to the most recently published techniques. Given the rapid pace at which new techniques are being published, many of these algorithms have never been directly compared with one another. Therefore, we include extensive comparisons and benchmarks in this article. We make use of a recently developed framework for testing alignment algorithms with synthetic PPI network data () as well as a real world PPI dataset (). We find great differences in the quality of the alignments produced by existing alignment programs.

conclusion in the last few years, many new algorithms for pairwise global network alignment have appeared, but few of them had been compared directly. By benchmarking these algorithms on synthetic and real world data, we have shed light on the relative behavior and performance of these algorithms. The results have been surprising and show that these algorithms can be have very differently on different datasets. Several algorithms perform well, but the great differences in behavior from one test to another, and the tendency for some of the existing programs to crash, makes it difficult to recommend any one aligner. Those who want to use network alignment as part of their work should try a few of the better performing algorithms found here and see how their performance compares for the particular dataset in question. We suggest SPINAL, NATALIE and pina log as good aligners to try at first; they produce their alignments quickly while giving competitive results. GHOST is also an excellent performer, but its high memory requirements, slow speed and crashes render it more difficult to use. c graal and migra al may be worthwhile in some situations, although other aligners perform better in general. All members of the GRAAL family share a bottleneck in the unpredictably slow graph let counting step, and this step also tends to crash. Because. Plot of the go c versus integrated conserved structure score for aligners with user adjustable trade-off between topological and biological similarity. We explored a range of trade-off levels for these aligners on the c elegans d melanogaster alignment problem n et al does not currently use sequence similarity in constructing alignments, its uses are more limited, but it can produce much higher ICS scores and larger connected components than other aligners on a given dataset, which may be useful in understanding the relative performance of other aligners. We can not recommend GRAAL and iso rank as they are bested by many aligners on both go c and ICS scores. This is understandable, given that most of these other aligners were benchmarked against GRAAL and iso rank when they were being designed. We have also found a number of issues that future investigators of network alignment must focus on. First and foremost, code and documentation quality must be improved for a tool to see widespread use. Many of these programs crash often, are poorly documented or run slowly. Sensitivity to noise is also an issue. Given the drastic differences in aligner performance between the noise free synthetic data and the noisy real world data, it is clear that future alignment algorithms must become even more robust to such difficulties. Last of all, we have seen that many aligners perform well at yielding either good topological or good biological matches, but few do both well. This must become a higher priority in aligner design.
