Motivation: RNA sequencing is becoming a standard for expression profiling experiments and many tools have been developed in the past few years to analyze rnase q data. Numerous Bioconductor packages are available for next generation sequencing data loading in R, e.g. short read and rs am tools as well as to perform differential gene expression analyses, e.g. de seq and edgeR. However, the processing tasks lying in between these require the precise interplay of many Bioconductor packages, e.g. bio strings i ranges or external solutions are to be sought. Results: We developed easy rnase q an R package that simplifies the processing of RNA sequencing data, hiding the complex interplay of the required packages behind a single functionality. Availability: The package is implemented in R (as of version 2.15) and is available from Bioconductor (as of version 2.10) at the

introduction since the extensive utilization of RNA sequencing for expression profiling (RNA), numerous tools have been developed, as part of the r bioconductor () project, to load rnase q data in R. The first: short read () parses manufacturer specific formats. It gave way to the rs am tools package, as the samba m format () became a de facto standard for reporting next generation sequencing (NGS) alignment data. In parallel, analysis packages were adapted ('edgeR',) or newly developed de seq to accommodate for NGS specificities. Recently, the 'Bioconductor' Core Team released several packages to connect these parts of the process: e.g. genomic ranges genomic features however, combining them appropriately requires a good understanding of their functionalities, and depending on the data, different combinations of these packages have to be used, implying a long learning curve for rnase q neophytes. In parallel to these aspects, the sequencers' yield increase resulted in the generalization of protocols that allow several samples to be run in a single lane, a process called 'multiplexing' (). De-multiplexing the obtained data is a processing step that no R package currently addresses. Here, we describe easy rnase q an R package that eases rnase q processing by combining the necessary packages in a single wrapper that ensures the pertinence of the provided data and information and helps users circumnavigate rnase q processing pitfalls. In addition, it introduces functionalities to handle data produced by recent NGS protocols.
