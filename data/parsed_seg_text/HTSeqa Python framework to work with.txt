Motivation: A large choice of tools exists for many standard tasks in the analysis of high throughput sequencing (HTS) data. However, once a project deviates from standard workflows, custom scripts are needed. Results: We present ht seq a Python library to facilitate the rapid development of such scripts. ht seq offers parsers for many common data formats in HTS projects, as well as classes to represent data, such as genomic coordinates, sequences, sequencing reads, alignments, gene model information and variant calls, and provides data structures that allow for querying via genomic coordinates. We also present ht seq count a tool developed with ht seq that pre processes rnase q data for differential expression analysis by counting the overlap of reads with genes.

introduction the rapid technological advance in high throughput sequencing (HTS) has led to the development of many new kinds of assays, each of which requires the development of a suitable bioinformatic al analysis pipeline. For the recurring 'big tasks' in a typical pipeline, such as alignment and assembly, the bioinformatics practitioner can choose from a range of standard tools. For more specialized tasks, and to interface between existing tools, customized scripts often need to be written. Here we present ht seq a Python library to facilitate the rapid development of scripts for processing and analysing HTS data. ht seq includes parsers for common file formats for a variety of types of input data and is suitable as a general platform for a diverse range of tasks. A core component of ht seq is a container class that simplifies working with data associated with genomic coordinates, i.e. values attributed to genomic positions (e.g. read coverage) or to genomic intervals (e.g. genomic features such as exons or genes). Two stand-alone applications developed with ht seq are distributed with the package, namely ht seq qa for read quality assessment and ht seq count for preprocessing rnase q alignments for differential expression calling. Most of the features described in the following sections have been available since the initial release of the ht seq package in 2010. Since then, the package and especially the ht seq count script have found considerable use in the research community. The present article provides a description of the package and also reports on recent improvements. ht seq comes with extensive documentation, including a tutorial that demonstrates the use of the core classes of ht seq and discusses several important use cases in detail. The documentation, as well as ht seqs design, is geared towards allowing users with only moderate Python knowledge to create their own scripts, while shielding more advanced internals from the user.
