bioinformatic ians are tackling increasingly computation intensive tasks. In the meantime, workstations are shifting towards multi-core architectures and even massively multi-core may be the norm soon. bag of tasks (BoT) applications are commonly encountered in bioinformatics. They consist of a large number of independent computation intensive tasks. This note introduces PAR, a scalable, dynamic, parallel and distributed execution engine for bag of tasks. PAR is aimed at multi-core architectures and small clusters. Accelerations obtained thanks to PAR on two different applications are shown. Availability: PAR is released under the GNU General Public License version three and can be freely downloaded (http://download. savannah gnu org releases par part gz
introduction bioinformatic ians are significant high performance computing users, in particular for simulations of biologic phenomena. On the other hand, the available hardware is not only getting faster but also much more parallelized (Intel publicly reported working on 80 cores prototype chips in 2007). In this context, most bioinformatic ians could benefit from an easy to use software to harness such computing power. The focus of this note is bag of tasks (BoT) applications execution. As the name suggests, BoT applications can be seen as a bag, filled with tasks to do, each being independent from all the others. A middle-ware for BoT applications is called a job crusher. It has to consist of at least a server component connected to a set of clients. This note introduces PAR, a parallel and distributed job crusher working in pull mode and inspired by desktop grid platforms. Workers join the computation and can be added dynamically at run-time; the server delivers tasks to workers available at a given moment. PAR is actually a transposition of some concepts and features from previous distributed middle-ware to small HPC clusters and multi-core workstations. This article is organized as follows: Section 2 presents an overview of related projects and technologies used in bioinformatics. Section 3 presents two examples using PAR to illustrate scalability. The last section lists upcoming enhancements. * To whom correspondence should be addressed.
