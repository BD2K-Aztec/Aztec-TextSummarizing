With decreasing costs of generating DNA sequence data, genome and meta genome projects have become accessible to a wider scientific community. However, to extract meaningful information and visualize the data remain challenging. We here introduce far ao a highly scalable software for organization, visualization and integration of annotation and read coverage data that can also combine output data from several bioinformatics tools. The capabilities of far ao can greatly aid analyses of genomic and meta genomic datasets. Availability and Implementation: far ao is implemented in Perl and is supported under unix like operative systems, including Linux and macOS. The Perl source code is freely available for down-load under the MIT License from

introduction rapid advancements in DNA sequencing technology have quickly shifted the bottleneck for biological knowledge generation from restricted availability of sequence data to limited ability to analyze and mine the datasets generated (). Thus, the analysis of nucleotide sequences from recent genomics projects requires tools that can not only handle massive amounts of sequence data, but can also filter it and present the most relevant information to the user in an efficient manner. In this process, visualization of DNA sequence data and its associated annotations is key. However, annotations are often generated using a range of tools and databases, each with its own output formats and restrictions (). Hence the ability to combine annotations from different sources is instrumental to form a complete picture of the sequences under scrutiny. Furthermore, with the advent of shotgun meta genomics which can produce highly fragmented assemblies with thousands or even millions of contigs from a single sample(), scalability becomes an important issue to consider. meta genomics and RNA sequencing also introduce the ability to quantify the abundance of contigs and features in the data based on read coverage, which therefore also becomes an important part to incorporate in analysis and visualization frameworks. A multitude of tools for visualization of annotated sequence features exist, but most of them either can not integrate annotation and read coverage data (e.g.), focus mainly on visualizing coverage information (), lack scalability beyond a few hundred sequences (), can not efficiently filter the data to the needs of the user (), or pose restrictions on what tools and file formats that can be used for input of annotated features and or coverage information (). There also exist a range of web based tools that can visualize high throughput data, generally connected to automated pipelines for sequence annotation (e.g.). However, none of these tools present a scalable, multi-purpose framework for integrating annotation and coverage information from several different database sources into a database that can be queried at the request of the user. Consequently, there is a need for highly flexible and adaptable software tools that can bridge disparate annotation and quantification approaches. Such a toolkit should be agnostic to what kind of bioinformatic tools that have been used to annotate sequences, and must be able to adapt to novel annotation utilities as they are introduced, for example by providing extension modules to the software that can be tapped into by users skilled in programming. Given the challenges associated with filtering the data, the software needs to be able to process it in a way that is scalable up to millions of sequences with hundreds of features each. Finally, it is desirable if the software is able to produce publication quality visual output that can be further processed by users recently introduced a web server tool with many of these capabilities, which, however, requires the user to upload the sequence and annotation data. This might be prohibitive for users with limited Internet connection, and while web based tools are convenient for many users, they do not lend themselves to integration with Unix and or Linux based workflows, which typically rely on command line tools. With these limitations in mind, we have developed far ao  the Flexible all round Annotation Organizer  that functions as a highly configurable set of command line tools that: (i) integrate annotation and coverage information for the same sequence set; (ii) are scalable to millions of sequences and features; (iii) can filter out sequences with annotations satisfying criteria given by the user; (iv) can handle annotations produced by a range of bioinformatics tools; and (v) provide a flexible interface for writing custom parsers for virtually any format not supported out of the box.
