Current web based genome browsers require repetitious user input to scroll over long distances, alter the drawing density of elements or zoom through multiple orders of magnitude. Generally, either the server or the client is responsible for the majority of data processing, resulting in either servers having to receive and handle data relevant only to one user, or clients redundantly processing widely viewed data. chromo zoom pre renders and caches general use tracks into tiled images on the server and serves them in an interactive web interface with inertial scrolling and precise, fluent zooming via the mouse wheel or trackpad. Custom tracks in several formats can be rendered by client side code alongside the pre rendered tracks, minimizing server load because of user specific rendering and eliminating the need to transmit private data. chromo zoom thereby enables rapid and simultaneous exploration of curated, experimental and personal genomic datasets. Availability: Human and yeast genome researchers may browse recent assemblies within chromo zoom at

introduction genome browsers have become an essential tool for experimental and computational biologists. Among well known web based browsers, the UCSC Genome Browser has gained popularity for its ready availability, comprehensive library of genomes and curated data and the ability to display custom data uploaded by researchers (). Overlaying experimental data (e.g. sequence variation) onto curated tracks (e.g. gene predictions) allows for the formulation and verification of biological hypotheses. Researchers unfamiliar with a newly encountered locus can inspect it within a genome browser to determine the gene layout or potential regulatory elements and design polymerase chain reaction or other experiments. Although many researchers have become familiar with the UCSC browser and others like GBrowse (), Ensembl () and the NCBI Map Viewer (), these tools originated before the advent of modern web interfaces that use less page transitions and more data dynamically loaded using Asynchronous JavaScript and extensible mark-up language (AJAX) and HTML5 techniques. Some have attempted to incorporate aspects of the 'rich internet application' experience into their interfaces for example, each of the aforementioned browsers now allow the user to drag the track to move the current view but none had a user interface allowing smooth navigation equivalent to Google Maps, for example, animated transitions while zooming and the absence of loading interruptions throughout all navigational operations. In response, next generation browsers like an no j (http:// www an no jorg j browse () and a browse () have been built to take advantage of modern web technologies, adding more seamless interactions that preserve the user's sense of location while traversing the massive 'landscape' of a genome. an no j and j browse render most genomic data on the browser side the former drawing pixels on HTML5 Canvas elements and the latter manipulating standard HTML elements. However, both require preprocessing of custom data by an administrator before it can be rendered within the browser; neither accept flat files via the web interface in the manner of the UCSC browser. a browse renders all data to tiled images, but can not zoom smoothly and requires custom data to be fully uploaded to the server which can be prohibitive for large datasets. Finally, none of the browsers features inertial scrolling, a feature popularized by iOS and Google Maps whereby a scrollable surface can be 'thrown' with a finger or the cursor to move across long distances.
