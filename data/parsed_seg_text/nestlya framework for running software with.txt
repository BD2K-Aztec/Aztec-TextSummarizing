The execution of a software application or pipeline using various combinations of parameters and inputs is a common task in bioinformatics. In the absence of a specialized tool to organize, streamline and formalize this process, scientists must write frequently complex scripts to perform these tasks. We present nest ly a Python package to facilitate running tools with nested combinations of parameters and inputs. nest ly provides three components. First, a module to build nested directory structures corresponding to choices of parameters. Second, the nest run script to run a given command using each set of parameter choices. Third, the ne stagg script to aggregate results of the individual runs into a CSV file, as well as support for more complex aggregation. We also include a module for easily specifying nested dependencies for the SCons build tool, enabling incremental builds. Availability: Source, documentation and tutorial examples are available at http://github.com/fhcrc/nestly. nest ly can be installed from the Python Package Index via pip; it is open source (MIT license).

introduction many types of bioinformatics analyses involve running software or pipelines with a combination of a number of different parameters and inputs. For example, one may want to use an established algorithm such as BLAST with many combinations of different parameters, or benchmark the accuracy and speed of a new algorithm for all possible settings for a number of parameters. While a number of tools are available for streamlining bioinformatics pipelines (; koster koster and), these tools emphasize running a dataset through a workflow with a static parameter regime. The task of running software with a variety of settings typically involves enumeration of parameters, execution of a command for each combination and aggregation of results. Despite the ubiquity of this sort of task in bioinformatics, we are only aware of software packages that address it for specific bioinformatics problems (). The most common solution is to write a custom script to perform the tasks, which presents difficulties: isolating execution, running commands in parallel and merging results with associated parameters can be non-trivial. Managing these tasks in one off code creates additional work for researchers, introduces potential for error and hinders reproducibility. We have designed a Python software package, nest ly the purpose of which is to streamline and automate these operations.

conclusion nest ly is a simple yet powerful framework for running software with combinatorial choices of parameters and aggregating results of those runs. It has complete documentation and a suite of examples.
