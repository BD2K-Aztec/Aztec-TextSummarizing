Motivation: The development of computational tools to enable testing and analysis of high throughput sequencing data is essential to modern genomics research. However, although multiple frameworks have been developed to facilitate access to these tools, comparatively little effort has been made at implementing low level programming libraries to increase the speed and ease of their development. Results: We propose NGSþþ, a programming library in Cþþ11 specialized in manipulating both next generation sequencing (NGS) data-sets and genomic information files. This library allows easy integration of new formats and rapid prototyping of new functionalities with a focus on the analysis of genomic regions and features. It offers a powerful, yet versatile and easily extensible interface to read, write and manipulate multiple genomic file formats. By standardizing the internal data structures and presenting a common interface to the data parser, NGSþþ offers an effective framework for epi genomics tool development. Availability: NGSþþ was written in Cþþ using the Cþþ11 standard. It requires minimal efforts to build and is well documented via a complete doc xy gen guide, online documentation and tutorials. Source code, tests, code examples and documentation are available via the website at http://www.ngsplusplus.ca and the git hub repository at https://github.com/NGS-lib/NGSplusplus.

introduction previous years have witnessed an explosion in the amount of data produced using next generation sequencing (NGS) technologies, as exemplified by the ENCODE project (ENCODE Project). However, analysis of these enormous datasets (easily 4100 GB) requires the use of a new generation of computational tools. As the quantity of data produced by NGS machines increases, so will the time spent on developing new tools. Although substantial efforts have been made at integrating them into user friendly frameworks such as Galaxy () or gene space (Genome Space), relatively little effort has gone into providing the groundwork needed to increase the productivity of NGS developers, such as libraries and using standardized formats. Improvement in these areas would allow developers to greatly accelerate the speed at which they design and deploy new analysis software. Although certain tool suites, such as bed tools () and bam tools (), offer a library or API to assist developers, these are generally aimed at giving access to the existing tool functionality rather than facilitating development of new ones. As such they are highly specialized. The seq an library () offers functionality for the developmental of future tools, but it specializes in sequence analysis rather than genomic regions and features. Our proposed library, NGS, aims to fill this gap by offering a powerful set of generic and flexible options to accelerate development and prototyping of epi genomics analysis tools.

conclusion progress in the development of advanced bioinformatics analysis tools has undoubtedly been hindered by the lack of available programming frameworks. Our library aims to assist in filling this gap for the community of C epi genomic developers by giving them access to robust building blocks, thus reducing the time spent on development significantly. Our efforts are now focused on including additional genomic formats and on increasing the breath of our tutorials. Future developments will include the integration of mid-level reusable functions, such as similarity functions and normalization methods. The website provides a list of tutorials and commented working code examples, to assist developers in getting started with the library. Finally, the parsing interface then filtered as needed. user defined functions are executed via our operators, and the transformed data are stored via our Writer interface
