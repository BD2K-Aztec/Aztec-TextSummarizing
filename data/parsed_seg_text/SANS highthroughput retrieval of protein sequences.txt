Motivation: The genomic era in molecular biology has brought on a rapidly widening gap between the amount of sequence data and first hand experimental characterization of proteins. Fortunately, the theory of evolution provides a simple solution: functional and structural information can be transferred between homologous proteins. Sequence similarity searching followed by k nearest neighbor classification is the most widely used tool to predict the function or structure of anonymous gene products that come out of genome sequencing projects. Results: We present a novel word filter, suffix array neighborhood search (SANS), to identify protein sequence similarities in the range of 50â€“100% identity with sensitivity comparable to BLAST and 10 times the speed of u search. In contrast to these previous approaches, the complexity of the search is proportional only to the length of the query sequence and independent of database size, enabling fast searching and functional annotation into the future despite rapidly expanding databases. Availability and implementation: The software is freely available to non-commercial users from our website http://ekhidna.biocenter. helsinki fi downloads sans. Contact: liisa holm helsinki fi
introduction k nearest neighbor classifiers are used widely and successfully to infer the function of newly sequenced proteins. Neighbors are commonly determined by sequence comparison. Protein sequence databases have grown so large that retrieving the neighbors of a query sequence is prohibitive in the exact mode and takes 12 min using popular heuristics. With several thousand proteins in each new genome, 'blasting' consumes considerable resources in contemporary bioinformatics research. Strategies for database searching fall into five categories: 1. All versus all pairwise comparisons using exact alignment [e.g. s search (or generating fast approximate alignments [e.g. fast a (. 2. Comparison against a representative subset rather than all proteins (e.g.;3. Comparison against a library of profile models of protein families (e.g.). * To whom correspondence should be addressed the speed of the methods increases toward the bottom of the list. u search is orders of magnitude faster than BLAST, and we report here a novel method which is 10 times faster than u search. The fast methods are based on word filters. Conserved amino acids are often 'clumped' in homologous protein sequences so that there is a good probability of finding identical km ers (). Many practical tools combine word filters with explicit alignment of a filtered subset of the database (). Very short words obviously occur by chance in unrelated sequences. Unique occurrences are expected when 20 k is greater than the size of the database, k being the length of the word. On the other hand, the sensitivity of a word filter decreases with longer words. Spaced kl seeds are a special class of word filters with length l and the selectivity of a km er (). We show experimentally that k = 6 is the sweet spot with respect to the current Uniprot database and that sensitivity selectivity drop either side of this value. The choice of k is thus critical for the performance of a word filter. In this work, we test a novel idea which dynamically adjusts word size. It is based on suffixes (substrings starting at position I in a sequence and continuing to the terminator). A suffix array is a data structure which orders the suffixes of a text (protein sequence database) in lexicographic order. Neighboring suffixes share the longest common prefixes. The suffix array is a one dimensional representation of sequence space. Our idea is to select a window around a query suffix from the suffix array to identify neighbors. The suffix array neighborhood has a constant size. In contrast, neighborhoods defined in terms of km er word vectors grow larger as the database grows larger. Suffix arrays are used a lot in the analysis of nucleotide sequences (short read mapping, contig assembly, genome alignment, EST clustering) (e.g.). The analysis of protein sequences differs from that of nucleotide sequences in that the range of interesting similarities extends to much higher levels of mismatches. Suffix trees arrays and related indices have been used previously to organize (), search () and align () protein sequences, but they have not supplanted popular tools like BLAST. This article is organized as follows. We present comprehensive benchmark tests using real world data from meta genome samples (6 million proteins), a bacterial genome (4000 proteins) and the uniprot database (18 million proteins). We compare BLAST, u search and many variants of word filters. We characterize. A classification of approaches used by representative application programs for protein sequence retrieval. This work focuses on word filters based on suffix arrays or km er counting. Related approaches or data structures are shown in gray and not expanded. SANS is simple and fast but has a limited application range. Other fast programs calculate explicit alignments for a filtered subset of database proteins. s search calculates the optimal alignment between the query and all database proteins the feasible regime for word filters and report the fastest known mapping tool for proteins. Finally, we discuss potential applications in function inference ().
