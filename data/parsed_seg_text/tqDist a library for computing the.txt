tq dist is a software package for computing the triplet and quartet distances between general rooted or unrooted trees, respectively. The program is based on algorithms with running time Oðn log nÞ for the triplet distance calculation and Oðd Á n log nÞ for the quartet distance calculation, where n is the number of leaves in the trees and d is the degree of the tree with minimum degree. These are currently the fastest algorithms both in theory and in practice. Availability and implementation: tq dist can be installed on Windows, Linux and Mac OS X. Doing this will install a set of command line tools together with a Python module and an R package for scripting in Python or R. The software package is freely available under the GNU LGPL licence at http://birc.au.dk/software/tqDist.

introduction using trees to represent evolutionary relationships is a widespread technique in many scientific fields, in particular in biology, where trees are used to represent relationships between species or between genes in a gene family (). But trees are also used, for example, in linguistics, where trees may be used to describe the evolution of related languages (), and in archaeology, where trees have been used to represent how copies of ancient manuscripts have changed over time (). A common goal in all of these fields is to reconstruct the true tree from observed data. However, depending on both the available data and the reconstruction method, the inferred trees may differ. In such cases, tree distances are often used as a formal way to quantify the differences and to determine whether two trees are more similar than would be expected by chance. The triplet distance [introduced as the triples distance in] and quartet distance () enumerate all subsets of leaves of size three and four, respectively, and count how often the topologies induced by the three or four leaves agree in the two trees. The triplet distance is intended for rooted trees, where the triplet topology is the smallest informative subtree (for unrooted trees all subtrees with three leaves have the same topology), whereas the quartet distance is intended for unrooted trees, where the quartet topology is the smallest informative subtree. The fastest known algorithms for computing the triplet and quartet distances have time complexity On log n for both distances on binary trees with n leaves and complexity On log n for the triplet distance and Od  n log n for the quartet distance on general trees, where d is the minimum degree of the two trees, and the degree of a tree is the maximum degree of a node in the tree (). In this applications note, we present an efficient and easy to use implementation of these algorithms and show that this is the fastest implementation available for computing the triplet and quartet distances. A detailed description of the algorithms and their implementation is given in
