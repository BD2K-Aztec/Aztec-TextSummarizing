Motivation: The burrows wheeler transform (BWT) is the foundation of many algorithms for compression and indexing of text data, but the cost of computing the BWT of very large string collections has prevented these techniques from being widely applied to the large sets of sequences often encountered as the outcome of DNA sequencing experiments. In previous work, we presented a novel algorithm that allows the BWT of human genome scale data to be computed on very moderate hardware, thus enabling us to investigate the BWT as a tool for the compression of such datasets. Results: We first used simulated reads to explore the relationship between the level of compression and the error rate, the length of the reads and the level of sampling of the underlying genome and compare choices of second stage compression algorithm. We demonstrate that compression may be greatly improved by a particular reordering of the sequences in the collection and give a novel implicit sorting strategy that enables these benefits to be realized without the overhead of sorting the reads. With these techniques, a 45Ã— coverage of real human genome sequence data compresses lossless ly to under 0.5 bits per base, allowing the 135.3 Gb of sequence to fit into only 8.2 GB of space (trimming a small proportion of low quality bases from the reads improves the compression still further). This is 4 times smaller than the size achieved by a standard bwt based compressor (bzip2) on the untrimmed reads, but an important further advantage of our approach is that it facilitates the building of compressed full text indexes such as the fm index on large scale DNA sequence collections. Availability: Code to construct the BWT and sap array on large genomic datasets is part of the be etl library, available as a git hub repository at https://github.com/BEETL/BEETL.

introduction in this article, we present strategies for the lossless compression of the large number of short DNA sequences that comprise the raw data of a typical sequencing experiment. Much of the early work on the compression of DNA sequences was motivated by the notion that the compressibility of a DNA sequence could serve as a measure of its information content and * To whom correspondence should be addressed. hence as a tool for sequence analysis. This concept was applied to topics such as feature detection in genomes () and alignment free methods of sequence comparison ()a comprehensive review of the field up to 2009 is given by. However, Grumbach and Tahi in 1994 have been echoed by many subsequent authors in citing the exponential growth in the size of nucleotide sequence databases as a reason to be interested in compression for its own sake. The recent and rapid evolution of DNA sequencing technology has given the topic more practical relevance than ever. The outcome of a sequencing experiment typically comprises a large number of short sequences often called reads plus metadata associated with each read and a 'quality score' that estimates the confidence of each base and de or owi cz and Grabowski (2011) both describe methods for compressing the fast q file format in which such data are often stored. The metadata is usually highly redundant, whereas the quality scores can be hard to compress, and these two factors combine to make it hard to estimate the degree of compression achieved for the sequences themselves. However, both schemes employ judicious combinations of standard text compression methods such as Huffman and lempel ziv with which it is hard to improve substantially upon the naive method of using a different 2-bit code for each of the four nucleotide bases. For example, gen compress () obtains 1.92 bits per base (henceforth bpb) compression on the Escherichia coli genome. An experimenter wishing to sequence a diploid genome such as a human might aim for 20-fold average coverage or more, with the intention of ensuring a high probability of capturing both alleles of any heterozygous variation. This oversampling creates an opportunity for compression that is additional to any redundancy inherent in the sample being sequenced. However, in a whole genome shotgun experiment, the multiple copies of each locus are randomly dispersed among the many millions of reads in the dataset, making this redundancy inaccessible to any compression method that relies on comparison with a small buffer of recently seen data. This can be addressed by reference based compression (), which saves space by sorting aligned reads by the position they align to on a reference sequence and expressing their sequences as compact encodings of the differences between the reads and the reference. However, this is fundamentally a lossy strategy that achieves best compression by retaining only reads that closely match the reference, limiting the scope for future reanalyses such as realignment to a refined reference

discussion analyzing the SRX001540 dataset allowed us to compare our results with ReCoil, but the reads are noisier and shorter than more recent datasets and, at under 3, the oversampling of the genome is too
