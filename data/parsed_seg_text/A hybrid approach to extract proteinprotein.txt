Motivation: protein protein interactions pp is play an important role in understanding biological processes. Although recent research in text mining has achieved a significant progress in automatic PPI extraction from literature, performance of existing systems still needs to be improved. Results: In this study, we propose a novel algorithm for extracting pp is from literature which consists of two phases. First, we automatically categorize the data into subsets based on its semantic properties and extract candidate PPI pairs from these subsets. Second, we apply support vector machines (SVMs) to classify candidate PPI pairs using features specific for each subset. We obtain promising results on five benchmark datasets: AIMed, bio infer HPRD50, IEPA and LLL with f scores ranging from 60% to 84%, which are comparable with the state of the art PPI extraction systems. Furthermore, our system achieves the best performance on cross corpora evaluation and comparative performance in terms of computational efficiency. Availability: The source code and scripts used in this article are available for academic use at

introduction extraction of protein protein interactions pp is from literature is an important research topic in the field of biomedical natural language processing (NLP;). Numerous pp is have been manually curated and stored into databases, such as BIND, hd pr and IntAct. However, this task has been proven time and resource consuming. As a consequence, most data on pp is can only be found in literature (). Several approaches for extracting pp is from biomedical text have been reported. These methods range from co occurrence to more sophisticated machine learning (ML) systems augmented by NLP techniques. co occurrence is the simplest approach, which results in high recall but low precision. rule or pattern based approaches can increase precision but significantly lower recall. In addition, these rule sets are derived from training data and are therefore not always applicable to other data they are not developed for (). * To whom correspondence should be addressed recently many ml based methods have employed NLP techniques such as shallow parsing or full parsing (). Since full parsing produces more elaborate syntactic information than shallow parsing, PPI extraction systems based on full parsing can potentially yield better results (). The output of the parser can be represented either as constituent trees or dependency trees. In this case, the PPI extraction task is treated as a binary classification problem which requires a formal protein pair representation and a suitable ML method. A protein pair (an instance) can be represented by a set of features, which are derived from the sentence or its syntactic structure. A ML method is then used to distinguish between positive and negative instances (). Many linguistic features and ML methods have been proposed for the PPI extraction task. Based on feature types, these approaches can be divided into three groups. The first group focuses on lexical and word context features designed a subsequence kernel which uses the following information in a sentence: before the first protein, between two proteins and after the second protein, and combined these features to obtain patterns extended this approach by using a bag of words (BOWs) and adding a local context kernel. The second group exploits syntactic features of a sentence used various syntactic path features and context features related to words before, between and after two interacting entities proposed a method based on information found in the predefined levels of the dependency trees, such as local dependency contexts of the protein names and tree's roots enhanced previous work by proposing a walk kernel which explores the shortest dependency path between two proteins and a modified dependency tree with the parts of speech (POS) features. As an alternative to previous approaches introduced an all paths graph kernel. They represented a sentence with a dependency graph and considered dependencies connecting two entities outside the shortest path as well as on the shortest path. Along with the proposed methods also studied individual impact of a variety of feature types on the PPI extraction task. In addition, a study of has shown that the accuracy of syntactic parsers also contributes to the overall performance of the PPI systems. To compensate for the limitations of each individual feature set and parser errors proposed a method that combines all the lexical and parsing features using multiple kernels and parsers. Their system achieved the state of the art performance on a number of benchmark datasets. However,
