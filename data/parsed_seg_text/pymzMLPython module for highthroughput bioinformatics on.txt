pym z ml is an extension to Python that offers (i) an easy access to mass spectrometry (MS) data that allows the rapid development of tools, (ii) a very fast parser for mzm l data, the standard data format in MS and (iii) a set of functions to compare or handle spectra. Availability and implementation: pym z ml requires python 265 and is fully compatible with python 3. The module is freely available on http://pymzml.github.com or pypi, is published under LGPL license and requires no additional modules to be installed.

introduction mass spectrometry (MS) has evolved into a very diverse field that relies heavily on high throughput bioinformatic tools. Due to the increasing complexity of the questions asked and biological problems addressed, standard tools might not be sufficient and tailored tools still have to be developed. For this a rapid development cycle and efficient data handling are required. The development of such tools has been hindered by proprietary data formats. To overcome this problem there are currently two approaches to develop a universal access to MS: (i) the mz api () project seeks to develop a direct interface to raw proprietary data and (ii) mzm l standard by the HUPO Proteomics Standards Initiative () that allows to convert the raw data into a standardized xml format. In order to rapidly develop bioinformatic tools that can explore MS data one needs a portable, robust, yet quick interface. pym z ml is such an interface to mzm l files based on the Python scripting language, which is very suitable for such a task. Scripting languages have several advantages compared with compiled programs and although compiled programs tend to run faster, scripting languages can already compete successfully in some tasks. For example, XML parsing is extremely optimized in Python due to the c elementtree module, which allows XML parsing in a fraction of time compared to classical C/C++ XML libraries, such as libxml2 or sgml op. Therefore, it seems natural that a well designed * To whom correspondence should be addressed.  The authors wish it to known that, in their opinion, the first two authors should be regarded as joint First authors python mzm l parser can be competitive while additionally offering the advantages of a scripting language.

discussion pym z ml is an object oriented Python module that offers an interface between the mzm l file format and the Python interpreter. The scripting approach, i.e. using pym z ml in combination with Python brings several distinct advantages over compiled languages. Scripts that analyze mzm l data can be written with a few lines of code in a short time, i.e. fast prototyping is possible. The scripts are very portable, i.e. executable on every platform that supports Python. The source code is readable and no additional compiling or other libraries are required. The scripting approach also allows to dig into a vast amount of third party packages that can be integrated seamlessly. Another unmatched advantage is that pym z ml scripts can be wrapped with an additional 100 lines accessing the Python multiprocessing module to take full advantage of multiprocessor systems, thereby reducing the execution time to a fraction of time. This advantage is even less matched using the C or C++ libraries. Given all these advantages, pym z ml is the optimal tool to develop high throughput programs scripts that analyze MS data.
