Motivation: In recent years, Markov clustering (MCL) has emerged as an effective algorithm for clustering biological networks for instance clustering protein protein interaction (PPI) networks to identify functional modules. However, a limitation of MCL and its variants (e.g. regularized MCL) is that it only supports hard clustering often leading to an impedance mismatch given that there is often a significant overlap of proteins across functional modules. Results: In this article, we seek to redress this limitation. We propose a soft variation of Regularized MCL r mcl based on the idea of iteratively re executing r mcl while ensuring that multiple executions do not always converge to the same clustering result thus allowing for highly overlapped clusters. The resulting algorithm, denoted soft regularized Markov clustering, is shown to outperform a range of extant state of the art approaches in terms of accuracy of identifying functional modules on three real PPI networks.

introduction advances in technology have enabled scientists to determine, identify and validate pairwise protein interactions through a range of experimental approaches. Recently, several high throughput approaches have produced a large scale of protein protein interaction (PPI) datasets. These approaches include yeast two hybrid protein co-immunoprecipitation followed by mass spectrometry (MS), protein chip technologies and tandem affinity purification (TAP) with MS. Such data have led researchers to discover protein functions through PPI networks, in which a node represents a protein and an edge mimics an interaction between two proteins. A fundamental goal here is to discover functional modules or protein complexes in order to predict the function of unannotated proteins. The fundamental concept of identifying functional modules is that a pair of proteins interacting with each other has higher probability of sharing the same function than two proteins not interacting with each other. The dense sub-networks in a PPI network can therefore be identified as functional modules. Thus, identifying functional modules is similar to detecting communities (clusters) in a network (graph). However, traditional community detection algorithms are usually 'hard' clustering algorithms, i.e. they produces non overlapped clusters, whereas functional modules are highly 'overlapped' (). As a result, a number of * To whom correspondence should be addressed. 'soft' clustering algorithms have been recently proposed to identify functional modules in a PPI network, and they can be grouped into three categories. The first category includes algorithms such as Peacock (), hub duplication () and dec aff (). These algorithms identify the bridge nodes at the beginning, i.e. nodes belong to multiple clusters, and then either duplicate or remove the bridge nodes from the network. A hard clustering algorithm is then applied on the modified network. The problem with this approach is that only the identified bridge nodes can belong to multiple clusters, and it is conflicted with the literature () that a large fraction of proteins belong to multiple functional modules. For example, in the yeast network in bio grid database (), there are 3085 proteins annotated by low level Gene Ontology (GO) terms, whose information content (see Sec 4.1) is higher than 2.5, and 2392 of 3085 proteins are annotated by at least two of these GO terms. Algorithms in the second category adopt line graph transformation. These algorithms () first transform the input network into a line graph, in which a node represents an edge in the original network. Then, a hard clustering algorithm is applied on the line graph, so edges are clustered instead of nodes. A node in the original network belongs to multiple clusters if its incident edges are clustered into different clusters. It has been pointed out in the literature () that clustering edges has a similar issue as clustering nodes: a 'bridge edge' that connects nodes of different clusters can only be clustered into one cluster by the line graph technique. Furthermore, while functional modules are so highly overlapped that an interaction might belong to multiple modules, these algorithms can not successfully identify all overlapped functional modules. Algorithms in the third category aim to find local dense subnetworks instead of globally clustering a graph. Each node forms a singleton cluster at the beginning, and then each cluster iteratively adds a neighbor node according to different criteria. Algorithms in this category include m code (), c finder (), dp clus (), IPCA (), MoNet (), CORE (), COACH (), DME (), RRW (), n we (), spic i (), HUNTER () and hcp in (). Although the resulting clusters could be highly overlapped, one main drawback of those algorithms is that the criterion for adding a node usually considers relatively local topology. Given that PPI networks are estimated to be quite noisy (), these algorithms could add several nodes connected by noisy edges.
