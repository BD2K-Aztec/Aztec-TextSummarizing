We developed the graphical user interface py fda p for the fitting of linear and non-linear decay functions to data from fluorescence decay after photo conversion fda p experiments. py fda p structures and analyses large fda p datasets and features multiple fitting and plotting options. Availability and implementation: py fda p was written in Python and runs on Ubuntu Linux, Mac OS X and Microsoft Windows operating systems. The software, a user guide and a test fda p data-set are freely available for download from http://people.

introduction fluorescence microscopy techniques have been widely used to measure the properties of fluorescently labeled proteins in embryos, tissues and cells (). Over the last decade, the repertoire of fluorescent proteins has been extended with the discovery and engineering of photo convertible proteins that change their emission properties upon light exposure and that can be used to track sub-populations of pulse labeled proteins (). photo convertible proteins have recently been adapted to determine protein stability via microscopy based fluorescence decay after photo conversion fda p assays. In fda p assays, a protein of interest is tagged with a photo convertible protein and expressed in vivo. After photo conversion the decay in fluorescence intensity of the protein is monitored. The data is then fitted with a decay function that models protein clearance to calculate protein half lives. Protein stability is context dependent. For example, protein stability might be different inside cells and in the extracellular space (). Both intra and extracellular protein half lives can be determined by fda p using a static intracellular signal to create masks for intra and extracellular intensities (). We have previously described how to execute fda p experiments in living zebrafish embryos (). Here, we provide a standardized computational framework to analyse the resulting datasets. Our software py fda p features (i) a comprehensive data format for handling, sorting and annotating large fda p datasets, (ii) the ability to separate fda p datasets into their intra and extracellular components based on counter labeling (iii) established fitting algorithms and (iv) a user friendly environment that allows researchers from a non computational background to easily evaluate fda p datasets.

conclusion py fda p is an open source GUI for the analysis and handling of fda p data. Usage of py fda p does not require any programming knowledge. The straightforward GUI provides a quick workflow, and the integrated terminal and open source nature of py fda p enable researchers to extend the software to suit their needs.
