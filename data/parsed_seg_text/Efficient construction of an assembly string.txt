Motivation: Sequence assembly is a difficult problem whose importance has grown again recently as the cost of sequencing has dramatically dropped. Most new sequence assembly software has started by building a de Bruijn graph, avoiding the overlap based methods used previously because of the computational cost and complexity of these with very large numbers of short reads. Here, we show how to use suffix array based methods that have formed the basis of recent very fast sequence mapping algorithms to find overlaps and generate assembly string graphs asymptotically faster than previously described algorithms. Results: Standard overlap assembly methods have time complexity O(N 2), where N is the sum of the lengths of the reads. We use the ferra gina manzini index fm index derived from the Burrows– Wheeler transform to find overlaps of length at least τ among a set of reads. As well as an approach that finds all overlaps then implements transitive reduction to produce a string graph, we show how to output directly only the irreducible overlaps, significantly shrinking memory requirements and reducing compute time to O(N), independent of depth. overlap based assembly methods naturally handle mixed length read sets, including capillary reads or long reads promised by the third generation sequencing technologies. The algorithms we present here pave the way for overlap based assembly approaches to be developed that scale to whole vertebrate genome de novo assembly.

introduction the sequence assembly problem is one of the most important and difficult problems in bioinformatics. Most genomes, particularly eukaryotic genomes, are highly repetitive that complicates their assembly by obscuring true relationships between reads with many false options. To help disambiguate the true relationships between the reads from those induced by different copies of repeats, it is useful to construct a graph where all the copies of a repeat are collapsed into a single segment. Such a graph is commonly referred to as a repeat graph. This structure is a natural consequence of the de Bruijn graph method of sequence assembly as the deconstruction of the sequence reads into km ers (short subsequences of the reads of length k) collapses repeats that share the same km er into a single vertex (). An alternative formulation was proposed by Gene Myers and is called the string graph (). The string graph is built by first constructing a graph of the pairwise overlaps between sequence reads and transforming it into a string graph by removing transitive edges. The string graph shares with the de Bruijn graph the property that repeats are * To whom correspondence should be addressed. collapsed to a single unit without the need to first deconstruct the reads into km ers. Because it is based on maximal overlaps, which are typically longer than de Bruijn km ers it also disambiguate s shorter repeats that de Bruijn methods would only resolve in later processing steps (if at all). The string graph is much more expensive to construct, however, as the set of all pairwise, in exact overlaps between sequence reads must be found. For this reason, the majority of assemblers of short read sequence data have been based on the de Bruijn approach (). A notable exception is the eden a assembler () that uses a suffix array to compute exact overlaps between reads that are then used to construct the string graph. We address the construction of a string graph with a related approach by indexing the set of sequence reads using the burrows wheeler transform bwt ferra gina manzini fm index which has recently been used for the short read alignment problem (). We show how to efficiently compute the set of overlaps needed to construct the string graph from the fm index. Furthermore, we show that the string graph can be constructed directly using the fm index without the need for explicitly finding all overlaps and a subsequent transitive removal step, yielding a space and time efficient construction algorithm.
