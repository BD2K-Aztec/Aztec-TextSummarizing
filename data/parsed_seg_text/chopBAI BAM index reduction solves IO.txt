Advances in sequencing capacity have led to the generation of unprecedented amounts of genomic data. The processing of this data frequently leads to I/O bottlenecks, e. g. when analyzing a small genomic region across a large number of samples. The largest I/O burden is, however, often not imposed by the amount of data needed for the analysis but rather by index files that help retrieving this data. We have developed chop bai a program that can chop a BAM index (BAI) file into small pieces. The program outputs a list of BAI files each indexing a specified genomic interval. The output files are much smaller in size but maintain compatibility with existing software tools. We show how preprocessing BAI files with chop bai can lead to a reduction of I/O by more than 95% during the analysis of 10 kb genomic regions, eventually enabling the joint analysis of more than 10 000 individuals. Availability and Implementation: The software is implemented in C þþ, GPL licensed and available at

introduction sequencing capacity has increased dramatically in recent years making it feasible to sequence cohorts of tens of thousands of individuals. The recent introduction of the his eq X Ten system allows for sequencing up to 18 000 whole human genomes per year at 30-fold coverage. Raw sequencing data is typically processed with standard bioinformatics pipelines on a computational cluster, parallelized by sample. Several variant calling tools, such as gat ks unified genotype r (), need to work with aligned reads from all sequenced individuals in order to achieve higher accuracy and comparability across samples. Instead of parallelizing by sample, we can parallelize this joint analysis by genomic region. Here, BAM index files allow quick random access to genomic regions, thus limiting the amount of I/O performed on BAM files that are typically more than 50 GB in size unfortunately this methodology does not scale for analyses of tens of thousands individuals. In many cases we are interested in small regions where the amount of data transferred per individuals is dwarfed by the size of the index file. A typical BAI index file is roughly 10 MB in size, hence around 100 GB of data transfer to a cluster node for each region is required in the case of 10 000 individuals. Depending on the size of the region this overhead can be an order of magnitude larger than the data transfer required to obtain the aligned reads from the BAM files. Thus, the transfer of the indices becomes an I/O bottleneck in the network. To solve this issue, we propose a method for chopping up the index in a predictable fashion, so that each cluster node can use a small portion of the overall index and network traffic is reduced significantly. We describe our method, chop bai and show a reduction in data transfer of more than 95% for 10 kb genomic regions, while

discussion when running an analysis of several small regions across thousands of individuals, such as certain commands in g atk (2010) and pop ins (), the status quo puts an unnecessary burden on the network of a computational cluster. With chop ba is preprocessing, the I/O imposed by BAM index files in the analysis of 10 kb regions of 10 000 BAM files can be reduced from 93 to 4.5 GB per job. This reduction in network I/O removes a significant bottleneck when processing a large set of samples over small regions and enables running an order of magnitude more jobs simultaneously. As sequencing is becoming more and more common, chop bai will be equally useful for analyzing large sequencing cohorts of other species where the BAI indexing scheme allows for fast access to small subsets of reads conflict of Interest: none declared.
