Motivation: Data clustering techniques are an essential component of a good data analysis toolbox. Many current bioinformatics applications are inherently compute intense and work with very large datasets. Sequential algorithms are inadequate for providing the necessary performance. For this reason, we have created Clustering Algorithms for Massively Parallel Architectures, Including GPU Nodes (CAMPAIGN), a central resource for data clustering algorithms and tools that are implemented specifically for execution on massively parallel processing architectures. Results: CAMPAIGN is a library of data clustering algorithms and tools, written in C for CUDA for Nvidia GPUs. The library provides up to two orders of magnitude speed up over respective cpu based clustering algorithms and is intended as an open source resource. New modules from the community will be accepted into the library and the layout of it is such that it can easily be extended to promising future platforms such as open cl. Availability: Releases of the CAMPAIGN library are freely available for download under the LGPL from https://simtk.org home campaign. Source code can also be obtained through anonymous subversion access as described on https://simtk.org /scm/?group_id=453.

introduction data clustering algorithms have been useful in many fields of computer science and are of ever increasing importance in the life sciences. For instance, data analysis in modern day biology and bioinformatics often involves the extraction of patterns from diverse sources such as gene expression data and protein structures (). This can require substantial amounts of processing time, putting a limit on the amount and quality of information that can be derived in reasonable time. To allow the development of more sophisticated analysis protocols, we present Clustering Algorithms for Massively Parallel Architectures, Including GPU Nodes (CAMPAIGN); a library of gpu accelerated clustering * To whom correspondence should be addressed. algorithms for large scale datasets. Equipped with an initial set of tools and gpu ports of well established algorithms, including k means k centers and hierarchical clustering, CAMPAIGN is intended to form the basis for devising new parallel clustering codes specifically tailored to the GPU and other massively parallel architectures. The 'C for CUDA' parallel computing platform from Nvidia provides a framework for accessing cuda enabled graphics cards. The c like syntax facilitates writing and maintaining code. We thus chose nvidia s CUDA parallel computing engine for developing the first release of the library. Providing the code as individual modules allows easy modification and extensibility, for example by future modules using open cl
discussion although there is substantial interest in fast clustering algorithms, previously published implementations are in most cases not readily available as either binaries or source code. This lack of availability hinders the evolution and incremental improvement of algorithms. In addition, such black box implementations can be frustrating to use or understand and can not be customized. Besides offering ready to use implementations of gpu based clustering algorithms, CAMPAIGN can serve both as a readily available benchmark against which to test future implementations of such algorithms, as well as a seed for the creation of a more exhaustive library of clustering codes. The current library is limiting the size of usable datasets to the amount of memory available on the GPU, such as 4GB in case of the Tesla GPU used here for testing, with less memory available on more low end graphic cards.

conclusion we have introduced CAMPAIGN, an open source library of data clustering algorithms and tools that aims to grow through contributions by the scientific and technical communities. The first batch of algorithms distributed with the initial release of the library offers one to two orders of magnitude speed up as compared with CPU reference implementations.
