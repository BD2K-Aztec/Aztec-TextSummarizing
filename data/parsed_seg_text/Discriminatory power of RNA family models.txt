Motivation: RNA family models group nucleotide sequences that share a common biological function. These models can be used to find new sequences belonging to the same family. To succeed in this task, a model needs to exhibit high sensitivity as well as high specificity. As model construction is guided by a manual process, a number of problems can occur, such as the introduction of more than one model for the same family or poorly constructed models. We explore the rf am database to discover such problems. Results: Our main contribution is in the definition of the discriminatory power of RNA family models, together with a first algorithm for its computation. In addition, we present calculations across the whole rf am database that show several families lacking high specificity when compared to other families. We give a list of these clusters of families and provide a tentative explanation. Our program can be used to: (i) make sure that new models are not equivalent to any model already present in the database; and (ii) new models are not simply submodels of existing families.

introduction structured non-coding RNAs are nucleotide sequences that are not translated into protein but have, in the folded state, their own specific functions (). This function is very much dependent on the secondary and tertiary structure (the folded state), while on the other hand, the primary structure or sequence sees more change () in the form of mutation. One can define relationships between non-coding RNAs in different species. A set of related sequences is called an RNA family. Each set is defined by its members performing the same function in different species. When genomes are sequenced, one is interested in finding members of known families in the new data, as well as finding new families if previously unknown non-coding RNAs are discovered. The problem finding homologues exists for proteins, too. Software to perform the same kind of searches exists in the form of HMMer () and the Pfam () database. Using profile hidden Markov models (profile HMMs), a mathematically convenient solution was found, around which the algorithms could be built. Unfortunately, the same solution proved inadequate () for non-coding RNAs. The task of building a model that describes a new family is still a mostly manual process. Finding new members of existing families, on the other hand, can be performed using software. The problem we are discussing in this article applies equally well to other algorithms * To whom correspondence should be addressed. human acg ucg a acu aga cow acc ugg a acu aga dog acu ugg aag uca cat acgucgaaacuaga structure *  * . **  **  *to search for homologue sequences, but as our algorithm is specific toward an existing software package, namely Infernal (), we will perform our analysis with respect to this software and the corresponding rf am () database. In order to model families of non-coding RNAs in a way that provides both sensitivity and specificity, the consensus secondary structure of the set of sequences has to be included in the mathematical model from which the algorithm is created. Stochastic context free grammars provide access to such models, just as stochastic regular grammars (in the form of profile HMMs) can be used to model protein families. We begin with a succinct introduction to the process of first designing an Infernal RNA family model and then searching for new family members. Building on those algorithms, we can define the specificity of a given model compared to other known models in a natural way using the already established Infernal language of bit scores.

discussion we have presented a polynomial time algorithm that, for any two covariance models, returns a string that scores high in both models. Using this algorithm, several questions regarding RNA family models can be answered. First, it is possible to determine if a model has high discriminative power against other models. This is important to avoid false positive results when searching for previously unknown new family members. The discriminative power can be quantified using the same measure as used in Infernal itself, thereby giving answers in a language, namely bit scores, that makes comparisons possible and easy. Second, if a model shows overlap with another, it can be determined which regions of the model do actually show this behaviour. This is possible, as we not only return a score value, but other information, too. This includes the offending string, the respective secondary structures and a detailed score account. Third, the algorithm is extendable. Borrowing ideas from Algebraic Dynamic Programming (), an optimization algebra can be anything that follows the dynamic programming constraints. Included are the cy k scoring algebra and the different information functions as well as an algebra product operation. Additional algebras require roughly a dozen lines of code. Fourth, the MaxiMin, or Link score lends itself as a natural similarity score for RNA families. Closely related families, in terms of primary and secondary structure not necessarily biological closeness, show a higher Link score than others. This requires further investigation to determine how much biological information can be extracted. Pure mathematics can not answer which biological relation does actually exist. In the case of prospective meta families we have two open research problems. One is to take a closer look at high scoring families to determine their biological relationship. Are high scores an artifact of poorly designed families, or a case of an actual meta family The other problem became evident in the 1st example, where not all members of the rna sep family scored high against each other. This suggests that meta families can not be modeled in Infernal directly, but how to adapt RNA family models in such a case remains open. Researchers designing new families will also find value in the tool, as one can scan a new family model against existing ones to be more confident that one has indeed identified a new family and not an already existing one in disguise. The Infernal Users Guide () mentions homology between family models as a reason for the existence of the different cut off scores for noise, gathering and trusted. We think it is important to be able to determine, computationally, the importance of the cut off scores when assigning new hits to families. Another fact is that cut off scores, like the models themselves, are set by the curators of the family. Our scoring scheme relies on the Infernal scoring algorithm itself. As numbers of models were created from very few seed sequences it is possible that the relevant cut off scores are set too high to capture remote members. A cut off score above the highest pair scores involving such a model could be of help while scanning new genomes for remote family members. Finally, we have to acknowledge that Infernal uses the Inside-, not the cy k algorithm to determine final scores. This can pose a problem in certain exceptional circumstances but these should be rare. Mathematically (cf.), cy k = probs m while Inside = probs m. The cy k algorithm gives the score for the single best alignment  of sequence s and model m while the Inside algorithm sums up over all possible alignments. This just means that we underestimate the final score, or said otherwise, the Inside scores for the Link sequence given the corresponding models will be even higher than the cy k scores.
