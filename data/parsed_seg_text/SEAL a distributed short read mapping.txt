SEAL is a scalable tool for short read pair mapping and duplicate removal. It computes mappings that are consistent with those produced by BWA and removes duplicates according to the same criteria employed by Picard mark duplicates. On a 16-node had oop cluster, it is capable of processing about 13 GB per hour in map rmd up mode, while reaching a throughput of 19 GB per hour in mapping only mode. Availability: SEAL is available online at http://biodoop-seal.sourceforge.net/.

introduction deep sequencing experiments read billions of short fragments of DNA, and their throughput is steadily increasing (). These reads need to be post processed after sequencing to prepare the data for further analysis, which implies that the computational steps need to scale their throughput to follow the trend in sequencing technology. Such high data rates imply the need for a distributed architecture that can scale with the number of computational nodes. Typical post-processing steps include sequence alignment, which is a fundamental step in nearly all applications of deep sequencing technologies, and duplicate read removal, which is a major concern for Illumina sequencing (). The pressure for better and faster tools has recently given rise to the development of new alignment algorithms that outperform traditional ones in terms of both speed and accuracy (). Distributed alignment tools have also been created, with Crossbow () as one of the most prominent examples. However, Crossbow is based on Bowtie (), and thus does not currently support gapped alignment, an important feature for many applications (). In this work we describe SEAL, a new distributed alignment tool that combines BWA () with duplicate read detection and removal. SEAL harnesses the had oop map reduce framework (http://hadoop.apache.org) to efficiently distribute I/O and computation across cluster nodes and to guarantee reliability by resisting node failures and transient events such as peaks in cluster load. In its current form, SEAL specializes in the pair end alignment of sequences read by Illumina sequencing machines. SEAL uses a version of the original BWA code base (version 0.5.8c) that has * To whom correspondence should be addressed. been refactored to be modular and extended to use shared memory to significantly improve performance on multicore systems.
