Motivation: Accurate determination of single nucleotide polymorph-isms (SNPs) from next generation sequencing data is a significant challenge facing bioinformatics researchers. Most current methods use mechanistic models that assume nucleotides aligning to a given reference position are sampled from a binomial distribution. While such methods are sensitive, they are often unable to discriminate errors resulting from misaligned reads, sequencing errors or platform artifacts from true variants. Results: To enable more accurate SNP calling, we developed an algorithm that uses a trained support vector machine (SVM) to determine variants from .BAM or .SAM formatted alignments of sequence reads. Our svm based implementation determines SNPs with significantly greater sensitivity and specificity than alternative platforms, including the unified genotype r included with the Genome Analysis Toolkit, sam tools and free bayes. In addition, the quality scores produced by our implementation more accurately reflect the likelihood that a variant is real when compared with those produced by the Genome Analysis Toolkit. While results depend on the model used, the implementation includes tools to easily build new models and refine existing models with additional training data. Availability: Source code and executables are available from git hub. com brendan of all on snps vm Contact:

introduction high throughput sequencing technologies produce large quantities of relatively low quality data. Discrimination of true sequence variants from variants produced alignment, base calling or platform specific errors presents a significant bioinformatic challenge. In projects seeking to identify disease causing variants, even a relatively modest number of false positive calls may significantly impede analysis, as commonly used variant filtering strategies often enrich for false positive calls (). For instance, discarding variants above a certain frequency in the population preferentially retains false variants, as nearly all false positive calls are likely to be rare. Traditional variant calling techniques, such as those available in the Genome Analysis Toolkit g atk or the sam tools package (), imagine that bases aligning to a reference position are drawn from a binomial distribution. Under the binomial assumption, the number of non reference bases aligning to a position is approximately PfX  x jcg  c x may be assessed to form an educated guess regarding the state of a query variant. The Variant Quality Score Recalibration v qsr procedure () is a semi supervised technique that fits multidimensional Gaussian distributions to a collection of suspected true variants. Variants whose properties differ from those of the true variants are deemed more likely to be false positives. While the v qsr procedure improves the quality of variant calls, it suffers from several limitations. For example, v qsr requires tens of thousands of variants to accurately fit the distributions, and inclusion of more than a few (roughly 10) features may cause the algorithm to fail. An alternative type of machine learning technique known as the support vector machine (SVM;) addresses some of the difficulties encountered in earlier models. SVMs are numerical classification techniques designed to identify an arbitrarily defined class to which a query data point belongs, and have been previously used in bioinformatics applications from cancer subtype classification () to splice site prediction (e.g.). In a manner similar to v qsr a vector of features is collected for all possible sites at which a variant may exist. The SVM is then trained on collections of sites known to contain true and false variants. Unlike v qsr SVM training produces a 'model' that may then be used repeatedly to call variants from query datasets. SVMs can incorporate large numbers of features and, after training, an SVM does not require a large number of variants for precise calling; it may be used to classify a single query variant. In this work, we demonstrate that an appropriately trained SVM can be used to accurately determine the positions of SNPs from next generation sequencing data, and we present a software implementation designed to make such calculations practical for bioinformatic ians. Our algorithm takes as input as am or bam formatted alignment of sequencing reads and emits as output a vcf formatted file containing positions of likely variants. The SVM is used to predict whether an alignment column contains a sequence variant of any zygosity, and additional non svm calculations are performed to determine the most likely zygosity of each variant.

discussion machine learning techniques such as SVMs offer several advantages over traditional snp calling procedures. Most importantly, machine learning techniques allow for multiple and diverse measurements to be incorporated into a statistically robust model of variant calling, allowing for errors produced by m is called bases, erroneously mapped reads and platform specific artifacts to be detected in a single statistical procedure. By including features such as strand bias, read position, base quality measurements and mismatch counts into a single variant assessment algorithm, significantly greater sensitivity and specificity may be achieved. In addition, inclusion of these multiple error sources results in quality scores that more accurately reflect the probability that a variant is real when compared with the gat ks unified genotype r. Another advantage of the svm based technique is that the variant calling model may be continually improved as more training data become available. External information regarding true and false variant calls from trusted sources, for instance, Sanger sequencing methods or SNP chips, can be used to refine the variant calling model and improve the accuracy of all future calls. For sequencing centers or laboratories that process many samples and routinely use Sanger sequencing to confirm certain variants, such data are likely to be widely available. In our implementation, we have included several features to aid incorporation of newly acquired data into an existing model to facilitate the refinement procedure. While we have demonstrated that an svm based technique can yield more accurate results than traditional variant calling techniques, the performance of our algorithm depends critically on the model used. As more accurate training sets are developed and more informative features identified, the sensitivity and specificity may be improved substantially. Additionally, because models and training data are stored as simple text files, they may be easily distributed among researchers once developed.
