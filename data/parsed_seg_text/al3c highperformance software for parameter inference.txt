Motivation: The development of Approximate Bayesian Computation (ABC) algorithms for parameter inference which are both computationally efficient and scalable in parallel computing environments is an important area of research. Monte Carlo rejection sampling, a fundamental component of ABC algorithms, is trivial to distribute over multiple processors but is inherently inefficient. While development of algorithms such as ABC Sequential Monte Carlo abc smc help address the inherent inefficiencies of rejection sampling, such approaches are not as easily scaled on multiple processors. As a result, current Bayesian inference software offerings that use abc smc lack the ability to scale in parallel computing environments. Results: We present al3c, a Cþþ framework for implementing abc smc in parallel. By requiring only that users define essential functions such as the simulation model and prior distribution function , al3c abstracts the user from both the complexities of parallel programming and the details of the abc smc algorithm. By using the al3c framework, the user is able to scale the abc smc algorithm in parallel computing environments for his or her specific application, with minimal programming overhead. Availability and implementation: al3c is offered as a static binary for Linux and OS-X computing environments. The user completes an XML configuration file and Cþþ plug-in template for the specific application, which are used by al3c to obtain the desired results. Users can download the static binaries, source code, reference documentation and examples (including those in this article) by visiting https://github.com/ahstram/al3c.

introduction when modeling biological phenomena, the presence of interacting factors can make the identification of the model's parameter distribution in tract ably complicated, creating an incentive to simplify the model. Rather than risk oversimplifying such a model, a numerical estimate of parameter distributions can be obtained using Monte Carlo rejection sampling methods. By repeatedly simulating data with randomly chosen parameters and considering the distribution of only those parameters responsible for simulations most similar to the observed data, one can make inferences about the model's parameter distribution given the observed data. When the proposed parameters for rejection sampling are generated from a prior distribution, the process can be classified as an Approximate Bayesian Computation (ABC) algorithm, as described in. Due to their reliance on rejection sampling, ABC algorithms are inherently inefficient while basic ABC algorithms can trivially be accelerated by parallelizing simulations, more efficient methods of ABC are harder to parallelize. ABC Sequential Monte Carlo abc smc improves the efficiency of ABC with an iterative method of rejection sampling, ultimately requiring less simulations and therefore less computation time (). Due to its sequential nature, abc smc is less trivial to parallelize and as a result, existing software implementations by allows for the massively parallel execution of code on graphics processing units (GPUs), although this requires in depth parallel programming knowledge. Researchers are therefore unable to scale an efficient method of ABC on multiprocessor computers or computing clusters without some parallel programming knowledge. To address this, we present al3c, an object oriented framework for implementing abc smc in parallel without knowledge of parallel programming.

discussion we have given two examples in which parameter inference of biological models was accelerated with the al3c framework. The literature on methods and programs for ABC inference is broad, and there are problems where parallel implementations are optimized to perform well for a narrower class of problems and may be a more appropriate choice, such as in systems biology (). al3c, however, provides the research community with the first available general purpose ABC application that allows users to employ parallelized abc smc in any context without knowledge of parallel programming. Future features for al3c may include automatic optimizing of rejection threshold schedules to prevent parameter estimates from converging to local maxima (), and GPU support to further parallelize individual simulations.
