Motivation: BigWig, a format to represent read density data, is one of the most popular data types. They can represent the peak intensity in chips eq the transcript expression in rnase q the copy number variation in whole genome sequencing, etc. UCSC Encode project uses the bigWig format heavily for storage and visualization. Of 5.2 TB Encode hg19 database, 1.6 TB (31% of the total space) is used to store bigWig files. BigWig format not only saves a lot of space but also supports fast queries that are crucial for interactive analysis and browsing. In our benchmark, bigWig often has similar size to the gzipped raw data, while is still able to support $5000 random queries per second. Results: Although bigWig is good enough at the moment, both storage space and query time are expected to become limited when sequencing gets cheaper. This article describes a new method to store density data named c wig. The format uses on average one third of the size of existing bigWig files and improves random query speed up to 100 times. Availability and implementation: http://

introduction as the next generation sequencing (NGS) cost reduces, huge amount of reads can be generated nowadays. After aligning the reads on a reference genome, we can generate the read density, i.e. the number of NGS reads covering each base in the genome. Density data are useful because it can be used to represent the transcript expression in rnase q (), the peak intensity in chips eq (), the copy number variation in whole genome sequencing (), etc. For example shows plots of density signals of a chips eq region and a rnase q region, respectively. Currently, read density is often represented using the wiggle (wig) format, the bed graph format or the bigWig format. They all store the densities of NGS reads along the whole reference genome. Wig and bed graph are uncompressed text formats, thus, are usually huge. BigWig () is the compressed form of wig and bed graph. Its compression approach is to sort and partition the density data into blocks and compress them by gzip. BigWig also supports a few types of queries over any selected region: coverage, max, min, average and standard deviation. These queries facilitate efficient downstream analysis and enable fast visualization of the data. With bigWig format, UCSC genome browser () can support interactive browsing of density data. In fact, bigWig is one of the most popular track types. In the hg19 browser, $4400 tracks (10% of all hg19 tracks) are bigWig tracks, and they use 1.6TB (it is equivalent to 31% of the total space for all UCSC hg19 tracks). To reduce space and improve query speed, the resolution of the density signals of some UCSC tracks has been reduced, which affects the accuracy. In the future, it is important to reduce the storage space of density data and improve their query speed while maintaining the accuracy of the data. Our project aims to develop an alternative storage format for density signal. Our design is based on careful observations of the data and knowledge of succinct and compressed data structures. For example, we observed that mapping locations of NGS are usually overlapped. Regions with non-zero intensity are often clustered. This fact enables us to reduce the space. Another observation is that the density values of adjacent regions are not independent. Storing the differences between adjacent density values can reduce the size of 80% of the datasets in UCSC hg19. To enable fast queries, we use data structures like sd array () that can compress data while still allowing random access. We also adopt a modified Cartesian tree () that uses linear number of bits and provides constant time min/max query. Similar to UCSC bigWig tool, c wig tool also implements the remote file access feature. In this feature, the program and the data file can be placed in different computers. The program can answer queries by accessing the data file through the HTTP/ HTTPS network protocol. In our experiment using all UCSC hg19 database, the c wig format uses on average one third of the size of existing bigWig files, and uses much lower space in high resolution data files. In addition, it also improves query speed by 10100 times depending on the query types.

conclusion this article proposed the file format for c wig to store signal data. Comparing with bigWig, c wig not only uses lesser space but also provides faster queries. This format should be useful for visualization applications like UCSC genome browser () and Broad Institute Integrative Genome Viewer () and for Biologists to analyze and discover features in their data. In the future, we would like to extend our idea to represent other types of data [like big bed () and BAM (. We also want to consider lossy compression methods to gain better compression over noisy data.
