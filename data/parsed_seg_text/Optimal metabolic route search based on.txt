Motivation: A key computational problem in metabolic engineering is finding efficient metabolic routes from a source to a target compound in genome scale reaction networks, potentially considering the addition of new reactions. Efficiency can be based on many factors, such as route lengths, atoms conserved and the number of new reactions, and the new enzymes to catalyze them, added to the route. Fast algorithms are needed to systematically search these large genome scale reaction networks. Results: We present the algorithm used in the new route search tool within the Pathway Tools software. This algorithm is based on a general branch and bound search and involves constructing a network of atom mappings to facilitate efficient searching. As far as we know, it is the first published algorithm that finds guaranteed optimal routes where atom conservation is part of the optimality criteria. route search includes a graphical user interface that speeds user understanding of its search results. We evaluated the algorithm on five example metabolic engineering problems from the literature; for one problem the published solution was equivalent to the optimal route found by route search for the remaining four problems, route search found the published solution as one of its best scored solutions. These problems were each solved in less than 5 s of computational time. Availability and implementation: route search is accessible at bio cyc org by using the menu command Metabolism ! Metabolic route search and by downloading Pathway Tools. Pathway Tools software is freely available to academic users, and for a fee to commercial users. Download from: http://biocyc.org/

introduction metabolic engineers seek to modify the metabolic network of an organism to efficiently produce novel chemical products, with applications including the production of biofuels and specialized chemicals. The space of potential modifications is a large one given that metabolic databases such as MetaCyc () and KEGG () contain thousands of enzyme catalyzed reactions that could be engineered into an organism. How do we balance the cost of engineering the organism against the efficiency of the resulting pathways the methods we present assume that the users begin with a source (feedstock) compound and a target (product) compound and that they aim to find the optimal metabolic routes that connect those compounds within a genome scale metabolic reaction network. The methods further assume that the reaction network is annotated with atom mappings, which describe the path of each atom in a metabolic reaction from a reactant compound to a product compound. The methods allow the starting reaction network of the organism to be supplemented with additional reactions from an external reaction library, which for our route search program is the MetaCyc database. route search searches for multiple optimal routes where optimality is essentially based on minimizing the number of native reactions of the route, the number of non-native reactions introduced in the route from the external library and the number of atoms lost from the start compound to the target compound according to the atom mappings of the reactions. We believe that these optimality criteria, in particular reducing the loss of atoms from the start compound to the target compound, are likely to provide good route candidates for metabolic engineering. route search can also aid scientists in solving a simpler problem than the engineering of new metabolic routes, namely, the understanding of metabolic routes in existing metabolic networks. Scientists want to explore alternative routes within an organism's natural metabolic network for transforming a given starting compound into a product compound. We present the algorithm used by the web based interactive tool route search to find optimal metabolic routes. Optimality is based on the number of reactions used, the provenance of the reactions (natural or engineered) and the atoms conserved by the route from the source compound to the target compound. As far as we know, it is the first published exact algorithm that guarantees optimality of the routes found based, in part, on the number of atoms conserved from the source to the target compound. route search is implemented in Common Lisp and is available at the bio cyc org Web site for any of the 3000 organism specific metabolic networks within bio cyc by using the menu bar command Metabolism ! Metabolic route search but without use of an external reaction library. MetaCyc can be used as the reaction library by downloading Pathway Tools () and running it as a local web server. Sections 2.1 and 2.2 present the route search search algorithm, which is based on the branch and bound algorithm applied to a precompiled metabolic network graph that we call a mapped network. The efficiency of the algorithm is discussed, as is its method of using atom mappings to trace atoms conserved in metabolic routes. The atom mapping data used were *To whom correspondence should be addressed. computed by a technique presented in and applied to the MetaCyc () multi organism database (version 17.5) to produce atom mappings for 410 300 biochemical reactions. These atom mappings are used for all other databases available at the bio cyc org Web site. Section 3 describes the route search graphical interface, which allows users to specify and control route search searches and speeds user understanding of the paths found by route search including the atoms that are conserved from source to target compound. Section 4 presents an empirical validation of route search on five example metabolic engineering problems from the literature. For three problems the published solution was equivalent to the optimal route found by route search for the remaining two problems the published solution was found by route search but was not the optimal solution. Section 4.2 compares route search with previous work on metabolic route searching algorithms. For efficiency, the metabolic route searches are done on mapped networks that are constructed using compounds, reactions and atom mappings. Their construction is explained in the following section.

DISCUSSION
