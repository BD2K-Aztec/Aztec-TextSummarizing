Motivation: cross species meta analyses of microarray data usually require prior affiliation of genes based on orthology information that often relies on sequence similarity. Results: We present an algorithm merging microarray datasets on the basis of co-expression alone, without any requirement for orthology information to affiliate genes. Combining existing methods such as co inertia analysis, back transformation Hungarian matching and majority voting in an iterative non greedy hill climbing approach, it affiliates arrays and genes at the same time, maximizing the co structure between the datasets. To introduce the method, we demonstrate its performance on two closely and two distantly related datasets of different experimental context and produced on different platforms. Each pair stems from two different species. The resulting cross species dynamic Bayesian gene networks improve on the networks inferred from each dataset alone by yielding more significant network motifs, as well as more of the interactions already recorded in KEGG and other databases. Also, it is shown that our algorithm converges on the optimal number of nodes for network inference. Being readily extendable to more than two datasets, it provides the opportunity to infer extensive gene regulatory networks. Availability and Implementation: Source code (MATLAB and R) freely available for download at http://www.mchips.org/ supplements/

introduction microarray technique, albeit barely older than a decade, is now both mature and ubiquitous, accumulating an unprecedented amount of quantitative genome wide information (). Although each study is conducted to generate valuable insights in and of itself, it becomes more and more desirable to put them into a larger context. Various meta analysis techniques combine individual studies conducted by different authors were among the first authors to introduce meta analysis for microarray data. Most meta analysis studies have * To whom correspondence should be addressed. been performed on cancer (). In this field of research, biomaterial is often limited, in other cases the price for the microarrays is the bottleneck. In typical microarray based studies, tens of thousands of genes (variables) are only investigated across (at most) hundreds of biological samples (observations). The asymmetry of the data tables poses a problem for inferring gene regulatory networks (GRN) by reverse engineering (). Alleviating the asymmetry by combining the datasets therefore largely increases their use for systems biology. A multitude of algorithms have been reported for network inference from gene expression data. Dynamic Bayesian networks (DBN) capture conditional independence between variables. They are relatively easy to interpret () yielding directed graphs. They can handle noisy data and even feedback loops in biological systems (). In order to maximize the number of samples accounted for in one GRN reverse engineering step, it seems preferable for any method to first combine the data instead of combining the resulting networks later on. Several methods can be applied to this end (). However, all of these methods take as input the affiliation of genes between the datasets. When combining data stemming from different species, sequence homology can be used to affiliate orthologs. However, due to the ambiguity of orthology relations, mapping across species is challenging. lineage specific gene duplications can give rise to a different number of paralogs in one species compared to another species. One can not tell which paralog (or in-paralog) retains the function of the ancestral gene or has been co-opted into a new function. We present a way of combining datasets that does not need any genes (or samples) to be affiliated beforehand. While such information can be easily incorporated to assist the process, our algorithm also performs well without being provided with any affiliations, purely driven by coherences among the data. That opens the door to fully automated combining and modeling of all microarray datasets accumulated to date.
