Motivation: A series of methods in population genetics use multilocus genotype data to assign individuals membership in latent clusters. These methods belong to a broad class of mixed membership models, such as latent Dirichlet allocation used to analyze text corpora. Inference from mixed membership models can produce different output matrices when repeatedly applied to the same inputs, and the number of latent clusters is a parameter that is often varied in the analysis pipeline. For these reasons, quantifying, visualizing, and annotating the output from mixed membership models are bottlenecks for investigators across multiple disciplines from ecology to text data mining. Results: We introduce pong, a network graphical approach for analyzing and visualizing membership in latent clusters with a native interactive D3.js visualization. pong leverages efficient algorithms for solving the Assignment Problem to dramatically reduce runtime while increasing accuracy compared with other methods that process output from mixed membership models. We apply pong to 225 705 unlinked genome wide single nucleotide variants from 2426 unrelated individuals in the 1000 Genomes Project, and identify previously overlooked aspects of global human population structure. We show that pong outpaces current solutions by more than an order of magnitude in runtime while providing a customizable and interactive visualization of population structure that is more accurate than those produced by current tools. Availability and Implementation: pong is freely available and can be installed using the Python package management system pip. pong s source code is available at https://github.com/abehr/ pong.

introduction a series of generative models known as mixed membership models have been developed that model grouped data, where each group is characterized by a mixture of latent components. One well known example of a mixed membership model is latent Dirichlet allocation (), in which documents are modeled as a mixture of latent topics. Another widely used example is the model implemented in the population genetic program STRUCTURE (), where individuals are assigned to a mixture of latent clusters, or populations, based on multilocus genotype data. In this article, we focus on the population genetic application of mixed membership models, and refer to this application as clustering inference; see Novembre (2014) for a review of multiple population genetic clustering inference methods, including STRUCTURE. In STRUCTURE's Bayesian Markov chain Monte Carlo algorithm, individuals are modeled as deriving ancestry from K clusters, where the value of K is user specified. Each cluster is constrained to be in hardy weinberg equilibrium, and clusters vary in their characteristic allele frequencies at each locus. Clustering inference using genetic data is a crucial step in many ecological and evolutionary studies. For example, identifying genetic subpopulations provides key insight into a sample's ecology and evolution (), reveals ethnic variation in disease phenotypes (), and reduces spurious correlations in genome wide association studies (). For a given multilocus genotype dataset with N individuals and K clusters, the output of a single algorithmic run of clustering inference is an N  K matrix, denoted as Q, of membership coefficients; these coefficients can be learned using a supervised or unsupervised approach. Membership coefficient q ij is the inferred proportion of individual i's alleles inherited from cluster j. The row vector ~ q i is interpreted as the genome wide ancestry of individual i, and the K elements of ~ q i sum to 1. Each column vector ~ q j represents membership in the jth cluster across individuals. Although covariates such as population labels, geographic origin, language spoken or method of subsistence are not used to infer membership coefficients, these covariates are essential for interpreting Q matrices. Given that over 16 000 studies have cited STRUCTURE to date, and 100 or more Q matrices are routinely produced in a single study, investigators need efficient algorithms that enable accurate processing and interpretation of output from clustering inference. Algorithms designed to process Q matrices face three challenges. First, a given run, which yields a single Q matrix, is equally likely to reach any of K! column permutations of the same collection of estimated membership coefficients due to the stochastic nature of clustering inference. This is known as label switching: for a fixed value of K and identical genetic input, column ~ q j in the Q matrix produced by one run may not correspond to column ~ q j in the Q matrix produced by another run (). In our analyses of the 1000 Genomes (phase 3;), label switching occurred in 62.64% of pairwise comparisons among runs; that is, many matrices of membership coefficients were identical once columns were permuted to match, and rapidly finding permutations that maximize similarity between Q matrices is computationally expensive as K increases. Second, even after adjusting for label switching, Q matrices with the same input genotype data and the same value of K may differ non trivially. This is known as multimodality (), and occurs when multiple sets of membership coefficients can be inferred from the data. We refer to runs that, despite identical inputs, differ non trivially as belonging to different modes. For a fixed value of K, a set of runs grouped into the same mode based on some measure of similarity can be represented by a single Q matrix in that mode. Many studies using the maximum likelihood approach for clustering inference implemented in ADMIXTURE () ignore manifestations of multimodality (), despite the fact that ADMIXTURE can identify different local maxima across different runs for a given value of K (e.g.). The complete characterization of modes present in clustering inference output gives unique insight into genetic differentiation within a sample. A third complication arises for interpreting clustering inference output when the input parameter K is varied (all other inputs being equal): there is no column permutation of a Q NK matrix that exactly corresponds to any Q NK1 matrix. We refer to this as the alignment across k problem. A common pipeline when applying clustering inference methods to genotype data is to increment K from 2 to some user defined maximum value K max , although some clustering inference methods also assist with choosing the value of K that best explains the data ().. Accurate and automated analysis of clustering inference output across values of K is essential both for understanding a sample's evolutionary history and for model selection. The label switching multimodality, and alignment across k challenges must all be resolved in order to fully and accurately characterize genetic differentiation and shared ancestry in a dataset of interest. Here, we present pong, a new algorithm for fast post hoc analysis of clustering inference output from population genetic data combined with an interactive JavaScript visualization using data driven Documents (D3.js; https://github.com/mbostock/d3). Our package accounts for label switching, characterizes modes, and aligns Q matrices across values of K by constructing weighted bipartite graphs for each pair of Q matrices based on similarity in membership coefficients between clusters. Our construction of these graphs draws on efficient algorithms for solving the combinatorial optimization problem known as the Assignment Problem, thereby allowing pong to process hundreds of Q matrices in seconds. pong displays a representative Q matrix for each mode for each value of K, and identifies differences among modes that are easily missed during visual inspection. We compare pong against current solutions clump p by; augmented as clump ak by], and find our approach reduces runtime by more than an order of magnitude. We also apply pong to clustering inference output from the 1000 Genomes (phase 3) and present the most comprehensive depiction of global human population structure in this dataset to date. pong has the potential to be applied broadly to identify modes, align output, and visualize output from inference based on mixed membership models.) from clustering inference with ADMIXTURE (). In order to generate visualizations highlighting similarities and differences among Q matrices, pong generates weighted bipartite graphs connecting clusters between runs within and across values of K (Sections 2.2, 2.3). Our goal of matching clusters across runs is analogous to the combinatorial optimization problem known as the Assignment Problem (), for which numerous efficient algorithms exist (). pong s novel approach of comparing clusters column vectors of Q matrices dramatically reduces runtime relative to existing methods that rely on permuting entire matrices. Consider two Q matrices, Q  q ij  and R  r ij . Each weighted bipartite graph GQ; R  f~ q j g [ f~ r k g; E encodes pairwise similarities between clusters in Q and clusters in R. Edges in G are weighted according to a similarity metric computed between clusters (detailed in Supplementary Information); pong s default similarity metric is derived from the Jaccard index used in set comparison, and emphasizes overlap in membership coefficients without incorporating individuals who have no membership in the clusters under comparison. We define an alignment of Q and R as a bipartite perfect matching of their column vectors. pong s first objective is to find the maximum weight alignment for each pair of runs for a fixed value of K (Section 2.2). This information is used to identify modes within K, and we randomly choose a representative run (Q matrix) for each mode found in clustering inference. We call the mode containing the most runs within each value of K the major mode for that K value (; ties are decided uniformly at random). pong s second objective is to find the maximum weight alignment between the representative run of each major mode across values of K (Section 2.3;, Supplementary). Identifying the maximum weight alignment within and across K inherently solves the label switching problem without performing the computationally costly task of comparing whole matrix permutations. Last, pong colors the visualization and highlights differences among modes based on these maximum weight alignments.

discussion here we introduce pong, a freely available user friendly network graphical method for post-processing output from clustering inference using population genetic data. We demonstrate that pong accurately aligns Q matrices orders of magnitude more quickly than do existing methods; it also provides a detailed characterization of modes among runs and produces a customizable, interactive D3.js visualization securely displayed using any modern web browser without requiring an internet connection. pong s algorithm deviates from existing approaches by finding the maximum weight perfect matching between column vectors of membership coefficients for pairs of Q matrices, and leverages the Hungarian algorithm to pong: analysis and visualization of latent clusters efficiently solve this series of optimization problems (). Interpreting the results from multiple runs of clustering inference is a difficult process. Investigators often choose a single Q matrix at each value of K to display or discuss, overlooking complex signals present in their data because the process of producing the necessary visualizations is too time consuming. pong s speed allows the investigator to focus instead on conducting more runs of clustering inference in order to fully interpret the clustering in her sample of interest. Currently, many population genetic studies only carry out one run of A B C. Visualizations of modes in population structure identified by pong and clump ak at K  10 for clustering inference with ADMIXTURE () applied to 1000 Genomes data (phase 3;). The new cluster of membership coefficients first identified at K  10 is denoted by light blue in each barplot. (A) pong s dialog box of modes at K  10, with multimodality highlighted. (B) clump aks major mode at K  10 averages over six runs of clustering inference output; the reported mean similarity score among these six runs is 0.811. South Asian (GIH), Han Chinese (CHB and CHS), and Puerto Rican (PUR) individuals all have ancestry depicted by the light blue cluster in this plot. The six runs averaged here are instead partitioned into three minor modes by pong in panel A. (C) clump aks minor mode at K  10 averages over four identical runs (mean similarity score is 1.000). This barplot contains the same information as the barplot of k4r10, representing pong s major mode in panel A clustering inference per value of K (), particularly when using ADMIXTURE's maximum likelihood approach () to the inferential framework implemented in STRUCTURE (). The likelihood landscape of the input genotype data is complex, and can hold different local maxima for a given value of K (see). Combining pong s rapid algorithm and detailed, interactive visualization with posterior probabilities for K reported by clustering inference methods will allow investigators to accurately interpret results from clustering inference, thereby advancing our knowledge of the genetic structure of natural populations for a wide range of organisms. We further plan to extend pong to visualize results from other applications of mixed membership models and to leverage the dynamic nature of bound data to increase the information provided by pong s visualization.
