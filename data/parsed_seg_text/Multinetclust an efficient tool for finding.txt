multinet clust is a simple tool that allows users to extract connected clusters of data represented by different networks given in the form of matrices. The tool uses user defined threshold values to combine the matrices, and uses a straightforward, memory efficient graph algorithm to find clusters that are connected in all or in either of the networks. The tool is written in C/C++ and is available either as a form based or as a command line based program running on Linux platforms. The algorithm is fast, processing a network of 10 6 nodes and 10 8 edges takes only a few minutes on an ordinary computer.

introduction finding tightly connected clusters in large datasets is a frequent task in many areas of bioinformatics such as the analysis of protein similarity networks, microarray or protein protein interaction data. Classical clustering algorithms have difficulties in handling large datasets used in bioinformatics owing to high demands on computer resources. Fast heuristic algorithms have been developed for specific tasks, e.g. blast clust ftp ftp ncbi nih gov blast documents blast clust html from the ncbi blast package (), tribe mcl () or the cd hit () can delineate protein or gene families in a large network of sequence similarities (e.g. BLAST e values. However, there are no apparent tools that could efficiently handle large multiple networks, such as those necessary to group proteins using more than one similarity criterion (e.g. based on sequence, structure or function) (). We developed an efficient, semi supervised tool that takes the users' empirical knowledge of cut off values into account (below which interactions or similarities can be neglected) to combine multiple data networks using an averaging or kernel fusion method * To whom correspondence should be addressed.  The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First authors thick and thin edges correspond to distinct similarity data (A). Dotted lines denote edges that are below the respective threshold, and hence can be omitted from the networks. Two different aggregation rules are implemented: the weighted arithmetic averaging ('sum rule') gives clusters that are connected within either of the two networks (B); the weighted geometric averaging ('product rule') gives clusters that are connected within both networks (C). M ij denotes the value assigned to the edges, w is the weighting factor ('alpha') of the two matrices (hence n = 2) and M mix refers to the aggregated matrix.(). The resulting combined network can then be queried for connected components (clusters) using an efficient implementation of the union find algorithm (). The clusters correspond to groups of nodes that are connected either by any or by all of the constituent networks, depending on the aggregation rule used (and C, respectively). To adapt this method to large heterogeneous datasets, we combined the thresholding, aggregation as well as the connected component search into a single, memory and time efficient tool, multinet clust. multinet clust is not a new clustering method but an optimized implementation of existing graph algorithms suitable for handling large networks of 10 6 nodes and 10 8 edges.
