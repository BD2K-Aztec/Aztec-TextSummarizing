Motivation: Genome assembly tools based on the de Bruijn graph framework rely on a parameter k, which represents a trade-off between several competing effects that are difficult to quantify. There is currently a lack of tools that would automatically estimate the best k to use and or quickly generate histograms of km er abundances that would allow the user to make an informed decision. Results: We develop a fast and accurate sampling method that constructs approximate abundance histograms with several orders of magnitude performance improvement over traditional methods. We then present a fast heuristic that uses the generated abundance histo-grams for putative k values to estimate the best possible value of k. We test the effectiveness of our tool using diverse sequencing data-sets and find that its choice of k leads to some of the best assemblies. Availability: Our tool k merge nie is freely available at: http://kmergenie.

introduction genome assembly continues to be a fundamental aspect of high throughput sequencing data analysis. In the years since the first methods were developed, there have been numerous improvements, and the field is now rich with tools that provide biologists several options (). Many of these tools are based on the de Bruijn graph framework, where reads are chopped up into km ers (substrings of length k) (). The de Bruijn graph is constructed with nodes being the (k  1)-mers and the edges being the km ers present in the reads. Broadly speaking, an assembler constructs the graph, performs various graph simplification steps and outputs non branching paths as contigs contiguous regions that the assembler predicts are in the genome. Recently, there have been several meta analyses of assemblers that have pointed to systematic shortcomings of current methods (). The assemb lath on competitions () demonstrated that assembling a dataset still requires significant expert intervention. One issue is many assemblers' lack of robustness with respect to the parameters and the lack of any systematic approach to choosing the parameters. In de bruijn based assemblers, the most significant parameter is k, which determines the size of the km ers into which reads are chopped up. Repeats longer than k nucleotides can tangle the graph and break up contigs; thus, a large value of k is desired. On the other hand, the longer the k the higher the chances that a km er will have an error in it; therefore, making k too large decreases the number of correct km ers present in the data. Another effect is that when two reads overlap by less than k characters, they do not share a vertex in the graph, and thus create a coverage gap that breaks up a contig. Therefore, the choice of k represents a trade-off between several effects. Because some of these trade-offs have been difficult to mathematically quantify, there has not been an explicit formula for choosing k taking into account all these effects. It is possible to calculate some bounds based on estimated genome size and coverage (e.g. by applying lander waterman statistics); however, such estimates do not usually take into account the impact of repetitiveness of the genome, heterozygosity rate or read error rate. In practice, k is often chosen based on previous experience with similar datasets. More thorough approaches compare assemblies obtained from different k values; however, they are time consuming, as a single assembly can take days for mammalian size genomes. A more informed initial choice for k can be made by building abundance histograms for putative values of k and comparing them. The abundance histogram shows the distribution of km er abundances (the number of occurrences in the data) for a single k value. Such histograms can provide an expert with valuable information for choosing k; however, the time to construct such a histogram can take up to a day for just a single value of k marca is. Our contribution in this article is 2-fold. First, we propose an accurate sampling method that constructs approximate abundance histograms with an order of magnitude speed improvement, compared with traditional tools based on km er counting. Our method allows an expert user to make an informed decision by quickly generating abundance histograms for many k values and analyzing the results, either visually or statistically. Our second contribution is a fast heuristic method for selecting the best possible value of k, based on the generated abundance histograms for many values of k. The heuristic is based on the intuition that the best choice of k is the one that provides the most distinct non erroneous (genomic) km ers to *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals permission soup com the assembler. Our method can be integrated into assembly pipelines so that the choice of k is made automatically without user intervention. We implement our methods in a publicly available tool called k merge nie. We test k merge nies effectiveness using three sequencing datasets from a diverse set of genomes: Staphylococcus aureus, human chromosome 14, and Bombus impatiens. First, we find that our approximation of the histogram is close to the exact histogram and easily separable from histograms for nearby values of k. Next, we judge the accuracy of k merge nies choice of k by assembling the data for numerous k values and comparing the quality of the assemblies. We find that k merge nies choice leads to the best assemblies of s aureus and b impatiens as measured by the contig length (NG50), and to a good assembly of chr14 that represents a compromise between contig length and the number of errors.

discussion although we have presented a method that attempts to find the best value of k for assembly, we would like to note several limitations inherent in this approach. First of all, k merge nie may in some instances report that a best value of k can not be found because it is not able to fit the generative model to the abundance histograms. This could simply be due to a limitation of our model or the optimization algorithm, but it could also be due to a difficulty inherent in the data. For example, data from single cell experiments have uneven coverage (), violating a basic assumption of our model. Similarly, data from meta genomic or rnase q experiments do not come from a single genome, and their histograms have different properties. In these cases, it has been observed that there is often no single best k, and that combining the assemblies from different k can be beneficial. Although k merge nie does not suggest a k in these cases, it provides the abundance histograms that can be useful in determining the best assembly approach. We have demonstrated our approach to be useful for de bruijn based assemblers. Other assemblers, such as SGA (), follow the alternate string overlap graph approach, in which reads are not chopped up into km ers. These assemblers do not have the k parameter but do have an alternate parameter for the minimum length of a non spurious overlap. Although a formal relation between these parameters has not been established, they play a similar role in affecting the assembly results. We, therefore, consider it an interesting direction for future research to extend our approach to select the best overlap parameter for string overlap graph assemblers. Finally, we wish to emphasize that our benchmark did not attempt to produce the best possible assembly for each organism. Rather, we are restricting ourselves to what a 'typical' user might do with the data: run single assembly software on un-corrected data and possibly try several km er values. To get the best possible assembly, one would have to explore the Cartesian product of several assemblers, several read error correction methods and several km er values, which is often a prohibitively long task. Notably, because we did not select the best error correction method for each assembler organism the assemblies reported in have lower contig N50 (and also scaffold N50, data not shown) than those reported in the GAGE benchmark. There are improvements that we have left for future work. The first direction is to determine how our method could be applied to non-uniform coverage. Although a single best k value for. Relation of the number of distinct genomic km ers to assembly quality. We show the results for the three datasets: s aureus (left), chr14 (middle) and b impatiens (right). We plot the number of distinct genomic km ers predicted from the histogram from our model, the number present in the reference and the number present in the assembly. We also show the NG50 of the assembly meta genome and transcriptome assembly is unlikely to exist, perhaps useful information could be extracted from the histograms constructed on such datasets. The second direction is to explore ways of improving the accuracy of our statistical model, potentially leading to more accurate estimates of the number of distinct genomic km ers
