Motivation: The evolutionary history of species is traditionally represented with a rooted phylogenetic tree. Each tree comprises a set of clusters, i.e. subsets of the species that are descended from a common ancestor. When rooted phylogenetic trees are built from several different datasets (e.g. from different genes), the clusters are often conflicting. These conflicting clusters can not be expressed as a simple phylogenetic tree; however, they can be expressed in a phylogenetic network. Phylogenetic networks are a generalization of phylogenetic trees that can account for processes such as hybridization, horizontal gene transfer and recombination, which are difficult to represent in standard tree like models of evolutionary histories. There is currently a large body of research aimed at developing appropriate methods for constructing phylogenetic networks from cluster sets. The CASS algorithm can construct a much simpler network than other available methods, but is extremely slow for large datasets or for datasets that need lots of reticulate nodes. The networks constructed by CASS are also greatly dependent on the order of input data, i.e. it generally derives different phylogenetic networks for the same dataset when different input orders are used. Results: In this study, we introduce an improved CASS algorithm, l network which can construct a phylogenetic network for a given set of clusters. We show that l network is significantly faster than CASS and effectively weakens the influence of input data order. Moreover, we show that l network can construct a much simpler network than most of the other available methods.

introduction phylogenetic networks are a generalization of phylogenetic trees; they can represent non tree like evolutionary histories caused by processes such as hybridization, horizontal gene transfer and recombination (). Developing appropriate methods for inferring phylogenetic networks has been identified as an important research area (), and there have been many recent studies on this topic (). Phylogenetic networks can be typo logically classified into unrooted and rooted networks, and functionally classified into implicit and explicit networks (). Implicit networks can be used to represent conflicting patterns that may be the result of a variety of causes, such as model misspecification (). Explicit networks can capture biological processes such as hybridization (), recombination () and horizontal gene transfer (). Explicit networks are usually rooted, as evolution is inherently directed. However, rooted phylogenetic networks may also be implicit networks, depending on how they are constructed and interpreted (). The program den dro scope () is used to compute rooted phylogenetic networks. It combines a number of methods used to compute implicit networks, such as the cluster network method (), with methods used for computing explicit networks, such as the hybridization network method (). The program splits tree4 () is designed to compute implicit networks. It uses a variety of methods, including the z closure super network method ().used computer simulations to compare the performance of most of the unrooted implicit network approaches, i.e. they compared the simulated trees with all of the trees embedded in the constructed network. Phylogenetic networks are an important part of biological research used the den dro scope program to confirm the hypothesis that in de his cent sporangia promote the establishment of a persistent population in different regions of the qinghai tibetan plateau analyzed Amplified Fragment Length Polymorphism (AFLP) loci using the neighbor net method and revealed three main clusters and several smaller sub clusters inferred super networks () from several incongruent gene trees, and uncovered new evidence for a complex history of reticulate evolution in Nicotiana. Our study develops a method for constructing rooted implicit networks. In the following, unless otherwise specified, we refer to rooted phylogenetic networks as simply networks. Let X be a set of tax a. A rooted phylogenetic tree T on X represents a cluster C (a proper subset of X ), if there is an edge e in T such that the set of tax a below e equals C. Each rooted phylogenetic tree T is uniquely defined by the set of clusters that it represents (). Given a network N and a cluster C, when switching an incoming edge on and all of the *To whom correspondence should be addressed. others off for each reticulate node in N, if there is a tree edge e  u, v in degree of v at most 1) in N such that the set of leaves reachable from e equals C, we say that N represents C in the soft wired sense. Alternatively, if there is a tree edge e in N such that the set of tax a below e equals C, we say that N represents C in the hard-wired sense. Given a network N and a phylogenetic tree T, when switching an incoming edge on and all of the others off for each reticulate node in N, if N equals T, then we say that N represents T (see). Phylogenetic trees are commonly constructed from different datasets, e.g. from different genes. Each constructed phylogenetic tree carries important evolutionary information, and to reconstruct complete evolutionary histories of all of the relevant tax a we would preferably like to use all of the clusters represented in the various constructed phylogenetic trees. However, such a set of clusters can not usually be expressed as a single phylogenetic tree. Therefore, it is necessary to construct a phylogenetic network to express the set of clusters. Several recent publications have studied this problem (). Note that individual gene trees will probably contain a mixture of correct and incorrect clusters; however, in our article, we assume that all clusters contained by these trees are correct. The rooted phylogenetic network can, in theory, be used to explicitly describe evolution in the presence of reticulate events such as hybridization, horizontal gene transfer and recombination. However, in biology, those reticulate events are rare (). Consequently, it is reasonable that the desired network should minimize the number of reticulate nodes contained in the network. The CASS algorithm (van) can construct a network with fewer reticulate nodes than any other available method, but it is not suitable when the input consists of large datasets or datasets that need many reticulate nodes. Moreover, the networks constructed by CASS are dependent on the order of input data, i.e. it generally constructs different phylogenetic networks when the order of the input data is different. In the following, we use the redundant clusters in a network to refer to the clusters that remain after removing the input clusters from all of the clusters represented by the network. In the context of phylogenetic analysis, the clusters represent putative monophyletic groups of related species. Biologically, the ideal situation would be that all of the clusters represented in the input trees would be represented in the constructed network, and no others. Therefore, we invoke the parsimony principle to argue that the best constructed network for representing a set of clusters in the soft wired sense is one that minimizes the number of redundant clusters; this is based on the premise that there will be as few reticulate nodes as possible. This new criterion brings the model closer to the above ideal situation. To achieve this aim, we introduce an improved CASS algorithm called l network which constructs a network that represents the given set of clusters in the soft wired sense. l network is significantly faster than CASS and effectively weakens the influence of the input data order. Moreover, l network can construct a network that represents fewer redundant clusters and has fewer reticulate nodes than most other programs. Furthermore, the trees represented by the networks constructed by l network are closer to the input trees than those represented by the networks produced by the other programs we consider.
