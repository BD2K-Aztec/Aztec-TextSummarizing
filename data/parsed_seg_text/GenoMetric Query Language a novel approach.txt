Motivation: Improvement of sequencing technologies and data processing pipelines is rapidly providing sequencing data, with associated high level features, of many individual genomes in multiple biological and clinical conditions. They allow for data driven genomic, transcript omic and epi genomic characterizations, but require state of the art big data computing strategies, with abstraction levels beyond available tool capabilities. Results: We propose a high level declarative geno metric Query Language gm ql and a toolkit for its use. gm ql operates downstream of raw data preprocessing pipelines and supports queries over thousands of heterogeneous datasets and samples; as such it is key to genomic big data analysis. gm ql leverages a simple data model that provides both abstractions of genomic region data and associated experimental, biological and clinical metadata and interoperability between many data formats. Based on had oop framework and Apache Pig platform, gm ql ensures high scalability, expressivity, flexibility and simplicity of use, as demonstrated by several biological query examples on ENCODE and TCGA datasets. Availability and implementation: The gm ql toolkit is freely available for non-commercial use at

introduction next generation sequencing (NGS) allows high throughput genome sequencing dna seq transcriptome profiling rnase q dna protein interaction assessment chips eq and epi genome characterization chips eq bs seq dnase seq. Continuous improvements of NGS technologies in quality, cost of results (http:// www genome gov sequencing costs and sequencing time are leading shortly to the possibility of sequencing an entire human genome in few minutes for a cost of $1000 (). Sequencing of genomes in several different biological and clinical conditions for their genomic, transcript omic and epi genomic characterization is becoming widespread. Very large scale sequencing projects are emerging. The 1000 Genomes Project aims at establishing an extensive catalogue of human genomic variation (1000 Genomes); it recently released a list of more than 79 million variant sites, using data from 2535 individuals from 26 different populations (http://www.1000genomes.org/announcements/initial-phase-3variant-list-and-phased-genotypes-2014-06-24/). The Cancer Genome Atlas (TCGA) project is a full scale effort to systematically explore the) provides public access to more than 4000 experimental datasets, including the just released data from its Phase 3: more than 760 experiments of mainly chips eq and rnase q assays in human and mouse (https://www.encodedcc.org/). Thanks to such high availability of several different types of NGS data from numerous individual genomes, it is now possible to look at multiple instances of many different genomic features simultaneously, so as to characterize their functional role and elucidate genetic and epigenetic phenomena. This requires a new generation of informatics systems and languages for querying heterogeneous datasets; it also requires the state of the art parallel computing strategies for distributing the computation upon clouds of computing elements, to achieve scalability and performance. Although most of current bioinformatics analysis tools do not support parallelization, lately cloud computing and high performance parallel systems, mainly based on had oop () and map reduce () frameworks, which are typically used in other areas, have also been adopted in bioinformatics (O'). A few specific parallel tools have been implemented (). In particular, bio pig () and seq pig () have been proposed for the efficient processing of bioinformatics programs using Pig Latin (), a high level language for batch data processing. Recently, also sparks eq () has been proposed as general purpose tool for processing of DNA and RNA sequencing data using the Apache Spark () engine. In this article, we propose geno metric Query Language gm ql with the associated data model and data management system, to query and compare multiple and heterogeneous genomic datasets for biomedical knowledge discovery. gm ql uses the Genomic Data Model (GDM) based on the notion of genomic region, which may span several bases. Each region can be compared with millions of other regions, typically using metric properties (this justifies the language name); in addition, GDM also covers metadata of arbitrary structure. gm ql is a high level declarative language that allows expressing queries easily over genomic regions and their metadata, in a way similar to what can be done with the well known Relational Algebra and Structured Query Language (SQL) over a relational database; thus, it does not require software programmer expertise. From a system perspective, gm ql is part of gen data 2020 (http://www.bioinformatics.deib.polimi.it/gendata/), a system, which supports a data warehouse layer for storing data files in their original formats, providing suitable privacy levels, and a data selection layer, enabling abstractions from file formats and parallelization. The work in is the closest to ours, as it reports a Genome Query Language (GQL) for NGS data using an SQL extension. Our approach exhibits two main differences with respect to GQL and to all mentioned previous works. First and foremost, they start from the reads of NGS machines, i.e. raw data, and thus they must address a number of problems for identifying regions of interest on the genome, which in the current practice are normally solved by ad hoc specific tools (e.g. mutation and peak callers); conversely, gm ql starts from processed datasets. Processing raw data from within an integrated system is potentially very powerful, as no information is left outside of the query system; but there is as well a risk of replicating efforts and of giving up the efficiency of specialized data analysis tools that are widely accepted by the scientific community. A second major difference with previous works is that none of them integrate metadata within their computation; conversely, gm ql supports metadata management. Thus, it can use metadata for sample selection and matching, and query results carry along metadata that can be inspected after query execution. Many widely available experimental data (e.g. in ENCODE and TCGA) provide processed datasets and metadata; thus, gm ql can directly be used on them. In addition, each research laboratory produces data in many processed formats; through gm ql they can be compared with both locally produced and publicly available data. In a mid-term perspective, gm ql will be the appropriate tool for querying millions of processed genomic datasets and samples that will become available.
