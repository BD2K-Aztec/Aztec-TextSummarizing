Motivation: paired end sequencing resulting in gapped short reads is commonly used for de novo genome assembly. Assembly methods use paired end sequences in a two step process, first treating each read end independently, only later invoking the pairing to join the contiguous assemblies (contigs) into gapped scaffolds. Here, we present elo per a pre-processing tool for pair end sequences that produces a better read library for assembly programs. Results: elo per proceeds by simultaneously considering both ends of paired reads generating elongated reads. We show that elo per theoretically doubles read lengths while halving the number of reads. We provide evidence that pre-processing read libraries using elo per leads to considerably improved assemblies as predicted from the lander waterman model. Availability: http://sourceforge.net/projects/eloper.

introduction sequencing a genome involves the production of a large number of relatively short sequences, termed reads, which collectively comprise the entire genomic sequence, several fold over. Reconstructing the genomic sequence from a set of such reads constitutes the assembly problem. A typical de novo assembler iteratively merges overlapping reads, until no additional overlap is detected (). To predict how a given library of reads will perform in the assembly process, the Lander Waterman (LW) statistical model is generally invoked (). paired end reads refer to the sequencing of short ($100 bp) portions of both ends of a DNA fragment. paired end sequencing was used extensively in Sanger sequencing of most large genomes and is also common for genome sequencing using high throughput methods. A paired end read amounts to more than two independent single end reads, as the two map to proximate regions in the genome, where the proximity is defined by the known size of the library of fragments. As useful as this information is, however, methods to assemble paired end data generally disregard the pairing information in the first stage of assembly that generates contigs, and invoke the pairing only later to build scaffolds. Here, we present elo per a pre-processing tool for a library of reads to be invoked before their submission to any assembler. elo per exploits the notion that the paired end information essentially doubles the read length, permitting the detection of up to double the original overlap while maintaining the minimum required sequence overlap. Thus, elo per detects 'gapped overlap' where sub-threshold overlaps occurring in both ends reach significant thresholds. elo per then returns the 'elongated' paired end reads according to the gapped overlap detected with all other reads in the library (). The result is a new library of paired end reads, longer than the original reads. The elo per processed library can be assembled using de novo assemblers (). Although ARACHNE () uses a similar approach as part of a full assembler, elo per allows an elongation pre-processing step followed by assembly using any assembler. Here, we show, both empirically and mathematically, that elo per processing leads to better assemblies.
