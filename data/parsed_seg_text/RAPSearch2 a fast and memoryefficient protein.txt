With the wide application of next generation sequencing (NGS) techniques, fast tools for protein similarity search that scale well to large query datasets and large databases are highly desirable. In a previous work, we developed rap search an algorithm that achieved a ∼20–90-fold speed up relative to BLAST while still achieving similar levels of sensitivity for short protein fragments derived from NGS data. rap search however, requires a substantial memory footprint to identify alignment seeds, due to its use of a suffix array data structure. Here we present rap search 2 a new memory efficient implementation of the rap search algorithm that uses a collision free hash table to index a similarity search database. The utilization of an optimized data structure further speeds up the similarity search another 2–3 times. We also implemented multi-threading in rap search 2 and the multi-thread modes achieve significant acceleration (e.g. 3.5X for 4 thread mode). rap search 2 requires up to 2G memory when running in single thread mode, or up to 3.5G memory when running in 4 thread mode. Availability and implementation: Implemented in C++, the source code is freely available for download at the rap search 2 website:

introduction the applications of next generation sequencing (NGS) in transcriptome sequencing () and meta genomics projects () have resulted in enormous amounts of sequence. A key step to analyzing these sequences is to identify the protein coding genes and their putative functions by similarity searches, which, for example, is useful for studying the functional content (), or the taxonomic composition (), of a microbial community. As a popular protein similarity search tool, BLAST (), however, has become a bottleneck for the computational analysis of massive NGS datasets. On the other hand, fast algorithms such as BLAT () can work up to 100 times faster than BLAST at identifying very similar protein sequences, but will still miss a substantial fraction ( 20%) of weaker similarities (). * To whom correspondence should be addressed to address this challenge, we developed a new protein database search tool rap search which follows the seed extension approach as used in BLAST, but is based on flexible length seeds on a reduced amino acid alphabet of 10 symbols, each representing a group of amino acids (). When tested on several NGS datasets, rap search achieved up to a 90X acceleration when compared with BLAST, while missing 5% of potential protein hits. However, because rap search uses a suffix array to index the database sequences for seed identification, it uses substantial memory for searches in large databases. Here, we present rap search 2 a new implementation of the rap search algorithm, which uses a collision free hash table to index a protein database. rap search 2 significantly reduces the memory requirement (e.g. from 8G to 2G when searching against the NCBI NR database) while further accelerating the similarity search process another 23 times. In rap search 2 we also implemented a multi-threading technique that allows users to accelerate the similarity search even further on multi-core CPUs.
