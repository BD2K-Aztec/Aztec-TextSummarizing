Motivation: meta genomic sequencing allows reconstruction of microbial genomes directly from environmental samples. Omega overlap graph meta genome assembler) was developed for assembling and scaffolding Illumina sequencing data of microbial communities. Results: Omega found overlaps between reads using a prefix suffix hash table. The overlap graph of reads was simplified by removing transitive edges and trimming short branches. unit igs were generated based on minimum cost flow analysis of the overlap graph and then merged to contigs and scaffolds using mate pair information. In comparison with three de Bruijn graph assemblers soap de novo id baud and meta velvet Omega provided comparable overall performance on a his eq 100-bp dataset and superior performance on a mi seq 300-bp dataset. In comparison with Celera on the mi seq data-set, Omega provided more continuous assemblies overall using a fraction of the computing time of existing overlap layout consensus assemblers. This indicates Omega can more efficiently assemble longer Illumina reads, and at deeper coverage, for meta genomic datasets. Availability and implementation: Implemented in C++ with source code and binaries freely available at http://omega.omicsbio.org.

introduction meta genome assemblers attempt to reconstruct genomes of microorganisms in a community from its meta genomic sequencing data. In recent years, many isolate genome assemblers have been developed for Illumina sequencing data using de Bruijn graphs [e.g. ABySS (), i dba (), all path (), Velvet () and soap de novo (and overlap graphs [e.g. SGA () and PEGASUS (. However, they can not be directly applied to meta genome assembly for the following reasons. First, isolate genome assemblers typically assume a uniform coverage depth across a genome. This assumption is used for identifying repeat regions in a genome and estimating the size of a genome. In meta genome assembly, however, genomes may have vastly different coverage depths depending on their relative abundances in a community. Second, isolate genome assembly only needs to resolve repeat regions within a single genome, while meta genome assembly also has to handle repeat regions between multiple genomes. Third, sequencing errors significantly convolute the assembly by introducing false overlaps between reads and disrupting true overlaps. Error correction can be performed for isolate genome assembly using consensus sequences. However, it is difficult to separate sequencing errors from single nucleotide polymorphisms (SNPs) in meta genome assembly. To address these challenges, some of the de Bruijn graph assemblers have been upgraded for Illumina meta genomic sequencing data, including meta velvet () and id baud (). In this study, the Omega overlap graph meta genome assembler) algorithm was developed specifically for meta genome assembly. Omega followed the general overlap graph (string graph) approach described in BOA () and PEGASUS (). Here, the overlap graph approach was adapted to meta genome assembly by addressing its differences from isolate genome assembly described above. The assembly performance of Omega was compared with soap de novo id baud and meta velvet on Illumina his eq 100-bp data and mi seq 300-bp data. soap de novo was selected because it was used for meta genome assembly in the human microbio me project () and many Joint Genome Institute studies. id baud and meta velvet were designed specifically for meta genome assembly. A widely used overlap layout consensus assembler, Celera (), was also compared using the mi seq 300-bp data.
