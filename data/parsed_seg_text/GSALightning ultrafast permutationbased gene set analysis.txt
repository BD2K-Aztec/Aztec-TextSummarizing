The computational speed of many gene set analysis methods can be slow due to the com-putationally demanding permutation step. This article introduces gsa lightning a fast implementation of permutation based gene set analysis. gsa lightning achieves significant speed up compared with existing methods, particularly when the number of gene sets and permutations are large. Availability and implementation: The gsa lightning R package is available on git hub at https:// githubcombillyhwgsa lightning and on R Bioconductor. The package also contains a comprehensive users guide with a step by step tutorial vignette.

introduction gene set analysis embodies a range of techniques for analyzing the functional and biological properties of differentially expressed genes. One common type of gene set analysis method, termed self contained method (), tests whether genes within a predefined gene set are collectively differentially expressed across two different experimental conditions. The gene set's significance is typically assessed through permutation testing. Due to the computationally demanding permutation tests, the speed of permutation based gene set analysis methods is often compromised. There is a need to address this computation issue, particularly when performing large scale analysis. As an example, for a genome wide expression analysis of target genes of regulatory elements (), the number of gene sets, each set being the target genes of a regulatory element, can reach tens of thousands. If there are expression measurements, and the gene set statistics are functions of the mean of the individual statistics. All these quantities can be computed efficiently using matrix products. Also, it is actually possible to perform the permutations using matrix products. The online Supplementary Materials provide details on how this can be done. Speed and memory efficiency are further increased by using sparse matrix computations whenever possible. When the number of permutations is large, gsa lightning breaks the permutations into batches. Each batch is handled separately and then combined to obtain the final results. The online Supplementary Materials provide further details, and also contain a justification of the equivalence between gsa lightning and GSA by comparing the two methods' program outputs. This justifies that gsa lightning does not sacrifice GSA's accuracy in order to achieve the speed up
