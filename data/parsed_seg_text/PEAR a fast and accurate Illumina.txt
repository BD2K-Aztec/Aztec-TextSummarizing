Motivation: The Illumina paired end sequencing technology can generate reads from both ends of target DNA fragments, which can subsequently be merged to increase the overall read length. There already exist tools for merging these paired end reads when the target fragments are equally long. However, when fragment lengths vary and, in particular, when either the fragment size is shorter than a single end read, or longer than twice the size of a single end read, most state of the art mergers fail to generate reliable results. Therefore, a robust tool is needed to merge paired end reads that exhibit varying overlap lengths because of varying target fragment lengths. Results: We present the PEAR software for merging raw Illumina paired end reads from target fragments of varying length. The program evaluates all possible paired end read overlaps and does not require the target fragment size as input. It also implements a statistical test for minimizing false positive results. Tests on simulated and empirical data show that PEAR consistently generates highly accurate merged paired end reads. A highly optimized implementation allows for merging millions of paired end reads within a few minutes on a standard desktop computer. On multi-core architectures, the parallel version of PEAR shows linear speedups compared with the sequential version of PEAR. Availability and implementation: PEAR is implemented in C and uses POSIX threads. It is freely available at http://www.exelixis-lab. org web software pear
introduction the Illumina sequencing platform can produce millions of short reads in a single run. The deep sequencing capability and low cost of the sequencing by synthesis technology is useful for a plethora of applications ranging from whole genome sequencing () to profiling microbial communities by sequencing the hypervariable regions of the 16S ribosomal RNA (rRNA) gene (). However, single end reads produced by the Illumina platform typically have a length that ranges from 75 to 300-bp. Furthermore, there is an exponential increase in error rates (ERs) along the reads (). The Illumina platform can also generate paired end reads by sequencing the forward and reverse strands of each target DNA fragment. If the target DNA fragment size is smaller than twice the length of the single end reads, that is, if there exists an overlap, the corresponding paired end reads can be merged into a fragment. By merging paired end reads, the overlapping region between them can also be deployed for correcting sequencing errors and potentially yield sequences of higher quality. Merging paired end reads is the first processing step in a plethora of sequence analysis pipelines. Hence, its accuracy is crucial for all downstream analyses. There exist several proof of concept mergers such as i tag (), bip es () and Shera (). Some production level mergers such as FLASH mago can dma goc and Salzberg, 2011), panda seq () and COPE () have also been recently introduced. Shera merges the reads by maximizing the number of matches between the paired end reads. Both, Shera and FLASH (see later in the text) ignore the quality scores of the base calls. Shera merges all reads and leaves it to the user to decide which merged reads are correct. Because it is a proof of concept implementation, it is up to 100 times slower than competing mergers. FLASH constructs merged reads that maximize the overlap length to matches ratio. FLASH requires the mean DNA fragment size and standard deviation of the fragment size as input parameters. Therefore, it can only merge paired end reads into fragments of 'almost' identical size. Furthermore, our tests show that FLASH performs poorly when the overlaps between reads are short (Section 3). COPE deploys an analogous approach as FLASH for finding the best overlap, but also takes into account the quality scores of mismatches. COPE is designed to handle deep genome sequencing datasets. Thus, it considers that km ers that occur infrequently are likely to be sequencing errors. COPE exhibits high memory requirements and also relatively long execution times. panda seq merges fragments by maximizing the probability of true sequence matches, given the observed sequences. It combines quality scores with sequence matches and thereby improves merging quality. In contrast to FLASH, panda seq works well with short overlap regions and does not require prior knowledge of the target DNA fragment size. However, it assumes that all paired end reads can be merged. Thus, if the sample contains *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited. DNA fragments that are at least twice as long as the single end reads, panda seq exhibits a high false positive rate (FPR). Finally, most current paired end mergers assume that the DNA fragments are longer than the individual single end reads. When this does not hold, for example when sequencing the V6 region of 16S rRNA genes of bacterial samples [fragment sizes range between 110 and 130-bp (with read lengths of 150-bp (see case C in), current mergers will generate erroneous results. Here we present PEAR, a fast and accurate paired end read merger. PEAR merges reads by maximizing the assembly score (AS) of the read overlap via a scoring matrix that penalizes mismatches with a negative value and rewards matches with a positive value. Our approach takes quality scores and sequence matches into account. It does not require preprocessing of the raw data or specifying the fragment size. Furthermore, PEAR neither requires prior information on read length nor target fragment size. It can reliably identify reads that can either be merged or need to be discarded. The program is accurate on datasets with (i) short overlaps and (ii) DNA target fragment sizes that are smaller than single end read lengths. To identify false positive merged reads, we propose a statistical test that is based on the observed expected alignment scores oes s. On simulated paired end reads with a mean overlap of 20-bp (Section 3.1), PEAR correctly merges 90.44% of the fragments with a FPR of 2.78% when our statistical test is disabled. It correctly merges 70.06% of the fragments with a FPR of only 0.48% when the significance level of the test is set to 1%. The best competing merger panda seq correctly merges 83.51% of the fragments, but with a FPR of 6.65%. We implemented PEAR in C. It includes an optimized memory management scheme that allows the user to specify the amount of random access memory (RAM) available for executing the program. Therefore, it can be deployed on off the shelf desktop and laptop computers as well as on high end multi-core servers. In Section 2.4 we outline why PEAR becomes faster when using less memory. Finally, the parallel version of PEAR scales linearly with the number of cores.
