Motivation: Multiple sequence alignment is a basic part of much biological research, including phylogeny estimation and protein structure and function prediction. Different alignments on the same set of unaligned sequences are often compared, sometimes in order to assess the accuracy of alignment methods or to infer a consensus alignment from a set of estimated alignments. Three of the standard techniques for comparing alignments, Developer, Modeler and Total Column (TC) scores can be derived through calculations of the set of homologies that the alignments share. However, the brute force technique for calculating this set is quadratic in the input size. The remaining standard technique, Cline Shift Score, inherently requires quadratic time. Results: In this article, we prove that each of these scores can be computed in linear time, and we present fast sp a linear time algorithm for calculating these scores. Even on the largest alignments we explored (one with 50 000 sequences), fast sp completed 2 min and used at most 2 GB of the main memory. The best alternative is q score a method whose empirical running time is approximately the same as fast sp when given sufficient memory (at least 8 GB), but whose asymptotic running time has never been theoretically established. In addition, for comparisons of large alignments under lower memory conditions (at most 4 GB of main memory), q score uses substantial memory (up to 10 GB for the datasets we studied), took more time and failed to analyze the largest datasets. Availability: The open source software and executables are available online at

introduction estimation of multiple sequence alignments for molecular datasets is fundamental to many problems in biology, including the prediction of protein function and structure and phylogeny estimation. Estimated alignments are often compared with other alignments in order to assess accuracy or to determine the features shared by two or more alignments. In addition, since different alignment methods can produce alignments that differ enough to introduce phylogenetic uncertainty () and alignment error increases with the size of the dataset (), the use of several alignments, and comparisons of these alignments, is advisable for large scale phylogenetic studies. * To whom correspondence should be addressed of the various methods for comparing an estimated alignment to a reference alignment, four are generally in use: the Developer score (also called the sp score for sum of pairs Modeler score, Total Column score and Cline Shift Score. The sp score and Modeler scores are quite similar: the sp score is the percentage of the homologies in the reference alignment that appears in the estimated alignment, and the Modeler score is the percentage of the homologies in the estimated alignment that appears in the reference alignment. Thus, each can be obtained by computing the number of shared homologies and then normalizing by either the number of homologies in the reference or true alignment. The Total Column score is the number of alignment columns shared by both alignments, and can also be normalized by the number of columns in one of the alignments. Finally, the Cline Shift Score () is computed by averaging the Cline Shift scores for each of the induced pairwise alignments. Each of these normalized scores ranges from 0% to 100%, with 0 indicating that the two alignments are maximally dissimilar for the criterion and 100% indicating that the two alignments are considered identical with respect to the criterion. Thus, these scores represent accuracy measures, and complementing these scores (subtracting them from 100%) produces the corresponding error metrics. While several methods have been developed for comparing alignments, only q score () and Lobster (available online at http://www.drive5.com/qscore and http://www.drive5 com lobster respectively) correctly compute the sp score. However, the computational complexity of these methods ie. their asymptotic running time has never been established. Clearly, all four scores can be computed in quadratic time using brute force techniques, and the Cline Shift Score (by definition) requires quadratic time. However, the sp score Modeler score and Total Column scores might not require quadratic time. In this article, we show that the sp score Modeler score and Total Column scores can each be computed in linear time time where n is the number of sequences and k is the length of the longer alignment]. We present a method, fast sp to compute the number of shared homologies between two alignments and prove that it runs in linear time. The result then follows, since each of the three scores can be obtained directly from this number. Since error scores are complements of these accuracy scores, fast sp can be used to compute error rates such as spf n (the percentage of true homologies missing in the estimated alignment) and spf p (the percentage of predicted homologies that are not present in the true alignment). Furthermore, fast sp can be used to evaluate the reliability of a given alignment with respect to a set of alignments, since it enables fast all pairs comparisons. Thus, fast sp is a basic tool for analyzing sets of multiple sequence alignments.

discussion the main observations we can make are these. When run on machines with sufficient memory (at least 8 GB for these datasets we studied), fast sp and q score have very close running times, but q score has higher peak memory usage. Thus, even though the two methods are not distinguishable by running time in this case, they differ substantially in terms of memory usage. On the other hand, when memory is limited to 4 GB, the two methods have substantially different running times for large alignments. Thus, in general the two methods can not be distinguished on alignments with small numbers of tax a but are distinguished on large alignments either with respect to running time (if memory is limited to 4 GB) or with respect to memory usage (when memory is not limited). Although the methods have different running times, it is evident that the differences in running time are a result of differences in their memory usage. But, why do we see these differences? Recall that fast sp has memory usage that grows only linearly with the reference alignment size, and does not need to keep the estimated alignment in memory; this can reduce the memory usage substantially. The most likely explanation is a simple one: q score uses more memory simply because it was not implemented with memory usage optimization as one of its objectives.
