Motivation: Simple tandem repeats are highly variable genetic elements and widespread in genomes of many organisms. next generation sequencing technologies have enabled a robust comparison of large numbers of simple tandem repeat loci; however, analysis of their variation using traditional sequence analysis approaches still remains limiting and problematic due to variants occurring in repeat sequences confusing alignment programs into mapping sequence reads to incorrect loci when the sequence reads are significantly different from the reference sequence. Results: We have developed a program, rev ister which is an automated pipeline using a local mapping reference reconstruction method to revise m is mapped or partially misaligned reads at simple tandem repeat loci. revis ster estimates alleles of repeat loci using a local alignment method and creates temporary local mapping reference sequences, and finally re maps reads to the local mapping references. Using this approach, rev ister was able to successfully revise reads misaligned to repeat loci from both simulated data and real data. Availability: rev ister is open source software available at http://rev ister sourceforge net
introduction with the advent of next generation sequencing technologies, sequencing approaches became the most common strategy for variation discovery in a population (). next generation sequencing technologies have enabled investigators to generate a huge amount of sequence data and to compare variants between different populations in a cost and time efficient way. Unfortunately, with their inherent sequencing errors and short sequence read lengths, data analysis for several kinds of repeat elements such as transposon elements and tandem repeats still remains limiting and problematic. The quality of variation discovery relies on the mapping results of sequence reads to a reference. Incorrect mapping or non mapping of sequence reads to the reference is mainly caused by inconsistency between sequences of the test subject and the reference, especially in repeat regions, and often results in invalid variant calling. Simple tandem repeat (STR) sequences in a test subject frequently show significant differences from a reference sequence (). This is likely due to mutation rates that have been estimated to be 10 2 10 6 mutation events per generation (), which is much higher than mutation rate (1.2  10 8 bp 1 generation 1 ) for a SNP single nucleotide polymorphism) in a unique sequence (). In our study of Brucella genomes (), we observed that mapping programs often assign high quality scores to incorrectly mapped reads when two or more tandem repeat loci contain the same motif with different repeat lengths and their flanking sequences show high similarity. This is because mapping program parameters are normally set to minimize the number of mismatch or insertion deletions in del bases in an alignment (Supplementary Figs S1 and S2). This mis mapping leads directly to invalid variant calls in repeat loci because the variation calling programs rely only on the mapping quality scores to filter out false positive variants from incorrectly mapped reads. In the human genome, we found that more than two third of STRs are overlapping or near (within 50 nt) transposon elements (Supplementary). Notably, at rich STRs are often discovered near the 3 0 ends of retrotransposons (), which frequently results in the left or right flanking sequence of an STR being highly replicated, while the other flanking sequence is unique (Supplementary). The sequence reads mapped to the incorrect STR loci due to length variation of the STRs can be remapped if flanking sequences on one side of the STRs are unique and the correct lengths of the STRs in the sequenced sample are known. Sequence reads are also often partially misaligned to a reference sequence if the reads contain in del variants and do not span enough of both flanking sequences of the locus. A few programs such as smr a () and g atk () realign sequence reads mapped to the in del variant loci to correct misalignment, but their performance is poor for the reads mapped to STR loci containing long INDELs. To correctly realign sequence reads at the in del variant loci, the programs require correctly mapped reads supporting the variants, but the reads containing tandem repeat variation often fail to be mapped to the correct loci and as a result the programs do not obtain sufficient read depth to support the correct variant calls. Several programs, including pin del (), din del () and soap in del (), have been developed to find insertions and deletions using remapping of *To whom correspondence should be addressed. unmapped reads or local alignment approaches, but they do not handle reads mapped to incorrect loci. Although lob str () has been developed to profile short tandem repeat loci using its own alignment approach, it is limited to only analyzing 26-mer motif repeat loci. To overcome the difficulty of variant calling at STR loci in a bacterial genome, we applied an iterative backbone remapping and assembly method to generate the genome sequence of bacterial field isolates and to call their correct variants (). The method has successfully detected in del variants including tandem repeat variants shorter than the read length, but is not applicable to eukaryotic genomes because many variants at diploid genomes are heterozygous. Analysis of heterozygous STR variants is even more challenging compared with SNPs or short INDELs because two different non reference alleles are frequently discovered from an STR locus and the alleles at the STR locus can be different between individuals (). Here, we describe rev ister (Revise Simple Tandem repeat Error Reads), which is an automated pipeline using a 'local mapping reference reconstruction method' to revise m is mapped (mapped to incorrect position) or partially misaligned (mapped to correct position but one of ends misaligned) reads at STR loci. It takes fast q formatted files, a reference sequence file and a list file containing STR locations as inputs and uses BWA as an initial mapping program. It subsequently realigns reads unmapped by BWA () using BLAT (), and conducts local assembly with all aligned reads to an STR locus. From the local assembled result, new local mapping reference sequences are generated, and all mapped reads containing more than one mismatch in their alignments and unmapped reads are mapped again to the new local mapping references. Reads mapped to the local mapping references are relocated to the original reference and compared with the original alignments to choose the best alignment. The performance of rev ister was compared with two mapping programs, including BWA and Bowtie2 (), and a realignment program, g atk (), using three different test datasets.

discussion here we presented rev ister as an automated pipeline to revise m is mapped or partially misaligned sequence reads to STR loci, which frequently have high variation rates resulting in misalignment of reads. The STR loci are often found near the beginning or end of long repeat sequences such as transposon elements, which results incorrect mapping of reads because of high similarity found in the flanking sequence. rev ister creates local mapping references for each STR locus from a graph generated from mapped reads and then re maps the sequence reads to the local mapping references. Using this approach, we were able to successfully correct reads misaligned to the STR loci from BWA alignments for both simulated data and real data. Overall, we observed that rev ister could align 2  more reads to support correct alleles of STR loci for haploid genomes than the other programs. In application to the human genome data, we used indirect comparison methods to evaluate rev isters performance because it is difficult to identify true alleles of STR loci in a given human genome. Many STR in the human genome are parts of transposon elements, which may be distributed in more than several tens of thousands of copies (Supplementary Figs S3 and S4). In such cases, mapping programs perform poorly to initially map sequence reads to correct loci. rev ister like other mapping software, will find it difficult to correctly identify note The exon targeted sequence reads of four human genomes were mapped by BWA to the NCBI build 37 human genome reference sequence and their alignments were revised by rev ister. The same sequence reads were mapped by two different methods including PE and SE for comparison.. Numbers of reads, aligned by two SE methods, supporting non reference allele candidates commonly detected by two different PE methods. Because allele candidates of PE methods have higher reliability than that of SE, the numbers of reads, which were aligned by rev ister SE and BWA SE and concordant with non reference allele candidates detected by rev ister PE and BWA PE for human exo me sequence (NA19153), were compared with validate improvement of alignments after rev isters revision of data from SE approaches allele candidates and realign reads for such loci. This issue, common to for other mapping and genotyping programs, may be reduced as advanced sequencing technologies begin producing longer reads than current technologies. With the traditional resequencing approach, many researchers consider mis mapping of reads a difficult problem yet to be resolved, while a few methods have been developed to revise partially misaligned reads. rev ister is the first program to revise not only partially misaligned reads but also m is mapped reads to STR loci. Like other programs, its performance can be improved in the future. First, its performance is greatly affected by the initial mapping results from BWA and BLAT. In our comparison, we observed that Bowtie2 showed better performance than BWA. rev ister currently uses BWA for the initial mapping (because of the x a tags. The information in the tags are used only to revise PE), but an additional module to use other mapping programs with better performance will be implemented in near future. Second, in the local mapping reference reconstruction step, the current version of rev ister searches for only exact match of two reads to connect them in a graph to reduce the possibility of creating a graph supporting false positive alleles. This may result in not creating any graph with reads containing sequencing errors. Time efficiency is also a limitation of the current version (Supplementary). It has been implemented in PERL, so we would expect significant speed up in the next version to be implemented in C or C. The significant advantage of rev ister is fault tolerant automation, which is one of the most important functions for complex pipelines. rev ister has been designed to be fully automated and to easily recover an analysis after a process interruption by a system failure such as a power failure. When the analysis process is restarted, rev ister begins the process from the unfinished step if users type the same command as the original run.
