Motivation: Biological network querying is a problem requiring a considerable computational effort to be solved. Given a target and a query network, it aims to find occurrences of the query in the target by considering topological and node similarities (i.e. mismatches between nodes, edges, or node labels). Querying tools that deal with similarities are crucial in biological network analysis because they provide meaningful results also in case of noisy data. In addition, as the size of available networks increases steadily, existing algorithms and tools are becoming unsuitable. This is rising new challenges for the design of more efficient and accurate solutions. Results: This paper presents app aga to a stochastic and parallel algorithm to find approximate occurrences of a query network in biological networks. app aga to handles node, edge and node label mismatches. Thanks to its random ic and parallel nature, it applies to large networks and, compared with existing tools, it provides higher performance as well as statistically significant more accurate results. Tests have been performed on protein protein interaction networks annotated with synthetic and real gene ontology terms. Case studies have been done by querying protein complexes among different species and tissues. Availability and implementation: app aga to has been developed on top of cuda c þþ Toolkit 7.0 framework. The software is available online http://profs.sci.univr.it/$bombieri/APPAGATO.

introduction technological advances have led to the inference and the validation of structured interaction networks involving genes, proteins, drugs, phenotype and diseases (). According to the data type, such networks are referred to as (i) protein protein interaction (PPI) networks representing either physical or functional interactions among proteins; (ii) gene regulatory networks that express how the activity of genes is regulated; (iii) metabolic networks describing biochemical reactions between chemical compound of cells; and (iv) signalling networks representing inner outer cell communications. A typical example that highlights the advantages and possibilities of analysing interaction relationships is protein function prediction. Although sequence homology is commonly used to functionally annotate proteins, a great amount of them remained uncharacterized (). In disease studies, genes showing similar phenotypes tend to be neighbours in protein interaction networks and their aggregation in connected sub-networks is effective to detect biomarkers (). Also, finding similar functional and topological sub-networks helps analysing the conservation among species (). In all these applications, graphs serve as the underlying structures for representing biological networks (For the sake of clarity, in this article, we use the terms graph and network indistinctly.) and graph algorithms solve problems such as network alignment, network querying, motif extractions and network perturbation (; mal odd ogn in and Pr zu lj 2015;). In this article we address the problem of approximate network querying, which finds, in a target network, similar occurrences of a so called query network. The notion of similarity takes into account both the similarities between target nodes and query nodes, and a cost measuring the differences of nodes and their connections. An approximate network querying algorithm has to find the query occurrences, among all possible, with the maximum combined similarity. Querying tools that deal with similarities are effective in biological network analysis because they provide results also in case of noisy data. They are also suitable in the case of partial knowledge of users when formulating queries. Furthermore, they can be used to compare data from different species where some fundamental and functional structures are partially preserved. Solving approximate network querying implies applying instances of subgraph isomorphism, which is a np complete problem (). In literature, several heuristics have been proposed to solve such a problem in reasonable running time. Examples include restricting the topology of queries to paths or trees (), applying network alignment strategies (), dealing with node similarities and ignoring the query topology (), fixing the topology and computing differences of node labels (). Other methods consist of building indexes to reduce the query time (); filtering the set of possible similar target data (); to find only exact occurrences of the query in the network (); finding the largest part of the query exactly contained in the target graph and replace the query edges not present in the target with paths (). We have created app aga to a tool that relies on an iterative sampling method (), to compute functional and topological similarities between a query and a target network. Through a matching probability matrix and a weighted sampling procedure, it selects a seed from which the query target matching starts. Then, by associating a cost to each approximation, it iteratively extends the match by selecting the approximations with the lowest possible cost. The algorithm runs K times and returns a set of K approximate matches. app aga to performs approximate network querying by considering the topology of query, taking into account node and edge deletions together with differences on node labels to speed up the querying process in large biological networks, app aga to has been implemented to run on graphics processing units (GPUs). Owing to their low cost, high performance and easy integration to any personal computer, GPUs have been increasingly applied to accelerate bioinformatics problems (). Our aim is to handle large biological networks in a reasonable time yielding accurate results. We compare app aga to with res que () and NeMa () because, to the best of our knowledge, they are the most efficient and stable tools in literature close to app aga to on both the problem they address and on the approximation concept they assume. We run the tools with different PPI networks as input and compared nodes by using similarities of protein sequences and functional gene ontology annotations. We extensively compare the tools in terms of running time, costs of returned matches and accuracy in finding protein complexes among different species. The results show that app aga to outperforms the other two tools, yielding more accurate results on large PPI networks.
