Motivation: Probabilistic logic programming offers a powerful way to describe and evaluate structured statistical models. To investigate the practicality of probabilistic logic programming for structure learning in bioinformatics, we undertook a simplified bacterial gene finding benchmark in PRISM, a probabilistic dialect of Prolog. Results: We evaluate Hidden Markov Model structures for bacterial protein coding gene potential, including a simple null model structure, three structures based on existing bacterial gene finders and two novel model structures. We test standard versions as well as a dph length modeling and three state versions of the five model structures. The models are all represented as probabilistic logic programs and evaluated using the PRISM machine learning system in terms of statistical information criteria and gene finding prediction accuracy, in two bacterial genomes. Neither of our implementations of the two currently most used model structures are best performing in terms of statistical information criteria or prediction performances, suggesting that better fitting models might be achievable. Availability: The source code of all PRISM models, data and additional scripts are freely available for download at: http://github com so mork codon hmm
introduction protein coding potential has long been recognized as the most important signal for automated gene finding (). The introduction of Hidden Markov Models (HMMs) for gene finding by sparked the production of a large number of hmm based single sequence gene finders that capture this signal and other signals (). * To whom correspondence should be addressed restricting our survey to the simplest case of bacterial gene finding the basic codon structure of protein coding genes has so far been modeled using the following structures: The eco parse gene finder introduced by is based on a standard HMM architecture with a silent state governing codon distributions via transitions to 64 separate three state submodels where each state of the codon submodels had fixed emissions of a single character introduced the Generalized Hidden Markov Model g hmm a type of HMM with duration offering the possibility of emissions of sequences rather than just characters from each state (). Most single sequence de novo gene finders have since been based on g hmms using either emissions of codons according to a three periodic inhomogeneous Markov Chain () or using higher ordered emissions, typically fifth ordered () or variable ordered emissions (). The single character emitting HMM based gene finder models has subsequently been elaborated by also using higher ordered emissions (), as well as using Acyclic Discrete Phase type length modeling (), in easy gene and a gene (). A large number of different HMM architectures have been developed during the recent decades including profile hmms (), pair hmms (), input output HMMs or transducers (), factorial hmms () and mixed memory HMMs (). These models each combine different numbers of emitted sequences, hidden state chains, delete and insert states and different conditioning schemes for emission probabilities and transition probabilities. Employing as efficient model structures as possible for biological sequence analysis is paramount for coping with the vast amounts of sequence data currently being generated. The structure space of possible different combinations is large and exploring it for efficient models for biological sequence analysis is limited by the time consuming development of dedicated machine learning algorithms and benchmarking procedures. Additionally, efforts to directly compare models are clouded by implementation differences and the heuristic fine tuning s developed through the decades that optimize the models in terms of the sequence analysis task at hand. To overcome these challenges, we use the probabilistic logic programming language and machine learning system PRISM. PRISM offers a generic representation of a large number of diverse model types that subsumes HMMs, sc fgs and Bayesian Networks. The PRISM machine learning system uses a general set page 637 636642

discussion the findings of this study have been based on very architecturally simple models of protein coding potential only. We have used bacterial gene finding as a test environment favoring a thorough comparative test of the most prominent current single sequence bacterial gene finder model structures. Our results are not directly comparable to prediction performances of current state of the art gene finders in absolute terms, since we do not employ the heuristics that have been carefully developed through the last decades. However, as more and more data a masses we need as powerful models as possible. We propose that systematic testing of underlying model structures in a language where the model is foregrounded is a valuable approach to constructing reliable models for real world applications.

conclusion we have developed and tested a number of both new and existing gene finder architectures for modeling protein coding potential in page 641 636642 for each of the model versions, values are reported for comparisons within class only. Alternative hypothesis is that row entries are greater than column entries. a generalized framework that permits direct comparisons of the performance of the underlying model structures. Our approach demonstrates that there are very efficient model structures hidden in the vast structure space of non-standard HMMs. Specifically, the novel structures presented here seems promising candidates for advancing gene finding and additional biological sequence analysis tasks that rely on protein coding potential. Additionally, the general approach that we have used for exploring HMM structures for capturing protein coding potential is a promising route to exploring and discovering efficient models used for more complex biological sequence analysis tasks (such as RNA structure prediction or modeling viral genomes). Lastly, we have shown that the probabilistic logic programming language, PRISM, is a capable framework for the rapid prototyping and benchmarking of statistical models in bioinformatics, up to datasets the size of small (bacterial) genomes.
