
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:44+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Composition and abstraction of logical regulatory modules: application to multicellular systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Nuno</forename>
								<forename type="middle">D</forename>
								<surname>Mendes</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory">IGC</orgName>
								<orgName type="institution">Instituto Gulbenkian de Ciê ncia</orgName>
								<address>
									<addrLine>Rua da Quinta Grande 6</addrLine>
									<postCode>P-2780-156</postCode>
									<settlement>Oeiras</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Fré</forename>
								<surname>Dé Ric Lang</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="institution">Inria Grenoble – Rhô ne-Alpes and LIG</orgName>
								<address>
									<addrLine>655 av de l&apos;Europe, 38 334 St Ismier Cedex</addrLine>
									<settlement>Montbonnot</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Yves-Stan</forename>
								<surname>Le Cornec</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="institution" key="instit1">IBISC</orgName>
								<orgName type="institution" key="instit2">Université d&apos;Evry Val d&apos;Essonne</orgName>
								<address>
									<addrLine>40, Rue du Pelvoux</addrLine>
									<postCode>91020</postCode>
									<settlement>Evry Cedex</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Radu</forename>
								<surname>Mateescu</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="institution">Inria Grenoble – Rhô ne-Alpes and LIG</orgName>
								<address>
									<addrLine>655 av de l&apos;Europe, 38 334 St Ismier Cedex</addrLine>
									<settlement>Montbonnot</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Gregory</forename>
								<surname>Batt</surname>
							</persName>
							<affiliation key="aff3">
								<orgName type="department">Domaine de Voluceau</orgName>
								<orgName type="institution">Inria Paris – Rocquencourt</orgName>
								<address>
									<postCode>78153</postCode>
									<settlement>Le Chesnay</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Claudine</forename>
								<surname>Chaouiya</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory">IGC</orgName>
								<orgName type="institution">Instituto Gulbenkian de Ciê ncia</orgName>
								<address>
									<addrLine>Rua da Quinta Grande 6</addrLine>
									<postCode>P-2780-156</postCode>
									<settlement>Oeiras</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="institution" key="instit1">TAGC</orgName>
								<orgName type="institution" key="instit2">INSERM U1090 AMU</orgName>
								<address>
									<addrLine>163 avenue de Luminy</addrLine>
									<postCode>13288, Cedex 9</postCode>
									<settlement>Marseille</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Composition and abstraction of logical regulatory modules: application to multicellular systems</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">6</biblScope>
							<biblScope unit="page" from="749" to="757"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt033</idno>
					<note type="submission">Systems biology Advance Access publication January 22, 2013 Received on October 22, 2012; revised on January 11, 2013; accepted on January 14, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Martin Bishop are freely available for academic users. Files needed to reproduce our results are provided at http://comp bio.igc.gulbenkian.pt/nmd/node/45. Contact: chaouiya@igc.gulbenkian.pt Supplementary information: Supplementary data are available at Bioinformatics online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Logical (Boolean or multi-valued) modelling is widely used to study regulatory or signalling networks. Even though these discrete models constitute a coarse, yet useful, abstraction of reality, the analysis of large networks faces a classical combinatorial problem. Here, we propose to take advantage of the intrinsic modularity of inter-cellular networks to set up a compositional procedure that enables a significant reduction of the dynamics, yet preserving the reach-ability of stable states. To that end, we rely on process algebras, a well-established computational technique for the specification and verification of interacting systems. Results: We develop a novel compositional approach to support the logical modelling of interconnected cellular networks. First, we formalize the concept of logical regulatory modules and their composition. Then, we make this framework operational by transposing the composition of logical modules into a process algebra framework. Importantly, the combination of incremental composition, abstraction and minimization using an appropriate equivalence relation (here the safety equivalence) yields huge reductions of the dynamics. We illustrate the potential of this approach with two case-studies: the Segment-Polarity and the Delta-Notch modules. Availability and implementation: GINsim</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The growing number of published models shows the suitability of qualitative logical modelling to study regulatory and signalling networks (e.g.<ref type="bibr" target="#b2">Calzone et al., 2010;</ref><ref type="bibr">Faureét al., 2009;</ref><ref type="bibr" target="#b22">Naldi et al., 2010;</ref><ref type="bibr" target="#b27">Saez-Rodriguez et al., 2009</ref>). However, when dealing with large networks, a classical combinatorial explosion arises, hampering efficient analyses of the dynamical properties of these systems, in particular, reachability properties. Although efficient algorithms have been proposed to identify all stable states via static analysis (e.g. de<ref type="bibr" target="#b8">Jong and Page, 2008</ref>; Dubrova and<ref type="bibr" target="#b9">Teslenko, 2011;</ref><ref type="bibr" target="#b25">Naldi et al., 2007</ref>), reachability analysis is hard to perform because it requires exploring the dynamics. To address this issue, we propose to rely on the concepts of modularity and compositionality, focusing on the multi-valued logical formalism, initially defined by Thomas and co-workers (<ref type="bibr" target="#b33">Thomas, 1991</ref>). Modularity has emerged as a key feature of molecular networks (e.g.<ref type="bibr" target="#b35">Wagner et al., 2007</ref>), but a precise definition of functional regulatory modules is still lacking, let alone a method to decompose large intricate networks into such functional modules. Nevertheless, when cellular patterns are governed by both inter-cellular signals and intra-cellular regulatory networks, it is natural to consider each cellular network as a module. Moreover, based on previous knowledge, sub-networks are often attributed specific functions within complex cellular processes. This is the case of the cell cycle control for which specific modules are associated to check-points, entry or exit control of specific phases, etc. In<ref type="bibr">Faureét al. (2009)</ref>, a logical model was defined by combining three modules involved in the control of the budding yeast cell cycle. Logical modelling was also applied to multi-cellular networks controlling early embryonic developmental processes in Drosophila (<ref type="bibr" target="#b5">Chaves et al., 2005;</ref><ref type="bibr" target="#b14">Gonzaíez et al., 2008;</ref><ref type="bibr" target="#b29">Sa´nchezSa´nchez et al., 2008</ref>). The composed models cited above were manually defined from smaller modules. Indeed, little work on model composition has been carried out, although it has been identified as a major goal in systems biology (<ref type="bibr" target="#b32">Stelling et al., 2011</ref>). Generally, existing composition procedures are not automatic and aim at properly defining a composed model, while little attention is paid to the analysis of the (potentially very large) associated dynamics (<ref type="bibr" target="#b26">Randhawa et al., 2010;</ref><ref type="bibr" target="#b30">Schulz et al., 2006;</ref><ref type="bibr" target="#b31">Snoep et al., 2006</ref>). In any case, these studies mainly focus on biochemical reaction networks. Concerning the composition of logical regulatory modules (LRMs), a framework based on high-level Petri nets has been developed, providing a formal and systematic procedure (<ref type="bibr" target="#b4">Chaouiya et al., 2011</ref>). However, it does not solve the scalability issue of the analysis since the resulting composed models have still to be analysed in a monolithic manner. *To whom correspondence should be addressed. ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com<ref type="bibr" target="#b26">Randhawa et al. (2010)</ref>consider models in the form of sets of non-linear differential equations and propose three different ways of combining sub-models: composition, fusion and aggregation. Model composition and fusion, respectively, keep or eliminate references to the original sub-models, while model aggregation requires that individual sub-models come with their input and output ports (similar to our definition of LRMs). These notions are important to distinguish different types of model combination, but, again, they do not address the issue of analysing the resulting models. In this article, we simply refer to the combination of models as model composition. Process algebras aim at representing and analysing complex interacting (discrete) systems. This framework has led to the development of compositional approaches that mitigate the combinatorial explosion problem through the minimization of the individual dynamics while preserving properties of interest, and then by incrementally composing and minimizing intermediate dynamics, until a description of the global behaviour is obtained. Process algebras have already been considered for biological processes (see, e.g. Ciocchetta and Hillston, 2009 and references therein), adopting different modelling approaches. Recently, a compositional algorithm was proposed for gene regulatory networks modelled as piecewise-linear ODE systems to check the reachability of a specific steady state from an initial condition (<ref type="bibr" target="#b15">Go¨sslerGo¨ssler, 2011</ref>). In contrast, we determine all stable states reachable from a given initial condition (see Section 4 for a comparison of the two approaches). In this article, we propose a new computational approach to cope with the combinatorial explosion that hampers proper analyses of models defined as compositions of LRMs. For simplicity, we restrict ourselves to the composition of identical modules, which is often the case of multi-cellular systems. In any case, this constitutes an important class of applications that notably includes most of the patterning problems in developmental biology. Furthermore, we are concerned with the reachability of stable states that is a property of real interest for differentiation regulatory networks. We thus define a framework to compose logical modules by means of logical integration functions describing how modules interact with their neighbours. We establish a constructive method to determine the dynamics of the composition from the dynamics of the individual modules and their interactions. Then, we rely on process algebra techniques to generate, abstract and minimize the behaviours of the modules, yet preserving reachability properties. These dynamics are iteratively combined and minimized, to obtain a final reduced description of the dynamics of the composed model. Minimization relies on an equivalence relation, which is chosen depending on the property to be preserved. Here, we rely on the safety equivalence that preserves the reachability of the stable states, while ensuring significant reductions of the dynamics. For the implementation, we use the CADP toolbox [Construction and Analysis of Distributed Processes (<ref type="bibr" target="#b13">Garavel et al., 2011)]</ref>to specify the dynamics of the logical modules and to implement operations of abstraction, minimization and incremental composition. The article is organized as follows. First, in Section 2, we introduce the modelling framework with formal definitions of LRM, logical integration function, composition rules, as well as the corresponding dynamics. Section 3 presents the principles of abstraction and minimization, relying on classical process algebra operations; other implementation aspects are also briefly discussed. Section 4 includes the application of our procedure to the Segment-Polarity and the Delta-Notch modules. These case studies illustrate the potential of our approach to analyse crucial properties of composed LRMs dynamics that are far too large to be comprehensively tackled with currently available tools.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>This section introduces LRMs and their composition, which results in a unique LRM. Furthermore, it presents the dynamics of LRMs represented as State Transition Graphs (STGs). Importantly, we prove that composing the individual dynamics is equivalent to constructing the dynamics of the composed model (formal definitions and proof of the theorem are provided in the Supplementary Materials).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Logical regulatory modules and their dynamics</head><p>A schematic representation of a four-component LRM is displayed in<ref type="figure" target="#fig_0">Figure 1A</ref>. In this view, an LRM is an open system with two kinds of components. Proper components and their regulatory interactions define the internal dynamics of the system, while input components represent external stimuli. Proper components are subject to regulatory effects of other components, whereas input components are unconstrained (their values may be set by the environment or by other modules during the composition). DEFINITION 1. An LRM is defined by a triplet N ¼ ðG, U, KÞ, where: G ¼ g i È É i2LG is the indexed set of the proper components (L G is the corresponding set of indices); U ¼ u i f g i2LU is the indexed set of the input components (L U is the corresponding set of indices); C ¼ G [ U ¼ c i f g i2LC is the set of all the components. Each component c i 2 C is associated with a domain D i ¼ 0,. .. , M i f g N and the variable v i 2 D i denotes its level. The state space S is given by Q i2LC D i and v 2 S denotes a state. K ¼ ðK i Þ i2LG are the logical regulatory functions of the proper components; 8g i 2 G, K i : S ! D i , and K i ðvÞ is the target value of g i in state v, i.e. the value towards which it evolves. Briefly, the variable associated to a component of an LRM (gene, protein, etc.) represents its functional level (e.g. activity or concentration). Generally, this variable is Boolean, but some situations require additional values (see Thomas and D'<ref type="bibr">Ari, 1990</ref>). The logical regulatory functions define the evolution of the corresponding proper components depending on the levels of their regulators. Hence, given a state (current levels of all the components), some components may remain stable, while others may be called to change their values, giving rise to state transitions. The asynchronous dynamics of an LRM is represented by an STG (see Definition S1 in the Supplementary Materials and<ref type="figure" target="#fig_0">Fig. 1B</ref>for an illustration). The successors of a state v are defined by all transitions going out of v: input transitions (towards states that differ from v only by the value of an input component) and proper transitions over components g i 2 G such that K i ðvÞ À v i 6 ¼ 0 (i.e. called to update in state v). In this discrete framework, stable states are those with no outgoing transitions. Because input components freely vary, there are no such states for an LRM with inputs: each state is connected to all states that differ only by the value of an input variable. This leads to the definition of strong and weak stable states with respect to the proper components (see<ref type="figure" target="#fig_0">Fig. 1B</ref>and<ref type="bibr" target="#b23">Naldi et al., 2012</ref>): in strong stable states, proper components remain stable whatever the variation of the inputs, while in weak stable states, proper components are stable only for specific values of the inputs. In practice, since we are interested in reachability properties from an initial condition s 0 , instead of the full STG, we consider only the sub-graph that is reachable from s 0 (Definition S2 in the Supplementary Materials).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Module composition</head><p>To compose LRMs, one needs to specify how they influence each other. This is done by first specifying a neighbourhood relation for each input component, which is then mapped to proper components of its neighbouring modules. This mapping, along with the specification of a logical integration function, determines how signals are combined. Thus, the evolution of mapped inputs depends on the evolution of the arguments of their integration function, whereas unmapped (free) inputs remain unconstrained. Finally, regulatory effects of mapped inputs are replaced by the (integrated) regulatory effects from the components they are mapped to. This amounts to adequately redefining the logical functions of proper components regulated by mapped inputs, which are removed (reduced) following the reduction method introduced in<ref type="bibr" target="#b24">Naldi et al. (2011)</ref>. Definition 2 below formalizes the composition of r LRMs</p><formula>N ðkÞ À Á k¼1, ..., r</formula><p>. For simplicity, we assume that for all distinct k, k 0 (in f1,. . .</p><formula>1 ¼ v 2 ¼ v 3 ¼ 0 (respectively v 1 ¼ v 2 ¼ v 3 ¼ 1</formula><p>) define a strong (respectively weak) stable state with respect to the proper components. (C–F) Composition of two instances of this LRM. A relabelling of the components ensures their uniqueness: component g i of module M j (j-th instance of the LRM) becomes g ij. In panel (C), the input g 01 of M 1 is mapped to the proper component g 22 of module M 2 : Mðu 01 Þ ¼ ðZ 01 , h 01 Þ, with Z 01 ¼ g 22 È É and h 01 the identity. For the sake of brevity, the dynamics are truncated at depth 2 from the initial states. Panel (D) (respectively E) displays the (truncated) STG of M 1 (respectively M 2 ) from the initial state v ð1Þ 0 ¼ ð1, 1, 1, 0Þ [respectively v ð2Þ 0 ¼ ð1, 0, 1,<ref type="bibr">0Þ]</ref>. These states are compatible:</p><formula>v 01 ¼ v 22 ¼ h 01 ðv 22 Þ ¼ 1. Panel (F)</formula><p>displays the composed STG: transitions over g 01 are lost (g 01 is a mapped input), while transitions over g 02 are preserved. The (double) transition that sets g 12 to 1 from the initial state v ð2Þ 0 in panel (E) gives rise to two transitions in panel (F), the first leaving the initial state v 0 , the second leaving v 3. Likewise, the (double dashed) transition that sets g 21 to 0 from the initial state v ð1Þ 0 has four counterparts: transitions from v 0 ,</p><formula>v 1 , v 2 and v 4 DEFINITION 2. Consider r LRMs N ðkÞ ¼ G ðkÞ , U ðkÞ , K ðkÞ À Á , k ¼ 1</formula><p>,. .. , r and the composition rule M defined over the set of all the input components such that, for any input g j 2 U ðkÞ , Mðg j Þ ¼ Z j , h j À Á with Z j S k 0 6 ¼k G ðk 0 Þ , the set of proper components mapped to g j ; h j : Q gi2Zj D i ! D j , the logical integration function defining the behaviour of g j (if Z j ¼ ;, g j remains free and h j is the empty function).</p><p>Then the composition of the r LRMs, denoted</p><formula>N M N ðkÞ È É k¼1, ..., r</formula><p>, is an LRM N ¼ ðG, U, KÞ with: G ¼ S k¼1, ..., r G ðkÞ , the set of proper components, and U ¼ S k¼1, ..., r ðU ðkÞ n e U ðkÞ Þ, the set of input components (where e U ðkÞ ¼ fg j 2 U ðkÞ j Z j 6 ¼ ;g is the set of mapped input components), C ¼ G [ U and L C the corresponding set of indices; S ¼ Å i2LC D i the state space;</p><p>The logical regulatory functions ðK i Þ i2LG are defined adequately for any proper component g i 2 G ðkÞ : 8v 2 S, K i ðvÞ ¼ K ðkÞ i ðwÞ, w 2 S ðkÞ , s.t. 8g j 2 C ðkÞ n e U ðkÞ , w j ¼ v j and 8g j 2 ~ U ðkÞ , w j ¼ h j vj Zj .</p><p>Note that nothing in our definition of LRM composition requires the individual modules to be identical; they can be different LRMs provided that they do not overlap (i.e. do not share identical proper components). Therefore, even if our applications involve only identical networks, the proposed framework is generic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Dynamics of composed modules</head><p>We now proceed with the characterization of the dynamics of composed models, as our aim is to check reachability properties over these dynamics. The composition of STGs can be formally defined and the dynamics of the LRM, composed from r modules, equals the composition of the individual dynamics of the modules (see Theorem 1 below). In other words, to study the dynamics of a composed model, we can either compose the modules and then construct and analyse the (large) STG or analyse the modules dynamics in a compositional manner. Definitions and proof of the theorem are provided in the Supplementary Materials. Here, we give an intuitive introduction to STG composition and include our main result ensuring the compositionality of our approach. Composing STGs leads to a new STG, where the states result from all the combinations of compatible states of the original STGs. States are said compatible if the values of the mapped inputs equal the results of their integration functions, considering the values of the relevant proper components (see formal Definition S3 in the Supplementary Materials). Transitions going out of a composed state involve only proper components and free inputs, if any free input remains after the composition. Hence, considering a particular state s in the STG of one module, the transitions leaving s have their counterparts in the composed dynamics in all states resulting from the composition of s with compatible states of the others STGs. Moreover, any transition going out of s that involves a mapped input is accounted for by (or synchronized with) transitions over proper components involved in the integration function of this input. Panels D–F in<ref type="figure" target="#fig_0">Figure 1</ref>illustrate the composition of two STGs reachable from two compatible initial states. The following theorem asserts that the dynamics of the composition of LRMs matches the composition of their individual dynamics. Importantly, this also applies to the composition of STGs reachable from (compatible) initial conditions.</p><formula>THEOREM 1. Consider N ¼ N M N ðkÞ È É k¼1</formula><p>, ...r the LRM defined as the composition of r LRMs. The STG E N of N is equal to the composition of the r STGs:</p><formula>E N ¼ N M E ðkÞ È É k¼1, ..., r :</formula><p>So far, we have defined the framework for LRM composition and shown that one can equivalently generate the dynamics of the composed model or generate the individual dynamics and compose them in any order. The next section is devoted to the implementation of this framework. Because compositional analysis has been well studied in the framework of process algebras, and efficient tools have been developed, we recast our original problem in the realm of process algebras.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">IMPLEMENTATION</head><p>To alleviate the combinatorial explosion of the dynamics associated with LRMs, we rely on classical abstraction and minimization techniques. Here, we describe the key features of the implementation. More details can be found in the Supplementary Materials.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">LTS abstraction and minimization</head><p>Process algebra techniques apply to Labelled Transition Systems (LTSs) representing the dynamics to be analysed. Basically, in contrast to STGs where all the information is stored in the states, in an LTS the information is put onto transition labels. These refer to actions performed by the transitions (here, component updates). Converting an STG into an LTS is thus quite direct. The addition of a specific self-loop transition on (weak and strong) stable states (in which proper components are stable) is a technicality that will ensure the preservation of all paths leading to these states. This transition translates into a specific action denoted ? in the LTS representation. Recall that all stable states can be efficiently identified using static analysis tools and that our goal is to determine which of those stable states are reachable from an initial condition. Abstraction is obtained by defining a set of components as non-visible: their evolution is not observable. All transitions involving such components, termed non-visible transitions, can simply be labelled by a special action denoted. Then, minimization consists in building a new LTS equivalent, in some sense, to the original LTS. Equivalence is defined with respect to one of the various equivalence relations described in the literature, each of them preserving certain properties of the original LTS (<ref type="bibr" target="#b1">Bouajjani et al., 1991;</ref><ref type="bibr" target="#b21">Milner, 1989;</ref><ref type="bibr" target="#b34">van Glabbeek and Weijland, 1989</ref>). Some of these relations are implemented in publicly available tools (in particular, CADP). The choice of an equivalence relation depends on the property to be checked. Here, we aim at identifying all the stable states reachable from an initial condition. We thus opt for the safety equivalence that elicits the elimination of all transitions and redundant paths, while preserving reachability properties. We define key components as those allowing the distinction between the potential stable states. They are defined as the visible components for the abstraction operation (the remaining components are thus non-visible). After the minimization step, the states in the reduced LTS that correspond to stable states in the original dynamics are recovered thanks to the ? action. From the onset, the dynamics of each module can be abstracted and minimized in terms of the key components before the composition. Only visible components and components that are involved in the composition need to be preserved. The main advantage of this approach is that, by successively performing composition followed by abstraction and minimization, the full dynamics of the composed model are never generated. However, this incremental composition requires some adaptation described in Section 3.2. The aforementioned abstraction, minimization and composition operations are performed using the CADP toolbox (<ref type="bibr" target="#b13">Garavel et al., 2011</ref>), which provides several tools to produce, transform and analyse LTSs from process specifications. LRM behaviours are expressed using the LOTOS NT specification language (<ref type="bibr" target="#b3">Champelovier et al., 2011</ref>), in terms of a process with as many associated gates as components (input and proper components), and with state variables representing the values of the components. Each gate can issue actions with labels denoting updates of component values. The process evolution is driven by the logical rules that elicit updates of the state variables. When the conditions associated to a component update are met, an action associated to the gate of the component is issued, the corresponding state variable is updated accordingly and the main process loops back. When, for the current values of the state variables, the logical rules do not permit any further evolution of the proper components, a ? action is issued. Then, the reachability of each potential stable state is verified on the minimized LTS, checking whether there is a path from the initial state towards a ? action and leading to a final value of the key components corresponding to that stable state. In our implemented workflow, this reachability analysis is performed by using the model checker of CADP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Incremental composition of LTSs</head><p>In this section, we discuss the main implementation aspects of the incremental composition of LTSs (see Supplementary Materials and the code documentation for further details). The composition is specified by providing:</p><p>(i) The LRMs to be composed and a neighbourhood relation; (ii) The integration functions of the mapped inputs; (iii) The list of key components—having the potential stable states of the composed model (obtained via static analysis), we can specify the minimal set of components that should remain visible; (iv) The (global) initial state—which indicates the initial value of the components in each individual LRM.</p><p>The integration of the regulatory signals originating from neighbouring modules is specified by the integration function associated with each mapped input. The values of these functions are partially constrained in the course of an incremental composition, as the values of each argument become bound to an actual proper component—the corresponding actions are to be synchronized (i.e. an update of the function must correspond to an update of one of its arguments). This is why we propose to model integration functions as independent processes with their own dynamics. More precisely, an LTS is generated for each integration function h i (associated to an input component g i ). Actions in this LTS reflect the updates of both the function arguments and the function value. The values of the function arguments are allowed to vary freely. More precisely, from a given state, if the update of a proper component g k influencing the value of g i (i.e. g k 2 Z i ) has no impact on the value of the integration function h i , the LTS contains an action corresponding solely to the update of g k. If, on the other hand, this update does change the value of h i , the action refers to both g i and g k updates. In subsequent composition operations, all these actions must be synchronized with the appropriate actions in the LTSs accounting for the evolution of the relevant components (the arguments of h i ), and with the actions over g i. Most importantly, to ensure a correct composition, actions over mapped input components and arguments of integration functions must be kept visible during the incremental composition until they are no longer required. Reduced LTSs of individual modules are incrementally composed following the specified rules. At each step, components that are no longer needed are made non-visible (new abstraction step) and the LTS of the intermediate composition is minimized. Upon the last composition step, a final abstraction and minimization step is undertaken, where only key components are kept visible thus obtaining a minimal description of the dynamics of the whole composition. Given the LOTOS NT specifications of the module and of the integration functions, the synchronization (composition) of the whole is specified by way of synchronization vectors (<ref type="bibr" target="#b17">Lang, 2005</ref>). A high-level language provided by CADP called SVL (<ref type="bibr" target="#b12">Garavel and Lang, 2001</ref>) is used to specify the generation of the LTSs for each individual LRM, their preliminary minimization step, subsequent synchronization steps, as well as the final abstraction and minimization operations. The intermediate composition steps are automatically produced by CADP. The SVL script as well as the EXP (<ref type="bibr" target="#b17">Lang, 2005</ref>) file, which specifies the synchronization vectors, are automatically generated from a symbolic representation of the LRM exported from GINsim and processed using Perl scripts. Note that, for simplicity, our current implementation performs composition for multi-cellular systems such as the ones presented in Section 4: modules are identical (r instances of a unique LRM), the neighbourhood relation is defined as an r Â r adjacency matrix and the (same) inputs in distinct modules are uniformly mapped to proper components from neighbouring modules. Hence, it is enough to specify the integration functions of the mapped inputs, with the proper components that are to be taken as arguments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Note on composition order</head><p>The order followed to compose the modules affects the performance of our method. Here, our implementation relies on the smart reduction (<ref type="bibr" target="#b7">Crouzen and Lang, 2011</ref>), which is an operator of SVL that determines the order of the composition, including the synchronization, abstraction and minimization operations. The underlying heuristic aims at controlling the size of the intermediate LTSs. However, it performs poorly in the case of LRM composition, because it preferentially synchronizes all LTSs related to the integration functions (which are usually smaller), then composes the LTSs associated to the modules and finally combines all these intermediate LTSs. As a consequence, all the restrictions on the dynamics of a module (imposed by its neighbours via the integration functions) are put in place later rather than sooner, giving rise to large intermediate LTSs. We further discuss and illustrate this issue of the composition order in Section 4.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">APPLICATIONS</head><p>To evaluate our method, we consider the Segment-Polarity and the Delta-Notch modules (various compositions of four instances of the toy LRM introduced in<ref type="figure" target="#fig_0">Figure 1</ref>are presented in the Supplementary Materials).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">The Segment-Polarity module</head><p>The Segment-Polarity (SP) module is involved in the fruit fly embryo segmentation, which has been extensively studied by geneticists as a model system for development. Early embryo organization into a series of segments along the antero-posterior axis is initiated by maternal morphogens, which control a few dozens of genes. These genes have been split into several classes. The first classes, gap, pair-rule and segment-polarity modules, constitute a temporal hierarchical genetic system. Segment-polarity genes are under the control of the pair-rule genes. Their patterns of expression define the anterior and posterior parts of the embryonic segments, and they are responsible for the consolidation of these borders (<ref type="bibr" target="#b28">Sa´nchezSa´nchez et al., 2006</ref>). The SP module has been modelled using continuous (<ref type="bibr" target="#b16">Ingolia, 2004</ref>) and logical approaches (<ref type="bibr" target="#b5">Chaves et al., 2005;</ref><ref type="bibr" target="#b29">Sa´nchezSa´nchez et al., 2008</ref>). Here, we rely on the model defined in Sa´nchez<ref type="bibr" target="#b29">Sa´nchez et al. (2008)</ref>, with an intracellular network of a dozen of components, submitted to two external inputs [the Wingless (Wg) and Hedgehog (Hh) signals]. We compose two modules, accounting for the cells flanking the segmental border.<ref type="figure" target="#fig_1">Figure 2</ref>illustrates this model and the results contrasting the STG size with the minimized LTS size for a full version of the model and a reduced one. The initial condition accounts for the outcome of the activity of the pair-rule system (<ref type="bibr" target="#b28">Sa´nchezSa´nchez et al., 2006</ref>): significant amounts of Wg and Slp in the anterior cell, a significant amount of En in the posterior cell. The three stable states reachable from this initial condition combine three cellular patterns: a Wg-expressing state (denoted W), an En-expressing state (E) and a trivial state (T) with neither Wg nor En. They correspond to the expected wild-type pattern WE in addition to the TT and EW patterns (<ref type="bibr" target="#b29">Sa´nchezSa´nchez et al., 2008</ref>). We also consider a reduced (intra-cellular) regulatory graph with 9 components and 31 regulatory interactions. It has been obtained by applying the reduction method available in GINsim and described in<ref type="bibr" target="#b22">Naldi et al. (2010)</ref>. Note that with GINsim, it was impossible to construct the STG for the full model, and for the reduced model, the resulting LTS structure is much smaller and thus more amenable to further analysis (see<ref type="figure" target="#fig_1">Fig. 2C</ref>and D). In Sa´nchez<ref type="bibr" target="#b29">Sa´nchez et al. (2008)</ref>, the construction of the STG was interrupted as soon as the WT and TT stable states were reached. To investigate the impact of the composition order, we now consider six instances of a further reduced SP module (with three proper components: Wg, En, Hh). These modules are organized along a line, each having two neighbours, except for the two extreme ones. For each instance i (i ¼ 1,. .. , 6), our method generates three LTSs: (i) M i , LTS of the i-th module; (ii) H i ðHhÞ, LTS of the integration function of the input Hh in the i-th module; (iii) H i ðWgÞ, LTS of the integration function of the input Wg in the i-th module.<ref type="figure">Table 1</ref>illustrates the impact of the composition order. It first includes the composition steps as performed by the smart reduction implemented in CADP. The intermediate LTSs grow very fast. Indeed, we can observe that composition operations are performed over LTSs that have no synchronization restrictions [because they are not related, such as, e.g. H 2 (Wg) and H 5 (<ref type="bibr">Wg)]</ref>. In this specific case, the smart reduction heuristic performs poorly. Even the monolithic composition of all the LTSs (in a single step) leads to a much better performance. A better composition order, drawn from the knowledge of how each LTS restricts its neighbours, consists in first composing the LTSs of each regulatory module with the LTSs of the integration functions of their input components, and then to iteratively compose these LTSs along the line of the six modules (see<ref type="figure">Table 1</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The Delta-Notch module</head><p>The Delta-Notch (DN) module is involved in cell differentiation in crucial steps of embryonic development of several species (<ref type="bibr" target="#b15">Go¨sslerGo¨ssler, 2011;</ref><ref type="bibr" target="#b19">Marnellos et al., 2000</ref>). In each cell, when active, the Notch protein inhibits the production of Delta. Theproduction of Notch is stimulated by the presence of Delta in neighbouring cells. These regulatory interactions, for a single cell, can be represented by the logical module shown in<ref type="figure" target="#fig_2">Figure 3</ref>, where the Delta_ext component accounts for Delta in the adjacent cells. This simplified model is the Boolean counterpart of the model used as a case study for the compositional verification approach described in Go¨sslerGo¨ssler (2011). Similarly to Go¨sslerGo¨ssler (2011), cells are hexagonal (i.e. they can have up to six neighbours), and the integration function of the input component Delta_ext is a logical OR between all the Delta components in neighbouring modules. We illustrate our approach by considering three compositions: DN7, DN10 and DN12 depicted in<ref type="figure" target="#fig_2">Figure 3</ref>. In Go¨sslerGo¨ssler's article, the reachability of a specific stable state from an initial condition was checked in models encompassing up to 343 modules. In contrast, we could only deal with models encompassing up to a dozen of modules. However, we answer a different problem, as our procedure accounts for all the trajectories from a given initial condition to any reachable stable state, which is certainly different from verifying the existence of one trajectory leading to one specific stable state (note that the number of stable states grows rapidly with the number of interconnected modules and depends on the neighbouring relations). An isolated open module has two stable states: when Delta_ext is active, Notch eventually becomes active and Delta inactive, otherwise Notch remains inactive and Delta becomes active. Either stable state can be univocally identified by the value of e.g. Delta, hence there is a single key component in each module. In the case of DN7 as depicted in<ref type="figure" target="#fig_2">Figure 3</ref>, if all modules start with both Delta and Notch inactive, then the six stable expression patterns are reachable. The pattern of Delta expression that ultimately emerges depends on which cells express Delta sooner. The STG generated with GINsim shows that from this initial condition, almost the entire state space is explored (there are 16 024 reachable states for a total state space of size 16 384). The minimized LTS (retaining only Delta as a visible component) contains 2290 states, which is a significant reduction (it is then possible to check on this reduced LTS that the six stable expression patterns are reachable). The reduction is even more significant in the case of DN10. For DN12, only the compositional framework we propose here can solve the problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSIONS</head><p>Pattern formation notably relies on inter-cellular communication, while involving intra-cellular regulatory processes. Several logical models dealing with such developmental processes have been published (<ref type="bibr" target="#b0">Azpeitia et al., 2010;</ref><ref type="bibr" target="#b5">Chaves et al., 2005;</ref><ref type="bibr" target="#b14">Gonzaíez et al., 2008;</ref><ref type="bibr" target="#b29">Sa´nchezSa´nchez et al., 2008</ref>). However, current monolithic approaches are not appropriate to answer questions that require searching the (generally huge) state space. In particular, the study of inter-cellular networks involved in differentiation processes focuses on the reachability of stable expression patterns from given initial conditions. Here, we have introduced a framework to address the combinatorial explosion of logical models that can be specified as module compositions. Our approach is made operational by recasting LRM composition in terms of process algebra operations. We rely on GINsim for the definition of the LRMs and on CADP for the composition, abstraction and minimization operations. The procedure has been applied to the Segment-Polarity and the Delta-Notch modules, showing that huge reductions can be obtained. With the study of the SP module, we could discuss the problem of the composition order. At present, CADP provides the smart reduction heuristic, which defines a built-in composition order, and it also offers the proficient user the possibility of manually defining a specific composition order. In general, it is not trivial to determine the optimal composition order. However, considering the application we are dealing with, we propose an alternative heuristic that should lead to reasonable performances. It consists in composing the LTSs of individual LRMs with the integration functions of their inputs and progressively proceeding according to the specified neighbourhood relation.The left column indicates the LTSs that are synchronized, each step defining a new LTS; the middle column contains the size of the resulting LTS, while the right column gives the size of the minimized LTS. First, the results relate to the order performed by the smart reduction available in CADP. Then, the composition is performed in one step and, finally, incremental composition is performed following an order based on the structure of the model (see text).</p><p>Our results indicate that while our compositional framework leads to a significant decrease of the size of the behaviour, there is still room for improvement. In the case of the reduced SP model, the number of states in the dynamics is reduced by two orders of magnitude. Nevertheless, the asynchronous dynamics are often huge, as they include all possible behaviours from a given initial condition, resulting in dynamics that explore a large portion of the state space. Most of the trajectories represented in these dynamics are generally not relevant from the biological point of view. Several methods aim to avoid non-realistic trajectories in asynchronous dynamics, among them the consideration of priority classes (<ref type="bibr">Faureét al., 2006</ref>). Importantly, such modifications of update methods would invalidate the safety equivalence guarantee, thus requiring the definition of tailored minimization approaches. In this article, we have used minimization modulo safety equivalence, which provides a good compromise between algorithmic complexity and compression of the state space. Most importantly, the safety equivalence preserves the reachability of stable states, a crucial property when studying differentiation processes. This property could be enriched to verify additional features along the trajectories leading to the states of interest, such as whether a given component is always required to change. Other verification techniques could prove efficient in our context, including the consideration of on-the-fly verification directed by a property to be checked (<ref type="bibr" target="#b17">Lang, 2005;</ref><ref type="bibr" target="#b20">Mateescu and Thivolle, 2008</ref>). Another possibility to exploit compositionality when checking the potential reachability of a given stable state is to use the partial model-checking approach (<ref type="bibr" target="#b18">Lang and Mateescu, 2012</ref>). The compositional framework presented here constitutes a novel and systematic method to compose LRMs and to efficiently perform comprehensive analyses of their behaviours. This will greatly facilitate the definition and analysis of network models involved in various multicellular patterning systems.In the initial state, all variables are set to 0. Three cases are analysed: DN7 referring to the composition of seven instances (cells) of the module, following the neighbouring relations as illustrated (the cell at the centre receives a Delta signal from its six neighbouring cells, all the other cells have three neighbours), DN10 and DN12. For DN7, there are six (reachable) stable expression patterns as depicted (a black dot indicates a Delta-expressing cell); DN10 gives rise to 14 stable patterns and DN12 to 22 stable patterns, all being reachable from the specified initial state. Performance results are given for each case</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. (A) A simple, toy LRM, where each proper component has one activator, g 3 being further inhibited by the input component g 0. (B) The corresponding STG; each node is a state ðv 0 , v 1 , v 2 , v 3 Þ; dotted arrows depict input transitions over g 0 ; plain arrows depict proper transitions; black nodes denote states in which proper components are stable (the sole outgoing transition refers to the input). The pair of states defined by v 1 ¼ v 2 ¼ v 3 ¼ 0 (respectively v 1 ¼ v 2 ¼ v 3 ¼ 1) define a strong (respectively weak) stable state with respect to the proper components. (C–F) Composition of two instances of this LRM. A relabelling of the components ensures their uniqueness: component g i of module M j (j-th instance of the LRM) becomes g ij. In panel (C), the input g 01 of M 1 is mapped to the proper component g 22 of module M 2 : Mðu 01 Þ ¼ ðZ 01 , h 01 Þ, with Z 01 ¼ g 22 È É and h 01 the identity. For the sake of brevity, the dynamics are truncated at depth 2 from the initial states. Panel (D) (respectively E) displays the (truncated) STG of M 1 (respectively M 2 ) from the initial state v ð1Þ 0 ¼ ð1, 1, 1, 0Þ [respectively v ð2Þ 0 ¼ ð1, 0, 1, 0Þ]. These states are compatible: v 01 ¼ v 22 ¼ h 01 ðv 22 Þ ¼ 1. Panel (F) displays the composed STG: transitions over g 01 are lost (g 01 is a mapped input), while transitions over g 02 are preserved. The (double) transition that sets g 12 to 1 from the initial state v ð2Þ 0 in panel (E) gives rise to two transitions in panel (F), the first leaving the initial state v 0 , the second leaving v 3. Likewise, the (double dashed) transition that sets g 21 to 0 from the initial state v ð1Þ 0 has four counterparts: transitions from v 0 , v 1 , v 2 and v 4</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.2.</head><figDesc>Fig. 2. (A) Composition of two instances of the Segment-Polarity module, accounting for the two cells flanking the segmental border. Each module contains 12 components among which 7 are associated to Boolean variables (oval nodes) and 5 to ternary variables (rectangular nodes); suffix 'a' (respectively 'p') denotes components of the cell anterior (respectively posterior) to the border; regulatory interactions are denoted by arrows (activation) or flat-end edges (repression); inter-cellular interactions are denoted by thick edges. Additionally, grey nodes are reduced to obtain the nine-component version of the model. (B–C) Measures for the construction of the dynamics, in terms of size (number of states), time and memory use, for the full (panel B) and reduced (panel C) models</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. Composition of the Delta-Notch (DN) module. Top left panel displays the DN LRM (all components are Boolean). Delta and Notch are proper components, and Delta_ext is an input component integrating the Delta signal from neighbouring modules (the integration function being a disjunction). In the initial state, all variables are set to 0. Three cases are analysed: DN7 referring to the composition of seven instances (cells) of the module, following the neighbouring relations as illustrated (the cell at the centre receives a Delta signal from its six neighbouring cells, all the other cells have three neighbours), DN10 and DN12. For DN7, there are six (reachable) stable expression patterns as depicted (a black dot indicates a Delta-expressing cell); DN10 gives rise to 14 stable patterns and DN12 to 22 stable patterns, all being reachable from the specified initial state. Performance results are given for each case</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><figDesc>Table 1. Impact of the composition order illustrated with six instances of a reduced version of the SP module (three proper components), interconnected along a line; the first and the sixth modules have one neighbour (the second and the fifth), all other modules have two neighbours</figDesc><table>Composition 
Resulting 
LTS size 

Minimized 
LTS size 

Incremental composition, smart reduction 
L 1 ¼ H 3 ðWgÞ H 5 ðWgÞ 
27 
27 
L 2 ¼ H 2 ðWgÞ H 4 ðWgÞ 
27 
27 
L 3 ¼ H 3 ðHhÞ H 5 ðHhÞ 
27 
27 
L 4 ¼ H 2 ðHhÞ H 4 ðHhÞ 
27 
27 
L 5 ¼ M 1 M 2 
729 
729 
L 6 ¼ M 5 M 6 
747 
747 
L 7 ¼ L 2 H 6 ðWgÞ 
27 
27 
L 8 ¼ L 1 H 1 ðWgÞ 
27 
27 
L 9 ¼ L 4 H 6 ðHhÞ 
27 
27 
L 10 ¼ L 3 H 1 ðHhÞ 
27 
27 
L 11 ¼ M 3 M 4 
8019 
8019 
L 12 ¼ L 11 L 9 L 5 
1 764 450 1 130 157 
L 13 ¼ L 12 L 10 L 6 
25 999 469 Out of memory 

Monolithic composition, in one step 
i¼1, ..., 6 M i H i ðHhÞ H i ðWgÞ 
ð 
Þ 
548 208 
864 

Incremental composition, specific order 
C 1 ¼ M 1 H 1 ðHhÞ H 1 ðWgÞ 
81 
81 
C 2 ¼ M 2 H 2 ðHhÞ H 2 ðWgÞ 
729 
729 
C 3 ¼ M 3 H 3 ðHhÞ H 3 ðWgÞ 
729 
729 
C 4 ¼ M 4 H 4 ðHhÞ H 4 ðWgÞ 
891 
891 
C 5 ¼ M 5 H 5 ðHhÞ H 5 ðWgÞ 
891 
891 
C 6 ¼ M 6 H 6 ðHhÞ H 6 ðWgÞ 
81 
81 
L 1 ¼ C 1 C 2 
729 
585 
L 2 ¼ L 1 C 3 
5265 
2691 
L 3 ¼ L 2 C 4 
27 027 
7101 
L 4 ¼ L 3 C 5 
75 852 
32 409 
L 5 ¼ L 4 C 6 
19 829 
864 

</table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">N.D.Mendes et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Compositional analysis of gene networks at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We are most grateful to H. Klaudel and F. Pommereau for insightful discussions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Single-cell and coupled GRN models of cell patterning in the Arabidopsis thaliana root stem cell niche</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Azpeitia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">134</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Safety for branching time semantics</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Bouajjani</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">LNCS</title>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">510</biblScope>
			<biblScope unit="page" from="76" to="92" />
			<date type="published" when="1991" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Mathematical modelling of cell-fate decision in response to death receptor engagement</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Calzone</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">1000702</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<monogr>
		<title level="m" type="main">Reference manual of the LOTOS NT to LOTOS translator (version 5.5)</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Champelovier</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<pubPlace>Grenoble, France</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">A modular, qualitative modeling of regulatory networks using Petri nets</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Chaouiya</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In: Modeling in Systems Biology</title>
		<imprint>
			<publisher>The Petri Net Approach</publisher>
			<date type="published" when="2011" />
			<publisher>The Petri Net Approach</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Robustness and fragility of Boolean models for genetic regulatory networks</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Chaves</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">235</biblScope>
			<biblScope unit="page" from="431" to="480" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Bio-PEPA: a framework for the modelling and analysis of biological systems</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Ciocchetta</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Hillston</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theor. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">410</biblScope>
			<biblScope unit="page" from="3065" to="3084" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Smart reduction</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Crouzen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Lang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of FASE&apos;2011</title>
		<meeting>FASE&apos;2011<address><addrLine>Saarbru¨ckenSaarbru¨cken, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="111" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Search for steady states of piecewise-linear differential equation models of genetic regulatory networks</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>De Jong</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Page</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="208" to="222" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">A sat-based algorithm for finding attractors in synchronous boolean networks</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Dubrova</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Teslenko</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="1393" to="1399" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Dynamical analysis of a generic Boolean model for the control of the mammalian cell cycle</title>
		<author>
			<persName>
				<forename type="first">Faure´</forename>
				<surname>Faure´</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="124" to="131" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Modular logical modelling of the budding yeast cell cycle</title>
		<author>
			<persName>
				<forename type="first">Faure´</forename>
				<surname>Faure´</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biosyst</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1787" to="1796" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">SVL: a scripting language for compositional verification</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Garavel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Lang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IFIP WG 6.1</title>
		<meeting>IFIP WG 6.1</meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="377" to="92" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">CADP 2010: A toolbox for the construction and analysis of distributed processes</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Garavel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of TACAS&apos;2011</title>
		<meeting>TACAS&apos;2011<address><addrLine>Heidelberg, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="372" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Logical modelling of the role of the Hh pathway in the patterning of the Drosophila wing disc</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gonzaíez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="234" to="240" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Component-based modeling and reachability analysis of genetic networks</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Go¨sslergo¨ssler</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="672" to="682" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Topology and robustness in the Drosophila segment polarity network</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">T</forename>
				<surname>Ingolia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Biol</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">123</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">0: a flexible tool integrating partial order, compositional, and on-the-fly verification methods</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Lang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IFM&apos;2005</title>
		<meeting>IFM&apos;2005</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="70" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Partial model checking using networks of labelled transition systems and boolean equation systems</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Lang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Mateescu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TACAS. LNCS</title>
		<editor>Flanagan,C. and Ko¨nigKo¨nig,B.</editor>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">7214</biblScope>
			<biblScope unit="page" from="141" to="156" />
			<date type="published" when="2012" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Delta-Notch lateral inhibitory patterning in the emergence of ciliated cells in Xenopus: experimental observations and a gene network model</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Marnellos</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pac. Symp. Biocomput</title>
		<imprint>
			<biblScope unit="page" from="329" to="340" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">A model checking language for concurrent value-passing systems</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Mateescu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Thivolle</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th International Symposium on Formal Methods FM&apos;08</title>
		<editor>Cuellar,J. et al.</editor>
		<meeting>the 15th International Symposium on Formal Methods FM&apos;08</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="148" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<monogr>
		<title level="m" type="main">Communication and Concurrency</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Milner</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Upper Saddle River, NJ, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Diversity and plasticity of Th cell types predicted from regulatory network modelling</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Naldi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">1000912</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Efficient handling of large signalling-regulatory networks by focusing on their core control</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Naldi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CMSB&apos;12</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="288" to="306" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Dynamically consistent reduction of logical regulatory graphs</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Naldi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theor. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">412</biblScope>
			<biblScope unit="page" from="2207" to="2218" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Decision diagrams for the representation of logical models of regulatory networks</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Naldi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CMSB&apos;07 of Lecture Notes in Bioinformatics (LNBI)</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="233" to="247" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Model composition for macromolecular regulatory networks</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Randhawa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="278" to="287" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Discrete logic modelling as a means to link protein signalling networks with functional analysis of mammalian signal transduction</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Saez-Rodriguez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">331</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">From gradients to segments: a logical analysis of the genetic network controlling early Drosophila</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Sa´nchezsa´nchez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics of Genome Regulation and Structure II</title>
		<imprint>
			<publisher>Springer-Kluwer</publisher>
			<biblScope unit="page" from="379" to="390" />
			<date type="published" when="2006" />
			<publisher>Springer-Kluwer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Segmenting the fly embryo: a logical analysis of the segment polarity cross-regulatory module</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Sa´nchezsa´nchez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Dev. Biol</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="1059" to="1075" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">SBMLmerge, a system for combining biochemical network models</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Schulz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Inform</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="62" to="71" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Towards building the silicon cell: a modular approach</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">L</forename>
				<surname>Snoep</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biosystems</title>
		<imprint>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="page" from="207" to="216" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<monogr>
		<title level="m" type="main">Defining modeling strategies for Systems Biology</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Stelling</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Report. for the European Union Commission</note>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">Regulatory networks seen as asynchronous automata: a logical description</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Thomas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">153</biblScope>
			<biblScope unit="page" from="1" to="23" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<monogr>
		<title level="m" type="main">Biological Feedback Branching-Time and Abstraction in Bisimulation Semantics (Extended Abstract). CWI</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Thomas</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Ari</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Fl</forename>
				<surname>Boca Raton</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Usa</forename>
				<surname>Van Glabbeek</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">J</forename>
				<surname>Weijland</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">P</forename>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>CRC Press</publisher>
			<pubPlace>Amsterdam. CS R8911</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">The road to modularity</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Wagner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Rev. Genet</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="921" to="931" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>