
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:44+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">RANKS: a flexible tool for node label ranking and classification in biological networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Giorgio</forename>
								<surname>Valentini</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">AnacletoLab</orgName>
								<orgName type="institution">University of Milan</orgName>
								<address>
									<postCode>20135</postCode>
									<settlement>Milan</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Giuliano</forename>
								<surname>Armano</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Electric and Electronic Engineering</orgName>
								<orgName type="institution">University of Cagliari</orgName>
								<address>
									<postCode>09123</postCode>
									<settlement>Cagliari</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Marco</forename>
								<surname>Frasca</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">AnacletoLab</orgName>
								<orgName type="institution">University of Milan</orgName>
								<address>
									<postCode>20135</postCode>
									<settlement>Milan</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Jianyi</forename>
								<surname>Lin</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">AnacletoLab</orgName>
								<orgName type="institution">University of Milan</orgName>
								<address>
									<postCode>20135</postCode>
									<settlement>Milan</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Marco</forename>
								<surname>Mesiti</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">AnacletoLab</orgName>
								<orgName type="institution">University of Milan</orgName>
								<address>
									<postCode>20135</postCode>
									<settlement>Milan</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Matteo</forename>
								<surname>Re</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">AnacletoLab</orgName>
								<orgName type="institution">University of Milan</orgName>
								<address>
									<postCode>20135</postCode>
									<settlement>Milan</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">RANKS: a flexible tool for node label ranking and classification in biological networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btw235</idno>
					<note type="submission">Received on January 31, 2016; revised on March 28, 2016; accepted on April 22, 2016</note>
					<note>Systems biology *To whom correspondence should be addressed. Associate Editor: Cenk Sahinalp The package is written in R, except for the most computationally intensive functionalities which are implemented in C. Contact: valentini@di.unimi.it Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>RANKS is a flexible software package that can be easily applied to any bioinformatics task formalizable as ranking of nodes with respect to a property given as a label, such as automated protein function prediction, gene disease prioritization and drug repositioning. To this end RANKS provides an efficient and easy-to-use implementation of kernelized score functions, a semi-supervised algorithmic scheme embedding both local and global learning strategies for the analysis of biomolecular networks. To facilitate comparative assessment, baseline network-based methods, e.g. label propagation and random walk algorithms, have also been implemented. Availability and Implementation: The package is available from CRAN: https://cran.r-project.org/.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Relevant bioinformatics problems can be modeled through networks, where nodes represent biomolecular entities (e.g. proteins or genes) and edges functional relationships between them. In this context a typical class of problems is node label ranking, which consists of ordering nodes with respect to a given property under studyâ€”e.g. the annotation with a specific Gene Ontology (GO) or Online Mendelian Inheritance in Man (OMIM) term. Examples of these problems are represented by protein function prediction, disease gene prioritization and drug repositioning. Several software tools have been recently developed for the analysis of biomolecular networks. The BioNet R package (<ref type="bibr">Beisser et al., 2010</ref>) provides a set of methods for the integrated analysis of gene expression data and biological networks. HTSanalyzeR (<ref type="bibr">Wang et al., 2011</ref>) is a tool optimized for network analysis of Highthroughput screens, while SVD-Phy predicts functional associations between non-homologous genes by comparing their phylogenetic distributions (<ref type="bibr">Franceschini et al., 2016</ref>). GeneRev (<ref type="bibr">Zheng et al., 2012</ref>) aims at assessing the functional relevance of genes from highthroughput data. SANTA (<ref type="bibr">Cornish et al., 2014</ref>) uses spatial statistics techniques to assess the functional information content of a biological network with respect to a given set of seed genes. The GeneNet Toolbox for Matlab (<ref type="bibr">Taylor et al., 2015</ref>) can evaluate the relevance of functional relationships by performing a statistical assessment of gene connectivity using seed nodes, network randomization and permutation techniques. The aforementioned tools are limited in their application by the usage of a specific source of data (as in the case of BioNet and HTSanalyzeR) or do not allow to integrate custom methods in the analysis workflow (as in the case of GeneRev). Other software tools can use different sources of data but are devised to evaluate the relevance of functional relationships, as in the case of GeneNet, and cannot be obviously used to predict functional labels for the nodes of the network. To provide a data source-independent bioinformatics tool for solving arbitrary node label ranking and classification problems in V C The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com biological networks, we devised RANKS (RAnking of Nodes with Kernelized Score functions), a flexible algorithmic scheme implemented and distributed as an R software package. RANKS embeds kernelized score functions that have been successfully applied to gene function prediction (<ref type="bibr">Re et al., 2012</ref>), gene disease prioritization (<ref type="bibr">Valentini et al., 2014</ref>) and drug repositioning (<ref type="bibr">Re and Valentini, 2013</ref>) problems. Other popular network-based algorithms, such as random walk and label propagation, are also provided by the package.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Algorithmic framework</head><p>RANKS takes as input the adjacency matrix of the graph representing a functional or genetic network, e.g. a coexpression or a proteinprotein interaction (PPI) network, and a set of 'seed' nodes having the specific biologic property under study, e.g. proteins with a specific GO annotation or drugs having a specific therapeutic indication. Then it tries to propagate this property from seeds to the other nodes, according to a semi-supervised learning strategy which relies on similarity between nodes. In fact, RANKS can extend the concept of similarity between nodes, embedded for instance in a PPI network, by applying a kernel (e.g. a graph kernel) to a specific network to compare a node with others according to the topology of the underlying graph (<ref type="figure" target="#fig_0">Fig. 1</ref>). In the most general case a kernel (e.g. a random walk kernel) accomplishes a global learning strategy by exploiting the overall topology of the network. If no kernels are applied, RANKS adopts a local learning strategy similar to that of classical guilt-by-association methods: i.e. each node learns only from its neighborhood. Finally, nodes are ranked with a specific scoring function, such as the nearest-neighbour or average score (<ref type="figure" target="#fig_0">Fig. 1</ref>), according to the weights of the edges and to the annotations of the neighborhood nodes (see Supplementary Information for more details). RANKS implements a modular algorithmic scheme: by choosing different scoring functions or different kernels one may obtain different semi-supervised learning algorithms applicable to a large range of node label ranking problems in bioinformatics. Moreover the low computational complexity of the underlying semisupervised learning algorithms allows fast and efficient ranking of nodes also in large networks: once the kernel is computed, the complexity is linear in the number of nodes in sparse networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Implementation</head><p>The top-level algorithmic scheme is written in R, but the most computationally demanding parts (e.g. the implementation of kernels) are written in C language and invoked from R code as .C calls. The user-friendly software interface of RANKS allows to independently select different kernels (e.g. linear, Cauchy, random walk kernels) and score functions (e.g. Nearest-Neighbour, Average Sum scores), simply by passing them as parameters to the methods and functions implemented in the package. Moreover, the user can easily add her/his own kernels, score functions or both to extend the algorithmic scheme (the Supplementary Information shows several examples on how to extend the library). The package provides four main categories of methods: 1. Methods to implement score functions, including k-NearestNeighbour, Average Score and Weighted Sum with Linear Decay, the latter being a score function implemented in AraNet (<ref type="bibr">Lee et al., 2010</ref>). 2. Methods to implement kernels, including linear, Gaussian and graph-specific kernels able to exploit the overall topology of a network. 3. Methods to automatically apply score functions and kernels to each node of the network: a score is assigned to each node of a network, according to the property under study (e.g. the annotation to a GO or a OMIM term). 4. High-level methods aimed at evaluating the generalization capability of the learning system. These methods include fully automated k-fold cross-validation, held-out or multiple held-out assessment of the generalization error. By a single call to these very high level functions an entire cross-validation cycle can be performed by writing few lines of R code. In particular a leaveone-out (loo) procedure can be efficiently performed at the cost of a single 'pass' on the network, without the need of repeating the learning process for each node.</p><p>The Supplementary Information and the Reference Manual show several usage examples, which explain how to apply RANKS to relevant problems in bioinformatics. For instance, the Supplementary Information provides an example concerning the Human Phenotype Ontology prediction, a ranking task where RANKS resulted among the top methods in the recent CAFA2 challenge (<ref type="bibr">Jiang et al., 2016</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusion</head><p>The RANKS learning framework is well suited to perform functional prediction experiments on the whole genome, as its semisupervised learning strategy allows to efficiently infer node labels in large networks, starting from a small set of annotated examples. The highly modular structure of the functions and methods available in the corresponding R package allows users to easily experiment with different learning algorithms by using a rich collection of interchangeable building blocks. Notably, the library can be extended through user-defined kernels and score functions, and can be easily used as a stand-alone tool or within software pipelines aimed at ranking/classifying node labels in complex biological networks. Conflict of Interest: none declared.<ref type="bibr">Beisser,D. et al. (2010)</ref>BioNet: an R-Package for the functional analysis of biological networks. Bioinformatics, 26, 1129â€“1130.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>References</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. The RANKS algorithmic framework adopts both local and global learning strategies. Kernels enforce a global learning strategy by extending the notion of similarity between nodes beyond the simple concept of connectivity between adjacent nodes, while score functions adopt local learning strategies by considering only the direct neighborhood of a given node v. V C denotes the subset of annotated nodes, K(v, x) a kernel function defined on nodes v and x, and kNN(v) the k nodes most similar to a node v</figDesc></figure>

			<note place="foot" n="1"> Bioinformatics, 2016, 1â€“3 doi: 10.1093/bioinformatics/btw235 Advance Access Publication Date: 2 June 2016 Applications Note Bioinformatics Advance Access published June 9, 2016 at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>