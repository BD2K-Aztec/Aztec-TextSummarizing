
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:35+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Bambus 2: scaffolding metagenomes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011">2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Sergey</forename>
								<surname>Koren</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<addrLine>College Park</addrLine>
									<postCode>20742</postCode>
									<region>MD</region>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Craig Venter Institute</orgName>
								<address>
									<postCode>20850</postCode>
									<settlement>Rockville</settlement>
									<region>MD</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Center for Bioinformatics and Computational Biology</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Todd</forename>
								<forename type="middle">J</forename>
								<surname>Treangen</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Center for Bioinformatics and Computational Biology</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mihai</forename>
								<surname>Pop</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<addrLine>College Park</addrLine>
									<postCode>20742</postCode>
									<region>MD</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Center for Bioinformatics and Computational Biology</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Alfonso</forename>
								<surname>Valencia</surname>
							</persName>
						</author>
						<title level="a" type="main">Bambus 2: scaffolding metagenomes</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">27</biblScope>
							<biblScope unit="issue">21</biblScope>
							<biblScope unit="page" from="2964" to="2971"/>
							<date type="published" when="2011">2011</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btr520</idno>
					<note type="submission">Genome analysis Advance Access publication September 16, 2011 Received on June 9, 2011; revised on August 24, 2011; accepted on September 5, 2011</note>
					<note>[17:51 7/10/2011 Bioinformatics-btr520.tex] BIOINFORMATICS ORIGINAL PAPER Associate Editor: Contact: mpop@umiacs.umd.edu Supplementary Information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Sequencing projects increasingly target samples from non-clonal sources. In particular, metagenomics has enabled scientists to begin to characterize the structure of microbial communities. The software tools developed for assembling and analyzing sequencing data for clonal organisms are, however, unable to adequately process data derived from non-clonal sources. Results: We present a new scaffolder, Bambus 2, to address some of the challenges encountered when analyzing metagenomes. Our approach relies on a combination of a novel method for detecting genomic repeats and algorithms that analyze assembly graphs to identify biologically meaningful genomic variants. We compare our software to current assemblers using simulated and real data. We demonstrate that the repeat detection algorithms have higher sensitivity than current approaches without sacrificing specificity. In metagenomic datasets, the scaffolder avoids false joins between distantly related organisms while obtaining long-range contiguity. Bambus 2 represents a first step toward automated metagenomic assembly. Availability: Bambus 2 is open source and available from http://amos.sf.net.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Metagenomics, the direct sequencing of DNA from all organisms in an environment without culturing, has recently emerged as a new scientific field that enables the discovery of novel organisms and genes (<ref type="bibr" target="#b44">Yooseph et al., 2007</ref>)—as well as the study of population structure and dynamics (<ref type="bibr" target="#b1">Arumugam et al., 2011;</ref><ref type="bibr" target="#b17">Koenig et al., 2011</ref>). Metagenomic studies have greatly expanded the understanding of microbial diversity. For example, viral quasi-species have been shown to affect pathogenicity in the poliovirus due to cooperation between differently adapted individuals in a population, as well as between coinfecting viruses (<ref type="bibr" target="#b42">Vignuzzi et al., 2005</ref>). Other recent studies have relied on metagenomics to identify novel genes and uncultured microbes (<ref type="bibr" target="#b13">Hess et al., 2011</ref>). The assembly of metagenomic data is complicated by several factors such as: (i) widely different levels of representation for different organisms in a community; (ii) genomic variation between * To whom correspondence should be addressed. closely related organisms; (iii) conserved genomic regions shared by distantly related organisms; and (iv) repetitive sequences within individual genomes. Similar challenges occur in the assembly of polymorphic eukaryotes, a challenging domain for existing assembly algorithms. For example, the assembly of the sea squirt genome Ciona savignyi required extensive manual intervention and customized scripts despite the fact that this genome is fairly 'simple'—there were only two haplotypes of roughly equal coverage (<ref type="bibr" target="#b43">Vinson et al., 2005</ref>). Metagenomic data are considerably more complex. Due to the lack of assembly tools specifically targeted at metagenomic projects, studies rely on existing assemblers and attempt to mitigate some of the challenges posed by the data through iterative adjustment of assembly parameters and post-processing. Tuning is critical as existing assemblers make frequent errors even in simulated datasets with significantly lower complexity than true environments (<ref type="bibr" target="#b23">Mavromatis et al., 2007</ref>). At the same time, current assemblers produce fragmented assemblies, hampering downstream analysis. For example, in the analysis of the Global Ocean Survey data, the Celera Assembler (<ref type="bibr" target="#b26">Myers et al., 2000</ref>) was heavily modified to allow high error rates in order to account for strain variation, and to overcome the effects of varied coverage levels on the statistical repeat detection procedure (<ref type="bibr" target="#b33">Rusch et al., 2007;</ref><ref type="bibr" target="#b41">Venter et al., 2004</ref>). Only two assemblers were developed specifically for metagenomic datasets (<ref type="bibr" target="#b19">Laserson et al., 2011;</ref><ref type="bibr" target="#b28">Peng et al., 2011</ref>). However, neither utilizes mate-pairs, our focus in this work. We present novel scaffolding algorithms optimized for non-clonal assembly. Though our algorithms are also applicable to polymorphic genomes, the primary focus of this article is on metagenomic analysis. These algorithms are implemented in a software tool called Bambus 2. Bambus 2 supersedes our previous scaffolder, Bambus (<ref type="bibr" target="#b30">Pop et al., 2004</ref>), which was targeted at clonal Sanger data. We will show that, when applied to metagenomic datasets, Bambus 2 generates large scaffolds while avoiding false joins between distantly related organisms. Furthermore, our software can automatically identify genomic regions of variation that correspond to previously characterized polymorphic loci.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Metagenomic scaffolding</head><p>In our opinion, the main challenge in metagenomic assembly is to develop an assembler that can automatically generate contiguous assemblies yet accurately capture genomic variation information throughout the assembly process. It is important to first define the basic concepts underlying genome scaffolding. Most modern genome assemblers start by reconstructing segments of the genome that are unambiguously defined by the set of reads. These segments, called unitigs, are sections of the genome<ref type="bibr">[</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bambus 2</head><p>entirely contained in either unique regions or repeats, i.e. they do not span the boundary between individual repeats or between repeats and unique regions. The nucleic acid sequence of unitigs can, therefore, be unambiguously reconstructed. Irrespective of the assembly algorithm employed, the unitigs themselves are generally small and assembly software must use additional information to increase the size of the contigs produced. Commonly, assemblers leverage the information contained in matepairs—information constraining (in orientation, the DNA strand from which the sequence originated, and approximate distance) the pairwise position of reads along the genome. The process through which mate-pair information is used to increase contig sizes, as well as to determine a global arrangement of contigs along the genome, is called scaffolding. Note that longer contigs can also be constructed by careful analysis of the assembly graph without the use of mate-pair information (<ref type="bibr" target="#b16">Kingsford et al., 2010;</ref><ref type="bibr" target="#b27">Nagarajan and Pop, 2009</ref>)—we broadly consider scaffolding to also include such analyses. Most existing genome assemblers contain dedicated scaffolding modules [e.g.<ref type="bibr" target="#b2">Butler et al. (2008)</ref>;<ref type="bibr" target="#b20">Li et al. (2010)</ref>;<ref type="bibr" target="#b26">Myers et al. (2000)</ref>;<ref type="bibr" target="#b46">Zerbino et al. (2009)]</ref>. The unitig graph is output by a variety of modern assemblers such as Newbler (<ref type="bibr" target="#b22">Margulies et al., 2005</ref>), Celera Assembler (<ref type="bibr" target="#b26">Myers et al., 2000</ref>) and SOAPdenovo (<ref type="bibr" target="#b20">Li et al., 2010</ref>), allowing scaffolding tools to operate as a stand-alone module post-assembly (<ref type="bibr" target="#b3">Dayarian et al., 2010;</ref><ref type="bibr" target="#b10">Gao et al., 2011;</ref><ref type="bibr" target="#b30">Pop et al., 2004</ref>). Throughout the article, we will assume that the unitig graph is given and will demonstrate how this information can be used to effectively analyze metagenomic datasets. Genomic repeats are the major challenge when assembling isolate genomes, and their effect is compounded in metagenomic datasets. Repeats link together disparate sections of the genome. As the number of reconstructions grows exponentially with the number of repeats (<ref type="bibr" target="#b16">Kingsford et al., 2010</ref>), it is intractable to find the one correct reconstruction. Therefore, most assemblers start by masking out unitigs that appear to represent repetitive segments of a genome. Celera Assembler, for example, uses depth of coverage statistics to determine whether a particular unitig represents a repeat, then ignores these unitigs until the later stages of scaffolding (<ref type="bibr" target="#b26">Myers et al., 2000</ref>). Coverage statistics are also used in other assemblers (<ref type="bibr" target="#b2">Butler et al., 2008;</ref><ref type="bibr" target="#b3">Dayarian et al., 2010;</ref><ref type="bibr" target="#b46">Zerbino et al., 2009</ref>). An alternative approach relies on topological information: unitigs that have multiple conflicting neighbors (<ref type="bibr" target="#b20">Li et al., 2010</ref>) can be inferred to represent repeats. While the approaches described above work well in isolate genomes, they can lead to false positives in metagenomic datasets. Coverage-based methods can classify abundant organisms as repeats, preventing the assembly of exactly those segments of the community that should be easily assembled (<ref type="bibr" target="#b41">Venter et al., 2004</ref>). Distinguishing between repeats within the same genome and conserved genomic segments shared by closely related organisms can be difficult. As seen in<ref type="figure" target="#fig_1">Figure 1</ref>, the local unitig graphs and coverage look identical in both cases. Below, we will describe new approaches for repeat detection that work well in metagenomic datasets. Currently available scaffolders attempt to construct linear scaffolds, i.e. where unitigs can be placed in a linear, nonoverlapping order. When multiple unitigs occupy the same genomic region, they are either collapsed into one or the scaffolds are broken apart. Collapsing unitigs assumes the differences are due to error (<ref type="bibr" target="#b45">Zerbino and Birney, 2008</ref>). Breaking scaffolds assumes theambiguity is due to repeats (<ref type="bibr" target="#b3">Dayarian et al., 2010</ref>). In metagenomic assembly, such bubbles (multiple contigs occupying the same position in the assembly) are common due to polymorphisms between closely related strains, and fracturing the scaffolds at such positions leads to fragmented assemblies. Collapsing unitigs can lead to a 'mosaic' consensus sequence. If the variation occurs within genes, the consensus may contain frameshifts and even make it difficult to determine whether a gene exists. Previous attempts at untangling the genomic variation information from assembly data have relied on visualization techniques (<ref type="bibr" target="#b4">Eppley et al., 2007a</ref>). While valuable insights have been obtained through such studies, these approaches are manually intensive and not scalable to large metagenomic datasets. In this article, we propose an approach that can preserve polymorphic bubbles within the assembly yet allows long-range scaffolds to be constructed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">OUR APPROACH</head><p>We propose that repeats and genomic variation can be distinguished from each other by examining the unitig graph. Repeats appear to 'tangle' the unitig graph, thereby masking the global structure of the genome. Genomic variants, on the other hand, lead to localized motifs in the graph. For example, assume that several strains of a same organisms are virtually identical with the exception of a region of variation (e.g. a locus of antigenic variation). The graph pattern corresponding to this situation in<ref type="figure" target="#fig_2">Figure 2a</ref>appears as a bubble in the unitig graph. We suggest that the global structure of the genome can be best recovered if the ambiguity due to genomic variation is maintained throughout the scaffolding process. Specifically, motifs due to genomic variation do not affect the long-range structure of the common backbone shared by related genomes. Instead of resolving the bubbles, we detect regions of variation and replace each of them with a single graph node, simplifying the graph without obscuring the structure. Through the iterative application of this process, interleaved with standard graph simplification procedures we can obtain scaffolds that capture a large fraction of the common genome structure of closely related organisms. For each variant, we output a main sequence along with alternatives corresponding to the haplotypes in the data. Fasulo and others (<ref type="bibr" target="#b6">Fasulo et al., 2002</ref>) have</p><p>Page: 2966 2964–2971</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S.Koren et al.</head><formula>(b)</formula><p>(a)<ref type="bibr" target="#b38">Thompson et al., 1994</ref>) alignment of a subset of the fasta output from Bambus 2, with an edit region corresponding to (a).</p><p>previously presented an approach for detecting and representing variant bubbles during the assembly process, primarily targeting short-range variation that can be found within a single sequencing read. Our approach is more general and can tolerate larger scale variants (our approach detected variants with an average size of 5606.2±8868.26 when scaffolding 75 bp reads). Used in concert with the algorithm described by<ref type="bibr" target="#b6">Fasulo et al. (2002)</ref>our method will detect large-scale polymorphisms in addition to the short-range within-read variants. Underlying the procedure above is the assumption that the ambiguity in the assembly graph is primarily caused by genomic variants, i.e. repeats have been detected and removed from the graph. We will describe two approaches for finding repeats in metagenomic samples. The first approach is based on the observation that repeat nodes appear to 'tangle' the graph structure—these nodes look like focal points in the graph, as in<ref type="figure" target="#fig_3">Figure 3</ref>. We detect such repeats using a measure of node centrality similar to the vertex-betweenness centrality measure used in social network analysis (<ref type="bibr" target="#b7">Freeman, 1977</ref><ref type="bibr" target="#b8">Freeman, , 1979</ref>). We also propose a variant of coverage-based repeat detection that tracks the change in coverage within-graph components instead of using a global coverage statistic. We will show that this localized coverage measure is less sensitive to coverage differences between organisms in the sample.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">METHODS</head><p>Our algorithms operate on a contig graph. A contig may represent a single unitig or an ungapped concatenation of multiple contigs. For each matepair connecting pairs of contigs, we generate a link l with length d(l) and orientation computed from the orientation and positions of the reads in the contigs. The SD σ(l) is provided as input to Bambus 2. Using the set of links between pairs of contigs, the orientation is set as the orientation of the majority of the links. Once an orientation is selected, we check whether the distance constraints implied by the links are consistent with each other. If not, we discard the smallest number of links that results in a consistent set S (the largest consistent set can be found in nlogn time using an algorithm for maximal clique finding in an interval graph). Each</p><formula>length l(e) = d(l) σ(l) 2 1 σ(l) 2 and SD σ(e) = 1 1 σ(l) 2 as suggested in Huson et al.</formula><p>(2001). Additional information, such as overlaps between adjacent contigs (contigs sharing common sequence), is also included when constructing the edges. The resulting graph is bidirected (<ref type="bibr" target="#b24">Medvedev et al., 2007</ref>). Scaffolding consists of three operations: orientation, positioning and simplification. Throughout the process, we prune the graph by removing contradictory edges and recording their reason for removal. To avoid the ambiguity introduced by repeats, we start with a repeat detection step, then exclude all repeat contigs and incident edges from scaffolding. The (possibly multiple) placement of these nodes can be determined after the initial scaffolding is complete. Centrality-based repeat detection: we calculate the all-pairs-shortest paths with each edge having weight w = 1. For each node, v, we calculate the number of times it appears on a shortest path: P v. Note that larger contigs are expected to have a higher degree because they contain more reads and, therefore, have a higher chance of being the end-point of a mate-pair link. To correct for this, we linearly scale P v by the contig length. Such a length-dependent correction has been previously proposed in the context of estimation of gene abundance in metagenomic samples (<ref type="bibr" target="#b34">Sharon et al., 2009</ref>). A node is declared repetitive if the scaled P v &gt;¯ x +c×σ where c is a constant (usually set to 3), ¯ x is the mean of all scaled P v ∀v ∈ V and σ is the SD of all scaled P v ∀v ∈ V. Local coverage statistic: for each connected component S and for each node v ∈ S, we compute the A-stat value (<ref type="bibr" target="#b26">Myers et al., 2000</ref>). An abundant organism is less likely to appear repetitive in our approach as the connected component is more homogeneous. This operation is carried out after the repeat nodes identified by all-pairs-shortest paths have been removed. Orientation: we must first convert the bidirected graph into a directed graph by choosing an orientation for each node in the graph. We call reverse edges any pairwise constraints that require the adjacent contigs to be in opposite orientations. It is impossible to assign a consistent order to nodes involved in a cycle with an odd number of reverse edges without discarding edges. We attempt to remove a minimum number of edges to allow a consistent orientation to be assigned. Finding such a minimum set is equivalent to the Maximal Bipartite Subgraph problem which is NP-hard (<ref type="bibr" target="#b11">Garey and Johnson, 1979</ref>). We rely on a greedy heuristic proposed by<ref type="bibr" target="#b15">Kececioglu and Myers (1995)</ref>that achieves a two-factor approximation. The algorithm runs in O(V +E) time. Positioning: in addition to assigning an edge direction, we want to assign a position for each contig. There may be multiple edges assigning contradictory positions to a node. These imperfect data are the result of experimental errors and repeats (ambiguities in the placement of reads along a genome). We want to maximize the number of satisfied edges by placing nodes as close to the specified position as possible. This problem is similar to the Optimal Linear Arrangement problem which is also NP-hard (<ref type="bibr" target="#b11">Garey and Johnson, 1979</ref>). We rely on the following greedy extension heuristic to linearly order the Page: 2967 2964–2971contigs: scaffolding starts by placing an arbitrary node at position 0. For each node without a position, compute an initial position based on all alreadyplaced neighbors as a weighted average. Subsequent edges can reposition the node within a limit of 3σ(e) where σ(e) is the SD of the edge. The extension stops when the ratio of an edge weight w(e(u,v)) to the maximum weight edge incident on node u or v is below a threshold. Edges eliminated from the graph due to invalid orientation are not used in this step. The algorithm runs in O(V +E) time. This heuristic is sufficient once the graph is simplified as above and repeat contigs removed. Simplification: a transitive reduction is applied to the contig graph and redundant edges are removed. Transitive edges [an edge e(u,v) such that there is a path p with a set of edges p e ⊂ E incident on nodes p v ⊂ V between u and v not including e(u,v)] are removed from acyclical components of the graph by performing a depth-first search from each node in topological order. Given the sequence lengths of contig in the graph l(v) ∀v ∈ V and a path p, we define the length of the path as l(p) = ∀ contigs v∈pv l(v)+ ∀ edges e∈pe l(e). Define the SD of the path as σ(p) = ∀ edges e∈pe σ(e). A transitive edge is removed when |l(e)−l(p)|≤σ(e)+σ(p). These edges can be removed without loss of information. Simple paths (all nodes have in-and outdegree equal to 1) are then collapsed: the nodes on the path are replaced with a single node representing the concatenation of the original nodes, and the intervening edges are removed from the graph. Finally, each simplified connected component in the graph gets reported as a scaffold. Variant detection: once we have oriented and positioned the contigs and simplified the graph, we iteratively search for variation motifs. We search for subgraphs where multiple paths begin at a source node and collapse to one sink node within a certain number of hops. To allow for artifacts due to incomplete coverage, we allow subgraphs where paths terminate before reaching the sink. Given graph G = (V ,E) and motif set S ⊂ V incoming edges = S in (u,v) ⊂ E s.t. u ∈ V −S and v ∈ S outgoing edges = S out (x,w) ⊂ E s.t. x ∈ S and ∈ V −S</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bambus 2</head><formula>∀ e∈S in (u,v) ,v = source, ∀ e∈Sout(x,w) ,x = sink</formula><p>That is, the incoming edges may only be incident on the source node and the outgoing edges may only be incident on the sink node. Finally, to avoid false positives due to layouts that satisfy edge constraints but where nodes can be placed in a linear, non-overlapping order, we calculate the overlap ratio. Given S ⊂ V , node v ∈ S, start coordinate of v, B(v) and end coordinate of v, E(v)</p><p>length(S) = abs(E(sink)−B(source))</p><formula>overlap(S) = ∀ (u,v)∈S (min(E(u),E(v))−max(B(u),B(v))+1) s.t. min(E(u),E(v))−max(B(u),B(v))+1) &gt; 0</formula><p>The overlap ratio is then overlap(S) length(S). Intuitively, it is the total number of bases covered by two or more nodes, divided by the total number of bases in the motif. Motifs whose overlap ratio exceeds a threshold are marked as a polymorphism. To make the problem tractable, only subgraphs with a diameter of 2 are detected in the current implementation of our algorithm. Each iteration of motif detection has a runtime of O(|V |×((G) 3 +3(G))) where (G) is the maximum degree of G. This algorithm has a worst-case runtime of O(|V |×(|E| 3 +3|E|)). However, in a contig graph it is likely that (G) &lt;&lt; |E|. Every level of depth multiplies the runtime by a factor of</p><formula>(G).</formula><p>Output: Bambus 2 supports several output formats. Since we do not linearize scaffolds and maintain ambiguity due to variation in the graph, the native output is a graph [in Graphviz format<ref type="bibr" target="#b9">Gansner and North (2000)]</ref>. Bambus 2 also finds the longest sequence reconstruction through each scaffold. That is, it will ignore variant motifs and generate a single selfconsistent sequence for each scaffold. Additionally, Bambus 2 outputs each variation motif as a set of sequences. For each motif, S, we start from the source node, as defined above. For each child node c of source, we recursively compute the sequences starting at c. The longest sequence starting at source is the master sequence of the motif. The alternate sequences found in the graph are also output, including edit positions specifying where within the master sequence they belong.<ref type="figure" target="#fig_2">Figure 2b</ref>shows an example alignment of the fasta output for a variant region within E.coli. Test data: we tested the algorithm using nine datasets. Brucella suis 1330 comprised 36 080 reads and available as NCBI Trace Archive Project ID 320. The reference includes: AE014291:AE014292 (2 107 792 bp, 1 207 381 bp). Three simulated datasets were generated using MetaSim (<ref type="bibr" target="#b32">Richter et al., 2008</ref>) (<ref type="figure" target="#tab_1">Table 1</ref>). The acid mine drainage dataset, generated by<ref type="bibr" target="#b35">Simmons et al. (2008)</ref>;<ref type="bibr" target="#b40">Tyson et al. (2004)</ref>, consists of 179 770 reads and is available as NCBI Trace Archive Project ID 13696. The reference AMD dataset includes: Ferroplasma acidarmanus Type I, Ferroplasma sp. Type II, Leptospirillum sp. Group II 5-way CG, Leptospirillum sp. Group III and Thermoplasmatales archaeon Gpl and is available as CH003520:CH004435. The Twin Gut data were generated by<ref type="bibr" target="#b39">Turnbaugh et al. (2008)</ref>and is available as SRA002775 (8.30M GS FLX fragments). The MetaHit datasets were generated by the MetaHit consortium (<ref type="bibr" target="#b31">Qin et al., 2010</ref>) and are available as ERS006526, ERS006594 and ERS006494.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>In the following section, we demonstrate the performance of Bambus 2 by comparing it with two assemblers used in recent Page: 2968 2964–2971</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S.Koren et al.</head><p>metagenomic projects [Celera Assembler (<ref type="bibr" target="#b26">Myers et al., 2000</ref>) and SOAPdenovo (<ref type="bibr" target="#b20">Li et al., 2010)]</ref>. We have not included a comparison with our previous scaffolder, Bambus (<ref type="bibr" target="#b30">Pop et al., 2004</ref>), as it lacks the functionality necessary in a metagenomic setting. Also, we have omitted comparisons to Genovo (<ref type="bibr" target="#b19">Laserson et al., 2011</ref>) and Meta-IDBA (<ref type="bibr" target="#b28">Peng et al., 2011</ref>) as neither of these use mate-pair information during the assembly process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Repeat detection</head><p>We benchmarked our algorithms for repeat detection using artificial and real datasets by comparing repeats identified by Bambus 2 with those identified by the Celera Assembler (<ref type="bibr" target="#b25">Miller et al., 2008</ref>) with metagenomic settings (<ref type="bibr" target="#b33">Rusch et al., 2007;</ref><ref type="bibr" target="#b41">Venter et al., 2004</ref>) (referred to as CA-met). The CA-met settings increase the tolerance for mismatches when building unitigs, providing longer range contiguity, but possibly leading to mis-assembly. The repeat detection from Celera Assembler relies on coverage, a common approach and procedures for tuning this assembler for both isolate and metagenomic assemblies have been documented (http://wgsassembler.sf.net).<ref type="figure" target="#fig_4">Figure 4</ref>shows the results. Ideally, the repeat detection should have both high sensitivity and specificity. Sensitivity reflects how many true repeats are detected. Detecting too few repeats can lead to assembly errors in scaffolding. Specificity reflects the false positives. Detecting too many repeats leads to a suboptimal assembly as these contigs do not fully participate in scaffolding. In the case of B.suis 1330, both methods have high sensitivity and specificity. Celera Assembler repeat detection was designed for clonal organisms. Since the B.suis dataset is clonal, CA can accurately detect repeats. In all other cases, Bambus 2 has a higher sensitivity and specificity than Celera Assembler. The default genome size estimates in CA are too sensitive, identifying too many repeats. While varying the genome size improves repeat detection, it is at the expense of sensitivity or specificity. On all datasets, this tuning, which is difficult when the true taxonomic distribution is unknown, still does not match Bambus 2's automated sensitivity and specificity result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Scaffolding of simulated metagenomic datasets</head><p>We compared Bambus 2 to CA with default settings and CA-met. While other assemblers have been used in metagenomic studies [e.g. Phrap http://www.phrap.org/ and Newbler (<ref type="bibr" target="#b22">Margulies et al., 2005)]</ref>, as far as we are aware, they have not been extended to target metagenomic data. SOAPdenovo has also been used for metagenomic studies; however, no scaffolding results were reported (<ref type="bibr" target="#b31">Qin et al., 2010</ref>). We ran Bambus 2 to scaffold unitigs from CA-met and Minimus (<ref type="bibr" target="#b36">Sommer et al., 2007</ref>). As seen in<ref type="figure" target="#fig_5">Figure 5</ref>, for all genomes, Bambus 2 outperforms CA. For all but one genome, Bambus 2 also outperforms CA-met. The only case where CA-met performs better than Bambus 2 is E.coli O157:H7 EDL933. The closely related E.coli strains are present at sufficient combined coverage for CA-met to obtain large scaffolds. However, the low-abundance genomes in the same sample are not assembled. In scaffolds over 2 kb, CA-met only includes 10.90 and 13.31% of the low-abundance genomes, versus 17.24 and 18.37% for Bambus 2. Additionally, CA-met constructs a 'mosaic' sequence of the two E.coli strains, masking variation and potentially introducing error (Supplementary Material). As we will show below, on the acid mine dataset, thisA total of 30 variation motifs were detected in the Sim3 dataset. The motifs detected include genes for ferrochelatase (<ref type="figure" target="#fig_2">Fig. 2a</ref>) as well as outer membrane proteins and integrase for prophage, which are known to vary across strains of E.coli (<ref type="bibr" target="#b29">Perna et al., 2001</ref>) and more broadly, across other enterobacteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Scaffolding of the acid mine drainage metagenome</head><p>We tested Bambus 2 on an acid mine drainage (<ref type="bibr" target="#b40">Tyson et al., 2004</ref>) metagenomic set. These data represent an ideal benchmark as they comprise a low number of organisms, and the genomic variation between related members of the community has been extensively studied. We generated unitigs using CA and scaffolded them with Bambus 2. The Bambus 2 assembly has fewer scaffolds in three of the five organisms present in this sample when compared with CA-met (<ref type="figure" target="#fig_6">Fig. 6</ref>). In two genomes, Leptospirillum sp Group III and Ferroplasma acidarmanus Type I, Bambus 2 halves the number of scaffolds while reconstructing a larger percentage of the references, as compared to CA-met. In one case, Ferroplasma sp Type II, CAmet produces fewer scaffolds than Bambus 2. However, we found that over 61% of the contigs in the Ferroplasma sp Type II CAmet assembly cannot be uniquely assigned to a single reference genome. We hypothesize that CA-met combined the assemblies of Ferroplasma acidarmanus Type I and Ferroplasma sp Type II, creating chimeric contigs and scaffolds. We validated our hypothesis by counting the fraction of contigs in chimeric scaffolds. Chimeric scaffolds either include a chimeric contig or contain contigs from different organisms (Supplementary Material). Bambus 2 had the lowest rate of chimeras, 5.66%, while CA-met had the highest at 23.07%. This is expected as CA-met was tuned to maximize scaffold size, possibly merging unrelated organisms. Bambus 2 built large scaffolds while making fewer mistakes. The acid mine community used in our analysis is dominated by two genera: Leptospirillum bacteria and Ferroplasma archaea. A large extent of genomic variation, primarily due to recombination, was characterized in both these groups of organisms (<ref type="bibr" target="#b5">Eppley et al., 2007b;</ref><ref type="bibr" target="#b35">Simmons et al., 2008;</ref><ref type="bibr" target="#b40">Tyson et al., 2004</ref>). Initial studies of this environment indicated that most genomic variation can be found in Ferroplasma sp Type II, with no predominant functional groups being associated with the variable regions (<ref type="bibr" target="#b40">Tyson et al., 2004</ref>). Subsequent publications with additional sequencing (included in our dataset), also showed significant variation in Leptospirillum sp Group II '5-way CG' (<ref type="bibr" target="#b35">Simmons et al., 2008</ref>). Here we evaluated whether Bambus 2 is able to rediscover these results. We detected a total of 99 motifs, of which 66 represented alternate sequences (two contigs occupying the same positions) and 33 represent insertion/deletion of sequence. The majority of motifs could be assigned to regions from the Ferroplasma sp Type II, as expected. However, as a percentage of bases contained within variation motifs (the extent, rather than number of motifs), the most varied organisms appear to be Leptospirillum sp Group II '5-way CG' and Leptospirillum sp Group III, followed by Ferroplasma sp Type II. The difference in the patterns of variation (frequent but small in Ferroplasma and less frequent but large in Leptospirillum) was also observed by<ref type="bibr" target="#b35">Simmons et al. (2008)</ref>and could be explained by different biological mechanisms that drive the genomic variability. It was hypothesized (<ref type="bibr" target="#b5">Eppley et al., 2007b</ref>) that recombination frequently occurs within Ferroplasma possibly due to the fact that that these organisms (as well as many other archaea) lack the mutS and mutL DNA repair systems. Conjugation or transduction, which produce large events (as they are dependent on the F-plasmid and phage size), was hypothesized to contribute to the genomic variation in Leptospirillum (<ref type="bibr" target="#b35">Simmons et al., 2008</ref>). We compare the genes within variation motifs to those identified in previous publications. We annotated the assembly by taking non-overlapping best BLASTX (<ref type="bibr" target="#b0">Altschul et al., 1990</ref>) hits for each unitig and assigned a COG (<ref type="bibr" target="#b37">Tatusov et al., 2000</ref>) functional category to each hit. We tabulated the counts of each COG category within the assembly and within the motifs. We then characterized the functional categories that are statistically enriched in motif regions (Supplementary Material). The functional category corresponding to 'DNA replication, recombination and repair' (category L) is significantly enriched (P = 0.006, hypergeometric test). Also enriched (P = 0.25, hypergeometric test) is one of the poorly characterized COG categories, 'general function prediction' (category R). Our results are consistent with previous analysis of the data (<ref type="bibr" target="#b35">Simmons et al., 2008</ref>). One specific motif identified within Leptospirillum sp Group II '5-way CG', corresponds to glycosyltransferase, a gene previously characterized as occurring within a mobile region of Leptospirillum sp Group II and Leptospirillum sp Group III (<ref type="bibr" target="#b12">Goltsman et al., 2009</ref>). Thus, it is expected that this mobile element would mutate and recombine independently within the members of the Leptospirillum sp population, giving rise to the motif.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Scaffolding output of NGS assemblers</head><p>Finally, we tested Bambus 2 on four dataset composed of nextgeneration sequencing reads. The first dataset, comprising the gut microbiome of twins (<ref type="bibr" target="#b39">Turnbaugh et al., 2008</ref>), was assembled using Newbler (<ref type="bibr" target="#b22">Margulies et al., 2005</ref>) followed by Bambus 2. Our assembly combined all 18 individual samples from the original study. The assembly generated 3230 variation motifs. Since we lacked a reference, we could not map our assembly and tabulate statistics as with previous datasets. Instead, we evaluated the assembly contiguity. We sorted the scaffolds in decreasing order by size and counted the number and size of the smallest scaffold Page: 2971 2964–2971</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bambus 2</head><p>The current version of our code does not make use of sequence information when performing graph simplification. We plan to incorporate such information in the future, allowing Bambus 2 to merge contigs, when appropriate. In addition, using sequence information can allow Bambus 2 to avoid false positives in detecting variation motifs. We also plan to distribute a visualization tool to allow users to interact with the variants and the assembly graph. The repeat detection procedures used in Bambus 2 are sensitive without sacrificing specificity, and could also be applied to the assembly of single genomes, in particular in single-cell projects where depth-of-coverage artifacts are common. The scaffolds generated by Bambus 2 cover a large percentage of the genomes in the samples, while largely avoiding misjoins. The fasta output of variants motifs facilitates analysis of the full diversity in an environment. Furthermore, the ability to highlight regions of variation has proven useful in detecting biologically meaningful patterns that match previously published results. Accurately assembling metagenomic datasets automatically is challenging with current assemblers, and often requires manual tuning of parameters and post-processing. Bambus 2 represents a first step toward automated metagenomic assembly, and is able to obtain long-range contiguity in metagenomic datasets while also characterizing regions of variation.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. (a) The unitig graph representation of a single unitig, 3, having double the coverage of the surrounding unitigs. Solid black arrows correspond to reads comprising a unitig. (b) One of the possible resolutions of the graph presented in (a). This example places unitig 3 in two locations along a single genome. (c) A second of the possible resolutions of the graph presented in (a). This example places unitig 3 at the same location in two genomes (highlighted in different colors).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. (a) A variant motif detected on the Sim3 dataset. The motif corresponds to a ferrochelatase gene in E.coli. There are two alternate versions of the gene within the E.coli K12 (2338) and E.coli O157:H7 (2034) genomes. (b) A CLUSTAL W (Thompson et al., 1994) alignment of a subset of the fasta output from Bambus 2, with an edit region corresponding to (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.3.</head><figDesc>Fig. 3. The figure shows a subset of a bacterial assembly where nodes are connected if they share paired-end reads. The shaded node, 119, is a repeat that occurs on many shortest paths.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.4.</head><figDesc>Fig. 4. Repeat detection comparison. Ideal repeat detection corresponds to the top-right corner of the graph, with 100% sensitivity and specificity. We vary the genome size estimate (a critical parameter in the procedure for detecting repeats) for CA, generating a curve for each dataset. The CA-met default is indicated by large shaded points. The Bambus 2 repeat detection is fully automated, generating a single point. As CA is designed for clonal organisms, only the default genome size estimate is used for B.suis. The gold standard is built from REPuter. All tests are run using the set of unitigs generated by CA-met. Sensitivity: True Positives True Positives+False Negatives. Specificity: True Negatives True Negatives+False Positives .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.5.</head><figDesc>Fig. 5. Assembly results for three simulated datasets. The y-axis represents the minimum number of scaffolds that add up to 1% of the genome size. Lower bars represent a better assembly. Bambus 2 produces large scaffolds for a wide range of coverage levels in our simulated datasets. Bambus 2 (CA-met) is Bambus 2 run using CA-met instead of using Minimus unitigs. We aligned the assembly (all contigs &gt; 2 kb) to the reference and counted coverage by reciprocal best matches over 95% identity. We use reciprocal best matches to avoid double counting Bambus 2 motifs that cover the same genomic region. We divide the number of scaffolds by the genome coverage and average the results, by genome, on all three simulated datasets to evaluate performance across varying coverage. 'mosaic' assembly leads CA-met makes more mistakes (chimeric scaffolds) than Bambus 2. We examined all datasets for variation motifs detected by Bambus 2. A total of 16 motifs were found in the Sim1 dataset, and 6 motifs in the Sim2 dataset. Each of the motifs appear to be false positives (all the contigs comprising the motif originate from the same genome). The analysis of the sequence of the overlapping unitigs could be used to detect and correct such mistakes. Such analyses will be included in future versions of our software.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.6.</head><figDesc>Fig. 6. Assembly results for the acid mine metagenomic dataset. The y-axis represents the minimum number of scaffolds that add up to 1% of the genome size. Lower bars represent a better assembly. Bambus 2 produces larger scaffolds that CA-met in three of the five genomes. We calculated assembly statistics as in Figure 5. In three genomes, both CA and Bambus 2 produced slightly &gt;100% coverage. This is due to redundancy within the MUMmer alignments.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 1. Simulated data</figDesc><table>Organism 
Reference size 
Identifier 

Psychromonas sp CNPT3 
3 052 410 
AAPG00000000 
Porphyromonas gingivalis W83 
2 343 476 
AE015924 
Escherichia coli K-12 MG1655 
4 639 675 
U00096 
Escherichia coli O157:H7 EDL933 
5 528 445 
AE005174 

Dataset 
# Reads 
Size of simulated paired-end libraries 
P.sp CNPT3 
P.gingivalis W83 
E.coli K-12 
E.coli O157:H7 

Sim1 
10 000 
50% 5 kb, 50% 10 kb 
1.97X 
2.00X 
2.01X 
0.00X 
Sim2 
10 000 
50% 5 kb, 50% 10 kb 
5.30X 
0.55X 
0.56X 
0.00X 
Sim3 
10 000 
50% 5 kb, 50% 10 kb 
0.55X 
0.57X 
1.68X 
1.65X 

Four reference genomes were used to generate three simulated datasets. Organism: the reference used to generate simulated data. Reference size: the size (in base pair) of the 
reference. Identifier: the identifier of the reference in the NCBI Entrez database. # Reads: total number of reads simulated from the reference for a simulated dataset. The effective 
coverage for each reference is listed in each dataset. 

</table></figure>

			<note place="foot">© The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [17:51 7/10/2011 Bioinformatics-btr520.tex] Page: 2970 2964–2971</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We thank Kate Koren, Jason Miller and Granger Sutton for suggestions and discussion on the manuscript and algorithms. We thank Dan Sommer and Bo Liu for helping to download data and annotate assemblies.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S.Koren et al.</head><p>The contiguity results on four NGS datasets. #Scaffolds: the number of scaffolds &gt; 2 kb. Mean: the average length of scaffolds. Max: the maximum length scaffold in the assembly. Scaffold at 5 Mb: we sort the scaffolds in decreasing order by length and count the number and size of the smallest scaffold required to reach 5 Mb. The #ORFs/MB measures the number of open reading frames (ORFs) identified by MetaGeneMark (<ref type="bibr" target="#b21">Lukashin and Borodovsky, 1998</ref>) in the assembly. The counts are normalized by total sequence length in the assembly. The # Scf in 1% is reported as in Figures 5 and 6 using a reference identified by BLAST (<ref type="bibr" target="#b0">Altschul et al., 1990</ref>); lower scores are better. The errors are reported by dnadiff from the MUMmer 3.20 package (<ref type="bibr" target="#b18">Kurtz et al., 2004</ref>). The GUT dataset did not include paired-end information and we relied on the Newbler contig graph to perform scaffolding with Bambus 2. Therefore, the Newbler results are reported on contigs not scaffolds as no scaffolds were generated by Newbler on this dataset. required to reach 5 Mb (). To assess scaffold correctness, we used BLAST (<ref type="bibr" target="#b0">Altschul et al., 1990</ref>) to identify a dominant organism within the datset. The best hit was Bifidobacterium longum NCC2705 (AE014295). We mapped the assembled scaffolds to the reference using nucmer (<ref type="bibr" target="#b18">Kurtz et al., 2004</ref>) and calculated the errors in scaffolds and the number of scaffolds to cover 1% of the reference. We also ran MetaGeneMark (<ref type="bibr" target="#b21">Lukashin and Borodovsky, 1998</ref>) to identify open reading frames (ORFs) within the assemblies and include the results in. We annotated the assembly and evaluated COG functional category enrichment in motifs as before. The COG functional categories for 'amino acid transport and metabolism' (category E), 'nucleotide transport and metabolism' (category F), 'carbohydrate transport and metabolism' (category G), 'DNA replication, recombination and repair' (category L) and 'cell envelope biogenesis, outer membrane' (category M) were enriched, while categories for 'cell motility and secretion' (category N) and 'unknown function' (category S) were depleted in the variation motifs found by Bambus 2. Interestingly, the enriched functional categories were characterized as 'core' for the gut biome (categories universally found across all subjects) in<ref type="bibr" target="#b39">Turnbaugh et al. (2008)</ref>. Other categories classified by<ref type="bibr">Turnbaugh et al.</ref>as core, such as 'transcription' (category K), were also found enriched in our motifs, but not significantly (Supplementary Material).<ref type="bibr">Turnbaugh et al.</ref>noted that while no core microbiome exists at a taxonomic level, a core can be detected at a functional level. The over-abundance of these core genes in the detected motifs may explain this observation. We hypothesize that the core genes can occur in different genomic contexts due to lateral transfer, allowing a diverse set of organisms to survive within the human distal gut, and thereby explaining an enrichment of such genes within variation hotspots. These results would not be apparent from the analysis of the contig consensus sequences and demonstrate the importance of performing detailed analyses of the data underlying the assembly (i.e. the assembly graph) to characterize an environment. We selected three samples at random from the MetaHit consortium (V1.CD-2, V1.UC-8 and MH0012) (<ref type="bibr" target="#b31">Qin et al., 2010</ref>). We reran SOAPdenovo to generate unitigs and scaffolds. We used Bambus 2 to scaffold the unitigs produced by SOAPdenovo (<ref type="bibr" target="#b20">Li et al., 2010</ref>) and compare Bambus 2 scaffolds to those generated by SOAPdenovo (). One dataset (V1.CD-2), comprising over 51M Illumina reads was analyzed in ≈ 3.5 h with a peak RAM usage of 10.0 GB. The largest dataset (MH0012) comprising 186M reads was analyzed in ≈20 h. In all cases, Bambus 2 produced more contiguous scaffolds than SOAPdenovo, in two cases more than doubling the largest scaffolds. We again identified a dominant organism within each dataset and map scaffolds to it. The best hits were Bacteroides coprophilus DSM 18228 (NZ_ACBW00000000), Methanobrevibacter smithii ATCC 35061 (NC_009515) and Akkermansia muciniphila ATCC BAA-835 (CP001071.1) for V1.CD-2, V1.UC-8 and MH0012, respectively. Bambus 2 produced more ORFs per MB of assembly. It also required fewer scaffolds to cover the reference while not introducing many errors. We hypothesize that the improvement in contiguity is due to Bambus 2 overcoming genomic variation within the data, where we identified 2763 variation motifs. To evaluate our hypothesis, we aligned Bambus 2 motifs to SOAPdenovo scaffolds and counted motifs that span multiple scaffolds. Out of the 2763 motifs in the assemblies, 2554 mapped to multiple scaffolds, confirming that Bambus 2 motifs correspond to scaffold breaks in SOAPdenovo.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION</head><p>Bambus 2 is not a stand-alone assembler. Instead, it is a drop-in scaffolding module optimized for non-clonal data and is compatible with the output of many modern assemblers. Thus, Bambus 2 can be applied to virtually all existing sequencing technologies—it is sufficient to start with an assembler that is best suited for that type of data. We have shown that it can easily be applied to the output of Celera Assembler, Newbler, SOAPdenovo and Minimus, and have demonstrated its performance in Sanger, 454 and Illumina data. Bambus 2 includes an executive script (named goBambus2) that will automatically process input data in a variety of formats and run the pipeline, making it easy to use.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Basic local alignment search tool</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">215</biblScope>
			<biblScope unit="page" from="403" to="410" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Enterotypes of the human gut microbiome</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Arumugam</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">473</biblScope>
			<biblScope unit="page" from="174" to="180" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">ALLPATHS: De novo assembly of whole-genome shotgun microreads</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Butler</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="810" to="820" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Sopra: scaffolding algorithm for paired reads via statistical optimization</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Dayarian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page">345</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Strainer: software for analysis of population variation in community genomic datasets</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Eppley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">398</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Genetic exchange across a species boundary in the archaeal genus ferroplasma</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">M</forename>
				<surname>Eppley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genetics</title>
		<imprint>
			<biblScope unit="volume">177</biblScope>
			<biblScope unit="page" from="407" to="416" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficiently detecting polymorphisms during the fragment assembly process</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Fasulo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="294" to="302" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">A set of measures of centrality based on betweenness</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Freeman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sociometry</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="35" to="41" />
			<date type="published" when="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Centrality in social networks conceptual clarification</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Freeman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Soc. Netw</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="215" to="239" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">An open graph visualization system and its applications to software engineering</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">R</forename>
				<surname>Gansner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">C</forename>
				<surname>North</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Softw. Pract. Exp</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="1203" to="1233" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Opera: reconstructing optimal genomic scaffolds with highthroughput paired-end sequences</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Gao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">6577</biblScope>
			<biblScope unit="page" from="437" to="451" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<monogr>
		<title level="m" type="main">Computers and Intractability: a Guide to NPCompleteness</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Garey</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Johnson</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>WH Freemanand Company</publisher>
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Community genomic and proteomic analyses of chemoautotrophic iron-oxidizing &quot; Leptospirillum rubarum &quot; (Group II) and &quot; Leptospirillum ferrodiazotrophum &quot; (Group III) bacteria in acid mine drainage biofilms</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">S</forename>
				<surname>Goltsman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Environ. Microbiol</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="4599" to="4615" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Metagenomic discovery of biomass-degrading genes and genomes from cow rumen</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Hess</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">331</biblScope>
			<biblScope unit="page" from="463" to="467" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">The greedy path-merging algorithm for sequence assembly</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Huson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth Annual International Conference on Computational Biology, RECOMB&apos;01</title>
		<meeting>the Fifth Annual International Conference on Computational Biology, RECOMB&apos;01<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="157" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Combinatorial algorithms for DNA sequence assembly</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kececioglu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Myers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="7" to="51" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Assembly complexity of prokaryotic genomes using short reads</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Kingsford</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Succession of microbial consortia in the developing infant gut microbiome</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">E</forename>
				<surname>Koenig</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="4578" to="4585" />
		</imprint>
	</monogr>
	<note>Suppl. . 1</note>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Versatile and open software for comparing large genomes</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Kurtz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">12</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Genovo: de novo assembly for metagenomes</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Laserson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="429" to="443" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">De novo assembly of human genomes with massively parallel short read sequencing</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="265" to="272" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Genemark.hmm: new solutions for gene finding</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">V</forename>
				<surname>Lukashin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Borodovsky</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1107" to="1115" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Genome sequencing in microfabricated high-density picolitre reactors</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Margulies</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">437</biblScope>
			<biblScope unit="page" from="376" to="380" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Use of simulated data sets to evaluate the fidelity of metagenomic processing methods</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Mavromatis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="495" to="500" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Computability of models for sequence assembly</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Medvedev</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithms in Bioinformatics Lecture Notes in Computer Science</title>
		<editor>Giancarlo,R. and Hannenhalli,S.</editor>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">4645</biblScope>
			<biblScope unit="page" from="289" to="301" />
			<date type="published" when="2007" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Aggressive assembly of pyrosequencing reads with mates</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">R</forename>
				<surname>Miller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="2818" to="2824" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">A whole-genome assembly of Drosophila</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">W</forename>
				<surname>Myers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">287</biblScope>
			<biblScope unit="page" from="2196" to="2204" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Parametric complexity of sequence assembly: theory and applications to next generation sequencing</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Nagarajan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Pop</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="897" to="908" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Meta-idba: a de novo assembler for metagenomic data</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Peng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="94" to="101" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Genome sequence of enterohaemorrhagic Escherichia coli O157: H7</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Perna</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">409</biblScope>
			<biblScope unit="page" from="529" to="533" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">Hierarchical scaffolding with Bambus</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Pop</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="149" to="159" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">A human gut microbial gene catalogue established by metagenomic sequencing</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Qin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">464</biblScope>
			<biblScope unit="page" from="59" to="65" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">MetaSim: a sequencing simulator for genomics and metagenomics</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">C</forename>
				<surname>Richter</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">3373</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">The Sorcerer II global ocean sampling expedition: Northwest atlantic through eastern tropical pacific</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">B</forename>
				<surname>Rusch</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">77</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<analytic>
		<title level="a" type="main">A statistical framework for the functional analysis of metagenomes</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Sharon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Res. Comput. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">5541</biblScope>
			<biblScope unit="page" from="496" to="511" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">Population genomic analysis of strain variation in Leptospirillum Group II bacteria involved in acid mine drainage formation</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">L</forename>
				<surname>Simmons</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">177</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b36">
	<analytic>
		<title level="a" type="main">Minimus: a fast, lightweight genome assembler</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Sommer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">64</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b37">
	<analytic>
		<title level="a" type="main">The COG database: a tool for genome-scale analysis of protein functions and evolution</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">L</forename>
				<surname>Tatusov</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="33" to="36" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b38">
	<analytic>
		<title level="a" type="main">CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">D</forename>
				<surname>Thompson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="4673" to="4680" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b39">
	<analytic>
		<title level="a" type="main">A core gut microbiome in obese and lean twins</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Turnbaugh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">457</biblScope>
			<biblScope unit="page" from="480" to="484" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b40">
	<analytic>
		<title level="a" type="main">Community structure and metabolism through reconstruction of microbial genomes from the environment</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Tyson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">428</biblScope>
			<biblScope unit="page" from="37" to="43" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b41">
	<analytic>
		<title level="a" type="main">Environmental genome shotgun sequencing of the sargasso sea</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Venter</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">304</biblScope>
			<biblScope unit="page" from="66" to="74" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b42">
	<analytic>
		<title level="a" type="main">Quasispecies diversity determines pathogenesis through cooperative interactions in a viral population</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Vignuzzi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">439</biblScope>
			<biblScope unit="page" from="344" to="348" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b43">
	<analytic>
		<title level="a" type="main">Assembly of polymorphic genomes: Algorithms and application to Ciona savignyi</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">P</forename>
				<surname>Vinson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1127" to="1135" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b44">
	<analytic>
		<title level="a" type="main">The Sorcerer II global ocean sampling expedition: expanding the universe of protein families</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Yooseph</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">16</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b45">
	<analytic>
		<title level="a" type="main">Velvet: algorithms for de novo short read assembly using de Bruijn graphs</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">R</forename>
				<surname>Zerbino</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Birney</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="821" to="829" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b46">
	<analytic>
		<title level="a" type="main">Pebble and rock band: Heuristic resolution of repeats and scaffolding in the velvet short-read de Novo assembler</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">R</forename>
				<surname>Zerbino</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">8407</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>