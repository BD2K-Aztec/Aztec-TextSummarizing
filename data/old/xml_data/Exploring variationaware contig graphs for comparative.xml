
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:40+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis Exploring variation-aware contig graphs for (comparative) metagenomics using MARYGOLD</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Jurgen</forename>
								<forename type="middle">F</forename>
								<surname>Nijkamp</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Intelligent Systems</orgName>
								<orgName type="department" key="dep2">The Delft Bioinformatics Lab</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>The Netherlands</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mihai</forename>
								<surname>Pop</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Center for Bioinformatics and Computational Biology</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Marcel</forename>
								<forename type="middle">J T</forename>
								<surname>Reinders</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Intelligent Systems</orgName>
								<orgName type="department" key="dep2">The Delft Bioinformatics Lab</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>The Netherlands</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Dick</forename>
								<surname>De Ridder</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Intelligent Systems</orgName>
								<orgName type="department" key="dep2">The Delft Bioinformatics Lab</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>The Netherlands</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genome analysis Exploring variation-aware contig graphs for (comparative) metagenomics using MARYGOLD</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">22</biblScope>
							<biblScope unit="page" from="2826" to="2834"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt502</idno>
					<note type="submission">Received on March 16, 2013; revised on August 1, 2013; accepted on August 23, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Michael Brudno</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Although many tools are available to study variation and its impact in single genomes, there is a lack of algorithms for finding such variation in metagenomes. This hampers the interpretation of metagenomics sequencing datasets, which are increasingly acquired in research on the (human) microbiome, in environmental studies and in the study of processes in the production of foods and beverages. Existing algorithms often depend on the use of reference genomes, which pose a problem when a metagenome of a priori unknown strain composition is studied. In this article, we develop a method to perform reference-free detection and visual exploration of genomic variation, both within a single metagenome and between metagenomes. Results: We present the MARYGOLD algorithm and its implementation, which efficiently detects bubble structures in contig graphs using graph decomposition. These bubbles represent variable genomic regions in closely related strains in metagenomic samples. The variation found is presented in a condensed Circos-based visualization, which allows for easy exploration and interpretation of the found variation. We validated the algorithm on two simulated datasets containing three respectively seven Escherichia coli genomes and showed that finding allelic variation in these genomes improves assemblies. Additionally, we applied MARYGOLD to publicly available real metagenomic datasets, enabling us to find within-sample genomic variation in the metagen-omes of a kimchi fermentation process, the microbiome of a premature infant and in microbial communities living on acid mine drainage. Moreover, we used MARYGOLD for between-sample variation detection and exploration by comparing sequencing data sampled at different time points for both of these datasets. Availability: MARYGOLD has been written in Cþþ and Python and can be downloaded from http://bioinformatics.tudelft.nl/software Contact: d.deridder@tudelft.nl</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Recently, large-scale microbiome analyses, such as metaHIT (<ref type="bibr" target="#b26">Qin et al., 2010</ref>) and the National Institutes of Health Human Microbiome Project (<ref type="bibr">Human Microbiome Project Consortium, 2012</ref>), have demonstrated the importance and the richness of our second genome: the microbes inhabiting many different sites of our bodies. To get the complete picture of all DNA present, its biological functions and the genetic variation, increasingly whole-metagenome sequencing is performed (<ref type="bibr" target="#b9">Hess et al., 2011;</ref><ref type="bibr" target="#b26">Qin et al., 2010</ref>). Large-scale analysis of variation within and between the resulting metagenomes—single nucleotide variants, short insertions and deletions (indels) and structural variaton—is essential to fully understand their genetic makeup. However, relatively few studies have thus far ventured into such analyses.<ref type="bibr" target="#b29">Schloissnig et al. (2013)</ref>combined data obtained from stool samples in the metaHIT and HMP projects and a study comparing leanness and obesity (<ref type="bibr" target="#b33">Turnbaugh et al., 2009</ref>), taking a read mapping approach to detect millions of single nucleotide polymorphisms and other genetic variation in bacterial metagenomes.<ref type="bibr" target="#b21">Morowitz et al. (2011)</ref>studied the metagenome of stool samples of a premature infant using an assembly approach. Manual analysis of the assembly output resulted in a genetic variation found in Citrobacter strains. A major reason for this lack of metagenomic variation analysis is a shortage of available tools. Variation detectors have mainly been developed for the isolated genomes of single individuals and can be roughly divided in two categories: reference-based and reference-free. Several reference-based methods that map reads to a preconstructed reference genome are available to detect single nucleotide variants and structural variants, as reviewed in<ref type="bibr" target="#b23">Nielsen et al. (2011) and</ref><ref type="bibr" target="#b20">Medvedev et al. (2009)</ref>, respectively. However, in metagenomics, reference genomes are usually not available for all species. Moreover, many bacterial species are not cultivable in the laboratory, complicating construction of reference genomes. Reference-free methods, in contrast, detect variation between sequencing samples directly, without resorting to reference genomes.<ref type="bibr" target="#b7">Fasulo et al. (2002)</ref>showed that genomic regions with polymorphisms give rise to bubbles in the fragment assembly graph and presented an algorithm to find and smooth the bubbles, which was implemented in the Celera assembler. The Cortex assembler (<ref type="bibr" target="#b12">Iqbal et al., 2012</ref>) was designed to coassemble multiple genomes and search for such bubbles in the de Bruijn graph that represent variation between the assembled genomes. Decomposition of a de Bruijn graph into biconnected components followed by bubble detection has been shown to be useful in detecting splicing variants in RNA sequencing data (<ref type="bibr" target="#b27">Sacomoto et al., 2012</ref>). *To whom correspondence should be addressed. Similar to co-assembly of individual genomes, metagenome assembly involves simultaneous assembly of multiple genomes. The presence of two closely related genomes in a sample leads to similar bubbles. The metagenome scaffolder Bambus 2 was designed to detect these bubbles and collapse them, thereby elongating scaffolds while preserving divergence in the data (<ref type="bibr" target="#b14">Koren et al., 2011</ref>). Bambus 2 finds bubbles by looking for subgraphs where multiple paths begin at a source node and collapse to one sink node. To keep computation tractable, the number of hops considered is limited to two. Meta-IDBA similarly searches bubbles in a de Bruijn graph, but the search is limited to a maximum of 300 bp (<ref type="bibr" target="#b25">Peng et al., 2011</ref>). Here we set out to detect complex bubbles such as presented in<ref type="figure" target="#fig_0">Figure 2a</ref>, i.e. longer than can currently be detected by Bambus 2 and Cortex, typically found when 42 homologous sequences (closely related genomes) are present in a sample. We overcome the computational limitations in the aforementioned methods by developing an efficient way to find genome variation in assembly graphs, by introducing a graph decomposition into bi-and triconnected components that allows us to select a subset of the nodes as source nodes for bubble finding. Identifying bubbles representing multi-alleles has three applications. First, it can be used to detect sequence variation, i.e. multiple alleles, between strains within a single-sample metagenome. Second, co-assembling multiple metagenomes allows the detection of variation between samples. This latter application is particularly novel and is set to become more prominent as more metagenomics datasets will become available over the coming years. Third, although not the main focus in this article, it allows to simplify assemblies, generating longer scaffolds and contigs by collapsing bubbles into a single linear sequence instead of breaking into multiple contigs. Co-assembly has previously been used by<ref type="bibr" target="#b6">Dutilh et al. (2012)</ref>to calculate global distances between metagenomes, but here we aim to find sequence-level differences. We demonstrate MARYGOLD, our algorithm to find bubbles and compare them across samples using co-assembly, by comparing metagenome samples obtained using 454 technology of different time points obtained from the stool sample of a premature infant (<ref type="bibr" target="#b21">Morowitz et al., 2011</ref>) and a fermentation process of the traditional Korean food kimchi (<ref type="bibr" target="#b13">Jung et al., 2011</ref>). We also apply the algorithm on sequencing data of microbial populations found on acid mine drainage (<ref type="bibr" target="#b5">Denef and Banfield, 2012</ref>), obtained using both 454 and Illumina technologies, and compare MARYGOLD with Bambus 2. MARYGOLD exports the variation detected in a format that can be visualized by Circos, allowing for a rich visual exploration and interpretation of the genomic variation in metagenomes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">ALGORITHM</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Generating a contig graph</head><p>De novo assembly of metagenomes relies on the same principles as that of single genomes. It can be done either by assemblers based on de Bruijn graphs or overlap-layout-consensus assemblers as reviewed by<ref type="bibr" target="#b18">Li et al. (2012)</ref>. Both of these types of assembler use graphs to merge the millions of short reads into longer contiguous sequences, with the ultimate goal of reconstructing full genomes. Although de Bruijn graph and overlaplayout-consensus assemblers have different ways of building their graphs, i.e. by means of kmer hashing and pairwise read alignment, respectively, both paradigms produce graphs that contain similar information and have similar limitations. In both, repeats longer than the read length (or kmer length) will cause branching in the graph, and unique regions correspond to unambiguously reconstructable sequences. The algorithm we propose uses the graphical output of assemblers to reconstruct metagenomes. The assembly graphs are assumed to have nodes representing contigs and edges representing reads spanning the connected contigs. The graph is bidirected because it has both contigs coming from the forward strand and from the reverse strand of the DNA molecule (<ref type="bibr" target="#b16">Kundeti et al., 2010</ref>). From this point onward, we refer to this graph as the contig graph G ¼ ðV, EÞ that has a set of nodes V ¼ fv 1 , v 2 ,. .. , v n g and a set of edges E ¼ fðv i , v j , o 1 , o 2 Þjv i , v j 2 V ^ o 1 , o 2 2 f., /gg. The set of nodes is created by assigning each contig c 2 C to a unique node. A path from v i to v j through the bidirected-contig graph is a sequence of nodes and edges v i , e i1 , v i1 , e i2 , :::, v im , e imþ1 , v j , such that each intermediate node v il in subsequence e il , v il , e ilþ1 has matching orientations of its incoming edge (e il ¼ ðv ilÀ1 , v il , o 1 , o 2 Þ) and outgoing edge (e ilþ1 ¼ ðv il , v ilþ1 , o 0 1 , o 0 2 Þ), i.e. o 2 ¼ o 0 1 (<ref type="bibr" target="#b16">Kundeti et al., 2010</ref>). The DNA sequence corresponding to a node in a path depends on its traversal. The reverse complement DNA sequence of a node v il is used when either o 2 ¼ / or o 0 1 ¼ / (<ref type="figure" target="#fig_1">Fig. 1</ref>: node GGTG).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Metagenome graph compression</head><p>In the contig graph, two contigs can be reliably concatenated, with or without a gap, if they are connected by a single edge and no other edge contradicts their concatenation. Ambiguity arises when multiple edges of a contig link to other contigs. In metagenome assemblies where we are dealing with closely related strains, such branches in the graph can be caused by sequence divergence between two strains of the same (or closely related) species in the sample, forming bubbles (<ref type="figure" target="#fig_1">Fig. 1</ref>). In this work we try to elongate scaffolds and contigs by identifying these regions and collapsing them to multi-allelic contigs. The main challenge tackled here is the detection of complex bubble structures. We define a bubble as a subgraph where all maximally extended paths within the bubble start in a single source node and end in a single sink node or vice versa (the source and sink nodes are interchangeable because of the twostranded nature of DNA, i.e. they can be swapped by taking the reverse complement of all nodes in the subgraph).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Finding separation pairs using graph decomposition In</head><p>Bambus 2, source–sink pairs are iteratively found by traversing all paths leaving a node and checking if these paths all collapse to a sink node within a certain number of hops. The number of hops is limited to two to keep this search tractable. Here we set out to find source–sink pairs efficiently, so that we can detect source and sink nodes that are42 hops apart from each other in !1 of the connecting paths. This allows us to detect more complex multi-allelic sites. We achieve this by finding separation pairs, i.e. pairs of nodes that increase the number of connected components in a graph when they are removed. All source and sink pairs are a separation pair (Theorem 1), though the converse THEOREM 3. A contig can be the source of at most one bubble and the sink of at most one other bubble.</p><p>To limit computation time, we try to minimize the number of bubble searches that we have to do by reducing the set of separation pairs. When a bubble is successfully found, all separation pairs that have at least one node in this bubble are removed from</p><p>(a) (b)). If we failed to find a bubble from a source node, then all separation pairs that contain the source node are removed from the set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Assembly simplification by collapsing multi-allele bubbles</head><p>Scaffold and assembly graphs can be simplified by collapsing the bubbles into supercontigs. The inner contigs of the bubble are replaced in the contig graph by a single supernode (<ref type="figure" target="#fig_1">Fig. 1</ref>). All edges to and from the inner nodes are removed and replaced by two new edges: from source to supernode and from supernode to sink. Subsequently, a so-called unitigging step is performed, which is a search for simple paths without branches. The contigs in the simple paths are then combined into a single supercontig. These supercontigs represent different alleles between the source and sink node present in the genomes in the sample. Any path from source to sink through this supercontig spells a valid assembly (<ref type="bibr" target="#b22">Myers, 2005</ref>) and is a potential allele in one of the genomes. The native output of MARYGOLD is a graph describing the multi-allele. Nonetheless, downstream processing is facilitated by sequence-based tools, as there is also a sequence output, which is the highest depth path in the multi-allele (with ties broken arbitrarily).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Comparative metagenomics: genomic variation detection between metagenomes by co-assembly</head><p>The MARYGOLD algorithm enables variation detection between metagenome sequencing samples through co-assembly. By keeping track of the sample origin of the reads during assembly, a read depth per contig per sample can be calculated. Bubbles are then detected and the potential alleles are enumerated by finding all maximal paths from source to sink. The number of alleles corresponds to the number of paths from source to sink, although in reality there may be more possible paths than actual alleles present in genomes. The alleles (and their carrying organisms) are present in unknown relative abundance. The sequencing depth for a single allele in a complex bubble, reflecting its relative abundance, is not trivial to find, as some nodes will be shared by two or more paths, e.g. node 5 in<ref type="figure" target="#fig_0">Figure 2a</ref>is shared by three paths between nodes 10 and 11. We infer the allele depth from the read depth of the contigs in its path, by minimizing the difference between the sum of the depths of the paths j that cross a node i and its read depth d i for all node i ¼ f1, :: , ng using a non-negative linear least squares approach. The residual of node i for paths j ¼ f1, :: , mg in a multi-allele a then is</p><formula>r i ¼ d i À X m j x ij j ð1Þ</formula><p>where X is the design matrix with binary regressors X i, j ¼ 1 path j crosses node i 0 otherwise ð2Þ and a is an m times 1 vector with the unknown path weights. The least squares method then finds path weights ^ a that minimize the sum of the squared residuals</p><formula>S ¼ X n i¼1 r 2 i ð3Þ</formula><p>under the constraint that the allele read depths in ^ are positive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.1">Measure of variation between alleles</head><p>To quantify the extent of the genomic difference in a bubble, we use a normalized version of the Levenshtein distance (or edit distance), summarizing the sequence distances of the alleles in a bubble. The average distance D M is obtained by calculating the Levenshtein distance levðs, tÞ for each pair of alleles s and t in a multi-allele M with N alleles and normalizing for the maximum length of the two alleles</p><formula>D M ¼ N 2 À1 X s, t, s5t</formula><p>levðs, tÞ maxðjsj, jtjÞ ð4Þ</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">METHODS</head><p>Most of the MARYGOLD algorithm is implemented in Cþþ, with some additional Python scripts. The algorithm interfaces with the AMOS bank, where Bambus 2 and metAMOS store their assembly and scaffold information, using the AMOS library (<ref type="bibr" target="#b31">Treangen et al., 2011</ref>). The graph decomposition in bi-and triconnected components uses the Open Graph Drawing Framework (<ref type="bibr" target="#b1">Chimani et al., 2007</ref>). The multi-allele search algorithm is parallelized using OpenMP (<ref type="bibr" target="#b2">Dagum and Menon, 1998</ref>). The non-negative least squares solver from the SciPy optimization package is used to obtain sequencing depths for the individual alleles, which is a wrapper around Fortran code (<ref type="bibr" target="#b17">Lawson and Hanson, 1974</ref>). Two shotgun datasets were simulated with the 454sim v1.04 package (<ref type="bibr" target="#b19">Lysholm et al., 2011</ref>) using default settings from the genomes of three respectively seven Escherichia coli strains, to illustrate the effect on metagenome assembly of multiple closely related genomes. Four real sequencing datasets from the public domain were used to demonstrate the, 2, ., /Þ is visited. As all edges incident to node 2 with o 2 ¼ / have been visited, all edges of node 2 with o 1 0 ¼ / are queued. (c) Edge ð1, 3, ., .Þ is visited, but in this case, not all edges incident to node 3 with o 2 ¼. have been visited yet, so the edges of node 3 are not queued. (d) The next edge ð2, 4, /, /Þ in Q is traversed to target node 4. Again, not all edges incident to node 4 with o 2 ¼ / have been visited, so no edges are added to Q. The Q is now empty and the algorithm terminates: node 1 in forward orientation is not a valid source node comparative metagenomics functionality of MARYGOLD. The first was obtained from the microbiome of a premature infant.<ref type="bibr" target="#b21">Morowitz et al. (2011)</ref>sequenced the genomic DNA of the fecal microbiome, sampled on days 10, 16, 18 and 21 of the infant's life. The second dataset was obtained at 10 different time points during the 29-day fermentation process of kimchi, the traditional Korean food (<ref type="bibr" target="#b13">Jung et al., 2011</ref>). Both datasets are well suited for comparative metagenomics, as we can compare the metagenomes of the different time points. Finally, two sequencing datasets generated from samples obtained from the Richmond mine location C75 (<ref type="bibr" target="#b5">Denef and Banfield, 2012</ref>) were downloaded from the Sequence Read Archive to compare performance on low coverage, but long 454 reads (SRA:SRR358990, 454 Titanium FLX, 133M bases) versus high coverage, but shorter Illumina reads (SRR359000, Illumina HiSeq2000 3.6G bases, 100 bp/read). Assemblies were performed within the metAMOS v1.1 package (<ref type="bibr" target="#b32">Treangen et al., 2013</ref>) using the Newbler v2.6 assembler (Roche, Branford, CT). Newbler was run with parameters '-a 0-m-ace'. Additionally, the '-large' parameter was added for the assembly of the Illumina datasets to speed up the processing of the fragment assembly graph. Assigning taxonomic attributions was performed using the Fragment Classification Package v1.0 (<ref type="bibr" target="#b24">Parks et al., 2011</ref>). Circular plots were generated with Circos v0.63 (<ref type="bibr" target="#b15">Krzywinski et al., 2009</ref>), and graph layouts were performed with Cytoscape v2.8.3 (<ref type="bibr" target="#b30">Shannon et al., 2003</ref>). The DAVID functional annotation tool (<ref type="bibr" target="#b10">Huang et al., 2009</ref>) was applied on the genes in the kimchi sample that overlapped with the multialleles to find enrichment of functions and sequence features. DAVID was run with default settings, except that all predicted genes in the metagenome were used as background. Performance was analyzed and compared with that of Bambus 2 based on the contig graphs of the simulated E.coli metagenomes. Ground-truth variation calls were obtained by aligning the K12 strain to each of the other strains individually, using nucmer [Mummer (<ref type="bibr" target="#b4">Delcher et al., 2002)]</ref>. Subsequently, nucleotide variations were obtained using show-diff. Gapped alignments (labeled 'GAP') represent variation that could potentially lead to bubbles in the contig graph. Results from individual comparisons between K12 and all other strains were merged into a single list. Overlapping variation calls were merged. Next, MARYGOLD variation calls were related to a position on the K12 genome by aligning the source and sink node to its genome sequence. Bambus 2 variation calls were generated in FASTA format by the OutputMotifs program. Regions with the header 'REPLACE_RANGE' were extracted and aligned to the K12 genome to assign a genomic position to the variation call. Sensitivities were calculated as (100Â number of Mummer calls that overlap with a MARYGOLD bubble/ number of Mummer calls). Precision was calculated as (100Â number of MARYGOLD bubbles that overlap with a Mummer call/number of MARYGOLD bubbles that mapped to the K12 genome). These calculations were made likewise for the Bambus variation calls. Performance of MARYGOLD and Bambus 2 was also compared on the biofilm data. For Bambus 2, the OrientContigs program was run followed by OutputMotifs to output all multi-allelic regions. We then counted the number of bubbles and the number of contigs they contain. Bubbles were considered to overlap between the two methods if they shared at least three contigs.</p><formula>(a) ( b) ( c) ( d)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">MARYGOLD finds multi-allelic regions by detecting bubbles in the contig graph</head><p>The bubbles MARYGOLD detects are multi-allelic sites in the metagenome, meaning that for the genomic regions represented in the bubble, multiple alleles are present in the sample.<ref type="bibr" target="#b21">Morowitz et al. (2011)</ref>resolved the bubbles in the assembly graph by manual curation. This was possible because only two</p><p>Citrobacter strains were present, and therefore only bi-allelic bubbles had to be resolved. Our simulation experiments confirm that for a low number of strains, the contig graph is rather simple and bubbles can be resolved manually (<ref type="figure" target="#fig_4">Fig. 4a</ref>). If more strains are present, such as shown in our simulation experiment with seven E.coli genomes, the graph becomes too complex for manual curation (<ref type="figure" target="#fig_4">Fig. 4b</ref>). MARYGOLD detected 387 and 1582 bubbles in the simulated sequencing samples with three respectively seven strains (<ref type="figure" target="#tab_1">Table  1</ref>).The number of bubbles does not increase linearly with the number of strains, which is expected. If two genomes A and B differ at a locus, creating a bubble, then a third genome C that is again different at that locus will not result in an additional bubble, but just an additional path from source to sink within the bubble. Only at already present loci where A and B are identical, but C is different, the addition of genome C will result in an additional bubble. In the premature infant datasets, 154 bubbles were found (<ref type="figure" target="#tab_1">Table 1</ref>), predominantly in Citrobacter spp. (<ref type="figure">Fig. 5</ref>), as also described in the original article (<ref type="bibr" target="#b21">Morowitz et al., 2011</ref>). In the original study of the kimchi fermentation, no allele variation study was performed. Here we show that allele variation is present by detecting 133 bubbles in Lactobacillus spp., Leuconostoc spp. and Weisella spp. (<ref type="figure">Fig. 6</ref>), which are thought to be the key players in this vegetable fermentation process (<ref type="bibr" target="#b13">Jung et al., 2011</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Bubble collapsing allows studying genetic variation in genomic context</head><p>In the contig graph, contigs can be reliably concatenated into longer contiguous sequences, if they are connected by a simplepath without branching. The contig graph branches at multiallelic loci in the metagenome, leading to highly fragmented assemblies. By collapsing the bubbles that were detected by MARYGOLD (<ref type="figure" target="#fig_1">Fig. 1</ref>), the number of contigs in the assembly with three E.coli strains could be reduced by 28% and in the assembly of seven E.coli strains even by 450% (<ref type="figure" target="#tab_1">Table 1</ref>). The reduction in number of contigs in the real sequencing datasets was less apparent. In true metagenomic samples, genomes that have no close homologues are present. For such genomes, bubble compression does not reduce the number of contigs, as it only improves of the assembly of multiple closely related strains. Also, low sequencing depth causes low abundant strains to stay under the detection limit. Bubbles are collapsed by choosing a single path from source to sink in the contig graph, with the highest average sequencing depth, to represent the multiple alleles, which allows the output of linear instead of fragmented sequences as generated by the assembler. The linear sequences aid further analysis, such as gene prediction and taxonomic assignments.<ref type="figure">Figure 5</ref>shows a zoomed-in version of one such linear contig in the premature infant sample with gene annotations for each gene that overlaps with a multi-allelic locus. The genes that differed in the Citrobacter strains were found to be involved in iron and copper uptake as well as immunoglobulin (Ig) binding regulators, which bind to human Ig in a non-immune manner (<ref type="bibr" target="#b28">Sandt and Hill, 2001</ref>). Bubble collapsing enabled gene prediction across multi-allelic loci. The features 'retrotransposable element Tf2' and 'E.coli ABC transporter YbhF' were found to be significantly overrepresented (p ¼ 2:2 Â 10 À9 respectively p ¼ 6:0 Â 10 À3 , Bonferroni corrected) in genes in the kimchi sample that overlapped with the multi-alleles. Retrotransposons are expected to<ref type="figure">Fig. 5</ref>. Overview of the multi-allele bubbles of the premature infant's microbiome. Tracks in the circular plot from outside to inside are as follows: the multi-allele bubbles colored by species; their average length-weighted edit-distance D M indicating variation; and the inferred sequencing depths ^ a for days 21, 18, 16 and 10 with each allele a indicated by a different color. Sequencing depths were scaled by log 2 ð ^ a þ 1Þ to allow variable sequencing depths between genomes, and their gray axis is at 0.5. Below the circle is a zoomed version of one of the supercontigs, containing eight bubbles. Top: supercontig with the variable locations marked in purple. Middle: a gene track in which genes overlapping with a multi-allele site are functionally annotated. Bottom: the contig graph be found in multi-alleles, as they amplify themselves in a genome and create an additional allele after each insertion. The ABC transporter protein superfamily is involved in many cellular processes, including transport of a wide range of substrates and has been linked to development of resistance to multiple drugs, including antibiotics (<ref type="bibr" target="#b3">Davidson et al., 2008</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Co-assembly finds variation between metagenomes</head><p>Co-assembly of multiple metagenomics samples followed by bubble detection using MARYGOLD allows for reference-free sequence variation detection. Subsequent visualization of the bubbles enables visual analysis and interpretation, such as in<ref type="figure">Figure 5</ref>, that shows the sequencing depths at the 4 days for which the microbiome of the infant was sampled. The alleles, and hence their carrying strains, vary in abundance over time. The bubble of the Pantoea spp. with the longest sequence (red in<ref type="figure">Fig. 5</ref>) also has a high average distance between the alleles. The sequencing depths show that the 'green' allele is the most abundant at the second time point (day 16), whereas for the two subsequent time points, this allele diminishes, and the red allele becomes the most abundant one.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Performance analysis of MARYGOLD and Bambus 2</head><p>We assessed performance of MARYGOLD and compared it with that of Bambus 2. Although Bambus 2 is optimized for contig graphs generated with paired-end data, i.e. scaffold graphs rather than assembly graphs, the methods could be compared, as they both output their bubbles. Other assemblers also contain bubble detection algorithms, such as Velvet (<ref type="bibr" target="#b35">Zerbino and Birney, 2008</ref>), the Celera assembler (<ref type="bibr" target="#b7">Fasulo et al., 2002</ref>) and meta-IDBA (<ref type="bibr" target="#b25">Peng et al., 2011</ref>), but the bubble-finding algorithms are embedded in the assembler, and it is unclear how to access these methods. Moreover, the goal of these assemblers is to smooth the assemblies by collapsing bubbles, rather than using them for variation detection. First, we tested the algorithms on simulated metagenome data. Mummer was applied on finished high-quality genomes instead of on sequencing reads, to find a list of ground-truth variation calls.<ref type="figure">Table 2</ref>shows that MARYGOLD and Bambus found 16.8% respectively 2.0% of the nucleotide variation calls in the contig graph of the metagenome sample with three E.coli strains and 28.7% respectively 6.7% in the sample with seven strains. Bambus showed a higher precision, but the F1 score (the harmonic mean of the sensitivity and precision) was higher for MARYGOLD. The reference-free methods could not recover all ground-truth genomic differences, as de novo assemblies are hampered by the short read lengths, which cause fragmented assemblies in the presence of repeats. Additionally, the individual strains had $2Â depth of coverage. If an allele appeared in only one strain, the bubble might have been removed by the assembler because it considered it to be a sequencing error. The difference in the number of bubbles found by MARYGOLD and Bambus 2 can be explained by looking at the algorithmic differences. Bambus 2 finds only bubbles detectable within two hops of the source node, which are then iteratively composed into larger bubbles. Additionally, the definition of a bubble slightly differs: unlike MARYGOLD, Bambus 2 allows for missing edges within the bubble due to lack of coverage and requires paths through a bubble to be roughly the same length. Next, we applied both MARYGOLD and Bambus 2 on DNA sequences using both Illumina and 454 technology, which originated from biofilms at the same location within the Richmond Mine, but sampled on different dates (<ref type="bibr" target="#b5">Denef and Banfield, 2012</ref>). This also allowed us to study the influence of the sequencing technology used and the accompanying difference in sequencing depth. More sequence could be assembled using the Illumina data because the higher number of sequenced bases allowed lower abundance bacterial strains to rise above the detection limit. In total, 16.8 Mb (N50 ¼ 5850) were assembled with the Illumina data, whereas only 6.1 Mb (N50 ¼ 1669) were assembled with the 454 data. Both methods found more bubbles using the Illumina data than using the 454 data (<ref type="figure" target="#fig_7">Fig. 7</ref>). Although the samples were taken at different time points, we assume that they have similar microbial complexity because the sample location in the Richmond mine was identical. Therefore, we attribute the increased amount of variation found to the higher sequencing depth of the Illumina dataset.<ref type="figure" target="#fig_7">Figure 7</ref>indicates the number of bubbles found by both methods and the extent to which they overlap (see Section 3). MARYGOLD found more bubbles than Bambus 2 in both datasets. On Illumina data, most of these bubbles overlapped (69, i.e. 73%); on 454 data, far less so (3, i.e. 27%). This corroborates the findings on the simulated data and shows that variation detection depends on assembly quality. Finally, to give an idea of the computational complexity of MARYGOLD, we recorded its runtime on the contig graph with Lactrobacillus Unclassified Leuconostoc Weissella Other<ref type="figure">Fig. 6</ref>. Overview of the multi-allele bubbles of the kimchi fermentation. Tracks in the circular plot from outside to inside are as follows: the multiallele bubbles colored by species; their average length-weighted editdistance D M indicating variation; and the inferred sequencing depths ^ a for the time points chronologically sorted from inside to outside, with each allele a indicated by a different color. Sequencing depths were scaled by log 2 ð ^ a þ 1Þ to allow variable sequencing depths between genomes 31 191 nodes and 9586 edges of the Illumina acid mine drainage dataset, using an Intel Xeon CPU with four cores and four threads per core. Finding the set of separation pairs using graph decomposition took $37 s (CPU time). The subsequent bubble search algorithm took $12:5 min on a single core. Using two threads, the wall clock time spent by the bubble search algorithm dropped by 42%. The full analysis, from raw reads to MARYGOLD output, is mostly limited by the assembly step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSION</head><p>We presented MARYGOLD, a tool to detect and explore genomic variation within and between metagenomic sequencing samples, not reliant on reference genomes. MARYGOLD finds multi-allelic regions that reflect sequence variation and improves the contiguity of assemblies by collapsing these. As input, it expects a contig graph, which makes it generic and applicable to any type of sequencing data; we demonstrated the algorithm both on 454 and Illumina data. Here we generated contig graphs using links from fragment assembly string graphs, but the graphs can be extended using edges derived from other sources such as paired-end sequencing data, de Bruijn graphs or even reference genomes. Multi-allelic regions are efficiently detected by searching for bubble structures in the contig graph, enabled by its decomposition into bi-and triconnected components. Although MARYGOLD can detect local sequence variation, i.e. multiple alleles of a genomic locus, it ignores variation that not does not result in a detectable bubble, such as duplications and translocations, i.e. due to horizontal gene transfer. Sequence variation in metagenomes and in particular between metagenomes, i.e. comparative metagenomics, is still a largely unexplored field. Our algorithm not only finds sequence variation within a single metagenomic sample but also between samples, and it allows for convenient visualization and interpretation of variation of even multiple metagenomic sequencing samples. The importance of sequence variation detection in metagenomes was demonstrated by finding variability in ABC transporters that are involved in resistance to multiple drugs in the kimchi sample and variability in bacterial cell surface proteins that bind to human Ig in the infant's microbiome. Comparing data sampled at different time points in the infant's microbiome showed varying relative abundance during the early colonization of its gut, suggesting competition between closely related strains until a stable composition is reached. As sequencing gets cheaper, more assembly-grade metagenomics sequencing datasets become available. It will soon be possible to compare cohorts of samples and detect sequencelevel difference in microbiomes or other environmental samples explaining specific phenotypes, and link the meta-genotypes to disease. The development of tools, such as MARYGOLD, that find this sequence variation and allow further analysis and interpretation is essential for effectively mining the metagenomics sequencing data.Note: The number of Bambus 2 and MARYGOLD calls is the number of bubbles that mapped to the K12 genome.</p><formula>(a) (b)</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.2.</head><figDesc>Fig. 2. (a) Toy example of a biconnected contig graph. Separation pairs are hatched, but only valid source–sink pairs are hatched vertically, otherwise horizontally. (b) The corresponding SPQR tree describing the triconnected components. Virtual edges are indicated by dashed lines; branches in the SPQR tree link shared virtual edges. By merging these edges, the original graph can be reconstructed. A detailed description on how to construct an SPQR tree can be found in Weiskircher (2002)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Two genomes, their contig graph and collapsed contig graph, where the two simple bubbles have been compressed into multi-allelic contigs. After compression the original seven contigs are connected by a simple path without branching, and can be merged into a single contig</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. The bubble search algorithm. Solid edges indicate visited edges. (a) The search starts at node 1, and the queue Q holding the edges to be visited is initialized with all edges with a given orientation; o 1 0 ¼. in this case. (b) Edge ð1, 2, ., /Þ is visited. As all edges incident to node 2 with o 2 ¼ / have been visited, all edges of node 2 with o 1 0 ¼ / are queued. (c) Edge ð1, 3, ., .Þ is visited, but in this case, not all edges incident to node 3 with o 2 ¼. have been visited yet, so the edges of node 3 are not queued. (d) The next edge ð2, 4, /, /Þ in Q is traversed to target node 4. Again, not all edges incident to node 4 with o 2 ¼ / have been visited, so no edges are added to Q. The Q is now empty and the algorithm terminates: node 1 in forward orientation is not a valid source node</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.4.</head><figDesc>Fig. 4. Largest connected components of the contig graphs for two simulated sequencing datasets for (a) three and (b) seven E.coli genomes</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><figDesc>Funding: This work was funded by Kluyver Centre for Genomics of Industrial Fermentation, a subsidiary of the Netherlands Genomics Initiative. The project was initiated during a visit of J.F.N. to the laboratory of M.P., supported by an EMBO shortterm fellowship. Conflicts of Interest: none declared.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.7.</head><figDesc>Fig. 7. Comparison of the number of bubbles found by MARYGOLD and Bambus 2 for two acid mine drainage datasets: (a) the 454 dataset (SRR358990) and (b) the Illumina dataset (SRR359000). Indicated is the total number of contigs within the bubbles, with the number of bubbles between brackets</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>Table 1.</figDesc><table>Assembly statistics for two simulated E.coli and two real meta-
genomics datasets 

Sample 
Number 
of contigs 

Number of 
multi-alleles 

Number of 
contigs after 
simplification 

Three E.coli strains 
3445 
387 
2185 
Seven E.coli strains 
12 378 
1582 
6156 
Kimchi fermentation 
11 466 
133 
11 325 
Infant microbiome 
5686 
154 
5251 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 2. Variation detected by Bambus 2 and MARYGOLD in simulated metagenomes compared with variation found by alignments of individual finished genomes to the E.coli K12 reference genome</figDesc><table>Measure 
Mummer 
Bambus 2 
MARYGOLD 

Three E.coli 
Number of calls 
250 
32 
312 
Sensitivity 
2.0% 
16.8% 
Precision 
15.6% 
13.1% 
F1-score 
3.5% 
14.7% 
Seven E.coli 
Number of calls 
1177 
114 
1130 
Sensitivity 
6.7% 
28.7% 
Precision 
30.7% 
12.6% 
F1-score 
11.0% 
17.5% 

</table></figure>

			<note place="foot">ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Exploring variation-aware contig graphs at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from does not hold. We can, therefore, first find all separation pairs, and then select the subset of separation pairs that are also source–sink pairs. THEOREM 1. A separation pair is a source–sink pair of nodes forming a bubble if and only if all paths in the corresponding subgraph starting in the source node end in the sink node when extended, and all paths starting in the sink node end in the source node when extended. Separation pairs are detected in an undirected version of the contig graph using graph decomposition methods. An initial set of separation pairs is found by decomposing each connected component into its biconnected components, which can be done in OðjVj þ jEjÞ. A biconnected component is a maximal biconnected subgraph. The cut vertices of a graph are the nodes, whose removal increases the number of connected components. If a biconnected component has exactly two such cut vertices, then these two are stored as a separation pair. The set of separation pairs is extended by decomposing each biconnected component into its triconnected components. The triconnected components of a biconnected component describe the 2-vertex cuts in a graph. A 2-vertex cut is a pair if nodes that, if removed, increase the number of connected components, i.e. a separation pair. Battista and Tamassia (1989) developed an algorithm to decompose a biconnected undirected graph into its triconnected components by building an SPQR tree, which was later improved and implemented in time OðjVj þ jEjÞ by Gutwenger and Mutzel (2001). The SPQR tree represents all triconnected components of a biconnected graph from which all 2-vertex cuts can be extracted. Figure 2 shows such an SPQR tree for a toy graph example; an elaborate description of how to construct the SPQR tree can be found in Weiskircher (2002). The pairs of 1-vertex cuts obtained from the decomposition in biconnected components and the 2-vertex cuts obtained from the triconnected components form the set of separation pairs. These separation pairs are next validated to be source–sink pairs using the bubble search algorithm. 2.2.2 Validating separation pairs as source–sink pairs The separation pairs are only source and sink pairs when all maximally extended paths inside the bubble originate from the source node and end in the sink node or vice versa. For example, the pair {1,6} in the biconnected component in Figure 2a is a separation pair because when it is removed, it increases the number of connected components, but it does not form a valid source–sink pair of a bubble. The only valid source–sink pairs in Figure 2a are {1,5}, {6,9} and {10,11}. THEOREM 2. Node v is part of a bubble if and only if all paths starting at v with a certain orientation o end in the source node when extended and all paths starting with the opposite orientation end in the sink node when extended. Valid bubbles are found with a search based on breadth-first search in the bidirected-contig graph, starting from a random node in the list of nodes that form separation pairs. As a bubble can be present both upstream and downstream of the contig, the search is performed in two directions independently. In a normal breadth-first search, all outgoing edges of a node v that has been visited are queued for visiting. In our bubble search, edges of a node v il with orientation o 0 1 are only queued when all its edges for which o 2 ¼ o 0 1 have been visited, as Theorem 2 states that if there is no path from the source leading to one of these not-visited edges of v il , a valid bubble will never be present and there is no need for further exploration (Fig. 3).</note>

			<note place="foot">J.F.Nijkamp et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Exploring variation-aware contig graphs at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Incremental planarity testing (extended abstract)</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">D</forename>
				<surname>Battista</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Tamassia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">30th International Symposium on Computer Science. Research Triangle Park</title>
		<meeting><address><addrLine>NC, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989-10-30" />
			<biblScope unit="page" from="436" to="441" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">The open graph drawing framework</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Chimani</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">15th International Symposium on Graph Drawing</title>
		<meeting><address><addrLine>Sydney, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-09-23" />
		</imprint>
	</monogr>
	<note>Poster</note>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">OpenMP: an industry standard API for sharedmemory programming</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Dagum</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Menon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Sci. Eng. IEEE</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="46" to="55" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Structure, function, and evolution of bacterial ATPbinding cassette systems</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">L</forename>
				<surname>Davidson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Microbiol. Mol. Biol. Rev</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page" from="317" to="364" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>Table. of contents</note>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Fast algorithms for large-scale genome alignment and comparison</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">L</forename>
				<surname>Delcher</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="2478" to="2483" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">In situ evolutionary rate measurements show ecological success of recently emerged bacterial hybrids</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">J</forename>
				<surname>Denef</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">F</forename>
				<surname>Banfield</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">336</biblScope>
			<biblScope unit="page" from="462" to="466" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Reference-independent comparative metagenomics using cross-assembly: crAss</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">E</forename>
				<surname>Dutilh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="3225" to="3231" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Efficiently detecting polymorphisms during the fragment assembly process</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Fasulo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="294" to="302" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
	<note>Suppl. . 1</note>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">A linear time implementation of SPQR-trees. In: Graph Drawing</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Gutwenger</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Mutzel</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="77" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Metagenomic discovery of biomass-degrading genes and genomes from cow rumen</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Hess</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">331</biblScope>
			<biblScope unit="page" from="463" to="467" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Systematic and integrative analysis of large gene lists using david bioinformatics resources</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">W</forename>
				<surname>Huang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Protoc</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="44" to="57" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Structure, function and diversity of the healthy human microbiome</title>
	</analytic>
	<monogr>
		<title level="j">Human Microbiome Project Consortium. Nature</title>
		<imprint>
			<biblScope unit="volume">486</biblScope>
			<biblScope unit="page" from="207" to="214" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">De novo assembly and genotyping of variants using colored de bruijn graphs</title>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Iqbal</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Genet</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="226" to="232" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Metagenomic analysis of kimchi, a traditional Korean fermented food</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">Y</forename>
				<surname>Jung</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Environ. Microbiol</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="2264" to="2274" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Bambus 2: scaffolding metagenomes</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Koren</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="2964" to="2971" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Circos: an information aesthetic for comparative genomics</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Krzywinski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="1639" to="1645" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Efficient parallel and out of core algorithms for constructing large bi-directed de Bruijn graphs</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">K</forename>
				<surname>Kundeti</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">560</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<monogr>
		<title level="m" type="main">Solving Least Squares Problems</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">L</forename>
				<surname>Lawson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">J</forename>
				<surname>Hanson</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1974" />
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cliffs, NJ, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Comparison of the two major classes of assembly algorithms: overlap-layout-consensus and de-bruijn-graph</title>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Brief. Funct. Genomics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="25" to="37" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">An efficient simulator of 454 data using configurable statistical models</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Lysholm</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Res. Notes</title>
		<imprint>
			<biblScope unit="page">449</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Computational methods for discovering structural variation with next-generation sequencing</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Medvedev</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="13" to="20" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Strain-resolved community genomic analysis of gut microbial colonization in a premature infant</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">J</forename>
				<surname>Morowitz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1128" to="1133" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">The fragment assembly string graph</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">W</forename>
				<surname>Myers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="79" to="85" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
	<note>Suppl. . 2</note>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Genotype and SNP calling from next-generation sequencing data</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Nielsen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Rev. Genet</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="443" to="451" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Classifying short genomic fragments from novel lineages using composition and homology</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Parks</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">328</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Meta-IDBA: a de novo assembler for metagenomic data</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Peng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="94" to="101" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">A human gut microbial gene catalogue established by metagenomic sequencing</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Qin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">464</biblScope>
			<biblScope unit="page" from="59" to="65" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Kissplice: de-novo calling alternative splicing events from RNA-seq data</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">A T</forename>
				<surname>Sacomoto</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page">5</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note>Suppl. . 6</note>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Nonimmune binding of human immunoglobulin A (igA) and igG Fc by distinct sequence segments of the EibF cell surface protein of Escherichia coli</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">H</forename>
				<surname>Sandt</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">W</forename>
				<surname>Hill</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Infect. Immun</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="7293" to="7303" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Genomic variation landscape of the human gut microbiome</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Schloissnig</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">493</biblScope>
			<biblScope unit="page" from="45" to="50" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">Cytoscape: a software environment for integrated models of biomolecular interaction networks</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Shannon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="2498" to="2504" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Next generation sequence assembly with AMOS</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">J</forename>
				<surname>Treangen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Protoc. Bioinformatics</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">MetAMOS: a modular and open source metagenomic assembly and analysis pipeline</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">J</forename>
				<surname>Treangen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page">2</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">A core gut microbiome in obese and lean twins</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">J</forename>
				<surname>Turnbaugh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">457</biblScope>
			<biblScope unit="page" from="480" to="484" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<monogr>
		<title level="m" type="main">New applications of SPQR-trees in graph drawing</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Weiskircher</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<pubPlace>Saarbrü cken, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">Velvet: algorithms for de novo short read assembly using de bruijn graphs</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">R</forename>
				<surname>Zerbino</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Birney</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="821" to="829" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>