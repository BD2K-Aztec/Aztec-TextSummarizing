
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:51+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Gener: a minimal programming module for chemical controllers based on DNA strand displacement</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Ozan</forename>
								<surname>Kahramanog</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">˘</forename>
								<surname>Ulları</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">University of Trento</orgName>
								<address>
									<settlement>Trento, Italy</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">The Microsoft Research</orgName>
								<orgName type="institution">University of Trento Centre for Computational and Systems Biology</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Luca</forename>
								<surname>Cardelli</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="institution">Microsoft Research Cambridge</orgName>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Oxford</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Gener: a minimal programming module for chemical controllers based on DNA strand displacement</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btv286</idno>
					<note type="submission">Received on December 4, 2014; revised on April 10, 2015; accepted on April 30, 2015</note>
					<note>Systems biology *To whom correspondence should be addressed. Associate Editor: Jonathan Wren Availability and implementation: Gener is available for download at the Cosbi website at http://www.cosbi.eu/ research/prototypes/gener as a windows executable that can be run on Mac OS X and Linux by using Mono. Contact: ozan@cosbi.eu</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Gener is a development module for programming chemical controllers based on DNA strand displacement. Gener is developed with the aim of providing a simple interface that minimizes the opportunities for programming errors: Gener allows the user to test the computations of the DNA programs based on a simple two-domain strand displacement algebra, the minimal available so far. The tool allows the user to perform stepwise computations with respect to the rules of the algebra as well as exhaustive search of the computation space with different options for exploration and visualization. Gener can be used in combination with existing tools, and in particular, its programs can be exported to Microsoft Research&apos;s DSD tool as well as to LaTeX.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>One of the goals of synthetic biology is constructing information processing systems for controlling biochemical systems at the molecular level. Such an achievement would pave the way for applications, e.g. to smart therapeutic devices that are capable of sensing their environments (<ref type="bibr">Amir et al., 2014;</ref><ref type="bibr" target="#b2">Douglas et al., 2012</ref>). Within a broad spectrum, various technologies are being developed to address different aspects of this vision. Applications in DNA nanotechnology aim at harnessing the complexity of biochemical dynamics to control active molecular devices in vivo (<ref type="bibr" target="#b10">Zhang and Seelig, 2011</ref>). Technologies based on DNA strand displacement algebras, in particular, the double-stranded architecture with nicks on one strand (<ref type="bibr" target="#b6">Phillips and Cardelli, 2009</ref>) is proving to be effective also in wet lab implementations of formally designed experiments (<ref type="bibr">Chen et al., 2013</ref>). The double-stranded DNA strand displacement algebras perform computations as a result of the interactions between single and double-stranded DNA structures: the single-stranded structures act as signals that are processed by double-stranded structures that act as gates. The mechanism with which the signals are processed by the gates is toehold-mediated branch migration and strand displacement (<ref type="bibr" target="#b8">Yurke and Mills, 2003;</ref><ref type="bibr" target="#b11">Zhang and Winfree, 2009</ref>). By using this machinery, one can program, e.g. systems of chemical reaction networks that operate at the molecular level (<ref type="bibr" target="#b0">Dalchau et al., 2014;</ref><ref type="bibr" target="#b7">Soloveichika et al., 2010</ref>). In this setting, a single chemical reaction step is emulated by a sequence of DNA-strand displacement operations. Because an increase in additional steps introduces more opportunities for errors in design, simpler schemes for designing these molecular programs become more favorable. In this respect, two-domain DNA strand displacement scheme provides a good platform for developing molecular programs as it is minimal in design while being sufficiently expressive for describing chemical reaction networks that are of interest from the point of view of molecular programming (<ref type="bibr">Cardelli, 2013;</ref><ref type="bibr" target="#b5">Lakin et al., 2013</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2906</head><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.comGener is a programming module that implements the twodomain DNA strand displacement algebra described in Cardelli (2013). With Gener, the user can write a two-domain strand displacement program, and test its stepwise computations. The programs can be analyzed by exhaustive search of the computation space, and the computations can be visualized in a tree representation with different options. Gener can be used in conjunction with Microsoft Research's DSD tool for simulation and analysis purposes as Gener programs can be exported to DSD (<ref type="bibr" target="#b4">Lakin et al., 2011</ref><ref type="bibr" target="#b3">Lakin et al., , 2012</ref>), and computation traces can be exported to LaTeX for visualization. Gener contains introductory examples in its menu, which should be useful for a quick start. A manual is also available on the web.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Methods</head><p>Gener programs consist of single-and double-stranded DNA structures, which are entered in the DNA Soup field at the top of the GUI. Gener aims at designing DNA displacement systems on the high abstract level, and uses the previously established notations (<ref type="figure" target="#fig_3">Fig. 1</ref>). Gener can be used to observe the computations of the input DNA program. In the default setting, the user can choose from all the possible instances of the reduction rules by reducing the input, and proceed by applying the rules incrementally to observe a possible computation trace of the DNA soup. At each step, the resulting strands and the computed derivation are displayed. An example derivation is shown in<ref type="figure" target="#fig_3">Figure 1</ref>. At each step during reduction, the user can perform a 'backtrack' action by clicking the corresponding button of the GUI to return to the previous step. Alternatively, the user can perform an exhaustive search of the computation space and choose from the available traces for displaying it. This is done by choosing the search option from the settings menu of the GUI. A search can be performed with further options: a simple search (without any further options being chosen) displays an enumeration of the available terminal computations of the strand structures by pruning the redundancies in the search space, and prompts a dialog window for the choice of the trace to be displayed. Choosing the all paths option for the search enables the enumeration of the computations with alternative paths, and the variations option includes to the enumeration also those paths with the same terminal as another path, but with an alternative trajectory. Along with the search, the user can display the search tree, and with this, all the intermediate computations are listed in a reserved field. In the displayed search tree graph, different rules are denoted with different colors, which are listed in a legend. Choosing the equal nodes option includes a visualization of the nodes that result in the same DNA strand structures, which are connected with dashed gray lines in the search tree. The screenshot of a search tree visualization with an example is depicted in<ref type="figure">Figure 2</ref>. By using the file menu, Gener DNA strand displacement programs can be exported to Microsoft Research's DSD language for simulation and analysis, and computation trajectories can be exported to LaTeX for typesetting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Discussion</head><p>Gener is developed for performing in silico experiments in design and debugging of DNA strand displacement systems. Potential applications include designing DNA sequences from desired DNA domain structures (<ref type="bibr" target="#b9">Zadeh et al., 2011</ref>). The search feature is useful for verification and analysis of reachable states of the designed systems. The sequences can then be ordered from Integrated DNA Technologies (IDT) and executed in a basic wet lab with a fluorometer for reading the output (<ref type="bibr">Chen et al., 2013</ref>). The features of Gener are only limited by its minimalistic design, avoiding duplication of effort, and imagination. We thus foresee extensions as they will be required.. One of the two composed domains can be a short domain, denoted with 't'. Any other string consisting of letters denotes a long domain. Complemented double strands are written in angle brackets '&lt;' and '&gt;', and they denote double strands consisting of strands and their Watson–Crick complements. We denote nicks on double strands with '^', which are the interruptions on one side of the double strand that make the interactions between the signals and gates possible<ref type="figure">Fig. 2</ref>. A screenshot of a search performed on an example. For the search, 'all paths' option is chosen together with the display options 'search tree' and 'equal nodes'. The gray lines between the nodes denote equal nodes</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>V</head><figDesc>C The Author 2015. Published by Oxford University Press.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Bioinformatics, 31(17), 2015, 2906–2908doi:10.</head><figDesc>1093/bioinformatics/btv286 Advance Access Publication Date: 7 May 2015 Applications Note</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>Conflict of Interest: none declared. References Amir,Y. et al. (2014) Universal computing by dna origami robots in a living animal. Nat. Nanotechnol., 9, 353–357. Cardelli, L. (2013) Two-domain DNA strand displacement. Math. Struct. Comput. Sci., 23, 247–271. Chen,Y.-J. et al. (2013) Programmable chemical controllers made from DNA. Nat. Nanotechnol., 8, 755762.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.1.</head><figDesc>Fig. 1. A screenshot of a reduction performed on the built-in Example 1 that implements a transducer as in Cardelli (2013). The single strands consist of two domains, composed by '.'. One of the two composed domains can be a short domain, denoted with 't'. Any other string consisting of letters denotes a long domain. Complemented double strands are written in angle brackets '&lt;' and '&gt;', and they denote double strands consisting of strands and their Watson–Crick complements. We denote nicks on double strands with '^', which are the interruptions on one side of the double strand that make the interactions between the signals and gates possible</figDesc></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">O.Kahramanog ˘ ulları and L.Cardelli at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<monogr>
		<title level="m" type="main">Computational design of reaction-diffusion patterns using DNA-based chemical reaction networks</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Dalchau</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Mol. Program</title>
		<imprint>
			<biblScope unit="volume">8727</biblScope>
			<biblScope unit="page" from="84" to="99" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">A logic-gated nanorobot for targeted transport of molecular payloads</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">M</forename>
				<surname>Douglas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">335</biblScope>
			<biblScope unit="page" from="831" to="834" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Design and analysis of DNA strand displacement devices using probabilistic model checking</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Lakin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. R. Soc. Interface</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1470" to="1485" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Visual DSD: a design and analysis tool for DNA strand displacement systems</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">R</forename>
				<surname>Lakin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="3211" to="3213" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Modular verification of DNA strand displacement networks via serializability analysis</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">R</forename>
				<surname>Lakin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. Conf. DNA Comput. Mol. Program</title>
		<imprint>
			<biblScope unit="volume">8141</biblScope>
			<biblScope unit="page" from="133" to="146" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">A programming language for composable dna circuits</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Phillips</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Cardelli</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. R. Soc. Interface</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="419" to="436" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">DNA as a universal substrate for chemical kinetics</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Soloveichika</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Nat. Acad. Sci</title>
		<meeting>. Nat. Acad. Sci</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="5393" to="5398" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Using DNA to power nanostructures</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Yurke</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">P</forename>
				<surname>Mills</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genet. Program. Evolvable Mach. Arch</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="111" to="122" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Nucleic acid sequence design via efficient ensemble defect optimization</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Zadeh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Chem</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="439" to="452" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Dynamic DNA nanotechnology using strand displacement reactions</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">Y</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Seelig</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Chem</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="103" to="113" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Control of DNA strand displacement kinetics using toehold exchange</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">Y</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Winfree</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Am. Chem. Soc</title>
		<imprint>
			<biblScope unit="volume">131</biblScope>
			<biblScope unit="page" from="17303" to="17314" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>