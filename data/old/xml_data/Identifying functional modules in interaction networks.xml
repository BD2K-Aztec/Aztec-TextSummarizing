
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:57+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Identifying functional modules in interaction networks through overlapping Markov clustering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012">2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Yu-Keng</forename>
								<surname>Shih</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">the Ohio State University</orgName>
								<address>
									<postCode>43210-1277</postCode>
									<settlement>Columbus</settlement>
									<region>OH</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Srinivasan</forename>
								<surname>Parthasarathy</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">the Ohio State University</orgName>
								<address>
									<postCode>43210-1277</postCode>
									<settlement>Columbus</settlement>
									<region>OH</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Identifying functional modules in interaction networks through overlapping Markov clustering</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">28</biblScope>
							<biblScope unit="page" from="473" to="479"/>
							<date type="published" when="2012">2012</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts370</idno>
					<note>Copyedited by: MANUSCRIPT CATEGORY: ECCB [15:24 7/8/2012 Bioinformatics-bts370.tex] Page: i473 i473–i479 BIOINFORMATICS Availability: All data and codes are freely available upon request. Contact: srini@cse.ohio-state.edu Supplementary Information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: In recent years, Markov clustering (MCL) has emerged as an effective algorithm for clustering biological networks—for instance clustering protein–protein interaction (PPI) networks to identify functional modules. However, a limitation of MCL and its variants (e.g. regularized MCL) is that it only supports hard clustering often leading to an impedance mismatch given that there is often a significant overlap of proteins across functional modules. Results: In this article, we seek to redress this limitation. We propose a soft variation of Regularized MCL (R-MCL) based on the idea of iteratively (re-)executing R-MCL while ensuring that multiple executions do not always converge to the same clustering result thus allowing for highly overlapped clusters. The resulting algorithm, denoted soft regularized Markov clustering, is shown to outperform a range of extant state-of-the-art approaches in terms of accuracy of identifying functional modules on three real PPI networks.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Advances in technology have enabled scientists to determine, identify and validate pairwise protein interactions through a range of experimental approaches. Recently, several highthroughput approaches have produced a large scale of protein– protein interaction (PPI) datasets. These approaches include yeast two-hybrid, protein co-immunoprecipitation followed by mass spectrometry (MS), protein chip technologies and tandem affinity purification (TAP) with MS. Such data have led researchers to discover protein functions through PPI networks, in which a node represents a protein and an edge mimics an interaction between two proteins. A fundamental goal here is to discover functional modules or protein complexes in order to predict the function of unannotated proteins. The fundamental concept of identifying functional modules is that a pair of proteins interacting with each other has higher probability of sharing the same function than two proteins not interacting with each other. The dense sub-networks in a PPI network can therefore be identified as functional modules. Thus, identifying functional modules is similar to detecting communities (clusters) in a network (graph). However, traditional community detection algorithms are usually 'hard' clustering algorithms, i.e. they produces non-overlapped clusters, whereas functional modules are highly 'overlapped' (<ref type="bibr" target="#b22">Li et al., 2010</ref>). As a result, a number of * To whom correspondence should be addressed. 'soft' clustering algorithms have been recently proposed to identify functional modules in a PPI network, and they can be grouped into three categories. The first category includes algorithms such as Peacock (<ref type="bibr" target="#b13">Gregory, 2009</ref>), hub-duplication (<ref type="bibr" target="#b35">Ucar et al., 2006</ref>) and DECAFF (<ref type="bibr" target="#b23">Li et al., 2007</ref>). These algorithms identify the bridge nodes at the beginning, i.e. nodes belong to multiple clusters, and then either duplicate or remove the bridge nodes from the network. A hard clustering algorithm is then applied on the modified network. The problem with this approach is that only the identified bridge nodes can belong to multiple clusters, and it is conflicted with the literature (<ref type="bibr" target="#b3">Ashburner et al., 2000</ref>) that a large fraction of proteins belong to multiple functional modules. For example, in the yeast network in BioGRID database (<ref type="bibr" target="#b34">Stark et al., 2011</ref>), there are 3085 proteins annotated by low-level Gene Ontology (GO) terms, whose information content (see Sec 4.1) is higher than 2.5, and 2392 of 3085 proteins are annotated by at least two of these GO terms. Algorithms in the second category adopt line-graph transformation. These algorithms (<ref type="bibr" target="#b1">Ahn et al., 2010;</ref><ref type="bibr" target="#b29">PereiraLeal et al., 2004</ref>) first transform the input network into a line graph, in which a node represents an edge in the original network. Then, a hard clustering algorithm is applied on the line graph, so edges are clustered instead of nodes. A node in the original network belongs to multiple clusters if its incident edges are clustered into different clusters. It has been pointed out in the literature (<ref type="bibr" target="#b9">Fortunato, 2010</ref>) that clustering edges has a similar issue as clustering nodes: a 'bridge edge' that connects nodes of different clusters can only be clustered into one cluster by the line-graph technique. Furthermore, while functional modules are so highly overlapped that an interaction might belong to multiple modules, these algorithms cannot successfully identify all overlapped functional modules. Algorithms in the third category aim to find local dense subnetworks instead of globally clustering a graph. Each node forms a singleton cluster at the beginning, and then each cluster iteratively adds a neighbor node according to different criteria. Algorithms in this category include MCODE (<ref type="bibr" target="#b5">Bader and Hogue, 2003</ref>), CFinder (<ref type="bibr" target="#b0">Adamcsek et al., 2006</ref>), DPClus (<ref type="bibr" target="#b2">Altaf-Ul-Amin et al., 2006</ref>), IPCA (<ref type="bibr" target="#b21">Li et al., 2008</ref>), MoNet (<ref type="bibr" target="#b24">Luo et al., 2007</ref>), CORE (<ref type="bibr" target="#b19">Leung et al., 2009</ref>), COACH (<ref type="bibr" target="#b38">Wu et al., 2009</ref>), DME (<ref type="bibr" target="#b12">Georgii et al., 2009</ref>), RRW (<ref type="bibr" target="#b25">Macropol et al., 2009</ref>), NWE (<ref type="bibr" target="#b26">Maruyama and Chihara, 2011</ref>), SPICi (<ref type="bibr" target="#b14">Jiang and Singh, 2010</ref>), HUNTER (<ref type="bibr" target="#b7">Chin et al., 2010</ref>) and HC-PIN (<ref type="bibr" target="#b37">Wang et al., 2011</ref>). Although the resulting clusters could be highly overlapped, one main drawback of those algorithms is that the criterion for adding a node usually considers relatively local topology. Given that PPI networks are estimated to be quite noisy (<ref type="bibr" target="#b6">Brohee and Helden, 2006</ref>), these algorithms could add several nodes connected by noisy edges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Y.-K.Shih and S.Parthasarathy</head><p>In addition to those in the above three categories, there are some other algorithms, such as RNSC (<ref type="bibr" target="#b17">King et al., 2004</ref>), principal component analysis (PCA)-based consensus clustering (<ref type="bibr" target="#b4">Asur et al., 2007</ref>) and Markov clustering (MCL) algorithm (<ref type="bibr" target="#b8">Dongen, 2000</ref>), which have targeted identification of functional modules. The detail of most above-mentioned algorithms can be found in recent surveys (<ref type="bibr" target="#b9">Fortunato, 2010;</ref><ref type="bibr" target="#b22">Li et al., 2010</ref>). MCL, which is based on manipulation of transition probabilities or stochastic flows between nodes of the graph, is shown to be particularly noise-tolerant as well as effective in identifying high-quality functional modules (<ref type="bibr" target="#b6">Brohee and Helden, 2006;</ref><ref type="bibr" target="#b36">Vlasblom and Wodak, 2009</ref>). Several studies, such as (<ref type="bibr" target="#b10">Friedel et al., 2009</ref>), (<ref type="bibr" target="#b27">Moschopoulos et al., 2008</ref>) and (<ref type="bibr" target="#b33">Srihari et al., 2009</ref>), have adopted MCL as a base algorithm to produce more accurate results. Recently, (<ref type="bibr" target="#b32">Satuluri et al., 2010</ref>) propose an efficient and robust variation of MCL, called Regularized MCL (R-MCL). They show that R-MCL's regularize operation and balance parameter can improve the accuracy of identifying functional modules. Nevertheless, MCL and R-MCL only generate non-overlapped clusters, and they always assign all proteins into clusters while not all proteins are functionally annotated. As a result, MCL and R-MCL usually produce more false-positive clusters than other algorithms (<ref type="bibr" target="#b6">Brohee and Helden, 2006;</ref><ref type="bibr" target="#b22">Li et al., 2010</ref>). In this article, we redress the limitation of R-MCL and propose a new variation called 'Soft' R-MCL (SR-MCL), which produces overlapped clusters. The intuition of SR-MCL is to produce overlapped clusters by iteratively re-executing R-MCL while ensuring the resulting clusters are not always the same. In order to produce different clusterings in each iteration, the stochastic flows are penalized if they flow into a node that was an attractor node in previous iterations. Since iteratively re-executing R-MCL would produce several redundant and low-quality clusters, a postprocessing is applied to remove those clusters. Only a cluster that is not removed by the post-processing is predicted as a functional module, so not all proteins are assigned into clusters. We have conducted a series of experiments on three networks in Saccharomyces cerevisiae. Based on the gold standard annotation, GO terms (<ref type="bibr" target="#b3">Ashburner et al., 2000</ref>), we find that SR-MCL has significantly higher accuracy than R-MCL. SR-MCL also outperforms a range of algorithms on these three networks. Since it has been pointed out that there are different scales of potential functional relevance within a PPI network (<ref type="bibr" target="#b20">Lewis et al., 2010</ref>), we also demonstrate that R-MCL is capable of identifying both the parent module as well as the child module in the GO hierarchy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">TERMINOLOGY</head><p>Let G = (V ,E) denote a PPI network, which is an undirected graph excluding self-loops, where V is the set of nodes (proteins), E is the set of edges (interactions) and n =|V |. Each edge is denoted by</p><formula>(v i ,v j ), v i ,v j ∈ V. w((v i ,v j )</formula><p>) is the weight of an edge (v i ,v j ), which represents the confidence level of the interaction in a weighted PPI network. If the network is unweighted, the weight of an edge is always 1. Let A be the adjacency matrix of the graph such that</p><formula>A (i,j) = ⎧ ⎨ ⎩ w(v i ,v j ) i f( v i ,v j ) ∈ E max x =i w(v i ,v x ) if v i = v j 0 else .</formula><p>A column stochastic matrix M is a n by n matrix that can be interpreted as the matrix of the transition probabilities of a random walk (or a Markov chain) defined on the graph. Specifically, M (i,j) represents the probability of a transition from v j to v i. We also refer to the transition probability from v i to v j as the flow from v i to v j. The canonical flow matrix M G is defined as M G(i,j) = A (i,j) / n x=1 A (x,j) .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">METHOD</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Prior work on Markov clustering</head><p>MCL and R-MCL are graph clustering algorithms based on a simulation of stochastic flows on the graph. MCL consists of two operations on a stochastic matrix: 'Expand' and 'Inflate.' The Expand operation is simply M = M ×M , and the Inflate operation raises each entry in the matrix M to the inflation parameter r (r &gt; 1, and typically set to 2) followed by re-normalizing the sum of each column to 1. These two operations are applied in alternation iteratively, starting with M = M G , where M G is the canonical flow matrix. In R-MCL, Expand is replaced by 'Regularize', which is M = M ×M G. The Expand and Regularize operations spread the flow out of a vertex to potentially new nodes. This has the effect of enhancing within-cluster flows as there are more paths between two nodes that are in the same cluster than between those in different clusters. At the start of this process, the distribution of flows out of a node is relatively smooth and uniform; as more iterations are executed, all the nodes within a tightly linked group of nodes will start to flow to one node within the group. This allows us to identify all the nodes that flow to the same 'attractor node' as belonging to one cluster. (<ref type="bibr" target="#b32">Satuluri et al., 2010</ref>) additionally introduce a balance parameter into R-MCL. For a complete description of MCL and R-MCL, the reader is referred elsewhere (<ref type="bibr" target="#b8">Dongen, 2000;</ref><ref type="bibr" target="#b31">Satuluri and Parthasarathy, 2009;</ref><ref type="bibr" target="#b32">Satuluri et al., 2010</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Overlapping MCL</head><p>Although R-MCL is effective and efficient in hard clustering, it has three issues in identifying functional modules, which are usually hierarchical and highly overlapped. First, R-MCL usually merges functional modules sharing the same (bridge) node(s). A bridge node usually interacts with a large number of nodes in a PPI network, so it is likely to become an attractor node. As shown in<ref type="figure" target="#fig_0">Figure 1a</ref>, two modules are clustered together by R-MCL with the bridge node v 5 being the attractor node. Second, R-MCL cannot identify modules with large overlaps since it is a hard clustering algorithm. For example, R-MCL cannot produce any cluster similar to the green module in<ref type="figure" target="#fig_0">Figure 1b</ref>. Third, again, because R-MCL is a hard clustering algorithm, R-MCL is unable to identify hierarchical modules. As shown in<ref type="figure" target="#fig_0">Figure 1c</ref>, R-MCL only produces two clusters matching the two children (blue and red) modules, while no cluster can match the parent (green) module. In order to overcome these three issues, we propose a variation, SR-MCL. The intuition of SR-MCL is to iteratively re-execute R-MCL while ensuring the clusters produced are not always the same. Thus, the resulting clusters can be overlapped if clusters produced in all iterations are incorporated. The clustering produced in each iteration is differentiated by 'penalizing' the clusters with the same bridge node(s) highly overlapped modules hierarchical modules</p><formula>(c) (b) (a)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Identifying functional modules in interaction networks</head><p>Algorithm 1 SR-MCL Input: The canonical flow matrix M G , the balance parameter b, the inflation parameter r, the penalized ratio β and the number of iterations t. Output: A set of clusters C. 1. C ={} 2. count ={0,0....,0} //An array with n values initialized to zero 3. for iter = 1 → t do 4. repeatattractor nodes, i.e. decreasing the flow to a node that has been an attractor node in previous iterations. Specifically, the penalty is introduced as follows: in the Inflate operation, the flow to a node that has been an attractor node x times in previous iterations is raised to r ×β x , where β &gt;1 is the userspecified penalty ratio. Therefore, if a node has not been an attractor node, the flow to it is still raised to the inflation parameter r, and more times a node has been an attractor node, more severe penalty is introduced to it. The penalty results in possibly different attractor nodes and therefore possibly different clusters. Moreover, since the bridge node is likely to be the attractor in R-MCL, by penalizing attractor nodes, we can correctly produce clusters sharing the same bridge node. For example, in<ref type="figure" target="#fig_0">Figure 1a</ref>, R-MCL only identifies one cluster in the first iteration, but in the second iteration, the attractor node v 5 is penalized so SR-MCL could produce two clusters matching the two modules. The procedure of SR-MCL is shown in Algorithm 1. Line 4 to Line 9 are the same as R-MCL except introducing the penalty ratio β [the detail of R-MCL, including the usage of parameters r and b, is illustrated elsewhere (<ref type="bibr" target="#b32">Satuluri et al., 2010)]</ref>. In the Inflation operation, each entry M ij in the matrix M is raised to r ×β count<ref type="bibr">[i]</ref>, and then the sum of each column is re-normalized to 1. Count<ref type="bibr">[i]</ref>is the number of times that v i has been an attractor node, and t is the number of times that R-MCL is executed. Since R-MCL is very efficient (only takes less than 1 s in a modern dual-core machine) in clustering a PPI network, which typically contains less than 10 000 nodes and 100 000 edges, and the difference between clusterings produced by each iteration should be so slight that every possible cluster is produced, we suggest that t is set to a large number from 10 to 50 and β is set to a relative small number (1.25 in default). Although this setting would result in several redundant clusters, the post-processing, which will be introduced in the next section, can filter out those clusters.</p><formula>5. M R = RegularizationMatrix(M ,M G ,b) 6. M = M * M R //</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Post-processing</head><p>As the resulting clustering from iterative execution of R-MCL could contain several redundant and low-quality clusters, those clusters should be removed. The pseudo code of our post-processing is shown in Algorithm 2. First, we use one of three simple quality functions, 'density, clustering coefficient', and density multiply by the square root of size (denoted by density×sqrt(size)), to evaluate the quality of each cluster. The reason of using density×sqrt(size) is that a PPI network is usually relatively sparse, so simply adopting density as the quality function might result in a huge number of too small clusters. Note that other quality functions, such as those discussed by (<ref type="bibr" target="#b20">Lewis et al., 2010</ref>),can also be applied. Here, we aim to show that a simple quality function can make SR-MCL produce clusters accurately matching functional modules. The chosen quality function is denoted by qf. We remove all clusters whose qf value is below a user-specified threshold ω. The value of ω depends on qf and the network's property. Furthermore, all clusters whose size is ≤2 are also removed. After removing low-quality clusters, we examine whether each cluster is redundant or not in the descending order of its qf value. A cluster c j is removed if there exists a cluster c i that qf (c i ) &gt;= qf (c j ) and NA(c i ,c j ) &gt; p, where p is another user-specified threshold and NA is neighborhood affinity (<ref type="bibr" target="#b5">Bader and Hogue, 2003</ref>):</p><formula>NA(c i ,c j ) = |c i ∩c j | 2 |c i | * |c j | .</formula><formula>(1)</formula><p>Thus, p is used to control the degree of overlap among clusters. The higher p produces higher overlapped clusters and vice versa. As the functional modules are highly overlapped, we suggest that p is set from 0.3 to 0.8. If ω becomes larger and p is decreased, the post-processing removes more clusters, so the remaining high-quality clusters can precisely match functional modules, but more functional modules could not be identified. On the other hand, less ω and larger p result in more clusters, so the resulting clusters can identify more functional modules; however, the result contains relatively redundant and low-quality clusters, so a number of resulting clusters cannot precisely match functional modules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Datasets and metrics</head><p>We report results on three PPI networks of S. cerevisiae extracted from DIP (version October 27, 2011) (<ref type="bibr" target="#b30">Salwinski et al., 2004</ref>), BioGRID (version 3.1.81) (<ref type="bibr" target="#b34">Stark et al., 2011</ref>) and WI-PHI (<ref type="bibr" target="#b16">Kiemer et al., 2007</ref>), respectively. DIP and BioGRID are unweighted networks and WI-PHI is a weighted network. The weight of WIPHI is adjusted by min-max normalization. All self-loops are removed, and for BioGRID, we only extracted low-throughput experiments that were used since these interactions have higher precision (<ref type="bibr" target="#b28">Paccanaro et al., 2005</ref>). In order to evaluate the functional modules identification result, we used GO (<ref type="bibr" target="#b3">Ashburner et al., 2000</ref>GO category (biological process, molecular function or cellular component) of g. We moreover remove GO terms annotating 2 or less proteins. The detail of these three networks are shown in<ref type="figure" target="#tab_1">Table 1</ref>. Except comparing with existing algorithms that can only be applied on unweighted networks, we mainly show the results on WI-PHI, since the edge weight is useful for all weighted network clustering algorithms, including MCL and R-MCL. We adopt the widely used metric F-measure (<ref type="bibr" target="#b22">Li et al., 2010</ref>) to evaluate the accuracy of clusters produced. F-measure can evaluate not only the accuracy of the clusters matching functional modules but also the accuracy of functional modules matching the clusters. Given a clustering result C ={c 1 ,c 2 ,...,c k }, in which singleton clusters are removed and the gold standard clusters (e.g. GO terms)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Y.-K.Shih and S.Parthasarathy</head><formula>G ={g 1 ,g 2 ,...,g l }, F</formula><p>measure, based on neighborhood affinity (1), is the harmonic mean of precision and recall, which are defined as</p><formula>precision = |{c i ∈ C|∃g j ∈ G,NA(c i ,g j ) ≤ θ}| |C| (2) recall = |{g j ∈ G|∃c i ∈ C,NA(c i ,g j ) ≤ θ}| |G| ,</formula><formula>(3)</formula><p>where θ is set to a typically value 0.25. We moreover propose a new version of F-measure which does not require the threshold θ. The equations of new precision and new recall are shown in Supplementary. (The performance of these new metrics is shown in Supplementary.) The usage and the suggested range of each parameter are listed in Supplementary Table 1. Generally, only r, p and ω need to be tuned and the parameter tuning is straightforward. The parameters (r, b, t, β, p) of SR-MCL were set to default values (2.0,0.5,30,1.25,0.6), respectively, in all experiments unless otherwise noted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The choice of quality function</head><p>We compared the three quality functions mentioned in Section 3.3: density, clustering coefficient and density × sqrt(size). For each quality function, we varied the quality threshold ω in order to yield different clusterings in various 'coverages', which are the numbers of nodes assigned to any cluster. The result is shown in<ref type="figure" target="#fig_2">Figure 2a</ref>. Since a too large coverage yields very small precision, and a too small coverage yields very small recall, all quality functions obtain maximal F-measure when the coverage is ∼2000 to 3500. It is clear that clustering coefficient produces the worst result and density×sqrt(size) produces the best. As mentioned in Section 3.3, purely using density along has slightly lower F-measure as it is biased towards small clusters, since the PPI networks are generally sparse. For simplicity, in the following experiments, we use density×sqrt(size) as the quality function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Comparison with MCL and R-MCL</head><p>In this section, we report the benefit of iterative executing R-MCL with penalty on attractor nodes. We use density × sqrt(size) as the quality function to prune the results of MCL, R-MCL, and SR-MCL. The parameters r of MCL and (r, b) of R-MCL are set to the same values as SR-MCL. Again, we varied ω to yield different clusterings with various coverages. As can be seen in<ref type="figure" target="#fig_2">Figure 2b</ref>, SR-MCL always yields significantly higher F-measure than R-MCL, while R-MCL's F-measure is higher than MCL's. Drilling down, we observe that the improvement primarily stems from corresponding improvement of recall and to a lesser extent precision (see Supplementary Figs. 1 and S2). This demonstrates that the clusters produced by SR-MCL can more accurately match functional modules as attractor nodes are penalized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Comparison with state-of-the-art algorithms</head><p>We compare SR-MCL with MCL (<ref type="bibr" target="#b8">Dongen, 2000</ref>), MCODE (<ref type="bibr" target="#b5">Bader and Hogue, 2003</ref>), RNSC (<ref type="bibr" target="#b17">King et al., 2004</ref>), CFinder (<ref type="bibr" target="#b0">Adamcsek et al., 2006</ref>), DPClus (<ref type="bibr" target="#b2">Altaf-Ul-Amin et al., 2006</ref>), IPCA (<ref type="bibr" target="#b21">Li et al., 2008</ref>), CORE (<ref type="bibr" target="#b19">Leung et al., 2009</ref>), COACH (<ref type="bibr" target="#b38">Wu et al., 2009</ref>), RRW (<ref type="bibr" target="#b25">Macropol et al., 2009</ref>), HUNTER (<ref type="bibr" target="#b7">Chin et al., 2010</ref>), RMCL (<ref type="bibr" target="#b32">Satuluri et al., 2010</ref>), SPICi (<ref type="bibr" target="#b14">Jiang and Singh, 2010</ref>), Link Community (LinkCom) (<ref type="bibr" target="#b1">Ahn et al., 2010</ref>) and NWE (<ref type="bibr" target="#b26">Maruyama and Chihara, 2011</ref>). RRW, NWE, HUNTER and SPICi are designed for weighted networks, so we compared SR-MCL with them on WIPHI. LinkCom can be applied on both unweighted and weighted network, so all three networks are used. The rest of these algorithms can only be applied on unweighted networks, so they are compared with SR-MCL on DIP and BioGRID. We tuned each algorithm to its best parameter setting but generally found that the default parameter setting generates the best results. The values of each algorithm's parameters are reported in Supplementary Table S2. For R-MCL and MCL, here we show the results without using any quality function to prune out their results. For SR-MCL, we set p to 0.8 in this experiment, and we choose 0.4 and 1.2 as ω for WI-PHI and BioGRID/DIP, respectively, since these parameters generally yield the best F-measure. Finally, we prune out all clusters whose size is less than or equal to 2 in all algorithms' clustering results. The information of all clustering results is reported in Tables 2 and 3. Since other algorithms generally produce smaller clusters than SR-MCL with above parameter setting, we additionally evaluated the results based on a set of smaller GO terms GO spec , which contains GO terms whose information content is higher than 2.5. Detailed information can be found in Supplementary Table S3. For GO spec , we changed the inflation parameter r of SR-MCL to 4.5,<ref type="figure" target="#tab_2">Table 2</ref>. The information of clusters produced by SR-MCL and other weighted network clustering algorithms on WI-PHI. avg(C) is the average size of clusterswhich results in smaller clusters. For example, in BioGRID, the average cluster size is reduced from 9.59 to 7.23 if r is increased from 2.0 to 4.5. SR-MCL has the highest precision among all algorithms except SPICi (See Supplementary Figs. 4 and 7), since SPICi produces less clusters that are only in dense subgraphs. With regard to recall, among all weighted network clustering algorithms, SRMCL is the highest; and among all unweighted network clustering algorithms, SR-MCL and LinkCom are the highest on BioGRID, but RNSC is higher than SR-MCL on DIP (see Supplementary Figs. 5 and 9). This is simply because RNSC has much higher coverage (&gt;4000) than SR-MCL (∼2000), and therefore more GO-terms are identified. Nevertheless, as shown in<ref type="figure" target="#fig_4">Figures 3 and 4</ref>, SR-MCL has the highest F-measure among all existing algorithms on either unweighted or weighted networks. This is probably because SRMCL has high precision due to the original design of R-MCL and the post-processing, and SR-MCL generally has high recall because it produces overlapped clusters after executing R-MCL multiple times with penalizing attractor nodes. Moreover, we have following observations about other algorithms: (i) HUNTER and MCODE's coverage are much smaller than other algorithms and their clusters are too large to identify small functional modules, resulting in extremely low (&lt;5%) recall. Although MCODE's precision is higher than other algorithms except SR-MCL, its F-measure is lower than most other algorithms. SPICi also has very small coverage, but its clusters size is moderate, resulting in very high precision and low recall, and the F-measure is slightly lower than most of other algoirthms. (ii) CORE, DPClus, RNSC, MLC and R-MCL all have higher coverage and produce more and smaller clusters on the sparser network DIP than the denser network BioGRID. However, since the average size of gold standard are roughly equal in different networks and highquality clusters are rarer in a sparser network, a functional modules identification algorithm should have lower coverage and produce less and roughly equal-size clusters on a sparser network. As a result, these algorithms have a relatively (compared with COACH and IPCA) lower F-measure on DIP than on BioGRID with regularsize GO terms. (iii) LinkCom clearly outperforms other algorithms except SR-MCL on BioGRID, but, LinkCom is just above average on DIP. This is because BioGRID is a denser network than DIP, and LinkCom can identify highly overlapped clusters in a denser network due to the line-graph transformation. (iv) RNSC, which is a hard clustering algorithms, surprisingly has average F-measure among all unweighted network clustering algorithms. Although RNSC's poor performance were previously reported by (<ref type="bibr" target="#b22">Li et al., 2010</ref>), after simply removing clusters containing two or less proteins, it can still have average performance, so it might be also interesting to extend RNSC into a soft clustering algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Identifying functional modules in interaction networks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Identifying hierarchical annotations</head><p>In this section, we demonstrate that SR-MCL is capable of identifying hierarchical functional modules by showing two top cases. Each case contains two clusters matching a parent GO term and its child GO term. In the first example, shown in<ref type="figure" target="#fig_8">Figure 5</ref>, the large nodes are all annotated by the child term 'holo TFIIH complex' (GO:0005675), and all of the medium nodes and the large nodes are annotated by the parent term 'TFIIK complex' (GO:0070985). SR-MCL produces two clusters matching these two terms. In an earlier iteration, a large cluster roughly matching the parent term with the attractor node i477</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Y.-K.Shih and S.Parthasarathy</head><p>BioGRIDthe weight. The size of a node indicates the GO term annotation: The large nodes are annotated by GO:0070985 (and thus GO:0005675); the medium nodes are only annotated by GO:0005675; and the small nodes are are not annotated by either of these two terms. The color indicates the clustering result: All nodes form a cluster matching GO:0005675, and the dark green nodes form a cluster matching GO:0070985 RAD3 is produced. In a later iteration, after several nodes including RAD3 being penalized, a small cluster consisting of RAD3, TFB3, KIN28 and CCL1 is produced, where TFB3, KIN28 and CCL1 are the only three nodes annotated by the child term in WI-PHI. The second example is presented in<ref type="figure">Figure 6</ref>. The large nodes are all annotated by the child term 'U4/U6 × U5 tri-snRNP complex' (GO:0046540), and the medium nodes and the large nodes are all annotated by the parent term 'small nuclear ribonucleoprotein complex' (GO:0030532). SR-MCL produces two clusters matching these two terms: The cluster containing the green nodes and the blue node, named Cluster A, can roughly match the child term (GO:0046540), and the cluster containing the yellow nodes and the green nodes, named Cluster B, can roughly match the parent term (GO:0030532). Cluster A is produced in an earlier iteration with the attractor node LSM2; in a later iteration, as some other nodes in Cluster A were penalized in previous iterations, PRP6, which is roughly the center of nodes annotated by GO:0030532, becomes the attractor node of Cluster B.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Three toy examples pointing out the problems of R-MCL. All edges have the weight 1 except that the thin edges in (c) have weight 0.5. The color of the nodes represents the result of R-MCL, and the red/blue numbers indicate the attractor nodes w.r.t. the red/blue clusters. The dash circles indicate functional modules</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. The comparison of F-measure on WI-PHI</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.3.</head><figDesc>Fig. 3. F-measure of each weighted network clustering algorithms on WI-PHI</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.4.</head><figDesc>Fig. 4. F-measure of each unweighted network clustering algorithms on BioGRID and DIP</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig.5.</head><figDesc>Fig. 5. Two clusters matching GO:0005675 and its child term GO:0070985 in WI-PHI. The thickness of an edge represents the weight. The size of a node indicates the GO term annotation: The large nodes are annotated by GO:0070985 (and thus GO:0005675); the medium nodes are only annotated by GO:0005675; and the small nodes are are not annotated by either of these two terms. The color indicates the clustering result: All nodes form a cluster matching GO:0005675, and the dark green nodes form a cluster matching GO:0070985</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>= attractors(M ) //Resulting attractor nodes from iter-time execution of R-MCL 11. for all v i ∈ T iter do 12. count[i]=count[i]+1 13. C iter = clusters(M ) //Resulting clusters from iter-time execution of R-MCL 14. C = C ∪C iter 15. C = post-process...(C)</figDesc><table>Regularize operation 
7. 
M = Inflate(M ,r,count,β) //Introducing penalty on attractor 
nodes 
8. 
M = Prune(M ) 
9. 
until M converges //iter-time execution of R-MCL 
10. 
T iter </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>Algorithm 2 post-processing Input: A set of clusters C ={c 0 ,...c k }, the quality function qf , the quality threshold ω and the overlap threshold p. Output: A set of qualified clusters C 1. for i = 0 → k do 2. if qf (c i ) &lt;ω or size(c i ) ≤ 2 then 3. Remove c i from C 4. Sort C in descending order of qf values 5. for i = 0 → k do 6. if c i was not removed from C then 7. for j = i +1 → k do 8. if NA(c i ,c j ) &gt;= p then 9. Remove c j from C</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><figDesc>Table 1. Information of the three yeast networks used in the experiment Name |V | | E| |V ∈ GO| avg(GO) |GO| GO| is the number of proteins annotated by any GO term we used; avg(GO) is the average GO term size and |GO| is the number of GO terms.</figDesc><table>BioGRID 
4364 
25464 
3771 
10.73 
3033 
DIP 
4995 
21875 
3822 
11.30 
3038 
WI-PHI 
5953 
49607 
4338 
12.19 
3262 

|V ∈ </table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="5"> CONCLUSIONS In this article, we proposed a new approach for identifying functional modules in PPI networks—SR-MCL. We empirically found that SR-MCL outperforms a range of extant algorithms in terms of its accuracy in identifying functional modules. As part of future work, we are interested in auto-tuning some of the parameters of SR-MCL and adopting SR-MCL for TAP data (Gavin et al., 2006; Krogan et al., 2006).</note>

			<note place="foot">i479 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head><p>We thank V. Satuluri and the anonymous reviewers for helpful suggestions to improve the presentation of this work.</p></div>
			</div>

			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Cfinder: locating cliques and overlapping modules in biological networks</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Adamcsek</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1021" to="1023" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Link communities reveal multiscale complexity in networks</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<forename type="middle">Y</forename>
				<surname>Ahn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">466</biblScope>
			<biblScope unit="page" from="761" to="764" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Development and implementation of an algorithm for detection of protein complexes in large interaction networks</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Altaf-Ul-Amin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">207</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Gene ontology: tool for the unification of biology</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Ashburner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat Genet</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="25" to="29" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">An ensemble framework for clustering protein–protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Asur</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="29" to="40" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">An automated method for finding molecular complexes in large protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Bader</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Hogue</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Evaluation of clustering algorithms for protein– protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Brohee</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">V</forename>
				<surname>Helden</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">488</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">A hub-attachment based method to detect functional modules from confidence-scored protein interactions and expression profiles</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">H</forename>
				<surname>Chin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="page" from="11" to="25" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>Suppl. 1</note>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">Graph clustering by flow simulation</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">V</forename>
				<surname>Dongen</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<pubPlace>Netherlands</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Community detection in graphs</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Fortunato</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Reports</title>
		<imprint>
			<biblScope unit="volume">486</biblScope>
			<biblScope unit="page" from="75" to="174" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Bootstrapping the interactome: unsupervised identification of protein complexes in yeast</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">C</forename>
				<surname>Friedel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="971" to="987" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Proteome survey reveals modularity of the yeast cell machinery</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">C</forename>
				<surname>Gavin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">440</biblScope>
			<biblScope unit="page" from="631" to="636" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Enumeration of condition-dependent dense modules in protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Georgii</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="933" to="940" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Finding overlapping communities using disjoint community detection algorithms</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Gregory</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Complex Networks</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="47" to="61" />
			<date type="published" when="2009" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Spici: a fast clustering algorithm for large biological networks</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Jiang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Singh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1105" to="1111" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Bioinformatics-bts370.tex] Page: i479 i473–i479 Identifying functional modules in interaction networks Fig. 6. Two clusters matching GO:0030532 and its child term GO:0046540 in WI-PHI. The thickness of an edge represents the weight. The size of a node indicates the GO term annotation: The large nodes are annotated by GO:0046540 (and thus GO:0030532); the medium nodes are only annotated by GO:0030532; and the small nodes are are not annotated by either of these two terms. The color indicates the clustering result: The green nodes are the overlap of two clusters</title>
	</analytic>
	<monogr>
		<title level="m">The yellow nodes and green nodes form a cluster matching GO:0030532, and the blue node (PAT1) and green nodes form a cluster matching GO</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page">46540</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Wiphi: a weighted yeast interactome enriched for direct physical interactions</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Kiemer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteomics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="932" to="943" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Protein complex prediction via cost-based clustering</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">D</forename>
				<surname>King</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="3013" to="3020" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Global landscape of protein complexes in the yeast Saccharomyces cerevisiae</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">J</forename>
				<surname>Krogan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">440</biblScope>
			<biblScope unit="page" from="637" to="643" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Predicting protein complexes from ppi data: a coreattachment approach</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">C M</forename>
				<surname>Leung</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="133" to="144" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">The function of communities in protein interaction networks at multiple scales</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Lewis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">100</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Modifying the dpclus algorithm for identifying protein complexes based on new topological structures</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">398</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Computational approaches for detecting protein complexes from protein interaction networks: a survey</title>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Genomics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">S3</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>Suppl. 1</note>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Discovering protein complexes in dense reliable neighborhoods of protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">X</forename>
				<forename type="middle">L</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computational Systems Bioinformatics Conference</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="157" to="168" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Modular organization of protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Luo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page">207</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">RRW: repeated random walks on genome-scale protein networks for local cluster discovery</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Macropol</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC bioinformatics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">283</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">NWE: node-weighted expansion for protein complex prediction using random walk distances</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Maruyama</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Chihara</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteome Sci</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">14</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Suppl. 1</note>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">An enhanced markov clustering method for detecting protein complexes</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">N</forename>
				<surname>Moschopoulos</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">8th IEEE International Conference on BioInformatics and BioEngineering</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008-10" />
			<biblScope unit="page" from="8" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Inferring protein–protein interactions using interaction network topologies</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Paccanaro</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In IJCNN</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="161" to="166" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Detection of functional modules from protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">B</forename>
				<surname>Pereiraleal</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PROTEINS: Struct Funct Bioinform</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="49" to="57" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">The database of interacting proteins: 2004 update</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Salwinski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="449" to="451" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
	<note>Suppl. 1</note>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Scalable graph clustering using stochastic flows: applications to community discovery</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Satuluri</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Parthasarathy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGKDD, ACM</title>
		<meeting>SIGKDD, ACM</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="737" to="746" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">Markov clustering of protein interaction networks with improved balance and scalability</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Satuluri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Conference on Bioinformatics and Computational Biology</title>
		<meeting>the ACM Conference on Bioinformatics and Computational Biology</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="247" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">Refining markov clustering for protein complex prediction by incorporating core-attachment structure</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Srihari</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Inform. Series</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="159" to="168" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<analytic>
		<title level="a" type="main">The biogrid interaction database: 2011 update</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Stark</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page">698</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Suppl. 1</note>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">Improving functional modularity in protein–protein interactions graphs using hub-induced subgraphs</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Ucar</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PKDD</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="371" to="382" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b36">
	<analytic>
		<title level="a" type="main">Markov clustering versus affinity propagation for the partitioning of protein interaction graphs</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Vlasblom</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Wodak</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">99</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b37">
	<analytic>
		<title level="a" type="main">A fast hierarchical clustering algorithm for functional modules discovery in protein interaction networks</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Wang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="607" to="620" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b38">
	<analytic>
		<title level="a" type="main">A core-attachment based method to detect protein complexes in ppi networks</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Wu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">169</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>