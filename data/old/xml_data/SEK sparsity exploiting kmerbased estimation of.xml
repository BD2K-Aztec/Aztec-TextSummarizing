
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:28+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Sequence analysis SEK: sparsity exploiting k-mer-based estimation of bacterial community composition</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2014">2014</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Saikat</forename>
								<surname>Chatterjee</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">David</forename>
								<surname>Koslicki</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">Oregon State University</orgName>
								<address>
									<settlement>Corvallis</settlement>
									<region>OR</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Siyuan</forename>
								<surname>Dong</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Systems Biology program</orgName>
								<orgName type="institution">KTH Royal Institute of Technology</orgName>
								<address>
									<settlement>Sweden</settlement>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">Aalto University</orgName>
								<address>
									<settlement>Esbo</settlement>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Nicolas</forename>
								<surname>Innocenti</surname>
							</persName>
							<affiliation key="aff4">
								<orgName type="department">Department of Computational Biology</orgName>
								<orgName type="institution">KTH Royal Institute of Technology</orgName>
								<address>
									<settlement>Stockholm</settlement>
									<country key="SE">Sweden</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Lu</forename>
								<surname>Cheng</surname>
							</persName>
							<affiliation key="aff5">
								<orgName type="department">Department of Mathematics and Statistics</orgName>
								<orgName type="institution">University of Helsinki</orgName>
								<address>
									<settlement>Helsinki</settlement>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Yueheng</forename>
								<surname>Lan</surname>
							</persName>
							<affiliation key="aff6">
								<orgName type="department">Department of Physics</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mikko</forename>
								<surname>Vehkaper</surname>
							</persName>
							<affiliation key="aff7">
								<orgName type="department">Department of Signal Processing</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mikael</forename>
								<surname>Skoglund</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Lars</forename>
								<forename type="middle">K</forename>
								<surname>Rasmussen</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Erik</forename>
								<surname>Aurell</surname>
							</persName>
							<affiliation key="aff4">
								<orgName type="department">Department of Computational Biology</orgName>
								<orgName type="institution">KTH Royal Institute of Technology</orgName>
								<address>
									<settlement>Stockholm</settlement>
									<country key="SE">Sweden</country>
								</address>
							</affiliation>
							<affiliation key="aff8">
								<orgName type="department">Department of Information and Computer Science</orgName>
								<orgName type="institution">Aalto University</orgName>
								<address>
									<settlement>Esbo</settlement>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Jukka</forename>
								<surname>Corander</surname>
							</persName>
							<affiliation key="aff5">
								<orgName type="department">Department of Mathematics and Statistics</orgName>
								<orgName type="institution">University of Helsinki</orgName>
								<address>
									<settlement>Helsinki</settlement>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">John</forename>
								<surname>Hancock</surname>
							</persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Communication Theory</orgName>
								<orgName type="institution">KTH Royal Institute of Technology</orgName>
								<address>
									<settlement>Stockholm, Sweden</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Sequence analysis SEK: sparsity exploiting k-mer-based estimation of bacterial community composition</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">30</biblScope>
							<biblScope unit="issue">17</biblScope>
							<biblScope unit="page" from="2423" to="2431"/>
							<date type="published" when="2014">2014</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btu320</idno>
					<note type="submission">Received on October 4, 2013; revised on April 11, 2014; accepted on April 30, 2014</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Estimation of bacterial community composition from a high-throughput sequenced sample is an important task in metage-nomics applications. As the sample sequence data typically harbors reads of variable lengths and different levels of biological and technical noise, accurate statistical analysis of such data is challenging. Currently popular estimation methods are typically time-consuming in a desktop computing environment. Results: Using sparsity enforcing methods from the general sparse signal processing field (such as compressed sensing), we derive a solution to the community composition estimation problem by a simultaneous assignment of all sample reads to a pre-processed reference database. A general statistical model based on kernel density estimation techniques is introduced for the assignment task, and the model solution is obtained using convex optimization tools. Further, we design a greedy algorithm solution for a fast solution. Our approach offers a reasonably fast community composition estimation method, which is shown to be more robust to input data variation than a recently introduced related method. Availability and implementation: A platform-independent Matlab implementation of the method is freely available at http://www.ee.kth.se/ ctsoftware; source code that does not require access to Matlab is currently being tested and will be made available later through the above Web site.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>High-throughput sequencing technologies have recently enabled detection of bacterial community composition at an unprecedented level of detail. The high-throughput approach focuses on producing for each sample a large number of reads covering certain variable part of the 16S rRNA gene, which enables an identification and comparison of the relative frequencies of different taxonomic units present across samples. Depending on the characteristics of the samples, the bacteria involved and the quality of the acquired sequences, the taxonomic units may correspond to species, genera or even higher levels of hierarchical classification of the variation existing in the bacterial kingdom. However, at the same time, the rapidly increasing sizes of read sets produced per sample in a typical project call for fast inference methods to assign meaningful labels to the sequence data, a problem that has attracted considerable attention (<ref type="bibr" target="#b20">Koslicki et al., 2013;</ref><ref type="bibr" target="#b21">Meinicke et al., 2011;</ref><ref type="bibr" target="#b23">Ong et al., 2013;</ref><ref type="bibr" target="#b27">Wang et al., 2007</ref>). Many approaches to the bacterial community composition estimation problem use 16S rRNA amplicon sequencing where thousands to hundreds of thousands of moderate length (around 250â€“500 bp) reads are produced from each sample and then either clustered or classified to obtain estimates of the prevalence of any particular taxonomic unit. In the clustering approach, the reads are grouped into taxonomic units by either distance-based or probabilistic methods (<ref type="bibr" target="#b9">Cai and Sun, 2011;</ref><ref type="bibr" target="#b13">Cheng et al., 2012;</ref><ref type="bibr" target="#b15">Edgar, 2010</ref>), such that the actual taxonomic labels are assigned to the clusters afterward by matching their consensus sequences to a reference database. Recently, the Bayesian BeBAC method (<ref type="bibr" target="#b13">Cheng et al., 2012</ref>) was shown to provide high biological fidelity in clustering. However, this accuracy comes with a substantial computational cost such that a running time of several days in a computing-cluster environment may be required for large read sets. In contrast to the clustering methods, the classification approach is based on using a reference database directly to assign reads to meaningful units representing biological variations. Methods for the classification of reads have been based either on homology using sequence similarity or on genomic signatures in terms of oligonucleotide composition. Examples of homology-based methods include MEGAN (<ref type="bibr" target="#b19">Huson et al., 2007;</ref><ref type="bibr" target="#b22">Mitra et al., 2011</ref>) and phylogenetic analysis (von<ref type="bibr" target="#b26">Mering et al., 2007</ref>). A popular approach is the Ribosomal Database Project's (RDP) classifier, which is based on a naâ‚¬ Ä±ve Bayesian classifier (NBC) that assigns a label explicitly to each read produced for a particular sample (<ref type="bibr" target="#b27">Wang et al., 2007</ref>). Despite the computational simplicity of NBC, the RDP classifier *To whom correspondence should be addressed. ÃŸ The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com may still require several days to process a dataset in a desktop environment. Given this challenge, considerably faster methods based on different convex optimization strategies have been recently proposed (<ref type="bibr" target="#b20">Koslicki et al., 2013;</ref><ref type="bibr" target="#b21">Meinicke et al., 2011</ref>). In particular, sparsity-based techniques, mainly compressive sensing-based algorithms (<ref type="bibr" target="#b10">Candes, and Wakin, 2008</ref>), are used for estimation of bacterial community composition in (<ref type="bibr" target="#b4">Amir and Zuk, 2011;</ref><ref type="bibr" target="#b20">Koslicki et al., 2013;</ref><ref type="bibr" target="#b29">Zuk et al., 2012</ref>). However, (<ref type="bibr" target="#b4">Amir and Zuk, 2011</ref>) used sparsity-promoting algorithms to analyze mixtures of dye-terminator reads resulting from Sanger sequencing, with the sparsity assumption that each bacterial community comprises a small subset of known bacterial species, the scope of the work thus being different from methods intended for high-throughput sequence data. The Quikr method of (<ref type="bibr" target="#b20">Koslicki et al., 2013</ref>) uses a k-mer-based approach on 16S rRNA sequence reads and has a considerable similarity to the method (SEK: Sparsity Exploiting K-mers-based algorithm) introduced here. Explained briefly, the Quikr setup is based on the following core theoretical formulation: given a reference database D=fd 1 ;. .. ; d M g of sequences and a set S=fs 1 ;. .. ; s t g of sample sequences (the reads to be classified), it is assumed that there exists a unique d j for each s l , such that s l = d j. In general, all reference databases and sample sets consist of sequences with highly variable lengths. In particular, the lengths of reference sequences and samples reads are often different. Violation of the assumption leads to sensitivity in Quikr performance according to our experiments. Another example of fast estimation is called Taxy (<ref type="bibr" target="#b21">Meinicke et al., 2011</ref>), which addresses the effect of varying sequence lengths (<ref type="bibr" target="#b28">Wommack et al., 2008</ref>). Taxy uses a mixture model for the system setting and convex optimization for a solution. The method referred to as COMPASS (<ref type="bibr" target="#b3">Amir et al., 2013</ref>) is another convex optimization approach, similar to the Quikr method, that uses large k-mers and a divide-andconquer technique to handle large resulting training matrices. The currently available version of the Matlab-based COMPASS software does not allow for training with custom databases, so a direct comparison with SEK is not yet possible. To enable fast estimation, we adopt an approach where the estimation of the bacterial community composition is performed jointly, in contrast to the read-by-read analysis used in the RDP classifier. Our model is based on kernel density estimators and mixture density models (<ref type="bibr" target="#b7">Bishop, 2006</ref>), and it leads to solving an under-determined system of linear equations under a particular sparsity assumption. In summary, the SEK approach is implemented in three separate steps: off-line computation of k-mers using a reference database of 16S rRNA genes with known taxonomic classification, online computation of k-mers for a given sample and then final online estimation of the relative frequencies of taxonomic units in the sample by solving an under-determined system of linear equations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">General notation and computational resources used</head><p>We denote the non-negative real line by R +. The ' p norm is denoted by jj:jj p , and EÂ½:ÂŠ denotes the expectation operator. Transpose of a vector/ matrix is denoted by (.) t. We denote cardinality and complement of a set S by jSj and S, respectively. In the computations reported in the remainder of the article, we used standard Matlab software with some instances of C code. For experiments on mock community data, we used a Dell Latitude E6400 laptop computer with a 3 GHz processor and 8 GB memory. We also used the cvx (<ref type="bibr" target="#b8">Boyd and Vandenberghe, 2004</ref>) convex optimization toolbox and the Matlab function lsqnonneg() for a leastsquares solution with non-negativity constraint. For experiments on simulated data, we used standard computers with an Intel Xeon x5650 processor and an Intel i7-4930K processor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">k-mer training matrix from reference data</head><p>The training step of SEK consists of converting an input labeled database of 16S rRNA sequences into a k-mer training matrix. For a fixed k, we calculate k-mers feature vectors for a window of fixed length, such that the window is shifted (or slid) by a fixed number of positions over a database sequence. This procedure captures variability of localized k-mer statistics along 16S rRNA sequences. Using bp as the length unit and denoting the length of a reference database sequence d by L d , and further a fixed window length by L w L d and the fixed position shift by L p , the total number of subsequences processed to k-mers is close to b LdÃ€Lw Lp c. The choice of L w may be decided by the shortest sample sequence length that is used in the estimation, assuming the reads in a sample set are always shorter than the reference training sequences. In practice, for example, we used L w = 450 bp in experiments using mock communities data. The choice of L p is decided by the trade-off between computational complexity and estimation performance. Given a database of reference training sequences D = {d 1 ,. .. , d M } where d m is the sequence of the mth taxonomic unit, each sequence d m is treated independently. For d m , the k-mer feature vectors are stored column-wise in a matrix X m 2 R</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">SEK model</head><p>For the mth taxonomic unit, we have the training set</p><formula>X m = x m1 x m2. .. x mNm Ã‚ Ãƒ 2 R 4 k Ã‚Nm + ;</formula><p>where we used an alternative indexing to denote the lth k-mer feature vector by x ml. Letting x and C m denote random k-mer feature vectors and mth taxonomic unit, respectively, and using X m , we first model the conditional density pÃ°xjC m Ãž corresponding to mth unit by a mixture density as follows:, x ml is assumed to be the mean of distribution p ml , and Ã‚ ml denotes the other parameters/properties apart from the mean. In general, p ml could be chosen according to any convenient parametric or non-parametric family of distributions. In biological terms, ml reflects the amplification of a variable sequence region and how probable that is in a given dataset with a sufficient level of coverage. The approach of using training data x ml as the mean of p ml stems from a standard approach of using kernel density estimators [see Section 2.5.1 of (<ref type="bibr" target="#b7">Bishop, 2006)]</ref>. Given a test set of k-mers (computed from reads), the distribution of the test set is modeled as follows:</p><formula>pÃ°xÃž= X M m=1 pÃ°C m Ãž pÃ°xjC m Ãž;</formula><p>where we denote probability for taxonomic unit m (or class weight) by pÃ°C m Ãž, satisfying X M m=1 pÃ°C m Ãž=1. fpÃ°C m Ãžg M m=1 is the composition of taxonomic units. The inference task is to estimate pÃ°C m Ãž as accurately and fast as possible, for which a first order moment matching approach is developed. We first evaluate the mean of x under pÃ°xÃž as follows:</p><formula>EÂ½xÂŠ = Z x pÃ°xÃž dx 2 R 4 k Ã‚1 + = X M m=1 pÃ°C m Ãž Z x pÃ°xjC m Ãž dx = X M m=1 pÃ°C m Ãž Z x X Nm l=1 ml p ml Ã°xjx ml ; Ã‚ ml Ãž dx = X M m=1 pÃ°C m Ãž X Nm l=1 ml Z x p ml Ã°xjx ml ; Ã‚ ml Ãž dx = X M m=1 pÃ°C m Ãž X Nm l=1 ml x ml :</formula><p>Introducing a new indexing nXnÃ°m; lÃž= X mÃ€1 j=1</p><p>N j +l, we can write</p><formula>EÂ½xÂŠ= X N n=1 n x n =X&#x0D;; where =Â½ 1 2. .. ; N ÂŠ t 2 R NÃ‚1 + ; n X nÃ°m;lÃž =pÃ°C m Ãž ml ; Ã°2Ãž with the following properties X nÃ°m;NmÃž nÃ°m;1Ãž n =pÃ°C m Ãž X Nm l=1 ml =pÃ°C m Ãž; X N n=1 n =jj&#x0D;jj 1 =1:</formula><p>In our approach, we use the sample mean of the test set. The test set consists of k-mers feature vectors computed from reads. Each read is processed individually to generate k-mers in the same manner used for the reference data. We compute sample mean of the k-mer feature vectors for test dataset reads. Let us denote the sample mean of the test dataset by 2 R 4 k Ã‚1 + , and assume that the number of reads is reasonably high such that % EÂ½xÂŠ. Then we can write</p><formula>% X&#x0D;:</formula><p>Considering that model irregularities are absorbed in an additive noise term n, we use the following system model</p><formula>=X&#x0D;+n 2 R 4 k Ã‚1 + Ã°3Ãž</formula><p>Using the sample mean and knowing X, we estimate from</p><p>(3) as</p><formula>^ XÂ½ ^ 1 ^ 2. .. ; ^ N ÂŠ t 2 R NÃ‚1 +</formula><formula>jj ^ jj 1 = X N n=1 ^ n = X M m=1 ^ pÃ°C m Ãž=1 Ã°4Ãž</formula><p>In (4), ^ ! 0 means 8n; ^ n ! 0. We note that the linear setup (3) is underdetermined as 4 k 5N (in practice 4 k ( N) and hence, in general, solving</p><p>(3) without any constraint will lead to infinitely many solutions. The constraints (4) result in a feasible set of solutions that is convex and can be used for finding a unique and meaningful solution. We recall that the main interest is to estimate pÃ°C m Ãž, which is achieved in our approach by first estimating and then pÃ°C m Ãž. Hence, represents an auxiliary variable in our system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Optimization problem and sparsity aspect</head><p>The solution of (3), denoted by ^ , must satisfy the constraints in (4).</p><p>Hence, for SEK, we pose the optimization problem to solve as follows:</p><p>The new algorithm introduced here is referred to as OMP +;1 sek , and its pseudo-code is shown in Algorithm 1. In the stopping condition (step 7), the parameter is a positive real number that is used as a threshold, and the parameter I is a positive integer that is used to limit the number of iterations. The choice of and I is ad hoc, depending mainly on user experience.</p><formula>4: S i S iÃ€1 [ i ; ( jS i j=i) 5: ~ i arg min i jj Ã€ X Si i jj 2 ; i ! 0; (X Si 2 R 4 k Ã‚i + ) 6: r i Ã€ X Si ~ i ;</formula><p>(Residual) 7: until Ã°Ã°j jj ~ jj 1 Ã€ 1j Ãž or Ã°i ! IÃžÃž Output:</p><formula>1: ^ 2 R N + , satisfying ^ Si = ~ i and ^ S i =0. 2: ^ ^ jj ^ jj 1 (Enforcing jj ^ jj 1 =1)</formula><p>Compared with the standard OMP, the new aspects in OMP +;1 sek are as follows:</p><p>In Step 3 of Iterations, we only search within positive inner product coefficients. In Step 5 of Iterations, a least-squares solution ~ i with non-negativity constraint is found for ith iteration via the use of intermediate variable i 2 R iÃ‚1 +. In this step, X Si is the sub-matrix formed by columns of X indexed in S i. The concerned optimization problem is convex. We used the Matlab function lsqnonneg() for this purpose. In Step 6 of Iterations, we find the least squares residual r i. In Step 7 of Iterations, the stopping condition provides for a solution that has an ' 1 norm close to one, with an error decided by the threshold. An unconditional stopping condition is provided by the maximum number of iterations I. In Step 2 of Output, the ' 1 norm of the solution is set to one by a rescaling.</p><p>The computational complexity of the OMP +;1 sek algorithm is as follows.</p><p>The main cost is incurred at Step 5 where we need to solve a linearly constrained QP using convex optimization tools; here we assume that the costs of the other steps are negligible. In the ith iteration X Si 2 R 4 k Ã‚i + and i ( 4 k , and the complexity required to solve Step 5 is OÃ°4 k i 2 Ãž (<ref type="bibr" target="#b8">Boyd and Vandenberghe, 2004</ref>). As we have a stopping condition i I, the total complexity of the OMP +;1 sek algorithm is within OÃ°I Ã‚ 4 k I 2 Ãž=OÃ°4 k I 3 Ãž. We know that optimal solution of P +;1 sek using convex optimization tools requires a complexity of OÃ°N 3 Ãž. For a setup with I54 k ( N, we can have OÃ°4 k I 3 Ãž ( OÃ°N 3 Ãž, and hence the OMP +;1 sek algorithm is typically much more efficient than using convex optimization tools directly in a highdimensional setting. It is clear that the OMP +;1 sek algorithm is not allowed to iterate beyond the limit of I; in practice, this works as a forced convergence. For both OMP +;1 sek and P +;1 sek , we do not have a theoretical proof on robust reconstruction of solutions. Further, a natural question remains on how to set the input parameters and I. The choice of parameters is discussed later in Section 3.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Overall system flowchart</head><p>Finally, we depict the full SEK system by using a flowchart shown in<ref type="figure">Figure 1</ref>. The flowchart shows main parts of the overall system and associated off-line and online computations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.7">Mock communities data</head><p>For our experiments on real biological data, we used the mock microbial communities database developed in (<ref type="bibr" target="#b17">Haas et al., 2011</ref>). The database is called even composition Mock Communities (eMC) for chimeric sequence detection where the involved bacterial species are known in advance. Three regions (V1â€“V3, V3â€“V5, V6â€“V9) of the 16S rRNA gene of the composition eMC were sequenced using 454 sequencing technology in four different sequencing centers. In our experiments, we focused on the V3â€“V5 region datasets, because these have been earlier used for evaluation of the BeBAC method<ref type="bibr">[</ref><ref type="bibr" target="#b13">Cheng et al., 2012</ref>). The test dataset consists of 91 240 short length reads from 21 different species. The length of reads has a range between 450 and 550 bp, and the bacterial community composition is known at the species level, by the following computation performed in (<ref type="bibr" target="#b13">Cheng et al., 2012</ref>). Each individual sequence of the 91 240 read sequences was aligned (local alignment) to all the reference sequences of reference database D mock known described in the Section 2.7.2 and then each read sequence is labelled by the species of the highest scoring reference sequence, followed by computation of the community composition referred to as ground truth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>.7.2 Training datasets (Reference) We used two different databases (known and mixed) generated from the mock microbial community database (<ref type="bibr" target="#b17">Haas et al., 2011</ref>). The first database is denoted by D mock known and it consists of the same M = 21 species present among the reads described in Section 2.7.1. The details of the D mock known database can be found in Experiment 2 of (<ref type="bibr" target="#b13">Cheng et al., 2012</ref>). The database consists of 113 reference sequences for a total of 21 bacterial species, such that each reference sequence represents a distinct 16S rRNA gene. Thus, there is a varying number of reference sequences for each of the considered species. Each reference sequence has a length of $1500 bp, and for each species, the corresponding reference sequences are concatenated to a single sequence. The final reference database D mock known then consists of 21 sequences where each sequence has a length of $5000 bp. To evaluate influence of new species in reference data on the performance of SEK, we created new databases denoted by D mock mixed Ã°EÃž. Here E<ref type="figure">Fig. 1</ref>. A flowchart of full SEK system represents the number of additional species included to a partial database created from D mock known , by downloading additional reference data from the RDP database. Each partial database includes only one randomly chosen reference sequence for each species in D mock known and hence consists of 21 reference sequences of a length of $1500 bp. For example, with E = 10, 10 additional species were included in the reference database and consequently D mock mixed Ã°10Ãž contains 16S rRNA sequences of M = 21 + 10 = 31 species. Several instances of D mock mixed Ã°EÃž were made for each fixed value of E by choosing a varying set of additional species and we also increased E from 0 to 100 in steps of 10. Note that, in D mock mixed Ã°EÃž, the inclusion of only single reference sequence results in reduction of biological variability for each of the original 21 species compared with D mock known .</p><formula>proportion p(C m ) Î¼ Î³ X</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8">Simulated data</head><p>To evaluate how SEK performs for much larger data than the mock communities data, we performed experiments for simulated data described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8.1">Test datasets (Reads)</head><p>Two sets of simulated data were used to test the performance of the SEK method. First, the 216 different simulated datasets produced in (<ref type="bibr" target="#b20">Koslicki et al., 2013</ref>) were used for a direct comparison with the Quikr method and the RDP's NBC. See [(<ref type="bibr" target="#b20">Koslicki et al., 2013</ref>), Section 2.5] for the design of these simulations. The second set of simulated data consists of 486 different pyrosequencing datasets constituting 4179M reads generated using the shotgun/ amplicon read simulator Grinder (<ref type="bibr" target="#b5">Angly et al., 2012</ref>). Read-length distributions were set to be one of the following: fixed at 100 bp, normally distributed at 450 AE 50 bp, or normally distributed at 800 AE 100 bp. Read depth was fixed to be one of 10K, 100K or 1M total reads. Primers were chosen to target either only the V1â€“V3 regions, only the V6â€“V9 regions or else the multiple variable regions V1â€“V9. Three different diversity values were chosen (10, 100 and 500) at the species level, and abundance was modeled by one of the following three distributions: uniform, linear or power-law with parameter 0.705. Homopolymer errors were modeled using Balzer's model (<ref type="bibr" target="#b6">Balzer et al., 2010</ref>), and chimera percentages were set to either 5 or 35%. As only amplicon sequencing is considered, copy bias was used, but not length bias.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>.8.2 Training datasets (Reference) To analyze the simulated data, two different training matrices were used corresponding to the databases D small and D large from (<ref type="bibr" target="#b20">Koslicki et al., 2013</ref>). The database D small is identical to RDP's NBC training set 7 and consists of 10 046 sequences covering 1813 genera. Database D large consists of a 275 727 sequence subset of RDP's 16S rRNA database covering 2226 genera. Taxonomic information was obtained from NCBI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Performance measure and competing methods</head><p>As a quantitative performance measure, we use variational distance (VD) to compare between known proportions of taxonomic units p=Â½pÃ°C 1 Ãž; pÃ°C 2 Ãž;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Results for mock communities data</head><p>Using mock communities data, we carried out experiments where the community composition problem is addressed at the species level. Here we investigated how the SEK performs for real biological data, also vis-a-vis relevant competing methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">k-mers from test dataset</head><p>In the test dataset, described in Section 2.7.1, the shortest read is of length 450 bp. We used a window length L w = 450 bp and refrained from the sliding-thewindow approach in the generation of k-mers feature vectors. For k = 4 and k = 6, the k-mers generation took 21 and 48 min, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Results using small training dataset</head><p>In this experiment, we used SEK for estimation of the proportions of species in the test set described in Section 2.7.1. Here we used the smaller training reference set D mock known described in Section 2.2. The experimental setup is the same as shown in Experiment 2 of BeBAC (<ref type="bibr" target="#b13">Cheng et al., 2012</ref>). Therefore, we can directly compare it with the BeBAC results reported in (<ref type="bibr" target="#b13">Cheng et al., 2012</ref>). SEK estimates were based on 4-mers computed with the setup L w = 450 bp and L p = 1 bp. The choice of L p = 1 bp corresponds to the best case of generating training matrix X, with the highest amount of variability in reference k-mers. Using D mock known , the k-mers training matrix X has the dimension 4 4 Ã‚ 121 412. For the use of SEK in such a high dimension, the QP P +;1 sek using cvx suffered of numerical instability, but OMP +;1 sek provided results in 3.17 s, leading to a VD = 0.0305. For OMP +;1 sek ; and I in algorithm 1 were set to 10 â€“5 and 100, respectively; the values of these two parameters remained unchanged for other experiments on mock communities data presented later. The performance of SEK using OMP +;1 sek is shown in<ref type="figure" target="#fig_5">Figure 2</ref>, and compared against the estimates from BeBAC, Quikr and Taxy. The Quikr method used 6-mers and provided a VD = 0.4044, whereas the Taxy method used 7-mers and provided a VD = 0.2817. The use of k = 6 and k = 7 for Quikr and Taxy, respectively, is chosen according to the experiments described in<ref type="bibr" target="#b20">Koslicki et al. (2013) and</ref><ref type="bibr" target="#b21">Meinicke et al. (2011)</ref>. Here Quikr is found to provide the least satisfactory performance in terms of VD. BeBAC results are highly accurate with VD = 0.0038, but come with the requirement of a computation time in the order of 430 h. On the other hand OMP +;1 sek had a total online computation time around 21 min that is mainly dominated by k-mers computation from sample reads for evaluating ; given pre-computed X and , the central inferenece (or estimation) task of OMP +;1 sek took only 3.17 s. Considering that Quikr and Taxy also have similar online complexity requirement to compute k-mers from sample reads, OMP +;1 sek can be concluded to provide a good trade-off between performance and computational demands.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Results for dimension reduction by higher shifts</head><p>The L p = 1 bp leads to a relatively high dimension of X, which is directly related to an increase in computational complexity. Clearly, the L p = 1 bp shift produces highly correlated columns in X, and consequently it might be sufficient to use k-mers feature vectors with a higher shift without a considerable loss in variability information. To investigate this, we performed an experiment with a gradual increase in L p. We found that selecting, 0.1197, respectively. Therefore, shifts around L p = 15 bp appear to be sufficient to reduce the dimension of X, while maintaining sufficient biological variability. Hence the next experiment (in Section 3.2.4) was conducted using L p = 15 bp.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">Results for mixed training dataset</head><p>In this experiment, we investigated how the performance of SEK varies with an increase in the number of additional species in the reference training database, which are not present in the sample test data. We used reference training datasets D mock mixed Ã°EÃž described in Section 2.2, where E = 0,10,20,. .. , 100. For each non-zero E, we created 10 reference datasets to evaluate variability of the performance. The performance with one-sigma error bars is shown in<ref type="figure">Figure 3</ref>. The trend in the performance curves confirms that the SEK is subjected to gradual decrease in performance with the increase in the number of additional species; the trend holds for both P +;1 sek and OMP +;1 sek. Also, being optimal the performance of QP P +;1 sek is found to be more consistent than the greedy OMP +;1 sek .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Results for simulated data</head><p>The simulated data experiments deal with community composition problem at different taxonomic ranks and also with large size of X in (3). Owing to the massive size of X, a direct application of QP P +;1 sek is not feasible, and hence we used only OMP +;1 sek. For all results described, and I in algorithm 1 were set to 10 â€“5 and 409, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Training matrix construction</head><p>In forming the training matrix for D small , the K-mer size was fixed at K = 6, and the window length and position shifts were set to L w = 400 and L p = 100, respectively. This resulted in a matrix X with dimensions 4 6 Ã‚ 109 773. For the database D large, a training matrix X with dimensions 4 6 Ã‚ 500 734 was formed by fixing k = 6, L w = 400 and L p = 400. Calculating the matrices took $2.5 and $11 min, respectively, using an Intel i7-4930K processor and a custom C program. Slightly varying L p and L w did not significantly change the results contained in<ref type="figure" target="#fig_7">Figure 4</ref>compares the mean VD error at various taxonomic ranks as well as the algorithm execution time between SEK (OMP +;1 sek ), Quikr and RDP's NBC. As shown in<ref type="figure" target="#fig_7">Figure 4</ref>, using the database D large, SEK outperforms both Quikr and RDP's NBC in terms of reconstruction error and has comparable execution time as Quikr. Both Quikr and SEK have significantly lower execution time than RDP's NBC. Using the database D small (not shown here), SEK continues to outperform both Quikr and RDP's NBC in terms of reconstruction error, but only RDP's NBC in terms of execution time, as SEK had a median execution time of 15.2 min versus Quikr's 25 s. All three methods have increasing error for lower taxonomic ranks, but the improvement of SEK over Quikr is emphasized for lower taxonomic ranks.<ref type="figure">Figure 5</ref>summarizes the mean VD and algorithm execution time over the second set of simulated data described in Section 2.8 for Quikr and SEK both trained on D small. Part (a) of<ref type="figure">Figure 5</ref>demonstrates that SEK shows much lower VD error in comparison with Quikr at every taxonomic rank. However, part (b) of<ref type="figure">Figure 5</ref>shows that this improvement comes at the expense of moderately increased mean execution time. When focusing on the simulated datasets of length 100 bp, 450 AE 50 bp and 800 AE 100 bp, SEK had a mean VD of 0.803, 0.410 and 0.436, respectively. As L w was set to 400, this indicates the importance of choosing L w to roughly match the sequence length of a given sample when forming the k-mer training matrix if sequence length is reasonably short ($400 bp).Number of extra new species in reference (E) VD<ref type="figure">Fig. 3</ref>. For mock communities data: VD performance of SEK against increasing reference database D mock mixed Ã°EÃž, where E = 0,10,20,. .. , 100. The left figure is for P +;1 sek and the right figure is for OMP +;1 sek. The results show that both SEK implementations are subjected to a gradual decrease in performance with the increase in the number of additional speciesSEK somewhat experienced decreasing performance as a function of diversity: at the genus level, SEK gave a mean VD of 0.467, 0.579 and 0.603 for the simulated datasets with diversity 10, 100 and 500, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3">Results for second set of simulated data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Remarks on parameter choice and errors</head><p>In SEK, we need to choose several parameters: k, L w , L p , and I. Typically an increase in k leads to better performance with the fact that a higher k always subsumes a lower k in the process of generating k-mers feature vectors. The trend of improvement in performance with increase of k was shown for Quikr<ref type="bibr" target="#b20">Koslicki et al. (2013)</ref>and we believe that the same trend will also hold for SEK. For SEK, the increase in k results in exponential increase in row dimension of X matrix and hence the complexity and memory requirement also increase exponentially. There is no standard approach to fix k, except a brute force search. Let us now consider choice of L w and L p. Our experimental results bring the following heuristic: choose L w to match the read length of sample data. On the other hand, choose L p as small as possible to accommodate a high variability of k-mers information in X matrix. A reduction in L p results to a linear increase in column dimension of X. Overall users should choose k, L w and L p such that the dimension of X remains reasonable without considerable loss in estimation performance. Finally, we consider and I parameters in Algorithm 1 that enforce sparsity, with the aspect that computational complexity is OÃ°4 k I 3 Ãž. In general, there is no standard automatic approach to choose these two parameters, even for any standard algorithm. For example, the unconstrained Lagrangian form of LASSO mentioned in section 2.4 also needs to set the parameter by user. For Algorithm 1, 0551 should be chosen as a small positive number and I can be chosen as a fraction of row dimension of X that is 4 k , of course with the requirement that I is a positive integer. Let us choose I=b Ã‚ 4 k c where 05 1. In case of a lower k, the system is more under-determined and naturally the enforcement of sparsity needs to be slackened to achieve a reasonable estimation performance. Hence for a lower k, we need to choose a higher that can provide a good trade-off between complexity and estimation performance. But, for a higher k, the system is less under-determined, and to keep the complexity reasonable, we should choose a lower. For mock communities date, we used k = 4 and I = 100, and hence = 100 4 4 % 0:4, and for simulated data, we used k = 6 and I = 409, and hence = 409 4 6 % 0:1. Further, it is interesting to ask what are the types of errors most common in SEK reconstruction. In general, SEK reconstructs the most abundant taxa with remarkable fidelity. The less abundant taxa are typically more difficult to reconstruct and at times each behavior can be observed: low frequency taxa missing, miss-assigned or their abundances miss-estimated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION AND CONCLUSION</head><p>In this article, we have shown that bacterial compositions of metagenomic samples can be determined quickly and accurately from what initially appears to be incomplete data. Our method SEK uses only k-mer statistics of fixed length (here k $ 4,6) of reads from high-throughput sequencing data from the bacterial 16S rRNA genes to find which set of tens of bacteria are present out of a library of hundreds of species. For a reasonable size of reference training data, the computational cost is dominated by the pre-computing of the k-mer statistics in the data and in the library; the computational cost of the central inference module is negligible, and can be performed in seconds/minutes on a standard laptop computer. Our approach belongs to the general family of sparse signal processing where data sparsity is exploited to solve underdetermined systems. In metagenomics, sparsity is present on several levels. We have used the fact that k-mer statistics computed in windows of intermediate size vary substantially along the 16S rRNA sequences. The number of variables representing the amount of reads assumed to be present in the data from each genome and from each window is thus far greater than the number of observations, which are the k-mer statistics of all the reads in the data taken together. More generally, although many bacterial communities are rich and diverse, the number of species present in, for example, the gut of one patient, will almost always be only a small fraction of the number of species present at the same position across a population, which in turn will only be a small fraction of all known bacteria for which the genomic sequences are available. We therefore believe that sparsity is a<ref type="figure">Fig. 5</ref>. For simulated data: comparison of SEK (OMP +;1 sek ) with Quikr on the second set of simulated data. (a) VD error averaged over all 486 simulated datasets versus taxonomic rank for SEK and Quikr trained using D small. (b) Algorithm execution time for SEK and Quikr trained using D small. Whiskers denote range of the data, vertical black bars designate the median and the boxes demarcate quantiles rather common feature of metagenomic data analysis that could have many applications beyond the ones pursued here. The major technical problem solved in the present article stems from the fact that the columns of the system matrix X linking feature vectors are highly correlated. This effect arises both from the construction of the feature vectors, i.e. that the windows are overlapping, and from biological similarity of DNA sequences along the 16S rRNA genes across a set of species. An additional technical complication is that the variables (species abundances) are non-negative numbers and naturally normalized to unity, although in most methods of sparse signal processing there are no such constraints. We were able to overcome these problems by constructing a new greedy algorithm based on OMP modified to handle the positivity constraint. The new algorithm, dubbed OMP +;1 sek , integrates ideas borrowed from kernel density estimators, mixture density models and sparsity-exploiting algebraic solutions. During the article preparation, we became aware that a similar methodology (Quikr) has been developed by<ref type="bibr" target="#b20">Koslicki et al. (2013)</ref>. Although there is a considerable similarity between Quikr and SEK, we note that Quikr is based only on sparsityexploiting algebraic solutions, while SEK further exploits the additional sparsity assumption of non-uniform amplifications of variable regions in 16S rRNA sequences. We hypothesize that the improvement of SEK over Quikr is mainly because of the superior training method of SEK. The comparison between the two methods reported above in Figures 2, 4 and 5 shows that SEK performs generally better than Quikr. The development of two new methodologies independently and roughly simultaneously reflects the timeliness and general interest of sparse processing techniques for bioinformatics applications.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>nth k-mers feature vector in the full set of training feature vectors X.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>see Experiment 2 of (Cheng et al., 2012)]. 2.7.1 Test dataset (Reads) Our basic test dataset used under a variety of different in silico experimental conditions is the one used in Experiment 2 of BeBAC (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><figDesc>sek was able to process successfully. At L p = 15 bp, the P +;1 sek provided a performance of VD = 0.033260, while the execution time was 25.25 s. The OMP +;1 sek took 1.86 s and provided VD = 0.03355l, indicating almost no performance loss compared with the optimal P +;1 sek. A shift L p 425 did result in a performance drop, for example, L p = 30, 50, 100 resulted in VD values 0.0527, 0.0879</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><figDesc>Sections 3.3.2 and 3.3.3 below, but generally decreasing L p and L w results in lower reconstruction error at the expense of increased execution time</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.2.</head><figDesc>Fig. 2. For mock communities data: performance of OMP +;1 sek using reference training database D mock known. Community composition problem is addressed at the species level. The OMP +;1 sek performance is shown against the ground truth and performances of BeBAC, Quikr and Taxy. The OMP +;1 sek provides better match to the ground truth than the competing faster methods Quikr and Taxy. The corresponding VD performances of BeBAC, OMP +;1 sek , Taxy and Quikr are 0.0038, 0.0305, 0.2817 and 0.4044, respectively</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.4.</head><figDesc>Fig. 4. For simulated data: comparison of SEK (OMP +;1 sek ) with Quikr and RDP's NBC on the first set of simulated data. Throughout, RDP's NBC version 10.28 with training set 7 was used. (a) VD error averaged over all 216 simulated datasets versus taxonomic rank for RDP's NBC, with SEK and Quikr trained using D large. (b) Algorithm execution time for RDP's NBC, with SEK and Quikr trained using D large. Whiskers denote range of the data, vertical black bars designate the median and the boxes demarcate quantiles</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>generation X matrix k-mers generation Î¼ Finding Î³ using P +1 sek or OMP +1 sek Window length L w Window shift L p k of k-mers</figDesc><table>creation 

Sample mean 
computation 

User choice: 

Reads 

Onâˆ’line computation 

Reference 
(training sequences) 

Offâˆ’line computation 

(test sequences) 

Composition proportion 

Computing composition 

k-mers 
</table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">S.Chatterjee et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">P +;1 sek : ^ = arg min  k Ã€ Xk 2 ; ! 0; jjjj 1 =1 Ã°5Ãž where &apos;+&apos; and &apos;1&apos; notations in P +;1 sek refer to the constraints ^ 2 R N + and jj ^ jj 1 =1, respectively. The problem P +;1 sek is a constrained least squares problem and a quadratic program (QP) solvable by convex optimization tools, such as cvx (CVX). In our assumption 4 k 5N, and hence the required computation complexity is OÃ°N 3 Ãž (Boyd and Vandenberghe, 2004). The form of P +;1 sek bears resembance to the widely used LASSO method from general sparse signal processing, mainly used for solving underdetermined problems in compressive sensing (Candes and Wakin, 2008; Chatterjee et al., 2012). LASSO deals with the following optimization problem [see (1.5) of (Effron et al., 2004)]: LASSO : ^ lasso = arg min  k Ã€ Xk 2 ; jjjj 1 where 2 R + is a user choice that decides the level of sparsity in ^ lasso ; for example, = 1 will lead to a certain level of sparsity. A decreasing leads to an increasing level of sparsity in LASSO solution. LASSO is often presented in an unconstrained Lagrangian form that minimizes fk Ã€ Xk 2 2 +jjjj 1 g, where decides the level of sparsity. P +;1 sek is not theoretically bound to provide a sparse solution with a similar level of sparsity achieved by LASSO when a small 51 is used. For the community composition estimation problem, the auxiliary variable defined in (2) is inherently sparse. Two particularly natural motivations concerning the sparsity can be brought forward. Firstly, consider the conditional densities for taxonomic units as shown in (1). Regarding the conditional density model for a single unit, a natural hypothesis for the generating model is that the conditional densities for several other units will induce only few feature vectors, and hence ml will be negligible or effectively zero for certain patterns in the feature space, leading to sparsity in the auxiliary variable (unstructured sparsity in ). Secondly, in most samples only a small fraction of the possible taxonomic units is expected to be present, and consequently, many pÃ°C m Ãž will turn out to be zero, which again corresponds to sparsity in (structured block-wise sparsity in ) (Stojnic, 2010). In practice, for a highly under-determined system (3) in the community composition estimation problem with the fact that is inherently sparse, the solution of P +;1 sek turns out to be effectively sparse because of the constraint jjj 1 =1. 2.5 A greedy estimation algorithm For SEK we solve P +;1 sek using convex optimization tools requiring computational complexity OÃ°N 3 Ãž. To reduce the complexity without a significant loss in estimation performance we also develop a new greedy algorithm based on orthogonal matching pursuit (OMP) (Tropp and Gilbert, 2007); for a short discussion of OMP with pseudo-code, see also (Chatterjee et al., 2012). In the recent literature, several algorithms have been designed by extending OMP, such as, for example, the backtracking-based OMP (Huang and Makur, 2011), and, by a subset of the current authors, the look-ahead OMP (Chatterjee et al., 2011). Because the standard OMP uses a least-squares approach and does not provide solutions satisfying constraints in (4), it is necessary to design a new greedy algorithm for the problem addressed here.</note>

			<note place="foot">SEK at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">by the Academy of Finland through its Finland Distinguished Professor program grant project 129024/Aurell (to E.A.), ERC grant 239784 (to J.C.) and the Academy of</title>
	</analytic>
	<monogr>
		<title level="m">Funding: Erasmus Mundus scholar program of the European Union) and by the Ohio Supercomputer Center and the Mathematical Biosciences Institute at The Ohio State University</title>
		<editor>to E.A. and J.C.), by the Swedish Research Council Linnaeus Centre ACCESS (to E.A., M.S., L.R., S.C. and M.V</editor>
		<imprint/>
	</monogr>
	<note>to. D.K.</note>
</biblStruct>

<biblStruct   xml:id="b1">
	<monogr>
		<title level="m" type="main">Conflict of interest: none declared</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">REFERENCES</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">High-resolution microbial community reconstruction by integrating short reads from multiple 16S rRNA regions</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Amir</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page">205</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Bacterial community reconstruction using compressed sensing</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Amir</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Zuk</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1723" to="1741" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Grinder: a versatile amplicon and shotgun sequence simulator</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<forename type="middle">E</forename>
				<surname>Angly</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page">94</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Characteristics of 454 pyrosequencing dataâ€“enabling realistic simulation with flowsim</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Balzer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="420" to="425" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<monogr>
		<title level="m" type="main">Pattern Recognition and Machine Learning</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">M</forename>
				<surname>Bishop</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title level="m" type="main">Convex Optimization</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Boyd</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Vandenberghe</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Esprit-tree: hierarchical clustering analysis of millions of 16s rRNA pyrosequences in quasilinear computational time</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Cai</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Sun</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page">95</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">An introduction to compressive sampling</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">J</forename>
				<surname>Candes</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">B</forename>
				<surname>Wakin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Proc. Mag</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="21" to="30" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Look ahead orthogonal matching pursuit</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Chatterjee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2011 IEEE International Conference</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="4024" to="4027" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Projection-based and look-ahead strategies for atom selection</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Chatterjee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans.Signal Process</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="634" to="647" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Bayesian estimation of bacterial community composition from 454 sequencing data</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Cheng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="5240" to="5249" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<monogr>
		<title level="m" type="main">A system for disciplined convex programming</title>
		<author>
			<persName>
				<forename type="first">Cvx</forename>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Search and clustering orders of magnitude faster than blast</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">C</forename>
				<surname>Edgar</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="2460" to="2461" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Least angle regression</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Effron</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Statist</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="407" to="499" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Chimeric 16s rRNA sequence formation and detection in sanger and 454-pyrosequenced pcr amplicons</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">J</forename>
				<surname>Haas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="494" to="504" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Backtracking-based matching pursuit method for sparse signal reconstruction</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Huang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Makur</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Process. Lett</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="391" to="394" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Megan analysis of metagenomic data</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">H</forename>
				<surname>Huson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="377" to="386" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Quikr: a method for rapid reconstruction of bacterial communities via compressive sensing</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Koslicki</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="2096" to="2102" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Mixture models for analysis of the taxonomic composition of metagenomes</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Meinicke</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="1618" to="1624" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Analysis of 16s rRNA environmental sequences using megan</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Mitra</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Genomics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">17</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Suppl. . 3</note>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Species identification and profiling of complex microbial communities using shotgun illumina sequencing of 16s rRNA amplicon sequences</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">H</forename>
				<surname>Ong</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">60811</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">1-optimization in block-sparse compressed sensing and its strong thresholds</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Stojnic</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Sel. Top. Signal Process</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="350" to="357" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Signal recovery from random measurements via orthogonal matching pursuit</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">A</forename>
				<surname>Tropp</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">C</forename>
				<surname>Gilbert</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inf. Theory</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="4655" to="4666" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Quantitative phylogenetic assessment of microbial communities in diverse environments</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Von Mering</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">315</biblScope>
			<biblScope unit="page" from="1126" to="1130" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Naâ‚¬ Ä±ve bayesian classifier for rapid assignment of rrna sequences into the new bacterial taxonomy</title>
		<author>
			<persName>
				<forename type="first">Q</forename>
				<surname>Wang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Environ. Microbiol</title>
		<imprint>
			<biblScope unit="volume">73</biblScope>
			<biblScope unit="page" from="5261" to="5267" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Metagenomics: read length matters</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">E</forename>
				<surname>Wommack</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl Environ Microbiol</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="1453" to="1463" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<monogr>
		<title level="m" type="main">Accurate Profiling of Microbial Communities From Massively Parallel Sequencing Using Convex Optimization</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Zuk</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2012" />
			<publisher>Springer</publisher>
			<pubPlace>Cham, Switzerland</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>