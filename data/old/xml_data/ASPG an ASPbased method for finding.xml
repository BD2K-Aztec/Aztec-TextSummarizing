
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:36+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ASP-G: an ASP-based method for finding attractors in genetic regulatory networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2014">. 21 2014</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Mushthofa</forename>
								<surname>Mushthofa</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Applied Mathematics, Computer Science and Statistics</orgName>
								<orgName type="institution">Ghent University</orgName>
								<address>
									<addrLine>Krijgslaan 281 (S9)</addrLine>
									<postCode>9000</postCode>
									<settlement>Ghent</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Gustavo</forename>
								<surname>Torres</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Applied Mathematics, Computer Science and Statistics</orgName>
								<orgName type="institution">Ghent University</orgName>
								<address>
									<addrLine>Krijgslaan 281 (S9)</addrLine>
									<postCode>9000</postCode>
									<settlement>Ghent</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Yves</forename>
								<surname>Van De Peer</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Plant Systems Biology</orgName>
								<address>
									<addrLine>VIB Technologiepark 927</addrLine>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Plant Biotechnology and Bioinformatics</orgName>
								<orgName type="institution">Ghent University</orgName>
								<address>
									<addrLine>Technologiepark 927</addrLine>
									<postCode>9052</postCode>
									<settlement>Ghent</settlement>
									<country key="BE">Belgium</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution" key="instit1">Genomics Research Institute (GRI)</orgName>
								<orgName type="institution" key="instit2">University of Pretoria</orgName>
								<address>
									<addrLine>Private bag X20, South Africa</addrLine>
									<postCode>0028</postCode>
									<settlement>Pretoria</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Kathleen</forename>
								<surname>Marchal</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Department of Plant Biotechnology and Bioinformatics</orgName>
								<orgName type="institution">Ghent University</orgName>
								<address>
									<addrLine>Technologiepark 927</addrLine>
									<postCode>9052</postCode>
									<settlement>Ghent</settlement>
									<country key="BE">Belgium</country>
								</address>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="department">Department of Microbial and Molecular Systems</orgName>
								<orgName type="institution">KU Leuven</orgName>
								<address>
									<addrLine>Arenberg 20</addrLine>
									<postCode>3001</postCode>
									<settlement>Kasteelpark, Leuven</settlement>
									<country key="BE">Belgium</country>
								</address>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="department" key="dep1">Department of Information Technology</orgName>
								<orgName type="department" key="dep2">IMinds</orgName>
								<orgName type="institution">Ghent University</orgName>
								<address>
									<addrLine>Gaston Crommenlaan 8</addrLine>
									<postCode>B-9050</postCode>
									<settlement>Ghent</settlement>
									<country key="BE">Belgium</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Martine</forename>
								<surname>De Cock</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Applied Mathematics, Computer Science and Statistics</orgName>
								<orgName type="institution">Ghent University</orgName>
								<address>
									<addrLine>Krijgslaan 281 (S9)</addrLine>
									<postCode>9000</postCode>
									<settlement>Ghent</settlement>
								</address>
							</affiliation>
							<affiliation key="aff6">
								<orgName type="department" key="dep1">Center for Web and Data Science</orgName>
								<orgName type="department" key="dep2">Institute of Technology</orgName>
								<orgName type="institution">University of Washington Tacoma</orgName>
								<address>
									<addrLine>1900 Commerce Street</addrLine>
									<postCode>98402</postCode>
									<settlement>Tacoma</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Alfonso</forename>
								<surname>Valencia</surname>
							</persName>
						</author>
						<title level="a" type="main">ASP-G: an ASP-based method for finding attractors in genetic regulatory networks</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">30</biblScope>
							<biblScope unit="page" from="3086" to="3092"/>
							<date type="published" when="2014">. 21 2014</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btu481</idno>
					<note type="submission">Systems biology Advance Access publication July 15, 2014 Received on September 1, 2013; revised on June 4, 2014; accepted on July 8, 2014</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Contact: Kathleen.Marchal@UGent.be or Martine.DeCock@UGent.be Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Boolean network models are suitable to simulate GRNs in the absence of detailed kinetic information. However, reducing the biological reality implies making assumptions on how genes interact (interaction rules) and how their state is updated during the simulation (update scheme). The exact choice of the assumptions largely determines the outcome of the simulations. In most cases, however, the biologically correct assumptions are unknown. An ideal simulation thus implies testing different rules and schemes to determine those that best capture an observed biological phenomenon. This is not trivial because most current methods to simulate Boolean network models of GRNs and to compute their attractors impose specific assumptions that cannot be easily altered, as they are built into the system. Results: To allow for a more flexible simulation framework, we developed ASP-G. We show the correctness of ASP-G in simulating Boolean network models and obtaining attractors under different assumptions by successfully recapitulating the detection of attractors of previously published studies. We also provide an example of how performing simulation of network models under different settings help determine the assumptions under which a certain conclusion holds. The main added value of ASP-G is in its modularity and declarativity, making it more flexible and less error-prone than traditional approaches. The declarative nature of ASP-G comes at the expense of being slower than the more dedicated systems but still achieves a good efficiency with respect to computational time. Availability and implementation: The source code of ASP-G is available at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Gene Regulatory Networks (GRNs) consist of genes, proteins and other regulatory molecules that undergo complex and dynamic interactions, which drive gene expression, and ultimately, complex cellular behavior. To be able to understand and predict this behavior, various mathematical models have been developed that describe the dynamics of these GRNs. Different model formalisms have been used, as reviewed in De Jong (2002). One of the earliest models to describe GRNs are Boolean network models (<ref type="bibr" target="#b23">Kauffman 1993</ref>). Boolean network models are attractive because of their simplicity (<ref type="bibr" target="#b35">Shmulevich et al., 2002</ref>): by reducing the complexity of GRNs to qualitative logical models, Boolean network models are able to cope with the largely incomplete kinetic information of biological networks. Despite their highly simplified representation of biological reality, Boolean network models were shown to still grasp the important dynamic properties of GRNs, such as the networks' attractors. An attractor represents a stable set of states toward which the transiently changing gene expression values converge to. Evolving toward an attractor thus corresponds to reaching a specific developmental stage (cell types, development stages of cells, etc.) or functional mode (De<ref type="bibr" target="#b7">Jong and Page, 2008;</ref><ref type="bibr" target="#b23">Kauffman, 1993</ref>), and the analysis of attractors in a regulatory network thus hints toward the functional modes of the regulatory network (De<ref type="bibr" target="#b7">Jong and Page, 2008</ref>). Current knowledge regarding GRNs is generally incomplete (<ref type="bibr" target="#b32">Rottger et al., 2012</ref>). Comparing simulated with observed attractors (states, e.g. developmental stages) of a certain network model can thus aid in evaluating existing network models and/or predict missing information in the current knowledge. For instance, Mendoza and Alvarez<ref type="bibr" target="#b28">Buylla (1998);</ref><ref type="bibr" target="#b29">Mendoza et al. (1999)</ref>and more recently, Espinosa<ref type="bibr" target="#b11">Soto et al. (2004) and</ref><ref type="bibr" target="#b34">Sanchez-Corrales et al. (2010)</ref>studied flower development in Arabidopsis thaliana using Boolean network models of which the network attractors corresponded to stable gene expression levels during the different stages of flower development. These models helped predicting mutant phenotypes and the existence of a yet uncharacterized gene involved in the transition from the *To whom correspondence should be addressed. non-flowering to the flowering state. Davidich and<ref type="bibr" target="#b5">Bornholdt (2008) and</ref><ref type="bibr" target="#b26">Li et al. (2004)</ref>used a Boolean network model and its steady states to describe the different stages in yeast cell cycle, where the stages of the cycle correspond to the strong attractors of the network.<ref type="bibr" target="#b24">Kaufman et al. (1985)</ref>is the choice of the proper assumptions. These assumptions refer to the activation rules and update scheme. Activation rules determine the way the activation state of each gene depends on the activation states of its interactors in the previous transition step. The update scheme determines how these activation states are updated, i.e. either synchronously or asynchronously. The exact choice of these assumptions largely determines the number and characteristics of the attractors. As in most cases, the true biological activation rules and update scheme are not known, one should be able to easily test different activation rules and schemes, as this allows to have an idea on the conditions under which the simulated network model would be able to capture an observed biological phenomenon (boundary conditions). Several computational tools have been developed to perform the computation of attractors in Boolean network models.<ref type="bibr" target="#b12">Garg et al. (2007)</ref>developed genYsis, which uses techniques involving binary decision diagrams (BDD) to compute attractors.<ref type="bibr" target="#b1">Arellano et al. (2011)</ref>used techniques based on Temporal Logic model checking in Antelope.<ref type="bibr" target="#b2">Ay et al. (2009)</ref>used state space pruning and randomized state space traversal methods to improve the scalability of the attractor computation. Dubrova and<ref type="bibr" target="#b8">Teslenko (2011)</ref>used a Boolean Satisfiability (SAT) solver, typically used for combinatorial modeling and problem solving, to compute attractors of GRNs and obtained a better computational time and space efficiency compared with the BDD-based approach. More recently,<ref type="bibr" target="#b38">Zheng et al. (2013)</ref>developed geneFatt based on the reduced-order BDD (ROBDD) data structure, which further improves the efficiency of the attractor computation. Most of the aforementioned systems to simulate Boolean network models in principle can perform simulations with different assumptions. However, changing these assumptions would require tedious modifications on these systems. For instance, using the SAT approach (<ref type="bibr" target="#b8">Dubrova and Teslenko, 2011</ref>), modifying the structure of the network and the updating rules would require updating the truth tables in the cnet format. To allow for a more flexible simulation framework, we developed ASP-G, which makes use of the declarative programming paradigm Answer Set Programming (ASP;<ref type="bibr" target="#b27">Lifschitz, 2008</ref>). The declarative nature of ASP allows one to specify and modify the domain-specific logic (here the definition of the network interactions, activation rules and update schemes) required to represent and solve the computational problem at hand (here dynamical modeling and attractor calculation) in an intuitive and modular way (<ref type="bibr" target="#b10">Eiter et al., 2009</ref>). To illustrate the flexibility of our approach, we applied it to calculate attractors of previously published Boolean network models of GRNs of different sizes and complexity, and different simulation assumptions. By trying to mimic previous results under diverse settings, we can show that the main advantage of our approach consists of making the modeling more flexible and less error-prone, and therefore helps delineate the boundary conditions under which the biological conclusions based on simulations of Boolean network models are valid. At the same time, we also show that, with the use of fast and efficient ASP solvers, the computational efficiency of our method is in the same range as that of the most efficient dedicated methods for the simulation of Boolean network models and the calculation of their attractors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS AND MODELS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Boolean network modeling of GRNs</head><p>In our work, we adopt the definition of Boolean networks as described in Kauffman (1993): a Boolean network model consists of network elements (nodes, here representing structural and regulatory genes/proteins), which can either be active (ON) or inactive (OFF), and interactions between these elements (edges, which represent the directed regulatory interactions between the genes). We define two types of regulatory interactions between interacting nodes, i.e. activation (upregulation) and inhibition (downregulation). The activation state of a certain node at a certain time step is determined by a logical function of the activation states at the previous time step of its interactors (where the interactors of a node are defined as the incoming edges of a certain network node).DEFINITION 1. Let S be a set of states of a Boolean network model. S is an attractor if and only if the following conditions are satisfied:</p><p>(1) The set of the successor states of all the states in S is equal to S.</p><p>(2) For each s i 2 S, once it is visited, the probability of revisiting s i in a finite number of state transitions is equal to 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Representing Boolean network models of GRNs and computing their attractors using ASP ASP-G framework</head><p>Our framework for modeling GRNs and computing attractors, called ASP-G, uses ASP. ASP is a declarative programming paradigm (<ref type="bibr" target="#b27">Lifschitz, 2008</ref>), which is typically used to solve combinatorial search problems (<ref type="bibr" target="#b10">Eiter et al., 2009</ref>). The architecture of ASP-G is shown in<ref type="figure" target="#fig_4">Figure 2</ref>. ASP-G consists of four main modules/parts of the system: the network description, the update scheme, the activation rules and theThis module determines the activation rules used to update the activation state of each gene at each transition step, based on the intended assumption by the user. We implemented two frequently used activation rules:</p><p>(1) A gene will be active in a subsequent time step t + 1 if at time step t at least one active interactor is an activator and no active interactors that act as inhibitors are present.</p><p>(2) A gene will be active in a subsequent time step t + 1 if there are more active activators than active inhibitors among its interactors at time step t.</p><p>In ASP-G this first type of activation rule is encoded as follows:The second type of activation rule is encoded as follows:To illustrate the flexibility of ASP to express nearly any possible activation rule, we implemented more specific type of rules in which the activation of a certain gene is expressed as a free-form gene-specific Boolean function of all the interactors of that gene, such as the one used in<ref type="bibr" target="#b20">Gonz alez et al. (2008) and</ref><ref type="bibr" target="#b34">Sanchez-Corrales et al. (2010)</ref>. For example, the activation rule of a gene G1 might be expressed as a Boolean function of the form: G1=G1 and ðnot G2 or not G3Þ where G2 and G3 are two other genes involved in the network. In this case, G1 has a self-activating interaction, while G2 and G3 act as inhibitors for G1. To accommodate such an activation rule in ASP-G, we first convert the Boolean function into a disjunctive normal form. For example, the activation rule given above is rewritten into the following: G1=G1 and not G2 G1=G1 and not G3 and then encoded in ASP as follows: activeðG1; TÞ T40; activeðG1; T À 1Þ; inhibitedðG2; T À 1Þ activeðG1; TÞ T40; activeðG1; T À 1Þ; inhibitedðG3; T À 1Þ Update scheme Two update schemes were adopted in ASP-G: synchronous and asynchronous updates. In the synchronous update scheme, we assume that all genes in the network are updated simultaneously per evaluated time step. This implies that the transitions between the network states are deterministic, i.e. for every state visited over time, only one possible successor state exists. In the asynchronous update, no assumptions of synchronicityare made, and genes may be updated at different time steps. Therefore, transitions are non-deterministic: there may be several possible next states after a certain transition. As illustrated in the Supplementary Figures S1 and S2, an asynchronous update scheme can result in a drastically different STG and can lead to different attractors. Both the synchronous and the asynchronous updating were implemented in ASP-G. For the synchronous update scheme, we use the following rules to generate initial activation states of the genes: activeðX; 0Þ geneðXÞ; not inhibitedðX; 0Þ: inhibitedðX; 0Þ geneðXÞ; not activeðX; 0Þ:</p><p>We then use the following rules (in relation with the activation rules described previously) to determine the activation state of each gene at each time step t: activeðX; tÞ activeðX; t À 1Þ; not inhibitedðX; tÞ: inhibitedðX; tÞ inhibitedðX; t À 1Þ; not activeðX; tÞ:</p><p>For the asynchronous update scheme, we need to add the following rules, in addition to the previously described rules:To obtain a better performance in the asynchronous case, we apply the STG reduction technique, as explained in the Supplementary<ref type="figure" target="#fig_4">Figure S2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Computing the attractors</head><p>The attractor computation in ASP-G is performed by Algorithm 1, which is based on the algorithm by Dubrova and Teslenko (2011). The main idea used in Algorithm 1 is to identify attractors by looking at identical states in transition paths of certain lengths in the STG of the network. Because there are exponentially many possible states in an STG (in relation to the number of nodes in the network), explicit enumeration of all the states in an STG is unfeasible for larger networks. ASP-G avoids this explicit enumeration by implicitly simulating the dynamics of the network. Furthermore, once a state is identified as part of an attractor, it can be removed from the STG to prune the search space. An illustration on how the algorithm works is given in Supplementary<ref type="figure">Figure S4</ref>. Path generation and state removal are being done using ASP rules and ASP constraints, respectively, as shown in Supplementary<ref type="figure">Figure S5</ref>. To further increase the efficiency of the computation, we use the incremental ASP approach described in<ref type="bibr" target="#b14">Gebser et al. (2008)</ref>and the clasp solver from the Potassco ASP suite (<ref type="bibr" target="#b19">Gebser et al., 2011b</ref>). Algorithm 1 Algorithm to compute attractors in ASP-G 1: {P is the ASP program with the rules of the network} 2: k = n 3: attractor_is_found = False 4: attractors= 5: while ASP finds a path of length k as an answer set in P do 6: {s=hs 1 ; s 2 ;. .. ; s k i is the path found} 7: for j=k À 1 to 1 do 8: if s j = s k then 9: attractors=attractors<ref type="bibr">[</ref><ref type="figure" target="#fig_5">Figure 1</ref>, the choices of activation rules and update scheme can result in a different network behavior and thus different sets of attractors. As it is often not known in advance which assumptions best match the biological reality of the modeled GRN, testing different assumptions is advisable. To have a generic framework that allows testing different assumptions, ASP-G implements three different activation rules: the first one adopted by<ref type="bibr" target="#b2">Ay et al. (2009)</ref>; Davidich and Bornholdt (2008) and<ref type="bibr" target="#b26">Li et al. (2004)</ref>in which a gene is considered to be activated if the majority of its active incoming interactors (interactors that are themselves active) have an activating role. Otherwise, the gene will become inactive. This is referred to as the r Ã rule in ASP-G. A second one adopted by<ref type="bibr" target="#b12">Garg et al. (2007) and</ref><ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>assumes that a gene is activated only when there is at least one active activator among its active incoming interactors and no inhibitor. This is referred to as the r + rule in ASP-G. In addition, we implemented a third more detailed activation rule in which the activation for each gene is expressed as a free-form Boolean function of its activators and inhibitors. These types of rules better grasp the complexity of true biological interactions and include more detailed information on the specifics of the interactions. It was used, for instance, in<ref type="bibr" target="#b0">Albert and Othmer (2003)</ref>;<ref type="bibr" target="#b20">Gonz alez et al. (2008) and</ref><ref type="bibr" target="#b34">Sanchez-Corrales et al. (2010)</ref>. Related to the update scheme, a choice has to be made between updating the network elements simultaneously (synchronously) versus at different points (asynchronously). Earlier work by<ref type="bibr" target="#b23">Kauffman (1993) and</ref><ref type="bibr" target="#b36">Thomas (1973)</ref>assumed synchronicity in their modeling, mainly because of computational efficiency reasons. However, the assumption of synchronicity was challenged in<ref type="bibr" target="#b21">Harvey and</ref><ref type="bibr" target="#b21">Bossomaier (1997) and</ref><ref type="bibr" target="#b37">Thomas (1991)</ref>, who argued that, for many biological systems, assuming an asynchronous update scheme is more realistic. Subsequent work on Boolean network models (<ref type="bibr" target="#b2">Ay et al., 2009;</ref><ref type="bibr" target="#b12">Garg et al., 2007</ref><ref type="bibr" target="#b13">Garg et al., , 2008</ref><ref type="bibr" target="#b20">Gonz alez et al., 2008 and</ref><ref type="bibr" target="#b30">Naldi et al., 2007</ref>) mainly applied asynchronous update schemes. Therefore, in ASP-G we implemented both the synchronous and the asynchronous update scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Simulation results</head><p>To test the correctness of ASP-G in simulating Boolean network models and computing attractors, we applied ASP-G on previously published Boolean network models of GRNs and compared the obtained attractors with the originally published ones. Like any other formalism to find attractors in Boolean network models, ASP-G detects exhaustively all attractors of the network. Therefore, a correct result corresponds to an exact match in the attractor set identified by ASP-G and that present in the reference publications. First, we tested ASP-G on the relatively small GRNs involved in budding and fission yeast cell cycle analyzed in<ref type="bibr" target="#b2">Ay et al. (2009)</ref>; Davidich and Bornholdt (2008) and<ref type="bibr" target="#b26">Li et al. (2004)</ref>, as well as on the network model of the GRN from the T-helper (Th) cell differentiation described in<ref type="bibr" target="#b12">Garg et al. (2007)</ref>. We used the activation rules and update schemes that were also applied in the original studies, except for the dataset of<ref type="bibr" target="#b12">Garg et al. (2007)</ref>, in which we applied also the synchronous update scheme in addition to the originally applied asynchronous one (<ref type="figure" target="#tab_1">Table 1</ref>). As expected for each of these results, the attractors found by ASP-G match exactly the ones found by the reference papers (data not shown). The table also shows that ASP-G performs relatively fast for these small networks. We also observe that the attractors in the synchronous case often coincide with those in the asynchronous case. This is because of the fact that simple attractors (i.e. attractors that have only one state) are more commonly found, and that they are shared between synchronous and asynchronous update schemes. Only for the fission yeast cell network under the r* activation rules there is a difference in the number of synchronous attractors (13) and asynchronous attractors (15). The fact that there are more attractors in the asynchronous case might seem counter-intuitive, as the reduced STG used to calculate these attractors contains at most as many nodes as the synchronous STG, and often less. However, the original STG for the asynchronous case typically contains more edges than in the synchronous case, and these additional edges can account for more attractors.. The purpose of the study was to find evidence supporting (or contradicting) the traditional view that the genes involved in the regulation of the two types of Th cells, Th1 and Th2, have counter-regulatory interaction. Similar to what has been done in<ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>, we first computed the attractors of the original network in the presence of all genes and then searched for attractors in different single-gene knockout networks in silico to test the effect of knocking out intracellular genes toward the attractors of the network. To show the added value of using different simulation assumptions, we also performed the computations using an asynchronous update mechanism, as opposed to only synchronous update scheme, as performed by<ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>. The results are presented in the Supplementary<ref type="figure">Table S6</ref>. In terms of computational efficiency, the result shows that ASP-G is able to perform relatively well for the moderately sized Th cell network. For the asynchronous case, attractor computation required 0.6 s on average. For the synchronous case where more attractors were found, the computation times took 71.9 s on average. When applying the synchronous update scheme as used in<ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>, ASP-G reproduced the four attractors: Th0, Th1, Th2 and ThX, as in the original paper. However, when trying to reproduce the attractors in the gene knockout setting, we found discrepancies with the results reported by<ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>. These discrepancies were caused by mistakes in the SAT-based truth table used in the original publication. Supplementary<ref type="figure">Table S6</ref>shows the corrected results for completeness. Note that these mistakes do not affect the biological conclusions made in the original publication. However, it illustrates that specifying larger networks with rather complicated behavior becomes cumbersome and error-prone in paradigms like SAT, whereas this is much less the case for a declarative approach such as ASP-G.Note. Network: describes the original network model. Genes: number of genes present in the network; Attractors: number of detected attractors; Update mechanism: synchrounous versus asynchrounous updating was used as described in the methods section; Activation rules: r* activation rules indicates that a gene becomes active when it has more active activating interactors than active inhibiting ones, whereas the r + activation rules indicate that a gene becomes active if it has at least one active activating gene and no inhibiting ones. Time: running time on a Dell Latitude D820 notebook.</p><p>The existence of the ThX attractor and the observed pattern of gene activities in the attractors of the knockout networks caused the authors of<ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>to conclude that the active genes in Th1 and Th2 cells do not play counter-regulatory roles with each other, contrary to what is traditionally believed. However, when using the asynchronous update scheme, we noted that the attractor ThX is no longer obtained. A similar pattern occurs for the knockout networks, where the use of the asynchronous update scheme drastically changes the set of detected attractors compared with those detected using a synchronous update scheme: the number of attractors found with the asynchronous update scheme for the knockout networks ranges only between 2 and 5, whereas the number of attractors found in the synchronous case ranged between 286 and 1154. This finding suggests that the occurrence of the ThX attractor and the existence of a large number of attractors in the knockout networks as found in<ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>are only valid under the synchronous update scheme. It thus defines the boundary conditions under which the conclusions of<ref type="bibr" target="#b31">Pedicini et al. (2010)</ref>are valid and highlights the relevance of performing modeling under different scenarios, as offered by ASP-G, to put biological conclusions in perspective.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSION</head><p>In this article, we presented ASP-G, a modular system to simulate Boolean network models of GRNs and to subsequently compute their attractors. ASP-G is based on the declarative ASP programming paradigm, which has already been previously applied in the context of biological network data analysis and modeling (see, e.g.<ref type="bibr" target="#b4">Corblin et al., 2012;</ref><ref type="bibr" target="#b9">Dworschak et al., 2008;</ref><ref type="bibr" target="#b14">Gebser et al., 2008</ref><ref type="bibr" target="#b15">Gebser et al., , 2010a</ref><ref type="bibr">Gebser et al., and b, 2011</ref>). Recently,<ref type="bibr" target="#b22">Inoue (2011)</ref>showed in a theoretical comparison between Boolean networks and the underlying semantics of ASP, that a strong mathematical relation exists between the attractors/steady states of Boolean networks and the notion of stable models commonly used in ASP. We built on this earlier result in our proposed method, ASP-G. The main added value of ASP-G is in its declarativity and modularity: it allows users to easily test different update schemes and activation rules when simulating the dynamics of their Boolean network model by selecting and modifying the appropriate modules. In addition, the fact that ASP-G is based on a declarative language makes it less error-prone than other approaches such as SAT, which depend on the definition of difficult to interpret and tedious to construct truth tables. Using an underlying declarative programming paradigm also makes ASPG easily extendable to other parameter settings. Decoupling the problem definition from its solution thus allows for a greater flexibility compared with other ad hoc systems such as genYsis (<ref type="bibr" target="#b12">Garg et al., 2007</ref>) and geneFAtt (<ref type="bibr" target="#b38">Zheng et al., 2013</ref>), where assumptions such as update scheme and activation rules are already built into the system. We showed the correctness of ASP-G in simulating Boolean network models and obtaining attractors under different assumptions by successfully recapitulating the detection of attractors of previously published studies. Relying on a modular and flexible declarative programming paradigm definitely comes at the expense of being slower than the more dedicated systems to compute attractors, such as genYsis (<ref type="bibr" target="#b12">Garg et al., 2007</ref>) and geneFAtt (<ref type="bibr" target="#b38">Zheng et al., 2013</ref>). However, in terms of computational efficiency, ASP-G proved to be fast (for small networks, i.e. up to 23 genes, computations are below a second, for larger networks, i.e. up to 51 genes, the longest computation time took 54.5 min). Also, ongoing research in ASP solvers (<ref type="bibr" target="#b18">Gebser et al., 2011a</ref>) will make it possible for ASP to reach a point where it outperforms other logic paradigms. This is definitely the case when comparing ASP with Binary (or multiple) decision diagrams (<ref type="bibr" target="#b25">Lee, 1959</ref>) used to calculate attractors in Boolean Networks models for GRNs (<ref type="bibr" target="#b1">Arellano et al., 2011;</ref><ref type="bibr" target="#b30">Naldi et al., 2007</ref>) as they suffer from memory explosion when the size of the network starts to become large (<ref type="bibr" target="#b3">Clarke et al., 2001</ref>). For larger-sized networks, any exhaustive method will face a challenge, as the state space of the network increases exponentially with respect to the number of nodes in the network. When dealing with such larger networks, methods that avoid an exhaustive search as in<ref type="bibr" target="#b2">Ay et al. (2009)</ref>might become more suitable under these conditions. Conclusively, ASP-G is tailored to simulate Boolean network models of GRNs and to compute attractors in a diagnostic mode, where one wants to test different update schemes and activation rules to find the setting that best matches experimental data or to correctly delineate the boundary conditions under which the biological conclusions based on these simulations are valid.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>A</head><figDesc>Formally, a Boolean network model G(V, F) is defined by a set of nodes V=fx 1 ;. .. ; x n g and a list of Boolean functions F=ðf 1 ;. .. ; f n Þ. Each x i 2 f0; 1g; i=1;. .. ; n is a binary variable and its value at time t + 1 can be determined by the values of some other nodes x j1ðiÞ ; x j2ðiÞ ;. .. ; x jk i ðiÞ at time t by means of a Boolean function f i 2 F. That is, there are k i nodes assigned to x i that determine its state. The activation state of every node x i changes over time according tostate s of a Boolean network is an assignment of f0; 1g to each node x i. Its successor state is the state resulting of applying f i to each node x i. The dynamics of the network consists of transitions between network states. An example of a Boolean network is given in Figure 1. This network has three nodes, denoted by x 1 , x 2 and x 3 , and interactions between these nodes, represented by the edges. The dynamics of the network can be described using a state-transition graph (STG) as given in the Supplementary Figure S1. Attractors in a Boolean network model are defined as in Ay et al. (2009) and Garg et al. (2007).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>Each gene in the network is written with its label, e.g. .n 1 for node x 1 , followed by the number of regulators and then their labels, e.g. (3 1 2 3). Next, a truth table follows that determines the behavior of the network (e.g.-1 0 in the truth table for x 1 means that whenever x 3 is active then x 1 will be inhibited irrespective of the values of x 1 and x 2 ). Activation rules</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.2.</head><figDesc>Fig. 2. Architecture of ASP-G</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.1.</head><figDesc>Fig. 1. A Boolean network model with three genes. Edges with arrowed tips are activating interactions and edges with blunt tips are repressing (inhibiting) links</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><figDesc>To show the flexibility of ASP-G in expressing different types of activation rules, we also encoded the Boolean network model of the GRN involved in A.thaliana flower development originally described in Sanchez-Corrales et al. (2010), with our ASP-G framework. This network model consists of 13 genes and uses gene-specific update rules as described in Section 2.2 Activation rules. As in the original publication, we applied a synchronous update scheme. ASP-G correctly recapitulated all 10 attractors of the network as described in the original paper Sanchez-Corrales et al. (2010). The computation took only 0.479 s. To test ASP-G on a larger network, we use the network data from the Th cell differentiation described by Pedicini et al. (2010)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><figDesc>Funding: This work was supported by the Ghent University Multidisciplinary Research Partnership 'Bioinformatics: from nucleotides to networks' and the Interuniversity Attraction Poles Programme [IUAP P6/25], initiated by the Belgian State, Science Policy Office (BioMaGNet) and by the IWT: SBONEMOA; FWO: G.0428.13N fund. Conflict of Interest: none declared.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>explained the various states of the immune system with Boolean network models and Albert and Othmer (2003); Gonz alez et al. (2008) and S anchez and Thieffry (2001) used Boolean network models and their attractors to describe the cellular development of Drosophila melanogaster. Key to simulating GRNs with Boolean network models</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>3.1 ASP-G: a novel framework for the simulation and attractor computation of GRNs with Boolean network models Simulating Boolean network models implies that activation rules have to be defined to decide how a gene is activated by its interactors. The exact choice of the assumptions largely determines the outcome and the number and characteristics of the attractors. Supplementary Figures S1–S3 show that, for example, Boolean network in</figDesc><table>fhs j+1 ; . . . ; s k ig 
10: 
attractor_is_found = True 
11: 
{The attractors already found are forbidden in P} 
12: 
for s in fs k ; :::; s j+1 g do 
13: 
{The states are added as constraints for the next path} 

14: 
P=P[f activeðX 1 ; TÞ; inhibitedðX 2 ; TÞ; . . . jX i 2 sg 
15: 
end for 
16: 
break 
17: 
end if 
18: end for 
19: if attractor_is_found then 
20: 
attractor_is_found = False 
21: else 
22: 
k=2 Á k 
23: end if 
24: end while 
25: return attractors 

3 RESULTS 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 1. ASP-G results and running times for common GRNs found in the literature</figDesc><table>Network 
Reference 
Genes 
Attractors 
Update mechanism 
Activation rules 
Time 

Yeast cell cycle 
Li et al. (2004) 
11 
7 
Synchronous 
r* 
1 . 5 0 7 
Ay et al. (2009) 
11 
7 
Asynchronous 
r* 
0 . 1 3 4 
Fission Yeast 
Davidich and Bornholdt (2008) 
10 
13 
Synchronous 
r* 
1 . 6 5 3 
Ay et al. (2009) 
10 
15 
Asynchronous 
r* 
0 . 3 7 1 
Th cell differentiation 
– 
23 
3 
Synchronous 
r + 
0.270 
Garg et al. (2007) 
23 
3 
Asynchronous 
r + 
0.206 

</table></figure>

			<note place="foot">ß The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">ASP-G at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from attractor computation algorithm. The following describes each of these modules: Network description module This module contains the description of the structure of the network, encoded in a set of facts provided by the user. Because of the declarative nature of ASP, such a description can be written succinctly in an intuitive format. For example, the following set of facts is used to describe the network depicted in Figure 1: geneðx 1 Þ: geneðx 2 Þ: geneðx 3 Þ: activatesðx 1 ; x 1 Þ: activatesðx 1 ; x 2 Þ: activatesðx 1 ; x 3 Þ: activatesðx 2 ; x 1 Þ: activatesðx 2 ; x 3 Þ: inhibitsðx 3 ; x 1 Þ: activatesðx 3 ; x 2 Þ: inhibitsðx 3 ; x 3 Þ: To compare the declarative specification of the network with the more classically used SAT notation (Dubrova and Teslenko, 2011), we give the network specification corresponding to the Boolean network depicted in Figure 1 in cnet format, as follows:</note>

			<note place="foot">M.Mushthofa et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">ASP-G at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">The topology of the regulatory interactions predicts the expression pattern of the segment polarity genes in Drosophila melanogaster</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Albert</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">G</forename>
				<surname>Othmer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">223</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">antelope &quot; : a hybrid-logic model checker for branchingtime boolean grn analysis</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Arellano</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">490</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Scalable steady state analysis of boolean biological regulatory networks</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Ay</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<monogr>
		<title level="m" type="main">Progress on the state explosion problem in model checking</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Clarke</surname>
			</persName>
		</author>
		<editor>Informatics. Springer</editor>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="176" to="194" />
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Automatic inference of regulatory and dynamical properties from incomplete gene interaction and expression data</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Corblin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Processign in Cells and Tissues</title>
		<meeting><address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="25" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Boolean network model predicts cell cycle sequence of fission yeast</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">I</forename>
				<surname>Davidich</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Bornholdt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PloS One</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">1672</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Modeling and simulation of genetic regulatory systems: a literature review</title>
		<author>
			<persName>
				<forename type="first">De</forename>
				<surname>Jong</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="67" to="103" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Search for steady states of piecewise-linear differential equation models of genetic regulatory networks</title>
		<author>
			<persName>
				<forename type="first">De</forename>
				<surname>Jong</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Page</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="208" to="222" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">A sat-based algorithm for finding attractors in synchronous boolean networks</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Dubrova</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Teslenko</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="1393" to="1399" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Modeling biological networks by action languages via answer set programming</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Dworschak</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Constraints</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="21" to="65" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<monogr>
		<title level="m" type="main">Answer set programming: A primer</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Eiter</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="40" to="110" />
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">A gene regulatory network model for cell-fate determination during Arabidopsis thaliana flower development that is robust and recovers experimental gene expression profiles</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Espinosa-Soto</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Plant Cell Online</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="2923" to="2939" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">An efficient method for dynamic analysis of gene regulatory networks and in silico gene perturbation experiments</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Garg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In: Research in Computational Molecular Biology</title>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="62" to="76" />
			<date type="published" when="2007" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Synchronous versus asynchronous modeling of gene regulatory networks</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Garg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="1917" to="1925" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Engineering an incremental ASP solver</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gebser</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Logic Programming</title>
		<meeting><address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="190" to="205" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">The bioasp library: Asp solutions for systems biology</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gebser</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2010 22nd IEEE International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="383" to="389" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Repair and Prediction (under Inconsistency) in Large Biological Networks with Answer Set Programming</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gebser</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twelfth International Conference on the Principles of Knowledge Representation and Reasoning</title>
		<meeting>the Twelfth International Conference on the Principles of Knowledge Representation and Reasoning<address><addrLine>Toronto, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-03-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Detecting inconsistencies in large biological networks with answer set programming</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gebser</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theory and Practice of Logic Programming</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="323" to="360" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<monogr>
		<title level="m" type="main">Cluster-based asp solving with claspar. In: Logic Programming and Nonmonotonic Reasoning</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gebser</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="364" to="369" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<monogr>
		<title level="m" type="main">Potassco: the potsdam answer set solving collection</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gebser</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<publisher>AI Commun</publisher>
			<biblScope unit="page" from="107" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Logical modelling of the role of the hh pathway in the patterning of the drosophila wing disc</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gonz Alez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="234" to="240" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Time out of joint: Attractors in asynchronous random boolean networks</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Harvey</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Bossomaier</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourth European Conference on Artificial Life</title>
		<meeting>the Fourth European Conference on Artificial Life<address><addrLine>Cambridge</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="67" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Logic programming for boolean networks</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Inoue</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Second international joint conference on Artificial Intelligence</title>
		<meeting>the Twenty-Second international joint conference on Artificial Intelligence</meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="924" to="930" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<monogr>
		<title level="m" type="main">The Origins of Order: Self-organization and Selection in Evolution</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">A</forename>
				<surname>Kauffman</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Oxford University Press</publisher>
			<pubPlace>Oxford, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Towards a logical analysis of the immune response</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Kaufman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">114</biblScope>
			<biblScope unit="page" from="527" to="561" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Representation of switching circuits by binary-decision programs</title>
		<author>
			<persName>
				<forename type="first">C.-Y</forename>
				<surname>Lee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell Syst. Techn. J</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="985" to="999" />
			<date type="published" when="1959" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">The yeast cell-cycle network is robustly designed</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="4781" to="4786" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">What is answer set programming</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Lifschitz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the TwentyThird AAAI Conference on Artificial Intelligence</title>
		<meeting>the TwentyThird AAAI Conference on Artificial Intelligence<address><addrLine>Chicago, Illinois</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-07-13" />
			<biblScope unit="page" from="1594" to="1597" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Dynamics of the genetic regulatory network for Arabidopsis thaliana flower morphogenesis</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Mendoza</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">R</forename>
				<surname>Alvarez-Buylla</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">193</biblScope>
			<biblScope unit="page" from="307" to="319" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Genetic control of flower morphogenesis in Arabidopsis thaliana: a logical analysis</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Mendoza</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="593" to="606" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">Decision diagrams for the representation and analysis of logical models of genetic networks</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Naldi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In: Computational Methods in Systems Biology</title>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="233" to="247" />
			<date type="published" when="2007" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Combining network modeling and gene expression microarray analysis to explore the dynamics of th1 and th2 cell regulation</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Pedicini</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">1001032</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">How little do we actually know? on the size of gene regulatory networks</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Rottger</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinform</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1293" to="1300" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">A logical analysis of the drosophila gap-gene system</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Anchez</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Thieffry</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">211</biblScope>
			<biblScope unit="page" from="115" to="141" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<analytic>
		<title level="a" type="main">The Arabidopsis thaliana flower organ specification gene regulatory network determines a robust differentiation process</title>
		<author>
			<persName>
				<forename type="first">Y.-E</forename>
				<surname>Sanchez-Corrales</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">264</biblScope>
			<biblScope unit="page" from="971" to="983" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">From boolean to probabilistic boolean networks as models of genetic regulatory networks</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Shmulevich</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<meeting>. IEEE</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="1778" to="1792" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b36">
	<analytic>
		<title level="a" type="main">Boolean formalization of genetic control circuits</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Thomas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="563" to="585" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b37">
	<analytic>
		<title level="a" type="main">Regulatory networks seen as asynchronous automata: a logical description</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Thomas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">153</biblScope>
			<biblScope unit="page" from="1" to="23" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b38">
	<analytic>
		<title level="a" type="main">An efficient algorithm for computing attractors of synchronous and asynchronous boolean networks</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Zheng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PloS One</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">60593</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>