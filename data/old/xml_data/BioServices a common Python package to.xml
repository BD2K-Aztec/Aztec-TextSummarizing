
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:35+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Databases and ontologies Advance Access publication BioServices: a common Python package to access biological Web Services programmatically</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Thomas</forename>
								<surname>Cokelaer</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">European Bioinformatics Institute</orgName>
								<orgName type="laboratory">European Molecular Biology Laboratory</orgName>
								<orgName type="institution">Wellcome Trust Genome Campus</orgName>
								<address>
									<postCode>CB10 1SD</postCode>
									<settlement>Cambridge</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Dennis</forename>
								<surname>Pultz</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Biochemistry and Molecular Biology</orgName>
								<orgName type="institution">University of Southern Denmark</orgName>
								<address>
									<postCode>5230</postCode>
									<settlement>Odense</settlement>
									<country key="DK">Denmark</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Lea</forename>
								<forename type="middle">M</forename>
								<surname>Harder</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Biochemistry and Molecular Biology</orgName>
								<orgName type="institution">University of Southern Denmark</orgName>
								<address>
									<postCode>5230</postCode>
									<settlement>Odense</settlement>
									<country key="DK">Denmark</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Jordi</forename>
								<surname>Serra-Musach</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="laboratory">Translational Research Laboratory, Breast Cancer Unit</orgName>
								<orgName type="institution" key="instit1">Catalan Institute of Oncology (ICO)</orgName>
								<orgName type="institution" key="instit2">Bellvitge Institute for Biomedical Research (IDIBELL)</orgName>
								<address>
									<addrLine>Gran via 199</addrLine>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">L&apos;Hospitalet del Llobregat</orgName>
								<address>
									<postCode>08908</postCode>
									<settlement>Barcelona</settlement>
									<region>Catalonia</region>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="institution">Biomedical Research Institute of Girona</orgName>
								<address>
									<postCode>17007</postCode>
									<settlement>Girona</settlement>
									<region>Catalonia</region>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Julio</forename>
								<surname>Saez-Rodriguez</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">European Bioinformatics Institute</orgName>
								<orgName type="laboratory">European Molecular Biology Laboratory</orgName>
								<orgName type="institution">Wellcome Trust Genome Campus</orgName>
								<address>
									<postCode>CB10 1SD</postCode>
									<settlement>Cambridge</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Alfonso</forename>
								<surname>Valencia</surname>
							</persName>
						</author>
						<title level="a" type="main">Databases and ontologies Advance Access publication BioServices: a common Python package to access biological Web Services programmatically</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">24</biblScope>
							<biblScope unit="page" from="3241" to="3242"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt547</idno>
					<note>Associate Editor:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION AND MOTIVATION</head><p>Many biological databases are accessible on the www (world wide web) via server-side applications that span the entire spectrum of bioinformatics (e.g. genomics, sequence analysis). Although manual requests allow quick retrieval of information, programmatic access via Web Services scales up the number of requests and permits the composition of complex workflows. One strength of Web Services is that client-side applications do not need any intimate knowledge of the database provided by the service itself. Life sciences and bioinformatics have had a fecund production of Web Services in recent years (<ref type="bibr" target="#b1">Bhagat et al., 2010</ref>). Web services integration within a single framework fosters the development of applications. An example based on JAVA is MAPI (<ref type="bibr" target="#b3">Karlsson and Trelles, 2013</ref>) that has been a base for developing biomedical applications. Programmatic access to Web Services relies mostly on (i) REST (Representational State Transfer) and</p><p>(ii) SOAP (Simple Object Access Protocol; www.w3.org/TR/ soap). REST has an emphasis on readability: each resource corresponds to a unique URL. There is no need for any external dependency, as operations are carried out via standard Hypertext Transfer Protocol (HTTP) methods (e.g. GET, POST). SOAP uses extensible mark-up language (XML)-based messaging protocol to encode request and response messages using WSDL (Web Services Description Language; www.w3.org/TR/wsdl) to describe the service's capabilities. To build applications that integrate several Web Services, one needs to have expertise in (i) HTTP requests, (ii) SOAP protocol, (iii) REST protocol, (iv) XML parsing to consume the XML messages and (v) related bioinformatics fields. Besides, inputs and outputs of the services can be heterogeneous. Consequently, the composition of workflows or design of external applications based on several Web Services can be challenging. The Python language has many useful features for researchers (<ref type="bibr" target="#b0">Bassi 2007</ref>): it is an object-oriented language with a precise and concise syntax and has a versatile set of standard modules. There is a growing and thriving community of scientific developers. An example of a library dedicated to bioinformatics is BioPython (<ref type="bibr" target="#b2">Cock et al., 2009</ref>). It provides input/output functions, algorithms and some access to Web Services (e.g. Entrez). However, a dedicated framework to easily integrate bioinformatics Web Services and to provide extensive access to them is missing. We have, therefore, developed BioServices to provide programmatic access to major bioinformatics Web Services within a single software framework using Python as a glue language. It should alleviate the needs for technical knowledge to develop more complex applications around existing resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">APPROACH AND IMPLEMENTATION</head><p>To bring together various Web Services within BioServices, we first designed two base classes called RESTService and WSDLService so as to ease the wrapping of Web Services. As shown in<ref type="figure" target="#fig_0">Figure 1</ref>, these two classes are then used by all services available within BioServices. A SOAP/WSDL Web Service can be wrapped concisely as follows:super(AWrapper, self).__init__( "AWrapper", url¼"validURL?wsdl'')</p><p>Similarly, REST services can be exposed concisely (replace WSDLService by RESTService) as explained in the Developer Section of the Supplementary Data. An example of SOAP/ WSDL service wrapped within BioServices is BioModels (<ref type="bibr" target="#b4">Li, 2010</ref>). Consider the following example:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">from bioservices import BioModels</head><p>2 s ¼ BioModels() 3 s.methods # methods exposed by WSDL 4 s.serv.getAllModelsId() 5 s.getAllModelsId() All methods exposed by the service are listed in the methods attribute (line 3). They can be called directly via the serv attribute. For example, all model identifiers can be retrieved (line 4). Methods are then wrapped (line 5) to add robustness and quality. Web Services currently available in BioServices (see<ref type="figure" target="#tab_1">Table 1</ref>) can be used independently but they can also be combined. Amongst the various examples provided in the Supplementary Data, a case study demonstrates how to retrieve a protein's UniProt identifier, its corresponding FASTA sequence, the related Kyoto Encyclopedia of Genes and Genomes (KEGG) pathways, the interactions with other proteins (PSICQUIC) and so forth. Two issues arise when manipulating several services, especially for end-users: (i) heterogeneous data structures are returned and (ii) a plethora of identifiers and keywords are required. Both issues are unfortunately inherent to the diversity of the Web Services used. Although some data structures are commonly used (e.g. XML format), there is still a variety of data structures to deal with. BioServices addresses the first issue by providing extensive documentation and examples. As for the identifiers issue, although BioServices does not provide mapping functions by itself, it gives access to mapping functions from UniProt, KEGG and UniChem (among others). See the online documentation (http://pypi.python.org/pypi/bioservices) for examples.ArrayExpress (R) BioMart (R) BioModels (W) ChEBI (W) ChEMBLdb (R) EUtils (W) KEGG (R) HGNC (R) Miriam (W) PDB (R) PICR (R) PSICQUIC (R) QuickGO (R) Rhea (R) UniChem (R) UniProt (R) NCBIBlast (R) WikiPathways (W)</p><p>Note: R stands for REST and W stands for SOAP/WSDL protocol.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Interaction between external applications and existing Web Services via BioServices. External applications can use BioServices to compose or aggregate several Web Services (see Table 1 for available services)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>from bioservices import WSDLService class AWrapper(WSDLService): *To whom correspondence should be addressed. ß The Author 2013. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited. def __init__(self):</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>Table 1. Web Services accessible from BioServices</figDesc><table></table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="3"> CONCLUSION/RESULTS BioServices provides a comprehensive access to bioinformatics Web Services within a single Python library; the current release (1.1.1) provides access to 18 Web Services (see Table 1). The methodology used to encapsulate Web Services and their functionalities combined with Python allow pipelines (that combine several Web Services) to be implemented concisely. Besides, an extensive online documentation (http://pypi.python.org/pypi/ bioservices) should help users and developers to deal with the profusion of identifiers and data structures inherent to the diversity of Web Services available. Releases are available on PyPi (http://pypi.python.org/pypi/bioservices), the official Python repository. Developers can obtain the source code from a public server (https://www.assembla.com/spaces/bioservices/wiki). Besides, bug reports and new feature requests are encouraged (https://www.assembla.com/spaces/bioservices/tickets), and contributors are welcome to join the user and developer community (https://www.assembla.com/spaces/bioservices/wiki). Tests are included with a large coverage to guarantee robustness regarding potential modifications of the Web Services themselves. By covering a wide range of Web Services, BioServices can be used to complement external libraries (e.g. BioPython, Galaxy; see Supplementary Data) and foster the development of new workflows. Funding: Danish Research Councils (to L.M.H. and D.P.), Lundbeck Foundation (to L.M.H.), Foundation Ferran Sunyer i Balaguer (to J.S.M.), Biomedical Research Institute of Girona (to J.S.M.) and EU BioPreDyn FP7-KBBE (grant 289434). Conflict of Interest: none declared.</note>

			<note place="foot">T.Cokelaer et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">A primer on Python for life science researchers</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Bassi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">199</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">BioCatalogue: a universal catalogue of web services for the life sciences</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Bhagat</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="689" to="694" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Biopython: freely available Python tools for computational molecular biology and bioinformatics</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">J</forename>
				<surname>Cock</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1422" to="1423" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">MAPI: a software framework for distributed biomedical applications</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Karlsson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Trelles</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Biomed. Semantics</title>
		<imprint>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">BioModels.net Web Services, a free and integrated toolkit for computational modelling software</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Brief. Bioinform</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="270" to="277" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>