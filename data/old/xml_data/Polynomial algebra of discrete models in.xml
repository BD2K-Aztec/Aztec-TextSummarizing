
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:57+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Systems biology Polynomial algebra of discrete models in systems biology</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Alan</forename>
								<surname>Veliz-Cuba</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution" key="instit1">Virginia Bioinformatics Institute</orgName>
								<orgName type="institution" key="instit2">Virginia Polytechnic Institute and State University</orgName>
								<address>
									<settlement>Blacksburg</settlement>
									<region>VA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Abdul</forename>
								<surname>Salam Jarrah</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution" key="instit1">Virginia Bioinformatics Institute</orgName>
								<orgName type="institution" key="instit2">Virginia Polytechnic Institute and State University</orgName>
								<address>
									<settlement>Blacksburg</settlement>
									<region>VA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Mathematics and Statistics</orgName>
								<orgName type="institution">American University of Sharjah</orgName>
								<address>
									<settlement>Sharjah</settlement>
									<country key="AE">UAE</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Reinhard</forename>
								<surname>Laubenbacher</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution" key="instit1">Virginia Bioinformatics Institute</orgName>
								<orgName type="institution" key="instit2">Virginia Polytechnic Institute and State University</orgName>
								<address>
									<settlement>Blacksburg</settlement>
									<region>VA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Systems biology Polynomial algebra of discrete models in systems biology</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS ORIGINAL PAPER</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="issue">13</biblScope>
							<biblScope unit="page" from="1637" to="1643"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq240</idno>
					<note type="submission">Received on January 29, 2010; revised on April 25, 2010; accepted on April 28, 2010</note>
					<note>[12:10 3/6/2010 Bioinformatics-btq240.tex] Page: 1637 1637–1643 Associate Editor: John Quackenbush Contact: alanavc@vt.edu Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: An increasing number of discrete mathematical models are being published in Systems Biology, ranging from Boolean network models to logical models and Petri nets. They are used to model a variety of biochemical networks, such as metabolic networks, gene regulatory networks and signal transduction networks. There is increasing evidence that such models can capture key dynamic features of biological networks and can be used successfully for hypothesis generation. Results: This article provides a unified framework that can aid the mathematical analysis of Boolean network models, logical models and Petri nets. They can be represented as polynomial dynamical systems, which allows the use of a variety of mathematical tools from computer algebra for their analysis. Algorithms are presented for the translation into polynomial dynamical systems. Examples are given of how polynomial algebra can be used for the model analysis.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Finite dynamical systems, that is, discrete dynamical systems with a finite state space, have been used extensively in systems biology to model a variety of biochemical networks, such as metabolic networks, gene regulatory networks and signal transduction networks. For many such networks, the available data quantity and quality is not sufficient to build detailed quantitative models such as systems of ordinary differential equations, which require many parameters that are frequently unknown. In addition, discrete models tend to be more intuitive and easily accessible to life scientists. There is ample evidence that such models can capture key dynamic features of biological networks and can be used successfully for hypothesis generation (G.<ref type="bibr">Bhardwaj et al.,</ref>submitted for publication;<ref type="bibr" target="#b25">Saez-Rodriguez et al., 2009</ref>). Boolean networks and their generalization, the so-called multistate logical models (<ref type="bibr" target="#b33">Thomas, 1973</ref>; Thomas and D'<ref type="bibr">Ari, 1989</ref>), are the main types of finite dynamical systems that have been used successfully in modeling biological networks (e.g.<ref type="bibr" target="#b0">Albert and Othmer, 2003;</ref><ref type="bibr" target="#b1">Barrett et al., 2005;</ref><ref type="bibr" target="#b8">Espinosa-Soto et al., 2004;</ref><ref type="bibr" target="#b9">Faure et al., 2006;</ref><ref type="bibr" target="#b18">Li et al., 2004;</ref><ref type="bibr" target="#b21">Mendoza et al., 1999;</ref><ref type="bibr" target="#b25">Saez-Rodriguez et al., 2009;</ref><ref type="bibr" target="#b26">Samal and Jain, 2008</ref>). Petri nets have also been shown to be a good modeling * To whom correspondence should be addressed. paradigm for this field (e.g.<ref type="bibr" target="#b3">Chaouiya et al., 2008;</ref><ref type="bibr" target="#b10">Formanowicz et al., 2007;</ref><ref type="bibr" target="#b11">Grunwald et al., 2008;</ref><ref type="bibr" target="#b15">Kielbassa et al., 2009</ref>). Together, these model types represent a large class of discrete models in systems biology, which are capable of simulating deterministic as well as stochastic processes. Several tools and techniques have been developed to simulate and analyze discrete models. For logical models, the open-source software GINsim (http://gin.univ-mrs.fr) is available, and for Petri nets, the user has access to a wide variety of software. The laboratory of M. Heiner provides software with a particular focus on applications to systems biology (http://www-dssz.informatik.tucottbus.de/). Analysis tools for logical models, including Boolean networks, are described in<ref type="bibr" target="#b22">Naldi et al. (2007)</ref>. In addition to a variety of simulation and visualization tools, other graph theoretic analysis tools are available for the identification of steady states and strongly connected components of the regulatory graph. There are algorithms to compute dead states (steady states), as well as T-and P-invariants, which can be computed via linear algebra methods. A survey of the use of Petri nets in systems biology is given by<ref type="bibr" target="#b23">Peleg et al. (2005)</ref>. The purpose of this article is to describe a mathematical framework that encompasses both types of models and makes accessible a broad range of mathematical tools for model analysis, in order to complement existing tools in these domain areas. The fundamental observation underlying this framework is that logical models and k-bounded Petri nets are particular instantiations of what we shall call 'algebraic models,' i.e. time–discrete dynamical systems</p><formula>f = (f 1 ,...,f n ) : F n −→ F n</formula><p>where each coordinate function f i is a function of the n variables x 1 ,...,x n , each of which takes on values in a finite set F with algebraic structure, and each f i is a polynomial. Aside from the mathematical simplicity of their definition, an important feature of polynomial dynamical systems is that one can employ a number of mathematical tools for their analysis. For our purposes, the principle tool is the capability to symbolically solve systems of nonlinear polynomial equations quite efficiently. This can be used, for instance, to compute the steady states and other features of an algebraic model. We give algorithms that translate both logical models and Petri nets into this framework. Our algorithms are compatible with the algorithm in<ref type="bibr" target="#b3">Chaouiya et al. (2008)</ref>, which translates logical models into Petri nets. We furthermore provide several examples, using models from the literature, of how this translation can be used to analyze their dynamic properties. The article is organized as follows. In Section 2, we briefly describe polynomial dynamical systems (PDSs). We then show how to use the algebraic framework in the analysis of logical models andPage: 1638 1637–1643</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.Veliz-Cuba et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>k-bounded Petri nets in Sections 3 and 4</head><p>, respectively; furthermore, we present concrete examples for each. We close with a discussion in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHOD</head><p>We consider models of biological systems, such as biochemical networks with n interacting molecular species, whose states can be described by an n-tuple with entries from a finite set F. The model consists of a set of rules that allow the system to evolve from one state to the next, so that it can be represented as a time–discrete dynamical system f : F n −→ F n. Both logical models and k-bounded Petri nets are of this form. For example, in a model of a gene regulatory network, the set F is {0,1}, representing the state of a gene as either ON (1) or OFF (0). If we consider f only as a set function, then there are few mathematical tools that can help to analyze f. One way to introduce mathematical structure, and thereby mathematical tools to study f , is by imposing the structure of a number system on F, akin to the introduction of a coordinate system in affine space, which gives access to analytical methods in geometry. It can be shown that this can be done whenever the cardinality of F is a power of a prime number, and we will show in this article that it can always be accomplished in the cases of interest here (we will consider |F| to be a prime number to simplify the notations). It is worth pointing out that this algebraic structure is used heavily in the case of Boolean networks. The evaluation of Boolean functions uses the fact that F ={0,1} is equipped with an addition, where 0 is the additive identity, and with a multiplication, where 1 is the multiplicative identity. The two are connected through the rule 1+1 = 0. Once F carries such a structure, we can make use of a fundamental property of finite fields: Let h : F n → F be a function. Then, there exists a polynomial g : F n → F such that h(x) = g(x) for all x ∈ F n. One can find g using the formula g(</p><formula>x) = c∈F n h(c) n j=1 (1−(x j −c j ) p−1</formula><p>), where the right-hand side is computed modulo p. We will write h, h(x) or c∈F n h(c) n j=1 (1−(x j −c j ) p−1 ), depending whether or not there is the need to specify x or the polynomial form of h. Thus, we can represent f via its coordinate functions: f = (f 1 ,...,f n ) : F n −→ F n , where each f i is a polynomial function, so that evaluation and analysis of f can be done using polynomial arithmetic over F. We shall call f a PDS over F of dimension n. In the next sections, we will show that logical models and bounded Petri nets can be represented as PDSs. One can then use powerful symbolic computation software, from open source specialty packages such as CoCoA (http://cocoa.dima.unige.it/), Singular (http://www .singular.uni-kl.de) and Macaulay2 (http://www.math.uiuc.edu/Macaulay2) to general commercial packages such as Mathematica and Maple. In this article, we will use Macaulay2 for all computations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ALGORITHM FOR LOGICAL MODELS</head><p>Logical models have been used for modeling biological phenomena and have been useful for obtaining valuable insight and qualitative information (Thomas and D'<ref type="bibr">Ari, 1989</ref>). Such analysis is based on the topology of the network and the type of regulation of the different interactions in the network, which are believed to be the key features that determine dynamical properties (<ref type="bibr" target="#b0">Albert and Othmer, 2003</ref>; Thomas and D'<ref type="bibr">Ari, 1989</ref>). Logical models have the advantage of being intuitive and relatively simple to construct, even with no information about reaction rates or functionality, and still keeping qualitative information (<ref type="bibr" target="#b0">Albert and Othmer, 2003</ref>). However, their analysis is not a trivial task. For example, the problem of finding the steady states of a logical model is NP-complete, that is, it is one of the hardest problems in the nondeterministic polynomial-time class (even to determine the existence of steady states is NP-complete;<ref type="bibr" target="#b36">Zhao, 2005</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Definition of logical models</head><p>There are several ways to define logical models (<ref type="bibr" target="#b3">Chaouiya et al., 2008;</ref><ref type="bibr" target="#b4">Comet et al., 2005;</ref><ref type="bibr" target="#b22">Naldi et al., 2007</ref>), and here we use the definition given in<ref type="bibr" target="#b22">Naldi et al. (2007).</ref>Definition 3.1. A logical model is a triple (V,E,K), where:</p><formula>(1) V ={v 1 ,...,v n }</formula><formula>(3) K ={K i : v j ∈I(i) [0,m j,i ]→[0,m i ]</formula><p>,i = 1,.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>..n} is the set of parameters.</head><p>Consider a state x = (x 1 ...,x n ). The future value for node v i , with I(i) ={v i 1 ,...,v i r }, is determined as follows: compute</p><formula>i (x i 1 ,...,x i r ) = ( i 1 ,i (x i 1 ),...,, i r ,i (x i r )) = (k 1 ,...,k r )</formula><p>, indicating that the k j-th interaction for input v i j of v i is active; then compute f i (x) = K i (k 1 ,...,k r ). This last value determines whether the value of v i tends to increase, decrease or remain the same. To be precise, the future value of v i is given by</p><formula>g i (x) = ρ(x i ,f i (x)), where ρ(t,u) = ⎧ ⎪ ⎨ ⎪ ⎩ t +1, if u &gt; t t, if u = t t −1, if u &lt; t</formula><p>With this notation, g = (g 1 ,...,g n ) : S → S is a finite dynamical system, and so is</p><formula>f = (f 1 ,...,f n ) : S → S.</formula><p>Notice that g ensures that each variable changes at most one unit (continuity), whereas f does not. The dynamics of a logical model is given by the phase space, defined as the graph S with an edge from x to y if {i : x i = y j }={j} for some j and y j = g j (x) (asynchronous dynamics) or as the graph S with an edge from x to y if y = g(x) (synchronous dynamics). Notice that g may be replaced by f if we do not require continuity. An edge i → j is called positive (negative) if increasing the i-th entry of x causes g i (x) to increase (decrease) using the natural order on the integer sets<ref type="bibr">[0,m i ]</ref>. If changing the i-th entry of x does not cause any change in g i (x), we say that the edge is nonfunctional.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Polynomial form of logical models</head><p>Let (V,E,K) be a logical model as above. Choose a prime number p such that p ≥ m i +1 for all 1 ≤ i ≤ n (<ref type="bibr">[0,m i ]</ref>has m i +1 elements) Page: 1639 1637–1643</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Polynomial algebra of discrete models</head><p>Weel MPF String Fizzy</p><formula>MPF K M ,K M,WS ,K M,S ,K M,W Fizzy K F,M Wee1 K W String K S,M and let F = F p ={0,1</formula><p>,...,p−1} be the field with p elements. Note that we may consider S ⊆ F n. Consider a vertex v i and let g i (or f i if we do not require continuity) be its coordinate function. Our goal is to represent g i as a polynomial in terms of its inputs, say x i 1 ,...,x i r. That is, we need a polynomial function defined on F r with values in F. Denote a∧b = min{a,b}, using the natural order on the set F, viewed as integers. To extend the domain of g i from</p><formula>v j ∈I(i) [0,m j,i ] to F r , we define g i (x i 1 ,...,x i r ) = g i (x i 1 ∧m i 1 ,...,x i r ∧m i r ) for (x i 1 ,...,x i r ) ∈ F r .</formula><p>The polynomial form of g i : F r → F is then</p><formula>g i (x) = (c i 1 ,...,c ir )∈F r g i (c i 1 ,...,c i r ) v j ∈I(i) (1−(x j −c j ) p−1 ),</formula><p>where the right-hand side is computed modulo p.</p><formula>g i (x) = J⊆I(i) K i (J) v j ∈J x j v j ∈I(i)\J (1−x j ). Example 3.3. Consider a Boolean logical model where x 2 ,x 3 ,x 4 regulate x 1 , i.e. I(1) ={2,3,4}. Suppose that K 1 ({}) = K 1 ({3}) = K 1 ({4}) = K 1 ({3,4}) = 1 and K 1 (J) =</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Example</head><p>This example is based on a simplified model for the Drosophila cell cycle first presented in<ref type="bibr" target="#b2">Chaouiya et al. (2004)</ref>. The Boolean logical model is given in<ref type="figure" target="#fig_1">Figure 1</ref>and</p><formula>g 1 (x) = 1+x 2 , g 2 (x) = x 1 , g 3 (x) = 1+x 1 , and g 4 (x) = x 1 .</formula><formula>MPF K M ,K M,S Fizzy K F,M Wee1 K W String K S,M unknown parameters K 1 = K M,W ,K 2 = K M,WS and K 3 = K M,FS</formula><p>Supplementary Material for a formal definition of functional circuit), rather than the three assumed in<ref type="bibr" target="#b2">Chaouiya et al. (2004)</ref>. In the transition from the complete model to the simplified model, some functionality may be lost and the algebraic framework can easily detect this. This is important because in order to deduce dynamical properties from the network structure it is necessary to have the correct wiring diagram. In Property 10 in<ref type="bibr" target="#b2">Chaouiya et al. (2004)</ref>, it is shown that the logical model has no steady states (this was done by proving that an equivalent Petri net is deadlock free). Algebraically, however, this corresponds to solving the system of equations</p><formula>1+x 2 = x 1 , x 1 = x 2 , 1+x 1 = x 3 , x 1 = x 4 ,</formula><p>which has no solution, as the first two equations imply that x 2 = x 2 +1, showing that there are no steady states.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Algebra and parameters</head><p>An important feature of the algebraic framework is the ability to treat the parameters as variables and study all corresponding models at the same time, which we illustrate with a small logical model. (The same analysis can be done for Petri nets.) Suppose, for example, that in the model for the Drosophila cell cycle (Section 3.3) some parameters are unknown. The polynomial form of the logical model is:</p><formula>g 1 = 1+x 2 +x 3 + K 1 x 3 +x 2 x 3 +K 1 x 2 x 3 +K 3 x 2 x 4 +K 1 x 3 x 4 +K 2 x 3 x 4 +K 1 x 2 x 3 x 4 +K 2 x 2 x 3 x 4 +K 3 x 2 x 3 x 4 , g 2 = x 1 , g 3 = 1+x 1 , and g 4 = x 1 .</formula><p>For the derivation of these equations, see the Supplementary Material. Now, let us focus on finding steady states of this logical model. This model has three unknown parameters, and if we were to analyze each model, we would have to analyze 2 3 = 8 logical models, as the complexity grows exponentially with respect to the number of unknown parameters. However, using the algebraic framework we can treat the parameters K 1 ,K 2 ,K 3 as variables and analyze the eight models at the same time. Using polynomial algebra (see Supplementary Material), we find that an equivalent system is</p><formula>K 1 (K 3 −1) = 0, x 4 (K 3 −1) = 0, K 1 (x 4 −1) = 0, x 3 +x 4 −1 = 0, x 2 +x 4 = 0, x 1 +x 4 = 0.</formula><p>From this system, we can obtain valuable information. For example, if x is a steady state, then x 1 = x 2 = x 4 = x 3 −1; that is, the only possible steady states are (0,0,1,0) and (1,1,0,1). This is true no matter what the parameters K 1 ,K 2 and K 3 are. We can also easily solve this system and see the steady states for any choice of parameters. For example, consider K 1 = 1,K 3 = 0. Since they do not satisfy the first equation, there are no steady states.= 0, where r = 1,...,5. The networks used were: fission yeast (<ref type="bibr" target="#b5">Davidich and Bornholdt, 2007</ref>), budding yeast (<ref type="bibr" target="#b18">Li et al., 2004</ref>), Th cell differentiation (<ref type="bibr" target="#b24">Remy et al., 2006</ref>), Th cell differentiation (<ref type="bibr" target="#b19">Mendoza, 2006</ref>), Th cell differentiation (<ref type="bibr" target="#b20">Mendoza and Xenarios, 2006</ref>), T-cell receptor (<ref type="bibr" target="#b16">Klamt et al., 2006</ref>), respectively. All networks were Boolean except the fourth one which had some nodes with three states.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Page: 1640 1637–1643</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.Veliz-Cuba et al.</head><formula>Consider K 1 = K 2 = K 3 = 0</formula><p>; we have the system</p><formula>x 4 = 0,x 3 = 1−x 4 ,x 2 = x 4 ,x 1 = x 4 ,</formula><p>which has the unique steady state x = (0,0,1,0). We can also use the system above to determine for which choice of parameters a given state is a steady state of the system. For example, suppose we are interested in finding the parameters for which (0,0,1,0) is a steady state, then we have the system K 1 (K 3 −1) = 0,0(K 3 −1) = 0,K 1 = 0; therefore, K 1 = 0 and the other parameters are 'free.' Hence, (0,0,1,0) is a steady state for K = (0,K 2 ,K 3 ). Suppose now we are interested in finding the parameters for which (1,1,0,1) is a steady state. In this case, we have the system K 1 (K 3 −1) = 0,K 3 −1 = 0,K 1 = 0; i.e. K 1 = 0,K 3 = 1 and K 2 is free.<ref type="bibr">Hence, (1,1,0,1</ref>) is a steady state for K = (0,K 2 ,1) (note that in this case (0,0,1,0) is a steady state as well).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Performance</head><p>We tested our algorithm to compute steady states of several published models, that is, we recorded the required time for computing a lexicographic Gröbner basis (which then allows backward substitution to solve the system of equations f 1 (x)−x 1 = 0, …, f n (x)−x n = 0.) The results are shown in<ref type="figure" target="#tab_3">Table 3</ref>. Furthermore, to compute limit cycles (using a parallel update) of length r, one can compute the lexicographic Gröbner basis for the system f t 1 (x)−x 1 = 0, …, f t n (x)−x n = 0, where t = 1,...,r. It is clear that the solution set for t = 1 is the set of steady states; the states in the solution set for t = 2, which are not steady states, are periodic states with period two and so on. Notice that in<ref type="figure" target="#tab_3">Table 3</ref>, the size of the network does not seem to be correlated to the computation time. This is due to the fact that polynomial algebra computations depend more strongly on the complexity of the polynomial equations and not as much on the size or complexity of the logical model. This means that the method can scale well to large networks and that it can complement other methods very well. (Typically, the more terms the polynomial form of the model has the more complex the Gröbner basis calculation. In the Boolean case, for instance, a conjunction leads to a polynomial with one term, whereas a disjunction results in three terms.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ALGORITHM FOR K-BOUNDED PETRI NETS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Definition of Petri nets</head><p>A k-bounded Petri net is a 4-tuple (S,T ,F,W ), where:</p><formula>(1) S ={s 1 ,...,s n }</formula><p>is the set of places.</p><formula>(2) T ={t 1 ,...,t m }</formula><p>is the set of transitions.</p><p>(3) F ⊆ (S ×T )∪(T ×S) is the set of 'regular' arcs. F − ⊆ (S ×T ) is the set of inhibitory arcs.</p><p>(4) W : F → N gives the arc weights of the regular arcs. W − : F − → N gives the arc weights of the inhibitory arcs.</p><p>For a transition t, define</p><formula>@BULLETt ={s ∈ S : (s,t) ∈ F}, t@BULLET={s ∈ S : (t,s) ∈ F}, t ={s ∈ S : (s,t) ∈ F − }. The incidence matrix A = (a ts ) t∈T ,s∈S (or A = (a ij ) m,n i,j=1 ) is an m×n matrix given by a st = W (t,s)−W (s,t) (we consider W (e) = 0 when e / ∈ F).</formula><p>We denote by A t the column of A T (or the row of A) corresponding to a transition t ∈ T. Notice that A t = A T U t , where the entry of U t corresponding to t is 1 and all others are 0.</p><formula>An assignment x = (x s ) s∈S ∈ N n [or x = (x 1 ,...,x n )]</formula><p>for all places is called a marking. Let x be a marking; a transition t is said to be</p><formula>enabled if W (s,t) ≤ x s for all s ∈@BULLETt and x s ≤ W − (s,t)−1 for all s ∈ t. Consider the function C t (x), defined by C t (x) = 1,if W (s,t) ≤ x s for s ∈@BULLETt and x s &lt; W − (s,t) for s ∈ t, 0,otherwise.</formula><p>Thus, a transition t is enabled for x if C t (x) = 1. The evolution of the Petri net is given by firing transitions; by firing an enabled transition t, we update the value of the places with regular arcs from/to t. The phase space of the Petri net is obtained by firing transitions in an asynchronous manner. Let x be a marking: if a transition t is enabled, then firing t results in the marking x +A t. This implies that for any marking x and any transition t, the Petri net can always evolve from x to f t</p><formula>(x) = x +C t (x)A t = x +C t A T U t (If C t (x) = 0, then f t (x) = x; but if C t (x) = 1, then f t (x) = x +A t = x +A T U t ). In the case where x = y = f t (x) we write x t − → y. Denote by f T the function obtained by composing f t 1 @BULLET···@BULLETf t l , where t 1 ,...,t l</formula><p>are the elements of T. A trajectory is a path x</p><formula>t 1 − → y t 2 − → ··· and denoted by x T − →. For any trajectory x T − → y we have y = x +A T t∈T U t .</formula><p>The reachability graph for a marking x is the graph made up of all trajectories starting at x. The reachability graph of a set of markings S is the graph made up of all reachability graphs of all the elements of S. We say that (X 1 ,...,X m ) &gt; 0 if X i ≥ 0 and at least for one i we have X i &gt; 0. A P-invariant is an integer solution, X &gt; 0, of AX = 0. A T-invariant is an integer solution, Y &gt; 0, of A T Y = 0. A marking x is dead if no transition is enabled, that is, if C t (x) = 0 for all t ∈ T ; this is equivalent to f t (x) = x for all t ∈ T. A marking is k-bounded if the value of each place is at most k. The Petri net is k-bounded if any reachable marking (obtained by firing some sequence of transitions) from any k-bounded marking is also a k-bounded marking, that is, if {x : x i ≤ k} contains the vertices of its reachability graph, which is equivalent to f t (<ref type="bibr">[0,k]</ref></p><formula>n ) ⊆[0,k] n</formula><p>for all transitions t. Examples of 1-bounded Petri nets are Boolean regulatory Petri nets, presented in<ref type="bibr" target="#b2">Chaouiya et al. (2004);</ref><ref type="bibr" target="#b24">Remy et al. (2006);</ref><ref type="bibr" target="#b31">Steggles et al. (2007</ref><ref type="bibr" target="#b32">Steggles et al. ( , 2006</ref>). When each place has its own 'k', we have a more general definition:</p><formula>for K = (k 1 ,...,k n ), a Petri net</formula><p>Page: 1641 1637–1643</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Polynomial algebra of discrete models</head><formula>is K-bounded if f t ([0,k 1 ]×···×[0,k n ]) ⊆[0,k 1 ]×···×[0,k n ]</formula><p>for all transitions t. Examples of such Petri nets are multi-level regulatory Petri nets, presented in (<ref type="bibr" target="#b3">Chaouiya et al., 2008;</ref><ref type="bibr" target="#b4">Comet et al., 2005</ref>). Our framework is applicable to K-bounded Petri nets (including k-bounded Petri nets). For a given Petri net, the analysis of its dynamics, checking for dead markings and the type of liveness are some of the typical questions that can be viewed as algebraically as we will see next. Also, when modeling biological systems, there is not a unique marking that is of interest, but a whole family of markings corresponding to different initial states of the biological system. By looking at a Petri net as a polynomial dynamical system, we can study all those markings at the same time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Polynomial form of K-bounded Petri nets</head><p>Since the algebraic framework relies on finite fields, we consider K-bounded Petri nets and focus on the analysis of markings in</p><formula>S = [0,k 1 ]×···×[0,k n ]. Let p be a prime number such that k i +1 ≤ p for all i and let F = F p. Then, for all t ∈ T , f t : S ⊆ F n → F n .</formula><p>We need to extend the functions f t to all of F n and determine their polynomial form. It suffices to give algebraic structure to the function</p><formula>C t : S →[0,1] (since f t (x) = x +C t (x)A t ,</formula><p>the polynomial form of C t will automatically give the polynomial form of f t ). To do this, consider the function c<ref type="bibr">[a,b]</ref>(z) = 1 if a ≤ z ≤ b and c<ref type="bibr">[a,b]</ref>(z) = 0 otherwise (i.e. c<ref type="bibr">[a,b]</ref>is the characteristic function of<ref type="bibr">[a,b]</ref>). Since</p><formula>C t (x) = s∈@BULLETt c [W (s,t),k s ] (x s ) s∈t c [0,W (s,t)−1] (x s</formula><p>), we only need to give algebraic structure to c<ref type="bibr">[a,b]</ref>(the polynomial form of C t will be given by the product of the polynomial forms of its factors). It is not difficult to see that the polynomial function a≤r≤b (1−(z −r) p−1 ) is equal to 1 if a ≤ z ≤ b and 0 otherwise. Hence, the polynomial form of c<ref type="bibr">[a,b]</ref>is c<ref type="bibr">[a,b]</ref>(z) = a≤r≤b (1−(z −r) p−1</p><p>). This gives the polynomial form of C t (x), which, in turn, gives the polynomial form of f t (x) = x +C t (x)A t , where f t : F n → F n. Example 4.1. Consider a transition t of a 1-bounded Petri net such that @BULLETt ={x 1 ,x 2 } and t ={x 3 ,x 4 } (with weights equal to 1). Then C t (x) = c<ref type="bibr">[1,</ref><ref type="bibr">1]</ref>(x 1 )c<ref type="bibr">[1,</ref><ref type="bibr">1]</ref>(x 2 )c<ref type="bibr">[0,</ref><ref type="bibr">0]</ref>(x 3 )c<ref type="bibr">[0,</ref><ref type="bibr">0]</ref>(x 4 ). Since c<ref type="bibr">[0,</ref><ref type="bibr">0]</ref>(z) = 1−z and c<ref type="bibr">[1,</ref><ref type="bibr">1]</ref></p><formula>(z) = z, it follows that C t (x) = x 1 x 2 (1−x 3 )(1−x 4 ). Hence the polynomial form of f t is given by f t (x) = x +x 1 x 2 (1−x 3 ) (1−x 4 )A t .</formula><p>Now, we can state and solve algebraically some Petri net problems. For example, the problem of finding dead markings becomes the problem of solving polynomial equations, which can be easily addressed within the algebraic framework, as was the case for logical models. More precisely, we have the following remark. Remark 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">A marking x of a K-bounded Petri net is dead if and only if</head><formula>x ∈ S and f t (x) = x for all t ∈ T. Let ϕ(x) = n i=1 c [0,k i ] (x i ). Note that ϕ(x) = 1 if x ∈ S and ϕ(x) =</formula><formula>f t 1 (x) = x , ... , f t m (x) = x , ϕ(x) = 1.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Example</head><p>Consider the Petri net model in<ref type="bibr" target="#b3">Chaouiya et al. (2008)</ref>for the core lambda switch S ={CI,Cro}.</p><formula>T = {t 1 = t + CI , t 2 = t − CI,{(CI,1),(Cro,1)} , t 3 = t + Cro , t 4 = t − Cro,{(Cro,2)} , t 5 = t − Cro,{(CI,1)} , t 6 = t − Cro,{(CI,1),(Cro,2)} }. F ={(t 1 ,CI), (Cro,t 1 ), (CI,t 2 ), (Cro,t 2 ), (t 2 ,Cro), (t 3 ,Cro),</formula><formula>(Cro,t 4 ), (t 4 ,Cro), (CI,t 5 ), (Cro,t 5 ), (CI,t 6 ), (Cro,t 6 ), (t 6 ,Cro)}. F − ={(CI,t 1 ),(CI,t 3 ),(Cro,t 3 ),(CI,t 4 ),(Cro,t 5 )}. W (e) = 2 for e ∈{(Cro,t 4 ),(Cro,t 6 )} and W (e) = 1 for the other arcs in F. Also, W − (e) = 2 for e ∈{(Cro,t 3 ),(Cro,t 5 )} and W (e) = 1 for the other arcs in F −. It follows that A T is given by ⎛ ⎝ t 1 t 2 t 3 t 4 t 5 t 6 CI 1 −1 0 0 0 0 Cro 0 0 1 −1 −1 −1 ⎞ ⎠ .</formula><p>This Petri net is (1,2)-bounded (<ref type="bibr" target="#b3">Chaouiya et al., 2008</ref>) and, therefore, we can use the algebraic framework. Notice that ϕ(</p><formula>x) = c [0,1] (x 1 )c [0,2] (x 2 ) = (x 1 +1) 2. Let us compute the polynomial form of f t 5. First, notice that c [0,0] (z) = (1−z)(1+z), c [1,1] (z) = z(2− z), c [2,2] (z) = z(1−z), c [1,2] (z) = z 2 and c [0,1] (z) = (1+z) 2. Then, C t 5 (x) = c [1,1] (x 1 )c [1,2] (x 2 )c [0,1] (x 2 ) which reduces to C t 5 (x) = x 1 (2−x 1 )x 2 (2−x 2 ). Since A t 5 = (0,−1), it follows that f t 5 (x) = x +x 1 (2−x 1 )x 2 (2−x 2 )(0,−1) = (x 1 ,x 2 −x 1 (2−x 1 )x 2 (2−x 2 )</formula><p>). The polynomial forms for all the transitions are</p><formula>f 1 (x) = (x 1 +(1−x 1 )(1+x 1 )(1−x 2 )(1+x 2 ),x 2 ), f 2 (x) = (x 1 −x 1 (2−x 1 )x 2 2 ,x 2 ), f 3 (x) = (x 1 ,x 2 +(1−x 1 )(1+x 1 )(1+x 2 ) 2 ), f 4 (x) = (x 1 ,x 2 −(1−x 1 )(1+x 1 )x 2 (1−x 2 )), f 5 (x) = (x 1 ,x 2 −x 1 (2−x 1 )x 2 (2−x 2 )), f 6 (x) = (x 1 ,x 2 −x 1 (2−x 1 )x 2 (1−x 2 )).</formula><p>To find the dead markings, we have to solve the system</p><formula>(1−x 1 )(1+x 1 )(1−x 2 )(1+x 2 ) = 0, x 1 (2−x 1 )x 2 2 = 0,</formula><formula>(1−x 1 )(1+x 1 )(1+x 2 ) 2 = 0,</formula><formula>(1−x 1 )(1+x 1 )x 2 (1−x 2 ) = 0, x 1 (2−x 1 )x 2 (2−x 2 ) = 0, x 1 (2−x 1 )x 2 (1−x 2 ) = 0, (x 1 +1) 2 −1 = 0.</formula><p>The last equation corresponds to the requirement that x ∈ S. Using Macaulay2, we obtain the marking (1,0) as the only dead marking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION</head><p>The problem of giving mathematical structure to logical models has been studied by several authors (e.g. Egri<ref type="bibr" target="#b7">Nagy and Nehaniv, 2008</ref>). For the purpose of computation and analysis, the structure proposed here provides a class of simple and easily defined mathematical objects that can model both logical models and bounded Petri nets. It has the advantage that it makes accessible the theoretical concepts, algorithms and software from polynomial algebra, such as Gröbner Page: 1642 1637–1643</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.Veliz-Cuba et al.</head><p>basis theory, which underlies many of the algorithms for solving systems of polynomial equations. It is important to mention that in this article we focus on finding steady states and dead markings, not because that is the only application of our framework, but because it can be translated directly into the algebraic problem of solving polynomial equations without much difficulty; the framework we propose can be also used to answer other questions. For instance, theory, algorithms and software were used in Laubenbacher and Stigler (2004) and subsequent papers to give a solution to the problem of reverseengineering of gene regulatory networks from experimental time course data. This allows us to find all logical models that satisfy certain properties as done by SMBioNet (http://smbionet.lami.univevry.fr) with the additional advantage of allowing a systematic study and classification of such models. One can also solve the reverse problem, that is, given a family of models, by using our framework, we find properties that they all satisfy (see Section 3.4). Furthermore, the theory inherent in the algebraic framework can give rise to theorems. For example, the algebraic structure was used to give an exact formula for the structure of the phase space of linear systems (<ref type="bibr" target="#b6">Elspas, 1959;</ref><ref type="bibr" target="#b12">Hernández-Toledo, 2005</ref>) and lower and upper bounds for the number of limit cycles of conjunctive and disjunctive Boolean networks (<ref type="bibr" target="#b13">Jarrah et al., 2010</ref>). Also, the family of nested canalizing functions has been shown to have an algebraic structure (toric variety) that allows their characterization (<ref type="bibr" target="#b14">Jarrah et al., 2007</ref>). These functions appear frequently in Boolean models of regulatory networks and their dynamics have desirable properties. Functionality of circuits can also be studied within this framework (see Supplementary Material). Polynomial algebra can, therefore, complement the existing analysis tools for logical models and Petri nets, and we have shown several examples of its use. It is also worth mentioning that Petri nets are a special case of bipartite models, consisting of two sets of nodes, representing 'places' and 'events,' respectively, connected by directed edges. More general bipartite models are quite common in systems biology (e.g.<ref type="bibr" target="#b35">Warren et al., 2009</ref>), and they might be amenable to analysis with similar methods. It is also worth mentioning that, while the examples used here are all gene regulatory networks, there are examples of logical/Petri net models of other kinds of molecular networks (e.g.<ref type="bibr" target="#b30">Simao et al., 2005</ref>), so that the analysis framework described here is more widely applicable. A potential disadvantage of the algebraic framework is that it is less intuitive than either logical models or Petri nets. Even in the Boolean case it is often difficult to give a biological interpretation to a Boolean function in polynomial form, even if the equivalent Boolean expression is quite meaningful. However, with appropriate software, the typical user wanting to analyze a logical model or Petri net does not need to explicitly manipulate polynomial functions or even be aware that they are used in the analysis. On the other hand, some questions or aspects of logical models and Petri nets may not currently have a direct counterpart in the algebraic framework; for example, the asynchronous update commonly used in logical models does not currently have a direct counterpart in the polynomial algebra framework. This deserves further investigation.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>[12:10 3/6/2010 Bioinformatics-btq240.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. A network for the Drosophila cell cycle (Chaouiya et al., 2004).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>It follows that Wee1 → MPF and String → MPF are nonfunctional edges; i.e. changes in Wee1 or String do not affect MPF. Hence the network has only one functional (negative) circuit (see the</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>1 ≤ θ ≤ m i is called a threshold for (v i ,v j ). Let I(j) = {v : (v,v j ,θ) ∈ E}, called input of v j , be the set of vertices that have an edge ending in v j. Notice that an arc (v i ,v j ) is allowed to have multiplicity corresponding to different thresholds; the number of thresholds is denoted by m i,j. The thresholds are indexed in increasing order, 1≤ θ i,j,1 &lt; ··· &lt; θ i,j,m i,j ≤ m i ; θ i,j,k is the k-th threshold for the arc (v i ,v j ).</figDesc><table>is the set of vertices or nodes. Each v i has 
a maximum expression level, m i . The set S =[0,m 1 ]×...× 
[0,m n ] (Cartesian product) is called the state space of the 
logical model and its elements are called states. 

(2) E is the set of arcs. The elements of E have the form (v i ,v j ,θ), 
where By 
convention, we define θ i,j,m i,j +1 = m i +1 (actually, θ i,j,m i,j +1 
can be defined as any number greater than m i ) and θ i,j,0 = 0. 
Let x = (x 1 ,...,x n ) be a state; we say that the k-th interaction 
for input v i of v j is active if θ i,j,k ≤ x i &lt;θ i,j,k+1 ; we denote 
this by i,j (x i ) = k. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>Table 1. Nonzero parameters for the Drosophila cell-cycle model Target Parameter</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><figDesc>0 in all other cases. Using Remark 3.2, the polynomial form of g 1 is g 1 (x) = (1−x 2 )(1−x 3 )(1−x 4 )+(1−x 2 )x 3 (1−x 4 )+(1−x 2 )(1−x 3 )x 4 + x 3 (1−x 2 )x 4 , which simplifies to g 1 = 1+x 2 .</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><figDesc>Table 1. Let x 1 = MPF, x 2 = Fizzy, x 3 = Wee1, x 4 = String. Notice that according to the network, g 1 depends on x 2 , x 3 and x 4 ; i.e. g 1 (x) = g 1 (x 2 ,x 3 ,x 4 ). The polynomial functions are:</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><figDesc>Table 2. Nonzero and unknown parameters for the Drosophila cell cycle Target Parameter</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><figDesc>Table 3. Timing for the Gröbner basis computations N T 1 T 2 T 3 T 4 T 5 = number of nodes, T r = timings (s) for f r 1 (x)−x 1 = ··· = f r n (x)−x n</figDesc><table>10 
0.002 
0.001 
0.001 
0.001 
0.001 
12 
0.003 
0.041 
0.526 
1.539 
0.342 
12 
0.001 
0.003 
0.002 
0.004 
0.009 
17 
0.004 
0.006 
0.007 
0.155 
4.95 
23 
0.002 
0.008 
0.008 
0.179 
30.276 
40 
0.011 
0.023 
0.029 
0.023 
0.047 

N </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><figDesc>0 otherwise. Then the set of dead markings is given by the solutions of the system of polynomial equations</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><figDesc>Remark 4.3. If the polynomial form of f t for all transitions t is known, then we can easily recover A using the equation C t (x)A t = f t (x)−x and hence find the P-and T-invariants.</figDesc><table></table></figure>

			<note place="foot">© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 1637 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The authors are grateful to the anonymous referees for many insightful comments and suggestions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conflict</head><p>of Interest: none declared.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">The topology of the regulatory interactions predicts the expression pattern of the segment polarity genes in Drosophila melanogaster</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Albert</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Othmer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Bio</title>
		<imprint>
			<biblScope unit="volume">223</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">The global transcriptional regulatory network for metabolism in Escherichia coli exhibits few dominant functional states</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Barrett</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Qualitative modelling of genetic networks: from logical regulatory graphs to standard Petri nets</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Chaouiya</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICATPN&apos;04</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="137" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Petri net modelling of biological regulatory networks</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Chaouiya</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Discrete Algorithms</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="165" to="177" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Modeling multi-valued genetic regulatory networks using highlevel Petri nets</title>
		<author>
			<persName>
				<forename type="first">J.-P</forename>
				<surname>Comet</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on the Application and Theory of Petri Nets</title>
		<editor>Ciardo,G. and Darondeau,P.</editor>
		<meeting>the International Conference on the Application and Theory of Petri Nets<address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="208" to="227" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Boolean network model predicts cell cycle sequence of fission yeast</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Davidich</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Bornholdt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS One</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">1672</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">The theory of autonomous linear sequential networks</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Elspas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IRE Trans. Circuit Theory</title>
		<imprint>
			<biblScope unit="page" from="6" to="45" />
			<date type="published" when="1959" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Algebraic properties of automata associated to Petri nets and applications to computation in biological systems</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Egri-Nagy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Nehaniv</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biosystems</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="297" to="307" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">A gene regulatory network model for cell-fate determination during Arabidopsis thaliana flower development that is robust and recovers experimental gene expression profiles</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Espinosa-Soto</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Plant Cell</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="2923" to="2939" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Dynamical analysis of a generic Boolean model for the control of the mammalian cell cycle</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Faure</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="124" to="131" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Petri net based model of the body iron homeostasis</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Formanowicz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Biomed. Inform</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="476" to="485" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Petri net modelling of gene regulation of the duchenne muscular dystrophy</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Grunwald</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biosystems</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="page" from="189" to="205" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Linear finite dynamical systems</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Hernández-Toledo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications in Algebra</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="2977" to="2989" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">The Dynamics of Conjunctive and Disjunctive Boolean Network Models</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Jarrah</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bull. Math. Bio., [Epub ahead of print</title>
		<imprint>
			<date type="published" when="2010-01-20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Nested canalyzing, unate cascade, and polynomial functions</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Jarrah</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica D</title>
		<imprint>
			<biblScope unit="volume">233</biblScope>
			<biblScope unit="page" from="167" to="174" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Modeling the U1 snRNP assembly pathway in alternative splicing in human cells using Petri nets</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kielbassa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Biol. Chem</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="46" to="61" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">A methodology for the structural and functional analysis of signaling and regulatory networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Klamt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">56</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">A computational algebra approach to the reverseengineering of gene regulatory networks</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Laubenbacher</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Stigler</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">229</biblScope>
			<biblScope unit="page" from="523" to="537" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">The yeast cell-cycle network is robustly designed</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="4781" to="4786" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">A network model for the control of the differentiation process in Th cells</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Mendoza</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biosystems</title>
		<imprint>
			<biblScope unit="volume">84</biblScope>
			<biblScope unit="page" from="101" to="114" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">A method for the generation of standardized qualitative dynamical systems of regulatory networks</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Mendoza</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Xenarios</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theor. Biol. Med. Model</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">13</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Genetic control of flower morphogenesis in arabidopsis thaliana: a logical analysis</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Mendoza</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="593" to="606" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Decision diagrams for the representation and analysis of logical models of genetic networks</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Naldi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">InCMSB&apos;07</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="233" to="247" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Using Petri net tools to study properties and dynamics of biological systems</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Peleg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Am. Med. Informatics Assoc</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="181" to="199" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">From logical regulatory graphs to standard Petri nets: dynamical roles and functionality of feedback circuits</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Remy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Transactions on Computation Systems Biology VII</title>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="55" to="72" />
			<date type="published" when="2006" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Discrete logic modelling as a means to link protein signalling networks with functional analysis of mammalian signal transduction</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Saez-Rodriguez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">331</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">The regulatory network of E. coli metabolism as a Boolean dynamical system exhibits both homeostasis and flexibility of response</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Samal</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Jain</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Syst. Biol</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>Article. 21</note>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">12106</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq240. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b28">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="1643" to="1637" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<monogr>
		<title level="m" type="main">Polynomial algebra of discrete models</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">Qualitative modelling of regulated metabolic pathways: application to the tryptophan biosynthesis in E. coli</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Simao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="190" to="196" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">Qualitatively modelling and analysing genetic regulatory networks: a Petri net approach</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Steggles</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="336" to="343" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">Modelling and analysing genetic networks: From Boolean networks to Petri nets</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Steggles</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computational Methods in Systems Biology. International Conference</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="127" to="141" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">Boolean formalisation of genetic control circuits</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Thomas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="565" to="583" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<monogr>
		<title level="m" type="main">Biological Feedback</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Thomas</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Ari</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>CRC Press</publisher>
			<pubPlace>Boca Raton, FL</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">Flux networks in metabolic graphs</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Warren</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">46006</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b36">
	<analytic>
		<title level="a" type="main">A remark on Scalar Equations for Synchronous Boolean Networks with Biological Applications</title>
		<author>
			<persName>
				<forename type="first">Q</forename>
				<forename type="middle">C</forename>
				<surname>Zhao</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Farrow</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Heidel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Maloney</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Rogers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Neural Netw</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="1715" to="1716" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>