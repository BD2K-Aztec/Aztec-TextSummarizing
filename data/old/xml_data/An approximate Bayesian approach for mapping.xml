
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:54+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis An approximate Bayesian approach for mapping paired-end DNA reads to a reference genome</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Anish</forename>
								<surname>Man</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Computational Biology Research Center</orgName>
								<orgName type="institution">National Institute for Advanced Industrial Science and Technology (AIST)</orgName>
								<address>
									<addrLine>Koto-ku</addrLine>
									<postCode>135-0064</postCode>
									<settlement>Tokyo</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Singh</forename>
								<surname>Shrestha</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Computational Biology Research Center</orgName>
								<orgName type="institution">National Institute for Advanced Industrial Science and Technology (AIST)</orgName>
								<address>
									<addrLine>Koto-ku</addrLine>
									<postCode>135-0064</postCode>
									<settlement>Tokyo</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Martin</forename>
								<forename type="middle">C</forename>
								<surname>Frith</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Computational Biology Research Center</orgName>
								<orgName type="institution">National Institute for Advanced Industrial Science and Technology (AIST)</orgName>
								<address>
									<addrLine>Koto-ku</addrLine>
									<postCode>135-0064</postCode>
									<settlement>Tokyo</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genome analysis An approximate Bayesian approach for mapping paired-end DNA reads to a reference genome</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">8</biblScope>
							<biblScope unit="page" from="965" to="972"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt073</idno>
					<note type="submission">Received on November 29, 2012; revised on January 22, 2013; accepted on February 7, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Michael Brudno Contact: martin@cbrc.jp Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Many high-throughput sequencing experiments produce paired DNA reads. Paired-end DNA reads provide extra positional information that is useful in reliable mapping of short reads to a reference genome, as well as in downstream analyses of structural variations. Given the importance of paired-end alignments, it is surprising that there have been no previous publications focusing on this topic. In this article, we present a new probabilistic framework to predict the alignment of paired-end reads to a reference genome. Using both simulated and real data, we compare the performance of our method with six other read-mapping tools that provide a paired-end option. We show that our method provides a good combination of accuracy, error rate and computation time, especially in more challenging and practical cases, such as when the reference genome is incomplete or unavailable for the sample, or when there are large variations between the reference genome and the source of the reads. An open-source implementation of our method is available as part of Last, a multipurpose alignment program freely available at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Many high-throughput sequencers provide a paired-end option, in which each of the two opposite strands of a DNA fragment is read from the edge to the interior in the 5 0 –3 0 direction, generating a pair of reads. Paired-end reads can be obtained by a simple modification to the standard single-end workflow; yet, they provide several benefits over single-end reads. They contain extra positional information that aids in accurate mapping of reads to a reference, for instance, by disambiguating alignments when one of the ends aligns to a repetitive region. They are also extremely useful in downstream analyses of structural variations, such as detection of indels or rearrangements. In this article, we focus on the former: the task of mapping a set of paired-end reads to a reference genome, which is often the first and fundamental step in inferring biological phenomena from high-throughput sequencing data. To motivate our work, we compare in<ref type="figure">Figure 1</ref>the results of mapping 1 million pairs of simulated human reads to the human reference using various alignment tools in their paired-end and single-end modes. For nearly all the aligners, the use of pairing information significantly improves mapping accuracy. Various read mapping tools support paired-end data, although not all provide adequate statistical treatment. Mappers such as Bowtie2 (<ref type="bibr" target="#b4">Langmead and Salzberg, 2012</ref>), SOAP2 (<ref type="bibr" target="#b5">Li et al., 2009</ref>) and GSNAP (<ref type="bibr" target="#b9">Wu and Nacu, 2010</ref>) require the user to input the expected value and standard deviation of the genomic distance between the two ends. Based on this information, they flag a pair of mapped reads as being either 'concordant' or 'discordant', for possible use in analyses of structural variations. However, the user may not know before-hand the expected genomic distance, especially when relying on third-party datasets—some provide reliable information about the fragment size distribution, but not all do. BWA (<ref type="bibr" target="#b5">Li and Durbin, 2009</ref>) does not rely on user-provided fragment size thresholds and estimates the fragment size distribution from uniquely mapped pairs. Another feature of the paired-end strategy of BWA is that if only one end is reliably mapped, it attempts to 'rescue' the other end by aligning it using the Smith–Waterman algorithm in the area implied by the inferred fragment size. Like BWA, STAMPY (Lunter and<ref type="bibr" target="#b7">Goodson, 2011</ref>) learns the fragment size distribution from the input data and also attempts to rescue mates for pairs whose ends do not map uniquely and at sufficiently close distance to each other. Additionally, it uses an elaborate probabilistic model that incorporates pairing information to compute for a pair of alignments of a read pair, the posterior probability of having predicted an incorrect alignment. Novoalign (www.novocraft. com) computes a similar mapping quality for each paired alignment, but it relies on the user to provide the fragment size distribution. We propose a new approach to apply pairing information for mapping paired-end reads. We first align each read independently to obtain candidate alignments. For each candidate, we apply our new probabilistic model to estimate the posterior probability that this alignment is incorrect by considering other candidate alignments of the read, those of its mate and the fragment size distribution. To allow for the possibility that paired reads may actually come from disjoint locations in the reference, our model includes a prior probability on the occurrence of such an event. One major departure from previous methods is that we calculate marginal posterior probabilities for each candidate alignment of a read (as opposed to associating this value to a read pair). Our method also benefits from using Last (<ref type="bibr" target="#b3">Kielbasa et al., 2011</ref>) in the alignment phase. Last, like BLAST, computes *To whom correspondence should be addressed. ß The Author 2013. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited. local alignments based on a seed-and-extend technique, but it is fast because of the use of adaptive seeds—thus allowing the application of classic sequence alignment techniques to the problem of mapping giga-scale sized sets of reads generated by high-throughput sequencers. We describe our method in detail in Section 2. We compare the performance of our method with six other mapping tools in Section 3. For each mapping tool, the technique used to align individual reads hugely influences the final outcome, and as it is not feasible to isolate the pairing algorithm, we are comparing to some extent the performance of the alignment algorithms as well. Many articles that introduce new read mapping tools or survey them provide benchmarking tests that tend to be not very informative—only ideal or easy cases are tested—or even misleading—performance is measured by counting the number of reads mapped, with complete disregard to the correctness of mapping. In this article, we conduct more rigorous tests that cover various practical scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PROPOSED METHOD</head><p>Our method comprises the following steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Outline</head><p>(1) Perform local alignment between the genome and each read individually, and keep alignments that have score higher than a threshold.</p><p>(2) Using these alignments, estimate the distribution of fragment lengths.</p><p>(a) For each read pair, get all pairs of alignments to opposite strands of the same chromosome. For every such alignment pair, infer the fragment length. If the read pair has exactly one distinct fragment length, record it. Note that we do not impose any bound on the size of the inferred fragment.</p><p>(b) Find the sample median and quartiles of the fragment lengths.</p><p>(c) Assume the fragment lengths are normally distributed, with mean ¼ sample median and standard deviation ¼ interquartile range/1.34898. We use this method of estimation as it is robust to outliers. (1.34898 is the interquartile range of a normal distribution with standard deviation of 1).</p><p>(3) Estimate the probability that each alignment represents the genomic source of the read, using a probabilistic model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Probabilistic model</head><p>We shall now describe Step 3 in detail. Consider a pair and of reads obtained from sequencing two ends of a DNA fragment, and let a, b be a pair of predicted alignments of and , respectively, to the reference. Let d be the prior probability that a read pair comes from disjoint genomic locations. This might arise from real differences between the reference and the source of the reads, or from errors in obtaining the reads or the genome sequence. The value of d can either be provided by the user or learned from the data once the fragment length distribution has been estimated (in our experiments, we use a default value of d ¼ 0:01). If we assume that a pair comes from any location in the reference with uniform probability, we can express the prior probability as: pða, b, IÞ ¼ d=ð2gÞ 2 if I ¼ 0, ð1 À dÞnðf ab Þ=2g if I ¼ 1, where I serves as an indicator variable (0 for reads being disjoint,alignments a and b and T is the scale factor, by exponentiating the scores, we arrive at: pð, ja, b, IÞ / e ðsa=TÞ e ðs b =TÞ :</p><p>Finally, letting A and B denote the set of all possible alignments of and to the reference, we can calculate the posterior probability pðaj, Þ of a indicating the true genomic source of the read as follows:</p><formula>pðaj, Þ ¼ X 1 I¼0 X b2B pða, b, Ij, Þ ¼ X 1 I¼0 X b2B pð, ja, b</formula><p>, IÞpða, b, IÞ</p><formula>P 1 I¼0 P a2A P b2B pð, ja, b</formula><p>, IÞpða, b, IÞ ð1Þ</p><p>Naturally, it is not feasible to exhaustively search A and B; therefore, we approximate (1) by restricting A and B to be the set of alignments that are produced by Last in Step 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Efficient computation</head><p>To calculate the posterior probabilities efficiently, we use the following intermediate values:</p><formula>e a ¼ exp s a T , x ¼ d 2g X b2B e b , y a ¼ ð1 À dÞ X b2B e b nðf ab Þ, z a ¼ e a ðx þ y a Þ, and z ¼ X a2A z a :</formula><p>Then Equation (1) can be rewritten as:</p><p>pðaj, Þ ¼ z a z ð2Þ</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Accounting for alignment cut-off</head><p>Step 1 inevitably uses a cut-off: it returns alignments with score ! s min. This may lead to false-positive mappings. For example, suppose we have a read pair that is truly conjoint, where the first read's true alignment has score ¼ s min À 1, and the second read's true alignment has score ) s min. Suppose the first read has a random alignment with score ¼ s min. Our probabilistic method will confidently predict an incorrect mapping. To solve this problem, we modify our probabilistic method slightly. We assume an unlucky case: the first read has an alignment with score ¼ s min À 1, at the optimal distance from the best alignment of the second read (as we use integer scores, s min À 1 is the highest possible score 5s min ). Let s max be the maximum score of any alignment in B and n max be the maximum value of n(f) for any f. We modify Equation (2) as:</p><formula>pðaj, Þ ¼ z a z þ w ,</formula><p>where w ¼ e ððs min À1Þ=TÞ e ðsmax=TÞ ð1 À dÞn max</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">The case where jBj ¼ 0</head><p>The preceding calculations do not work when jBj ¼ 0. In this case, we define the result to be the same as if there was one alignment in B on a different chromosome to any alignment in A.</p><formula>z a ¼ e a d 2g z ¼ X a2A z a w ¼ e ððs min À1Þ=TÞ ð1 À dÞn max pðaj, Þ ¼ z a z þ w</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Generation of simulated data</head><p>Although it is desirable to work with real datasets, they are accompanied by the problem of not knowing the true genomic location of the reads. This limits us to working with simulated data. Using Dnemulator (www.cbrc.jp/dnemulator), a package for simulating DNA sequencing errors and polymorphisms, we generated paired-end reads from chromosomes 1–22 and X of the human genome hg19. Starting with hg19, we simulated a diploid genome by incorporating polymorphisms into it. This was done by picking real alleles based on their frequencies obtained from snp132Common.txt, a SNP database available from the UCSC Genome Database (<ref type="bibr" target="#b2">Fujita et al., 2011</ref><ref type="bibr" target="#b8">, Sherry et al., 2001</ref>). Next, from the simulated genome, we randomly drew a million fragments from which paired-end reads of length 100 bp were generated. Finally, we simulated sequencer errors, according to the per-base error probabilities of the first million pairs of reads in ERR037752, downloaded from DDBJ. In a similar manner, simulated paired-end reads of lengths 76 and 35 bp were also generated with error profiles based on datasets ERR007826 and ERR000408, respectively. The error profiles of these three datasets are shown in<ref type="figure" target="#fig_0">Figure 2</ref>. The Supplementary Material includes further details about the simulation workflow. Additionally, we generated a second 100 bp-read dataset using the same 100 bp reads as aforementioned, but simulating sequencing error based on error probabilities from SRR067577. As SRR067577 contains significantly more low-quality reads than ERR037752, this dataset allowed us to understand the effect of error profile on aligner performance. All experiments we describe below were also repeated on this dataset. Because of space constraints, we provide those results in the Supplementary Material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Mapping simulated human reads to human reference</head><p>To start with a relatively easy test, we mapped our three sets of simulated reads to the human reference genome containing Chromosomes 1–22 and X of hg19. For aligners that require the user to input the fragment length statistics, we provided the exact values used to produce the simulated dataset. The results are shown in<ref type="figure">Figure 3</ref>by solid (non-dashed) lines. For the dataset containing reads of length 35 bp, edit-distance– based aligners outperform Last. For longer reads, Last is among the top performers. Novoalign is consistently the best aligner, but its run time gets extremely large for short reads. To see how sequencer error rate affects the results, we repeated this experiment with the extra 100 bp dataset. The results (Supplementary<ref type="figure">Fig. S4a</ref>) show that Last does better than all the other aligners when the reads are more error-ridden. The results in<ref type="figure">Figure 1</ref>were also obtained using this dataset. And while Last does not require explicit trimming of reads, failing to do so can significantly worsen the performance of some aligners like BWA and SOAP. We address this issue of read trimming in greater detail in the Supplementary Material. Finally, one concern about Last might be that the run time for longer reads is relatively slow. We describe in Section 4.2 several techniques to make Last achieve higher speeds without degrading accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Mapping to an incomplete reference</head><p>Because of incompleteness of sequence assembly, the available reference genome may have large chunks missing. Some reads possibly come from regions that are missing in the reference, confounding both the alignment algorithm, as well as the pairing algorithm. To simulate this scenario, we repeated the earlier experiment with the same set of simulated reads, but with a part of the reference (Chromosome 5 was chosen arbitrarily) deliberately removed. The results are shown in<ref type="figure">Figure 3</ref>by dashed lines. As Chromosome 5 accounts for $5% of the full reference, it is natural that the number of correct mappings decreases by about the same proportion. It is interesting, however, that the error rate also increases, even for Novoalign, which showed very low error rates in the test with the full reference.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Xenomapping</head><p>A great majority of organisms lack a reference genome. Even for mammals, of which there are45000 species, only a small number of them have been sequenced. For samples with no available reference, reference of a related species is used. This is also the case for extinct species. While divergence between the twogenomes can make the task of aligning individual reads harder, it can also make the pairing phase more challenging, as a pair of reads may map to disjoint locations because of rearrangements in the two genomes since their last common ancestor. To simulate this situation, we map our simulated human reads to the rhesus monkey reference (rheMac2). To decide the correctness of reported alignments, we use the human–rhesus pairwise alignments (rheMac2.hg19.all.chain) provided by UCSC. In doing so, we are assuming that the alignments provided by UCSC are correct, which might not always be the case; however, we can afford to neglect this issue, as it affects all mappers equally. The results are shown in<ref type="figure">Figure 4</ref>. Last is again among the top performers, alongside Bowtie, which was used in the local alignment mode, and Stampy. As would be expected, edit-distance–based methods like BWA, GSNAP and SOAP perform poorly because the expected number of mismatches between the read and reference is high. The run times, shown in<ref type="figure">Figure 4b</ref>, are also worth noting. Most of the other aligners get drastically slow compared with their run times for mapping human reads to human reference. A similar</p><formula>p b 6 7 = h t g n e l d a e R ) b ( p b 0 0 1 = h t g n e l d a e R ) a ( e m i t g n i n n u R ) d ( p b 5 3 = h t g n e l d a e R ) c ( Fig. 3. (a–c)</formula><p>The result of mapping 1 million pairs of simulated short reads of various lengths to Chromosomes 1–22 and X of hg19, respectively. Most aligners assign to each reported alignment a mapping quality score, which reflects the aligner's estimate of the probability that the alignment is incorrect. Although Last reports raw probability values, some aligners like BWA and Bowtie apply phred-like scaling to obtain discretized integer scores. In either case, the mapping results from an aligner can be filtered to obtain only those alignments that pass a certain mapping quality threshold. Each curve in the plots above is obtained from connecting discrete points, each point corresponding to the fraction of wrongly mapped and the fraction of correctly mapped reads at a certain mapping quality threshold. When varying the mapping quality threshold, we were careful not to go below the mismap probability of 0.5. As it is not possible to have more than one alignment with mismap probability 50.5, this avoids the complications of having to evaluate cases of multiple/secondary mappings. Solid lines are for mapping reads to a complete reference, and dashed lines are for the test with reference with chromosome 5 missing. An exception is SOAP, which does not provide mapping quality values; therefore, it is represented by a single data point in each plot. (d) The running time for creating the index of the reference genome and the alignment time corresponding to the results of (a–c), when executed on a single core of a machine with Intel(R) Core(TM) i7-3770K CPU @ 3.50 GHz and 32 GB random access memory trend was observed for another dataset of read length 100 bp (Supplementary<ref type="figure">Fig. S4b</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Chromosome translocations</head><p>Even within the same species, real differences between the source and reference genomes can arise because of chromosomal abnormalities in the source or the reference that are caused by rearrangements of segments of chromosomes. This phenomenon of translocations is a common occurrence, for instance, in cancer cells. If a pair of reads happens to span a translocation break point, the two ends might be disjoint in the reference. This could possibly confuse the pairing algorithm. To test whether mappers are tolerant to this kind of phenomenon, we randomly shuffled a portion (40%) of the reads in one of the fastq files, thus re-assigning those pairs. Although this does not truly reflect the natural process of chromosomal translocations, it does have a similar effect of dismembering paired reads. Also, although 40% of the pairs being disjoint is unrealistic even for, say, cancer genomes, the main interest of many studies lies precisely in these reads. Therefore, it is imperative that aligners be able to map these reads accurately, and the objective of this test was to see how well this is done.<ref type="figure">Figure 5</ref>shows the result of mapping these shuffled reads compared with the result of Section 3.2. We can see that while Last and Novoalign are only slightly affected by shuffling, the remaining aligners see a sharp decrease in accuracy. Repeating this experiment on our second 100 bp dataset yielded similar results (Supplementary<ref type="figure">Fig. S5</ref>). It must be pointed out that in this experiment, we have left the setting of d, the prior disjoint probability, to its default value of 0.01. We describe in Section 4.5 and the Supplementary Data how choosing the value of d wisely can improve Last's performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Testing with real data: flow-sorted human X-chromosome</head><p>Simulation may miss some aspects of real data; therefore, it is desirable to work with real datasets. Real data means lack of knowledge of true genomic locations of reads. We worked around this problem by using paired-end reads (DDBJ dataset ERX000112) of flow-sorted X chromosomes. This dataset contains 2 703 583 pairs of reads of length 35 bp. As we know that the reads come from the X-chromosome, we can treat the reads mapped to a chromosome other than X as being wrongly mapped. Results of mapping these reads to chromosomes 1–22 and X of hg19 are shown in<ref type="figure" target="#fig_2">Figure 6</ref>. That the results closely resemble those in<ref type="figure">Figure 3c</ref>works as a validation of our simulation technique. Certainly, we must take into account possible contamination of DNA from non-X chromosome in the dataset. The experiment metadata claims 90% purity, which we corroborated by using Last in a slow-but-sensitive mode that resulted in 9–10% of the mapped reads being mapped to non-chromosome X.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Simulation limitations</head><p>Our simulation fails to capture some real-world details. Our method of simulating sequencer errors based on the per-base</p><p>) b ( ) a (<ref type="figure">Fig. 4</ref>. Xenomapping. (a) The result of mapping 1 million pairs of simulated human reads of length 100 bp to rheMac2 (dashed lines) compared with that of mapping the same reads to hg19 (solid lines). (b) The running time (excluding the genome indexing step) corresponding to the results of (a)<ref type="figure">Fig. 5</ref>. Result of mapping 1 million pairs of simulated human reads of length 100 bp with 40% of reads in one of the fastq files shuffled (dashed) compared with no shuffling (solid)</p><p>error probability reported in experimental datasets is more realistic than previous methods of introducing uniform random errors. However, we assume that the reported probabilities are correct, which might not always be true depending on the sequencer and the experiment. Also, we do not consider adapter sequences, which in real experiments might be attached to reads. Furthermore, we have assumed that our read sets are free of contaminants or artifacts, which is unlikely with real data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Speeding up Last</head><p>Applying several simple workarounds, we can significantly improve the speed of Last without degrading its accuracy. The alignment phase of Last takes approximately two-thirds of the total running time. Last performs gapless alignments significantly faster than gapped alignments; for cases where the sample and reference have few indel polymorphisms between them, Last can be used in the gapless mode. We show in the Supplementary Material that mapping human reads to the human reference in a gapless mode reduces the running time of the alignment phase by 450% with no cost to accuracy. The pairing phase can also be made faster. As the paired-end module is written in python, file operations can be costly. As its default output file format, the alignment phase uses maf format. Changing this to the smaller tabular format can significantly bring down the running time of the pairing phase by 30% (Supplementary Data). Also, greater speed can be achieved by running the paired-end script using a faster implementation of Python, such as PyPy. The running times reported in this article were obtained when using PyPy. Another way to speed-up the pairing phase is to quickly estimate the fragment size distribution using a large-enough sample instead of using the complete set of aligned reads, and then apply this estimate to calculate the mismap probabilities. Avoiding temporary files by using named pipes also avoids speed issues due to slow disk access operations. These speed-up techniques are discussed in the Supplementary Material and also appear in the user manual provided with the program.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Extension to RNA</head><p>Last allows mapping of paired-end RNA reads. To handle RNA data, we modify the fragment length distribution model and the prior disjoint probability. We observed from a test with human RNA-seq data that the distance distribution resembles a mixture of two log-normal distributions, having a prominent peak for shorter introns and a much smaller peak for long introns. For simplicity, we assume that the genomic fragment lengths of the reads come from a single log-normal distribution. To compensate for not incorporating longer introns in the model, the default disjoint probability value is increased from its default value of 0.01 to 0.02.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Circular DNA</head><p>Many prokaryotic cells as well as eukaryotic organelles contain circular chromosomes. With circular chromosomes, we must ensure that we do not consider as disjoint a pair of reads that straddle the position at which the circular sequence is disrupted to obtain its linear representation. Last provides an option to specify whether any chromosomes in the reference are circular.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Learning prior disjoint probability</head><p>In our tests, we have used the default value for the prior probability of a read pair being disjoint. Instead of relying on a default value, it is possible to estimate it from the set of uniquely mapping reads. Our experiments with setting this value to match the actual proportion of disjoint pairs show that it slightly improves accuracy. However, we are yet to implement this feature in the program. In contrast, changing a similar prior probability setting of Stampy brought about no significant changes in performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUDING REMARKS</head><p>In this article, we have shown that Last is a versatile aligner, and it is especially promising for 'hard' cases. We believe this is partly due to our pair model and partly due to our reliance on traditional sequence alignment techniques. Edit-distance–based methods, on the other hand, are specialized for almost-perfect matches, which basically restricts their use on short and less erroneous reads. Recent advances in sequencing technologies suggest the contrary—while reads are getting longer, they still remain error prone.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.2.</head><figDesc>Fig. 2. Error profiles of the first 1 million reads of the real datasets based on which we have simulated sequencer errors. The horizontal axis shows position along the 5 0 –3 0 direction along the read, and the vertical axis shows for each position the frequency of reads based on their phred-scaled quality scores</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>The authors thank Hugues Richard, Ross Leung and the members of the CBRC Genome Meeting for helpful discussions. Conflict of Interest: none declared.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.6.</head><figDesc>Fig. 6. Result of mapping 2 703 583 pairs of 35 bp-long reads from DDBJ dataset ERX000112 to Chromosome 1–22 and X of hg19. The horizontal axis shows the fraction of reads that were mapped, and the vertical axis shows the fraction of the mapped reads that were mapped to the X chromosome. The figure at the bottom end of each curve indicates the running time (excluding time for genome indexing) in minutes</figDesc></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="1"> for conjoint), 2 g is the number of bases in both strands of the haploid genome, f ab is the fragment length implied by a and b and nðf ab Þ is the probability of fragment length based on the distribution estimated in Step 2. Next, we wish to compute the likelihood pð, ja, b, IÞ of having observed and given alignments a and b. Given an alignment between a pair of sequences, classical sequence alignment methods assign it a score, which is a measure of the likelihood that the sequences are related as opposed to being unrelated (Durbin et al., 1998). This is done based on a scoring model, which assigns a score S xy for aligning a pair of bases x, y 2 fa, c, g, tg. S xy can be interpreted as a log likelihood ratio: S xy ¼ T ln M xy A x B y , where A x is the probability (abundance) of base x in the reference, B y is the probability of y in the query, M xy is the probability of x aligned to y in a true alignment and T is an arbitrary scale factor. This scoring model can be generalized to include gaps (Durbin et al., 1998) and also to incorporate sequence quality data (Frith et al., 2010). As Last is based on this generalized scoring model, the score assigned by Last to an alignment is the log of its likelihood ratio. Therefore, if s a and s b are the scores of Fig. 1. Paired-end versus single-end mode. Comparing the results of mapping the same set of simulated 100 bp-long human reads with the human reference genome hg19, in paired-end mode (solid lines) and single-end mode (dashed lines). The caption of Figure 3 describes how the lines in the plot above are computed. Details of the simulation process are provided in Section 3.1 966 A.M.S.Shrestha and M.C.Frith at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="3"> PERFORMANCE TESTING In this section, we compare the results of testing our method with those of other mapping tools that provide a paired-end option. We tested the following: Novoalign, Stampy, BWA, Bowtie, GSNAP and SOAP. Although the list is not comprehensive, the tools chosen are representative of the different paired-end mapping strategies discussed in Section 1 that have been used so far to deal with paired-end reads. Obviously the performance is also hugely affected by how individual reads are mapped because this phase precedes the pairing phase for most aligners. With our selection of mapping tools, we have also attempted to cover a wide range of techniques that are used for mapping individual reads. BWA, Bowtie and SOAP use the Burrows– Wheeler transform to index the reference, whereas Novoalign, Stampy and GSNAP use hash-bashed techniques. BWA, SOAP and GSNAP search for semi-global alignments that contain no more than a certain user-specified number of mismatches and gaps, whereas Stampy and Novoalign follow the traditional seed-and-extend technique with affine gap penalties. Newer versions of Bowtie and BWA can perform both semi-global, as well as local alignments. The version information of each aligner is provided in the Supplementary Material. We conducted a series of tests that cover a variety of practical scenarios, such as when the reference is incomplete, when the sample lacks a reference and has to be mapped to the reference of a close species or when there are large variations between the reference and the sample that have the effect of confounding the pairing relation. Our results, which we describe later in the text, show that Last provides a good combination of sensitivity, error rate and computation time and is consistently among the top performers in all of the tests. However, we realize that each aligner comes with numerous parameter settings that provide a trade-off among sensitivity, error rate and time, and it is difficult to judge performance based on a single set of parameters. Here, we have tried to show the aligners in the best light possible. For most aligners, we report the best results after having tried various parameter settings, details of which can be found in the Supplementary Material. With Last, we use the same settings throughout all the tests so as to avoid deliberate optimization to fit the data. 967 Bayesian approach for paired-end DNA at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="969"> Bayesian approach for paired-end DNA at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">A.M.S.Shrestha and M.C.Frith at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Bayesian approach for paired-end DNA at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<monogr>
		<title level="m" type="main">Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Durbin</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>UK.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Incorporating sequence quality data into alignment improves DNA read mapping</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">C</forename>
				<surname>Frith</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page">100</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">The UCSC genome browser database: update 2011</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">A</forename>
				<surname>Fujita</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="876" to="882" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Adaptive seeds tame genomic sequence comparison</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">M</forename>
				<surname>Kielbasa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="487" to="493" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Fast gapped-read alignment with Bowtie 2</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Langmead</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">L</forename>
				<surname>Salzberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="357" to="359" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Fast and accurate short read alignmen with BurrowsWheeler transform</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Durbin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1754" to="1760" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">SOAP2: an improved ultrafast tool for short read alignment</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1966" to="1967" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Stampy: a statistical algorithm for sensitive and fast mapping of Illumina sequence reads</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Lunter</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Goodson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="936" to="939" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">dbSNP: the NCBI database of genetic variation</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">T</forename>
				<surname>Sherry</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="308" to="311" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Fast and SNP-tolerant detection of complex variants and splicing in short reads</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">D</forename>
				<surname>Wu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Nacu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="873" to="881" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">S</forename>
				<surname>Shrestha</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">C</forename>
				<surname>Frith</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>