
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:55+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Bioinformatics-btq063.tex] Systems biology Standard virtual biological parts: a repository of modular modeling components for synthetic biology</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">M</forename>
								<forename type="middle">T</forename>
								<surname>Cooling</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Auckland Bioengineering Institute</orgName>
								<orgName type="institution" key="instit2">University of Auckland</orgName>
								<address>
									<settlement>Auckland</settlement>
									<region>New Zealand</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">V</forename>
								<surname>Rouilly</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Bioengineering</orgName>
								<orgName type="institution">Imperial College London</orgName>
								<address>
									<postCode>SW7 2AZ</postCode>
									<settlement>London</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">G</forename>
								<surname>Misirli</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">Newcastle University</orgName>
								<address>
									<postCode>NE1 7RU</postCode>
									<settlement>Newcastle upon Tyne</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">J</forename>
								<surname>Lawson</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Auckland Bioengineering Institute</orgName>
								<orgName type="institution" key="instit2">University of Auckland</orgName>
								<address>
									<settlement>Auckland</settlement>
									<region>New Zealand</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">T</forename>
								<surname>Yu</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Auckland Bioengineering Institute</orgName>
								<orgName type="institution" key="instit2">University of Auckland</orgName>
								<address>
									<settlement>Auckland</settlement>
									<region>New Zealand</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">J</forename>
								<surname>Hallinan</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">Newcastle University</orgName>
								<address>
									<postCode>NE1 7RU</postCode>
									<settlement>Newcastle upon Tyne</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">A</forename>
								<surname>Wipat</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">Newcastle University</orgName>
								<address>
									<postCode>NE1 7RU</postCode>
									<settlement>Newcastle upon Tyne</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Alfonso</forename>
								<surname>Valencia</surname>
							</persName>
						</author>
						<title level="a" type="main">Bioinformatics-btq063.tex] Systems biology Standard virtual biological parts: a repository of modular modeling components for synthetic biology</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS ORIGINAL PAPER</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="issue">7</biblScope>
							<biblScope unit="page" from="925" to="931"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq063</idno>
					<note type="submission">Received on July 12, 2009; revised on February 3, 2010; accepted on February 11, 2010</note>
					<note>[ Page: 925 925â€“931 Contact: m.cooling@auckland.ac.nz Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Fabrication of synthetic biological systems is greatly enhanced by incorporating engineering design principles and techniques such as computer-aided design. To this end, the ongoing standardization of biological parts presents an opportunity to develop libraries of standard virtual parts in the form of mathematical models that can be combined to inform system design. Results: We present an online Repository, populated with a collection of standardized models that can readily be recombined to model different biological systems using the inherent modularity support of the CellML 1.1 model exchange format. The applicability of this approach is demonstrated by modeling gold-medal winning iGEM machines. Availability and Implementation: The Repository is available online as part of http://models.cellml.org. We hope to stimulate the worldwide community to reuse and extend the models therein, and contribute to the Repository of Standard Virtual Parts thus founded. Systems Model architecture information for the Systems Model described here, along with an additional example and a tutorial, is also available as Supplementary information. The example Systems Model from this manuscript can be found at http://models.cellml.org/workspace/bugbuster. The Template models used in the example can be found at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Since the discovery of recombinant DNA technology, scientists have manipulated living organisms in order to produce biofuels, drugs or other biomaterials. Over the years, a biotechnology industry has emerged exploiting this technology and delivered a number of successes (<ref type="bibr" target="#b5">Carlson, 2007</ref>). However, in most cases, the development of biotechnology applications has been the product of a manually driven, trial-and-error-based approach. In order to achieve efficient and reliable biological system fabrication, synthetic biology promotes the application of * To whom correspondence should be addressed. engineering principles such as abstraction, standardization and characterization to biology (<ref type="bibr" target="#b10">Endy, 2005</ref>). These concepts have proven to be crucial in other engineering disciplines in order to mature from 'dedicated craftsmanship' to successful industrial solutions. Arguably, to date in synthetic biology, the best example of such an approach is the Registry of Standard Biological Parts (SBPs) (<ref type="bibr" target="#b20">Peccoud et al., 2008</ref>). The Registry (http://www.partsregistry.org) provides a collection of standard DNA parts (BioBricks) (<ref type="bibr" target="#b15">Knight, 2005</ref>) that have been designed to facilitate DNA assembly. Through the International Genetically Engineered Machine (iGEM, http://www.igem.org) competition, the use of the Registry has clearly demonstrated the power of standardization in biology to stimulate innovation and creativity (<ref type="bibr" target="#b13">Goodman, 2008</ref>). A critical lesson learnt from other engineering disciplines is that mathematical modeling can dramatically increase the speed of the design process as well as reducing the cost of development. A 'Holy Grail' in biological modeling would be to design reliable and robust biological systems in silico prior to fabrication, just as aeronautic engineers design planes using their computer-aided design (CAD) tools. CAD tools are already being developed in order to ease the process of designing synthetic biological systems (<ref type="bibr" target="#b12">Goler et al., 2008</ref>). However, they currently lack access to modular and reusable mathematical models. Accurate models of SBPs are required for the prediction of system function, but it is also crucial that mechanisms to easily compose part models into complete systems are available. Therefore, in parallel to increasing the number of parts available and characterizing them experimentally, a logical extension to the Registry would be to build a repository of modular models of SBPs to complement the physical part Registry (<ref type="bibr" target="#b23">Rouilly et al., 2007</ref>). Here we describe the development of an online repository of Standard Virtual Biological Parts (SVPs)â€”mathematical model components describing the function of SBPs which can be downloaded, extended and recombined to aid the design, in silico, of synthetic biological systems. Repositories of models are already available, such as the BioModels database (<ref type="bibr">LeNovere et al., 2006</ref>). However, the curated models in this database are monolithic and do not allow further composition without some modification. Previous work has already explored the importance of modularity in modeling biological systems. For example, Rodrigo et al. reports the use of a library of parts encoded in SBML (<ref type="bibr" target="#b21">Rodrigo et al., 2007</ref>). The composition of models has also been demonstrated using the modeling system ProMoT (<ref type="bibr" target="#b18">Mirschel et al., 2009</ref>) and the Modeling Description<ref type="bibr">[</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M.T.Cooling et al.</head><p>Language (<ref type="bibr" target="#b17">Marchisio and Stelling, 2008</ref>). Both studies make valuable contributions; however, the model composition must be supported directly by the software, rather than being supported directly by the model description language. CellML (<ref type="bibr" target="#b7">Cuellar et al., 2003</ref>) is a widely used model exchange protocol supported by domain-non-specific tools, technologies and initiatives. Importantly, version 1.1 of the CellML specification includes explicit support for modularity, allowing the construction of complex models from components without modification (<ref type="bibr" target="#b6">Cooling et al., 2008</ref>). CellML models are ordinary differential equation (ODE) based, so may not be applicable when modeling very small numbers of molecules or where intrinsically stochastic processes (such as noise-induced phenomena) are considered present and important enough to model explicitly. However, ODE systems can be considered to represent the average behavior of a large class of even stochastic systems assuming that the biological reactions take place in 'well-stirred' compartments (<ref type="bibr" target="#b24">Schilstra et al., 2008</ref>), and are useful for general synthetic biological system design. Computer science research has yielded promising alternative formalisms such as BlenX (<ref type="bibr">Dematte et al., 2008</ref>), or more recently P-systems extended for modularity (<ref type="bibr" target="#b22">Romero-Campero et al., 2009</ref>) which also provide composition of modular models. However, CellML has a proven track record in representing intracellular processes in systems biology (<ref type="bibr" target="#b14">Hunter and Borg, 2003</ref>), and already has an established framework for multi-scale modeling (<ref type="bibr" target="#b19">Nickerson et al., 2006</ref>), and established tools (<ref type="bibr" target="#b11">Garny et al., 2008</ref>). These features make CellML an apt choice for the model representation format. Since the requirements for standard models may not be known without varied experience, we advocate a 'bottom-up' approach to the development of a standard via iterative use by, and feedback from, the community. To begin the process, we present here an architecture for SVPs and an online repository to support them. We demonstrate the concepts by developing SVPs for some common SBP types, and illustrate further by combining these modular CellML models into models of synthetic biological systemsâ€” specifically, examples from gold-medal winning iGEM projects. We make all these models publically accessible online for future reuse and enhancement by the global synthetic biology community.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">SYSTEM AND METHODS</head><p>We begin by describing the overall architecture for SVPs and how they can be combined into models of synthetic biological systems. We then describe the Repository developed to cater for the collaborative development of models that fit this architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">SVPs overview</head><p>Following insights on model modularization derived in previous work in Systems Biology (<ref type="bibr" target="#b6">Cooling et al., 2008</ref>), mathematical models of common SBP types from the Registryâ€”promoters, ribosome binding sites (RBSes), RNA and protein coding sequences (CDSes)â€”were developed. The models were constructed with well-defined interfaces such that they are composable without modification (see Section 3 for more details).<ref type="figure" target="#fig_0">Figure 1A</ref>shows a schematic of a simple genetic circuit designed to produce a protein 'A'. From a promoter, RNA containing a single RBS and a CDS is transcribed. These elements are SBPs as might be contained in the Registry of SBPs. While SBPs cover genetic elements, there are potentially many other intracellular events occurring in a single cell or chassis. These include the reactions between gene products which are crucial for the genetic circuit to, these include an Escherichia coli chassis (to give volume information), a promoter, an RBS, a protein CDS, two degradation reactions (for the RNA and for protein A) and the C complex formation reaction. Both the Systems Model and the SVPs may also aggregate components representing mathematical templates, including, from left to right across the bottom of (B): Time, Well-stirred Bag (used by E.coli chassis component), Constitutive Promoter (used by the promoter SVP), RBS (used by the RBS SVP), Protein CDS (used by the protein CDS SVP for species A), a unidirectional reaction (used by the degradation reaction SVPs) and a bidirectional reaction (used by the C complex formation reaction SVP). The species Template (housing an ODE for keeping track of the concentration of the species) is also used multiple times, once for each molecular species of interest in the Systems model, including the RNA. SVPs may represent SBPs or bioenvironmental elements, with the former potentially being linked to a record in the SBP Registry. influence the biological system, and may also include proteins and processes that are abstracted to lumped-parameter sub-models, such as degradation of gene products or significant reactants. We represent these entities and processes under the umbrella term of 'bioenvironment' models. As shown in<ref type="figure" target="#fig_0">Figure 1A</ref>, protein 'A', produced by translation, is a reactant in the bidirectional reaction forming complex 'C' on combination with existing protein 'B'. This reaction, and the corresponding degradation reactions, do not relate to SBPs, but are nonetheless crucial to the functioning of the system. In our formulation, they are considered part of the bioenvironment, and like SBPs are modeled as SVPs.<ref type="figure" target="#fig_0">Figure 1B</ref>shows how the genetic circuit and associated bioenvironment would be modeled with SVPs. We use three levels of modeling abstraction. The top level, denoted 'Systems Models', contains models of entire systems of interest. Systems Models link to models in the lower levelsâ€”the SVPs and Templatesâ€”aggregating in-memory copies of them to build up the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Page: 927 925â€“931</head><p>SVPs desired biological functionality. SVPs consist of mathematical formulations that model an SBP or bioenvironmental function, coupled with associated kinetic parameters. Their inputs and outputs are so designed that they can be easily reused and composed without modification into a 'Systems Model'. The lowest level is the 'Template' level. Here, a model is given for each specifically different mathematical formulation (<ref type="bibr" target="#b25">Wimalaratne et al., 2009</ref>). For example, one Template is given for bidirectional mass-action kinetic reactions with two reactants and one product, another is given for constitutive promoters, a third for promoters with embedded inhibitor functions and so on. In addition to the species and processes, time and space are added to the model through the import of a Time Template, and a set of Templates relating to cell volumes. In our formulation, models are one-dimensional but compartmentalized into volumes. We provide a 'Well-Stirred Bag' Template to reflect the concept of a three-dimensional volume, and have, as examples, derived specific volume components for particular prokaryotic cells. These Template models make it easy to derive new SVPs, providing useful general mathematical formulations which only need parameterizing to become SBP-or bioenvironment specific. This modularity and reuse at both Template and SVP levels is made possible by the modular nature of the CellML language, as will be discussed further in Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Repository overview</head><p>All of the CellML models discussed in this article are freely accessible online at permanent, unique locations within the CellML Model Repository (http://models.cellml.org). At the core of the Repository lies the Physiome Model Repository 2 (PMR2) software. PMR2 is built upon a distributed version control system (DVCS) which stores and versions the models and associated files. A web interface layer is provided to access the data and to configure user and access controls for any particular model. This web interface can also be used to generate content pages which describe the model and also display metadata. A synthetic biological system can be considered similar to a software program. Initially, this program is constructed in silico for prototyping, and then it is reconstructed in vitro/in vivo to create the real system. As such, it makes sense for us to make use of infrastructure designed for software development for the in silico stage of this process. PMR2's DVCS treats models and associated files, such as documentation, simulation data, etc. in a similar manner to software projects, providing researchers with an infrastructure for collaborative model development. Each file within PMR2 is tightly version controlled, and each version of the model is associated with a commit message intended to describe what has been changed since the previous version. The web interface allows controlled accessibility to the models stored within. For example, a modeler may set the permissions to his model such that only his supervisors or external parties have access to it for review purposes, and then make it publically accessible once it has been reviewed. This kind of atomic access control allows researchers to collaborate on models without necessarily making them public. Because models are assigned permanent, unique URLs within the Repository, publications can be furnished with permanent links to associated model code. Once published in the CellML Model Repository, models will be made freely available for redistribution and reuse by anyone, as long as proper attribution is made. Models are uploaded into workspaces, which contain the model and associated files listed in a manifest. Each file is given a unique URL which is version specific and by which the model components can be used by other models via CellML imports (see Section 3.2 for more details). Each SVP is contained in its own workspace, since it represents a defined piece of biological functionality, whose model may be revised by the communityâ€”perhaps more accurately parameterized over time, or given alternate mathematical formulationsâ€”independently from other component models. Alternatively, SVP Templates, since this set is envisaged to change less frequently, and only by the addition of new Templates, are considered to be a library of standard mathematical formulations and are thus groupedtogether in a single workspace. Synthetic systems are developed by modelers in their separate workspaces, using model components from SVP and the Template workspaces as needed. This architecture is shown in<ref type="figure" target="#fig_1">Figure 2</ref>. Expert curators are responsible for ensuring the coherency, reliability and accuracy of the Repository as a data resource by organizing, indexing and annotating workspaces and their constituent files. It should be noted that curation is not intended to take the place of established peer review by judging the scientific merit of a model; rather, curators ensure that a set of minimum metadata has been added to the model. This minimum set of metadata defines who created the model and when, and any relevant citation information should the model be related to a publication. Modelers can also annotate elements of the CellML model with semantic information about the biological functionality that they represent. Metadata can be added to a model at any point in its lifecycle, subject to the approval of either the model author or Repository curators. The CellML Model Repository is under ongoing development to act as a research community hub. The web interface provides infrastructure for web-based collection and moderation of user-generated content. Researchers can work on models together, download, reuse, modify, annotate or combine models, and discuss their work, gradually building up the available SVP models for others to reuse. After submission, curators organize and may annotate models to ensure quality (<ref type="bibr" target="#b20">Peccoud et al., 2008</ref>) and to assist modelers in choosing the appropriate component for their work. The combination of systems modularity within CellML, together with the ability to collaborate on documented, versioned libraries of modular model components in the publically accessible online Repository, provide a solid platform for rapid in silico prototyping of synthetic biological systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">IMPLEMENTATION</head><p>We illustrate the concept of modular modeling by developing Template (and from them, SVP) models encompassing a range Page: 928 925â€“931</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M.T.Cooling et al.</head><p>of useful synthetic biological functions. As a first iteration, we have chosen to model several core SBP types from the Parts Registry, to give modelers basic genetic circuit construction functionality: namely, promoters, messenger RNA, RBSes and CDSes. Terminators did not require a specific Template or SVP in this formulation. We also develop Templates for some common bioenvironmental processes such as protein-to-protein and degradation reactions. First we describe the mathematical formulation of these Templates, and then we discuss how these are encoded into our modeling architecture with CellML. Finally, we provide an example of how we have used our SVPs and Templates to produce a working Systems Model of a gold medal winning iGEM project.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Mathematical formulation</head><p>In order to make SVPs composable, it is important to define the mathematics simply, and with clear interfaces. The formulations for the Templates (and therefore the SVPs) are designed to make use of the popular polymerases per second (PoPs) and ribosomes per second (RiPs) units (<ref type="bibr" target="#b3">Braff et al., 2005</ref>), and to express volumes and concentrations in femtoliters and nanomolar, respectively, which are appropriate scales for unicellular systems. The formulations for the basic Templates developed in this first iteration will now be described in turn. Our formulation focuses primarily on proteins and mRNA, and not on the background transcription/translation machinery of the cell. In contrast to other systems [such as in (<ref type="bibr" target="#b17">Marchisio and Stelling, 2008)]</ref>, the concentrations of ribosomes and polymerase are assumed not to be rate limiting, and pools of those potential species are not modeled explicitly, reducing complexity. However, components taking these concentrations into account could be formulated if desired.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Promoter formulation</head><p>The first Template is the promoter which has the general form of:</p><formula>J = j * c 1 V (1)</formula><p>where j is a constant giving the rate of transcription from the promoter, measured in PoPs. c 1 (V ) is a conversion factor scaling the PoPs to nanomolar of RNA per second (J) produced from the promoter, and is a function of the volume V (in femtoliters) of the cellular compartment where transcription takes place [for more details on the units and conversion factors used in Equations (1â€“5), please see the Supplementary<ref type="bibr">Material]</ref>. For a constitutive promoter, j might simply equal some constant k, but j can also be expressed in more complex ways for different kinds of promoter. For example, an inducible promoter might have the formulation:</p><formula>j = k * I n (Km n +I n ) (2)</formula><p>where I is the concentration of an inducer species, with an associated coefficient Km, and the Hill coefficient n. Similarly, a repressible promoter might have a formulation for j thus:</p><formula>j = k * Km n (Km n +R n ) (3)</formula><p>where R is the concentration (in nanomolar) of some repressing transcription factor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">mRNA formulation mRNA is handled</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">RBS formulation</head><p>The RBS converts the concentration of mRNA for the device into a flux expressed in RiPs.</p><formula>R = k * mRNA * c 2 V (4)</formula><p>where k is a rate constant for translation, in units of RiPs. This is multiplied by the concentration of appropriate mRNA (in nanomolar, available from the corresponding mRNA species concentration as in Section 3.1.2), and a conversion factor c 2 (V ) which is a function of the volume V of the cellular compartment (in femtoliters) in which translation takes place. The rate of translation R is expressed in units of RiPs in attomoles, i.e. how many attomoles of RiPs are translating the DNA downstream of the RBS. Attomoles have been chosen to help keep value ranges such that numerical precision is likely to be maintained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.4">CDS formulation The Protein CDS</head><p>formulation is designed to take the attomoles of RiPs from an upstream RBS (R) and produce a flux J of protein produced in nanomolar per second:</p><formula>J = R c 2 (V ) (5)</formula><p>using the conversion factor c 2 (V ) from Equation (4). The specification of V terms in Promoter, RBS and CDS Templates allows modeling of chassis where transcription takes place in a different compartment from translation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.5">Reaction formulations Species</head><p>to-species interactions are generally modeled according to mass-action kinetics. For example, a bidirectional reaction with two reactants and one product would be:</p><formula>J = kf * A * Bâˆ’kr * C (6)</formula><p>where A, B and C are concentrations of the reactants and product, respectively, and kf and kr are forward and reverse rate constants, respectively. Concentrations are measured in nanomolar, and the flux J in nanomolar per second. A different template would exist for each combination of uni-or bidirectional reactions of different number of products and reactants (<ref type="bibr" target="#b25">Wimalaratne et al., 2009</ref>). Templates also allow reactions to be modeled in different formalisms if appropriate. For example, an enzymatic reaction might be modeled according to Michaelisâ€“Menten kinetics:</p><formula>J = k * E * R R+Km (7)</formula><p>where k is a rate constant, E is the concentration of the enzyme, R is the concentration of the reactant, and is associated with the enzyme's Km. Unlike other formulations where degradation is part of the model for a Standard Part, for flexibility in our formulation degradation is modeled as a bioenvironmental process acting on species such as proteins or mRNA. Degradation is implemented by a unidirectional reaction of a species using mass-action kinetics:</p><formula>J = k * s (8)</formula><p>Page: 929 925â€“931</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SVPs</head><p>where k is a degradation rate constant, and s is the concentration of the species.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">CellML model implementation</head><p>A Template model was created for each of the equations in the above formulation, contained in their own CellML components (<ref type="bibr" target="#b7">Cuellar et al., 2003</ref>), and housed in separate files. These Template components are unparameterized, and are encapsulated (<ref type="bibr" target="#b7">Cuellar et al., 2003</ref>) into more specific SVP models, which house the parameter values required for the SVP to reflect a specific SBP or bioenvironmental process. This encapsulation means that an SVP can be considered as a separate model describing the behavior of the SBP or bioenvironmental process on which it is based, to be (re)used and extended independently from others. To construct a model of a system, the modeler imports (<ref type="bibr" target="#b7">Cuellar et al., 2003</ref>) SVP and Template models relating to the genetic and bioenvironmental processes of interest into a Systems Model. A single Template or SVP may be imported many times, such as the species Template which is imported once for each species the modeler wishes to track in the model. SVP models do not need to be modified in order to make the necessary connections between themâ€”instead, CellML connection (<ref type="bibr" target="#b7">Cuellar et al., 2003</ref>) elements are added so that a Systems Model can be thought of as a network of chained components.Following the precepts in<ref type="bibr" target="#b6">Cooling et al. (2008)</ref>, interface components written at model aggregation time handle the combination of flux terms contingent on molecular species, summing them as appropriate to yield an overall total flux term. The total flux term is connected back into the Species Template that was instantiated for a particular species. This architecture means that any number of flux terms can be made contingent on a species simply by adding them to the mathematics in the interface components, which thus act as malleable 'glue' for the aggregation of immutable SVP models. SVPs can be easily reused between Systems Models, or even as multiple copies within a Systems Model (e.g. in the case of multiple copies of a CDS downstream from an RBS), simply by importing them. A tutorial describing the construction of an example Systems Model from existing SVPs, using open-source software, is provided in the Supplementary Material. Alternative formulations of, or even new componentsâ€”such as promoters with more detailed mechanisms or including ribosomal poolsâ€”can easily be implemented in CellML as new Templates, from which SVPs can then be derived. Care would need to be taken to ensure that new formulations have 'input' and 'output' variables that are compatible with each other, in order for derived SVPs to be connectable with one another. CellML's strict enforcement of consistent units reduced errors when connecting components together, helping to ensure that appropriate connections are made.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Example systems model</head><p>To highlight the composability of SVPs and their applicability to real biological problems, we demonstrate their use by modeling Newcastle University's iGEM 2008 gold-medal winning medical science project 'BugBuster', where SVPs were a foundational technology of the project. A second example, and a tutorial on constructing a simplified Systems Model from SVPs, is given in the Supplementary Material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">System background</head><p>The 'BugBuster' peptide receiver is a proof-of-concept genetic circuit for the development of a bacteriumbased pathogen-sensing system. Using Bacillus subtilis as a chassis, the system was designed to sense the peptide lantibiotic subtilin, an antibacterial compound normally produced by B.subtilis strain ATCC6633. The receiver design was computationally constructed 'bottom-up' by assembling the SVPs necessary for encoding the two-component system that senses subtilin. A CDS for the sensor kinase (spaK) and its corresponding response regulator (spaR) were arranged in an operon downstream of a sigma-H regulated promoter. The spaRresponsive promoter (pspaS) was used to drive the expression of a GFP coding sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Model structure A schematic</head><p>of the Systems Model is shown in<ref type="figure" target="#fig_2">Figure 3</ref>. A sigma-H promoter is linked to both a spaK and a spaR CDS. Together these genes, each with their own RBS, comprise the phosphate-mediated signaling system required to form an activated SpaR protein. Activated SpaR is used as a transcriptional activator for the second inducible promoter spaS [which imports a template encapsulating the mathematical formulation given in<ref type="bibr">Equation (2)</ref>], which is designed to be upstream of some reporter genes of interest. The SVPs that have corresponding SBPs are linked to their Registry records (BBa_K104002-BBa_K104009) from the CellML Repository. A diagrammatic summary of the specific CellML components used for the BugBuster Systems Model is given in the Supplementary Material. The Systems Model and associated CellML files can be found online in the CellML Model Repository at http://models.cellml.org/workspace/bugbuster.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3">Model output The Systems Model was constructed</head><p>in the open source CellML environment OpenCell (<ref type="bibr" target="#b11">Garny et al., 2008</ref>) and simulated. To demonstrate the functioning of the genetic circuit and associated bioenvironment, we track the virtual production of the reporter GFP produced on stimulation with various levels of subtilin, as shown in<ref type="figure" target="#fig_3">Figure 4</ref>. The model for the virtual Systems Model was used to inform the synthesis of a DNA sequence that was integrated into the B</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>.subtilis</head><p>Page: 930 925â€“931168 chromosome, allowing the strain to be used as a fluorescentbased biosensor for subtilin.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M.T.Cooling et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head><p>We have developed the first iteration of standardized modular synthetic biology models in CellML, incorporating both common genetic elements and biochemical reactions. We show how models using these formulations can be reused and extended to compose complex models during the design of synthetic biological systems, without modification of the aggregated models. We provide an online repository for collaborative development of further model components and Systems Models by the global synthetic biology modeling community. We demonstrate the applicability of this approach by modeling examples from award-winning iGEM machines. We hope to foster the development of more Template, SVP and Systems Models by the modeling community and their storage online. As more models are contributed, and existing models have their parameters refined, the usefulness of the Repository will increase. This work provides an initial set of designs for Templates and SVPs, and as such does have some limitations. For maximum benefit from modeling, the kinetic parameters for each SVP would have to be accurately measured. This issue is common to the entire field of synthetic biology. Some important measures such as PoPs are not directly measurable at present. However, as is already occurring in the related field of Systems Biology, we expect accurate measurement for the parameterization of system components to be conducted as a process of iterative refinement. The development of a library of promoters with quantified activity was recently demonstrated (<ref type="bibr" target="#b9">Ellis et al., 2009</ref>), and specification sheets for biological parts have also been proposed and developed (<ref type="bibr" target="#b4">Canton et al., 2008</ref>). Efforts such as these may help to standardize the SBPs that we are modeling with SVPs. Pragmatically, useful formulations may depend upon what is measurable. Until measurement issues are resolved it may be that the optimal mathematical formulation for synthetic device design purposes remains unknown with complete certainty.</p><p>Appropriate formulations may also be refined by the investigation of non-specific effects in genetic systems. Designed systems are sometimes partially limited in that we do not fully comprehend all the interactions in a living cell, particularly if the cell grows and divides. In the future, we hope to extend our models to realistically simulate the system output against the background functions of the cell on a time scale comparable with the cell's growth cycle. To facilitate this, it would be useful to develop experiment-based tests for SVPs and Systems Models built from themâ€”does the biological system actually behave as the simulation? If not, why not? Pursuing these questions may lead to further insights both for modeling and biological science. At the technical level, there are also opportunities for the development of more tools to enhance model construction. The encapsulation of Template models by SVPs is currently done interactively in environments such as OpenCell, but could in theory be performed automatically by software, prompting the user only for the appropriate parameterization. The connection of the SVPs in the Systems Model is done by forming interface components. These components tend to follow a standard format and could also be produced semi-automatically by software with the user specifying which SVPs to connect and the positive or negative effect of the associated fluxes on particular species. This work presents the foundation on which tools catering for these more streamlined processes could be built. To aid computational composition and synthetic biology CAD, annotation of the models with metadata to give them semantic meaning would be of great benefit. A research project in this area is currently underway. While at present, models link, where appropriate, to the Registry of SBPs, it would also be advantageous to link from the Registry to the SVP Repository. It may also be useful to link SVP models with other repositories besides the Parts Registry. For example, molecular species such as enzymes may benefit from having specific information associated with them (such as EC number or similar), which could be implemented via each species having its own SVP with metadata linking to the appropriate repository. Such metadata would facilitate much-needed computerassisted searching for appropriate SVPs for particular modeling projects (<ref type="bibr" target="#b2">Beard et al., 2009</ref>). In addition, currently SVPs can be combined in any order where the units of their connecting variables allow; however, aside from units checking it is up to the modeler to ensure that the connections 'make sense' with respect to the biological reality being modeled. Metadata and metadata-aware tools could potentially provide checking that SVP connections are biologically meaningful, reducing cognitive load on the modeler and structural modeling mistakes. Since, however, the supporting metadata specification is still being defined, these features have not been incorporated for this first design iteration. The CellML language is itself under development, with proposals for version 1.2 being considered. Reusing SVP and Templates without modification has been demonstrated here through the use of flexible 'glue code', but reusing entire Systems Models, also without modification, may become possible through proposed enhancements borrowed from set theory. Another proposal concerns extending CellML simulators to enable stochastic simulation, which if implemented, would increase the applicability of SVPs still further. Finally, the CellML Model Repository is under continuous development, hence interface enhancements and new functionality</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SVPs</head><p>desired by the community using SVPs, such as programmatic interfaces to the Repository, are expected to be prioritized and delivered as part of the ongoing developments in this area. As priorities become more apparent with wider use, we anticipate increasing utility from this technology.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. (A) Schematic of a simple genetic circuit and associated bioenvironmental reactions. Protein A encoded by a 'composite device'forms complex C on combination with protein B. (B) CellML model architecture for the circuit and bioenvironment shown in (A). A Systems Model representing the complete system of interest aggregates specific (shown with symbols displayed) SVPs from a library of composable CellML models. From left to right, these include an Escherichia coli chassis (to give volume information), a promoter, an RBS, a protein CDS, two degradation reactions (for the RNA and for protein A) and the C complex formation reaction. Both the Systems Model and the SVPs may also aggregate components representing mathematical templates, including, from left to right across the bottom of (B): Time, Well-stirred Bag (used by E.coli chassis component), Constitutive Promoter (used by the promoter SVP), RBS (used by the RBS SVP), Protein CDS (used by the protein CDS SVP for species A), a unidirectional reaction (used by the degradation reaction SVPs) and a bidirectional reaction (used by the C complex formation reaction SVP). The species Template (housing an ODE for keeping track of the concentration of the species) is also used multiple times, once for each molecular species of interest in the Systems model, including the RNA. SVPs may represent SBPs or bioenvironmental elements, with the former potentially being linked to a record in the SBP Registry.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.2.</head><figDesc>Fig. 2. The workspace architecture of SVP-based models in the Repository. Separate files are shown by the shaded boxes within workspaces. Information flows between workspaces via CellML imports (see Section 3.2) are represented as arrows. Template models are imported and re-parameterized to form SVPs with specific properties (shown by the darker shading of the CellML models), which are then combined via imports to form a model of a synthetic system. Time and Species are imported directly from the Template library. The system-level workspace contains a single CellML file, which collates its constituent modules by referencing information in other workspaces via unique URLs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. Schematic of the Systems Model for BugBuster. The system consists of a single Device, containing a constitutive promoter contingent on spaK and spaR CDSes. SpaR is activated by SpaK on exposure to subtilin. Activated SpaR activates the pspaS promoter included at the 3 end of the device. All protein and mRNA species can degrade, except for Subtilin which for the purposes of the model is assumed to have constant concentration. BioBrick numbers are shown for those SVPs with corresponding SBPs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.4.</head><figDesc>Fig. 4. Sample output of the BugBuster Systems Model. Here the timecourse for the concentration of reporter GFP is plotted for several levels of subtilin signal.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>as an ODE tracking nanomolar of mRNA from a particular DNA molecule. It can degrade or participate in reactions like any other molecular species and so is considered part of the bioenvironment, in contrast to other schemes in which it is handled more implicitly [e.g. (Marchisio and Stelling, 2008) and (Rodrigo et al., 2007)].</figDesc><table></table></figure>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">153</biblScope>
			<biblScope unit="page" from="29" to="46" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq063. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="931" to="925" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">CellML metadata standards, associated tools and repositories</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">A</forename>
				<surname>Beard</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. R. Soc. A</title>
		<imprint>
			<biblScope unit="volume">367</biblScope>
			<biblScope unit="page" from="1845" to="1867" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Definitions and Measures of Performance for Standard Biological Parts Available at http://hdl.handle.net/1721</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">C</forename>
				<surname>Braff</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference Systems Biology (ICSB 2005) Poster</title>
		<imprint>
			<date type="published" when="2005-03-01" />
			<biblScope unit="page">31335</biblScope>
		</imprint>
	</monogr>
	<note>last. accessed date</note>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Refinement and standardization of synthetic biological parts and devices</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Canton</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Biotechnol</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="787" to="793" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Laying the foundations for a bio-economy</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Carlson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sys. Syn. Biol</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="109" to="117" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Modeling biological modularity with CellML</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">T</forename>
				<surname>Cooling</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET Sys. Biol</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="73" to="79" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">An Overview of CellML 1.1, a biological model description language</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">A</forename>
				<surname>Cuellar</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Simulation</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="740" to="747" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">The BlenX Language: a tutorial</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>DemattÃ©</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Systems Biology</title>
		<editor>Bernado,M., Degano,P. and Zavattaro,G.</editor>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">5016</biblScope>
			<biblScope unit="page" from="313" to="365" />
			<date type="published" when="2008" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Diversity-based, model-guided construction of synthetic gene networks with predicted functions</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Ellis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Biol</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="465" to="471" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Foundations for engineering biology</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Endy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">438</biblScope>
			<biblScope unit="page" from="449" to="453" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">CellML and associated tools and techniques</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Garny</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phil. Trans. R. Soc. Lon. A</title>
		<imprint>
			<biblScope unit="volume">366</biblScope>
			<biblScope unit="page" from="3017" to="3043" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Genetic design: rising above the sequence</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">A</forename>
				<surname>Goler</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trends Biotechnol</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="538" to="544" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Engineering ingenuity at iGEM</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Goodman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Chem. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">13</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Integration from proteins to organs: the Physiome Project</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">J</forename>
				<surname>Hunter</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">K</forename>
				<surname>Borg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Rev. Mol. Cell Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="237" to="243" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Engineering novel life 1, [Epub ahead of print, doi:10</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">F</forename>
				<surname>Knight</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Syst. Biol</title>
		<imprint>
			<biblScope unit="page">16729055</biblScope>
			<date type="published" when="1038" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">BioModels Database: a free, centralized database of curated, published, quantitative kinetic models of biochemical and cellular systems</title>
		<author>
			<persName>
				<forename type="first">Le</forename>
				<surname>Novere</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="689" to="691" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
	<note>Suppl. . 1</note>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Computational design of synthetic gene circuits with composable parts</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Marchisio</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Stelling</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<date type="published" when="1903" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">PROMOT: modular modeling for systems biology</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Mirschel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="687" to="689" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Computational multiscale modeling in the IUPS Physiome Project: modeling cardiac electromechanics</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">P</forename>
				<surname>Nickerson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM J. Res. Dev</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="617" to="630" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Targeted development of registries of biological parts</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Peccoud</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS ONE</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">2671</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Asmparts: assembly of biological model parts</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Rodrigo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sys. Syn. Biol</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="167" to="170" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Modular assembly of cell systems biology models using P systems</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<forename type="middle">J</forename>
				<surname>Romero-Campero</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Found. Comp. Sci</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="427" to="442" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Registry of BioBricks models using CellML</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Rouilly</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Sys. Biol</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">79</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
	<note>Suppl. . 1</note>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Methods for simulating the dynamics of complex biological processes</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">J</forename>
				<surname>Schilstra</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biophysical Tools for Biologists. In Vitro Techniques</title>
		<editor>Correia,D.J.J. and Detrich,H.W.</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<biblScope unit="volume">84</biblScope>
			<biblScope unit="page" from="807" to="842" />
			<date type="published" when="2008" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Facilitating modularity and reuse: guidelines for structuring CellML 1.1 models by isolating common biophysical concepts</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">M</forename>
				<surname>Wimalaratne</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Exp. Physiol</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="472" to="485" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>