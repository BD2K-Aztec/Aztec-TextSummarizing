
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:31+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Faster sequence homology searches by clustering subsequences</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Shuji</forename>
								<surname>Suzuki</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Graduate School of Information Science and Engineering</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="laboratory">Education Academy of Computational Life Sciences (ACLS)</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
								<address>
									<postCode>152-8550</postCode>
									<settlement>Tokyo</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Masanori</forename>
								<surname>Kakuta</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Graduate School of Information Science and Engineering</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Takashi</forename>
								<surname>Ishida</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Graduate School of Information Science and Engineering</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Yutaka</forename>
								<surname>Akiyama</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Graduate School of Information Science and Engineering</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="laboratory">Education Academy of Computational Life Sciences (ACLS)</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
								<address>
									<postCode>152-8550</postCode>
									<settlement>Tokyo</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Faster sequence homology searches by clustering subsequences</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btu780</idno>
					<note type="submission">Received on July 7, 2014; revised on October 25, 2014; accepted on November 12, 2014</note>
					<note>Sequence analysis *To whom correspondence should be addressed. Associate Editor: John Hancock Contact: akiyama@cs.titech.ac.jp Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Sequence homology searches are used in various fields. New sequencing technologies produce huge amounts of sequence data, which continuously increase the size of sequence databases. As a result, homology searches require large amounts of computational time, especially for metagenomic analysis. Results: We developed a fast homology search method based on database subsequence clustering , and implemented it as GHOSTZ. This method clusters similar subsequences from a database to perform an efficient seed search and ungapped extension by reducing alignment candidates based on triangle inequality. The database subsequence clustering technique achieved an $2-fold increase in speed without a large decrease in search sensitivity. When we measured with metage-nomic data, GHOSTZ is $2.2–2.8 times faster than RAPSearch and is $185–261 times faster than BLASTX. Availability and implementation: The source code is freely available for download at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>DNA sequencing technologies have improved rapidly. The HiSeq2500 can produce several hundred billion base pairs (bp) of sequence data in a single run and its throughput is ~10 000 times higher than that of old-generation sequencers. Most sequencers produce information in short fragments (reads) that range in length from 100 to 1000 bp. Thus, it is necessary to determine the location of each read in a genome, to use known biological information even when a reference genome is available. This process is called mapping, and many effective mapping programs, such as BWA (<ref type="bibr">Durbin, 2009, 2010</ref>) and Bowtie (<ref type="bibr" target="#b9">Langmead and Salzberg, 2012;</ref><ref type="bibr" target="#b10">Langmead et al., 2009</ref>), have been developed for this purpose. In metagenomic analysis, environmental samples frequently include DNA sequences from many different species, and the reference database often does not contain closely related genome sequences. Thus, more sensitive approaches are required to identify novel genes in these samples. In a typical metagenomic analysis, reads are translated into protein coding sequences and assigned to protein families by running homology searches against publicly available databases, such as COG (<ref type="bibr" target="#b19">Tatusov et al., 1997</ref><ref type="bibr" target="#b20">Tatusov et al., , 2003</ref>) and Pfam (<ref type="bibr" target="#b4">Finn et al., 2010</ref>). The BLASTX program (<ref type="bibr" target="#b0">Altschul et al., 1990</ref><ref type="bibr" target="#b1">Altschul et al., , 1997</ref>) is commonly used for such binning and classification searches. To identify homologs that may not have high nucleotide sequence identities, BLASTX translates nucleotide sequences into protein sequences, because protein sequences are often more similar than the original nucleotide sequences (<ref type="bibr" target="#b8">Kurokawa et al., 2007;</ref><ref type="bibr" target="#b22">Turnbaugh et al., 2006</ref>). However, the search speed of BLASTX has become insufficient for analysis of the large quantities of sequence data now available.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1183</head><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.<ref type="bibr">Bioinformatics, 31(8), 2015</ref><ref type="bibr">Bioinformatics, 31(8), , 1183</ref>–1190 doi: 10.1093/bioinformatics/btu780</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Advance Access Publication Date: 27 November 2014 Original Paper</head><p>Several currently available homology search tools are faster than BLAST, but possess decreased sensitivity. For example, BLAT (<ref type="bibr" target="#b7">Kent, 2002</ref>) is ~50 times faster than BLAST; however, the search sensitivity of BLAT is much lower than that of BLAST and is often insufficient for metagenome sequence analysis. Thus, novel homology search tools, such as RAPSearch (<ref type="bibr" target="#b24">Ye et al., 2011</ref>), have recently been developed. RAPSearch has sufficient sensitivity for metagenomic analysis and a faster homology search speed than BLAST or BLAT because it uses a reduced amino acid alphabet (<ref type="bibr" target="#b16">Murphy et al., 2000</ref>) and a suffix array (<ref type="bibr" target="#b14">Manber and Myers, 1993</ref>). In addition, RAPSearch2 has been improved to use hash tables instead of suffix arrays, making it more memory efficient (<ref type="bibr" target="#b25">Zhao et al., 2012</ref>). However, several large metagenome projects, such as the Human Microbiome Project (HMP) (The Human Microbiome Project<ref type="bibr">Consortium, 2012</ref>), the Metagenomics of the Human Intestinal Tract (MetaHIT) (<ref type="bibr" target="#b18">Qin et al., 2010</ref>) and the Earth Microbiome Project (<ref type="bibr" target="#b6">Gilbert et al., 2010</ref>), have recently produced unprecedentedly large amounts of sequence information. For instance, HMP has sequenced 681 human metagenome whole-genome shotgun samples. Therefore, there is a high demand for analysis of large amounts of metagenomic data. In addition, the numbers of reference sequences in databases will continue to increase with further improvements of sequencing technologies. For instance, the size of the National Center for Biotechnology Information (NCBI) nonredundant protein database (nr) increased from ~4.1 billion amino acid residues in 2010 to ~16.7 billion residues in 2014. Therefore, the speed of homology searches needs to be increased to facilitate metagenomic analysis. To address the problem of increasing database size, CaBLASTP (<ref type="bibr" target="#b3">Daniels et al., 2013</ref>) introduced a compression approach and achieved a faster homology search than BLAST using the compressed database. CaBLASTP initially searches against a coarse database from which redundant subsequences have been removed, and then it uses these initial results to search the original database for similar sequences. This approach provides a more efficient homology search than BLAST, but the compression approach has proven to be difficult to apply to RAPSearch and BLAT, because their faster but less sensitive homology searches often fail to identify similar sequences in the compressed database, critically decreasing the sensitivity of the final search results. To address some of these problems, we developed a new faster homology search method using database subsequence clustering. Current homology searches require a large amount of time to extend alignments without gaps, because the seed searches tend to produce large numbers of seeds (<ref type="bibr" target="#b23">Vouzis and Sahinidis, 2011</ref>). However, only a small number of seeds produce ungapped extension scores that are higher than the score threshold, and the wasted computation time involved accounts for a large fraction of the time required for the ungapped extensions. Our method clusters subsequences from a database and filters out the non-representative seeds within these clusters to minimize the computation time spent on ungapped extensions. In our method, the subsequences in a cluster are more similar to representative subsequences than those obtained using CaBLASTP. Therefore, our method does not require high sensitivity in the initial search for representative subsequences in a cluster. In this research, we developed a novel fast homology search method that uses hash tables, and then applied our subsequence clustering technique to the index to further accelerate the sequence homology search algorithm. We implemented this algorithm as GHOSTZ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Methods</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Flow</head><p>of the proposed homology search method using subsequence clustering GHOSTZ adopts the seed-extension approach used in BLAST. The flow of GHOSTZ is shown in<ref type="figure" target="#fig_1">Figure 1</ref>. Subsequences are extracted from a database, and similar subsequences are clustered. Then, hash tables are constructed that contain indexes for the subsequences and the clusters. The homology search method uses the hash tables to select the seeds for the alignments from representative sequences in the clusters. The distance between a query subsequence and the cluster representative is calculated, and then the lower bounds of the distance between the query subsequence and other members of the cluster are computed based on triangle inequality, as shown in<ref type="figure">Figure 2</ref>. If the computed lower bound is lower than or equal to the distance threshold, the seed is taken into the next step, that is, ungapped extension, to investigate the homology between the query and the member sequences of the cluster. This filtering, using the lower bounds of the distance, is referred to herein as 'similarity filtering'. Finally, chain filtering is used to bring similar extended seeds together, and a gapped extension is performed to obtain an alignment from the extended seed that contains gaps.Cluster 0 Cluster 1<ref type="figure">Fig. 2</ref>. Example of similarity filtering. C Q;i is the query subsequence. R D;j0 and RD;l 0 are the representative subsequences in the cluster 0 and the cluster 1, respectively. The lower bound of the distance between C Q;i and the member subsequence M D;j1 in the cluster 0 is calculated from the distance dðC Q;i ; R D;j0 Þ. When the lower bound of dðC Q;i ; M D;j1 Þ T distance , the seed for C Q;i and M D;j1 is taken into the next step. The lower bound of the distance between C Q;i and the member subsequence M D;l1 in the cluster 1 is calculated from distance dðC Q;i ; R D;l0 Þ. When the lower bound of dðC Q;i ; M D;l1 Þ &gt; T distance , the seed for C Q;i and MD;l 1 is not taken into the next step</p><p>In the database subsequence clustering and seed search processes, the query and database amino acid sequences are both converted to a reduced amino acid alphabet to increase search sensitivity. We used a 10-letter reduced amino acid alphabet (A, {K, R}, {E, D, N, Q}, C, G, H, {I, L, V, M}, {F, Y, W}, P, {S, T}), which was derived based on the BLOSUM62 matrix (<ref type="bibr" target="#b16">Murphy et al., 2000</ref>). This reduced alphabet has been used successfully in previously reported research on homology searches (<ref type="bibr" target="#b24">Ye et al., 2011</ref>). For the ungapped and gapped extensions, the alignments are performed with the standard 20 amino acids.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Database subsequence clustering and construction of hash tables</head><p>The database subsequence clustering approach was developed for efficient homology sequence searches. In this method, subsequences in a database are clustered for use in similarity filtering; however, we do not cluster subsequences for seed themselves used in seed searches, but instead use longer subsequences, overlapping subsequences for seed (<ref type="figure" target="#fig_2">Fig. 3</ref>). To avoid confusion of terms, we use 'subsequence for seed' for subsequences used in general seed searches, denoted by S. And we use 'subsequence for clustering' for subsequences used in the database subsequence clustering and similarity filtering processes. These are denoted by C. All subsequences for clustering depend on a subsequence for seed. Therefore, GHOSTZ first builds a hash table of subsequences for seed, and then determines which subsequences should be used for clustering, using this hash table. Database subsequence clustering is performed using these subsequences. Therefore, we will first describe the construction of hash tables of subsequences for seed, and then describe the construction of subsequences for clustering and database subsequence clustering. Here, the text T ¼ T½0; n ¼ t 0. . .t nÀ1 denotes a sequence of symbols and the length of T is jTj ¼ n. Each symbol is an element of an alphabet R (jRj of protein is 20). T½i ¼ t i and T½i; i þ j ¼ t i. . .t iþjÀ1 are substrings. The sequence of a query is Q. The sequences D 0 , D 1 ,.. .,D NÀ1 in a database are connected by inserting delimiters to transform them into a single long sequence D ¼ D 0 D 1 ;.. .; D NÀ1 (marked by the special symbol ). A seed is a pair of identical or similar subsequences of Q and D. S Q;i ¼ Q½i; i þ l and S D;j ¼ D½j; j þ l is the subsequence of Q and D for a seed, and fS Qi ; S D;j g is a seed. The hash table used to identify subsequences for seed stores the pair of hash values of S D;i and the starting point i of S D;i. In BLAST-like seed-extension algorithms, the search speed can be increased by decreasing the number of seeds. The number of seeds can be decreased if longer subsequences are used for seeds, because this decreases the number of randomly matched cases. However, this also causes a decrease in the search sensitivity. Thus, tolerances are required in the matching to retain sufficient search sensitivity. In BLASTX, the length of the subsequence for seed is three and neighborhood words are identified, as well as exact subsequences (<ref type="bibr" target="#b1">Altschul et al., 1997</ref>). A neighborhood word is a subsequence that is similar to each subsequence (<ref type="bibr" target="#b0">Altschul et al., 1990</ref>). BLAST uses a large variety of subsequences of each subsequence in a seed search to increase the search sensitivity using neighborhood words. However, neighborhood words are ineffective for longer subsequences for seed because the variety of neighborhood words is great. GHOSTZ identifies long subsequences by employing a reduced amino acid alphabet in the seed search. The amino acid alphabet in the subsequences is converted to the reduced amino acid alphabet, and then the hash value for this subsequence is calculated. The variety of subsequences for each original subsequence becomes one, using the reduced amino acid alphabet. In addition, use of the reduced amino acid alphabet allows GHOSTZ to find longer subsequences without a large decrease in search sensitivity. In GHOSTZ, the length of the subsequence for seed is determined by the sum of the match scores of the subsequence. Because the frequency of each amino acid differs in the subsequences, the probability of finding each particular subsequence is different. Therefore, different subsequences may have different lengths. A score definition has previously been proposed for calculating matches between reduced amino acid alphabets (<ref type="bibr" target="#b15">Melo and Marti-Renom, 2006</ref>). However, in this study we used a simpler definition. We defined the match scores of the groups of reduced amino acid alphabets by the largest match score in the group based on the original score matrix. For example, in the BLOSUM62 score matrix, the match scores of amino acids F, Y and W, are 6, 7 and 11, respectively; thus, the match score for the group including F, Y and W is 11. To avoid insignificant hits, only subsequences with scores that exceed the score threshold T seed are hashed as subsequences for seed. For example, when T seed ¼ 39, 'HDGLNP' is not used in the seed search because its score is 38 and does not exceed T seed. However, 'HDGLNPA' is used in the seed search because its score is 42, which exceeds T seed. In addition, in our implementation, the length of subsequences for seed is restricted to 6–8 residues, because a perfect hash function is used. After building the hash table of subsequences for seed, the subsequences for clustering are constructed, and database subsequence clustering is performed as follows: If i is the starting point of S D;i ¼ D½i; j and L is the length of the subsequence used for clustering, then let C D;i ¼ D½i À L=2; i þ L=2 be the subsequence for clustering. For clustering, a subsequence for clustering with i as the center is used, instead of a subsequence for seed with i as the starting point. The relationship between C D;i and S D;i is shown in<ref type="figure" target="#fig_2">Figure 3</ref>. If C D;i has delimiters, C D;i are not used for clustering because C D;i contains the subsequence of several sequences in the database. C D;i becomes a member of a cluster if it has the same hash value of S D;j as the cluster representative C D;j and the distance between the representative of a cluster C D;j and C D;i is lower than or equal to the distance threshold T cluster. Hamming distance, which is the number of mismatches between sequences, is used to measure this distance. To reduce the computation time required for clustering, a greedy algorithm similar to CD-HIT (<ref type="bibr" target="#b5">Fu et al., 2012;</ref><ref type="bibr" target="#b13">Li and Godzik, 2006</ref>) was employed. The algorithm for database subsequence clustering is shown in<ref type="figure" target="#fig_3">Figure 4</ref>. In this algorithm, the first subsequence sampled always becomes a cluster representative. All subsequences are compared with each cluster representative, and the subsequence becomes a new cluster representative if it is not a member of any other cluster. Before running the database subsequence clustering, we recommend that similar sequences are arranged close to each other in the input file, using a clustering tool such as CD-HIT, because this allows the clustering algorithm to cluster subsequences more</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MGKTNLSHDGLNPAHVPYWWVN</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>L/2 L/2</head><p>Subsequence for clustering ( L =10 ) seed (T seed =39 )Faster sequence homology searchesefficiently. After subsequence clustering, the results are used to construct three tables to be used as indexes for the seed searches. The B e hash table stores the hash values of S D;i and the starting points i of S D;i for the representatives of clusters where the number of members in the cluster is only one. The B r hash table stores the hash values of S D;i , their cluster IDs and the starting points i of S D;i that are representative of a cluster (not stored in B e ). The B m table stores the mapping from the cluster IDs to the starting points i of S D;i whose C D;i are members of that cluster. These three tables are used for the seed search. Examples of B e , B r and B m are shown in Supplementary<ref type="figure" target="#fig_1">Figure S1A</ref>–C.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Seed search and similarity filtering</head><p>The seed search is performed with B e , B r , B m and the hash<ref type="figure" target="#fig_1">Figure S1D</ref>. In the seed search, seeds of query subsequences and representative subsequences in the database are found using B e and B r. If the seeds are from B e , an ungapped extension is performed because there are no other subsequences in the cluster. If the seeds are from B r , the similarity filtering process is performed. Then, the hamming distance between a query and the database subsequence is calculated. Given two sequences S 1 and S 2 , we denote by dðS 1 ; S 2 Þ the distance between S 1 and S 2. The distance should satisfy the following triangle inequality:</p><formula>dðS 1 ; S 2 Þ dðS 1 ; S 3 Þ þ dðS 2 ; S 3 Þ (1)</formula><p>If C Q;i is the subsequence of the query, M D;j (C D;j ) is the sequence of a cluster member, and R D;k (C D;k ) is the subsequence of a representative cluster member, then the lower bound of the distance between R D;i and M D;j from this inequality will be:</p><formula>dðC Q;i ; M D;j Þ ! dðC Q;i ; R D;k Þ À dðR D;k ; M D;j Þ (2)</formula><p>This lower bound of the distance between C Q;i and M D;j is calculated, and the seed is extended without gaps if this lower bound of the distance is less than or equal to the distance threshold T distance. The relationships among the query, the cluster representative and the cluster members are shown in<ref type="figure">Figure 5</ref>. The pseudo-code for the seed search and similarity filtering is shown in<ref type="figure" target="#fig_5">Figure 6</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Ungapped extension</head><p>Gapped extension generally requires large amounts of computation time; therefore, most homology search algorithms perform an ungapped extension before a gapped extension. We used an ungapped extension to filter candidate seeds in the output from the seed search. Only seeds with ungapped extension scores that exceed the score threshold T ungapped are stored and extended with gaps after the ungapped extension is complete. In the ungapped extension, the cutoff technique that is used in BLAST (<ref type="bibr" target="#b0">Altschul et al., 1990</ref>) is used to accelerate the extension process. The T ungapped and the other parameters for ungapped extensions are the same as the BLAST default parameters. To access memory efficiently when performing the ungapped extension, seed searches are performed for multiple queries simultaneously. If the hash values of query subsequences are the same, their starting points are packed using the hash table. Then, an ungapped extension is performed for the queries that have identical hash values in sequential order, because this increases the cache hit ratio when accessing the positions of the sequences in the database (line 9–31 in<ref type="figure" target="#fig_5">Fig. 6</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Chain filtering and gapped extension</head><p>Chain filtering is performed after an ungapped extension because some seeds overlap. Therefore, the number of gapped extensions can be reduced by merging overlapping seeds. After chain filtering, the seeds are extended with gaps using a score-limited dynamic programming technique (<ref type="bibr" target="#b1">Altschul et al., 1997</ref>).<ref type="figure">Fig. 5</ref>. Relationships among a query subsequence, a representative cluster subsequence and a member of the cluster that satisfies the triangle inequality</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Execution of the homology search method without subsequence clustering</head><p>The flow of the homology search without subsequence clustering is shown in<ref type="figure" target="#fig_4">Figure 7</ref>. This method is almost identical to that used in GHOSTZ, except that subsequence clustering and similarity filtering are not used for the seed search. This method, without subsequence clustering, was used to evaluate the improvement in processing time obtained by subsequence clustering. Here, the query subsequences are searched against all the subsequences in the database using hash tables. Next, all seeds are directly extended using the ungapped extension process. Finally, chain filtering is performed to merge similar seeds, and gapped extension is used to extend the seed sequences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Datasets and the computing environment</head><p>We evaluated the performance of the homology searches with and without subsequence clustering. We used the amino acid sequences in the Kyoto Encyclopedia of Genes and Genomes (KEGG) GENES database (as of<ref type="bibr">May 2013</ref>). This database contains ~10 million protein sequences, which comprise a total of ~3.6 billion residues. For the query sequences, we used three datasets: soil microbiome metagenomic sequences (accession number, SRR407548, read length ¼ 150 bp), human microbiome metagenomic sequences (accession number, SRS011098, read length ¼ 101 bp) and marine microbiome metagenomic sequences (accession number, ERR315856, read length ¼ 104 bp). SRR407548 and ERR315856 were obtained from the DNA Data Bank of Japan Sequence Read Archive, which is a member of the International Nucleotide Sequence Database Collaboration and which archives data in close collaboration with the NCBI Sequence Read Archive and the European Bioinformatics Institute Sequence Read Archive. SRS011098 was obtained from the Data Analysis and Coordination Center for the HMP web site (http://www.hmpdacc.org/). We used the whole metagenomic shotgun sequencing data from SRS011098. For all datasets, 10 000 DNA short reads were randomly selected and used. The evaluation tests were performed on a workstation with a 2.93 GHz Intel Xeon 5670 processor, 54 GB memory and SUSE Linux Enterprise Server 11 Service Pack (SP) 1. For the homology search with and without subsequence clustering, we used a seed score threshold of T seed ¼ 39. T seed was determined to be similar in sensitivity to RAPSearch. The parameters used for gapped and ungapped extensions were the same as the BLASTX default parameters. To perform the database subsequence clustering efficiently, similar sequences were arranged close to each other in the database file, based on the results of CD-HIT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Relationship between subsequence length and acceleration ratio and accuracy</head><p>The subsequence clustering method has three parameters: the length of the subsequence L, the distance threshold for the representative of a cluster T cluster and the distance threshold for the similarity check T distance. The subsequence length L particularly affects the performance of the search method because T cluster and T distance depend on L; therefore, we first determined the optimal length of a subsequence using L ¼ 6, 8, 10, 12 and 14 and fixed distance thresholds of T cluster ¼ 0.1 L and T distance ¼ 0.2 L. We used 10 000 randomly selected DNA short reads from soil microbiome metagenomic sequences (SRR407548) and the KEGG GENES database. The acceleration ratios with different L for the subsequence clustering search method over the method without subsequence clustering are shown in<ref type="figure" target="#tab_1">Table 1</ref>. As shown, the speed of the search method that included subsequence clustering increased when L decreased. The accuracy of the homology search for the different query sequences was estimated using the search results obtained by the Smith–Waterman local alignment algorithm implemented in SSEARCH (<ref type="bibr" target="#b17">Pearson, 1991</ref>) as the correct result. The performance was estimated in terms of the fraction of the results that corresponded to the correct result. A search result was considered to beFaster sequence homology searchescorrect when the subject sequence with the highest score in SSEARCH was the same as the subject sequence obtained by our search method with subsequence clustering. The accuracy of L ¼ 10 was better than the accuracy of the other lengths (<ref type="figure" target="#fig_6">Fig. 8</ref>). Therefore, we determined that L ¼ 10 was the optimal subsequence length because it yielded a good balance between sensitivity and computation time. GHOSTZ, using database subsequence clustering, achieved an ~2-fold increase in processing speed, without a large decrease in search accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Comparison of the proposed search method with other methods</head><p>To further evaluate GHOSTZ, we compared its search accuracy and computation time with the accuracy and computation time of NCBI BLAST (version 2.2.28þ), BLAT (version 34 standalone) and RAPSearch (version 2.12). The metagenomic DNA sequences (SRR407548, SRS011098 and ERR315856) and the KEGG GENES database were used to evaluate these tools. The BLASTX program was executed with the command line options '-outfmt 6-comp_ based_stats 0', which instructed the program to output in tabular format. Composition-based statistics (<ref type="bibr" target="#b2">Altschul et al., 2005</ref>) were not used because this method was not employed in SSEARCH. The BLAT program does not include a function to translate the DNA reads to protein sequences; therefore, we translated the DNA reads into protein sequences based on the standard codon table. The BLAT program was executed with the command line options '-q ¼ prot-t ¼ prot-out ¼ blast8', which instructed the program to use protein queries and a protein database, and to output the data in the BLAST tabular format. The RAPSearch program was executed with the default command line options. The proposed homology search method was executed with L ¼ 10. The accuracy was evaluated in the same way as the relationship between the length of the subsequence and the acceleration ratio. The results for SRR407548, SRS011098 and ERR315856 are shown in<ref type="figure" target="#fig_7">Figure 9</ref>, Supplementary Figures S2 and S3, respectively. The accuracy of GHOSTZ was better than that of BLAT and was almost equal to that of RAPSearch. However, the accuracy of GHOSTZ was lower than that of BLASTX, especially for hits with E-values above 1:0 Â E À6. However, hits with such high E-values are not used in practice because they are unreliable. For instance,<ref type="bibr" target="#b22">Turnbaugh et al. (2006)</ref>used hits with E-values below 1:0 Â E À5 , and<ref type="bibr" target="#b8">Kurokawa et al. (2007)</ref>used hits with E-values below 1:0 Â E À8. Therefore, we consider that GHOSTZ has sufficient search accuracy for most metagenomic applications. The computation time of each method was also evaluated. The software was run with the same commands that were used to evaluate the search accuracy. The computation times of the tested methods for SRR407548, SRS011098 and ERR315856 are shown in<ref type="figure" target="#tab_2">Table 2</ref>, Supplementary Tables S1 and S2, respectively. GHOSTZ had the fastest search speed of the software packages tested. GHOSTZ achieved ~185.2–261.3 times faster processing than BLASTX, and ~2.2–2.8 times faster processing than RAPSearch.Note: The acceleration in processing speed for the search method using subsequence clustering relative to BLASTX using one thread.We also measured the search accuracy and computation time of each tool using different parameters. We used 10 000 randomly selected DNA short reads from SRR407548 and the KEGG GENES database. Because it is difficult to compare many plots showing the results for various parameters, we used single-value accuracy, which is calculated as the ratio of correctly searched queries to all queries whose E-values &lt; 1:0 Â E À3. These evaluations were performed on the same workstation used for the other evaluation, but the version of the operating system had been updated from SUSE Linux Enterprise Server 11 SP1 to SP3. Using this computing environment and these measurements, the computation time of GHOSTZ was 396.3 s and the accuracy was 0.84. Supplementary Tables S3, S4 and S5 show the accuracy and computation time of RAPSearch, BLAT and BLASTX, respectively, using different parameters. RAPSearch showed a drastic decrease in accuracy in the fast mode, and the accuracy of BLAT was not drastically improved the accuracy, even using a smaller tile size parameter. Using the fastest parameter, the accuracy of BLASTX was similar to that of GHOSTZ; however, the computation time required was much greater.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Evaluation of memory size</head><p>The amount of memory required for running GHOSTZ depends on the size of database. Current computing systems often have relatively small memory sizes relative to the size of current databases. Therefore, GHOSTZ divides a database into several chunks. GHOSTZ sequentially searches each database chunk, and merges its results with the results of previous chunk searches, when this chunk division is performed before the construction of its database indexes. The default chunk size is 1 GB. Using this approach, GHOSTZ dramatically reduces working memory requirements. However, even using this technique, GHOSTZ requires more memory than RAPSearch. When we used 10 000 randomly selected DNA short reads from soil microbiome metagenomic sequences (SRR407548) and the KEGG GENES database, GHOSTZ required ~41 GB of memory for constructing the indexes of the database, and ~7 GB for the homology search itself (<ref type="figure" target="#tab_3">Table 3</ref>). In contrast, RAPSearch required only ~4 GB for the homology search. However, GHOSTZ can reduce the memory required by decreasing the database chunk size. As shown in<ref type="figure" target="#tab_3">Table 3</ref>, the memory required for GHOSTZ increases nearly linearly in proportion to the size of the database chunks. If a database is divided into a larger number of chunks, the memory required decreases accordingly. Of course, a trade-off exists between database chunk size and search speed. Homology search computation times increase as the size of a database chunk decreases. This is so because the number of clusters increases and the cache hit ratio in ungapped extension decreases. However, the situation is not dire, as shown in<ref type="figure" target="#tab_4">Table 4</ref>, the search speed of GHOSTZ with 128 MB chunks is ~12% slower than that with 1 GB chunks. Therefore, using smaller database chunks, GHOSTZ is executable even on a typical PC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Discussion</head><p>In the evaluation experiment, GHOSTZ achieved an ~2-fold increase in speed, relative to GHOSTZ without clustering. This acceleration can probably be attributed to the reduction in the number of ungapped extensions that were required when using GHOSTZ. To validate this hypothesis, we compared the total number of ungapped extensions required by each method. In the database subsequence clustering approach, similarity filtering requires comparable computing time to the ungapped extension process; therefore, we added the number of similarity filterings performed to the number of ungapped extensions. We found that the number of ungapped extensions could be reduced to approximately one-third of the original number using database subsequence clustering. Currently, ungapped extension is one of the primary bottlenecks in fast homology searches. Thus, we think that this effective decrease in ungapped extensions contributed to the large acceleration we observed when using subsequence clustering for homology searches. CaBLASTP, which is based on a compression approach, achieved 2.4–3.1-fold faster processing speed than the original BLASTP (<ref type="bibr" target="#b3">Daniels et al., 2013</ref>). The acceleration achieved by GHOSTZ was ~2-fold faster than the speed of GHOSTZ without clustering, which is comparable to that of CaBLASTP. However, we achieved a processing speed that was much faster than that of the BLAST homology search algorithm. As described earlier, the compression approach used in CaBLASTP requires high search sensitivity and cannot be applied to faster, but less sensitive, homology search algorithms. In the initial processing, the compression search algorithm needs to find remote homologs in a coarse database, and less sensitive homology search algorithms often fail to find such sequences. In contrast, the clustering targets used in our approach are subsequences in a database, which does not depend on search sensitivity. In addition, GHOSTZ uses hamming distance in database subsequence clustering to measure the dissimilarity between sequences, whereas CaBLASTP uses sequence similarity. Using distance allows search seeds to be pruned efficiently using triangle inequality in an ungapped extension process, contributing to the acceleration in processing. GHOSTZ allows the indexes of a database to be constructed anew, so that users who wish to use other parameters can use thisNote: The first, second and third columns show the size of the database chunks, the memory required for constructing the index (GB) and the memory required for the homology search (GB), respectively. We searched the KEGG GENES (3.9 GB) database.Note: The first, second and third columns show the size of the database chunks, the computation time and the acceleration in processing speed relative to GHOSTZ, respectively, using 1 GB database chunks. We searched the KEGG GENES (3.9 GB) database.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Faster sequence homology searches</head><p>method. Construction of database indexes for a 1 GB database requires ~3 h of computation time. However, when a huge number of DNA reads obtained using next-generation sequencing are to be processed, the computation time for homology searches is generally much greater than the time required for database construction. Therefore, we consider that the computational time involved in rebuilding database indexes and clustering is not likely to be a problem in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Evaluation of computing time for more queries</head><p>Reading of database files, including indexes, accounts for a larger fraction of the computing time required for GHOSTZ, compared with the other tools evaluated, especially if the number of queries is small. In Section 3, we used 10 000 queries for evaluation because of the limitations imposed by our computational resources. Thus, the performance of GHOSTZ might have been underestimated. To investigate the point, we evaluated the computation time required for GHOSTZ and RAPSearch for 1000, 10 000, 100 000 and 1 000 000 queries. The queries were randomly selected from SRR407548 and searched against the KEGG GENES database. These evaluation tests were performed on a workstation with a 2.93 GHz Intel Xeon 5670 processor, 54 GB memory and SUSE Linux Enterprise Server 11 Service Pack 3. The acceleration ratio of GHOSTZ relative to RAPSearch is shown in Supplementary<ref type="figure" target="#fig_3">Figure S4</ref>. When 1000 queries were used, the acceleration was only 2.9. In contrast, GHOSTZ was ~3.8-fold faster than RAPSearch when the number of queries was 1 000 000. These results indicate that GHOSTZ achieves its full potential only when working on a sufficient number of queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>We developed a new homology search algorithm with subsequence clustering. We reduced the number of ungapped alignment extensions by clustering subsequences in a database, and achieved a 2-fold acceleration in processing speed without a drop in search sensitivity. The algorithm was designed for functional and taxonomic annotation in metagenome analysis. The proposed database subsequence clustering method could also be useful in proteome research, which requires a huge number of sequence homology searches.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Flow of the proposed homology search method based on database subsequence clustering. Clustering of database subsequences and similarity filtering (shaded box) are included in this method</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. Relationship between a subsequence used for clustering and the starting position of the seed</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.4.</head><figDesc>Fig. 4. Pseudo-code for database subsequence clustering</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.7.</head><figDesc>Fig. 7. Flow of the proposed homology search method without database subsequence clustering for the purpose of comparison</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.6.</head><figDesc>Fig. 6. Pseudo-code for seed search, similarity filtering and ungapped extension in the case of multiple cluster members</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.8.</head><figDesc>Fig. 8. Search accuracy of GHOSTZ for the SRR407548 sequence alignments against the KEGG GENES database. The percentage of correct answers is shown on the vertical axis. The E-values of the alignments are shown on the horizontal axis</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.9.</head><figDesc>Fig. 9. Search accuracy of different search methods for the SRR407548 sequence alignments against the KEGG GENES database. The percentage of correct answers is shown on the vertical axis. The E-values of the alignments are shown on the horizontal axis</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>V C The Author 2014. Published by Oxford University Press.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><figDesc>Table 2. Computation times for the SRR407548 reads against the KEGG GENES database</figDesc><table>Computation time (s) 
Acceleration ratio 

GHOSTZ 
460.8 
261.3 
RAPSearch 
1285.5 
93.7 
BLAT 
2514.9 
47.9 
BLASTX 
120395.2 
1.0 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 1. Computation times for homology searches using different subsequence lengths for the SRR407548 reads against the KEGG GENES database</figDesc><table>Computation time (s) 
Acceleration ratio 

Without clustering 
936.5 
1.0 
L ¼ 6 
348.7 
2.7 
L ¼ 8 
384.3 
2.4 
L ¼ 10 
460.8 
2.0 
L ¼ 12 
460.8 
2.0 
L ¼ 14 
509.3 
1.8 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true"><figDesc>Table 3. Memory usage for database construction and homology search with various database chunk sizes</figDesc><table>Tool (chunk size) 
Memory size for 
constructing index (GB) 

Memory size for 
homology search (GB) 

GHOSTZ (128 MB) 
5.4 
1.4 
GHOSTZ (256 MB) 
10.1 
2.2 
GHOSTZ (512 MB) 
21.0 
3.8 
GHOSTZ (1 GB) 
41.0 
6.7 
RAPSearch 
6.9 
4.1 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="true"><figDesc>Table 4. Computation time for database construction and homology search with various database chunk sizes</figDesc><table>Tool (chunk size) 
Computation time (s) 
Acceleration ratio 

GHOSTZ (128 MB) 
545.2 
0.88 
GHOSTZ (256 MB) 
488.2 
0.94 
GHOSTZ (512 MB) 
479.1 
0.96 
GHOSTZ (1 GB) 
460.8 
1.00 
RAPSearch 
1285.5 
0.35 

</table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">S.Suzuki et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Note: L is the length of the subsequence. The acceleration in processing speed is given as the ratio of the time used for the search method with subsequence clustering relative to the time used for the search method without subsequence clustering.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors thank Prof. Ken Kurokawa and Dr Takuji Yamada for their helpful discussion of metagenomic analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Funding</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Basic local alignment search tool</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">215</biblScope>
			<biblScope unit="page" from="403" to="410" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="3389" to="3402" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Protein database searches using compositionally adjusted substitution matrices</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">FEBS J</title>
		<imprint>
			<biblScope unit="volume">272</biblScope>
			<biblScope unit="page" from="5101" to="5109" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Compressive genomics for protein databases</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">M</forename>
				<surname>Daniels</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="283" to="290" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">The pfam protein families database</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">D</forename>
				<surname>Finn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="211" to="222" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>Suppl. . 1</note>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">CD-HIT: accelerated for clustering the next-generation sequencing data</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Fu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="3150" to="3152" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Meeting report: the terabase metagenomics workshop and the vision of an Earth microbiome project</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">A</forename>
				<surname>Gilbert</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Stand. Genomic Sci</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="243" to="248" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">BLAT–the BLAST-like alignment tool</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">J</forename>
				<surname>Kent</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="656" to="664" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Comparative metagenomics revealed commonly enriched gene sets in human gut microbiomes</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Kurokawa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DNA Res</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="169" to="181" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Fast gapped-read alignment with Bowtie 2</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Langmead</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">L</forename>
				<surname>Salzberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="357" to="359" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Langmead</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">25</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Fast and accurate short read alignment with Burrows-Wheeler transform</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Durbin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1754" to="1760" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Fast and accurate long-read alignment with Burrows-Wheeler transform</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Durbin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="589" to="595" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">CD-HIT: a fast program for clustering and comparing large sets of protein or nucleotide sequences</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Li</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Godzik</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1658" to="1659" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Suffix arrays: a new method for on-line string searches</title>
		<author>
			<persName>
				<forename type="first">U</forename>
				<surname>Manber</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Myers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="935" to="948" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Accuracy of sequence alignment and fold assessment using reduced amino acid alphabets</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Melo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Marti-Renom</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="986" to="995" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Simplified amino acid alphabets for protein fold recognition and implications for folding</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<forename type="middle">R</forename>
				<surname>Murphy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Protein Eng</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="149" to="152" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Searching protein sequence libraries: comparison of the sensitivity and selectivity of the Smith-Waterman and FASTA algorithms</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Pearson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genomics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="635" to="650" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">A human gut microbial gene catalogue established by metagenomic sequencing</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Qin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">464</biblScope>
			<biblScope unit="page" from="59" to="65" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">A genomic perspective on protein families</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">L</forename>
				<surname>Tatusov</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">278</biblScope>
			<biblScope unit="page" from="631" to="637" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">The COG database: an updated version includes eukaryotes</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">L</forename>
				<surname>Tatusov</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">41</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">The Human Microbiome Project Consortium (2012) Structure, function and diversity of the healthy human microbiome</title>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">486</biblScope>
			<biblScope unit="page" from="207" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">An obesity-associated gut microbiome with increased capacity for energy harvest</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">J</forename>
				<surname>Turnbaugh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">444</biblScope>
			<biblScope unit="page" from="1027" to="1031" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">GPU-BLAST: using graphics processors to accelerate protein sequence alignment</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">D</forename>
				<surname>Vouzis</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">V</forename>
				<surname>Sahinidis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="182" to="188" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">RAPSearch: a fast protein similarity search tool for short reads</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Ye</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">159</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">RAPSearch2: a fast and memory-efficient protein similarity search tool for next-generation sequencing data</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Zhao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="125" to="126" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>