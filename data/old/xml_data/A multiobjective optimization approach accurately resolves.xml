
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:47+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A multi-objective optimization approach accurately resolves protein domain architectures</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">J</forename>
								<forename type="middle">S</forename>
								<surname>Bernardes</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">UMR 7238</orgName>
								<orgName type="laboratory" key="lab2">Laboratoire de Biologie Computationnelle et Quantitative</orgName>
								<orgName type="institution" key="instit1">Sorbonne Université s</orgName>
								<orgName type="institution" key="instit2">UPMC Univ-Paris 6</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<address>
									<addrLine>15 rue de l&apos;Ecole de Mé decine</addrLine>
									<postCode>75006</postCode>
									<settlement>Paris</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">F</forename>
								<forename type="middle">R J</forename>
								<surname>Vieira</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="laboratory" key="lab1">UMR 7606</orgName>
								<orgName type="laboratory" key="lab2">Laboratoire d&apos;Informatique de Paris 6</orgName>
								<orgName type="institution">CNRS</orgName>
								<address>
									<postCode>75005</postCode>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">Programa de Engenharia de Sistemas e Computaçã o</orgName>
								<orgName type="institution">COPPE-UFRJ</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">G</forename>
								<surname>Zaverucha</surname>
							</persName>
							<affiliation key="aff3">
								<orgName type="department">Programa de Engenharia de Sistemas e Computaçã o</orgName>
								<orgName type="institution">COPPE-UFRJ</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">A</forename>
								<surname>Carbone</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">UMR 7238</orgName>
								<orgName type="laboratory" key="lab2">Laboratoire de Biologie Computationnelle et Quantitative</orgName>
								<orgName type="institution" key="instit1">Sorbonne Université s</orgName>
								<orgName type="institution" key="instit2">UPMC Univ-Paris 6</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<address>
									<addrLine>15 rue de l&apos;Ecole de Mé decine</addrLine>
									<postCode>75006</postCode>
									<settlement>Paris</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Institut Universitaire de France</orgName>
								<address>
									<postCode>75005</postCode>
									<settlement>Paris</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Alfonso</forename>
								<surname>Valencia</surname>
							</persName>
						</author>
						<title level="a" type="main">A multi-objective optimization approach accurately resolves protein domain architectures</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btv582</idno>
					<note type="submission">Received on January 26, 2015; revised on September 13, 2015; accepted on October 2, 2015</note>
					<note>Sequence analysis *To whom correspondence should be addressed Associate Editor: Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Given a protein sequence and a number of potential domains matching it, what are the domain content and the most likely domain architecture for the sequence? This problem is of fundamental importance in protein annotation, constituting one of the main steps of all predictive annotation strategies. On the other hand, when potential domains are several and in conflict because of overlapping domain boundaries, finding a solution for the problem might become difficult. An accurate prediction of the domain architecture of a multi-domain protein provides important information for function prediction, comparative genomics and molecular evolution. Results: We developed DAMA (Domain Annotation by a Multi-objective Approach), a novel approach that identifies architectures through a multi-objective optimization algorithm combining scores of domain matches, previously observed multi-domain co-occurrence and domain overlapping. DAMA has been validated on a known benchmark dataset based on CATH structural domain assignments and on the set of Plasmodium falciparum proteins. When compared with existing tools on both datasets, it outperforms all of them. Availability and implementation: DAMA software is implemented in Cþþ and the source code can be found at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Sequence-based domain recognition represents one of the most convenient and practical approaches to understand evolution and function of proteins. Domains are sequence fragments that can be independently stable and folded, they have a shape and a function, they occur alone or in groups and are the building blocks of all proteins. To account for the great diversity of domain contexts, several efforts were made in categorizing coding regions into protein domains and domain families. Some resources, like SCOP (<ref type="bibr" target="#b16">Murzin et al., 1995</ref>) and CATH (<ref type="bibr" target="#b20">Sillitoe et al., 2013</ref>), organize domains according to their structural classes, while others, such as Pfam (<ref type="bibr" target="#b8">Finn et al., 2010</ref>) and PROSITE (<ref type="bibr" target="#b19">Sigrist et al., 2013</ref>), are purely sequence based. These databases are the starting point of annotation pipelines that are commonly organized into three steps: (i) a probabilistic model or a set of models is built to represent each functional domain; (ii) the model library representing all domains in the database is used to scan query sequences identifying potential domains and (iii) conflicting predictions are resolved to propose a domain architecture (domain arrangement) for each protein to be annotated. Domain architecture prediction (step iii) can be used to improve the V C The Author 2015. Published by Oxford University Press.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>345</head><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com<ref type="bibr">Bioinformatics, 32(3), 2016, 345</ref>–353 doi: 10.1093/bioinformatics/btv582</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Advance Access Publication Date: 12 October 2015 Original Paper</head><p>performance of annotation methods, since homologous proteins might share their architectural context. The problem though can be complex when a query sequence matches several models, producing a set of conflicting predictions with overlapping domain boundaries. A simple strategy to resolve domain architecture in multi-domain proteins is to consider highest confidence domains without overlapping (<ref type="bibr" target="#b8">Finn et al., 2010</ref>). However, some overlapping must be admitted to increase the number of correct domain predictions, as demonstrated by the Multi-Domain Architecture (MDA) approach (<ref type="bibr" target="#b27">Yeats et al., 2010</ref>). In this approach, the set of potential domains in a query sequence is represented as a weighted graph (where nodes are domains and edges connect non-overlapping domains) and the heavier clique-finding algorithm is used to detect the most probable domain architecture. More recently, other approaches have explored domain combinations (co-occurrences) to improve architecture prediction. They all consider domains to be co-occurring on the same protein, not necessarily as consecutive one of the other. Domain co-occurrence is expected to enhance the level of confidence in a prediction (<ref type="bibr" target="#b9">Geer et al., 2002;</ref><ref type="bibr" target="#b22">Vogel et al., 2004</ref>) mainly because (i) the majority of proteins are multi-domain and (ii) we observe fewer combinations than the statistically expected ones (<ref type="bibr" target="#b5">Coin et al., 2003;</ref><ref type="bibr" target="#b14">Moore et al., 2008;</ref><ref type="bibr" target="#b22">Vogel et al., 2004</ref>). Intuitively, co-occurrence suggests functional cooperation, i.e. two or more domains can interact to determine the protein function (<ref type="bibr" target="#b0">Apic et al., 2001;</ref><ref type="bibr" target="#b12">Marcotte et al., 1999;</ref><ref type="bibr" target="#b25">Wuchty and Almaas, 2005</ref>). Domain co-occurrence has been explored by two methods: CODD (Co-Occurrence Domain Discovery) (<ref type="bibr" target="#b21">Terrapon et al., 2009</ref>) and dPUC (domain Prediction Using Context) (<ref type="bibr" target="#b17">Ochoa et al., 2011</ref>). Both methods are based on the Pfam database and, for a given protein sequence, they detect a set of potential domains by setting a permissive Pfam threshold and by allowing overlaps. They also compute and use a list of known domain architectures from UniProtKB sequences (<ref type="bibr" target="#b11">Leinonen et al., 2004</ref>). CODD starts by assigning to the query sequence nonoverlapping domains detected with a restrictive Pfam threshold. Then, it iteratively tries to add new non-overlapping domains that co-occur with the old ones according to the list of known architectures. dPUC differs in strategy from CODD. It represents potential domains as nodes of a graph, where edges connect non-overlapping domains. It weights each node with normalized Pfam scores, and it weights edge with a special context score that captures the propensity of pairwise domain combinations in the list of known architectures. Then, similar to MDA approach, dPUC finds a domain architecture for a given query sequence by looking for the maximum-weighted clique in the graph. dPUC presents two advantages over CODD: it takes into account co-occurrence of repeated domains and penalizes higher confidence domains with no co-occurrence. However, we believe that there are two points into dPUC's approach that could be improved. First, it did not consider multi-domain co-occurrence to compute domain architectures. Second, dPUC combines individual domain scores and co-occurrence information into a very simplified function, which is then optimized. We argue that this combination is non-trivial and that the function could be more complex or alternatively, could be split into several sub-functions to be optimized. Here, we present DAMA (Domain Annotation by a Multiobjective Approach), a novel algorithm that treats protein domain architecture prediction as a multi-objective optimization problem. DAMA combines a number of criteria including multi-(possibly pairwise-) domain co-occurrence and domain overlapping. By taking into account known architectural solutions, DAMA identifies them within the protein sequence and integrates new domains into them whenever possible. DAMA has been evaluated over a benchmark containing protein sequences extracted from the Protein DataBank (PDB), over the genome of the poorly annotated malaria parasite Plasmodium falciparum and over two datasets collecting known sequences characterized by large domain architectures and repeated blocks of domains. Our results show that, for all datasets, DAMA outperforms existing computational methods and detects domain architectures presenting co-occurrences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Methods</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1">The PDB benchmark</head><p>To evaluate DAMA performance, we have used the benchmark constructed for the evaluation of MDA. It contains 2523 multi-domain proteins extracted from the PDB, where each domain is classified in a CATH superfamily. The dataset is available at ftp://ftp.biochem. ucl.ac.uk/pub/gene3d_data/DomainFinder3/RC1/Benchmark/. Since this dataset is based on CATH superfamilies, we have extracted the list of known domain architectures by parsing the file</p><p>CathDomainDescriptionFile containing CATH superfamilies (domains) for all proteins in PDB database. This file is available at ftp://ftp.biochem.ucl.ac.uk/pub/cath/latest_release/. 2.1.2 The P. falciparum protein dataset All data were extracted from PlasmoDB (http://PlasmoDB.org), the official repository of the P. falciparum proteins used as a reference database by malaria researchers (<ref type="bibr" target="#b1">Aurrecoechea et al., 2009;</ref><ref type="bibr" target="#b2">Bahl et al., 2003</ref>). PlasmoDB v11 contains 5542 proteins. To provide a list of potential domains for P. falciparum protein sequences, we used Pfam v27 (downloaded from http://pfam.sanger.ac.uk), containing 14 831 domains. The list of known domain architectures was extracted from Pfam-A.full, as well as the list of allowed domain overlaps. HMM profiles, required to produce the list of potential domains for P. falciparum, were downloaded directly from the Pfam web site. To identify potential domains, we run HMMER 3.0 (hmmscan) on all protein sequences (<ref type="bibr" target="#b7">Eddy, 2011</ref>). See Section 2.5. The distribution of the number of domains in P. falciparum proteins is reported in Supplementary<ref type="figure" target="#fig_0">Figure S1</ref>. 2.1.3 DAMA time complexity on P. falciparum protein sequences We computed the run time of DAMA, MDA, CODD and dPUC on the set of domain hits provided by HMMER 3.0 and selected with an E value 1e-3. All experiments run time have been obtained on a one core single-user linux (kernel 2.6.32-431.11.2.el6.x86_64-Red Hat 4.4.7-4) Intel(R) Xeon(R) CPU E5-2650 v2 2.60 GHz, with 64 GB of RAM. Single user mode was used to minimize the number of system activities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.4">Three</head><p>benchmarks to test DAMA time complexity on long proteins The TitinLikeDB was constructed by considering three Pfam families (PF00041: fn3, PF09042: Titin_Z, PF07679: I-set; Titin_Z is known to strongly co-occur with I-set and fn3 with I-set). From these families, we selected proteins with at least 1000 amino acids: we included all Titin_Z proteins (53), randomly selected 750 proteins from fn3 and 750 from I-set. The number of proteins (1553) was determined by disk space limitations, since, on these large sequences, hmmscan was executed with permissive parameters and it produced a large amount of domain hits. The SilkWormSet was constructed from the SilkWormDB (<ref type="bibr" target="#b26">Xia et al., 2005</ref>) and it collects 324 proteins whose architecture is characterized by consecutive domain block repeats. For instance, these are proteins of the form DE<ref type="bibr">[ABC]</ref>13 FD, where ABCDEF are domains and where the block of domains ABC is repeated 13 times consecutively (<ref type="bibr" target="#b15">Moore et al., 2013</ref>). SilkWormSet contains all proteins with such repeated patterns found among the 14 623 proteins of the silkworm genome. A third dataset is constituted by long generated sequences. From the 14 831 domain families constituting Pfam 27 , we built hundred random sequences with n domains, for each n ¼ 3. .. 99 taken by steps of 3. Namely, for each random sequence to be generated, we randomly selected n domains within the Pfam 27 set, used HMMEmit (<ref type="bibr" target="#b6">Eddy, 1998</ref>) to generate n sequences close to the original ones and concatenated the n generated sequences following the order of domain extraction. For each n, DAMA has been run on the concatenated random sequences, the average computational time has been evaluated for each n and plot in Supplementary<ref type="figure" target="#fig_3">Figure S4</ref>. Over the three datasets, experiments were performed on a one core singleuser machine as indicated in Section 2.1.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Parameter settings for the optimization step</head><p>To find the best domain architecture for a given query sequence, the algorithm (described in Section 3) generates a set of feasible architectures based on domain co-occurrence constraints and finds the most likely one by optimizing the five objective functions F 1. .. F 5 above. The tolerance values d j for each function F j (j 4) in Equation (6) are set by the user depending on the dataset considered. For the d 1 value, aimed to introduce some flexibility on the selection of the domains, the idea is to evaluate not only domains with best E-value score but also those with good E-value score that are well supported by known co-occurrence. This required to set d 1 ¼ 0 for the two datasets we analyzed, one based on CATH and the other on Pfam. Then, for each domain database, the notion of 'higher confidence domain' for the optimization function F 1 was modeled accordingly. For CATH, we wanted the model to fit the spirit of the database by allowing a selection of several potential hits for the final architecture, among the ones suggested by multiple probabilistic models (for a given domain, these hits overlap and are characterized by different boundaries and E-value scores), and we set d 1 ¼ 40 to expand the region of optimal solutions for our PDB benchmark. This permissive d 1 value allows to select a large number of overlapping hits with acceptable E value among which to find the one that accommodates best the other domains of the architecture. In contrast, for Pfam, the higher confidence domain is modeled by the domain hit with the best score. Because of this, we set a much less permissive d 1 ¼ 10 to assure hits with the highest E-value scores to belong to the final architecture for the P. falciparum annotation. To maximize the number of domain co-occurrences and the number of distinct domains, we set d j ¼ 0 for j &gt; 1 for both datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Measuring prediction accuracy</head><p>As was done for MDA in<ref type="bibr" target="#b27">Yeats et al. (2010)</ref>, a predicted MDA is considered correct if the superfamily types and the number of occurrences of domains are predicted correctly, irrespective of whether the boundary positions are correct. The overall accuracy is then calculated over the whole dataset. If too many domains of the correct superfamilies (the CATH level H corresponding to Homologous superfamilies is used) are predicted then this is termed a 'semi-false positive', while if the extra domains belong to an incorrect superfamily, it is termed a 'false positive'; if DAMA is missing a domain, it is a 'false negative'. Note that the false negative rate is due to the E-value cut-off 0.001, used both in DAMA and MDA. A single predicted MDA can potentially contain errors in all three classes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Estimating false discovery rate</head><p>The estimation of the number of false predictions is an essential step for evaluating the performance of domain identification methods. The two strategies that we used to estimate the false discovery rate (FDR) were both employed before. The first one estimates the probability that a potential domain has been randomly predicted, and it was employed for the evaluation of dPUC (Section 2.4.1). The second strategy estimates the number of false co-occurrence certifications in architectures and it was proposed in the evaluation of CODD (Section 2.4.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.1">FDR over domain prediction</head><p>The FDR over domain predictions was estimated by comparing the number of predictions on real and shuffled sequences. Intuitively, domain predictions on shuffled sequences arise by chance alone, whereas predictions on real sequences provide the total number of domains (true or false). Therefore, the ratio between these two values should approximate the FDR. To compute FDRs, real sequences were concatenated to shuffled ones, where these latter were generated according to two different hypothesis or random models. The first random model (1-mer) takes a real sequence and generates a reshuffled one that has the same residue content of the original sequence and the same length. The second random model (4-mer) takes a real sequence but generates reshuffled sequences of successive k-mers, for k ¼ 4. This implies that the same residue content and the same length are preserved. The idea behind this last model is that protein sequences are made by small fragments of residues playing a relevant structural and functional role and that small k-mers approximate these potential patterns in a protein. Both random models were applied to each sequence 20 times, and the random reshuffling was realized with the perl function List::Util::shuffle(). If P is the original set of protein sequences and S its associated shuffled sequence, let P þ S be the set of concatenated sequences. Note that the set P þ S is a set containing 20 times more sequences than P because from each sequence in P, we generated 20 sequences. Then, we computed the number of domain predictions within the P-portion (saying R) and the number of predictions within S-portion (saying A) of the P þ S sequences and set the FDR ¼ A=R for the dataset. The same strategy was used in (<ref type="bibr" target="#b17">Ochoa et al., 2011</ref>) (see Section 2.4.2 and the legend of Supplementary<ref type="figure">Fig. S6</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.2">FDR curves</head><p>The FDR can be controlled by modulating the E-value threshold used to filter potential domains. To construct the FDR curve, we followed the method in<ref type="bibr" target="#b17">Ochoa et al. (2011)</ref>. Namely, we consider several input sets of domain hits produced by HMMER 3.0 with a threshold &lt; M, for different E-value thresholds M. Then we run each tool on each set and compute FDR and number of domains per protein for the resulting sets of architectures. This calculation allows the construction of the curves in the figure. Best performing methods present higher curves. In each plot, the FDR curves of all methods were computed by using the same set of shuffled sequences. we wished to 'certify' a potential domain based on the co-occurrence of the domain with 'validated' ones. Then, intuitively, the FDR will express how many times an architecture made of validated domains and certified domains will arise at random. To compute the FDR, first, we randomly permuted all potential domains across proteins. This means that the identities of the potential domains (not their locations) are randomly reassigned. Then, we computed the number of random domains that were 'certified' after randomization over all proteins. The FDR of the certification procedure is computed as A/R, where A is the number of certified domains after randomization and R is the number of 'certified' domains on the original data. This procedure is repeated 1000 times and the average FDR is reported. The same strategy was used in Terrapon et al. (2009).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Computational tools used for comparisons</head><p>We compare DAMA to four domain architecture prediction tools: hmmscan, CODD, dPUC and MDA. hmmscan was run with default parameters and curated inclusion thresholds. The option –cut_ga, for model-specific thresholding (using profile's GA gathering cutoffs to set all thresholding), was used. hmmscan is included in the HMMER 3.0 package (http://hmmer.janelia.org/software). We also used hmmscan (with permissive thresholds) to generate the set of potential domains required as input for DAMA, CODD, dPUC and MDA. For that, we used the following command line: hmmscan –F1 0.1 –F2 0.1 –F3 0.1 –domZ 1-Z 1-E 0.1 –domE 0.1-o dev/null –domtblout output. All tools were tested starting from the same reference set of known architectures and the same domain context information, for each comparison. CODD, dPUC and MDA were run with default parameters. MDA was downloaded from ftp://ftp.biochem.ucl.ac.uk/pub/gene3d_data/DomainFinder3/. CODD and dPUC were not publicly available at the time our analysis (on Pfam 27 ) was realized and we obtained them from the authors. A version of dPUC, compatible with Pfam 27 , is now available at http://viiia.org/dpuc2/.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Implementation and input files</head><p>DAMA package is written in Cþþ, and it is available at http:// www.lcqb.upmc.fr/DAMA/. Parameters and options are described in the website. DAMA takes as input two files. The first describes the set of annotated sequences. For each domain, a line reports the sequence identifier, the domain identifier, start and end positions of the domain match on the probabilistic model used for annotation, start and end positions of the domain along the sequence. The localization of the domain match against the probabilistic model is used only for computing the coverage of the match against the model. Depending on the set of sequences to annotate, different coverage thresholds might be best appropriate. For the evaluation of DAMA on P. falciparum sequences, we asked domain matches to cover at least 40% of their probabilistic models. This option allows DAMA to construct architectures with domains that match sufficiently well their model. It can be disabled by setting the domain coverage parameter at 0. The second input file contains the list of known domain architectures. In our tests, we used the lists produced by CATH and Pfam but any choice is possible. DAMA leads to a unique solution. In case multiple architectures would display the same best F 5 value, all architectures would be proposed as solutions. (This case is unlikely to happen.) Note that a DAMA option provides the user with the whole set of feasible architectures L 0 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The algorithm</head><p>DAMA is a combinatorial search algorithm designed to resolve domain architectures in multi-domain proteins. Two main steps underpin DAMA approach: (i) the enumeration of all possible architectures, subject to domain co-occurrence constraints and (ii) the selection of the architecture that maximizes a set of objective functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Step 1: enumeration of the architectures</head><p>Let s be a query sequence, P be the set of its potential domains provided with an E-value (also called 'hits';<ref type="figure" target="#fig_0">Fig. 1A</ref>) and L be the list of all known architectures sharing domains with P (<ref type="figure" target="#fig_0">Fig. 1C</ref>). To enumerate a set of potential architectures for s, we first construct the interval graph G whose nodes represent domains in P and edges connect overlapping domains (<ref type="figure" target="#fig_0">Fig. 1B</ref>). Note that domain overlap is allowed if it is made of less than 30 amino acids and it comprises at most 50% of the match, as done in<ref type="bibr" target="#b27">Yeats et al. (2010)</ref>, or if it has been observed before as indicated in the list of known architectures L, as done in<ref type="bibr" target="#b17">Ochoa et al. (2011)</ref>. We refer to it as 'overlapping condition'. Second, we read off from the interval graph G a list of potential architectures. To do so, let us recall that an independent set is a set of nodes in G, such that no edge connects two vertices in the set and(C) and (D). (F) Filtering of the architectures in E with 5 optimization functions and selection of the best architecture that a maximal independent set is a set that is not a proper subset of any independent set. Inspired by these classical notions, given a domain D i 2 P, we say that an independent set associated to a domain D i is an independent set of nodes in G, such that for each pair of domains D i , D j in the set, there exists an architecture in L that contains D i , D j where both the sequential order and the number of times each domain occurs are ignored (<ref type="figure" target="#fig_0">Fig. 1D</ref>). We also say that a Maximal Independent Set associated to a domain D i (in short MISðD i Þ) is an independent set of nodes in G that is maximal for D i , in the sense that it is not a proper subset of any independent set associated to D i. Hence, on the basis of these definitions, for each domain D i , we define the potential architectures for s to be the maximal independent sets associated to D i. Note that there might be several maximal independent sets associated to D i , as illustrated in<ref type="figure" target="#fig_0">Figure 1D</ref>. Finally, the list of architectures associated to domains in P is enriched with new domains having an E-value &lt; 1e-10, possibly overlapping with those domains that are already present in the architecture (see the overlapping condition above). Note that these new domains added to an architecture do not co-occur with the existing ones. All possible maximal enrichments are generated, in the sense that an enriched architecture is not a proper subset of any other architecture. We call this set of architectures L 0 (<ref type="figure" target="#fig_0">Fig. 1E</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Step 2: selection of the optimal architecture</head><p>We wish to find the optimal architecture in L 0. For this, we define five objective functions, and we treat this problem as a multi-objective optimization problem. There exist many methods to search for an optimal solution (<ref type="bibr" target="#b13">Marler and Arora, 2004</ref>), and we used a variation of the lexicographic approach proposed in (<ref type="bibr" target="#b23">Waltz, 1967</ref>), where objective functions are arranged in order of importance, constraints are formulated on these functions and the optimization problems are solved one at a time. The five functions were designed according to several objectives: a. To ensure that higher confidence domains (not necessarily the highest) are in the final architecture, we define</p><formula>F 1 ðxÞ ¼ arg max ai E-valueExpða i Þ (1)</formula><p>where a i is a domain contained in the feasible architecture x 2 L 0 , and E-valueExpða i Þ is the function that taken a score 1eÀk E-value ða i Þ 1eÀk þ 1 associated to the match of the domain a i in x, returns the exponent k. b. To maximize the number of multi-domain co-occurrences, we definewhere MDCO(x) is the multi-domain co-occurrence factor, that is the number of domains in x that co-occur together in L. For instance, F 2 ðbdgÞ ¼ 3 if the domains b, d, g are found in some architecture in L, while F 2 ðacdÞ ¼ 2 if only pairs of domains a, c and a, d are found in architectures of L (<ref type="figure" target="#fig_0">Fig. 1C</ref>where N is the number of domains in x, a i is the ith domain in x. For example, among the two architectures A 1 and A 3 in<ref type="figure" target="#fig_0">Figure 1E</ref>, F 5 selects A 1 because domain c has higher E-value than domain b, as illustrated in<ref type="figure" target="#fig_0">Figure 1A</ref>. For each protein sequence and its set of feasible architectures L 0 , we run the optimization problems defined by the five functions above and solve them one at a time:</p><formula>Maximize x2L 0 F i ðxÞ</formula><p>subject to F j ðxÞ ! F j ðx Ã j Þ À d j for j ¼ 1;. .. ; i À 1 and i &gt; 1</p><formula>(6)</formula><p>where i ¼ 1; 2;. .. ; 5 indexes the order of the objective functions F i s, F j ðxÞ ! F j ðx Ã j Þ À d j is a constraint on the jth function where F j ðx Ã j Þ represents the optimum of the jth objective function found in the jth iteration and d j is a tolerance constant. Note that, after the first function F 1 is applied, F j ðx Ã j Þ is not necessarily the same as the independent maximum of F j ðxÞ, because constraints dependent on d j might have been applied. In fact, the parameter d j is a non-negative constant that defines a non-negative tolerance for each objective function (values for it are discussed in Section 2.2; note that the last function, F 5 , is not dependent on a tolerance value and will provide a unique solution). If d j ¼ 0 then the optimal solution is dictated by F j and if d j ¼ 0 then the 'region' of optimal solutions dictated by F j expands. This reduces the sensitivity of the final solution to the initial objective function ranking process. In<ref type="figure" target="#fig_0">Figure 1</ref>, the role of tolerance constants is illustrated by domains a and g that match the sequence with close E values; because of the parameter d 1 ¼ 0, the optimization function F 1 selects the architecture, e.g. where the E value of g is strictly smaller than the E value of a. It should be remarked that the lexicographic approach (<ref type="bibr" target="#b23">Waltz, 1967</ref>) makes sense only if x Ã i can be computed for all F i 's, and we ensure this by applying our objective functions to the list of feasible architectures L 0 , where the functions are well-defined.In practice, the algorithm starts with the set of architectures L 0 ¼ L 0 and maximizes the list of objective functions, one after the other, by selecting, after the optimization of the first j functions, a set of optimal architectures L jþ1 &amp; L j satisfying the (j þ 1)th function. Such optimal architectures are required to satisfy all j objective functions evaluated until that point, up to some tolerance constant. The final selected architecture is the one that satisfies all optimization functions (<ref type="figure" target="#fig_0">Fig. 1F</ref>). The algorithm returns a single architecture as the best one. In case multiple architectures happen to maximize F 5 , they will all be provided as best solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results</head><p>We evaluated the performance of DAMA on two datasets: a benchmark containing multi-domain proteins and the genome of the malaria parasite P. falciparum. The PDB benchmark was proposed in<ref type="bibr" target="#b27">Yeats et al. (2010)</ref>to measure the performance of the MDA approach, and we used it to compare DAMA and MDA (Section 4.1). This benchmark is useful for optimizing parameters and evaluate the robustness of the algorithm, but it does not constitute a realistic case study, made of a large set of highly divergent sequences, as often encountered in the annotation of new genomes. To address these difficulties, we considered the set of P. falciparum proteins, known to be hard to annotate and we compared the performance of DAMA, MDA, dPUC and CODD on its domain annotation (Section 4.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">The PDB benchmark</head><p>The PDB benchmark contains only multi-domain proteins extracted from the PDB (see Section 2) and was proposed to measure the performance of MDA (<ref type="bibr" target="#b27">Yeats et al., 2010</ref>). We have reproduced the same experiment and compared DAMA with MDA.<ref type="figure" target="#tab_1">Table 1</ref>lists precision, recall and F-measure for DAMA and MDA on the PDB benchmark. Both tools present high accuracy being DAMA slightly better. The table also shows the number of true positives, false positives, false negatives and semi-false positives obtained for each tool. Semi-false positives are additional domains that were detected by DAMA or MDA and that belong to the same CATH superfamilies. DAMA seems to be more permissive than MDA detecting more true positives and a high number of semi-false positives. The high accuracy obtained by both methods is due to the high similarity between the query sequences and the seed sequences used to construct CATH models. In fact, we expect each domain in a query sequence to be identified by a model constructed from close sequences, since query sequences and CATH superfamilies are both extracted from the PDB.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Annotation of the P. falciparum proteins</head><p>To account for a realistic dataset, made of a large pool of highly divergent sequences, we tested DAMA, MDA and two more available tools, CODD (<ref type="bibr" target="#b21">Terrapon et al., 2009</ref>) and dPUC (<ref type="bibr" target="#b17">Ochoa et al., 2011</ref>), on the P. falciparum genome. Since we do not know the exact number of domains present in proteins of P. falciparum, it is not possible to measure the rate of true positives, false positives and false negatives for computing standard measures (precision, recall and Fmeasure) as done for the PDB benchmark. However, we can estimate the proportion of false positives, i.e. the FDR, among domain predictions obtained for P. falciparum and then plot the number of domain predictions against the FDR at various thresholds. We have computed the FDRs according to two different strategies, over domain predictions (Section 2.4.1) and over domain architecture predictions (Section 2.4.3). We expect the best methods to detect more domains at the same 'noise' level and with 'noise' increase. The distribution of the number of domains per protein of the P. falciparum sequences is reported in Supplementary<ref type="figure" target="#fig_0">Figure S1</ref>, where most of the sequences have no domain or one domain. The first strategy computes the FDR as the ratio between predictions obtained on shuffled sequences concatenated to real sequences and predictions obtained on real sequences only. Shuffled sequences were generated according to two different hypotheses both preserving the same amino-acids composition of the original sequence. The first hypothesis, named 1-mer, reshuffles all amino-acid positions in a sequence, while the second one reshuffles consecutive 4-mers in a sequence.<ref type="figure">Figure 3A</ref>shows that DAMA predicts more domains over a large range of FDRs for both the 1-mer (<ref type="figure">Fig. 3A</ref>, left) and the 4-mer (<ref type="figure">Fig. 3A</ref>, right) hypotheses than the other tools. Note that dPUC outperforms MDA on 1-mer, while on 4-mer the opposite holds. This is due to MDA better handling of false positives (see legend of Supplementary<ref type="figure">Fig. S6AB</ref>). CODD displays a stable behavior on both cases, but its performance remains poor. We also report hmmscan behavior and its poor results are due to the fact that over Pfam, it adopts a Pfam curated 'gathering' threshold (GA) cutoff to control the rate of false positives (see Section 2.5). (See Supplementary<ref type="figure">Fig. S6</ref>for an alternative evaluation strategy reconfirming DAMA behavior.) The second strategy measures the FDR over domain architectures by computing the probability of obtaining them randomly. For this, we assume that the architectures provided by hmmscan are the true ones. (As highlighted above, hmmscan uses restrictive domaindependent thresholds guaranteeing a low false-positive rate.) Therefore, domains in an annotated protein sequence are split into two groups: domains assigned by hmmscan (true domains) and domains detected by another tool (potential domains). We randomly permute the potential domains of all proteins preserving the number of domains in each protein. Then, the FDR is the number of certified random domains over the number of certified true domains, where a certified domain is a potential domain that co-occurs with a true domain according to the list of known architectures (see details of FDR computation in Section 2.4.3). It is noteworthy to say that although the shuffling leads to 'random' contexts, the nature of this FDR definition might disadvantage methods that use domain scores in picking a best set of domains (including DAMA and dPUC) as opposed to just considering contexts (such as CODD). However, as shown in<ref type="figure">Figure 3B</ref>, DAMA predicts more certified domains than the other tools for the same FDR value. Also, note that MDA, a method that does not explore domain co-occurrence, achieves a better performance than dPUC and CODD. We verified whether DAMA detects architectures having more co-occurrent domains than other tools. For this and for a given FDR, we have computed the number of proteins having 2, 3, 4 and at least 5 co-occurrent domains.<ref type="figure">Figure 3C</ref>shows the number of proteins having co-occurrents domains at FDR ¼ 2eÀ4 for 1-mer<ref type="figure">Fig. 3C</ref>, left) and at FDR ¼ 9eÀ4 for 4-mer (<ref type="figure">Fig. 3C</ref>, right), where the values correspond to the highest FDR value obtained by hmmscan. We observe that DAMA predicts more co-occurrents domains for all values (i.e. 2, 3, 4 and more).<ref type="figure">Figure 3D</ref>shows the number of proteins having co-occurrent domains at FDR ¼ 0:05 computed over domain architectures. DAMA predicts much more co-occurrent domains than any other tool, and this confirms that it is an accurate method for prediction of MDAs. Some examples are illustrated in<ref type="figure" target="#fig_3">Figure 4</ref>. They are all supported by known cooccurrence and they highlight the identification of domains with different functionalities (<ref type="figure" target="#fig_3">Fig. 4A</ref>and C) and of repeated domains with identical function (<ref type="figure" target="#fig_3">Fig. 4B</ref>and C). One more test was done on domain architectures that were selected as best ones by MDA, CODD and dPUC and that were filtered out by one of the five DAMA functions (Supplementary<ref type="figure" target="#fig_2">Fig.  S2</ref>). About half of these architectures are filtered out by the F1 function and progressively by F2, F3, F4 and F5. All functions contribute in DAMA selection, for the three subsets. The majority of the architectures selected by the three tools are subsets of DAMA best architecture (as illustrated in<ref type="figure" target="#fig_3">Fig. 4</ref>), but there are 20% of the architectures that contain domains that are not present in DAMA best architecture and F1, F3 and F4 play a key role in their selection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Role of the optimization functions in DAMA</head><p>Several tests have been performed to establish the importance of each optimization function in domain filtering. When taken alone (the other four functions are ignored by the algorithm), the five functions do not perform as well as taken together, on both 1-mer and 4-mer. In particular, F1 and F5 appear to contribute the most and the least to DAMA performance, respectively. (Note that the corresponding performance curves approximate from the top and the bottom the curves associated to the other functions; see Supplementary<ref type="figure">Fig. S3c and d</ref>). Also, the absence of either F1 or F5 in DAMA is associated to a decreased performance (Supplementary<ref type="figure">Fig. 3g and h</ref>). Assuming the presence of F1 and F5, all other functions were tested alone (Supplementary<ref type="figure">Fig. S3e</ref>and f) or in pairs (Supplementary<ref type="figure">Fig. S3g</ref>and h) and in all cases, DAMA (defined by the five functions together) appeared to provide the best results. The filtering order suggested in DAMA is supported by these results. It has been previously shown that some domain are more versatile than others (<ref type="bibr" target="#b3">Basu et al., 2008;</ref><ref type="bibr" target="#b24">Weiner et al., 2008</ref>). For this, we redefined function F3 as the probability that a distinguished domain pair in a sequence x co-occurs in L to test whether this recognized bias could improve DAMA prediction. This alternative definition does not improve the performance obtained with the original F3 function, based on counting. Moreover, when tested alone, F3 appears to perform better than F3 based on probabilities. See Supplementary<ref type="figure">Figure S3a</ref>and b. This finding suggests that the maximization of the number of known co-occurrences in a domain arrangement, is the main trend guiding architecture evolution and not most probable domain co-occurrence. Function F4 was also redefined by letting diff ðxÞ to return the number of distinct domains in a sequence x that co-occur in L and do not belong to the same clan. Replacing this new version of F4 in DAMA did not improve the performance obtained with the original F4 function. When tested alone, the new version performs worse than the original one. See Supplementary<ref type="figure">Figure S3a</ref>and b.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">DAMA time complexity and large domain architectures</head><p>We evaluated DAMA time complexity and compared it with other methods, on three benchmarks: the set of P. falciparum proteinsequences contains 5542 proteins; TitinLikeDB contains 1553 proteins with an average length of 11 820 aa (spanning from 211 to 36 507 aa) and with a very large number of domains (up to 942, with an average of 22 domains per protein): fibronectin type III domains (fn3), Titin_Z and immunoglobulin I-set domains (I-set); SilkWormSet contains 324 proteins with consecutive repetitions of blocks of domains (<ref type="bibr" target="#b15">Moore et al., 2013</ref>), where block size spans from 2 to 18 domains and repetitions might reach 28 block occurrences. These proteins span from 114 up to 13 509 aa in length, with an average of 1031 aa and they contain up to 92 domains with an average of 13 domains per protein. Results for the three experiments are reported in<ref type="figure" target="#tab_2">Table 2</ref>. See also Supplementary<ref type="figure">Figure S5</ref>for boxplots of run time on P. falciparum proteins. For TitinLikeDB and SilkWormSet, all known domain architectures could correctly (for domain positioning and number of repeated domains) be reconstructed by all systems in a very reasonable computational time, starting from the same set of domain hits. DAMA is the fastest, yet comparable to MDA and CODD. To investigate further DAMA behavior on small and large architectures, we constructed a dataset of generated sequences containing a progressively large number of domains, from 3 up to 99. DAMA time performance is reported in Supplementary<ref type="figure" target="#fig_3">Figure S4</ref>. Note that, this performance evaluation agrees with the one reported in<ref type="figure" target="#tab_2">Table 2</ref>, and it provides an estimation for much larger protein architectures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>Accurate prediction of MDAs is extremely useful for function and network prediction, including phylogenetic profiling, gene fusion detection, protein–protein interaction inheritance and annotation by homology transfert (<ref type="bibr" target="#b27">Yeats et al., 2010</ref>). Moreover, the amount of accurate information that can be generated by tools like DAMA on new genomes and metagenomes will be useful to answer evolutionary questions on the dynamics of architecture formation across species. The way protein architectures form is an important factor to understand protein evolution. A quantification of the elementary events affecting protein architectures, such as domain(s) insertion/ deletion, duplication and exchange, was done (<ref type="bibr" target="#b4">Bjö rklund et al., 2005</ref>) but, yet, little is known about the relationships between these elementary events (<ref type="bibr" target="#b18">Pasek et al., 2006</ref>) and the molecular mechanisms they originate from. Finer domain mapping on entire sets of proteins for completely sequenced genomes will contribute precise information on the evolution of these architectures. This means, for instance, a more precise estimation of the rate of insertion, deletion, duplication and exchange of domains within proteins in a given species. In general, it would be interesting (i) to establish whether the process of generation of an architecture follows constraints or not, (ii) to pinpoint such constraints, if they exist and (iii) to verify whether they are species specific or not. Along a phylogenetic tree, domains might have been lost, permuted, combined with other domains, they might be integrated within an architecture and lost again. On the other hand, architectures might have been duplicated, recombined, broke up again. In summary, the process of architectures formation appears to follow evolutionary rules that need yet to be unraveled. To test the performance of DAMA and other tools in architecture reconstruction, we looked for a realistic dataset of sequences that could represent well the difficulties encountered in genome and metagenome annotation. We decided to consider the set of P. falciparum protein sequences, knowing that these sequences diverged sufficiently from those that were used to construct probabilistic models employed for domain identification. This set of sequences represent in a fine way the protein world, compared with the benchmark based on CATH domains used in the first evaluation. Other genomes could be used instead. On comparable FDRs, computed from the two artificial datasets (1-mer and 4-mer) constructed by reshuffling sequences of the P. falciparum genome, MDA showed to behave very well despite the fact that it was not explicitly tested over the P. falciparum genome before, while CODD and dPUC were. DAMA overperforms all tools and its excellent performance is due to several reasons. First, in DAMA, domain overlapping is considered by combining the strategies introduced in MDA (<ref type="bibr" target="#b27">Yeats et al., 2010</ref>) and in dPUC (<ref type="bibr" target="#b17">Ochoa et al., 2011</ref>). Second, DAMA exploits knowledge on multi-domain co-occurrence by combining individual domain scores with cooccurrence information in five different optimization functions. This multi-objective optimization strategy is a refinement of the simplified function proposed in dPUC, while domain co-occurrence was not considered at all in MDA. We also considered the likeliness to find co-occurring domains by chance on randomly shuffled domain architectures. The artificialdataset that we constructed from P. falciparum sequences, allowed to verify again that DAMA performs the best followed by MDA. The difference between MDA and DAMA with CODD and dPUC is striking, especially when considering the high number of domains certified by the tools. New improvements, leading to a higher accuracy, might be envisageable by looking at specific failures of DAMA, by replacing some of the optimization functions F i with some alternative definition, by redefining tolerance parameters d i as functions of specific architecture characteristics (as the number of domains) or by integrating other architecture characteristics like the high frequency of certain pairs of domains that was ignored in this version of the tool.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Main steps in DAMA algorithm. (A) Potential domains (P) for a query sequence are ranked from bottom to top by their decreasing E value. Overlaps between domains are allowed (see domains de or dg). Domains are denoted with different letters. The same letter code is used in (B–E). (B) Domains in (A) are represented as nodes of an 'interval' graph, where edges connect all overlapping domains with the exception of domains with a very small overlap or domains that appear as overlapping in the list of known protein architectures in (C) (see the overlapping condition). Edges not included in G are (g, d) because the overlap is too small and (a, c) because the overlap is known (see C). (C) List of known domain architectures sharing domains with P. (D) List of all Maximal Independent Subsets associated to some domain (MSI) for the graph in B satisfying pairwise domain constraints according to the list in (C). (E) List of feasible architectures obtained by crossing information coming from (C) and (D). (F) Filtering of the architectures in E with 5 optimization functions and selection of the best architecture</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. Selection of architectures with a multiple domain co-occurrence. (A) Two architectures, A 1 , A 2 , where A 1 is composed by a double occurrence of domain b. Domains are denoted with different letters, and the same letter code is used in (B) and (C). (B) List of architectures that allow for the selection of A 1 with the objective function F 2 , because F2ðabbÞ ¼ 3 and F2ðabcÞ ¼ 2. (C) List of architectures that allow for the selection of A 2 with the objective function F 4 , because F4ðabbÞ ¼ 2 and F4ðabcÞ ¼ 3. Note that F2ðabbÞ ¼ F2ðabcÞ ¼ 2; F3ðabbÞ ¼ F3ðabcÞ ¼ 3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.4.</head><figDesc>Fig. 4. Three examples of domain predictions on P. falciparum proteins. Architectures of P. falciparum proteins identified by DAMA, CODD, dPUC, MDA run with default parameters. DAMA shows to identify more domains that other tools and predictions are based on known co-occurrence in Pfam 27 : (A) DEAD, SPRY, Helicase_C co-occur in 113 proteins; (B) RRM_5 (2 occurrences), RRM_1, RRM_6 co-occur in 34 proteins; (C) CDC48_N, CDC48_2, AAA x 2, Vps4_C co-occur in 159 proteins. The name of the protein (PlasmDB id) is followed by its length (number of amino-acids). DAMA was used fixing a FDR threshold at 2e–04, as in the 1-mer experiment reported in Figure 3C</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><figDesc>Table 1. Performance of MDA and DAMA on a PDB benchmark</figDesc><table>Performance measures 
MDA 
DAMA 

Precision 
0.99 
0.99 
Recall 
0.96 
0.98 
F measure 
0.97 
0.99 
True positives 
5914 
6044 
False positives 
25 
52 
Semi-false positives 
67 
1030 
False negatives 
262 
132 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 2.Time performance comparison</figDesc><table>Tools 
P. falciparum dataset TitinLikeDB SilkWormSet 

DAMA 
16.064 s 
24.437 s 
3.72 s 
MDA 
36.9 s 
27.672 s 
4.96 s 
dPUC 
212.601 s 
132.133 s 
22.08 s 
CODD 
53.317 s 
29.417 s 
5.37 s 
No. proteins 
5542 
1553 
324 
No. domain hits 
3 850 992 
2 278 497 
504 936 </table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">J.S.Bernardes et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="2">.4.3 FDR over domain architectures The FDR over domain architectures estimates the probability of detecting co-occurrent domains by chance. Given the list of known architectures, a set of validated domains (obtained by applying hmmscan with restrictive thresholds) and a set of potential domains (i.e. new domains detected by a tool with permissive threshold), Domain architectures</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We thank A. Ochoa and N. Terrapon, authors of dPUC and CODD, for having made accessible to us their implementations (for use with Pfam 27 ) and for their help in running the tools. We thank the referees for making very insightful suggestions and remarks. Experiments were carried out using the computing grid Grid'5000 (https://www.grid5000.fr) and the UPMC MESU machine (ANR-10-EQPX-29-01).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Funding</head><p>This work was undertaken (partially) in the framework of CALSIMLAB, supported by the public grant ANR-11-LABX-0037-0 from the '</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Domain combinations in archaeal, eubacterial and eukaryotic proteomes</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Apic</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">310</biblScope>
			<biblScope unit="page" from="311" to="325" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">PlasmoDB: a functional genomic database for malaria parasites</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Aurrecoechea</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="539" to="543" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">PlasmoDB: the Plasmodium genome resource. A database integrating experimental and computational data</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Bahl</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="212" to="215" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Evolution of protein domain promiscuity in eukaryotes</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Basu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="449" to="461" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Domain rearrangements in protein evolution</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Bjö Rklund</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">353</biblScope>
			<biblScope unit="page" from="911" to="923" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Enhanced protein domain discovery by using language modeling techniques from speech recognition</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Coin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Natl Acad. Sci. U S A</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="page" from="4516" to="4520" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Profile hidden Markov models</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Eddy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="755" to="763" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Accelerated profile HMM searches</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">R</forename>
				<surname>Eddy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comp. Biol</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">1002195</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">The Pfam protein families database</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Finn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="211" to="222" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<monogr>
		<title level="m" type="main">CDART: Protein homology by domain architecture</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Geer</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="1619" to="1623" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Uniprot archive</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Leinonen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="3236" to="3237" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Detecting protein function and protein-protein interactions from genome sequences</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Marcotte</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">285</biblScope>
			<biblScope unit="page" from="751" to="753" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Survey of multi-objective optimization methods for engineering</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Marler</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Arora</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Struct. Multidiscip. Optimization</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="369" to="395" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Arrangements in the modular evolution of proteins</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Moore</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trends Biochem. Sci</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="444" to="451" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Quantification and functional analysis of modular protein evolution in a dense phylogenetic tree</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Moore</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biochim. Biophys. Acta</title>
		<imprint>
			<biblScope unit="page" from="1834" to="898" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">SCOP: a structural classification of proteins database for the investigation of sequences and structures</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">G</forename>
				<surname>Murzin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">247</biblScope>
			<biblScope unit="page" from="536" to="540" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Using context to improve protein domain identification</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Ochoa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">90</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Gene fusion/fission is a major contributor to evolution of multi-domain bacterial proteins</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Pasek</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1418" to="1423" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">New and continuing developments at prosite</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">J A</forename>
				<surname>Sigrist</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="344" to="347" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">New functional families (funfams) in cath to improve the mapping of conserved functional sites to 3D structures</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Sillitoe</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="490" to="498" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Detection of new protein domains using cooccurrence: application to Plasmodium falciparum</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Terrapon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="3077" to="3083" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Supra-domains: evolutionary units larger than single protein domains</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Vogel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">336</biblScope>
			<biblScope unit="page" from="809" to="823" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">An engineering approach: hierarchical optimization criteria</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Waltz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">179180</biblScope>
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Just how versatile are domains?</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Weiner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Evol. Biol</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">285</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Evolutionary cores of domain co-occurrence networks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Wuchty</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Almaas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Evol. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">24</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Silkdb: a knowledgebase for silkworm biology and genomics</title>
		<author>
			<persName>
				<forename type="first">Q</forename>
				<surname>Xia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="399" to="402" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">A fast and automated solution for accurately resolving protein domain architectures</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Yeats</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="745" to="751" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<monogr>
		<title level="m" type="main">Domain architectures</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>