
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:42+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Lineage-based identification of cellular states and expression programs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012">2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Tatsunori</forename>
								<surname>Hashimoto</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Electrical Engineering</orgName>
								<orgName type="institution">Massachusetts Institute of Technology</orgName>
								<address>
									<postCode>02139</postCode>
									<settlement>Cambridge</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Tommi</forename>
								<surname>Jaakkola</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Electrical Engineering</orgName>
								<orgName type="institution">Massachusetts Institute of Technology</orgName>
								<address>
									<postCode>02139</postCode>
									<settlement>Cambridge</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Richard</forename>
								<surname>Sherwood</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Brigham Women&apos;s Hospital and Harvard Medical School</orgName>
								<address>
									<postCode>02115</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Esteban</forename>
								<forename type="middle">O</forename>
								<surname>Mazzoni</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Departments of Pathology, Neurology and Neuroscience</orgName>
								<orgName type="department" key="dep2">Center for Motor Neuron Biology and Disease and Columbia Stem Cell Initiative</orgName>
								<orgName type="institution">Columbia University Medical Center</orgName>
								<address>
									<postCode>10032</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Hynek</forename>
								<surname>Wichterle</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Departments of Pathology, Neurology and Neuroscience</orgName>
								<orgName type="department" key="dep2">Center for Motor Neuron Biology and Disease and Columbia Stem Cell Initiative</orgName>
								<orgName type="institution">Columbia University Medical Center</orgName>
								<address>
									<postCode>10032</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">David</forename>
								<surname>Gifford</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Electrical Engineering</orgName>
								<orgName type="institution">Massachusetts Institute of Technology</orgName>
								<address>
									<postCode>02139</postCode>
									<settlement>Cambridge</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Lineage-based identification of cellular states and expression programs</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">28</biblScope>
							<biblScope unit="page" from="250" to="257"/>
							<date type="published" when="2012">2012</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts204</idno>
					<note>Copyedited by: TRJ MANUSCRIPT CATEGORY: [15:44 1/6/2012 Bioinformatics-bts204.tex] Page: i250 i250–i257 BIOINFORMATICS Contact: gifford@mit.edu</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We present a method, LineageProgram, that uses the developmental lineage relationship of observed gene expression measurements to improve the learning of developmentally relevant cellular states and expression programs. We find that incorporating lineage information allows us to significantly improve both the predictive power and interpretability of expression programs that are derived from expression measurements from in vitro differentiation experiments. The lineage tree of a differentiation experiment is a tree graph whose nodes describe all of the unique expression states in the input expression measurements, and edges describe the experimental perturbations applied to cells. Our method, LineageProgram, is based on a log-linear model with parameters that reflect changes along the lineage tree. Regularization with L 1 that based methods controls the parameters in three distinct ways: the number of genes change between two cellular states, the number of unique cellular states, and the number of underlying factors responsible for changes in cell state. The model is estimated with proximal operators to quickly discover a small number of key cell states and gene sets. Comparisons with existing factorization, techniques, such as singular value decomposition and non-negative matrix factorization show that our method provides higher predictive power in held, out tests while inducing sparse and biologically relevant gene sets.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The directed differentiation of embryonic stem (ES) cells into therapeutically important cell types holds great potential for regenerative medicine. Identifying stage-specific transcription factor candidates for the directed differentiation of ES cells has been difficult, and the computational identification of lineage-associated transcription factor programs would significantly benefit this process. LineageProgram is a new method that identifies the experimental protocols that result in the same cellular states (<ref type="figure" target="#fig_0">Figure 1</ref>). It further decomposes these states into interpretable expression programs, which we define to be sets of co-varying genes. In contrast to analyzing the correlation between genes, we define a * To whom correspondence should be addressed.LineageProgram attempts to identify salient cellular states and covarying gene sets. Different treatments may result in the same cell state (a 1 and a 3 after definitive endoderm), while some treatments may have no effect (a 3 at stem cell). Our goal is to merge and prune these types of treatments program to be sets of genes that co-vary during a differentiation event. Analysis of developmental expression data has revealed the existence of expression programs regulating pluripotency across many cell types<ref type="bibr">[9]</ref>as well as lineage-specific programs. We provide a principled method that discovers both types of programs. LineageProgram is a log-linear model that uses latent factors and L 1 regularization to obtain sparse parameters, structures and spectra. Our primary goal is to estimate expression programs that are informed and improved by lineage information. To our knowledge, LineageProgram is the first method to approach this problem. Prior work in the estimation of developmental expression programs has used biclustering, factor or topic decompositions, mixture models and self organizing maps, all of which simultaneously identify expression programs and sample clusters, but without incorporating information from the experimental lineage. As shown in studies of expression time series, treating dependent expression data as independent observations can lead to significant loss of information<ref type="bibr">[3]</ref>. Separate prior work has focused on estimating lineage trees and lineage states in the absence of expression programs. Differentiation has been modeled both as a time series without branching and de novo tree estimation. The remainder of this article presents the LineageProgram model (Section 2), a comparative analysis of LineageProgram with other methods on lineage-associated expression data from motor neuron and pancreatic development (Section 3) and a conclusion about what we have learned about using lineage information (Section 4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Copyedited by</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cellular states and expression programs</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">THE LINEAGEPROGRAM METHOD</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Model</head><p>LineageProgram operates on N expression measurements of P genes made on an experimental tree with M nodes, where the root corresponds to the ES cell state and edges correspond to experimental interventions. We represent the cell state at a node i with the probability vector θ i , whose kth component is the probability that gene k is transcribed. The expression measurement is modeled as proportional to a multinomial draw from θ. Methods such as GeneProgram<ref type="bibr">[10,</ref><ref type="bibr">16]</ref>have successfully used this discretecount model for expression. Our objective function is the continuous extension of the multinomial likelihood function. We will show later that this natural continuous extension exists as a discretization limit and allows us to handle continuous data such as microarray measurements directly. A differentiation event is a change in θ, which we represent by a log-odds change η. The change of a gene k from a parent state i with vector θ i to child state j is written as</p><formula>θ (j,k) = θ (i,k) exp(η (j,k) ) l θ (i,l) exp(η (j,l) )</formula><p>.</p><p>This formulation of a log-odds count model has been shown to outperform analogous Latent Dirichlet Allocation type models<ref type="bibr">[8]</ref>. We represent the root stem cell state in the experimental tree as a log probability vector φ of size P, and the remaining states are represented as log-odds changes from their parent. For each node on the cell state tree, we write the expression probability as the sum of log changes along its path from the ES state and the ES cell expression φ. Let P j be the set of nodes along the path from node j to the ES state. Then the probability of observing gene k at node j is given as follows:</p><formula>θ (j,k) = exp( i∈P j η (i,k) +φ k ) l exp( i∈P j η (i,l) +φ l ) .</formula><p>We represent the experimental structure as two matrix multiplications: an M ×M path sum matrix T with T j,i = 1 if i ∈ P j and zero otherwise and an N ×M observation matrix D with D (t,j) = 1, if the tth expression measurement was made at node j and zero otherwise. The parameters are represented as two matrices, M ×P parameter matrix η (which we will regularize to be sparse and low-rank) and a 1×P ES expression vector φ. Given the N ×P data matrix X (t,k) , which we interpret to be proportional to counts of an expression event, our log likelihood takes the form</p><formula>llh(η) ∝ t,k X (t,k) log exp (DTη) (t,k) +φ k l exp (DTη) (t,l) +φ l .</formula><p>We design our regularization with three objectives: there should be few genes changing per differentiation event (L 1 penalty on η), few unique differentiation events (L 2 penalty on the rows of η) and few programs needed to explain the lineage (trace norm penalty on η). The L 1 penalty is the sum of absolute values of η, which induces η to have entries with zeroes. The L 2 penalty is the sum of the rownorms of η, which induces η to have rows that are all zeroes. Finally, the trace norm penalty is the sum of the singular values of η, which induces η to have low rank. With the regularization and defining the shorthand notation |η| 1 = i,j |η (i,j) | and ||η i || 2 = (</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Inference</head><p>The advantage of our method over topic model formulations is the convexity of our objective f , which guarantees fast convergence to the global maxima. Our overall inference strategy is to use gradient descent on the likelihood combined with proximal steps on each of the regularization terms. To speed convergence, we also use the accelerated proximal gradient method by.</p><p>The proximal gradient method allows us to efficiently optimize convex functions of the form f = f * +g, where f * is convex differentiable and g is convex and continuous. f is optimized with a gradient step on f * followed by a proximal operator, which uses a quadratic approximation of f * to optimize f * +g. Given x t , we generate the next iterate x t+1 with the following update</p><formula>x t+1 = Prox g,, x t −∇f * (x t ) Prox g,, (x t ) = argmin Y ||x t −Y ||/2+g(Y ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i251</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>T.Hashimoto et al.</head><p>(b) (a)In our case, our log likelihood is concave differentiable, and there are three convex continuous functions: g 1 ,g 2 and g 3 , corresponding to each regularization term.</p><formula>f (η) =− f * llh(η)+ g 1 λ 1 |η| 1 + g 2 λ 2 i ||η i || + g 3 λ 3 ||η|| TR .</formula><p>The gradient for f * is given by the difference between predicted and observed counts</p><formula>∇f * (η j ) k = T T t X (t,k) − ⎛ ⎝ t ,l X (t ,l) ⎞ ⎠ exp (DTη) (t,k) +φ k l exp (DTη) (t,l) +φ l .</formula><p>The proximal operators for g 1 and g 2 are the soft-threshold operators</p><formula>Prox g 1 ,, (η (i,j) ) = ⎧ ⎨ ⎩ η (i,j) −λ 1 : η (i,j) &gt;&gt;λ 1 η (i,j) +λ 1 : η (i,j) &lt; −λ 1 0 :|η (i,j) | &lt;&lt;λ 1 i252</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cellular states and expression programs</head><formula>Prox g 2 ,, (η (i,k) ) = η (i,k) (1−λ 2 1 ||η i || 2 ) :||η i || 2 &gt;&gt;λ 2 0 :||η i || 2 &lt;&lt;λ 2 .</formula><p>For g 3 , the proximal operator can be written in closed form in terms of its singular value decomposition (SVD)<ref type="bibr">[14]</ref>. Let η = U DV T and max(D−λ 3 ,0) be the SVD and entrywise subtraction followed by thresholding, then the proximal operator takes the form</p><formula>Prox g 3 ,, (η) = U max(D−λ 3 ,0)V T .</formula><p>At each step of the optimizer, we take some x t and step size and produce the next iterate with</p><formula>x t+1 = Prox g 3 ,, (Prox g 2 ,, (Prox g 1 ,, (x t −∇f * (x t )))).</formula><p>The sequential proximal gradient converges for our objective due to separability. We also make use of the accelerated gradient method by, which finds a sequence of x t which converges toward the optima, using an internal variable y t and a magnification of the gradient, a t to increase convergence rates near the mode.</p><formula>x t+1 = Prox g 3 ,, (Prox g 2 ,, (Prox g 1 ,, (y t −∇f * (y t )))) a t+1 = (1+ 4a 2 t +1) 2 y t+1 = x t + a t −1 a t+1 (x t −x t−1 ).</formula><p>In the context of a single proximal operator, this produces the optimal quadratic first-order convergence rate. In our case, the multiple proximal operators do not provide a guaranteed convergence rate, but in practice, we find the accelerated gradient makes convergence significantly faster. An implementation of this inference method as well as the results of our analysis are available from our website at http://psrg.csail.mit.edu/resources.html For the remainder of the article we use a convergence tolerance of 10 −5 and hot starts, which allows us to quickly find solutions over a list of candidate λ 1 values by using the optima of one problem to initialize a new problem with similar regularization penalties. This allows us to obtain the regularization path over λ 1 for the 105 array experiments below within 10 min on a computer with a Core 2 Duo e6300 CPU and 2 GB of memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head><p>The algorithm was tested on directed differentiation experiments for murine pancreatic progenitors and motor neurons, as shown in<ref type="figure" target="#fig_3">Figure 4</ref>. Both lines were produced using known differentiation protocols. The pancreatic line has a large number of states, but relatively few replicates, while the motor neuron line has multiple replicates per state. The 88 microarray measurements of the pancreatic line were performed with Illumina bead arrays, while the 17 in the motor neuron line were performed with Affymetrix 430a2 microarrays. We rank-match the Illumina data to the Affymetrix data in order to reduce the data to the same scale. The quantile normalization technique is described in further detail by<ref type="bibr" target="#b13">Irizarry et al (2003)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cross-validation procedure</head><p>We use cross-validation to estimate the regularization parameters λ 1 , λ 2 and λ 3 over the 50×50×50 grid of all nondegenerate values. For every experimental state with more than one observation, we include one observation in the training set and include the rest in the held-out set. We choose to leave out observations per-node rather than over all observations, since we must leave at least one observation at each node in order to make a prediction at the node. The performance of the model is measured in terms of held-out likelihood, which indicates goodness of fit, and squared error, measures predictive performance. Cross-validation results in<ref type="figure" target="#fig_1">Figure 2</ref>show the existence of a sharp drop in predictive power around a dozen edges and programs; this sharp transition suggests that there exists a necessary level of regularization for our algorithm to generalize well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i253</head><p>Copyedited by: TRJ MANUSCRIPT CATEGORY:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>T.Hashimoto et al.</head><p>(a) (b)The optimal regularization parameters discovered by crossvalidation significantly penalize both the number of edges and rank of the parameter η. At this optimal value, we find that the estimated cell state tree in<ref type="figure" target="#fig_10">Figure 8</ref>is significantly sparser than the experimental tree. We also found that a strong L 1 penalty dominated the group L 2 penalties, resulting in λ 1 controlling both structural and parameter sparsity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Necessity of trace norm regularization</head><p>The trace-norm penalty is a critical part of modeling large branching factors. The L 1 and L 2 penalties shrink the changes between nodes to zero and bring the probabilities at each child-node toward their common parent. Therefore, the two edge penalties, λ 1 and λ 2 , control whether leaves differ at all from their parent, rather than how they differ. In contrast, the trace norm penalty restricts directions in which the leaves can differ by forcing the leaves to lie within a small subspace near their parent. To test the necessity of trace norm regularization, we compared our model with and without trace-norm regularization. For both models, we fit the regularization parameters through cross-validation and compared the mean squared error on a common held-out set of 16 arrays selected by removing one array from each node with replicates. Results in<ref type="figure" target="#fig_4">Figure 5</ref>indicate that without the trace norm penalty, 7 of the 16 held-out observations show significant increases in squared error. All seven of these observations are children of the highest degree node in<ref type="figure" target="#fig_10">Figure 8</ref>suggesting that the trace norm penalty plays a key role preventing overfitting on highly branching data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods compared</head><p>Our algorithm was compared against three existing classes of approaches: SVD, non-negative matrix factorization (NMF) and latent Dirichlet allocation (LDA) on both held-out prediction error and quantitative program metrics. We were restricted to considering non-lineage-informed methods since we did not find any lineage informed methods in the literature.</p><p>For each competing method, we tested major variants of the algorithms and chose to compare only to the best variant. For SVD, we tried direct decomposition of the data, mean subtraction [resulting in Principal Component Analysis (PCA)] and mean subtraction on pancreatic and motor neuron branches; simple mean subtraction outperformed the others and is shown here. For NMF, we tested Kullback-Leibler (KL) divergence and square distance minimization objective proposed by as well as sparse NMF; we use KL divergence minimization. For LDA, we used the collapsed Gibbs sampler as well as variational Bayes updates and found the Gibbs sampler with 20 000 samples to perform best.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Low cross-validation error on branching data</head><p>The held-out mean squared prediction error measures the generalization performance of each of the algorithms. We split the expression measurements into cross-validation and held-out sets selecting 16 replicate experiments one from each node with more than one measurement. The cross-validation set is split into training and test sets using the procedure described in the the cross-validation section. The models are fit on the training data and we calculate the squared error between the predicted values from the model and the test data. Training on the full set of motor neuron and pancreatic data (<ref type="figure" target="#fig_2">Figure 3a</ref>), we find that overall, LineageProgram has the lowest mean squared prediction error. On lineages with no branching, we would expect to see SVD perform best due to its direct minimization of squared error. We find that on the motor neuron lineage with no branching, our algorithm performs like SVD. In the worst case of non-branching data, our algorithm compares favorably to current factorization methods. Interestingly, LDA degenerates on the motor neuron held-out sets with behavior consistent on both training methods and across multiple replications. We find that LDA overfits on the later stage pancreatic states at the expense of the motor neuron states, which is consistent with behavior observed in prior work<ref type="bibr">[8]</ref>. To rule out the possibility that the low performance of the competing algorithms was due to the inclusion of two differing array i254shows that LineageProgram produces sparse programs with many genes at zero and few dominant genes types in the pancreatic and motor lineages, we re-ran the test, fitting and evaluating only on the pancreatic lineage (<ref type="figure" target="#fig_2">Figure 3b</ref>). The tests on the pancreatic lineage show nearly the same results for all methods, with all methods, particularly LDA, performing slightly better. However, the general ordering of the methods remains the same, and the performance results are due to the inability of current methods to handle the large branching factors in the pancreatic lineage rather than the combination of multiple lineages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cellular states and expression programs</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Comparison of program quality</head><p>Although methods such as SVD can reconstruct expression values well, these program decompositions are often difficult to interpret biologically. Therefore, we quantify the quality of the decomposition in terms of sparsity and biological relevance. First, we would hope for each program to have several dominant genes in order to produce candidate genes for further analysis. We measure this objective by the coefficient distribution of the programs. Second, we want each program to encode for biologically meaningful sets of genes. As with prior work<ref type="bibr">[10]</ref>, we measure Gene Ontology (GO) term enrichment as a proxy for biological relevance. Finally, we want each program to map to a unique developmental gene set. We measure this objective with the proportion of the program explained by the dominant developmental gene set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fewer genes are used to model the lineage</head><p>To measure sparsity, we normalize the programs from all methods to have unit norm and measure the L 2 norm of each gene over all programs. The L 2 norm is measure of average change in odds across programs. If there are a few genes dominating each program, we would expect to see only a few genes with high L 2 norm. Our goal is to recover interpretable programs, where each program contains a few key genes with large and unique activations. Our results in<ref type="figure" target="#fig_8">Figure 7</ref>show that LDA and LineageProgram both produce a few large coefficients and a large number of coefficients within machine precision of zero. The dominance of few genes in each program allows us to label each program with a set of representative genes in<ref type="figure">Table 8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Higher biological relevance of extracted programs</head><p>To measure the biological relevance of the discovered programs, we performed GO enrichment analysis using the weighted Kolmogorov statistic from gene set enrichment analysis. Plotting GO enrichment across all programs as a function of Benjamini Hochberg corrected P-values (<ref type="figure" target="#fig_6">Figure 6a</ref>), we find that LineageProgram achieves significantly higher GO enrichments when compared to the other methods. The higher GO enrichment across all P-values suggests that the programs recovered by LineageProgram more closely match subtrees of the GO annotation than those recovered by competing methods. If this were purely a result of chance, we would expect LineageProgram to outperform the others on a small subset of P-value cutoffs, rather than across all cutoffs. In combination with our sparsity results, this suggests that LineageProgram discovers small sets of biologically relevant genes in each program. To ensure that GO enrichment is in developmentally relevant categories, we also test the uniqueness of each program. In an ideal decomposition, each program would encode a different aspect of the developmental process. We use six developmental gene sets found in the literature, including four GO categories ('stem cell maintenance','endocrine pancreas differentiation','embryonic skeletal development', and 'anterior posterior development'), as well as marker genes for motor neurons (Pax6, Mnx1, Isl1, Lhx1 and Lhx3)<ref type="bibr">[13]</ref>and pancreas (Prox1, Pdx1, Hb9 and Nkx6-1)<ref type="bibr">[15]</ref>. For each program, we measure the proportion of the program's L 2 norm that is accounted by genes in the most activated category. The results in<ref type="figure" target="#fig_6">Figure 6</ref>show that LineageProgram as well as NMF have programs closesly matching known differentiation programs. These correspond to the loss of pluripotency; LDA and SVD were unable to discover programs that could be mapped solely to pluripotency. Importantly, LineageProgram maintains a relatively high correspondence to known gene sets across most of its programs, indicating its ability to encode small, highly specific gene modules corresponding to both the pancreatic and motor neuron lineages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analysis of full lineage data</head><p>Finally, we train LineageProgram on the full dataset to estimate lineage programs and use cross-validation on replicates to estimate regularization parameters. The resulting tree is sparse, with only two branching points (<ref type="figure" target="#fig_10">Figure 8</ref>). The first branching point corresponds to the split between motor neuron and pancreatic lineages. The other branching point differentiates a successful Day 6 pre-endoderm differentiation from a late-stage Sox17 overexpression experiment. We compared the lineage tree from the model with a manual annotation produced separately from this project. Taking only the vertices corresponding to known cellular states, we match the manual curation almost exactly, successfully reducing all the branches before the Day 4 preendoderm and only mis-merging the Day 5 endoderm with the Day 6 posterior foregut. The regularization and cross-validation have successfully pruned nearly all spurious branches of the linage tree. The Sox17 branch in<ref type="figure" target="#fig_10">Figure 8</ref>not positively identified this state as a biologically significant cell state. Identification of enriched GO terms and genes also show close correspondence with known biological facts. We correctly identify all major stages of the motor neuron differentiation process, from loss of pluripotency and development of positional identity to spinal motor neuron specification. On the pancreatic branch, we identify loss of pluripotency, suppression of mesodermal identity and finally specification of endodermal and pancreatic identity. We include full summary output of the enriched genes and GOs for each program in the appendix.</p><formula>(a) ( b) T D L G N S E P S P G P N P P N G N G No.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSION</head><p>We have presented LineageProgram, a log-linear sparse regularized model and inference algorithm for lineage-associated expression data that provide strong interpretability with no loss in predictive power. Existing flat modeling methods were unable to cope with the large number of leaves that occur at the ends of the differentiation experiment, and significant statistical power is lost re-estimating the background cellular expression levels. Our biological metrics also suggest that flat factorization methods do not extract biologically meaningful expression programs, and modeling the differences between each differentiation state is necessary to estimating fine behaviors occuring during differentiation. Our analysis of the combined pancreas and motor neuron data provides a computational analysis of the pancreatic and motor neuron differentiation pathways that recapitulate known biological markers and states. The ability of the sparse regularization to remove spurious branches in the lineage tree suggests the use of this model to estimate novel cellular states in later-stage differentiation experiments, where explicit cellular states are less characterized. Although we have restricted our model to expression-based data, we hope to extend this framework of L 1-regularized branching models to sequencing data with similar structure. The penalty model presented here would allow a wide variety of log-convex generative models to incorporate lineage-associated structure.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Example experimental tree (left) and lineage tree (right). LineageProgram attempts to identify salient cellular states and covarying gene sets. Different treatments may result in the same cell state (a 1 and a 3 after definitive endoderm), while some treatments may have no effect (a 3 at stem cell). Our goal is to merge and prune these types of treatments</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.2.</head><figDesc>Fig. 2. The goodness of fit as measured by held-out likelihood shows that the optimal model has few of edges and programs</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. Cross-validated mean square errors on the full cell tree shows good predictive performance by LineageProgram</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.4.</head><figDesc>Fig. 4. Murine differentiation tree representing the derivation of 88 pancreatic and 17 motor neuron expression measurements. Each edge is an experimental treatment and each vertex a experimental state</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.5.</head><figDesc>Fig. 5. Measureing held-out error in models with and without trace norm penalty shows that removing trace norm penalty causes large increases in held-out error for 7 out of 16 held-out sets Inference with this method is fast enough that we are able to fit the model across a 50×50×50 grid of all valid λ 1 ,λ 2 and λ 3 , which we use to set the regularization parameters as described in the next section.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>[15:</head><figDesc>44 1/6/2012 Bioinformatics-bts204.tex] Page: i254 i250–i257</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.6.</head><figDesc>Fig. 6. Gene set enrichment in Gene Ontology (GO) and manually curated developmental gene sets show programs recovered by LineageProgram are biologically relevant</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig.7.</head><figDesc>Fig. 7. The distribution of average odds change over all programs per gene shows that LineageProgram produces sparse programs with many genes at zero and few dominant genes</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><figDesc>represents a late-stage experiment aimed at recovering competency in Day 8 endoderm using Sox17 overexpression. Although the experiment shows significant expression level differences from the Day 4 pre-endoderm, we have i255 Copyedited by: TRJ MANUSCRIPT CATEGORY: [15:44 1/6/2012 Bioinformatics-bts204.tex] Page: i256 i250–i257 T.Hashimoto et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig.8.</head><figDesc>Fig. 8. (Top) Estimated lineage tree for motor neuron and pancreatic progenitor; nodes are grouped by cell type and edges are labeled by program involved; color indicates program type (see table below) (Bottom) Major GO terms and Genes corresponding to developmental programs stars denote Benjamini–Hochberg corrected P-value of enrichment t-test; * P &gt; 0.05; * * P &gt; 0.01</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><figDesc>Funding: National Institutes of Health [P01-NS055923 and 1-UL1RR024920 to D.K.G.]. Conflict of Interest: none declared.</figDesc></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">j η 2 (i,j) ) (1/2) , the overall objective f takes the form f (η) =−llh(η)+λ 1 |η| 1 +λ 2 i ||η i || 2 +λ 3 ||η|| TR. We show that discretizing the data, X , to some precision β, and taking the limit as β →∞ has the equivalent minima (up to scaling and the zero set) by using X without discretization. Note that the gradient of the log-likelihood function takes the form lim β→0  t,k (X t,k /β) X t,k /β k X t,k /β − exp (DTη) (t,k) +φ k  k exp (DTη) (t,k ) +φ k  → 1 β  t,k (X t,k ) X t,k k X t,k − exp (DTη) (t,k) +φ k  k exp (DTη) (t,k ) +φ k  , which is the continuous extension of llh up to a constant 1 β. The regularization terms |η| 1 , ||η|| 2 and ||η|| TR are convex, but not strictly convex, so the optima of the continuous extension and the limit can differ up to elements of the zero set. Testing both small discretization and the continuous extension, we find no difference in results, but for completeness we use a threshold of 1e−5 to set a small neighborhood near zero to be part of the zero set. Finally, we define the concept of an expression program as a set of basis vectors spanning η. The trace norm regularization implicitly penalizes the rank of matrix η, and for large λ 3 , η will have small rank and can be represented as the linear combination of a few &apos;basis&apos; programs. We choose the singular value decomposition of T η as our program decomposition. The first k programs have a natural interpretation as the best rank-k approximation of the unnormalized log expression parameters.</note>

			<note place="foot">i257 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Transcriptional accessibility for genes of multiple tissues and hematopoietic lineages is hierarchically controlled during early hematopoiesis</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Akashi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Blood</title>
		<imprint>
			<biblScope unit="volume">101</biblScope>
			<biblScope unit="page" from="383" to="389" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">Downloaded from Copyedited by: TRJ MANUSCRIPT CATEGORY:tex] Page: i257 i250–i257 Cellular states and expression programs</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Singular value decomposition for genome-wide expression data processing and modeling</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Alter</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Na. Acad. Sci. USA</title>
		<meeting>. Na. Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="10101" to="10106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Analyzing time series gene expression data</title>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Bar-Joseph</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="2493" to="2503" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Biclustering of gene expression data by non-smooth non-negative matrix factorization</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Carmona-Saez</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">78</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Biclustering of expression data</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Cheng</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">M</forename>
				<surname>Church</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings / ... International Conference on Intelligent Systems for Molecular Biology</title>
		<meeting>/ ... International Conference on Intelligent Systems for Molecular Biology</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">ISMB. International Conference on Intelligent Systems for Molecular Biology</title>
		<imprint>
			<biblScope unit="page" from="93" to="103" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Gene expression trees in lymphoid development</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Costa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Immunology</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">25</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Inferring differentiation pathways from gene expression</title>
		<author>
			<persName>
				<forename type="first">Ivan</forename>
				<surname>Costa</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="156" to="164" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<monogr>
		<title level="m" type="main">Sparse additive generative models of text</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Eisenstein</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Genomic expression during human myelopoiesis</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Ferrari</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Genomics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="264" to="264" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Automated discovery of functional generality of human gene expression programs</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Georg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Computational Biology</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">148</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Non-negative matrix factorization with sparseness constraints</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">O</forename>
				<surname>Hoyer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Machine Learn. Res</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1457" to="1469" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Exploration, normalization, and summaries of high density oligonucleotide array probe level data</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">A</forename>
				<surname>Irizarry</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biostatistics</title>
		<imprint>
			<biblScope unit="page">249</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Neuronal specification in the spinal cord: inductive signals and transcriptional codes</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">M</forename>
				<surname>Jessell</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Reviews Genetics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="20" to="29" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">An accelerated gradient method for trace norm minimization</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Ji</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Ye</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th Annual International Conference on Machine Learning</title>
		<meeting>the 26th Annual International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="457" to="464" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">An illustrated review of early pancreas development in the mouse</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">C</forename>
				<surname>Jørgensen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Endocrine reviews</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page">685</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Identification of regulatory modules by co-clustering latent variable models: stem cell differentiation</title>
		<author>
			<persName>
				<forename type="first">J.-G</forename>
				<surname>Joung</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="2005" to="2011" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<monogr>
		<title level="m" type="main">Algorithms for non-negative matrix factorization Advances in neural information processing systems</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">D</forename>
				<surname>Lee</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">S</forename>
				<surname>Seung</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="788" to="791" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Online learning of structured predictors with multiple kernels</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">F T</forename>
				<surname>Martins</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Artificial Intelligence and Statistics</title>
		<meeting>the 14th International Conference on Artificial Intelligence and Statistics</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Embryonic stem cell-based mapping of developmental transcriptional programs</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">O</forename>
				<surname>Mazzoni</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature methods</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Bayesian mixture model based clustering of replicated microarray data</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Medvedovic</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="1222" to="1232" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<monogr>
		<title level="m" type="main">Introductory Lectures on Convex Optimization: A Basic Course Applied optimization</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Nesterov</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<forename type="middle">U E</forename>
				<surname>Nesterov</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Kluwer Academic Publishers</publisher>
			<pubPlace>MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Sox17 promotes differentiation in mouse embryonic stem cells by directly regulating extraembryonic gene expression and indirectly antagonizing self-renewal</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">K</forename>
				<surname>Niakan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genes &amp; Development</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page">312</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Gene set enrichment analysis: a knowledge-based approach for interpreting genome-wide expression profiles</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Subramanian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Nat. Acad. Sci. USA</title>
		<meeting>. Nat. Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page">15545</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Expression cartography of human tissues using self organizing maps</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Wirth</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">306</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Stage prediction of embryonic stem cell differentiation from genome-wide expression data</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Zagar</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="2546" to="2553" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Estimating developmental states of tumors and normal tissues using a linear time-ordered model</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">53</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>