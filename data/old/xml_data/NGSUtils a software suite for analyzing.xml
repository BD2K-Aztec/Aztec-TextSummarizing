
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:53+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis NGSUtils: a software suite for analyzing and manipulating next-generation sequencing datasets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Marcus</forename>
								<forename type="middle">R</forename>
								<surname>Breese</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Computational Biology and Bioinformatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Center for Medical Genomics</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Medical and Molecular Genetics</orgName>
								<orgName type="institution">Indiana University School of Medicine</orgName>
								<address>
									<postCode>46202</postCode>
									<settlement>Indianapolis</settlement>
									<region>IN</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Yunlong</forename>
								<surname>Liu</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Computational Biology and Bioinformatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Center for Medical Genomics</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Medical and Molecular Genetics</orgName>
								<orgName type="institution">Indiana University School of Medicine</orgName>
								<address>
									<postCode>46202</postCode>
									<settlement>Indianapolis</settlement>
									<region>IN</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genome analysis NGSUtils: a software suite for analyzing and manipulating next-generation sequencing datasets</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">4</biblScope>
							<biblScope unit="page" from="494" to="496"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts731</idno>
					<note type="submission">Received on July 17, 2012; revised on December 1, 2012; accepted on December 27, 2012</note>
					<note>Associate Editor: Inanc Birol Contact: yunliu@iupui.edu Supplemental information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>NGSUtils is a suite of software tools for manipulating data common to next-generation sequencing experiments, such as FASTQ, BED and BAM format files. These tools provide a stable and modular platform for data management and analysis. Availability and implementation: NGSUtils is available under a BSD license and works on Mac OS X and Linux systems. Python 2.6þ and virtualenv are required. More information and source code may be obtained from the website: http://ngsutils.org.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>With the broad implementation of next-generation sequencing (NGS) technology in biomedical research, genomics sequencing data are generated at an unprecedented rate. Such advances bring enormous challenges in data analysis, of which efficient, standardized and consistent analysis are critical. With the deluge of data brought about by these technological advances, the time required to analyze NGS datasets has become the limiting factor in high-throughput experiments (<ref type="bibr" target="#b6">Richter and Sexton, 2009</ref>). In most cases, NGS data processing involves manipulating, converting and processing large standardized files, such as FASTQ (<ref type="bibr" target="#b0">Cock et al., 2010</ref>), BED (<ref type="bibr" target="#b2">Kent et al., 2002</ref>) and BAM (<ref type="bibr" target="#b3">Li et al., 2009</ref>) files. Frequently, initial pre-processing is required before using these files as input to mapping for assembly purposes. Once reads have been mapped, post-processing of these files is typically applied to filter out noisy mappings or calculate summary information. The analysis of NGS experiments frequently consists of writing custom one-off scripts to manipulate data or calculate final results. This approach is inefficient and can lead to reproducibility errors. There are some existing tools that aid in the analysis of NGS data, such as BEDTools (<ref type="bibr" target="#b5">Quinlan and Hall, 2010</ref>), VCFtools (<ref type="bibr" target="#b1">Danecek et al., 2011</ref>), samtools (<ref type="bibr" target="#b3">Li et al., 2009</ref>) and the FASTX toolkit (http://hannonlab.cshl.edu/fastx_toolkit/). To help augment the functionality of exiting tools and allow for pipeline assembly, the NGSUtils suite was developed, covering different aspects of NGS data analysis, including preprocessing, post-processing, filtering, format conversion and final result calculations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">IMPLEMENTATION</head><p>NGSUtils is organized into a series of modules based on the primary file format that is being manipulated. Each of the modules contains multiple programs, mainly written in Python. BAM files are written and read using the pysam library (http://code. google.com/p/pysam) and must be indexed using samtools. FASTQ, BED and GTF input files may be plaintext or gzip compressed. Both base-and color-space reads are supported. A summary of the major commands from each module is given below. A complete list of common commands is listed in Supplementary Table S1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">bamutils</head><p>This module is focused on manipulating BAM files. Four of the major commands are basecall, expressed, filter and counts. The basecall command performs a similar function to the samtools pileup command, in that it calculates base calls for each position in the reference genome. Instead of the more complicated VCF format, the output is a human readable tab-delimited format. Consensus and minor base calls, the number of calls for each base, composition of insertions and strand bias are also calculated. The expressed command is useful for finding regions of novel expression in a model-free manner. This operates by scanning the reference genome for regions with overlapping reads. This can be used for discovery of novel genes or non-coding RNAs. The filter command is used for removing reads from a BAM file based upon a set of user-defined criteria. After reads have been mapped to a reference, it can be useful to post-process the resulting BAM file to remove noise from downstream analysis. Some of the supported criteria are number of allowed mismatches between a read and the reference (optionally counting indels of any length as 1), inclusion/exclusion of particular regions, a white or blacklist of reads and filtering based on any of the included extra 'tags'. Some of the common tags to filter by are AS (alignment score), IH (number of alignments in the file) and NM (edit distance). Mismatch filtering can also be *To whom correspondence should be addressed. performed in SNP aware manner, potentially limiting the effects of mapping bias in post-processing. The stats command can be a useful tool to help explore a dataset to see how reads might be affected by different filtering criteria. Finally, the counts command is used to calculate the read counts for genes, BED regions, repeatmasker (<ref type="bibr" target="#b7">Smit et al., 1996</ref>–2010) defined repetitive elements or genome bins of a user-defined size. If given a GTF gene model, read counts for each exon or alternatively spliced fragment can be individually tallied, which may help the analysis of alternative splicing. Counts may be normalized to RPKM values (<ref type="bibr" target="#b4">Mortazavi et al., 2008</ref>) using a number of methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">fastqutils</head><p>The FASTQ format is a common output format from NGSs, consisting of read sequences and the quality of individual basecalls. These then serve as the input for mapping programs to translate raw reads into mapped positions. For high-quality mapping results, it is important to pre-process the input FASTQ files. The fastqutils module contains a variety of commands for converting to and from many different input formats, as well as performing initial quality control pre-processing. The fastqutils split command is useful for efficient parallel processing, and it splits a FASTQ file into sub-files in a paired-end aware manner. The fastqutils trim command will scan each read and remove user-defined 5 0-and 3 0-linker sequences using a Smith–Waterman (SW) (<ref type="bibr">Smith and Waterman, 1981</ref>) alignment algorithm. For quality-control purposes, the fastqutils filter command can remove or truncate reads based on a number of user-defined criteria. Supported criteria include the number of wildcard calls (Ns), read length, trimming bases from the 3 0-end of a read based on read quality, truncating a read when the average basecall quality of a sliding window falls below a threshold and removing adaptor sequences (non-SW aligned). Additionally, for paired-end datasets, there is a filter for removing reads that after previous filtering may be missing their partner read. Each of the filtering criteria is processed in a chain; therefore, the results of one filter feed directly into the next, allowing for efficient filtering with multiple criteria in one step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">bedutils</head><p>BED files contain coordinates for regions of a genome. In the context of NGS experiments, these can correspond to binding sites, as found in ChIP-seq or CLIP-seq, or regions targeted for enrichment, such as in exome enrichment. There are two primary commands for BED files: reduce and refcount. The reduce command merges overlapping BED regions into one long contiguous region. The refcount command takes one 'reference' BED file and one or more 'input' BED files. For each region in the reference BED file, the input files are scanned for overlapping regions. These are then tallied, and a count for each input file is produced. One example where this might be useful is a ChIP-seq experiment, where the data are a BED file for each sample containing 100 bp regions that were detected. Using the reduce command, all of the samples could be merged together into one reference set of found regions. This could then be used as the reference BED file. Next, using each of the original sample BED files as inputs, refcount could be used to find regions that were enriched in one group of samples versus the other.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">gtfutils</head><p>A common format for genome annotation is the GTF format (http://mblab.wustl.edu/GTF22.html). GTF annotations can be easily obtained for most organisms from many sources, including the UCSC Genome Browser (<ref type="bibr" target="#b2">Kent et al., 2002</ref>). In the bamutils module, GTF files are used for read counting and mapping statistics. The gtfutils module includes commands for reading and enhancing GTF gene model annotations. The gtfutils junctions command takes a GTF annotation file and a genome FASTA file and output all possible splice-junctions for all genes. Potential splices from all exons within a gene are outputted, including those from multiple isoforms, if isoform annotations have been added to the GTF file. One use for this potential splice-junction file is mapping junction-spanning RNA-seq reads. To facilitate RNA-seq read mapping, each sequence in the junction library is named in such a way that files mapped to the junction library can be readily converted back to genomic reference coordinates, including gaps in alignments, if necessary. This conversion is handled by the bamutils convertregion command.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">CONCLUSIONS</head><p>Individually, each of these programs performs a small job in the analysis of NGS experiments. However, collectively, this suite of tools acts as building blocks that can be combined into larger pipelines for data exploration and analysis. With modules that operate from FASTQ pre-processing through BAM postprocessing and RPKM calculations, NGSUtils compliments existing tools and provides unique functionality that helps each step of an NGS data analysis pipeline.</p></div>
			<note place="foot">ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">NGSUtils at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">M.R.Breese and Y.Liu at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head><p>The authors thank Howard J. Edenberg for valuable discussions about the application of these tools.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">The Sanger FASTQ file format for sequences with quality scores, and the Solexa/Illumina FASTQ variants</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">J A</forename>
				<surname>Cock</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="1767" to="1771" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">The variant call format and VCFtools</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Danecek</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="2156" to="2158" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">The human genome browser at UCSC</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">J</forename>
				<surname>Kent</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="996" to="1006" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">The sequence alignment/map format and SAMtools</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="2078" to="2079" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Mapping and quantifying mammalian transcriptomes by RNA-Seq</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Mortazavi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="621" to="628" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">BEDTools: a flexible suite of utilities for comparing genomic features</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">R</forename>
				<surname>Quinlan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<forename type="middle">M</forename>
				<surname>Hall</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="841" to="842" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Managing and analyzing next-generation sequence data</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">G</forename>
				<surname>Richter</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">P</forename>
				<surname>Sexton</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">1000369</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">RepeatMasker Open-3.0 Identification of common molecular subsequences</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Smit</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<editor>www.repeatmasker.org4. Smith,T.F. and Waterman,M.S.</editor>
		<imprint>
			<biblScope unit="volume">147</biblScope>
			<biblScope unit="page" from="195" to="197" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>