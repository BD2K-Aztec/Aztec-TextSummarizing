
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:58+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Integrating genome assemblies with MAIA</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Jurgen</forename>
								<surname>Nijkamp</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">The Delft Bioinformatics Lab</orgName>
								<orgName type="department" key="dep2">Department of Mediamatics</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Mekelweg 4</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Biotechnology</orgName>
								<orgName type="laboratory">Industrial Microbiology Group</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Julianalaan 67</addrLine>
									<postCode>2628 BC</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postBox>P.O. Box 5057</postBox>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Wynand</forename>
								<surname>Winterbach</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">The Delft Bioinformatics Lab</orgName>
								<orgName type="department" key="dep2">Department of Mediamatics</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Mekelweg 4</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">Department of Telecommunications</orgName>
								<orgName type="laboratory">Network Architectures and Services</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Mekelweg 4</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Marcel</forename>
								<surname>Van Den Broek</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Biotechnology</orgName>
								<orgName type="laboratory">Industrial Microbiology Group</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Julianalaan 67</addrLine>
									<postCode>2628 BC</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postBox>P.O. Box 5057</postBox>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Jean-Marc</forename>
								<surname>Daran</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Biotechnology</orgName>
								<orgName type="laboratory">Industrial Microbiology Group</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Julianalaan 67</addrLine>
									<postCode>2628 BC</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postBox>P.O. Box 5057</postBox>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Marcel</forename>
								<surname>Reinders</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">The Delft Bioinformatics Lab</orgName>
								<orgName type="department" key="dep2">Department of Mediamatics</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Mekelweg 4</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postBox>P.O. Box 5057</postBox>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="department">Netherlands Bioinformatics Center</orgName>
								<address>
									<postBox>P.O. Box 9101</postBox>
									<postCode>260 NBIC, 6500 HB</postCode>
									<settlement>Nijmegen</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Dick</forename>
								<surname>De Ridder</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">The Delft Bioinformatics Lab</orgName>
								<orgName type="department" key="dep2">Department of Mediamatics</orgName>
								<orgName type="institution">Delft University of Technology</orgName>
								<address>
									<addrLine>Mekelweg 4</addrLine>
									<postCode>2628 CD</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Kluyver Centre for Genomics of Industrial Fermentation</orgName>
								<address>
									<postBox>P.O. Box 5057</postBox>
									<postCode>2600 GA</postCode>
									<settlement>Delft</settlement>
								</address>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="department">Netherlands Bioinformatics Center</orgName>
								<address>
									<postBox>P.O. Box 9101</postBox>
									<postCode>260 NBIC, 6500 HB</postCode>
									<settlement>Nijmegen</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Integrating genome assemblies with MAIA</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="page" from="433" to="439"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq366</idno>
					<note>[10:35 28/8/2010 Bioinformatics-btq366.tex] Page: i433 i433â€“i439 BIOINFORMATICS</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: De novo assembly of a eukaryotic genome with next-generation sequencing data is still a challenging task. Over the past few years several assemblers have been developed, often suitable for one specific type of sequencing data. The number of known genomes is expanding rapidly, therefore it becomes possible to use multiple reference genomes for assembly projects. We introduce an assembly integrator that makes use of all available data, i.e. multiple de novo assemblies and mappings against multiple related genomes, by optimizing a weighted combination of criteria.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Next-generation sequencing (NGS) platforms, such as 454 (Roche, Branford, CT), Solid (AB, Foster City, CA) and Solexa (Illumina, San Diego, CA) allow for gigabytes of data generation at an affordable cost. The third generation sequencing platforms (Helicos, Cambridge, MA; Pacific Biosciences, Menlo Park, CA) may even let the cost per megabase drop under $1 per megabase (<ref type="bibr" target="#b23">Shendure and Ji, 2008</ref>). Considering the relatively low cost of these platforms, compared with classical Sanger sequencing, it becomes possible to use them for de novo sequencing projects. However, the millions of short DNA sequences generated by NGS platforms, called reads, are still relatively small. Given this limited read length and the many repetitive regions in a eukaryotic genome, de novo assembly is still a challenging task. To alleviate this problem it is essential to design algorithms that make full use of all available data. Over the past few years, several assemblers have been developed for NGS data. Assemblers pull millions of reads together into larger contiguous sequences, called contigs. A typical assembly of a eukaryotic genome is a set with thousands of contigs. These contigs are unordered as well as unoriented, i.e. it is unknown whether they come from the forward or reverse strand. The process to determine orientation and relative ordering of contigs is called scaffolding. * To whom correspondence should be addressed.</p><p>Some assemblers have built-in scaffolders; otherwise, an external scaffolder can be used, such as Bambus (<ref type="bibr" target="#b19">Pop et al., 2004b</ref>). An alternative to de novo assembly is mapping the reads against a finished or draft genome from a close relative (a template). From such a mapping a consensus can be called, generating a comparative assembly (<ref type="bibr" target="#b18">Pop et al., 2004a</ref>). As the number of known genomes is growing rapidly, in the future, it will be more often the case that multiple close relative genomes are available to create such assemblies. However, mapping against a closely related genome will only yield those parts that are identical in target and template genome. To get the unique components in the target genome, a de novo assembly will always be required. Assemblers are often specialized for a specific type of reads. De Bruijn graph-based assemblers, such as Velvet (<ref type="bibr" target="#b27">Zerbino and Birney, 2008</ref>), Abyss (<ref type="bibr" target="#b24">Simpson et al., 2009</ref>) and ALLPATHS (<ref type="bibr" target="#b15">Maccallum et al., 2009</ref>) are most suitable for short reads (Solid; Solexa), whereas overlap-layout-consensus algorithms, such as Newbler (Roche) and CABOG (<ref type="bibr" target="#b17">Miller et al., 2008</ref>), are more suitable for the longer 454 sequences. It is not trivial to deal efficiently with different read types simultaneously or to combine outputs of different assemblers. Hybrid strategies (using two types of sequencing data) mostly work by altering the output of a first assembler to make it suitable for application on a second.<ref type="bibr" target="#b20">Reinhardt et al. (2009)</ref>generated contigs with VCAKE (<ref type="bibr" target="#b9">Jeck et al., 2007</ref>) using Solexa data, which were subsequently used as input to the Newbler assembler together with 454 data.<ref type="bibr" target="#b7">Goldberg et al. (2006)</ref>simulated Sanger reads from a set of contigs assembled by Newbler with 454 data. These reads were subsequently used as input to the Celera assembler combined with true Sanger reads. We are aware of only one de novo assembler designed to integrate Sanger and NGS data, called Forge (<ref type="bibr" target="#b5">Diguistini et al., 2009</ref>). However, Forge does not allow for integration of comparative assemblies. Other hybrid strategies (<ref type="bibr" target="#b2">Argueso et al., 2009;</ref><ref type="bibr" target="#b21">Salzberg et al., 2008</ref>) combine assemblies using Minimus (<ref type="bibr" target="#b25">Sommer et al., 2007</ref>). Minimus is restricted to only two assemblies, so to combine three or more assemblies it has to be applied iteratively. Minimus also does not allow for weighted combinations of contigs. In this article, we describe MAIA (Multiple Assembly IntegrAtor), a graph-based algorithm for integration of several de novo and comparative assemblies. Assembly integration is related to both de novo assembly and scaffolding, but differs in its input. An assembler deals with short sequences (reads) and high genome coverage to account for read errors and repeats in the genome. A scaffolder tries to determine the relative ordering and orientation of large sequences (contigs) of a single de novo assembly, assuming the target genome is covered once. An integrator is a hybrid ofAn overlap graph is constructed, in which nodes represent contigs and edges represent overlaps. A forward and a reverse edge is added between the pairs of nodes, but these are indicated by an undirected edge for simplicity. A start node and an end node is determined using a reference genome. Edges are assigned weights based on several properties of the alignments and contigs, combined using weighted Z-scores. (D) An orientation is assigned to the contigs by traversing the graph depth-first in order of weight (indicated by the numbers). Edge 9 [dashed box in (B)] assigns reverse orientation to the blue node, while a forward orientation has already been assigned via edge 1, therefore it is recognized as conflicting and it is removed. (E) Oriented contigs and end-to-end overlaps form a directed graph. (F) The highest scoring path is found using a Tabu search procedure, which leads to the assembly of a chromosome. these, dealing both with contigs and manifold genome coverage, allowing a number of assemblies to be considered simultaneously. MAIA is not restricted in the number of assemblies and uses the full contigs produced, not requiring these to be broken into reads or k-mers of any type. Pairwise alignments of contigs are calculated to generate an overlap graph. In this graph nodes represent contigs and edges represent alignments. These edges are weighted with several properties of the contigs and alignments, which are combined using weighted Z-scores. Assemblies are integrated at chromosome level by finding the combination of contigs which yields the highest score. This is achieved by optimizing a path in the overlap graph between the contigs that align closest to the 5 and 3 ends of a reference genome. The assembled chromosome directly follows from this path. The MAIA approach has two main advantages. First, multiple known related genomes can be used simultaneously in the assembly process. Second, different NGS sources can be assembled with specific de novo assemblers, to be integrated afterwards with MAIA. As a demonstration of the algorithm, MAIA is applied to the Saccharomyces cerevisiae strain CEN.PK 113-7D, a strain widely used for systems biology research and metabolic engineering (<ref type="bibr" target="#b10">Knijnenburg et al., 2008;</ref><ref type="bibr" target="#b16">Medina et al., 2010;</ref><ref type="bibr" target="#b26">Wisselink et al., 2009</ref>). Its genome is assembled using Solexa reads, 454 reads and three genomes of previously sequenced, closely related S.cerevisiae strains. The method is compared with two other hybrid approaches, using Minimus and Velvet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>MAIA is an assembly integrator using the overlap-layout-consensus paradigm, known from genome assembly algorithms, to combine several assemblies into a single integrated assembly. The algorithm takes as input sets of contigs, each set originating from either a de novo or a comparative assembly, i.e. from mapping against a related genome (<ref type="figure">Fig. 1A</ref>). Overlap between contigs is detected by pairwise aligning the contigs in an allvs-all fashion among the sets (<ref type="figure">Fig. 1B</ref>). An undirected overlap graph is then constructed, with nodes representing contigs and edges representing overlaps. Using a reference genome, i.e. the evolutionary closest of the related genomes available that is of high quality, a 5 start and 3 end node is determined to guide the integration (<ref type="figure">Fig. 1C</ref>). The edges are weighted, reflecting the likelihood that the alignment represents an actual overlap in the genome (<ref type="figure">Fig. 1D</ref>). The graph is then directed by assigning orientation to the contigs, i.e. forward or reverse (<ref type="figure">Fig. 1E</ref>). Assembly integration is finally achieved by finding a highest scoring path between the start and end nodes in the overlap graph and calling the consensus (<ref type="figure">Fig. 1F</ref>). These steps are described in detail below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Constructing an overlap graph from pairwise alignments of contigs</head><p>A graph G = (V ,E) is created in which V ={v 1 ,v 2 ,...,v n } is the set of nodes and E ={{v i ,v j }|v i ,v j âˆˆ V } is the set of edges. Each contig c âˆˆ C is assigned to a node. Overlapping regions in contigs are detected by pairwise aligning all contig pairs in different sets. For every aligned pair of contigs, two filters are applied. First, only the longest mutually consistent set of alignments is selected. Second, if there still is more than one match between two contigs, only the longest is retained. For these steps we used Nucmer and Delta-filter, both part of the Mummer package (<ref type="bibr" target="#b4">Delcher et al., 2002</ref>), although other tools could be used. The resulting alignments a âˆˆ A are used to generate the edges in G. Contigs v i and v j that overlap end-to-end with a minimum alignment length l A,min and maximum length l O,max of nonaligned overhang (<ref type="figure" target="#fig_0">Fig. 2</ref>), i.e. the part of the contig that will be clipped when merging the two, are then joined by a forward and a reverse edge,Page: i435 i433â€“i439, the contig length l C and the length of the non-aligned overhang l O are three of the four properties used for edge weighting, the fourth is an assembly quality score.</p><formula>(v i ,v j ) and (v j ,v i ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i434</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Integrating genome assemblies with MAIA</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Weighting the edges in the overlap graph</head><p>A score Z(e) is assigned to each edge e âˆˆ E to reflect the quality of the alignment and the quality of the contig to which the edge leads. Edge weights differ between forward and reverse edges. For three properties of contigs and alignments (<ref type="figure" target="#fig_0">Fig. 2</ref>), a P-value is calculated. Null distributions for these properties are inferred using all contigs and possible contig pairs. These distributions reflect the probability that the property occurs by chance in a pair of contigs, which do not overlap in the target genome. The P-values are transformed into Z-scores using the inverse of the cumulative density function N âˆ’1 , and combined into Liptakâ€“Stouffer's weighted Z-score, where the weights w i are user-specified per property (<ref type="bibr" target="#b8">Hwang et al., 2005</ref>):</p><formula>Z(e) = 1 w 2 i 3 i=1 w i N âˆ’1 (1âˆ’p i (e))+w 4 Z 4 (e)</formula><formula>(1)</formula><p>For each edge e âˆˆ E the following four properties (illustrated in<ref type="figure" target="#fig_0">Fig. 2</ref>) are calculated:</p><p>(1) The length of the contig; longer contigs are preferred over smaller contigs. A P-value for a particular contig c is estimated as p(</p><formula>l C â‰¥ l C c ) = |{c âˆˆ C|l C c â‰¥l C c }| |C|</formula><p>, where l C c is the length of the contig c to which edge e points and |C| is the total number of contigs.</p><p>(2) The length of the alignment; longer overlap between contigs is preferred. For the calculation of the P-value, only the number of correctly aligned nucleotides l A * = l A Â·f A are considered, where l A is the full length of the alignment and f A is the fraction of aligned nucleotides that are identical. The P-value for a particular alignment</p><formula>a is estimated as p(l A * â‰¥ l A * a ) = |{a âˆˆ A|l A * a â‰¥l A * a }| |A| where |A|= n x=1 |C x |</formula><p>is the total number of possible contig pairs, x is the assembly number and n is the total number of assemblies.</p><p>(3) The percentage of non-aligned overhang; the length of the non-aligned overhang l O should ideally be zero. For a particular alignment a a P-value is calculated as p(</p><formula>l O â‰¤ l O a ) = |{a âˆˆA|q a â‰¤qa}| |A| , where q a = l O a la+l O a</formula><p>is the fraction of non-aligned overhang and l O a is the number of nucleotides that have to be clipped if the two contigs would be merged. We consider the number of nucleotides overhang relative to the contig length to avoid connecting small contigs with large overhangs. Finally, a manually assigned score Z 4 is added for the quality of the assembly, which can differ per assembly source. This score attribute is used to have MAIA prefer high-quality assemblies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Directing the overlap graph</head><p>All contig alignments are end-to-end and can be represented as directed edges in the overlap graph. The direction of each edge depends on the orientation of the contigs it connects. If the upstream end of node v i aligns to the downstream end of node v j , the edge in the graph would be e = (v i ,v j ). Since the orientation of the contigs is unknown, taking the reverse complement of the two contigs flips the edge to e = (v j ,v i ). These two edges represent the forward and reverse strands of the DNA. Since only one strand needs to be assembled, the orientation of the contigs is fixed. Assigning an orientation to the contigs can cause problems, by introducing cycles in the graph that disagree on orientation. These cycles are caused by alignments of contigs that are not actually overlapping in the genome. Edges causing these conflicts have to be removed. An optimal solution would be to assign an orientation to the contigs which minimizes the number of conflicting edges. Since this problem is non-deterministic polynomial-time hard (NP-hard), a greedy approach is used, similar to the contig orientation method in Bambus (<ref type="bibr" target="#b19">Pop et al., 2004b</ref>). This approach starts by fixing the orientation of the start node to forward. Next, the graph is traversed depthfirst in order of descending weights. For every node an orientation is assigned based on the alignment and orientation of the previously visited node. The contig orientation is illustrated by the example in<ref type="figure" target="#fig_0">Figure 2</ref>, in which arrows represents contigs and dashes their alignments. Node v 1 is the start node and has a fixed forward orientation. The graph is traversed to v 2. Since the reverse complement of v 2 aligns to v 1 (opposing arrows), a reverse orientation is assigned to v 2. Subsequently, using the same reasoning, a forward and reverse orientation will be assigned to v 3 and v 4 , respectively. If v 4 had already been visited and was assigned a forward orientation, the edge between v 3 and v 4 conflicts with the previously assigned orientation and will be removed from the graph. After all nodes have been oriented it is known for each end of a contig whether it is the up-or downstream end. The endto-end alignments can now be used to direct the graph, e.g. as node v 2 aligns to the downstream end of node v 1 , the directed edge will be e = (v 1 ,v 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Finding the highest scoring path</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>..v k connected by edges e 1 e 2 ...e k</head><p>in the overlap graph, visiting no node more than once (<ref type="figure">Fig. 1F</ref>). A start node v 0 and end node v k are determined to avoid having to evaluate paths between all possible node pairs in the graph. These nodes are set to be those contigs that originate from the 5 and 3 ends of comparative assembly against the reference genome (<ref type="figure">Fig. 1C</ref>). The combination of contigs connecting v 0 and v k is optimized by maximizing the sum of the edge scores S(</p><formula>P) = max( eâˆˆ P Z(e)</formula><p>). This optimization can be shown to be NPcomplete by taking an instance of G with only positively weighted edges, thereby reducing the maximization to a search for a Hamiltonian path, which is known to be NP-complete. This makes finding the global optimum computationally expensive; therefore, we search for the highest scoring path using a Tabu procedure (<ref type="bibr" target="#b6">Glover, 1986</ref>). The Tabu search starts by finding an initial solution for P by performing a Dijkstra shortest path search on the graph with inverted edge weightsË†Z weightsË† weightsË†Z(e). These inverted weights are calculated for each edge e asË†ZasË† asË†Z</p><formula>(e) = max e (Z(e))âˆ’Z(e)</formula><p>+1. The Tabu search proceeds by systematically applying the change to the path that yields the most improvement in terms of S(P). All pairs of adjacent edges in P are considered for modification (2-opt). Four modifications are possible to a set of two edges.<ref type="figure" target="#fig_2">Figure 3</ref>shows an example for a set of three nodes</p><formula>v i , v j and v k , connected by the edges (v i ,v j ) and (v j ,v k ).</formula><p>The possible modifications are: (i) v j is bypassed by directly connecting v i and v k with edge (v j ,v k ); (ii) v i and v k are connected via a fourth node v l ; (iii) v i or v j are connected via v l ; and (iv) v i and v j are connected via v l. After the change has been applied, the inverse of the change (the 'undo') is stored in the Tabu list. Changes in the Tabu list are not allowed to be applied to avoid entrapment in cycles of repeated identical changes. After a certain number of cycles (here, 3) the change is removed from the Tabu list. The algorithm proceeds until for a certain number of changes (15) no improvement is seen compared with the best path found so far. As the initial solution is often close to the final one, convergence is often fast. In practice, the algorithm is limited by memory size (to hold the overlap graph) rather than computational complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Connecting unconnected subgraphs</head><p>If no path exists between start and end node, contigs from one or more assemblies are aligned to the reference. If a region of the reference genomeis not covered by an aligned contig, a pseudo nodeËœvnodeËœ nodeËœv is created, containing the DNA sequence of this non-covered region (<ref type="figure">Fig. 4</ref>). Edges with a low score (i.e. a penalty) are inserted betweeÃ± v and the pair of nodes that align on both sides ofËœvofËœ ofËœv. The number of pseudo nodes in the graph is kept minimal by gradually increasing the allowed pseudo node size until a path between start and end node is found.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i435</head><formula>v i v j v k v i v j v k v i v i v i v j v j v j v k v k v k v l v l v l</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Post-processing of the path</head><p>The start and end node determined using the reference genome are not necessarily the ends of the target chromosome. Therefore, the path P is greedily extended toward the 5 and 3 extremes of the target genome. P is iteratively extended from the current last node to the node connected with the highest edge weight, provided that it has a specified minimum alignment length l A,min and minimum percentage alignment identity f A,min. The maximum size of a pseudo node is set to l C,maxËœc maxËœ maxËœc . P is split at pseudo nodes exceeding l C,maxËœc maxËœ maxËœc and backtracked to the nearest branchpoint on both sides of the pseudo node. From there on the paths are greedily extended until no extension is possible, similar to the end extension described above, resulting in multiple contigs per chromosome.<ref type="figure">Figure 4</ref>gives an example of splitting P at a large pseudo node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.7">Calling the consensus</head><p>Finally, the integrated contigs follow from the path found by the Tabu search. The contigs and their associated pairwise alignments are transformed into an alignment matrix with one row for every source assembly. The consensus is called by taking for each column the base or gap (arising from the nucmer gapped alignment) of the highest quality assembly present in that column. In the resulting consensus, gaps are removed and the bases are tagged with the assembly from which they originate. This information can be used in further analyses of the assembly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8">Assembly validation</head><p>To assess the quality of both the individual assemblies and the MAIA integrated assembly, the paired-end Solexa reads were mapped onto the assemblies using the Burrows-Wheeler Alignment tool BWA (<ref type="bibr" target="#b12">Li and Durbin, 2009</ref>). Two statistics were extracted from the mappings using Samtools (<ref type="bibr" target="#b12">Li et al., 2009</ref>). First, to assess the completeness of an assembly, the percentage of reads that mapped on the assembly was calculated. Second, to assess the accuracy of an assembly, the percentage supporting read pairs was calculated. This is calculated as the percentage of the total number of mapped pairs that map at a proper distance from each other on a contig. The insert size distribution N(<ref type="bibr">208,</ref><ref type="bibr">13</ref>) and the maximum allowed insert size (âˆ¼ 6Ïƒ) were estimated by BWA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.9">Experimental setup</head><p>DNA of the S.cerevisiae lab strain CEN.PK 113-7D (MATa MAL2-8c SUC2) was prepared (<ref type="bibr" target="#b3">Burke et al., 2000</ref>). A library of 200 bp fragments was created and sequenced paired-end using the Illumina Solexa system, generating âˆ¼ 56 million paired reads. A second library with mate-pair reads with an insert size of 8 kb was prepared sequenced on the Roche 454 Titanium. Both libraries were prepared according to manufacturer recommendations (Illumina and Roche). The pairing rate for the 454 mate pair library was 19%, yielding 149 900 paired reads. De novo unscaffolded assemblies were performed with Abyss (<ref type="bibr" target="#b24">Simpson et al., 2009</ref>) and the Celera assembler (<ref type="bibr" target="#b17">Miller et al., 2008</ref>) on the Solexa and 454 reads, respectively. Abyss was tested for all combinations of k-mer size âˆˆ{23,...,33} and coverage cut-off âˆˆ{0,...,12}; the combination yielding the best N50 was chosen. The Celera assembler was used with standard settings as described in Lee (2007). Comparative assemblies were made by mapping the Solexa reads to the (draft) genomes of the S.cerevisiae strains S288c, YJM789 and RM11-1A using MAQ (<ref type="bibr" target="#b13">Li et al., 2008</ref>). These genomes are 99.3, 98.4 and 98.0% identical to CEN.PK, calculated by dividing the number of identical bases by the length of the genome. The consensus sequences were split into contigs at every occurrence of an 'N'. Contigs &lt;200 bp have been discarded. Integration of the assemblies with MAIA has been performed per chromosome. From the S288c comparative assembly, only contigs originating from the chromosome being assembled were used. A minimum alignment length l A,min of 20 nt is used for finding pairwise alignments. MAIA finds all contigs that align end-to-end. The maximum allowed nonaligned overhang l O,max was set to 10 nt. Scores for the assembly qualities were set to Z = 3,2.5,2,1,0.5 for the Abyss, Celera, S288c, YJM789 and RM11-1A assembly, respectively, reflecting our beliefs concerning the relative quality of the assemblies. De novo assemblies received the highest Z-scores, since these may contain structural variants unique to the target genome. The weights in the combined Z-score for the contig length, alignment length, non-aligned overlap and assembly quality were rather arbitrarily set to be 0.35, 0.25, 0.15 and 0.25, respectively, corresponding to the relative importance of the forms of evidence for merging contigs. Pseudo nodes are iteratively added with increasing sizes until a path from start to end node is found. Only contigs from the S288c assembly were used to create pseudo nodes. The edge weight of a pseudo node is set to âˆ’10 and maximum pseudo node size l C,maxËœc maxËœ maxËœc was set to 250. Two other hybrid methods were applied as a comparison. First, a de novo assembly with Velvet was performed on a combination of the Solexa reads and 454 data-based contigs pre-assembled by the Celera assembler. The parameters (k-mer size and coverage cut-off) were optimized w.r.t. the N50. The paired-end information of the Solexa reads was then used for scaffolding.Page: i437 i433â€“i439Second, an assembly integration with Minimus was performed by merging two assemblies and iteratively applying Minimus to the merged result and a next assembly, whereby the singletons were discarded in every step. The order of combination was: S288c + Abyss, + Celera, + YJM789, + RM11-1A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i436</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Integrating genome assemblies with MAIA</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS AND DISCUSSION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Individual assemblies are fragmented and vary in error rates</head><p>Two de novo and three comparative assemblies have been made for CEN.PK. The results for the individual assemblies are shown in<ref type="figure" target="#tab_1">Table 1</ref>. Despite the high genome coverage (âˆ¼ 160X for the Solexa and âˆ¼ 20X for the 454 data), the Abyss and Celera de novo assemblers generated fragmented assemblies, with an N50 of 20.3 and 2.7 kb, respectively. The N50 is the smallest possible contig length, such that the sum of lengths of all contigs c âˆˆ C with l C c â‰¥ N50 is at least 50% of the total assembly size. The level of fragmentation of the comparative assemblies depends on evolutionary closeness and quality of the genome. The comparative assembly using S288c as template yields the best individual assembly, covering 12.06 million nucleotides with only 375 contigs. The available S288c genome is of high quality and evolutionary closer to CEN.PK than the other strains (<ref type="bibr" target="#b22">Schacherer et al., 2009</ref>). Most reads could be mapped to the S288c comparative assembly, which is therefore the most complete; only 3.1% of the reads could not be mapped. The least number of reads mapped to the Celera and Velvet hybrid assemblies. Running Velvet to assemble only Solexa reads (results not shown) allowed 10% more reads to be mapped. That the use of more 454 reads lowers the percentage of mapped Solexa reads, hints at 454 data quality problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">MAIA drastically lowers the number of contigs</head><p>The number of contigs &gt;200 bp in the individual source assemblies range from 375 to 1,223. MAIA reduces this to 29. Most chromosomes have been assembled in a single contig, except for chromosomes 1, 3, 8, 10, 12 and the mitochondrial DNA, which consist of 5, 4, 3, 2, 2 and 2 contigs, respectively. These chromosomes are known to be relatively divergent among</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S.cerevisiae</head><p>strains.<ref type="bibr" target="#b22">Schacherer et al. (2009)</ref>showed deleted regions in every one of these chomosomes using a whole-genome tiling array. The most apparent of these deletions is the 10 kb deleted region at the extreme of the left arm of chromosome 1, which is also seen in the MAIA assembly (<ref type="figure" target="#fig_4">Fig. 5</ref>). The splits in the chromosomes assembled by MAIA are generally observed near their ends, which are known to be divergent regions in yeast (<ref type="bibr" target="#b2">Argueso et al., 2009</ref>). Divergent regions can benefit less from comparative assemblies and therefore MAIA cannot fully close the genome. The final integrated CEN.PK genome is compiled of five source assemblies; two de novo and three comparative assemblies. Four additional MAIA runs were performed where in each step one of the assemblies was incrementally added to its input, starting with only the S288c comparative assembly.<ref type="figure" target="#fig_6">Figure 6</ref>shows that each individual input assembly positively contributes to the final result.<ref type="figure" target="#tab_1">Table 1</ref>and<ref type="figure" target="#fig_4">Figure 5</ref>show the assemblies and their use for integration. The usage differs from only 0.8% for the comparative assembly with RM11-1A as template to 80% with S288c as template. The S288c genome is fully finished and of high quality. S288c and CEN.PK are both laboratory strains, known to be evolutionary close (<ref type="bibr" target="#b22">Schacherer et al., 2009</ref>); therefore mapping yields large contigs. Both contig quality and contig length are reflected in the Z-scores i437Page: i438 i433â€“i439on the edges in the overlap graph. Therefore, MAIA has a preference for the S288c contigs and often selects them for integration. On the contrary, the RM11-1A genome is a draft genome composed of a set of supercontigs. RM11-1A is a phylogenetically more distant wine strain and therefore contributed to a much lower extend in the final assembly. The MAIA assembly contains 0.04% sequences from 102 pseudo nodes, which are 4340 nt in stretches individually not &gt;250 bp. These sequences do no originate from read data, but from the reference genome. As an illustration the overlap graph of chromosome 9 is shown in<ref type="figure" target="#fig_7">Figure 7</ref>. All five input assemblies are used to construct chromosome 9 of CEN.PK. The contigs of the YJM789 comparative assembly have been grouped by the chromosome from which they originate and are divided among three levels in the layout, indicated by the arrows in<ref type="figure" target="#fig_7">Figure 7</ref>. Contigs originating from YJM789's chromosomes 14 and 15 appear in this graph because of repeat sequences that are present in both these chromosomes and CEN.PK's chromosome 9. Although these repeat-induced connections are present, the Tabu search does not include them in the path. Only the contigs originating from YJM789's chromosome 9 are incorporated in the MAIA integrated chromosome 9 of CEN.PK.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>J.Nijkamp et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">MAIA integrates assemblies at low error rate</head><p>The quality of both the integrated and single assemblies has been assessed using the percentage of mapped pairs that map at a proper distance from each other (<ref type="figure" target="#tab_1">Table 1</ref>). These supporting pairs reflect the accuracy of the assembly algorithms. In both the MAIA and the Minimus assemblies, 99.3% of the mapped pairs can be mapped at their proper distance, showing that these assemblies are of the highest quality in the list. However, only 92.1% of the reads mapped on the Minimus assembly. The S288c comparative assembly is 50 kb longer than the MAIA assembly. This is also reflected in the percentage of reads that map to the assemblies; 96.9% of the reads map to the S288c comparative assembly compared with 96.5% to the MAIA assembly (<ref type="figure" target="#tab_1">Table 1</ref>).The length difference can be partially attributed to the relaxed comparative assembly settings that were used for Maq; no minimum read depth and mapping quality was used. Analysis of the reads mapped by BWA on both the MAIA integrated assembly and the S288c comparative assembly showed that a far larger part of the latter is covered by only few reads (<ref type="figure" target="#fig_9">Fig. 8</ref>). In particular, 15 kb of the nucleotides were covered by five reads or less, whereas for the MAIA assembly this was the case for only 3 kb.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Other hybrid strategies are less complete</head><p>The Minimus assembly contains &gt;12 million base pairs, but only 92.1% of the reads mapped to it. This indicates the iterative approach taken with Minimus results in overlapping information within the integrated assembly. The hybrid de novo assembly generated with Velvet is less complete than the MAIA assembly; only 75.5% of the reads can be mapped to it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSIONS</head><p>We developed MAIA, an integrator for assembly information. Our work extends previously developed algorithms for de novo and comparative assembly, enabling integration of multiple assemblies at once. MAIA makes it possible to use specific assemblers for different NGS data sources, to use multiple reference genomes for comparative assemblies or to combine outputs of different runs of an assembler. The number of known genomes is currently increasing rapidly. In the future it will be more common that multiple closely related genomes are available, as is the case already for S.cerevisiae. These genomes can be leveraged by using MAIA in combination with a comparative assembler. MAIA improves genome assemblies by making use of all available information. The algorithm integrates single assemblies from different sources into longer contigs, up to chromosomal length as shown in the S.cerevisiae assembly integration. Five single assemblies were integrated into 29 contigs covering 12.01 Mb. In the MAIA integrated assembly, 99.3% of the mapped read pairs mapped at a correct distance from each other. This percentage is higher than for each of the single assemblies, indicating that the integrated assembly is of higher quality than the single assemblies. The edge weighting system in MAIA can be extended. Integration is achieved by building an overlap graph from pairwise aligned contigs and subsequently finding the highest scoring path. Edges in this graph are weighted by properties of the involved contigs and alignments. Currently, four properties for the edge weighting i438</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Integrating genome assemblies with MAIA</head><p>are implemented. These can be extended by calculating P-values for additional properties such as alignment-overspanning mate pair data, distances of contigs on the related genomes, or physical or genetic map information.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.2.</head><figDesc>Fig. 2. Four pairwise aligned contigs. The alignment length l A , the contig length l C and the length of the non-aligned overhang l O are three of the four properties used for edge weighting, the fourth is an assembly quality score.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>A chromosome can be assembled by finding a simple path P = v 0 v 1 v 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. Four types of modifications that are applied iteratively to the path by the Tabu search procedure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><figDesc>MAIA has been developed to integrate multiple assemblies. An integrated assembly of the S.cerevisiae lab strain CEN.PK 113-7D, from hereon called CEN.PK, has been constructed to demonstrate the algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.5.</head><figDesc>Fig. 5. Usage of the different assemblies in the input per chromosome.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><figDesc>[10:35 28/8/2010 Bioinformatics-btq366.tex]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.6.</head><figDesc>Fig. 6. MAIA results for the incremental addition of input assemblies.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.7.</head><figDesc>Fig. 7. The overlap graph for chromosome 9. The highest scoring path found by the Tabu search is indicated by the red arrows.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig.8.</head><figDesc>Fig. 8. Histograms of coverage of reads mapped on the MAIA integrated assembly and the S288c comparative assembly.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>Original Bypass Bypass via node v l Insertion of node v l Insertion of node v l</figDesc><table>at :: on August 31, 2016 

http://bioinformatics.oxfordjournals.org/ 

Downloaded from 

[10:35 28/8/2010 Bioinformatics-btq366.tex] 

Page: i436 i433â€“i439 

J.Nijkamp et al. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><figDesc>= v 1 v 2 v 3 Ëœ v 4 v 5 v 6 v 7 has been found. IfËœv IfËœ IfËœv 4 exceeds the maximum size l maxËœc maxËœ maxËœc , the path is subsequently split into P 1 = v 1 v 2 v 3 and P 2 = v 5 v 6 v 7. P 1 and P 2 are backtracked (red arrows) to the nearest branchpoints (v 2 and v 5 , respectively) and greedily extended to v 9 and v 10 yielding P 3 = v 1 v 2 v 8 v 9 and P 4 = v 10 v 11 v 5 v 6 v 7. Finally, the highest scoring paths are chosen from {P 1 ,P 3 } and {P 2 ,P 4 }.</figDesc><table>v 1 

v 2 

v 3 
v 4 
v 5 
v 7 

v 6 

v 11 

v 10 

v 8 

v 9 

Fig. 4. A pseudo nodeËœvnodeËœ nodeËœv 4 is inserted in the graph if no path exists between 
start and end node. An initial path P </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="true"><figDesc>Table 1. CEN.PK assembly statistics of single input and hybrid assemblies</figDesc><table>Strategy 
Assembly 
Package 
# contigs 
Total size (Mb) 
N50 (kb) 
Mapped reads (%) 
Supporting pairs (%) 

Single input 
De novo 
Abyss 
1223 
11.64 
20 
84.8 
97.6 
De novo 
Celera 
4148 
9.03 
3 
62.8 
98.5 
Comparative (S288c) 
Maq 
375 
12.06 
162 
96.9 
99.0 
Comparative (YJM789) 
Maq 
907 
11.77 
44 
90.8 
98.3 
Comparative (RM11-1A) 
Maq 
795 
11.54 
41 
78.2 
98.5 

Hybrid 
De novo 
Velvet 
654 
11.40 
72 
75.5 
97.7 
De novo + comparative 
Minimus 
71 
12.21 
290 
92.1 
99.3 
De novo + comparative 
MAIA 
29 
12.01 
918 
96.5 
99.3 

Only contigs â‰¥ 200 bp were used to generate statistics (two rightmost columns). 

</table></figure>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">i439 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We would like to thank David Adams from the Sanger institute for his help with obtaining the 454 reads.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">108</biblScope>
			<biblScope unit="page" from="35" to="63" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>btq366. .tex]</note>
</biblStruct>

<biblStruct   xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Page</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="439" to="433" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Genome structure of a Saccharomyces cerevisiae strain widely used in bioethanol production</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">L</forename>
				<surname>Argueso</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="2258" to="2270" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<monogr>
		<title level="m" type="main">Methods in Yeast Genetics: a Cold Spring Harbor Laboratory Course Manual. 2000 edn</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Burke</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Cold Spring Harbor Laboratory Press</publisher>
			<pubPlace>Plainview, N.Y</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Fast algorithms for large-scale genome alignment and comparison</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">L</forename>
				<surname>Delcher</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="2478" to="2483" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">De novo genome sequence assembly of a filamentous fungus using sanger, 454 and illumina sequence data</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Diguistini</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">94</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Future paths for integer programming and links to artificial intelligence</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Glover</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="533" to="549" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">A sanger/pyrosequencing hybrid approach for the generation of high-quality draft assemblies of marine microbial genomes</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">M D</forename>
				<surname>Goldberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="11240" to="11245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">A data integration methodology for systems biology</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Hwang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="17296" to="17301" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Extending assembly of short dna sequences to handle error</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Jeck</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="2942" to="2944" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Combinatorial influence of environmental parameters on transcription factor activity</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">A</forename>
				<surname>Knijnenburg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="172" to="181" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<monogr>
		<title level="m" type="main">Using the Celera Assembler Available at http://wgsassembler .sourceforge.net/UsingCeleraAssembler.pdf (last accessed date</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">W</forename>
				<surname>Lee</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2007-01-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Fast and accurate short read alignment with burrowswheeler transform</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Durbin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1754" to="17560" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Mapping short dna sequencing reads and calling variants using mapping quality scores</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1851" to="1858" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">The sequence alignment/map format and samtools</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Project Data Processing Subgroup Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="2078" to="2079" />
			<date type="published" when="1000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Allpaths 2: small genomes assembled accurately and with high continuity from short paired reads</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Maccallum</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">103</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Elimination of glycerol production in anaerobic cultures of a Saccharomyces cerevisiae strain engineered to use acetic acid as an electron acceptor</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">G</forename>
				<surname>Medina</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Environ. Microbiol</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="page" from="190" to="195" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Aggressive assembly of pyrosequencing reads with mates</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">R</forename>
				<surname>Miller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="2818" to="2824" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Comparative genome assembly</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Pop</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Brief. Bioinform</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="237" to="248" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">Hierarchical scaffolding with bambus</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Pop</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="149" to="159" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">De novo assembly using low-coverage short read sequence data from the rice pathogen Pseudomonas syringae pv. oryzae</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">A</forename>
				<surname>Reinhardt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="294" to="305" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Gene-boosted assembly of a novel bacterial genome from very short reads</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">L</forename>
				<surname>Salzberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Comprehensive polymorphism survey elucidates population structure of Saccharomyces cerevisiae</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Schacherer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">458</biblScope>
			<biblScope unit="page" from="342" to="345" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Next-generation dna sequencing</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Shendure</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Ji</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1135" to="1145" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">Abyss: a parallel assembler for short read sequence data</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">T</forename>
				<surname>Simpson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="1117" to="1123" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Minimus: a fast, lightweight genome assembler</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">D</forename>
				<surname>Sommer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">64</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Novel evolutionary engineering approach for accelerated utilization of glucose, xylose, and arabinose mixtures by engineered Saccharomyces cerevisiae strains</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">W</forename>
				<surname>Wisselink</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Environ. Microbiol</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="907" to="914" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Velvet: algorithms for de novo short read assembly using de bruijn graphs</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">R</forename>
				<surname>Zerbino</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Birney</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="821" to="829" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>