
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:59+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Protein subcellular location pattern classification in cellular images using latent discriminative models</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012">2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Jieyue</forename>
								<surname>Li</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Bioimage informatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Biomedical Engineering</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Liang</forename>
								<surname>Xiong</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Machine Learning Department</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Jeff</forename>
								<surname>Schneider</surname>
							</persName>
							<affiliation key="aff2">
								<orgName type="department">Machine Learning Department</orgName>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department" key="dep1">The Robotics Institute</orgName>
								<orgName type="department" key="dep2">Center for Computational Biology</orgName>
								<address>
									<addrLine>5 Lane</addrLine>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName>
								<forename type="first">Robert</forename>
								<forename type="middle">F</forename>
								<surname>Murphy</surname>
							</persName>
							<email>murphy@cmu.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Center for Bioimage informatics</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Biomedical Engineering</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Machine Learning Department</orgName>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="department">Department of Biological Sciences</orgName>
								<orgName type="institution">Carnegie Mellon University</orgName>
								<address>
									<addrLine>5000 Forbes Ave</addrLine>
									<postCode>15213</postCode>
									<settlement>Pittsburgh</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="institution" key="instit1">Freiburg Institute for Advanced Studies</orgName>
								<orgName type="institution" key="instit2">Albert Ludwig University of Freiburg</orgName>
								<address>
									<postCode>79104</postCode>
									<settlement>Freiburg</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Protein subcellular location pattern classification in cellular images using latent discriminative models</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">28</biblScope>
							<biblScope unit="page" from="32" to="39"/>
							<date type="published" when="2012">2012</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts230</idno>
					<note>Copyedited by: TRJ MANUSCRIPT CATEGORY: [10:23 29/5/2012 Bioinformatics-bts230.tex] Page: i32 i32–i39 BIOINFORMATICS Contact: Jeff.Schneider@cs.cmu.edu,</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Knowledge of the subcellular location of a protein is crucial for understanding its functions. The subcellular pattern of a protein is typically represented as the set of cellular components in which it is located, and an important task is to determine this set from microscope images. In this article, we address this classification problem using confocal immunofluorescence images from the Human Protein Atlas (HPA) project. The HPA contains images of cells stained for many proteins; each is also stained for three reference components, but there are many other components that are invisible. Given one such cell, the task is to classify the pattern type of the stained protein. We first randomly select local image regions within the cells, and then extract various carefully designed features from these regions. This region-based approach enables us to explicitly study the relationship between proteins and different cell components, as well as the interactions between these components. To achieve these two goals, we propose two discriminative models that extend logistic regression with structured latent variables. The first model allows the same protein pattern class to be expressed differently according to the underlying components in different regions. The second model further captures the spatial dependencies between the components within the same cell so that we can better infer these components. To learn these models, we propose a fast approximate algorithm for inference, and then use gradient-based methods to maximize the data likelihood. Results: In the experiments, we show that the proposed models help improve the classification accuracies on synthetic data and real cellular images. The best overall accuracy we report in this article for classifying 942 proteins into 13 classes of patterns is about 84.6%, which to our knowledge is the best so far. In addition, the dependencies learned are consistent with prior knowledge of cell organization.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The systematic study of subcellular protein location patterns is required for the full characterization of the human proteome, as these location patterns provide context necessary for understanding the protein's functions. Given Human Protein Atlas (HPA) images that demonstrate the spatial distribution of various proteins and components (organelles) in cells, each of which has been assigned to one of 13 location pattern classes by visual inspection, our goal is to learn to recognize those pattern classes in future images. We can solve this problem using multiclass classification methods. However, a key difficulty is that we can only observe three types of reference components due to the limitation of staining and imaging techniques. Therefore, it is hard to infer the locations of the invisible components given the observations. For example, we may want to classify a protein into the class of 'Golgi complex' if it mainly overlaps with the Golgi complex, but the Golgi complex is not directly visible to us in the images. Thereby, it is important to uncover these invisible parts and then use them for classification from their co-occurrence information with the protein. Although invisible, we still have some clues about the presence of a component in some region of one cell. For instance, one component may have an effect on the appearance of another overlapping and/or interacting component. We can also make inference about the component in the given image region based on the distribution of certain proteins in the cell (e.g. locations and shapes), and its relative distances to other components. If we can discover the dependencies between the observed features extracted from regions and the underlying components, as well as the co-localization relationships between components, then the presence of those hidden components can be inferred and our classification task would be easier. We therefore aim at learning from the data the dependencies among features, components and the protein pattern classes into which the images have been divided. To accomplish this, we build two graphical models with latent variables to capture the components and these dependencies. These two models are based on logistic regression (LR) (<ref type="bibr" target="#b1">Bishop, 2006</ref>). The first model, called hidden logistic regression (HLR), introduces the concept of component as a latent variable into the simple LR, so that the protein and the component can determine the expressed features together. The second model, called hidden conditional random field (HCRF), further introduces spatial dependencies among components at different locations as in conditional random field (CRF) developed by<ref type="bibr" target="#b6">Lafferty et al., 2001</ref>. These two models can capture the components' influence on the expressed features and their spatial configurations, hopefully improving our ability to recognize the patterns. We use gradient-based methods to estimate the models' parameters. We show that the gradients depend on the marginal probabilities on the nodes and edges in the model. For HLR, this computation is easy. But for the HCRF model, inferences for these marginals cannot be done exactly. To address this difficulty in</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Knowledge of the subcellular location of a protein</head><p>inference, we propose to remove certain edges in the HCRF model so that the component variables are 'clustered'. By doing this, the exact inference is greatly accelerated while most of the local interactions between cell components can be retained. The effectiveness of both the HLR and HCRF models are tested on synthetic data and real HPA images. We show that using latent variables to model the components can enhance the classification accuracy. Furthermore, spatial dependencies can significantly improve the performance. With the proposed models, we are able to achieve the best classification performance on this task to our knowledge. The rest of the article is organized as below. First, we describe the dataset and define the problem we try to solve in Section 2. Then the proposed classification methods are described in Section 3. Experimental results are shown in Section 4 on both synthetic simulations and real cellular images. In Section 5, we discuss some related work and summarize this article.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Dataset</head><p>HPA confocal images: the HPA (http://www.proteinatlas.org) is a rich source of location proteomic data (<ref type="bibr" target="#b0">Barbe et al., 2008</ref>). It contains confocal immunofluorescence images for multiple cell lines stained for thousands of proteins with multiple reference channels. Standard stains for the nucleus, endoplasmic reticulum (ER) and cytoskeleton are imaged. In addition, one particular protein is stained in each image, using a monospecific antiserum. Hence each image of a cell includes four fluorescence channels. One example of such image is shown in<ref type="figure" target="#fig_0">Figure 1</ref>. The images are visually annotated with a class label for the subcellular location of the protein. For the experiments in this article, we chose a subset of the HPA images consisting of 1882 images of 942 proteins from one of 13 classes: centrosome, cytoplasm, actin filaments, intermediate filaments, microtubules, ER, Golgi, mitochondria, nuclei, nucleus without nucleoli, nucleoli, plasma membrane and vesicles. To preprocess the image data, we first used the seeded watershed method to segment the image fields into single cells (<ref type="bibr" target="#b7">Newberg et al., 2009</ref>). After that, for every cell we randomly select 50 regions of size 41×41 pixels, each of which must contain some of the stained protein signal (i.e. not empty). The size is chosen so that an individual region captures fine enough information about the specificshows the three reference channels reflecting different components (blue:nucleus, yellow:ER and red:cytoskeleton).<ref type="bibr">The (b)</ref>shows the channel of the stained protein (green) component in it, and the number of regions is chosen so that most of the area of the cell is covered while it is computationally feasible to solve the problem. To extract features from the sampled regions, we compute various subcellular location features according to<ref type="bibr" target="#b7">Newberg et al., 2009</ref>on individual channels separately as well as on the combinations of different channels. These features essentially characterize the appearance, the texture information, the multi-resolution aspect and the spatial distribution of different cell components in the image regions. After feature extraction and removing bad regions and cells, we have 15 990 cells, containing 799 015 regions with 2538 dimensional features.</p><formula>(a) (b)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Problem definition</head><p>To begin with, we give a brief re-statement of the problem. The data we have is a set of cellular images. For each small rectangular region in those images, we can observe some vector of features, and we know the class of the protein stained in this cell and region. Given these data, our goal is to train a model that can classify the distribution pattern of the protein stained in unlabeled images. We introduce some notations here. Suppose there are N cells containing M image regions, T types of cell components and K classes. The features we have for region m is F m ∈ R D F , where D F stands for the size of feature. For this region, we have a label C m indicating the class of the stained protein.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PROPOSED METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Latent Discriminative Models</head><p>We take a discriminative approach and design models to solve the classification problem directly. The most straightforward way of modeling is to let the region's protein class label C m directly determine the features F m we observe in that region. We can describe this simple model using the undirected graphical model in<ref type="figure" target="#fig_1">Figure 2</ref>. We adopt a discriminative approach here. Instead of modeling the joint probability of the labels and features, we directly characterize the probabilities of labels conditioned on the features, since our focus here is prediction. Based on this principle, we can use a log-linear model to realize the model in<ref type="figure" target="#fig_1">Figure 2</ref>as follows:</p><formula>P C m = k|F m ,, ∝ exp w T k F m (1)</formula><p>where the parameter set contains w 1 ,··· ,w K , one for each class, and the footnote T in all equations stands for transpose. We can see that this model is in fact LR for multi class problems. After training, the LR model is able to predict the class label for each test region, based on which cell-and protein-level predictions can be obtained by voting. This simple LR model is our starting point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">HLR</head><p>The LR model implies the assumption that the region features F m are solely determined by the protein label C m in thatregion. This assumption is obviously inadequate in our problem. Clearly, the features (appearance) of a region are determined by both the protein and the cell component(s) in it. Therefore, in addition to the protein variable C m , we introduce a new variable O m to represent the component(s) in that region, and let C m and O m determine the features F m together. The resulting graphical model is shown in<ref type="figure" target="#fig_2">Figure 3</ref>. Note that we only have the cellular images and do not know the value of O m for each region. So, O m is a latent variable and has to be inferred. We again use a log-linear model to characterize what is in<ref type="figure" target="#fig_2">Figure 3</ref>. The conditional probability of the protein label C m and the component O m can be written as:</p><formula>P O m = t,C m = k|F m ,,</formula><formula>∝ exp T f O m = t,C m = k,F m = exp ⎛ ⎝ F T m t ,k w t k δ t = t,k = k ⎞ ⎠ (2)</formula><p>where are the linear parameters, f (·) is a class-dependent feature function and the last line shows the concrete form of this conditional probability. Intuitively, this model is an extended multiclass LR model in which we treat each pair of (O m ,C m ) as one class, and then normalize the probability globally. We refer to it as the HLR model. While the conditional probability above is intuitive, we cannot directly maximize the likelihood under this model, since the values of {O m } are not observed. Therefore, we instead estimate the parameters by maximizing the marginal probability of the labels as below:</p><formula>= argmax m P C m |F m ,</formula><p>,</p><formula>= argmax m O m P O m ,C m |F m ,,</formula><formula>(3)</formula><p>The results produced by HLR are still region-level classification. In the following, we consider the structural information within the cell.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">HCRF:</head><p>in the HLR model, we relax the assumption that the features of different regions are identically distributed given the protein class label, and let one protein class be expressed differently at different parts of the cell. But we are still assuming that the regions are independent of each other. However, in fact, we know that there are spatial dependencies among the components. For example, the Golgi complex is usually located near the nucleus. So when we see the nucleus, which is easy to recognize, we have some clue that the Golgi complex will be nearby. This type of reasoning isfrequently used when human experts try to classify a protein pattern. Our next step is trying to emulate this process and capture the spatial dependencies among the components. Unlike previous sections where we focus on regions, here we treat cells as the units in classification. For cell n, we let M n be the number of regions in it. Further, F n /G n , C n are the features and the label for the cell n, and O n,m is the component(s) in the m-th region of the cell n. The new model extends HLR described in Section 3.1.1 by allowing the components in the same cell to interact with each other. The graphical model that captures all the dependencies is shown in<ref type="figure" target="#fig_3">Figure 4</ref>. As before, we use log-linear models to characterize the dependencies between variables, as in CRF by<ref type="bibr" target="#b6">Lafferty et al., 2001.</ref>The conditional probability of the protein label and component is as follows:</p><formula>P C n ,O n |F n ,, ∝ exp() (4) = i∈N n T f f C n ,O n,i ,F n + (i,j)∈E n T g g C n ,O n,i ,O n,j ,F n = i F T n,i t ,k w t k δ O n,i = t ,C n = k + (i,j) G T n,ij s ,t v s t δ O n,i = s ,O n,j = t ,</formula><formula>(5)</formula><p>where N ,E are the node and edge sets. In this model, the parameter set includes {w tk } and {v st }. The association features F n,i ∈ R D F provide evidence for an individual region i, and the interaction feature G n,ij ∈ R D G provides evidence for the dependency between a region pair (i,j). {w tk } define the potential on each region and {v st } define the potential for pairs of regions. As before, the components O n are not observed. We call this model the HCRF. To learn this model, we also need to maximize the marginal likelihood of the labels C n. That is, our goal is to solve the problem in the following:</p><formula>= argmax n P C n |F n ,</formula><p>,</p><formula>= argmax n O n P C n ,O n |F n ,, .</formula><formula>(6)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Knowledge of the subcellular location of a protein</head><p>Note that unlike LR and HLR, HCRF is able to produce cell-level prediction directly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Learning</head><p>In this section, we describe how to learn the proposed HLR and HCRF models, and use them for prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Training</head><p>We use gradient-based optimization to train the parameters of the HLR and HCRF models. As shown in Section 3.1, the goal of learning is to maximize the marginal probability of the data:</p><formula>= argmax n L n , L n = ln O n P C n ,O n |F n ,,</formula><formula>(7)</formula><p>In log-linear models, the conditional probabilities in general can be written as:</p><formula>P C n ,O n |F n ,, ∝ exp T f C n ,O n ,F n = exp C n ,O n ,F n ,</formula><p>,</p><formula>= exp( n ).</formula><formula>(8)</formula><p>Meanwhile, the marginal of the label C n can be written as follows:</p><formula>P C n |F n ,, = O n P C n ,O n |F n ,, = O n exp n Z n (9) Z n = C n O n exp n (10)</formula><p>By taking the derivative of L n with respect to some parameter θ, the following results can be derived:</p><formula>∂ log O n exp n ∂θ = O n P O n |C n ,F n ,, ∂∂ n ∂θ ,</formula><formula>(11)</formula><formula>∂ logZ n ∂θ = C n ,O n P C n ,O n |F,, ∂∂ n ∂θ ,</formula><formula>(12)</formula><formula>∂L n ∂θ = ∂ log O n exp n ∂θ − ∂Z n ∂θ = O n P O n |C n ,F n ,, ∂∂ n ∂θ − C n ,O n P C n ,O n |F,, ∂∂ n ∂θ .</formula><formula>(13)</formula><p>From Equation (13), it is easy to obtain the derivative for any parameter in HLR and HCRF. Here, we omit the details and only show the final results. For the HLR model, the derivatives are</p><formula>∂L m ∂w tk = F m P O m = t|C m ,F m ,, δ C m = k −P O m = t,C m = k|F m ,,</formula><formula>(14)</formula><p>For the HCRF model, the derivatives are</p><formula>∂L n ∂w tk = i∈N n F n,i P O n,i = t|C n ,F n ,, δ C n = k −P O n,i = t,C n = k|F n ,,</formula><formula>(15)</formula><formula>∂L n ∂v st = (i,j)∈E n G n,ij P O n,i = s,O n,j = t|C n ,F n ,, −P O n,i = s,O n,j = t|F n ,,</formula><formula>(16)</formula><p>Given these results, we can use gradient-based optimizers to train the parameters by maximizing the marginal likelihood of the data. For example, we can use L-BFGS (<ref type="bibr" target="#b8">Nocedal and Wright, 2000</ref>) or stochastic gradient descent (<ref type="bibr" target="#b2">Bottou, 1998</ref>). Note that the key quantities required to calculate these gradients are the marginal probabilities in the forms of P(O|C,F) and P(C,O|F).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Inference</head><p>In Section 3.2.1, we have derived that in order to apply gradient-based learning, we need to first calculate the marginal probabilities in the forms of P(O|C,F) and P(C,O|F). Therefore, inference algorithms are necessary. For the HLR model, inference is straightforward since the number of terms in the partition function is only T ×K. We can easily enumerate all of them to get the exact values of those marginal probabilities. Given the exact gradients and the objective values, we apply L-BFGS to learn the HLR model. For the HCRF model, the inference problem becomes intractable because of the dependence structure of the graphical model. Brute force is infeasible since the partition function contains K ×T M terms, where M is the number of regions in one cell. Other exact methods such as variable elimination (<ref type="bibr" target="#b4">Koller and Friedman, 2009</ref>) are also not viable because the nodes can be densely connected and therefore the tree width (<ref type="bibr" target="#b4">Koller and Friedman, 2009</ref>) of the graph, which determines the complexity of inference, can be very large. Therefore, we need approximate methods. Unfortunately, classical approximate inference methods are difficult to apply here. For example, mean field approximation (<ref type="bibr" target="#b4">Koller and Friedman, 2009</ref>) is not applicable because we need the marginal probabilities on edges, which are not available from a completely factorized mean field distribution. The choice of belief propagation (BP) (<ref type="bibr" target="#b9">Pearl, 1988</ref>) seems reasonable considering the forms of derivatives in<ref type="bibr">Equation (15)</ref>because it provides all the marginal probabilities we need. However, the HCRF model contains numerous small loops like 'C-O-O' and 'O-O-O' in<ref type="figure" target="#fig_3">Figure 4</ref>, which make the BP algorithm inaccurate or even non-convergent. Moreover, the approximate inference result will prevent the marginal likelihood from being optimized efficiently, due to the fact that we cannot evaluate the objective value correctly. To solve these problems, we propose to use an approximate model and exact inference, as opposed to using an exact model and approximate inference. Concretely, we first reduce the tree width of the model and then use variable elimination for inference. We partition the latent 'O' nodes of HCRF into small clusters, then the tree width is equal to the largest cluster size. For example, given that a cell contains 50 components in regions, we can partition these components into 10 clusters of size 5 based on their spatial locations in the cell. Then, we remove the 'O-O' edges that cross cluster boundaries, while still keeping all the 'C-O' edges. By doing this, the tree width of the model is always limited to a small number regardless of the total number of components (regions), making exact inference by variable elimination tractable.An illustration of this process is shown in<ref type="figure" target="#fig_4">Figure 5</ref>. We can see that by making this simplification of model, we lose a few edges, but most of the important local interactions between regions are kept. In return, the inference and learning of the simplified model become efficient. Suppose there are M regions in one cell and we partition them into clusters of size s. Then after the partition, inference can be done in O((M /s)KT s ). Note that now the complexity grows only linearly with the number of regions. However, it still grows exponentially with the cluster size s, which therefore cannot be large. Note that when s = 1, the HCRF degenerates into HLR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i35</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>J.Li et al.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Implementation</head><p>To construct the interaction graphs of HCRF among the components within the same cell, we add edges between components and their nearest neighbors. In this article, we always use the three nearest neighbors to build the interaction graph. Currently, the feature G on each edge in HCRF is just the distance between the centers of two regions. In the future, we may add more descriptive features for the edges. Since we have adopted the 'approximate model, exact inference' approach, both the gradient and the objective value of the data likelihood can be computed exactly, making the optimization straightforward. Here, we use L-BFGS to maximize the marginal likelihood due to its fast convergence and low-memory consumption. It should be pointed out that HCRF has a large number of parameters. In order to avoid overfitting and enhance the generalization ability, we regularize the L 2-norm of the parameters as in ridge regression with a penalization parameter λ. This part is straightforward and details are omitted. Since the time required to infer the HCRF model grows exponentially with the cluster size into which regions are grouped, we set the cluster size to 5 with tradeoff between speed and approximation accuracy. With this setting and T = 3, inference took ∼20 h on one 2.40 GHz 64-bit processor for the HCRF model. The HLR model took about 10 min when T = 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">EXPERIMENTS</head><p>In this section, we show the performance of the proposed methods on both synthetic data and real HPA images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Simulation</head><p>First, we ran a simulation experiment to verify the effectiveness of latent variables in HLR and HCRF. The synthetic data containsM = 10 000 regions, D = 10 dimensional feature vectors, T = 3 types of components and K = 3 classes of protein. To generate such a data set, we use the mechanism described in<ref type="figure" target="#fig_2">Figure 3</ref>. This experiment aims at showing that ordinary LR is not able to handle the case where features depend on factors other than just the label. The HLR model is used here. We try T from 1 to 10 and compare the performance. For every T , we run 10 times of 5-fold crossvalidations. Due to the non-convexity of the HLR model, in each training step of each run, we try five random starts, and pick out the one with the maximum training accuracy. The best value of λ is picked from 0.01 to 1000 also using cross-validation. The mean accuracies for different values of T are shown in<ref type="figure" target="#fig_5">Figure 6</ref>. Standard deviations are not shown since they are very small. We can see that when the number of latent components are less than the true value T = 3, the performance is poor. Once we use T ≥ 3 components, nearly perfect accuracies have been achieved. Note that from Equation 2 when T = 1, the HLR model is equivalent to the regular multiclass LR. Moreover, note that for T ≥ 3, little sign of over-fitting is observed. The results demonstrate that incorporating latent components for this problem greatly helps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">HPA protein classification</head><p>We also compare the performance of different methods on the HPA data set. As described before, we have M = 799 015 regions, D F = 2538 dimensional features for each region and K = 13 protein pattern classes. These regions are from 15990 cells and 942 proteins. After applying PCA to reduce the feature dimension, we obtained D F = 131 features for each region. This data set suffers from moderately imbalanced class distribution problem, in which ∼30% of the samples belong to the largest class. The Support Vector Machine (SVM) is used as our baseline. We use linear SVM [liblinear 1.5.1 (<ref type="bibr" target="#b3">Fan et al., 2008)]</ref>to classify these regions. We predict the labels and the class probabilities for regions in 5-fold cross-validations and automatic tuning of the slack parameter C. Then we let the region results vote for the celllevel labels as follows. For each cell, we add together the class i36probabilities of all the regions from this cell, and then normalize the sum as the class probabilities for this cell. The class with the maximum probability is selected as the label for this cell. Using the same voting schema, we can also obtain labels and the associated probabilities for the proteins. After using five different runs of cross-validation with random partitioning, we obtain that the resulting overall accuracies for proteins are 69.1±0.25%. In addition, for the best run, we plot the precision and recall curve in<ref type="figure">Figure 8</ref>using the following procedure. We first sort the proteins by the magnitude of the maximum probability value (voted from the cells as above) for each protein. An increasing threshold on this probability is used to generate this precision-recall (PR) curve. The precision is calculated as the number correct divided by the number of proteins classified with probability above the threshold. The recall is defined as the number correct divided by the total number of proteins. The area under the curve (AUC) is 0.60. It is important to note that in this and all experiments in this article, when we split the data set into training and testing sets for cross-validation, all of the regions and cells belonging to the same protein were in either the training or the testing set (i.e. the same protein cannot be in both the training the testing sets simultaneously). As a result, the learner must generalize across different proteins with the same label and the accuracy might be conservative. We first test the performance of the HLR model on this dataset. We use T from 1 to 10, and other settings are similar to those in Section 4.1 and in the SVM experiment. The mean performance and standard deviations for the voted accuracies on proteins are shown in<ref type="figure" target="#fig_7">Figure 7</ref>. A clear improvement is achieved when increasing T from 1 to 2. The highest mean accuracy is ∼80.7%, achieved when T = 2. For the best run of cross-validation in T = 2, a PR curve is plotted in<ref type="figure">Figure 8</ref>and the AUC is 0.69. Therefore, HLR outperforms the basic LR (the T = 1 case) and the SVM baseline significantly. This result again verifies the effectiveness of the latent components. Next, we test the performance of HCRF in the task of classifying the cells and proteins. In this case, we can only afford the time and memory usage to try T from 1 to 6. For efficient inference, we divide the regions in each cell into clusters of size 5 as described in<ref type="figure">Fig. 8</ref>. Precision and recall curves on protein classification probabilities from SVM, HLR and HCRF. Each of them is from the one having the best overall accuracy and variance of the performance. In each run, we use a different seed to randomly split the data and do 5-fold cross-validation. Again at the beginning of every training step, we use five trials of random starts and the one with the maximum training accuracy will be used to do the testing. The resulting accuracies are shown in<ref type="figure" target="#fig_7">Figure 7</ref>. We can see that the HCRF model significantly improves the accuracies over the HLR model. The best mean overall accuracy on the protein level that is obtained by voting across cells is 84.6% acquired when T = 3, and the confusion matrix for best run with T = 3 is shown in<ref type="figure" target="#tab_1">Table 1</ref>. The confusion matrix shows that larger classes tend to have higher accuracies. The nuclei pattern is often confused with the 'nucleus without nucleoli' pattern because the latter has many more member proteins and these are often difficult to distinguish visually. This is also the case for proteins of the plasma membrane and cytoplasm classes. For the best cross-validation run, we plot the PR curve in<ref type="figure">Figure 8</ref>, which has an AUC of 0.82. From the figure, we can see that if we increase the threshold to have recall of ∼60%, the precision is ∼95%. Since the HCRF with T ≥ 2 outperforms the one with T = 1, we can conclude that the latent components and spatial dependencies introduced in HCRF are indeed useful. Note that the overall accuracy appears to saturate at around 84% in<ref type="figure" target="#fig_7">Figure 7</ref>. We have estimated that the overall accuracy of human annotation of these labels in other work is ∼90% (data not shown), which our classification accuracy approaches. Moreover, any errors in labeling by human experts may result in confusion when used for training the classifiers. Therefore, we believe that the accuracy achieved by HCRF is indeed approaching the limit, although there is probably some room for improvement. To provide further insight into the basis for the improvement in accuracy by HLR or HCRF, we investigate the meaning of the latent components learned from data and their relationships with the classes of protein distribution patterns. To interpret these components, we infer the matrix</p><formula>P C m ,O m |F m ,,</formula><p>of size of K ×T using Equations (2) and (14), or (15) for each region. The calculation is based on the setting that produces the best overall accuracy. We then sum the matrices over all the regions to get one matrix that</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Knowledge of the subcellular location of a protein</head><p>reflects the fact that the protein classes and the latent components determines the features together. The only prior work on the automated classification of proteins using HPA immunofluorescence images is by<ref type="bibr" target="#b7">Newberg et al., 2009.</ref>In that article, each cell is treated as a single region, and SVM directly applied to classification. The experiment using that approach on the dataset used here gives the overall accuracy on proteins to be 81.3%±0.61%. Therefore, our HCRF model is statistically better.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Conclusion</head><p>In this article, we address the problem of classifying proteins based on their subcellular localization patterns. Given the spatial distribution of a protein in the cells, we want to know the class of this protein. To solve this problem, we proposed two discriminative models that extend LR with latent variables. The first one, called the HLR, extends regular logistic regression so that the features can depend on factors other than the class label. The HLR model addresses the issue that the same protein can be expressed differently at different locations of the cell. The second model, called the HCRF, further extends the HLR model by allowing the regions in the same cell to interact with each other. HCRF is able to 'guess' the component at a location based on information from other regions, thus helping us better predict the class of the protein. In both synthetic and real data experiments, we demonstrate that the proposed models are able to enhance classification performance. Particularly, on the HPA dataset, HCRF achieved 84.6% overall accuracy on proteins, which is best result up to now. In the future, we plan to enhance the performance by using better features and devise more accurate learning algorithms. For example, we can incorporate richer dependencies between components. The features can also be transformed to take potential non-linearity into considerable. More efficient inference algorithm can be developed to allow for more complex interactions between components. Moreover, because there are much larger amounts of images of proteins that can localize in more than one component in cell, we want to apply the models proposed in this article to classify more challenging protein subcellular location pattern complexes.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. One sample image from the HPA data set. The (a) shows the three reference channels reflecting different components (blue:nucleus, yellow:ER and red:cytoskeleton). The (b) shows the channel of the stained protein (green)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.2.</head><figDesc>Fig. 2. The LR model for regions. F m are the features and C m is the label</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.3.</head><figDesc>Fig. 3. The HLR model for regions. O m is the latent variable categorizing the underlying cell component(s)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.4.</head><figDesc>Fig. 4. The HCRF model for cells. All the components {O n,m } are latent variables</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig.5.</head><figDesc>Fig. 5. An illustration of how to simply HCRF for tractable exact inference. Each node represents an 'O' node in HCRF</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig.6.</head><figDesc>Fig. 6. Results of the simulation study, showing the accuracies of various choices of T (the number of latent components). The true number of components is T = 3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig.7.</head><figDesc>Fig. 7. Classification accuracies on HPA proteins by HLR and HCRF. These accuracies are obtained from cell-level results by probability voting</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig.9.</head><figDesc>Fig. 9. Two probability maps representing the co-occurrence relationships between the learned latent components and classes. (a) is from HLR and (b) is from HCRF</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><figDesc>Table 1.</figDesc><table>Confusion matrix of classification on proteins using HCRF model 

Accuracy% 
centro. cyto. 
actin 
inter. 
micro. er 
golgi 
mitoch. nuclei w/o 
nucleoli PM 
vesicle 

Centrosome (15) 
40 
6.7 
0 
0 
0 
0 
20 
0 
0 
13.3 
0 
0 
2 0 
Cytoplasm (125) 
0 
92 
0 
0 
0 
0 
0 
3.2 
0 
0 
0 
0 .8 
4 
Actin filaments (10) 
0 
20 
10 
0 
0 
0 
0 
30 
0 
10 
0 
10 
20 
Intermediate filaments (12) 
0 
8.3 
0 
6 6 .7 
0 
0 
0 
2 5 
0 
0 
0 
0 
0 
Microtubules (18) 
0 
5.6 
0 
0 
9 4 .4 
0 
0 
0 
0 
0 
0 
0 
0 
ER (39) 
0 
0 
0 
0 
0 
89.7 
0 
7 .7 
2 .6 
0 
0 
0 
0 
Golgi (63) 
0 
1.6 
1 .6 
0 
0 
0 
8 1 
9 .5 
1 .6 
0 
0 
1 .6 
3 .2 
Mitochondria (148) 
0 
0.7 
0 
0 
0 
0 
0 
9 9 .3 
0 
0 
0 
0 
0 
Nuclei (75) 
0 
0 
0 
0 
0 
0 
0 
0 
37.3 
57.3 
5 .3 
0 
0 
Nucleus w/o nucleoli (284) 
0 
0 
0 
0 
0 
0 
0 
0 
1.4 
96.8 
1 .8 
0 
0 
Nucleoli (65) 
0 
1.5 
0 
0 
0 
0 
1 .5 
0 
3 .1 
4 .6 
8 7 .7 
0 
1 .5 
Plasma membrane (14) 
0 
35.7 
21.4 
0 
0 
0 
7 .1 
7 .1 
0 
7 .1 
0 
1 4 .3 
7 .1 
Vesicles (74) 
0 
1.4 
1 .4 
0 
0 
0 
4 .1 
2 .7 
1 .4 
1 .4 
0 
0 
8 7 .8 

It is the one having best overall accuracy from trails of T = 3. The values in the parentheses are the numbers of proteins in each class. 

Latent variables 

(a) 

1 
2 

Centrosome 
Cytoplasm 
actin 
intermediate 
microtubules 
ER 
Golgi 
Mitochondria 
Nuclei 
Nuclei w/o nucleoli 
Nucleoli 
Plasma membrane 
Vesicles 

Latent variables 

(b) 

1 
2 
3 

Centrosome 
Cytoplasm 
actin 
intermediate 
microtubules 
ER 
Golgi 
Mitochondria 
Nuclei 
Nuclei w/o nucleoli 
Nucleoli 
Plasma membrane 
Vesicles 

</table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">represents the co-occurrence relationship between C and O. After being normalized so that the entries sum to one, this matrix can represent the co-occurrence probabilities between the classes and latent components. We show the probability maps from HLR and HCRF in Figure 9. From Figure 9, we can see the distinct relationships between different latent components and different classes. Each latent component is associated with a unique combination of classes. In Figure 9 (a), the two latent components mostly differ in the distribution relative to nucleus, i.e. close to nucleus (the first) or not (the second). The first one has larger coefficients on intermediate filaments and microtubules, because the projection from 3D distribution onto the 2D image makes these two have high intensity within and around the nucleus area. The &apos;Nuclei&apos; pattern and &apos;Nuclei without nucleoli&apos;pattern are distinct, so they should be in different components. This also explains the phenomenon in Figure 7 that HLR apparently do better with two components than with ≥3 components, because HLR may find the most conspicuous clue for identifying the location patterns of proteins to be inside or near to the nucleus or outside. Other clues compared to the nucleus may have little help or even hurt by overfitting (actually the training likelihood still grows as T increases, data not shown). In Figure 9 (b), the first latent component again represents the patterns distributing inside or tightly close to nucleus, the second involves granular distribution over the cytosolic space and the third involves smooth distribution over the cellular space (including the nucleus). 5 DISCUSSION 5.1 Related work Recently, there have been several studies using latent discriminative models to solve structured prediction problems with partially observed data. Here, we discuss the most relevant two. Our proposed HCRF model is similar to the work Discriminative Random Field by Kumar and Hebert, 2004. The difference is that in our case the labels for the regions are latent variables, and each cell has only one label. The concept of HCRF has also been raised in the work done in Quattoni et al., 2007, and the structure of their graphical model is quite similar to ours; nevertheless, in their model, the cell label is only associated with the latent labels of the regions. In our model, these connections are also conditioned on the observations, which i38 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We thank the HPA project team, especially Emma Lundberg, for providing the high-resolution fluorescence confocal microscopy images used in this study.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Toward a confocal subcellular atlas of the human proteome</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Barbe</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Cell Proteomics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="499" to="508" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<monogr>
		<title level="m" type="main">Pattern Recognition and Machine Learning</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">M</forename>
				<surname>Bishop</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="203" to="213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<monogr>
		<title level="m" type="main">Online algorithms and stochastic approximations Online Learning and Neural Networks</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Bottou</surname>
			</persName>
		</author>
		<editor>Saad, D. ed</editor>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Liblinear: a library for large linear classification</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Fan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1871" to="1874" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<monogr>
		<title level="m" type="main">Probabilistic Graphical Models: Principles and Techniques</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Koller</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Friedman</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>The MIT Press</publisher>
			<biblScope unit="page" from="285" to="486" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Discriminative fields for modeling spatial dependencies in natural images</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Kumar</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Hebert</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems 16</title>
		<editor>Thrun,S. et al.</editor>
		<imprint>
			<publisher>The MIT Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="1531" to="1538" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Conditional random fields: Probabilistic models for segmenting and labeling sequence data</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Lafferty</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">18th International Conference on Machine Learning</title>
		<editor>Brodley,C.E. and Danyluk,A.P.</editor>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="282" to="289" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Automated analysis of human protein atlas immunofluorescence images</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">Y</forename>
				<surname>Newberg</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 IEEE International Symposium on Biomedical Imaging: From Nano to Macro</title>
		<meeting>the 2009 IEEE International Symposium on Biomedical Imaging: From Nano to Macro</meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1023" to="1026" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Nocedal</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Wright</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="222" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<monogr>
		<title level="m" type="main">Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Pearl</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<publisher>Morgan Kaufmann</publisher>
			<biblScope unit="page" from="143" to="236" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Hidden conditional random fields</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Quattoni</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. PAMI</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1848" to="1853" />
			<date type="published" when="2007-08-30" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>