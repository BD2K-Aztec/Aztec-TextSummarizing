
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:31+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis LPmerge: an R package for merging genetic maps by linear programming</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2014">2014</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Jeffrey</forename>
								<forename type="middle">B</forename>
								<surname>Endelman</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Horticulture</orgName>
								<orgName type="institution">University of Wisconsin</orgName>
								<address>
									<postCode>53706</postCode>
									<settlement>Madison</settlement>
									<region>WI</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Christophe</forename>
								<surname>Plomion</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="laboratory">UMR1202</orgName>
								<orgName type="institution">INRA</orgName>
								<address>
									<postCode>F-33610</postCode>
									<settlement>Cestas</settlement>
									<region>BIOGECO</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">Université de Bordeaux</orgName>
								<address>
									<postCode>UMR1202 BIOGECO, F-33170</postCode>
									<settlement>Talence</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">John</forename>
								<surname>Hancock</surname>
							</persName>
						</author>
						<title level="a" type="main">Genome analysis LPmerge: an R package for merging genetic maps by linear programming</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">30</biblScope>
							<biblScope unit="issue">11</biblScope>
							<biblScope unit="page" from="1623" to="1624"/>
							<date type="published" when="2014">2014</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btu091</idno>
					<note type="submission">Received on August 5, 2013; revised on January 5, 2014; accepted on February 8, 2014</note>
					<note>Associate Editor: Contact: endelman@wisc.edu Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Consensus genetic maps constructed from multiple populations are an important resource for both basic and applied research, including genome-wide association analysis, genome sequence assembly and studies of evolution. The LPmerge software uses linear programming to efficiently minimize the mean absolute error between the consensus map and the linkage maps from each population. This minimization is performed subject to linear inequality constraints that ensure the ordering of the markers in the linkage maps is preserved. When marker order is inconsistent between linkage maps, a minimum set of ordinal constraints is deleted to resolve the conflicts. Availability and implementation: LPmerge is on CRAN at http://cran. r-project.org/web/packages/LPmerge.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Broadly speaking, two types of strategies have been used to construct genetic maps across multiple populations. One is to minimize an objective function based on the observed recombination frequencies between markers, analogous to the strategy used for linkage mapping in a single population. Examples of this approach include the software packages JoinMap (<ref type="bibr">Van Ooijen, 2006</ref>) and MultiPoint (<ref type="bibr">Ronin et al., 2012</ref>). The second strategy is to work directly with the component linkage maps instead of the underlying recombination frequencies, which can lead to significant gains in computational efficiency without compromising map accuracy (<ref type="bibr">Wenzl et al., 2006</ref>). This second strategy is used by the software package MergeMap (<ref type="bibr">Wu et al., 2011</ref>), which has been used in several different species (<ref type="bibr">Gautami et al., 2012;</ref><ref type="bibr">Khan et al., 2012;</ref><ref type="bibr">Munõz-Amatriaı´nAmatriaı´n et al., 2011</ref>).<ref type="bibr">Endelman (2011)</ref>identified a weakness in MergeMap and proposed an alternative algorithm for merging linkage maps based on linear programming (LP), which was incorporated into an R package called DAGGER. The accuracy of the LP algorithm was validated on simulated data, and in comparison with MergeMap using real barley data was found to have lower mean-squared error on a genome-wide basis (<ref type="bibr">Endelman, 2011</ref>). A significant limitation of DAGGER was that it required the component linkage maps to have a consistent marker order. In practice, the linkage maps from different populations often have ordering conflicts, even when there is a single physical order, because of genotyping errors and statistical errors arising from the use of small populations. Another weakness of DAGGER was that the length of the consensus genetic map was shrunken compared with the original linkage maps. Both of these limitations have been overcome to create a new R package called LPmerge, which is available on CRAN. The LP algorithm has been reformulated without graph theory to eliminate shrinkage of the consensus map, and a new algorithm for resolving ordinal conflicts between linkage maps has been added. The objectives of this Applications Note are to describe these modifications and to illustrate the performance of the conflict resolution algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">ALGORITHM</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Consensus map error</head><p>In the first step of LPmerge, markers are assigned to bins. If in every map where two markers were jointly mapped they cosegregated (had the same map position), they are placed in the same bin. Because of some markers co-segregating in one map but not in another, a single linkage map bin may be represented by multiple consensus map bins. Map positions in the ith linkage map are denoted by y i , and consensus map positions are denoted by x. Within linkage map i, the markers are ordered from j ¼ 1 to M i , and the map distance between the jth and (j þ q)th markers is y i (j þ q)–y i (j). Letting u(j;i) denote the consensus map bin containing marker j from map i, the corresponding distance in the consensus map for these two markers is x(u(j þ q;i))–x(u(j;i)). The absolute error between the consensus map and the ith linkage map for this interval is thus E i, j, q ¼ x u j þ q; i ð Þ ð ÞÀ x u j; i</p><formula>ð Þ ð Þ ½  À y i j þ q ð ÞÀ y i j ð Þ ½  ð1Þ</formula><p>The total error between the consensus map and the linkage maps is a sum over maps (i), markers (j) and interval sizes (q):</p><formula>E ¼ X T i¼1 W i N À1 i X K q¼1 X Mi j¼1 E i, j, q ð2Þ</formula><p>where T is the number of linkage maps and K is the maximum interval size. At the end of a linkage map, when the sum jþq exceeds M i , this expression is evaluated as if the linkage maps were circular rather than linear. For example, when j</p><formula>N i ¼ K X Mi j¼1 1</formula><p>is the number of error terms for map i, and W i is a set of possible weights for the average (W i ¼ 1 for unweighted). The maximum interval size K can be varied to produce different consensus maps, and additional criteria can be used to select one. A tutorial illustrating this process is available at http://potatobreeding.cals. wisc.edu/software.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Resolving marker order conflicts</head><p>When minimizing the error [Equation</p><p>(2)], it is desirable that the consensus map be as consistent as possible with the linkage maps in terms of marker order. This is achieved through the use of linear inequalities. For a pair of adjacent linkage map bins (v,w), each with a single consensus map bin, the corresponding constraint is x(w) – x(v) ! 0. When the linkage map bins contain multiple consensus map bins, constraints are added for every combination of the consensus map bins. The total set of ordinal constraints can be written in matrix notation as Ax ! 0. If there are conflicts in marker order between the maps being merged, the linear system Ax ! 1 will be infeasible. Finding the minimum number of constraints to remove to achieve feasibility is NP-hard (<ref type="bibr">Amaldi and Kann, 1995</ref>).where b represents the elastic variables, and the objective is to minimize their sum. The algorithm proceeds by finding which constraint (row of A) leads to the lowest elastic sum when removed. This constraint is then removed, and the procedure is repeated. When the algorithm eliminates a constraint and finds the elastic sum is zero, then that subsystem is feasible and the algorithm stops.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">LP problem</head><p>After removing the ordinal conflicts in A, linear programming is used to find a consensus map with minimum error (see Supplementary Material online).Eliminated following constraints Map II: C 5 B Map III: G 5 F Map IV: B 5 A Unlike other map-merging algorithms, LPmerge removes inequality constraints rather than markers to resolve conflicts. The consensus map returned by LPmerge for this toy problem has the correct marker order and distances (<ref type="figure" target="#fig_1">Fig. 1</ref>).<ref type="figure" target="#fig_1">1</ref>. Toy problem illustrating the ability of LPmerge to resolve marker order conflicts (shown in red). Map I represents the correct order, which is recovered by LPmerge</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>LPmerge uses a polynomial-time approximation from Chinneck (2001) (Algorithm 1), which is based on the idea of elasticizing constraints. The elastic LP corresponding to Ax ! 1 is</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure1illustrates</head><figDesc>Figure 1 illustrates the performance of the conflict resolution algorithm on a toy problem from the LPmerge reference manual. Four linkage maps have been merged (I–IV), each with seven markers (A–G). Map I represents the true marker order, and in the other maps the order of two adjacent markers</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>Funding: J.B.E. acknowledges support from the Bill and Melinda Gates Foundation. C.P. acknowledges support from EU Project No. 289841 (PROCOGEN). Conflict of Interest: none declared. REFERENCES Amaldi,E. and Kann,V. (1995) The complexity and approximability of finding maximum feasible subsystems of linear relations. Theor. Comput. Sci., 147, 181–210. Chinneck,J.W. (2001) Fast heuristics for the maximum feasible subsystem problem. INFORMS J. Comput., 13, 210–223. Endelman,J.B. (2011) New algorithm improves fine structure of the barley consensus SNP map. BMC Genomics, 12, 407. Gautami,B. et al. (2012) An international reference consensus genetic map with 897 marker loci based on 11 mapping populations for tetraploid groundnut (Arachis hypogaea L.). PLoS One, 7, e41213. Khan,M.A. et al. (2012) A multi-population consensus genetic map reveals inconsistent marker order among maps likely attributed to structural variations in the apple genome. PLoS One, 7, e47864. Munõz-Amatriaı´nAmatriaı´n,M. et al. (2011) An improved consensus linkage map of barley based on flow-sorted chromosomes and single nucleotide polymorphism markers. Plant Genome, 4, 238–249. Ronin,Y. et al. (2012) Two-phase analysis in consensus genetic mapping. G3 (Bethesda), 2, 537–549. Van Ooijen,J.W. (2006) JoinMap 4: software for the calculation of genetic linkage maps in experimental populations. Kyazma B.V., Wageningen, The Netherlands. Wenzl,P. et al. (2006) A high-density consensus map of barley linking DArT markers to SSR, RFLP and STS loci and agricultural traits. BMC Genomics, 7, 206. Wu,Y. et al. (2011) Accurate construction of consensus genetic maps via integer linear programming. IEEE/ACM Trans. Comput. Biol. Bioinform., 8, 381–394.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig.</head><figDesc>Fig. 1. Toy problem illustrating the ability of LPmerge to resolve marker order conflicts (shown in red). Map I represents the correct order, which is recovered by LPmerge</figDesc></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">J.B.Endelman and C.Plomion at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>