
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:43+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-threaded vectorized distance matrix computation on the CELL/BE and x86/SSE2 architectures</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Adrianto</forename>
								<surname>Wirawan</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Keong</forename>
								<surname>Chee</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Bertil</forename>
								<surname>Kwoh</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<surname>Schmidt</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Multi-threaded vectorized distance matrix computation on the CELL/BE and x86/SSE2 architectures</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS APPLICATIONS NOTE</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="issue">10</biblScope>
							<biblScope unit="page" from="1368" to="1369"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq135</idno>
					<note type="submission">Sequence analysis Advance Access publication March 26, 2010 Received on December 11, 2009; revised on March 5, 2010; accepted on March 23, 2010</note>
					<note>[12:39 3/5/2010 Bioinformatics-btq135.tex] Page: 1368 1368–1369 Associate Editor: Limsoon Wong</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Multiple sequence alignment is an important tool in bioinformatics. Although efficient heuristic algorithms exist for this problem, the exponential growth of biological data demands an even higher throughput. The recent emergence of multi-core technologies has made it possible to achieve a highly improved execution time for many bioinformatics applications. In this article, we introduce an implementation that accelerates the distance matrix computation on x86 and Cell Broadband Engine, a homogeneous and heterogeneous multi-core system, respectively. By taking advantage of multiple processors as well as Single Instruction Multiple Data vectorization, we were able to achieve speed-ups of two orders of magnitude compared to the publicly available implementation utilized in ClustalW. Availability and Implementation: Source codes in C are publicly available at https://sourceforge.net/projects/distmatcomp/</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Multiple sequence alignment (MSA) of many nucleotides or amino acids is an important tool in bioinformatics. It can identify patterns or motifs to characterize protein families, and is therefore utilized to detect homology between sequences as well as to perform phylogenetic analysis. Many MSA heuristics have been proposed to reduce the exponential complexity of computing optimal MSAs. Heuristic MSA implementations include MSA (<ref type="bibr" target="#b5">Lipman et al., 1989</ref>), ClustalW (<ref type="bibr" target="#b12">Thompson et al., 1994</ref>), T-Coffee (<ref type="bibr" target="#b8">Notredame et al., 2000</ref>), MUSCLE (<ref type="bibr" target="#b2">Edgar, 2004</ref>) and PRALINE (<ref type="bibr" target="#b10">Simossis and Heringa, 2005</ref>). ClustalW is considered to be one of the most popular MSA tools. It is based on the progressive alignment method. Although not optimal, this method can produce reasonably good alignments at a good efficiency. However, the exponential growth of biological data demands an even higher throughput. Thus, software approaches to improve the performance of ClustalW have been introduced, including caching (<ref type="bibr" target="#b0">Catalyurek et al., 2003</ref>) and parallel processing (<ref type="bibr" target="#b1">Chaichoompu et al., 2006;</ref><ref type="bibr" target="#b4">Li, 2003</ref>). Recent usage of easily accessible accelerator technologies to improve the ClustalW algorithm include FPGAs (<ref type="bibr" target="#b9">Oliver et al., 2005</ref>) and GPUs (<ref type="bibr" target="#b6">Liu et al., 2007;</ref><ref type="bibr" target="#b7">Liu et al., 2009</ref>). Profiling of ClustalW reveals that the distance matrix computation is the most time-consuming phase and takes typically &gt;90% of thePage: 1369 1368–1369</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cell/BE and x86/SSE2 architectures</head><p>profile computation is done in the power processor element (PPE) and is distributed to the respective SPEs using direct memory access (DMA) transfer. For the SSE2 implementation, each thread contains its respective query profile information needed to complete the computation. Our Cell/BE implementation utilizes the additional instructions of the PPE relating to control of the SPEs to implement the multi-threading. Unlike SPEs, the PPE can read and write the main memory and the local memories of SPEs through the standard load/store instructions. The PPE reads the input dataset, pre-processes it and divides the dataset into equal size blocks for each SPEs to process. Since the blocks are independent of each other, no thread synchronization is necessary during the calculations. The mailbox functions spe_in_mbox_write and spu_read_in_mbox are used to ensure that all the SPEs obtain their respective contexts in their local memory. Using the context data, each SPE then transfers any required information and necessary sequences. To improve transfer efficiency, the database sequences in main memory and in the local storage are aligned within the cache line and data structures are initialized during the transfer of the sequence. Our SSE2 implementation uses pthreads to implement the multi-threading. The input dataset are pre-processed and sorted according to length. Each thread contains a copy of the database sequence, query sequence and its respective query profile. Since the datasets are sorted, the datasets are divided into roughly equal size workload for each thread to process. Cell/BE does not support saturation arithmetic that are needed in the calculations to anticipate overflow problems. Hence, we utilized several SPU intrinsics, i.e. spu_sel, spu_splats, spu_rlmaska, spu_nor and spu_and in conjunction with the existing spu_add and spu_sub to handle saturated additions and saturated subtractions, respectively. Unlike Cell/BE, Intel's SSE2 instructions support saturation arithmetic. Hence, saturated subtraction and addition functions, _mm_subs_epu16 and _mm_adds_epu16, respectively, are utilized to ensure that the values of the vector are within valid range.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head><p>A set of performance evaluation experiments have been conducted using six protein sequence datasets consisting of sequences selected from the human immunodeficiency virus (HIV) dataset downloaded from NCBI. The experimental datasets represent datasets of small number of long sequences, medium number of medium-length sequences and large number of short sequences, respectively. Our Cell/BE implementation is benchmarked on a standalone PlayStation®3 (PS®3) with Fedora Core 9.0 and the Cell Software Development Kit (SDK) 3.1. Our SSE2 implementation is benchmarked on an Intel Quad-Core i7-920 2.66GHz CPU, 12 GB RAM running Linux Fedora 10. The sequential ClustalW application, available online at http://www.bii.a-star.edu. sg/achievements/applications/clustalw/, was benchmarked on an Intel Quad-Core i7-920 2.66GHz CPU, 12 GB RAM running Linux Fedora 10.<ref type="figure">Table 1</ref>shows the performance evaluation of our implementations using the above-mentioned datasets on different architectures. The Cell/BE implementation shows a better performance for datasets with fewer but longer sequences, while the SSE2 implementation shows a better performance for datasets with more but shorter sequences. This is due to the overhead for the PS3®, which involved DMA transfers of required data and sequences between the PPE and the SPEs. Since the first stage of several other MSA tools, e.g. T-Coffee (<ref type="bibr" target="#b8">Notredame et al., 2000</ref>) and MUSCLE (<ref type="bibr" target="#b2">Edgar, 2004</ref>) is also based</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><figDesc>[12:39 3/5/2010 Bioinformatics-btq135.tex]</figDesc></figure>

			<note place="foot">* To whom correspondence should be addressed. overall runtime. Therefore, accelerating this phase would greatly improve the performance as a whole. Implementations through the use of Single Instruction Multiple Data (SIMD) parallelism can achieve increased performances by performing operations on multiple values in parallel. The recent emergence of multi-core technologies, either homogeneous or heterogeneous, makes it possible to achieve an improvement in execution time for many bioinformatics applications (Szalkowski et al., 2008; Wirawan et al., 2008). In this article, we introduce our implementation that accelerates the distance matrix computation on the Cell Broadband Engine (Cell/BE) and the commonly used Intel x86 architecture. By taking advantage of multiple processors as well as SIMD vectorization, we were able to achieve significant speed-ups of two orders of magnitude compared to the distance matrix computation used in ClustalW. 2 METHODS Our Cell/BE implementation takes advantage of the 128-bit SIMD vector registers of each synergistic processing elements (SPE) and uses half-word values (16 bits) for the computation, which is the smallest element supported by the Cell/BE instruction set. This allows eight cells to be processed per vector register. SPU intrinsics (IBM, 2007) are used to improve the efficiency of the program. The SSE2 instructions support 8-and 16-bit elements in the vector registers. Our implementation utilizes 16-bit elements, allowing eight cells to be processed per vector register. Since all elements in the same minor diagonal of the dynamic programming (DP) matrix can be computed independent of each other in parallel, the computation is done in minor diagonal order. In our implementation, distance values d(S i ,S j ) are computed without computation of the actual traceback using DP. Since all elements in the same minor diagonal of the DP matrix can be computed independent of each other in parallel, the computation is done in minor diagonal order. Given are sequences S i and S j of lengths l 1 and l 2 , respectively and vector registers vH, vE, vF, vN A , vN E and vN F containing the values H A , E, F, N A , N E and N F , respectively. For each iteration c 1 ≤ c ≤ l 1 +l 2 −1 , the values of H A (i,j), E(i,j), F(i,j), N A (i,j), N E (i,j) and N F (i,j) are computed for all 1 ≤ i ≤ l 1 and 1 ≤ i ≤ l 2. Vector masks are computed during the calculations of the vE, vF and vH vectors, which are then used to determine the value of the corresponding vN E , vN F and vN A vectors, respectively. The nid score is extracted as N A (i max , j max ), where (i max , j max ) denotes the coordinates of the maximum value in the corresponding matrix H A. The algorithm used in our implementations is described in more detail in Wirawan et al. (2009). To speed-up the computation, a query profile is pre-computed. The query profile is indexed by the query sequence position and the database sequence symbol and is stored in a column-based manner. Therefore, random accesses to the substitution matrix due to table look up are replaced with sequential ones to the query. For the Cell/BE implementation, the query</note>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Table 1. Comparison of run-times (in seconds) of our Cell/BE</note>
		</body>
		<back>
			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">A component-based implementation of multiple sequence alignment</title>
		<author>
			<persName>
				<forename type="first">U</forename>
				<surname>Catalyurek</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2003 ACM Symposium on Applied Computing</title>
		<meeting>the 2003 ACM Symposium on Applied Computing<address><addrLine>NY, New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="122" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">MT-ClustalW: multithreading multiple sequence alignment</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Chaichoompu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the 20th International Parallel and Distributed Processing Symposium, IPDPS 2006</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">MUSCLE: multiple sequence alignment with high accuracy and high throughput</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">C</forename>
				<surname>Edgar</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="1792" to="1797" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Software Development Kit 2.1 Accelerated Library Framework Programmer&apos;s Guide and API Reference</title>
	</analytic>
	<monogr>
		<title level="j">IBM</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
	<note>Version. 1.1. IBM developerWorks</note>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">ClustalW-MPI: ClustalW analysis using distributed and parallel computing</title>
		<author>
			<persName>
				<forename type="first">K.-B</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="1585" to="1586" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">A tool for multiple sequence alignment</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">J</forename>
				<surname>Lipman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Natl Acad. Sci. USA</title>
		<meeting>. Natl Acad. Sci. USA</meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="4412" to="4415" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Streaming algorithms for biological sequence alignment on GPUs</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Liu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distributed Syst</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1270" to="1281" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">MSA-CUDA: multiple sequence alignment on graphics processing units with CUDA</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Liu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of the 20th IEEE International Conference on Application-specific Systems, Architectures and Processors</title>
		<meeting>eeding of the 20th IEEE International Conference on Application-specific Systems, Architectures and essors<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="121" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">T-coffee: a novel method for fast and accurate multiple sequence alignment</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Notredame</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">302</biblScope>
			<biblScope unit="page" from="205" to="217" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Multiple sequence alignment on an FPGA</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Oliver</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">11th International Conference on Parallel and Distributed Systems</title>
		<meeting><address><addrLine>Fukuoka, Japan</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="326" to="330" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">PRALINE: a multiple sequence alignment toolbox that integrates homology-extended and secondary structure information</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">A</forename>
				<surname>Simossis</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Heringa</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="289" to="294" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">SWPS3-fast multi-threaded vectorized Smith-Waterman for IBM Cell/B.E. and x86/SSE2</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Szalkowski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Res. Notes</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">107</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">D</forename>
				<surname>Thompson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="4673" to="4680" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">CBESW: sequence alignment on the playstation 3</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Wirawan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">377</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Pairwise distance matrix computation for multiple sequence alignment on the cell broadband engine</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Wirawan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">5544</biblScope>
			<biblScope unit="page" from="954" to="963" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>