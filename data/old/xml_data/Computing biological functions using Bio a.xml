
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:58+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Systems biology Computing biological functions using Bio, a formal description of biological processes based on elementary bricks of actions</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010">2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Sabine</forename>
								<surname>Pérès</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">BioPsi_Manager</orgName>
								<orgName type="laboratory">UMR 3145</orgName>
								<orgName type="institution">Sysdiag CNRS Bio-Rad</orgName>
								<address>
									<addrLine>Cap delta/Parc euromédecine, 1682 rue de la Valsière CS 61003</addrLine>
									<postCode>34184, Cedex 4</postCode>
									<settlement>Montpellier</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Liza</forename>
								<surname>Felicori</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">BioPsi_Manager</orgName>
								<orgName type="laboratory">UMR 3145</orgName>
								<orgName type="institution">Sysdiag CNRS Bio-Rad</orgName>
								<address>
									<addrLine>Cap delta/Parc euromédecine, 1682 rue de la Valsière CS 61003</addrLine>
									<postCode>34184, Cedex 4</postCode>
									<settlement>Montpellier</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Stéphanie</forename>
								<surname>Rialle</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">BioPsi_Manager</orgName>
								<orgName type="laboratory">UMR 3145</orgName>
								<orgName type="institution">Sysdiag CNRS Bio-Rad</orgName>
								<address>
									<addrLine>Cap delta/Parc euromédecine, 1682 rue de la Valsière CS 61003</addrLine>
									<postCode>34184, Cedex 4</postCode>
									<settlement>Montpellier</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Elodie</forename>
								<surname>Jobard</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">BioPsi_Manager</orgName>
								<orgName type="laboratory">UMR 3145</orgName>
								<orgName type="institution">Sysdiag CNRS Bio-Rad</orgName>
								<address>
									<addrLine>Cap delta/Parc euromédecine, 1682 rue de la Valsière CS 61003</addrLine>
									<postCode>34184, Cedex 4</postCode>
									<settlement>Montpellier</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName>
								<forename type="first">Franck</forename>
								<surname>Molina</surname>
							</persName>
							<email>franck.molina@sysdiag.cnrs.fr</email>
							<affiliation key="aff0">
								<orgName type="department">BioPsi_Manager</orgName>
								<orgName type="laboratory">UMR 3145</orgName>
								<orgName type="institution">Sysdiag CNRS Bio-Rad</orgName>
								<address>
									<addrLine>Cap delta/Parc euromédecine, 1682 rue de la Valsière CS 61003</addrLine>
									<postCode>34184, Cedex 4</postCode>
									<settlement>Montpellier</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Systems biology Computing biological functions using Bio, a formal description of biological processes based on elementary bricks of actions</title>
					</analytic>
					<monogr>
						<title level="j" type="main">BIOINFORMATICS ORIGINAL PAPER</title>
						<imprint>
							<biblScope unit="volume">26</biblScope>
							<biblScope unit="issue">12</biblScope>
							<biblScope unit="page" from="1542" to="1547"/>
							<date type="published" when="2010">2010</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btq169</idno>
					<note type="submission">Received on December 7, 2009; revised on March 12, 2010; accepted on April 13, 2010</note>
					<note>[14:41 14/5/2010 Bioinformatics-btq169.tex] Page: 1542 1542–1547 Associate Editor: Trey Ideker Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: In the available databases, biological processes are described from molecular and cellular points of view, but these descriptions are represented with text annotations that make it difficult to handle them for computation. Consequently, there is an obvious need for formal descriptions of biological processes. Results: We present a formalism that uses the Bio concepts to model biological processes from molecular details to networks. This computational approach, based on elementary bricks of actions, allows us to calculate on biological functions (e.g. process comparison, mapping structure–function relationships, etc.). We illustrate its application with two examples: the functional comparison of proteases and the functional description of the glycolysis network. This computational approach is compatible with detailed biological knowledge and can be applied to different kinds of systems of simulation.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The identification of the biological functions of all genes and gene products and the understanding of how they interact to yield a living cell is still a challenge for post-genomic biology despite the fact that a huge amount of detailed information on molecular functions has been accumulated by biologists. Indeed, such detailed functional knowledge is poorly accessible for biocomputing since it is not (or rarely) formalized and it is often partial. On the other hand, the biological systems' modelling community has developed robust formalisms, in which molecular processes can be implemented in a very simplified way. The notion of biological function of a given molecule is very complex because it can vary depending on the environment. In addition, different meanings can be given to this concept based on the level of abstraction chosen by the user (molecular, cellular, etc.). Consequently, the functions of gene products have been described in many different ways over the years (<ref type="bibr" target="#b3">Finn et al., 2008;</ref><ref type="bibr" target="#b6">Karp, 2000;</ref><ref type="bibr" target="#b17">Rison et al., 2000</ref>). * To whom correspondence should be addressed.</p><p>There is, however, a need to establish and use a common reference for functional annotations. Current databases describe processes from a molecular and cellular point of view but they use text annotations, which make it difficult to handle them. Thus, to calculate with functional annotations, one would require a formal description of such biological processes. In this context, we use the term 'to calculate' to describe the action of computing with biological processes as we do with sequences (i.e. to do process comparisons, evolution, additions, etc. or to simulate dynamic combinations of processes in different environments). Such a task is obviously difficult and existing classifications and ontologies are not sufficient to provide a description compatible with comparison, modelling and simulation of sophisticated processes. This is due to the fact that the available classifications have intrinsic limitations because they do not take into account the environment, elements of action shared between two functions, etc. For example, Gene Ontology (GO;<ref type="bibr" target="#b5">Harris et al., 2004</ref>) is becoming the standard in the field of classification of terms associated with biological processes. Although very useful, the description of biological processes in GO is limited to tagging molecules with standardized terms that are hierarchically classified. Likewise, the hierarchic enzyme commission (EC) nomenclature system (EC number) is used to classify enzyme reactions. It defines and categorizes catalysed reactions (<ref type="bibr" target="#b0">Bairoch, 1993</ref>), but often the relation between EC number and enzyme is ambiguous. Indeed, a given enzymatic complex can sometimes be characterized not by a global EC number but by several EC numbers, because it contains several active sub-units that participate in different activities (e.g. the pyruvate dehydrogenase complex), as each of them catalyses a different reaction. Alternatively, the association of different polypeptides may be required to catalyse a given reaction and they will be all catalogued under a single EC number (i.e. citrate synthase). Moreover, a mono-domain enzyme has only one EC number, whereas it can have different actions in different contexts. Thus, there are different EC numbers for enzymes that have similar actions and the EC number cannot always represent properly the entire spectrum of enzymatic processes. It is worth noting that biological processes are many and heterogeneous and most of them can be decomposed into combinations of more simple processes, in which a process can be performed by part of a protein (domain), a single protein or a network. Thus, biological processes have to be described at different levels of abstraction. Moreover, the same process can be performed by different proteins depending on the context. As a consequence, it would be an advantage to describe processes in a generic form. For this, it is necessary to take into account the<ref type="bibr">[</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Computing biological functions using Bio</head><p>multi-functionality of a molecule, the context dependencies and the functional modularity. Thus, to describe biological processes in a relevant way there are some key requirements: @BULLET Object and process separation: molecular objects and processes must be described separately. @BULLET Modularity: the BioObject structure performing the processes should be described at different levels when possible.</p><p>@BULLET Multi-functionality: molecular objects can perform various functions.</p><p>@BULLET Context-dependency: any function depends on the context that constrains the biological processes.</p><p>@BULLET Elementariness: biological processes can be described by elementary actions.</p><p>@BULLET Genericity: the diversity of biological processes can be described as a limited set of generic process descriptions.</p><p>In the past, some attempts at describing biological processes provided a new viewpoint on process description but they did not fully integrate the associated constraints. For example, aMAZE (van<ref type="bibr" target="#b20">Helden et al., 2000</ref><ref type="bibr" target="#b21">Helden et al., , 2001</ref>) is a database for the representation of information on networks of cellular processes such as genetic regulation, biochemical pathways and signal transduction. It incorporates taxonomies for categorizing molecular entities and interactions at molecular, cellular and multi-cellular levels. It also makes a clear distinction between molecular entities and activities. Unfortunately, it does not decompose molecules into functional domains when relevant, despite the fact that protein domains now are considered as folding and functional units within proteins (<ref type="bibr" target="#b13">Moore et al., 2008</ref>). Various computer science approaches have been adapted for the representation of biological systems [e.g. graph theory (<ref type="bibr" target="#b14">Ravazs et al., 2002</ref>), convex analysis (<ref type="bibr" target="#b18">Schuster et al., 1999</ref>), Boolean models (<ref type="bibr" target="#b1">Bernot et al., 2004</ref>), Petri nets (<ref type="bibr" target="#b9">Matsuno et al., 2000</ref>) and abstract machines (<ref type="bibr" target="#b2">Calzone et al., 2006</ref>)] but they do not fully integrate dynamics as well as molecular and biochemical details. Moreover, they always consider biomolecules and their functions as simplified interacting 'black balls' with automatic behaviours. These views are clearly not satisfactory for biologists given the level of detailed knowledge they can have on the functions of molecules. For example, BioCham (<ref type="bibr" target="#b2">Calzone et al., 2006</ref>) is a rule-based language for the representation of biomolecular systems, with a notation reminiscent of that of chemistry but the representation is a simplification of the biological knowledge. The-calculus (<ref type="bibr" target="#b12">Milner, 1993</ref>), which is a formal computer language for describing concurrent computations, takes into account the subdomain processes of proteins (<ref type="bibr" target="#b15">Regev and Shapiro, 2002;</ref><ref type="bibr" target="#b16">Regev et al., 2001</ref>). The-calculus modelling can formally represent detailed molecular and biomolecular information and allows their study with various simulations. A biological structure is represented by its potential behaviour: it manipulates molecules and protein domains as computational processes. This formalism is close to our expectation, but it does not separate the process from the object and the language is not convenient to integrate biological annotations. In most cases, either the processes are not generic (thus they need a huge variety of functional descriptions) or the biological knowledge is limited to the biological reactions, which are simplifications of the current detailed biological knowledge. In conclusion, biologists need a description scheme for the biological process that allows detailed and formalized annotations at different levels of abstraction compatible with the structural organization of the functional units (domains) of proteins. We propose a computational approach that makes use of the Bio concepts (<ref type="bibr" target="#b10">Mazière et al., 2004</ref><ref type="bibr" target="#b11">Mazière et al., , 2007</ref>) allows the description of biological processes at four levels of abstraction from sub-molecular details to network modules. In addition, this approach is based on the principle of elementary bricks of actions and takes into account the biological context. Bio allows dissociating a biological entity, the actions that it performs and the context-dependency of such processes. Thus, biological processes can be defined in a generic form and are expressed in terms of a combination of a small set of elementary bricks of actions found in Nature. Herein, we propose a biological abstraction and a syntax based on Bio to provide the modelling community with a new powerful formalism that integrates biological complexity. This abstraction allows new computations with biological processes (comparison, prediction, etc.).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>Each molecule is considered as a biological object that can perform biological processes. Several essential aspects of biomolecular systems are identified that lead to a compositional model. Biomolecular systems are composed of a population of molecules that contains different molecular species with multiple copies of each type. Two types of molecules are distinguished: macromolecules [proteins, nucleic acids (NAs), etc.] and small molecules (metabolites, ions, etc.). Small molecules are treated as elementary objects, whereas macromolecules may be composed of several (functional) domains that may have one or more known interaction sites (<ref type="figure" target="#fig_0">Fig. 1</ref>). We define four levels of structural description: @BULLET A motif that constitutes an interaction site which can interact with another site or small molecule. @BULLET A domain that contains a set of motifs.</p><p>@BULLET A molecular entity that contains a set of domains or a set of sub-units. @BULLET A biochemical system that contains a set of molecular entities. Molecular entities can be organized in modules.<ref type="bibr" target="#b4">Funahashi et al., 2008</ref>). As an example, enolase is an enzyme composed of two domains (c</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S.Pérès et al.</head><p>In<ref type="figure" target="#fig_0">Figure 1</ref>, the biochemical system is the glycolysis pathway. It contains a set of molecular entities, one of which is the enzyme enolase. Enolase contains two domains; the first one, enolase_D1, is characterized by the SCOP fold c.1.11 and the second domain, enolase_D2, by the d.54.1 fold. Enolase_D1 contains the substrate binding site (in red) and the active site (in blue). A molecular entity made of two sub-units can be written in the same way. For example, the enzyme citrate synthase (EC 2.3.3.1) contains twice the same sub-unit that has a SCOP characteristic fold a.103.1 and the substrate binding and active sites are in the first sub-unit. Similarly, most of the known biological processes can be decomposed into combinations of elementary processes and Bio has identified 97 basic element of actions (<ref type="bibr">BEAs;</ref><ref type="bibr" target="#b10">Mazière et al., 2004</ref><ref type="bibr" target="#b11">Mazière et al., , 2007</ref>) at biochemical level for all species. Bio formalism allows: (i) the modelling of biological networks at different levels by taking into account the biological context based on elementary bricks of action; and (ii) the description of multi-level biological processes from sub-molecular details to networks. Thus, processes can be described at four levels that correspond to the structural views of molecules:</p><p>@BULLET BEAs refer to elementary actions at a chemical level that are involved in biological processes.It is important to note that BEAs representation is not a chemical reaction equation, but a way to specify a type of elementary molecular modification. BEAs do not have any chemical reality on their own but identify elements of transformation from input to output molecules. They fall in four classes: bond modifications, transfers, chemical reorganizations and non-covalent actions. The complete list of the four BEA classes and the table of correspondence between EC number and BEA are at: http://www.sysdiag.cnrs.fr/publications/supplementarymaterials/BioPsi_Manager/</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SYNTAX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">BioObjects</head><p>Bio manipulates formal objects that represent biochemical objects ranging from motifs, domains, molecular entities to modules of macromolecules. We define all these biological objects with the term of 'BioObjects'. In a formal way, biological processes at any level are represented by functions whose parameters are biochemical objects. Thus, the syntax of BioObjects can be expressed using the following grammar:</p><p>BioObjects = Smallmolecule | Macromolecule Smallmolecule = Sugar | Lipid | Ion | AA | NA | Metabolite Macromolecule = Protein | Complex | DNA | RNA A BioObject can be either a small molecule or a macromolecule. Small molecules are considered as the simplest units among BioObjects because they cannot be decomposed into smaller ones; they can only be written with their atomic formulae composed of chemical atoms. They can be sugars, lipids, ions, amino acids (AAs), NA or metabolites. Macromolecules are the results of the combinations of small molecules as shown in<ref type="figure" target="#fig_0">Figure 1</ref>; they can be proteins, protein complexes, DNA or RNA molecules. The decomposition of a macromolecule can be written as follows:</p><formula>Motif = list_of_AA</formula><p>Domain = { seq:<ref type="bibr">[int-int]</ref>; fold:string; ml:list_of_Motif } Protein = { an:string; dl:list_of_Domain } Complex = { pl:list_of_Protein } A motif is a list of AA; it is worth noting that this list can be empty if the site is unknown. A domain needs three fields to be defined: a fold represented by the SCOP number, the sequence represented by the UniProt number and the list of sites that can be empty if no interaction site is known. A molecular entity (protein) is formed by a domain or several domains, which are all part of the protein sequence. A molecular entity may be composed of several domains coming from separated polypeptidic chains. In such a case, it is treated as a multi-domain protein. A complex is formed by several associated proteins (which can be composed of several domains).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">BioProcesses</head><p>A BioProcess can be a process at the chemical level (BEA), at sub-molecular level (BA), at molecular level (BF) or at cellular level (BR). The BioProcess syntax can be done with the following grammar:BioProcesses are defined in a generic form and are inductively expressed in terms of processes at the lower scale separated by logical operators. BioProcesses from BA to BR have a list of possible substrates. They may occur sequentially or concurrently. We abstract a sequence of processes with an operator ',' (comma sign), a conjunction with 'AND' and a disjunction with 'OR'. All the processes can be reversible (annotated by '−1') and they can be conditionally noted by the instruction 'if (condition) do' in which the condition is a Boolean value. The kinetic parameters can be associated with BF or BA depending on the knowledge (see example in Supplementary Section 3). A reactant can be a biological compound (BC) or several BCs separated by the operator '+'. The modifications of reactants is noted with '→'. A BC can be an atom, a variable or several BC connected with different kinds of bonds. Bonds can be simple '–', double '=', triple '#' or non-covalent '/'. For example, a bond modification with its reversible form can be written as follows: Bea.CC.1(R) = R–COOH → R–H + CO Bea.CC.1(R) −1 = R–H + CO → R–COOH R is a variable whereas C, O and H are chemical atoms. The first BEA describes the modification by which a CC bond becomes a CH bond with CO release; the second defines the inverse reaction. Supplementary Section 1 shows how to recast the phosphotransferase system process knowledge into its formal description.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Computing biological functions using Bio</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Constraints and kinetics</head><p>The biological context of a given process can be transposed in a set of different constraints modulating its realization. These constraints mainly start to be applicable from the level of BA to BRs. The BEA level cannot integrate biological context since it is only relying on elementary pieces of function (more conceptual than real). Two kinds of constraints can be distinguished: constraints that condition the realization of processes and constraints that modulate the parameters of a process itself. The conditional constraints express eventual dependencies to specific localization or sequential process occurrence described using classical set of operators. The second type of constraints specifies the kinetic parameters associated with a given process. This can be implemented by the addition of available kinetic values to the set of parameters related to a molecular processes (from BA to BF;<ref type="bibr" target="#b10">Mazière et al., 2004</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">COMPARISON WITH CURRENT EXISTING FORMALISMS AND ANNOTATION STANDARDS</head><p>Compared to Bio, GO and EC are only partially covering the four levels of abstraction ranging from biochemistry of reactions to the cellular level (see Supplementary<ref type="figure" target="#tab_2">Table 2</ref>). Enzyme classification are biochemical reaction oriented but does not use any level of abstraction. Moreover, when analysed, it covers without distinction the two first levels of abstraction of interest. On the opposite, GO uses the functional point of view and two levels of abstraction. On one hand, GO 'Biological processes relate to Bio' BRs, but on the other hand 'molecular function' fuses two levels of abstraction: BFs and BAs. Nothing is said about the biochemistry of the reaction. So, Bio is the unique annotation scheme providing domain level functional annotation close to the biologist point of view. As an example, Pfam in its last release (<ref type="bibr" target="#b3">Finn et al., 2008</ref>) intends to improve its synopsis of function annotation of protein domains. The authors raised the lack of standard format compatible to functional annotation at the domain level. Consequently, they remain using textual annotation. Compared with current formalisms used to represent biological systems, Biocham and-calculus are the closer standard in terms of conceptual approaches. In<ref type="figure" target="#tab_1">Table 1</ref>, we compare Bio to these two formalisms. Only Bio and-calculus allow multi-level description of processes and generic enzymatic description. All the formalism are manipulating kinetics parameters. Since more ancient, Biocham and-calculus do benefit of existing tool to run processes. In the case of Bio, such tool is under development using the agent-based machine. On the opposite, Bio is the only one formalism to provide an elementary action-based description. Moreover, since the elementary action description came from a deep biological function analysis, the Bio process descriptions are closer to the biologist understanding and culture than Biocham and-calculus. If compared with current functional annotation standards used by the biologist community (GO, EC), Bio is better covering the sub-molecular description of processes found in nature (see Supplementary<ref type="figure" target="#tab_2">Table 2</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">APPLICATION OF THE BIO PRINCIPLES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Formal integration of processes</head><p>Formalization of biological processes eases their use for further calculations. All the elementary actions that form a BioProcess can be determined with the Bio formalism. In turn, all BioProcesses</p><formula>= BEA, 1 = BA, 2 = BF and 3 = BR, for all processes p ∈ i with i ∈{1,2,3} and (q j ) 1≤j≤n ∈ n i−1 , we have f : n i−1 → i such that f (q 1 ,...q n ) = p.</formula><p>The sequence of all BEAs of a process p is noted with the operator of restriction ' | ' and is defined as</p><formula>P |BEA ={(b i ) 1≤i≤n ∈ BEA such that f (b i ) = P} with f : BEA n → .</formula><p>For instance, using this expression, one can aggregate all the BEAs of a BF performed by a protein that is composed by two functional domains, each doing a different BA, as follows:</p><formula>P ∈ BF, it exists Q 1 ,Q 2 ∈ BA and f : BA ×BA → BF such that P = f (Q 1 ,Q 2 ). So, P |BEA = Q 1|BEA ∪Q 2|BEA = (b i ) 1≤i≤k ∪(b i ) k+1≤i≤n = (b i ) 1≤i≤n .</formula><p>If the same BF is performed by a molecular entity made of only one functional domain, one can aggregate all the BEAs in the same way</p><formula>P |BEA = Q |BEA = (b i ) 1≤i≤n</formula><p>Consequently, our formalism enables us to compare at molecular level the BEA composition of BF processes. This obviously can be extended to all levels of abstraction covered by Bio.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Comparison of biological processes: serine proteases</head><p>Thanks to the Bio principles biological processes can be compared in many different ways and at different levels of abstraction. Although it is affordable, it is very much dependent on the quality of the available functional knowledge concerning the studied molecular entities. Unfortunately, large-scale process comparison at all levels would need full process annotation at all these levels. However, process comparison at a given level can be performed. For instance, one can search for similarities between the process compositions of elementary actions. Two processes with a comparable composition in elementary actions will be noted = BEA if they have the same sequence of BEAs</p><formula>p 1 = BEA p 2 ⇔ p 1 | BEA = p 2 | BEA</formula><p>Page: 1546 1542–1547</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S.Pérès et al.</head><p>As an example, we will show how the BioProcesses of different serine proteases can be compared using Bio. Serine proteases are enzymes that cut specific peptide bonds in other proteins. This activity depends on a set of AA residues at the active site, one of that is always a serine. Serine proteases can be classified in different families. We consider here the trypsin-like serine proteases and the subtilisin-like serine proteases. Although their structural folds are different, their catalytic mechanisms are similar (<ref type="bibr" target="#b19">Singer and Berg, 1997</ref>). The main player in the catalytic mechanism is a catalytic triad (His–Asp–Ser) and an oxyanion hole preserved in most serine proteases. These three key AAs play an essential role in the cleaving ability of serine proteases and their active site is shaped as a cleft to which the polypeptide substrate binds. Chymotrypsin and trypsin are serine proteases of the trypsin-like family found in the digestive system of many vertebrates. They have very strong structural similarity and use the same cleavage mechanism; but each has its own selectivity as they cleave (<ref type="bibr" target="#b7">Kassera and Laidler, 1969</ref>) different peptide bonds during protein digestion. Trypsin (EC 3.4.21.4) interacts with positively charged residues such as arginine (R) and lysine (K) on the substrate peptide to be cleaved. Chymotrypsin (EC 3.4.21.1) cleaves peptides at the carboxyl side of tyrosine (Y), tryptophan (W) and phenylalanine (F). Subtilisin (EC 3.4.21.62) is a serine protease of the subtilisin-like family secreted by the bacterium Bacillus subtilis. It hydrolyses proteins with a preference for a large uncharged residue in P1. It initiates the nucleophilic attack on the peptide (amide) bond through the serine residue at the active site. This information can be noted as follows:Trypsin/chymotrypsin and subtilisin use the same catalytic triad mechanism at their active site despite having different structures (<ref type="bibr" target="#b8">Martin et al., 1998</ref>). This is the classic example used to illustrate convergent evolution, since the same mechanism evolved twice independently during evolution: two molecules acquired the same function (analogous) despite having evolved from different genes. The folds c.41.1 and b.47.1 have a common biological activity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Integration of biological complexity: glycolysis</head><p>Most of the proteins, which exhibit significant structural similarity in terms of folding, are homologous and perform similar or identical BA. Proteins and enzymes are involved in biological networks in which they carry out their potential activity depending on the context. If one describes for each enzyme of a network its BFs, BAs and BEAs composition, then it is possible to compare protein networks based on their BEAs composition (<ref type="bibr" target="#b11">Mazière et al., 2007</ref>). For instance, the glycolysis pathway, which is composed of 13 enzymes, can be expressed in such a way (see Supplementary Materials). In this way, biological processes that participate in a given biological network can be expressed in a more formal way compared to the classical textual description found in the current databases (Swissprot, Pfam, etc.). Unfortunately, knowledge on the parameters of biological processes is not always complete or available. Nevertheless, Bio multi-level description allows to cope also with incomplete knowledge since it is possible to aggregate information at a hierarchical lower level to the next upper level. This feature can be used when details about an intermediate level are missing. For example, since the activity of each subunit of the homotetramer phosphofructokinase is not known (see Supplementary Materials), the global activity is annotated for the whole enzyme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DISCUSSION</head><p>To compute with biological functions, we need a formalism that on one hand, can integrate part of the complexity of the existing knowledge, and on the other hand, can allow us to make calculations with biological processes. The biological knowledge on functions is wide and very heterogeneous but very little is available in databases about such biological processes despite the fact that a considerable wealth of annotations exist on the biological objects (proteins, NAs, small molecules, etc.) that support such processes. In others words, we know more about the players of a process than about the process itself. In addition descriptions of functions and BioObjects are often confusing. Bio clearly separates process description and BioObject description and focuses on the different levels, going from the chemical, sub-molecular and molecular entities to the network level. All other existing function annotations do not or only partially address this view. Bio is based on the integration of all these levels and it could extend to additional levels if required. We described BEA at the chemical level, which can be considered as the elementary bricks that compose all functions in Nature. BEAs fall into four classes and their relationships with EC are available at BioDB (http://www.sysdiag.cnrs.fr/publications/ supplementary-materials/BioPsi_Manager/). Obviously, the description of elementary actions provides a generic view of a biological process. It can be used as an element of comparison. To integrate available knowledge on functions, we can complement the description of a biological process with parameters such as substrate specificity, kinetics, conditionality of the process execution based on contextual information (pH, temperature, etc.). These parameters can be global (i.e. temperature) or local to a given Page: 1547 1542–1547</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Computing biological functions using Bio</head><p>level (kinetics, substrate specificity, etc.). The Bio paradigm to describe such biological processes is expressed herein in a formal way in order to allow further calculations. This formalism tolerates missing annotations at intermediate levels as, in this case, it can aggregate lower level information into the first upper level where information is available. It is worth noting that the ability of Bio to provide generic descriptions (the composition of elementary actions in a given sequence) reduces drastically the combinatorial aspect observed in classical descriptions of functions. This is a great advantage especially if large-scale functional annotations are envisaged. For instance all kinase processes, which are currently described in very heterogeneous ways and have different EC numbers, are based on the same (or similar) sequences of BEAs. Only the specific parameters at the various levels will be different. The Bio approach provides a new tool for systematic mapping of structure–function relationships. Most of the proteins with the same topology are homologous and have similar functions. A fold f is in relation with a BEA b, if there is a BioObject o such that o| fold = f and b ∈ o| BEA. This link allows a formal construction of a structure–function map to propose and test hypothesis on the possible functions of a given structure or of a possible folding in a given protein with a given function. In the future, a wide map of specific links at different levels of details between the BioObject structural elements and its elementary actions might open the way for new methods of structure–function predictions. Moreover, Bio formal description allows the comparison of systematic processes without going through the filter of AA (or NA) sequence comparison. Hence, one can expect less bias in the comparison since it will overcome the bias introduced by domain shuffling in sequences. We also would like to stress that the notion of elementary action is very much coherent with the genetic mechanisms of evolution in Nature. Since the sequences of macromolecules are made of reused blocks that have been shuffled, mutated, truncated, etc. during evolution, then it is not surprising to observe limited sets of typical blocks (i.e. folds) in their 3D structures. Similarly, one could expect that these sequence-structure blocks could support limited sets of elementary actions. Thus, diversity in Nature is mainly the result of the combinatorial use of limited blocks rather than the outcome of the diversity of the composing blocks. Other uses of Bio are under development in the context of modelling of complex systems. Here, Bio descriptions are used as hubs for biological detailed knowledge, modelling and simulation tools. For instance, we can extract sets of data from Bio descriptions and rewrite them in the various formats used in modelling (system biology markup language, elementary flux modes, ordinary differential equation etc.). Bio carries strong advantages to run agent-based simulations. Multi-level will allow various angles of view of simulation with a unique model description. Elementariness may prevent from combinatorial explosion in function description. Finally, sub-molecular function description open the doors for further non-deterministic simulation, where neoformed pieces of molecules can carry their own new function. A new tool is currently under development in this field.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Multi-scale description of the glycolysis pathway represented with Celldesigner (Funahashi et al., 2008). As an example, enolase is an enzyme composed of two domains (c.1.11 and d.54.1) and the domain c.1.11 contains the substrate binding site (residues 155, 164, 287, 314, 339 and 390 in red) and the active site (residues 205 and 339 in blue).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>@BULLET</head><figDesc>Biological activities (BAs) represent the use of a combination of BEAs by functional domains to exert their activity at a sub-molecular level. @BULLET Biological functionalities (BFs) represent the integration of the BAs of molecular entities. @BULLET Biological roles (BRs) represent the combination of the BFs of different molecular entities within functional modules in the cell.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>[14:41 14/5/2010 Bioinformatics-btq169.tex] Page: 1545 1542–1547</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 1. Comparison of main representations of biological systems</figDesc><table>Bio 
Biocham 
-calculus 

Multi-level 
+ 
− 
+ 
Generic enzymatic 
+ 
− 
+ 
description 
Kinetic parameters 
+ 
+ 
+ 
Runnable with 
under 
+ 
+ 
existing tools 
development 
Elementariness 
+ 
− 
− 

Proximity with biology 
+ 
+ 
− 

can be decomposed into lower scale processes composed of BEAs. 
Let = BEA ∪BA ∪BF∪BR be the set of all BioProcesses. If we 
note 0 </table></figure>

			<note place="foot">at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="1544"> at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">BF Trypsin = BA serprot ([RK]-x, H 2 O, Ser 195 , His 57 , Asp 102 ) BF ChymoTrypsin = BA serprot ([YWF]-x, H 2 O, Ser 195 , His 57 , Asp 102 ) BF Subtilisin = BA serprot ([YWTCSNQFMLIVGAP]-x, H 2 O, Ser 221 , His 64 , Asp 32 ) BA serprot (s 1 ,s 2 ,aa 1 ,aa 2 ,aa 3 ) = Ba.CO.1 −1 (aa 1 ,s 1 ), Ba.lab.2 −1 (aa 2 ) and Ba.CN.2(s 1 ), Ba.lab.1(aa 3 ) and Ba.lab.1(s 2 ) and Ba.CO.1 −1 (s 2 ), Ba.CO.1(aa 1 ) with Ba:CO.1: C–O–R → C 0 + R–O 0 Ba:CN.2: C–N(R )–R → R –N 0 –R + C 0 Ba:lab.1: H–OH → H 0 + HO 0 Ba:lab.2: R–H → R 0 + H 0</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">The ENZYME data bank</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Bairoch</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="3155" to="3156" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Application of formal methods to biological regulatory networks: extending Thomas&apos; asynchronous logical approach with temporal logic</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Bernot</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theor. Biol</title>
		<imprint>
			<biblScope unit="volume">229</biblScope>
			<biblScope unit="page" from="339" to="347" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">BIOCHAM: an environment for modeling biological systems and formalizing experimental knowledge</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Calzone</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1805" to="1807" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">The Pfam protein families database</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Finn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="281" to="288" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">CellDesigner 3.5: a versatile modeling tool for biochemical networks</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Funahashi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<meeting>. IEEE</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1254" to="1265" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">The Gene Ontology (GO) database and informatics resource</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Harris</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="258" to="261" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">An ontology for biological function based on molecular interactions</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Karp</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="269" to="285" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Mechanisms of action of trypsin and chymotrypsin</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Kassera</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Laidler</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Can. J. Chem</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page">4031</biblScope>
			<date type="published" when="1969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Protein folds and functions</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Martin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Structure</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="875" to="884" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Hybrid petri net representation of gene regulatory network</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Matsuno</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pac. Symp. Biocomput</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="341" to="352" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">A biological processes description scheme based on elementary bricks of action</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Mazière</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">339</biblScope>
			<biblScope unit="page" from="77" to="88" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Formal description of TCA cycle based on elementary bricks of action</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Mazière</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Biosci</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="145" to="155" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<monogr>
		<title level="m" type="main">The polyadic π-calculus: a tutorial Logic and Algebra of Specification</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Milner</surname>
			</persName>
		</author>
		<editor>Bauer,F.L. et al.</editor>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="203" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Arrangements in the modular evolution of proteins</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Moore</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trends Biochem. Sci</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="444" to="451" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Hierarchical organization of modularity in metabolic networks</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Ravazs</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">297</biblScope>
			<biblScope unit="page" from="1551" to="1555" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">Cellular abstractions: cells as computation</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Regev</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Shapiro</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="page" from="419" to="343" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Representation and simulation of biochemical processes using the pi-calculus process algebra</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Regev</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Pacific Symposium of Biocomputing</title>
		<meeting>the Pacific Symposium of Biocomputing<address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>World Scientific Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="459" to="470" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Comparison of functional annotation schemes for genomes</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Rison</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Funct. Integr. Genomics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="56" to="69" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">Detection of elementary modes in biochemical networks : a promising tool for pathway analysis and metabolic engineering</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Schuster</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trends Biotechnol</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="53" to="60" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<monogr>
		<title level="m" type="main">Exploring genetic mechanisms</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Singer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Berg</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<pubPlace>USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Representing and analysing molecular and cellular function using the computer</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Van Helden</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biol. Chem</title>
		<imprint>
			<biblScope unit="volume">381</biblScope>
			<biblScope unit="page" from="921" to="935" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">From molecular activities and processes to biological function</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Van Helden</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Brief. Bioinform</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="81" to="93" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>