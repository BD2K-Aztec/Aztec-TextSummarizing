
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:35+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Structural bioinformatics Deep architectures for protein contact map prediction</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012">19 2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Pietro</forename>
								<forename type="middle">Di</forename>
								<surname>Lena</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>92697</postCode>
									<settlement>Irvine</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Institute for Genomics and Bioinformatics</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>92697</postCode>
									<settlement>Irvine</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Ken</forename>
								<surname>Nagata</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>92697</postCode>
									<settlement>Irvine</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Institute for Genomics and Bioinformatics</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>92697</postCode>
									<settlement>Irvine</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Pierre</forename>
								<surname>Baldi</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>92697</postCode>
									<settlement>Irvine</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Institute for Genomics and Bioinformatics</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>92697</postCode>
									<settlement>Irvine</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Structural bioinformatics Deep architectures for protein contact map prediction</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">28</biblScope>
							<biblScope unit="page" from="2449" to="2457"/>
							<date type="published" when="2012">19 2012</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts475</idno>
					<note type="submission">Received on May 25, 2012; revised on July 5, 2012; accepted on July 22, 2012</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Burkhard Rost Contact: pfbaldi@uci.edu Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Residue–residue contact prediction is important for protein structure prediction and other applications. However, the accuracy of current contact predictors often barely exceeds 20% on long-range contacts, falling short of the level required for ab initio structure prediction. Results: Here, we develop a novel machine learning approach for contact map prediction using three steps of increasing resolution. First, we use 2D recursive neural networks to predict coarse contacts and orientations between secondary structure elements. Second, we use an energy-based method to align secondary structure elements and predict contact probabilities between residues in contacting alpha-helices or strands. Third, we use a deep neural network architecture to organize and progressively refine the prediction of contacts, integrating information over both space and time. We train the architecture on a large set of non-redundant proteins and test it on a large set of non-homologous domains, as well as on the set of protein domains used for contact prediction in the two most recent CASP8 and CASP9 experiments. For long-range contacts, the accuracy of the new CMAPpro predictor is close to 30%, a significant increase over existing approaches. Availability: CMAPpro is available as part of the SCRATCH suite at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Protein residue–residue contact prediction is the problem of predicting whether any two residues in a protein sequence are spatially close to each other in the folded 3D structure. Contacts occurring between sequentially distant residues, i.e. long-range contacts, impose strong constraints on the 3D structure of a protein and are particularly important for structural analyses, understanding the folding process and predicting the 3D structure. Even a small set of correctly predicted long-range contacts can be useful for improving ab initio structure prediction for proteins without known templates (<ref type="bibr" target="#b28">Tress and Valencia, 2010</ref>). The performance of many contact predictors has been assessed every 2 years during the Critical Assessment of protein Structure Prediction (CASP) experiments since CASP2 in 1996. Unfortunately, the $20% accuracy for long-range contacts, routinely reported at CASP for the best predictors (<ref type="bibr" target="#b9">Ezkurdia et al., 2009;</ref><ref type="bibr" target="#b15">Kryshtafovych et al., 2011</ref>), suggests that contact prediction is not yet accurate enough to be systematically useful for ab initio protein structure prediction or engineering. In broad terms, there are four main approaches for residue– residue contact prediction. Machine learning approaches use methods such as neural networks (<ref type="bibr" target="#b10">Fariselli et al., 2001;</ref><ref type="bibr" target="#b24">Punta and Rost, 2005;</ref><ref type="bibr" target="#b25">Shackelford and Karplus, 2007</ref>), recursive neural networks (<ref type="bibr" target="#b2">Baldi and Pollastri, 2003;</ref><ref type="bibr" target="#b30">Vullo et al., 2006</ref>), support vector machines (<ref type="bibr" target="#b7">Cheng and Baldi, 2007</ref>) and hidden Markov models (<ref type="bibr" target="#b3">Bjo¨rkholmBjo¨rkholm et al., 2009</ref>) to learn how to predict contact probabilities from a training set of experimentally determined protein structures. Inputs to these approaches typically include predicted secondary structure, predicted solvent accessibility as well as evolutionary information in the form of profiles. Template-based approaches use homology or threading methods to identify structurally similar templates from which residue–residue contacts are then inferred (<ref type="bibr" target="#b16">Misura et al., 2006;</ref><ref type="bibr" target="#b26">Skolnick et al., 2004</ref>). Correlated mutations approaches apply statistical measures, such as Pearson correlation (<ref type="bibr" target="#b12">Go¨belGo¨bel et al., 1994;</ref><ref type="bibr" target="#b20">Olmea and Valencia, 1997</ref>) and mutual information (<ref type="bibr" target="#b4">Burger and van Nimwegen, 2010;</ref><ref type="bibr" target="#b8">Dunn et al., 2008</ref>), to multiple alignments in order to identify pairs of residues that co-evolve and thus are likely to be in contact. Recently, a new elegant mutual information-based measure for correlated mutations, PSICOV, has been proposed in<ref type="bibr">Jones et al. (2011)</ref>and used for fold recognition (<ref type="bibr">Taylor et al., 2011</ref>). Although this method has been reported to yield significant accuracy improvements, its performance is very dependent on the availability and quality of multiple alignments. Finally, 3D model-based approaches rely on predicted 3D structures for deriving distance constraints through a consensus strategy. Although 3D model-based approaches have been reported to be the most accurate at CASP (<ref type="bibr" target="#b15">Kryshtafovych et al., 2011</ref>), in practice, their applicability remain somewhat limited since the main goal of contact prediction is to improve ab initio structure prediction and not the converse. Here, we introduce several new ideas for contact prediction using primarily a multi-stage machine learning approach, with increasingly refined levels of resolution. First, we predict coarse contact maps corresponding to contacts between secondary structure elements. By itself, the idea of coarse contact maps is not new, and several useful methods have been developed (<ref type="bibr" target="#b2">Baldi and Pollastri, 2003;</ref><ref type="bibr" target="#b23">Pollastri et al., 2006;</ref><ref type="bibr" target="#b29">Vullo and Frasconi, 2003</ref>). Yet, none of these approaches has been able to convincingly demonstrate that coarse prediction is useful for residue– residue contact prediction. Here, we both refine the previous coarse prediction methods, in part, by extending the notion of *To whom correspondence should be addressed. coarse contact beyond a simple binary value to include information about orientation (parallel versus anti-parallel) between contacting segments and demonstrate that coarse-grained prediction can be used to improve fine-grained prediction of contact maps. Second, we use a novel energy-based neural network approach to refine the prediction of the alignment and orientation of contacting secondary structure elements and predict residue–residue contact probabilities for residues in contacting pairs of alphahelices or beta-strands. Finally, we introduce a deep neural network architecture in the form of a deep stack of neural networks, with the same topology but different parameters, to predict all the residue–residue contact probabilities by integrating information both spatially and temporally. Spatial integration refers to the idea that contacts are spatially correlated; for instance, long-range contacts often include other long-range contacts in their neighborhood. Temporal integration refers to the idea that protein folding is not an instantaneous physical process. Although the stack is not necessarily meant to mimic the actual physical process, the stack is used to organize the prediction in such a way that each level in the stack is meant to refine the prediction produced by the previous level. Inputs at a given level of the stack include both information coming from the previous level in the stack as well as static information produced by the previous coarse prediction stages, as well as predicted secondary structure and solvent accessibility, and evolutionary profiles. Thus, these dynamic and static inputs are used to iteratively refine the contact prediction. We next describe these methods in detail together with the data used for rigorous training and assessment results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">MATERIALS AND METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Contact definition and evaluation criteria</head><p>We adopted the same intra-molecular contact definition and the same evaluation criteria as in the most recent CASP experiments. Two residues are defined to be in contact if the Euclidean distance between their C atoms (C for glycines) is 58 A ˚. Three distinct classes of contacts are defined depending on the linear sequence separation between the residues:</p><p>(i) long-range contacts, with separation !24 residues; (ii) medium-range contacts, with separation between 12 and 23 residues and (iii) short-range contacts, with separation between 6 and 11 residues. Contacts between residues separated by 56 residues are dense and can be easily predicted from the secondary structure. Conversely, the sparse long-range contacts are the most informative and also the most difficult to predict. Thus, as in the CASP experiments, we focus primarily on long-range contact prediction. The performance is evaluated using two main measures: the accuracy (Acc) and the distance distribution (X d ). The accuracy is defined as the fraction of correctly predicted contacts with respect to the total number of contacts evaluated: Acc ¼ TP=ðTP þ FPÞ, where TP and FP are the true-positive and false-positive predicted contacts, respectively. The distance distribution score measures the weighted harmonic average difference between the predicted contacts distance distribution and the all-pairs distance distribution. The X d is defined by</p><formula>X d ¼ X 15 i¼1 ðPp i À Pa i Þ i ,</formula><p>where Pp i is the fraction of predicted pairs whose distance is in the bin d i ¼ ½4ði À 1Þ,4i and Pa i is the fraction of all pair of targets in the bin d i .</p><p>The higher X d is, the better the performance (a random predictor corresponds to X d ¼ 0). Contact predictors usually assign a probability score to every possible pair of residues or to a subset of the possible pairs. The Acc and X d measures are computed for the sets of L/5, L/10 and five top-scored predicted pairs, where L is the length of the domain sequence. Although predictions are evaluated on all three sets, the most widely used performance measure is Acc for L/5 pairs and sequence separation !24.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Training and test sets</head><p>The training set is derived from the ASTRAL database (<ref type="bibr" target="#b5">Chandonia et al., 2004</ref>). We extract from the ASTRAL release 1.73 the (pre-compiled) set of protein domains with 520% pairwise sequence identity, removing domains of length 550 residues, domains with multiple 3D structures, as well as non-contiguous domains (including those with missing backbone atoms). We further filter this list by selecting just one representative domain—the shortest one—per structural classification of proteins (SCOP) family (<ref type="bibr" target="#b18">Murzin et al., 1995</ref>) ending up with a final set of 2356 structures. For cross-validation purposes, this set is then partitioned into 10 disjoint groups of roughly the same size and average domain lengths so that no domains from two distinct groups belong to the same SCOP fold. In this way, training and validation sets share neither sequence nor structural similarities. For performance assessment, a non-redundant test set is derived from ASTRAL release 1.75, by selecting all the new folds, with respect to version 1.73, belonging to the main SCOP classes (all-alpha, all-beta, alpha/beta and alpha þ beta). From this set (256 new folds and 287 new families), we remove all the domains of length 550 residues and those with 5L/5 long-range contacts (239 new folds and 268 new families). Redundancy is filtered out by clustering each group of domains belonging to the same SCOP family at 40% of sequence similarity. The final set of 364 domains contains at least one representative for each one of the 268 new families. A BLAST (<ref type="bibr" target="#b0">Altschul et al., 1990</ref>) search with Evalue cutoff 0.01 of the test domain sequences against the set of training domain sequences returns no hit. For comparison with the current state-of-art contact predictors, the performance is tested on the template-based/free-modeling (TBM/FM) domain targets used in the last two CASP experiments, CASP8 (<ref type="bibr" target="#b9">Ezkurdia et al., 2009</ref>) and CASP9 (<ref type="bibr" target="#b17">Monastyrskyy et al., 2011</ref>) for contact prediction assessment. Note that ASTRAL 1.73 was released in 2007, before the CASP8 experiment held in 2008, thus no structural similarities exist between the domains in the training set and those from CASP8 (12 domains) and CASP9 (28 domains). An additional test is performed with BLAST to detect sequence similarities between the CASP and the training target sequences. A BLAST search with an E-value cutoff of 0.01 returns no similar domain pairs. The predictions for the groups participating at the CASP8 and CASP9 meetings are obtained from the CASP website http://predictioncenter.org/. As in CASP, performance is assessed here only at the domain level, although predictions are available for the entire protein targets. To simplify the comparison, we select only those groups that submitted a prediction for all the targets in the respective CASP8 and CASP9 sets. Furthermore, we considered all the domain targets for each group, regardless of the number of predicted contacts per domain. CASP assessors typically exclude from the analysis the results of a predictor on any domain where the number of predicted contacts is not high enough. This filtering step is not used here since it does not affect the performance of the top-scoring predictors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Coarse contact and orientation prediction (bidirectional recurrent neural network)</head><p>We use 2D bidirectional recurrent neural networks (2D-BRNNs;<ref type="bibr" target="#b2">Baldi and Pollastri, 2003</ref>) to predict coarse contact probabilities and orientations between secondary structure elements. Specifically, ignoring for robustness coils, short strands (!3 residues) and short helices (!6 residues), we predict the probability of whether two elements are in parallel contact, anti-parallel contact or no-contact. The distance between two secondary structure elements is defined to be the minimum Euclidean distance among all the possible pairs of C atoms, one from each element. A pair of elements is defined to be in contact if and only if their distance is 58 A ˚. The orientation angle of two elements is defined as the angle between their orientation vectors. The orientation vector is computed by joining the centers of gravity (C coordinates) of the first and second half of the element. Two elements are in parallel contact if their distance is 58 A ˚ and their orientation angle is 590 , anti-parallel contact if their distance is 58 A ˚ and their orientation angle is 490 and no-contact if their distance is 48 A ˚. For each pair, S n and S m , of secondary structure elements, the output of the 2D-BRNN is a probability vector corresponding to the probability of parallel contact, anti-parallel contact or no-contact. The input of the 2D-BRNN for the pair S n and S m consists of two feature vectors F n and F m as well as the number of elements between S n and S m. The feature vector F n for segment S n has the following components:</p><p>(1) Three vectors (20 entries each) representing the average amino acid distribution computed over the profiles of S n – 1 , S n and S n þ 1 .</p><p>(2) The lengths (three entries) in residues of S n – 1 , S n and S n þ 1 .</p><p>(3) The lengths (two entries) in residues of the intervals between S n – 1 and S n and S n and S n þ 1. These intervals correspond to the sum of the lengths of the coils and short elements that are ignored between the elements under consideration. This length is 0 for adjacent elements (Supplementary<ref type="figure" target="#fig_0">Fig. S1</ref>).</p><p>(4) A vector of flags (four binary entries) to identify the first, second, second-to-last and last elements in the sequence.</p><p>(5) Two vectors (20 entries each) containing the average amino acid distribution for alternate even-and odd-numbered columns in the profile of S n. Specifically, if S n consists of residues s 1 , s 2 , s 3 ,. .. , the first vector contains the average sequence profile over residues (s 1 , s 3 , s 5 ,. . .) and the second vector over (s 2 , s 4 , s 6 ,. . .). This feature is designed explicitly for strands, since these two sets of positions tend to have similar properties when the two strands are paired in a beta-sheet.</p><p>The 2D-BRNN is trained using 10-fold cross-validation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Element alignment prediction (energy)</head><p>We use an energy-based method (<ref type="bibr" target="#b19">Nagata et al., 2011</ref>) to assign energies then probabilities to the alignment between contacting secondary structure elements and derive approximate probabilities of contact for their residue pairs. This approach is used only for helix–helix and strand– strand contacting elements, since these are by far the most frequent among well-defined secondary structure elements (i.e. strand–helix contacts are relatively rare). Furthermore, it is generally hard to align strand and helix elements at the residue-level because helices are more compact when compared with strands. Alignments between secondary structure elements are described by two components: the relative shift and the phase. The relative shift is an integer representing how the residues in the first element are shifted with respect to the second element. For instance, the shift between two strands of length 5 can have any integer value from 0 to 9. The phase is an integer assigned to pairs of residues, one from each contacting element, which is meant to capture in approximate fashion the periodic component of strand–strand and helix–helix contacts with some partial correlation to physical distance. Since the side chains of contacting strands are alternatively distributed on each side of the corresponding beta-sheet, and alpha-helices make approximately two turns every seven residues, it is reasonable to view strands and helices as periodic structures with periods 2 and 7, respectively. The phase value is assigned periodically by starting from the two residues with the closest C s and moving away from it in both directions. For strand–strand contacts, the phase values alternate between 0 and 1, whereas for helix–helix contacts, the phase values cycle periodically from 0 to 6 (Supplementary<ref type="figure" target="#fig_2">Fig. S2a</ref>and b). Given a pair of contacting elements, S n and S m , we need to evaluate the energy of all the possible alignments obtained by shifting S n over S m (which is kept fixed), such that at least one residue in S n is paired with one residue in S m. If jS n j ¼ k n þ 1 and jS m j ¼ k m þ 1 are the lengths of S n and S m , respectively, there are exactly k n þ k m þ 1 possible shifts numbered a ¼ 0,1,::,k n þ k m. Each one of these shifts can be in O different phases numbered ¼ 0,::,O À 1 with O ¼ 2 for strands and O ¼ 7 for helices. Thus, we need to evaluate the energy of O Á ðk n þ k m þ 1Þ alignments. Assume that the segment S n consists of residues i,i þ 1,::,i þ k n and S m of residues j,j þ 1,:::,j þ k m. Then, the energy for the ath shift with phase of segment S n versus segment S m is given by</p><formula>E P ða,Þ ¼ X km k¼0 g P ði À k m þ a þ k,j þ k,ð þ kÞ mod OÞ ð 1Þ E A ða,Þ ¼ X km k¼0 g A ði À k m þ a þ k,j þ k m À k,ð þ kÞ mod OÞ ð2Þ</formula><p>where the function g P ði,j,kÞ (respectively, g A ði,j,kÞ) returns the estimated energy for the residue pair i, j, under the assumption that S n and S m are parallel contacting (respectively, anti-parallel contacting) and that the phase of i, j is k (Supplementary<ref type="figure" target="#fig_2">Fig. S2c</ref>). As a manageable example,<ref type="figure">Figure S3a</ref>in the Supplementary Material shows all the alignment positions and the corresponding energies for two anti-parallel strands of hypothetical length 3. The alignment energies E P ða,Þ and E A ða,Þ are normalized into probabilities by</p><formula>P P ða,Þ ¼ e ÀKÁEPða,Þ P kmþkn j¼0 P OÀ1 k¼0 e ÀKÁEPðj,kÞ ð3Þ P A ða,Þ ¼ e ÀKÁEAða,Þ P kmþkn j¼0 P OÀ1 k¼0 e ÀKÁEAðj,kÞ ð4Þ</formula><p>where K is a fixed constant. In order to compute the alignment energies (1) and</p><p>(2) and the corresponding normalized probabilities (3) and (4), we need to define the residue–residue energy functions g P ði,j,kÞ and g A ði,j,kÞ. We model these functions by using two-layer feedforward Neural Networks (NN). There are four NNs: two for the strand–strand parallel and anti-parallel cases and two for the helix–helix parallel and anti-parallel cases. In all four cases, the NN input simply encodes the two sequence profile vectors (20 entries each) for the residue pair (i and j). The output size of the NNs is O ¼ 2 for the strand-related predictors and O ¼ 7 for the helix-related predictors and represents the phases. The function g A ði,j,kÞ thus represents the kth output of the (anti-parallel) NN for the residue pair (i and j). The network weights for the anti-parallel case are trained by gradient-descent minimization of the log-likelihood objective function</p><formula>E A ¼ À X n i¼1 logP A ð ^ a i , ^ i Þ, ð5Þ</formula><p>where n is the number of anti-parallel contacting element pairs used in training and ^ a i , ^ i are the true shift and phase for the ith example (the objective function is similar for the parallel case). Thus, we can train the NN weights by gradient descent, back-propagating the partial derivatives:</p><formula>@E A @E A ða i , i Þ ¼ ÀK Á ðP A ða i , i Þ À 1Þ, ða i , i Þ ¼ ð ^ a i , ^ i Þ ÀK Á P A ða i , i Þ, o t h e r w i s e : ð6Þ</formula><p>The four alignment predictors are also trained using 10-fold crossvalidation on the data described in Section 2.2.</p><p>The alignment probabilities provide an estimation of the possible spatial arrangement of two secondary structure elements. These probabilities can easily be mapped to residue–residue contact probabilities. The mapping is obtained by choosing the probability score of the unique alignment in which the two residues are paired together and are close (i.e. their phase is 0). For instance, assume that i and j belong to two anti-parallel elements S n and S m. Then, there is a unique shift a of S n over S m in which i and j are paired together. For this shift, there is a unique overall phase 0 5O such that i and j are given phase 0. Then, the probability P A ða,Þ represents the probability of contact for the pair (i and j; Supplementary<ref type="figure">Fig. S3b</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Residue–residue contact prediction (deep NN)</head><p>The deep neural network architecture for residue–residue contact prediction consists of a 3D stack of neural networks NN k ij. Each network NN k ij in the stack is a standard three-layer feedforward network trainable by back propagation, and all the networks share the same topology: same input size, same hidden layer size, with one single output, which represents the residue–residue contact probability computed at position i, j and level k. Thus, i and j are spatial indexes over the contact map, whereas k is a 'temporal' index. Each layer k of NNs in the stack produces a contact map prediction, which is then refined in the subsequent layers. The range of k is determined during the training phase, as described below. Each NN k ij has two different kinds of input features: purely spatial features and temporal features. For fixed i and j, the purely spatial features are identical for all the NN k ij as k varies and consist of typical features used in contact map prediction. The temporal input features for NN kþ1 ij consist of the predicted contact map around i and j at the previous level of the stack, i.e. the outputs of the networks NN k rs , where r, s ranges over a 'receptive field' neighborhood of i and j. The receptive fields used in the simulations results are essentially 15 Â 15 square patches (Supplementary<ref type="figure">Fig. S4</ref>). The integration over time provided by the different levels in the stack corresponds to the intuition that folding is a somewhat organized, non-instantaneous, process which proceeds through successive stages of refinement. The integration over space provided by the receptive fields of the temporal features captures the idea that residue–residue contacts in native protein structures are generally not isolated: a contacting residue pair is very likely to be in the proximity of a different pair of contacting residues. Over 98% of long-range contacting residues are in close proximity of another contact, compared with 30% for non-contacting pairs. Furthermore, over 60% of contacting pairs are in the proximity of at least 10 different contacts, compared with 2.5% for non-contacting pairs (Supplementary<ref type="figure">Fig. S5</ref>). In other words, for a residue pair (i and j), the higher the number of its neighboring contact pairs, the higher the probability that i and j are in contact. Most previous machine learning-based contact predictors learn the contact probabilities of residue pairs independently of the contact probabilities in their neighborhoods. Thus, one of the aims of the deep-NN architecture (DNN) is to leverage this important information during the learning phase. Note that even if the individual contact predictions at a given stage are inaccurate, the contact probabilities can still provide a rough estimate of the number of contacts in a given neighborhood. (<ref type="figure" target="#fig_0">Fig. 1</ref>) There are three types of purely spatial input features: residue–residue features coarse features and alignment features. Residue–residue features encodes three kinds of information (for a total of 25 values): evolutionary information (20 values, one for each amino acid type), predicted secondary structure (three binary values:-sheet,-helix or coil) and predicted solvent accessibility (two binary values: buried or exposed). The evolutionary information is encoded in the standard way, as residue frequency profiles extracted from multiple sequence alignments. Frequency profiles are obtained by running PSI-BLAST (<ref type="bibr" target="#b1">Altschul et al., 1997</ref>) with E-value cutoff equal to 0.001 and up to 10 iterations against NCBI's non-redundant protein sequence database NR. The secondary structure is predicted with SSpro (<ref type="bibr" target="#b21">Pollastri et al., 2002a</ref>) and the solvent accessibility with ACCpro (<ref type="bibr" target="#b22">Pollastri et al., 2002b</ref>). We used two previously published versions of SSpro (<ref type="bibr" target="#b21">Pollastri et al., 2002a</ref>) and ACCpro (<ref type="bibr" target="#b22">Pollastri et al., 2002b</ref>), derived before 2008 (<ref type="bibr" target="#b6">Cheng et al., 2005</ref>), without retraining them. The residue–residue features for the pair (i and j) are included in the network input by taking a fixed-size window centered at each residue. That is, for the pair (i and j), the network input includes the residue–residue feature vectors for residues i 0 2 ½i À l,i þ l and j 0 2 ½j À l,j þ l, where l ! 0 is the radius of the window. After some experimentation, we use l ¼ 4 since larger radiuses lead to slower training with no significant performance improvement. Coarse features (three values) contain the predictions obtained with the coarse contact and orientation predictor (see Section 2.3). If residues i, j are in elements S n ,S m , the feature vector is setup with the predicted contact orientation probabilities (parallel, anti-parallel and non-contact) for S n and S m (Supplementary<ref type="figure" target="#fig_0">Fig. S1</ref>). If either S n or S m is an ignored element (i.e. coil element or short helix/strand element), the three values in the feature vector are set by default to zero. The coarse contact features are included in the network input by taking a fixed-size window (of radius 3) centered at the element pair. Alignment features (four values) contain the predictions obtained with the element alignment predictor (see Section 2.4). If residues i, j are in elements S n ,S m and S n ,S m are both helix elements, the first and second entries of the vector contain the alignment probability score between i and j for the cases parallel and anti-parallel contact, respectively. The remaining two entries are set to zero. The encoding is symmetrical for the strand–strand case. If S n and S m are not both helix or both strand elements, the four entries of the feature vector are set by default to zero.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.1">Deep-NN training Training deep multi-layered neural net</head><p>works is generally hard, since the backpropagated gradient tends to vanish or explode with a high number of layers (<ref type="bibr" target="#b13">Larochelle et al., 2009</ref>). Here, we use an incremental approach to overcome this problem. The weights of the first level networks, NN 1 ij , are randomly initialized and their temporal input features set to 0. These networks are then trained by on-line backpropagation for one epoch. The weights of NN 1 ij are then used to initialize the weights of NN 2 ij , and all the outputs of the NN 1 ij networks on the training set are stored and used to compute the temporal input features of the networks NN 2 ij , which are then trained by back-propagation during one epoch. Then, the weights of the networks NN 2 ij are used to initialize the weights of the networks NN 3 ij and so forth all the way to the top of the stack. This progressive initialization is critical: initialization with random weights at each level of the stack results in poor performance, from unstable learning to getting stuck in poor local minima. Likewise, more stable training is obtained by using the same training set at each level of the stack, as opposed to randomizing the training data. Thus, in practice, at each training epoch, we append a new neural network to the growing DNN, initialize it with the weights of the previous level and train it by back-propagation using the true contacts as the targets (or softer targets could be derived from folding data). We have experimented with many variations such as growing the stack up to a maximum of 100 networks or growing it to a smaller depth but then repeating the training procedure through one or more epochs. The approach described earlier in the text provides a good compromise between training time and average cross-validation accuracy. Note that, although a deep-NN with n levels comprises n Â 3 layers, the number of free training parameters is rather small. Only the parameters of the first level are free, all other parameters are initialized in succession using the parameters from the previous level after one training epoch. Since the non-contact pairs are considerably more abundant than the contact pairs, a standard approach to deal with unbalanced training set is to rebalance the data. For contact map prediction, this is often done randomly selecting only 5% of the negative examples, while keeping all the positive examples. In our experiments, we obtain considerable better overall performance by increasing this percentage to 20% (data not shown). We train 10 different deep-NN predictors by cycling through the 10 training subsets (Section 2.2), each time holding one subset for early stopping or validation purposes. Furthermore, we synchronize the early stopping across the 10 DNNs, so that they all have the same depth n, retaining the depth providing the best prediction performance (Supplementary<ref type="figure">Fig. S7</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS AND DISCUSSION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Coarse contact and orientation prediction</head><p>We evaluate the average classification performance of the coarse contact and orientation predictor on the three classes Parallel contact (P), Anti-parallel contact (A) and No-contact (N) on the 364 test domains (Section 2.2). We evaluate the performance using the percentage of correctly predicted pairs</p><formula>Q 3 ¼ PP þ AA þ NN P X P Y XY ð7Þ</formula><p>the positive predictive value (or precision) PPV X ¼ ðXXÞ=ðAX þ PX þ NXÞ ð 8Þ and the true-positive rate (or recall) TPR X ¼ ðXXÞ=ðXA þ XP þ XNÞ, ð9Þ where XY denotes the number of segment pairs in class X 2 fP,A,Ng predicted to be in class Y 2 fP,A,Ng.<ref type="figure" target="#tab_1">Table 1</ref>reports the cross-validation average performance on the full set of protein domains (All) and as a function of the main structural domain classes: all-alpha (mainly alpha-helices), all-beta (mainly beta-sheets), alpha/beta (alpha-helices and beta-sheets, mainly parallel beta sheets) and alpha þ beta (alpha-helices and betasheets, mainly anti-parallel beta sheets). As shown in<ref type="figure" target="#tab_1">Table 1</ref>, the performance of the coarse predictor on the Parallel (P) class is highly affected by the protein structural domain; in particular, the prediction precision and recall are higher for the alpha/beta proteins and are quite low for the all-beta proteins. Conversely, the performance on the Anti-parallel class (A) is nearly uniform, regardless of the domain structural classification. The antiparallel contacts seem to be easier to predict than the parallel contacts, even within the alpha þ beta class. Although not directly comparable (due to a different definition of segment– segment contact), the coarse contact predictor has higher precision and lower recall than the 2D-BRNN developed for the same classification problem in Pollastri et al.</p><formula>(2006).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Element alignment prediction</head><p>We evaluate the contact prediction performance of the element alignment predictor at the residue level on the (predicted) strand– strand and helix–helix regions of the contact map. We use the same accuracy measure adopted for the evaluation of contact prediction performance on the entire contact map (Section 2.1). Recall that the element alignment predictor can be used to derive approximate probabilities of contacts for residue pairs in helix–helix and strand–strand elements, under the assumption that the elements are contacting (Section 2.4). A probability of parallel or anti-parallel contact between two elements is provided by the coarse contact and orientation predictor (Section 2.3). One can thus evaluate two different probability measures of contact at the residue level for the alignment predictor: a naive measure that uses only the alignment scores, and a more refinedmeasure that combines alignment and coarse scores. Specifically, consider two residues i and j in secondary structure elements S n and S m , where S n and S m are both helices or strands. A naive probability of contact between i and j can be derived from the alignment scores only by</p><formula>p HÀH ij ¼ a PH þ a AH , ð10Þ p EÀE ij ¼ a PE þ a AE , ð11Þ</formula><p>where a PH (helix–helix parallel contact), a AH (helix–helix antiparallel contact), a PE (strand–strand parallel contact) and a AE (strand–strand anti-parallel contact) are the contact probabilities obtained with the alignment predictor for residues i and j. A more refined probability of contact can be defined by combining the alignment scores with the coarse predictor scores</p><formula>p HÀH þ ij ¼ p P Á a PH þ p A Á a AH , ð12Þ p EÀE þ ij ¼ p P Á a PE þ p A Á a AE , ð13Þ</formula><p>where p P and p A are the probability of parallel and anti-parallel contact, obtained with the coarse contact predictor, between the secondary structure elements S n and S m. The average accuracy on the 364 test domains for these two probability measures and for long-range residue pairs is reported in<ref type="figure" target="#tab_2">Table 2</ref>. The prediction accuracy is reported on the full set of protein domains (All) as well as on the main structural classes (all-alpha, all-beta, alpha/beta and alpha þ beta). Overall, the prediction performance obtained by combining alignment and coarse probabilities (H–H þ and E–E þ ) is higher than the one obtained by considering the alignment probabilities alone (H–H and E–E). Thus the coarse contact and alignment features alone contain relevant information on long-range residue–residue contacts, although the accuracy of this information is unevenly distributed with respect to the different structural classes and secondary structure elements. In particular, the prediction accuracy for beta-residues is much higher than for helix-residues, regardless of the structural class. This uneven distribution of performance is consistent with the native distribution of contacts between the respective classes of secondary structure elements: the strand–strand contacts are more dense than the helix-helix contacts and thus also easier to predict.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Residue–residue contact prediction: test set</head><p>We compare the performance on the 364 test domains of different contact predictors in order to separate the contribution of the DNN from the contribution of the features obtained with the coarse contact/orientation and alignment predictors (CA-features).<ref type="figure" target="#tab_3">Table 3</ref>reports the performances of the full predictor (CMAPpro), a single-hidden-layer back-propagation neural network with CA-features (NN þ CA) and without CA-features (NN), and a DNN that does not incorporate CA-features. In order to consider separately the contribution of coarse and alignment features, we also train a single-hiddenlayer neural network that incorporates only coarse (NN þ C) and only alignment (NN þ A) features. For all such predictors, we build a corresponding ensemble by averaging the 10 cross-validation models. In<ref type="figure" target="#tab_3">Table 3</ref>, note that the performance of the basic neural network NN reflects the state-of-the-art in contact prediction, as assessed by all previous CASP experiments. Both the CA-features and the DNN help improve the contact prediction accuracy in comparison with the performance of the plain neural network NN. The performance of the NN incorporating the CA-features (NN þ CA) is indistinguishable from the performance of the deep-NN without CA-features (DNN). CMAPpro (deep-NN with CA-features) achieves theContact prediction accuracy (Acc, see Section 2.1) of the element alignment predictor for long-range residue pairs. The length L refers to the sum of the lengths of helix/strand elements in the protein sequence. The protein domains having55 contacts in the strand–strand and helix–helix regions have been excluded from the evaluation. The strand– strand predictions on the All-alpha class, as well as the helix-helix predictions on the All-beta class, are not included. The performance on the strand–strand regions, E–E, E– E þ and helix–helix regions, H–H, H–H þ , are obtained by using the contact probabilities in Equations (10), (12), (11) and (13), respectively.best performance among the predictors, indicating that both CA features and deep architecture play a role in improving contact prediction. Furthermore, in<ref type="figure" target="#tab_3">Table 3</ref>, the coarse features (NN þ C) seem to be more informative than the alignment features (NN þ A). On the other end, the performance comparison on the CASP datasets (<ref type="bibr">Section 3.4)</ref>shows that in specific cases the alignment features are more informative than the coarse features (NN þ A versus NN þ C in Tables 5 and 6).<ref type="figure" target="#tab_4">Table 4</ref>shows the cross-validation performance of CMAPpro as a function of the main protein structural classes. These performances are somewhat consistent with what has been reported in literature: the residue contacts in the alpha/beta class are relatively easy to predict, whereas the contacts in the all-alpha class are more difficult (<ref type="bibr" target="#b11">Fariselli et al., 2008</ref>). The 20% accuracy of CMAPpro on the all-alpha class still represents some improvement with respect to the state-of-the-art for long-range contact prediction (\sim15%) on this class of proteins (<ref type="bibr" target="#b11">Fariselli et al., 2008</ref>). The prediction performance of CMAPpro as a function of architecture depth is shown in<ref type="figure" target="#fig_2">Figure 2</ref>for the full set of test domains (All), as well as for different subsets organized by domain lengths. Overall, the contact prediction accuracy improves up to depth $50 and then remains roughly constant for depths in the range of 50–100. Even for architectures with depth as large as 100, CMAPpro does not show any sign of overfitting. The apparent weaker performance on domains of length 4100–150 is artificially due to an uneven distribution of the easiest targets across the different sets.</p><formula>E–E H–H E–E þ H–H þ Class L/5</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Residue–residue contact prediction: CASP sets</head><p>In addition to the top 8 (top 16 in Supplementary Material) CASP predictors, we include in the comparison also the recent mutual information-based approach, PSICOV, using multiple alignments obtained by running jackhammer (http://hmmer .org) for three iterations on the NR database (<ref type="bibr">Jones et al., 2011</ref>). The performance comparison on the CASP8 and CASP9 datasets are shown in Tables 5 and 6, respectively. On the CASP datasets, the performance improvements obtained by considering separately the coarse/orientation and alignment features (NN þ CA) and the DNN are somewhat different from those in<ref type="figure" target="#tab_3">Table 3</ref>. NN þ CA performs better on the CASP8 dataset, whereas DNN performs better on the CASP9 dataset. CMAPpro combines and refines the qualities of these two predictors achieving higher accuracy on both the CASP8 and CASP9 datasets. This behavior can be explained by considering an example.<ref type="figure">Figures 3 and 4</ref>show the predicted contacts for the CASP9 domain T0604-D1. The red and blue dots in the picture represent the L top-scored true positive and false positive contacts, respectively. The predictions obtained by DNN and NN þ CA are compared in<ref type="figure">Figure 4</ref>. Globally, the two predictors assign a high probability of contact (grey dots) to approximately the same regions. Locally, however, they assign different contact probabilities to the individual pairs of residues, leading to different sets of correctly predicted contacts (blue dots). CMAPpro combines and refines the characteristics of these two predictors (<ref type="figure">Fig. 3</ref>): the segment–segment features improve the identificationof contacting regions between secondary structure elements and the DNN is able to refine the prediction scores. Compared with other methods, CMAPpro is considerably more accurate on both CASP datasets. In particular, on the CASP8 dataset, CMAPpro achieves the best ranking both in terms of Acc and X d. The only method (<ref type="bibr" target="#b31">Wang et al., 2010</ref>) outperforming CMAPpro on the CASP9 dataset by a small margin relies on 3D structure models for deriving contact predictions through consensus, which defeats the purpose of predicting contact maps from scratch. Indeed, if we remove the only three TBM domains from the CASP9 dataset and focus exclusively on the FM targets, which are harder to predict, then RR490's accuracy (L/5) drops down from 0.32 to 0.28, whereas CMAPpro's accuracy increases from 0.31 to 0.32. Due to the small number of targets, the average performances on the CASP8 and CASP9 are consistently affected by the network depth (Supplementary<ref type="figure">Fig. S6</ref>). In particular, on the CASP8 set, for architectures depths in the range of 10–100, the average accuracy on L/5 long range contacts varies from 0.30 to 0.35. On the CASP9 set, the average accuracy varies from 0.28 to 0.31. Notwithstanding such variability, on both CASP datasets, the performance of CMAPpro remains above the performance of the other methods at all depth values. As a general trend, on both CASP8 and CASP9 datasets, the improvement obtained in contact prediction with CMAPpro is $10% or higher with respect to methods that do not use 3D structures. In Tables 5 and 6, we also note that the performance of the plain neural network predictor NN is comparable with the average performance across all groups. This confirms that the overall good performance of CMAPpro is not due to the particular set of protein domains used for training. The accuracy of PSICOV ($20%) is lower than previously reported (450%;<ref type="bibr">Jones et al., 2011</ref>). The performance of PSICOV is considerably affected by the quality of the multiple alignments. Since TBM/FM targets for contact prediction at CASP usually have few homologs in the protein sequence databases, this considerably lowers the prediction accuracy of PSICOV. The performance of PSICOV may suggest that even the most updated database of protein sequences (i.e. the NR database used to extract sequence profiles) does not contain enough information to derive rich evolutionary profiles for the CASP hardest targets. On the other hand, PSICOV relies only on multiple alignments and thus a direct comparison with methods that make use of predicted secondary structure or solvent accessibility is somewhat unfair. Finally, Tables 3 and 4 in Supplementary Materials report the head-to-head comparison of the 10 top predictors on the CASP data. These results show that the average accuracies of the best<ref type="figure">Fig. 4</ref>. Predicted contact map for the T0604-D1 target from CASP9 dataset. The lower triangle shows the predictions obtained with DNN and the upper triangle those obtained with NN þ CA. The blue and red dots represent the correctly and incorrectly predicted contacts, respectively, among the L top-scored residue pairs<ref type="figure">Fig. 3</ref>. Native and predicted contact map for the T0604-D1 target from CASP9 set. The lower triangle shows the native contacts. The upper triangle shows contacts predicted by CMAPpro. The blue and red dots represent the correctly and incorrectly predicted contacts, respectively, among the L top-scored residue pairsperforming methods are not biased by just a few very good predictions. With very few exceptions, in head-to-head comparisons, CMAPpro achieves a better accuracy for over 60% of the targets and worse accuracy for 530% of the targets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSION</head><p>Here, we have introduced a new approach for the prediction of protein contact maps. In particular, partly inspired by the observation that nature uses an iterative refinement approach to 'compute' the structure of proteins, we have developed modular deep architectures that can integrate information over multiple temporal and spatial scales. In rigorous tests, these architectures have been shown to predict contact maps with an accuracy close to 30%, a significant improvement. Although further improvements are necessary, it should be obvious that there are many generalizations and variations on the architectures and training methods we have described that remain to be explored, giving us hope that further progress lies ahead.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. (a) The deep-NN architecture consists of a 3D stack of neural networks NN k ij with identical architecture but different weights. When i and y vary, the outputs of the NN k ij correspond to the predicted contact map at level k of the stack. A neural network NN kþ1 ij purely spatial input features that depend only on i and j and are identical at all levels of the stack, and temporal input features associated with the contact probabilities predicted in the previous layer over a receptive field neighborhood of ij. (b) Input feature vector of each NN k ij</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Table1.</head><figDesc>Average performance for the coarse contact and orientation predictor</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.2.</head><figDesc>Fig. 2. Accuracy (L/5 long range contacts) versus network depth for the set of test domains (All), the test domains of length between 50 and 100 residues (50–100, 87 domains), between 101 and 150 (4100–150 and 111 domains), between 151 and 200 (4150–200 and 76 domains) and longer than 200 (4200, 90 domains)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><figDesc>Funding: NSF IIS-0513376, NIH LM010235 and T15 LM07443 (to P.B.). Conflict of Interest: none declared.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>Table 2. Average accuracy on long-range contacts for the element alignment predictor</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><figDesc>Table 3.</figDesc><table>Average accuracy and X d comparison on long-range contacts 

Method 
Acc 
X d 

L/5 
L/10 
Best 5 
L/5 
L/10 
Best 5 

CMAPpro 
0.28 
0.32 
0.36 
0.14 
0.15 
0.16 
NN þ CA 
0.25 
0.29 
0.32 
0.13 
0.14 
0.15 
DNN 
0.25 
0.28 
0.32 
0.13 
0.14 
0.15 
NN þ C 
0.23 
0.27 
0.30 
0.12 
0.13 
0.14 
NN þ A 
0.21 
0.23 
0.26 
0.11 
0.12 
0.13 
NN 
0.20 
0.24 
0.26 
0.10 
0.12 
0.13 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><figDesc>Table 6. Average Acc and X d for seq. sep. ! 24 on CASP9 set</figDesc><table>Method 
Acc 
X d 

L/5 
L/10 
Best 5 
L/5 
L/10 
Best 5 

RR490 
0.32 
0.37 
0.44 
0.15 
0.17 
0.20 
CMAPpro 
0.31 
0.35 
0.34 
0.13 
0.15 
0.15 
DNN 
0.27 
0.31 
0.41 
0.12 
0.14 
0.16 
NN þ CA 
0.23 
0.27 
0.29 
0.11 
0.12 
0.13 
RR051 
0.22 
0.24 
0.24 
0.11 
0.12 
0.12 
RR103 
0.21 
0.27 
0.31 
0.10 
0.12 
0.12 
NN þ C 
0.21 
0.27 
0.25 
0.10 
0.11 
0.11 
RR002 
0.21 
0.23 
0.23 
0.11 
0.12 
0.12 
PSICOV 
0.20 
0.28 
0.33 
0.08 
0.10 
0.11 
NN þ A 
0.20 
0.20 
0.21 
0.09 
0.09 
0.09 
RR138 
0.19 
0.23 
0.26 
0.09 
0.11 
0.11 
NN 
0.19 
0.19 
0.19 
0.09 
0.09 
0.09 
RR375 
0.18 
0.21 
0.24 
0.08 
0.09 
0.10 
RR204 
0.18 
0.20 
0.22 
0.09 
0.10 
0.11 
RR422 
0.17 
0.20 
0.21 
0.09 
0.10 
0.09 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><figDesc>Table 5.</figDesc><table>Average Acc and X d for seq. sep. ! 24 on CASP8 set 

Method 
Acc 
X d 

L/5 
L/10 
Best 5 
L/5 
L/10 
Best 5 

CMAPpro 
0.32 
0.41 
0.42 
0.13 
0.15 
0.15 
NN þ CA 
0.28 
0.38 
0.40 
0.12 
0.15 
0.15 
NN þ A 
0.26 
0.33 
0.32 
0.11 
0.12 
0.14 
DNN 
0.25 
0.35 
0.37 
0.11 
0.13 
0.14 
RR157 
0.24 
0.30 
0.32 
0.09 
0.10 
0.11 
RR072 
0.24 
0.30 
0.28 
0.11 
0.13 
0.13 
NN þ C 
0.23 
0.32 
0.30 
0.10 
0.12 
0.11 
RR453 
0.23 
0.30 
0.38 
0.11 
0.13 
0.15 
RR477 
0.23 
0.28 
0.28 
0.10 
0.12 
0.11 
RR197 
0.22 
0.22 
0.22 
0.09 
0.09 
0.11 
RR131 
0.21 
0.24 
0.22 
0.10 
0.09 
0.08 
PSICOV 
0.21 
0.20 
0.20 
0.07 
0.08 
0.08 
RR249 
0.20 
0.25 
0.28 
0.12 
0.14 
0.15 
RR413 
0.20 
0.24 
0.20 
0.10 
0.12 
0.11 
NN 
0.20 
0.25 
0.27 
0.09 
0.10 
0.10 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><figDesc>Table 4.</figDesc><table>Average accuracy and xd on long-range contacts for CMAPpro 

Set 
Acc 
X d 

L/5 
L/10 
Best 5 
L/5 
L/10 
Best 5 

All 
0.28 
0.32 
0.36 
0.14 
0.15 
0.16 
All-alpha 
0.20 
0.22 
0.25 
0.12 
0.13 
0.13 
All-beta 
0.28 
0.31 
0.36 
0.12 
0.13 
0.15 
Alpha/beta 
0.50 
0.59 
0.68 
0.22 
0.24 
0.27 
Alpha þ beta 
0.27 
0.32 
0.36 
0.14 
0.15 
0.16 </table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">P.Di Lena et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Deep architectures for contact prediction at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Parallel contact (P), Anti-parallel contact (A) and No-contact (N) are the three classes considered by the coarse contact and orientation predictor. Q 3 is the percentage of correctly predicted pairs in equation (7), PPV X is the Positive Predictive Value on class X in equation (8) and TPR X is the True Positive Rate on class X in Equation (9).</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Basic local alignment search tool</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">215</biblScope>
			<biblScope unit="page" from="403" to="410" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">F</forename>
				<surname>Altschul</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="3389" to="3402" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">The Principled Design of Large-Scale Recursive Neural Network Architectures-DAG-RNNs and the Protein Structure Prediction Problem</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Baldi</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Pollastri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mach. Learn. Res</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="575" to="602" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Using multi-data hidden Markov models trained on local neighborhoods of protein structure to predict residue-residue contacts</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Bjo¨rkholmbjo¨rkholm</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1264" to="1270" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Disentangling direct from indirect co-evolution of residues in protein alignments</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Burger</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Van Nimwegen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">1000633</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">The ASTRAL Compendium</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">M</forename>
				<surname>Chandonia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucl. Acids Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="189" to="192" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
	<note>suppl</note>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">SCRATCH: a protein structure and structural feature prediction server</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Cheng</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucl. Acids Res</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="72" to="76" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Improved residue contact prediction using support vector machines and a large feature set</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Cheng</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Baldi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">113</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Mutual information without the influence of phylogeny or entropy dramatically improves residue contact prediction</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">D</forename>
				<surname>Dunn</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="333" to="340" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Assessment of domain boundary predictions and the prediction of intramolecular contacts in CASP8</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Ezkurdia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="196" to="209" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
	<note>suppl. 9</note>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Progress in predicting inter-residue contacts of proteins with neural networks and correlated mutations</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Fariselli</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="157" to="162" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Improving the prediction of helix-residue contacts in all-alpha proteins</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Fariselli</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th WSEAS International Conference on Neural Networks, World Scientific and Engineering Academy and Society (WSEAS) Stevens Point</title>
		<meeting>the 9th WSEAS International Conference on Neural Networks, World Scientific and Engineering Academy and Society (WSEAS) Stevens Point<address><addrLine>Wisconsin, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="89" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Correlated mutations and residue contacts in proteins</title>
		<author>
			<persName>
				<forename type="first">U</forename>
				<surname>Go¨belgo¨bel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="309" to="317" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Exploring strategies for training deep neural networks</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Larochelle</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mach. Learn. Res</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="1" to="40" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">PSICOV: precise structural contact prediction using sparse inverse covariance estimation on large multiple sequence alignments</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">T</forename>
				<surname>Jones</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="184" to="190" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">CASP9 results compared to those of previous CASP experiments</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Kryshtafovych</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="196" to="207" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Physically realistic homology models built with ROSETTA can be more accurate than their templates</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">M</forename>
				<surname>Misura</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Natl. Acad. Sci. U.S.A</title>
		<imprint>
			<biblScope unit="volume">203</biblScope>
			<biblScope unit="page" from="5361" to="5366" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Evaluation of residue-residue contact predictions in CASP9</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Monastyrskyy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="119" to="125" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">SCOP: a structural classification of proteins database for the investigation of sequences and structures</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">G</forename>
				<surname>Murzin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mol. Biol</title>
		<imprint>
			<biblScope unit="volume">247</biblScope>
			<biblScope unit="page" from="536" to="540" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">SIDEpro: a novel machine learning approach for the fast and accurate prediction of side-chain conformations</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Nagata</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="142" to="153" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Improving contact predictions by the combination of correlated mutations and other sources of sequence information</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Olmea</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Valencia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fold Des</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="25" to="32" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Improving the prediction of protein secondary structure in three and eight classes using recurrent neural networks and profiles</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Pollastri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="228" to="235" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Prediction of coordination number and relative solvent accessibility in proteins</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Pollastri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="142" to="153" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Modular DAG-RNN architectures for assembling coarse protein structures</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Pollastri</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="631" to="650" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">PROFcon: novel prediction of long-range contacts</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Punta</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Rost</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="2960" to="2968" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Contact prediction using mutual information and neural nets</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Shackelford</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Karplus</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="159" to="164" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Development and large scale benchmark testing of the PROSPECTOR_3 threading algorithm</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Skolnick</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page" from="502" to="518" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">Protein topology from predicted residue contacts</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">R</forename>
				<surname>Taylor</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Protein Sci</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="299" to="305" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Predicted residue-residue contacts can help the scoring of 3D models</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">L</forename>
				<surname>Tress</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Valencia</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins</title>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="page" from="1980" to="1991" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Prediction of protein coarse contact maps</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Vullo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Frasconi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Bioinform. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="411" to="431" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">A two-stage approach for improved prediction of residue contact maps</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Vullo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">180</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">MULTICOM: a multi-level combination approach to protein structure prediction and its assessments in CASP8</title>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Wang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="882" to="888" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>