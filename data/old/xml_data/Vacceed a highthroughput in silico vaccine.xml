
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:43+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Data and text mining Vacceed: a high-throughput in silico vaccine candidate discovery pipeline for eukaryotic pathogens based on reverse vaccinology</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2014">2014</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Stephen</forename>
								<forename type="middle">J</forename>
								<surname>Goodswen</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">School of Medical and Molecular Biosciences</orgName>
								<orgName type="department" key="dep2">The ithree Institute</orgName>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Paul</forename>
								<forename type="middle">J</forename>
								<surname>Kennedy</surname>
							</persName>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Faculty of Engineering and Information Technology</orgName>
								<orgName type="department" key="dep2">School of Software</orgName>
								<orgName type="department" key="dep3">The Centre for Quantum Computation and Intelligent Systems</orgName>
								<orgName type="institution">University of Technology Sydney (UTS)</orgName>
								<address>
									<postCode>2007</postCode>
									<settlement>Ultimo</settlement>
									<region>NSW</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">John</forename>
								<forename type="middle">T</forename>
								<surname>Ellis</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">School of Medical and Molecular Biosciences</orgName>
								<orgName type="department" key="dep2">The ithree Institute</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Data and text mining Vacceed: a high-throughput in silico vaccine candidate discovery pipeline for eukaryotic pathogens based on reverse vaccinology</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">30</biblScope>
							<biblScope unit="issue">16</biblScope>
							<biblScope unit="page" from="2381" to="2383"/>
							<date type="published" when="2014">2014</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btu300</idno>
					<note type="submission">Received on January 30, 2014; revised on April 1, 2014; accepted on April 23, 2014</note>
					<note>Associate Editor: Jonathan Wren Contact: John.Ellis@uts.edu.au Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We present Vacceed, a highly configurable and scalable framework designed to automate the process of high-throughput in silico vaccine candidate discovery for eukaryotic pathogens. Given thousands of protein sequences from the target pathogen as input, the main output is a ranked list of protein candidates determined by a set of machine learning algorithms. Vacceed has the potential to save time and money by reducing the number of false candidates allocated for laboratory validation. Vacceed, if required, can also predict protein sequences from the pathogen&apos;s genome. Availability and implementation: Vacceed is tested on Linux and can be freely downloaded from https://github.com/sgoodswe/vacceed/re leases (includes a worked example with sample data). Vacceed User Guide can be obtained from https://github.com/sgoodswe/vacceed.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Several subunit vaccines against prokaryotic pathogens have been identified (<ref type="bibr" target="#b0">Ariel et al., 2002;</ref><ref type="bibr" target="#b4">Montigiani et al., 2002;</ref><ref type="bibr" target="#b6">Ross et al., 2001</ref>) using reverse vaccinology (<ref type="bibr" target="#b5">Rappuoli, 2000</ref>). Vaxign (<ref type="bibr" target="#b3">He et al., 2010</ref>) and NERVE (<ref type="bibr" target="#b7">Vivona et al., 2006</ref>) are examples of vaccine discovery tools for prokaryotes, but there is currently no equivalent tool for eukaryotes. Freely available bioinformatics tools and an unprecedented volume of –omics data now present an opportunity for in silico vaccine discovery for eukaryotic pathogens. A general approach is to use several tools to predict and gather evidence for protein characteristics. From this potential evidence, the researcher makes an informed decision as to a protein's vaccine candidacy suitability. Determining which tools are appropriate, as well as how to use them, presents the first of many challenges. A further challenge, especially to a researcher with limited programming ability, is to extract and gather the pertinent evidence distributed within large-scale outputs. The subsequent and more imposing challenge is that the evidence is mainly in different formats, contradicting and inaccurate. Poor evidence reliability arises because some of the input data to the tools (e.g. protein sequences and training data) are inaccurate or missing. Moreover, tools used to predict protein characteristics are, in general, inaccurate. Vaccine candidates identified in silico can only be validated in a laboratory. Validation should provide feedback to inform and improve vaccine candidacy decision making. The repetitive nature for this ideal in silico approach is in need of automation. Furthermore, an automated process must accommodate an everincreasing choice of new or improved prediction programs that inevitably replace existing ones. We have developed Vacceed to address the challenges raised here i.e. to provide a flexible, automated process to predict worthy vaccine candidates from large volumes of superfluous, disseminated and noisy data. Vacceed is the collective name for a framework of linked bioinformatics programs, Perl scripts, R functions and Linux shell scripts. A previous published study provided guidance in development (<ref type="bibr" target="#b2">Goodswen et al., 2013b</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">DISTINCTIVE FEATURES</head><p>A detailed description of all aspects of Vacceed is provided in a comprehensive user guide provided as Supplementary Information. The focus of this article is to introduce Vacceed via a selection of distinctive features. The Vacceed framework is built around the concept of linked resources (see<ref type="figure" target="#fig_0">Fig. 1</ref>). Each resource, in this context, is built from *To whom correspondence should be addressed.ß The Author 2014. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited. a central Linux shell script encapsulating all programs needed to perform specific but related tasks. Typical tasks include predicting a particular protein characteristic as well as pre-and post-validation. A resource can be executed as an independent modular unit. This flexible design allows for scalability and easy maintenance. Any prediction program can be integrated within an existing or new resource if it meets the following criteria: runs in a Linux environment, has high-throughput capability, is applicable to eukaryotes, can be trained or has trained data specific to target pathogen and provides consistent text output. From a user's perspective, all the work involved in the complexity of linking tasks and resources into a seamless continuous pipeline has already been resolved in Vacceed. The only time a user must be concerned with the contents of a resource is when adding a new one. There is a template resource script and generic Perl scripts to ease this process. Core to Vacceed are user-definable configuration files (see<ref type="figure">Fig. 2</ref>). These files are in effect the user's interface to configuring each resource, if desired, and consequently controlling the outcome of the entire pipeline. For example, by altering names in a list, the user can determine the resources to be run and their order. The expectation is to have one configuration file for each target pathogen. The command-line syntax to invoke Vacceed is 'perl startup xx', where xx determines the appropriate configuration file. Specifying a code allows for multiple instances of Vacceed to process different species or resource combinations. No other user input is needed. An e-mail with attached log file is sent on successful completion or immediately following an error. The framework is organized into two major parts referred henceforth as part A—build proteome, and part B—run pipeline (see<ref type="figure">Fig. 3</ref>).<ref type="figure">Table 1</ref>lists the programs currently integrated in each part. A starting prerequisite for part B is a file containing amino acid sequences for proteins from the target eukaryotic pathogen i.e. the proteome. Known protein sequences for many pathogens can be downloaded from public databases. Part A is used, only if required, to predict novel protein sequences and/or collect evidence to support the existence of known proteins. Part A resources typically predict genes, which is one among multiple tasks within linked resources involved in building the proteome. Examples of other tasks are validating gene start and end sequences (e.g. ATG, TAA, TAG or TGA),predicting exon locations relative to gene start, converting predictions to amino acid sequences and homology searching. Part B resources predict protein characteristics. One resource called 'Evidence', however, parses output files and collates relevant protein characteristics (referred henceforth as an evidence profile). A typical profile is a mixture of data types corresponding to an accuracy measure or score for the predicted characteristic (see<ref type="figure" target="#fig_2">Fig. 4</ref>). A crucial feature of the resource is a set of supervised machine learning algorithms for binary classification executed via Rscript. The ensemble of classifiers constitutes the heart of Vacceed's decision making. The main output is a ranked vaccine candidate list of all proteins in the target pathogen based on an average probability of individual classifier predictions (see<ref type="figure" target="#fig_2">Fig. 4</ref>). Machine learning algorithms are the key to overcoming the challenge that an unknown percentage of evidence is questionable in each profile. Resources encapsulate, for the most part, a large number of independent computation-intensive tasks. Vacceed takes advantage of multi-core processors. Part A processes one chromosome per CPU in parallel. Chromosomes are queued if there are more chromosomes than CPUs. The user, however, can specify the number of chromosomes to process in parallel. Part B internally splits the proteins by the number of CPUs and processes each subset in parallel. Alternatively, the user can specify the split value. Proof of concept: There is no program yet to evaluate in silico vaccine candidates in a host–vaccine interaction. The best interim option is to validate the in silico process by predicting candidates using experimentally validated proteins with known immunogenicity characteristics i.e. compare predicted with expected to determine sensitivity and specificity of the process. Using a mixed dataset of 140 published proteins observed to induce or not induce immune responses, we demonstrated in an earlier study (<ref type="bibr" target="#b1">Goodswen et al., 2013a</ref>) Vacceed's decision making potential by effectively distinguishing expected true from expected false vaccine candidates, with an average sensitivity and specificity of 0.97 and 0.98, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2383</head><p>Vacceed: a high-throughput in silico vaccine candidate discovery pipeline</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig.1.</head><figDesc>Fig. 1. Vacceed framework. A set hierarchal structure exists for the execution of all Vacceed scripts e.g. startup ! master script ! resource script ! subordinate script (only three resources are shown to maintain clarity)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><figDesc>Funding: PhD scholarship from Zoetis (Pfizer) Animal Health. Conflict of Interest: none declared.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig.4.</head><figDesc>Fig. 4. Examples of evidence profiles and a ranked vaccine candidate list (only four proteins out of potentially thousands constituting the target pathogen are shown for brevity)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>Table 1. Programs currently integrated in Vacceed</figDesc><table>Name 
Function 
</table></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">Part A—Build proteome Augustus Ab initio gene predictor http://bioinf.uni-greifswald.de/augustus GlimmerHMM Ab initio gene predictor http://ccb.jhu.edu/software/glimmerhmm BLAT Aligns expressed sequence tags (ESTs) to DNA http://genome.ucsc.edu/FAQ/FAQblat.html GMAP Aligns expressed sequence tags (ESTs) to DNA http://research-pub.gene.com/gmap N-Scan Ab initio gene predictor supported by genome comparison http://mblab.wustl.edu/software.html BLASTN Finds regions of similarity between nucleotide sequences http://www.ncbi.nlm.nih.gov BLASTP Finds regions of similarity between protein sequences http://www.ncbi.nlm.nih.gov Part B—Run pipeline (vaccine candidate discovery) WoLf PSORT Protein subcellular localization prediction http://wolfpsort.seq.cbrc.jp SignalP Predicts presence and location of signal peptide cleavage sites http://www.cbs.dtu.dk/services/SignalP TargetP Protein subcellular localization prediction http://www.cbs.dtu.dk/services/TargetP Phobius Combined transmembrane topology and signal peptide predictor http://phobius.binf.ku.dk/instructions.html TMHMM Prediction of transmembrane helices in proteins http://www.cbs.dtu.dk/services/TMHMM MHC I-binding Peptide binding to MHC class I molecules http://tools.immuneepitope.org/mhci/download MHC II-binding Peptide binding to MHC class II molecules http://tools.immuneepitope.org/mhcii/download Fig. 2. Extract of a Vacceed configuration file defined by a header-key format (only one resource, WoLF PSORT, is shown for brevity) Fig. 3. Schematic of data flow in Vacceed</note>

			<note place="foot">S.J.Goodswen et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">Search for potential vaccine candidate open reading frames in the Bacillus anthracis virulence plasmid pXO1: in silico and in vitro screening</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Ariel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Infect. Immun</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="6817" to="6827" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">A novel strategy for classifying the output from an in silico vaccine discovery pipeline for eukaryotic pathogens using machine learning algorithms</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">J</forename>
				<surname>Goodswen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page">315</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">A guide to in silico vaccine discovery for eukaryotic pathogens</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">J</forename>
				<surname>Goodswen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Brief. Bioinform</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="753" to="774" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">Vaxign: the first web-based vaccine design program for reverse vaccinology and applications for vaccine development</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>He</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Biomed. Biotechnol</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Genomic approach for analysis of surface proteins in Chlamydia pneumoniae</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Montigiani</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Infect. Immun</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="368" to="379" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Reverse vaccinology</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Rappuoli</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Opin. Microbiol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="445" to="450" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Identification of vaccine candidate antigens from a genomic analysis of Porphyromonas gingivalis</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">C</forename>
				<surname>Ross</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Vaccine</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="4135" to="4142" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">NERVE: new enhanced reverse vaccinology environment</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Vivona</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Biotechnol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">35</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>