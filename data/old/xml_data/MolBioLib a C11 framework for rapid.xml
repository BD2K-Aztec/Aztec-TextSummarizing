
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:45+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genome analysis MolBioLib: a Cþþ11 framework for rapid development and deployment of bioinformatics tasks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012">19 2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName>
								<forename type="first">Toshiro</forename>
								<forename type="middle">K</forename>
								<surname>Ohsumi</surname>
							</persName>
							<email>ohsumit@molbio.mgh.harvard.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Biology</orgName>
								<orgName type="institution" key="instit1">Massachusetts General Hospital</orgName>
								<orgName type="institution" key="instit2">Richard B. Simches Research Center</orgName>
								<address>
									<addrLine>185 Cambridge Street</addrLine>
									<postCode>CPZN-7250, 02114</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Genetics</orgName>
								<orgName type="institution">Harvard Medical School</orgName>
								<address>
									<postCode>02115</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Mark</forename>
								<forename type="middle">L</forename>
								<surname>Borowsky</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Molecular Biology</orgName>
								<orgName type="institution" key="instit1">Massachusetts General Hospital</orgName>
								<orgName type="institution" key="instit2">Richard B. Simches Research Center</orgName>
								<address>
									<addrLine>185 Cambridge Street</addrLine>
									<postCode>CPZN-7250, 02114</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Genetics</orgName>
								<orgName type="institution">Harvard Medical School</orgName>
								<address>
									<postCode>02115</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genome analysis MolBioLib: a Cþþ11 framework for rapid development and deployment of bioinformatics tasks</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">28</biblScope>
							<biblScope unit="page" from="2412" to="2416"/>
							<date type="published" when="2012">19 2012</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/bts458</idno>
					<note type="submission">Received on May 16, 2012; revised on July 12, 2012; accepted on July 13, 2012</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Martin Bishop. Contact:</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We developed MolBioLib to address the need for adaptable next-generation sequencing analysis tools. The result is a compact, portable and extensively tested Cþþ11 software framework and set of applications tailored to the demands of next-generation sequencing data and applicable to many other applications. MolBioLib is designed to work with common file formats and data types used both in genomic analysis and general data analysis. A central relational-database-like Table class is a flexible and powerful object to intuitively represent and work with a wide variety of tabular datasets, ranging from alignment data to annotations. MolBioLib has been used to identify causative single-nucleotide polymorphisms in whole genome sequencing, detect balanced chromosomal rearrangements and compute enrichment of messenger RNAs (mRNAs) on microtubules, typically requiring applications of under 200 lines of code. MolBioLib includes programs to perform a wide variety of analysis tasks, such as computing read coverage, annotating gen-omic intervals and novel peak calling with a wavelet algorithm. Although MolBioLib was designed primarily for bioinformatics purposes , much of its functionality is applicable to a wide range of problems. Complete documentation and an extensive automated test suite are provided. Availability: MolBioLib is available for download at: http://sourceforge .net/projects/molbiolib Contact</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Next-generation sequencing requires a data analysis approach capable of handling large, complex and varied datasets, from large sets of reads to complex polymorphisms to existing feature files. In addition, the competitive nature of research demands rapid development of methods that are flexible enough to integrate new and quickly evolving algorithms. Tools have been developed to address these needs, such as GATK (<ref type="bibr" target="#b21">McKenna et al., 2010</ref>). However, packages written in Java (e.g. GATK) require the maximum memory heap space to be specified at run time (<ref type="bibr" target="#b26">Oracle, 2011</ref>), limiting how the input data are formatted and handled. For example, a coverage program would require more memory to compute coverage of a query-ordered SAM file versus a position-ordered SAM file, because a sliding window of coverage cannot be used. Programs written in Cþþ do not require the heap size to be specified and are only limited by the amount of available memory. Other packages written in Cþþ have their strengths, but they also have limitations that suggest a niche for our software, MolBioLib. Arachne (<ref type="bibr" target="#b1">Batzoglou et al., 2002;</ref><ref type="bibr" target="#b13">Jaffe et al., 2003</ref>), the .NET Bio project by Outercurve Foundation (Outercurve, 2012) and NCBI's Cþþ Toolkit (<ref type="bibr">Vatakov, 2012</ref>) provide many functions, but are not compact and do not always clearly identify the primary objects. Furthermore, the .NET Bio project is specific to the Windows environment (<ref type="bibr" target="#b22">Mercer, 2012</ref>) and Arachne is specific to a particular Linux environment. IBM's GenomicTools (<ref type="bibr" target="#b34">Tsirigos, 2012</ref>) has many very useful tools, but addresses common bioinformatics tasks at a lower level than MolBioLib, such as providing command-line tools rather than a unified program to generate ChIP-seq output. Other packages, such as Bioþþ (<ref type="bibr" target="#b6">Dutheil, 2008</ref>), libsequence (<ref type="bibr" target="#b33">Thornton, 2003</ref>) and TIGRþþ (<ref type="bibr" target="#b20">Majoros, 2012</ref>), are targeted toward specific applications and not designed to provide breadth of functionality. The package that most closely resembles MolBioLib's philosophy is SeqAn (<ref type="bibr" target="#b4">Do¨ringDo¨ring, 2008</ref>), though it is written in an older version of Cþþ and thus does not take advantage of the variadic templates or other modern features of Cþþ11 (ISO/IEC, 2011). MolBioLib fills the need for a platform-independent, extensively tested, compact and efficient Cþþ11 library and an extensive set of bioinformatics applications that can be used to analyze data and rapidly develop new tools. MolBioLib's library includes a variety of useful objects and functions, such as a relationaldatabase-like object, a text file reader object that simplifies data input, statistical functions and peak calling methods that can operate on any array of values, such as per base sequence coverage. In addition, MolBioLib includes a broad range of tools, such as to generate coverage, hits of reads to features and ChIP-seq, all in one unified package. The design of MolBioLib is based on four principles. The first is to simplify bioinformatics programming in Cþþ11, achieved by developing a library that includes many common bioinformatics tasks. For example, Cþþ11 requires programmers to write specialized data structures to sort associated data keeping them together, such as feature information associated with a position. Additionally, to iterate either sequentially or randomly through a tab-separated-values (TSV) file and select values from specific columns would require the creation of a function to split * To whom correspondence should be addressed. ß The Author(s) 2012. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. a line on tabs and constructs to index and traverse a text file. These, and many other common tasks, are built into MolBioLib, thus greatly simplifying the code one needs to write. It is hoped that MolBioLib will allow bioinformaticians to consider Cþþ11 as a possible language of choice. Second, MolBioLib is efficient. Cþþ11 is used because it is the new standard that introduces constructs for making objects such as Table. Cþþ11 is efficient since it is a compiled language with no inherent restriction on memory heap size at run time. Templates are used extensively to compact code, avoid inefficient virtual table lookups and maintain type safety. Objects and method parameters are often templated so that they may be in-lined by the compiler. Third, MolBioLib promotes clarity and compactness by consolidating common operations into a concise set of objects. We also provide an extensive library of functions that are not intrinsic to one object, such as those that convert one data type to another, e.g. splitString converts a string to a vector5string4. Given the range of problems MolBioLib addresses, the source code is compact: 10 000 lines of code and comments for the core objects and functions. Among the 101 included applications, 86% are coded in fewer than 200 lines and 59% in fewer than 100 lines. In contrast, without such a framework, the user would have to code the thousands of lines of code to reproduce MolBioLib's functionality. Finally, MolBioLib is extensively tested and facilitates easy testing and debugging of its applications. Automated tests are provided for all objects and functions. Additional validation of the code base comes from extensive application of MolBioLib to many molecular biology projects (<ref type="bibr" target="#b17">Lau et al., 2009;</ref><ref type="bibr" target="#b30">Sharp et al., 2011;</ref><ref type="bibr" target="#b32">Talkowski et al., 2011;</ref><ref type="bibr" target="#b39">Zhao et al., 2010</ref>; Raif S. Geha, manuscript in preparation). To simplify use of MolBioLib, all libraries are include files following the Boost convention (<ref type="bibr" target="#b28">Schaling, 2011</ref>). Debugging and memory checking is thus facilitated with tools such as with Valgrind (<ref type="bibr" target="#b25">Nethercote and Seward, 2007</ref>; Seward and<ref type="bibr" target="#b29">Nethercote, 2005</ref>) since applications in MolBioLib consist of a main program file with many include files. Additional input and programming checks are incorporated into the framework through optional compiler flags.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>MolBioLib is hierarchically structured for ease of use. It contains three main components: the library consisting of a set of objects and functions, the set of applications and the documentation.// The Fasta object makes it easy to apply // a function to a subset of sequences based // on, for instance, header text. // Define a wrapper function that // reverse-complements a sequence: void f(Sequence &amp; seq) f seq.selfReverseComplement(); } A script is included to compile all the external packages [such as BAMTools (<ref type="bibr" target="#b0">Barnett et al., 2011)]</ref>, applications and optionally build and run tests. MolBioLib can be used independently of the external packages and interfaces. The documentation for all of MolBioLib may be generated automatically using the included Doxygen configuration file (<ref type="bibr" target="#b35">van Heesch, 2011</ref>). The introductory pages of the Doxygen output show how to compile and use MolBioLib both as a set of tools as well as a programming framework. Functions that transform one data type to another are separated from the objects. Finally, the applications are hierarchically organized by usage type. Table5string, string, size_t4 myTable1, myTable2; Table5string, string, size_t, string, string, size_t4 innerJoinedTable; readTSVTable(myTable1, ''tableData.tsv''); string s1, s2; size_t i1; // Below gets the values from the 5th row. myTable1.getRow(4, s1, s2, i1); // Below adds data to myTable2, much like // the vector push_back operator. myTable2.push_back(''some string 1'', ''string 2'', 5); // Fill myTable2 similarly... // Bellow inner joins the two tables on the // first column of both myTable's and // stores the result in innerJoinedTable innerJoinTables50, 04(myTable1, myTable2, innerJoinedTable); // Below sorts the innerJoinedTable // on the 6th column. sortTable554(innerJoinedTable); writeCSVTable(innerJoinedTable, ''innerJoinedTable.outputFile.csv'');</p><p>Several novel classes power rapid development with MolBioLib. The primary object that stores data in MolBioLib is Table, which is a container class similar to the Cþþ STL vector class except that each column may store a different data type, through Cþþ11's variadic templates. Variadic templates allow the coding of objects that can accept an arbitrary number of template parameters. However, writing variadic templated objects and functions can become cumbersome (<ref type="bibr" target="#b10">Gregor and Ja¨rviJa¨rvi, 2008;</ref><ref type="bibr" target="#b14">Kalev, 2008</ref>). Therefore, MolBioLib includes the Table object to represent tabular data, a mainstay of bioinformatics data exchange, in an intuitive and easily used fashion. The Table structure was based on the relational database (<ref type="bibr" target="#b3">Codd, 1970</ref>) model, where related data are stored row-wise. Column data types are specified through the template parameters. A Table may be thought of as a generalized vector. It includes data row insertion and retrievals operations that are simple to use. Database-like operations for Table, such as concatenation, filtering and inner and outer joins, are provided. Example usage of a Table is: where the readTSVTable is a function to read a TSV file into a table.</p><p>This tabular grouping of data can be used for many bioinformatics tasks. One example is the Fasta object, derived from the Table object, which stores sequences and their headers. The Fasta object simplifies access to sequence data: The primary object to read text files is ReadOnlyStringFile. The class automatically creates an index of a file, if not already present, so the file may be accessed as if it were a string array. The index file is created by going through the text file once and noting the starting file position of each line in the index file. The index file itself has a fixed length per line, simplifying the process of finding the index position. Thus, to access a line in the text file, the appropriate line in the index file is looked up. Subsequently, the line starting at the file position indicated by the look up is read in. Almost no memory is required in using the index. A ReadOnlyStringFile object functions like an array in which each element is one row of the file. ReadOnlyTSVFile is a particularly useful derived class of ReadOnlyStringFile. The values of each tab-separated field of each row can be accessed by the operator<ref type="bibr">[]</ref>method, returning a vector containing the parsed elements of one row. Applications written with MolBioLib capitalize on the ability of the ReadOnlyStringFile class to hide all the housekeeping chores involved in parsing data from delimited text files. For example, to sample a random subset of a TSV input file, one would code: If a file only needs to be traversed once, sequentially a line at a time, ReadOnlyStringFile can traverse the file without creating an index file. This eliminates the time to build and store an index. The ReadOnlySequencesFile, based on the ReadOnlyStringFile, is a FASTA/FASTQ reader object. It can work in a random access mode or sequentially traverse the file, providing all the read-only operations of the Fasta object, thus greatly simplifying access to sequence read files.Other general objects in MolBioLib include a sparse vector object, e.g. for use in storing sparse coverage, a map facilitator between keys and rows in a Table, and a parameterized type interval object with associated overlap and set functions. A random number generator class that includes a permutation vector is also provided. Other bioinformatics objects included are an alignment object, a Sequence class with operations such as reverse-complementing, a feature object and a peak object for storing local extrema of numeric data. All of these classes have been used to simplify coding of novel bioinformatics analyses.Functions included in MolBioLib are diverse, intended to cover four broad categories: algorithms, file readers and writers for various data types, system utilities and transformation of data types to different data types. Algorithm functions include Table functions, peak detection and statistics. Table functions include smoothing values, sorting and upper_bound and lower_bound of Tables analogous to their vector class counterparts. File reader and writers include those for various alignment formats, including SAM (<ref type="bibr" target="#b18">Li et al., 2009</ref>), Helicos BioSciences' TXT format (<ref type="bibr" target="#b11">Helicos, 2010</ref>), NCBI tabular BLAST output (<ref type="bibr" target="#b19">Madden, 2003</ref>), feature readers for tabular files such as for UCSC's refGene annotation table (refGene.txt;<ref type="bibr">Kent, 2012</ref>), Ensembl's Biomart in TSV format (<ref type="bibr" target="#b7">Flicek et al., 2011;</ref><ref type="bibr" target="#b31">Smedley et al., 2009</ref>) and the GFF format (<ref type="bibr">Wellcome, 2012</ref>), streams for intervals and vectors, tuple streams and writers and Table reader and writers. Peak detection functions for numeric arrays will be discussed in more detail in the ChIP-seq section. System utilities include a powerful command-line parsing system. Various command-line argument types are provided, including numeric and string. Input and output file name argument types provide file checking to ensure all input files are present at run time and to prevent accidental overwrites of output files. Furthermore, the command-line parser automatically records the date and time the program was compiled as well as the command line to simplify documentation of computational steps and pipelines. System utilities also provide functions to transform one data type to another, such as string conversions to and from various data types as well as string splitting (on one or more delimiters). The compiler of choice for MolBioLib is clangþþ version 3.0 and above (<ref type="bibr">Clang, 2012</ref>) using the associated libcþþ library and is available on the Linux, Mac OS X and MS Windows platforms. It supports a large subset of Cþþ11, has very good compiler error messages and is efficient. MolBioLib also works with GNU gþþ 4.7 and above (<ref type="bibr">Gcc, 2012</ref>). Sequence coverage can be used for determining the number of reads mapped to a base or region and also for finding polymorphisms. MolBioLib has a unique coverage tool that outputs strand-specific statistics as well as a count of mismatched bases observed at each position. Coverage can be run on a user-defined set of regions and normalized to the number of million reads in the input reads file. Additionally, coverage can be executed using only the midpoint position to identify where the reads align. Finally, coverage can be run using uniquely aligning reads. Programs are provided to post-process coverage output in various ways, such as multiplying by some constants (either for the whole file or by contig/chromosome), windowing the coverage and converting the coverage to a wiggle file. Coverage output is the input for the ChIP-Seq analysis program discussed next. An experimental ChIP-Seq program with a novel wavelet method is our final example of application of the MolBioLib library. Peak detection is one major next-generation sequencing application. Given an alignment file, this algorithm finds the coverage on each strand at each location, computed either per base or in bins spanning a user-defined number of bases. This is done for both the sample as well as for a background sample or control, and coverage is smoothed using a kernel smoother. One challenge of peak detection is finding peaks having a wide range of widths and heights. We address this by applying a translation-independent wavelet smoother applied at various scales, finding local peaks at each scale, and then ranking putative peaks by using ridge lines that identify peaks detected across multiple scales (<ref type="bibr" target="#b5">Du et al., 2006</ref>). Peaks with a longer ridge length are more isolated from other peaks, because they show up as peaks at various length scales. Optional filters remove low signals and spikes. This peak detection method is included in MolBioLib. Other smoothers, such as Gaussian, are also implemented in MolBioLib. We validated the wavelet peak detector on published H3K4me3 ChIP-Seq data (<ref type="bibr" target="#b24">Myers et al., 2011</ref>). As expected, H3K4me3 peaks are enriched in promoter regions (<ref type="bibr" target="#b40">Zhao et al., 2007</ref>). The percentage of peaks in promoter regions was 57% compared to 33% using the window tag density method (<ref type="bibr" target="#b16">Kharchenko et al., 2008</ref>) and 53% using MACS (<ref type="bibr" target="#b37">Zhang et al., 2008</ref>). Peaks were well defined, with a mean width of 232 bp compared to 2840 bp and 654 bp for the other two methods tested on the same data. There are many other applications included with MolBioLib that address much of the essential bioinformatics analyses done in next-generation sequencing projects. Some of the more common tasks include computing statistics on a list of numbers, creating histogram files from data files (both numeric and string), converting alignment formats. Additional tasks include common operations on FASTA and FASTQ files, such as obtaining a subset, trimming and removing duplicate reads. Moreover, there are programs to combine, print subsets and inner join TSV files. Intersection, subtraction and union operations of text files are also included.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head><p>MolBioLib fills the need for an efficient, reliable and compact Cþþ11 bioinformatics framework. It is portable across many platforms and aligner formats and is fully documented. MolBioLib is unique in offering complete analysis programs for a variety of other very common tasks not addressed by other toolkits, from feature hit counts to coverage to ChIP-Seq. MolBioLib classes offer considerable power and convenience for creating novel analysis applications. A central and very general Table class simulating the functionality of a database eases construction of many programs. The Table class is based on a collection vectors, thus having a small memory overhead compared to other data structures such as a map. Capacity for larger datasets is only limited by the amount of available memory. File readers provide efficient methods to perform ubiquitous file I/O tasks. These classes will have general utility for application development beyond the specific needs of computational biology. As MolBioLib gains adoption, we aim to incorporate many of the applications both user-contributed and those developed for our projects into the main distribution through the SourceForge. net code repository mechanism.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>/</head><figDesc>/ First, read in the ref.fasta file // into refSequence. Fasta refSequence(''ref.fasta'');</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>/</head><figDesc>/ Then apply function f to all sequences // whose header does not have the string // ''chr_Un'' in it (false means not matches): refSequence.applyToHeaderRegex( ''chr_Un'', f, false);</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><figDesc>ReadOnlyTSVFile fileArray(''input.tsv''); size_t numLines ¼ fileArray.size(); // RandomLib below is part of MolBioLib // The numbers are seeds. RandomLib randf(1802, 9373); for (size_t i ¼ 0; i5100; þþi) f size_t randRowNum ¼ randf.randomSize_t(0, numLines-1); vector5string4 tokens ¼ fileArray[randRowNum]; // Process tokens here... } fileArray.close();</figDesc></figure>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">MolBioLib: Cþþ11 framework for rapid development and deployment at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot" n="3"> RESULTS One of the primary goals of MolBioLib is to provide a set of programs that address the most common bioinformatics analyses. Here we describe applications in MolBioLib that address four common bioinformatics analyses: annotating a list of features, counts of hits to features, coverage and ChIP-Seq. We also touch upon additional useful utilities included in MolBioLib. The MolBioLib application addFeaturesToTSVFile performs the very common task of adding gene annotations or more generically &apos;features&apos;, to an input file in which each row describes a genomic interval. Examples of annotations include the refGene.txt file downloadable from UCSC&apos;s genome browser site (Fujita et al., 2011) that contains the gene ID, name, chromosome, strand, and start and stop positions of the transcript. Other annotation files include tabular data from the Ensembl/ Biomart website (Flicek et al., 2011; Smedley et al., 2009), where one can download any set of genes with user-selected attributes such as IDs, names, positions, expression data and protein domain. There are numerous other annotation sources, many of which consist of carefully curated private data, on a topical website, or in a published supplement to a journal article. Other common tabular formats include the BED, PSL and GFF formats (Kent, 2012; Wellcome, 2012). Using addFeaturesToTSVFile, the genomic footprint of any such annotation can be intersected with another TSV file containing genomic intervals. The application will use the genomic interval specified on each row of the input file and find all intersecting feature coordinates (with matching strand, if specified) and add the appropriate annotation(s) to the row in the output. Importantly, this application will take in any input TSV as well as any annotations in TSV form (such as those noted above) and thus may be used on a wide variety of projects. Another common bioinformatics task is to count the number of alignments mapping to a set of features in a TSV file, such as refGene.txt, promoter regions or classes of sequence repeats. For example, we have used this method to quantify the number of reads derived from genic regions, different classes of genomic repeats and from different classes of non-coding RNAs (Sharp et al., 2011). refFeaturesAnalysis offers a number of options, such as shifting the positions of features (e.g. probing hits to upstream UTRs instead of the genes), filtering for a specific set of reads, maximum error in alignments and RPKM normalization (Mortazavi et al., 2008). The input features are printed along with the count of alignments overlapping each input feature and meeting any filtering criteria.</note>

			<note place="foot">T.K.Ohsumi and M.L.Borowsky at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title level="a" type="main">BamTools: a Cþþ API and toolkit for analyzing and managing BAM files</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">W</forename>
				<surname>Barnett</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="1691" to="1692" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title level="a" type="main">ARACHNE: a whole-genome shotgun assembler</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Batzoglou</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="177" to="189" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">Clang: a C language family frontend for LLVM</title>
	</analytic>
	<monogr>
		<title level="j">Clang</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">A relational model of data for large shared data banks</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">F</forename>
				<surname>Codd</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="377" to="387" />
			<date type="published" when="1970" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">SeqAn—an efficient, generic Cþþ library for sequence analysis</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Do¨ringdo¨ring</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinfromatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="10" to="1186" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Improved peak detection in mass spectrum by incorporating continuous wavelet transform-based pattern matching</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Du</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="2059" to="2065" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<analytic>
		<title level="a" type="main">Non-homogeneous models of sequence evolution in the Bioþþ suite of libraries and programs</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Dutheil</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Boussau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Evol. Biol</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">255</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Flicek</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Database issue)</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="800" to="806" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">The UCSC Genome Browser database: update 2011</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">A</forename>
				<surname>Fujita</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="876" to="882" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Database. issue</note>
</biblStruct>

<biblStruct   xml:id="b9">
	<monogr>
		<title level="m" type="main">(2012) GCC, the GNU Compiler Collection</title>
		<author>
			<persName>
				<surname>Gcc</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<monogr>
		<title level="m" type="main">Variadic Templates for Cþþ0x. Special Issue OOPS Track at SAC</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Gregor</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Ja¨rvija¨rvi</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="31" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">Helisphere User&apos;s Guide</title>
		<author>
			<persName>
				<surname>Helicos</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Helicos BioSciences Corporation</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">ISO/IEC 14882:2011</title>
		<author>
			<persName>
				<forename type="first">Iso</forename>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Iec</forename>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Programming Languages Cþþ. International Organization for Standardization</title>
		<meeting><address><addrLine>Geneva, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">Whole-genome sequence assembly for mammalian genomes: Arachne 2</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">B</forename>
				<surname>Jaffe</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="91" to="96" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<monogr>
		<title level="m" type="main">Cþþ Reference Guide|Variadic Templates, Part III—Critique | InformIT</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Kalev</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">The UCSC Table Browser data retrieval tool</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Karolchik</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Hinrichs</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>As</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Furey</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Ts</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Roskin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Km</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Cw</forename>
				<surname>Sugnet</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Haussler</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Wj</forename>
				<surname>Kent</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="493" to="499" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Design and analysis of ChIP-seq experiments for DNA-binding proteins</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">V</forename>
				<surname>Kharchenko</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Biotechnol</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1351" to="1359" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">Systematic and single cell analysis of Xenopus Piwiinteracting RNAs and Xiwi</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">C</forename>
				<surname>Lau</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EMBO J</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="2945" to="2958" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">The sequence alignment/map format and SAMtools</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="2078" to="2079" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">The BLAST sequence analysis tool (eds) The NCBI Handbook</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Madden</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">National Center for Biotechnology Information</title>
		<editor>McEntyre,J. and Ostell,J.</editor>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<monogr>
		<title level="m" type="main">TIGRþþ. Available at www.cbcb.umd.edu/software/pirate/ tigrþþ.shtml (last accessed</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Majoros</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2012-06-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">The genome analysis toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Mckenna</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genome Res</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="1297" to="1303" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<monogr>
		<title level="m" type="main">Net Bio FAQ. Available at bio.codeplex.com/ wikipage?title¼FAQ (last accessed</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">J</forename>
				<surname>Mercer</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2012-06-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">Mapping and quantifying mammalian transcriptomes by RNA-Seq</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Mortazavi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="621" to="628" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">A user&apos;s guide to the encyclopedia of DNA elements (ENCODE)</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">M</forename>
				<surname>Myers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Biol</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">1001046</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Valgrind: a framework for heavyweight dynamic binary instrumentation</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Nethercote</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Seward</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGPLAN 2007 Conference on Programming Language Design and Implementation</title>
		<meeting><address><addrLine>San Diego, California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="89" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<monogr>
		<title level="m" type="main">Java—the Java application launcher</title>
		<author>
			<persName>
				<surname>Oracle</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<monogr>
		<title level="m" type="main">NET Bio. Outercurve Foundation. Available at bio.codeplex.com (last accessed</title>
		<author>
			<persName>
				<surname>Outercurve</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2012-06-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<monogr>
		<title level="m" type="main">The Boost Cþþ Libraries</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Schaling</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<publisher>XML Press</publisher>
			<pubPlace>Laguna Hills, California</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Using Valgrind to detect undefined value errors with bit-precision</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Seward</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Nethercote</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UNSENIX &apos;05 Annual Technical Conference</title>
		<meeting><address><addrLine>Anaheim, California, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">Functional analysis of the microtubule-interacting transcriptome</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">A</forename>
				<surname>Sharp</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Biol. Cell</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="4312" to="4323" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b31">
	<analytic>
		<title level="a" type="main">BioMart—biological queries made easy</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Smedley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Genom</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">22</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b32">
	<analytic>
		<title level="a" type="main">Next-generation sequencing strategies enable routine detection of balanced chromosome rearrangements for clinical diagnostics and genetic research</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">E</forename>
				<surname>Talkowski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Am. J. Hum. Genet</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="page" from="469" to="481" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b33">
	<analytic>
		<title level="a" type="main">libsequence: a Cþþ class library for evolutionary genetic analysis</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Thornton</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="2325" to="2327" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b34">
	<analytic>
		<title level="a" type="main">GenomicTools: a computational platform for developing high-throughput analytics in genomics</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Tsirigos</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="282" to="283" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b35">
	<analytic>
		<title level="a" type="main">(2012) The NCBI Cþþ Toolkit</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Van Heesch</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CPP_DOC</title>
		<editor>html. Vatakov,D.</editor>
		<imprint>
			<date type="published" when="2011-06-12" />
		</imprint>
	</monogr>
	<note>last. accessed</note>
</biblStruct>

<biblStruct   xml:id="b36">
	<monogr>
		<title level="m" type="main">(2012) GFF. In GFF: an Exchange Format for Feature Description</title>
		<author>
			<persName>
				<surname>Wellcome</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b37">
	<monogr>
		<title level="m" type="main">Model-based analysis of ChIP-Seq (MACS)</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b38">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Genome Biol</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">137</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b39">
	<analytic>
		<title level="a" type="main">Genome-wide identification of polycomb-associated RNAs by RIP-seq</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Zhao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Cell</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="939" to="953" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b40">
	<analytic>
		<title level="a" type="main">Whole-genome mapping of histone H3 Lys4 and 27 trimethylations reveals distinct genomic compartments in human embryonic stem cells</title>
		<author>
			<persName>
				<forename type="first">X</forename>
				<forename type="middle">D</forename>
				<surname>Zhao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cell Stem Cell</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="286" to="298" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>