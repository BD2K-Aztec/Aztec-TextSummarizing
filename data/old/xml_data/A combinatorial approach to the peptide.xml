
<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/joey/Project/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.2-SNAPSHOT" ident="GROBID" when="2017-08-10T23:44+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Systems biology A combinatorial approach to the peptide feature matching problem for label-free quantification</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Hao</forename>
								<surname>Lin</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Lin</forename>
								<surname>He</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Bin</forename>
								<surname>Ma</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">David</forename>
								<forename type="middle">R</forename>
								<surname>Cheriton</surname>
							</persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Systems biology A combinatorial approach to the peptide feature matching problem for label-free quantification</title>
					</analytic>
					<monogr>
						<imprint>
							<biblScope unit="volume">29</biblScope>
							<biblScope unit="issue">14</biblScope>
							<biblScope unit="page" from="1768" to="1775"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1093/bioinformatics/btt274</idno>
					<note type="submission">Received on February 24, 2013; revised on May 7, 2013; accepted on May 8, 2013</note>
					<note>BIOINFORMATICS ORIGINAL PAPER Associate Editor: Martin Bishop Contact: binma@uwaterloo.ca Supplementary information: Supplementary data are available at Bioinformatics online.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Motivation: Label-free quantification is an important approach to identify biomarkers, as it measures the quantity change of peptides across different biological samples. One of the fundamental steps for label-free quantification is to match the peptide features that are detected in two datasets to each other. Although ad hoc software tools exist for the feature matching, the definition of a combinatorial model for this problem is still not available. Results: A combinatorial model is proposed in this article. Each pep-tide feature contains a mass value and a retention time value, which are used to calculate a matching weight between a pair of features. The feature matching is to find the maximum-weighted matching between the two sets of features, after applying a to-be-computed time alignment function to all the retention time values of one set of the features. This is similar to the maximum matching problem in a bipartite graph. But we show that the requirement of time alignment makes the problem NP-hard. Practical algorithms are also provided. Experiments on real data show that the algorithm compares favorably with other existing methods.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In proteomics, a quantification experiment compares two or more biological samples with discover peptides that have significant quantity changes across the samples (<ref type="bibr" target="#b9">Heck and Krijgsveld, 2004</ref>). Such an experiment can potentially reveal important biomarkers that are relevant to the condition change across the samples (such as comparing a group of disease samples with a control group), and it is becoming an important tool for modern health research. In the LC–MS (liquid chromatography–mass spectrometry) experiment for peptide quantification, the LC separates the peptides in the complex sample according to the peptides' hydrophobicity and elutes them at different retention time. Then the MS measures all the mass values (more precisely, the mass-to-charge ratio) of the co-eluting peptides and produces a mass spectrum at each scanned retention time. From the raw LC–MS data, many 'peptide features' are detected computationally (<ref type="bibr" target="#b29">Zhang et al., 2009</ref>). Each correctly detected feature corresponds to a peptide in the sample and mainly consists of three pieces of information: the mass, the retention time and the signal intensity. For the same peptide, the signal intensity is approximately proportional to the abundance of the peptide in the sample. Thus, if one can confidently match the two features of the same peptide in the two samples, the peptide's quantity change can be estimated from the intensity ratio. Two major experimental approaches exist for peptide quantification: isotopic labeling and label-free (<ref type="bibr" target="#b26">Timms and Cutillas, 2010</ref>). They differ mostly by how the peptide features from the two samples are matched. In the isotopic labeling approach, two samples are labeled with different isotopic reagents and mixed together before the LC–MS experiment. For most commercially available labeling reagents, the same peptides from the two samples appear at almost the same retention time and their matching becomes computationally simple. Although the labelfree method does not label the samples, it measures the two samples in separate LC–MS runs. Because no isotopic labeling step is needed, the complexity of the experiment is greatly reduced. However, this also imposes a greater computational challenge for the peptide feature matching. The main difficulty of the feature matching for the label-free method is rooted in the inadequate reproducibility of the LC retention time. Because of factors such as aging, packing and contamination of the LC column, together with additional variability during experiment such as temperature, gradient shape and mixing physics, the retention time from different runs often shows large shifts and distortions. To match peptide features by using their mass and retention time information, the shifts and distortions need to be corrected. This is usually carried out by finding a monotonically increasing function f that maps the time t of one sample to the time f(t) of another. This process is often called the retention time alignment, or simply, time alignment (<ref type="bibr" target="#b5">Cappadona et al., 2012;</ref><ref type="bibr" target="#b14">Lange et al., 2008;</ref><ref type="bibr" target="#b28">Vandenbogaert et al., 2008</ref>). Note that if the feature matching is available, the time alignment can be solved by fitting the times of the matched features with a smooth function. On the other hand, if the time alignment is known, the feature matching can be carried out by comparing the mass and the corrected time differences between features in the two samples. Although this is still not a trivial problem because of the existence of noise and close by features, its solution is not dauntingly difficult. The real challenge of the feature matching problem lies in the mutual dependence between the time alignment function and the feature matching. In the literature, the time alignment and the feature matching are usually dealt with in two separate steps. Most researches in *To whom correspondence should be addressed. the literature used heuristic algorithms to find either an initial set of matched feature pairs, or an initial time alignment function. Then they are used to find a new time alignment function or a new set of matched feature pairs, respectively. Naturally, such a procedure can be repeated iteratively to, hopefully, get more and more accurate result. This approach was typified by<ref type="bibr" target="#b15">Li et al. (Li et al., 2005</ref>), which matched features with similar m/z values as the initial feature matching.<ref type="bibr" target="#b11">Kirchner et al. (2007)</ref>used the robust point matching method to find an initial feature matching, and then carried out smooth monotone regression to find time alignment. When there are significant time shifts and distortions, as well as the present of noisy false features, the finding of the initial set of feature matching in the aforementioned approaches can become challenging. Note that this problem can be solved if the peptides of all the features are known. Then the features can be matched confidently by checking their peptide identities. Such approaches have already been proposed in previous research (<ref type="bibr" target="#b7">Fischer et al., 2006;</ref><ref type="bibr" target="#b27">Tsou et al., 2010</ref>). However, this requires additional MS/MS duty cycles of the instrument, which produce the MS/ MS spectra for the identification of the peptides. This reduces the number of MS scans at the same time. As a result, many of the low-abundance peptides from the limited amount of biological samples may not produce strong enough signal in the LC–MS data and become undetectable. Therefore, if time alignment can be achieved without requiring MS/MS, it is advantageous to perform quantification without MS/MS. The peptides can be identified in a separate LC–MS/MS run after the quantification, possibly with an inclusion list that targets the quantified peptide features, and using a less precious sample. In fact, there are even proposals in the literature to identify peptides purely based on the m/z and the aligned retention time of a peptide feature (<ref type="bibr" target="#b12">LaMarche et al., 2013</ref>). This application definitely requires the time alignment without MS/MS. For these reasons, in this article, we assume the peptide identities are unknown to the alignment algorithm. Other researchers focused on finding an initial time alignment function.<ref type="bibr" target="#b13">Lange et al. (2007)</ref>assumed that the time alignment is a linear function: fðtÞ ¼ a Â t þ b. A pair of coefficients ða i , b i Þ was calculated from every two pairs of possibly matched features. The correct coefficients (a,b) were estimated by finding a dense cluster of all the calculated ða i , b i Þ. Noticing the time alignment is usually non-linear, a number of publications (<ref type="bibr" target="#b3">Bellew et al., 2006;</ref><ref type="bibr" target="#b4">Bylund et al., 2002;</ref><ref type="bibr" target="#b10">Jaitly et al., 2006;</ref><ref type="bibr" target="#b17">Mueller et al., 2007;</ref><ref type="bibr" target="#b19">Pluskal et al., 2010;</ref><ref type="bibr" target="#b20">Podwojski et al., 2009;</ref><ref type="bibr" target="#b21">Radulovic et al., 2004;</ref><ref type="bibr" target="#b22">Silva et al., 2005</ref>) only assumed local linearity of the time alignment, and applied linear regression on each local time window of the data. These works mostly differ at the methods used for local linear regression, and for connecting the local linear regression results into a global time alignment function. Although many of these reviewed methods have been used in practice, none of them defined a clear optimization goal for the peptide feature matching problem. There were usually biological justifications for each step of these published methods. But the property of the final output of a method was unclear. The situation is different from the common practice in traditional algorithmic research, where the optimization goal is usually specified mathematically before the algorithm is being developed. This situation is not uncommon in many emerging bioinformatics areas (including peptide quantification) because the biologists often need to have a solution quickly once an experimental method is invented, in which case an ad hoc solution has its value. Moreover, given the complexity of biology, the formulation of a tidy mathematical model is often difficult. But there are certainly disadvantages about this ad hoc type of research. An immediate one is that the final outcome of the algorithms is unpredictable without running the software on a specific input. As such, the performance of the algorithm remains at the mercy of the implementation details such as the choice of (many) parameters and sometimes even special considerations hard-coded in the software by a junior programmer to handle a special case of the training (and testing) data. Consequently, a method developed in one laboratory has the tendency to overfit the data of the laboratory and may not work as well in another laboratory or on a future instrument. We advocate that whenever possible, a combinatorial problem should be clearly defined. The separation of the problem formulation, the algorithm development and the program implementation can help reduce the aforementioned overfitting tendency. The field knowledge of the biologists should be used extensively and (almost) exclusively during the problem formulation stage to specify the desired property of the solution. And the algorithm development should strive to compute a solution that meets the specified property, instead of fitting the data that happen to be in the researcher's hands. The first purpose of this article is to provide a clearly defined combinatorial model for the feature matching problem in Section 2. We will then prove that the feature matching problem is NP-hard in Section 3. In Section 4, a slightly modified optimization goal is proposed, under which a polynomial time algorithm is presented. We show that the solution of the modified problem helps determine an upper-bound and a lower-bound of the optimal solution of the feature matching problem. This results in a practical algorithm for the feature matching problem with a performance guarantee for each given instance. In Section 5, the optimization goal is amended to control the smoothness of the time alignment function for feature matching. A polynomial time algorithm is also presented. Finally, Section 6 examined the performance of the algorithm on real LC–MS data. Not only is the proposed model tidy but the algorithm's performance also compares favorably with other existing methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">THE MAXIMUM FEATURE MATCHING PROBLEM</head><p>In this section, we formulate peptide feature matching as a combinatorial optimization problem. A peptide feature p is a 2-tuple ðmðpÞ, tðpÞÞ, where m(p) indicates the mass and the t(p) indicates the retention time of the feature in an LC–MS experiment. We assume both m(p) and t(p) are integers, as real numbers can be discretized by allowing a small rounding error. A sample consists of a set of features fp 1 , p 2 ,. .. , p n g. Let S and S 0 be two samples and their retention time range from 1 to T. A time alignment function that maps the time of S to the time of S 0 is a monotonically increasing function f : ½1, T ° ½1, T such that f ð1Þ ¼ 1 and fðTÞ ¼ T. As aforementioned, the retention time of a peptide cannot be measured accurately. First, the unavoidable variations of LC conditions in the two runs can cause systematic drifts of the retention time for all peptides. This systematic error is modeled by the time alignment function f. Second, the retention time of an individual peptide may change independently from other peptides, causing a random error. Suppose two features p 2 S and p 0 2 S 0 are from the same peptide in the two samples S and S 0. Then jtðp 0 Þ À f tðpÞ ð Þj models the random error. After a proper time alignment, the random error is usually small. For example, if two LC runs are conducted on the same LC instrument under the same experimental condition, and each lasts for 1 h, then the random error is often 51 min after the time alignment. For every two features, p 2 S and p 0 2 S 0. The matching quality of p and p 0 is a non-negative function wð m , t Þ, where m ¼ jmðp 0 Þ À mðpÞj and t ¼ jtðp 0 Þ À fðtðpÞÞj. The function w is also called a weight function. One example of the weight function is the unit weight function, denoted by w I. Let Á m ! 0 and Á t ! 0 be two thresholds on the allowed mass and time errors, respectively. The unit weight function is</p><formula>w I ð m , t Þ ¼ 1, if m Á m and t Á t , 0, otherwise: &amp;</formula><p>The unit weight function essentially treats a pair of features as a match if and only if their mass and time differences are within the allowed error tolerances. A peptide feature matching, or simply, a feature matching, is a bijective mapping between two subsets P &amp; S and P 0 &amp; S 0. More specifically, a feature matching provides a set of feature pairs, M &amp; fðp, p 0 Þ j p 2 S, p 0 2 S 0 g, such that each feature appears in at most one pair in M. Given a time alignment function f and a weight function w, the total weight of the matching M, is defined as</p><formula>wðMÞ ¼ X ðp, p 0 Þ2M</formula><p>w jmðp 0 Þ À mðpÞj, jtðp 0 Þ À f ðtðpÞÞj ð Þ :</p><p>For label-free quantification, the two studied samples share most of their peptides, and the biological experiments are optimized to minimize the noise and the mass and retention time errors. When the peptide identities for the peptide features are unknown, the most natural combinatorial goal for peptide feature matching is to maximize the total weight of the matching. The maximum feature matching problem (MFM) is, therefore, defined as follows: given two samples S and S 0 and a weight function w, find a time alignment function f and a feature matching M, such that w(M) is maximized. Note that if f is given, MFM can be easily reduced to the maximum matching problem in a bipartite graph. In the reduction, each feature corresponds to a vertex, and the two sets S and S 0 are the two vertex sets of the graph. The edge weight between each pair of features is defined by the weight function w. In particular, when w is the unit weight function, the reduction results in the unweighted version of the maximum matching problem. It is well known that polynomial time algorithms exist for maximum matching, for both weighted and unweighted versions (<ref type="bibr" target="#b8">Fredman and Tarjan, 1987;</ref><ref type="bibr" target="#b16">Mucha and Sankowski, 2004</ref>). However, for MFM, the time alignment function f needs to be computed simultaneously with the feature matching. This makes MFM a much harder problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">MAXIMUM FEATURE MATCHING IS NP-HARD</head><p>THEOREM 3.1. The maximum feature matching problem is NP-hard under the unit weight function. PROOF. The proof can be found in Supplementary Appendix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">A PRACTICAL ALGORITHM FOR MAXIMUM FEATURE MATCHING</head><p>In this section, we develop a practical algorithm for MFM. This is achieved by studying a slightly modified version of MFM. Instead of requiring the matching to be a bijective mapping, the new problem only requires the matching to be a surjective mapping. More specifically, a surjective matching M Ã is a subset of fðp, p 0 Þ j p 2 S, p 0 2 S 0 g, such that a feature p 2 S appears at most once in M Ã. However, it is possible that a feature p 0 2 S 0 appears multiple times. Given a time alignment function f and a weight function w, the weight of the surjective matching M Ã can be defined in the same way as in the MFM problem:</p><formula>wðM Ã Þ ¼ X ðp, p 0 Þ2M Ã w jmðp 0 Þ À mðpÞj, jtðp 0 Þ À fðtðpÞÞj ð Þ :</formula><p>Given two samples and a weight function w, the maximum surjective feature matching problem (SFM) computes a time alignment function and a surjective matching M Ã , such that wðM Ã Þ is maximized. We next present a polynomial time algorithm to the SFM problem. For a sample S and a time i, let S i ¼ fp 2 SjtðpÞ ¼ ig be the subset of features at time i. Let S i ¼ fp 2 SjtðpÞ ig be the subset of features with time at most i. Let d i, j be the maximum weight of a surjective matching between S i and S 0 that can be achieved by a time alignment function satisfying fðiÞ ¼ j. As the time of all features in S i is equal to i and fðiÞ equals to j, d i, j can be easily computed by finding the best matching of each p 2 S i separately. Let D i, j be the maximum weight of a surjective matching between S i and S 0 that can be achieved by a time alignment function satisfying fðiÞ j. If fðiÞ5j, then clearly D i, j ¼ D i, jÀ1. If fðiÞ ¼ j, then the maximum surjective matching includes the maximum surjective matching from S iÀ1 to S 0 , and the maximum surjective matching from S i to S 0. Therefore, D i, j ¼ D iÀ1, j þ d i, j. Combining the two cases, we know that D i, j ¼ maxfD i, jÀ1 , D iÀ1, j þ d i, j g: With this recurrence relation, it is clear that the SFM problem can be computed with dynamic programming. The algorithm is outlined as follows. The optimal time alignment function f, as well as the surjective matching, can be computed by a standard backtracking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm DP-SFM</head><p>1. For every 1 i T and 1 j T 2. Compute d i, j 3. Let D i, 0 ¼ 0 and D 0, i ¼ 0 for every 0 i T. 4. For i from 1 to T 5. For j from 1 to T 6. Let D i, j ¼ maxfD i, jÀ1 , D iÀ1, j þ d i, j g 7. Output D T, T as the maximum weight of the surjective matching.</p><p>After tracing back, all ði, jÞ pairs on the optimal path form the optimal time alignment function f. THEOREM 4.1. The SFM can be solved in OðT 2 þ T Â jSjÂ jS 0 jÞ time by algorithm DP-SFM. PROOF. The correctness of the algorithm follows from the discussion earlier in the text. We only need to prove the time complexity. The computation of each d i, j in line 2 takes at most O jS i j Â jS 0 j ð Þtime. Therefore, the whole for loop at lines 1 and 2 takes time O P 1 i, j T jS i j Â jS 0 j ¼ O T Â jSj Â jS 0 j ð Þ. After d i, j is computed and stored in memory, each execution of line 6 takes constant time. Thus, the for loops from line 4 to line 6 take OðjTj 2 Þ time. g</p><p>Note that the most expensive part of the time complexity in Theorem 4.1 is the time OðT Â jSj Â jS 0 jÞ for the computation of all d i, j. When the weight function w satisfies some properties, it is possible to speed-up the computation of d i, j. COROLLARY 4.2. When the unit weight function w I is used, SFM can be solved in time O T 2 þ T Â jSj þ jSj Â jS 0 j À Á : PROOF. We only need to show that d i, j can be computed with time OðT Â jSj þ jSj Â jS 0 jÞ for all 1 i T and 1 j T. For each p 2 S, let J p ¼ fjj there is p 0 2 S 0 such that jmðp 0 Þ À mðpÞj Á m and jtðp 0 Þ À jj Á t g: Then J p can be computed by the following algorithm:Note that J p is the union of many intervals with equal length. Therefore, there is a simple data structure to store J p so that the union operation in line 3 can be done in O(1) time. The detail of this data structure is provided in the Supplementary Appendix. Thus, the complexity of the above algorithm is OðjS 0 jÞ. After J p is calculated, d i, j can be calculated by d i, j ¼ jfp 2 S i jj 2 J p gj: And the calculation for all 1 i T and 1 j T can be carried out more efficiently with the following algorithm:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm DIJ</head><p>1. For each 1 i T 2. Calculate J p for each p 2 S i with algorithm JP. 3. Let d i, j ¼ 0 for each 1 j T. 4. For each p 2 S i 5. For each j 2 J p 6. Let d i, j ¼ d i, j þ 1.</p><p>As algorithm JP takes OðjS 0 jÞ time for each p 2 S, the accumulated time cost for line 2 is O jSj Â jS 0 j ð Þ. As jJ p j T, line 6 is repeated at most Oð P T i¼1 jS i j Â TÞ ¼ O jSj Â T ð Þtimes. Therefore, the total time complexity for algorithm DIJ is O T Â jSj þ jSj Â jS 0 j ð Þ. g Remark: If we sort S 0 by mass values, then in line 2 of algorithm JP, we can retrieve all p 0 such that jmðp 0 Þ À mðpÞj Á m by a binary search, without enumerating all p 0 2 S 0. Because usually Á m ( R, and jS 0 j4T, this trick provides significant speed gain on real life instances.</p><p>In the rest of this section, we examine the relation between the SFM and the MFM problems. LEMMA 4.3. Suppose two instances of the SFM and MFM share the same input. Then the weight of the maximum feature matching (MFM) is less than or equal to the weight of the maximum SFM. PROOF. A bijective mapping is also surjective. Thus, a solution of MFM is also a solution of SFM. g</p><p>On the other hand, let M Ã &amp; fðp, p 0 Þ j p 2 S, p 0 2 S 0 g be a solution for SFM. We can easily modify M Ã into a suboptimal solution for MFM by selecting only one pair of features from M Ã for every p 0 2 S 0. In fact, if a better suboptimal solution is desired, the following algorithm can be used to compute a suboptimal solution of MFM based on the optimal solution of SFM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm SMFM</head><p>1. Compute an optimal solution for SFM using the same input. Let f be the optimal time alignment function. Let W be the optimal weight. 2. Let ~ wðp, p 0 Þ ¼ w jmðp 0 Þ À mðpÞj, jtðp 0 Þ À fðtðpÞÞj ð Þ for every p 2 S and p 0 2 S 0. 3. Treat ~ wðp, p 0 Þ as the edge weight in a complete bipartite graph S Â S 0 , and compute a maximum bipartite matching. 4. Output the maximum bipartite matching as the suboptimal solution of MFM, and W as the upper bound of the optimal weight. THEOREM 4.4. Algorithm SMFM computes a suboptimal solution for MFM, and an upper bound for the optimal weight. PROOF. The theorem is an immediate consequence of Lemma 4.3.</p><p>As algorithm SMFM outputs both a suboptimal solution and an upper bound for the optimal weight, one can effectively assess the performance of the algorithm for each given instance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">VARIATIONS OF THE MAXIMUM FEATURE MATCHING PROBLEM</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Weight function</head><p>The unit weight function w I is conceptually simple, and the mass and time error thresholds Á m and Á t can be easily determined by the technician who operates the instrument according to experience. However, it is sometimes desirable to use a continuous weight function to give different weight to different time errors. It has been shown that in real data, the random retention time error after the time alignment satisfies a normal distribution (<ref type="bibr" target="#b6">Felinger, 1998</ref>). Let i ¼ tðp 0 i Þ À fðtðp i ÞÞ be the random time errors of a pair of matched features ðp i , p 0 i Þ after the time</p><formula>alignment. Then Prð i Þ ¼ 1 ffiffiffiffi 2 p e À 1 2 i ð Þ 2</formula><p>. Assume the random error of different features is independent to each other, then the probability of all the errors in the matching is</p><formula>Q n i¼1 1 ffiffiffiffi 2 p e À 1 2 i ð Þ 2 :</formula><p>By taking the logarithm, it is easy to see that maximizing the probability aforementioned is equivalent to maximizing P n i¼1 À 2 i : As the weight function needs to be non-negative, we define the following weight function w 2 :</p><formula>w 2 m , t ð Þ¼ Á 2 t À 2 t , if m Á m and t Á t ,</formula><p>0, otherwise: &amp;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Gap penalty</head><p>In the definition of the MFM and SFM problems, not much restriction is put on the time alignment function f, except that it has to be monotonically increasing. However, it is sometimes beneficial to have some smoothness requirement for f. This is mostly for a practical concern: a smooth function needs fewer data points to fit than an arbitrary function does. Let ½l i , r i  ði ¼ 1,. .. , kÞ be the maximal time intervals such that r i À l i 41 and f(t) remain constant in each interval. These are called the type-I gaps. The gap length for ½l i , r i  is r i À l i. Let ½l 0 i , r 0 i  ði ¼ 1,. .. , k 0 Þ be the maximal time intervals such that there is no t such that fðtÞ 2 ½l 0 i , r 0 i . These are called the type-II gaps. The gap length for ½l 0 i , r 0 i  is l 0 i À r 0 i þ 1. By requiring f to be smooth, we essentially want to penalize these two types of gaps with a gap penalty function gðkÞ40 for a length-k gap. This is analogous to the gaps in the pairwise sequence alignment. But a key difference is that here we prefer many smaller gaps over a few large gaps, which is the opposite of the sequence alignment. As a result, although the sequence alignment normally used a concave gap penalty function, here we choose to use a convex gap penalty function, such as gðkÞ ¼ k 2. And the total gap penalty of the time alignment function f is defined as</p><formula>gð fÞ ¼ X k i¼1 gðr i À l i Þ þ X k 0 i¼1 gðr 0 i À l 0 i þ 1Þ:</formula><p>The gapped-MFM problem is to find a bijective feature matching M and a time alignment f to maximize score ðM, f Þ ¼ wðMÞ À gð f Þ: Similarly, the gapped-SFM problem is to find a surjective feature matching M Ã and a time alignment f to maximize score ðM Ã , f Þ ¼ wðM Ã Þ À gð f Þ: We design a dynamic programming algorithm for the gappedSFM problem. Let K40 be the maximum allowed gap length. Let S i , S i and d i, j be as defined in Section 4. Let N i, j be the maximum score achieved by features in S i and a time alignment function satisfying f ðiÞ ¼ j and f ði À 1Þ5j. Let M i, j be the maximum score achieved by features in S i and a time alignment function satisfying f ðiÞ ¼ j. From the definition of N i, j , we know that ½ f ði À 1Þ þ 1, f ðiÞ À 1 is a probable type-II gap. Let k ¼ f ðiÞ À f ði À 1Þ À 1 be the gap length. Then, f ði À 1Þ ¼ fðiÞ À k À 1 ¼ j À k À 1; therefore,</p><formula>N i, j ¼ max 0 k K fM iÀ1, jÀkÀ1 þ d i, j À gðkÞg ð1Þ</formula><p>To compute M i, j , assume that i À k is the least number such that f ði À kÞ ¼ j. Then ½i À k, i is a probable type-I gap; therefore,</p><formula>M i, j ¼ max 0 k K fN iÀk, j þ X i l¼iÀkþ1 d l, j À gðkÞg ð2Þ From Equations (1)</formula><p>and (2), it is straightforward to develop a dynamic programming algorithm to compute N i, j and M i, j simultaneously. The time complexity will be OðT 2 KÞ plus the time needed by computing d i, j. Therefore, for a general weight function w, the time complexity is OðT 2 K þ T Â jSj Â jS 0 jÞ. Here, the algorithm and proof details are omitted. As MFM is NP-hard, gapped-MFM with a general gap penalty is also NP-hard. Algorithm SMFM in Section 4 can be modified to provide a suboptimal solution for gapped-MFM and an upper bound to the optimal score. The only required modification is to replace SFM by gapped-SFM in line 1 of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPERIMENTAL RESULTS</head><p>The performance of our algorithms was compared with three other state-of-the-art software tools, msInspect (<ref type="bibr" target="#b3">Bellew et al., 2006</ref>), MZmine2 (<ref type="bibr" target="#b19">Pluskal et al., 2010</ref>) and MultiAlign (<ref type="bibr" target="#b12">LaMarche et al., 2013</ref>) by using real LC–MS datasets. Our algorithms include (i) algorithm SMFM with the weight function w 2 and (ii) the algorithm with weight function w 2 and a gap penalty gðkÞ ¼ 10k 2 , as described in Section 5. For the rest of the section, the first algorithm will be denoted by SMFM, and the second algorithm will be denoted by SMFM-g. Five LC–MS datasets produced from the yeast proteome by three different laboratories were chosen for our comparison purpose. These were all public datasets made available by previous publications (<ref type="bibr" target="#b2">Askenazi et al., 2011;</ref><ref type="bibr" target="#b18">Nagaraj et al., 2012;</ref><ref type="bibr" target="#b25">Swaney et al., 2008</ref>). The names of the datasets and the number of features detected by msInspect in each of them are listed in<ref type="figure" target="#tab_1">Table 1</ref>. These five datasets are aligned with one another under different settings. More specifically, the alignments Coon1.F3 versus Coon2.F4 and Mann.1 versus Mann.2 are datasets from the same laboratory on the same instrument in the same experiment. These reflect the easiest test cases, as the LC conditions do not vary too much. The alignments iPRG versus Coon2.F4 and Coon2.F4 versus Mann.1 reflect the most challenging test cases, as the aligned datasets were from different laboratories and the LC conditions across different laboratories present the largest possible variations. However, as they were all produced from the yeast proteome, there should be a significant number of peptides shared by the datasets. Therefore, a robust feature matching algorithm should still be able to match these common peptides' features, despite the existence of large retention time distortion and noises. More detailed information about the datasets and the justification of selecting these particular four pairs of datasets for the alignments can be found in Supplementary Appendix. For each dataset, the MS/MS spectra were used to identify peptides with the PEAKS 6 software (<ref type="bibr" target="#b30">Zhang et al., 2012</ref>). Parameters of the database search can be found in Supplementary Appendix. The peptides identified with false discovery rate 1% that matched only one feature in the LC–MS data were selected as the control set. The purpose of this controlmsInspect, MZmine2 and MultiAlign, was used to produce the pairwise time alignment for iPRG versus Coon2.F4, Coon2.F4 versus Mann.1, Coon1.F3 versus Coon2.F4 and Mann.1 versus Mann.2, respectively. The m/z and retention time error tolerance of each software were set to be the same whenever possible. More specifically, Á t was set to be 5 min for the samples from different laboratories (iPRG versus Coon2.F4 and Coon2.F4 versus Mann.1) and 2 min for the ones from the same laboratory (Coon1.F3 versus Coo2.F4 and Mann.1 versus Mann.2). Other unique parameters of a software tool were set separately to achieve its own best performance:</p><p>(1) SMFM: Á m ¼ 15 ppm (part-per-million).</p><p>(2) SMFM-g: Á m ¼ 15 ppm, gap penalty gðkÞ ¼ 10k 2 .</p><p>(3) msInspect: spline mode, mass error tolerance ¼ 15 ppm.</p><p>(4) MZmine2: RANSAC algorithm mode, m/z tolerance ¼ 10 ppm (error tolerance 15 ppm crashed the software), retention time tolerance (before correction) ¼ 50 min, number of RANSAN iterations ¼ auto, minimal number of points ¼ 20%, threshold value ¼ 3 and same charge state was required.</p><p>(5) MultiAlign: mass tolerance ¼ 15 ppm, and hybrid recalibration was selected.</p><p>The peptide features detected by msInspect from the LC–MS raw data were exported as the input of SMFM, SMFM-g and msInspect. MultiAlign and MZmine2 do not accept features detected by msInspect. Therefore, MultiAlign used the features detected by DeconTools (<ref type="bibr" target="#b23">Slysz et al., 2010</ref>), which was the preferred feature detection method of MultiAlign. MZmine2 used its own feature detection result. The performance of each method was measured quantitatively with the average aligned time error of the true feature pairs. More specifically, for each pair of features p ¼ ðmðpÞ, tðpÞÞ and p 0 ¼ ðmðp 0 Þ, tðp 0 ÞÞ that were from the two compared samples and shared the same peptide, the aligned time error was calculated as jfðtðpÞÞ À tðp 0 Þj, where fðÁÞ was the retention time alignment function calculated by each software tool. The average aligned time error and the percentage of correctly aligned 'true' feature pairs of each software applying on each pair of datasets are provided in<ref type="figure">Table 2</ref>. A feature pair is considered as correctly aligned if their aligned retention time difference is below the specified threshold in each experiment. Although the five aforementioned software tools did not use the peptide identification deliberately, just for curiosity, the average aligned time errors obtained by a simple method (Polynomial-4) that used the peptide identification were also added in<ref type="figure">Table 2</ref>. By using the true feature pairs derived fromthe peptide identification, the Polynomial-4 method fitted a fourth degree polynomial as the time alignment function (the second and third degree were also tried, but the results were not as good as the fourth degree). Note that this was an unfair comparison because Polynomial-4 used additional information. Nevertheless,<ref type="figure">Table 2</ref>showed that our new methods SMFM and SMFM-g also compared favorably with this polynomial fitting. This indicated that the time alignment function could not be fit accurately by a low-degree polynomial, and further justified the use of a monotonically increasing function instead of any specific simple function in our SMFM model. For the alignment of Mann.1 versus Mann.2, both msInspect and MZmine2 failed (msInspect crashed and MZmine2 returned no result). We suspected that it was due to the large data size of Mann's datasets (<ref type="figure" target="#tab_1">Table 1</ref>). Our new algorithms (SMFM and SMFM-g) finished successfully in 51 min with 560 MB of memory usage.<ref type="figure" target="#fig_1">Figure 1</ref>illustrates the relative performance of the six compared methods visually. The resulting time alignment from each software was plotted together with the 'true' peptide feature pairs (represented by blue circles). Retention time of both samples were scaled to 3600 s in the figure. All the possible feature pairs that had a mass difference 515 ppm were also plotted as gray crosses. Thus, intuitively, the software tools were using these gray crosses to compute a time alignment function. The better software's result should fit the trend of blue circles. Similar figures for the alignments between biological replicates, Coon1.F3 versus Coon2.F4 and Mann.1 versus Mann.2, were plotted in Supplementary<ref type="figure">Figure S5</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION AND DISCUSSION</head><p>The maximum feature matching problem (MFM) is formulated to match the peptide features in label-free peptide quantification. To our knowledge, this is the first combinatorial model for the problem. We show that the problem is NP-hard, and we provide a practical algorithm that has a performance guarantee for each instance. Experiments on real data demonstrate that the algorithm has a better performance comparing with other software in the literature. Although recognizing the contribution and the need of the ad hoc software in bioinformatics research, we advocate that, whenever possible, the bioinformatics problem should have a clear combinatorial definition. This old practice in algorithmic research can help reduce the risk of overfitting the training data in the process of seeking for a better algorithm. It also helps predict the performance of an algorithm before running the software associated with it. As experienced by many, running a published but undocumented and un-maintained software package can be challenging. For example, during the preparation of this manuscript, 10 published software programs have been tried. However, only 4 of the 10 produced reasonable output. Among the four, the results of msInspect, MZmine2 and MultiAlign were included in the experimental result, whereas another one, OpenMS (<ref type="bibr" target="#b24">Sturm et al., 2008</ref>), used a linear model that clearly could not fit our testing data and, therefore, was not included. Problems encountered by other six programs included crashing, out of memory and reporting error in the middle of the execution. As such, there is a non-negligible risk to compare algorithms with their software implementations. A buggy</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig.1.</head><figDesc>Fig. 1. Comparison of the feature matching software tools on datasets from different laboratories: iPRG versus Coon2.F4 (left) and Coon1.F3 versus Mann.1 (right). The x-axis denotes the retention time in the first sample, and the y-axis denotes the retention time in the second sample. A blue circle stands for a feature pair that is matched according to peptide identification, which is considered as the ground truth. A gray cross represents a possible feature pair matched purely by the precursor mass. The curves are produced by the compared algorithms without knowing the blue circles</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><figDesc>Table 1. The number of features in different samples</figDesc><table>Dataset 
iPRG 
Coon1.F3 
Coon2.F4 
Mann.1 
Mann.2 

Features 
11 430 
5879 
5320 
66 479 
68 128 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><figDesc>Table 2. The comparison of average aligned time errors (in seconds) and the percentages of correctly aligned feature pairs on true peptide features</figDesc><table>Experiment 
SMFM 
SMFM-g 
ms-Inspect 
MZ-mine2 
Multi-Align 
Polynomial-4 </table></figure>

			<note place="foot">ß The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">A combinatorial approach to the peptide feature matching problem at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">H.Lin et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from</note>

			<note place="foot">implementation can inadvertently affect the real performance of an algorithm. Although a feature p is defined by a 2-tuple ðmðpÞ, tðpÞÞ in this article, more information about a peptide feature retrieved from the LC–MS data can be added easily. One only needs to replace m(p) with a vector that includes the other information, and in wð m , t Þ replace m by the difference of the two vectors of the two compared features. For example, the intensity distribution over the isotope peaks and over the retention time can be used to measure the similarity (or matching quality) of two matched features. With this adjustment, the NP-hardness and algorithmic results presented in this article remain the same. In developing bioinformatics tools, researchers aim to find the &apos;real&apos; biological solutions from the input data. However, as the real solution is unknown when the software is used in practice, the optimization goal defined in the bioinformatics problem cannot depend on the real solution, but it is at best an approximation to the property of the real solution. We have demonstrated that by clearly defining such optimization goal as a simple function of the input and the algorithm&apos;s output, not only does the biological problem become a pure combinatorial problem that algorithmic researchers can work on, the performance of the algorithm also compares favorably with the state-ofthe-art ad hoc software packages. In fact, clearly defining the optimization goal is helpful even in the ad hoc solutions. For example, many have proposed to alternatively find a time alignment and a set of matched features by using each other as the input. But there is no guarantee that such iteration will converge or can improve the result. However, if the optimization goal is a simple function of the output, one can then evaluate the current solution with the optimization goal at each step of the iteration, and it stops when the score stops growing.</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct   xml:id="b0">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">Coon2.F4 36.6 (100%) 35.2 (100%) 114.8 (87%) 55.0 (99%) 126.0 (92%) 30.3 (100%) Coon2.F4-Mann.1 63.9 (82%)80%) 78.7 (73%) 66.2 (79%) Coon1.F3-Coon2.F4 8.4 (100%) 7.4 (100%) 11.3 (96%) 21.8 (94%) 27.8 (89%) 8.2 (100%) Mann.1-Mann.2 14.5 (90%) 13.0 (87%) — — 16</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">REFERENCES</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b2">
	<analytic>
		<title level="a" type="main">iPRG 2011: a study on the identification of electron transfer dissociation (ETD) mass spectra</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Askenazi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Biomol. Tech</title>
		<imprint>
			<biblScope unit="page" from="22" to="42" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Suppl</note>
</biblStruct>

<biblStruct   xml:id="b3">
	<analytic>
		<title level="a" type="main">A suite of algorithms for the comprehensive analysis of complex protein mixtures using high-resolution LC-MS</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Bellew</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1902" to="1909" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b4">
	<analytic>
		<title level="a" type="main">Chromatographic alignment by warping and dynamic programming as a pre-processing tool for parafac modelling of liquid chromatography–mass spectrometry data</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Bylund</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Chromatogr. A</title>
		<imprint>
			<biblScope unit="volume">961</biblScope>
			<biblScope unit="page" from="237" to="244" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b5">
	<analytic>
		<title level="a" type="main">Current challenges in software solutions for mass spectrometry-based quantitative proteomics</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Cappadona</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Amino Acids</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="1087" to="1108" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b6">
	<monogr>
		<title level="m" type="main">Data Analysis and Signal Processing in Chromatography</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Felinger</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Elsevier</publisher>
			<pubPlace>San Diego, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b7">
	<analytic>
		<title level="a" type="main">Semi-supervised LC/MS alignment for differential proteomics</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Fischer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="132" to="140" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b8">
	<analytic>
		<title level="a" type="main">Fibonacci heaps and their uses in improved network optimization algorithms</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">L</forename>
				<surname>Fredman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">E</forename>
				<surname>Tarjan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="596" to="615" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b9">
	<analytic>
		<title level="a" type="main">Mass spectrometry-based quantitative proteomics</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">J</forename>
				<surname>Heck</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Krijgsveld</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Rev. Proteomics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="317" to="326" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b10">
	<analytic>
		<title level="a" type="main">Robust algorithm for alignment of liquid chromatographymass spectrometry analyses in an accurate mass and time tag data analysis pipeline</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Jaitly</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Anal. Chem</title>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="page" from="7397" to="7409" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b11">
	<analytic>
		<title level="a" type="main">amsrpm: robust point matching for retention time alignment of LC/MS data with R</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Kirchner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Stat. Softw</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1" to="12" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b12">
	<analytic>
		<title level="a" type="main">Multialign: a multiple LC-MS analysis tool for targeted omics analysis</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">L</forename>
				<surname>Lamarche</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC bioinformatics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page">49</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b13">
	<analytic>
		<title level="a" type="main">A geometric approach for the alignment of liquid chromatography–mass spectrometry data</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Lange</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="273" to="281" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b14">
	<analytic>
		<title level="a" type="main">Critical assessment of alignment procedures for LC-MS proteomics and metabolomics measurements</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Lange</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC bioinformatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">375</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b15">
	<analytic>
		<title level="a" type="main">A software suite for the generation and comparison of peptide arrays from sets of data collected by liquid chromatography-mass spectrometry</title>
		<author>
			<persName>
				<forename type="first">X</forename>
				<forename type="middle">J</forename>
				<surname>Li</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Cell. Proteomics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1328" to="1340" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b16">
	<analytic>
		<title level="a" type="main">Maximum matchings via gaussian elimination</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Mucha</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Sankowski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 45th Annual IEEE Symposium on Foundations of Computer Science. FOCS &apos;04</title>
		<meeting>the 45th Annual IEEE Symposium on Foundations of Computer Science. FOCS &apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="248" to="255" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b17">
	<analytic>
		<title level="a" type="main">SuperHirn–a novel tool for high resolution LC-MS-based peptide/protein profiling</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<forename type="middle">N</forename>
				<surname>Mueller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteomics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="3470" to="3480" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b18">
	<analytic>
		<title level="a" type="main">System-wide perturbation analysis with nearly complete coverage of the yeast proteome by single-shot ultra HPLC runs on a bench top orbitrap</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Nagaraj</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Cell. Proteomics</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="111" to="013722" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b19">
	<analytic>
		<title level="a" type="main">MZmine 2: modular framework for processing, visualizing, and analyzing mass spectrometry-based molecular profile data</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Pluskal</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC bioinformatics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">395</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b20">
	<analytic>
		<title level="a" type="main">Retention time alignment algorithms for LC/MS data must consider non-linear shifts</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Podwojski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="758" to="764" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b21">
	<analytic>
		<title level="a" type="main">Informatics platform for global proteomic profiling and biomarker discovery using liquid chromatography-tandem mass spectrometry</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Radulovic</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Cell. Proteomics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="984" to="997" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b22">
	<analytic>
		<title level="a" type="main">Quantitative proteomic analysis by accurate mass retention time pairs</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">C</forename>
				<surname>Silva</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Anal. Chem</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="2187" to="2200" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b23">
	<analytic>
		<title level="a" type="main">The decontools framework: an application programming interface enabling flexibility in accurate mass and time tag workflows for proteomics and metabolomics</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">W</forename>
				<surname>Slysz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 58th ASMS Conference on Mass Spectrometry and Allied Topics</title>
		<meeting>58th ASMS Conference on Mass Spectrometry and Allied Topics<address><addrLine>Salt Lake City</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b24">
	<analytic>
		<title level="a" type="main">OpenMS–an open-source software framework for mass spectrometry</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Sturm</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC bioinformatics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">163</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b25">
	<analytic>
		<title level="a" type="main">Decision tree–driven tandem mass spectrometry for shotgun proteomics</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">L</forename>
				<surname>Swaney</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Methods</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="959" to="964" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b26">
	<analytic>
		<title level="a" type="main">Overview of quantitative LC-MS techniques for proteomics and activitomics. LC-MS</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">F</forename>
				<surname>Timms</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<forename type="middle">R</forename>
				<surname>Cutillas</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Methods in Molecular Biology</title>
		<imprint>
			<publisher>MS in Proteomics</publisher>
			<biblScope unit="volume">658</biblScope>
			<biblScope unit="page" from="19" to="45" />
			<date type="published" when="2010" />
			<publisher>MS in Proteomics</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b27">
	<analytic>
		<title level="a" type="main">IDEAL-Q, an automated tool for label-free quantitation analysis using an efficient peptide alignment approach and spectral data validation</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">C</forename>
				<surname>Tsou</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Cell. Proteomics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="131" to="144" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b28">
	<analytic>
		<title level="a" type="main">Alignment of LC-MS images, with applications to biomarker discovery and protein identification</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Vandenbogaert</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteomics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="650" to="672" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b29">
	<analytic>
		<title level="a" type="main">Review of peak detection algorithms in liquid-chromatography-mass spectrometry</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Curr. Genomics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">388</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct   xml:id="b30">
	<analytic>
		<title level="a" type="main">PEAKS DB: de novo sequencing assisted database search for sensitive and accurate peptide identification</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mol. Cell. Proteomics</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="111" to="01058" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>