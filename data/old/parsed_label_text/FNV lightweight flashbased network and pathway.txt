Motivation: Network diagrams are commonly used to visualize biochemical pathways by displaying the relationships between genes, proteins, mRNAs, microRNAs, metabolites, regulatory DNA elements, diseases, viruses and drugs. While there are several currently available web-based pathway viewers, there is still room for improvement. To this end, we have developed a flash-based network viewer (FNV) for the visualization of small to moderately sized biological networks and pathways. Summary: Written in Adobe ActionScript 3.0, the viewer accepts simple Extensible Markup Language (XML) formatted input files to display pathways in vector graphics on any web-page providing flexible layout options, interactivity with the user through tool tips, hyperlinks and the ability to rearrange nodes on the screen. FNV was utilized as a component in several web-based systems, namely Genes2Networks, Lists2Networks, KEA, ChEA and PathwayGenerator. In addition, FVN can be used to embed pathways inside pdf files for the communication of pathways in soft publication materials. Availability: FNV is available for use and download along with the supporting documentation and sample networks at
INTRODUCTIONPathway databases such KEGG (), BioCarta (http://www.biocarta.com), WikiPathways () Science Signaling Connection Maps () and UCSDNature Signaling Gateway () communicate over the web: cell signaling, transcriptional and metabolic pathways, as diagrams made of nodes and links. Such diagrams are visualized using different layout algorithms embedded in network viewers implemented with a variety of technologies. The majority of webbased network viewers make use of the Java web technologies. For example, PATIKAweb () uses Java Server Pages (JSP) to retrieve information stored in the manually curated PATIKA database, or passed through a file to generate pathway diagrams using a force-directed algorithm to arrange static images of nodes and edges. Tools such as WebInterViewer () and VisANT () are useful for large protein protein interaction networks utilizing JavaWebStart. However, JavaWebStart runs in a sandbox and does not easily communicate * To whom correspondence should be addressed. with the browser. Other tools, such as jSquid (), are powerful but since they utilize Java Applets they are slow to start and are inconsistent across browsers. Several webbased pathway viewers have been implemented without the use of Java. For example, CellDesigner () used by KEGG creates static network images with hyperlinks. It was used, for example, by BioPP () with Perl and CGI displaying static images with annotations mapped to the nodes as hyperlinks. AVIS (), a network drawing tool that we developed, uses Asynchronous JavaScript and XML (AJAX) and underlying Perl libraries to draw static networks that are rendered using GraphViz. GraphViz () is one of the most commonly used graph drawing tools for displaying pathways. Written in C, GraphViz takes text files as input to render nodes and links for generating a static network image that can be saved in different formats, i.e. scalable vector graphics (SVG), JPEG/PNG/GIF or as a postscript file. While network images can be mapped to hyperlinks, such mapping lacks interactivity such as panning and zooming, or movement of nodes and links with the mouse by the user. SVG can be made interactive but is not universally supported across browsers and is a fading technology. Although somewhat limited, GraphViz has been widely used by leading pathway databases to display their pathways online. For example, Science Signaling Connection Maps and UCSDNature Signaling-Gateway databases use SVG diagrams created with GraphViz. WikiPathways and BioCarta, on the other hand, use static images drawn by hand. The static images in WikiPathways are created manually with PathVisio, a tool that is a part of GenMAPP (). Recently, a light-weight flash network viewer (FNV) for web applications called Cytoscape Web () was launched. This viewer provides a variety of dynamic features. The use of vector graphics, provided through Flash, makes the implementation much more responsive and sharp looking. With Cytoscape, Web uploaded pathways can be altered without changing the input file, whereas a JavaScript application programming interface (API) is provided to alter uploaded networks.