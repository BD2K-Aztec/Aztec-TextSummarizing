We present PARSEC (PAtteRn Search and Contextualization), a new open source platform for guided discovery, allowing localization and biological characterization of short genomic sites in entire eukaryotic genomes. PARSEC can search for a sequence or a degenerated pattern. The retrieved set of genomic sites can be characterized in terms of (i) conservation in model organisms , (ii) genomic context (proximity to genes) and (iii) function of neighboring genes. These modules allow the user to explore, visualize, filter and extract biological knowledge from a set of short genomic regions such as transcription factor binding sites. Availability: Web site implemented in Java, JavaScript and Cþþ, with all major browsers supported. Freely available at lbgi.fr/parsec. Source code is freely available at sourceforge.net/projects/genomicparsec.
INTRODUCTIONGenomic sites are short genomic regions with a defined biological function (e.g. regulation of gene expression, splicing or epigenetic signals). Most genomic sites are represented by degenerated motifs with a scattered distribution and can either be specific to a given species or conserved between species. The characterization of these sites is a major challenge in the exploitation of next-generation sequencing data and in understanding genome expression. The in silico detection of these motifs in complete genomes is associated with a huge amount of noise. Consequently, the development of a computational platform for accurate definition of genomic sites requires the integration of various large-scale biological data resources to filter out false positives. PARSEC (PAtteRn Search and Contextualization) is a modular web service designed for the rapid localization and characterization of genomic sites. The main program exploits an efficient data structure, namely, compressed suffix trees (CST) (), to rapidly localize sequences or degenerated patterns in complete eukaryotic genomes (eight species are currently available: human, mouse, rat, chicken, zebrafish, drosophila, nematode and yeast). This pattern search module is linked to three in-house modules for conservation analysis, genomic context analysis and functional filtering, as well as to the GoMiner functional enrichment tool (). It can be used to filter biologically meaningful genomic sequences, to complement transcriptomic data analysis and to further characterize known genomic sites. In contrast to web services dedicated to genomic pattern searches like TagScan (), or to functional interpretation of genomic regions like GREAT (), PARSEC proposes both search and characterization aspects in a single intuitive interface, guiding the user through the discovery path.The genomic context module, also based on data from UCSC tables (ensGene, EnsemblSource, ensemblToGeneName tRNAs), allows the detection of gene candidates spatially linked to the site of interest. Again, a high level of customization is provided. Analyses can be performed relative to the two gene boundaries or to the transcription start site. Several types of genes are available: protein coding, miRNA, snRNA, snoRNA, tRNA, etc. The user can retrieve all genes in proximity of the site or can choose only the closest gene to the site. The full set of alternative transcripts of proximal genes with their relative distances to the site is also provided and can be visualized through a link to UCSC. For the enrichment module, we developed a layer allowing the use of GoMiner as a simple Java library. It allows the functional characterization of a previously identified set of proximal genes and query sites. This can be useful for identification of processes regulated by a transcription factor for example. The functional filtering step allows the selection of sites potentially related to specific molecular functions, biological processes or cellular components. At each step, the results can be saved as browser extensible data (BED) or comma-separated values (CSV) format files and include various links to external resources [UCSC, Ensembl (for additional information. The algorithmic complexities and running times of the different modules are provided in Supplementary Dataset S1.