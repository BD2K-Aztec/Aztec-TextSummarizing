Motivation: Distinguishing direct from indirect influences is a central issue in reverse engineering of biological networks because it facilitates detection and removal of false positive edges. Transitive reduction is one approach for eliminating edges reflecting indirect effects but its use in reconstructing cyclic interaction graphs with true redundant structures is problematic. Results: We present TRANSWESD, an elaborated variant of TRANSitive reduction for WEighted Signed Digraphs that overcomes conceptual problems of existing versions. Major changes and improvements concern: (i) new statistical approaches for generating high-quality perturbation graphs from systematic perturbation experiments; (ii) the use of edge weights (association strengths) for recognizing true redundant structures; (iii) causal interpretation of cycles; (iv) relaxed definition of transitive reduction; and (v) approximation algorithms for large networks. Using standardized benchmark tests, we demonstrate that our method outperforms existing variants of transitive reduction and is, despite its conceptual simplicity, highly competitive with other reverse engineering methods. Contact
INTRODUCTIONReverse engineering of cellular networks has become a key methodology in analysing and exploiting the increasing amount of data generated by omics technologies (). Whereas the structure of metabolic reaction networks could be reconstructed mainly from genomic informationin great detail for many organisms () knowledge of the topology of regulatory and signal transduction networks is in many cases still incomplete and wiring diagrams even of 'canonical signalling pathways' may differ in different cell lines (). The ultimate goal of reverse engineering methods is the identification of interactions between the involved players (genes, proteins, etc.) by analysing data of systematic and controlled perturbation experiments. The result is a network, in many cases represented as a graph, which can be directed or undirected and * To whom correspondence should be addressed. may have signs and/or weights at its edges. Some algorithms deliver refined representations such as Boolean networks (), reaction networks () or differential equations () but the main result is still the underlying network topology. A simple yet smart method for reverse engineering is based on Transitive Reduction, a graph theoretical method () whose potential for reconstructing regulatory networks was first recognized by. The basic idea is as follows: to reconstruct a regulatory network with n nodes, one first measures the state of the nodes in the wild-type and then performs at least n perturbation experiments: in experiment i node i is perturbed, whereas all other n1 nodes are screened whether they changed their state compared to the wild-type. If a perturbation in i affected j, a directed edge from node i to j, denoted by i  j, is drawn. The complete set of these observed effects in all perturbation experiments yields the perturbation graph. Each edge in the perturbation graph reflects either a direct or an indirect effect of one node upon another. The next step deals with a central issue in network reconstruction, namely identification and removal of edges that represent indirect effects. Transitive reduction as used byaims at finding the minimal (most parsimonious) subgraph that can explain all effects seen in the experiments. Transitive reduction in its most general form allows removal and addition of edges to find the minimum graph (). However, in the context of network reconstruction, one usually focuses on the special case where edges may only be removed, i.e. where one searches for a minimal subgraph explaining the perturbation graph [also known as minimum equivalent graph problem (. Herein, we only consider transitive reduction based on edge removals.determined the minimal subgraph from the perturbation graph by removing all edges i  j for which a (simple) path starting in i and ending in j (not using i  j) can be found, assuming the effect of i on j to be indirect, thus explainable by the path. The resulting graph is the transitive reduction of the perturbation graph. A simple example is depicted in. Every acyclic graph has a unique transitive reduction (with a minimal number of edges;) explaining all measured perturbation effects. The method proposed byis easy to implement but has some drawbacks that might be the reason for its rare application. First, transitive reduction as described above does not consider the full amount of information that is available from perturbation experiments, even when considering only qualitative observations. If a node shows a significant response to a perturbation, one can at least classify the measured effect as 'up' or 'down'. This informationPage: 2161 21602168can be taken into account by adding a sign label to each edge in the perturbation graph, which becomes then a signed directed graph (seesigned version of). Transitive reduction can then be performed in a similar way: an edge i  j is deleted only if there is a path from i to j whose overall sign (product of the signs of the involved edges) corresponds to the sign of this edge. As can be seen in the example in, this may save edges that were mistakenly deleted in the unsigned version. A second drawback of the original approach of transitive reduction is the risk to remove true edges, even in signed perturbation graph. The radical pruning strategy of transitive reduction aims at minimizing false positive (FP) edges in the reconstructed network but it may lead to a high number of false negatives (FNs). This effect becomes visible in networks comprising many (coherent) feed-forward loops where a node may affect another node via direct (edge) and indirect (path) links of the same sign. Since feed-forward loops have been shown to occur frequently in gene regulatory networks (), this property can become a serious limitation of the method. A third shortcoming is the prerequisite that the perturbation graph is acyclica condition that is often not fulfilled in realistic biological networks. If the perturbation graph is cyclic, the solution of transitive reduction is, in general, not unique. As we will see, negative cycles in signed perturbation graphs may bring about even more complications for transitive reduction. In this article, we will present TRANSWESD (TRANSitive Reduction in WEighted Signed Digraphs), a new variant of transitive reduction that seeks to overcome these problems. Generalizations of transitive reduction to signed and cyclic directed graphs have been proposed by other authors (). However, our approach combines and extends existing variants and differs in several key aspects (e.g. use of weighted perturbation graphs, treatment of negative cycles and handling of elementary versus non-elementary paths). We also discuss issues related to the identification of significant perturbation effects, a key step in generating the perturbation graph. Using standardized benchmark tests, we demonstrate that our method outperforms existing variants of transitive reduction and is, despite its conceptual simplicity, highly competitive with other reverse engineering methods.