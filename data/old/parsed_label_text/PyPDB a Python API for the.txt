We have created a Python programming interface for the RCSB Protein Data Bank (PDB) that allows search and data retrieval for a wide range of result types, including BLAST and sequence motif queries. The API relies on the existing XML-based API and operates by creating custom XML requests from native Python types, allowing extensibility and straightforward modification. The package has the ability to perform many types of advanced search of the PDB that are otherwise only available through the PDB website. Availability and implementation: PyPDB is implemented exclusively in Python 3 using standard libraries for maximal compatibility. The most up-to-date version, including iPython notebooks containing usage tutorials, is available free-of-charge under an open-source MIT license via GitHub at https://github.com/williamgilpin/pypdb, and the full API reference is at
IntroductionThe RCSB Protein Data Bank (PDB) represents one of the most comprehensive structural biology information databases openly available to genomics and proteomics researchers (). It provides an online interface for browsing amino acid and genetic sequences, as well as crystallographic structures aggregated from a large number of sources. It also provides sophisticated tools for visualizing protein structure and sequence lineages, aligning sequences and searching for homologies, and it provides links to relevant entries in related databases, such as GenBank and UniProt. The Python scripting language has demonstrated its usefulness to the bioinformatics community as a means of unifying different data sources and analysis tools, allowing diverse data streams to be retrieved, analyzed, and summarized from within the same workflow. This function has been complemented by new interface tools such as the iPython notebook, as well as general-purpose analysis toolkits like Biopython and Biskit (). In this article, we describe an API for the PDB that allows advanced querying of information on PDB entries. Similar utilities exist for programmatic querying of other large bioinformatics databases (including Ensembl, PubChem and UniProt), but, to our knowledge, no such tool currently exists for the PDB (). Our tool facilitates integration of automatic PDB searches within existing Python bioinformatics workflows, and it simplifies the process of performing multiple searches based on the results of existing searches.
ConclusionThe library described here provides direct querying of the PDB using the Python programming language. This API complements the existing PDB GUI and XML API by introducing the ability to directly retrieve information from the PDB from within existing Python bioinformatics workflows. The use of native Python datatypes to represent queries simplifies conducting multiple searches with similar queries, and it allows the individual PDB IDs returned in search results to be examined from within the same programming workflow as the original search. The latest stable release of PyPDB is available on PyPI and can be installed with the command pip install pypdb. The source code of all versions of PyPDB is available at https://github.com/williamgil pin/pypdb, and full documentation is available at http://williamgil pin.github.io/pypdb_docs/html/. iPython notebooks containing usage examples are also available on the GitHub website.Note: Additional functions provided in the documentation.