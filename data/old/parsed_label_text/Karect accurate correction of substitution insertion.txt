Motivation: Next-generation sequencing generates large amounts of data affected by errors in the form of substitutions, insertions or deletions of bases. Error correction based on the high-coverage information, typically improves de novo assembly. Most existing tools can correct substitution errors only; some support insertions and deletions, but accuracy in many cases is low. Results: We present Karect, a novel error correction technique based on multiple alignment. Our approach supports substitution, insertion and deletion errors. It can handle non-uniform coverage as well as moderately covered areas of the sequenced genome. Experiments with data from Illumina, 454 FLX and Ion Torrent sequencing machines demonstrate that Karect is more accurate than previous methods, both in terms of correcting individual-bases errors (up to 10% increase in accuracy gain) and post de novo assembly quality (up to 10% increase in NGA50). We also introduce an improved framework for evaluating the quality of error correction. Availability and implementation: Karect is available at: http://aminallam.github.io/karect.
IntroductionNext-generation sequencing (NGS) technologies generate at decreasing costs large amounts of data for tasks such as de novo genome assembly, resequencing, single-nucleotide polymorphism discovery, DNAprotein interaction discovery and identification of chromosomal rearrangements (). Reads produced by NGS technologies suffer from sequencing errors in the form of substitutions, insertions and deletions of bases, which complicate further processing.summarizes the types of errors in recent NGS technologies. Error correction methods utilize the high data coverage to correct the erroneous bases in reads. Existing methods are classified in five categories: (i) k-spectrum-based methods, such as Lighter (), Blue (), Trowel (), HECTOR (), BLESS (), Musket (), Reptile (), Quake (), Hammer () and the works ofthat decompose reads into the set of all k-mers. Error correction is based on the k-mer frequencies. Variants of these methods are used as preprocessing stages in several assemblers, such as SOAPdenovo (), ALLPATHS-LG (), SGA () and SPAdes (Suffix array/tree-based methods, such as SHREC (), HSHREC () and HiTEC (), are generalizations of k-spectrum methods that support multiple k values. They build a suffix array/tree of all read suffixes and correct errors using the k-mer frequency weights associated with the suffix tree nodes, whereas RACER (is based on the same concepts, without explicitly using a suffix array. Fiona () utilizes partial suffix trees along with statistical methods. (iii) Multiple sequence alignment (MSA)based methods consider each read r as reference and perform multiple alignment of reads that share at least one k-mer with r. Coral () creates a consensus sequence after each alignment with r. DAGCon () uses a directed acyclic graph instead of a consensus sequence. ECHO () computes consensus bases expectation maximization algorithm that by performing pairwise alignment among reads sharing at least one k-mer. MuffinKmeans () groups reads based on spectral clustering before applying MSA. (iv) Filtering methods, such as Diginorm (), exclude a substantial number of reads classified as erroneous based on k-mer frequencies. (v) Hybrid methods, such as LoRDEC (), Proovread (), LSC () and PBcR (), specifically target the correction of Pacific Biosciences reads, which are very long and chimeric, using Illumina reads. Read error correction has two major key challenges: (i) correcting reads associated with low-covered regions of the genome; reads having high error rate and reads that can be mapped to inexact repeat regions. (ii) Handling insertion and deletion errors (Most methods consider only substitution errors. At the time of writing this article, Blue, Fiona, HECTOR, MuffinKmeans, DAGCon, Coral and HSHREC support insertion and deletion errors. The current implementation of BLESS supports substitution errors only. Hybrid methods target specifically Pacific Biosciences reads.). This is important since sequencing machines that produce long reads, which are useful for obtaining high-quality assemblies, suffer from such errors (). We propose Karect (KAUST assembly read error correction tool). Karect belongs to the MSA category. It considers each read r as reference, performs multiple alignment for a set of reads similar to r and stores the accumulated results in a partial order graph (POG;). Compared with existing approaches, Karect introduces novel methods to select an optimized set of reads similar to r; represent reads in the graph; compute weights for the graph edges and construct corrected reads. Karect has the following advantages: (i) it supports substitution errors (called mismatches), insertion and deletion errors (called indels) and is compatible with most NGS technologies. (ii) It is fast, supports parallel execution on multi-core CPUs and can work with limited memory. (iii) It is effective against low-coverage regions, high error-rate regions and inexact repeat regions. (iv) Experiments on data from several genomes sequenced by various sequencing technologies show that Karect consistently outperforms existing techniques in terms of both individual-bases error correction (up to 10% increase in accuracy gain) and post de novo assembly quality (up to 10% increase in NGA50). This article also introduces an improved framework for evaluating the quality of error correction methods.
ConclusionWe presented Karect, a novel error correction technique for NGS data. Karect is based on multiple alignment, supports substitution, insertion and deletion errors and handles effectively non-uniform coverage as well as moderately covered areas. Extensive experimental evaluation demonstrates that Karect achieves superior error correction compared to existing state-of-the-art methods. Karect also enables substantially improved assemblies, when used as preprocessing step for modern assemblers. Currently, we do not support Pacific Biosciences data, because of chimeric reads; we are working on this issue.