Motivation: Transcriptome sequencing has long been the favored method for quickly and inexpensively obtaining a large number of gene sequences from an organism with no reference genome. Owing to the rapid increase in throughputs and decrease in costs of next-generation sequencing, RNA-Seq in particular has become the method of choice. However, the very short reads (e.g. 2 Ã‚ 90 bp paired ends) from next generation sequencing makes de novo assembly to recover complete or full-length transcript sequences an algorithmic challenge. Results: Here, we present SOAPdenovo-Trans, a de novo transcrip-tome assembler designed specifically for RNA-Seq. We evaluated its performance on transcriptome datasets from rice and mouse. Using as our benchmarks the known transcripts from these well-annotated genomes (sequenced a decade ago), we assessed how SOAPdenovo-Trans and two other popular transcriptome assemblers handled such practical issues as alternative splicing and variable expression levels. Our conclusion is that SOAPdenovo-Trans provides higher contiguity, lower redundancy and faster execution. Availability and implementation: Source code and user manual are available at http://sourceforge.net/projects/soapdenovotrans/.
INTRODUCTIONTranscript sequences and gene expression levels can now be efficiently obtained using RNA-Seq on next-generation sequencing technologies, providing increased throughputs and decreased costs. Applications for RNA-Seq include discriminating expression levels of allelic variants and detecting gene fusions (). To carry out these types of analyses requires an assembler that can reconstruct the transcripts from very short reads (e.g. 2  90 bp paired ends). Assemblers such as Cufflinks (), Scripture () and ERANGE () recover transcript sequences by aligning the reads to a reference genome. However, reference genomes are not always available, especially if the genome is unusually large and/or polyploid, which is often the case for plants. In these situations, de novo assembly is required. The challenge is not only to recover full-length transcripts but also to identify alternative splice forms in the presence of variable gene expression levels. Historically, the first de novo assemblers for next-generation sequencing, like Velvet (), ABySS () and SOAPdenovo (), were developed for genomes. These programs were intended to recover sequences for genomes of a known (estimated) size with a defined number of chromosomes. In contrast, transcriptome assemblers must recover an unknown number of RNA sequences, typically on the order of tens of thousands. Further, transcript sequences are only a few (k)ilobases in length, as compared with chromosomes, which can be hundreds of (M)egabases in length. Adding to the complexity is that gene expression levels vary by many orders of magnitude, so that for any non-zero sequencing error rate the most highly expressed genes will always harbor many discrepant bases, making it impossible to *To whom correspondence should be addressed. y The authors wish it to be known that, in their opinion, the first four authors should be regarded as Joint First Authors. define an absolute threshold for the number of sequencing errors allowed per assembly. Another issue is that most contemporary de novo transcriptome assemblers, like Trans-ABySS (), Multiple-k (Surget), Rnnotator (), Oases () and Trinity (), use the de Bruijn graph (DBG) schema for computational and memory efficiency, which means that alternative splice forms transcribed from the same locus will be combined into a single complicated de Bruijn sub-graph. This then needs to be addressed. In recent years, some important changes have been introduced to improve transcriptome assembly. Oases enumerated all possible transcripts with the simplifying concept of assembly subgraphs and then used a robust heuristic algorithm to traverse these graphs. Trinity introduced a new error removal model to account for variations in gene expression levels and then used a dynamic programming procedure to traverse their graphs. However, there is a lot of room for improvement, e.g. Oases produces more redundant transcripts, possibly due to it lacking an effective error-removal model (), and Trinity produces fewer full-length transcripts, possibly due to it not using paired-end data for scaffold construction. Here we present a de novo RNA-Seq assembler, SOAPdenovoTrans, which builds on these previous innovations to overcome a few remaining issues. SOAPdenovo-Trans incorporates the error-removal model from Trinity and the robust heuristic graph traversal method from Oases. In addition, we use a strict transitive reduction method to simplify the scaffolding graphs, and provide more accurate results. To assess the impact of these changes, we evaluated all three assemblers on rice and mouse, which have established transcriptome data linked to genome annotations produced over the last decade. The results here demonstrated that SOAPdenovo-Trans provides higher contiguity, lower redundancy and faster execution.
DISCUSSIONSequence assembly using real-world datasets has always required many subtle algorithmic changes to produce the best results, and it is clear that no single algorithm has a 'magic bullet' that solves all of the problems. We developed SOAPdenovo-Trans by combining novel concepts introduced by Trinity and Oases with concepts developed for the genome version of SOAPdenovo2. On top of this, we added modifications of our own, suitable for transcriptome studies. As demonstrated here, we believe we have produced an algorithm that substantially improves on the currently available tools for transcriptome assembly. Given the complexity of these analyses, however, SOAPdenovo-Trans is unlikely to be the final word in transcriptome assembly. In particular, we tested one of the reference-based assemblers, Cufflinks, and found that it provided even better results than SOAPdenovo-Trans. These results suggest that, perhaps, there is information in these datasets that, with additional algorithm modifications, can be recovered. For example, a multiple k-mers strategy may improve transcriptome assembly. Current multiple k-mers assembly strategies generally fall into one of the two categories: (i) after using different values for k-mer assembly,. Analysis of alternative splice forms. Given a set of assembled transcripts aligning to the same genome locus, L(submaximal) is the length of any transcript other than the largest, while L(maximal) is the length of the largest transcript. L(overlap) is the length of the overlap between the two. As in, we show a distribution for the number of transcripts and then a cumulant for the transcript lengths separately, the resultant assemblies are merged into one final set. This might result in a more complete transcript set, but it may also introduce redundancy; (ii) iterate different k-mer DBG assemblies during contig construction. This strategy could potentially make the best use of reads and paired-end information, but whether it is worth developing such an algorithm depends in part on the ongoing developments in sequencing technology. There is an expectation of improvements in read lengths in the future. If so, it would necessarily alter the types of issues faced by transcriptome analysis. Finally, SOAPdenovo-Trans, unlike Trinity and Oases, does not yet perform strand-specific assembly, and this is planned for a future development to further improve this algorithm.