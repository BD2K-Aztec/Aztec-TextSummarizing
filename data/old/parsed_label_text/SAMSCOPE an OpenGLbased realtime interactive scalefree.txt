Existing SAM visualization tools like samtools tview (Li et al., 2009) are limited to a small region of the genome, and tools like Tablet (Milne et al., 2010) are limited to a relatively small number of reads and may fail outright on large datasets. We need to visualize complex ChIP-Seq and RNA-Seq features such as polarity as well as coverage across whole 3 Gbp genomes such as Human. We have addressed these problems in a lightweight visualization system called SAMSCOPE accelerated by OpenGL. The extensive pre-processing and fast OpenGL interface of SAMSCOPE provides instantaneous and intuitive browsing of complex data at all levels of detail across multiple experiments. Availability and implementation: The SAMSCOPE software, implemented in C++ for Linux, with source code, binary packages and documentation are freely available from
INTRODUCTIONNext-generation sequencing (NGS) workflows often involve mapping reads onto reference genomes using tools such as SHRiMP2 (), Bowtie () and others. Mapping determines the likely point of origin (or origins) of a given read. Despite the multitude of different mapping methods and software, the SAM (Sequence Alignment/Map) format () and the associated binary encoding (BAM) have emerged as the lingua franca of NGS mapping file formats. For many projects using SAM data, it is desirable to visually inspect the results of mapping for quality control and exploration. However, because a single NGS run can provide millions of reads from billions of bases of genome sequence, simply opening up a SAM file and making sense of the content is a non-trivial problem. The two main problems in visualization of a SAM dataset are:(1) Sam files are structured in terms of reads. To calculate coverage of a given base, we have to look at each read and see which bases it maps to, then count how many times that base has been mapped.(As visualization is a common need, a variety of tools have been introduced to view SAM data in different ways. For example 'samtools tview' () provides an interactive textbased viewer which shows each base of each read and reference genome as a character in a text terminal. This can be useful for inspecting narrow regions (100 bases) with fewer reads than terminal rows (30), but not helpful for examining larger regions or deeper coverage. 'Tablet' () and its close cousin 'IGB' () both provide Java-based graphical interfaces for drawing reads against a reference sequence where each base is represented as a colored rectangle. Both can summarize overall coverage with a secondary visualization track. However, both Tablet and IGB draw each read similar to 'samtools tview', limiting their speed and effectiveness when a large number of reads would be in view. 'Integrative Genomics Viewer' (IGV;) can load SAM/BAM files providing detailed inspection capabilities, and provides a 'mean coverage' track given proper pre-processing, which can scale to arbitrary genome sizes. For applications like ChIP-Seq () or RNA-Seq however, 'mean coverage' is not necessarily helpful and hard to use at large scales, as most coverage values are at zero or near zero. We needed a flexible method to visualize and interactively inspect various features from large numbers of reads across mammalianscale genomes while addressing the problems above, so we developed our own approach in SAMSCOPE. 3D computer graphics addresses a similar problem when drawing textures on distant 3D objects: how to efficiently generate a reasonable approximation of millions of points of color data into one screen pixel. A solution known as MIP mapping () has become a mainstay of modern 3D rendering; in it a series of filtered copies of each texture are pre-calculated at exponentially decreasing resolutions. Thus, when a distant object is rendered, rather than sampling millions of points to calculate the combined contribution to one screen pixel, an approximation is achieved with just a few samples from a lower resolution copy. We apply the MIP map concept to genome visualization in SAMSCOPE.