Modeling of dynamical systems using ordinary differential equations is a popular approach in the field of systems biology. Two of the most critical steps in this approach are to construct dynamical models of biochemical reaction networks for large datasets and complex experimental conditions and to perform efficient and reliable parameter estimation for model fitting. We present a modeling environment for MATLAB that pioneers these challenges. The numerically expensive parts of the calculations such as the solving of the differential equations and of the associated sensitivity system are parallelized and automatically compiled into efficient C code. A variety of parameter estimation algorithms as well as frequentist and Bayesian methods for uncertainty analysis have been implemented and used on a range of applications that lead to publications. Availability and implementation: The Data2Dynamics modeling environment is MATLAB based, open source and freely available at http://www.data2dynamics.org. Contact: andreas.raue@fdm.uni-freiburg.de Supplementary information: Supplementary data are available at Bioinformatics online. For the construction of computational models that are used to analyze signal transduction pathways, gene regulation and cellular decisions , datasets generated under a wide range of experimental conditions have to be analyzed comprehensively. The Data2Dynamics software environment is designed for computation-ally efficient and user-friendly integration of complex experimental data into models consisting of coupled non-linear ordinary differential equations (ODE). Our software allows to specify the right hand side of the ODE manually or to automatically generate it by providing the reaction scheme with the respective rate law such as Mass Action, Michaelis– Menten or a custom rate equation. The resulting ODE system as well as its Jacobian matrix that is calculated automatically by symbolic differentiation are translated to C code and complied together with the ODE solver into a MATLAB mex-function. The code makes efficient use of precalculated reaction fluxes. Time-varying inputs to the ODE systems can be represented by custom or prede-fined input functions such as steps, pulses and splines that can depend on unknown parameters (Schelker et al., 2012). The initial concentrations can be considered as functions of unknown parameters as well. The software allows considering multiple different models that can share common parameters and fitting them simultaneously to all available data. The software is able to automatically create model variants that represent different experimental conditions. The conditions can be defined directly in the data sheets that contain the measurements and are parsed and grouped. For instance, a data sheet containing four different experimental conditions automatically creates four different variants of the ODE system that are linked to the respective data. The model simulations will be plotted in the same grouping as well, see trajectories in different color in Figure 1. For dose–response experiments, the software automatically generates all required model variants and displays the simulation results in a dose– response plot. For computational efficiency, experimental conditions , and thus model variants, that are shared between different experiments are calculated only once. The C code can automatically parallelize the calculation of the ODE solutions since all model variants can be solved independently. The mapping between experimental data and the simulated model can contain additional parameters that can, for instance, account for unknown offsets or scaling factors. A unique feature of the Data2Dynamics software is its ability to estimate the magnitude of experimental errors together with the model dynamics, see Figure 1. To this end, a full likelihood function is automatically generated. A critical task in modeling of dynamical systems is the efficient and reliable estimation of unknown model parameters, also called model fitting. We implemented a variety of different parameter estimation algorithms (Raue et al., 2013b). The most efficient and reliable algorithm for parameter estimation in our hands is a deterministic trust region approach combined with a multistart strategy to map out local minima. A variety of global optimization algorithms is implemented as well (Kronfeld et al., 2010). Parameters can and should be estimated on a log-scale. Prior knowledge about the parameters can be considered by prior distributions. The respective penalization of the likelihood leads to maximum a posteriori estimation. If steady-state assumptions for the model dynamics are required and the functional relationship to parameters is unknown, steady-state constraints can be added to the objective function. A quality control, as proposed in Raue et al. (2013b), can be performed to validate robustness of the estimation results. The software implements a sophisticated method to calculate model sensitivities , i.e. the derivatives of the dynamics with respect to model parameters. The sensitivity equations are derived automatically by symbolic differentiation, translated to C code and compiled together with the original ODE system and solver. We showed previously (Raue et al., 2013b) that this approach, which is not implemented in any other software packages, is not only about 10 times faster but also more precise than the default approach using finite differences. A reliable calculation of these derivatives is a key to successful parameter estimation. Goodness of fit analysis, likelihood-ratio test, QQ plots and auto-correlation of the residuals are available. In addition to finding the best model fit to a given collection of data, the Data2Dynamics software implements a wide range of algorithms that are able to determine uncertainties in the estimated parameter as well as in the predicted model dynamics. In particular, the frequentist profile likelihood approach for identifiability analysis (Raue et al., 2009), the prediction profile likelihood approach for observability analysis (Kreutz et al., 2012). A variety of Markov-chain Monte Carlo approaches are implemented to perform Bayesian inference (Hug et al., 2013; Raue et al., 2013a). Based on the results of such uncertainty analyses, the software allows to design additional experiments (Steiert et al., 2012) that can resolve non-identifiability and non-observability (Raue et al., 2010) and improve prediction accuracy (Kreutz et al., 2013). The software is developed in a community effort using a web-based code hosting service and a revision control system. A variety of published applications are provided as benchmark examples for further methods development and as guideline for novel applications. For these examples, not only the models but also all datasets, their link to the models as well as all original information used in the parameter estimation and uncertainty analysis are provided. The software was awarded twice as best performer in the Dialogue for Reverse Engineering Assessments and Methods (DREAM, 2011 and 2012). Acknowledgement