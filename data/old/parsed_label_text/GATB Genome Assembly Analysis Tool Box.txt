Motivation: Efficient and fast next-generation sequencing (NGS) algorithms are essential to analyze the terabytes of data generated by the NGS machines. A serious bottleneck can be the design of such algorithms , as they require sophisticated data structures and advanced hardware implementation. Results: We propose an open-source library dedicated to genome assembly and analysis to fasten the process of developing efficient software. The library is based on a recent optimized de-Bruijn graph implementation allowing complex genomes to be processed on desk-top computers using fast algorithms with low memory footprints.
INTRODUCTIONThe analysis of next-generation sequencing (NGS) data remains a time-and space-consuming task. Many efforts have been made to provide efficient data structures for indexing the terabytes of data generated by the fast sequencing machines (Suffix Array, BurrowsWheeler transform, Bloom filter, etc.). Genome assemblers such as Velvet (), ABySS (), SOAPdenovo2 (), SPAdes () or mappers such as BWA () or variant detection such as CRAC () for instance make an intensive use of these data structures to keep their memory footprint as low as possible. At the same time, parallelism has been largely investigated to reduce execution time. Many strategies such as GPU implementation (), cloud deployment (), algorithm vectorization (), multithreading, etc., have demonstrated high potentiality on NGS processing. The overall efficiency of NGS software depends on a smart combination of data representation and use of the available processing units. Developing such software is thus a real challenge, as it requires a large spectrum of competence from high-level data structure and algorithm concepts to tiny details of implementation. The GATB library aims to ease the design of NGS algorithms. It offers a panel of high-level optimized building blocks to speedup the development of NGS tools related to genome assembly and/or genome analysis. The underlying data structure is a memory efficient de-Bruijn graph (), and the general parallelism model is multithreading. The GATB library targets standard computing resources such as current multicore processor (laptop computer, small server) with a few gigabytes of memory. Hence, from the high-level C+ + functions available in the GATB library, NGS programing designers can rapidly elaborate their own software based on state-of-the-art algorithms and data structures of the domain. Based on the same idea, other bioinformatics libraries exist, from which domain-specific tools can be elaborated. The NGS++ library () is specifically tailored for developing applications that work with genomic regions and features, such as epigenomics marks, gene features and data that are associated with BED type files. The SeqAn library () is a general-purpose library targeting standard sequence processing. Advanced data structures such as de-Bruijn graphs are not included in SeqAn. Khmer () is a library and toolkit for doing k-mer-based NGS dataset analysis. As with GATB, most of khmer relies on an underlying probabilistic data structure (Bloom filter). The khmer library can be used in various k-mer processing such as abundance filtering, error trimming, graph size filtering or partitioning.