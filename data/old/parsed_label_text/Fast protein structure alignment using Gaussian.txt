Motivation: Aligning and comparing protein structures is important for understanding their evolutionary and functional relationships. With the rapid growth of protein structure databases in recent years, the need to align, superpose and compare protein structures rapidly and accurately has never been greater. Many structural alignment algorithms have been described in the past 20 years. However, achieving an algorithm that is both accurate and fast remains a considerable challenge. Results: We have developed a novel protein structure alignment algorithm called Kpax, which exploits the highly predictable covalent geometry of C atoms to define multiple local coordinate frames in which backbone peptide fragments may be oriented and compared using sensitive Gaussian overlap scoring functions. A global alignment and hence a structural superposition may then be found rapidly using dynamic programming with secondary structure-specific gap penalties. When superposing pairs of structures, Kpax tends to give tighter secondary structure overlays than several popular structure alignment algorithms. When searching the CATH database, Kpax is faster and more accurate than the very efficient Yakusa algorithm, and it gives almost the same high level of fold recognition as TM-Align while being more than 100 times faster. Availability and implementation: http://kpax.loria.fr/.
INTRODUCTIONAligning and comparing protein structures is important for understanding their evolutionary and functional relationships (). By quoting Lewis Carrol's Red Queen character (it takes all the running you can do, to keep in the same place),recently alluded to the computational challenge of searching increasingly large protein structure databases. Today, 4 years later, with some 80 000 protein structures in the Protein Databank and with the number of new structures being solved growing exponentially (), the need to compare the 3D structures of protein molecules rapidly and reliably has never been greater. Efficient pattern matching algorithms such as FASTA () and BLAST () are now standard tools for searching nucleotide and amino acid sequence databases. Dynamic programming (DP) algorithms provide a rapid way to find the optimal global () or local () alignments of pairs sequences. However, there is still no generally accepted standard for how to align and compare two similar protein structures (). This discrepancy arises because the additional complexity of working in 3D space makes structure alignment considerably more difficult than sequence alignment. For example, two common and closely related measures of structural similarity are the number of residue equivalences and the root mean squared deviation (RMSD) between the corresponding C atoms. However, while it is often possible to improve one at the expense of the other, it is difficult to optimize these two quantities simultaneously (). Furthermore, because RMSD values tend to be dominated by long-distance pairs, it can be useful to restrict RMSD-based similarity measures to selected 'core' residues (). But this then raises the question of precisely which residues should be considered as core residues. Consequently, different similarity scoring schemes can assign different sets of 'optimal' residue equivalences (). Despite such difficulties, many practical structural alignment algorithms have been described (), and the number of recent publications is growing rapidly (). These algorithms can often be classified according to how they use the internal geometries of proteins to calculate interatomic distances (;) or cliques of distances (), interatomic C vectors (), or triplets of C atoms (), torsion angles (), or combinations of distances and angles (). Geometric-hashing () and Voronoi tessellation techniques have also been used to calculate pose-invariant measures of structural similarity (). Different algorithms may also be distinguished according to whether and how they use secondary structure elements (SSEs) in the similarity scoring function or whether they match SSEs as *To whom correspondence should be addressed structural units (). For example, Sheba finds an initial superposition using a DP scoring matrix that combines sequence homology, secondary structure similarity, solvent accessibility and polarity to obtain an initial superposition which is then optimized using DP to maximize the number of close C C distances. The method of Jung and Lee (2000), ProSup () and TM-Align () identify short seed fragments to give initial superpositions which are then optimized in similar ways. Yet other approaches define and match higher-order structural alphabets () or fragments that might subsequently be re-assembled (). Most algorithms treat proteins as rigid-body objects, but a few can take into account structural flexibility (), permutations of structural motifs (;) and even composite alignments involving multiple chains (). However, almost all of these approaches are prohibitively expensive if the aim is to search large protein structure databases. As well as the diverse geometric and symbolic representations listed above, algorithms based on sophisticated algebraic approaches have also been described, including Lagrangian contact map optimization (), eigenvector analysis () and Fourier correlation techniques (). Recent improvements to the contact map optimization approach using integer linear programming () can now find provably optimal structural alignments in favourable cases. However, as before, such techniques are currently too expensive to search large structural databases. Here, our aim is to meet the need for a general purpose structural alignment algorithm that is sufficiently fast to support ad hoc queries against large structural databases while also being sufficiently sensitive to provide high quality (but not necessarily optimal) pair-wise alignments. Our overall approach is motivated by the basic observation that the four covalent bonds of each C atom have a highly predictable tetrahedral geometry, which could be used to superpose arbitrary pairs of C atoms and their covalent partner atoms using least-squares fitting. Thus, armed with the corresponding 3D fitting matrix, the relative positions of neighbouring up-stream and down-stream residues could easily be compared and scored. However, rather than using explicit least-squares fitting, which is a computationally expensive operation and which requires the coordinates of two sets of atoms, we note that a similar (but not strictly identical) transformation can be achieved by individually translating each C atom to the coordinate origin and by aligning two of its covalent bonds with the coordinate axes. In other words, applying such a transformation will allow the backbone peptide fragment associated with each C position to be placed in a standard, or canonical, orientation. In the context of database search, this is clearly advantageous because it allows each structure to be pre-processed separately in linear time.From this starting point, we calculate a similarity score for putative pairs of backbone fragments using a sum of products of Gaussian functions centred on the C positions within each fragment and on a small number of further 'virtual' atom positions that encode the apparent centre of mass (COM) of each protein, as described below. We then use these Gaussian overlap scores to construct a DP scoring matrix with SSE-dependent gap penalties which allows an optimal set (according to our scoring function) of equivalent residues to be found and superposed efficiently. A particular feature of a scoring function based on sums of Gaussians is that it implicitly favours close contacts without necessarily needing to exclude long-range pairs. Although we implemented SSE-dependent gap penalties initially to improve database retrieval performance, we find that using such penalties together with our Gaussian scoring function tends to produce alignments with smaller numbers of aligned residues but with somewhat tighter 3D overlays of SSEs than the other alignment algorithms studied here. It should be noted that Taylor and Orengo (1989) first demonstrated the utility of using local coordinate systems. They constructed a local coordinate frame for each residue using N-C and C-H bond vectors, but crucially they used it only to compare patterns of intra-molecular vectors rather than inter-molecular distances. Although later approaches that use internal torsion angles such as Yakusa () and SABIC () share a similar insight to our approach, the inter-molecular scoring functions in these algorithms can only compare one angle or one distance for each pair of residues. In contrast, for each position along a backbone, our Gaussian scoring function can be used to score the similarity of two local backbone fragments by comparing the positions of up to three residues in each direction along the chain. Hence, we also use Gaussian overlap scores to define the secondary structure of each residue according to its similarity to a model-helix or-sheet. On a contemporary workstation, our multi-threaded algorithm can calculate thousands of structural alignments per second. Hence we named it 'Kpax' (being short for 'thousands of protein alignments by canonical C coordinate centres per second').
CONCLUSIONWe have presented Kpax, a novel protein structure alignment and superposition algorithm that uses multiple C coordinate systems and a Gaussian peptide fragment scoring scheme to provide a sensitive structural similarity score. For the pairs of structures studied here, Kpax gives similar alignment statistics to Sheba, and it generally calls fewer aligned residues with lower RMSDs than CE and TM-Align. However, this does not imply low alignment quality. We have shown that the superpositions produced by Kpax resemble more closely those produced by TM-Align than those of CE and Sheba, and we have demonstrated that Kpax produces tighter superpositions of SSEs than TM-Align in several cases. We have also shown that Kpax may be used to perform fast and sensitive structural database searches. In our comparison with Yakusa and TM-Align using the CATH database, we showed that Kpax is faster and more accurate than the very efficient Yakusa algorithm, and it gives almost the same high level of fold recognition as TM-Align while being more than 100 times faster. Our timing estimates for CE, SSM and Dali predict even greater speed-ups with respect to these algorithms. These results demonstrate that Kpax is both fast and respectably accurate in comparison with the current state of the art. However, it still has some caveats. For example, it produces only a single rigid global alignment for each pair of compared structures, it cannot handle permutations or multi-structure PDB files, and its spatial scoring function is not well suited for comparing protein domains that differ significantly in size. Nonetheless, with the number of solved protein structures growing ever more rapidly, we believe the publicly available Kpax program will provide a useful tool for high throughput comparisons of 3D protein structures.