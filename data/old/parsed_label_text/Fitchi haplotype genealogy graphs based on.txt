In population genetics and phylogeography, haplotype genealogy graphs are important tools for the visualization of population structure based on sequence data. In this type of graph, node sizes are often drawn in proportion to haplotype frequencies and edge lengths represent the minimum number of mutations separating adjacent nodes. I here present Fitchi, a new program that produces publication-ready haplotype genealogy graphs based on the Fitch algorithm. Availability and implementation:
IntroductionFor population-level sequence data of closely related individuals, haplotype genealogy graphs are commonly used to visualize population divergence, structure, and connectivity. As opposed to phylogenetic trees, these graphs focus on the relationships of haplotypes rather than of individuals. They are usually unrooted, and tips carrying identical haplotypes are collapsed into a single node. The haplotypes of internal nodes are estimated, and these nodes are also collapsed with terminal or other internal nodes wherever identical haplotypes are inferred. As a result, haplotype genealogies can be multifurcating even when sequences have evolved along a bifurcating tree. Haplotype genealogy graphs have been used to visualize processes as diverse as panmixia (), population expansion (), parallel adaptation (), sympatric speciation () and introgression (). Multiple software tools have been developed to draw haplotype genealogy graphs from sequence data and have in their combination been used in over 10 000 publications. The most popular algorithms include statistical parsimony, implemented in TCS (), median-joining, implemented in the program Network (), and minimum-spanning, implemented in Arlequin () and HapStar (). These three methods have also been implemented in the recent software PopART, together with a newly developed algorithm, integer neighbour-joining (). These algorithms have in common that they allow graphs to include reticulations which are visualized as loops in the genealogy. Due to this property, genealogy graphs produced with these methods are usually referred to as haplotype networks. However, it has been argued that reticulations in haplotype genealogies are often difficult to interpret as they can represent either ambiguous relationships or conflicting topologies due to recombination (). As an alternative,propose that haplotype genealogies should rather be based on phylogenetic trees without reticulations, which outperformed statistical parsimony in their analyses of simulated data sets. On the other hand, Mardulyn (2012) discusses arguments for and against the use of trees versus networks and concludes that networks appear more appropriate when alternative connections are equally parsimonious. Here, I present Fitchi, a new program for the production of haplotype genealogy graphs. Following, Fitchi uses reticulation-free phylogenetic trees and the Fitch algorithm (). If terminal sequences contain missing data, the Fitch algorithm is used to infer the sequence with the shortest Hamming distance to its parental node. Subsequent to sequence reconstruction, branches with a Hamming distances of zero are collapsed, thus creating nodes with more than three connections. As each node is associated with a haplotypic sequence, the number of times this sequence occurs in the alignment is used to calculate the radius of the node in the graph visualization. If population names are provided by the user, nodes are drawn as pie charts indicating how often the haplotype represented by this node is found in each population. To infer the optimal layout of nodes in the graph visualization, Fitchi makes use of the neato algorithm implemented in Graphviz (). However, since this algorithm does not take node sizes into account, Fitchi only uses edge angles inferred by neato and recalculates edge lengths according to Hamming distances between adjacent nodes. With longer and more divergent sequence alignments, the number of unique haplotypes can become large, leading to the reconstructed haplotype genealogy graphs being too cluttered for easy interpretation. Fitchi therefore includes several options to simplify haplotype genealogy graphs, highlighting only the most important patterns of population divergence: A minimum node size or Hamming distance can be specified to draw nodes only for haplotypes found with a given minimum frequency, or to collapse nodes separated by short Hamming distances. Alternatively, edge lengths can be calculated only on the basis of inferred transversions, which effectively collapses nodes separated by transitions only. These options are demonstrated with a worked example in Supplementaryin the Supplementary Data. In addition to the haplotype genealogy graph visualization, Fitchi reports basic alignment statistics as well as measures of population differentiation, including Weir and Cockerham's (1984) F st ; d XY and d f (), and the genealogical sorting index as a measure of per-population monophyly (). Fitchi is written as a Python script and allows piping of input and output. Thus, it can easily be integrated into population genomics workflows, where haplotype genealogy graphs and measures of population differentiation are calculated, e.g. in sliding windows across chromosome-length alignments.