Velvet is a popular open-source de novo genome assembly software tool, which is run from the Unix command line. Most of the problems experienced by new users of Velvet revolve around constructing syntactically and semantically correct command lines, getting input files into acceptable formats and assessing the output. Here, we present Velvet Assembler Graphical User Environment (VAGUE), a multi-platform graphical front-end for Velvet. VAGUE aims to make sequence assembly accessible to a wider audience and to facilitate better usage amongst existing users of Velvet.
INTRODUCTIONVelvet was one of the first de novo genome assemblers, which handled short read sequences from the original Illumina Genome Analyzer (). It has become popular because it is relatively simple to install, has no dependencies, produces good results, runs fast and has a strong user community (). The main drawback of Velvet is its complex command line interface. Projects consisting of multiple sequence libraries are challenging to specify correctly. The user needs to provide the exact file format and compression type of the input sequence files. Standard paired-end read files need to be interleaved manually beforehand. To address these and other issues, we developed Velvet Assembler Graphical User Environment (VAGUE), a graphical user interface to Velvet.
DESCRIPTIONThe purpose of the VAGUE graphical user interface is to simplify running Velvet properly. The application consists of one window with four tabs: Setup, Advanced, Log and Results (). The active tab on starting VAGUE is Setup. It clearly lists the key parameters to be set, and Section 2.1 describes the choice of the defaults. If desired, all other Velvet parameters are accessible on the Advanced tab, which is populated dynamically by parsing the output of the Velvet executables, avoiding hard coding of any options and partially future-proofing VAGUE. The input sequence files to assemble are also added on the Setup tab. If the files came from separately prepared DNA libraries, they should be placed in different Library sections via the Add new library button. As described in Section 2.2, this now supports non-interleaved paired-end reads and bzip2 compression. The final parameter to be supplied is the k-mer size. Most first time users of Velvet find this troublesome. In Section 2.3, we describe how VAGUE can auto-detect a reasonable k value. The assembly process is launched by clicking the Run button at the bottom right corner. The view automatically switches to the Log tab, where the output of the velveth and velvetg commands can be observed while they are running behind the scenes. When the assembly is complete, the view automatically changes to the Results tab. Here, all the contigs are listed and can be individually viewed in FASTA format. Gross statistics *To whom correspondence should be addressed.