Motivation: Tandem mass spectrometry (MS/MS) has been routinely used in proteomics studies. Post-translational modification (PTM) identification is a challenging problem in tandem mass spectral analysis. Results: In this article, we define two scoring functions for identifying peptides/proteins with PTMs from MS/MS spectra: match scores and diagonal scores, as well as two spectral identification problems based on the two scores. We propose several index-based algorithms for the two problems. Both theoretical and experimental analyses show that the index-based algorithms significantly improve on speed when compared with existing algorithms. Contact:
INTRODUCTIONTandem mass spectrometry (MS/MS) has been routinely used in proteomics studies. In an MS/MS experiment, digested peptides (in bottom-up approaches) or intact proteins (in top-down approaches) are measured by mass spectrometers to generate tandem mass spectra, and the spectra are analyzed by software tools to identify the peptides or proteins (). In MS/MS spectral identification, query MS/MS spectra are searched against either a protein database or a spectral library. When the query spectrum is searched against a protein database, it is a common procedure to select a set peptides/proteins whose molecular masses are similar to the precursor mass of the spectrum (within an error tolerance), then convert the peptides/proteins to theoretical spectra which the query spectrum is actually compared with. In this case, searching against a protein database can be treated as searching against a theoretical spectral library. Given a query MS/MS spectrum S and a set T of MS/MS spectra, the spectral identification problem is to compute the similarity score between S and each spectrum in T and report the best-scoring spectrum in T. Post-translational modifications (PTMs) of proteins play a crucial role in generating the heterogeneity in proteins and also help in utilizing identical proteins for different cellular functions in different cell types. Many studies in mass spectrometry involve PTM identifications (). In the blind mode of PTM identification, where PTMs are unknown, the main task is to compute the similarity score between a spectrum from * To whom correspondence should be addressed.. Comparison between a spectrum S ={2,9,11,13} with a PTM and a spectrum T ={2,6,8,10} without PTMs. Spectrum S has a PTM of 3 when compared with spectrum T. The PTM is represented as three consecutive 0's in the shaded area in the vector representation of S. The second and third 1's in S are shifted by 3 to the right when compared with T. (a) There is only one matched mass pair between S and T (the mass pair is connected by a dotted line). (b) There are two matched mass pairs between S and T ( = 3) a modified form of a peptide and another (theoretical) spectrum from the unmodified form of the same peptide. We define match scores and diagonal scores, which are two similarity scores between a spectrum with PTMs and a spectrum without PTMs. Based on the two scores, we define the match spectral identification (MSI) problem and the diagonal spectral identification (DSI) problem for identifying spectra with PTMs. We used diagonal scores as a filter in top-down protein identification in () and found that existing algorithms are time consuming for computing diagonal scores when the spectral library is large. In the past several years, high-accuracy spectra have become available due to the advance of mass spectrometers, which makes it possible to use indexes to speed up the computation of match scores and diagonal scores. In this article, we propose several index-based algorithms for the MSI and DSI problems, which significantly improve on speed when compared with existing algorithms.
CONCLUSIONThe speed of the index based algorithms is related to the resolution of MS/MS spectra, and the algorithms are fast for high-resolution MS/MS spectra. It is a surprising result that using indexes speeds up the computation of diagonal scores. Generally, FFT is the best solution for computing the convolution of two vectors. But when the two vectors are sparse, the simple comparison algorithm and Algorithm 2 are much faster than FFT, and the index-based