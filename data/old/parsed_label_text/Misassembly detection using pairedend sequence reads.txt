Motivation: A crucial problem in genome assembly is the discovery and correction of misassembly errors in draft genomes. We develop a method called MISSEQUEL that enhances the quality of draft genomes by identifying misassembly errors and their breakpoints using paired-end sequence reads and optical mapping data. Our method also fulfills the critical need for open source computational methods for analyzing optical mapping data. We apply our method to various assemblies of the loblolly pine, Francisella tularensis, rice and budgerigar genomes. We generated and used stimulated optical mapping data for loblolly pine and F.tularensis and used real optical mapping data for rice and budgerigar. Results: Our results demonstrate that we detect more than 54% of extensively misassembled con-tigs and more than 60% of locally misassembled contigs in assemblies of F.tularensis and between 31% and 100% of extensively misassembled contigs and between 57% and 73% of locally misas-sembled contigs in assemblies of loblolly pine. Using the real optical mapping data, we correctly identified 75% of extensively misassembled contigs and 100% of locally misassembled contigs in rice, and 77% of extensively misassembled contigs and 80% of locally misassembled contigs in budgerigar. Availability and implementation: MISSEQUEL can be used as a post-processing step in combination with any genome assembler and is freely available at
IntroductionComparing genetic variation between and within a species is a fundamental activity in biological research. For example, there is currently a major effort to sequence entire genomes of agriculturally important plant species to identify parts of the genome variable in a given breeding program and, ultimately, create superior plant varieties. Robust genome assembly methods are imperative to these large sequencing initiatives and other scientific projects () because scientific analyses frequently use those genomes to determine genetic variation and associated biological traits. At present, the majority of assembly programs are based on the Eulerian assembly paradigm (), where a de Bruijn graph is constructed with a vertex v for every k  1-mer present in a set of reads and an edge v; v 0  for every observed k-mer in the reads with k  1-mer prefix v and k  1-mer suffix v 0. A contig corresponds to a non-branching path through this graph. We refer the reader tofor a more thorough explanation of de Bruijn graphs and their use in assembly. SPAdes (), IDBA (), Euler-SR (), Velvet (Zerbino and Birney 2008), SOAPdenovo (), ABySS () and ALLPATHS () all use this paradigm and follow the same general outline: extract k-mers from the reads, construct a de Bruijn graph from the set k-mers, simplify the graph and construct contigs. One crucial problem that persists in Eulerian assembly (and genome assembly, in general) is the discovery and correction of misassembly errors in draft genomes. We define a misassembly error as