An increasingly common method for studying evolution is the collection of time-resolved short-read sequence data. Such datasets allow for the direct observation of rapid evolutionary processes, as might occur in natural microbial populations and in evolutionary experiments. In many circumstances, evolutionary pressure acting upon single variants can cause gen-omic changes at multiple nearby loci. SAMFIRE is an open-access software package for processing and analyzing sequence reads from time-resolved data, calling important single-and multi-locus variants over time, identifying alleles potentially affected by selection, calculating linkage disequi-librium statistics, performing haplotype reconstruction and exploiting time-resolved information to estimate the extent of uncertainty in reported genomic data. Availability and Implementation: C þþ code may be found at https://github.com/
IntroductionTime-resolved genome sequence data provides direct information about evolutionary processes. At low recombination rates, populations evolve via clonal competition, whereby linkage effects spanning multiple loci determine the outcome of adaptation (). The Samfire software extracts and processes multi-locus information from time-resolved genomic data, so as to shed light on underlying patterns of evolution. Samfire includes a sequence processing pipeline filter that performs quality control on short read data in aligned SAM format. Similar to a previous approach to variant calling (), individual reads are filtered by median base quality, trimming sequence in order to achieve this, subject to a minimum read length. Individual nucleotides that fall below a given quality threshold are then removed, being replaced by blank '-' alleles, to indicate a lack of available information. Duplicate reads may be removed, before paired-end reads are joined, any interval between paired reads being spanned by blank alleles. The pipeline sl_traj then callsWhere multi-locus models of selection are evaluated, the reduction of the model space to a smaller number of loci can improve computational efficiency (). Having identified single-locus polymorphisms, the pipeline call_ml identifies multi-allele variants spanning these loci. Sets of loci that could be spanned by paired-end reads are efficiently found. Multilocus variants are filtered by the minimum number of observations of a variant and variant frequency, then reported across all time-points. Optionally within this pipeline, full haplotypes may be reconstructed from the multi-locus reads via a rule-based procedure (see Supporting Information). While other approaches to haplotype reconstruction have used model selection to infer a minimum number of haplotypes required to explain a dataset (), we here adopt a maximal approach, constructing a set of haplotypes that are guaranteed to explain all of the filtered multi-locus sequence observations without further error. The pipeline ml_noise infers the extent of noise in the observed multi-locus sequence data, again optimizing a Dirichlet multinomial likelihood function. Time-resolved data has elsewhere been used to infer haplotype frequencies under a dynamic model of adaptation (). Given variants spanning both multiple, and single loci, the pipeline ld_calc calculates estimates of linkage disequilibrium between loci.shows an example of data generated by applying SAMFIRE to within-host data from time-resolved sampling of HIV in a single patient (), here showing the expansion of viral diversity over time as expressed in one set of 14-locus partial haplotypes. The code is highly flexible, allowing for multiple user choices in evaluating data. With the increase in the collection of genomic data, we hope that Samfire will be of value to researchers aiming to build a greater understanding of rapid evolutionary processes.