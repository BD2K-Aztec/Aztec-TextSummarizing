Motivation: Calculating multiple protein structure alignments (MSAs) is important for understanding functional and evolutionary relationships between protein families, and for modeling protein structures by homology. While incorporating backbone flexibility promises to circumvent many of the limitations of rigid MSA algorithms, very few flexible MSA algorithms exist today. This article describes several novel improvements to the Kpax algorithm which allow high quality flexible MSAs to be calculated. This article also introduces a new Gaussian-based MSA quality measure called M-score, which circumvents the pitfalls of RMSD-based quality measures. Results: As well as calculating flexible MSAs, the new version of Kpax can also score MSAs from other aligners and from previously aligned reference datasets. Results are presented for a large-scale evaluation of the Homstrad, SABmark and SISY benchmark sets using Kpax and Matt as examples of state-of-the-art flexible aligners and 3DCOMB as an example of a state-of-the-art rigid aligner. These results demonstrate the utility of the M-score as a measure of MSA quality and show that high quality MSAs may be achieved when structural flexibility is properly taken into account. Availability and Implementation: Kpax 5.0 may be downloaded for academic use at http://kpax.
IntroductionCalculating multiple structure alignments (MSAs) of proteins is an important step towards understanding the evolutionary and functional relationships between different proteins and protein families (). Calculating high quality structural alignments can be crucial for the accurate modelling of three-dimensional (3D) protein structures by homology (), and can improve the generation of MSA-based sequence profiles for protein fold prediction (). Many algorithms for calculating protein structure alignments (SAs) have been described and reviewed in recent years (), and several of these can calculate MSAs. Some examples of multiple structural aligners are SSAP (), MUSTA (), CE-MC (), MultiProt (), POSA (), MAMMOTH-multi (), Vorolign () MUSTANG (), PROMALS3D (), BLOMAPS (), SALIGN (), MISTRAL (), 3DCOMB (), MAPSCI (), Smolign (), msTALI () and mulPBA (). Most of the above approaches first use dynamic programming (DP) to align pairs of structures, and they then progressively merge the pair-wise alignments to make a MSA. A few approaches subsequently optimize the resulting MSA using distance-based (e.g. CEMC and MAMMOTH-multi) or energy-based (e.g. MISTRAL) minimization techniques. However, when aligning many structures, the progressive alignment approaches can become computationally expensive because they require an initial set of all-against-all pair-wise alignments to build a guide tree, which means that the computational cost scales as O(N) 2 in the number of structures, N. In order to avoid such computational costs, the MAPSCI and mulPBA algorithms build a multiple alignment with respect to a given 'pivot' structure, which leads to a computational cost of O(N). But this requires prior knowledge of which structure should serve as the pivot. An effective alternative to conventional 'row-first' multiple alignment algorithms is 3DCOMB (), which uses a 'column-first' approach to identify 'highly similar fragment blocks' to guide the calculation of MSAs. While 3DCOMB has been shown to give excellent MSAs (), the complexity of its column-first algorithm also appears to scale as O(N) 2 in the number of structures. Because it is difficult to optimize simultaneously the number of aligned residues and their C a root mean squared deviation (RMSD) (), different structure aligners make different number/ RMSD trade-offs which can lead to producing locally different alignments, even within proteins that share common motifs. Thus, current SA algorithms can introduce errors or inconsistencies even in pairwise alignments (), and these errors can accumulate considerably in MSA algorithms that progressively merge multiple pair-wise alignments. Furthermore, such effects can confound efforts to compare different MSA algorithms against reference SAs, because the programs used to calculate the reference SAs are themselves subject to the same number/RMSD trade-off problem. Incorporating backbone flexibility offers one way to tackle such problems. Although some flexible SA algorithms have been described, such as FlexProt (), FATCAT (), POSA (), FlexSnap (), Matt () and RAPIDO (), still only a very few algorithms can flexibly align multiple structures. Furthermore, other 'flexible' aligners such as Vorolign () and GR-Align (MalodDognin and Pr zulj, 2014) can align pairs of structures that cannot be completely superposed rigidly, but they do not perform superpositions. To my knowledge, the only aligners that can calculate multiple superpositions flexibly are POSA (), Matt () and Smoalign (). POSA essentially extends the pair-wise FATCAT approach to MSAs. Both POSA and Smolign calculate partial-order alignment graphs, i.e. lists of locally aligned segments which are common to all structures but which are not necessarily sequential in the primary protein sequences. In contrast, both Matt and Kpax calculate strictly sequential MSAs which do not allow non-sequential permutations of residues. Unfortunately, POSA is publicly available only as a web server (), which makes it infeasible for large-scale studies, and Smolign is no longer available for download. While the original Kpax pair-wise alignment algorithm is sufficiently fast to be able to search large 3D structural domain databases in just a few seconds, the first version was limited to performing only rigid-body superpositions of entire protein structures. This article describes several extensions to the earlier Kpax algorithm () which allow pairs of proteins of arbitrary size (including multi-domain proteins) to be aligned flexibly, and which allow multiple proteins to be assembled into a MSA using a pivot-based approach. It seems obvious that a pre-requisite for calculating high quality MSAs is to begin with an algorithm that can calculate high quality pair-wise SAs. However, there does not yet exist an accepted standard for assessing the quality of pair-wise alignments or MSAs. 3DCOMB (), calculates its MSA quality measure from the pair-wise TM-score () taken over all fully aligned columns. On the other hand, for columns with an occupancy of 70% or more, mulPBA uses a quality measure based on a weighted average of the numbers of residues whose pairwise distances fall within certain given distance ranges (). This may be considered as an extension of the Local-Global Alignment (LGA) scoring method which calculates a weighted average over several number/RMSD bins of a pair-wise alignment (). More recently, the STOVCA program () has been proposed to compare the quality of structural superpositions calculated by other pair-wise aligners, but this program is limited to evaluating pair-wise superpositions using its own internal pair-wise alignment algorithm.proposed a method for measuring SA quality based on information compression, but this approach is also limited to pair-wise alignments. Thus, there exists a need for a simple and general way to compare the quality of both the alignments and the corresponding superpositions of different MSA algorithms. To try to address the problem of comparing different SA algorithms, this article proposes a novel atomic Gaussian based MSA scoring function, called 'M-score', which circumvents the number/RMSD trade-off problem. In previous studies,showed that 3DCOMB gives highly competitive rigid MSAs compared to MAPSCI, MAMOTH, Matt, BLOMAPS, MUSTANG and MultiProt when applied to the large Homstrad () and SABmark () benchmark sets, andshowed that Matt gave the best overall performance on a sub-set of their challenging SISY benchmark. Therefore, a similar large-scale comparison using these datasets is presented here to compare Kpax with 3DCOMB as an example of a state-of-the-art rigid multiple aligner, and with Matt as the best available flexible multiple aligner.