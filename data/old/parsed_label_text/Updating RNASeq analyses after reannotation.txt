The estimation of isoform abundances from RNA-Seq data requires a time-intensive step of mapping reads to either an assembled or previously annotated transcriptome, followed by an optimization procedure for deconvolution of multi-mapping reads. These procedures are essential for downstream analysis such as differential expression. In cases where it is desirable to adjust the underlying annotation, for example, on the discovery of novel isoforms or errors in existing annotations , current pipelines must be rerun from scratch. This makes it difficult to update abundance estimates after re-annotation, or to explore the effect of changes in the transcriptome on analyses. We present a novel efficient algorithm for updating abundance estimates from RNA-Seq experiments on re-annotation that does not require re-analysis of the entire dataset. Our approach is based on a fast partitioning algorithm for identifying transcripts whose abundances may depend on the added or deleted isoforms, and on a fast follow-up approach to re-estimating abundances for all transcripts. We demonstrate the effectiveness of our methods by showing how to synchronize RNA-Seq abundance estimates with the daily RefSeq incremental updates. Thus, we provide a practical approach to maintaining relevant databases of RNA-Seq derived abundance estimates even as annotations are being constantly revised. Availability and implementation: Our methods are implemented in software called ReXpress and are freely available, together with source code, at http://bio.
INTRODUCTIONTwo major bottlenecks in RNA-Seq analysis are the mapping of reads to transcripts, which is a prerequisite for quantification and differential analysis, and abundance estimation following mapping. The latter step is particularly complex when multimapping reads need to be resolved, which is necessary for estimating isoform-level abundances, or when genes have been duplicated (). Popular programs for multiread assignment, such as Cufflinks () and RSEM (), have large memory and time requirements [seeof (. Alternative approaches, such as eXpress (), which uses a streaming algorithm for assignment, are faster with a low-memory footprint but must still re-process all the data from scratch when the underlying annotation is adjusted. For large datasets, such as the 3.5 billion reads of (), a complete run of read mapping with Bowtie, followed by abundance estimation with eXpress, takes 11 days (with 44 cores used for the mapping). In cases where an annotation of transcripts in a genome may change after mapping, current analysis pipelines require re-mapping of all reads followed by a complete recomputation of abundances (). This has made it time-consuming and impractical to determine the effects of the addition of possibly novel transcripts on results or the impact of removal of transcripts that appear to be incorrect. Moreover, in cases of model organisms, it has resulted in the 'freezing' of analyses with respect to specific annotation sets, even though re-annotation efforts are resulting in continuous changes to 'reference' transcriptomes (). The problem we solve in this article is how to update quantification of transcript abundances in cases where annotations change, without remapping all reads to all transcripts and running abundance estimation procedures from scratch. This problem is non-trivial for two reasons:(1) Multi-mapping: Frequently reads map to multiple transcripts, and therefore the removal or addition of transcripts may change the posterior probabilities associated to read mappings. In particular, the addition of a single transcript may require re-quantification of many other related transcripts.(2) Abundance estimates from RNA-Seq are relative and not absolute: Because RNA-Seq abundance estimates are relative, a change in the abundance estimate of a single transcript affects all other transcripts.Given a change in the underlying transcripts, we show that abundance estimates can be updated by a procedure that only involves mapping reads to a small subset of the transcripts and re-computing assignment probabilities of multi-mapping reads for a similarly small set (). This is made possible by isolating a small relevant set of transcripts using a partitioning algorithm on a graph constructed from read alignments. When abundance estimation is subsequently performed using a fast online algorithm, the updating of estimates is particularly fast when the change to the underlying annotation is small. An implication of this result is that it is possible to easily update RNA-Seq abundance estimates for annotations that are continuously updated, as is the case with the nightly Reference Sequence (RefSeq) updates. RefSeq is a large database of sequences that includes widely used reference transcripts for *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com. Overview of the approach: Reads are initially aligned to a set of known transcript sequences and these alignments are used to probabilistically assign multi-mapping reads and to estimate abundances of the transcripts. The result is a set of relative abundances, for example, in fragments per kilobase per million mapped (FPKM) units. When a new annotation is given, differences are identified. Reads are mapped to any added transcripts, and the ambiguity graph, where vertices correspond to transcripts and edges correspond to pairs of transcripts to which reads have mapped ambiguously, is updated (deleted transcripts in red and added transcripts in blue). The 'affected' transcripts whose abundance must be re-computed are obtained from a partitioning in the graph. Finally, the subset of affected transcripts have their abundances re-computed using the relevant reads, and abundances for the transcriptome are re-computed many organisms. RefSeq is updated nightly to reflect improvements in annotations, and although the changes are small, we show that they can affect abundance estimates in RNA-Seq analyses. Our results demonstrate that it is possible, with our algorithm, to analyze an RNA-Seq dataset by building up the annotation one transcript at a time. In particular, our tool ReXpress allows scientists to routinely update abundance estimates for RNA-Seq analyses to reflect best possible results at any time. Although ReXpress is designed to work with formats produced by the eXpress RNA-Seq quantification tool, the program is general and suitable for use with many mapping and abundance estimation methods.
CONCLUSIONDespite the difficulties in storing, processing and distribution of high-throughput sequence data (), repositories such as the Gene Expression Omnibus have led to an explosion in publicly available genome-wide expression data. However, numerous technical challenges that arise in re-using data have limited the utility of publicly archived RNA-Seq reads (). Our results show that it is possible to efficiently update RNASeq abundance estimates on re-annotation, thus removing a major obstacle to re-using publicly available data. This should prove to be particularly useful in newly sequenced organisms whose annotations are not stable and undergo periodic revision, and also in human cancer transcriptomics where structural alterations can be tumor specific (). We also believe that ReXpress will be particularly useful for sequencing centers providing analysis services. Instead of producing one-time output, it should now be possible to refresh analyses as annotations improve, without expensive hardware or compute time needed as user bases and datasets grow.Other applications of our work include a randomized approach to optimization of transcriptome assembly in conjunction with abundance estimation (), and the development of an RNA-Seq quantification database for publicly available datasets that is automatically updated as annotations improve. Moreover, our work on component identification in and partitioning of the ambiguity graph can be used to develop more efficient batch methods for abundance estimation. A recurring issue in the commonly used batch EM solutions () is the necessity of iterating over a large number of reads, which has a memory bottleneck as shown in ().attempts to avoid the bottleneck by treating all genomic loci as independent blocks and using a heuristic 'rescue method' to partially correct for the approximation. A better solution for the memory bottleneck in the batch method is to iterate over approximately independent partitions of the ambiguity graph whose associated reads can be fit into memory. Because most components are often small, only the largest will need to be partitioned as in our method above. The blocks can then be processed in parallel only a single machine or distributed over a cluster. Finally, in conjunction with the streaming algorithm for quantification in (), the present method(b)provides an online algorithm in both the reads and the targets in any setting where probabilistic assignment of multi-mapping reads is a bottleneck in analysis of high-throughput sequencing data.