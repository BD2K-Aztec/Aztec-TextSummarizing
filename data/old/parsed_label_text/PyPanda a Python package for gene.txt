PANDA (Passing Attributes between Networks for Data Assimilation) is a gene regulatory network inference method that uses message-passing to integrate multiple sources of omics data. PANDA was originally coded in C þþ. In this application note we describe PyPanda, the Python version of PANDA. PyPanda runs considerably faster than the C þþ version and includes additional features for network analysis. Availability and implementation: The open source PyPanda Python package is freely available at
IntroductionAccurately inferring gene regulatory networks is one of the most important challenges in the analysis of gene expression data. Although many methods have been proposed (), computation time has been a significant limiting factor in their widespread use. PANDA (Passing Attributes between Networks for Data Assimilation) is a gene regulatory network inference method that uses message passing between multiple 'omics data types to infer the network of interactions most consistent with the underlying data (). PANDA has been applied to understand transcriptional programs in a variety of systems (). Here we introduce PyPanda, a Python implementation of the PANDA algorithm, following the approach taken inand optimized for matrix operations using NumPy (van der). This approach enables the use of fast matrix multiplications using the BLAS and LAPACK functions, thereby significantly decreasing run-time for network prediction compared with the original implementation of PANDA, which was coded in C  and used for-loops (). We observe further speed increase over the C -code because PyPanda automatically uses multiple processor-cores through the NumPy library. We have also expanded PyPanda to include common downstream analyses of PANDA networks, including the calculation of network in-and out-degrees and the estimation of single-sample networks using the recently developed LIONESS algorithm ().