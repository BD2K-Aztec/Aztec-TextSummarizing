BioTextQuest combines automated discovery of significant terms in article clusters with structured knowledge annotation, via Named Entity Recognition services, offering interactive user-friendly visualization. A tag-cloud-based illustration of terms labeling each document cluster are semantically annotated according to the biological entity, and a list of document titles enable users to simultaneously compare terms and documents of each cluster, facilitating concept association and hypothesis generation. BioTextQuest allows customization of analysis parameters, e.g. clustering/stemming algorithms, exclusion of documents/significant terms, to better match the biological question addressed. Availability: http://biotextquest.
INTRODUCTIONSeveral information retrieval tools are available to the scientific community, each attempting to analyze the large amount of biomedical information from a different perspective (). Most of the currently available literature mining systems are based on Natural Language Processing, supervised machine learning or their combination (). An alternative approach is the summarizing of large query outputs by document clustering, where similar documents are grouped on the basis of particular, meaningful terms (). It is an unsupervised technique, thus its success does not depend on prior knowledge or domain expertise (). Existing biomedical literature clustering systems include ClusterMed (http://demos .vivisimo.com/clustermed) and PuReD-MCL (). ClusterMed is a commercial software whose free version supports the clustering of at most 100 abstracts. PuReD-MCL is a downloadable collection of Perl and R scripts, mostly addressing expert users (). With BioTextQuest, our aim has been to provide researchers with a user-friendly web application that enables online queries for defining corpora of biomedical abstracts followed by document clustering and visualization. BioTextQuest is an application that offers an array of visualization tools for efficient navigation among biomedical records, and concept extraction. It also supports the depiction of term associations within clusters and can be easily customized. In the following sections, we describe the BioTextQuest architecture and demonstrate its functionality, based on a reworked query example of a Drosophila developmental pattern presented in the original TextQuest publication ().
N.Papanikolaou et al.and hierarchical average linkage clustering, [clusterx command line interface to SCPS,and (iii) Markov Clustering-MCL, a graph clustering algorithm ();(3) offers integrated visualization and interactive re-analysis capabilities, such as the option of selecting terms, documents and clusters for removal and re-clustering. User interface elements are based on HTML, CSS and JavaScript (JavaScript libraries: scriptaculous (http://script.aculo.us/), overlibmws (http://www.macridesweb.com/ oltest/);(4) invokes third-party text annotation web services
FUNCTIONALITYThe BioTextQuest server is designed to be as user friendly as possible, offering the aforementioned features in the most intuitive way. A Google-like search page allows users to pose direct queries to PubMed and interactively set the analysis parameters. Text annotation services are employed to map the extracted terms of biomedical significance to the biological entities they describe. The resulting document clusters and their corresponding terms, along with the retrieved annotation, are combined to produce a series of views of the analysis results. Importantly, users can interactively subcluster and/or recluster the results of any completed analysis. The Home page (Supplementary) is designed to be minimal to allow users to concentrate on the main functionality. Popup instructions assist users in executing an analysis. More complex queries can be issued following the Entrez syntax. Users may specify up to a maximum of 2000 articles to be retrieved/processed. Advanced options, such as stemming and clustering methods (with respective parameters), are hidden by default and may be used to fine-tune the results. Each algorithm may prove useful to address different kinds of questions. Since the functionality of the web tool partly relies on other web services (e.g. Entrez Programming Utilities), users are notified whether these services might be unreachable. The Results page (Supplementary Figs S3S5) provides views organized under tabs, along with a frame displaying a summary (query and parameters) and a form for a new run. The 'Tag Clouds' view returns an informative display of cluster-specific terms (Supplementary). This type of literature mining for biomedical concept discovery (), reflects the size of each term proportional to the fraction of documents with the specific term within the cluster. The 'Biomedical Terms' view lists and graphically annotates the GoList terms identified in the same manner as above (Supplementary). Finally, the 'Documents' view provides titles of documents belonging to each cluster with a PubMed link, and links to the plain or semantically annotated (Reflected) abstract (Supplementary). Users may interact with the results by requesting a fine-grained analysis of the active corpus, i.e. the collection of abstracts currently being processed. This is achieved by any combination of (i) simply altering available options (e.g. stemming or clustering); (ii) excluding terms from the GoList available in the Biomedical Terms view and (iii) removing clusters of documents from the Tag Clouds view. BioTextQuest employs third-party text annotation web services to enrich terms (by highlighting terms and using popups) according to the biological entity they describe. To identify protein names BioTextQuest invokes the Reflect service (). WhatIzIt () is optionally used to identify terms referring to pathway, molecular function and/or cellular component names. Additionally, the user can highlight non-standard English terms and terms unique to a cluster. When stemming is used, the root terms are displayed in the Tag-Cloud, whereas the respective unstemmed terms are available upon clicking on the respective link.
CONCLUSIONWe describe BioTextQuest, an online text mining system, enabling concept discovery from the biomedical literature recorded in PubMed via a clustering-based procedure. Further exploration of literature information is facilitated by intuitive graphical depictions of biologically relevant terms and interactive re-/subclustering capabilities. BioTextQuest is designed with simplicity for end-users, while advanced options enable further analyses.
IMPLEMENTATION BioTextQuest is a user-friendly web application, offering a simple interface and support for visual term associations. The core component is based on TextQuest (Iliopoulos et al., 2001), a prototype capable of extracting the terms of biomedical significance in a group of records and grouping these records according to their similarity based on the extracted terms. To query PubMed, while minimizing response times and hardware resource requirements, BioTextQuest (i) uses the NCBI eSearch service from the Entrez Programming Utilities (http://eutils.ncbi.nlm.nih.gov/) to retrieve the identifiers of the PubMed records matching a given user query and (ii) looks up these identifiers in a local index that matches them to their corresponding textual contents. Such a system takes advantage of the PubMed query syntax and of the capabilities of the NCBI utilities while mitigating the necessity of a local full-text PubMed index. A daemon monitors the new MEDLINE/PubMed releases and is responsible for downloading the new records and dynamically updating the local index. An overview of the BioTextQuest architecture is provided in Supplementary Figure S1, and it has been tested on the most common web browsers (Firefox, Chrome, Safari and Opera). Compared with the original TextQuest algorithm, the web application BioTextQuest: (1) offers optional use of the Lovins stemming algorithm (Lovins, 1968); (2) employs a set of clustering algorithms namely: (i) K-Means [Cluster 3.0 package, de Hoon et al. (2004)], (ii) spectral clustering  The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
