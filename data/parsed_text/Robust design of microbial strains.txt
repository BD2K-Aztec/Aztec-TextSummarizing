Motivation: Metabolic engineering algorithms provide means to optimize a biological process leading to the improvement of a biotechnological interesting molecule. Therefore, it is important to understand how to act in a metabolic pathway in order to have the best results in terms of productions. In this work, we present a computational framework that searches for optimal and robust microbial strains that are able to produce target molecules. Our framework performs three tasks: it evaluates the parameter sensitivity of the microbial model, searches for the optimal genetic or fluxes design and finally calculates the robustness of the microbial strains. We are capable to combine the exploration of species, reactions, pathways and knockout parameter spaces with the Pareto-optimality principle. Results: Our framework provides also theoretical and practical guidelines for design automation. The statistical cross comparison of our new optimization procedures, performed with respect to currently widely used algorithms for bacteria (e.g. Escherichia coli) over different multiple functions, reveals good performances over a variety of biotechnological products.
INTRODUCTIONMetabolic engineering is becoming central in basic and applied biological fields and requires mathematical models for accurate design purposes. The aim is overproducing desired metabolites by operating on genetic manipulations, as well as identifying novel and non-native synthesis pathways. Many organisms are used to analyze the metabolite production potential and identify the metabolic interventions needed to produce the metabolite of interest. Thus, strains have been systematically designed through in silico analysis to overproduce target metabolites, such as lycopene (), ethanol () and isobutanol (). The efforts are particularly focused on predicting flux distributions and network capabilities, most notably flux balance analysis (FBA) (). Recent FBA models incorporate also information on enzymes and genome, and integrate the relationships among genes, enzymes and reactions. This makes it well suited to studies that characterize many different perturbations such as different substrates or genetic manipulations (knockouts). In the past years, a variety of methods has been implemented to search for the genetic manipulations that optimize a cellular function of interest. These methods, such as OptKnock (), OptFlux (), OptGene () and GDLS (), have been tested in FBA organism models. However, all these methods require high computational efforts: the execution times grow exponentially () or linearly () as the number of manipulations allowed in the final designs increases. Because of the large number of reactions occurring in the cellular metabolism, the dimension of the solution space is very large and finding genetic manipulations is quite expensive. In this work, we use a multi-objective optimization algorithm to seek the genetic manipulations that optimize multiple cellular functions. The algorithm implements a global search with a heuristic and combinatorial method called genetic design through multi-objective optimization (GDMO). The idea is to use and improve the Pareto-optimal solutions. Pareto optimality is important to obtain not only a wide range of Pareto-optimal solutions but also the best trade-off design, as reported byfor the protein structure prediction problem. Moreover, the multi-objective optimization turns out to aid in the automatic design in several biological problems (). The area underlying the Pareto curve and the first derivative, and in particular the presence of jumps (i.e. quick variations in the objective functions during the optimization procedure), carry valuable biotechnological information. For the first time, we use the "-dominance analysis so as to consider all the solutions obtained by GDMO that are dominated with a tolerance " by the Pareto-optimal solutions. We report that multi-objective optimization provides more insights than single-objective optimization on the capability of these organisms to adapt to the simultaneous presence of different conditions and constraints. We combine multiple-target optimization with knockout parameter space to investigate the most complete available metabolic data and search for the optimal nutrients in strains that allow the maximization or minimization of metabolic targets, namely Escherichia coli (), Geobacter sulfurreducens (Additionally, we relate pathways to sensitivity analysis (SA). In modeling, SA is a method used to discover the main inputs, that is the inputs that have a substantial influence on the outputs of the model. In the last years, SA indices have been adopted in systems biology interrogating the reactions space (RoSAreactions oriented SA) () and species space (SoSAspecies oriented SA) to find their influence on the outputs of the system (). In this work, we perform SA to find the most sensitive pathways in the FBA model of E.coli. In particular, we present the novel pathway-oriented SA (PoSA), to find the genetic manipulations that have the largest influence on the output of the model. Unlike other SA methods applied in biological modeling, whose inputs (reactions or species) are valued in a real region of interest, PoSA is applied when inputs are valued in a binary region of interest. PoSA investigates the knockout solution space and determines the influence of the pathways on the outputs of an FBA model. Since our search-and-optimize algorithm provides a set of feasible solutions with different genetic manipulations, it is worth seeking a relationship between the sensitivity indices and the proposed manipulations. In this way, we are able to select only the best manipulations. In particular, thanks to the information provided by PoSA, we can choose the GDMO knockout strategies that affect genes belonging to insensitive pathways. Each point of the Pareto front represents a strain, i.e. an E.coli with specific genetic manipulations, and it is also associated with three robustness analysis (RA) indices that we compute. The robustness estimates how robust is a strain obtained by GDMO when it undergoes small perturbations, which can be external (changes in the nutrients) or internal (changes in the metabolism). Among the strains proposed by GDMO, we are able to choose the most robust one. In particular, we use three robustness methods to evaluate different components of the model.
SYSTEM AND METHODSHere, we focus on the development of a new computational framework to design optimal and robust bacteria able to perform particular tasks. In, we show the layout of our computational framework applied to organisms modeled through FBA. The framework is composed of three blocks. The first is constituted by the SA, able to find the most sensitive parameters of the model. We can investigate the reactions and the species in the metabolic model in terms of sensitivity, using the RoSA and PoSA methods. Furthermore, the novel PoSA is able to identify the most sensitive metabolic pathways by ranking them according to knockouts. We consider a single pathway as an input of the system. Each pathway (that is a set of reactions converting particular substrates in specific final products) is perturbed by mutating genes that control its biochemical reactions. PoSA ranks the pathways according to their influence on the outputs of the model. Pathways with important influence have large sensitivity index (  and  ), as reported in the pre-processing part of. Each pathway in the graph is represented by a circle and its size indicates the number of genes belonging to it. The multi-objective optimization algorithm searches both for the genetic manipulations (through gene deletions) and for nutrients with respect to defined target functions. Hence, we perform both the genetic design and the flux design in microbial strains. The result of the multi-objective optimization is a set of non-dominated points, called Pareto front (or Pareto surface). The non-dominated points are shown in red in, while all the dominated points are shown in blue. All the dominated points and the non-dominated points, which satisfy all of the inequality and equality constraints, and all of the variable bounds, constitute the observed feasible region. In the genetic design, each strain (a particular phenotype) is identified by a binary 'knockout vector' (which represents the. A schematic representation of our automatic framework for optimal bacterial metabolism. In the pre-processing step, the species (SoSA), reaction (RoSA) and pathway-oriented SA (PoSA) are applied to the metabolic model. Then, the multi-objective optimization allows genetic and flux design. In the post-processing step, suitable solutions (selected from the Pareto front) are subjected to global, local and PoRA analysis. The "-dominance analysis is performed to investigate the neighborhood of the suitable genetic designs genotype), whose elements are 1 when the corresponding gene set is turned off. The importance of the knocked out genes can be evaluated by means of the ranking provided by PoSA. A gene set can be composed of a single gene, when it synthesizes for an enzyme, or can be associated with more genes, which synthesize for enzymes that form enzyme complexes and enzyme subunits. The relation between genes in a gene set is regulated by means of a Boolean relationship. When all the genes are necessary to catalyze the corresponding reactions (a single gene set can regulate more reactions), genes are linked by the 'AND' operator; otherwise, if one gene is sufficient, genes are linked by the 'OR' operator. In addition, through the multi-objective optimization, we are also able to find the favorable nutrients set (flux design) to optimize the wild-type/strains yield and evaluate the over/under investment of nutrients (uptake rate of fluxes). Pareto optimality is very useful for the analysis of metabolism, as reported in the previous works by, where the authors used deterministic multi-objective approaches to evaluate the fluxes distributions in the E.coli wild-type network. In our work, we remark the usefulness of Pareto optimality and adopt an effective and state-of-the-art algorithm to investigate the knockout space. After the optimization, we perform an "-dominance analysis to search accurately near the edge of the Pareto-optimal region. The RA is the third task of our computational framework. For each phenotype (strain or wild type), in a post-processing step, we process the fragility of the metabolic network when it is subjected to small perturbations, which can be hexogen or endogen. From the Pareto fronts, we select interesting solutions using decision-making methods; for instance, we select the solutions near to the ideal solution, the knee points, the end points or points with suitable features. For each solution, we calculate the global robustness (GR), the local robustness (LR) and the pathway-oriented robustness (PoRA) values, indicating, respectively, the robustness of the whole network, of each single reaction and of each metabolic pathway. We test the algorithm in the genome-metabolic network of E.coli (), composed of 2382 reactions, in order to maximize a metabolite of interest and simultaneously ensure the biomass formation, with the minimum knockout cost. The knockout cost is defined according to the Boolean relationship between genes. For example, if a gene set is composed of two genes linked by 'AND', the cost to ensure the turning off of the corresponding reactions (knockout cost) is 1. Instead, the cost to ensure the catalysis of the corresponding reactions is 2, since both genes are necessary to turn on the reactions associated with that gene set.
FBA modeling frameworkFBA is a mathematical approach for analyzing the flow of metabolites through a metabolic network (e.g. their formation and degradation, transport and cellular utilization) composed of n biochemical reactions. For every metabolite X i , i  1,. .. , m a material balance is dX i =dt  P n j1 S ij v j , where S ij is the stoichiometric coefficient associated with each reaction flux v j , j  1,. .. , n. If we consider this material balance under steady-state conditions, we havewhere g is a vector of weights (n dimensional) associated with the synthetic objectives and g0 is its transpose. For example, when the synthetic objectives v j and v h have to be maximized, the weights g j and g h are equal to 1. y is the knockout vector of L bits. If there are no impaired reactions in the metabolic network, y contains only zeros. Conversely, when y l  1, the gene set embroiled in the manipulation l is turned off, and the corresponding reactions are in the absent status (the lower and upper bounds are set to zero, resulting in a modified metabolic network). C is an integer representing the maximum number of knockout allowed. The bi-level problem can be converted to a MILP problem (for a detailed description, see the original work by). We implemented and solved the problem using the GLPK solver. In PoSA, the knockout vector y used to represent the genetic manipulations is partitioned in p subsets of bits b 1 , b 2 ,. .. , f b s ,. .. , b p g. Each subset b s includes the genetic manipulations linked to the reactions involved in the sth metabolic pathway of the network. Each subset b s has a cardinality W s , where W s 5 L, 8s  1,. .. , p. The genes are clustered in metabolic pathways as reported by. Each pathway performs a particular task in the metabolism, e.g. the citric acid cycle, the oxidative phosphorylation, the pentose phosphate pathway and so on. PoSA takes also into account the eventuality that a reaction belongs to different pathways: when the gene responsible for that reaction is knocked out, the reaction is impaired in all its pathways. We generated the gene-pathway (GP) mappings, defined by the L  p matrix P, where the l, sth element of P is 1 if the lth genetic manipulation is linked to the reactions involved in the sth functional pathway, and 0 otherwise. We also adopted the reaction-pathway (RP) mappings, mathematically described by the n  p matrix R, where the j, sth element of R is 1 if the jth reaction is part of the sth functional pathway, and 0 otherwise. The E.coli model used for our analysis has p  36 functional pathways. For the combinatorial problem described in (2), we define the 'elementary effect' () for the input b s aswhere ~ b s is the mutation on the input b s and consists of the switching of bits chosen randomly in b s : if a bit is equal to 0 (or 1), the permutation turns it into 1 (or 0).  s is a scale factor defined as:The output F(y) considered in PoSA is the vector v of fluxes. ~ y is the mutation performed on the knockout vector y defined in the Boolean region of interest  0, 1The distribution of effects EE s is obtained by permuting y through a random sampling of KQ points from and permuting b s by randomly sampling KQN points from. If the procedure was performed for each input, the result would be a random sample at a total cost of KQ for calculating F ~ y and KQN for Fb 1 , b 2 ,. .. , ~ b s ,. .. , b p , with a total cost of pKQN  1 evaluates of function. As regards the details, in the Supplementary Material we report the code and pseudo-code of the algorithm. The estimation of the mean  and the standard deviation  of the distribution of the elementary effects will be used to detect those inputs that should be considered influent in the model. A high  indicates an input with an important 'overall' influence on the output, while a large  indicates an input whose influence is highly dependent on the values of the inputs ().
Optimization through genetic manipulationGDMO is a combinatorial global search method that finds the genetic manipulation strategies to simultaneously optimize multiple cellular functions. The simultaneous optimization of multiple objectives differs from the single-objective optimization because the solution is not unique when the objectives are in conflict with each other. For instance, the knockout strategy able to ensure the production of a metabolite alters the biomass formation and the ability of the organism to reproduce itself. Therefore, metabolite production and biomass formation are strongly in conflict. The solution of a multi-objective problem is a potentially infinite set of points, called Pareto-optimal solutions or Pareto front. A solution is said to be Pareto optimal if there exists no feasible solution for which an improvement in one objective leads to a simultaneous improvement in one (or more) of the other objectives. Formally, a point y  in the solution space is said to be Pareto optimal if there does not exist a point y such that F(y) dominates Fy  , where F is the vector of Z objective functions. In our case, the space of variables (i.e. the domain of y) is discrete. Our method implements a genetic algorithm inspired by NSGA-II () and is composed of four key steps. We start with the initialization of the population Pop and the computation of the fitness score. The population can be initialized in different ways: randomly or assigning present status to all genes or selecting a set of knocked out genes. The population Pop is represented by a I  L  Z  2 matrix, where I is the number of individuals, L is the number of decision variables and Z is the number of objective functions. The last two columns are used to store two parameters of the algorithm linked to each individual: the rank and the crowding distance (). The values of the objective functions are calculated by solving the combinatorial problem (2). Each individual represents a feasible solution, composed of the proposed knockout strategy ~ y. The fitness score is computed after sorting according to the level of non-domination. Each individual is assigned a rank, and between two solutions with different non-domination ranks, we prefer the solution with the lowest rank (). Successively, three steps are iteratively performed. In a binary tournament selection process, two individuals are selected at random, and their fitness is compared. The individual with the best fitness is selected as a parent. The algorithm selects a number of parents (i.e. the best individuals) equal to the half of the population. Parents are mutated using a combinatorial mutation operator to create an offspring population. A mutation represents a switch, from 0 to 1 or from 1 to 0. The process is randomly executed; for each parent individual, we create ten offspring, but only the best is chosen. Mutations can achieve the maximum knockout number equal to the parameter C (fixed at 50 by default). A new population of I individuals is formed selecting the best individuals from the parents of the previous generation and the current offspring. The new population undergoes a new round of evaluation. Finally, a selection operator is performed in order to reach the last front. For each generation of the algorithm, the Pareto-optimal solutions are provided. This cycle is repeated until the number of generations reaches its upper bound. The number of generations D and individuals I are parameters chosen by the user. After calculating the Pareto-optimal solutions, we perform a post-processing filtering, in order to eliminate redundant knockouts that are not, in fact, necessary for the achievement of the selected production and biomass level. The time complexity of the genetic algorithm is OZDI 2 , where Z is the number of the objectives, D the number of generations and I the population size.
FBA using experimental conditionsThe gene expression data provide several information on the activation of genes when the organism undergoes specific external stimuli. In a first approximation, we may transform microarray data matrix in a Boolean matrix, where 0 represents the knockout condition for a gene and 1 represents the activation. Our framework is able to read gene expression data, transfer them to a metabolic model and evaluate in silico the metabolic fluxes distribution using FBA. In this way, it is possible to investigate the behavior of an organism as well as to compare different experimental conditions. It could be interesting, in future developments, extending the exploration analysis from a binary domain to a quantitative domain, evaluating the gene expression in the metabolic network. In addition, through our optimization method, we can deduce how the growth of the organism improves in a given experimental condition, when additional genes are turned off (or on).
Pareto front "-dominanceAnother analysis that we perform is inspired by the idea of, namely to use a condition of approximated dominance for their evolutionary multi-objective algorithm with the aim of improving the diversity of solutions and the convergence. However, we use this idea to perform a post-processing analysis in order to calculate an approximated Pareto front. This way, we search for solutions that may have been discarded because they are dominated by a small amount " that, for our purposes, can be considered negligible. Therefore, once the optimization routine has been performed, all the sampled points are revisited. Then, a new set of solutions is built, called '"-non-dominated' points set, by applying a 'relaxed' condition of dominance, called "-dominance. In a formal way, assuming that all the objective functions are positive and must be maximized, given "40, we seek all the points (solutions) w belonging to the set: w : F r w  ! F r u, 8 r  1, :::, Z   , where F is the vector of the Z objective functions and u represents all the others sampled points. This set will contain both the new '"non-dominated' solutions and the old non-dominated ones. The results are shown inof the Supplementary Material.
Robustness analysisAfter the optimization, the validity of the biological strain, designed in silico, must be tested, and this is performed by the RA. In this way, we assess the ability of a strain to adapt to small perturbations that can occur at any stage of the biochemical processes, either within the bacterium or caused by the environment in which it reproduces itself. The basic principle of this analysis is the following. First, we define the perturbation as a function  ,  , where applies a stochastic noise to the system  and generates a trial sample. The-function is called-perturbation. Without loss of generality, we assume that the noise is defined by a random distribution. We generate a set T of trial samples in order to render the calculation of robustness statistically meaningful. Each element of the set T is considered robust to the perturbation for the stochastic noise and the given property ' if the following condition is verified:where  is the reference system, ' is a metric (or property), is a trial sample of the set T and is a robustness threshold. The definition of this condition makes no assumptions about the function '. The robustness of a system  is defined as the number of robust trials of T with respect to the total number of trials jT j. The robustness index is a function of , so the choice of this parameter is crucial. Since we are interested in the behavior of strain when subjected to small perturbations, and since the behavior is acceptable when the deviations from the original value is as small as possible, we chose the values of " equal to 1% of the metric and equal to 1% of the perturbed variable. According to the principle above reported, we implement the global, local and PoRA methods. In our analysis, we perturb the upper v U j and lower v L j bounds, j  1,. .. , n of the metabolic fluxes. In particular, in GR the perturbation is performed simultaneously for all the fluxes of the network to evaluate the fragility of the complete organism. In LR, the perturbation is performed for each flux (hence we have a robustness index for each flux), whereas in PoRA, the perturbation is performed simultaneously for all the fluxes clustered in a metabolic pathway obtaining a robustness index for each pathway. The results are reported inand in the Supplementary Material (Tables S1 and S2).
Glocal analysisWe also implement the analysis described byto compare the results obtained by the GR and LR analyses. In the glocal analysis, the authors implement a procedure that calculates the volume occupied by those parameters such that the system maintains the desired characteristics. The volume is computed in the 2n-dimensional parameter space. In our case, the volume is such that Equation (5) holds. Since this research requires a huge computational effort, given the high number of dimensions (R 2n , where 2n is the number of parameters), it is guided by an iterative procedure that involves the principal component analysis. Then, they calculate local coefficients and use them to derive the key parameters of the robustness (through the Spearman's partial correlation coefficient). In the global part, we found that the results are comparable in most cases with our global metrics. The results of the analysis are reported in(R versus GR). In the local part, we found that the most influential flux is also the one that obtains the minimum LR value.
Quantitative and qualitative knockout analysisPareto optimality gives information about the trend of organisms in their ability to produce particular metabolites, as reported in the previous section. In addition, we color the Pareto points in order to obtain a map of the knockout cost dispersion (D of the Supplementary Material). In this way, each point characterizes both the phenotype of an organism (for instance, the amount of acetate and biomass) and the genotype (in terms of how many genes are knocked out). Nevertheless, it is also important to give a qualitative score for each knockout strategy. We have two sensitivity measures:  (mean) and  (standard deviation). Large  indicates high overall influence, high linear effect, while large  indicates that either the specific input is involved with other inputs, or its effect is non-linear or non-additive. According to the  sensitive index obtained by PoSA, we assign a quality score (QS) for each strain. Strains that have genetic manipulations involved in pathways with low  values are preferred, and thus get a high score. The score ranges from 0 to 1; 0 when the genetic strategy involves gene sets linked to the pathway with the largest index, that is the most sensitive and 1 when the genetic strategy involves gene sets linked to the pathway with the lowest index. The score is normalized by the square root of the number of samples, since manipulations involve different knocked out genes. Consequently, if we find two Pareto solutions through GDMO that have the same phenotype and different knockout strategies, we are able to choose the best solution in terms of knockout, according to the QS calculated using PoSA. For the strains reported in, we obtained from left to right the QS equal to 0.285, 0.063 and 0.223.
ImplementationWe implement GDMO, SA and RA using MATLAB and GLPK (GNU Linear Programming Kit). We illustrate the capabilities of GDMO by applying it to several overproduction problems in iAF1260 E.coli (). In a pre-processing analysis, we perform a reduction of the FBA network to remove duplicate and dead-end reactions as described by, Pharkya and Maranas (2006) and Mahadevan and Schilling (2003). After the reduction, the resulting metabolic network is mathematically identical to the original network. Initially, in iAF1260, there are n  2382 reactions, m  1668 metabolites and L  913 gene sets; after the reduction, we obtain n  959, m  483 and L  632 in anaerobic conditions and n  1019, m  506 and L  663 in aerobic conditions. In particular, for acetate and succinate production, we performed experiments in both anaerobic and aerobic conditions, with 10 and 5 mmolh 1 gDW 1 of available glucose.
RESULTS AND DISCUSSIONTaking into account that each gene is assigned to at least one of the 36 different pathways in the metabolic network, PoSA evaluates the importance of a pathway on the basis of the knockouts that are involved in its metabolism and indicates a ranking of the metabolic pathways in the (  ,  ) space reported in. The study of the variance-to-mean ratio (VMR) is a good measure of the degree of randomness of a given phenomenon. In the E.coli analysis, PoSA-sensitive  and  indices are linked with a linear relationship and the VMR is 41; thus, the elementary effects set is said to be over-dispersed, highlighting the presence of great variability. We can deduce that the elementary effects of the 36 pathways are sampled from a negative binomial distribution. The VMR is linked to the Pareto front and can be harnessed to explore the solution space, since it describes the probability distribution of the phenomenon. In general, highly networked cell components (such as those for nucleicWe compare OptFlux (), OptGene (), GDLS (), OptKnock () and our multi-objective optimization algorithm (GDMO) to maximize acetate (Ac) and succinate (Suc) productions [mmolh 1 gdW 1 ]. The second column reports the amounts of acetate, succinate and biomass when all the genes are turned on. The third and fourth rows show the biomassand the knockout cost (kc). The last four rows show a comparison between the RA methods. The two values of robustness reported for wild type are referred, respectively, to the productions of Ac and Suc. R-values () and GR-values are GR indices. The strain is more robust when R and GR detect high values. For LR and PoRA, we report the minimum value found, which is associated with the less robust flux (glucose uptake rate) and the less robust pathway (energy metabolism). 'n.a.' stands for not applicable.acids, amino acids, cofactors and energetic metabolism) are in the top right corner, while specific, often single reaction very abundant components (such as those for bacterial walls, nitrogen, glutamic and carbohydrates) are in a bottom left position. Results inwere obtained by evaluating more than 3 million calls to the function F of Equation (3). In, we report the genetic strategies obtained by GDLS (), OptFlux (), OptGene (), OptKnock () and GDMO, where the goal is to optimize succinate and acetate productions in the E.coli metabolic network. To compare these methods, we run OptKnock, while the GDLS, OptGene and OptFlux solutions are extracted by published data by. We run GDMO initializing the E.coli network with an empty set of knockout, i.e. in wild-type configuration, and setting the population size I  1000 and the number of generations D  1500.reports the best solutions in terms of acetate and succinate obtained by the previous methods, along with our proposed solutions. Details of the genetic strategies are reported in Tables S1 and S2 of the Supplementary Material. We used the multi-objective optimization method to maximize the production of metabolites of interest and biomass, minimizing simultaneously the knockout cost.also reports the robustness indices for the wild-type organism and strains. The effect of the knockouts on the robustness of the network can be noticed by comparing the GR, LR and PORA values of strains with those of the wild type. The values of GR and LR are of the same order of magnitude, probably because the robustness of the network is strongly linked to the glucose uptake rate. In, we show the comparison between the results obtained by the method proposed byand our Pareto solutions for optimizing acetate production (in the Supplementary Material, we report also the results for succinate production). The solutions provided by GDLS do not outperform Pareto fronts, since they occupy positions in the area under the Pareto curves. In the best cases, they lie on the Pareto fronts. Some suggested solutions and several optimization experiments have been reported as Supplementary Material (Tables S1 and S2 and Figs S2 and S3). In addition, the "-dominance analysis reveals other interesting points. For instance, we find 14.05 mmolh 1 gDW 1 of acetate with a knockout cost equal to 5 and 9.175 mmolh 1 gDW 1 of succinate with a knockout cost equal to 5. In order to study the favorable environmental conditions (flux design), i.e. nutrients for E.coli, we performed the simultaneous optimization of acetate, succinate and biomass on the complete network, i.e. without knockouts. We considered the anaerobic and aerobic condition (O 2 uptake rate  10 mmolh 1 gDW 1 ) and maintained fixed the glucose uptake rate at 10 mmolh 1 gDW 1. We used NSGA-II () to perform the optimization by exploring the continuous space of exchange fluxes. In our analysis, we perturbed the thermodynamics constrains v L j , j  1,. .. , n ex , where n ex is the number of the exchange fluxes. The decision variables are real values from 0 to 100 (0 when the uptake is not allowed and 100 when the potential uptake rate is 100 mmolh 1 gDW 1 h 1 ). Only glucose and oxygen were kept constant. Setting the population size at 100, we ran NSGA-II for 500 generations. In, we show the results of the optimization in aerobic and anaerobic conditions (the observed Pareto front and the observed feasible points). In anaerobic condition, we found 100 mmolh 1 gDW 1 h 1 of acetate, 42.918 mmolh 1 gDW 1 of succinate and 3.6204 h 1 of biomass (the trade-off). In this condition, we noticed a significant increment in the L-aspartate, citrate, lactose, fumarate and malate uptake rates. In aerobic condition, we found 100 mmolh 1 gDW 1 h 1 of acetate, 21.889 mmolh 1 gDW 1 of succinate, 4.16 h 1 of biomass and a significant increment in the L-asparagine, 1, 4-alpha-D-glucan, Fe(III)dicitrate, 2-oxoglutarate uptake rates. In our analysis, we perturbed simultaneously almost all the exchange fluxes, but it is possible to select a smaller set of nutrients according to experimental requirements. Pareto fronts provide significant information in metabolic design automation. The size of non-dominated solutions, the first derivative and the area under the curve are important markers for the best design within the same organism or between different organisms. Jumps correspond to sudden decreases in the availability of entire pathways and sub-networks when a crucial hub is eliminated, for instance the elimination of Krebs cycle or other key biosynthetic hubs. The area under the Pareto. Performance of GDMO. Maximization of biomass and acetate production in anaerobic (A) and aerobic (B) conditions, with glucose uptake rate 10 mmolh 1 gDW 1 in iAF1260 E.coli. The Pareto fronts obtained by GDMO are in black, and the results obtained by GDLS in red, purple, green and blue, set with M  1, 2, 3, 4 and k  1, 2, 3, 4, respectively. M and k are parameters of GDLS and define, respectively, the number of solutions proposed and the maximal number of neighborhood genes to knock out for each iteration of the algorithm. For a detailed description, see the original work (front provides an estimate of the number of intermediates which may be exploited for biotechnology purposes (optimization of an additional objective) or to build synthetic pathways (synthetic biology). Given two bacteria or two conditions for the same bacterium, the highest Pareto front would probably represent the best conditions for adding or optimizing pathways leading to new biotechnology products. Pareto optimality is useful to compare the ability of different organisms for optimizing specific metabolites (Supplementary Figs S9 and S10). Through our framework we are able to program bacteria in order to obtain desired outputs, thus framing them as living computers (). The goal is to provide a simple tool to search and propose to the biotechnologist the best and suitable solutions in silico, so as to reproduce them in vivo. Our framework investigates nutrients, reactions, metabolic pathways and knockouts for bacteria and other organisms in an efficient automatic design. We are able to present several proposals and indicate the best in terms of environmental conditions, knockout cost, robustness and sensitivity. Knockout strategies are useful in synthetic biology, while simulating the FBA in a particular experimental condition, using the gene expression values is important for providing an optimization of bacteria in a given environment and biotechnological/medical condition. Conflict of Interest: none declared.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
J.Costanza et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
P n j1 S ij v j  0. By considering all the intermediates simultaneously at steady state, the balance equation can be written in matrix form Sv  0, where S is the stoichiometric matrix of m rows and n columns, and v is the vector of the fluxes (metabolic and transport fluxes). The matrix S is not square and n4m, so we have a plurality of solutions. Each solution is a flux distribution representing a particular metabolic state, depending on the genotype and on the transport fluxes. The FBA approach finds the metabolic state in order to optimize a particular objective function, such as the maximization of growth rate or ATP production. Consequently, the problem can be formulated as a linear programming problem: maximize or minimize f 0 v, such that Sv  0 v L j v j v U j , j  1,. .. , n, 1 where f is a vector of weights (n dimensional). All the elements in f are either 0 or 1. f i is equal to 1 if v i is the objective we want to optimize. There may be more elements in f equal to 1, when there are several natural objectives to optimize. v L j and v U j are the lower-and upper-bound values (thermodynamic constraints) of the flux v j. (In our analysis, we consider v U j  100 and v L j  100 for the fluxes that represent reversible reactions.) The output of FBA is a particular distribution of fluxes, denoted by v, that optimizes the objective functions. Remarkably, FBA does not describe how a certain flux distribution is realized (by kinetics or enzyme regulation), but which flux distribution is optimal for the cell; for instance, it provides the highest rate of biomass production at a limited inflow of external nutrients. Biomass can be defined in terms of the biosynthetic requirement for the cell and is represented by a dummy reaction formulated according to experiments found in the literature. 2.2 Pathway-oriented SA In order to allow our algorithm to work at the genetic level, we use the geneproteinreaction (GPR) mappings. GPR mappings provide the links between each gene and the reactions v j that depend on it and define how certain genetic manipulations affect reactions in the metabolic network. For a set of L genetic manipulations, the GPR mappings are represented by a L  n matrix G, where the l, jth element is 1 if the lth genetic manipulation maps onto the reaction j, and is 0 otherwise. GPR associations distinguish between single-and multi-functional enzymes, isoenzymes, enzyme complexes, enzyme subunits, so that they capture the complexity and diversity of the biological relationships through a Boolean approach.Weusedthe approachimplementedinOptKnock(Burgard etal.,2003)tofindthefluxesdistributionthatreproducesthedesired productions (synthetic objectives) and achieves the maximal growth. The bi-level problem is represented as max g 0 v such that X L l1 y l C y l 2 0, 1 f g max f 0 v such that Sv  0 1  y 0 G j v L j v j 1  y 0 G j v U j , j  1,. .. , n, 2
Robust design of microbial strains at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
