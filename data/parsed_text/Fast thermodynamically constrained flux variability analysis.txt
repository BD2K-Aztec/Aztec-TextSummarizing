Motivation: Flux variability analysis (FVA) is an important tool to further analyse the results obtained by flux balance analysis (FBA) on genome-scale metabolic networks. For many constraint-based models, FVA identifies unboundedness of the optimal flux space. This reveals that optimal flux solutions with net flux through internal biochemical loops are feasible, which violates the second law of thermodynamics. Such unbounded fluxes may be eliminated by extending FVA with thermodynamic constraints. Results: We present a new algorithm for efficient flux variability (and flux balance) analysis with thermodynamic constraints, suitable for analysing genome-scale metabolic networks. We first show that FBA with thermodynamic constraints is NP-hard. Then we derive a theoretical tractability result, which can be applied to metabolic networks in practice. We use this result to develop a new constraint programming algorithm Fast-tFVA for fast FVA with thermodynamic constraints (tFVA). Computational comparisons with previous methods demonstrate the efficiency of the new method. For tFVA, a speed-up of factor 30–300 is achieved. In an analysis of genome-scale metabolic networks in the BioModels database, we found that in 485 of 716 networks, additional irreversible or fixed reactions could be detected. Availability and implementation: Fast-tFVA is written in Cþþ and published under GPL. It uses the open source software SCIP and libSBML. There also exists a Matlab interface for easy integration into Matlab. Fast-tFVA is available from page.mi.fu-berlin.de/ arnem/fast-tfva.html.
INTRODUCTIONFlux Balance Analysis (FBA) is a widely used method to analyse the capabilities of a metabolic network (). The strength of FBA is that it allows predicting growth rates of cells accurately (). FBA is based on the steady-state assumption, i.e. every metabolite that is produced, must also be consumed at the same rate. Flux through the network is enabled by exchange reactions, such as uptake of nutrients and production of biomass. Usually, next to bounds on the fluxes, stoichiometric constraints are the only constraints given, and optimal production of biomass can be computed by solving a linear program (LP). Frequently, there is not only one optimal flux distribution that achieves optimal biomass production. FBA, however, computes only one such solution. Elementary flux modes () or extreme pathways () are commonly used tools to analyse the whole flux space. But, in practice, the number of elementary flux modes grows exponentially with the number of reactions in the network. Hence, enumeration of elementary flux modes becomes infeasible for genome-scale networks. In addition, we are usually not interested in the raw data of all elementary flux modes (resp. extreme pathways), but only in specific properties (). Therefore, sampling methods (), elementary flux patterns () and flux variability analysis (FVA) () have been developed. FVA determines the maximum and minimum values of all the fluxes that will satisfy the constraints and allow for the same optimal objective value. For example, it is known that FBA is unreliable in predicting the flux value of by-products (). In such cases, FVA can be applied to predict the range of possible by-product production rates under maximal biomass production, which can be linked to gene expression data (). Variations of FVA can also be used to determine blocked or unessential reactions (). In FVA, however, the following problem arises: It can happen that the network contains internal cycles, i.e. there exist non-zero steady-state fluxes involving only internal reactions. In most metabolic models, only bounds on the flux value of exchange reactions are given (in addition to the zero bounds for the irreversible reactions). This leads to unbounded fluxes through reactions contained in such internal cycles, which is of course not realistic. To remove this issue, a general form of thermodynamic constraints can be added to the model *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com (), extending the standard non-negativity constraints for thermodynamic irreversibility of individual reactions. It has been shown that the flux values computed with thermodynamic constraints are more consistent, for example, with respect to gene expression data (). In recent years, there has been increasing interest in thermodynamic constraints, as they can also be used to link metabolite concentrations to flux modes (). In this article, we present a new method for efficient thermodynamically constrained FBA and FVA. We will work with the relaxed form of thermodynamic constraints, as it was introduced by. There, thermodynamic constraints are formulated as follows:SJ  0 steady-state assumption 1 ' J u flux bounds, e:g: irrev: 2  i J i 50 _ J i  0 8i 2 I thermodynamic constraint 3Here S denotes the stoichiometric matrix, J the flux vector, M the set of metabolites, R the set of all reactions, E the set of exchange reactions, I  R n E the set of internal reactions and the chemical potential of each metabolite (Gibbs free energy of formation). The operator  T denotes transposition. If the concentrations and equilibrium constants are known (), it is possible to further constrain. However, because this information is often not available, we will work here without additional constraints on. In a thermodynamically constrained flux balance problem, we maximize a linear objective function c T J, where c 2 R R , with respect to the constraints (1)(4). In thermodynamically constrained flux variability analysis (tFVA), we analyse the flux variability within the feasible (respectively optimal) solutions of a thermodynamically constrained flux balance problem, i.e. for all i 2 R, we solve the optimization problems maxfAEJ i j14g (respectively maxfAEJ i j14, c T J  optg). To simplify notation, we do not only use reactions as indices (e.g. J i to denote flux through reaction i) but also sets of reactions to index sub-vectors. For example, J I denotes the flux vector on the internal reactions only and S I contains only the columns corresponding to internal reactions. DEFINITION 1 (Thermodynamically Feasible Flux). A flux vector J is called thermodynamically feasible if there exists a vector such that (1), (3) and (4) are satisfied. If additionally (2) holds, J will be called a thermodynamically feasible flux that satisfies bounds ' and u. By multiplying T from the left side with S I , the potential differences for internal reactions are obtained. This is equivalent to the often found formulation K  0, where K is the null-space matrix of S I. The motivation behind Equation (3) is that normally a chemical reaction carries flux if and only if it reduces Gibbs free energy (). Since many reactions are catalysed by enzymes, however, it can happen that an enzyme is not present, for example because of regulatory control and hence, the corresponding reaction is not possible and does not carry flux, even if there is a negative potential difference. Thus, zero flux in Equation (3) is always allowed as well. Note that other formulations of thermodynamic constraints, for example the one used by, do not have this property. Hence, the different results have to be applied with care. Using Boolean variables a 2 f0, 1g I , a sufficiently large constant M40 and a small constant "40, this formulation can be translated into a mixed integer linear program (MILP), where a i  0 indicates that a forward flux J i 40 on reaction i is not allowed, and a i  1 forbids a backward flux J i 50. This is done by replacing (3) with the inequalities (5) and (6):This formulation is used in a similar form byfor the COBRA toolbox and many others (). It can be shown that if S does not contain any zero-columns, this MILP formulation is equivalent to the original one (). Although solving MILPs is NP-hard in general, practical tests have shown that current MILP solvers are able to optimize flux with respect to the above formulation also on genome-scale networks like the iAF1260 reconstruction of Escherichia coli ().observed that a steady-state flux vector J [i.e. which satisfies] is thermodynamically feasible if and only if there is no internal cycle contained by J. A sketch of the proof using oriented matroids can be found in (). A detailed version using LP-duality is available in Muler (2012) and was also recently published by. This result is used byto detect reactions that are irreversible due to thermodynamic constraints. In particular, one of their methods simply runs tFVA. This article is organized as follows: In Section 2.1, we show that the thermodynamically constrained flux balance problem is NP-complete, and thus, MILP is an appropriate tool. In Section 2.2, we derive a tractability result and analyse how much this applies to current genome-scale models. These theoretical results are the backbone of a new algorithm, which is described in Section 3. In Section 4, we apply our new method to study the importance of thermodynamic constraints in the analysis of genome-scale metabolic networks.
METHODS
NP-completenessIn FVA, a series of optimization problems are solved. The flux through each reaction in the network is maximized and minimized. In the following, we will see that already determining whether there exists a positive flux through a given reaction is NP-complete. Thus, the optimization problem is NP-hard, and it is unlikely that an efficient algorithm exists for the general case. Problem 1 (THERMOFLUX).Objective reaction r 2 R Question: Does a thermodynamically feasible flux J ! 0 with J r 40 exist? THEOREM 1. THERMOFLUX is NP-complete.The proof of this result can be found in the Supplementary Material.
TractabilityIt was observed early on by) that a thermodynamically infeasible flux can be turned feasible by removing internal cycles. For the following tractability result, it is important to understand when these internal cycles can be removed without changing the flux through the objective reactions. Reactions that are contained in internal cycles and reactions that are flux-forcing are problematic.be a metabolic network. A reaction r 2 R is contained in an internal cycle if there exists a J 2 R I with S I J  0 and J r 40. Given lower and upper flux bounds ', u 2 R R , a reaction r is called flux-forcing if ' r 40 or u r 50. For a linear objective function c 2 R R , a reaction r is called objective if c r 6  0.be a metabolic network with lower and upper flux bounds ', u 2 R R and a linear objective function c 2 R R. Let C I be the set of reactions contained in internal cycles, let F R be the set of reactions that are flux-forcing and let O R be the set of objective reactions. Given a steady-state flux J with ' J u, a thermodynamically feasible flux J  with c T J  c T J  and ' J  u can be computed in polynomial time w.r.t. the size of the network N if C \ F [ O  ;. The key to the proof of Theorem 2 is Algorithm 1, which gives the wanted polynomial-time algorithm. The complete proof can be found in the Supplementary Material.Input: A steady-state flux J repeat I  : fi 2 I : J i ! 0g I  : fi 2 I : J i 0g L : arg maxIt should be noticed that this theorem is similar to the result by. Although these authors use a different definition of thermodynamic feasibility, they also propose a method that keeps the flux through exchange reactions invariant. Since we can compute optimal steady-state fluxes in polynomial time by solving an LP, it follows that we can compute an optimal thermodynamically feasible flux in polynomial time, if all of the reactions contained in internal cycles are neither flux-forcing nor contained in the objective function. In practice, however, there will be reactions contained in internal cycles, and we have also to consider this case. For the following result, we need to quantify how often a reaction is contained in internal cycles. For this, it comes in very handy that internal cycles are simply steady-state flux vectors that do not use exchange reactions. Hence, we can describe the space of all internal cycles by elementary flux modes (). The elementary flux modes that do not contain exchange reactions will be called internal circuits or simply circuits. They may also be interpreted in terms of oriented matroid theory, which was introduced into metabolic network analysis byand used byto describe the internal circuits. The number of internal circuits containing the given reaction will be the quantification measure. We observed that the number of internal circuits is small for many genome-scale networks. See the Supplementary Materials for more details. THEOREM 3. If the number of internal circuits containing fluxforcing or objective reactions is bounded by a constant, the thermodynamically constrained flux balance (and flux variability) problem can be solved in polynomial time w.r.t. the size of the network. PROOF. Let F resp. O denote again the set of flux-forcing resp. objective reactions. Let C be the set of internal circuits that contain a reaction of F [ O. We know that the optimal thermodynamically feasible solution must not contain any internal circuits. Hence, in every internal circuit C 2 C, we can find a reaction that does not carry any flux in the direction of the circuit. Any such set of reaction/circuit direction pairs will be called a blocking set B & R  f, g (cf. Figs 1 and 2). We can enforce such a blocking set by adding sign constraints to the reactions in B, i.e. if r,  2 B, we add J r 0 to the problem and if r,  2 B, we add J r ! 0. It follows that after we enforced a blocking set, there exist no internal circuits that contain reactions of F [ O anymore. Hence, by Theorem 2 we can use linear programming to solve the thermodynamically constrained flux balance problem.By brute force, we only need to enumerate all blocking sets to find one giving us the optimal solution (see Algorithm 2). For each C 2 C, we have at most jCj  1 reactions that can be blocked (it does not make sense to block flux-forcing or objective reactions). This way, we only need to enumerate at most Q C2C jCj  1 blocking sets. Since the size of each circuit is bounded by the number of reactions and the number of circuits is bounded by assumption, we obtain a polynomial running time algorithm. oeAlgorithm 2: General solving procedure Input: objective function c, lower bounds lb, upper bounds ub maxFlux : 1 for all blocking set B do ' : lb, u : ub for each i,  2 B do u i : 0 for each i,  2 B do ' i : 0 J  solve ordinary FBA with bounds ', u maxFlux  maxmaxFlux, c T J end for return maxFlux In case of the E.coli iAF1260 model, the bound of Theorem 3 tells us that we only need to analyse at most 1680 different blocking sets (for optimization on one reaction without internal flux-forcing reactions).
IMPLEMENTATIONTo implement Algorithm 2 and use the result of Theorem 3, we still have to find a way for enumerating all blocking sets. To do this, we used the constraint integer programming (CP) framework Scip (). Scip can not only solve mixed integer programs () but also offers an interface for adding more general and complex constraints. Hence, we implemented a constraint handler and primal heuristic for Scip.Input: objective function c, flux bounds ', u Run ordinary FBA to compute a steady-state flux J. Find internal cycle L containing an objective reaction / a flux-forcing reaction by maximizing flux through the respective reactions w.r.t. S I L  0, 1 ! signJ i L i ! 0 8i 2 I. if no non-zero internal cycle L is found then run heuristic (Algorithm 1) else for i : L i 40 do if ' i 0 then create child node with u i  0. end for for i : L i 50 do if u i ! 0 then create child node with ' i  0. end for Add created child nodes to branch and bound tree and continue solving nodes. end ifOur algorithm (see Algorithm 3) works directly on the flux variables and does not use artificial Boolean variables. It basically implements a branch-and-bound strategy. As we have seen in Theorem 3, we need not block all internal circuits, but only those that contain objective or flux-forcing reactions.With highest priority, the constraint handler branches on circuits that contain objective reactions. If this is achieved, every flux through objective reactions must be sourced by exchange reactions. This usually bounds the flux to realistic values, and we may be able to reject the current blocking set, because a better solution has already been found.It never happens that we need to branch on circuits that contain neither objective reactions nor flux-forcing reactions. This is because of the heuristic we also implemented.The heuristic basically runs Algorithm 1. This means, if the network contains no circuits with objective or flux-forcing reactions, the heuristic will output an optimal flux, and the current branch of the search tree does not need to be analysed further. If the network contains circuits with objective reactions, we usually have a large flux through an internal cycle and thus, a bad dual bound. Although Algorithm 1 may also find an optimal solution in this case, the solver will not know it (the dual bound will be larger than the value of the solution found). To prove optimality, the solver will have to do the branching nonetheless. This is why we do not run the heuristic in this case. The heuristic may also fail if the network does contain circuits with flux-forcing reactions and no circuits with objective reactions. However, we may be lucky, and Algorithm 1 produces a solution that still satisfies the flux bounds. This solution is thus proven to be optimal. Therefore, we implemented a slight modification of Algorithm 3 that additionally runs the heuristic if there exist circuits with flux-forcing reactions, but no circuits with objective reactions. Thus, the heuristic is run at those nodes of the search-tree that do not contain any circuits with objective reactions. This way, we usually only need to branch on circuits containing objective. Blocking set (dashed arrows) for a given thermodynamically feasible flux (marked in black). Reversible reactions are drawn using two arrows. The bold arrow indicates the objective reactionreactions, sometimes on circuits containing flux-forcing reactions and never on circuits containing none of the two. Next to the actual solving routine, the result of Theorem 2 can also be used to speed-up tFVA significantly. Gudmundsson and Thiele (2010) observed that for ordinary FVA, a speed-up of factor 100 could be achieved by simply warm starting the LP computation necessary for FBA. Previous implementations always created new instances of the LP problem that the LP-solver had to solve from scratch. In warm starting, the LP-solution of the previous iteration is used as the starting point of the simplex algorithm used by the LP-solver. In the case of tFVA, however, we do not solve LPs anymore, hence this result is not directly applicable. On the other hand, many genome-scale metabolic models only contain few reactions involved in internal cycles, seeand. By Theorem 2, it follows that for most reactions, the LP-solution can easily be transformed into a thermodynamically feasible one without having to start any MILP-or CP-solver. Thus, the warm-starting effect can also be used for tFVA.
DISCUSSION
Run timeWe tested the correctness and run time of our implementation on various networks of the BiGG database (). For tFVA, we compared our results with those generated by the COBRA toolbox and obtained a difference of the order 10 3. This difference is likely due to numerical issues of the big-M formulation (), as the results of our code for different orderings of the reactions and metabolites only vary in the order of 10 8. The E.coli iAF1260 model was used for a more detailed analysis. We compared the CP approach with two different kinds of MILP formulations found in the literature; we did not compare it with non-linear formulations, as most non-linear solvers do not return globally optimal solutions. All computations were run on an Intel Core i5-2400S (2.5 GHz, 4 cores, 6 MiB L3 cache) with 4GB RAM. Both MILP formulations were solved using Gurobi (www.gurobi.com); the CP formulation was solved using Scip together with the public-domain solver Soplex (). As can be seen inof the Supplementary Material, the CP approach outperforms the MILP formulations in nearly all cases. We also performed run time tests for tFVA and compared our algorithm with the one implemented in the COBRA toolbox (). The CP algorithm is 30300 times faster than the COBRA implementation (see). The only trouble maker is the Homo sapiens reconstruction that did not finish within 2 h in our implementation. We were also not able to confirm the run time result byon that network, because COBRA (version 2.0.3) with Gurobi 5.0.0 terminated with an error message, probably due to numerical instabilities of the MILP formulation in the Gurobi solver.
Irreversible and fixed flux rates due to thermodynamicsIn a second study, we analysed how much information on irreversibility and fixed flux rates of reactions can be gained by adding thermodynamic constraints. Fixed reactions are sometimes the focus of network analysis, as in HadickeHadicke et al. (2011). We used the genome-scale networks in the BioModels database (http://www.ebi.ac.uk/biomodels-main, available on). Nearly all of these networks contain reactions in internal cycles (see). Hence, nearly every network of the BioModels database has reactions where FVA cannot predict bounds different from those given in the original FBA problem. These bounds tend to be uninformative, as usually the only small bounds are given on exchange reactions. tFVA, however, will compute bounds for these internal reactions that depend on the bounds on the exchange reactions, in particular the bounds on nutrient uptake. Therefore, the bounds obtained by tFVA for reactions contained in internal cycles will be better than the bounds computed by ordinary FVA by orders of magnitude. Irreversible reactions and reactions with fixed fluxes are a special kind of reactions with improved bounds, which we now investigate in more detail. As explained in Section 2, our algorithm works best if the number of reactions in internal cycles is small. In addition, as it can be seen in, the genome-scale networks in the BioModels database may be divided into two categories: networks with 5600 reactions in internal cycles and networks with significantly more reactions. In what follows, we analysed those networks with 5600 reactions in internal cycles. For each network, we ran FVA and tFVA on the whole flux space. If the model also contained an objective function on some reaction (e.g. biomass production), we also analysed the optimal flux space with FVA and tFVA. We ran the computations of FVA and tFVA for at most 30 min. We obtained that 829 (45% of all genome-scale networks in the BioModels database) had 600 reactions in internal cycles. Of these, we were able to analyse 716 networks in the given time limit. For the whole (resp. the optimal) flux space, we obtained the following results: In 386 (resp. 387) networks, flux through at least one reaction was additionally fixed due to thermodynamic constraints.In 481 (resp. 485) networks, at least one additional reaction was detected to be irreversible due to thermodynamic constraints. In, we provide further information on the number of additionally fixed or irreversible reactions when analysing the whole flux space. The plot looks similar for the optimal flux space. Additional details can be found in the Supplementary Material. Finally, we ran the same analysis for the networks of the BiGG database and obtained that in all of them, except Staphylococcus aureus iSB619, additional fixed and irreversible reactions were detected, see. In the optimal flux space, also in S. aureus iSB619, additional fixed and irreversible reactions were found.These results show that thermodynamic constraints provide useful information even for well-curated models like those in the BiGG database. Using our algorithm, tFVA can now be performed in a routine manner.
CONCLUSIONWe presented a new algorithm for thermodynamically constrained FVA. Compared with previous implementations, an enormous speed-up was obtained. tFVA can now be performed for a large number of networks and as a subroutine for other methods. As shown in our experiments, many network reconstructions, in particular also well-curated models, may be improved by executing our algorithm.FVA was performed on the whole flux space and on the subspace of the fluxes with optimal biomass production rate. The COBRA implementation used the Gurobi solver. The COBRA method sometimes failed to produce a solution, because Gurobi returned infeasible for problems that are actually feasible.Opt. fixed and Opt. irrev. denote the number of additionally fixed, resp. irreversible, reactions in the space of fluxes with optimal biomass production.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
A.C.M ller and A.Bockmayr at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Fast-tFVA at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
