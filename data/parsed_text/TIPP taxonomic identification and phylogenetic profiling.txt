Motivation: Abundance profiling (also called 'phylogenetic profiling') is a crucial step in understanding the diversity of a metagenomic sample, and one of the basic techniques used for this is taxonomic identification of the metagenomic reads. Results: We present taxon identification and phylogenetic profiling (TIPP), a new marker-based taxon identification and abundance profiling method. TIPP combines SAT\'e-enabled phylogenetic placement a phylogenetic placement method, with statistical techniques to control the classification precision and recall, and results in improved abundance profiles. TIPP is highly accurate even in the presence of high indel errors and novel genomes, and matches or improves on previous approaches, including NBC, mOTU, PhymmBL, MetaPhyler and MetaPhlAn. Availability and implementation: Software and supplementary materials are available at
INTRODUCTIONMetagenomic studies of microbial communities commonly generate millionsto hundreds ofmillionsofsequencingreads.Theassignment of accurate taxonomic labels to these sequences is a critical componentinmanyanalyses,butiscomplicatedbythefactthatthemajority ofthe organisms found in environmental or host-associated communities cannot be easily cultured in a laboratory, and of the organisms that can be cultured, an even smaller number have been sequenced, even partially. Thus, these commonly encountered organisms are largely absent from existing databases of known genomes and genes. Providing taxonomic labels to metagenomic sequences requires extrapolating the knowledge contained in sequence databases to previously unseen deoxyribonucleic acid (DNA) strings. Simple similarity-based approaches (e.g. picking the best database hit as the best 'guess' at the taxonomic label) have been shown to be insufficiently accurate (), leading to the development of new and more sophisticated methods. Recently developed methods improving on the simple similarity-based approaches include (a) composition-based approaches that rely on various machine learning techniques (Support Vector Machines in PhyloPythia and PhyloPythiaS (), Interpolated Markov Models in Phymm (), Bayesian models in NBC), or neural networks ()] to classify sequences based on their DNA composition (usually based on the frequency of short k-mers), (b) more sophisticated analyses of similarity search results [e.g. using lowest common ancestor aggregation in Megan (), or classifiers built from similarity search results as done in MetaPhyler (), MetaPhlAn () and mOTU () or protein profiles in Carma ()], and (c) combinations of multiple approaches (e.g., composition and similarity based approaches in PhymmBL (). Some of these approaches (e.g. most of the composition-based approaches) can be applied to any DNA sequence. However, others are specific to a reference collection of carefully selected genes (e.g. MetaPhyler, MetaPhlAn and mOTU use a collection of universal or cladespecific marker genes), and so are called 'marker-based' methods. Abundance profiling, also called 'phylogenetic profiling', seeks to estimate the relative abundance of the species (or genera, or families, etc.) within a sequence dataset. While many methods produce these estimates by characterizing most (or all) of the sequences in the dataset, marker-based methods produce these estimates by characterizing only those sequences that match the marker genes they rely on. The marker genes used by some of these methods (e.g. MetaPhyler and mOTU) are supposed to be single copy and universal; thus, the estimates produced using such markers can be used for profiling without needing to correct for copy number or missing data. We present taxon identification and phylogenetic profiling (TIPP), a new marker-based method for taxon identification and abundance profiling. We explore TIPP for abundance profiling using MetaPhyler's collection of 30 marker genes, but TIPP can be used with any single-copy gene for which a dense enough sample of full-length sequences is available. TIPP is implemented in Python and can be run on Unix and Mac.
APPROACH
OverviewTIPP has three phases: pre-processing (Phase 1), taxon identification for reads mapped to its marker genes (Phase 2) and abundance profiling based on these taxon identifications (Phase 3). *To whom correspondence should be addressed.Phase 1 involves a sequence of preprocessing steps, based on its set S of reference sequences for its set of marker genes, and its input set Q of uncharacterized reads (the 'query sequences'). TIPP uses SAT e () to compute an alignment A and tree T for full-length sequences for each of its marker genes, using its reference set S; these are called the 'backbone alignment' and 'backbone tree'. Since the NCBI taxonomy is not fully resolved (i.e., bifurcating), TIPP uses the backbone alignment and RAxML () to refine the NCBI taxonomy (restricted to the sequences in the backbone alignment) into a fully resolved tree, T . Thus, each marker gene has its own refinement of the taxonomy that is used in subsequent analyses. TIPP then uses BLAST () to determine which reads in Q map to its marker genes. At the end of this preprocessing, the set Q is partitioned into sets, with one set for each of its marker genes, and a final set for the reads that are not mapped to any marker gene Phase 2, where reads that are mapped to marker genes are taxonomically characterized, is the most involved, and is described below (and also in). Phase 3, which estimates the abundance profile, is quite simple. We pool all the reads that mapped to any marker gene and have been characterized at any taxonomic level into a single set. We compute the abundance profile as the relative distribution of the clades present in the pooled set. As the pooled reads are only required to be characterized at the phylum level, the abundance profiles can include a category of unclassified sequences. Sequences can be labeled as unclassified due to two reasons: there may not be sufficient support to classify a sequence at a given taxonomic level, and the taxonomy may not have a classification for a clade at a particular taxonomic level. For example, a species that does not have a family label would be unclassified at the family level, even if it was classified at a lower level; see Section S7 for an example.
Phase 2: taxonomic characterizations of readsWe describe how TIPP performs its taxonomic characterization of a single read mapped to a single marker gene; see. The input to TIPP includes the maximum alignment subset size (m) and the statistical support thresholds (s a and s p ) for alignment and placement support, respectively, which can be set by the user. We set default values as follows: m=100 and s a =s p =95%. Step 1: Decomposition. TIPP decomposes the set of leaves in the backbone tree T into subsets using the decomposition technique in SEPP. TIPP finds a centroid edge in T (one that separates the leaf set into two sets of approximately equal size), breaks the tree accordingly into two subtrees, and recurses on each subtree that contains more than m leaves. This produces a partition of the leaves of T into alignment subsets S 1 ; S 2 ;. .. ; S k , each of size at most m. Step 2: Compute Extended Alignment(s). We define the alignment A i by restricting the alignment A to S i , for every 1 i k; these are the 'subset alignments'. TIPP uses the HMMER software suite () to compute an HMM H i on each A i. Thus, TIPP represents the backbone alignment with a set of HMMs, a technique we call an 'HMM Family'. HMMER produces bit scores (discussed below), which are measures of the fit between each H i and each query sequence q 2 Q. Then, for the query sequence q, one or more subset alignments are selected so that the total statistical support for the alignments is at least s a (see below for how TIPP computes statistical support). TIPP uses HMMER to align q to each of the selected subset alignments, and thus, produces extensions of each subset alignment A i that include q (called an 'extended alignment'). Thus, each query sequence q gives rise to at least one and potentially many extended alignments of the reference dataset, each with jSj+1 sequences. Step 3: Placement. For each query sequence q and each extended alignment containing q, we use pplacer (), a maximum likelihood phylogenetic placement method, to insert q into T . The output of pplacer provides multiple placements and their likelihood weight ratios (the maximum likelihood values for all placement locations, normalized to sum to 1) for each extended alignment. We combine all placements resulting from the extended alignments into a single collection of placements, re-normalize their likelihood weight ratios to sum up to 1 (weighting each placement by the corresponding alignment support), and treat the normalized likelihood weight ratios as probabilities; see Section S8 for an example. Step 4: Classification. For each query sequence, we assign statistical support to each node in the taxonomy by adding the probabilities of all placements at or below the edge above the node; thus, the statistical support monotonically increases as one traverses the tree from any leaf to the root, and this allows us to classify the query sequence at all taxonomic levels for which it has support of at least s p. The query sequence is left unclassified at levels where the support of s p is not reached. A unique taxon identification is produced whenever s p 40:5; otherwise, TIPP outputs all identifications that meet the support threshold of s p , along with their support values. Because our default setting has s p =0:95, TIPP produces a unique taxon identification for each query sequence.. TIPP's algorithm to taxonomically characterize the query sequence q that is already mapped to a marker gene. The backbone alignment and tree are for the marker gene, and an HMM Family is computed for the backbone alignment. The HMM Family is then used to compute one or more 'extended alignments' including q. The phylogenetic placement method pplacer produces a probability distribution for the placements of q into the reference taxonomy. Each node in the taxonomy is labeled with the sum of the probabilities of any placements at or below the edge above the node. TIPP classifies the query sequence at any node with sufficient statistical support 3549 TIPP
Alignment support calculationTo take alignment uncertainty into account, we take a large enough number of extended alignments to reach the alignment support threshold s a. To determine the number of extended alignments we need, we use HMMER's output to define the probability that a given query sequence is generated by a given HMM from the set of HMMs computed for the different subset alignments. These calculations are based on the assumptions that (1) the subsets are disjoint, so that at most one HMM generates the query sequence and (2) the query sequence is generated by some HMM. For a given HMMER model H and query sequence q, HMMER calculates a bit-score (which we denote BS(H)), defined by:where PqjH is the probability of model H generating query sequence q, and PqjR is the probability of a random model R generating query sequence q. Assuming that the query sequence q is generated by exactly one of the HMMs (H 1 to H n , each corresponding to a different subset alignment), the probability that H i generated q is:Since our subsets all have roughly equal size, we make the simplifying assumption that the a priori probabilities of any two HMMs generating any given query sequence are equal. We can rewrite Equation (2) as:Hence, the probability of H i using bit-scores is given by:Thus, assuming that the bit-scores are sorted such that BSH i  ! BSH i+1  (i=1; 2;. .. ; n  1), to reach a specified threshold s a , we find the smallest m such that P m k=1 PH k jq ! s a .
EXPERIMENTAL DESIGN
OverviewWe evaluated TIPP in comparison to other phylogenetic profiling methods under three different conditions. Experiment 1 compared performance under easy conditions, where the genomes are known and the reads (. MetaPhlAn, conversely, selects markers that uniquely identify specific taxonomic groups. Assigning query sequences to genes (i.e. binning) is performed internally by each of the marker-based methods; see Section S4 for the BLAST settings used within TIPP for binning. Phred quality scores () are needed for each read, in order for mOTU to run. Since the datasets used in our study do not have the quality scores, we assigned Phred quality scores of 33 to all the bases of all the reads (99.95% probability that the base is correct). MetaPhyler allows the user to input a confidence threshold, and query sequences are only classified at a given level if this confidence threshold is met. We use the confidence level of 90% suggested by the authors of MetaPhyler. For PhymmBL, we classify a query sequence at the most specific classification yielding a confidence score of 95% or higher; however, PhymmBL does not give confidence scores at the species level, and thus, cannot be used to perform abundance profiling at the species level. Finally, NBC gives a confidence score of the query sequence matching a taxon. We accept the classification if the confidence score is above the species threshold formula given by the NBC authors (which is a function of read-length; see Section S4); thus, a query sequence will either be classified at the species level or be completely unclassified. See Section S4 for version numbers and commands used. 3.1.2 Reference marker datasets TIPP uses the reference sequence dataset obtained from), consisting of 30 phylogenetic marker genes that span the Bacteria and Archaea domains. The marker genes selected were believed to be single copy genes, universally present across the Bacteria domain, and resistant to horizontal gene transfer. Only species whose genomes have been sequenced were present in the reference dataset. The number of sequenced representatives for each marker gene ranges from 65 to 1555 sequences, with an average of 1312 sequences per marker gene. See Section S2 for the list of marker genes and the empirical statistics of the reference alignments on these datasets.
TrainingMetaPhyler, MetaPhlAn and mOTU come pretrained, but their reference datasets depend on which version is used. NBC and PhymmBL require the user to manually train their software, and their reference datasets are dependent on when the genomes were downloaded for training. The versions of MetaPhyler, MetaPhlAn and mOTU used in our article are based on reference datasets downloaded from NCBI in 2010, 2011 and 2012, respectively. TIPP is trained on the same reference dataset as MetaPhyler, and thus is trained on sequences downloaded from NCBI in 2010. NBC and PhymmBL were trained on the same set of genomes downloaded from NCBI on May 2013. Thus, NBC and PhymmBL are based on training datasets from 2013, mOTU is based on a training dataset from 2012, MetaPhlAn is based on a training dataset from 2011, and MetaPhyler and TIPP are based on a training dataset from 2010. These differences favour methods (such as NBC and PhymmBL) that are trained on more recent datasets than those based on older datasets (such as MetaPhyler and TIPP). See Section S6 for additional information on how TIPP was trained.
Simulated abundance profiling datasetsThe datasets we used have different properties, including the average read length (short versus long), complexity of the profiles (uniform versus non-uniform), the rate of sequencing errors (low versus high), and whether the datasets contained 'novel' or 'known' genomes (defined shortly). The complexity of the profile is labeled as low complexity (LC; staggered distribution of species), high complexity (HC; uniform distribution of species) and medium complexity (MC; distribution of species in between LC and HC). A dataset is labeled as 'novel' if none of the marker-based methods have been trained on any of the genomes in that dataset (see below for more detail). A dataset is labeled as 'known' if it contains any genome that was previously used to train at least one of the marker-based methods. We provide a brief overview of the datasets, separated out into experimental conditions (); a more in-depth description of the individual datasets (including their Shannon Entropy) can be found in Section S3.
Experimental condition 1: easy datasetsThe first group of datasets contained query sequences from known genomes (all the genomes were present in the training sets of at least one of the marker-based methods) and had low rates of sequencing error (insertions, deletions and substitutions). The easy datasets are separated into two different conditions: long read datasets (average length of 200 to 1000 nucleotides) and short read datasets (average length of 100 nucleotides or shorter). The long read datasets include the FACS HC simulated dataset (), the FAMeS LC, MC and HC datasets (), and the WebCarma HC-simulated dataset (). Both the WebCarma and FACS dataset contained simulated 454 reads and had an average indel rate of 3% per base. The FAMeS dataset contained reads taken from Sanger sequencing projects, and thus, is expected to have very low rates of sequencing error [typically 51% error per base (. The original FACS HC dataset contained viral, bacterial, and human sequences, and we removed the viral and human sequences so that profiles were estimated only on bacterial reads. The short read datasets include the MetaPhlAn HC and LC-simulated datasets (), the TIPP FACS HC Illuminasimulated dataset, and the TIPP WebCarma HC Illuminasimulated dataset; the last two datasets were generated using MetaSim () to simulate Illumina reads from the metagenomes used in the original FACS HC and WebCarma HC datasets. The short read datasets contain simulated Illumina reads with at most 0.2% substitutions per base.
Experimentalcondition 2: datasets with high rates of indel errors The second group of datasets was modified versions of the easy datasets with additional indels to make analyses more difficult. The easy datasets contained reads with less than 0.2% substitution errors per base or less than 3% indel errors per base. We inserted additional indel sequencing errors to the query sequences in the easy datasets, using indel rates typical of PACBio reads (12% insertion and 2% deletion error rate per base (). Details can be found in Section S3.6.
Experimental condition 3: datasets with novel genomesWe generated datasets that contained 'novel' genomes, which are genomes that were not in the training sets of the marker-based methods. As the marker-based methods use older versions of the NCBI genomes compared to the composition-based methods, some of the selected genomes were present in the training set of the composition-based methods. To make the genomes novel to all methods, we modified the training sets of the composition-based methods to exclude the selected genomes. This modification was only applied to Experiment 3, where we analyzed the novel genome datasets. We downloaded all genomes from NCBI in July 2014 and selected any genome whose genus was found in the training sets of all methods, but the species was not found in any of the training sets of the marker-based methods. We then excluded the species of the selected genomes from the training sets of the composition-based methods. This resulted in a set of genomes that were novel to all methods at the species level, but not novel to any of the methods at the genus level. In total, 100 genomes met this criterion. We used MetaSim to generate four datasets containing all 100 genomes, each dataset varying the complexity of the profile (LC versus HC) and the sequencing model used to generate the reads (short Illumina reads versus long 454 reads). We categorize these datasets as 'easy' novel genome datasets as they contained no indels (datasets with short Illumina reads) or low amounts of indels (5% indel error per base for the datasets with long 454 reads). In addition, we generated 'hard' novel genome datasets by modifying the 'easy' novel genome datasets to include additional indel errors (12% insertion and 2% deletion error rate per base).
Computing profilesMetaPhlAn, mOTU, MetaPhyler and TIPP output an abundance profile from a set of query sequences. NBC and PhymmBL output the classification of the query sequences; abundance profiles for NBC and PhymmBL were estimated using the relative abundance of the query sequence classification results.
Performance evaluation Wecompute the Hellinger distance () between the estimated abundance profile and the true abundance profile. Let C l be the set of clades found in the true profile and the estimated profile for the taxonomic level l, R x be the abundance of clade x for the true profile, and E x be the abundance of clade x for the estimated profile. Then H l (the Hellinger distance for taxonomic level l) is:H l ranges from 0 (if the profiles match exactly) to 1 (if the profiles share no taxa in common and the profiles have no unclassified clades). Note that if a method estimates a portion of the clade as unclassified, that portion is not included in the H l calculation (i.e. E unclassified is omitted from the formula). Finally, the MetaPhlAn HC and LC datasets consist of two and eight replicates; for these datasets, we report the average H l of the replicates.
Computational resourcesThe majority of experiments were run on the homogeneous Stampede cluster at the Texas Advanced Computing Center (TACC). Each method was run on a dedicated node with 16 cores with 32 GB of memory and given 48 h to complete on TACC (maximum allotted time that a job can run on Stampede). Methods that could not complete within the 48-h limit were also run on a heterogeneous Condor computing cluster and homogeneous Lonestar cluster.
RESULTSExperiment 1: Easy datasets. Our first experiment explored datasets with low error rates coming from known genomes. On the long read easy datasets, mOTU had generally poor performance (Supplementary), and also failed to run on some of these datasets (terminated with an error message, see Supplementary Section S1.6); we, therefore, omit mOTU from the long read results.shows the average Hellinger distances on the easy datasets; figures and tables for individual datasets can be found in Supplementary Section S1.1. Results on the long read datasets (left subfigure) show that TIPP had the best overall accuracy, followed by NBC. MetaPhlAn was in third place in terms of overall performance (though Metaphyler was more accurate than MetaPhlAn at the class level). Finally, PhymmBL was theAll easy datasets Easy short read datasets excluding MetaPhlan datasets. Experiment 1: Errors in abundance profile estimates on easy datasets. We show average Hellinger distance for different methods on simulated metagenome datasets containing known genomes and query sequences with low rates of sequencing error (seefor list of datasets). We omit mOTU from the long read results because it failed to complete on the FACS HC and WebCarma datasets. Results are shown for (a) all datasets, and (b) easy short read datasets after excluding the MetaPhlan datasets (thus on WebCarma Illumina and FACS HC Illumina datasets). See Section S1.1 for results on individual datasets least accurate on these data. On the short read datasets (right subfigure), results were somewhat different. First, while mOTU had poor performance on the long read datasets, mOTU had the best overall accuracy of all methods on the short read datasets. At the species level, MetaPhlAn tied with mOTU for first place, followed by TIPP and then NBC. At the genus level, mOTU had the best accuracy, but TIPP and MetaPhlAn were very close seconds. Results at the family through class levels showed TIPP and mOTU tying for first, with MetaPhlAn in third place. Finally, at the phylum level, TIPP, MetaPhlAn, Metaphyler and mOTU tied for first, with much better accuracy than NBC or PhymmBL. Because MetaPhlAn was trained on its datasets, we removed MetaPhlAn's datasets and re-evaluated performance (). On this reduced set, MetaPhlAn tied for first at the species level (slightly less accurate than mOTU, but equal to TIPP), but was much less accurate than TIPP at all other levels. TIPP had the best overall performance on these data, though it tied for first with mOTU at the genus level, and tied for first with PhymmBL at the phylum level. Experiment 2: Datasets with known genomes and high rates of indel errors.shows the average performance of different methods on datasets with known genomes and simulated with high rates of indel errors. We omit results for mOTU because it terminated with error messages on all these datasets (see Supplementary Section S1.6). We also omit results for MetaPhlAn, MetaPhyler and NBC on the long read datasets as they estimated taxonomic profiles that were completely unclassified on some of the long read datasets. On the long read datasets (left subfigure), only TIPP and PhymmBL successfully ran on all the datasets. Other methods either terminated early or could not classify fragments on some of the datasets. TIPP had the best accuracy of all methods at all taxonomic levels. PhymmBL was the next best method. On the short read datasets (right subfigure), MetaPhlAn and TIPP had the best results, with MetaPhlAn more accurate than TIPP at the species level but the two methods generally having indistinguishable performance at the other levels. PhymmBL had the least accurate results of all methods, followed by NBC.shows results for datasets with little to no indel errors, and the bottom row shows results for datasets with high rates of indel errors (12% insertion and 2% deletion errors per base). The left column shows results for datasets containing long reads, and the right column shows results for datasets containing short reads. See Section S1.3 for results on individual datasets. Experiment 2: Error in abundance profiles for datasets with known genomes and high indel error rates. We show average Hellinger distance for different methods on simulated metagenome datasets with known genomes and simulated with indel errors. We omit mOTU from the results because it failed to complete on any of these datasets. We omit MetaPhlAn, MetaPhyler, and NBC from the long read datasets as they could not classify any reads from at least one of the following datasets: WebCarma (MetaPhlan), FACs HC (NBC and MetaPhyler), and FAMeS LC (MetaPhyler). See Section S1.2 for results on individual datasets 3553 TIPP characterized very few reads (see Supplementary). Finally, PhymmBL was clearly more accurate than MetaPhlAn, which was more accurate then NBC. On the short read novel genome datasets (right column), TIPP and MetaPhyler were distinctly more accurate than all other methods for both easy datasets and high indel datasets (with TIPP slightly more accurate in the presence of high indels, and MetaPhyler slightly more accurate on the easy datasets). The performance of mOTU was interesting: on the easy short read novel genome datasets, mOTU was very close to PhymmBL but slightly less accurate; however, mOTU failed to complete on the high indel short read datasets (terminated with an error message, see Supplementary Section S1.6). The other methods were largely indistinguishable from each other, but much less accurate than both TIPP and MetaPhyler.
Running timeWe generated five replicates from the easy TIPP HC datasets, varying the total number of fragments from 500,000 to 2,000,000 fragments. PhymmBL and NBC failed to complete within 48 h on any of these datasets (see Supplementary Section S1.4), but the other methods completed all analyses, most within an hour. The fastest method was mOTU, which completed in 57 min on 2,000,000 fragments for both short and long reads. TIPP finished in under an hour on both short and long fragments. MetaPhlAn required 525 min on short fragments, but used 90 min on long fragments. MetaPhyler completed in513 min for short fragments, but used 29 h for long fragments.
DISCUSSIONThe study compared four marker-based methods (mOTU, TIPP, MetaPhyler and MetaPhlAn) and two composition-based methods (PhymmBL and NBC) on a collection of datasets. On the easy datasets with only known genomes (Experiment 1), many methods produced highly accurate abundance profiles, although which method was the best depended on the read length. On the easy short read datasets the most accurate methods were mOTU, MetaPhlAn and TIPP, while the most accurate methods on the easy long read datasets were TIPP and NBC, with MetaPhlAn a close third. However, when datasets had novel genomes or high indel error rates, the performance of most methods degraded significantly. For example, while NBC had excellent accuracy on the easy long read datasets, it had poor accuracy in the presence of high indel rates. Similarly, although mOTU had excellent accuracy on easy short read datasets with known genomes, it had poor performance on short read datasets with novel genomes and terminated with an error message on the datasets with high indel rates. We also saw that MetaPhyler had difficulties on datasets with long sequences and high indels (Experiments 2 and 3). TIPP did well on the easy datasets (known genomes with low sequencing error rates), where it tied for first with other methods. However, TIPP was the only method that was robust to all the tested model conditions (short versus long reads, novel versus known genomes, low indel versus high indel error rates), so that it was either first or tied for first under even very difficult conditions (novel genomes with high indel rates). Consequently, TIPP dominated the other methods in terms of overall performance. Thus, one of the main features of TIPP is its relative robustness to sequencing errors (both substitutions and indels) and its ability to perform well on novel genomes. We conjecture that the HMM Family technique within TIPP provides this robustness, which uses HMMs in a divide-and-conquer framework, and also benefits from the use of local alignment techniques. Therefore, the high error rates commonly encountered in single-molecule sequencing technologies [up to 14% indel rate for Pacific Biosciences technologies (] that are likely to be increasingly used in the context of metagenomic data may not be particularly problematic for TIPP, even when the data contain novel genomes. Instead, our results indicate that TIPP may well continue to have good accuracy with new sequencing technologies that result in reduced data quality. One of the interesting observations in this study is that the marker-based methods (TIPP, MetaPhlAn, mOTU and MetaPhyler) often gave more accurate abundance profiles than the composition-based methods (NBC and PhymmBL), even though marker-based methods estimate abundance profiles by characterizing only those reads that map to their selected marker genes. These results show that accurate profiles can be obtained by taxonomic characterization of only a fraction of the query sequences. However, the choice of marker genes, and the technique used to bin the reads to the markers, has an impact on the resultant abundance profile. Thus, future research should investigate whether improved performance can be obtained using a different set of marker genes and different techniques to map reads to the marker genes. Also, our abundance profile estimates were based on combining all reads for all markers into one set, and using the distribution estimated for that set; more sophisticated techniques could be used to combine distributions estimated for each marker.
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
N.-p.Nguyen et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
MetaPhyler's performance was interesting: least accurate at the species level, but improving rapidly with the higher taxonomic groups, so that it matched the best at the class level, and was slightly more accurate than both TIPP and MetaPhlAn at the phylum level. Finally, when the MetaPhlAn datasets were removed from the experiment, TIPP had the best overall performance, followed closely by MetaPhlAn (see Supplementary Fig. S3); the relative performance of the remaining methods was largely similar to the average results on the high indel short read datasets. Experiment 3: Datasets containing novel genomes. Figure 4 shows the average Hellinger distance for the 'easy' and 'hard' novel metagenome datasets, with the long read datasets in the left column and the short read datasets in the right column (figures and tables for individual datasets can be found in Supplementary Section S1.3). Because all genomes are novel (none of the species are in the training datasets), the lowest error results at the species level would have 100% of the species unclassified, and such a profile would have a Hellinger distance of 1 ffiffi 2 p % 0:71. On the easy long read novel genome datasets (top left), TIPP had the best accuracy at all but the species level (where MetaPhyler was the best). The next best method was MetaPhyler, and the remaining methods had comparable performances to each other (though NBC was slightly less accurate than the others at all levels). On the high indel long read novel genome datasets (bottom left), TIPP again had the best accuracy at all but the species level, where Metaphyler was best. But on these more difficult long read datasets, Metaphyler had very poor results at the remaining levels, largely because it
