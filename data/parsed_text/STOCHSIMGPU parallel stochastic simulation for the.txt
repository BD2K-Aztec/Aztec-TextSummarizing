Motivation: The importance of stochasticity in biological systems is becoming increasingly recognized and the computational cost of biologically realistic stochastic simulations urgently requires development of efficient software. We present a new software tool STOCHSIMGPU that exploits graphics processing units (GPUs) for parallel stochastic simulations of biological/chemical reaction systems and show that significant gains in efficiency can be made. It is integrated into MATLAB and works with the Systems Biology Toolbox 2 (SBTOOLBOX2) for MATLAB. Results: The GPU-based parallel implementation of the Gillespie stochastic simulation algorithm (SSA), the logarithmic direct method (LDM) and the next reaction method (NRM) is approximately 85 times faster than the sequential implementation of the NRM on a central processing unit (CPU). Using our software does not require any changes to the user's models, since it acts as a direct replacement of the stochastic simulation software of the SBTOOLBOX2. Availability: The software is open source under the GPL v3 and available at http://www.maths.ox.ac.uk/cmb/STOCHSIMGPU. The web site also contains supplementary information.
INTRODUCTIONDecision making in biological systems may depend on single molecular reaction events making it necessary to develop, and carefully investigate, stochastic simulations of such events. A classic example is the pathway bifurcation in -phage infected in Escherichia coli cells (). Three exact stochastic simulation algorithms of chemical reaction systems are commonly used in Systems Biology: (i) the stochastic simulation algorithm (SSA) of; the efficient and exact reformulations (ii) the next reaction method (NRM) ofand (iii) the logarithmic direct method (LDM) of Li and Petzold (2006). To accurately approximate the statistical distribution of the molecular populations at any given point in time, large ensembles of realizations are needed emphazising the need for efficient * To whom correspondence should be addressed. computation. Unlike existing efficient simulation tools like, we use NVIDIA CUDA to transform GPUs of modern PCs into massively parallel co-processors. CUDA is supported by many of NVIDIA's current GPUs and is available in many off-theshelf computers. 1 We present an implementation of these algorithms which computes ensembles of many realizations 85 times faster on a GPU than on a CPU assuming no specialized knowledge about GPUs by the user.
APPROACHSTOCHSIMGPU is a direct replacement of the stochastic simulation implementation provided by the SBTOOLBOX2 for MATLAB by Schmidt and Jirstrand (2006) hiding the technical details and focusing on user friendliness. It is tightly integrated and directly usable within MATLAB. The user benefits without any changes to their code from the efficient computations on the GPU. The software simulates ensembles of many independent realizations of stochastic simulations of chemical reaction systems in parallel using the three exact algorithms SSA, NRM and LDM. The reaction systems have to be based on the law of mass action. The sampled realizations are used to compute averages and histograms of the molecular populations across the realizations on the GPU. A CUDA enabled GPU consists of a set of streaming multiprocessors (SMs). These contain eight single precision and one double precision floating point processor cores and a pool of fast on-chip shared memory (). This massively parallel design makes GPUs especially well suited for problems where the same set of instructions can be applied to several data sets simultaneously like the parallel stochastic simulation of large realization ensembles. STOCHSIMGPU computes in a task parallel approach ensembles of many independent realizations of stochastic simulations. The maximum number of realizations depend on the GPU used and the reaction system simulated. Its features include: @BULLET three exact simulation algorithms, SSA, NRM and LDM; @BULLET integration into MATLAB requiring no special GPU knowledge; @BULLET histogram computation across all realizations of the stationary process or at any number of user-defined time points and at the steady state;The available on-board memory of the graphics board limits the maximum number of samples of the molecular populations to be stored. The number of samples times the number of species times the number of realization has to fit into the onboard memory. To maximize performance, the current molecular populations, propensity functions and the NRM's indexed priority queue are stored in the shared memory. The size of on-chip shared memory limits the size of the reaction system computable. 2 Furthermore, the reaction kinetics is limited to the law of mass action.
Stochastic simulations on GPUs
PERFORMANCEWe compared the speedup, this is the ratio of sequential runtime on a CPU to parallel run-time on the GPU, of our parallel implementation in two ways. The speedup (gain) of the parallel over the sequential implementation for each algorithm (SSA, NRM and LDM), as well as the speedup (net gain) compared with our sequential NRM implementation which we found to be the most efficient sequential algorithm. At a conservative estimate, the parallel stochastic simulation using GPUs is approximately 85 times faster than the sequential implementation on a CPU.shows the speedup for four example systems of which two are biologically meaningful (). The speedup shown is the net gain a user can expect when simulating biologically meaningful chemical reaction systems.
Beginning with the GeForce 8 series. A list of supported GPUs is available at: http://www.nvidia.com/object/cuda_gpus.html.
The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [11:49 21/3/2011 Bioinformatics-btr068.tex]
The Tesla architecture provides 16 kb, and the Fermi architecture up to 48 kb of shared memory. See Supplementary Material for details. 4 DISCUSSION We developed a GPU-based software package for efficient stochastic simulation of homogeneous (well-mixed) chemical systems. Parallel computing on GPUs also has the potential to accelerate more detailed models of intracellular processes. For example, spatially distributed (reactiondiffusion) systems are sometimes modeled using compartment-based approaches, Erban and Chapman (2009), which enable the use of the Gillespie SSA to simulate the time evolution of the system. In particular, STOCHSIMGPU is directly applicable to these models. Since STOCHSIMGPU is optimized for non-spatial models, there are limits on the size of the reaction diffusion system. If the reactiondiffusion system is discretized into many compartments, a different software package should be used (Hattne et al., 2005).
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
