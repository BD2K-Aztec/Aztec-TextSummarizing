Motivation: The expansion of DNA sequencing capacity has enabled the sequencing of whole genomes from a number of related species. These genomes can be combined in a multiple alignment that provides useful information about the evolutionary history at each genomic locus. One area in which evolutionary information can productively be exploited is in aligning a new sequence to a database of existing, aligned genomes. However, existing high-throughput alignment tools are not designed to work effectively with multiple genome alignments. Results: We introduce PhyLAT, the phylogenetic local alignment tool, to compute local alignments of a query sequence against a fixed multiple-genome alignment of closely related species. PhyLAT uses a known phylogenetic tree on the species in the multiple alignment to improve the quality of its computed alignments while also estimating the placement of the query on this tree. It combines a probabilistic approach to alignment with seeding and expansion heuristics to accelerate discovery of significant alignments. We provide evidence, using alignments of human chromosome 22 against a five-species alignment from the UCSC Genome Browser database, that PhyLAT's alignments are more accurate than those of other commonly used programs, including BLAST, POY, MAFFT, MUSCLE and CLUSTAL. PhyLAT also identifies more alignments in coding DNA than does pairwise alignment alone. Finally, our tool determines the evolutionary relationship of query sequences to the database more accurately than do POY, RAxML, EPA or pplacer.
INTRODUCTIONThe proliferation of high-throughput DNA sequencing has produced a huge amount of genomic DNA sequence, including genomes from many higher eukaryotes. Intensively studied clades of organisms such as mammals, Drosophila fruit flies and worms of the genus are now typically represented in public databases by complete or partial genomes of multiple species. A group of closely related genomes can be combined into a large-scale multiple alignment of orthologous sequences (). * To whom correspondence should be addressed. Building a high-quality multiple-genome alignment requires a large investment of computational resources and curation time, particularly if the alignment will become a reference for future users. We would therefore like to amortize this investment by effectively utilizing information present in the alignment that is not readily available from its component genomes. Multiple-genome alignments are commonly used to interrogate a clade's evolutionary history (), often with the help of a phylogenetic tree on the component species, or to discover genomic loci of unusually high conservation () or unusually fast change (). However, they are rarely used to augment one of the most common operations in bioinformatics: aligning a new sequence to an existing reference. In principle, using a reference multiple alignment, rather than any one of its component genomes, to align a query sequence should result in a more accurate alignment, since the aligner can use the pattern of conservation at each position to more accurately determine which query base corresponds to which multiple alignment column. Moreover, given a phylogenetic tree relating the species in the reference, an aligner should be able to use standard probabilistic models of evolution to compare the likelihoods of possible alignments, rather than resorting to an arbitrary scoring system. In fact, alignment could even infer the evolutionary relationship of the query to the reference, placing it on the tree of the reference's species. In practice, however, most widely used alignment tools either cannot use reference multiple alignments or cannot do so in a phylogenetically aware way. BLAST () and other accelerated variants of SmithWaterman () are widely used for pairwise sequence comparison, but these methods compare only individual sequences. PSI-BLAST () creates an alignment between a query and a profile computed from a database of individual reference sequences. However, the construction of the profile does not take into account phylogenetic information, so it does not weigh each reference sequence in a phylogeny-aware way. HMMER () and SAM () can align a sequence to a pre-existing multiple alignment, if it is generalized to a profile hidden Markov model, but even these tools use only statistical conservation at each position, rather than phylogenetic information, to perform alignments. Tools for de novo multiple sequence alignment exist that use trees to improve alignment quality. The classic CLUSTAL () software uses a guide tree to align multiple sequences. More recent tools, such as POY (), can align sequences given a tree or jointly compute a multiple alignment and a supporting phylogeny. However, these tools cannot as a rule incrementally update a multiple alignment and tree starting from
PhyLATpre-existing references, which is the computation needed to align a query sequence to a multiple alignment database. Moreover, the high cost of de novo multiple alignment limits the computationally feasible methods that these tools can employ. PaPaRa (), unlike the tools described above, uses a guide tree to map queries, in particular short reads, to an existing multiple alignment, but it does not score or improve the resulting alignments probabilistically given the phylogeny. Practical implementation of high-throughput pairwise alignment between a query sequence and database of reference multiple alignments with phylogenetic information therefore remains an open problem. Classical results from phylogeny () give the theory needed to construct a maximum-likelihood alignment between a query sequence and a reference multiple alignment, provided that neither query nor reference contains gaps. This theory can be extended to allow the query to contain bases that are not homologous to any reference position or vice versa; for example, Siepel and Haussler describe such an approach for phylogenetic HMMs (). However, multi-genome reference alignments typically include columns with both bases and gaps, which may in fact be homologous to certain query bases. Finding a reasonable way to evaluate the likelihood of such putative homologies is a difficult problem. This fundamental issue, as well as assorted technical details needed to adapt any alignment algorithm to BLAST-like highthroughput use, make the construction of a fast, phylogenetically informed tool non-trivial. In this work, we describe PhyLAT (the Phylogenetic Local Alignment Tool), a tool for rapidly aligning a query DNA sequence to a database of multi-genome reference alignments. PhyLAT combines BLAST-style seeding and extension heuristics with a EM-like, phylogenetically aware back-end alignment algorithm. We score alignments to references containing gaps using a model that is simplified enough for efficient implementation but disallows alignment hypotheses that are demonstrably impossible alignment given the pattern of gaps in the reference. We show that PhyLAT produces results in protein-coding regions of mammalian genomes that are better supported by external evidence than the results of pairwise alignment, and that our tool can accurately infer the evolutionary relationship of the query to the species in the multiple alignment.
RESULTSPhyLAT is built around an EM-like algorithm that simultaneously computes an alignment between a query sequence and a multiple alignment and predicts the placement of the query on the tree associated with the multiple alignment. The algorithm iteratively refines query alignment and branch placement until both have converged. To accelerate this core alignment algorithm, we adopt a BLAST-like seed generation and extension heuristic (see Supplementary Materials). We use the evolutionary consensus sequence of the multiple alignment to rapidly generate pairwise seed alignments, filter these seeds by E-value, and finally apply the core algorithm to each seed. The structure of the aligner is illustrated in.
Problem formulation for final alignment stageLet M be a database composed of a multiple alignment of n orthologous DNA sequences. The species from which the DNAis the offline preprocessing of the database to compute its consensus and parameterize a mutation model at each position. sequences are drawn are related by a phylogenetic tree  , whose n leaves correspond to the n species. Each branch i in the tree has a length l i , which is the evolutionary distance between the two endpoints of the branch. To convert these branches to transition probabilities, we use a mutation rate matrix Q, similar to the extended TamuraNei model (), that we estimate from the columns of M. We chose this TamuraNei-like model because it has a simple form with few parameters to estimate. In fact, PhyLAT can use arbitrary, non-time-reversible mutation models. Given a query DNA sequence q, we want to find all high-scoring local alignments between q and M. We use a seed-and-extend procedure, described in the next section, to choose short substrings of q and subregions of M to align. For each such chosen pair, an alignment A is chosen to maximize a likelihood Pr(q,M|A, ). Here, we assume that all possible alignments of q and M are a priori equally likely and choose the most likely one given the data and the tree. Computing the complete-data likelihood for an alignment A requires that we know where the query is placed on  relative to the sequences of M. We assume that we do not have this information; instead, we sum over all possible augmented tree topologies  * i that add the query to a given branch on  , as shown in:Pr(q,M|A, ) = iPr(q,M, * i |A, ).For compactness of notation, we drop the explicit dependence of Pr(q,M|A, ) on the fixed tree  in subsequent sections.
EM computation of optimal local alignmentAlignment of a query to a reference starts with seed generation, which produces initial ungapped seed alignments between the query and one or more reference regions. Details of seed alignment generation are given in Supplementary Materials. For each seed alignment, we perform gapped extension, described below. Initially, we apply this final alignment stage to a region of the query and database of length 20. To allow for final alignments of varying lengths, we retry the computation on regions whose sizethe left is the original, whereas the rest are its four possible augmented phylogenies. Each augmented phylogeny is actually a family of trees with two parameters l 0 and l 1 , which are the length of the new branch and its attachment site to its parent branch.
H.Sun and J.D.Buhleris progressively doubled until doing so does not improve the final alignment score. We now describe the EM algorithm used to compute the final local alignment A for given regions of q and M, as well as the probabilities of the augmented phylogenies  * i. First, we define a set of indicator variables {x i } for each possible augmented phylogeny: x i = 1 if augmented topology is  * i
otherwise.In this EM model, the known data are M and q (and the tree  ), while the latent variables are the x i s. The unknown parameter of the model is the alignment A. The EM algorithm iteratively refines an initial guess A (0) at the alignment A while simultaneously inferring a distribution over the position of q in the phylogeny. The m-th iteration starts with an alignment A (m1) computed in the previous iteration. In the E-step of the iteration, the algorithm computes the expectation of each x i :In the M-step, the algorithm computes a new alignment A (m) to maximize the expected log-likelihood function:Each iteration improves the likelihood of A and recomputes the distribution of the query's position in the tree. Finally, a local optimal point is reached, and the algorithm reports both a final alignment and an associated probability distribution over possible augmented tree topologies. Assuming that the residues of q are stochastically independent, as are the columns of M, we can decompose the probability of the data given a tree placement and alignment asPr(q,M|x i = 1,A) = |A|
j=1Pr(y,Z(Z| ),where yand Zare a residue in q and column in M, respectively, from the j-th column of alignment A, and q and M are the aligned regions of q and M, respectively.
Computation of per-column probabilityIn both the E-step and the M-step, we need to compute the probability of an aligned query position and multiple alignment column given an augmented tree. The details of how this probability is computed determine the accuracy and efficiency of our algorithm. We introduce two key innovations for this task: treatment of alignment gaps in a way that is informed by the tree  , and caching of subtree probabilities to accelerate the computation. Further details of the per-column computation beyond the highlights in this section are given in Section 3 and in Supplementary Materials.
Treatment of gapsAn alignment of a query q to multiple alignment M may include gaps in either of q or M, or it may align a base of q to a column of M that contains both bases and gaps. To efficiently estimate the probabilities associated with such alignments, we need a gap model that is fast yet incorporates meaningful information about the alignment M. We consider two kinds of gap. The first kind, the 'local' gap, is assumed to arise as a series of single-base indels, whereas the second, the 'global' gap, arises through a mutation that adds, deletes or moves many contiguous bases at once. Local gaps are modeled using a single-base indel model, whereas global events may require a more complex model. In this work, we use the local model for sequence gaps of length  20; gaps longer than this are treated as missing data in the species where they occur. We note that this threshold was not empirically tuned to our test data but rather was an a priori estimate of the threshold between local and global indel events. A very simple local indel model used in some work, including our own earlier work on PhyLAT (), treats a gap as a fifth residue that can freely interconvert with A, C, G and T. However, such treatment is inappropriate because, when we score an alignment column using a phylogeny, all observed residues are at the leaves in the tree. To compute the probability of the column, we sum over all possible labelings of the tree's internal nodes, which describe possible histories of insertion and deletion. Unfortunately, these labelings may include some histories that are biologically meaningless because they imply that aligned residues are non-homologous. The models of () also have the problem of illegal labelings. Other models exist that consider only legal indel histories for a given phylogeny (). However, the tools using these models are computationally expensive in practice because they enumerate all possible labelings. Moreover, these models consider only whether there is a base or gap at an inner node, disregarding the identity of the base. The model ofconsiders only legal labelings, but it still requires a time-reversible mutation model. The current version of PhyLAT uses a gap model that recognizes that gaps cannot interconvert freely with residues in a phylogeny. Our model imposes two constraints. (i) Once a residue is deleted (converted to gap) on a branch, it cannot later be inserted, because the inserted residues are not homologous to the original residue (see). (ii) If any internal node of the tree has a gap, then only one of its children can have a residue (insertion); the other one must have a gap (see). Note that once a residue is inserted, it can afterwards be deleted. PhyLAT's per-column probability computation, while based on a simple mutation rate matrix Q (described in Section 3) that nominally treats a gap as a fifth residue, sums over only those configurations of internal residues that are consistent with the two constraints given above. This excludes impossible indel histories that would otherwise contribute to the computed alignment probability.Details of the sum computation are given in Supplementary Materials.
Experimental resultsWe have implemented PhyLAT in the C++ language, using the TAO optimization package () to estimate maximumlikelihood values for the edge-length parameters l 0 and l 1 shown in. In this section, we interrogate the result quality of PhyLAT. We tested PhyLAT's accuracy on three queries: human chromosome 22, Caenorhabditis elegans chromosome 3, and Drosophila melanogaster chromosome 4, each aligned to a database of multiple genome alignments for related species. Here, we present only the human results, which are representative of our tool's qualitative performance versus competing aligners; the other experiments' results are described in Supplementary Material. We aligned human chromosome 22 (assembly hg19, GRCh37) against a whole-genome alignment of five mammals (shown in) from the UCSC genome database (), which was assembled using human chromosome 22 as the reference sequence. We also tested the accuracy of tree placement by aligning opossum to a different five-species tree from the UCSC database.
Accuracy of DNA alignment of human chromosome 22Currently, there are no good methods to evaluate absolute accuracy of arbitrary multiple alignments of DNA sequence (). However, protein-coding regions are generally stable and can be translated to protein and aligned by a protein aligner, producing alignments of generally higher quality than those obtained from DNA alone. We therefore validated PhyLAT's alignment quality by examining local alignments involving annotated coding sequences. We used the UCSC database's reference alignment between human and the other five species as our ground truth for orthology relationships among our sequences.illustrates one benefit of using multiple species for recovering alignments between the query and orthologous sequences in the database. We divided the alignments found by PhyLAT according to the number of species (up to five) with sequence at the locus of the alignment in the database. The more species present in the database at a given locus, the higher the probability that an alignment at that locus aligns the query to orthologous sequences. We note that alignments with more species present are not systematically better-conserved than those with fewer species; indeed, aligned regions with only two aligned sequences had higher identity on average than those with three or four. Nevertheless, the fraction of query sequences aligned to their orthologous regions in the multiple alignment increased monotonically with the number of species present.
Validation of DNA alignment by protein alignmentTo estimate the likely accuracy of PhyLAT's alignments in coding DNA, we extracted and translated the sequences it aligned, then used a protein multiple aligner to realign them, and finally checked whether the DNA alignment inferred from the aligned proteins matched PhyLAT's alignment. Because protein alignment uses information not available to a DNA aligner, we expect that it will yield more accurate results in general; hence, concordance between the DNA and protein alignments acts as a proxy for the (unknown) absolute accuracy of the DNA alignment. From PhyLAT's DNA alignments involving orthologous sequences, we first extracted those portions that covered proteincoding regions (as annotated in the UCSC database). For each such alignment between a DNA query q and a multiple alignment of k DNA sequences s 1 ...s k , PhyLAT's output induces pairwise protein alignments A i between the translation of q and that of each s i. We compared the induced alignments A i to alignments A i obtained by first translating q and s i independently, then aligning the two resulting protein sequences using a proteinspecific alignment tool. A codon in a query was considered 'accurately aligned' to the database if and only if, for 1  i  k, A i agreed with the corresponding, independently derived A i over that codon. We repeated this experiment using four different protein alignersClustalW (), DIALIGN (), Muscle () and T-Coffee ()and obtained substantially similar results with each. Additional validation would be possible by comparing our results to, e.g. structural superposition of the aligned proteins. However, such superpositions are already known to agree closely with protein aligners' output on mammalian proteins (), so we did not pursue this extra validation step. The first part ofshows PhyLAT's accuracy on our test set using ClustalW as the protein aligner. Over 97% of query codons aligned by the algorithm were accurately aligned to the database by our measure. Moreover, PhyLAT's alignments covered >99% of all annotated codons in the multiple alignment, so this accuracy applies to essentially all the coding sequence that could possibly be aligned. We further subdivided the protein-coding region of the database to identify regions where the protein multiple alignment induced by the DNA multiple alignment of s 1 ...s k was inconsistent with the result obtained by independently translating each of s 1 .
..s k , thenCopyedited by: TRJ MANUSCRIPT CATEGORY: ORIGINAL PAPER
H.Sun and J.D.Buhleraligning the resulting sequences using a protein multiple aligner. Such regions are more likely to be misaligned in the database, which in turn provides bad information to PhyLAT's aligner. For the 84% of codon positions in the database that were consistent by the above criterion, PhyLAT's accuracy was well over 99%. An alternative to PhyLAT's approach would be to align the query to a single, representative DNA sequence instead of a DNA multiple alignment. For example, one might align our human query to one of the multiple alignment's component species' genomes, or to the evolutionary consensus of these genomes given the tree. We therefore investigated whether such pairwise alignments, as realized by the widely used BLAST software (v2.2.23+;), could match the accuracy and coverage obtained by PhyLAT. It was not computationally feasible to BLAST the entirety of human chromosome 22 at once against a database sequence as long as our multiple alignment. Instead, for each homologous PhyLAT alignment of query segment q and database segment M, we extracted the collinear block B in UCSC's multispecies multiple alignment that contained q and M. We then used BLAST to align q to each individual sequence in B, or to its evolutionary consensus. If BLAST returned more than one local alignment between a query and a block, then we retained all such alignments. Finally, we evaluated the collection of induced BLAST alignments in protein-coding regions of the query using the same accuracy and coverage measures described above. Note that accuracy for a pairwise BLAST alignment of two coding DNA sequences is determined by agreement with a single pairwise protein alignment between them, whereas for PhyLAT, all induced pairwise alignments must agree with the protein aligner's results. The second part ofshows the results of using BLAST pairwise alignments, rather than PhyLAT's approach, on our human to mammalian alignment task. For species other than rhesus, the closest to the human query, per-codon accuracy of the pairwise alignments was inferior to PhyLAT's. Aligning to the consensus actually lowered accuracy compared with two-species alignments. Moreover, the pairwise alignment sets covered fewer codons in the original multiple alignment than did PhyLAT's output. This lower coverage arises because not all species had sequence at every point in the reference multiple alignment. Hence, even aligning human to rhesus, which produced alignments to 100% of the codons in the rhesus sequence, yielded <92% coverage of all codons in the multiple alignment. Overall, PhyLAT produced alignments with accuracy comparable to using BLAST to search against the best single reference species from the multiple alignment, while offering substantially improved coverage because of the availability of multiple species to cover assembly or homology gaps left by any one species' genome. We also compared PhyLAT with other commonly used multiple alignment tools, including POY, MAFFT (), MUSCLE, CLUSTAL and PaPaRa (). Because these programs produce multiple alignments, which include all input sequences, it is not proper to feed the whole reference sequences and query to them to produce genome-scale multiple alignments. Instead, we use homologous segments from the. Note that because we do global alignments on the input, these aligners aligned all the input codons.
Tree placement of human sequencesAnother measure of PhyLAT's accuracy is whether it placed each query sequence in its correct location on the tree of the species in the database. For the local alignments of orthologous sequences in our test set, EM should place the human query in its accepted location relative to the other, non-human mammalian species with a high-posterior probability while assigning low probabilities to incorrect placements. Although some methods are available for comparing two trees with branch lengths (), there is not an acknowledged standard on correct branch lengths for a given phylogeny. We therefore assessed only whether the most likely placement of the query in each local alignment was topologically correct, i.e. was the human sequence placed on the branch leading to rhesus, or on some other branch?shows how many alignments placed the human sequence on each branch of the phylogeny with highest probability. In total, 88.7% of alignments correctly placed the human sequence adjacent to rhesus. If we add in 'almost correct' placements (defined as branch placement adjacent to the correct one), the fraction of such placements rises to 95.2%. We also compared PhyLAT's accuracy with that of tools whose results include a branch placement for the query sequence, including POY, RAxML (), EPA (), pplacer () and PaPaRa (). Because all these programs need multiple alignments to do prediction, we used only orthologous informant sequences and queries as the input. Because gene trees may be different from species trees, in order to assess branch placement accuracy, we also divided the placements into two categories: those whose informant trees matched the trees built by PHYLIP () from MAFFT alignments of the sequences, and those whose informant trees were incongruent with their PHYLIP trees. The results are shown in. PhyLAT's placement accuracy was substantially greater, both absolutely and relative to its competitors, when the informant sequences matched the supplied phylogeny. We note that POY has only one correct placement; this is because it builds an entirely new tree on the input sequences instead of just inserting the query species into the existing tree of informant species. We provided the informant phylogeny as input restrictions on the tree topology, but POY used it only as a starting tree and failed to produce output trees consistent with these restrictions. We further investigated how confident PhyLAT typically was about its branch placements. A confident placement has the vast majority of the probability mass, with little probability assignedto other hypotheses, while a low-confidence placement distributes the probability more equally across branches. We computed the entropy for the posterior placement distribution of each query, summarizing these entropies in a histogram in. For most correct branch placements, PhyLAT was highly confident about its predictions, while confidence for incorrect predictions was typically lower. For almost-correct placements, the ratio of high-to lowconfidence placements is close to even. We could detect and reject most incorrect placements, with relatively few false rejections, by rejecting any placement with an entropy over 0.25 bits. The absolute accuracy of tree placement for our experiments on C. elegans and D. melanogaster was considerably lower than for our mammalian alignmentbetween 40% and 50%. However, as in the mammalian case, PhyLAT's results were more accurate than those of competing tools that gave placement information in their output. Details may be found in Supplementary Material.
Tree placement of the opossum speciesIn spite of the fact that phylogenetic relations of existing species have been explored extensively, many relations remain missing, and many are being modified constantly. In a recent update of the phylogenetic tree of 46 species from the UCSC database, 35 species changed their tree placements (). One example of such a change was the movement of opossum from relatively near the root of the mammalian phylogeny to a location much closer to other marsupials such as wallaby. As a further test of PhyLAT on a different dataset, we aligned opossum chromosome X to a five-species multiple alignment from the UCSC genome database. PhyLAT produced 931 local alignments, with branch placements of the opossum queries as shown in. Assuming, as in the revised UCSC tree, that thethe branch placement, the entropy is in interval. The smaller the entropy, the more concentrated the probability distribution, and the more confidence PhyLAT has in the branch placement.correct placement is on the branch to wallaby, 63.3% of queries were placed correctly, whereas 81.3% were placed correctly or almost correctly. In contrast, the number of queries placed at opossum's old location in the tree was only 6.3%. This example shows that PhyLAT's placement probabilities can be useful for discovering inconsistencies with an accepted phylogeny.
H.Sun and J.D.Buhler
Computational efficiencyOur implementation of PhyLAT used several techniques to reduce the time cost. We used a compact, column-oriented storage format for the database to reduce cache misses. We used a customized phylogenetic caching techniques to store per-column probabilities, which greatly reduced the cost of probability computations. Finally, we tweaked the parameters of our algorithm for greater efficiency while maintaining high accuracy. PhyLAT took 16.01 h to compute all alignments of human to the five-species mammalian multiple alignment on an AMD Opteron 2.4 GHz processor. In contrast, using BLAST to search human against the individual speciesrhesus, rat, cow, bushbaby and guinea pig took 3.51, 1.10, 2.11, 1.29 and 2.06 h, respectively. Using BLAST to search human against the evolutionary consensus took 3.90 h. (In all cases except the PhyLAT run, we had to break the human sequence into small pieces to avoid quadratic behavior by NCBI BLAST.) Hence, while there is a non-trivial cost to using PhyLAT, it is well within an order of magnitude of simpler pairwise alignment, while yielding superior results. The time complexity of PhyLAT lies mainly in the E-step, i.e. optimizing branch placements. With increasing numbers of informant species, this cost comprises the greatest part in the running time. We tested with 210 informant species.shows the comparison of running time per seed.
Accuracy impact of additional informantsWe also investigated the effect of increasing informant species from 2 to 10 on alignment accuracy and branch placement accuracy. We found that, while adding distant species can increase coverage of the query sequences, it may not help increase branch placement or alignment accuracies. Because distant species are hard to align to their orthologous species during the construction of a multiple alignment, they may add noise to the search. Moreover, too-distant species will not contribute more information about where to place the query when closer species are already available. For detailed results, please see the Supplementary Materials.
Evaluation of statistical significanceIt has been shown that for many alignment problems, the optimal scores under the null hypothesis empirically follow a Gumbeldistribution (). We tested this hypothesis for the scores of alignments generated by PhyLAT by running it on real queries and permuted multiple alignments. We found that the score distribution closely matched the Gumbel distribution; details are given in Supplementary Material.
0
METHODS
Parametrization of PhyLATPhyLAT's evolutionary model was parametrized to match the contents of the multiple alignment database, using maximum likelihood estimation. Mutation rates in the matrix Q were scaled so as to yield a total rate of one accepted mutation per unit of time. To accommodate non-uniform evolutionary rates at different sites in the multiple alignment (), we considered fast, medium and slow models at each column of the multiple alignment, corresponding to branch lengths of 0.1, 1 or 10 times the lengths given in the UCSC-supplied tree. Each column was assigned its most likely model from among these three. The banded affine alignment algorithm used in the M-step of gapped extension used a bandwidth of 101 and an arbitrary gap-opening penalty of 12. We note that addition of a gap-opening penalty makes our aligner not strictly probabilistic, and hence not truly EM; however, we felt that this concession was worth the practical benefits of an affine algorithm, given that our probabilistic model alone would score gaps as linear rather than affine. We did not add an arbitrary gap-extension penalty but rather used the log-probabilities inferred for each individual gap.
Computation of E-stepTo comput x i , we apply Bayes' theorem to Definition 1:Pr(q,M|A (m1) ) .The first term of the numerator is given by Equation (3), whereas the second term is independent of the actual data and can be viewed as the user's prior over the position of q in the tree. The denominator is independent of x i and can be normalized away.PhyLAT
Computation of M-stepBy subtracting a constant from Equation (2), the alignment that maximizes Equation (2) is the one that maximizeswhere  (y,Z) is the per-column probability, which can be precomputed and cached.
DISCUSSIONWhile PhyLAT generally aligned query sequences to their orthologous regions as inferred from the UCSC database, there were 350 human query sequences which were not aligned to their orthologous regions. We examined these query sequences using BLAST and found that all of them are highly conserved coding regions, which are likely difficult to distinguish from the orthologous loci on the basis of similarity alone. These 350 sequences are spread over 56 genes; the most frequently hit gene was IGL2, hit by 87 queries, which is an immunoglobulin lambda locus. We also examined 48 human queries whose branch placements in PhyLAT were not on the branch leading to rhesus yet had entropies < 0.25, indicating high confidence in the 'wrong' placement. These queries hit CDS regions from 19 genes, listed in. We searched for these genes and their families in TreeFam () and found that, for 45 of the 48 placements, the gene trees were different from the species tree. We hypothesized that PhyLAT's 'wrong' branch placement prediction in these cases was an artifact of the incorrect tree provided for the informant species. To test this hypothesis, We reran PhyLAT on the 45 identified cases using the appropriate gene tree from TreeFam as the reference tree in each case. We found that, in 40 out of the 45 cases, PhyLAT's query placements with the revised input tree were consistent with the gene tree from TreeFam. We further note that the distribution of the 48 wrong placements is in accordance with the theory of deep coalescence, which states that short wide trees may show more genes with deep coalescence than long narrow trees (). Seefor an example.
CONCLUSIONWe have described PhyLAT, an efficient, phylogenetically aware tool computing and scoring local alignments between a query sequence and a large multiple alignment. In our tests, PhyLAT's accuracy in alignments involving coding DNA exceeded that of BLAST, even using the consensus of all species in the database. PhyLAT's accuracy also exceeded that of phylogeny-aware alignment tools. Moreover, the inferred placement of queries on the tree of the database species was typically both topologically accurate and confident. We believe that PhyLAT's methods will prove useful in augmenting existing high-throughput sequence comparison tools to exploit the extra information provided by multiple-genome alignment databases. Several opportunities exist to improve PhyLAT's performance and utility. First, our assumption that successive residues in the query or successive columns in the multiple alignment are stochasticallyindependent is not realistic. It could be useful to add a dependence model between adjacent bases/columns to improve the accuracy of alignment. Second, PhyLAT assumes that its query is a single DNA sequence. It would be useful to handle queries that are themselves multiple alignments. However, there are unresolved computational complexity issues with this extension. In particular, we cannot simply enumerate all simultaneous branch placements of all species in the query multiple alignment with respect to the database multiple alignment. Some efficient way must be found to form a hypothesis about how the query species and database species relate within a single tree. Third, we need to develop efficient approaches to estimate the statistical significance of gapped alignments in PhyLAT without resorting to expensive simulations. Karlin and Altschul's theory for ungapped alignments is not applicable to gapped alignments (). However, many kinds of alignments involving gaps were empirically demonstrated to follow EVD (). To derive empirical parameters of KA statistics, tens of thousands of alignments need to be generated and scored. This, the human query is placed on the branch leading to cow. The species tree shows that the human gene is closer to rat than cow, whereas TreeFam shows that the human gene is actually closer to cow than rat.
H.Sun and J.D.Buhlerprocess is computationally expensive but may not give parameters accurate enough for computing statistical significance for new alignments, especially when the composition of new data is different from that in simulation. In Sadreyev and Grishin (2003), a rescaling technique was explored to use a standard score distribution to estimate statistical significance of profile alignments of new profiles. In Poleksic (2009), the island method was applied to collect more optimal scores from a single simulated alignments. Recently it was shown that all fully-probabilistic HMM models have the property that the scores follow a Gumbel distribution (), but this is not applicable to those alignment models not based on HMM. Finally, it would be useful to consider alternative database trees during alignment, e.g. to accommodate the possibility that a query is not being aligned to an orthologous locus in the database. While it is possible to sum probabilities over multiple tree hypotheses, the increased computational cost of using multiple trees makes it imperative to be careful not to consider too many such alternative trees. Heuristics for picking likely trees would help to guide the search.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
