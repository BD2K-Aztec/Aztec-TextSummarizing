There are many programs that can read the secondary structure of an RNA molecule and draw a diagram, but hardly any that can cope with 10 3 bases. RNAfdl is slow but capable of producing intersection-free diagrams for ribosome-sized structures, has a graph-ical user interface for adjustments and produces output in common formats. Availability and implementation: Source code is available under the GNU General Public License v3.0 at http://sourceforge.net/projects/ rnafdl for Linux and similar systems or Windows using MinGW. RNAfdl is implemented in C, uses the Cairo 2D graphics library and offers both command line and graphical user interfaces.
INTRODUCTIONIt might be a great simplification, but the most popular method to show RNA structure remains the classic radial base pair graph. We describe RNA force-directed layout (RNAfdl), whose strength is the ability to handle large molecules and to produce diagrams without intersections, without user intervention. This type of diagram is extremely regular with fixed distances between consecutive bases and between members of base pairs. Unpaired bases are placed on circle segments. The rules mean that diagrams are easy to interpret, but the rules cannot be enforced on larger molecules. They invariably lead to intersecting lines. This means that programs either produce bad diagrams or bend the rules. NAView () relaxes the rules for loop regions, with the consequence that loops may be distorted in size and shape, and larger structures are still not free of line intersections (data not shown).treated the intersection problem with a backtracking method, but the code still cannot draw a large ribosomal subunit (). A more recent program can draw large structures without intersections, but varies the distances between bases in loops (). There are no intersections, but the size of the loops may not reflect the number of bases. If automatic approaches fail, one may allow or even encourage manual intervention. VARNA and RNAViz both use sophisticated methods for an initial layout, but rely on manual editing to get intersection-free plots ().
METHODSRNAfdl is able to generate intersection-free diagrams for structures as large as ribosomes. Like jVis.Rna (), RNAfdl begins with a circle plot (). When there are no pseudoknots, this is always intersection free. A penalty function is defined that quantifies how the current layout deviates from an ideal radial layout, and this is optimized by conjugate gradients minimization (). The penalty function uses quadratic terms r ij  r 0 ij 2 to enforce distances between consecutive residues, paired bases and non-consecutive bases within unpaired loops. In each case, r ij is the distance between bases i and j, and r 0 ij is an ideal distance. In the case of unpaired regions, this is calculated from ideal circular geometry. A quartic term is used for repulsion between bases. Finally, and more unusually, a quartic term is used to enforce repulsion between bases and any line connecting consecutive or paired bases. This was a key ingredient to avoiding the need for manual intervention. A slight ad hoc change was made to the classic conjugate gradients method. First, the largest possible step size that does not lead to an intersection is calculated. A sweep line algorithm is used to test for intersections, and a ray-tracing method is used to detect loops that would be pushed into helices (). Next, the textbook-style locally optimal step size is determined within this range. The implementation uses range and segment trees ().
RESULTS AND DISCUSSIONOur test suite has 4500 test structures from 100 to 700 nucleotides, as well as small and large ribosomal subunits downloaded from RNA STRAND ().All are drawn without intersections and without user intervention (). Admittedly, the running time is long, ranging from seconds to half an hour for larger structures ($700 bases), to more than half a day for the large ribosomal subunit (2904 bases). The complexity per step is O(n 2 ) (Supplementary Material), but the number of steps can be large for complicated structures. This pain is somewhat alleviated by two properties. First, the code can use a quick *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com radial layout method for smaller structures. Second, the graphical user interface allows one to stop a calculation, save the coordinates and resume later. The graphical user interface offers manual editing, which can be useful even if there are no intersections to be repaired. RNAfdl is flexible here. Single bases or a set of selected bases can be moved without restrictions. Like other tools, RNAfdl allows bases to be colored; non-canonical base pairs can be incorporated; and many drawing parameters ranging from line width, the size of bases, to the interval of tick marks can be adjusted. The program can, of course, be invoked from the command line, making it suitable for automation in pipelines or batch jobs. One can also generate circle plots, linear plots and mountain plots. The input follows the dot/bracket format used in the ViennaRNA Package (). Output can be saved in several different formats defined by the underlying graphics library. The choices include PDF, SVG and popular bitmap formats such as PNG, so it is easy to incorporate diagrams in other files. RNAfdl is a tool for people with patience, but there may be no other program that gives similar approximations to radial layouts for large structures. It is hoped that the program is already useful for publications and presentations. The performance will be improved. Parts of the cost function are independent and suitable for parallelizing. There is room for heuristics for better starting configurations. There is also room for more sophisticated treatment of pseudoknots and tertiary interactions.
A B
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
N.Hecker et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
