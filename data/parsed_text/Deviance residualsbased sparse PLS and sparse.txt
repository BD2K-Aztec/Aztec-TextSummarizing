Motivation: A vast literature from the past decade is devoted to relating gene profiles and subject survival or time to cancer recurrence. Biomarker discovery from high-dimensional data, such as transcrip-tomic or single nucleotide polymorphism profiles, is a major challenge in the search for more precise diagnoses. The proportional hazard regression model suggested by Cox (1972), to study the relationship between the time to event and a set of covariates in the presence of censoring is the most commonly used model for the analysis of survival data. However, like multivariate regression, it supposes that more observations than variables, complete data, and not strongly correlated variables are available. In practice, when dealing with high-dimensional data, these constraints are crippling. Collinearity gives rise to issues of over-fitting and model misidentification. Variable selection can improve the estimation accuracy by effectively identifying the subset of relevant predictors and enhance the model interpretability with parsimonious representation. To deal with both collinearity and variable selection issues, many methods based on least absolute shrinkage and selection operator penalized Cox proportional hazards have been proposed since the reference paper of Tibshirani. Regularization could also be performed using dimension reduction as is the case with partial least squares (PLS) regression. We propose two original algorithms named sPLSDR and its non-linear kernel counterpart DKsPLSDR, by using sparse PLS regression (sPLS) based on deviance residuals. We compared their predicting performance with state-of-the-art algorithms on both simulated and real reference benchmark datasets. Results: sPLSDR and DKsPLSDR compare favorably with other methods in their computational time, prediction and selectivity, as indicated by results based on benchmark datasets. Moreover, in the framework of PLS regression, they feature other useful tools, including biplots representation, or the ability to deal with missing data. Therefore, we view them as a useful addition to the toolbox of estimation and prediction methods for the widely used Cox's model in the high-dimensional and low-sample size settings. Availability and implementation: The R-package plsRcox is available on the CRAN and is maintained by Fr ed eric Bertrand. http://cran.r-project.org/web/packages/plsRcox/index.html.
INTRODUCTION
Lasso penalized Cox proportional hazards regressionL 1 penalized Cox regression was first suggested by, as an extension of its variable selection procedure called least absolute shrinkage and selection operator (Lasso) (). Since then many developments in the framework of generalized Lasso have appeared., described a highly efficient procedure called LARS for Least Angle Regression for variable Selection, which can be slightly modified to provide solution for the Lasso., taking advantage of the close connection between LARS and Lasso proposed a solution to the CoxLasso procedure in the setting of high-dimensional data, combining LARS path inside each Newton approximation. However, the iterative reweighted least squares strategy used by the LARSCox procedure for handling survival endpoints undo much of the computational efficiency of the LARSLasso procedure. Segal, 2006, described an estimation strategy that restores the computational efficiency of the LARSLasso procedure. He showed that the expression to be minimized in the CoxLasso procedure of Tibshirani could be approached by the deviance residuals sum of squares. He then performed the original LARS-Lasso algorithm on those specific residuals., using results from the LARS algorithm, proposed a L 1-regularization path algorithm for generalized linear models based on the predictor-corrector method of convex optimization that they applied to the Cox proportional hazards model. Their algorithm exploits the near piece-wise linearity of the coefficients to approximate the solution at different constraints, then numerically maximizes the likelihood for each constraint via a Newton iteration initialized at the approximation., coordinatewise gradient Lasso algorithm to the Cox proportional hazard model. Following quite the same ideas, Goeman, 2010, described a full gradient Lasso algorithm. Unlike the algorithm of Sohn et al., it does not update a single coordinate at a time, but uses the full gradient at each step and can switch to a NewtonRaphson algorithm to speedup its convergence when it gets close to the optimum. Both methods are gradient based and therefore scalable to high-dimensional data because they do not require matrix inversion. Tibshirani, 2009, proposed uniCox, *To whom correspondence should be addressed.
yThe authors wish it to be known that, in their opinion, the first two authors should be regarded as joint, which yields sparsity at both group and individual feature levels to select groups and predictors within a group, for example, genes within a pathway.
PLS regressionPrediction in high-dimensional and low-sample size settings already arose in chemistry in the eighties. Partial least squares (PLS) regression, that can be viewed as a regularization method based on dimension reduction, was developed as a chemometric tool in an attempt to find reliable predictive models with spectral data (). Nowadays, the difficulty encountered with the use of genomic or proteomic data for classification or prediction, using large matrices, is of comparable nature. It was thus natural to use PLS regression principles in this new context. The method starts by constructing latent components, using linear combinations of the original variables, which are then used as new descriptors in standard regression analysis. Different from the principal components analysis (PCA), this method makes use of the response variable in constructing the latent components. The PLS regression can be viewed as a regularized approach searching the solution in a subspace named Krylov space giving biased regression coefficients but with lower variance. In the framework of censored genomic data, the PLS regression operates a reduction of the dimensionality of the gene's space oriented toward the explanation of the hazard function. It allows transcriptomic signatures correlated to survival to be determined.
PLSCox regressionGarthwaite, 1994, showed that PLS regression could be obtained as a succession of simple and multiple linear regressions. Tenenhaus, 1999, proposed a fairly similar approach but one that could cope with missing data by using the principles of the Nipals algorithm (). As a result, Tenenhaus suggested that PLS regression be extended to logistic regression (PLSLR) by replacing the succession of simple and multiple regressions by a succession of simple and multiple logistic regressions in an approach much simpler than that developed by Marx, 1996. By using this alternative formulation of the PLS regression,, extended the PLS regression to any generalized linear regression model (PLSGLR) and to the Cox model (PLSCox) as a special case. Further improvements have then been described () in the case of categorical descriptors with model validation by bootstrap resampling and variable selection using hard thresholding. Since then many developments in the framework of PLS and Cox regressions have appeared in the literature., directly applied PLS regression to survival data and used the resulting PLS components in the Cox model for predicting survival time. However, such a direct application did not really generalize PLS regression to censored survival data, as it did not take into account the failure time in the dimension reduction step. Based on a straightforward generalization of Garthwaite, 1994, presented a solution, partial Cox regression, quite similar to the one proposed by Bastien and Tenenhaus, using different weights to derive the PLS components but not coping with missing data.
PLSDRFollowing Segal, 2006, who suggested initially computing the null deviance residuals and then using these as outcomes for the LARS-Lasso algorithm, Bastien, 2008, proposed PLSDR, an alternative in high-dimensional settings using deviance residuals-based PLS regression. This approach is advantageous by both its simplicity and its efficiency because it only needs to carry out null deviance residuals using a simple Cox model without covariates and use these as outcome in a standard PLS regression. The final Cox model is then carried out on the m-retained PLSDR components. Moreover, following the principles of the Nipals algorithm, weights, loadings and PLS components are computed as regression slopes. These slopes may be computed even when there are missing data: let t hi =x h1;i w h =w 0 h w h the value of the PLS component for individual i, with descriptors matrix X and covariance weights matrix W, t hi represents the slope of the OLS line without constant term related to the cloud of points w h ; x h1;i . In such case, in computing the h th PLS component, the denominator is computed only on the data available also for the denominator.
sPLSRecently, Chun and Keles, 2010, provided both empirical and theoretical results showing that the performance of PLS regression was ultimately affected by the large number of predictors. In particular, a higher number of irrelevant variables leads to inconsistent coefficient estimates in the linear regression setting. There is a need to filter the descriptors as a preprocessing step before PLS fit. However, commonly used variables filtering approaches are all univariate and ignore correlation between variables. To solve these issues, Chun and Keles proposed 'sparse PLS regression', which promotes variables selection within the course of PLS dimension reduction. sPLS has the ability to include variables that variable filtering would select in the construction of the first direction vector. Moreover, it can select additional variables, i.e. variables that become significant once the response is adjusted for other variables in the construction of the subsequent direction vectors. This is the case of 'proxy genes' acting as suppressor variables that do not predict the outcome variable directly but improve the overall prediction by enhancing the effects of prime genes despite having no direct predictive power, Magidson and Wassmann, 2010.where M=X 0 YY 0 X:When Y = X, the objective function coincides with that of sPCA (). However, in that case, Jolliffe et al. pointed out that the solution tends not to be sparse enough and the problem is not convex. To solve these issues,This formulation promotes exact zero property by imposing L 1 penalty onto a surrogate of the direction vector c instead of the original direction w while keeping w and c close to each other. The L 2 penalty takes care of the potential singularity of M. Moreover, they demonstrated that for univariate PLS, y regressed on X, the first direction vector of the sparse PLS algorithm was obtained by soft thresholding of the original PLS direction vector: jZj  2 +signZ; where Z=X 0 y=jjX 0 yjj 2 :To inherit the property of the Krylov subsequences, which is known to be crucial for the convergence of the algorithm (), the thresholding phase is followed by a PLS regression on the previously selected variables. The algorithm is then iterated with y replaced by y  X ^ , the residuals of the PLS regression based on the variables selected from the previous steps. The sPLS algorithm leads therefore to sparse solutions by keeping the Krylov subsequence structure of the direction vectors in a restricted X space, which is composed of the selected variables. The thresholding parameter and the number of hidden components are tuned by cross-validation. sPLS has connections to other variable selection algorithms including the elastic net method () and the threshold gradient method (). The elastic net algorithm deals with the collinearity issue in variable selection problem by incorporating the ridge regression method into the LARS algorithm. In a way, sPLS handles the same issue by fusing the PLS technique into the LARS algorithm. sPLS can also be related to the threshold gradient method in that both algorithms use only thresholded gradient and not the Hessian. However, sPLS achieves fast convergence by using conjugate gradient. Hence, LARS and sPLS algorithms use the same criterion to select active variables in the univariate case. However, the sPLS algorithm differs from LARS in that sPLS selects more than one variable at a time and uses the conjugate gradient method to compute coefficients at each step. The computational cost for computing coefficients at each step of the sPLS algorithm is less than or equal to the computational cost of computing step size in LARS, as conjugate gradient methods avoid matrix inversion.
sPLSDR and DKsPLSDRIn this article, we propose two new algorithms, named sPLSDR and DKsPLSDR, by using sPLS or its non-linear kernel counterpart DKsPLS instead of PLS in the PLSDR algorithm. We show them as efficient sparse regularized alternatives based on dimension reduction.
METHODS
The Cox proportional hazards modelThe model assumes the following hazard function for the occurrence of an event at time t in the presence of censoring:where 0 t is an unspecified baseline hazard function, the vector of the regression coefficients and X=X 1 ; :::; X p  a n by p matrix of features with x i =x i1 ; :::; x ip  the covariate vector for the i th individual. The event could be death or cancer relapse. Based on the available data, the Cox's partial likelihood can be written as follows:where D is the set of indices of the events and R k denotes the set of indices of the individuals at risk at time t k. The goal is to find the coefficients ^ , which maximize the log partial likelihood function
l=log PL:The vector ^ is the solution of the equation:with u the vector of efficient scores. However, there is no explicit solution and the minimization is generally accomplished using the NewtonRaphson procedure. An estimate of the vector of parameters at the k+1 th cycle of the iterative procedure is as follows:where I=  @ 2 l @@ 0 is the observed information matrix. The process can be started by taking ^ 0 =0 and iterated up to convergence, i.e. when the change in the log likelihood function is small enough. When the iterative procedure has converged, the variance-covariance matrix of the parameter estimates can be approximated by the inverse of the observed information matrix I 1  ^ . When p4n, there is no unique ^ to maximize this log partial likelihood function. Even when p n, covariates could be highly correlated and regularization may still be required to reduce the variances of the estimates and to improve the predictive performance.
Deviance residualsFor the Cox model with no time-dependent explanatory variables and at most one event per patient, the martingale residuals for the i th subject with observation time t i and event status i , where i =0 if t i is a censored time, and i =1 otherwise is as follows:with ^ " 0 t i  the estimated cumulative hazard function at time t i. Martingale residuals are highly skewed. The deviance residuals d i are a normalized transform of the martingale residuals. For the Cox model, the deviance residuals () amount to the form:The sign function is to ensure that the deviance residuals have the same sign as the martingale residuals. Martingale residuals take values between 1 and 1. The square root shrinks large negative martingale residuals, while the logarithmic transformation expands toward +1 martingale residuals that are close to 1. As such, the deviance residuals are more symmetrically distributed around zero than the martingale residuals. The deviance residual is a measure of excess of death and can therefore be interpreted as a measure of hazard. Moreover, Segal showed that the expression to be minimized in step 3 of the CoxLasso procedure of Tibshirani can be approximated, in a first order Taylor-series approximation sense, by the deviance residual sum of squares: z  X 0 Az  X  % RSS ^ D with = 0 X; = @l @ ; A=  @ 2 l @ 0 , and z=+A  :
The sPLSDR algorithmThe sPLSDR algorithm involves the following steps: 1. Cox model without covariates to derive the null deviance residuals d.
Computation of the sPLS components by usingthe sPLS regression with the null deviance residuals as outcome.a. Set ^ PLS =0; =fg, k = 1, y 1 =d. b. While k K.(1) w=jzj  =2 + signz where z=X 0 y 1 =jjX 0 y 1 jj 2 .(2) Update as fi : ^ w i 6  0g [ fi : ^ PLS i 6  0g(3) Fit PLS with X by using the k number of latent components.(4) Update ^ PLS by using the new PLS estimates of the direction vectors and update y 1 and k through3. Cox model on the m-retained sPLSDR components.
The DKsPLSDR algorithmIn the case of very many descriptors, PLS regression being invariant by orthogonal transformation (De Jong and ter), an even faster procedure could be derived by replacing the X matrix by the matrix of principal components Z XX 0 =ZZ 0 . This could be viewed as the simple form of linear kernel PLS regression algorithms, which have been proposed in the nineties () to solve computational problems posed by large matrices in chemometrics. The objective of these methods was to obtain PLS components by working on a condensed matrix of a considerably smaller size than the original one. Moreover, in addition to dramatically reducing the size of the problem, non-linear pattern in the data could also be analyzed using non-linear kernel. Rosipal and Trejo, 2001, proposed a non-linear extension of PLS regression using kernels. Assuming a non-linear transformation of the input variables fx i g n i=1 into a feature space F, i.e. a mapping  : x i 2 R N x i  2 F, their goal was to construct a linear PLS regression model in F. They derived an algorithm named KPLS for Kernel PLS by performing the PLS regression on X. It amounts to replacing, in the expression of PLS components, the product XX 0 by XX 0 using the so-called kernel trick, which allows the computation of dot products in high-dimensional feature spaces using simple functions defined on pairs of input patterns: x i x j  0 =Kx i ; x j . This avoids having to explicitly calculate the coordinates in the feature space, which could be difficult for a highly dimensional feature space. By using the kernel functions corresponding to the canonical dot product in the feature space, non-linear optimization can be avoided and simple linear algebra can be used., proposed to perform PLS regression directly on the kernel matrix K instead of X. DKPLS corresponds to a low rank approximation of the kernel matrix. Moreover,3. Computation of the PLS components by using the DKsPLS algorithm with the null deviance residuals as outcome.
Cox model on the m-retained DKsPLSDR components.
BENCHMARKING
ImplementationWe benchmarked the new sPLSDR and DKsPLSDR algorithms against the following existing ones: coxpath (), coxnet (), PLS-Cox (), autoPLS-Cox (PLS-Cox with a hard-thresholding approach and automatic selection of the maximal number of components,), LARS-LassoDR (), Cox-PLS (), PLSDR (), DKPLSDR (), uniCox () and glcoxph (). More insights on the implementation of these algorithms are given in the Supplementary Information. We made several wrappers for the Cox-PLS, LARS-LassoDR, PLSDR, sPLSDR, DKPLSDR and DKsPLSDR and had to implement in the R language PLS-Cox, and hence autoPLS-Cox, which is PLS-Cox with hard thresholding of the non-significant explanatory variables at a given level.
Prediction evaluationWe propose to use the time-dependent receiver-operator characteristics (ROC) curve for censored data () to assess how well the model predicts survival. Let sensitivity and specificity be the following: sensitivity c; t=X=PX4c=t=1 specificity c; t=X=PX c=t=0 with X a predictor score function and t the event indicator at time t. Sensitivity measures the expected fraction of subjects with a marker greater than c among the subpopulation of individuals who die at time t, whereas specificity measures the fraction of subjects with a marker less than or equal to c among those who survive beyond time t. Using the true-and false-positive rate functions, TP t c=sen sitivityc; t and FP t c=1  specificityc; t allows the ROC curve to be written as follows:The area under the ROC curves (AUC), which measures the probability that a marker value for a randomly selected case exceeds the marker value for a randomly selected control, is particularly useful for comparing the discriminatory capacity of different potential biomarkers. A larger AUC at time t based on the risk score function X indicates better predictability of time to event at time t as measured by sensitivity and specificity at time t. A typical complexity with survival data is that observations may be censored. Two ROC curve estimators are proposed that can accommodate censored data (). A simple estimator is based on using the KaplanMeier (KM) estimator for each possible subset X4c. However, this estimator does not guarantee the necessary condition that sensitivity and specificity are monotone in X. An alternative estimator that does guarantee monotonicity is based on a nearest-neighbor estimator (NNE) for the bivariate distribution function of (X, T), where T represents survival time (). Moreover, it is a semiparametric efficient estimator and the censoring process is allowed to depend on the diagnostic marker X, whereas the KaplanMeier estimator assumes that the censoring process does not depend on X (). We provide benchmark results for both the KM and NNE estimators., using either no link or a linear one between the response and the predictors. We divided each of these 600 datasets into a learning set, of 7/10 (70) of the observations, used for estimation, and a test set, of 3/10 (30) of the observations, used for evaluation or testing of the prediction capability of the estimated model. This choice was made to stay between the 2:1 scheme of; Lambert-Lacroix and Letu e (2011); van; and the 9:1 scheme of Li (2006). The division between learning and test sets was balanced using the caret package according to both the response value and censor rate.
Datasets
Real datasets Eight datasetswere used to benchmark the models:. The variability of their numbers of subjects and variables, see, makes their use as benchmarks more insightful. The allelotyping set of, is a new benchmark set, whereas the other seven are commonly used ones.
RESULTS
Simulated datasetsCross-validation techniques [either CV partial likelihood criterion (CVLL) or van Houwelingen CV partial likelihood criterion (vHCVLL)] were recommended for several of our benchmark methods by their authors. We followed these recommendations. For the Cox-PLS, PLSDR, sPLSDR, DKPLSDR and DKsPLSDR, we used the iAUCSurvROC criterion, for the LARS-LassoDR the vHCVLL and for PLS-Cox and autoPLS-Cox the iAUCSH. Simulation results confirmed these as relevant cross-validation criteria (Supplementary Figs S3 and S4). To assess the goodness of fit and prediction accuracy of all the methods, we selected four indices of various kind: the coefficient (R 2 XO) proposed by Xu and O'Quigley (1999) (a R 2-like measure and a likelihood-based approach), the CGH by Gonen and Heller (2008) (an improved version of the C index), the iAUCsurvROC (a ROC-based approach used by) and the integrated weighted Schmid Score (iSSw,, an integrated robust prediction error and a distancebased approach). The simulations lead to some advantage for the models featuring components (and Supplementary Figs S6S8).
Real datasetsFor every dataset and every method, we selected the parameters by applying the same cross-validation techniques as in Section 4.1. The test and train groups were commonly used ones whenever available or else randomly chosen ones. All the scripts used to perform these analyses will be provided as demos in an updated version of the plsRcox package. The datasets will be available as direct downloads on a dedicated academic Web site.We compared the survival prediction accuracy, using the iAUCsurvROC criterion, of all the methods over two periods starting from 0 and with two different (near or far) end times. These were chosen separately for every dataset as the first quartile (Q 1 ) and the third quartile (Q 3 ) of the empirical distribution of the survival time. This is tantamount to finding models for making accurate survival prognostics either at an earlier or at a later time. The results are displayed on graphical outputs to point out which is the best method for predicting survival. For instance, the graphical output for comparing the methods' accuracy for predicting the survival at an early time (0;. All of them show better predictive performance for both sPLSDR and DKsPLSDR algorithms. All graphical outputs are given in Supplementary information (Supplementary Figs S11S26. We summed up all the results (Supplementary Tables S3S6 in Tables 2 and 3 where the methods are ranked by decreasing iAUC. We used bold fonts for the new sPLSDR and DKsPLSDR algorithms and italic for the first R implementation of existing techniques (Cox-PLS, PLS-Cox, autoPLS-Cox, PLSDR, DKPLSDR) by Bastien and Tenenhaus (2001) and Bastien (2008). These results show steady better predictive performance for the sPLSDR and DKsPLSDR algorithms as well as for the uniCox one. Yet, uniCox failed on the Dataset 2 (), for both 0; Q 1  and 0; Q 3  intervals, even after several tries with random training sets. Variable selection results were analyzed for the Romain et al., 2010 dataset (Supplementary Table S11, and Supplementary Figs S26 and S27). In our view, variable selection is a topic in itself and especially its robustness with respect to several criteria including censorship or missingness patterns as well as noise or resampling. We will focus on these issues in a subsequent article.
DISCUSSIONOverall, DKsPLSDR and, even more, sPLSDR compare favorably with the benchmark methods on both simulated and real datasets.In the simulation study, sPLSDR turned out to be the best method to recover the linear link according to the ISSw performance measure and for the three simulation schemes (, Linear link row panel). More generally in that setting, the models featuring components had better performance measures than the LASSO and elastic net-based ones. Similar results can be observed for the iAUCSurvROC criterion (Supplementary, Linear link row panel) with lesser advantage to sPLSDR and DKsPLSDR. In both cases, simulations study show that neither sPLSDR or DKsPLSDR tend to wrongly recover a link between the response and the explanatory variable when there is none (Supplementary Figs S1 and S8, No link row panel), whereas LASSO and elastic net-based methods do for the factorial simulation scheme and the iAUCSurvROC criterion (Supplementary, no link row panel). Whatever the real dataset, the overall patterns of the sPLSDR and DKsPLSDR algorithms follow the general patterns of predictability of the benchmark methods, e.g. a low increase in predictability for the Metzeler dataset or a global step-wise decrease on the Romain datasets. These patterns suggest that the performances of the different methods may depend on the real but unknown data dimension. The sPLSDR or DKsPLSDR almost always rank among the 1 to 4 best methods with higher predictability, often being even 1st or 2nd, both on short and long term predictions (see Tables 2 and 3). This is particularly true in cases where a large predictability heterogeneity is to be noted among the benchmark algorithms, such as for the Garber and the Wang datasets. Last but not least, sPLSDR and DKsPLSDR not only automatically handle missing data, the study of the robustness of these two algorithms to the amount and type of missing databeing beyond the scope of this article, but also provide nice data exploration tools such as biplots representation of individuals and descriptors, by projecting the dataset on the first sPLS components (see). In a word, we view sPLSDR and DKsPLSDR as a useful addition to the toolbox of estimation and prediction methods for the widely used Cox's model in the high-dimensional and low-sample size settings.
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
P.Bastien et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Deviance residuals based sparse PLS at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
