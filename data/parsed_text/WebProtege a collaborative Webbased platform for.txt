WebProt eg e is an open-source Web application for editing OWL 2 ontologies. It contains several features to aid collaboration, including support for the discussion of issues, change notification and revision-based change tracking. WebProt eg e also features a simple user interface, which is geared towards editing the kinds of class descriptions and annotations that are prevalent throughout bio-medical ontologies. Moreover, it is possible to configure the user interface using views that are optimized for editing Open Biomedical Ontology (OBO) class descriptions and metadata. Some of these views are shown in the Supplementary Material and can be seen in WebProt eg e itself by configuring the project as an OBO project. Availability and implementation: WebProt eg e is freely available for use on the Web at http://webprotege.stanford.edu. It is implemented in Java and JavaScript using the OWL API and the Google Web Toolkit. All major browsers are supported. For users who do not wish to host their ontologies on the Stanford servers, WebProt eg e is available as a Web app that can be run locally using a Servlet container such as Tomcat. Binaries, source code and documentation are available under an open-source license at
INTRODUCTIONOntologies are important artefacts in bioinformatics and life sciences. Many biomedical ontologies, such as the ones made available in the BioPortal (), the Open Biomedical Ontology (OBO) Library () and the OntoBee platform () are published and exchanged as OWL 2 ontology documents. Furthermore, biomedical ontologies are typically developed collaboratively by groups of experts who may receive incremental input from the end-user community. However, although there have been some domain-specific wiki-based tools for the collaborative editing of biomedical knowledge (), Web-based tool support for community-based OWL ontology development is severely lacking. In this article, we present WebProt eg ea Web-based tool for the collaborative development of OWL 2 ontologies. Although the latest version of this tool supports the complete OWL 2 language (), the default configuration of its customizable user interface (UI) is primarily geared towards lightweight ontology editing [it is possible to configure the user interface with OWL 2-specific views. Please see the WebProt eg e user guide for more details (http://tinyurl.com/ webprotege-editing-owl)]. In particular, WebProt eg e provides out-of-the-box views that support a fragment of the language that is useful for capturing biomedical knowledge and is traditionally catered for by tools such as OBOEdit (). Moreover, WebProt eg e supplies user interface views that are optimized for editing the rich OBO-term metadata and definitions that are commonly associated with biomedical ontologies. We believe that these OBO-tailored UI views along with collaborative development functionality make WebProt eg e an attractive tool for the community-based development of biomedical ontologies.
COLLABORATION FEATURESWebProt eg e is centred around the notion of a projecta collection of OWL ontologies, custom user interface configuration settings and collaboration settings. Projects can either be created from scratch or they can be initialized with existing ontologies. Any OWL-compatible ontology, including OBO format () ontologies, may be uploaded and imported. A key aspect of WebProt eg e is that it supports multiuser real-time collaborative ontology development. Once a user has created a project, they can share it with their collaborators, adding them as viewers, commenters or editors. WebProt eg e provides the following features to aid collaboration:Threaded DiscussionsThreaded discussions allow issues to be tracked and associated with terms and change sets. Issues can be marked as being 'open' and can then be 'resolved' when they have been addressed. WatchesUsers can keep an eye on changes to the ontology, changes that modify a description of a particular term or changes that modify hierarchy branches and descriptions of terms in branches. Notifications of changes are sent to users via email with direct links to the terms that were changed.
Change Tracking and VersioningWebProteg e is built on top of the OWL API, which means that it can take *To whom correspondence should be addressed. advantage of a precisely defined notion of ontology changes and ontology change lists. Change lists, which correspond to operations in the user interface, are stored along with various metadata about which user enacted the changes, the timestamp of the changes and the fine-grained details of the changes. All project changes are tracked, and WebProt eg e allows users to download any previous version or revision of an ontology, making it possible to compare different versions using tools such as Bubastis () or Ecco ().
AN OBO FRIENDLY UIThe WebProt eg e user interface is customizable, and users can arrange individual views (known as 'portlets') to suit their needs. We provide several out-of-the-box views that are specifically designed for editing biomedical, OBO-Style, ontologies. Heavily inspired by OBOEdit widgets, many of these views shield the user from the verbose and intricate OWL representation of OBO format constructs. Some of these views are described below.  TermId View: presents a user-friendly OBO Id and Name for the selected term and hides the under-the-hood representation of term Ids (IRIs). @BULLET Term Definition View: obviates the need for the user to know what the correct 'definition' OWL annotation property (IAO_0000115) is, and manages the database cross-reference annotations on the OWL annotation assertion that specifies the term definition. Synonyms View: manages the specification of synonyms, the scope of these synonyms and database cross references for them. " Relationships View: simple OBO relationships correspond to OWL ObjectSomeValuesFrom restrictions that are superclass expressions of the subject term. This view manages the SubClassOf relationship and ObjectSomeValuesFrom restrictions under the hood, meaning that users do not need to know about these OWL constructs. Furthermore, autocompletion () assists the user in typing in correct property names and term names. " Cross-Products View: similar to the Relationships View, this view manages EquivalentClasses axioms and the bundling of component relationships, represented by ObjectSomeValuesFrom restrictions, into intersection classes.
IMPLEMENTATIONWebProt eg e is based on the OWL API (). This API is widely used by people that need programmatic access to OWL ontologies, and it is the basis of other widely used tools such as Prot eg e (), services such as the module and diff analysis tools () and OBO workflow tools such as the OBO Ontology Release Tool. For loading and processing OBO ontologies, we use the OBO format tools, which provide a 'reference' OBO parser among other things. The WebProt eg e user interface and client/server communication is implemented using the Google Web Toolkit (https://developers.google.com/web-toolkit/) and JavaScript.
FUTURE DEVELOPMENTWebProt eg e is currently under heavy development. Some of the features that are relevant for the biomedical ontology community that we plan to add are as follows: support for exporting and publishing projects as OBO ontologies (via integrations with the OBO-Ontology Release Tool); tighter integration with thirdparty issue trackers that are typically used by biomedical ontology projects (such as GoogleCode or GitHub Issues); online reasoning and query support (along the lines of the functionality provided by Prot eg e 4); mixed subclass and non-subclass (e.g. partOf) hierarchy views; better support for visualization and support for subset views (slims).
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
WebProt eg e at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
