Motivation: Graphical models are often employed to interpret patterns of correlations observed in data through a network of interactions between the variables. Recently, Ising/Potts models, also known as Markov random fields, have been productively applied to diverse problems in biology, including the prediction of structural contacts from protein sequence data and the description of neural activity patterns. However, inference of such models is a challenging computational problem that cannot be solved exactly. Here, we describe the adaptive cluster expansion (ACE) method to quickly and accurately infer Ising or Potts models based on correlation data. ACE avoids overfit-ting by constructing a sparse network of interactions sufficient to reproduce the observed correlation data within the statistical error expected due to finite sampling. When convergence of the ACE algorithm is slow, we combine it with a Boltzmann Machine Learning algorithm (BML). We illustrate this method on a variety of biological and artificial datasets and compare it to state-of-the-art approximate methods such as Gaussian and pseudo-likelihood inference. Results: We show that ACE accurately reproduces the true parameters of the underlying model when they are known, and yields accurate statistical descriptions of both biological and artificial data. Models inferred by ACE more accurately describe the statistics of the data, including both the constrained low-order correlations and unconstrained higher-order correlations, compared to those obtained by faster Gaussian and pseudo-likelihood methods. These alternative approaches can recover the structure of the interaction network but typically not the correct strength of interactions , resulting in less accurate generative models. Availability and implementation: The ACE source code, user manual and tutorials with the example data and filtered correlations described herein are freely available on GitHub at https://
IntroductionInterpreting patterns of correlations in data is a fundamental problem across scientific disciplines. A common approach to this problem is to infer a simple graphical model that explains the statistics of the data through a network of effective interactions between the variables, which may then be used to generate new predictions (). The goal of this approach is to disentangle the direct interactions between variables from their correlations, which arise through a combination of direct and indirect effects. Here, we focus on a particular family of undirected graphical models, referred to as Potts models in the language of statistical physics, which have recently been applied to study a wide variety of biological systems. Applications include inference of the effective connectivity of populations of neurons, and their patterns of firing activity, based on data from multi-electrode recordings (), and the prediction of protein contact residues () and the fitness effects of mutations () based on the analysis of multiple sequence alignments (MSAs). Unfortunately, the inference of Potts models from data is challenging. The computational time required for naive Potts inference algorithms scales exponentially with the system size, rendering the problem intractable for realistic systems of interest. Various approximations have been employed to combat this problem, including Gaussian and mean-field inference (), perturbative expansions () and pseudo-likelihood methods (). These approximate methods can successfully capture the general structure of the network of interactions, recovering, in particular, contact residues in the threedimensional structure of protein families (), but the resulting models typically give a less accurate statistical description of the data (). Alternately, algorithms based on iterative rounds of Monte Carlo simulation () are capable of inferring models that accurately reproduce the observed correlations, but they are typically slow to converge. Here, we describe an extension of the adaptive cluster expansion (ACE) method, originally devised for binary (Ising) variables (), to more general (Potts) variables taking multiple categorical values. We also describe new computational methods for faster inference, including a Monte Carlo learning procedure and the optional incorporation of prior knowledge about the structure of the interaction graph. The algorithm has been successfully applied to real data with as many as several hundred variables, including studies of neural activity in the retina and prefrontal cortex (), human immunodeficiency virus (HIV) fitness based on protein MSA data (), and lattice protein models (). Below we illustrate the application of this method to both real and artificial datasets. We show that models inferred by ACE give an excellent reconstruction of the statistics of the data. They also accurately recover, considering sampling limitations, true underlying model parameters when they are known, and can achieve comparable performance to state-of-the-art methods for predicting structural contacts in protein family data. We compare these results to those obtained using other approximate inference methods, focusing in particular on pseudolikelihood methods.
BackgroundThe Potts model emerges naturally in the statistical description of complex systems. Consider a system of N variables described by the configuration x  fx 1 ; x 2 ;. .. ; x N g, with x i 2 f1; 2;. .. ; q i g. The number of discrete categories q i that each variable x i can take on, which we refer to as states, may depend on the variable index i. For proteins the states correspond to particular amino acids, while for neurons they represent the binary (firing or silent) state of activity. Given a set of measurements of the system, the empirical average over the sampled configurations gives us the P i q i individual and P i < j q i q j pairwise frequencies for the different states of each variable in the data. We denote the individual and pairwise frequencies by p i a and p ij a; b, respectively, where i, j are the index of the variables and a, b are the index of the states. As an example, x could represent sequences in a MSA, with p i a the frequency of the amino acid labeled by a in column i of the alignment, and p ij a; b the frequency of the pair of amino acids a, b in columns i, j. The simplest, or maximum entropy (), probabilistic model capable of reproducing the observed frequencies is an exponential distribution, which assigns a probability to every configuration of the system x:Here, the partition function Z is a normalizing factor which ensures that all probabilities sum to one. In the simple case that all the variables x i are binary, this model is referred to as an Ising model. More generally, when x i can take multiple discrete states, this model is referred to as a Potts model. The parameters h i a and J ij a; b in the energy function E, called fields and couplings, must be chosen such that variable averages (correlations) in the model match those in the data, i.e.where d is the Kronecker delta function. The problem of finding the parameters h i a; J ij a; b that satisfy Equation (2) is referred to as the inverse Potts problem. Note that the probability of any configuration remains unchanged under the transformation of the couplings and fields given by J ij a; b ! J ij a; b  K ij a  K ji b; h i a ! h i a  P j6 i K ij a for any K. In addition, all the h i a at a site i can be uniformly shifted by a constant with no effect on the probability. This 'gauge invariance' reduces the number of free parameters in the Potts model to q i  1 fields for each site and q i  1q j  1 couplings for each pair of sites. Formally, the inverse Potts problem is solved by the set of fields and couplings that maximize the average log-posterior probability of the data or equivalently, those that minimize the cross-entropy between the data and the modeland P 0 is a prior distribution for the parameters. Here, for simplicity we have written the set of all individual and pairwise variable frequencies as p and the set of all fields and couplings as J. Note that, ignoring the contribution of the prior distribution, the cross-entropy S is equivalent to the entropy of the inferred model satisfying Equation (2). S has a simple interpretation in information theory as it can be written as the sum of the entropy of the data and the KullbackLeibler divergence of the model with respect to the data (), see also the related field of information geometry (). The inclusion of a prior distribution helps to avoid overfitting, while also improving convergence. A Gaussian prior distribution for the parameters is a typical choice, which contributes a termto Equation (3). For c $ 1=B this factor can be thought of as a weakly informative prior () whose main purpose is to ensure that solutions of the inverse problem are not infinite due to issues of undersampling (e.g. parameters corresponding to an amino acid that is never observed). Note that this form of the regularization is not invariant under gauge transformations. Thus, the results of the inference including the regularization do have some dependence on the gauge choice. Other forms of regularization are also possible (see Supplementary Materials). Note that the presence of the partition function Z in Equation (4) precludes direct numerical maximization of the posterior when the system size is large, since this requires summing over all Q N i1 q i configurations of the system. Alternate methods of solving the inverse Potts problem involve approximation schemes or rely on computationally costly Monte Carlo simulations, as described above.
Methods
Adaptive cluster expansionThe adaptive cluster expansion () is based on the formal decomposition of the regularized crossentropy Equation (3) into a sum of contributions from subsets (clusters) of variables C  fi 1 ;. .. ; i k g; k N,where the sum is over all nonempty subsets of the N variables. The terms DS C , referred to as cluster entropies, have been recursively defined as the remaining contribution to the subset posterior once all contributions from smaller clusters have been substracted. Here, S C denotes the maximum of Equation (3) restricted only to the variables in C. Thus, S C depends only on the frequencies p i a; p ij a; b with i; j 2 C. Provided that the number of variables in C is small (typically 20), numerical maximization of the posterior restricted to C is tractable. Note that, due to the recursive definition of DS C , the sum over all 2 N  1 nonempty and overlapping subsets of the N variables in Equation (6) gives the exact posterior S by construction:Here, C tot  f1; 2;. .. ; Ng is the set of all variables in the system. The expansion of Equation (6) can be computationally expedient because, practically, it can converge toward S even when only contributions from clusters much smaller than the system size N are considered (see below). The cluster entropy contributions are easy to interpret for oneand two-site clusters: neglecting the regularization term the single variable cluster contributions are the entropies of the variables taken as if they were independent, DS i S i   P qi a1 p i log p i a. The two variable entropy is S ij   P qi a1 P qj b1 p ij a; blog p ij a; b (seeThe rule for constructing new clusters of size k  1 from selected clusters of size k can be lax (such that a new cluster C is added provided that any pair of size k subclusters, C 1 ; C 2 2 L 0 k t and C 1 [ C 2  C) or strict (such that a new cluster is only added if all of its k  1 subclusters of size k belong to L 0 k t). The above process is then repeated until no new clusters can be constructed. After the summation of clusters terminates, the approximate value of the parameters minimizing the cross-entropy, given the current value of the threshold, is computed byNote that this formula generally yields sparse solutions because nonzero couplings are only included in Equation (8) if some clusters containing them have been selected. In this algorithm the dominant contribution to the computational complexity often comes from the evaluation of the partition function Z for large cluster sizes, which! operations to compute.
Compression of the number of Potts statesAs mentioned in Section 1.1, the number of states each variable may take on need not be the same for all variables in a system. States with zero (or otherwise very small) probabilities may be observed very infrequently in real, finitely-sampled data, and the relative error on the corresponding correlations due to finite sampling is large. To limit overfitting and reduce the computational time, the low probability states can be effectively grouped together according to a given compression parameter. Here, we present two heuristic conventions for compressed representations of the data. First, for each variable we can treat explicitly the states observed with probability larger than a cutoff value p i a > p o while grouping all infrequently observed values into the same state. A natural value for the cutoff is p o $ 1= ffiffiffi ffi B p , such that pair correlations between independent states with frequencies of p o are at the threshold of detection. Alternatively, we can order the states by their contribution to the total single site entropy S q and choose a reduced model in which only the first k states are modeled explicitly, with k chosen to capture a certain fraction f of the site entropy. This is achieved by explicitly considering the first k states and grouping the remaining q  k states together, choosing k such thatThe frequency of the regrouped Potts state is then the sum of the frequencies of the states which have been regrouped: p i k  1  P q ak1 p i a. Once the reduced model is inferred, one can recover a complete model by modifying the field parameter for the regrouped states, h i a 0   h i k  1  log p i a 0 =p i k  1   , while keeping the couplings to the value of the regrouped state J ij a 0 ; b  J ij k  1; b. For states with zero probabilities in the data, we fix the fields from the regularization alone.
Expansion around a reference structureACE is a two-fold algorithm: it builds up the interaction graph while also inferring the parameters that reproduce the correlated structure of the data. This expansion can be accelerated if information about the interaction graph is available. It is also possible to expand the cross-entropy around its Gaussian approximation. @BULLET If the list of directly interacting variables is known, one can run the expansion starting from clusters built on the support of the interaction graph. For proteins this procedure can be applied using the real contact map, known from structural information, as the initial list of 2-site clusters. Alternatively, if the contact map is not known, one can use fast inference approaches such as DCA or plmDCA () to obtain a list of initial putative contacts and then refine the expansion from this initial list (Supplementary Materials). @BULLET As shown in () for the Ising model, one can analytically calculate the posterior and the parameters that maximize it under the Gaussian approximation with an ad hoc L 2-norm regularization (where the regularization strength depends on the variable frequencies). It is then possible to perform the cluster expansion around this Gaussian reference model, i.e. the expansion of S  S 0 , where S 0 is the cross-entropy for a Gaussian modelin the Ising (binary) case. If S 0 is a reasonable approximation of S, then the expansion of S  S 0 may converge more rapidly than the expansion of S alone. See Cocco and Monasson (2012) for further details on the expansion of the Gaussian model.
Refinement with Boltzmann Machine Learning (BML)In cases where convergence of the cluster algorithm alone is not sufficiently fast, it is often more expedient to use the output set of fields and couplings as starting values for a Boltzmann Machine Learning (BML) routine. In typical cases, provided that the inferred model is not too sparse, this procedure can lead to rapid convergence of the model even when the starting error is large. Here, we adapted the RPROP algorithm for neural network learning () to the case of Potts models. Given an input set of fields and couplings, we first compute the model correlations p MC i a; p MC ij a; b through Monte Carlo simulation. The couplings and fields are then updated according to the gradient of the posterior, multiplied by a parameter-specific weight factorJ ij a; b ! J ij a; b  p MC ij a; b  p ij a; b w ij a; b :Regularization can also be incorporated by adding 2cJ ij a; b, or the analogous term for fields, to the gradient. Here, the weights w i a and w ij a; b are also updated with each iteration of the algorithm. At each iteration, if the sign of p MC i a  p i a   is the same as in the previous round, w i a ! s  w i a, else w i a ! s  w i a, and similarly for the w ij a; b. This acceleration of weight parameters allows appropriate step sizes to be chosen adaptively for each coupling and field. To prevent steps sizes from becoming too large or too small, the weight parameters are restricted to lie between some w min and w max. Typical choices of the weight bounds and update multipliers are w min  10 3 ; w max  10; s   1:9; s   0:5. Note that we choose s < 1=s  so that, if the sign of one of the terms of the gradient continually switches, the corresponding weight decreases. As with other BML approaches, this procedure is computationally limited by the need to thermalize the system to accurately estimate the model correlations through MC. Each MC step requires a computation of the change in energy due to a change in the configuration x, requiring On operations, where n is the typical 'neighborhood' size (i.e. number of sites to which another site couples with nonzero J ij a; b). Future refinements could improve the speed of this routine by implementing, for example, adaptive selection of the number of thermalization steps and more efficient Monte Carlo sampling techniques.
Results
Description of test data and their preprocessingHere, we apply ACE to five different datasets and test the reconstruction of their statistics. First, we generate artificial data from a Potts model with random fields and couplings, allowing us to test the ability of the algorithm to recover the true model parameters. Second, we infer a Potts model from artificial sequences generated by a 3  3  3 lattice protein model with large folding probabilities in a given structure. This folding probability () contains all-order interactions between amino acids, unlike the Potts model used for the inference, thus serving as an interesting benchmark test (). Third, we study trypsin inhibitor protein sequences () to compare structural predictions obtained by ACE to ones obtained using Gaussian (DCA) and pseudo-likelihood (plmDCA) methods. We then test the ability of the algorithm to infer a model describing the HIV nucleocapsid protein p7. Finally, we study multi-electrode recordings of neural activity in the prefrontal cortex of a rat () analyzed into study memory replay.
Potts models on Erd} os-Rnyi random graphs (ER05)We consider an example of a Potts model with q  21 states, where the network of interactions is described by an Erd} os-Rnyi random graph with N  50 variables. Each edge in the interaction graph is included with probability 0.05. Field and coupling values for interacting pairs of sites are selected from a Gaussian distribution (Supplementary Materials). We compute the correlations through Monte Carlo sampling of B  10 4 configurations. In the results shown below we compressed rarely-observed Potts states with p i a < p o  0:05 and used c  1=B  10 4 , performing the inference in the gauge of the compressed Potts state. 3.1.2 Lattice protein model (LP S B ) We consider an alignment of 5  10 4 protein sequences with N  27 sites, arranged in a 3  3  3 cube, selected according to their exactly computable () folding probability S B (see (), Supplementary Materials). In the results below we have removed amino acids that are never observed (i.e. compression with p o  0), and used the regularization c  5=B  10 4. Couplings and fields corresponding to the least frequently observed amino acid at each site are gauged to zero.
Trypsin inhibitor protein family (PF00014)We study an alignment of 4915 sequences downloaded from the PFAM database for the trypsin inhibitor protein family (PF00014, PFAM 28.0 release, May 2015). After removing columns with > 50% gaps the number of sites is N  53. We reweight the contribution of each sequence to the correlations according to its similarity to other sequences in the alignment, an approach commonly used to attenuate phylogenetic correlations (). Here, we show results in the consensus gauge after compressing rarely-observed amino acids with p i a < p o  0:05, using c  2=B  10 3. Additionally, we note that gaps in the MSA are not generally modeled well in the Potts model representation with pairwise interactions, as they tend to be present in long stretches, especially at the beginning and the end of the alignment (). Such stretches of highly correlated gaps slow down the inference procedure because they give rise to large clusters. Here, we have processed the data to replace gaps by random amino acids with the same frequency as observed in the non-gapped sequences. Though this approach obscures the important variability in the sequence lengths in the MSA, it is a simple way to reduce computational problems induced by correlated gaps, valuable for structural prediction.
HIV p7 nucleocapsid proteinThe HIV nucleocapsid protein p7 plays an essential role in multiple aspects of viral replication (). We downloaded a MSA of 4131 p7 sequences from individuals infected by clade B viruses from the Los Alamos National Laboratory HIV sequence database (www. hiv.lanl.gov, accessed October 6, 2014). After removing columns with > 95% gaps, the remaining number of sites is N  71. Here, we do not reweight sequences by similarity, given that they are all in the same phylogenetic cluster, and the regular observation of similar sequences in the HIV population may be indicative of higher fitness (). We replaced gaps as described above, compressed rarely-observed amino acids with f S  90%, and chose c ' 1=2B  1:4  10 4. Inference is performed in the consensus gauge.
Multi-electrode recordings of cortical neuronsWe divided a 20 minute recording of the firing activity of 32 cortical neurons into a set of B  1:5  10 5 time bins of 10ms, treating each time window as an observation of the system. During each time window, the variable for each neuron i was assigned x i  1 if the neuron was active at least once during that time, and zero otherwise. Here, we take c  1=B  6:6  10 6 .
Convergence of the cluster expansion algorithmAs mentioned in Section 2.1, for each threshold t used to select clusters in the ACE expansion, the model individual hx i ai and pairwise hx ij a; bi frequencies are compared to the data's frequencies p i a and p ij a; b. We define a relative error as the ratio between the deviations of the predicted observables from the data, dhx i i  hx i i  p i and dhx ij i  hx ij i  p ij , and the expected statistical fluctuations due to finite sampling, dp i a  ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiwhere M is the total number of one-and two-point correlations.shows the behavior of max and the cross-entropy as a function of the threshold for the five datasets described above. The cross-entropy S approaches a constant value as the threshold is decreased. In all cases except for the lattice protein model, the algorithm converges at max $ 1, when the correlations are reproduced to within the expected error due to finite sampling. The expansion slows dramatically for the lattice protein model at a fairly high value of the threshold due to the large number of states included at each ACEsite in the model (typically q  19). The computational cost of calculating the partition function is a limiting factor as the maximum cluster size increases, corresponding to K max  7 at the stopping point in. At this point BML is needed to refine the parameters inferred through the cluster expansion. Note that, even in cases when the error appears large, convergence of the BML procedure is often rapid because only small changes to the parameters may be necessary to obtain a model that accurately reproduces the correlations. Convergence of the algorithm can also be more difficult for alignments of long proteins or those with very strong interactions. In such cases one may observe large oscillations in the cross-entropy as a function of the threshold, and large ( 10 sites) clusters may appear even at high thresholds. Strong regularization (c > 1=B) can help to dampen these oscillations, after which it can be returned to %1=B during the BML procedure.
Parameters of the ER05 model are recovered by ACEInwe show that the 2  10 4 underlying parameters for the ER05 model corresponding to the explicitly modeled Potts states are accurately recovered by ACE. These states are better sampled and therefore they have smaller statistical uncertainties. In the model inferred by plmDCA, which includes no reduction in the number of states, there are around 10 6 parameters. Those corresponding to the explicitly modeled states are recovered fairly well (with some errors in the fields), but parameters corresponding to compressed states are difficult to infer due to insufficient sampling (see Supplementary Materials for details and analysis of errors in inferred parameters due to finite sampling).
Statistics of the data are accurately reproducedFigures 3 and 4 show how the model inferred by ACE reproduces the statistics of the input data. In all cases the model accurately captures the input probabilities and pairwise connected correlations within the expected error due to finite sampling, as anticipated. We also find that higher order correlations in the data can be accurately reproduced.shows the 3-point connected correlations and the distribution P(k) of Hamming distances k between the sampled configurations and the configuration in which each site takes on the most probable value (i.e. the consensus sequence for proteins). In the neural case the most probable configuration is the silent one and therefore P(k) is the probability to have k active neurons in the same time window. Models inferred by ACE outperform those from plmDCA (), seeand Supplementary Materials for higher order statistics.in the data, such as the connected threebody correlations (center) and the probability P(k) of observing a configuration with k differences from the consensus configuration (right)(d). Convergence of the cluster expansion as a function of the threshold t for (a) ER005, (b) LP S B , (c) PF00014, (d) HIV p7 and (e) cortical data. As the threshold is lowered, the cross-entropy S approaches a constant value. In all cases except for LP S B the normalized maximum error max reaches 1 through the cluster expansion alone. For LP S B a Monte Carlo learning procedure is used to refine the inferred parameters and reach max ' 1. ACE accurately recovers the true fields h (left) and couplings J (right) corresponding to Potts states with p i a ! 0:05 for the ER05 model. Error bars denote standard deviation in estimated parameters due to finite samplingComparing the distribution of energies E for configurations sampled from the inferred model to the distribution obtained from the original data provides an additional check of statistical consistency. The energy of a configuration is proportional to the logarithm of its probability (in addition, because the entropy S is obtained from the cluster expansion, we can also compute the constant of proportionality). Concordance between the inferred and empirical energy distributions thus indicates that the real data could plausibly be generated from the inferred model.compares the data and model distributions of energies, showing that in most cases they closely overlap. A small discrepancy is introduced in PF00014 because of the reweighting procedure (here, the histogram of the data is normalized by the sequence weights). The energy distribution for the lattice protein model is broader than for the data, though the peak is fit correctly. In contrast with models inferred using ACE, the distribution of energies of the data is less well reproduced with plmDCA (Supplementary Materials). The ability to estimate the probability of a configuration can be useful when comparing the likelihood of a configuration in two different models, for example to decide which family a given protein belongs to.
ACE accurately infers structural contacts for PF00014In, we use the inferred couplings to predict pairs of residues that are in contact in the folded protein structure for PF00014, and we compare results from ACE to the standard contact prediction methods DCA () and plmDCA (). In this case the pairs of sites for which the Frobenius norm of the couplings is largest, including the average product correction (APC, see ()), are predicted to be most likely to be in contact. We define contact residues to be those that are within 6 of each other in the folded structure of the protein, and we exclude trivial contact pairs along the protein backbone (i  j 4). The accuracy of contact predictions with ACE can be increased by decreasing the compression (p o  0) and using a large regularization (c  1), in the same spirit as the strong regularization employed in typical DCA and plmDCA approaches. Here, we gauged the parameters for the least frequently observed amino acids to zero and computed the Frobenius norm of the couplings in the zero sum gauge (as is typical in DCA). The couplings are then strongly damped by regularization and the cluster expansion converges for maximal cluster sizes much smaller than those needed in the case with weaker regularization.shows that the precision in this case is competitive with the one obtained from plmDCA, and the prediction of the first $30 contacts is slightly better for ACE. However, in this case we note that because of the small values of the couplings the generative properties of the inferred model are lost (see Supplementary Materials for the statistical fit of the model).
DiscussionPotts models have been successfully applied to study a variety of biological systems. However, the computational difficulty of the inverse Potts problem, i.e. the inference of a Potts model from correlation data, has presented a barrier to their use. Here, we presented ACE, a flexible, easy-to-use method for solving the inverse Potts problem, which can be applied to analyze a wide variety of real and synthetic data. We also provide tools for automatically generating correlation data from multiple sequence alignments (MSA), making the analysis of this type of data even more accessible. Here, we have adapted the complexity of the inferred Potts models to the level of the sampling in the data. This is achieved by regrouping less frequently observed Potts states into a unique state (according to a threshold on entropy or frequency), then by a sparse inference procedure that omits interactions that are unnecessary for reproducing the statistics of the data to within the error bounds due to finite sampling. On artificial data we verified that compression of the number of Potts states allows for a faster and more precise inference of the uncompressed model parameters while reducing overfitting. The methods of compression that we describe here can also be applied to other inference methods (including, for example, the DCA and plmDCA approaches discussed above), a topic of future study. In addition, as described above ACE yields sparser models when sampling is poor, leading to more robust inference. This method allows for the simple construction of models from various types of data, which can then be used to predict the evolution of experimental systems and their response to perturbations. Previous work has demonstrated promising applications of such models in a variety of different biological contexts. In neuroscience, the analysis of multi-electrode recordings has led to models that identify cell assemblies, which are thought of as basic units of neural computation and memory ().Here, we show the top 100 predicted contacts, with true predictions in orange and false predictions in blue. Other contact residues in the crystal structure are shown in gray. For true positives and other contact residues, close contacts (<6 ) are darkly shaded and further contacts (<8 ) are lightly shaded. The upper and lower triangular parts of the contact map give predictions for the inferred model with strong regularization/no compression (c  1) and weak regularization/ high compression (c  2=B), respectively. (b) Precision (number of true predictions divided by the total number of predictions) as a function of the number of contact predictions for close contact residues that are widely separated on the protein backbone (i  j > 4). Results using ACE compare favorably with those from DCA () and are competitive with those from plmDCA ()
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Supplementary Materials for more details). The cluster entropy for a pair of variables is then DS ij  S ij  S i  S j , which is equivalent to the mutual information. It is zero when p ij a; b  p i a p j b, i.e. when the two variables are independent. More generally, DS C is a measure of the interdependence between the variables in the cluster which cannot be accounted for by smaller clusters. The main idea of this approach is to approximate the crossentropy (and simultaneously, the parameters that maximize it) by limiting the sum in Equation (6) to a restricted set of clusters C that give the most important contributions to it. As shown in (Cocco and Monasson, 2011, 2012), contributions for overlapping clusters sharing the same interaction subgraph partially compensate, and thus summing clusters according to the magnitude of their entropy contribution allows for a faster convergence of Equation (6). Neglecting clusters with small contributions to the cross-entropy also helps to avoid overfitting. As a simple example, for a unidimensional interaction graph in which each variable is only connected to its two nearest neighbors, the expansion can be exactly truncated by summing only clusters of size one and the largest contributing 2-site clusters containing neighboring variables (Cocco and Monasson, 2012; Gori and Trombettoni, 2011; Mastromatteo, 2013). We define a threshold t on the cross-entropy to separate the significant clusters from those which can be neglected. Starting from a large value of the threshold (typically t  1), such that only a few clusters are selected, the algorithm proceeds through two nested iterations. The outer loop is on the value of the threshold t, which is progressively lowered until enough clusters are included to yield a model consistent with the data. The inner loop constructs the set of clusters C with contributions to the cross-entropy jDS C j > t and yields an approximation of the cross-entropy and the model parameters at the threshold t. The algorithm stops at the first value of the threshold t where the inferred model fits the sampled averages and correlations Equation (2) to within the statistical error due to finite sampling (see Section 3.2). The algorithm for the inner loop, including the selection and summation of individual clusters, is as follows. Given a list L k of clusters of size k, beginning with the list of all clusters of size k  2:
