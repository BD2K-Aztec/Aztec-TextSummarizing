Computational workloads for genome-wide association studies (GWAS) are growing in scale and complexity outpacing the capabilities of single-threaded software designed for personal computers. The BlueSNP R package implements GWAS statistical tests in the R programming language and executes the calculations across computer clusters configured with Apache Hadoop, a de facto standard framework for distributed data processing using the MapReduce formalism. BlueSNP makes computationally intensive analyses, such as estimating empirical p-values via data permutation, and searching for expression quantitative trait loci over thousands of genes, feasible for large genotypeâ€“phenotype datasets. Availability and implementation:
INTRODUCTIONDepending on the study design and statistical methodology, GWAS statistics can be handily computed on a personal computer, or require substantially greater computational resources. Usually, study designs and statistical methodologies that entail massive computation are avoided for practical reasons. Yet, there are times when intensive computation can not be avoided. An example of a computationally demanding task is estimating empirical p-values via data permutation when a test statistic does not follow a standard distribution. Up to 10 8 permutations of the data can be required to assess genome-wide significance, a massive computational burden. Another example is in the analysis of expression quantitative trait loci (eQTL) study designs with tens of thousands of gene expression phenotypes (). The superb genetics software, PLINK (), is an open-source whole genome association analysis program written in C that is extremely fast and efficient at computing commonplace association statistics (e.g. allelic test, linear regression, etc.). However, it can be a logistical challenge to run PLINK on computer clusters, manually partitioning large jobs into sub-parts and stitching-together potentially thousands of output files.
BlueSNP architecture and core functionalityThe BlueSNP R package sits atop a software stack that hides the details of interacting with a multiplicity of multi-core processors from the user (). Proceeding from the bottom up, Hadoop *To whom correspondence should be addressed.handles the distributed data storage and the distributed task management. The RHIPE R package (http://www.datadr.org) provides a facility for authoring and running MapReduce programs from within the R environment (). BlueSNP builds upon RHIPE, providing high-level GWAS functions suitable for genetics researchers who might not have an interest in the low-level details of parallel programming.
Example 1. Analysing many phenotypesSome study designs, for example, expression QTL studies which treat gene expression values as quantitative phenotypes, can involve analysing thousands of phenotypes. Manually distributing tens to thousands of separate GWAS jobs over a computer cluster and collating the separate outputs would be time-consuming and error-prone. Using BlueSNP, scaling from one phenotype to thousands of phenotypes is automatic, as is the generation of collated reports of p-values, test statistics, etc. The R syntax for analysing one phenotype or thousands of phenotypes is identical, the crucial difference being the dimensions of the phenotype data structure. Analysing many phenotypes is a simple matter of supplying a matrix of phenotype values, one phenotype per column (one sample per row), to the gwas function. The gwas function is called with parameters specifying the locations of the input and output files/directories on the Hadoop distributed file system (HDFS): gwas(genotype.hdfs.path  "/snps", phenotype.hdfs.path  "/phenotypes. RData", output.hdfs.path  "/output", method  "qt.linear.regression") P5-gwas.results("/output", type"p.value")In this example, linear regression is performed for all SNPphenotype pairs and a table of p-values is retrieved. Collating voluminous data (e.g. the outputs of many statistical tests) into actionable reports is a particular strength of the Hadoop framework. On our 40-node cluster it took 34 min to analyse 100 phenotypes using a linear regression association test on 10 6 simulated SNPs in 10 4 individuals (). In most of our performance assessments, the time to analyse a given number of phenotypes was halved by doubling the number of compute nodes, indicating near-optimal scaling. (See Supplementary Material for a comprehensive performance assessment and machine specifications.). In adaptive permutation, the pool of candidate SNPs decreases as p-value estimates become more precise. Running time increases with the number of permutations but is substantially faster than in exhaustive permutation
MapReduce is a parallel programming methodology for splitting a large problem into sub-parts (the map step), computing partial solutions on sub-parts independently, then assembling the partial solutions into the overall solution (the reduce step). Fortunately, a GWAS analysis is usually decomposable into small independent sub-partsfor example, single-SNP association tests assume independence of SNPsmaking it straightforward to apply MapReduce. Apache Hadoop (http://hadoop. apache.org), an open-source MapReduce implementation, solves three technical problems confronted by developers of parallel algorithms: it handles the distributed storage of large data, it handles the scheduling of jobs and re-scheduling of failed jobs, and the limited expressivity of the MapReduce formalism simplifies parallel program design. Hadoop is a de facto standard framework for big-data analytics and is gaining popularity in bioinformatics (Langmead et al., 2009; Schadt et al., 2010). Hadoop instances can be provisioned on-demand from 'cloud computing' service providers. We introduce the BlueSNP R package which distributes GWAS computation over a cluster configured with the Hadoop framework, making computationally intensive analyses feasible for large genotypephenotype datasets. Genetics researchers can utilize the association tests provided with BlueSNP or supply a novel association test as a user-defined R function. BlueSNP removes the complexity of interacting with the cluster, freeing the researcher to focus on advanced analytics using the R programming environment (R Core Team, 2011).
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Example 2. Empirical p-values by data permutation When test statistic does not follow a standard distribution, or if small sample size renders a standard distribution unreliable, Monte Carlo methods can be used to estimate empirical p-values. Monte Carlo methods are conceptually simple but computationally expensive. The null distribution of any test statistic can be estimated by observing the test statistic for many instances of random data that preserve some essential aspects of the real data. In practice, the BlueSNP functions for estimating empirical p-values shuffle the phenotype vector to randomize the bivariate distribution of genotype and phenotype while preserving the univariate distributions. BlueSNP computes both exhaustive and adaptive permutation-based p-values. Adaptive permutation drops non-significant SNPs from subsequent rounds of permutation, vastly decreasing the number of calculations and therefore the running time compared with exhaustive permutation. The concept of adaptive permutation is well established; our MapReduce implementation of adaptive permutation is novel. Calculations are periodically rebalanced over the cluster nodes to maximize processor utilization. On our 40-node cluster, it took 7.6 h to estimate empirical p-values to precision 10 8 using linear regression on the dataset described in Table 1. With adaptive permutation, a 10-fold increase in the number of permutations takes much less than a 10fold increase in time (Fig. 2). This efficient permutation framework opens the door to novel user-defined association tests that do not rely on the assumed validity of standard distributions. Any user-defined function of genotype and phenotype can be a test statistic. Funding: H.H., S.T. and R.J.P. funded by IBM Research. Conflict of Interest: none declared.
Map cores, 2 reduce cores, 1 unused core per node.
H.Huang et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
