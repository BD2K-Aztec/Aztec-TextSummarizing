Motivation: As the study of information processing in living cells moves from individual pathways to complex regulatory networks, mathematical models and simulation become indispensable tools for analyzing the complex behavior of such networks and can provide deep insights into the functioning of cells. The dynamics of gene expression, for example, can be modeled with Boolean networks (BNs). These are mathematical models of low complexity, but have the advantage of being able to capture essential properties of gene-regulatory networks. However, current implementations of BNs only focus on different sub-aspects of this model and do not allow for a seamless integration into existing preprocessing pipelines. Results: BoolNet efficiently integrates methods for synchronous, asynchronous and probabilistic BNs. This includes reconstructing networks from time series, generating random networks, robustness analysis via perturbation, Markov chain simulations, and identification and visualization of attractors. Availability: The package BoolNet is freely available from the R project at
BACKGROUNDA popular class of models for describing gene regulation are Boolean networks (). Here, genes are modeled as Boolean variables that exhibit a simple bistable 'ON/OFF' behavior, i.e. transcribed or not, encoded as 1 and 0. This qualitative approach constitutes an abstract, but intuitive representation of interactions. BNs can approximate the main dynamic properties of generegulatory networks, while being of simple structure (): it is assumed that concentration levels in gene-regulatory networks behave according to a Hill function (). Boolean functions approximate the sigmoidal behavior of this function by the step function. BoolNet supports three kinds of BNs: synchronous BNs consist of a set of Boolean variables (genes) and a set of transition functions, one for each variable (Kauffman,
FUNCTIONALITYThere are several ways of assembling BNs: one alternative is to reconstruct a network from time series of gene measurements. Our package includes the reconstruction algorithms Best-Fit Extension () and REVEAL (). If necessary, methods for binarization of real-valued measurements are available for preprocessing the time series. Furthermore, BNs can be constructed from natural-language statements, e.g. from literature knowledge on the dependencies of genes. Our software supports reading in networks as collections of Boolean formulae from files. BoolNet also imports networks from BioTapestry (), a popular application for visual modeling of generegulatory networks. The package includes an innovative facility to generate various kinds of random BNs ().Different techniques such as generating scale-free networks, networks with fixed in-degree, biased Boolean functions and a combination of those are offered. Furthermore, existing networks can be perturbed to test the robustness of structural properties to noise. The package supports commonly used methods, such as flipping single bits in the input functions, but also introduces nonstandard approaches, such as perturbing states in the transition table of a network and constructing a new network from this table. Based on such randomly generated and perturbed networks, BoolNet offers a generic and extensible interface for computer-intensive tests to identify specific properties of biologically meaningful networks (see the Supplementary Methods). Moreover, knock-out and overexpression experiments can be simulated by setting genes in a network to fixed values without touching their transition functions. In the context of BNs, the identification and analysis of attractors is a major task. Attractors are stable cycles of states. As they comprise the states in which a gene-regulatory network resides most of the time, they carry strong biological implications and often can be linked to phenotypes (). Our software supports several methods to identify attractors: synchronous attractors can be identified by exhaustive search of all 2 n states (for n genes), or by a heuristic search starting from a number of predefined or randomly chosen states. In addition, a new random walk algorithm for the identification of complex asynchronous attractors is provided. For synchronous and probabilistic networks, potential attractor states and probabilities of reaching certain states can also be calculated using Markov chain simulations (). Gene dependencies can be visualized as a graph. Additionally, the package provides methods to visualize the basins of attraction and the transitions of attractors. Some of the plots are shown in. For further visualizations, the state graph can also be exported to the Pajek file format (). Time-critical algorithms, such as the reconstruction algorithms, the identification of attractors and the Markov chain simulations, were implemented in ANSI C, ensuring a high performance through the use of bit vectors. For all functions, R interfaces are supplied. The integrated manual can be accessed using the R command help(package=BoolNet). Moreover, an extensive step-by-step tutorial of all important aspects of the package can be accessed using the command vignette("BoolNet_package_vignette").
BoolNet R package
Exemplary uses of BoolNet:the package includes the mammalian cell cycle network () as an example. The network can be loaded via > data(cellcycle) and is now stored in a variable called cellcycle. The gene dependencies of the network can be visualized using > plotNetworkWiring(cellcycle) This graph is depicted on. To identify all synchronous attractors in this network, we call > attr <-getAttractors(cellcycle) The resulting structure contains information on the attractors as well as the transition table of the network. The transition table can now be visualized as depicted on: > plotStateGraph(attr)
* To whom correspondence should be addressed.  The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors. 1969, 1993). The next state of the network is calculated by applying all transition functions synchronously. In asynchronous BNs, only one of the transition functions is chosen at random at each point of time, and the corresponding Boolean variable is updated (Harvey and Bossomaier, 1997). Probabilistic BNs allow for specifying more than one transition function per variable (Shmulevich et al., 2002). Each of these functions has a probability to be chosen, where the probabilities of all functions for one variable sum up to 1. Simulations of BNs can provide insight into the dynamics of generegulatory networks (Bornholdt, 2005). Several genetic networks have been successfully modeled and analyzed using BNs, such as the mammalian cell cycle (Faur et al., 2006), or the yeast cell cycle (Li et al., 2004). Existing software tools in this field often specialize on certain aspects of BN research, or do not support all three types of networks (e.g. Albert et al., 2008; Klamt et al., 2007; Wuensche, 2009, or the BN/PBN toolbox by Lhdesmki and Shmulevich at http://personal.systemsbiology.net/ilya/PBN/PBN.htm). The R package BoolNet provides methods for all major uses of synchronous, asynchronous and probabilistic BNs and includes novel functions for attractor search, robustness analysis and binarization. The application supports reconstruction of networks from time series, parsing networks specified by human experts, generation of random networks, perturbation of networks and identification of attractors. Genes can be temporarily knocked out and overexpressed. In addition, convenient visualization methods are provided. BoolNet integrates well with existing modeling tools, such as BioTapestry (Longabaugh et al., 2005) and Pajek (Batagelij and Mrvar, 1998).
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [20:39 22/4/2010 Bioinformatics-btq124.tex]
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
