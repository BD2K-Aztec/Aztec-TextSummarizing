Motivation: Recent discoveries show that most types of small non-coding RNAs (sncRNAs) such as miRNAs, snoRNAs and tRNAs get further processed into putatively active smaller RNA species. Their roles, genetic profiles and underlying processing mechanisms are only partially understood. To find their quantities and characteristics, a proper annotation is essential. Here, we present FlaiMapper, a method that extracts and annotates the locations of sncRNA-derived RNAs (sncdRNAs). These sncdRNAs are often detected in sequencing data and observed as fragments of their precursor sncRNA. Using small RNA-seq read alignments, FlaiMapper is able to annotate fragments primarily by peak detection on the start and end position densities followed by filtering and a reconstruction process. Results: To assess performance of FlaiMapper, we used independent publicly available small RNA-seq data. We were able to detect fragments representing putative sncdRNAs from nearly all types of sncRNA, including 97.8% of the annotated miRNAs in miRBase that have supporting reads. Comparison of FlaiMapper-predicted boundaries of miRNAs with miRBase entries demonstrated that 89% of the start and 54% of the end positions are identical. Additional benchmarking showed that FlaiMapper is superior in performance compared with existing software. Further analysis indicated a variety of characteristics in the fragments, including sequence motifs and relations with RNA interacting factors. These characteristics set a good basis for further research on sncdRNAs. Availability and implementation: The platform independent GPL licensed Python 2.7 code is available at: https://github.com/yhoogstrate/flaimapper. Corresponding Linux-specific scripts and annotations can be found in the same repository.
IntroductionSequencing of small non-coding RNAs (sncRNAs) aiming at the quantification and discovery of microRNAs (miRNAs), small nucleolar RNAs (snoRNAs), transfer RNAs (tRNAs) and vault RNAs (vtRNAs) has revealed that most types of sncRNAs get processed into smaller RNAs (). Initially, it was suggested that these smaller RNAs are degradation products of the turnover of their precursors. Nevertheless, evidence accumulating over the last years demonstrates that some RNA fragments are). Such fragments find their origin in tRNAs, vtRNAs and snoRNAs and are assumed to have a variety of functions. Most importantly, deregulation and involvement of different types of fragments have been demonstrated in different types of cancer (). A description of commonly detected fragments and their precursors is given below: @BULLET A pre-miRNA is an approximately 75 nt long RNA molecule produced from its primary precursor transcript (pri-miRNA) by Drosha (). Pre-miRNAs adopt a hairpin structure recognized by Dicer that cleaves the terminal loop to release an approximately 22-nt long double-stranded miRNA duplex. One of the strands (miRNA) is loaded into AGO to generate the functional miRISC complex (Lin He, 2004; Fabian and). The remaining strand (miRNA*) is usually degraded. Often both strands are found as fragments in small RNA-seq (). @BULLET Fragments originating from mature tRNAs are commonly classified into two subgroups (), tRNA halves and tRNA-derived RNA fragments (tRFs):@BULLET tRNA halves are most probably produced by angiogenin that cleaves the tRNA near its anticodon, resulting into halve tRNAs ($ 35 nt). It is believed that some tRNA halves contribute to translational repression and cell stress response (). @BULLET The smaller ($ 20 nt) tRFs are derived from the tRNAs 5 0-and 3 0-end and from the pre-tRNAs 3 0-end. It is not completely understood which proteins are involved in the production of tRFs, although evidence for associations with both Dicer and RNaseZ are reported (;). Although the putative functions of the majority of tRFs are unclear, evidence suggests that some are involved in RNA interference, with effects on cell proliferation and gene regulation (). @BULLET snoRNA are (60250 nt) small RNAs found in the nucleolus. They comprise the subtypes H/ACA-box, C/D-box and small Cajal body-specific RNAs (scaRNAs) (). Putative functions such as regulation of alternative splicing, post-transcriptional regulation of gene expression and associations with cancer have been proposed for their fragments (). Currently, studies on fragments other than miRNA and miRNA* are restricted to (often visual) interpretation of alignments. Consequently, the data are inspected only at a global ncRNA level. Not making use of the annotation of exact fragment coordinates is a shortcoming, since it restricts analysis at the level of individual fragments. Additional benefit of such analysis is the gained statistical power. Here, we describe Fragment Location Annotation Mapper (FlaiMapper) that predicts the locations of sncRNA fragments in small RNA-seq alignments. Prediction is based on the densities of start and end positions of aligned reads. It is important to state that the goal is not to predict any particular subtype of fragment but to annotate data for subsequent quantitative analysis, by making use of sequencing data only. Therefore, FlaiMapper does not use 2D structure prediction or classification based on heuristics of previous discoveries as often is used for the prediction of pre-miRNAs ().
MethodsFragments are measured with small RNA-seq, where the corresponding variable-sized sequences, called reads, are aligned back to a reference sequence. The reference sequence is used to determine the reads origin. This reference can be the genome, the transcriptome or specific regions (e.g. miRNA or tRNA databases). The library used for our analysis was manually composed (Supplementary information). Pre-processing and alignment for each dataset are further discussed in the Supplementary information. Analysis was applied to two different publicly available datasets with SRA accession numbers SRP002175 () and SRP006788 (). Dataset SRP002175 contains 12 small RNA-seq samples, taken from human pigment cells. The reads are 1823-nt long and processed on the Illumina's Genome Analyzer II platform. Dataset SRP006788, processed on the same platform, contains 1830-nt long reads, taken from six samples from a HeLa cell line. In this dataset, the samples have undergone the following treatments (
Formal problemFor convenience, we use the term boundary to describe either a start or an end position of a fragment, without being specific to one of them. If an alignment of a fragment is inspected in more detail, its boundaries are indicated by the corresponding start and end positions of the aligned reads. Fragment boundaries are variable, as indicated by the aligned reads (). Read starts and ends are located at variable positions, but close to the boundaries. This results in peaks in the densities of aligned start and end positions, near the boundaries. Therefore, it seems more convenient to estimate fragments using the most common start and end positions instead of the most common read. The number of read starts or ends at a certain position in the sequence (intensity) decreases rapidly and symmetrically with respect to the position with the highest intensity. As a result, the peaks have characteristics compatible to a normal distribution, with its expected value being the position with the highest intensity. Because of the variability in the alignments and the limited sequencing depth, the data contain noise (). In FlaiMapper, a fragment is defined as: 1. The region in a precursor ncRNA in-between the most common start and most common end position, as defined by aligned reads.Consequently, the problem of finding such fragments is defined as: 2. Given a set of aligned reads to a precursor ncRNA, the challenge is to estimate a fragment by:(i) finding the correct candidate start and end positions, (ii) taking the optimal proportion of noise into account and (iii) relating the corresponding start and end positions that belong to the same fragment back to each other.
AlgorithmThe FlaiMapper algorithm is divided into five sequential steps ():(v) reconstruction.
ParsingFor every ncRNA, alignments are parsed from input files. There is no preference towards a specific alignment algorithm as long as its output is in BAM format.
MetricsGiven an ncRNA with a length of n nt, the following corresponding vectors are determined: @BULLET Start and stop position densities 1.here, p 5 0 i is the total number of reads that have their start position (5 0-end) aligned to position i of the precursor ncRNA, where 1 i n.here, p 3 0 i is the total number of reads that have their end position (3 0-end) aligned to position i of the precursor ncRNA, where 1 i n.here, l 5 0 i is the average read length of reads that have their start position (5 0-end) aligned to position i of the precursor ncRNA, where 1 i n. If no reads have their start position aligned to nucleotide i, l 5 0 i  0.here, l 3 0 i is the average read length of reads that have their end position (3 0-end) aligned to position i of the precursor ncRNA, where 1 i n. If no reads have their end position aligned to nucleotide i, l 3 0 i  0.
Peak detectionCandidate start and end positions are characterized by peaks in the intensity vectors. Therefore, candidate positions are estimated independently in directions d  5 0 (start) and d  3 0 (end) on vector p d. The methodology of independence between start and end positions used by FlaiMapper is different from methods that rely on (i) the most common read or (ii) distributions of read density. Because of this, candidate start and end positions loose their one-to-one relationship. The purpose of peak detection is to find all positions that have an intensity higher than its adjacent positions. Because of noise in the intensities, the difference in intensity with respect to the adjacent values must be above a certain threshold. For direction d, the algorithm detects peaks upon corresponding vector p d of length n. Vector p d should be extended with a 0 at the end, to ensure that a peak at the very last position can be called. To avoid confusion about the lengths, we denote q d  fp d ; 0g and as consequence its length n 0  n  1. For every ith position in the vector, the intensity q d i is compared with the previous highest value. location in c d j. Subsequently, the candidate position will be reset and iterator j is increased with 1. The formal description of peak detection is given in algorithm 1 and per ncRNA, the following vectors are added:
c 5
FilteringPer fragment, multiple candidate start and end positions are frequently found due to noise. A target peak may be derived from the same fragment as surrounding peaks (). For each target peak at position i, a filter tests whether the remaining peaks at i 0 , are indeed noise of the target. The intensity around a boundary has characteristics of a normal distribution and decreases as the distance to the true start or stop position increases. Peaks caused by noise will have similar characteristics and therefore their intensity is expected to be (i) a function of the distance (between the positions i and i 0 ) and (ii) proportional to the targets intensity, p d i. The filter uses these characteristics to separate peaks derived from noise, from peaks derived from other fragments. The distance D (in nt) between a target and noise candidate position is defined in Equation (1), where j.. .j is the absolute value operator. D will always be larger than 0 because a target is not compared with itself. D  ji  i 0 j; if i 6  i 0 :Because intensities of noise artefacts are proportional to the intensity of the target, a weight matrix is used to define the area border (). The weights are derived from the probability density function of a normal distribution with a standard deviation of 3, for all integer values 0 x 15. To rescale densities to weights, the densities were divided through the density for x  0 (0.1329808). To improve performance for peaks with a very low number of corresponding reads, the densities for a D of 1, 2, 3 and 4 were changed to 1.0. The complete weight matrix x is available in the source code. For each target peak, the filter evaluates whether any other peaks fall within the range that can be expected by noise in both directions (d  5 0 or d  3 0 ) as follows ():A Sort c d on corresponding intensities in descending order. B For each i 2 c d target peak, remove corresponding noise artefacts:B.i For all i 0 2 c d i 0 6 i noise candidate peaks, find x D and define whether the candidate is noise or belongs to a separate fragment by evaluating Equation (2). If the equation is true, the candidate peak is considered to be a noise artefact of the target; immediately discard candidate c d i 0. If it is false, the candidate peak is not considered to be a noise artefact and must be retained.As a result of the filter, c 5 0 and c 3 0 may have shrunk and their respective lengths k and m may have become smaller.
ReconstructionThe peaks are expected to be the actual boundaries of fragments. Because start and stop positions do not have a direct one-to-one relationship with each other, a trace back is required to reconstruct the fragments. Because the number of predicted start (k) and end (m) positions is not necessarily equal, it is convenient to start reconstruction from direction d with min(k, m) candidate positions, anddicted peaks referred to as peak A, B and C. For each peak, the intensity is indicated with vertical solid lines, at positions 16, 20 and 28 in green, purple and blue, respectively. Peak A (350 corresponding reads) has the highest intensity, followed by C (100) and B (85). Using a top-down approach in terms of intensity, the algorithm starts with filtering the noise artefacts that belong to peak A. The borders that separate noise from true fragments are indicated with dashed lines. Peaks within the coloured areas are marked as noise. For peak A, this is the light-green area. Any other peak within this region (peak B; solid purple line) gets discarded. Thus, B is expected to noise of peak A. In the next iteration, the noise of next top peak C is taken into account. Because no other peaks fall in its corresponding blue area, none will be discarded. Since peak B is discarded already, only peak A and C remain" Noise threshold val previous; val max; pos max 0 " Init c d fg " Output j 1 " Output iterator for 1 i n 0 do if q d i > val previous then if q d i > val max then pos max i val max q d pos max end if else if q d i < val previous then if pos max > 0 and a  q d i  < val max then c d j pos max " Call peak val max 0 " Reset for next peak j j  1 end if end if val previous q d i
end forfind for each position the most likely corresponding position d 0. Direction d is defined in Equation (3), and d 0 is its complement. d  5 0 start positions if k m 3 0 end positions if m > k :Important information required for reconstruction is the expected length of reads that were used for detecting a peak, given in l 5 0 and l 3 0 . Indeed: @BULLET A fragment that starts at position i is expected to have its end i  close to: i  % i  l 5 0 i. @BULLET A fragment that ends at position i is expected to have its start i  close to:The number of reads that correspond to a start position is expected to be close to the number of reads that define the end position: p d i % p d 0 i 0. Thus, the reconstruction process needs a balance between (i) the expected position and (ii) the expected intensity of the counter position. This is achieved by conjoining an associated start and end position into a fragment as follows:A Sort c d based on corresponding intensities in descending order. B For all i 2 c d candidate positions find expected counter position i . B.i For all candidate counter positions i 0 2 c d 0 , the goal is to determine the counter position which has the optimal trade-off between a small distance with the expected counter position and a small difference in intensity. This is achieved by solving of Equation (4). In the equation 0.09 is an arbitrary chosen weight that forms the linear balance between distance and intensity. A predicted fragment is determined with its start position: min i; j and end position: max i; j. After reconstruction, positions i and j are discarded from c d and c d 0 , respectively. j  max i 0 1  0:09  ji   i 0 j  p d 0 i 0 ; for all i 0 2 c d 0 :3 Results
Validation of FlaiMapper performance
miRBaseTo get an impression of FlaiMapper's performance, its predictions for corresponding miRNAs detected in dataset SRP002175 were compared with miRNA annotations in miRBase 20 (Kozomara and). Because all experiments in this dataset are generated under the same conditions, alignments to the same ncRNA from all 12 experiments were merged, to maximize resolution. Of the 1037 miRNAs annotated in miRBase, 169 lacked supporting reads, and were not included in the quality assessment (because they would influence the outcome negatively without assessing the algorithm itself). Of the remaining 868 miRNAs, FlaiMapper was not able to predict a fragment that overlaps an annotated miRNA only 21 times, with a corresponding sensitivity of 847=868  0:98. A detailed assessment was performed by measuring the offset between a predicted fragment and a miRNA annotation in miRBase (, top). We assume that miRBase provides the 'ground truth' in terms of miRNA annotations. The results show that the majority of FlaiMapper predictions are identical to miRBase annotations. Also, the decrease of the offset bars (, top) is symmetrical, indicating no systematic inconsistency. 89% of the predicted start positions are identical to the reference. When an offset of 1 nt is allowed, the ratio correctly predicted start positions increases to 95%. In contrast, 54% of the end positions are predicted identical to the reference. When an offset of 1 nt is allowed, this increases to 82%. In addition, their offset-bars descend slower. This indicates that estimation of start positions is more precise. To get an impression of the influence of sequencing depth on accuracy of start and end positions corresponding to miRNA and miRNA* predictions, the number of corresponding reads (intensity) was plotted as a function of the offset for dataset SRP002175.illustrates that with the increase of sequencing depth, the offset for both start and end positions decreases. However, at identical intensity, end positions have higher offset than start positions and require deeper sequencing to achieve the same accuracy. In addition, we analysed the performance of FlaiMapper on three supplementary datasets generated on other sequencing platforms. Performance was similar to the performance described above.
Existing softwarePrevious research reported a comparable method (). Its goal is to detect miRNA-offset-RNAs (moRNAs), fragments adjacent to pre-miRNAs. The authors also used the method to demonstrate its ability to discover miRNAs. TheFlaiMapper: annotation of ncRNA-derived fragmentsalgorithm has no restrictions to a certain type of fragment, so its outcome should be comparable to FlaiMapper and therefore their performances can be compared with each other. In contrast to our method, BlockBuster relies on the overall aligned read density of a fragment and transforms this into a normal distribution. Consequently, the prediction of the start and end positions are dependent on each other since they are derived from the same distribution. This implies that the alignments near a fragment's start and end position should have a symmetrical shape. BlockBuster's performance was tested on dataset SRP002175 and the alignments of the 12 corresponding experiments were merged and converted into the BED format for compatibility. BlockBuster was used with a variety of parameters where its scale parameter of 0.05 and distance of 26 were found to be rough estimates for the optimum. Optimum is defined by the lowest amount of root squared error of all predicted miRNAs where error is defined as the offset between a predicted miRNA and its miRBase annotation. The following is observed (, bottom): @BULLET A lower sensitivity: 745=868  0:86 (compared with 0.98 in FlaiMapper). @BULLET A lower accuracy: @BULLET The number of start positions identical to miRBase is 78% compared with FlaiMapper's 89%. When an offset of 1 nt is allowed, both tools show comparable accuracy of 95%. @BULLET The number of end positions identical to miRBase is 34% compared with FlaiMapper's 54%. When an offset of 1 nt is allowed, 79% is predicted correctly compared with 82% using FlaiMapper. @BULLET The offset bars of the start position decrease asymmetrically. @BULLET The predictions are shifted; for the start positions, there is an overhang towards the pre-miRNAs 5 0-end and for the end positions there is an overhang towards the pre-miRNAs 3 0-end, indicating that the predicted fragments are on both sides systematically longer than the miRBase annotations.
Fragment analysisWe used FlaiMapper to detect fragments originating from sncRNAs other than pre-miRNAs on datasets SRP002175, SRP006788 and supplementary datasets SRP028959, SRP034013 and SRP041082. To maximize resolution, alignments of dataset SRP002175, SRP034013 and SRP041082 were merged. For SRP006788 and SRP028959, experiments were analysed individually to investigate possible influence of specific RNA processing-related treatments. The numbers of predicted fragments, categorized per type of precursor, are given in. The ratios of predicted fragments per precursor type were used for principal component analysis (). The largest difference between fragment profiles was observed between datasets SRP002175, SRP034013 and SRP041082. Since they are from different tissues and experiments, this is expected. Sub-conditions within dataset SRP006788 that are taken from AGO pooldowns showed nearly identical fragment profiles. In addition, samples of which nuclear RNA was extracted from independent HeLa experiments processed on different sequencers, also show very similar fragment profiles.shows that the AGO-pool down samples of dataset SRP006788 have a relatively high proportion of fragments derived from pre-miRNAs compared with the other samples in the dataset. This observation is consistent with the known association of miRNAs with AGO proteins (). On the same time, it also suggests that fragments derived from other precursor types than pre-miRNAs are not associated with AGO to the same extend. Taken together, this supports the biological context of the FlaiMapper-derived fragment profiles.
Sequence logosTo show that the outcome of FlaiMapper can be used to explore characteristics of sncdRNAs like sequence motifs, fragments were analysed for over-represented pre-or suffixes using sequence logo plots () (). The analysis on premiRNA-derived fragments did not indicate over-represented motifs. Although it must be stated that the number of predicted fragments derived from C/D-box snoRNAs is lower than for pre-miRNAs, the analysis confirms that the C-box is over-represented (). It also shows that sequences of H/ACA-box snoRNAderived fragments located at the 3 0-half of the precursor, most often contain the suffix ACANNN, where ACA is the precursor's ACA-box and N can represent any nucleotide. On the 5 0-half of the H/ACA box the fourth is preferentially occupied by a G/C. However, due to the mild bit score and the low number of used fragments, this observation should be interpreted with caution. Because of the highly conserved sequences and the high number of genomic copies, tRNAs were excluded from motif analysis.
DiscussionWe set out a method able to extract and annotate ncRNA fragments, because such annotations can be helpful in further high-throughput. Relation between sequencing depth and offset in predicted miRBase annotations for dataset SRP002175. The horizontal axis represents the offset for the start (left) and end (right) positions between a miRNA annotation and a predicted fragment. Predictions with exact matches are located at 0, offsets < 0 are predicted upstream the miRNA's boundaries and offsets > 0 downstream. The vertical axis represents the number of reads corresponding to a start (left) or end (right) position. The figure indicates that the higher the number of corresponding reads, the lower the offset. Overall, the predicted start positions have a lower offset than the end positions, for the same sequencing depth research. We designed FlaiMapper, a computer program to predict ncRNA fragments using small RNA-seq alignments. Benchmarking indicated that FlaiMapper is able to predict 97.8% of the miRNAs with corresponding reads. 95% of the miRNAs 5 0-end and 82% of the 3 0-end predictions were concordant with miRBase annotations. For this analysis, data from the Illumina Genome Analyser II was used. A similar accuracy was observed for sequencing data derived from the Ion Torrent PGM and Illumina HiSeq2000 (Supplementary information), indicating FlaiMapper can perform well on data from different platforms. We demonstrated that FlaiMapper performs better than existing similar software (). FlaiMapper predicts fragments by looking at the most common start and end positions in alignments. It can be argued whether the most common start and end positions should indeed provide the evidence for the prediction of a fragment, since the most common read could be used instead. However, the most common start and end positions should usually be covered by a higher number of reads. This corresponds to a higher resolution, which is especially advantageous for the prediction of fragments with a low read coverage, and should therefore also be more robust towards noise. Together with the demonstrated high performance, this implies that predictions based on start and end position densities provide a more appropriate solution for fragment annotation.The weights used in the filtering step are based on a normal distribution with an arbitrary chosen r. These parameters probably find their optimum in relation with sequencing protocols, 5 0 =3 0end-specific processing factors or different families of fragments. Therefore, once there is a better understanding of the processing of. Summary of predicted fragments on datasets SRP002175 (), SRP006788 (), SRP028959 (), SRP034013 () and SRP041082 (fragments, it is recommended to spend effort in optimizing these parameters. Additional analysis indicated that FlaiMapper's performance in miRNA annotation is positively correlated to sequencing depth. Predicted 3 0-ends of miRNAs have a larger offset compared with miRBase annotations than the 5 0-ends, even for the same sequencing depth. The higher variability of the miRNAs 3 0-ends has earlier been reported (). In addition, research on the classification of sncRNAs indicated that metrics corresponding to the variability in the alignment are indeed higher for the 3 0-end in miRNAs (). They were able to indicate that different levels of variability correspond to specific types of sncRNAs. Possible explanations could be RNA postprocessing or RNA editing. This means that alignments over the entire fragment can be asymmetrical because of a larger variation observed at miRNAs 3 0-ends. Since BlockBuster assumes reads to be symmetrically distributed over a fragment, this might explain why (i) its accuracy is lower, (ii) its predictions are longer and (iii) shifted with respect to miRBase. Although it seems counter-intuitive that an ncRNA can produce different fragments that originate from an overlapping region, there are situations where overlapping fragments can be expected. This can be stressed by recalling the not fully understood tRNA processing mechanism(s), where tRNA halves and tRFs spanning similar regions have been reported. Therefore, FlaiMapper has no restriction to the prediction of overlapping fragments, similar to the method of. Sequence logos indicated that the ACA box, as part of the the
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
If the intensity is larger, it becomes the highest value, and is therefore the (new) candidate to become a peak.  If the intensity is smaller, a drop in intensity is observed. If the drop is more than 90%, the jth peak is called by putting the Fig. 2. Relation between noise and sequencing depth. Under the assumption that the variability of reads near a boundary is normally distributed with a standard deviation of 3, we illustrate effects of noise by binned sampling of this distribution at different resolutions. The horizontal axes give the offset to a fragment's true position and the vertical axes the number of times an (artificial) intensity is sampled from the distribution. The dashed line represents the distribution used for sampling. A sequencing technology with an infinite resolution (top left; by approximation) would result into one single peak in the vertical axis. As the sequencing depth decreases, the sampled distribution deviates further from the true distribution and more peaks in the vertical axis may appear by chance (top right and bottom). Each illustration belongs to the same simulated fragment boundary, derived from the same distribution. Because FlaiMapper expects only one peak per boundary, the remaining peaks, caused by the deviation from their original distribution, are referred to as noise Fig. 3. Schematic overview of the five steps that FlaiMapper performs per sncRNA. (i) Parsing: alignment file is parsed; reads (thin lines) are aligned to a sncRNA (bold line). (ii) Metrics: acquire alignment statistics; for all positions in the sncRNA: I: find the number of aligned start (red) and end (blue) positions (referred to as intensity) and II: find the average length of mapped reads (not illustrated). (iii) Peak detection: predict candidate start and end positions (vertical lines) upon the intensity vectors using peak detection. (iv) Filtering: remove candidate start and end positions expected to be detected due to noise. In the example above, a candidate start position is discarded (grey cross) because it is an artefact of the noise of its neighbour. The remaining positions are considered as actual start and ends. (v) Reconstruction: reconstruct predicted fragments (grey bars) by finding corresponding start and end positions using a balance (purple triangle) between expected distance and intensity FlaiMapper: annotation of ncRNA-derived fragments
Y.Hoogstrate et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
ACANNN suffix, is over-represented and position specific in fragments derived from the 3 0-halve of the H/ACA-box snoRNAs. The analysis also confirmed that the C-box of C/D box snoRNAs is over-represented in corresponding fragments. Yet, this result may be biased by the existence of multiple, highly homologous, genomic copies of certain C/D-box snoRNAs such as HBII-52 and HBII-85. Fragment characteristics can play an important role in finding associations with their processing mechanism. For example, although the larger variability of the alignments at the 3 0-end of miRNAs affects performance, it clearly indicates a difference in the processing of miRNAs ends. Characteristics such as 5 0-and 3 0-end entropy have been successfully used in the classification of sncRNAs (Leung et al., 2013; Yuan and Sun, 2013). Using such characteristics on the fragment level, for example for clustering or classification, might provide new insights into the processes of production, functioning or degradation of fragments or indicate a possible sub-grouping. The future in-depth analysis of sncdRNAs will require more comprehensive datasets with higher sequencing depth and more statistical power. 5 Conclusion The lack of a sncdRNAs annotation is a short coming in small RNA-seq analysis. To overcome this, we designed the computer program FlaiMapper. FlaiMapper has a high performance in predicting miRNA boundaries, but can be used for the annotation of any type of sncdRNA. Examination of FlaiMapper-predicted sncdRNAs indicated different type specific characteristics: 5 0 =3 0-end-specific variability in miRNAs, associations between AGO and relative fragment profiles in dataset SRP006788 and a position-specific sequence motif in a subset of the H/ACA-box fragments. These characteristics indicate that FlaiMapper is a good starting point for the downstream analysis of small RNA sequencing experiments.
