Motivation: Protein remote homology detection is one of the fundamental problems in computational biology, aiming to find protein sequences in a database of known structures that are evolu-tionarily related to a given query protein. Some computational methods treat this problem as a ranking problem and achieve the state-of-the-art performance, such as PSI-BLAST, HHblits and ProtEmbed. This raises the possibility to combine these methods to improve the predictive performance. In this regard, we are to propose a new computational method called ProtDec-LTR for protein remote homology detection, which is able to combine various ranking methods in a supervised manner via using the Learning to Rank (LTR) algorithm derived from natural language processing. Results: Experimental results on a widely used benchmark dataset showed that ProtDec-LTR can achieve an ROC1 score of 0.8442 and an ROC50 score of 0.9023 outperforming all the individual predictors and some state-of-the-art methods. These results indicate that it is correct to treat protein remote homology detection as a ranking problem, and predictive performance improvement can be achieved by combining different ranking approaches in a supervised manner via using LTR. Availability and implementation: For users' convenience, the software tools of three basic ranking predictors and Learning to Rank algorithm were provided at
IntroductionUsing sequence similarity between protein pairs to detect evolutionary relationships is one of the central tasks in bioinformatics, which can be applied to the protein 3D structure and function prediction (). Unfortunately, remote homology protein pairs have similar structures and functions, but they lack easily detectable sequence similarity, because the protein tertiary structure is more conserved than protein sequence. Therefore, it is often difficult to detect protein remote homology by computational approaches.Some effective computational methods have been developed to address this challenging problem, which can be mainly divided into two groups, including discriminative methods and ranking methods. The first group discriminative methods treat protein remote homology detection as a classification problem using both the positive and negative samples to train the classification models, and then they are used to predict unseen samples. Among this kind of approaches, the methods based on Support Vector Machines (SVMs) achieve the state-of-the-art performance with appropriate kernel functions, which measure the similarity between any). These methods employ various features to represent the protein sequences, such as SVM-fisher (), SVM-PDT (), SVM-pairwise (), SVM-LA () and some profilebased methods (). In contract, the second group ranking methods treat protein remote homology detection as a ranking task or database searching task, where the query protein is searched against a protein database with known structures and functions, and a ranking list of the proteins in the database is returned according to their identified evolutionary relationships to the query protein. Early ranking methods were based on sequence alignment algorithms, such as Smith Waterman algorithm (). Later, some more efficient algorithms were proposed so as to trade reduced accuracy for improved efficiency, such as Basic Local Alignment Search Tool (BLAST) () and FASTA (). Because the evolutionary relations of remote homology proteins cannot be easily detected by sequence similarity, these methods can only achieve limited performance. The predictive accuracy was significantly improved by using the profile-based alignment algorithms, e.g. PSI-BLAST method () iteratively builds a probabilistic profile of a query sequence and therefore a more sensitive sequence comparison score can be calculated. Several ranking methods employed the generative models iteratively trained by using positive samples of a protein family or superfamily and achieved better performance, e.g. HHblits () generates a profile hidden Markov model (profile hidden Markov model (HMM)) () from the query sequence and iteratively searches through a large database. Recently, some ranking methods based on graph theory or semantic embedding techniques were proposed, e.g. motivated by the successful applications of Google's PageRank algorithm, an unsupervised algorithm called RankProp () was proposed, which is a network-based inference method. Later, this method was further improved by a semi-supervised approach using labeled samples to learn a new network (). Based on the similarity between protein sequences and natural languages, the techniques derived from the field of natural language processing were applied to protein remote homology, e.g. ProtEmbed () converts a large-scale embedding of protein feature vectors into a low-dimensional 'semantic space'. Therefore, evolutionarily related proteins are embedded in close proximity in this 'semantic space'. The aforementioned ranking methods are based on different theories and achieve the state-of-the-art performance in the field of protein remote homology detection. Therefore, it is interesting to explore whether these approaches can be combined to further improve their performance. However, how to combine these ranking methods into one predictor is a challenging problem, because they are based on different techniques and their predictive results are often different. To address this problem, we employed the Learning to Rank (LTR) algorithm () to combine different ranking methods in a supervised fashion. LTR is a supervised algorithm for training the model in a ranking task, which has been successfully applied to information retrieval, natural language processing, data mining, etc. (), e.g. LTR is severing as one of the key algorithms in many well-known searching engines, such as Bing (), Yahoo! () and Google (). In this study, we proposed a new computational method called ProtDec-LTR, which combines three state-of-the-art ranking methods by using LTR, including PSI-BLAST (), HHblits () and ProtEmbed (). To our best knowledge, ProtDec-LTR is the first computational predictor that can combine various ranking methods via using a supervised framework.
Methods and algorithms
Method overviewProtein remote homology detection can be viewed as a ranking task or database searching problem. The aim is to search the query protein against a protein database and return the top ranked proteins in the database according to their evolutionary relationships to the query protein. This problem is particularly similar to the document retrieval task. In document retrieval, given a query, the system retrieves documents containing the query words from a collection of documents, ranks the documents and returns the top ranked documents. To apply information retrieval techniques to protein remote homology detection, the basic protein ranking algorithms should be identified. Here, PSI-BLAST (), HHblits () and ProtEmbed () were selected as the basic ranking algorithms, which are similar as the document retrieval engines in the field of information retrieve. Below is a brief description of the three methods. PSI-BLAST () searches a query protein sequence against a database based on the profile generated from the multiple sequence alignment. In this study, PSI-BLAST version 2.2.29 () was employed to search the benchmark dataset with default parameters (E value and number of iterations were set as 0.001 and 3, respectively). HHblits () is another powerful computational method for protein remote homology detection, which generates a profile HMM from the query sequence and iteratively searches through a database of profile HMMs. HHblits version 2.0.16 () was used as the implementation of this method. All its parameters were set to default except that the number of iterations was set as 2. ProtEmbed () converts a query protein into a low dimensional 'semantic space' and measures the 'distance' between a query protein against all other proteins. We re-ran the ProtEmbed method () on the benchmark dataset with the optimized parameters (). The proposed ProtDec-LTR method is able to combine the aforementioned three methods in a supervised manner by using LTR. The flowchart of ProtDec-LTR is shown in. Similar as the application of LTR in information retrieve, for protein remote homology detection, each protein sequence is treated as a 'document'. Three ranking lists are obtained by using the three aforementioned ranking methods, and then they are embedded as a feature matrix to train the LTR model. Finally, for an unseen query sample, its homologous proteins can be detected by the trained model of LTR. As a result, the three ranking predictors are combined in a supervised manner considering the advantages of all the three individual predictors for more accurate protein remote homology detection.
Feature representationTo apply LTR to protein remote homology detection, the protein sequences should be converted into feature matrices based on the three ranking methods, including PSI-BLAST (), HHblits () and ProtEmbed (). Below is the description on how to generate the feature matrix. Given the benchmark dataset with n proteins, Application of LTR to protein remote homology detectionfor a given protein q, its feature matrix can be represented as a matrix P:(1)where p i (p i 2 S; 1 i n) represents the ith protein in the ranking list, which is a potential homologous protein related with q retrieved by three basic ranking methods; s 1 q; p i  and s 2 q; p i  represent the bitscore and E value calculated by PSI-BLAST, respectively; s 3 q; p i  and s 4 q; p i  represent the probability and E value calculated by HHblits, respectively; s 5 q; p i  is the distance between two proteins in the 'semantic space' generated by ProtEmbed and the last three elements s 6 q; p i , s 7 q; p i  and s 8 q; p i  represent the reciprocal of ranking position in three ranking results. Each element s j q; p i  in feature matrix P [Equation(1)] should be normalized by using the following equation:The label list Y of P can be represented as:where l i (l i 2 N) represents the grade of relevance of a protein pair q; p i  labeled based on the Structure Classification of Proteins(SCOP) (). If the protein pair q and p i are in the same superfamily, l i is set as 1, otherwise, it is 0.
Learning to rankAs an efficient supervised ranking algorithm, LTR algorithm has been successfully applied to document retrieval, question answering, computational advertising (), etc. Three different versions of LTR have been proposed, including pointwise approach, pairwise approach and listwise approach (). They are different in input representations and loss functions. Among the three methods, the listwise approach outperforms the other two methods because it can take ranking lists as input samples in both learning and prediction steps. Therefore, the group structure of ranking can be maintained and ranking evaluation measures can be more directly incorporated into the loss functions. In this study, the listwise approach of LTR algorithm was used to construct the ProtDec-LTR. LTR is a supervised learning algorithm and thus has training and testing phases. Given m training samples, each sample should be first converted into feature matrix P based on Equations (1) and (2). The goal of LTR is to automatically learn a ranking function F() from feature matrix P to a list of labels Y of training samples]. A loss function L(,) is utilized to evaluate the predictive results of F(). Each row x in feature matrix P is ranked according to F(x), then the top k remote homologous proteins in the ranking list are evaluated by using the grades y in label list Y. The loss function is represented as L(F(x), y). The risk function R() can be defined as the expected loss function:where x i represents the ith row in P [Equation(1)], y i is the grade of protein pair in label list Y [. The learning task then becomes the minimization of the empirical risk function that can be solved by using Gradient Descent (). In this study, we employed a listwise algorithm of LTR, LambdaMART (), to learn a ranking model. Given a set of training samples, LambdaMART trained a boosted tree model (a linear combination of a set of regression trees) with Normalized Discounted Cumulative Gain (NDCG) loss function (). Because the size of the ranking list was very large in the current study, only the top 50 detected remote homologous proteins were considered by the LTR, so as to reduce the computational cost. The loss function can be represented as:where P(i) is the ranking position of protein in predictive results and G max (50) is the normalizing factor. For a perfect ranking, the proteins with higher grades are always ranked higher. The corresponding empirical risk function of LambdaMART can be written as followings:The pseudo codes of the training phase of LTR algorithm for protein remote homology detection are shown in. The flowchart of ProtDec-LTR. There are three main phases in ProtDec-LTR, including feature representation, LTR training and testing phases. The proteins are first embedded into feature matrices constructed based on three basic ranking methods: PSI-BLAST, HHblits and ProtEmbed, and then they are fed into LTR for training the model. For an unseen protein, its homologous proteins can be detected by the trained model. Therefore, these three methods are combined in a supervised framework by using LTR Algorithm 1. The training phase of LTR for protein remote homology detection 1: Parameters: number of basic methods m, number of training samples n 2: Input: training protein sequences 3: Output: the ranking model F(x) 4: Initialize the basic methods and LambdaMART model 5: For i0 to n do 6: For j  0 to m do 7: Retrieve the benchmark database by using the basic methods 8: End for 9: Embed the feature vectors by using Equations (1)and(2) 10: Label the feature vectors based on Equation (3) 11: End for 12: For k  1 to n do 13: Train LambdaMART ranking model F(x) by using Equations (5) and(7) 14: End for For an unseen query protein, its three ranking lists generated by PSI-BLAST (), HHblits () and ProtEmbed () were converted into the feature matrix P [Equation (1)], then its homologous proteins can be identified based on learnt ranking function F(). To help the readers to understand its processes, the training and testing phases of LTR are illustrated in.
DatasetAn updated benchmark dataset () was employed to evaluate the performance of different ranking methods, because it can provide good comparability with previous methods. This benchmark dataset was constructed based on SCOP database () containing 7329 proteins from 1070 different superfamilies. These proteins were extracted from the Astral database (), and the identity of any two sequences was lower than 95%. For readers' convenience, the codes of the 7329 proteins and their sequences as well as the attributes of their families and superfamilies are given in Supplementary Material S1.
Evaluation methodologyHow to evaluate the prediction quality is a key for developing a new predictor and estimating its potential application value. The 5-fold cross-validation has been used to evaluate the performance of each method. The benchmark dataset was randomly divided into five subgroups with approximately equal number of proteins. Each method was trained and tested five times with five different training and test sets. For each time, four subsets were used as training data and the remaining one was used as test data. Two performance measures were employed to evaluate the performance of each method, including ROC1 score and ROC50 score (). ROC1 and ROC50 scores represent the area under ROC curve up to the first false positive and the 50th false positives, respectively. Both ROC1 and ROC50 scores were normalized. A socre of 1 means perfect perdiction, whereas a score of 0 means that none of the protens is correctly identified.
Results and discussion
The ranking methods are complementaryIn the field of protein remote homology detection, several ranking methods have been proposed. Among these approaches, PSI-BLAST (), HHblits () and ProtEmbed () showed the state-of-the-art performance. Therefore, it is particularly interesting to explore if these three predictors are complementary or not. In this regard, pairwise comparisons among the three basic methods in the superfamily-level and sequencelevel were conducted, respectively, and the results are shown in. Identical results of the two methods will fall on the diagonal line, from which we can see that the three methods are complementary because only a few points fall on the diagonal line. These results are not surprising, because they are based on different techniques and theories, e.g. PSI-BLAST is based on sequence-sequence alignment, while HHblits is based on profileprofile alignment. ProtEmbed employs the semantic embedding, a technique from natural language processing, to construct a low-dimension 'semantic space'.
ProtDec-LTR can improve the performance by combining three ranking methods in a supervised mannerThe predictive results of the three basic ranking methods on the benchmark dataset are listed in, from which we can see that ProtEmbed achieved the best performance and HHblits outperformed PSI-BLAST. These results are fully consistent with previous studies (). As mentioned above, these three ranking methods are complementary. Therefore, performance improvement would be achieved. The training and testing phases of LTR. In training phases, the training samples are represented as feature matrices based on Equations (1) and (3), and then they are used to train a ranking function F() based on Equations (5) and (7). In the testing phases, the testing samples are re-ranked by using the learnt ranking function F() to detect their homologous proteins by combining them in a supervised fashion by using LTR algorithm. We applied LTR to combine the three ranking methods, and the results of different combinations are listed in, from which we can see that the best performance of ProtDec-LTR was obtained when combining HHblits and ProtEmbed. When using PSI-BLAST as a basic predictor for ProtDec-LTR, the predictive performance decreased. It is not surprising because the performance of PSIBLAST is much lower than that of other two approaches as listed in. Much noise can be introduced when incorporating it into the framework of ProtDec-LTR. The performance of various methods is plotted in. In each graph, a higher curve corresponds to better performance. As shown in this figure, ProtDec-LTR (HHblits  ProtEmbed) achieved the best performance, outperforming other three ProtDec-LTR approaches and it also outperformed all the three basic ranking methods, including PSI-BLAST (), HHblits () and ProtEmbed (), indicating that it is correct to combine different ranking methods in a supervised manner by using the LTR algorithm and performance improvement can be achieved by using this approach. This conclusion is further supported by, which compares the performance of ProtDec-LTR against the three individual ranking methods. For most query proteins and superfamilies, ProtDec-LTR outperformed the basic methods, especially, ProtDec-LTR can obviously improve the predictive performance for some superfamilies, e.g. PSI-BLAST, HHblits and ProtEmbed achieved ROC50 scores of 0.5997, 0.8613 and 0.8474 on superfamily a.74.1, respectively, while ProtDec-LTR achieved an ROC50 score of 0.9276, which significantly outperformed all the three basic methods.results on a widely used benchmark dataset showed that ProtDecLTR outperformed other competing methods, especially for some protein superfamilies, performance improvement was obvious. ProtDec-LTR employs a supervised approach to train a model based on the labeled data and the three complementary ranking methods, which considers the advantages of all these individual predictors. It is the main reason for the better performance of ProtDec-LTR. These results further confirm that application of techniques from natural language processing is an efficient way for protein remote homology detection. It has not escaped our notice that the current approach can be easily applied to other tasks in bioinformatics, because many problems in this field can be formulated as ranking tasks, such as fold recognition (), etc. Our future studies will focus on exploring new features or 'grammar rules' of protein sequences () and applying other language processing techniques to protein remote homology detection, such as deep learning (), etc.. Relative performance of various computational predictors. The graph plots the percentage of sequences for which the method exceeds a given performance. The higher curve means the method performs better. ROC1 and ROC50 are used as the performance measures for (A) and (B), respectively. Performance comparison between ProtDec-LTR against three predictors. (AC) The superfamily-level comparisons between two methods labeled near the axis, and the sequence-level comparison results are shown in the (DF). The coordinates of the points in the plot represent the ROC50 scores obtained by the two methods labeled near the axis Application of LTR to protein remote homology detectionFoundation for the Returned Overseas Chinese Scholars, State Education Ministry, the Natural Science Foundation of Guangdong Province,
A B
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
B.Liu et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Conclusion Based on the similarities between protein sequences and natural languages, some studies have applied the theories and techniques from natural language processing to the field of protein remote homology detection, e.g. Latent Semantic Analysis was used to extract the contextual usage of the word-document matrix based on several building blocks of protein sequences and improved performance for protein remote homology detection has been acquired in comparison with basic formalisms (Dong et al., 2005; Liu et al., 2008). Recently, the semantic embedding method was used to convert a large-scale embedding of protein feature vectors into a low-dimensional 'semantic space' and the homologous proteins can be inferred based on this 'semantic space' (Melvin et al., 2011). Motivated by the successful applications of these natural language processing techniques, in this study, we applied the LTR algorithm, a technique derived from natural language processing, to detect remote homologous proteins and a new computational predictor called ProtDec-LTR was proposed, which combines three state-of-the-art ranking methods (PSI-BLAST, HHblits and ProtEmbed) in a supervised manner. In this approach, protein remote homology detection is treated as a document retrieval task, where the protein sequences are viewed as documents. Experimental
