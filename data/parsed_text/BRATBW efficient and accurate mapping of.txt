We introduce BRAT-BW, a fast, accurate and memory-efficient tool that maps bisulfite-treated short reads (BS-seq) to a reference genome using the FM-index (Burrowsâ€“Wheeler transform). BRAT-BW is significantly more memory efficient and faster on longer reads than current state-of-the-art tools for BS-seq data, without compromising on accuracy. BRAT-BW is a part of a software suite for genome-wide single base-resolution methylation data analysis that supports single and paired-end reads and includes a tool for estimation of methylation level at each cytosine.
INTRODUCTIONBisulfite sequencing (BS-seq) combined with next-generation sequencing (NGS) instruments enables genome-wide methylation analysis at a single base-resolution. Bisulfite treatment of DNA followed by PCR converts unmethylated cytocines to thymines and leaves methylated cytocines unchanged (). Bisulfite-treated sequenced reads have to be aligned to the reference genome, but the treatment introduces the computational challenge of mapping both Cs and Ts in a read to Cs in the genome. The most successful methods for mapping short reads either use hashing or data structures based on the BurrowsWheeler transform (where the latter approach is considered to yield more time efficient solutions than the former. Although several tools are available for BS-seq data, most of them still use hashing (including RMAP-bs, SOAP, MAQ and BRAT). The fastest tools for mapping BS-seq reads are Bismark () and BS-seeker (). Both employ the mapping tool Bowtie () that internally uses the FM-index () based on the Burrows Wheeler transform. As a consequence, both tools are required to post-process the output of Bowtie to remove ambiguous reads or reads with too many mismatches. Bismark synchronizes instances of FM-indexes run in parallel, which takes a toll on time-efficiency. BS-seeker outputs the results of distinct instances into separate files * To whom correspondence should be addressed. during mapping and then post-processes mapping results, which demands extra storage for intermediate results. Bismark and BSseeker can therefore require large amount of primary memory to complete the processing. Both tools support two distinct types of bisulfite libraries: the first type yields sequenced reads that are bisulfite-converted versions of two original genomic strands (); the second type produces reads that correspond to four possible strands, as a byproduct of PCR step (). To support the second type of libraries, Bismark and BSseeker align reads to four distinct FM-indexes. Even though a type-1 bisulfite library would require only two FM-indexes, Bismark builds four FM-indexes in parallel requiring 16 GB of memory for human genome (Bowtie-2 with offrate 4). On the other hand, BS-seeker's memory footprint depends directly on the size of the input file: it may require up to 15 GB of memory for 30 M 32 bp-long reads (the typical number of reads/lane for the Illumina Genome Analyzer). Additionally, BS-seeker currently does not support paired-end reads and allows a limited number of mismatches per read, which makes it unsuitable for longer reads.in the Supplementary Material summarizes the features of all the available tools for BS-seq data. In this article we introduce BRAT-BW, a fast and accurate mapping tool that uses a very memory-efficient implementation of the FM-index. BRAT-BW is an evolution of BRAT (), which uses about half as much memory compared with BSseeker and Bismark. Additionally, its memory footprint does not depend on the size of the input sequenced reads, likely to continue to increase with future sequencing technologies advances. BRAT-BW supports both types of bisulfite libraries and handles single-end and paired-end reads. It has no limitation on the maximum length of the read or the number of allowed mismatches. BRAT-BW guarantees to find all matches as long as they have at most one mismatch in a prefix of length 3264 bp (user defined) of the read. There are several advantages of designing a tool for BS-seq data based on the FM-index from the 'ground-up' instead of relying on a general-purpose tool such as Bowtie. BRAT-BW processes both FM-indexes on a single processor, so no synchronization cost is required. In addition, the selection of correctly mapped unique reads is performed 'on the fly' during mapping, so no storage for intermediate results is necessary.
METHODS, RESULTS AND DISCUSSIONBRAT-BW uses the strategy proposed in () and employed by both Bismark and BS-seeker. Two FM-indexes are built on the positive strand of the reference genome: in the first, Cs are converted to Ts, and in the second, Gs are converted to As. Original reads with Cs convertedto Ts are mapped to the first index, and reverse-complements of the reads with Gs changed to As are mapped to the second index. To achieve higher efficiency, BRAT-BW employs a multi-seed approach similar to Bowtie-2, by attempting to align a read starting from different locations within the read (details in the Supplementary Material). To assess the accuracy of our tool with that of Bismark and BS-seeker, we generated 1 M in silico reads of different lengths originated from the human genome (hg18), with 2 % of errors introduced uniformly at random positions in each read. Our synthetic dataset consisted of a mix of 36 bp and 50 bp reads with one mismatch per read, 75 bp and 100 bp reads with two mismatches per read and 250 bp reads with five mismatches per read. Simulated reads and the parameters used to run the experiments are provided in the Supplementary Material. Bisulfite conversion rate was set to 98%.reports the total number of uniquely mapped reads and mapping accuracy estimated as the number of unique reads mapped to the original genomic positions divided by the sum of correctly and incorrectly uniquely mapped reads. A read is considered mapped incorrectly if it was mapped with a number of mismatches equal to a given threshold, but the reported location differed from the original genomic location. Bismark and BS-seeker handles differently the case when a C in a read has to be mapped to T in the genome: Bismark allows this mapping, whereas BS-seeker considers it a mismatch. We calculated the number of mismatches in the resulting mapped reads according to both policies. BRAT-BW allows a user to choose between the two policies. In all experiments, Bowtie's FM-index was built with an offrate 4. For BS-seeker, option p was disabled. For BS-seeker on 250 bp-long reads, we required the tool to map the first 150 bp with three mismatches (maximum allowed).shows that the performance of BRAT-BW in terms of mapped uniquely bases and mapping accuracy is comparable with the best results of the other tools. On longer reads, BRATBW shows slightly better mapping accuracy than Bismark with Bowtie-2. We carried out the same tests on BRAT (tool brat-large). Since brat-large does not allow mismatches in the first 24 bases of a read, the error model used to generate the simulated reads is severely affecting the performance of brat-large. Unlike real reads where the majority of sequencing errors tend to accumulate towards the 3 end, a substantial portion of our simulated reads had mismatches in the first 24 bp. On 36, 50, 75, 100 and 250 bp reads, brat-large only mapped 27, 43, 40, 51 and 55% of reads, respectively, with mapping accuracy of 96.3, 98.8, 99.2, 99.7 and 99.96%, respectively. To evaluate time-and memory efficiency on real data, we used human reads (SRA #SRR020138,) and prepared two datasets. The first one contains 32 bp-long reads obtained by selecting the high-quality prefix of that length. Each read was duplicated to obtain a realistic number of sequenced reads per lane (29.6 M in total). In the second dataset we trimmed reads by quality, selected the first 64 bases, then removed the first two bases, and duplicated each read (24.5 M in total).shows that BRAT-BW used half as much memory as other tools. On short reads, the time and the total number of mapped reads was comparable among all tools considered here. On longer reads, BRAT-BW was 1.5, 2.7, 3 and 3 times
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
