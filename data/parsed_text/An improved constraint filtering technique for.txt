Motivation: In systems biology, kinetic models represent the biological system using a set of ordinary differential equations (ODEs). The correct values of the parameters within these ODEs are critical for a reliable study of the dynamic behaviour of such systems. Typically, it is only possible to experimentally measure a fraction of these parameter values. The rest must be indirectly determined from measurements of other quantities. In this article, we propose a novel statistical inference technique to computationally estimate these unknown parameter values. By characterizing the ODEs with non-linear state-space equations, this inference technique models the unknown parameters as hidden states, which can then be estimated from noisy measurement data. Results: Here we extended the square-root unscented Kalman filter SR-UKF proposed by Merwe and Wan to include constraints with the state estimation process. We developed the constrained square-root unscented Kalman filter (CSUKF) to estimate parameters of non-linear state-space models. This probabilistic inference technique was successfully used to estimate parameters of a glycolysis model in yeast and a gene regulatory network. We showed that our method is numerically stable and can reliably estimate parameters within a biologically meaningful parameter space from noisy observations. When compared with the two common non-linear extensions of Kalman filter in addition to four widely used global optimization algorithms, CSUKF is shown to be both accurate and computationally efficient. With CSUKF, statistical analysis is straightforward, as it directly provides the uncertainty on the estimation result. Availability and implementation: Matlab code available upon request from the
INTRODUCTIONLiving organisms develop a highly interconnected web of dynamic mechanisms between different levels of molecular components, which are organized into diverse biochemical reaction networks. A better understanding of the general principles of these biological processes requires a system-level study of the underlying mechanisms (). The integration of computational and mathematical methods with experimental efforts is necessary to gain such systems level understanding. In systems biology, the specific type of modelling that studies the detailed quantitative analysis of the dynamics of cellular processes is mechanistic or kinetic modelling (). Such models are often characterized by sets of ordinary differential equations (ODEs) () that describe the underlying interactive mechanisms of the system in a quantitative manner (). They account for the change of concentration of certain chemical species such as the metabolites, messenger RNA (mRNA) or proteins over time. These changes are specified through the rate laws, which are determined from in vitro biochemical experiments. The rate laws may have multiple parameters that need to be determined correctly to faithfully mimic observations (). While it might be possible to experimentally measure some of these parameters, for most of them, conducting biological experiments to determine their values are difficult, expensive, time-consuming or not currently possible (). As a result, different computational techniques have been developed for the indirect determination of these unknown parameter values from some other measured quantities (). In general, the parameter estimation problem is formulated as a non-linear optimization problem that aims at minimizing the difference between simulated and measured values from experimental time-course data (). Starting with an initial guess, these methods exhaustively search the parameter space to find the set of values that produce the best fit between the simulated and the measured data. Extensive research exists on the application of different optimization techniques, such as non-linear least square fitting and methods following steepest descent gradient techniques (), methods suitable for global optimization including simulated annealing (SA;) and evolutionary computation (). But due to the non-linear nature of the dynamics, the optimization problems of biochemical networks are most often multimodal (). Exploring such parameter space is computationally expensive for these optimization techniques. Moreover, they often get stuck in local minima (). Their performance also suffers in the presence of large measurement errors (). This is compounded as few optimization techniques are *To whom correspondence should be addressed. able to take into consideration the system noise (). An alternative to traditional optimization methods is to use the Bayesian inference method. This method takes both the system and measurement noise into consideration when extracting information from noisy or uncertain data (). The major advantage is its ability to infer the full probability distribution of the states and the parameters instead of making a simple point estimate. This method tries to estimate the posterior distribution of the parameter conditioned on the observed data y, pjy. However, the calculation of this posterior density involves high-dimensional integration for which analytical expressions are generally not available (). Their numerical solution might also be computationally challenging as the problem is translated to a combinatorial summation problem (). The Markov chain Monte Carlo (MCMC) () method, which works with batch data, has the capability to represent the posterior distribution numerically (). Recently, MCMC techniques have been widely used in biological systems for predicting different targets (). Sequential approaches such as the sequential Monte Carlo (SMC), also known as particle filters (), and Kalman filtering type approaches () were primarily developed for data produced in a sequential fashion. These methods yield better approximations compared with the batch processing algorithms when applied to the whole data (). There has been extensive research in recent years to apply the sequential approximation methods to estimate states and parameters in biological systems. The work of;;demonstrate the applicability of the SMC in the state estimation of biological models. Although SMC or particle filters are more sophisticated than the Kalman filtering methods, they involve calculation of several hyper parameters and have to solve numerous sets of ODEs, which leads to a high computational cost ().reported that parameter estimation using particle filtering for a regular-size biological model requires the cost of petascale computing. Such large-scale computing can only be performed with high-end clusters and supercomputers. In that respect, Kalman filtering methods are much more suitable for biological systems, as they are less resource intensive in terms of computational cost. To date, efforts have been made to apply Kalman filteringbased methods to estimate parameters of biological systems (to name a few). In this article, we propose a new form of the unscented Kalman filter for the estimation of unknown parameter values of biological systems within a constrained boundary. Unlike other non-linear extensions to the Kalman filter (KF), this algorithm remains numerically stable. We illustrate the efficiency of this method by estimating the unknown parameters and hidden states of two different systems. The first system is the upper part of Glycolysis in yeast (), modified from. With this, we study the parameter estimation of a medium-size kinetic model. The second model is from the Dream6 contest on the estimation of model parameter challenge (). The result from the parameter estimation of these models clearly demonstrates the applicability of our newly proposed algorithm to much larger and real-life biological models.
MODELLING BIOLOGICAL NETWORKS AS STATE-SPACE MODELSTo apply Kalman filtering for parameter estimation in biological models, the system must first be formulated as a non-linear statespace model (). The state-space description uses a set of first-order differential equations to provide a convenient and powerful representation of the non-linear dynamics of a system. This representation consists of state variables and observed variables as well as their different components and interactions. State variables represent the total state of the system at any given time. Generally some state variables are not directly observable (hidden states). The observed variables are those that can be directly measured. The general form of the non-linear state-space model is _ x  Fx, , u, t  w, xt 0   x 0 y  Hx, , t  v 1The evolution of these state variables, x  x 1 , x 2 ,    , x n , over time is defined by the state equation, F, which also depends on the model parameters   1 , 2 ,    , m , starting from x 0 at time t 0 (). For a biological system, this state vector x might represent the change of concentration of biochemical species like metabolite or mRNA. The state equation may also be influenced by external input, u  u 1 , u 2 ,    , u p . The observation equation, H, relates the state variables to the output variables, y  y 1 , y 2 ,    , y k , describing how the state variables are observed through their measurements. The process noise w is uncorrelated Gaussian white noise with probability distribution, pw $N0, Q. This is an extrinsic noise describing the amount of confidence we have in our model. The measurement noise, v, explains the reliability of the measurement data and is also uncorrelated Gaussian white noise with probability distribution, pv$ N0, R.
Parameter estimation in non-linear state spaceParameter estimation of kinetic models represented with statespace models can be addressed with state observers by extending the state-space definition to use an augmented state vector x aug  x  (). This augmented state vector is constructed by considering the parameters, as additional state variables with a zero rate of change, i.e. constants. In this manner, the parameters are considered as constant functions of time instead of as mere constant numbers (). The augmented state-space equations for parameter estimation areFor notational simplicity, we will use x to denote x aug .
Deriving non-linear state space from ODEsDynamics of the biological systems are characterized by a set of ODEs, where the state evolution is described as _ x  Fx, u, t  w, xt 0   x 0 3There are a number of ways to link this ODE with the non-linear state-space modelling. One issue to consider is that, although the system is a continuous time process, it is observed only at discrete times.solved this problem by numerically integrating the state dynamics between the temporal time points at which the state is being observed, using the parameter values estimated at the previous iteration:Fx, ud xk  1  fxk, u  wk 4
Parameter estimation with filtering techniquesIn this article, we apply the Bayesian framework to infer the hidden states and parameters of a biological system. We seek to calculate the joint probability distribution of the parameters and states, given the measurements, denoted as p, xkjyk. The algorithm we propose is derived from the sequential estimation procedure based on filtering. The filtering technique sequentially calculates the posterior probability of the state, pxkjyk, given the measurement data upto the k-th time step. The complete calculation consists of a sequential and alternative calculation of the state probability at time k having the measurement data upto time step k1, called the prediction step pxkjyk1  Z pxkjxk1pxk  1jyk  1dxk  1 5 and the calculation of the state probability when the measurement data is available at the k-th time step is called the correction step.At the start, the prediction step px0jy0 : 1 is defined as the density of the initial state vector, x0. The Kalman filter optimally calculates the posterior mean and covariance when f and h are linear Markov processes. This algorithm is invalid if f and h are non-linear. Several extensions of Kalman filter has been developed to work under non-linearity such as the extended Kalman filtering (EKF) (van der) and unscented Kalman filtering (UKF) (). Among the different non-linear extensions, UKF has demonstrated a much higher accuracy in the state estimation of dynamic systems (). The key idea in UKF is the 'unscented transformation' where a set of points called sigma-points are selected deterministically to capture the probabilistic spread of the state variables. These sigmapoints are then propagated through the process function f. An approximation of the transformed mean xkj ^ k  1 and covariance Pkjk  1 are then calculated from these sigma points. At the correction step, the final state estimation x(k) uses the classical Kalman filtering approach. The complete algorithm for UKF is given in Supplement 6. A major drawback when applying the UKF to biological systems is that it becomes numerically unstable when the estimation covariance matrix is not positive definite (). The square-root implementation of UKF solves the problem of numerical instability by propagating the square root of the covariance matrix at each iteration ().
Selection of sigma-pointsThe direction of the sigma-points are defined through the matrix S   ffiffiffi ffi P p  ffiffiffi ffi P p , where P is the current estimate of the covariance matrix. This allows the positive and negative square roots to be handled separately. The step size vector, , is then defined aswhere  2 n    n is a scaling parameter. The other scaling parameters and are described in Supplement 1. When none of the sigma-points are outside of the boundary, the step size is ffiffiffiffiffiffiffiffiffiffiffi n  p , the regular step size for the scaled UT (). However, if any of the sigma-points violate the boundary, then the step size is set to the scaled distance to the nearest boundary. These result in the constrained sigma-point matrix, lying either on or inside the boundary, and defined byThe constrained sigma-points may not be symmetric. In this case, we need to adjust the weights associated with these non-symmetric sigma-points. The weights, W m for the mean and W c for the covariance, are calculated such that when sigma-points do not violate the constraints, the regular weights are selected. However, if the sigma-points are propagated onto the boundary, the weights are varied linearly with the step size. Supplement 7 illustrates the sigma-point selection, and the detailed calculation of the weights is given with the description of the algorithm.
Formulation of CSUKFFor the implementation of CSUKF, we applied the same techniques as SR-UKF, namely QR decomposition, Cholesky factor updating and pivot-based least squares. The Cholesky factor, V(k), of the compound matrix formed by the positively weighted sigma-points and the matrix square root of the process noise are calculated using the QR decomposition. A similar approach is used to update the Cholesky factor of the measurement update covariance matrix. The Cholesky factor update is used to downdate the Cholesky factor for the negatively weighted sigmapoints. Finally, the pivot-based least squares are used to calculate the Kalman gain K(k) (see Supplement 1 for a detailed description). By adapting the method from the square-root UKF, V(k) is propagated at each iteration instead of the full covariance matrix P, eliminating the need to explicitly calculate this square root at each iteration. We start the CSUKF by initializing the state vector ^ x0  Ex0 and the state covariance matrix P0  Ex0  ^ x0x0  ^ x0, and then calculating its square root, V(0), via Cholesky factorization. As the weights in the constrained sigma-point calculation are asymmetric, they may vary in magnitude and sign, i.e. they can be positive or negative. Thus the calculation of the square-root factor of the covariance matrix needs to be decomposed into two parts, one for the positive weights of W C denoted as V pos k and one for the negative weights of W C denoted as V neg k. This propagated Cholesky factor is used to calculate the sigma-points, X. At each iteration, they are calculated aswhere, I   fjjW C j ! 0g and I   fjjW C j 50g are used as a helper index to identify the positive and negative weights, respectively. The covariance matrix P can be recovered from V as Pk  V pos kV pos k T  V neg kV neg k T QR decomposition was used to express V pos in terms of an orthogonal matrix O and an upper triangular matrix G
V pos k  OkGk T 12The state covariance matrix then becomes Pk  GkOk T OkGk T  V neg kV neg k T  GkGk T  V neg kV neg k T 13where, Ok T Ok  I. Thus, the state covariance matrix can be formed from the upper triangular matrix generated during QR decomposition, i.e. Gk  qrV pos k. Supplement 4 explains the recovery of the covariance matrix in detail. A rank 1 downgrade to Cholesky factorization is performed to include the effect of V neg k in the calculation of the square root. This approach is applied to update the square-root factor in both the time and measurement update steps. The final step for each iteration is the calculation of the state estimation and the square-root factor of the estimation covariance. We next discuss the complete algorithm of CSUKF.
InitializationTo start the filter, we need to first initialize the states and the error covariance matrix. As we do not have any measurement data to estimate x(0), we set the initial state estimate to its expected value.
^ x0  Ex0 14It follows the calculation of the error covariance matrix as P0  Ex0  ^ x0x0  ^ x0 T . In CSUKF, we only propagate the triangular form of the square root of the error covariance matrix. This square root is calculated at the initialization step using the Cholesky decomposition.
V0  cholfP0g 15We iterate the next steps for the whole time-series data from k  1 to k  T.
Time update (prediction stage)The time update equations are first applied to obtain the current a priori state estimate, which we denote as x  k. This calculation is based on the process function f, considering all the data available upto step k1, y1 : k  1. To calculate this x  k, we need to first generate 2n  1 sigma-points. These sigma-points, Xkjk  1, are calculated based on the state estimate made at k  1 th time step, ^ xk  1 and the Cholesky factor of the error covariance matrix Vk  1. The sigma-points satisfying L Xkjk  1 U are then selected as Xkjk  1  ^ xk  1 , j  0 ^ xk  1  j col j S , 1 j 2n & 16 where X is based on the direction, S  Vk  1 Vk  1. is the step size, which is calculated asWith the adjustment of the sigma-points, the weights are to be adjusted as well. These weights vary linearly with the step size of the sigma-points. They are calculated as, as defined in the general weighting scheme of UT (). Solving for a and b then yieldsThe detailed calculation of a and b is given in Supplement 5. These sigma-points are transformed through the non-linear state function.These transformed sigma-points are then used to calculate the a priori mean and covariance of the estimation.The prior cholesky factor for the time update, V x k, is a downdate of the positive and negative square roots V x k  cholupdateG x k, V x neg k, 0  0
Measurement update (correction stage)The correction stage updates the a priori state estimate ^ x  k by taking the current measurement data, y(k), into consideration. At this stage, sigma-points are redrawn to incorporate the measurement noise, RThese sigma-points are now propagated through the observation function h. The same approach is applied to calculate the cholesky factor for the measurement covariance, V y k.
State and covariance estimationThe same general formulation used in the UKF for the final state and covariance estimation is applied. For that we need to first calculate the cross-correlation covariance matrix,The Kalman gain, which describes the relative certainty of the current state estimate and the measurement, is calculated as Kk  P xy k=V y k T V y k  31 For measurement data y meas k at iteration k, the final posterior state estimation isThe square-root factor of the estimation covariance matrix V(k) is then updatedIf at the end of the measurement update stage, any state value violates the constraints, they are projected back onto the constraint boundary before the start of the next iteration. The choice of probability density function in CSUKF ultimately depends on the variance; as the mean of the non-negative state approaches zero, the distribution either remains Gaussian or if sufficiently large, may be better described by a Weibull distribution (which is one sided, i.e. 0 for x50). The Weibull distribution with parameters % mean and k42 has been shown to approximate the Gaussian distribution (at k  2, it is equated with the Rayleigh distribution and moves towards a Dirac delta centered at x  as k approaches infinity). As such, we feel the trade off of this simplified approach using the Gaussian pdf is appropriate both theoretically and, moreover, has held up in the actual application of the algorithm when applied to parameter estimation problems. In the UKF, the sigma-points are symmetric. When calculating the Taylor series accuracy, these symmetric sigma-points result in all odd order moments being zero Julier and Uhlmann (2004). In CSUKF, when sigma-points violate the constraints, they are projected back onto the feasible space and may result in asymmetric sigma-points. To preserve the Gaussian distribution of the state variables, the weights (W m and W c ) are adjusted to compensate for the projected sigma-points (Supplement 4). Thus, the weighted symmetric sigma-points from this modified distribution maintain the same order of accuracy for the CSUKF. This preservation of accuracy is illustrated by the comparison of UKF and CSUKF results, as contrasted with those of EKF ().
RESULTS AND DISCUSSION
Glycolysis model from yeastThe impetus of this work is to develop an algorithm that can estimate unknown parameter values for kinetic models of biological systems. To test the algorithm, the kinetic model from the upper part of glycolysis in yeast (), modified from, was chosen. This model, shown in, consists of the first four reactions from the upper part of glycolysis. This model explains the degradation of glucose in the process of yielding energy. The model has 15 parameters of which four parameters, k 2 , V f max, 3 , V max, 4 and k 8r , were selected to be estimated. These parameters were chosen to cover a large range of values, from 2.26 (k 2 ) to 140.28 (V f max, 3 ). The other two parameters are V max, 4  44:73 and k 8, r  133:33. Parameters can not have negative value so we set the lower bound for all parameters as Lx ! 0. As there is no upper bound for the parameters, this was set to infinity Ux 1. Synthetic measurement data y meas with uncorrelated white noise was generated to validate the model. Results:shows the estimation trajectory of the four parameters from a single run of the CSUKF. The dashed line represents the actual parameter value and the solid line represents the estimation trajectory of the parameters. The CSUKF estimations quickly approach the actual parameter values, regardless of their magnitude. Despite the noisy data, the parameter fitting continues to improve over time as does the accuracy of the estimate. This is again consistent with the observed behaviour of the original UKF. The same parameters were then estimated with the EKF and UKF, providing an additional set of comparative values. The summary statistics from 50 runs (with random initial state values between zero and one) are listed in. The CSUKF again performs similarly to the UKF, both of which yield accurate and precise estimations. In this result, the UKF had marginally lower standard deviations compared with the CSUKF, indicating a slightly better estimation accuracy. However, it suffers from numerical instability when initialized to higher values as shown in (Supplementary). To determine the effect that the choice of initial parameter values has on each non-linear KF variant, 50 sets of randomly selected starting values were generated for each parameter in the range of 0 1 and a second 50 in the range of the actual parameter values, 0 140 (Supplementary). Supplementarypresents the estimations from running each algorithm with each set of initial parameter values. One major difference was that for this model, the UKF became numerically unstable, when initialized with higher values (Supplementary), failing 68% of the time. The CSUKF was found to be independent of the starting values yielding 100% solutions, with only one outlier (Supplementary). Furthermore, without constraints, the UKF periodically considered negative parameter values to be valid. Both UKF and CSUKF provide more accurate estimates than EKF while requiring 53% of the processing time, which is consistent with previous comparisons (). Using the MATLAB profiler, the bottleneck in EKF was found to be the calculation of the Jacobian, required for linearization. EKF was also found to). Analysing these results, CSUKF was found to have the most consistent and accurate results of these three KF extensions. Additional comparisons were made with four probabilistic global optimization algorithm, evolutionary programming (EP), genetic algorithm (GA), simulated annealing (SA) and particle swarm optimization (PSO). Supplementarysummarizes these results. For this comparison, the model was implemented in Copasi 4.8 with the default settings used for each of these algorithms. To summarize, the overall estimation performance of CSUKF exceeded that of the other algorithms, both in terms of runtime and accuracy (Supplementary).
Gene regulatory networkTo verify the applicability and accuracy of CSUKF, it was applied to estimate the parameters of a gene regulatory network. This model was part of the Dream6 estimation of model parameters challenge. The network structure of the model and the corresponding rate laws are given in Supplement 3. This model follows linear kinetics for mRNA degradation and protein synthesis and degradation. Hill-type kinetics were assumed for the activation and repression. Protein production was modelled in two steps, the transcription step and the translation step. Considering the two Hill kinetic parameters, h , kd , and the mRNA synthesis rate mRNA, syn , the transcription can be described asThe network topology and reaction rates were given by the organizers. Initially, the contest provides a limited amount of data representing the time-course of mRNA concentration for the wild-type variety. To reflect an actual scientific scenario, additional datasets can be purchased by spending a virtual budget allocated to each team at the time of registration. The model has 30 parameters among which 29 are unknown and, therefore, have to be estimated. For this experiment, we additionally bought the protein concentration of the wild type and also the mRNA and protein concentration for the mutant with increase of RBS4 activity by 100%. All time-series data are over the interval 0 to 20 s with a 1 s step size. We set the constraints as 10 6 10 6. The experiment was divided into two phases. In the first phase, we used the mutant data to estimate the mean and covariance of the parameters. During this step, the states were initialized with small random numbers. Similarly, the process noise covariance matrix, Q, was also initialized with small random numbers. The measurement noise covariance matrix R was initialized with the noise model supplied by the organizers, which is y noisy  max0, y  0:1  0:2  y. The estimated values from phase 1 are used to formulate the prior distribution of the parameters for the second phase of the experiment where the data from the wild type was used.compares the final estimation result of the parameters with the actual values (which were made available at the end of the contest). Supplementarydescribes the numerical value of the estimation along with the standard deviation. As can be seen fromand Supplementary Table S6, CSUKF can estimate most of the parameters with a reasonably high accuracy for this model. A comparative result of the parameter estimation for this network with GA, EP, SA and EKF along with CSUKF are given in Supplementary Table S7. One point to note from Supplementary Table S6 is that parameters having high standard deviation deviates more from the actual value compared with the other parameters, indicating that some of the parameters might be non-identifiable. However, non-identifiability is not considered under the scope of this article. For a more in-depth view of the estimation, state trajectory of the metabolites with the estimated parameters and actual parameters, a full set of plots are provided in Supplement 8.The CSUKF has been specifically designed for the needs of systems biology; however, these needs are not unique to biological modelling. Thus the CSUKF can be generally applied to any filtering or state-space problem.
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CSUKF at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CONSTRAINED SQUARE-ROOT UNSCENTED KALMAN FILTER Constraints play a major role in biological systems, as they include previously known information about the parameter ranges. As biological parameters vary within a biophysically plausible range, the inclusion of constraints makes the state estimation possible within a biologically meaningful space. One method for introducing constraints into the KF is the moving horizon estimator. However, this approach requires the solution of a non-recursive quadratic system at each step (Teixeira et al., 2008). Alternatively, the interval constrained unscented transformation (ICUT) proposed by Teixeira et al. (2008) introduces the constraints at each of the sigmapoints individually. This constrains the sigmapoints and the mean value to stay within the given boundaries. That is, if a sigma point falls outside of the boundary, it is projected onto the boundary. The latter approach is a more efficient method for introducing the state inequality constraints into the state estimation process (Teixeira et al., 2008). Applying ICUT directly to UKF would ensure a constrained state estimation, and the instability of this technique would still pose a problem during the estimation. The filtering technique proposed in this article includes state inequality constraints by modifying the square-root unscented Kalman filter. This new filtering technique, the constrained square-root unscented Kalman filter (CSUKF), is both numerically stable and can estimate parameters within a biologically plausible parameter space. In CSUKF, we define the state constraints for an n-dimensional state vector at iteration k, xk 2 R n , with an n-dimensional hypercube according to Lk xk Uk  7 Where for iteration k, Lk 2 R n is the vector of lower bounds and Uk 2 R n is the vector of upper bounds. (Although typically not the case for biological systems, the boundaries of each sigma-point may vary with each iteration.) For an unbounded region, the limits are set to infinity.
S.M.Baker et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CONCLUSION In systems biology, the modelling of biochemical networks require the estimation of mechanistic parameters that cannot be determined directly from measurements. These parameters are inferred from other measured quantities. Compounding the problem is the fact that these measurements are inherently noisy, the networks are non-linear and traditional optimization space is multimodal. In this article, we describe a novel filtering method, the CSUKF, which provides a powerful yet computationally costeffective method to tackle complex parameter inference problems for biological models. While filtering approaches are generally of use in applications suffering from noisy measurement data, the constrained parameter estimation and insensitivity to initial conditions combine to make CSUKF particularly well suited to biological applications. To illustrate this point, the CSUKF was shown to successfully estimate the parameters of a metabolic network (the Glycolysis model) and a gene regulatory network (the Dream6 challenge). CSUKF systematically propagates uncertainty while exploring the parameter space, giving the estimation covariance matrix along with the parameter approximations. Thus this approach makes it easier to conduct direct statistical analysis over the estimation. Furthermore, the CSUKF provides this enhanced parameter estimation while ensuring numerical stability with the same runtime complexity of the less-stable unscented Kalman filter. Fig. 3. Parameter estimation trajectory from CSUKF. The actual values of the four unknown parameters are shown with dashed lines, and the recursive estimations are shown with solid lines. The sample time is t  0:25 corresponding to 100 data points
