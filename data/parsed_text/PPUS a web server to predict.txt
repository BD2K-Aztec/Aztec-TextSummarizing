Motivation: Pseudouridine (W), catalyzed by pseudouridine synthase (PUS), is the most abundant RNA modification and has important cellular functions. Developing an algorithm to identify W sites is an important work. And it is better if the algorithm could assign which PUS modifies the W sites. Here, we developed PPUS (http://lyh.pkmu.cn/ppus/), the first web server to predict PUS-specific W sites. PPUS employed support vector machine as the classifier and used nucleotides around W sites as the features. Currently, PPUS could accurately predict new W sites for PUS1, PUS4 and PUS7 in yeast and PUS4 in human. PPUS is well designed and friendly to user.
IntroductionPseudouridine (W), the most abundant RNA modification, has important cellular functions. For example, ablation of rRNA W modification by CBF5 deletion in S. cerevisae is lethal (), and mutation of human PUS1 leads to mitochondrial myopathy and sideroblastic anemia (). Identifying W sites is certain an important work. W was known present in different categories of non-coding RNAs such as tRNAs, rRNAs and snRNA (). Recently, using newly developed W-seq (Psi-seq or Pseudo-seq) methods, three works for the first time revealed that W is also present in mRNA (). W is catalyzed by pseudouridine synthase (PUS), and different W sites are catalyzed by different PUSs (). However, to our knowledge, there is only one tool developed for prediction of W sites in tRNA (). No tool is available to predict W sites in mRNA and other categories of RNAs, not mention predicting which PUS modifies the W sites. In this work, using PUS-specific W sites found in recent works (), we developed an algorithm to predict PUS-specific W sites. The algorithm could accurately predict W sites modified by PUS1, PUS4 and PUS7 in yeast and PUS4 in human. Any RNA sequence can be used as input. Finally, we implemented the algorithm in our web server PPUS. PPUS is well designed and friendly to user.
Methods
Data sourceUsing newly developed W-seq methods, many W sites and the PUSs that modified them were identified in mRNA, tRNA, snoRNA and rRNA in recent works (). We downloaded data from both works and put all W sites modified by a certain PUS together, regardless of the RNA category. To train classifiers, these W sites were defined as gold standard positive samples. Corresponding to the positives, gold standard negatives were gotten by randomly choosing equal number of 'U' sites from the remaining 'U's of the same sequences. The number of gold standard positive samples for each PUS was listed in. These data could be downloaded from website: http://lyh.pkmu.cn/ppus/data. html. To avoid sampling bias, we sampled gold standard negative V C The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com dataset 100 times, and then combined each negative dataset with the positives to train the classifier.
Support vector machineThe classification model for predicting W sites was based on support vector machine. The software LIBSVM3.20 () was employed, in which a radial basis function (RBF) was chosen as the kernel function. The default values of parameter c and g were used. LIBSVM outputs a posterior probability for each prediction to reflect its reliability (). The larger the posterior probability is for a site, the more likely the site could be modified to W. To make it easy to display in web server, the posterior probability was converted to M-score by Equation (1). The M-score is an integer between 5 and 10. M-score  floor posterior probability  10   (1)
Classifier evaluationTo evaluate performance of support vector machine (SVM), 5-fold cross validation was adopted. In each round, 20% of the samples were left out as the test set and the remaining as the training set. As in previous work (), precision, recall and F1 were used to evaluate the classifier. Of the sites predicted as W sites, the numbers of true positives (TP) and false negatives (FN) were counted. Of the genes predicted as non-W sites, the numbers of true negatives (TN) and false positives (FP) were also counted. Then the precision, recall and F1 score were calculated asPrecision is the fraction of true positives in the predicted positives, whereas recall is the fraction of gold standard positives that are predicted as true positives. F1 is used to evaluate the overall performance of a classifier. Receiver operating characteristic curve is another measure often used for classifier evaluation (), thus we also compute area under curve (AUC) in this work. Because negative datasets were gotten by 100 random samplings, the medians of precisions, recalls, F1s and AUCs of the 100 training results were used ().
Feature selectionWe used a sliding window strategy to get nucleotides around the W sites as classification features. The window was in the form of 'LWR', where 'L' and 'R' represented 010 nt at the left and right side of W site, respectively. To generate fixed window length, a dummy 'X' nucleotide was added to sequence terminals if needed. As in previous work (), we used binary approach and represented A, C, G, U and X nucleotides with {1,0,0,0,0}, {0,1,0,0,0}, {0,0,1,0,0}, {0,0,0,1,0} and {0,0,0,0,1}, respectively. To get best performance for the classifier, we optimized the window length ('L' and 'R') and listed them in.
Web serverThe web server was run on Linux. Programs were written in PHP (Hypertext Preprocessor). PPUS is freely available at http://lyh. pkmu.cn/ppus/.
ResultsAs described in methods, W sites and the PUSs that modified them were gotten from recent works (). First, we wanted to test whether it was possible to develop an algorithm to predict W sites if exclude the information of which PUS modified the sites. We put all known 464 yeast W sites together as gold standard positives, and got equal number of negatives by random sampling. Unfortunately, as shown in, the median precision, recall, F1 and AUC were 0.64, 0.60, 0.62 and 0.62, respectively. The performance was poor, showing that if excluding PUS-specific modification information, it was hard to distinguish W sites from non-W sites. Second, it was reported that PUS1, PUS4, PUS7 recognized 'AW', 'GUWCNANYCY' and 'UGWAG', respectively (). Thus, we wanted to know whether it was possible to distinguish W sites catalyzed by a certain PUS from non-W sites. Fortunately, as shown in, the classifier performed excellent on PUS1, PUS4 and PUS7 in yeast, and PUS4 in human, with median F1  0.77, 0.78, 0.98 and 0.97, respectively. However, it performed poorly on PUS2, PUS3 and CBF5 in yeast, and DKC1 in human, with median F1  0.58, 0.63, 0.58 and 0.60, respectively. This might because the feature nucleotides were not found. In this work, no RNA category information was used for classifier training, so the classifiers should be RNA category insensitive. In other words, any RNA sequence can be used as input. Third, we validated the yeast and human PUS4 classifiers with independent datasets. As shown in, there were 55 and 56 positive samples for yeast and human PUS4 synthases, respectively. To test the yeast PUS4 classifier, we used the human PUS4 W sites as an independent dataset, and finally found that 52 of the 56 W sites can be correctly predicted. Similarly, we used the yeast W sites as an independent dataset to test the human PUS4 classifier and found that 39 of the 55 yeast W sites can be correctly predicted. Both results showed that the classifiers were efficient. In conclusion, we for the first time developed an algorithm to efficiently predict PUS-specific W sites. We implemented the algorithm in our web server PPUS. We think PPUS will be an important tool for biologist in the field.#pos: #positive; Pre: precision; Rec: recall; L/R: number of nucleotides at the left/right of the W site; All-Yeast: all W sites found in yeast; AUC: area under curve.
Funding
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Y.-H.Li et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
