Motivation: Multivariate tests derived from the logistic regression model are widely used to assess the joint effect of multiple predictors on a disease outcome in case–control studies. These tests become less optimal if the joint effect cannot be approximated adequately by the additive model. The tree-structure model is an attractive alternative, as it is more apt to capture non-additive effects. However, the tree model is used most commonly for prediction and seldom for hypothesis testing, mainly because of the computational burden associated with the resam-pling-based procedure required for estimating the significance level. Results: We designed a fast algorithm for building the tree-structure model and proposed a robust TREe-based Association Test (TREAT) that incorporates an adaptive model selection procedure to identify the optimal tree model representing the joint effect. We applied TREAT as a multilocus association test on420 000 genes/regions in a study of esophageal squamous cell carcinoma (ESCC) and detected a highly significant novel association between the gene CDKN2B and ESCC (P ¼ 6:0 Â 10 À8). We also demonstrated, through simulation studies, the power advantage of TREAT over other commonly used tests.
INTRODUCTIONThe logistic regression model is the most widely used approach for studying the relationship between a binary outcome and a set of explanatory variables. Under the logistic regression model, the cumulative effect of all the considered explanatory variables is assumed to be additive on the logit scale. In situations where the summation of the main effects from all considered variables is not adequate, the addition of interaction terms, each of which is a product of two chosen main effects, can be considered. The logistic regression model is a convenient tool for studying the joint effect of multiple risk factors if their effects are nearly additive, but it can be less efficient if the joint effect is more complicated and cannot be approximated adequately by the additive model, even with the inclusion of interaction terms. The tree-structure model (), which hierarchically partitions the data into multiple exclusive subsets and models each subset individually, can be an attractive alternative to the linear model approach, especially in the situation where the joint effect of multiple risk factors (predictors) is non-additive. Tree-structure models are used most often for outcome prediction but seldom for hypothesis testing. When building a tree model, a predictor is chosen to split each subset (a node of a tree) according to certain criteria. Also, the tree size is decided through a model selection procedure, such as cross-validation. Thus, there are extensive model and variable selections in the tree-model-building process. As a result, it is hard to obtain the asymptotic distribution for the test statistic derived from the final tree model. Instead, we have to resort to a computationally intensive resampling-based procedure to evaluate the statistical significance (). This greatly limits the application of the tree-structure model in the setting of hypothesis testing. Our goal is to develop a robust hypothesis-testing procedure based on the tree-structure model that is computationally efficient, even with the resampling-based procedure. The procedure is for testing the null hypothesis that none of the considered risk factors is associated with the outcome. One motivated application is to conduct a gene-level association test on a genome-wide association (GWA) study. GWA studies typically measure genotypes on 200 0002 million single-nucleotide polymorphisms (SNPs) on a group of cases and controls. One way to identify loci that are associated with the disease condition is to perform an association test on each SNP separately. Another strategy is to conduct a gene-level analysis by treating each chromosomal region as a testing unit and testing whether all SNPs in the considered region are associated with the disease condition. A considered region can contain a few to a few hundred SNPs measured by a commercial genotype array. When conducting an agnostic screen over the genome, we usually need to test 420 000 genes or annotated regions. When the Bonferroni correction for multiple comparisons is used, the P-value threshold for declaring the global (genome-wide) significance at the familywise type I error rate of 0.05 is about 2:5  10 6 ( 0:05=20 000). This creates a huge computational burden on existing gene-based *To whom correspondence should be addressed. tests that rely on a resampling-based procedure to estimate their significance levels. For example, it requires about 10 8 iterations for a resampling-based procedure to achieve a reliable estimate for a P-value at the level of 1:0  10 6 , which would normally occur when 420 000 tests are performed. Our proposed method is a general testing procedure that can be used as a multivariate test for the association between a set of predictors and a binary outcome. The test statistic is derived from a tree-structure model that approximates the joint effect of a set of predictors on the disease risk and relies on a permutation procedure to evaluate its significance level. We reduce the computational burden considerably by developing memory-and CPU-efficient algorithms for evaluating splitting rules in the treebuilding process. We further speed up the testing procedure by deriving closed-form score test statistics for assessing the joint effect summarized by the tree-structure model. We use this new procedure to perform a genome-wide gene-based analysis on 420 000 genes/regions in a GWA study of esophageal squamous cell carcinoma (ESCC) based on about 2000 cases and 2000 controls. We also demonstrate the advantage of the proposed procedure over existing ones through extensive simulation studies.
METHODS
NotationsHere, we describe the proposed testing procedure as a multilocus test for the association between a disease condition and a set of genetic markers within a chromosomal region or gene (henceforth we use 'gene' for brevity, but everything applies equally to annotated regions). But the procedure is a general joint testing procedure and is applicable in areas beyond genetics. We consider a casecontrol study with n 1 cases and n 0 controls. The total sample size is n  n 0  n 1 .The observation for a subject can be represented as y, g, x, where the outcome y  1 for an affected subject and y  0 for a subject without the disease condition, g  g 1 ,. .. , g p  is a vector of measured genotypes (encoded as the counts of the minor allele) at p SNPs within the considered gene, and x is the vector of all adjusted covariates. We consider a binary tree-structure model, in which a node is always split into two off-spring nodes by a binary splitting rule. We consider splitting rules defined by dichotomized genotypes. For a given SNP, we can create three binary variables, with each of them being the indicator for one type of the genotype g (0, 1 or 2) at a given SNP. We can also define other types of binary variables as candidate splitting rules. For example, to be more interpretable, we can restrict the splitting rules to two types of indicator variables, g 1 and g 2 , where g 1  Ig  1 or 2 and g 2  Ig  2, I is the indicator function. Regardless of how the set of binary variables is defined, we can represent all possible binary variables derived from genotypes of a set of SNPs as f  f 1 ,. .. , f J . For example, there are 2p binary variables in f, if only g 1 and g 2 are considered for each SNP. In the following real data application and in numerical experiments, we use splitting rules defined by g 1 and g 2 .
The statistical test based on the tree-structure modelWe assume that the subjects can be assigned into C unknown genetic risk groups according to the genetic profile characterized by the joint genotypes within a considered gene. The latent assignment can be denoted by a set of binary variables fz k , k  1,. .. , Cg, with z k  1 if the subject's genotype profile belongs to risk group k and z k  0 otherwise. We further assume that the underlying risk model has the form: log Pry  1jx, g Pry  0jx, gwhere and k , 1 k C  1, are regression coefficients. We need only C  1 dummy variables in (1) to represent the genetic risk factor with C categories. In practice, because the exact number of risk groups and their definition are unknown, the standard C  1 degree-of-freedom chisquared test for testing the global null hypothesis H 0 : k  0, 1 k C  1, is not applicable. Instead, we propose to use a tree-structure model to approximate the latent risk group assignment. For example, in the tree-structure model shown in, subjects are assigned into three risk groups according to their genotypes. We begin by describing the testing procedure in the absence of covariates and then extend it to account for covariates. We build the tree model by a sequential binary partitioning of the samples.illustrates a tree model built on the gene CDKN2B detected by our test. All subjects in the root node (node 0) are first divided into two offspring nodes (node 1 and 2) according to the splitting rule defined by a binary variable chosen from f. Next, according to the criteria described later, we expand the tree by splitting one of the two offspring nodes (node 1 or 2). In this example, node 2 is chosen. This procedure is continued until certain pre-specified stopping rules are met (described later). We want to choose a binary variable from f to split a node in such a way that the difference in the disease risk between the two resultant offspring nodes is maximized. Suppose that we want to expand a tree T K with K leaf nodes (terminal nodes) A k , k  1,. .. , K. For any given pair A k , f j , the samples in A k can be summarized as the 2  2 contingency table shown in. We use the following 1-df chi-squared test statistic to measure the 'goodness-of-split' when the node A k is split by f j ():The tree T K is then grown by splitting the leaf node A kopt according to the rule defined by f jopt , which results to a new tree T K1 with K  1 leaf nodes. This binary partitioning procedure is continued until the numberTo make the procedure more robust, a leaf node that is eligible for splitting has to contain at least N 0 subjects. We set K 0  5 and N 0  50 in the simulation studies and real data application. Issues involved in choosing values for K 0 and N 0 will be examined in Section 4. By growing the tree with the partitioning algorithm described earlier, we can obtain a sequence of K 0  1 nested tree models T 2 ,. .. , T K0 , with T k having k leaf nodes. Each tree model in the sequence provides an estimate for the latent genetic risk groups. For a given tree model T k , we define a set of binary variables F 1 , :::, F k indicating a subject's assignment to one of the k leaf nodes of T k , with F j  1, j  1,. .. , k, if the subject falls in the j-th leaf, and F j  0 otherwise. We model the association between gene and disease as:The departure from the null hypothesis H 0 : j  0, j  1,. .. , k  1, can be measured by the score test statistic.provides notation for the frequency distribution for samples in each leaf node in T k. We show in Supplementary Materials that the score test statistic based on (4) can be represented as:, .
.. , K 0 5Because the building of the tree model is 'supervised' by the outcome, the definition of F 1 ,. .. , F k is partially driven by the outcome. As a result, s k 0 no longer has an asymptotic chi-squared distribution. Instead, the empirical significance level of s k 0 , 2 k K 0 , denoted by p k 0 , can be evaluated through a permutation procedure that generates null datasets by randomly shuffling the outcome among subjects, while keeping their genotypes unchanged. Let the number of permutation steps be M. For the m-th permuted dataset, the same tree growing algorithm is applied, and the score test statistics s 2 m ,. .. , s K0 m  defined in (5) are obtained for the sequence of the K 0  1 nested tree models. We can estimate the empirical significance level of s k 0 by:, .
.. , K 0 6Because we have K 0  1 candidate risk models for assessing the disease gene association, each having empirical P-value p k 0 , k  2,. .. , K 0 , a natural choice for the final test statistic is T 0  minfp k 0 ; k  2,. .. , K 0 g. We identify the tree model with the smallest empirical P-value p k 0 as the optimal tree model representing the gene's effect. In principle, the P-value of T 0 could be estimated by a computationally intensive twolayer permutation procedure. The inner layer is required for getting the empirical P-value [i.e. p k 0 in (6)] for the tree models fitted from the observed and permuted datasets, and the outer layer is required for getting the empirical null distribution of T 0. Instead, we adopt the minP algorithm proposed by, where only a single-layer permutation procedure is needed. We describe Ge's algorithm in more detail in Supplementary Materials.
Accelerating the growth of the tree by Boolean operationsAs mentioned in the Introduction, testing procedures based on the tree model can be computationally intensive, as the evaluation of the P-value requires a permutation procedure. Even though the computational burden is reduced considerably by the use of closed-form formula for the evaluation of splitting rules (2) and the score test statistics (5), as well as Ge's algorithm, it is still not practical to use the proposed procedure as a gene-based test to screen 420 000 genes, some of which have P-values51:0  10 6. The main bottleneck is to build the contingency table shown in, which is required for the evaluation of every candidate-splitting rule in the tree-model-building process on observed and permuted datasets. For any given pair A k , f j , OnJ if-else operations on y and f are required to obtain. Thus, about OnJK 0  ifelse operations are performed during the growth of a tree with K 0 leaf nodes. The computational overhead for calculating the score statistics in (5) is negligible, ascan be obtained fromdirectly. When the permutation procedure is used with M iterations, the total number of the if-else operations scales up to the order of OnJK 0 M, whereas M can be as large as 10 8 to estimate the P-value for genome-wide significance reliably. To make our proposed test computationally feasible for large-scale genome-wide gene-based analysis, we adopt the BOolean Operation (BOO) method, which was originally proposed byfor detecting SNPSNP interaction at the genome-wide scale, to accelerate the calculation of contingency table, e.g.. The BOO method is a memory-and CPU-efficient strategy for constructing tens of millions of contingency tables swiftly. To be more specific, we illustrate the use of the BOO algorithm in our setting. For the binary outcome y, instead of storing it as a vector with n standard integers (a standard integer would be represented by 64 binary digits in a 64-bit computing system), we encode 64 binary outcomes (say y 1 ,. .. , y 64 ) into one 64-bit integer w according to the following rule:Thus, the binary outcome y can be stored as a length-dn=64e vector y b consisting of 64-bit integers. We also need to maintain a binary vector k , with its i-th entry indicating whether the i-th subject falls in the k-th leaf node. Similar representation can be applied to k and each of the dichotomized genotypes f j , 1 j J. Hence, k and f j are converted to length-dn=64e vectors b k and f b j as well.. The 2  k contingency table for all subjects, cross-tabulated by the outcome y and the set of binary variables F 1 ,. .. , F k defined by the leaf nodes of the tree T kAND operation in an element-wise manner. The numbers incan be obtained by counting and summing over the '1' bits in each of the entries of v b kj. Supplementaryillustrates an example showing how the BOO method works when the total sample size is 64. The treebased testing procedure incorporating the BOO method is roughly 60fold faster than the one using the standard if-else operations. More discussion of the computing time will be given in Supplementary Materials.
Adjusting covariatesIn this section, we extend the proposed testing procedure by allowing the adjustment of covariates. To make the BOO method applicable in this situation, we need to extend the statistics in (2) and (5) accordingly, so that they are closed-form functions of subject frequencies under various restrictions. We assume that the adjusted covariates can be discretized and represented by a multilevel categorical variable. For example, if we wanted to adjust two covariates with two and three levels, respectively, we would adjust these two covariates jointly as a categorical variable with six levels. Equivalently, both main and interactive effects from the two adjusted covariates are adjusted. Under such a strategy, we can represent all adjusted covariates as a factor encoded by a set of dummy variables x  x 1 ,. .. , x L . For any candidate leaf node A k to be split, the samples in A k can be summarized as L 2  2 contingency tables (shows the l-th table, for those samples with x l  1). We extend (2) to allowing the adjustment of x by use of the CochranMantelHaenszel test statistic (). Define the test statistic:The best split is again chosen as k opt , j opt   argmax k, j t kj : We also modify the score statistics s k 0 in (5) for testing the association between the gene and the disease condition by assuming the following risk model: logit Py  1jx 1 ,. .. , x L , F 1 ,. .. ,For any subtree T k with k leaves, k  2,. .. , K 0 , the samples can be summarized as L 2  k contingency tables (shows the l-th table for those samples with x l  1). To test the null hypothesis H 0 : j  0, j  1,. .. , k  1, we can derive the score test statistic under the risk model (8) as:The significance of this extended tree-based multilocus test can be evaluated by a permutation procedure in which we randomly shuffle the outcome y within each stratum defined by the dummy covariate x, while keeping the genotypes and x the same within each subject. The steps for estimating the P-value remain the same. With minor modification, the BOO method described earlier can be applied. For example, instead of applying the CPU-efficient logical AND operations on y b , b k and f b j , we apply them on y b , b k , f b j and x b l , with x b l being the vector of 64-bit integers converted from the vector of x l .
RESULTS
Application to a GWA study of ESCCWe demonstrated the application of our TREe-based Association Test (TREAT) as a gene-based test by applying it on a GWA study of ESCC. We focused on 1942 cases and 2111 controls taken from the Shanxi Upper Gastrointestinal Cancer Genetics Project and the Linxian Nutrition Intervention Trials (). Both studies were conducted in the Taihang mountain area in China. The analysis was conducted on 22 193 genes or annotated regions extracted by the software GLU (http://code.google.com/p/glu-genetics/). We set the threshold for genome-wide significance at 2:3  10 6 (% 0:05=22 193) according to the Bonferroni correction adjusting for all 22 193 tests. With the 1000 Genomes data (version 3) as the reference (1000), we used the software IMPUTE2 () to impute the missing genotypes. Besides TREAT, we also applied several other multilocus tests, such as the Min-P test (), the Adaptive Joint test (AdaJoint) (), the Adaptive Rank Truncated Product test (ARTP) (), the SNP set association test (SKAT) () and its variation (SKAT-O) (). All tests considered here were adjusted for study, sex and an indicator for whether a subject was younger than 40 years. Those covariates were chosen because of their significant marginal. The 2  k contingency table for subjects with x l  1, crosstabulated by the outcome y and the binary variables F 1 ,. .. , F k defined by the leaf nodes of the tree T keffects (P50.05) on the outcome. After imputation, SNPs with missing rate45% or minor allele frequencies (MAFs)55% were excluded from the analysis. For two SNPs with pairwise linkage disequilibrium (LD) coefficient 40.95, the one with a smaller MAF was abandoned. In the end, we had 159 046 unique SNPs in 22 193 genes and/or annotated regions. The inflation factor of the single-marker test on those SNPs is 1.037, which suggests that there is no major effect due to population stratification after adjusting for the three covariates. Adjusting for the top 10 eigenvectors yields a similar inflation factor of 1.038. Therefore, we did not adjust eigenvectors in subsequent analysis. For TREAT, we considered a tree with up to five leaf nodes. A node was considered for splitting if it contained at least 50 samples. For AdaJoint and ARTP, the optimal models were built by checking the combinations of the top 1, 2,. .. , 5 SNPs. For SKAT-O, the P-values were calculated using 5 or 10 points of equal-sized grids searching for the weight parameter from 0 to 1 (denoted as SKAT-O-5 and SKAT-O-10, respectively). The Pvalues of the Min-P, AdaJoint, ARTP and TREAT were calculated by 10 5 replicates of permutation. For genes with initially estimated P-values51:0  10 4 , we further refined their Pvalues by 10 9 replicates of permutation.lists the genes with at least one P-value produced by the considered tests less than the genome-wide threshold 2:3  10 6. TREAT identified a novel gene CDKN2B in the region 9p21.3 with P-value 6:0  10 8 , much lower than the threshold for the family-wise significance level. For this gene, the Min-P, ARTP, AdaJoint, SKAT, SKAT-O-5 and SKATO-10 tests reported far less impressive P-values, which were 4:1  10 5 , 3:0  10 5 , 2:2  10 5 , 2:4  10 4 , 2:8  10 4 and 2:8  10 4 , respectively.TREAT also identified another two genes CDKN2A (P  1:9  10 7 ) and MTAP (P  1:3  10 6 ), one having four overlapping SNPs with CDKN2B, the other containing CDKN2B. The other six tests failed to detect them. Among the three known ESCC-associated regions at 10q23.33, 22q12.1 () and 2q33.1 (), TREAT identified gene HSCB (P  2:1  10 6 ) at 22q12.1. In general, the ARTP and AdaJoint tests, each of which found five associated genes that exceeded the genome-wide threshold, appear to have the most success in these three established regions.
Simulation StudiesWe conducted extensive simulation studies to compare the performance between the proposed TREAT and several commonly used approaches, including Min-P, ARTP, AdaJoint and SKAT. Results of SKAT-O-5 and SKAT-O-10 are similar to that of SKAT, and thus are not shown here. First, we used observed genotypes at the six SNPs within the gene CDKN2B in the GWA study of ESCC described earlier as a template to simulate data. Each simulated dataset consisted of 3000 cases and 3000 controls. Genotypes of controls were directly sampled from the joint genotype distribution observed in the ESCC study. We generated the genotypes of cases by sampling from the ESCC data with the weight for each subject specified by the assumed risk modelfor more details on how the genotypes were assigned]. We considered the risk model used in, which can be represented as:) is the indicator variable on whether a sample falls in the third (fourth) leaf node in the tree shown in. We set 3  4  0 in (10) under the null hypothesis, and generated 10 000 datasets for assessing type I errors of all considered tests under the significance level at 0.05 and 0.001.shows that all considered tests can properly maintain their empirical type I errors. More results about the empirical type I error of TREAT applied to genes with various sizes are given in the Supplementary Table S1. We set 3  0:5 and 4  0:2 in (10) and generated 1000 datasets for the power comparison. Power for various tests atNote: These are genes on which at least one of the considered tests produces a P52:3  10 6 (bold values). The P-values of TREAT, Min-P, ARTP and AdaJoint tests are estimated with 10 9 replicates of permutation. the levels of 0.05 and 0.001 is summarized in. It is obvious that TREAT has a clear power advantage over other tests under this scenario. Next, we conducted simulations by generating genotypes under various LD structures. Instead of relying on observed joint genotype distribution in an existing study, we simulated genotypes at multiple SNPs in a study population according to the algorithm in the study by. We considered a gene with 20 SNPs, and a study with 2000 cases and 2000 controls. We generated vectors of continuous variables U  U 1 ,. .. , U 20  0 under a multivariate normal distribution with mean zero and the covariance matrix AE   ij  2020 , where ij  jijj. We then generated genotypes at the i-th SNP by discretizing U i into three levels corresponding to genotypes 0, 1 and 2, so that the resultant SNP had a minor allele frequency of 0.4. The correlation among genotypes of the 20 SNPs was controlled by. In the simulation, we considered  0, 0.5 and 0.9 to represent a low, median and high LD relationship among SNPs, respectively. We used this procedure to generate genotypes for controls, and we used the weighted sampling procedure to generate genotypes for cases according to the assumed risk model. We designated the 10th and 11th SNPs as the risk SNPs, and we defined the two following indicator variables to represent the way that the two risk SNPs affect the outcome:This model can be represented as a tree model with three leaf nodes.compares the power of all considered tests under various scenarios, which were specified by , 1 and 2. The power was evaluated at the level 0.05 based on 1000 replicated datasets simulated under each scenario. It is evident fromthat TREAT is the most powerful under model (11). The Min-P, ARTP and AdaJoint tests performed similarly to each other and showed some advantage over SKAT. The risk models considered inare essentially tree models. We then conducted simulation under the following two-locus epistasis risk model: 0:15. Power results based on 1000 replicates are summarized in. Again, TREAT outperformed all other tests under the risk model (12). Finally, we compared the performance of all considered tests under traditional linear additive models (on the logit scale) with one, two or three disease risk SNPs. The results are summarized in Supplementary Table S2. As TREAT is not designed to detect additive effects, it is not a surprise to see that TREAT has a less favorable performance compared with other tests, such as ARTP, AdaJoint and SKAT, which aim at the linear additive risk model. In practice, we recommend the use of TREAT in conjunction with one of the tests that target detection of additive joint effects.
Computing timeHere, we provide a summary of computing time when applying TREAT on a gene with 5, 10, 20, 50 and 100 SNPs in a study consisting of 2000 cases and 2000 controls. We assume that the adjusted covariates are treated as a 5-level categorical variable.We set K 0  5 and N 0  50 and used 10 5 replicates of permutation when applying TREAT. In Supplementary, we report the averaged running time over 100 experiments for each scenario on a Linux machine with a 2.8-GHz Xeon CPU. It appears that it is practical to run TREAT as a routine test, as the computing time is reasonable.
DISCUSSIONThe linear regression model, such as the logistic regression model, has been the dominant tool for assessing the joint effect of multiple predictors. The following three factors contribute to its popularity. First, the linear regression is convenient to use, as the asymptotic distributions have been established for derived test statistics. Second, it is generally accepted that the linear model is usually adequate for depicting the joint effect. Third, there are not many alternative options available. There is clearly a demand for more robust testing procedures, especially in situations when the cumulative effect from multiple predictors is non-additive. Here, we have proposed a general testing procedure based on the tree-structure model. Leveraging a computationally efficient tree-building algorithm, the procedure has limited requirements for CPU time and memory. For a gene with 20 SNPs in a study of 2000 cases and 2000 controls, it takes 45 s to run the procedure with 10 5 permutation steps on a Linux machine with a 2.8-GHz Xeon CPU. We have demonstrated the power advantage for the proposed procedure in the setting of gene-based association analysis through real and simulated datasets. The proposed testing procedure is general and can be used for testing the association between a set of risk factors and a binary outcome. It can adjust the covariates' effects by treating them as a categorical variable with multiple levels. It has two major tuning parameters that have to be set by the user: the maximum tree sizes K 0 (the number of leaf nodes) and the minimum sample size N 0 required for each leaf node to be split. In practice, the maximum tree size depends on the sample size of the study, the number of risk factors and the prior knowledge on the complexity of the underlying risk model. For the purpose of hypothesis testing, we favor a relatively small tree size, as we want to limit the number of considered candidate risk models, which are subtrees of the full tree with the maximum number of leaf nodes, to control multiple-comparison effects. On the other hand, the maximum tree size has to be large enough to allow the searching space to be sufficiently broad to cover a model that adequately approximates the true risk model. In the setting of gene-based analysis, we recommend choosing K 0 in the range of 5 to 10, under the assumption that the number of true disease-associated loci within a gene tends to be relatively small. The choice of the minimum sample size N 0 required in each leaf node is driven mainly by the total sample size. Because each leaf node represents a candidate risk group, we suggest N 0 ! 50 for robust testing results. The computational burden associated with the tree-structure model is one major barrier to its use for hypothesis testing. We overcame this obstacle by combining several strategies to speed up the proposed procedure, including the derivation of closedform formulas for evaluating splitting rules and score test statistics for assessing the joint effect summarized by the tree-structure model, the use of Ge's one-layer permutation algorithm () for the evaluation of the P-value and the adaptation of the BOO method () for swift scanning over candidate splitting rules. We demonstrated that it is feasible to apply the proposed procedure as a multilocus association test in large-scale gene-based association studies with420 000 candidate genes or annotated regions. The tree-building algorithm can be accelerated further by noticing that the evaluation of splitting rules at each given tree node is parallelizable. We are currently working on a GPU (graphic processing unit) implementation to take advantage of the parallelizability (). We developed a general testing procedure based on the treestructure model and presented a fast algorithm for building the tree-structure model by adopting the computationally efficient Boolean operator for swift evaluation of the splitting rule. This procedure has broad applications, and it is a valuable tool that can be run routinely in conjunction with other tests that target an additive joint effect. We have created an R package implementing the procedure (http://www.hanzhang.name/softwares/treat).
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
H.Zhang et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Tree-based association test for complex joint effects at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
