Motivation: The declining cost of generating DNA sequence is promoting an increase in whole genome sequencing, especially as applied to the human genome. Whole genome analysis requires the alignment and comparison of raw sequence data, and results in a computational bottleneck because of limited ability to analyze multiple genomes simultaneously. Results: We now adapted a Cray XE6 supercomputer to achieve the parallelization required for concurrent multiple genome analysis. This approach not only markedly speeds computational time but also results in increased usable sequence per genome. Relying on publically available software, the Cray XE6 has the capacity to align and call variants on 240 whole genomes in $50 h. Multisample variant calling is also accelerated. Availability and implementation: The MegaSeq workflow is designed to harness the size and memory of the Cray XE6, housed at Argonne National Laboratory, for whole genome analysis in a platform designed to better match current and emerging sequencing volume.
INTRODUCTIONWith the advent of massively parallel DNA sequencing, the rate at which human genome variation can be determined is limited less by sequence generation but instead by the computational tools required to analyze these data. With current sequencing technology using short sequence reads of $100 bp, whole genome analysis (WGA) requires the cleaning, aligning and interpreting of a billion sequence reads per single genome. With focus on scalability, we sought to improve the timeline required to process whole genome sequencing (WGS) by optimizing extraction, alignment, processing and variant calling. We reasoned that supercomputing capacity was better suited to parallelize WGA and allow for the rapid simultaneous analysis of multiple genomes. Beagle is a Cray XE6 supercomputer housed at Argonne National Laboratory and administered by the Computation Institute at the University of Chicago. Beagle has $726 compute nodes each with 32 GB of memory. Each node has 24 cores, 2.1 GHz cores on two AMD ''Magny-Cours'' processors. The XE6 can work in both Extreme Scalability Mode for scalable applications and Cluster Compatibility Mode for use with programs that are designed for smaller machines or clusters, such as the freely available genomics tools that are now routinely implemented for WGA (). While parallelization is possible on smaller systems, both memory and computational core number limit the capacity for simultaneous computation. Beagle uses a parallel computation environment and a parallel file system (Lustre) based on shared storage. Having both a parallel computation environment and external disk storage based on a parallel file system ensures that each node (and core) is able to access all data at any time without waiting for transfer of data across nodes. In this system, nodes have no local storage, and therefore no disk-to-disk transfer is required. On clusters without a shared file system, data transfer across nodes during analysis can be a time-intensive process. Here, we describe a workflow referred to as MegaSeq that uses the MapReduce () approach to take advantage of supercomputing size and memory.
MATERIALS AND METHODS/RESULTS
Workflow-alignmentA summary of the MegaSeq workflow is shown in. We adapted Beagle for WGA using a test dataset of 61 genomes that had been determined by Illumina Inc. Illumina provided WGS from 100 bp paired end reads as bam files for data transfer. FASTQ files were extracted from bam files using the Picard tool, SamToFastq (http://picard.sourceforge. net), and extraction was performed by readgroup (). The readgroup tag provides information on sample identity, library of origin and sequencing machine lane (see SAM Format Specification, samtools.sourceforge.net/SAM1.pdf). The extraction step is unnecessary if FASTQ sequence data are directly available. In the present cohort, each genome was represented by $34 readgroups, creating a natural division of the reads. Alignment was performed with the BurrowsWheeler Aligner (BWA) on 2 n nodes, with n equal to the number of readgroups (). Each readgroup alignment was concurrent on 24 cores (). Alignment displayed a linear speedup and therefore *To whom correspondence should be addressed. scaled with the number of cores used. Scaling is limited to the number of cores per node available because it is based on shared-memory threads. After reads were aligned, alignment files were converted from sai to sam files using the bwa samse (for single-end reads) or sampe (for paired-end reads). To improve performance, we used the bwa 0.5.9-tpx.patch (ftp. conveysupport.com/outgoing/bwa). The tpx patch creates a threaded parallel bwa samse/pe, allowing for the use of multiple cores on a node. The speedup of this step was considerably less efficient than alignment, resulting in imperfect scaling, but is still considerably faster than standard bwa samse/pe. SAM files were then compressed to bam files and sorted using samtools (). Readgroups were merged and each genome was split by chromosome to better use Beagle's size and memory.
Workflow-clean-upThe alignments were then ''cleaned'' to improve reliability of variant calling. Potential PCR artifacts were marked with the Picard MarkDuplicates tool (http://picard.sourceforge.net). Notably, alignment of genomic information to the referent genome is often imperfect, especially in areas around small base pair insertions and deletions (indels). Therefore, indels within an individual genome may misalign. Because alignments to the referent genome are performed using each short sequence read individually, multiple alignment information is not available to help identify mismatches. Two tools available from the Broad Institute's Genome Analysis Tool Kit (GATK), RealignerTargetCreator and IndelRealigner, were applied to help facilitate the identification of Indels. When used together, these tools use the full alignment context to determine whether an Indel exists (). Finally, quality scores for sequence reads were recalibrated using BaseRecalibrator and PrintReads from GATK to more closely match the actual probability of mismatching the referent genome and to correct for any variation in quality between machine cycle and sequence context (). At this stage, the data are still split by chromosome. The efficiency of BaseRecalibrator is proportional to the number of base pairs provided. Because smaller datasets may have poor recalibration, splitting should be avoided with smaller datasets. On smaller datasets, the CRAY XE6 has the capability to perform recalibration across the genome in a reasonable time frame. Regardless of dataset size, recalibration results should always be reviewed by the end-user.details the programs and flags used for each operation. Each step was performed on 25 cores concurrently, with approximately six nodes dedicated to each genome (). On Beagle, running multiple genomes simultaneously is more efficient than running a single genome because of the structure of both Beagle and the genome. For the cleaning steps, each genome was run on 25 cores (24 chromosomes plus the mitochondrial genome). Four chromosomes were analyzed on each node, and therefore each genome needed six nodes, plus one core. During testing of the pipeline, we noted that node failure occurred as a result of java errors, often associated with memory allocation. To improve memory usage and avoid node failure, we hard coded the chromosomes into groups that are always sent out together. This scheme allows us to send the largest and most memory intensive chromosomes with smaller, less taxing ones resulting in fewer memory issues. For java run programs we used 28 GB memory/number of jobs per node. We also found that for java programs, using two threads for garbage collection better managed memory issues allowing us to pack more jobs per node. For each clean-up step, threading was used, where available ().
Workflow  variant callingVariants were called using the HaplotypeCaller from GATK. HaplotypeCaller calls both single nucleotide polymorphisms and indels using de novo assembly of haplotypes in the active region. Haplotypes are evaluated using an affine gap penalty pair hidden Markov model ().provides flags used for each step. MegaSeq identifies both single nucleotide variants (SNVs) and Indels simultaneously on $6 nodes with 25 concurrency per genome. After variants were called and exported in variant call format (VCF), we used the GATK tool VariantFiltration to filter variants (). Variants were removed from the analysis using these criteria: biallelic balance 40.75; quality score 530; depth of coverage 4360; strand bias more than 0.01 and mapping quality zero reads !10. Variants were then annotated using the default parameters of snpEff. snpEff is a fast variant annotation and effect prediction tool that is integrated with GATK ().
Testing the workflowThe above workflow was tested using data from 61 human genomes. The starting FASTQ file size of each genome was $300 GB, requiring $18 TB of space to process all individuals simultaneously. Reads were aligned to NCBI reference genome 37.1 (hg19). We compared alignment output of MegaSeq with that produced by Illumina using the proprietary alignment/variant calling software Eland/Casava because this software is designed to efficiently perform WGA (). MegaSeq alignment using BWA resulted in greater coverage with a mean coverage of 40.0 compared with 37.2 for ELAND/Casava's alignment across all 61 genomes (paired t-test, P50.0004,). The mean percent of the non-N reference genome covered was also greater with MegaSeq compared with Eland/Casava (98.7 versus 98.0) using MegaSeq versus Illumina (paired t-test, P50.0001,). ELAND/Casava also called more indels (536 853 versus 618 779, MegaSeq and ELAND/Casava, respectively, paired t-test, P50.0001) (). There was 88% concordance between MegaSeq and ELAND/Casava SNV calls and only 64.7% concordance for indels ().To estimate validity of the calls, we examined the normalized density of quality scores. Concordant SNVs, called by both MegaSeq and ELAND/ Casava, had higher quality scores compared with non-concordant SNVs (, MegaSeq, light purple; ELAND/CASAVA, dark purple). Nonconcordant SNVs had lower quality scores, especially in the ELAND/ Casava call set (, MegaSeq, red; ELAND/Casava, blue). This same pattern was evident for indels (). Non-concordant SNVs identified by MegaSeq have quality scores more closely resembling the concordant calls. These data indicate that the ELAND/Casava call set contained more low quality variants than the MegaSeq call set. We next compared depth of sequence reads called by MegaSeq or ELAND/ Casava. Depth is a by-product of alignment, with higher depth indicating a more reliable variant call. Concordant SNVs called by both MegaSeq and ELAND/Casava have similar normalized depths, with the highest density of calls occurring between 3540. The non-concordant SNVs have markedly different depth distributions (). SNVs identified solely by ELAND/Casava had the highest density of calls at $20 depth. In contrast, those SNVs identified solely by MegaSeq had a depth density that more closely matched the concordant SNV distribution, with the majority of calls occurring between 3035 depth. These dataindicate that MegaSeq calls a greater number of high confidence SNVs, based on both quality score and depth.
Speed of analysisComputational time is a major bottleneck in WGA. We calculated the central processing unit (CPU) time that would be required on a single 2.1 GHz processor as 1701 h (0.20 years) for a single genome. This time can vary based on clock speed, memory speed and disk speed. These calculations are bound by disk and memory much more than by CPU clock speed. The SamToFastq step requires $48 CPU h, but is only necessary when genomes are delivered as the compressed pre-aligned bam format and, as such, will not be a consideration for many users. Alignment scales perfectly and therefore cannot be easily accelerated. We suggest that these single genome times may reflect the maximum speed for the Beagle supercomputer. To highlight the power of a parallel system, we calculated hypothetical run times on a single core, a 3 (24-core) node cluster and compared them with the CRAY XE6 run times. Using CRAY XE6 execution time as a reference, we predicted total CPU time required for WGA of 240 genomes on a single core to be $47 years. A total of $11.8 years of CPU time is required to complete the workflow for 61 genomes. A biological computing cluster with 3 nodes can accelerate this time to $7.2 months. Using the MegaSeq workflow on Beagle, 61 genomes were analyzed in 50.3 real time hours (). Based on the size and number of nodes available, Beagle has the capacity to perform WGA on 240 genomes in the same time frame (50.3 h) by using additional nodes. Additional genomes would need to be run consecutively as the number of nodes in use is exhausted. Multisample variant calling can also be performed using the MegaSeq workflow. Multisample calling reduces the false discovery rate, but is computationally intensive. We performed multisample calling on 61 genomes using HaplotypeCaller from GATK with the flags noted in. To take advantage of the size of Beagle, we split the genomes by chromosome, then further split chromosomes into overlapping subunits that varied based on total chromosome size resulting in 2400 total subunits. For 61 genomes, $600 nodes were used with four jobs per node, requiring $40 000 CPU hours. Calls were completed in $16 h, real time. A biological computing cluster with three nodes would require $4.4 months real time to perform multisample calling on 61 genomes using HaplotypeCaller. We estimate that $154 224 CPU h ($17.8 years) would be required to complete 240 genomes. We estimate that a 3 node cluster would take $1.3 years to complete multisample calling on 240 genomes. In real time using 600 nodes with four jobs per node, we estimate Beagle can complete multisample calling using HaplotypeCaller on 240 genomes in $2.5 days, making Beagle an excellent resource for multisample calling. After calling the resulting 2400 vcf files were merged and overlapping calls were removed.
Space managementSpace constraints are another major hurdle in large volume WGA. We estimate that approximately 1 TB of space per genome was needed to complete the MegaSeq analysis (). Although it is possible to discardoutput at each successive step, there is still a large volume of data that were active at any single step. For instance, at the SamToFastq step, 18 TB was required for the FASTQ files. During the cleanup steps, each genome required $85 GB of space; $5 TB of space was needed to process each step for 61 genomes. Because each step requires computational time, discarding data from earlier steps can be costly if there is an analysis failure. These space requirements are generally not met by small computing clusters or by larger clusters with many users. The final merged VCF file for each individual genome required $1 GB of space.Recently, great strides have been made to decipher the other 98% of genome sequence. The ENCODE project (Encyclopedia of DNA Elements) has assigned biochemical functions to 80% of the genome (). These annotations will prove valuable tools in evaluating non-coding variation. Only whole genome sequencing can be used to interrogate non-coding variation, although the complexity of WGA has limited this possibility. Whole genome sequencing may also be better suited than exome sequencing to assess structural variation in genomes. Structural variants are emerging as important factors in human disease, making them an important factor in weighing the benefits of whole genome sequencing in relation to the challenges of computation (). Thus, whole genome sequencing may be the method of choice for many researchers if not for the tremendous computational bottleneck. The deluge of genetic data is appropriate for high-performance computing and large-scale storage options (). Sequence analysis includes read alignment to a reference genome, alignment clean-up and variant calling. A number of resources are freely available for analysis of genome sequencing, including BWA, GATK and snpEff. These tools can be used to align and call variants from a single genome by most laboratories, even those with limited computational experience and resources. However, high-throughput analysis of many genomes is significantly accelerated by parallelization and better meets the needs of the genetics community. A common approach for analysis has relied on computing clusters, and more recently, cloud-based computing. By transitioning WGS to a supercomputing environment, we achieved high reliability with accelerated speed. One of the more cumbersome problems with clusters and cloud-based computing involves long wait times for data transfer between nodes (). The Cray XE6 supercomputing environment described here eliminates these wait times by using a parallel file system (Lustre) without creating a resource conflict bottleneck. A parallel file system, like Lustre, removes the need for tracking of data location, leaving only the issues of cache, RAM and disk hierarchy (). The demonstration that whole genome sequences can be aligned, cleaned and interpreted in parallel was achieved by using BWA/GATK, robust, publicly available software packages, in the Cray XE6 environment. Notably, this method uses the same software packages commonly used in computing clusters, but takes advantage of the Cray platform to parallelize the analysis. The ability to apply multisample variant calling significantly improves reliability and begins to extend analysis to beyond what is possible in a cluster environment. The application of the Cray XE6 has the capacity to analyze, in parallel, as many as 240 genomes in $50 h. This is a platform-dependent workflow that serves as proof of principle that genome analysis is greatly accelerated when performed on a supercomputer. More importantly, this work demonstrates that the publically available software currently in use for genome analysis is amenable to the supercomputing environment and can be installed as is on a CRAY XE6 and likely other systems, although we have not tested those systems. Currently, MegaSeq is available on the Beagle supercomputer at the University of Chicago.
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Whole genome analysis at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
M.J.Puckelwartz et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CONCLUSION The development of next-generation sequencing technology has transformed the genetic analysis paradigm, from examination of the coding region of a handful of genes, to the current methods of interrogation of the entire coding region of the genome and, finally, to analysis of the entire 3 billion base pair genome. While cost and time are no longer major barriers to whole genome sequencing, data analysis and storage are major bottlenecks in using whole genome data (Metzker, 2010). Currently, whole genome sequencing using the Illumina HiSeq 2000 platform at moderate coverage (3050) yields4100 GB of data. This can be an overwhelming amount of data to process and store, and therefore many have turned to exome sequencing. Exome sequencing focuses on evaluating variation in the coding portion of the genome ($12%), and therefore provides smaller and less complex data to manage than whole genome sequencing. Exome sequencing is useful, as $85% of recognized disease-causing mutations are located in protein coding regions of the genome (Majewski et al., 2011). However, this finding reflects a bias in our ability to evaluate non-coding variation.
M.J.Puckelwartz et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from The MegaSeq workflow backbone is based on bash shell instruction, and the submission subscripts are based on Portable Batch System (PBS) commands and are adaptable to other batch systems including Sun grid engine or SLURM, because the parallel logical structure of the workflow is compatible. Disk, memory and CPU usage will likely require optimization because of differences in machine design, which may affect bottlenecks and stability. The workflow should port directly with only minimal modifications to any Cray XE6, CRAY XC30 and related systems. The Beagle supercomputer is an NIH supported resource and provides an opportunity for large-scale genome projects. This computing application provides a format where human WGS can be rapidly analyzed relieving major constraint for better defining the range and utility of human genome variation.
