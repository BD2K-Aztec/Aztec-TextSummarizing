TIBA is a tool to reconstruct phylogenetic trees from rearrangement data that consist of ordered lists of synteny blocks (or genes), where each synteny block is shared with all of its homologues in the input genomes. The evolution of these synteny blocks, through rearrangement operations, is modelled by the uniform Double-Cut-and-Join model. Using a true distance estimate under this model and simple distance-based methods, TIBA reconstructs a phylogeny of the input genomes. Unlike any previous tool for inferring phyloge-nies from rearrangement data, TIBA uses novel methods of robust-ness estimation to provide support values for the edges in the inferred tree.
INTRODUCTION'Rare genomic changes', such as rearrangements (), cause large-scale structural changes in the genome, clarify distant or problematic relationships among organisms and have been used in many phylogenetic studies. The first algorithm for phylogeny inference from rearrangement data was BPAnalysis (). The algorithm seeks to reconstruct the tree and ancestral genomes with the minimum breakpoint distance along each edge of the tree. This approach was extended in GRAPPA () by using inversion distances. These methods were restricted to unichromosomal genomes; the tool MGR () was the first to handle multichromosomal genomes. All these parsimony-based approaches must produce good approximations to the NP-hard problem of computing the rearrangement median of three genomes (summarized in) which limits their scalability. Despite using clever heuristics, MGR does not scale well, particularly for high resolution data. Yet to date, MGR [and its more recent derivative MGRA (had remained the only tool available for the analysis of multichromosomal genomic rearrangements. Distance-based methods like neighbour joining (NJ) (), in contrast with parsimony-based methods, run in time polynomial in the number and size of genomesand fast and accurate heuristics exist for those where the scoring function cannot be computed in polynomial time, such as FastME (). Pairwise distances, given as input to a distance-based method, are usually the edit distances, that is, the minimum-cost distances under the assumed model of evolution. However, an edit distance typically underestimates the true distance causing poor accuracy of trees inferred from distance-based methods. When given true evolutionary distances, NJ provably returns the true tree. The true evolutionary distancethe actual number of evolutionary events between the two genomesis impossible to measure, but it can be estimated using statistical techniques. Such distance corrections have long been used for sequence data and, more recently, for rearrangement data. For multichromosomal genomes, we have designed such an estimator () and have demonstrated the accuracy and scalability of a reconstruction method that uses NJ with this distance estimator (). A major shortcoming of phylogeny reconstruction from rearrangement data has been the lack of any way to assess the robustness of the inferred edges. In phylogenetic analysis from sequence data, such an assessment is de rigueur and is carried out by an adaptation of the standard non-parametric teststhe bootstrap and the jackknife, first proposed by Felsenstein (). Recently, we have designed several new methods for statistically assessing the robustness of trees reconstructed from rearrangement data (). Through careful and extensive experiments, we have shown that our bootstrapping approach for rearrangement data is on par with the classic phylogenetic bootstrap used in sequence-based reconstruction. Combining these methods with our distance based reconstruction method, we provide the first tool for phylogeny inference from rearrangement data that is accurate, scalable and provides bootstrap support values for the edges of the tree.
METHODSRearrangement data for a genome consists of lists of syntenic blocks (genes are an example) in the order in which they are placed along one or more chromosomes. Each syntenic block is identified by a marker, which is shared with all (or most) of its homologues in the genomes under study, and a sign, which represents the strandedness of the syntenic block. The markers typically used for syntenic blocks are integers. Any two adjacent syntenic blocks can be represented by a set of two integerswe call this an adjacency. A telomere in a linear chromosome is represented by a *To whom correspondence should be addressed. y The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors. singleton set containing just the end marker. Thus, a genome is represented by a set of adjacencies and telomeres. Any rearrangement operation changes up to three adjacencies or telomeres in the genome. For multichromosomal genomes, all the rearrangement operations can be modelled by a single operation called 'Double-Cut-and-Join' (DCJ) (). For reconstruction, we use either NJ or FastME. The pairwise distances used are estimates of the true evolutionary distances under a model of evolution that assumes uniform distribution of DCJ operations. The evolutionary model is used to infer an estimate of the true distance by deriving the effect of a given number of DCJ operations on the number of shared adjacencies and telomeres and numerically inverting the derivation to produce a maximum-likelihood estimate of the true distance under the model. See () for details. Our extensive experiments on simulated and real datasets, described in (), show that the error rates of trees reconstructed by NJ using this distance estimator is 510% in all but the oversaturated cases. With FastME, the error rates are even lower. Further, error rates are significantly reduced by an increase in the size of the genomebecause the larger number of syntenic blocks reduces the relative error in the estimated distances. Trees can be reconstructed on up to 500 genomes, each containing up to 10 000 markers within a few seconds on a PC. As described in (), we design and test several bootstrapping methods that can be used with distance-based reconstruction from rearrangement data. The fact that our distance estimator computes the estimated true distance between two genomes based only on the number of shared adjacencies in each genome allows us to design sampling methods for bootstrapping that can handle replicate genomes that may be invalid (e.g. because of additional copies of adjacencies), and yet be sufficient for computing the pairwise distance (by tallying the number of shared adjacencies). Two of these methods, BC and PJ are equivalent in their performance and are better than all the other methods designed. Their names come from their equivalent counterparts in the sequence world: the classic bootstrap (BC) of Felsenstein and parsimony jackknifing (PJ). The key idea behind these bootstrapping methods is to create replicates by sampling adjacencies; from the list of all possible adjacencies, BC samples with replacement to form a collection of adjacencies; only adjacencies in this collection are then used to count the number of shared adjacencies and then estimate the pairwise distances. PJ is (asymptotically) equivalent to sampling with replacement (as in BC), but without overcounting, that is, when sampling gives an adjacency that has been previously selected, it is not added to the replicate. In other words, selected adjacencies are not counted more than once for computing the number of shared adjacencies between leaf genomes. From each replicate, a tree is reconstructed using our true distance estimator and NJ or FastME. The bootstrap support of an edge (viewed as a bipartition of leaves) in the inferred tree is the proportion of the trees from replicates that contain the edge (the same bipartition of leaves). Both BC and PJ show high sensitivity even at high levels of specificity, making them excellent bootstrap methods. We have also demonstrated, in (), that they outperform jackknifing methods based on sampling markers, such as ().
SOFTWARETIBA is implemented in C and can be compiled and executed on the command line in any UNIX-based platform and in the Cygwin environment on Windows. To run a phylogenetic analysis, the program must be run with the following input parameters: the input filename, the output filename, the reconstruction method and the bootstrap method. The input file format is the same as that used by GRAPPA and MGR; FASTA like headers for the names of the genomes (' 4' followed by an alphanumeric sequence followed by a newline), each chromosome represented by a signed permutation of integers ending with a '$' symbol and a newline character. The output filename provided by the user is suffixed with '_1' and '_2' to create two output files, both in Newick format; the first contains the inferred tree with branch lengths, and the second contains the same inferred tree with support values replacing the branch lengths. The reconstruction method can be either NJ or FastME. The two bootstrap methods discussed earlier in the text are implemented. They can be specified by 'BC' or 'PJ'. The default number of replicates is 100, but the user can change this with an additional input. Installation and usage details, with examples, are provided in the package and on our website.
CONCLUSIONTIBA is fast, scalable, accurate and provides support values for the edges in the inferred tree. Fast and scalable distance-based methods, precise estimates of true pairwise distances and finally, for the first time in any rearrangement-based phylogeny inference method, the use of bootstrap scorestogether make TIBA unique. Conflict of Interest: none declared.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
