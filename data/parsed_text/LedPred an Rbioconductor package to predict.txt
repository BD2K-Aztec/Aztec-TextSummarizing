Supervised classification based on support vector machines (SVMs) has successfully been used for the prediction of cis-regulatory modules (CRMs). However, no integrated tool using such heterogeneous data as position-specific scoring matrices, ChIP-seq data or conservation scores is currently available. Here, we present LedPred, a flexible SVM workflow that predicts new regulatory sequences based on the annotation of known CRMs, which are associated to a large variety of feature types. LedPred is provided as an R/Bioconductor package connected to an online ser-ver to avoid installation of non-R software. Due to the heterogeneous CRM feature integration, LedPred excels at the prediction of regulatory sequences in Drosophila and mouse datasets compared with similar SVM-based software. Availability and implementation: LedPred is available on GitHub: https:
IntroductionTranscriptional programs are tightly controlled by cis-regulatory modules (CRMs) that control gene expression. CRMs are stretches of DNA that contain specific combinations of transcription factor binding sites (TFBS) and are often associated with histone modification or nucleosome-free regions (). A wellestablished strategy to predict CRMs is to analyze combinations of CRM features described above in a set of experimentally validated CRMs. Support vector machine (SVM) algorithms are appropriate for this task since they can learn sequence features that distinguish CRMs from background sequences. Existing tools (Supplementary) score sequences based on k-mer discovery (KIRMES,; k-mer-SVM Fletez), positionspecific scoring matrices (PSSMs) (CLARE,) or ChIP-seq data (). The DEEP tool theoretically integrates a large palette of features but is specific to mammals, does not return a model to score new sequences and is currently unavailable (). Here, we present an R/Bioconductor package based on the libsvm library (
Study casesTo illustrate our approach, we have analyzed in vivo validated Drosophila melanogaster enhancers from the CAD2 database studied in the context of mesodermal development (). The positive training set is a subset (80%) of these enhancers (114/143) and 10 times more random sequences as negative training set (Supplementary file 1). PSSMs from different public databases (Supplementary data), mesoderm-specific ChIP-seq data for H3K4me1 () and ChIP-on-CHIP data on five mesoderm transcription factors (Tinman, Zinzen et al., 2009; Dorsocross, Pangolin, phosphorylated MAD and Panier,) were used as descriptive features. Best performances were obtained when 90 out of 576 of the best ranked features were used. H3K4me1 ChIP-seq data and the Pnr and dTcf ChIP-on-CHIP data, known for their mesodermal roles, were classified among the best discriminative features. The model was used to scan the whole non-coding genome split into 1500 bp regions with 750 bp overlap (116 736 regions in total) (). Of the 5848 regions predicted with an FPR cut off of 5%, we retrieved 44% of the 29 remaining CAD2 mesodermal CRMs not included in the training set (Binomial test P-value 5.3  10 09 ). Finally, we compared the performance of LedPred with other SVM-based CRM predictors using this Drosophila dataset and one from mouse in two different ways (Supplementary file 3). First, we compared the AUC returned by the software during the training (Supplementary). Second, we created a model with a training set composed of 80% sequences and drew ROC curves for the remaining 20% test sequences (Supplementary). In the Drosophila dataset, LedPred showed equivalent best performances as gkm-SVM, kebabs and k-mer-SVM (Supplementary Figs 1 and 2A). In the mouse, we used an enhanced dataset that has experimentally been characterized as high, medium and low level activity together with vertebrate PSSMs and NGS data related to this dataset (Supplementary File 2) (). We predicted enhancers using NGS data specific to this dataset, and PSSMs from the Jaspar () and the Human ProteinDNA Interactome database (). In this dataset, LedPred achieved the best performances (AUC0.81 in Supplementaryand AUC0.75 in Supplementary) with a clear difference to the following classifiers (AUC0.66 in Supplementaryand AUC0.64 in Supplementary).
Concluding remarksThe LedPred package is a new, fast and accurate SVM workflow to predict CRMs based on PSSMs, NGS data and other features in different species. An online server facilitates the mapping of PSSMs, ChIP peaks and signals to the sequences, while the subsequent steps create an optimized SVM model and use it to score new sequences. The SVM specific steps after feature mapping can be applied to any numerical matrix, and therefore this package can be useful for other binary classification problems.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from sequences based on PSSMs, NGS data and pre-computed custom values such as conservation. 2 Workflow The workflow is composed of five main steps: (1) numerical mapping of features to sequences, (2) tuning the SVM parameters, (3) feature selection, (4) model creation and evaluation and (5) scoring of new sequences (Fig. 1). Steps 14 are related to the model training, and the model is applied in Step 5. In Step 1, the user submits a BED file with positive training sequences. The negative training sequences can be generated from a set of background sequences (Bedtools; Quinlan and Hall, 2010) or submitted directly in a BED file. Users can use PSSMs (Transfac format), ChIP-seq peaks (BED) or signals (WIG or BED format) or BED files with regions and custom values (e.g. conservation scores or RNA-seq levels). Each sequence is scanned with the PSSMs using RSAT matrix-scan (Medina-Rivera et al., 2015) and scored according to binding probabilities (see Bioconductor vignette). In the case of BED peaks, positive binary values are set for an overlap of >20% with the query sequence, whereas for the WIG signals, the average overlap is calculated (Java Genomics Tool Kit, Palpant, 2012). Step 1 is calculated by an online server to avoid installation of third-party programs. The numerical matrix returned by Step 1 is used in Steps 24 to create a model. In Step 2, the optimal SVM parameter values are computed from a grid of values. In Step 3, a ranking of the features is created using a recursive feature elimination algorithm while the optimal number of features is found by calculating Cohen's kappa coefficient for different number of features. In Step 4, an SVM model and a plot of its performance on the training sequences are created. Finally, in Step 5, the optimal features are mapped to the query sequences, which are then scored with the SVM model. The mouse example below, with around 170 positive and 1700 negative training sequences and 600 PSSMs, took around 1-h user time and 1.3-GB maximum resident set size using four CPUs (Supplementary Fig. 3). Execution time scales exponentially while memory scales linearly (Supplementary Fig. 3). Sequence and annotation data, and the workflows below, are available as Supplementary data and in the Bioconductor vignette.
D.Seyres et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
