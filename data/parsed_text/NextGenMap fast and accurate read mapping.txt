When choosing a read mapper, one faces the trade off between speed and the ability to map reads in highly polymorphic regions. Here, we report NextGenMap, a fast and accurate read mapper, which reduces this dilemma. NextGenMap aligns reads reliably to a reference genome even when the sequence difference between target and reference genome is large, i.e. highly polymorphic genome. At the same time, NextGenMap outperforms current mapping methods with respect to runtime and to the number of correctly mapped reads.
INTRODUCTIONHigh-throughput sequencing technologies produce several million reads per run, with read lengths ranging from 36 to 41000 bp. The increasing read length and the advent of technologies like Ion Torrent and MiSeq drive the need for new efficient read mapping methods. In addition, the demand increases for methods that can cope with high sequence divergence and at the same time are user-friendly. Two main groups of read mapping programs are distinguished based on their indexing methods (). First, Burrows Wheeler transformation (BWT)-based methods, e.g. BWA (), which are fast but optimized for short reads and genomes with low polymorphism. Second, hashbased methods like Stampy (), which are slow but also suited for highly polymorphic genomes. Thus, a method that combines speed and accuracy provides a quantitative and qualitative improvement of current methods.To this end, we introduce NextGenMap, a method that is faster than current BWT-based methods and at the same time handles short and long reads independent of the number of differences between reads and reference genomes. NextGenMap implements new techniques to efficiently identify genomic regions in the reference genome that share a sequence similarity with a read. To achieve a short runtime and to reliably map the reads, NextGenMap automatically estimates important parameters (like the number of alignment score computations required for each read). Additionally, NextGenMap makes use of multicore CPUs and, if available, any OpenCL-enabled graphic card (GPU). NextGenMap supports fasta, fastq, SAM and BAM as input formats; and outputs SAM and BAM files. Furthermore, NextGenMap maps single-end and paired-end data, offers a local (Smith Waterman) and an end-to-end alignment mode and supports aligning bisulfite-treated reads (). The peak memory consumption of NextGenMap ranged from 5 to 6 GB, depending on the read length.
METHODSNextGenMap comprises three steps. First, it splits the reference genome into overlapping k-mers and stores the positions in a hash-table. Second, NextGenMap identifies the genomic regions, where a read potentially maps to. To this end, the k-mers from each read are extracted and putative genomic locations are retrieved from the hash-table. Only regions on the genome where the number of k-mer matches exceeds a certain threshold are considered as candidate mapping regions. Unlike other methods, NextGenMap automatically determines a read-specific threshold, rather than one threshold for all reads. Third, NextGenMap computes the alignment score for the candidate mapping regions. For the candidate region(s) with the highest alignment score, the full alignment is computed and reported. This final step is performed using an extended implementation of the MASon library (). The Supplementary Section 1 provides a more detailed description on how NextGenMap aligns reads.
Benchmark dataTo study NextGenMap's performance on re-sequencing projects, we used real datasets and simulated datasets (Supplementary). Three Illumina (R 1 , R 2 , and R 3 ), one Ion Torrent (R 4 ) and one 454 dataset (R 5 ) from the Sequence Read Archive (SRA-NCBI) served as benchmark data. To assess the mapping accuracy, we simulated four read sets using Mason (): S 1 (150 bp reads), S 2 (250 bp reads) derived from the human genome, S 3 (100 bp reads) from the Arabidopsis thaliana *To whom correspondence should be addressed. y The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors. genome and S 4 (100 bp reads) from the Drosophila melanogaster genome. In all datasets, we introduced a 1.2% sequencing error and assumed a genomic polymorphism (SNPs, insertion and deletions) of 0.1% (S 1 , S 2 ) and 2% (S 3 , S 4 ). Finally, we simulated 11 datasets (A 0 ,. .. , A 10 ) based on the A.thaliana genome with an increasing degree of genomic polymorphisms (010%). Based on the article by, we compared NextGenMap with four popular mapping methods. Representatives of BWT-based methods were BWA (), its extension for longer reads BWA-SW () and Bowtie2 (). As hash-based representative we selected Stampy (). Similar to, we executed all programs using default parameters. For further details, see Supplementary Sections 2 and 3.
RESULTS AND DISCUSSIONIn terms of runtimes, NextGenMap outperformed all analyzed mappers (see Supplementaryand S6a) on all real (R 1 ,. .. , R 5 ) and simulated datasets (S 1 ,. .. , S 4 ). NextGen Map's CPU implementation was 1.12.3 times faster than Bowtie2, the fastest method so far. The GPU implementation further reduces the runtime (1.64.9 times faster). If we compare the runtimes of the methods that showed the highest accuracy, NexGenMap is between 2.9 and 5.8 times faster than BWA-SW. Stampy, although very accurate for highly polymorphic genomes (2.0%), shows the longest runtimes (maximum 37 h) compared with NextGenMap (65 min for the same dataset). Supplementarydisplays the mapping accuracies for the simulated data. For low genomic polymorphism (0.1%), BWA-SW shows 0.1% and 0.2% more correctly mapped reads compared with NextGenMap for S 1 and S 2 , respectively. However, for genomic polymorphism of 2%, the hash-based mappers (NextGenMap, Stampy) are the best with a mapping accuracy of 97.6% and 85.5% for S 3 and S 4 , respectively. To further elucidate the influences of polymorphic genomes on the mapping accuracy, we varied the degree of genomic polymorphism from 0% to 10% for A.thaliana (A 0 ,. .. , A 10 ).displays the decline in mapping accuracy for BWTbased methods and also shows that accuracy is unaffected by degree of genomic polymorphism for the hash-based mappers (Supplementary). However, Stampy can only retain the accuracy with the expense of an increased computing time (), whereas NextGenMap shows no substantial increase in runtime (Supplementary). In summary, NextGenMap maps reads very accurately and independent of the amount of genomic polymorphism (up to 10%). At the same time, NextGenMap exhibits the fastest runtime. We also note that graphic cards provide additional speedup. However, a strong effect is only observed when the number of alignment computations is high, as is the case for highly polymorphic genomes ( 8%).
CONCLUSIONHere, we showed with real and simulated data that NextGenMap maps high-throughput sequencing reads accurately and fast at the same time. This fact was already exploited in studies of miRNA () and bisulfite-treated data (). Finally, the automatized estimation of the required number of alignment score computations per read and the automatic adaptation to the hardware result in a reliable and fast read mapper that requires minimal user interaction. This allows NextGenMap to reliably map reads even to highly polymorphic genomes (10%). Thus, it may also be used to map reads from nonstandard organism to a phylogenetically close reference genome or to apply it to metagenomics data.divergencemapped(a) Percentage of correctly (solid) and incorrectly (dashed) mapped reads and (b) running times for different degree of genomic polymorphisms between read and reference genome for five million 100 bp A.thaliana reads (A 0 ,. .. , A 10 ). NGM  NextGenMap
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
NextGenMap at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
