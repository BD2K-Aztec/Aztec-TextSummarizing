Motivation: The interactions among proteins and the resulting networks of such interactions have a central role in cell biology. Aligning these networks gives us important information, such as conserved complexes and evolutionary relationships. Although there have been several publications on the global alignment of protein networks; however, none of proposed methods are able to produce a highly conserved and meaningful alignment. Moreover, time complexity of current algorithms makes them impossible to use for multiple alignment of several large networks together. Results: We present a novel algorithm for the global alignment of pro-tein–protein interaction networks. It uses a greedy method, based on the alignment scoring matrix, which is derived from both biological and topological information of input networks to find the best global network alignment. NETAL outperforms other global alignment methods in terms of several measurements, such as Edge Correctness, Largest Common Connected Subgraphs and the number of common Gene Ontology terms between aligned proteins. As the running time of NETAL is much less than other available methods, NETAL can be easily expanded to multiple alignment algorithm. Furthermore, NETAL overpowers all other existing algorithms in term of performance so that the short running time of NETAL allowed us to implement it as the first server for global alignment of protein–protein interaction networks. Availability: Binaries supported on linux are freely available for download at
INTRODUCTIONThe interactions among proteins are of high importance within the majority of biological functions. A protein may interact with another protein for the sake of modification; it also may interact to form part of a protein complex or it may carry another protein (). There are numerous experimental techniques including yeast two-hybrid () and protein co-immunoprecipitation () that demonstrate large-scale proteinprotein interactions (PPIs) for organisms, including Saccharomyces cerevisiae (), Homo sapiens () and Drosophila melanogaster (). As the data from these experiments have a lot of false-positive interactions, putting several studies containing other data types, such as gene expression into account, they have been used to reduce the number of such interactions (von). Such an analysis is the alignment between networks that identify functional or structural conserved components in species. The purpose of network alignment is to align nodes of the input networks to maximize the overall match between them. This alignment not only gives the global similarities between the networks of species but also yields knowledge about the topology of the proteins in the networks that is valuable in evolutionary biology. Given a group of such PPI networks, the scores of the pairwise alignment between them can be used to construct their phylogenetic tree. Most of the previous approaches focused on local network alignment (LNA). LNAs find local similar subnetworks that are probably conserved components either functional or structural. PathBLAST (), NetworkBLAST (), Mawish () and Graemlin 1.0 are examples of local network alignment. PathBLAST uses both BLAST similarities of the proteins and the probabilities of interactions to find the biological pathways. These probabilities indicate how much an interaction is true and is not false positive (). NetworkBLAST generates a network alignment graph based on the sequence similarities and performs a search over the network to identify conserved pathways and clusters. Mawish models the biological deletion and duplication and uses the weighted edge of the network to find the maximum weight induced subgraph. Graemlin1.0 () uses a scoring scheme based on two models, in one of which the module is subject to evolutionary constraints; however, in other proteins, the modules are under no constraints. As mapping of LNA is categorized as one-to-many mapping, it may be ambiguous. In other words, in this kind of alignment, one node can be aligned with different nodes in different local *To whom correspondence should be addressed. conserved subnetworks. Although this may indicate gene duplication, in some cases, it may cause implausibly numerous matches for a protein (). Previous LNA algorithms have not generally been able to detect large connected subgraphs that are conserved during the evolution (). In contrast, the purpose of global alignment is to find a unique correspondence between all nodes of the input networks. Such an overall alignment can result in detection of functional orthologs and cross-species variations (). The pioneering work in this area was carried out by IsoRank () that mapped the nodes of two input networks based on the similarity of their neighborhood topology. It uses a preprocessed matrix that indicates the efficiency of aligning each node of the network to all others. Afterward, IsoRankN was proposed for aligning multiple networks (). This algorithm uses original IsoRank to find the alignment scores between any pair of networks. It uses a developed PageRank-Nibble algorithm () to infer the alignment clusters based on these scores. Graemlin 2.0 () is a parameter-learning algorithm that finds the alignment between multiple networks by relying on their phylogenetic relationships. GA and PATH are based on one and two relaxations over the set of doubly stochastic matrices (). They use the same objective function that balances the matching similar pairs with increasing the number of conserved edges. PISwap () uses a local optimization to find the optimal alignment. This algorithm initially finds an alignment using only sequence data and then adjusts it by incorporating topological information. Natalie () is a lagrangian relaxation approach that uses homology information with a branch-and-bound method to compute the global alignment. HopeMap () is a parameter-free algorithm that iteratively refines the conserved regions by applying a connected-componentbased process. GRAAL () and HGRAAL () rely solely on topological network similarities based on the graphlet degree vector. Although GRAAL is a greedy seed and extend approach, HGRAAL uses Hungarian algorithm () to find the optimal alignment. MI-GRAAL () uses both node similarity and topological network similarity measures to break the ties and find a more stable alignment. Inone can see the categorization of different tools, including NETAL, which shows how the strategies are different. Broadly, network alignment algorithms (local or global) can be categorized into two groups: pairwise alignment and multiple alignment. Pairwise alignment algorithms align two PPI networks. Mawish, Natalie, HopeMap, PISwap, IsoRank, GRAAL, H-GRAAL and MI-GRAAL are examples of pairwise alignment algorithms. However, multiple alignment algorithms try to create an alignment between more than two PPI networks. IsoRankN, NetworkBLAST and Graemlin are in this group. Previous algorithms for the problem of PPI network alignment use two main approaches for scoring the alignments. Some of the algorithms such as GRAAL use solely the topology of networks, whereas most of the alignment methods like Mawish, NetworkBLAST, IsoRankN and Graemlin incorporate previous biological information about nodes, such as the similarities of protein sequences and phylogenetic relationships in PPI networks. In this article, we propose a novel algorithm, NETAL (network aligner), as a solution to the pairwise global PPI network alignment. This problem can be formulated as follows (): given two networks, find an injective mapping so each node in the smaller network is mapped to one node in the larger network. All the details of our algorithm are discussed on pairwise alignment, but it can be easily promoted to multiple alignment. This algorithm uses a scoring function based on both biological and topological information. The topological information between each pair of nodes is updated gradually during execution. The main advantages of our proposed method are finding the best global PPI alignment and the ability to find big connected common subgraph that is so useful for extracting the biological information. We compare the results of our program with MI-GRAAL, GRAAL and IsoRank to demonstrate the effectiveness and usability of our method. The reason for choosing these tools for comparison is because of the accuracy of their results in comparison with other existing tools that have been used so far.
METHODOLOGY
Definitions and notationsIn this article, each PPI network is represented as a simple undirected graph G  V, E such that each u 2 V is a protein v and for each e 2 E, e  i, j is a notation for an interaction between proteins i and j. Apparently, jVj and jEj are the number of nodes and edges in the graph. In addition, the edge weight w(e) is associated with the edge e where 0 we 1. N(i) demonstrates the set of neighbors of node i; therefore, jNij indicates the degree of node i. A subnetwork of G is a graph H  V 0 , E 0  in which V 0 V and E 0 E. Let G b  V b , E b  be a complete bipartite graph, i.e. V b  V 1 [ V 2 , V 1 \ V 2  ;, E b  fu, v j u 2 V 1 , v 2 V 2 g and suppose that jV 1 j jV 2 j. A bipartite matching M E b is a set of edges so that every u 2 V 1 is incident to at most one edge of M.Now, suppose we have two networks G 1  V 1 , E 1  and G 2  V 2 , E 2  such that jV 1 j jV 2 j. Global alignment of these two networks is an injective function f : V 1 ! V 2. There are several measurement methods for assessing the quality of an alignment. We will discuss them in Section 3. Let M be a bipartite matching for the complete graph G  V 1 [ V 2 , E where V 1 is the set of nodes of network A, and V 2 is the set of nodes of network B and let i, j be an interaction in network A. We call i, j a conserved interaction or conserved edge when the end points of i, j are matched with the end points of an interaction i 0 , j 0  of network B.
NETAL approachOur computational tool, NETAL, takes two networks G 1  V 1 , E 1  and G 2  V 2 , E 2  in addition to various configuration parameters as inputs and returns global alignment of them. Without loss of generality, we assume that jV 1 j jV 2 j. This approach includes two main phases. First phase is the construction of alignment score matrix, and the second one is the greedy approach of updating of scores until we get to the final result. At the first phase Alignment Score Matrix is generated. This matrix is constructed based on two other matrices named Similarity Score Matrix and Interaction Score Matrix. Similarity score indicates both topological and biological similarities between every two nodes i 2 V 1 and j 2 V 2. This matrix is a weighted sum of Topological Score Matrix and Biological Score Matrix. Topological Score Matrix and Biological Score Matrix indicate topological and biological similarities between every two nodes of input networks, respectively. Interaction score of two nodes i 2 V 1 and j 2 V 2 is an estimate on the conditional expected value of the number of conserved interactions that are incident to the node i given the assumption that nodes i and j are aligned to each other. Similarity score matrix that is calculated in phase one will not change during the process of finding alignments, and they remain fixed until the end. Therefore, we can consider this part as an offline pre-process for the continuation of the algorithm. The reason is that the values of the similarity matrix are computed based on structure of the networks and biological properties of proteins in networks, which both are available at the beginning. However, interaction score matrix should be updated iteratively during the next phase of the algorithm because the expected value of the number of conserved interactions changes after aligning each two nodes. Clearly, when interaction scores are updated, the values of alignment score matrix should also be renewed, respectively. At the second phase, a greedy search is used to find the global alignment based on the values of the alignment score matrix. In each iteration of the greedy search, we find the two nodes with maximum score in alignment score matrix and then align them. This greedy search is repeated until all nodes of the first network are aligned with the nodes of the second network. Algorithm 1 presents general steps of NETAL. For more specific pseudocodes, see the Supplementary Data.Require: jV 1 j jV 2 j Construct topological score matrix T. Given biological data, construct biological score matrix B. Given matrices T and B, construct similarity score matrix S. Construct interaction score matrix I. Given S and I, construct alignment score matrix A. while there is an unaligned node in 2 V 1 do Find unaligned nodes i 2 V 1 , j 2 V 2 with maximum Ai, j. f i j Update interaction score matrix I. Given S and I, update Alignment score matrix A. end while return f 2.2.1 Topological score matrix Topological score matrix T consists of jV 1 j rows and jV 2 j columns, whereas Ti, j indicates topological similarity between the nodes i 2 V 1 and j 2 V 2. Our major assumption is that two nodes are topologically similar if and only if their neighbors are topologically similar. As you can see in the example provided in, we initiate T 0 i, j  1, and in each iteration, we update T based on its values on the last iterate. To compute T t1 i, j, we construct a complete weighted bipartite graph G b  V b , E b  where V b is made of two disjoint sets of nodes N(i) and N(j) and every edge i 0 , j 0  2 E b connects node i 0 2 Ni and node j 0 2 Nj. Furthermore, for each edge i 0 , j 0  2 E b we set wi 0 , j 0   T t i 0 , j 0 . After constructing G b , a matching M will be found using a greedy algorithm. Initially, we select an edge e  u, v so that for every i 0 , j 0  2 E b we have wu, v ! wi 0 , j 0 . Then, we add e to M and remove u, v, and all edges that are incident to u or v in G b. This process is repeatedly done while traversing all the graphs until all the edges between the two parts of graph are removed. Now we can calculate T t1 i, j using formula 1:where t is the counter for the iteration. Looking at the right-hand side of Equation (1), the numerator is sum over similarity between the matched neighbors. Theillustrates how the topological matrix updates for four iterations in our simple graph. If for each u 2 Ni and v 2 Nj, Tu, v 1, we can conclude that the enumerator is less than or equal to minfjNijjNjjg. Inverse impact of maxfjNi, jNjjg in the denominator not only keeps T t1 between 0 and 1 but also assigns higher similarity score to the vertices with similar degrees. For instance, if Ni  3 and Nj  5, then Ti, j is no more than 3=5 in any iteration. After a few iterations, the final values of matrix T are considered as topological similarities between every pairs of nodes (the number of iterations is an input parameter and usually two or three iterations are enough).
Biological score matrixIn this work, we have not used biological score impact in evaluation, which we implement in our future works. But in a nutshell, the biological score matrix B is defined such that Bi, j is referred to as biological similarity between two nodes i 2 V 1 and j 2 V 2. We say two nodes i and j are biologically similar, if and only if the two following conditions hold:(i) The actual proteins represented by i and j are biologically similar. (ii) The actual proteins represented by the neighbors of i and j are biologically similar.B t i 0 , j 0  maxfjNijjNjjg 3
Similarity score matrix Similarity score matrix S withjV 1 j rows and jV 2 j columns, indicates the similarity between nodes of two networks, i.e. Si, j is the similarity of nodes i and j where i 2 V 1 and j 2 V 2. After computing topological score matrix and biological score matrix, matrix S is computed as follows:Si, j  Ti, j  1  Bi, j  4 where Ti, j and Bi, j are the values of topological score matrix and biological score matrix, whereas 0 1 is a parameter that controls the balance between them. As aforementioned, we do not need to update matrix S, and it never changes during the greedy search. The reason is that we compute the similarity score based on the structural similarity of networks and biological similarity between proteins. As the structural and biological similarity of nodes are constant and do not change during the algorithm, we do not need to update similarity score matrix. As we explained in the previous section, we have not specified and implemented the computation of biological score matrix. Therefore, in our current version of software, the parameter is equal to 1.
Interaction score matrix If I jV1jjV2jbe the interaction score matrix with jV 1 j rows and jV 2 j columns, Ii, j indicates an approximation of the expected value for the number of conserved interactions incident to i in the final alignment of the two nodes i and j. In other words, if the two nodes i 2 V 1 and j 2 V 2 are matched, Ii, j interactions will approximately be conserved. Next, we introduce the concept of dependency.Each node i has a dependency to any of its neighbors equal to 1 jNij. This value indicates the probability that interaction i, i 0  will be conserved, if a node i 0 2 Ni is aligned with a random node of the other network. For example, consider a node i with three neighbors i 0 , i 00 and i 000. Every interaction i, i 0 , i, i 00  and i, i 000  will be conserved with the probability 1 jNij , e.g. 1 3. Thus, dependency of i is equal to 1 3. For each node i summing dependencies of its neighbors will give an approximate expected value for the number of conserved interactions that are incident to i, when i is matched to a random node in the other network. In the aforementioned example, let i 0 , i 00 and i 000 have degrees 4, 2 and 4, respectively. Summing dependencies of neighbors of node i is equal to 1 4  1 2  1 4  1. It means that by aligning i with a node of the other network, the expected value of conserved interactions will be one. Considering the concept of dependency, Ii, j can be computed as follows:The idea of this formula is as follows. In aligning two nodes i and j, the expected value for the number of conserved edges will be equal to the minimum expected value for the number of conserved interactions between the two nodes i and j. As the expected value of conserved interactions for node i is no more than jNij, expected values can be scaled by dividing them by the maximum degree among all the nodes of the two input networks. As two nodes are matched, the expected value of conserved interactions in alignment will change. Therefore, the values of matrix I should be updated. For this purpose, two new matrices are defined:Definite interaction matrix: Suppose two nodes i 2 V 1 and j 2 V 2 are matched together. Di, j, is the number of definite conserved interactions of the first network that are incident to i. Let two optional nodes u and v be aligned with each other. Because of binding of these two nodes, two situations may happen. In the first situation, if we align i 2 Nu to j 2 Nv, the interaction u, i will be conserved because it is aligned with v, j. Thus, the number of definite conserved interactions resulted from this matching will be increased by one, i.e. Di, j  Di, j  1. In fact, when two nodes u and v are matched, the number of definite conserved interactions resulted from aligning of any pair of nodes i and j where i 2 Nu and j 2 Nv, will be increased by one. In the other situation, if we align i to j where i = 2Nu or j = 2Nj, the number of definite conserved interactions resulted from this matching will not change. Therefore, after the matching of u and v, the values of matrix D get updated based on the formula 6. As a reminder, Di, j is the number of interactions that will definitely be conserved, if two nodes i and j are matched. Note that the matrix D is zero at first and k is iteration number. Di, j k1  D k i, j  1 i 2 Nu, j 2 Nv Di, j k otherwise 6Canceled interaction matrix: This is a 1D matrix. As aforementioned, every node u has a dependency equal to 1 jNuj to any of its neighbors. But, after aligning node u to a node v of the other network, this dependency should be removed from the interaction score of any neighbor i of u, similarly to any neighbor j of v. For this purpose, two canceled interaction arrays C 1 and C 2 are used for the networks G 1 and G 2 , respectively. Each value C 1 i or C 2 j indicates the number of conserved interactions that should be removed from expected value of number of conserved interaction for node i and j. If two nodes u and v are matched, C 1 i is updated based on the Equation (7). C 2 j updates similarly. Note that C 1 and C 2 are set to zero at the beginning, and k is iteration number.Ii, j  minfd 1 i, d 2 jg max k2V1[V2 fjNkjg 8 where
Alignment score matrixAfter calculating matrices S and I, alignment score matrix A is computed based on Equation (10).Ai, j  Si, j  1  Ii, j  10 where Ai, j is the scores of aligning two nodes i 2 V 1 and j 2 V 2. Although computing alignment score matrix, NETAL simultaneously constructs a priority queue of paired nodes in decreasing order of their alignment scores. This priority queue is used in the second phase to quickly identify the pair nodes with the maximum alignment score.
Greedy searchIn the second phase, our algorithm uses a greedy search to find the best global alignment between two input networks G 1 and G 2. At first, the pair nodes with maximum alignment score are chosen and aligned to each other. Then interaction score matrix is updated, and the alignment score matrix is changed based on the new values of I. Finally, two cited nodes and their corresponding rows and columns are removed from the matrix. Now, two other nodes with the maximum alignment scores are chosen, and similar steps are performed repeatedly. This process will continue until all the nodes of the smaller network are aligned to some nodes of the other network. At this time, the resulted alignment will be considered as the final alignment of the two networks G 1 and G 2 .
Time complexityLet n  maxfjV 1 j, jV 2 jg and m  maxfjE 1 jjE 2 jg. Calculation of topological score matrix and biological score matrix takes Om 2 . Computing each of similarity score matrix, interaction score matrix and alignment score matrix can be done in On 2 . As we use priority queue to find highest scores in the alignment score matrix, we also need to build this priority queue that takes On 2 log n. Therefore, the total time complexity of the first phase of the algorithm is Om 2  n 2 log n. In the second phase, extracting the pair with highest score takes constant time. However, the major time consuming part is updating matrices and the priority queue, which is Onm log n. Therefore, the total time complexity of the algorithm is On 2 log n  m 2  nm log n. For a simpler time complexity, if we assume that m ' n log n (which is an acceptable assumption in biological networks), then the time complexity of NETAL will be Om 2   On 2 log 2 n. For more details about time complexity of the algorithm, please see the Supplementary Data.
RESULTSIn this section, our algorithm is compared with other global network alignment algorithms. The comparisons are done based on five criteria. At first, these criteria for the comparison are introduced (). Edge Correctness (EC) is the percentage of edges (interactions) of the first network that are aligned to edges in the second network. Higher values of the EC indicates that the two input networks are topologically more similar. EC is computed by the following equation ():Obviously, if the second network has a subnetwork that is isomorphic to the first network, then EC can be ideally one. Node Correctness (NC) is the percentage of nodes (proteins) of the first network that are aligned to the correct nodes of the second network. Let f be the correct node mapping and g be the alignment mapping; then NC is defined asObviously, to calculate NC, a correct node mapping like f should be known. Interaction Correctness (IC) is the percentage of interactions of the first network that are aligned with a correct interaction in the second alignment. IC is defined aswhere A  fu, v 2 E 1 jfu  gu, fv  gvg. Like NC, for calculating IC, a correct node mapping like f should be known. Largest Common Connected Subgraph (LCCS) is largest connected subgraph of the first network that is isomorphic to a subgraph of the second network. This common subgraph is not necessarily induced. The larger and denser connected subgraphs are biologically more valuable. NF is the number of aligned protein pairs that their functional similarity is40.5. Such protein pairs are considered to be functionally related. Higher values for NF indicate that the alignment is functionally meaningful. Functional similarity between proteins is defined based on their Gene Ontology (GO) terms. The functional similarity of two proteins is calculated by the method defined by (). This method only considers biological process and molecular function terms. GO terms that exist in different databases, describe some biological characteristics of the proteins, such as molecular function, biological process and cellular component. If both proteins corresponding to the aligned pair of nodes share common GO terms, then it means that the aligned proteins are functionally similar. More common GO terms express that two proteins of the aligned pair are more similar to each other. A large number of such pairs in the resulted alignment supports that the alignment is biologically credible.In the next section, the NETAL algorithm is compared with the other global alignment algorithms, such as IsoRank, GRAAL and MI-GRAAL, on the basis of the mentioned criteria. The reason for choosing these tools is their availability and the accuracy of their results in comparison with other existing tools. Although IsoRankN and Graemlin are also popular and renowned algorithms for global network alignment, they are not included in our assessments. Output of IsoRankN algorithm is not compatible with ours for which we excluded from our comparisons. It outputs disjoint sets of aligned proteins that each set may contain a node of one network that is aligned to several nodes of the other network. In other words, it gives a one-tomany mapping between the nodes. Moreover, the input information of Graemlin is somehow different with other alignment methods. For example, it takes the phylogenetic relationships among the species corresponding to input networks. Some other algorithms, such as GA and PATH, are not able to align huge networks to each other, including yeast and human. Furthermore, some other methods like Natalie and HopeMap need homology information to align networks ().
Alignment of two PPI networks human and yeastNETAL is used to align two PPI networks of yeast and human. We extracted the needed information and datasets of PPI networks of yeast and human from () and (), respectively. The yeast network has
Additional measurements on alignment of different networks with each otherWe align different pairs of protein networks of human, fly, yeast, worm and mouse. Protein interaction networks of these species are extracted from IntAct database (). We report EC, LCCS and NF in of the alignment obtained by different algorithms. The results of the alignments using different tools are reported in5, respectively. In the alignments of humanfly, humanyeast, humanworm and flyyeast, NETALs NF is higher than IsoRank, MI-GRAAL and GRAAL. It means that using just topological information, NETAL is able to align the proteins that are functionally related. In the alignment of humanmouse NETALs, NF is still close to IsoRanks NF. Moreover, the EC and LCCS of NETAL are much better than the other algorithms. These results show that our algorithm is able to find large conserved complexes while preserving the biological similarities as much as possible.
Statistical significanceTo demonstrate the quality of an alignment algorithm, two similar networks are aligned with each other. For this purpose, a noisy network is constructed from a real PPI network. In this article, for obtaining the noisy network of a real PPI network, a fraction of edges of the network is removed randomly, and instead, the same number of edges is randomly added. This removal and addition causes the real network and the resulted noisy network not to be subgraphs of each other, as a result the comparison between them will be meaningful. As other results of MI-GRAAL are fairly better than previous algorithms, in this section, we just compare our results with MIGRAAL. To measure our algorithms performance and comparing it with algorithm MI-GRAAL, PPI network of yeast is aligned to its noisy model. The experiments are over different values of : 5, 10, 15, 20 and 25%.51 and 0.25%. Obviously, the values of EC, NC and IC of NETAL are so higher than the corresponding values of MIGRAAL. Thus, it is clear that for different values of , either low or high, NETALs performance is much better than MI-GRAAL. Moreover, this indicates that our algorithm has the capability to discover the best global alignment, where two input networks are so similar. The results are presented in8. As we expected, as the fraction increases, EC, NC and IC decrease.
Decreasing running time efficientlyMost of the presented algorithms for network alignment are too slow. Although recent algorithms, such as GRAAL and MIGRAAL, have improved the time complexity, NETAL is still much faster than all of them, as it can be promoted to be used for multiple alignment of large networks. To compare GRAAL, MI-GRAAL and NETAL, we ran them for aligning PPI networks of yeast and human on a 2.66 GHz Linux system with 2 GB random access memory. As it is shown in, running time of NETAL is much less than the other algorithms. In other words, it is 40.70 and 54.41 times faster than GRAAL and MIGRAAL, respectively, and this was predictable considering their time complexity.
DISCUSSION AND CONCLUSIONSThe previous approaches in global alignment of PPI networks use different kinds of topological information of nodes that are calculated based on their neighbors at a pre-processing step, and these scores remain fixed during the algorithm execution. Using stable topological information can not result the best conserved subnetworks. For example, consider that two hubs of two networks are matched together in one step; now, it is reasonable that some neighbors of them are matched together in the next step rather than two nodes that are more similar topologically.Because one of the aims of network alignment is to find the largest and densest connected common subnetworks and clearly by choosing the neighbors of a hub, the probability of finding these subnetworks increases. For this and other reasons, our algorithm uses topological information that is updated during the algorithm. In other words, after aligning each pair of proteins of two input networks, topological scores of remained proteins updates. In this article, a greedy method is presented for global alignment of PPI networks based on the alignment score matrix. Our method is implemented and tested for aligning PPI networks of yeast and human. The results are compared with three well-known global network alignment algorithms IsoRank, GRAAL and MI-GRAAL. The performance of our method is depicted by comparing our result with the other algorithms. To compare our algorithm with other algorithms, the EC, LCCS and running time measures are used, and common GO terms are applied for comparing biological significance. Moreover, to measure the ability of our algorithm in aligning similar networks, PPI network of yeast is aligned by its noisy model. In our experimental tests, we observe that our algorithm is successful in finding large connected subgraphs and conserved edges in an efficient time comparing with other algorithms. It was also able to find optimal global alignment of yeast and its noisy model.
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
B.Neyshabur et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
NETAL at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
nodes and 16 127 edges, and the human network consists of 9141 nodes and 41 456 edges. As we omitted the impact of biological information in our algorithm, to keep our assessments fair, we considered the equal to one. We experimentally found that the inverse of the number of the nodes of the larger network is a good estimation for parameter. Thus, we set to 0.0001 for alignment of networks of yeast and human. Moreover, the recursion process of the computing topological score matrix was repeated two times. As we used the same network as (Kuchaiev and Przulj, 2011), we compared our result with the results in this article. The edge correctness (EC) of the alignment by NETAL is equal to 36.10%. But, the edge correctness of the alignment of PPI networks of human and yeast by IsoRank, GRAAL and MI-GRAAL are equal to 3.89, 11.72 and 23.26%, respectively. This means NETAL is able to find fairly more conserved interactions compared with other algorithms. Moreover, the largest common connected subgraph (LCCS) of our algorithm has 5370 edges (interactions). But the LCCSs resulted from IsoRank, GRAAL and MI-GRAAL have 261, 900 and 3467 edges, respectively. Thus, the NETALs LCCS is 20.57, 6.0 and 1.55 times larger than the LCCS of IsoRank, GRAAL and MIGRAAL, respectively. These comparisons are shown in Table 1. As aforementioned, for measuring the biological significance of our algorithm, the number of aligned pair nodes that share common GO is considered. GO annotation data that are used in this article were extracted from the GO database (The Gene Ontology Consortium, 2000). In case of GO terms, the global alignment resulted from NETAL consists of 50.41, 20.27, 7.80, 3.30, 1.47 and 0.96 aligned pairs that have at least one, two, three, four, five and six common GO terms, respectively. Note that in this study, we only consider the pairs that have at least one known GO term. These results are compared with the results of IsoRank, GRAAL and MI-GRAAL in Table 2. It is clear that our algorithm has aligned considerably more pair nodes having common GO terms. These results emphasize that our algorithm efficiently aligns the homologue proteins. On the other hand, as the number of common GO terms increases, NETALs results get significantly higher in comparison with other algorithms. This means that NETAL is more powerful in aligning the proteins with high similarity.
