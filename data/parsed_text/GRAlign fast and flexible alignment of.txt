Motivation: Protein structure alignment is key for transferring information from well-studied proteins to less studied ones. Structural alignment identifies the most precise mapping of equivalent residues, as structures are more conserved during evolution than sequences. Among the methods for aligning protein structures, maximum Contact Map Overlap (CMO) has received sustained attention during the past decade. Yet, known algorithms exhibit modest performance and are not applicable for large-scale comparison. Results: Graphlets are small induced subgraphs that are used to design sensitive topological similarity measures between nodes and networks. By generalizing graphlets to ordered graphs, we introduce GR-Align, a CMO heuristic that is suited for database searches. On the Proteus_300 set (44 850 protein domain pairs), GR-Align is several orders of magnitude faster than the state-of-the-art CMO solvers Apurva, MSVNS and AlEigen7, and its similarity score is in better agreement with the structural classification of proteins. On a large-scale experiment on the Gold-standard benchmark dataset (3 207 270 protein domain pairs), GR-Align is several orders of magnitude faster than the state-of-the-art protein structure comparison tools TM-Align, DaliLite, MATT and Yakusa, while achieving similar classification performances. Finally, we illustrate the difference between GR-Align's flexible alignments and the traditional ones by querying a flexible protein in the Astral-40 database (11 154 protein domains). In this experiment, GR-Align's top scoring alignments are not only in better agreement with structural classification of proteins, but also that they allow transferring more information across proteins.
INTRODUCTION
Aligning protein structuresProtein alignment is key for answering biological questions that involve the transfer of information from well-studied proteins to less studied ones. Earlier methods align proteins according to their sequences (). Because protein 3D structures are more conserved during evolution than sequences, structural alignments allow the most precise mappings of equivalent residues, especially when the proteins have low sequence identities. This is notably important for (i) detecting and investigating structural motifs (i.e.small rigid substructures) and functional sites (i.e. substructures of enzymes where the catalytic activities take place) and (ii) measuring the similarity between proteins and bringing them in evolutionary relationship, e.g. by classification. Many protein structure comparison methods have been proposed and there is no consensus which one is the best (), as the alignments that maximize different scoring schemes can differ considerably (). The alignment methods can be divided into two categories. The rigid-body approaches consider the proteins as rigid objects and aim to find alignments that have the maximum number of mapped residues and the minimum deviations between the mapped structures. These two objectives are contradictory, as RMSD has a trivial minimum when no residue is aligned and then tends to increase with the number of mapped residues. The rigid-body approaches mainly differ in how they combine these two objectives (). However, proteins are flexible molecules and can undergo large conformational changes that are not captured by the rigidbody approaches. Flexible alignment methods overgo this limitation by either allowing twists between rigidly aligned fragments () or by only maximizing local (in terms of Euclidean distance) similarities (). In this article, we focus on maximum Contact Map Overlap (CMO), a flexible protein structure alignment method defined by. CMO is interesting because it is translation/rotation invariant, and its corresponding scoring scheme is in good agreement with the structural classification of proteins (SCOP,).
Maximum contact map overlapIn CMO, the 3D structure of a protein is represented by its contact map. A contact map is an ordered graph, CM  V, E, where nodes, V, and edges, E, are defined as follows. Each node in V represents an amino acid of a protein. Nodes in a contact map are labeled with the sequence position of the amino acids from which they originated. This labeling leads to a strict total ordering of the nodes: for each two distinct nodes u and v, either *To whom correspondence should be addressed. u5v if u is before v in the protein sequence or u4v otherwise. Two nodes u and v are connected by an edge u, v 2 E if and only if the Euclidean distance between the-carbons of the corresponding amino acids is less than a given threshold. Such amino acids are said to be in contact, even if they do not share hydrogen bonds. This is illustrated in. Between two contact maps CM 1  V 1 , E 1  and CM 2  V 2 , E 2 , the CMO's objective is to find a one-to-one mapping between a subset of V 1 and a subset of V 2 that both preserves the total ordering of the mapped residues and maximizes the number of common edges (NCE), which is the number of times two nodes connected by an edge in E 1 are mapped to two nodes connected by an edge in E 2. Such a mapping is represented by a sequence of mapped pairs (a 1 $ b 1 , a 2 $ b 2 ,. .. , a n $ b n ), where the i th mapped pair a i $ b i means that node a i from the first contact map is mapped to node b i from the second contact map. The similarity between two proteins is then measured by the edge correctness of their alignment (EC), which is the ratio between NCE and their total number of contact edges:An example of an optimal CMO alignment is presented in. CMO, which is a special case of the maximum common edgeinduced subgraph problem, is both NP-hard () and hard to approximate (). Thus, researches on CMO took three directions. First, the exact algorithms that aim at finding the optimal solution at the expense of high running times, with best approaches relying on integer programming formulations of CMO, coupled with branch and bound strategies (). Second, the heuristic algorithms that aim at smaller running times at the expense of the quality of the solutions, with best approaches relying on eigen-decomposition of the contact maps (). Finally, the polynomial-time approximation algorithms that aim at finding a solution within a given error threshold , with time complexity that is polynomial with respect to the input data length, but exponential with respect to (). alignment tools such as Matching-based Integrative GRAph ALigner (MI-GRAAL), where the topological similarity between the to-be-mapped nodes is measured by the similarity between their 73 graphlet degrees (). Graphlet degree-based network alignment methods are known to be robust to noisy interaction/edges (Milenkovict al., 2010).
Our contributionBy extending the notion of graphlet degree to the case of ordered graphs, we introduce GR-Align, a novel heuristic for comparing protein structures based on their CMO. First, on a small benchmark from the literature (Proteus_300, 44 850 protein domain pairs), we show that GR-Align is up to 1247 times faster than the state-of-the-art CMO solvers, A_purva (), MSVNS () and AlEigen7 (), whereas it produces similarity scores that are in better agreements with the gold standard protein structure classification SCOP. Second, on a large dataset (the Gold-standard benchmark dataset, 3 207 270 domain pairs), we show that GR-Align is particularly suited for database searches. It is up to 1658 times faster than the state-of-the-art protein structure comparison methods, DaliLite (), TMAlign () and MATT (), whereas it achieves comparable classification performances. Finally, for flexible proteins, we show that GR-Align's alignments are more informative than traditional ones, as the top scoring alignments are in better agreements with the SCOP classification and have better coverage in terms of mapped residues.
MATERIALS AND METHODS
GR-Align principleOrdered graphlets and orbits. Because the nodes of contact maps are ordered, we first extend the notion of graphlets and graphlet degrees to the case of ordered graphs. Ordered graphlets are small, connected, nonisomorphic and induced subgraphs of an ordered graph, whose nodes inherit the strict total ordering of their originating graph. Because the only order-preserving automorphism is the identity, each node in an ordered graphlet defines a different automorphism orbit. The i th ordered graphlet degree of node v, denoted by d i v , is the number of times an ordered graphlet touches the node v at orbit i. Because we aim at low computational times, we focused on the five 2-and 3-node ordered graphlets that are presented in, which define 14 orbits. Each node v of a contact map is thus described by a 14-dimensional vector d 1 v , d 2 v , :::, d 14 v . For a given contact map CM  V, E, computing all 2-and 3-node ordered graphlet degrees is done in a preprocessing step in OjVj  d 2  time, where jVj is the number of nodes and d is the maximum degree of a node. In the general case, d could be at most jVj  1, which leads to a cubic worst time complexity, but in a contact map, the degree of a node is limited by the number of residues that can fit in a sphere of radius. In practice, using a distance threshold of 7.5 A  , d 20, leads to a linear worst time complexity.Ordered graphlet degree similarity. Between two nodes u and v, we define the ordered graphlet degree similarity (S) as follows:which is a similarity score in, that rewards mapping nodes having similar local topologies.Alignment algorithm. The alignment between two contact maps having, respectively, n 1 and n 2 nodes is computed using the NeedlemanWunsch dynamic programming algorithm (), where the score of mapping two nodes is their ordered graphlet degree similarity, and where the gap cost is zero, as in the original CMO. It corresponds to the following dynamic programming recurrence:T u, 0  0, T 0, v  0, T u, v  max T u  1v  1  Su, v, T u  1v, T uv  1 3Finding the optimal alignment score requires computing T n 1 , n 2 , which is done in On 1  n 2  time. Retrieving the corresponding alignment is done in On 1  n 2  time.
Experimental settings2.2.1 Contact map generation We generated our contact maps in the following way. The atoms' coordinates are taken from the PDB files coming either from the SCOP classification of proteins v1.75b for the Skolnick set and the Proteus_300 set, or from the Astral compendium v1.75b. Only the first entries are used when a structure is described by several models and when an atom is assigned multiple coordinates. Two amino acids u and v are in contact if the Euclidean distance between their-carbons is smaller than a distance threshold. As in previous studies, we do not create contact edges between nodes corresponding to residues that are consecutive in the protein sequence. The effect of the distance threshold on the classification performance of GR-Align is discussed in Section 3.2.The Gold-standard benchmark dataset. Introduced in, the Gold-standard benchmark dataset contains protein domains that are consistently defined in both SCOP v1.75 and CATH v3.2.0 (i.e.with domain overlap 480%) and that share 550% of sequence identity. Then, the Gold-standard benchmark only considers the domain pairs that are consistently classified across the SCOP fold classification and. The five 2-and 3-node ordered graphlets and the corresponding 14 automorphism orbits. The ordering of the graphlet nodes within each graphlet G i , i 2 f1,. .. , 5g is represented by their colors: white nodes 5 gray nodes 5 black nodes the CATH topology classification. We additionally removed the six multiple chain domains to avoid residue ordering ambiguities, leading to 6747 domains having from 21 to 1147 residues, and to 3 207 270 domain pairs. The Astral_40 database. Astral_40 () is a derivative of SCOP database, so that it only contains protein domains having 540% sequence identity. It contains 11 211 domains, from which we remove the 51 multiple chain domains to avoid residue ordering ambiguities. The 11 160 remaining domains have 211419 residues.
Datasets
EvaluationRetrieved edge rate analysis. Let NCE heur be the number of common contact edges found in a heuristic alignment, and NCE opt be the optimal number of common contacts. The retrieved edge rate RER  NCE heur =NCE opt measures how close the heuristic solution is to the optimal one in terms of the number of common contact edges. Because computing NCE opt is NP-hard, we use the following property of the exact solver A_purva: as it is a branch and bound algorithm, when a computation ends, it returns both a lower-bound (LB) and an upperbound (UB) on NCE opt. If LB  UB, then A_purva's alignment is optimal and RER  NCE heur =LB, otherwise RER is approximated by averaging its lower and upper bounds:Agreement with reference classifications. Here, we assess the classification performance of our new distance measure against reference classifications. First, clustering algorithms rely on the early retrieved pairs (i.e. the ones at the shortest distances) to build their clusters. The nearest neighbor identification rate (NNI) is a simple way of assessing the quality of the early retrieved pairs, by counting the number of times a protein structure p 1 and its nearest neighbor p 2 are from the same class in the reference classification. Then, the overall agreement between a protein structure distance and a protein structure classification is evaluated using precision-recall curves analyses (). Using a given threshold on the structural distance between the proteins, four values are computed: the true positives, TP , the number of structure pairs coming from the same class and having pairwise distances smaller than ; the true negatives, TN , the number of structure pairs coming from different classes and having pairwise distances greater than or equal to ; the false negatives, FN , the number of structure pairs coming from the same class and having pairwise distances greater than or equal to ; and the false positives, FP , the number of structure pairs coming from different classes and having pairwise distances smaller than. The precisionrecall curve plots the precision, TP =TP  FP , against the recall, TP =TP  FN , when is varied from the minimum to the maximum distance. The area under the precision-recall curve (AUPRC) measures the average precision of the protein structure distance. Thus, the closer the AUPRC is to one, the better is the agreement between considered distance and the considered classification. Another standard method is the Receiver-Operating Characteristic (ROC) curve analysis (), where the true-positive rates, TP =TP  FN , are plotted against the false-positive rates, FP =FP  TN , which are obtained when is varied from the minimum to the maximum distance. The area under the ROC curve (AUC) is equal to the probability that the considered distance score will rank a randomly chosen pair of protein structures coming from the same class before a randomly chosen pair of protein structures coming from different classes. However, ROC curves are dependent on the ratio between the number of elements coming from the same class and the number of elements coming from different classes. Precision-recall curves are known to be more resilient in this respect ().
Comparison with other methodsWe first compare GR-Align with state-of-the-art CMO solvers: the exact solver A_purva () that is used here as a slow but accurate heuristic, and the two heuristics MSVNS () and AlEigen7 (). When assessing the classification ability of GR-Align, we compare it with state-of-the-art protein structure comparison methods, namely, TMAlign (), DaliLite () and MATT (). TM-Align produces rigid alignments that maximize the TM-Score, which is a derivative of the root mean squared deviation of the superimposed coordinates (RMSD c ). Although DaliLite does not consider the RMSD c , it also tends to produce rigid alignments, as it penalizes matching internal distances that have420% of differences. On the opposite, MATT produces flexible alignments by combining small rigid fragments. We additionally compare Gr-Align with two fast heuristics, namely, Yakusa, which uses a blast-like algorithm with a structural alphabet based on dihedral angles, and Fast, which finds the longest alignments having a RMSD c smaller than 2 A  using a heuristic-based on five-residue long fragments.
RESULTS
Comparing CMO-based methodsFirst, we compare GR-Align with state-of-the-art CMO solvers, namely, A_purva, MSVNS and AlEigen7, in terms of running time, the quality of their heuristic solutions and the agreements with the SCOP classification. We do this on our smallest dataset, the Protein_300 set, as computing the corresponding 44 850 alignments already represents the limit of previous solvers. We limit A_purva's computations to 500 iterations without branch and bound [the setting used in () for obtaining faster computations], which implies that A_purva's solutions are not always optimal. AlEigen7 is run with its default settings and MSVNS is run with its recommended settings (version 3, with 10 restarts). We use the 7.5 A  contact maps fromthat were also used in several CMOrelated papers ().summarizes the performance comparison between the CMO solvers. First, in terms of overlap between the contact maps, we observe two tendencies. On one hand, when two protein domains come from the same SCOP family, the contact maps have large edge-correctness (68.4% on average according to A_purva), and the best approximations are found by A_purva (RER. S.F  99.4%), followed by GR-Align (RER S.F.  86.6%), AlEigen7 (RER S.F.  86.0%) and MSVNS (RER S.F.  80.9%), i.e.all CMO solvers associate high similarity scores to protein domains coming from the same family. On the other hand, when two protein domains come from different SCOP families, the contact maps have small edge correctness (31.4% on average according to A_purva), and the best approximations are found by MSVNS (RER D.F.  88.2%), followed by AlEigen7 (RER D.F.  87.5%), A_purva (RER D.F  81.2%) and GR-Align (RER D.F.  57.5%), i.e. only GR-Align associates low scores to the protein domains coming from different families. Because classification relies heavily on the highest scoring pairs for building clusters (), the ability of GR-Align to finely approximate the high scores of similar proteins, while pushing down the scores of dissimilar proteins, leads to its best classification performance, as GR-Align achieves the highest NNI (100%), the highest average precision (area under the precision recall curve of 96.6%) and the highest AUC (99.6%). The corresponding precision-recall and ROC curves are presented in Supplementary. Finally, GR-Align is the fastest CMO heuristics, as it requires only 1 min 54.82 s for computing the 44 850 alignments of the Proteus_300 set, including 1.52 s for the preprocessing step, being $78 times faster than AlEigen7, 169 times faster than A_purva and 1247 times faster than MSVNS.
Effect of the distance thresholdPrevious CMO-related studies () suggest that using larger distance threshold when generating contact maps may lead to higher classification performances. However, because the time complexities of the proposed CMO solvers depend on the number of edges in the contact maps, and thus, on , these studies are limited to both small datasets and to small value of (up to 10 A  ). Here, on the large Gold-standard benchmark (3 207 270 protein domain pairs), we measure the classification performance of Gr-Align when the distance threshold varies from 520 A  , in increments of 0.5 A . Both the NNI and the AUPRC reach their maximum for between 11.5 and 12 A  , with NNI  88.8% and AUPRC  57.6%. The AUC stays488% for all between 8 and 12.5 A  (the results are presented in details in Supplementary). Hence, we only consider a distance threshold of 12 A  in the remainder of the article. This large distance threshold makes the other CMO methods not applicable, as their time complexities strongly depend on the number of edges in the contact maps, and thus, on .
Large-scale comparisonsWe use the Gold-standard benchmark dataset for assessing the classification performance of GR-Align versus the state-of-theart protein structure classification methods. On this benchmark, GR-Align (using edge-correctness and 12 A  contact maps) is compared with TM-Align (using TM-score), DaliLite (using Z-score), MATT (using raw score, as using P-values resulted in lower classification performances of MATT), Yakusa (using Z-score) and FAST (using normalised score). The agreement between the protein structure comparison methods and the CATH Topology classification is evaluated using nearest neighbor identification, precision-recall curve analysis and ROC curve analysis. First, GR-Align is the fastest of the tested comparison methods and requires only 1 h 42 min (including its preprocessing step) for computing the 3 207 270 protein pairs of the Goldstandard benchmark dataset (). It is $8 times faster than Yakusa, 79 times faster than TM-Align, 489 times faster than MATT and 1658 times faster than DaliLite. Only FAST achieved faster computation, but it returned only 2241 alignments, leading to poor classification performances. This is probably because the hard-coded thresholds in FAST heuristic are too stringent for recovering the distant homology relationships of CATH Topology. Second, the classification performance of GR-Align, measured with respect to CATH Topology, is comparable with the performances of much slower tools. The nearest neighbors associated to each query protein domain come from the same Topology in 90.9% of the cases for DaliLite, 89.2% for MATT, 88.6% for both GR-Align and TM-Align, 72.3% for Yakusa and only 4.3% for FAST. When considering all protein pairs, the average precisions are 85.3% for DaliLite, 75.6% for TM-Align, 57.5% for GR-Align, 51.5% for Matt, 19.8% for Yakusa, and only 3.62% for FAST. The corresponding precision-recall curves are presented in, whereas the ROC curves are presented in Supplementary. Because CATH is built using rigid body superimposition-based alignments, the performances of TM-Align (which favors low RMSD of superimposed coordinates) and of DaliLite (which favors low distance differences) are expected. Here, the real contender of GR-Align is MATT, which is the only other flexible method. GR-Align and MATT achieve similar classification performances, whereas GR-Align is 489 times faster.Note: It is done using the Proteus_300 dataset. GR-Align (on column 2) is compared with AlEigen7, A_purva and MSVNS (columns 3, 4 and 5, respectively). Using A_purva's bounds on the optimal NCE, row 2 presents the retrieved edge rate that is achieved by each method on the 1350 domain pairs in which both domains come from the same SCOP families (RER S.F.). Row 3 presents the retrieved edge rate that is achieved on the 43 500 pairs in which the two domains come from different SCOP families (RER D.F.). Row 4 presents the NNIs, whereas rows 5 and 6 show the AUPRC and under the ROC curve (AUC) that are obtained by the scoring scheme of each method. Finally, row 7 presents the running time needed for computing the 44 850 alignments of the Proteus_300 set.
Aligning flexible proteinsGR-Align does not minimize the root-mean-square deviation of the alignments, and thus allows flexibility between the mapped structures. When aligning flexible proteins, we find that GRAlign's alignments are significantly different from the ones produced by traditional alignment methods such as DaliLite, MATT and TM-Align. GR-Align thus provides alternative homology relationships between protein structures. To highlight these differences in the alignments, we focus on a specific protein family called Calmodulin-like. Calmodulins are small ($145 residues) calcium-binding messenger proteins that are expressed in all eukaryotic cells, composed of two rigid calcium-binding EFhand units that are connected by a flexible linker (an EF-hand is a small helix-loop-helix structural motif, and an 'EF-hand' unit contains two EF-hands). Calmodulins are well studied because of their flexible nature that allows them to bind a large variety of targets by wrapping around them (). Choosing the human Calmodulin (144 residues; SCOP_id d1clla_) as a query, we use GR-Align, DaliLite, MATT and TM-Align to find the 10 most similar protein domains in the Astral40 v1.75B database. GR-Align outperforms all other methods for aligning flexible proteins (). In terms of running time, GR-Align requires 1 min 58 s for computing the 1 1154 alignments, followed by TMAlign (18 min17 s), MATT (1 h 43 min) and DaliLite (5 h 7 min). In terms of agreements with the SCOP family classification, GRAlign retrieves 90% of Calmodulin-like protein domains, whereas DaliLite, MATT and TM-Align retrieve 80, 40 and 40% of Calmodulin-like domains, respectively. The returned alignments are explained in details in Supplementary Tables S1 and S2. Also, when retrieving Calmodulin-like proteins, GR-Align's alignments are long, mapping on average 95.9% of d1clla_'s residues. In comparison, DaliLite, MATT and TM-Align map on average 71.9, 70.0 and 67.2% of the residues, respectively. GR-Align's alignments are thus more informative and allow transferring more information across proteins. An example is provided in Supplementary Table S3, where GR-Align's flexible alignment allows uncovering the rigid and flexible regions of d1clla_.
CONCLUDING REMARKSBy generalizing graphlets and graphlet degrees to ordered graphs, we propose GR-Align, a novel maximum CMO heuristic that is particularly suited for database searches: it is 781247 times faster than the state-of-the-art CMO heuristics A_purva, AlEigen7 and MSVNS and 791658 times faster than the stateof-the-art alignment methods, TM-Align, MATT and DaliLite. GR-Align's similarity score is in better agreement with the SCOP classification than the similarity scores of other CMO heuristics and is on par with the similarity scores of the state-of-the-art protein structure comparison methods. Finally, for flexible proteins, GR-Align's alignments are more informative than the traditional alignments of DaliLite, MATT and TM-Align: they are in better agreement with the SCOP classification and have better coverage in terms of mapped residues, allowing to transfer more information across proteins. In this article, we also extend previous studies about the effect of the distance threshold in the contact map generation on the classification performances, showing that the best classification performances are obtained with a threshold of 12 A  between-carbons. Because GR-Align can be used with any contact map, it also makes possible large-scale analyses for contact maps using different contact definitions, e.g. using distances between-carbons or the minimum distances between the atoms of the two residues. Many parallel computation paradigms can be used to further speed-up GR-Align computations. For the preprocessing step (i.e.graphlet degree computations), each node can be processed independently, allowing a node level parallelism, leading to a potential two order of magnitude improvement of the corresponding running times (as most protein domains have between 100 and 1000 amino acids). For the alignment step, the NeedlemanWunsh and SmithWaterman algorithm both have parallel implementations. In particular, the Single Instruction on Multiple Data implementation proposed inis shown to be up to 16 times faster than the linear implementation, and the Graphics Processing Unit (GPU) implementation proposed inis shown to be up to 30 times faster the linear one, which is faster than the NCBI Blast heuristic. Because the main difference between GR-Align and NeedlemanWunsh or SmithWaterman is the computation of the amino acidNote: For each method (given in rows), column 2 presents the percentage of the 10 nearest neighbors of the human Calmodulin (d1clla_) that come from the correct SCOP family (i.e. 'Calmodulin-like'). For the nearest neighbors in these top 10 that involve Calmodulin-like proteins, column 3 presents the length of the corresponding alignments (on average, as percentage of the number of residues in d1clla_). Finally, column 4 presents the running times that are needed to compute the 11 154 alignments. pairwise costs, using similar parallel implementation techniques would lead to similar speed-ups. The similarity between GR-Align and the traditional sequence alignment algorithms also paves the way to multiple flexible alignments of protein structures. This can be done by modifying the progressive multiple sequence alignment method CLUSTALW (), for which efficient parallel implementations exist ().
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CMO has desirable properties. First, earlier approaches suggest that CMOs are in good agreement with structural classifications of proteins (Andonov et al., 2011; Caprara et al., 2004). Second, contact map-based approaches are known to be resilient to noise (Di Lena et al., 2010). However, none of the proposed algorithms is applicable for large-scale studies. 1.3 Graphlets and graphlet degrees Graphlets are small, connected, non-isomorphic and induced subgraphs of a larger graph G  V, E having n ! 2 nodes (PrzuljPrzulj et al., 2004). Within each graphlet, some nodes are topologically identical to each other: such identical nodes are said to belong to the same automorphism orbit (see Fig. 3: left) (PrzuljPrzulj, 2007). The automorphism orbits represent the topologically different ways that a graphlet can touch a node in V (as illustrated in Fig. 3: right). Graphlets are used to generalize the notion of node degree: the graphlet degree of node n, denoted by d i n , is the number of times a graphlet touches node n at orbit i (PrzuljPrzulj, 2007). In System Biology, graphlet degrees are successfully used to designed network distance measures, such as the graphlet degree distribution agreement. In graphlet degree distribution agreement, using all 25 node graphlets and their corresponding 73 automorphism orbits, the degree distribution is extended to 73 graphlet degree distributions (the first of the 73 graphlet degree distributions is the degree distribution). The similarity between two networks is measured by the similarity between their 73 graphlet degree distributions (PrzuljPrzulj, 2007). Graphlet degrees are also the basis of network Fig. 3. Graphlets and automorphism orbits. Left: graphlet G 1 contains three nodes, a, b and c. The only automorphism that is not the identity is the one that maps node a to c and b to itself (represented by the arrows). It defines two automorphism orbits: {a,c} (in black) and {b} (in white). Right: graphlet G 1 can be mapped onto graph G (in gray) in two topologically distinct ways: in the first case, node v is mapped to orbit {a,c} (black nodes) and plays in G 1 the role of a node having degree equal to 1, whereas in the second case, v is mapped to orbit {b} (white node) and plays in G 1 the role of a node having degree equal to 2 Fig. 1. A protein structure and its corresponding contact map. Left: schematic representation of a protein backbone. Amino acid 2 is in contact with 12 and 4 is in contact with 10 (the corresponding Euclidean distances are smaller than a given threshold). Right: in the corresponding contact map graph, edges connect node 2 with 12 and 4 with 10 Fig. 2. An optimal CMO alignment. The arrows show the orderpreserving mapping between the nodes of the two contact maps 1 $ 1 0 , 2 $ 3 0 , 4 $ 4 0 , 5 $ 5 0 . This alignment yields two common contacts (the bold edges), which is optimal. The corresponding edgecorrectness is 2/3
N.Malod-Dognin and N.Pr ulj at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
GR-Align at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Note: For each method (rows), column 2 presents the percentage of protein domains whose CATH Topology is correctly identified using NNI, column 3 presents the AUPRCs, column 4 presents the AUCs and column 5 presents the running times needed for computing the 3 207 270 alignments of the Gold-standard benchmark dataset. FAST returned only 2241 alignments and Yakusa only 336 341 alignments.
