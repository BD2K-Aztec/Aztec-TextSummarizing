Motivation: Several dynamic programming algorithms for predicting RNA structures with pseudoknots have been proposed that differ dramatically from one another in the classes of structures considered. Results: Here, we use the natural topological classification of RNA structures in terms of irreducible components that are embeddable in the surfaces of fixed genus. We add to the conventional secondary structures four building blocks of genus one in order to construct certain structures of arbitrarily high genus. A corresponding unambiguous multiple context-free grammar provides an efficient dynamic programming approach for energy minimization, partition function and stochastic sampling. It admits a topology-dependent parametrization of pseudoknot penalties that increases the sensitivity and positive predictive value of predicted base pairs by 10â€“20% compared with earlier approaches. More general models based on building blocks of higher genus are also discussed. Availability: The source code of gfold is freely available at
INTRODUCTIONThe global conformation of RNA molecules is to a large extent determined by topological constraints encoded at the level of secondary structure, i.e. by the mutual arrangements of the base paired helices (). In this context, secondary structure is understood in a wider sense that includes pseudoknots. Although the vast majority of RNAs has simple, * To whom correspondence should be addressed. i.e. pseudoknot-free, secondary structure, PseudoBase () lists more than 250 records of pseudoknots determined by a variety of experimental and computational techniques including crystallography, nuclear magnetic resonance, mutational experiments and comparative sequence analysis. In many cases, they are crucial for molecular function. Examples include the catalytic cores of several ribozymes (), programmed frameshifting () and telomerase activity (), reviewed in; Staple and Butcher (2005). Secondary structures can been interpreted as matchings in a graph of permissible base pairs (). The energy of RNA folding is dominated by the stacking of adjacent base pairs, not by the hydrogen bonds of the individual base pairs (). In contrast to maximum weighted matching, the general RNA folding problem with a stacking-based energy function is NPcomplete (). The most commonly used RNA secondary structure prediction tools, including mfold () and the Vienna RNA Package (), therefore exclude pseudoknots. Polynomial-time dynamic programming (DP) algorithms can be devised, however, for certain restricted classes of pseudoknots. In contrast to the O(N 2 ) space and O(N 3 ) time solution for simple secondary structures (), however, most of these approaches are computationally much more demanding. The design of pseudoknot folding algorithms thus has been governed more by the need to limit computational cost and achieve a manageable complexity of the recursion than the conscious choice of a particularly natural search space of RNA structures. As a case in point, the class of structures underlying the algorithm by Rivas and Eddy (1999) (R&Estructures, pknot-R&E) was characterized only in a subsequent publication (). The following references provide a certainly incomplete list of DP approaches to RNA structure prediction using different structure classes characterized in terms of recursion equations and/or stochastic grammars: AkutsuPage: 1077 10761085
Topology and prediction of RNA pseudoknots(2000);;;;;;; Lyngs and Pedersen (2000);; Reeder and; Rivas and Eddy (1999);. The interrelationships of some of these classes of RNA structures have been clarified in part by) and Rdland (2006). In addition to these exact algorithms, a plethora of heuristic approaches to pseudoknot prediction have been proposed in the literature; see e.g. () and the references therein. At least three distinct classification schemes of RNA contact structures have been proposed: Haslinger and Stadler (1999) suggested using book-embeddings,focused on the maximal set of pairwise crossing base pairs andbased the classification on topological embeddings. While these classifications have in common that simple secondary structure forms the most primitive class of structures, they differ already in the construction of the first non-trivial class of pseudoknots. Despite their mathematical appeal, however, no efficient (polynomial-time) algorithms are available for predicting pseudoknotted structures even in the simplest case of three non-crossing RNA structures. A practically workable approach to three non-crossing structures requires the enumeration of an exponentially growing number of diagrams which are then 'filled in' by the means of DP (); a Monte-Carlo approach utilizing the topological approach with a very simple matching-like energy model was explored by (). In this contribution, we show that the topological classification of RNA structures can be translated into efficient DP algorithms. To this end, we introduce -structures and prove that they can be derived from a finite family of abstract shapes called shadows. In Theorem 2.3, we enumerate these four shadows for  = 1, which can be cast as explicit construction rules for a unique multiple context-free grammar (Section 2.3). Corresponding DP algorithms for energy minimization, partition function and Boltzmann-sampling functionalities are implemented in the software package gfold. An important feature is that -structures can be treated algorithmically like pseudoknot-free secondary structures in the sense that there are finitely many motifs, i.e. shadows, for fixed , each of which is assigned a specific energy. Because of the multiplicity of motifs, which rapidly increases with , this allows for a more detailed energy model of pseudoknotted structures based on their topological complexity.
RESULTS
Topology of RNA structuresDiagram representation: RNA molecules are linear biopolymers consisting of the four nucleotides A, U, C and G characterized by a sequence endowed with a unique orientation (5 to 3 ). Each nucleotide can interact (base pair) with at most one other nucleotide by means of specific hydrogen bonds. Only the WatsonCrick pairs GC and AU as well as the wobble GU are admissible. These base pairs determine the secondary structure. Note that we have neglected here base triples and other types of more complex interactions. Secondary structures can thus be represented as graphs where nucleotides are represented by vertices, the backbone of the molecule as well as the hydrogen bonds are represented by edges; seestructure as planar graph represented (a) as ball-and-stick figure with short edges for hydrogen bonds and (b) with linear backbone and semicircles for hydrogen bonds.
Fig. 2. Inflation of edges and verticesto ribbons and disks. Here we have four vertices, five edges and one boundary component ( a, b, c, d, e, f , g, h, i, j). The corresponding surface has Euler characteristic  = ve+r = 0 and genus g = 1, see Equations (2.1) and (2.2).. More conveniently, we use the convention to represent the backbone of the polymer by a horizontally drawn chain. As before, this chain consists of vertices and arcs, respectively, representing the nucleotides and covalent bonds. However, the edges representing the base pairs now are depicted as arcs in the upper half plane; see. We call this representation the diagram of the molecule. Thus, we shall identify a structure with a labelled graph over the vertex set={1,2,...,N} represented by drawing the vertices 1,2,...,N on a horizontal line in the natural order and the arcs (i,j), where i < j, in the upper half plane. Fatgraph representation: in order to understand the topological properties of RNA molecules, we need to pass from the picture of RNA as diagrams or contact graphs to that of topological surfaces. Only the associated surface carries the important invariants leading to a meaningful filtration of RNA structures. Formally, we will view an RNA molecule as a topological surface (Andersen,J.E. et al., submitted for publication). The main idea is to 'thicken' the edges into (untwisted) bands or ribbons and to expand each vertex to a disk as shown in. This inflation of edges leads to a fatgraph D (). A fatgraph, sometimes also called 'ribbon graph' or 'map', is a graph equipped with a cyclic ordering of the incident half edges at each vertex. Thus, D refines its underlying graph D insofar as it encodes the ordering of the ribbons incident on its disks.In the following, we will deal with orientable ribbon graphs. 1 Each ribbon has two boundaries. The first one in counterclockwise order is labeled by an arrowhead, (). A D-cycle or Dboundary component is then constructed by following these directed boundaries from disk to disk, thereby alternating between base pair ribbons and backbone, with the exception of the segment of the boundary component that travels along the bottom of the backbone using only backbone bonds, as shown in Figures 2 and 3. We give a brief tutorial on how to compute boundary components in the Supplementary. Topological invariants such as the number of boundary components of the fatgraph D can thus be computed directly from the underlying diagram D. Furthermore, fatgraphs can be succinctly stored and conveniently manipulated on the computer as pairs of permutations (). The fatgraph D gives rise to a unique surface X D , and each Dcycle corresponds to a boundary component of X D , whose Euler characteristic and genus are given bywhere v,e,r denotes the number of discs, ribbons and boundary components in D (). The graph D can readily be obtained by continuously contracting the ribbons and discs of D. We next make use of an additional feature of RNA structures, namely that the backbone forms a unique oriented chain determined by the covalent bonds. Thus, the backbone can be collapsed to a single disk since the surface is orientable: in the absence of twisted ribbons, there is no particular information in the backbone itself. Indeed, the procedure can be undone by reinflating the disk and rebuilding the backbone. The contraction of the N vertices to a single one and the removal of the (N 1) covalent bonds therefore preserves the Euler characteristic and genus, (). Using the collapsed fatgraph, 2 we see that the relation between the genus of the surface and the number of boundary components is determined by the number of arcs in the upper half plane, namely, 22gr = 1n, (2.3)where n is number of base pairs and r the number of boundary components. The latter can be computed easily and therefore controls the genus of the molecules. Equation (2.3) follows from Equations (2.2) and (2.1), which together yield 22gr = ve, and the observation that the contracted graph has e = n arcs and a single (v = 1) vertex.
-structuresThe shadow of a diagram (RNA structure) is obtained by removing all non-crossing arcs, collapsing all isolated vertices and replacing all remaining stacks (i.e. adjacent parallel arcs) by single arcs (). Shadows can be seen as a generalization of shape abstractions () to pseudoknotted structures (). Similar to the process of contracting the backbone into a single vertex, the projection into a shadow changes neither genus nor the number of boundary components (Andersen,J.E. et al., submitted for publication). However, all information on stack lengths and non-crossing components of the structure is lost in the process. We shall see that the set of structures with shadow S can nevertheless be reconstructed efficiently. To this end we will show that, for fixed genus g, there are only finitely many distinct shadows S g , which will play a central role in constructing folding algorithms. A diagram is irreducible (or connected) () if for any two arcs there is a sequence of arcs so that consecutive arcs cross one other. A shadow is not necessarily irreducible but may be composed of multiple irreducible components or blocks, see (1) of. Any shadow (and in general, any diagram) can be decomposed iteratively by removing irreducible components from bottom to top, i.e. so that that there is no component 'inside' the one just removed. Note that the set I S of irreducible components of the set of shadows, S(S), equals the set of shadows of the irreducible components of the diagram S. Furthermore, the genus of S(S) is the Page: 1079 10761085), a 2-structure having also genus two. Although both shadows have genus two, the HDV-structure cannot be generated iteratively via successive removals of S 1-elements and stacked arcs. The structure displayed on the left is derived via two S 1-substructures. sum of the genera of its irreducible components, i.e.
Topology and prediction of RNA pseudoknotsIt seems natural, therefore, to determine the complexity of a structure by the maximal genus of the components of its shadows. More precisely, we say that S is a -structure if g(S )   holds for all irreducible components of the shadows S(S). By definition, a structure can thus be constructed from the set S  of shadows of genus at most  by inserting certain non-crossing arcs, (). The simplest class of structures are of course 0-structures, obtained by placing non-crossing arcs over the empty structure.
Lemma 2.1. An RNA structure is a 0-structure if and only if it is a simple secondary structure. In particular, a 0-structure always has genus g = 0.Proof. We first observe that a diagram of genus zero contains no crossing arcs. This follows from the fact that genus is a monotone non-decreasing function of the number of arcsand that the genus of the matching (H) consisting of two mutually crossing arcs has only one boundary component and hence genus one; (). Secondly, we observe by induction on the number of arcs that each new non-crossing arc contributes a new boundary component and 22g(r +1) = 1(n+1) shows that the genus remains zero. Structures consisting only of non-crossing arcs therefore have genus zero. Next, we consider structures of arbitrary genus. For their analysis, diagrams without isolated points, i.e. matchings, play a central role. Let C g (n) be the set of matchings of genus g with n arcs, and let c g (n) := |C g (n)| denote its cardinality. As shown by (Andersen,J.E. et al., submitted for publication), the generating functionwhere P g (z) is an integral polynomial of degree (3g1) such that P g (1/4) = 0. The number of genus zero matchings are well known to be given by the Catalan numbers, and Equation (2.5) allows the derivation of explicit formulas for higher genera, for instance,Furthermore, the number c g (2g) of matchings of genus g having exactly 2g arcs, i.e. matchings having exactly one boundary component, is the coefficient of z 2g in P g (z) and is given byExplicitly, we have c 1 (2) = 1, c 2 (4) = 21 and c 3 (6) = 1485 for example. These particular matchings will serve as 'seeds' for our folding algorithm. More precisely, we shall use the following:The special case g = 1, on which we focus in the algorithmic part of this contribution, is explicated in the Supplementary Material. Proof. First note that if there is more than one boundary component, then there must be an arc with different boundary components on its two sides, and removing this arc decreases r by exactly one while preserving g since the number of arcs is given by n = 2g+r 1. Furthermore, if there are  boundary components of length in the polygonal model, then 2n =  since each side of each arc is traversed once by the boundary. For a shadow,  1 = 0 by definition, and  2  1 as one sees directly. It therefore follows that 2n =   3(r 1)+2, so 2n = 4g+2r 2  3r 1, i.e. 4g1  r. Thus, we have n = 2g+(4g1)1 = 6g2, i.e. any shadow can contain at most 6g2 arcs. The lower bound 2g follows directly from n = 2g+r 1 by observing r = 1. Many S g-shadows are in fact -structures for some <g, that is, they can be constructed from elements of S . One key result of this contribution is the following characterization of 1-structures:Theorem 2.
An RNA structure is a 1-structure if and only if its shadow can be decomposed by iteratively removing one of the four shadowsIn particular, 1-structures can have arbitrarily large topological genus. Proof. We only give a sketch here and refer to the Supplementary Material for a full proof. First, we observe that taking the shadow preserves genus. Since (H) is the unique matching with two arcs of genus g = 1, it is contained in every matching of genus g = 1. An arc crossing into (H) preserves the genus and leads to either (K) or (L). While every arc added to (K) increases the genus, there is one possibility to preserve the genus when adding an arc to (L), namely, the addition leading to (M). It remains to observe that no further arc can be added to (M).Before proceeding to algorithmic considerations, we briefly compare the class of -structures with other classes of pseudoknots.investigated the structure classes L&P (), D&P (), A&U () and R&E-class (). The L&P-and D&Pclass are based on the H-type shadow depicted in Theorem 2.3 and hence are proper subsets of the 1-structures. The A&U-class does not cover shadow M but on the other hand contains some configurations that are not 1-structures, and even the 2-structures do not completely contain the A&U-class. Nevertheless, the A&U-class is small: thereThe mutual relationships of pseudoknot-free secondary structure (SS), the two H-shadow classes D&P and L&P, and the classes A&U and R&E, respectively, were already described by. 1-structures and 4-non-crossing structures are added here. are more 1-structures than A&U-structures for any given sequence length (Nebel,M.E. and Weinberg,F., submitted for publication). The R&E class does not impose a limit on the genus of the shadow and hence contains -structure with arbitrarily large . Conversely,shows a 2-structure that is not contained in the R&E class. This example is minimal, i.e. all 1-structures are contained in R&E. Similarly, the set of k-non-crossing structures () has infinitely many shadows for any fixed k  3 (), and hence like R&E, contains -structure with arbitrarily large . We note that every 1-structure is 4-noncrossing; more precisely, shadows (H) and (K) are 3-non-crossing, while shadow (L) and (M) each contain three mutually crossing arcs. ().
Minimum free energy folding of -structures0-structures: We have shown in the previous section that 0structures are simple RNA secondary structures. Their minimum free energy (MFE) configuration can be obtained by DP recursions () derived from a decomposition into suitable substructures. This decomposition can be expressed in terms of a context-free grammar (). In the simplest case, which corresponds to evaluating base pairs only, we consider a single nonterminal symbol S representing an arbitrary diagram over a segment and three terminal symbols to represent isolated vertices (symbol :), openings (symbol () and closings (symbol )) of base pairs. We only need the three production rulesto generate the corresponding language S. 1-structures: We shall use that (i) any 1-structure can be inductively generated from genus one structures and (ii) that every genus one structure has shadow (H), (K), (L) or (M), to specify a multiple context-free grammar (MCFG) (). In contrast to context-free grammars, the non-terminal symbols of MCFGs may consist of multiple components which must be expanded 3 in parallel.. Arcs connecting the two fragments of a pair are noncrossing, while arcs with both endpoints within the same fragment may be crossing such as those withinIn this way, it becomes possible to couple separated parts of a derivation and thus to generate crossings. In the case of 1-structures, the language S is built upon sequences of intervals (fragment-pairs)) are nested arcs. Arcs having endpoints in the different fragments are assumed to be non-crossing; (). For the MCFG, the fragments of a pair are associated with two different (coupled) components of a two-dimensional non-terminal symbol. Accordingly, we (re)introduce the following symbols: @BULLET non-terminal S, representing secondary structure elements (i.e. diagrams without crossing arcs) according to the rules given above; @BULLET non-terminals I and T , representing an arbitrary 1-structure; @BULLET non-terminalswith two components used to represent a fragment-pair with nested arcs, X {H,K,L,M}; and @BULLET terminals ( X ,) X denoting the opening and closing of a base pair, respectively, where X is one of the types H,K,L or M.Different brackets as well as the different non-terminals of pattern X are used to distinguish nestings of the various kinds of shadows. Finally, we specify the production rules of our unambiguous MCFG R 1 :where X {H,K,L,M} distinguishes the four types of pseudoknots.Theorem 2.4. Any RNA 1-structure can be uniquely decomposed via R 1 , and any diagram generated via R 1 is a 1-structure (). Proof. We proceed by induction on the number of shadows. Induction basis: in a 1-structure S that contains no genus 1-shadow, there are no crossings and hence the structure can be decomposed uniquely via the context-free grammar of secondary structures. Induction step: suppose we are given a 1-structure containing r  1 shadows of genus one. We decompose from right to left. Everything Page: 1081 10761085is clear until we encounter a substructure containing a genus 1 shadow. For an arc  = (i,j), we distinguish two cases: (I)  is not crossed, or (II)  is crossed by another arc. In case of (I), there exists a 1-structure nested in . In case of (II), we consider the partial order , where (i,j)  (r,s) if and only if r < i and j < s. Since crossing arcs in a 1-structure are contained in one of the four base types, we distinguish the following scenarios (H): then there exist maximal base pairs  = (r,s), where
Topology and prediction of RNA pseudoknots(K): then there exist maximal base pairs  = (r,s) and  = (u,v),(L): then there exist maximal base pairs  = (r,s) and  = (u,v),(M): then there exist maximal base pairs  = (r,s),  = (u,v) andConsider the set C() of arcs that are crossed by  and the minimal arc  * that crosses any element of C(). Here, minimality is considered with respect to the partial order , where (i,j)  (r,s) if and only if r < i and j < s. It follows that  = (i,j) and  * = (i * ,j * ) induce the fragment pair [i,i * ] and [j * ,. We similarly obtain the corresponding arcs  * ,  * or  * , which induce at most four fragment pairs and correspond to a unique shadow of type (H), (K), (L) or (M) (). By construction, the number of genus 1 shadows of any substructure contained in such a fragment-pair is reduced at least by one, and can by induction hypothesis be uniquely decomposes via R 1. Finally, any structure generated via R 1 is constructed from top-to-bottom by iteratively building configurations of arcs having shadow (H), (K), (L) or (M). Thus, any structure obtained via R 1 is indeed a 1-structure completing the proof of the theorem. 2-structures: a folding algorithm for 2-structures requires an analogous enumeration of all (irreducible) shadows of genus 2. From Equation (2.6), it is straightforward to explicitly derive the 21 shadows of genus 2 with 4 arcs, see Supplementary. As in the case of genus 1, arc insertions into these 21 configurations leads to the complete set of 3472 shadows of genus 2. This large number makes it infeasible to build a practically useful folding algorithms for all 2-structures. It may be useful, however, to deal with a (small) subset of shadows. The complexity of such an algorithm is determined by the complexity of decomposing the individual shadows by means of MCFG production rules reminiscent of those for R 1. For instance, the shadow of the HDV-structure displayed in (2) ofis contained in the R&E class and can therefore be computed in O(N 6 ) time and O(N 4 ) space. However, when resortingand (M). In (1), there are two maximal arcs:, whence the diagram has shadow (H). Here,(4) are analyzed similarly.. Folding of 2-structures: the shadow shown here is not contained in the R&E class of structures and cannot be generated by gap matrices. It can be decomposed, however, using the eight indexes i,j,k,l,m,n,p and q, thus implying a O(N 8 ) time-complexity. This makes use of a six-dimensional gap matrix G j,k,l,m,n,p , which implies O(N 6 ) space-complexity. to our approach its time complexity is at least O(N 8 ): the shadow presented inrequires an DP algorithm with O(N 8 ) timecomplexity and O(N 6 ) space-complexity. It is an ongoing work to devise a sensible folding algorithm for 2-structures. MFE folding of 1-structures: if we make use of a nave tablebased parsing scheme, checking for each subword s of the input and for each rule f whether f can produce s, a rule like: first, we must process O(N 2 ) different with subwords s induced by an input of size n. Secondly, each non-terminal but the first on the right-hand side of the production introduces an additional split point, which specifies the part of s to be generated by the corresponding non-terminal. Since its location may freely be chosen within s, each split point gives rise to another loop variable, and hence contributes a factor O(N) to the runtime. Even if there are much more sophisticated parsing algorithms, it is useful to consider this simple scheme since it directly translates into a recursion for a DP algorithm typically used to compute structures of minimum free energy. Furthermore, it is possible to introduce intermediate steps in the derivation of our language by making use of additional non-terminals and production rules such that the time complexity can be reduced to O(N 6 ). For that purpose, let the nonterminal I represent 1-structures in which no structures with shadowor (M) are nested and the last vertex is paired. We introduce the non-terminal symbols
C.M.Reidys et al.
Fig. 12. The decomposition for 4-dimensional matrices G, Gu, Gv, and Gw.is a marked copy of (U 1 ,U 2 ) used to identify the components which must later be expanded in a coupled way. Accordingly, we replace the derivations of T in R 1 as follows:Note that syntactically, i.e. considered as dot-bracket representations, the 1-structures can be generated by an MCFG, parsable in time O(N 5 ). However, in that case, corresponding brackets are not generated in a coupled way making the grammar inappropriate for algorithmic purposes. As typical for DP and in analogy to our parsing scheme, we use two-dimensional matrices to store the optimal structure over a fragment. The matrix is indexed by the sequence coordinates of the endpoints. It can be a simple secondary structure S or a substructure of higher genus. For the fragment-pairs, i.e. for the non-terminals of dimension two, four-dimensional matrices indexed by the endpoints of both linked fragments are required to store the optimal structure over them. Suppose the pair of fragments isand, and let Gu(i,j;r,s) be the fragment-pair (associated with). The recursions for these matrices, summarized in graphical form in, are determined directly by the grammar. We can conclude from the rewriting rules that the computation of the two-dimensional matrices requires at most three loop variables, and there are O(N 2 ) many of them. Accordingly, O(N 5 ) operations are required to fill the associated two-dimensional matrices. For the four-dimensional matrices, two loop variables are needed for each of the corresponding rewriting rules (those with a left-hand side of dimension two) for there are in each case two split points introduced by the right-hand sides of the corresponding productions. Since we need to compute O(N 4 ) matrix entries, the total run time is in O(N 6 ). Obviously, O(N 4 ) space is required to store these tables. Accordingly, the algorithm can generate all 1-structures in O(N 6 ) time and O(N 4 ) space, i.e. with the same complexity as pknotsRE () (for the larger R&E class). The advantage of 1-structures is that structurally different shadows can be parametrized in different ways, and that the search space is restricted to moderately complex shadows. In contrast, the language of R&E-structures is based on crossings and can neither identify blocks of arcs nor restrict the genus of the shadows. For more structure classes restricted to H-structures, NUPACK () requires O(N 5 ) time and O(N 4 ) space. This is substantially more demanding, of course, than the O(N 4 ) time and O(N 2 ) memory complexity of pknotsRG Reeder and, which, however, deals with a very restricted subset of H-shadow structures, demanding that helices are maximally extended and perfect in the sense that they are not interrupted by bulge-or interior-loops. pknotsRG thus is not guaranteed to find the minimum energy structure within the class H-shadow structures. A related fast heuristic treats the (K)-shadow as a superposition of the two H-shadows ().
Partition function and samplingWe have shown that the MCFG R 1 uniquely generates all 1structures, i.e. it is unambiguous. Consequently, R 1 can be employed to count 1-structures over a given sequence x and to compute the corresponding partition functionwhere R is the universal gas constant, T is the temperature, G(s) is energy of structure s over sequence x and S x is the set of 1structures in which all base pairs (i,j) satisfy the base pairing rules for RNA, i.e. x i x j {AU,UA,GC,CG,GU,UG}. Let N i,j denote the substructure represented by the non-terminal symbol N in R 1 over the fragment, and let X i,j;r,s denote the fragment-pairin the recursions for energy minimization. For each of these symbols, we introduce corresponding partial partition functions. Since the MCFG is unambiguous, the recursions for the partial partition functions are derived by replacing minima by sums and addition of energy contribution by multiplication of partial partition functions, see e.g. (). For instance, the recursion for the partition functions corresponding to the non-terminal symbol T readswhere Edenotes the energy of the loop closed by the base pair (h,,).
Page: 1083 10761085
Topology and prediction of RNA pseudoknotsThe probabilities P N i,j of partial structures of type N over the fragmentand the probabilities P X i,j;r,s of partial structures of type X over the fragment pair [i,j],are readily calculated from the partial partition functions. These 'backward recursions' are analogous to those derived byfor crossing free structures: let N i,j be the set of 1-structures containing N i,j and letbe the set of 1-structures containing the fragment-pair X i,j;r,s. It follows that we have) represent the partition functions for those  s-configurations that contain N i,j and X i,j;r,s , respectively. Taking the sum over all possible  s , we obtainFrom this backward recursion, one immediately derives a stochastic backtracing recursion from the probabilities of partial structures that generates a Boltzmann sample of 1-structures, see Ding and Lawrence (2003);;for analogous constructions. The basic data structure for this sampling is a stack A which stores blocks of the form (i,j,N) [or (i,j;r,s, X)], presenting substructures of non-terminal symbols N over(or X overwhere X 1 =and X 2 =). L is a set of base pairs storing those removed by the decomposition step in the grammar. We initialize with the block (1,n,I) in A, and L = . In each step, we pick up one element in A and decompose it via the grammar with probability Q M /Q N , where Q N is the partition function of the block which is picked up from A, and Q M is the partition function of the target block which is decomposed by the rewriting rule. The base pairs which are removed in the decomposition step are moved to L. For instance, according to the rewriting rule T  I(T )S, the block (i,j,T ) is decomposed into the three blocks:+1,j,S) and one base pair (h,,) which is to be removed. For fixed indices h, , where i  h << j, the probability of decomposing (i,j,T ) readsThe sampling step is iterated until A is empty. The resulting 1-structure is the given by the list L of base pairs.
SoftwareImplementation: MFE folding, partition function including a computation of base pairing probabilities and stochastic backtracing are implemented in gfold. The program is written in C.Energy model: although the presentation above uses a simplified grammar that does not explicitly distinguish the usual loop types, gfold implements the MathewsTurner energy model without dangles () for secondary structure. Run time (A) and peak memory (B) of gfold. Timing information is given for MFE-only (triangles) and partition function with sampling 10 000 structures from the Boltzmann ensemble. To compute error bars, we folded between 10 (N > 100) and 100 (N < 70) randomly generated sequences on a Xeon E5410, 2.33 GHz, 48 GB memory. Memory allocation is independent of the sequence. For N  100, double precision floats are necessary to avoid overflows. This leads to the jump in memory consumption by a factor of 2. Dotted lines indicate the theoretical behavior of O(N 6 ) (time) and O(N 4 ) (space). The slope for CPU time is slightly steeper than the theory since constraints among the six indices introduced by the minimum size of the complex pseudoknot elements lead to an additional speedup for small N.
A Belements. For pseudoknots, we use here an extended version of the DirksPierce (DP) model () that allows different penalties  X for the four topologically distinct pseudoknot types X = H,K,L,M. We have observed that the values of  X have a substantial influence on the accuracy of the predicted structures. In both NUPACK and pknotsRE, a common pseudoknot penalty  1 is assigned whenever two gap matrices cross. Since the number of such crossings depends on the type of the pseudoknot, this algorithmic design would implyIn gfold, these parameters are independent and can be adjusted to improve the performance. Since most experimentally known pseudoknots are of types (H) and (K), we focused in particular on the ratio of  A and  B and found that both sensitivity (the ratio of correctly predicted base pairs to the total number of base pairs in the reference structure) and positive predictive value reach a maximum for  B = 1.3 A. The pseudoknot penalty of type (H) coincides with that of the DP model, i.e.Performance: the current implementation of gfold is applicable to sequences with a length up to N  150 nt on current PC hardware.summarizes the resource requirements. We have observed that gfold provides a substantial increase in both sensitivity and a positive predictive value (PPV, ratio of correctly predicted base pairs to the total number of base pairs in the predicted structure) compared with the alternative DP approaches pknotsRE (), NUPACK () and pknotsRG-mfe (), and that gfold provides a substantial increase in accuracy, cf.. In an evaluation on the entire Pseudobase (van), gfold achieves a sensitivity of 0.762 and PPV of 0.761. However, as detailed in SupplementaryS3, the performance varies substantially between different classes of sequences. Interestingly, the more complex pseudoknots of type (K) are predicted with even higher accuracy (sensitivity 0.889, PPV 0.899) than the simpler, much more frequent type H. The PPV of gfold predictions can be increased by filtering the base pairs of the MFE structure by their probability P of formation, which is computed by the partition function version of gfold. Accepting only base pairs with a predicted base pairing probability P > 0.95 increases the PPV from 0.76 to more than 0.9, (). In order to evaluate the false positive rate, we folded 100 tRNA sequences from Sprinzl's tRNA database (). gfold correctly identifies 94% of them as pseudoknot free. In comparison, NUPACK correctly identifies 86% and pknotsRG-mfe 89% of this sample set.
DISCUSSIONCombinatorial models of pseudoknotted RNA structures are limited in two ways: on the one hand, exact algorithmic folding can be constructed only for certain types of structures; on the other hand, the larger the structure sets are, the more base pairing patterns are contained in them that cannot be realized in nature due to steric constraints. Algorithm design so far has been mostly driven by the desire to reduce computational complexity. The idea behind gfold, in contrast, is to define a more suitable class of structures that can be generated by nesting and concatenating a small number of elementary building blocks. This recursive structure is captured by a fairly simple unambiguous multiple context-free grammar that translates in a canonical way to DP algorithms for computing the minimum energy structure and the partition function in O(N 6 ) time and O(N 4 ) space. In addition to MFE folding, we have implemented the computation of base pairing probabilities and a stochastic backtracing recursion, thus providing the major functionalities of RNA secondary structure prediction software for a very natural class of pseudoknotted structures. The 1-structures considered here strike a balance between the generality necessary to cover almost all known pseudoknotted structures and the restriction to topologically elementary structures that have a good chance to actually correspond to a feasible spatial structure. From a mathematical point of view, the characterization of structures in terms of irreducible components with given topological genus appears particularly natural and promises to reflect closely the ease with which a structure can be embedded in three dimensions. In addition, the grammar underlying gfold naturally distinguishes different types of pseudoknots and admits different energy parameters for them. We observe that this additional freedom of the parametrization leads to a substantial increase of sensitivity of type (K) pseudoknots, (0.63  0.889) and PPV (0.73  0.899) compared wit the usage of a common penalty for each crossing of gap matrices. In terms of prediction accuracy, gfold thus compares favorably also with the leading alternative DP approaches to pseudoknotted structures.
The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Ribbons may also be allowed to twist giving rise to possibly non-orientable surfaces (Massey, 1967). 2 In order to relate this to the standard 2D models of surfaces derived from triangulations: from the collapsed fatgraph we can derive the polygonal model of the surface X D , i.e. a 2n-gon in which edges are identified in pairs; (Fig. 4).
This coupling is only required for components that were generated by the same production step. Components, even if of the same kind, derived in different steps are independent of each other.
