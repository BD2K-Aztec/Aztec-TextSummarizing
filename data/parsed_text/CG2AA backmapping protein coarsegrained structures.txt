Coarse grain (CG) models allow long-scale simulations with a much lower computational cost than that of all-atom simulations. However, the absence of atomistic detail impedes the analysis of specific atomic interactions that are determinant in most interesting biomolecular processes. In order to study these phenomena, it is necessary to reconstruct the atomistic structure from the CG representation. This structure can be analyzed by itself or be used as an onset for atomistic molecular dynamics simulations. In this work, we present a computer program that accurately reconstructs the atomistic structure from a CG model for proteins, using a simple geometrical algorithm. Availability and implementation: The software is free and available online at
IntroductionIn the context of molecular dynamics (MDs), coarse grain (CG) models define particles by grouping several atoms into one bead. This process reduces the number of particles used to describe the system, allowing longer scale (either temporal, spatial or both) simulations in exchange of detail (). Furthermore, the possibility of reconstructing (or backmapping) the atomistic structure from the CG representation allows a multiscale approach. Although a perfect reconstruction is mathematically impossible, approximate reconstructions can be obtained (). For instance, in (), authors construct a complete backmap for the Martini model (). This reconstruction is remarkably accurate for the protein backbone and quite good on the side chains. The backmapping algorithm presented here was developed for the CG model developed in. As in the Martini force field, this model represents the backbone with one bead. Nevertheless, this bead is located in the position of the C a atom instead of the center of mass of the residues backbone atoms. The side chains are modeled with one to four beads, depending on the complexity of the aminoacid. The backbone reconstruction scheme presented in this work can be applied to any model that represents the backbone with a bead at the C a. Of course, side chains reconstructions strongly depend on number and positions of the beads of each CG model but the same approach can be implemented in other models (see Supplementaryfor a Martini CG model example). We also include in our program a backmapping of a CG model for the heme group, which was obtained using a similar approach as the one used to obtain standard CG aminoacids in (). In summary, this tool allows backmapping of CG structures in an accurate manner. Also, due to the simplicity of the algorithm, it can be easily expanded to other particular molecules or chemical groups, such as cofactors and ligands (e.g. the heme group).
MethodsThe algorithm is implemented in Python, foreseeking maximum portability. Numerical calculations are performed with the NumPy) the authors claim that the CO vector of the i-th amino acid points approximately in the direction of the cross product of the vectors C i. We propose a weaker assumption:This cross product lies inside the peptide bond plane (see).Because this plane contains both C i a and C i1 a , the positions of the atoms between them are completely determined. More precisely, we place the C i ; O i and N i1 atoms at distances given by the Amber force field () and the angles reported in () (see Supplementary Materials for details). This gives an accurate reconstruction, except at the N-and C-terminals. Having placed the backbone atoms, the position of the C b (if present) is defined by the tetrahedral arrangement of the atoms bonding the C a. Now, knowing the coordinates of the C a atoms and, having stated the C b positions, we guess the remaining positions of the side chain sequentially. The program computes them as follows. The already determined atoms impose geometric constrains on the positions of the ones yet to place. As expected, the guess is strongly determined by the position of the bead in question. For example, in this model most aminoacids have a bead defined by the C b , the C c and the neighboring hydrogen atoms. In that case, the first step of the side chain reconstruction is to place the C c , given the positions of the C a and C b .Since the vector C b C c     ! points approximately in the direction of the bead, we chose to place the atom at a typical distance for this bond, in a way that it forms a tetrahedral angle and pointing as close as possible in that direction. The process continues atom by atom, taking into account the geometrical information of the aminoacid beads For instance, aromatic rings planes can be reconstructed from bead information. For more details on the backmapping algorithm see Supplementary Figures S1 and S2 particularly. By similar geometric reasoning, the algorithm reconstructs the atom positions from the CG model of the heme group. This model was obtained using an analog approach as the one used to obtain standard CG aminoacids in (). In this particular case, it involves 17 beads, 1 bead for the Fe atom, 12 on the heme plane and 4 beads for the propionate side chains. (Supplementary) The amount of beads used for its description, together with its simple geometry allows us to give an accurate reconstruction. The numerical values of all the geometric constraints (i.e. bond distances, angles and dihedrals values) were taken from the Amber03 Force Field, (). In order to refine the internal coordinates of the side chains and since our motivation is to use the all-atom structure as a starting point of a MDs simulation, we include an energy minimization as part of our standard work flow. Namely, we run a short classical minimization using the Amber14 package () in implicit solvent. (See Supplementary Materials for simulation details) The minimization process is not included as part of this piece of code since it would severely affect portability and, at the same time, users may prefer a different simulation context (i.e. force field or software). We are confident that a user with experience in MDs simulations will find our contribution easy and flexible to use and adapt. As examples, we have selected five different proteins with different secondary structure elements and variable 3D folds. In all cases, a CG representation is obtained from the original PDB structures using an adapted version of the script gently provided by the authors of () (see Supplementary Materials for details). Then, we applied the backmapping algorithm to the CG structure. The backmapped structure was compared with the original crystal structure. The total root mean square deviation (RMSD) of the backbone atoms between the backmapped and the crystal structure ranged from 0.5 to 0.8 A  in the analyzed cases. These values were not significantly modified after minimization. However, in some cases, minimization allowed to correct small imperfections in the relative position of the side chains with respect to their direct neighbors. RMSD calculations for each residue show very small differences for most of the protein structure. Only a few residues located, as expected, in regions with low secondary structure organization had higher deviations (see Supplementary). Two of the selected examples correspond to heme proteins, in which the performance of the heme group backmap was also tested (the reconstruction being accurate on the heme plane, with a total RMSD of 0.61 A  ). In order to test the stability of the obtained structures, we used them as starting points for MDs simulations. More precisely, after solvation and a short thermalization, a 100-ns MD simulation was performed for two of the considered examples. In all cases structures remained stable showing an average RMSD with respect to the original crystal structure of 12.5 A  for the backbone atoms, and lower than 3 A  when considering all the protein atoms (Supplementary). The obtained trajectories were compared with MD simulations starting from the crystal structures, calculating the root-mean-square-fluctuation (RMSF) for each residue in the protein, showing similar results (Supplementary). To further test the backmapping scheme, we backmapped 500 ns a CG-MD trajectory and calculated the RMSD with respect to the crystal structure. The average RMSD resulted 3.289 A  for the backbone atoms and 4.085 A  for all the heavy atoms, which results a reasonable value considering the increased sampling and the expected deviations from the crystal structure in a CG-MD simulation (). From this backmapped CG-MD trajectory, 10 equally spaced snapshots were simulated for 10 ns in explicit solvent. Interestingly, the RMSF obtained in these trajectories is in good agreement with the fluctuations observed in atomistic simulations starting from the corresponding crystal structure, with, again, higher fluctuations. These results further validate the application of this backmapping methodology for combining CG and atomistic simulations in a multiscale approach (Supplementary).
ConclusionWe presented an intuitive, portable, fast, free and easy-to-use method to map CG structures back to all-atom representation. We have tested it in several examples by changing protein structures to CG representation and backmapping them. Examples were selected in order to test the algorithm for different secondary structure elements and 3D structure complexity. Both the backbone and total reconstruction isIn this example, the backmapped structure is superimposed the original accurate except, sometimes, at the more flexible parts of the structure (i.e. ends, loops and long side chains).
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
