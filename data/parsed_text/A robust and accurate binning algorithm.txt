Motivation: With the rapid development of next-generation sequencing techniques, metagenomics, also known as environmental genomics, has emerged as an exciting research area that enables us to analyze the microbial environment in which we live. An important step for metagenomic data analysis is the identification and taxonomic characterization of DNA fragments (reads or contigs) resulting from sequencing a sample of mixed species. This step is referred to as 'binning'. Binning algorithms that are based on sequence similarity and sequence composition markers rely heavily on the reference genomes of known microorganisms or phylogenetic markers. Due to the limited availability of reference genomes and the bias and low availability of markers, these algorithms may not be applicable in all cases. Unsupervised binning algorithms which can handle fragments from unknown species provide an alternative approach. However, existing unsupervised binning algorithms only work on datasets either with balanced species abundance ratios or rather different abundance ratios, but not both. Results: In this article, we present MetaCluster 3.0, an integrated binning method based on the unsupervised top–down separation and bottom–up merging strategy, which can bin metagenomic fragments of species with very balanced abundance ratios (say 1:1) to very different abundance ratios (e.g. 1:24) with consistently higher accuracy than existing methods. Availability: MetaCluster 3.0 can be downloaded at
INTRODUCTIONTraditional microbial genomic studies usually focus on one single individual bacterial strain due to experimental limitations. In fact, all microorganisms in a habitat have various functional effects on one another and their hosts. For example, the diversity of microbes in humans is shown to be associated with common diseases such as inflammatory bowel disease (IBD) () and gastrointestinal disturbance (). Genomic analysis on the collective genomes of all microorganisms from * To whom correspondence should be addressed. an environmental sample (known as metagenomics, environmental genomics or community genomics) becomes essential. One major difficulty of metagenomics lies in the fact that most bacteria (up to 99%) found in environmental samples are unknown and cannot be cultivated and isolated under laboratory conditions (). With high-throughput sequencing technology, one possible solution is to directly sequence DNA fragments of multiple species obtained from the mixed environmental DNA sample (). Some well-known metagenomics projects, including the Acid Mine Drainage Biofilm (AMD) project that analyzes dozens of species () and the Human Gut Microbiome (HGM) project that involves thousands of species (), study fragments obtained from this sequencing approach. DNA fragments of a metagenomics project are usually from multiple genomes and most of the genome sequences are unknown. An important step in metagenomic analysis is to group DNA fragments from similar species together (referred to as binning) () to obtain the microbe distribution of the sample and identify species (including unknown species) within the sample. Depending on different research needs, the binning process could be performed on different taxonomic levels from Kingdom (the highest level) to Species (the lowest level). Traditional binning methods can be roughly classified as similarity based and composition based. Similarity-based methods () align each DNA fragment to known reference genomes. Based on the alignment results [e.g. BLAST hits or selected phylogenetic specific marker genes (, each fragment is assigned to the taxonomic class of the similar reference genomes. Similarity-based methods are usually limited by the availability of known microorganism genomes given that <1% of microorganisms have been cultured and sequenced. On the other hand, composition-based methods group DNA fragments in a supervised or semi-supervised manner using generic features such as genome structure or composition. Structural features, such as composition features of reference genomes or taxonomic marker regions [e.g. 16S rRNA (), recA and rpoB are commonly accepted fingerprint genes], are extracted and used to construct classifiers () for determining DNA fragments from different species or constraints for semi-supervised clustering. These composition-based methods usually suffer from the low availability and reliability of taxonomic markers. For example, studies on the enhanced biological phosphorus removing (EBPR) sludge (), Sargasso Sea () and the Minnesota soil samples() indicate that only 0.17, 0.06 and 0.017% of the DNA fragments, respectively, are known to carry 16S rRNA markers, and the figures are still <1% even if more markers such as recA and rpoB are included. Moreover, the reliability of taxonomic markers has also been challenged () as some species may share multiple markers with other species or multiple kinds of 16S rRNA molecules exist in a single bacterium due to the high mutation and gene exchange ratio of microbes, which might lead to incorrect classifications. A more promising direction is to use unsupervised binning algorithms based on the occurrence frequencies of l-mers (short DNA substrings of length l) of the DNA fragments (). In these approaches, each fragment can be regarded as a vector containing the occurrence frequencies of all possible l-mers in the fragment. The rationale behind these approaches is based on the observation that the l-mer distributions of the fragments in the same genome are more similar than those l-mer distributions of two unrelated species (). Based on this feature, many algorithms [e.g. TETRA (), MetaCluster (), MetaCluster 2.0 () and LikelyBin (have applied different unsupervised clustering methods on fragments based on the l-mer distributions with great success when the abundance ratios of the species in the sample are almost the same. These algorithms tend to cluster fragments into clusters with similar size, and the binning performance of these algorithms will significantly be degraded when the abundance ratios of species are very different, e.g. 1:8 or 1:10. To tackle this problem, another unsupervised clustering method called AbundanceBin () has been introduced recently, which models the distribution of fragments from each species by different Poisson distributions. Fragments from species with high abundance ratios are usually sampled more while fragments from species with low abundance ratios are usually sampled less. Thus, fragments from species with different abundance ratios can be separated by their sampling rates. However, when the species have similar abundance ratios, say 1:1 or 1:2, the sampling rates of fragments from different species are similar and AbundanceBin fails to separate the fragments from these species. AbundanceBin also considers the case when the number of species k is unknown and determines k automatically. The estimation method seems not very effective and cannot predict the correct value when k > 3 in our experiments. None of the above algorithms can handle datasets from balanced species abundance ratios to very different species abundance ratios. In real situations, the abundance ratios are usually unknown and it is desirable to have an algorithm handles datasets with arbitrary abundance ratios. AbundanceBin takes advantage of the differences in abundance ratio of the species to separate the fragments and it is not obvious how to extend AbundanceBin to handle datasets with very balanced abundance ratio. On the other hand, approaches that handle datasets with balanced abundance ratio usually try to cluster fragments into k equal-sized clusters by assuming the number of species in the dataset is k. Thus, species with low abundance ratio are forced to group wrongly with other species. In this article, we present MetaCluster 3.0, an integrated binning algorithm with two phases: topdown clustering (Phase 1) and bottomup merging (Phase 2). In Phase 1, we separate fragments into small groups (clusters) with similar sizes and try to guarantee that the majority of the fragments belong to the same species. After Phase 1, it is possible that fragments from the same species are grouped into different clusters, so in Phase 2, we try to combine these clusters together.outlines the two phases of MetaCluster 3.0. This two-phase strategy relies on the following key observations. First, the difference (we capture this difference using the Spearman distance measure) between two l-mer distributions of fragments from the same species follows a normal distributions. The same is true for the two l-mer distributions of fragments from species of different families. This observation is supported by an empirical study (Section 2.2). Second, the differences in the two normal distributions allow us to derive a probabilistic model to determine how many clusters (k ) we should use in order to guarantee that most of the fragments in the same cluster belong to the same species in Phase 1 and when to merge the clusters to make sure that there will not be too many fragments from other species being merged together. Based on our probabilistic model, if the abundance ratios of the species are more or less the same, the value of k will be similar to the number of species. If the species have very different abundance ratios, k tends to be large and the clusters will be small so that fragments from minority species could be assigned to separate clusters without mixing with fragments from other species. Although fragments of majority species may then be put in different clusters, Phase 2 will try to merge them back. Thus, the issue of varying species abundance ratio is handled. To summarize, MetaCluster 3.0 can (i) determine automatically the number of different species in the sample, which is required asPage: 1491 14891495
Binning algorithm for metagenomic sequencesan input parameter for most unsupervised algorithms (and (ii) classify accurately the metagenomic fragments with balanced species abundance ratios, which cannot be handled by AbundanceBin (), to very different species abundance ratio, which cannot be handled by other unsupervised algorithms () and combinations of these situations, say 1:3:3:9, which cannot be handled by any unsupervised algorithms.
METHODSIn this section, we first define the l-mer feature vector of a fragment that captures the l-mer frequency distribution of the fragment. Then, we describe the Spearman Footrule distance () to represent the difference (distance) between two l-mer feature vectors or their corresponding fragments. We have also tried different similarity measures such as Kendall's Tau () and those mentioned in Wu and Ye (2010);. Spearman Footrule distance seems to be better in terms of performance in our clustering and computational complexity. We remark that there may also be other measures which are appropriate to solve the problem. Next, we will show the result of an empirical study which confirms our key observations. Lastly, we describe the details of topdown clustering (Phase 1) and bottomup merging (Phase 2) together with our probabilistic model which is used to determine the number of clusters to be used in Phase 1 and when to merge two clusters in Phase 2.
l-mer frequency and distance definitionThe DNA composition features of each DNA fragment are represented by the l-mer frequencies of the DNA fragment. As there are four different DNA nucleotides, there are at most 4 l kinds of l-mers in a DNA sequence. If a sliding window of width l is slid along each DNA fragment of length n and the frequency of every l-mer, say f w , w {A,C,G,T} l , is recorded, the total number of l-mers in a DNA fragment would be f w = nl +1. For example, a DNA fragment of length 500 nt has 497 4-mers. The DNA feature vector is defined as, where N(l) is the number of different l-mers. As each DNA fragment can be obtained from either strand of the DNA genome, the frequency of one l-mer and its reverse complement l-mer can be combined together and this process will reduce the size of vector by half,, if l is even. As mentioned in, setting l = 4 is the best (among l = 27) when barcoding a genome with DNA fragment size from 1000 nt to 10 000 nt. Each DNA fragment will be represented by a feature vector with 136 components and the input metagenomic sequencing dataset can be transformed to an n136 matrix with n rows representing n DNA fragments. Our binning method is based on the observation () that the l-mer distributions of those DNA substrings (fragments) from the same genome are similar. The similarity of 4-mer distribution is not limited to the coding region but the whole genome sequence (). We compute the difference of two l-mer distributions from two fragments by measuring the Spearman Footrule distance between their corresponding l-mer feature vectors. Spearman Footrule distance (henceforth referred as Spearman distance) is defined as follows. Consider two DNA fragments A and B with the following 4-mer feature vectors A: (a 1 ,a 2 , ... ,a N(l)) and B: (b 1 ,b 2 , ... ,b N(l) ). The Spearman distance is based on an intuitive definition for comparing two ordered lists. Let r A (a i ) be the rank of a i in the sorted list of a i 's and r A (b i ) be the rank of b i in the sorted list of b i 's. Then the Spearman distance is defined as dist s (A,B) = |r A (a i )r B (b i )|. The smaller the value of the metric, the more similar the vectors are. For vectors with size k, the distance value can range between 0 and k(k +1). Compared with other distance metrics that rely on the exact value of each entry in the feature vectors, Spearman distance, which relies on the rank of the entries, is less sensitive to those entries withunexpectedly large values. Moreover, the Spearman distance gives a more global view of the distance of two feature vectors with respected to all the entries.
Spearman distance distributionTo confirm our observation that both the Spearman distance distributions of the differences between two l-mer distributions of fragments (pairwise fragment distances) from the same species and those from species of different families can be approximated by a normal distribution, we conduct an empirical study for 1000 genomes. For each genome, we randomly selectPage: 1492 14891495
H.C.M.Leung et al.In MetaCluster 3.0, the value of k is determined automatically based on a probabilistic model by restricting the expected number of false positive fragments (from other species) in a cluster to be limited by some predefined threshold t size of the cluster, t  (0,1]. The details of how to determine k are given below. Since the k-median algorithm is a greedy algorithm, it is repeated several dozen times with different initial clustering centers. The one that gives the minimum objective function value will be selected. Now, we show how to determine k. By dividing n fragments into k clusters, the average cluster size is n/k. In each cluster, there are two sets of fragments, fragments from the same species as the center and fragments from species different from the center. The distance between each fragment and the center from the same species can be approximated by N( intra , 2 intra ) while the distance between each fragment and the center from different species can be approximated by N( inter , 2 inter ) (). Given a cluster C i with the total distance between the center c i and each feature vector in the cluster ACi dist s (A,c i ) equals a particular value d i. If s out of n/k fragments (including the center) in the cluster are sampled from the same species with average distance (intraspecies distance) between the center and the rest s1 fragments being x, the probability that there are n/k s false positives equals the probability that the average distance (interspecies distance) between the center and the n/k s fragments from different species will be). By considering all possible values of s and x, the expected number of false positives in a cluster can be calculated as followsis the probability density function of a normal distribution with mean  and variance  2. Since the expected number of false positives decreases with the value of k , MetaCluster 3.0 increases the value of k until the expected number of false positives in a cluster  tn/k. In the experiments, we set t = 5% such that the expected accuracy is over 95% for the first phase. Based on the above calculation, we expect that k can be much larger than the number of species if the species have very different abundance ratios such that fragments from species with high abundance ratios will be divided into more clusters while fragments from species with low abundance ratios will be grouped into a single cluster or fewer clusters. As for the same genome, the l-mer distribution of some special genome region (such as insertion and exogenous transferred regions) can be very different from general genome regions. These data points could be considered outliers and should be removed. In MetaCluster 3.0, those data points with center distance larger than +2 should be removed as outliers, where  and  are the average distance and standard deviation between a data point in the cluster and the center, respectively. In some cases, the number of outlier DNA fragments from the majority species could be very large and might have special biological meaning. So these fragments will be grouped together as some special clusters which will be excluded from the merging phase, but reported specifically for the attention of biologists.
Bottomup merging of the clustersAfter dividing the DNA fragments into k clusters, a bottomup merging phase is introduced to merge the clusters from the same species into one cluster based on the intercluster similarity, i.e. intercluster distance. The intercluster distance of cluster C 1 and cluster C 2 is taken to be the average of all distances between pairs of DNA fragments A in C 1 and B inWhen the number of species k in the sample is known, MetaCluster 3.0 merges the pair of clusters with the minimum intercluster distance greedily until there are k large clusters. In practical situations, the number of species k is usually unknown and MetaCluster 3.0 should determine when to stop merging so that clusters that contain fragments from different species will not be merged into a cluster. Based on the observation that the Spearman distance between two fragments from the same species is usually smaller than the Spearman distance between two fragments from different species, MetaCluster 3.0 merges two clusters C 1 and C 2 with average intracluster distance d 1 and d 2 , respectively, if and only if the intercluster distance dist(C 1 , C 2 ) is similar to d 1 and d 2 , i.e.  dist(C 1 , C 2 )  average(d 1 , d 2 ) for some threshold   (0,1]. The value of threshold  can be determined by minimizing the expected false negative and false positive fragments. Assume all fragments in C 1 (C 2 ) are sampled from the same species, the intracluster distance can be modeled by the intraspecies distance distribution. The probability that MetaCluster 3.0 does not merge two clusters incorrectly (false negative) can be calculated as follow:Similarly, the probability that MetaCluster 3.0 merges two clusters incorrectly (false positive) can be calculated.For the parameters estimated from bacteria genome, setting the threshold  = 0.79 can minimize the expected false negative and false positive (1) + (2)fragments. This threshold is similar to the optimal threshold  = 0.83 found in the simulated data. Unlike all other unsupervised approaches which do not provide any taxonomic annotation for the clusters, MetaCluster 3.0 can label (annotate) the clusters with taxonomic information by calculating the average Spearman distance between each cluster and the 4mer feature vectors of the known genome. Although many genomes are still unknown, it will provide an approximated annotation at high taxonomic ranks such as Family or Order, which helps the biologists to determine followup experiments for further investigation.
RESULTSIn this section, we analyze the performance of the binning algorithm, MetaCluster 3.0, based on the simulated metagenomic datasets. We compare the performance of MetaCluster 3.0 with AbundanceBin () and our previous version MetaCluster 2.0 (). We have not compared other unsupervised binning algorithms because MetaCluster 2.0 outperforms these algorithms in similar experimental setting (). We use the default parameters for AbundanceBin and MetaCluster 2.0. We have conducted three sets of experiments. (i) We fix the number of species to be 2 and vary the abundance ratio from the balanced situation 1:1 to the unbalanced situation of 1:24. We assume that the number of species in the dataset is known. The performance of MetaCluster 3.0 is consistently more accurate for all datasets with different abundance ratios. (ii) We also compare the performance of MetaCluster 3.0 with AbundanceBin based on datasets with more species with different abundance ratios. In this set of experiments, we also assume that the number of species is known. The results show that MetaCluster 3.0 outperforms AbundanceBin. In particular, the accuracy of MetaCluster 3.0 is three times better than that of AbundanceBin when the species abundance ratio is balanced.(iii) Lastly, we demonstrate that MetaCluster 3.0 works better than AbundanceBin if the number of species in the dataset is unknown. In all the experiments, we use the parameters t = 5% and  = 0.8. We have varied the parameters and the results are similar.
Page: 1493 14891495
Binning algorithm for metagenomic sequences
A B
The datasetsA total of 120 pairs (240 genomes) of bacteria are randomly selected and their complete reference genomes are downloaded from the NCBI reference genomes database: ftp.ncbi.nih.gov/genomes/ to generate 1080 test datasets. These 120 pairs of genomes are equally divided into three major testing categories according to different taxonomic differentia levels. (i) Family: DNA fragments from the same Order but different Families; (ii) Order: DNA fragments from the same Class but different Orders; and (iii) Class: DNA fragments from different Classes. For each pair of bacteria genomes, nine synthetic metagenomic datasets are generated with sequencing fragments sampled from these two genomes of different relative abundance ratios, as 1:1, 1:2, 1:4, 1:6, 1:8, 1:10, 1:14, 1:18 and 1:24. The lengths of these DNA fragments is 1000 nt and the sequencing error rate is 1% which is the sequencing error rate of major nextgeneration sequencing platform, i.e. Roche 454, Illumina Solexa and Applied Biosystems SOLiD. This dataset is used to estimate the performance of MetaCluster 3.0 under different species similarity. Another set of 40 multispecies test datasets containing 3 and 4 genomes are also generated similarly. For each dataset, MetaCluster 2.0, MetaCluster 3.0 and AbundanceBin were used to cluster the DNA fragments. Each cluster was assigned to the species with the largest number of fragments in the cluster. The binning accuracy, following other approaches (), is defined as the total number of true positive fragments divided by the total number of fragments in the clusters. The performance of the algorithms is measured by the average accuracy among all datasets. Since our approach is unsupervised, no information about the species, including the number of species required by existing binning algorithms, is needed to be given to MetaCluster. However, in order to have a fair evaluation and comparison, the number of species in the dataset was given to the binning algorithms including
Experiments on different abundance ratioFor all the unsupervised binning methods, relative abundance ratio of species is a major factor affecting the performance of binning algorithms. We first use the typical datasets with two species for evaluation. We compare the performance of MetaCluster 3.0 with AbundanceBin and MetaCluster 2.0 using abundance ratio of 1:1, 1:2, 1:4, 1:6, 1:8, 1:10, 1:14, 1:18 and 1:24, where the minority genome's DNA fragments are about 50% to only 4% of the total content. The performances of these three methods are shown in. The performance of MetaCluster 2.0 significantly deteriorates when the abundance ratio is larger than 1:8. On the other hand, the performance of AbundanceBin is very good when abundance ratio is larger than 1:10, but not acceptable when the abundance ratio is less than 1:8. In contrast with these two methods, the binning accuracy of MetaCluster 3.0 is consistently high for complex species abundance ratio from exactly equal situation, say 1:1, to the extremely unbalance situation, say 1:24. We also compare the performance of these three methods based on three different taxonomic levels described in Section 3.1, i.e. (i) Family, (ii) Order and (iii) Class.shows the binning accuracy of MetaCluster 3.0, MetaCluster 2.0 and AbunanceBin based on these three testing categories. MetaCluster 3.0 performs consistently well (over 90% accuracy) even the taxonomic level is as low as Family.
Experiments on multispecies test datasetsIncreasing the number of species in the datasets will significantly increase the difficulty for binning algorithms. With more species, the species abundance distribution becomes more complicated. The most common situation is when the abundance ratio between the majority species and minority species is large with other species having similar abundance ratios. We generate two categories of multispecies test datasets. One category contains 20 threespecies combinations, where for each combination, we generate one dataset of balanced abundance ratio say, 1:1:1 and one dataset of abundance ratio is 1:3:9. The other category contains 20 four-species combinations. For each combination, we generate one dataset of balanced abundance ratio say, 1:1:1:1 and one dataset of abundance ratio is 1:3:3:9. These latter unbalanced datasets could be considered as the simplified simulated model for practical multispecies cases with arbitrary abundance ratios. The binning performances of MetaCluster 3.0 and AbundanceBin are shown in. AbundanceBin performs much better when the species have quite different abundance ratios, but the accuracy drops substantially when the species have the same abundance ratios. This result matches our observation and indicates that the AbundanceBin relies heavily on the very unbalanced abundance Page: 1494 14891495The average accuracy is the overall performance of the algorithms and the number of clusters is the number of times the algorithms estimate the number of clusters in the dataset as the corresponding number. ratio among species to do the clustering. On the other hand, the performance of MetaCluster 3.0 is quite consistent in both cases although there is a drop in the accuracy for the unbalanced case. It seems that MetaCluster 3.0 may be more suitable for practical applications.
H.C.M.Leung et al.
Unknown number of speciesWe compare the performance of MetaCluster 3.0 and AbundanceBin when the numbers of species in the samples are unknown. Recall that we set a threshold  = 0.8 for determining the stopping condition in the merging phase in MetaCluster 3.0. The average accuracy of the resulting clusters can be found inand are consistent with all other experiments. MetaCluster 3.0 performs better than AbundanceBin, in particular for the case of balanced species abundance ratios. Note that the accuracy of MetaCluster 3.0 drops about 2% when k is unknown. However, the accuracy of AbundanceBin drops 10% for the datasets of three species with abundance ratio 1:3:9 and 2% for other datasets. In addition to the average accuracy of the resulting clusters, we also compare the number of clusters reported by the tools. For each test case of fixed number of species and abundance ratios, we have repeated the experiments 20 times. In, we record the number of clusters reported in each case and the percentage of cases that the tools report correctly. Note that if the case has three species, the perfect answer should be three resulting clusters. In general, MetaCluster 3.0 can predict the number of species in the datasets more accurately than AbundanceBin which usually underestimates the number of species in a sample. For the dataset of four species with abundance ratio 1:3:3:9, MetaCluster 3.0 performs not as well with 35% of the dataset clustered into five groups, instead of four. It is because MetaCluster 3.0 separates the reads in the species with the highest abundance ratio into two parts, one with the normal fragments and the other with fragments from special region, say the coding regions, which have a different k-mer distribution as other regions in the genome. It may be solved by lowering the threshold  for those data with extremely unbalanced abundance ratios. However, lowering the threshold  may introduce some false positive merging and further study is required for solving this problem. Although MetaCluster 3.0 does not perform very well in this dataset, it can still outperform AbundanceBin which fails to estimate the correct number of clusters (four clusters) in all cases.shows the running time and memory consumption of MetaCluster 3.0, MetaCluster 2.
Comparison on running time and memory consumption
and AbundanceBin for differentPage: 1495 14891495dataset sizes. The running times of the three algorithms increase with the input sizes. The running time of MetaCluster 3.0 and MetaCluster 2.0 are similar and much shorter than the running time of AbundanceBin, as AbundanceBin is required to construct a model for the distribution of reads and to repeat clustering the reads to estimate the number of clusters. The memory consumption of the three algorithms also increases with the input size but MetaCluster 3.0 consumes the least amount of memory.
Binning algorithm for metagenomic sequences
CONCLUSIONSIn this article, we propose a two-phase unsupervised binning algorithm to bin metagenomic fragments with mixed species abundance ratios. Based on the differences in the distribution of a distance measure between fragments of the same species and fragments from different species, our approach can guarantee the quality of our resulting clusters. The performance of our approach, MetaCluster 3.0, is shown to be better than all existing unsupervised algorithms. However, binning metagenomic fragments remains a challenging problem. All existing algorithms (including MetaCluster 3.0) can only handle datasets with not too many species and the accuracy decrease sharply when the number of species is over 10. In the practical situations, a sample may contain genomes of thousands of kinds of species for which all existing binning tools fail. Another limitation of MetaCluster 3.0, is it only works on fragments with length at least 500 nt. As the current high-throughput sequencing technology produces reads with lengths from 50 nt to 150 nt only, MetaCluster 3.0 relies on assembly tools for producing high-quality contigs with longer lengths. However, some binning algorithms, e.g. AbundanceBin, can work directly on short reads. Further research is required to come up with an effective tool for binning short reads directly with mixed species abundance ratio or assembling reads in metagenomic data accurately.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
million pairs of fragments of 1000 nt long, and compute the Spearman distances of all pairs. This distance distribution is referred as intradistance distribution (Fig. 2). For fragments from different families, we select 10 000 pairs of genomes in which the two genomes of each pair belong to different families but the same order. For each pair of genomes, we select one fragment of length 1000 nt from each genome and compute the Spearman distance of these two fragments. We repeat this randomly for 1 million pairs of fragments. This distance distribution is referred as the interdistance distribution (Fig. 2). From our empirical study, we can see that these two distributions can be approximated by normal distributions and there is a significant difference between these two distributions. Although the distribution can be modeled by a mixed Gaussian distribution because of differences in inter and intra distances among different genomes, as we assume that there is no information of the species in the mixture, we used normal distribution for approximation only. In the following, we describe the details of the two phases (topdown clustering and bottomup merging) and how we make use of the difference in the intradistance and interdistance distributions to guarantee the accuracy of these two phases in MetaCluster 3.0. 2.3 Topdown clustering In this step, we apply the k-median algorithm 1 (Jain and Dubes, 1981) to cluster the fragments into k clusters of similar sizes. k-median algorithm repeatedly assigns feature vector to the closest cluster and select a feature vector in each cluster as the center with the following objective function MinE = k  i=1  AC i dist s (A,c i ) where feature vector c i is the center of cluster C i and dist s (A, c i ) is the spearman distance between feature vectors A and c i. 1 We use k-median clustering algorithm as it is easy to compute. Further investigation on the effectiveness of different clustering algorithms should be conducted.
