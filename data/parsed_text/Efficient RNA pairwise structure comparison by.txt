Motivation: Understanding the architecture and function of RNA molecules requires methods for comparing and analyzing their 3D structures. Although a structural alignment of short RNAs is achievable in a reasonable amount of time, large structures represent much bigger challenge. However, the growth of the number of large RNAs deposited in the PDB database calls for the development of fast and accurate methods for analyzing their structures, as well as for rapid similarity searches in databases. Results: In this article a novel algorithm for an RNA structural comparison SETTER (SEcondary sTructure-based TERtiary Structure Similarity Algorithm) is introduced. SETTER uses a pairwise comparison method based on 3D similarity of the so-called generalized secondary structure units. For each pair of structures, SETTER produces a distance score and an indication of its statistical significance. SETTER can be used both for the structural alignments of structures that are already known to be homologous, as well as for 3D structure similarity searches and functional annotation. The algorithm presented is both accurate and fast and does not impose limits on the size of aligned RNA structures. Availability: The SETTER program, as well as all datasets, is freely available from http://siret.cz/hoksza/projects/setter/.
INTRODUCTIONIn addition to its role in the transfer of biological information, the evidence shows that RNA molecules also play key roles in a variety of cellular processes (). RNA shows, among others, an enzymatic activity in ribozymes (), it takes part in the transcription regulation () and it is involved in the chromatin modeling (). RNA 3D structure is hierarchical () and can be divided into primary, secondary, tertiary and quaternary levels. RNA secondary structure motifs () can be defined as double helices interconnected by various types of loop structures and are stable independently of their 3D folds. Tertiary interactions () stabilize the overall arrangement and packing of double helices in large RNA structures. The first resolved RNA crystal structure was that for the yeast phenylalanine * To whom correspondence should be addressed. transfer RNA (tRNA) (). This achievement was followed by solving structures of other naturally occurring tRNAs (), as well as of a variety of oligomeric RNA model structures (). With the improvements in molecular biological methods () and in crystallographic techniques (), the size of solved RNA structures has later increased dramatically. Large RNAs (An arbitrary limit of 100 residues is used to define large RNAs (). allowed for the first detailed studies of RNA structure elements not found in smaller molecules, such as continuous interhelical base stacking, RNA domain structure and helical packing. The function of an RNA molecule is largely determined by the 3D structure that is typically more evolutionarily conserved than its sequence (). Thus, methods for the comparative RNA function annotation based on structural similarity usually yield much better results than sequence-based approaches. Although detecting optimal structural similarity between two biomolecules in 3D has been shown to be NP-hard (), the development of automatic tools capable of an efficient and accurate RNA structural alignment has become an important part of structural bioinformatics. The study of RNA tertiary and quaternary structures must be facilitated by the software that is able to work both with small and large RNA molecules. To be computationally tractable, currently available software tools for comparing two RNA 3D structures, such as ARTS (), DIAL (), iPARTS (), SARA (), SARSA () or R3D Align () are therefore based on heuristic approaches. ARTS () detects a maximum common substructure between two RNA 3D structures using backbone phosphate atoms. Based on 3D similarity between 1333 solved RNA structures assessed by the ARTS algorithm, a database of hierarchically classified structures DARTS was subsequently developed (). ARTS is not practical for comparison of large RNA molecules due to its cubic time complexity. To overcome this problem, the DIAL server using a dynamic programming algorithm and running in a quadratic time was developed (). The DIAL alignment algorithm is based on torsion and/or pseudotorsion similarity sequence similarity and base pairing similarity, and it provides access to global, local and semi-global structural alignments. An improvement in the speed over the DIAL algorithm was later brought by PARTS (), an algorithm based on the so-called structural alphabet (SA). SA is an emerging concept in the structural biology of proteins. A protein structure is represented as a limited series of 'letters' each assigned to a well-characterized conformation (). PARTS uses the vector quantization approach to derive an RNA SA of 23 letters representing the most common backbone conformations. The RNA structures are represented as 1D sequences of SA letters, and these are aligned using classical methods for pairwise and multiple sequence alignments. A new set of SA letters was derived for the improved version of PARTS called iPARTS (). iPARTS outperforms its previous version PARTS, as well as (in some aspects) another highly efficient algorithm SARA (). In SARA, distances among selected atoms are represented as unit vectors existing on unit spheres (). All-to-all unitvector Root Mean Square Division (RMSD) distances of consecutive unit spheres are computed and used as scoring matrix for the dynamic programming-based global alignment. Highly accurate alignments of homologous molecules are produced by the R3D Align approach () which is based on local nucleotide by nucleotide superpositions that effectively accommodate the flexibility of RNA molecules. Local alignments are then merged to form a global alignment by using a maximum clique algorithm on a specially defined 'local alignment' graph. In this article, a novel pairwise RNA comparison method (SEcondary sTructure-based TERtiary Structure Similarity Algorithm) SETTER is proposed. The method divides the whole RNA structure into non-overlapping generalized secondary structure units (GSSUs). The structural alignment is then obtained by using a distance measure based on RMSD transformations between all possible pairs of GSSUs. The algorithm scales as O(n 2 ) with the size of GSSU and as O(n) with the number of GSSUs in the structure. The segmentation to GSSUs offers the advantage of high speeds even for the largest structures. The algorithm can be used both for the 3D structural alignments (Figs. 112 in the Supplementary Information show several examples of pairwise structural alignments), as well as for 3D structural similarity searches and for functional annotation. High speed of the algorithm does not compromise its accuracy as is demonstrated by benchmarking of both structural alignment and functional annotation against other published methods.
METHODS
GSSU identificationThree important elements are recognized in the GSSU: a loop, a neck and a stem (). A formal description of the GSSU is given by the following definition. Definition 1. Let R be an RNA structure with a nucleotide sequence {nt i } n i=1 and let WC  R denote its subset participating in a WatsonCrick (WC) base pair. By a GSSU G, we understand a pair of substrings of R,In case of ambiguity, a maximum length is assigned to the substring occurring earlier in the sequence. Let i max and j min be the highest/lowest indexes of the WC paired bases in G. We define a loop as L ={nt i } j min 1 i=imax+1  G, a stem as G \L and a neck as the pair {nt imax ,nt j min }. Nucleotides are represented by their P atoms. WC hydrogen bonds are identified using 3DNA (). Non-WC pairs are not used. Three GSSUs extracted from an RNA structure. The sequence starts at the 5 end. The borders between individual GSSUs are indicated by dashed lines and the numbers show the order of the GSSU generation because they often mediate RNA tertiary contacts, the presence of which does not allow an unambiguous distinction between GSSUs. To identify all GSSUs, the process iteratively applies two following steps. The RNA structure is processed in a sequence order and in the first step, nucleotides are stored on a stack. This process stops by encountering a nucleotide nt i WC bonded with a nucleotide nt j already in the stack. Then, in the second step, a new GSSU G starts to be formed from the pair {nt i ,nt j } (i.e. the neck) and from all nucleotides found between nt i and nt j (i.e. the loop). These residues are then removed from the stack. Finally, the stem is formed from all residues encountered either before the residue WC bonded to the residue not stored on the stack or before the residue WC bonded with the residue that was pushed on the stack before the previous GSSU was generated. By repeating these two steps, the algorithm iteratively searches for GSSUs, and it stops when the end of the sequence is reached. All residues remaining on the stack (if any) then form the last GSSU. Note that even a structure without a single WC pair has a GSSU which is identical with the structure itself. A detailed description of the process of generating GSSUs from, as well as the pseudocode algorithm are given in Sections 2 and 3 in Supplementary Information.
Comparing two GSSUsGSSU pairwise comparison lies in the heart of the method. Each GSSU is represented by an ordered set of 3D coordinates of P atoms annotated with bonding and nucleotide-atom-type information. A common way to assess similarity between two sets of points is to define a pairing between them. The sets are then superposed by finding translation and rotation of one of them over the other minimizing the mutual distances of the respective paired points. Usually, the RMSD is used as the distance measure and two structures can be superposed given a pairing (alignment) in polynomial time (). However, finding the optimal alignment is an NP-hard problem (). The optimal solution can be found by exhaustive search, which is computationally not feasible. This problem can be resolved by identifying suboptimal alignments that will likely participate in the optimal alignment. This is the principle idea behind SETTER's structure comparison process. SETTER generates a set of short alignments, the quality of which is evaluated by the Kabsch () RMSD algorithm. Working with relatively short alignments allows to superpose even the largest RNA structures in a reasonable amount of time. To superpose two GSSUs means to match their loops which implies matching their necks (). To define the superposition in 3D space unambiguously at least three pairs of points are needed. A set of these points is called a triplet and the alignment is formed by matching triplets between two given structures. SETTER aligns necks first, and then the final pair in the triplet is identified by aligning each possible pair of loops' nucleotides. For example, if two GSSUs with loops consisting of n and m nucleotides are to be aligned, nm alignments are generated ().For each alignment, the rotation matrix and the translation vector defining optimal superposition of two triplets are calculated. Although these are optimal for the given triplet pair only, they are used to superpose whole GSSUs. This possible inaccuracy is the trade-off for an efficiency. After the superposition, for each nucleotide in GSSU A, its nearest neighbor in GSSU B is found, and their distance is added to the distance of two GSSUs referred to as S-distance. Finally, the S-distance is normalized. The whole process is formalized by equation (1).
D.Hoksza and D.Svozilwhere G A and G B represent two GSSUs to be compared, G i stands for the ith nucleotide in the sequence of G and |G| for its length. NN (x,G) is the Euclidean distance from the nucleotide x to its nearest neighbor in G. If x and its nearest neighbor share the same nucleotide type (the function t(x) in the formula), the distance is modified by a factor . It takes values from the interval 0 <  1, the lower its value, the more matching identical nucleotides are rewarded.  computes the raw distance-T is the set of transpositions resulting from the candidate triplet alignments and  (G,t) transposes GSSU G using the transposition t. The S-distance is then normalized by the function  counting a number of nearest neighbors within the distance after the optimal transposition t opt. Since hydrogen bonds are identified using simple geometric criteria, their detection may sometimes be incorrect. This leads to the shift of the neck position within the GSSU. SETTER simulates the neck shift by aligning also the residues next to (under) the necks. These tweakings are necessary for accurate GSSU comparison; however, they slightly increase the running time of SETTER. Although in most cases, the GSSU consists of a stem and a loop, it is not a strict rule. Two particular situations can occurthe GSSU has no loop or RNA does not have a single WC hydrogen bond at all. In the case of the GSSU without the loop, the third nucleotide of the triplet is selected from the stem such that the S-distance is minimized. When dealing with the GSSU with no WC hydrogen bond, several triplets covering the whole structure are formed and used as a basis for the alignment. Such a simplified comparison may not lead to the best possible result and SETTER was not developed for these cases. However, the probability of encountering such defective GSSUs in large RNA structures is very small (indeed, no such GSSU is found either in 16S rRNA or in 23S rRNA).
Comparing more than two GSSUsIf structures contain more than one GSSU, the following three-step multiple GSSU comparison process is implemented () are added to S. This process goes from {i +1,j +1} until either i +1 or j +1 reaches the number of GSSUs in R A or R B. Similarly, the other ends of the structures need to be aligned and so the process is repeated for {i 1,j 1}. However, the case when GSSUs in the RNA structure are oriented in the opposite direction must also be considered, and another  alignments must be performed aligning i 1 residues with j +1 residues (not shown in). The rotation between two GSSUs imposes a penalty to the S. This penalty is calculated as a distance between the rotation matrices defining two consequent GSSU superpositions (). However, the penalty for translation is not included explicitly. The translation is limited only to the pair of GSSUs just being aligned, and such a translation is already implicitly present in the S-distance (see Section 2.2 and). Currently, there is no provision for a situation in which one structure is missing a GSSU that is present in the other structure. This potential limitation may have a possible undesirable effect on the alignment; however, it cannot be improved without an increase in computational demands.
Early terminationThe nearest neighbor search, which is a part of the S-distance computation, has O(n 2 ) time complexity with respect to the GSSU's length n. In addition, the search is performed for each of the candidate alignments decreasing the efficiency of SETTER. To increase the algorithm's speed, a simple early termination condition is thus implemented. Alignments that are not likely to be the part of the optimal superposition are identified, and for these, the nearest neighbor search is skipped. Such alignments will very likely have the triplet S-distance higher than the lowest GSSU distance obtained up to that time. Specifically, triplet-based S-distance will probably be lower than 'real' S-distance. If the triplet T A  G A is aligned with the triplet T B  G B with S(G A ,G B ) =  being the best result so far, the comparison computation can be terminated if S(T A ,T B )1/ > . Since the early termination is a heuristic (S(T A ,T B ) < S(G A ,G B ) does not have to be valid), the early termination condition is strengthened by introducing the parameter   1. By varying the  parameter, the trade-off between accuracy and speed can be set. The higher the  is, the less often early termination occurs and the more accurate and slower the algorithm is. The effect of the  parameterThe rotation angles  i from the previous step are used in the penalty function  (), which represents a weight function for the GSSU distances. To get the final S-distance, the sum of weighted GSSU S-distances is normalized by the ratio of non-aligned GSSUs over the maximum number of non-aligned GSSUs. The parameter  was empirically set to 6 on the quality of the functional annotation is demonstrated in Section 4 of Supplementary Information. For each alignment, SETTER outputs the list of residues forming individual GSSUs; S-distance characterizing the overall quality of the alignment; P-value quantifying the statistical significance of the alignment; list of aligned GSSUs, rotation and translation matrices; 3D coordinates of each residue after the superposition; triplet pair of the best scoring GSSU pair and list of residues with their respective nearest neighbors and the corresponding distances.
Structural alignment accuracyThe assessment of the quality of structural alignments is not an easy task because it is not possible to define what a perfect 3D-to-3D alignment is (). The commonly used measures such as e.g. the RMSD requires the knowledge of which residues are aligned against which ones. However, because SETTER is not based on a sequence alignment algorithm such information is missing. Therefore, the list of aligned residues was generated using a simple geometric approach. Two residues A and B are considered to be aligned if A is the closest residue to B and, at the same time, B is the closest residue to A. Such a definition is, in our opinion, suitable for an evaluation of the quality of the superposition and can be used for an approximate comparison with others alignment-based methods. In the present work, the quality of the structural alignments was assessed by using the following measures: the RMSD, the percentage of structural identity (PSI), the percentage of sequence identity (PID) () and the number of nucleotides aligned and the number of exact base matches (). RMSD captures the general 3D shape of RNA, but it can be misleading as the errors are spread over the whole molecule. PSI is defined as a percentage of superimposed residues within 4.0  with respect to the length of the shorter of the two structures. PID is the percentage of aligned nucleotides of the same type with respect to the length of the shorter of the two structures. Number of nucleotides aligned and number of exact base matches give similar information as PSI and PID. We note that these measures do not account for the specificity of RNA base pairing and base-stacking interactions. Therefore, some new metrics particularly suitable to RNA structure comparison have been developed (). However, these are not used in the present study as they would not allow to compare SETTER results with other approaches.
Statistical significance of the structural alignmentThe quality of the structural alignment can be assessed by means of statistical hypothesis testing. The key idea is to create a set of randomly generated structures, to align them and to fit the distribution of their S-distances. For the given S-distance its P-value can then be calculated. The alignment is a good one if its S-distance is good compared with the distribution of Sdistances. This is reflected by its low P-value; the smaller the P-value, the more statistically significant the S-distance is. To show how well data follow the fitted distribution a visual inspection of quantilequantile plots (QQplots) can be used, or the fit can be tested by two-sample Kolmogorov Smirnov test. S-distance follows the log-normal distribution (see Section 5 in Supplementary Information), the probability density function (x) of which is given aswhere parameters  and  are the mean and standard deviation, respectively, of the variable's natural logarithm that is by definition, normally distributed. On a non-logarithmized scale,  is called a location parameter and  a scale parameter. These parameters must be determined, and once they are known, they can be used to derive the statistical significance of the particular alignment given as its P-value. P-value corresponds to the probability P(x  X ) that the variable X takes a value lower or equal to xwhere erf(x) is the error function defined asFor the determination of  and  parameters, a set of reasonably unrelated structures was prepared. Such a set should cover the whole range of alignments starting from the exceptionally good ones going up to the very bad ones. The unrelatedness of the structures was based on their sequence similarity. The used threshold of 80% sequence similarity guarantees the uniform coverage of the alignments in terms of their quality. Because the  and  parameters depend on the length of the shorter structure N in the alignment they must be determined for different lengths separately. For each length, a dataset containing 50 000 structure pairs was generated by randomly cutting the regions of the given length from structures longer than N. The datasets of lengths 5, 10, 15, 20,  ,300 residues were prepared. The S-distance was determined for each alignment in the given dataset and the parameters  and  of the log-normal distribution were found by a maximum-likelihood fitting. All statistical calculations were performed using the R system version 2.13.1 (R Development Core Team, 2011) with the package MASS (version 7.3-14).
Functional annotation accuracyThe quality of the functional annotation was assessed by SETTER's ability to correctly assign the SCOR functional classification to the query RNA
D.Hoksza and D.Svozil
Fig. 4. PSI values produced by SARA and SETTER approaches forthe all-to-all alignments using the FSCOR dataset structure using three datasets from the SCOR database (). The FSCOR dataset contains all RNA chains with more than three nucleotides with a unique functional classification, the R-FSCOR dataset is a structurally dissimilar subset of the FSCOR and the T-FSCOR dataset contains structures from the FSCOR set not present in the R-FSCOR set (). Two RNA structures can be either functionally identical (referred to as the exact classification, they have the same deepest SCOR classification) or functionally similar (referred to as the similar classification, they do not agree at the deepest level but share classification at the parent level). Particularly, two experiments were performeda leave-one-out test on the FSCOR dataset and a test assigning functions to structures from the T-FSCOR with the R-FSCOR serving as the database set. The accuracy of a functional annotation was assessed by using two different measures: a classification accuracy (ACC) and an area under the receives-operating characteristic (ROC) curve (AUC). ACC is calculated as a percentage of correctly classified structures. To obtain the ROC curve, the alignments of all pairs of RNA structures were sorted by their P-values. A P-value threshold is varied between minimum and maximum of the sorted P-values. For the fixed threshold, all pairs of aligned structures which P-values are above the threshold are assumed positive. Moreover, the pairs are counted as true positives (TP) if they belong to the same family (i.e. they are structurally similar) and false positives (FP) otherwise (i.e. they are structurally dissimilar). If P (positives) is the number of structurally similar pairs in the whole result set and N (negatives) is the number of structurally dissimilar pairs, then FP/N is called a false positive ratio (FPR) and TP/P a true positive ratio (TPR). The point on the ROC curve corresponding to the fixed threshold is produced by plotting its TPR (y-axis) against FPR (x-axis). The area under the ROC curve (AUC), a threshold independent measure, is considered a robust indicator of a classifier quality (). An AUC of 1.0 indicates a perfect classifier and an AUC of 0.5 corresponds to a random classification. High AUC means that correct classifications are present mostly at the top of aligned structures sorted by their P-values. We also notice that it is difficult to obtain high values of both ACC and AUC simultaneously (see Section 6 in Supplementary Information), and both measures should thus be reported.
RESULTS AND DISCUSSION
Assessment of the structural alignment qualitySETTER structural alignments were compared with SARA by calculating PSI values for the all-to-all comparisons using the FSCOR dataset. The results are summarized inshowing that SETTER yields less alignments with very low PSI (up to 20%), and SARA returns slightly more alignments with PSI >90%. In terms of remaining PSI levels, both methods perform similarly. In addition, SETTER was compared with R3D Align, ARTS, SARA and DIAL by calculating various measures reflecting the quality of the alignment of two 16S rRNA structures and of theof the sarcin/ricin domain from 28S rRNA with the central part of the 5S rRNA. The results summarized in Section 7 in Supplementary Information also demonstrate that SETTER produces alignments of the quality comparable with other automated approaches considering its approximate nature in obtaining the list of aligned residues (see Section 2.5). The ability of SETTER to produce good structural alignments is demonstrated on the visualizations of the superpositions of several 23S rRNA, 16S rRNA, 5S rRNA, tRNA and other RNA structures (see Section 1 in the Supplementary Information).
Assessment of the functional annotation quality
Statistical parameters evaluationQQ-plots show that data follow the fitted log-normal distribution very closely except for the region of high S-distances (see Section 5 in Supplementary Information). However, poor fitting in this region will not seriously influence the results of database searching, as we are generally not interested in highly dissimilar structures. The quality of the fit was further confirmed by KolmogorovSmirnov test that provided P-values close to 0 for all sequence lengths. The location and scale parameters ( and  ) of the log-normal distribution depend on the length N of the shorter structure in the alignment (). The location parameter  can be fitted by the following curve ():where a = 0.1729 and b = 14.3753. Similarly, the scale parameter was fitted (see) bywhere a = 7.3325 and b = 0.0136. The relations (2) and(The values are given in % and are reported for exact/similar classification. iPARTS should be compared with SETTER with the P-value threshold of 1.0 (i.e. no filtering applied), and SARA should be compared with SETTER with the P-value threshold of 0.013. For iPARTS, ACC was not reported and necessary tests cannot be performed using the iPARTS web interface. ROC curves from which AUC value were calculated are shown in Section 8 of the Supplementary Information.
Effectiveness comparisonThe capabilities of SETTER for a functional annotation of new RNA structures were compared with SARA and iPARTS approaches using the published AUC (SARA, iPARTS) and ACC (SARA only) values on the FSCOR and T/RFSCOR datasets. Following settings were used in SETTER:  = 0.2,  = 2, = 6   = 3 and  = 1 (see Sections 2.22.4 for details). The results are summarized in. The percentage of classified structures for the given P-value threshold is called a coverage and two sets of results with different coverage are presented for SETTER. STR PV =1 corresponds to the classification where the structures are sorted according to their P-values but no threshold is applied (coverage equals to 100%). At this coverage, SETTER is compared with iPARTS which does not use any filtering. Results inshow, that SETTER outperforms iPARTS in AUC for exact classification both in FSCOR and T/R-FSCOR datasets and performs comparably for similar classification. SARA was evaluated () at the coverage of 58.7%. To achieve this coverage in SETTER, the P-value threshold of 0.013 was used. At this coverage, SETTER performs better than SARA in terms of AUC both for the FSCOR and T/R-FSCOR datasets (). In addition, SETTER can also be compared with SARA in terms of ACC. SETTER's ACC is comparable to that of SARA in the similar classification both for the FSCOR and T/R-FSCOR datasets, and in the exact classification for the FSCOR dataset. However, it is much higher (by 13.7%) for the exact classification for the T/R-FSCOR dataset. Thus, it can be concluded that SETTER performs better than iPARTS and SARA in terms of AUC and is comparable with SARA in terms of ACC.
Speed comparisonSETTER's nearest neighbor identification procedure scales as O(n 2 ) with the size of the GSSU (not with the size of structure!), and employment of the heuristic speed optimization with  = 1 further reduces the number of O(n 2 ) computations. The speed of SETTER was compared with that of iPARTS and SARA measuring the runtimes of all-to-all comparisons on four datasets containing RNA structures of various sizes (). The runtime of SETTER was measured on Linux machine with 4 Intel(R) Xeon(R) CPUs E7540, 2 GHz (the algorithm is not parallelized thus only one core per comparison was used) and 132 GB of RAM (however, the average memory size needed to store the representations of allThe D1 set contains tRNA structures 1EHZ:A, 1H3E:B, 1I9V:A, 2TRA:A and 1YFG:A (average length 76 nucleotides), D2 set contains ribozyme P4-P6 domain 1GID:A, 1HR2:A and 1L8V:A (average length 157 nucleotides), D3 contains domain V of 23S rRNA 1FFZ:A and 1FG0:A (average length 496 nucleotides), D4 contains 16S rRNA 1J5E:A and 2AVY:A (average length 1522 nucleotides) and D5 contains the currently largest RNA structures in PDByeast 25S rRNA 3O58:1 and 3O5H:1 (average length 3396 nucleotides). The runtimes of SARA and iPARTS were obtained from their server versions. A comparison with SARA is difficult, because for three of five datasets, the server times out and returns no results.RNA structures from the FSCOR set was <3.3 MB) running Red Hat Linux. The comparison was based on measuring the runtimes using iPARTS and SARA server versions which limit the size of aligned structures (1900 residues for iPARTS and 1000 residues for SARA) from the performance reasons. Such a comparison can thus be only qualitative; however, the variations between SETTER and SARA/iPARTS are substantial () and cannot be attributed to a different hardware setup only. SETTER clearly outperforms both SARA and iPARTS methods and is much better suited for the alignment of even the largest RNA structures.
CONCLUSIONS@BULLET The SETTER method divides the RNA structure into nonoverlapping structural elements called GSSUs. The structural alignment is then based on the pairwise comparison using 3D similarity of the GSSUs. @BULLET SETTER was not developed for aligning RNA molecules not containing any secondary structure. However, such cases are very rare, no such a structure is present either in the FSCOR dataset or in large 16S or 23S rRNAs. @BULLET The SETTER algorithm scales as O(n 2 ) with the size of GSSU and as O(n) with the number of GSSUs in the structure. This scaling gives SETTER its unprecedented speed as the average size of GSSU remains constant irrespective of the size of the structure. However, it has been noted that due to the complexity of RNA 3D alignment, the quadratic time algorithms (or better) cannot be expected to be highly accurate (). Therefore, the main utility of the SETTER can be in identifying potential alignment regions which can further be processed by more accurate but computationally intensive methods such as R3D Align (). @BULLET SETTER can be used both for pairwise structural alignment, as well as for functional annotation of a new RNA structure. @BULLET The quality of the structural alignment was assessed by the comparison with R3D Align, ARTS, SARA and DIAL approaches. The results demonstrate that SETTER produces structural alignments of comparable quality.
D.Hoksza and D.Svozil@BULLET The functional assignment was benchmarked against iPARTS and SARA using the classification accuracy (ACC) and the area under the ROC curve (AUC) measures for three datasets from the SCOR database. SETTER performs better than iPARTS and SARA in terms of AUC and is comparable with SARA in terms of ACC.@BULLET The SETTER method is capable of aligning even the largest RNA structures deposited in the PDB database in a reasonable amount of time (e.g. two structures of the 25S rRNA each having 3396 nucleotides and represented by 89 GSSUs are aligned in 1 min and 20 s) and represents thus an important addition to the portfolio of automatic RNA structural analysis tools.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
