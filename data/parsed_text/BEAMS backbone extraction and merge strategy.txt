Motivation: Global many-to-many alignment of biological networks has been a central problem in comparative biological network studies. Given a set of biological interaction networks, the informal goal is to group together related nodes. For the case of protein–protein interaction networks, such groups are expected to form clusters of functionally orthologous proteins. Construction of such clusters for networks from different species may prove useful in determining evolutionary relationships, in predicting the functions of proteins with unknown functions and in verifying those with estimated functions. Results: A central informal objective in constructing clusters of ortho-logous proteins is to guarantee that each cluster is composed of members with high homological similarity, usually determined via sequence similarities, and that the interactions of the proteins involved in the same cluster are conserved across the input networks. We provide a formal definition of the global many-to-many alignment of multiple protein–protein interaction networks that captures this informal objective. We show the computational intractability of the suggested definition. We provide a heuristic method based on backbone extraction and merge strategy (BEAMS) for the problem. We finally show, through experiments based on biological significance tests, that the proposed BEAMS algorithm performs better than the state-of-the-art approaches. Furthermore, the computational burden of the BEAMS algorithm in terms of execution speed and memory requirements is more reasonable than the competing algorithms. Availability and implementation: Supplementary material including code implementations in LEDA Cþþ, experimental data and the results are available at
INTRODUCTIONProteins and their interactions are at the core of almost every biological process. In proteinprotein interaction (PPI) networks, nodes represent the proteins and the edges correspond to interactions between pairs of proteins. Several high-throughput techniques together with novel computational methods gave rise to extraction of large-scale PPI networks for many organisms in recent years (). Parallel to this enormous growth in data, several problem formulations related to the analysis of such networks have been proposed and many computational methods have been developed for their comparative studies. In particular, biological network alignment problem has been of particular interest. The main motivation behind the problem is to detect functionally orthologous proteins across given networks from several organisms. Two types of biological network alignments have been covered in literature: local network alignments and global network alignments. The former aims to extract local network motifs (subnetworks) from input networks; the motifs are expected to bear reasonable similarity both in terms of sequence and local network topologies (). Global network alignment on the other hand treats the problem globally and aims to find functionally orthologous mappings across all networks and proteins. Some of the proposed global alignment algorithms such as MI-GRAAL () and SPINAL () perform these alignments only for pairwise networks, whereas others such as IsoRank () and IsoRankN () perform alignments on multiple networks. Additionally, global alignment algorithms may also differ with respect to the types of mappings they provide. One-to-one alignment approaches aim to generate alignments where the output alignment either maps a protein in a network to exactly one protein from one of the networks or leaves the protein unmapped (). One-to-many alignments have been proposed for the global alignment of other biological networks including metabolic pathways, where each metabolic reaction in a pathway is mapped to a subset of reactions from another pathway (). Finally, for many-to-many alignments, the goal is to extract clusters of proteins where each cluster may include any number of proteins from the input networks (). The proteins mapped to the same cluster as a result of the alignment are all expected to compose a functionally orthologous group. Among all three versions of the global network alignments, the many-to-many version is the most general. Furthermore, as far as constraints from evolutionary molecular biology are concerned, it provides a more intuitive definition; the evolutionary distance between organisms under study may have large variations, leading to different numbers of proteins functioning similarly when considered in different networks. The focus of this article is on global many-to-many alignment of multiple PPI networks from different species. We first provide *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com a formal combinatorial definition of the problem. We proceed with proving its computational intractability even in a restricted case. We next provide a general framework for the problem, where we decompose the original problem into two subproblems, that of backbone extraction and backbone merging. Informally, each backbone in this framework corresponds to a closely related central group of proteins, at most one from each network. Once all the backbones are determined, the latter subproblem involves merging together the backbones with higher chances of coexistence in a cluster of orthologous proteins. We provide heuristic methods for both subproblems that together form our proposed algorithm based on backbone extraction and merge strategy, BEAMS. We experimentally evaluate the algorithm with regards to several biological significance metrics proposed in literature and compare it against one of the most popular global manyto-many alignment methods, IsoRankN, and a recently proposed state-of-the-art alignment algorithm, SMETANA. The experimental results indicate that BEAMS alignments on real network data provide more consistent clusters than those of IsoRankN and SMETANA. Furthermore, considering the heavy computational load of the problem, the exceptional running time and memory requirements of BEAMS is a further improvement resulting from the provided framework and the algorithm.
METHODS AND ALGORITHMS
Problem definitionAlthough the one-to-one version of the problem has been formally defined in previous work, no formal combinatorial definition exists for the global many-to-many version of the interaction network alignment problem apart from parameter learning-based definitions of Graemlin 2.0 (), which actually is defined as an intermediate subproblem for local alignments. We first provide a formally defined optimization goal for the problem that captures the essence of the informal definition provided in Section 1. The definition is based on an intuitive generalization of the global one-to-one network alignment problem definition provided inand Aladag and Erten (2013).be the input PPI networks, where G i corresponds to the ith PPI network and V i , E i denote, respectively, the node set (proteins) and the edge set (interactions) of G i. Let S indicate the edge-weighted complete kpartite similarity graph where the ith partition of S is V i and each edge (u,v) in S is assigned a positive real weight w(u,v). This weight corresponds to the sequence similarity score s(u,v) between u and v, usually assumed to be the Basic Local Alignment Search Tool (BLAST) bit score of u and v, where u 2 G i , v 2 G j and i 6  j. Let S be a subgraph of S with the same set of nodes. S represents a filtered version of the similarity graph S, so that only edges between pairs of proteins with relatively high sequence similarity are retained. For a fixed S , the global many-to-many alignment of all the input PPI networks is the problem of finding a maximal set of non-overlapping clusters CL  fCl 1 , Cl 2 ,. .. , Cl m g that maximizes the following score:Here is a real number between 0 and 1. It is a balancing parameter that determines the contribution weight of network topology as compared with homological similarity in the construction of output alignments. Each cluster Cl i is defined to be a complete cpartite subgraph of S , where 15c k. A set of clusters CL is maximal if no additional clusters can be added to CL, i.e. no further complete cpartite subgraph remains in S. Maximizing the AS score does not automatically guarantee the maximality of the output set of clusters. CIQCL in the equation denotes cluster interaction quality and is a measure of interaction conservation between all cluster pairs in CL. We define a conservation score, denoted with cs(m,n), for each pair of clusters Cl m , Cl n. Let E Clm, Cln denote the set of all PPI edges with endpoints in distinct clusters Cl m , Cl n. The score cs(m,n) is trivially 0, if E Clm, Cln  ;. Let s m,n denote the number of PPI networks shared by the nodes in both Cl m , Cl n , and let s 0 m, n be the number of distinct PPI networks containing the edges in E Clm, Cln. We assign csm, n  0 if s 0 m, n  1 and csm, n  s 0 m, n =s m, n otherwise. The former assignment reflects the fact that there is no interaction conservation between the pair of clusters. The overall assignment is a generalization of edge conservation definition of pairwise network alignments.In Equation (1), ICQCl i  stands for the internal cluster quality of a given cluster Cl i and is a measure of sequence similarities of involved proteins. Let w max u denote the maximum weight of any edge incident on u in S. Denote the S edges incident on nodes in Cl i with ECl i . ICQCl i  is defined as follows:
The BEAMS algorithmWe first show that for a fixed S , the global many-to-many network alignment problem is computationally intractable. Owing to space considerations we leave the proof to the Supplementary Document. PROPOSITION 2.1. For all 6  0, the global many-to-many alignment problem is NP-hard even for the restricted case where two PPI networks are aligned and all edge weights in S are equal.Considering this NP-hardness result, it is necessary to devise efficient heuristics for the problem. The general approach of the BEAMS algorithm can be described within the seed-and-extend framework. Several previous network alignment studies are also based on the same broad framework (). However, how the seeds are defined formally, how they are extracted and the formal definition of the extension that altogether constitute the main components of a seed-and-extend framework are the main novelties of our approach. Regarding the cluster definition of Equation (1), we make the following observation. Each cluster Cl i , which is a complete cpartite graph, can be subdivided into a set of n i disjoint cliques, where n i denotes the size of the maximum partition of Cl i. In fact, n i is the minimum possible size for such a set and each clique in the set has size c 0 where 1 c 0 c. Therefore, we view the original alignment problem of being composed of two subproblems: backbone extraction and backbone merging. A backbone is defined as a clique in S , and a set of appropriate backbones together form a cluster. Each backbone thus defined formally, can be considered to correspond to a seed within the general seed-and-extend framework. The first subproblem is that of extracting a minimal set of disjoint cliques from S , which covers S completely and that maximizes the alignment score AS when each non-trivial clique of size greater than one is considered a cluster in the definition of Equation (1). The set is minimal in the sense that no output pair of cliques can be merged together to form a larger clique. Informally, each backbone corresponds to an orthologous set of proteins with at most one protein from each of the input networks. Thus, the backbone extraction problem can actually be viewed as the global oneto-one alignment of multiple networks. A group of backbones is called mergeable if their union provides a valid cluster, i.e. a complete cpartite graph. We define the second subproblem as finding a minimal set of mergeable backbone groups such that no further mergeable group remains and that maximizes the resulting AS score when each mergeable backbone group is considered a cluster in the definition of Equation (1). A mergeable group represents a cluster of proteins that are highly homologous, as every pair of proteins from different networks are connected by large weight edges in the filtered similarity graph S. Thus, imposing the constraint that no further merging can be done on the set implies the intuition that no two pairwise homologous clusters should be part of the output alignment separately. We show that even these subproblems are computationally hard, and we provide efficient heuristics for each one. In what follows, we first present the details of S construction then proceed to provide descriptions of the two main steps of the BEAMS algorithm.
Construction of S Consideringthe sizes of the networks under consideration and the fact that multiple networks constitute the study subject, a suitable filtration on the complete sequence similarity graph S is necessary for mainly two reasons. First, even the suboptimal polynomial-time heuristic algorithms require large amounts of computational power as the size of S increases. Furthermore, taking into account the complete graph S may lead to incorrect alignments as far as biological significance measures are concerned; most protein pairs from different networks do not bear sufficient significance in terms of sequence similarity and using an alignment with the unfiltered similarity graph S may align proteins with almost no homology. As the evolutionary distance between pairs of input networks might be different, we use a relative filtration that takes into account the relative differences in sequence similarities of pairs of networks. For a user-defined threshold , we construct the filtered similarity graph S , so that each edge (u,v) is removed from S if wu, v5  maxu, v, where maxu, v denotes the maximum of wu, v 0  or wu 0 , v for any u 0 , v 0 from the networks of u and v, respectively.Because the backbone extraction problem is NP-hard, we devise an iterative greedy heuristic that runs in polynomial time assuming the number of networks under consideration is constant. The pseudo-code is shown in Algorithm 1.Our algorithm uses concepts related to maximum edge weighted cliques (MEWC), candidate generation based on neighborhood graph constructions and a greedy selection heuristic aiming to optimize the AS score. In the MEWC problem, the input graph is assumed to be edge-weighted with non-negative real values as weights, and the goal is to find a clique with maximum sum of edge weights. We start with an empty backbone set and a candidate set that consists only of C 0 , which is the MEWC of S. The jth iteration of the main loop of the algorithm consists of four main steps: selecting a new backbone B j among already existing j candidates, removing the backbone from S , generating the new candidate C j and finally updating all existing candidates.provides a depiction of each of these main steps on a sample instance for the third iteration. The first step simply involves selecting the new backbone as the candidate providing the maximum AS score when considered together with all existing backbones. In the first iteration, C 0 is selected trivially as the first backbone, B 1. Each candidate C j is defined with respect to an already existing backbone B j other than the special candidate C 0 , which is updated throughout iterations as S is updated. To generate a new candidate C j via the function call Generate CandS , B j , we first construct the neighborhood graph of B j , which is the induced subgraph in S of the set of PPI neighbors of all the nodes in B j. If the neighborhood graph does not contain any S edges, then the candidate C j is empty. Otherwise, we find the MEWC, M j , of this neighborhood graph, and we generate C j by constructing the G-MEWC of M j in S. Here, G-MEWC corresponds to generalized MEWC, which is defined as the maximum edge weighted clique in S that is required to include all the nodes of M j. On top of the interaction conservation advantages brought by neighborhood graphs, constructing the MEWC of the neighborhood graph guarantees a highly similar backbone candidate as far as homological sequence similarities represented by S edges are concerned. The G-MEWC construction on the other hand is a precautionary measure to enable possible extensions of a candidate toward networks other than those of its respective backbone. As the last step within an iteration, we generate each candidate anew, again with respect to its corresponding backbone and the updated S , if it shares any nodes with the new backbone B j. The iterations continue until S contains only isolated nodes, i.e. those of degree zero.
Computing generalized MEWCWe use a depth-first branch-and-bound type algorithm to find the generalized maximum edge weighted clique of S that is required to contain a given set of nodes, M j. The descriptions provided here assume basic familiarity with the general branch-and-bound framework; see Korf (2010) for further details on this framework. Assigning M j  ;, the problem reduces to that of finding the MEWC. As is the case with usual branch-and-bound type algorithms, we traverse the search tree T in a depth-first manner. Each node at level-i of T represents a clique of size i  jM j j in S that must include nodes in M j. During the traversal, for each traversed node  fu 1 ,. .. , u ijMjj g of T representing clique containing nodes u 1 ,. .. , u ijMjj , we store the neighborhood set of , denoted with N that contains nodes that are in the common S neighborhood of nodes u 1 ,. .. , u ijMjj. The total edge weight of is denoted with EW. Let RepN  denote the set of partition numbers of S (the set of PPI networks) that has a node in the set N. Throughout the traversal, we store the best node of the search, denoted with best and its weight with EWbest . To complete the description of the algorithm, we need only to specify the rules for branching and the bound formulation of the search. An upper bound for the potential weight of a node in T is assigned tomax u t , r  PW max N , where w max u t , r denotes the weight of the maximum weighted edge between u t and any node in the r-th partition of S , and PW max N  represents the maximum potential weight of a possible clique in N. Formally, PW max N  is defined as the sum of the edge weights of the jRepNjjRepNj1 2 heaviest edges of S. If the defined potential weight of a node is greater than EWbest , we branch at node , which implies creating a new node 0 at the next level i  1, where 0  fu 1 ,. .. , u ijMjj , u ijMjj1 g such that u ijMjj1 2 N .Finally the candidate C 0 , which is the only candidate sharing nodes with B 3 is generated anew. Assuming the MEWC of S is the edge (4,5), it becomes the updated candidate C 0
Backbone merging With regardsto the second main step of the BEAMS algorithm, we first state the following proposition about the computational complexity of the corresponding problem. The full proof can be found in the Supplementary Document. PROPOSITION 2.3. For all values of 6  0, the backbone merging problem is NP-hard even for the case where there are two input networks and all edge weights in S are equal.We provide an iterative greedy heuristic for the backbone merging step. Let MB denote the set of mergeable backbone groups. Initially MB contains all backbones provided by the first backbone extraction step. It is updated at every iteration of the algorithm by a greedy selection strategy which, similar to the backbone extraction step, uses a candidate generation and selection idea. At each iteration, we construct all pairs of mergeable groups in MB that all together provide the set of all candidates of that iteration. For each candidate, we compute the AS score of MB considering the candidate pair as a single group. Some groups in MB may consist of a single node. Such groups are excluded from the AS score computations. We then select the candidate that provides the maximum score and update MB by merging the pair. The algorithm stops when no mergeable pair remains that provides a minimal set MB. We finally remove groups with a single node and provide the resulting set as the output set of clusters. A full discussion of several implementation details regarding this step and the algorithm as a whole are left to the Supplementary Document.
DISCUSSION OF RESULTSWe implemented the BEAMS algorithm in C using the LEDA library (). The complete source code, evaluation tools, all the data and output results are available as part of the Supplementary Material. Two algorithms we compare BEAMS against are IsoRankN and SMETANA. IsoRankN is one of the most popular algorithms in the global many-to-many network alignment literature. It has been shown that compared with other popular alignment algorithms, such as Graemlin 2.0, NetworkBLAST-M and MI-GRAAL, it provides better performance under measures suitable for network alignment quality determination (). Furthermore, the informal optimization goals of both IsoRankN and the BEAMS algorithms are similar in the sense that they both aim at maximizing a suitable optimization scoring function that balances the contribution of homological similarities of clustered proteins and the edge conservation between pairs of clusters via a suitably assigned constant. Therefore, IsoRankN is one of the algorithms that we extensively compare the BEAMS algorithm against. A second alignment algorithm that we use in our experimental evaluations is SMETANA (), a recent approach proposed for probabilistic many-to-many alignment of multiple networks. We present the experimental results of BEAMS and IsoRankN for different values of varying from 0.3 to 0.7 in the increments of 0.1. The BEAMS algorithm has an additional user-defined parameter , the filtering ratio, which is set to 0.4. Regarding the settings of parameters used by SMETANA, we set n max  10, *  0.9 and *  0.8. These are the settings used in the original article (). Note that * and * do not correspond to and defined herein. We experimented on both real and synthetic PPI networks. Regarding the former, we present a discussion of the global many-to-many alignment results for the PPI networks of five extensively studied species: Caenorhabditis elegans (worm), Drosophila melanogaster (fly), Homo sapiens (human), Mus musculus (mouse) and Saccharomyces cerevisiae (yeast). As input data, the BEAMS algorithm requires the PPI networks and the pairwise sequence similarity scores of aligned proteins. All these data are retrieved from the IsoBase () database, which is the same as that used by the IsoRank, IsoRankN, SPINAL and SMETANA algorithms. These PPI networks are formed by combining the network data from various databases including DIP (), BIOGRID (), HPRD (), MINT () and IntAct (). The C.elegans network has 19 756 proteins and 4884 interactions, the D.melanogaster network has 14 098 proteins and 25 054 interactions, the H.sapiens network has 22 369 proteins and 55 168 interactions, the M.musculus network has 24 855 proteins and 592 interactions, the S.cerevisiae network has 6659 proteins and 82 932 interactions and in total there are 87 737 proteins and 168 630 interactions. Pairwise sequence similarity scores correspond to the BLAST bit-values of the protein sequences retrieved from Ensembl (). With regards to the experimental results on synthetic data, we used synthetic PPI networks retrieved from the NAPAbench, which is a recently proposed synthetically constructed network alignment benchmark (). Owing to space considerations, we present our experimental evaluations regarding these synthetic networks in the Supplementary Document. Later in the text we provide a detailed evaluation of the alignment results produced by the three algorithms. In the next subsection, we analyze the output alignments in terms of quantitative properties. Following this discussion, we next provide an evaluation based on biological significance of the resulting alignments.provides a summary of a quantitative analysis of the alignments produced by the algorithms BEAMS, IsoRankN and SMETANA. For a more detailed analysis, in addition to the total coverage values provided by all the clusters, we also provide a separate analysis by subdividing the output set based on c, the number of networks represented in the clusters. The first four multirows provide these results for the instances of c  2,3,4,5, respectively. The total coverage of BEAMS and SMETANA are close, although that of SMETANA is slightly larger. The clusters produced by the alignments of both algorithms have far better total coverage than those of the IsoRankN alignments; each algorithm aligns almost 50% more proteins than IsoRankN. Considering the clusters as claimed orthologies, this implies that BEAMS and SMETANA leave out much less unexplained data by proposing orthology relations for most of the proteins. The main reason behind this discrepancy is the lack of IsoRankN clusters containing only proteins from two networks. Such a deficiency may lead to unreasonable conclusions, as it is natural to expect orthologous groups with proteins from only two species given that the pairwise evolutionary distances of the species under consideration have large variations. The top row in the multirow indicated with Interactions provides the number of conserved interactions (CI) resulting from the output alignments, the middle row indicates the total number of interactions between clusters and the bottom row provides their ratios. A PPI is assumed to be conserved if its cs score is greater than zero, i.e. the interaction is between a pair of proteins from different clusters that further contain at least one more pair of interacting proteins from another PPI network. For all instances of , the BEAMS algorithm provides more CI than IsoRankN. Furthermore, this superiority is not simply due to the large number of clusters produced by the BEAMS alignments; considering the ratio of the number of CI to the total number of interactions between clusters, it can be observed that the BEAMS alignments conserve a larger ratio of existing edges between all clusters. SMETANA performs better than BEAMS in terms of the number of CI. A reason that might account for this result is the sizes of produced clusters; the average cluster size for SMETANA alignments is 4.36, whereas that of BEAMS alignments is 3.90. An alignment with large cluster sizes has a better chance in providing larger number of CI. In the extreme case, simply subdividing the input networks into two clusters through the maximum cut of the networks provides a large interaction conservation even leading to 100% conservation ratio. On the other hand, larger cluster sizes may decrease the ICQ score, intended to measure the internal cluster quality, and thus the quality of the overall alignment. This becomes evident by inspecting the last row of the table that provides the AS scores of the alignments as defined in Equation (1). For each of the corresponding values of used in the AS definition, the BEAMS alignments provide better results than both IsoRankN and SMETANA alignments. We note that for SMETANA the AS score provided in the table is computed under  0.3 setting. The rest of the AS scores for SMETANA is 0.42, 0.36, 0.30, 0.24 and for values is 0.4, 0.5, 0.6, 0.7, respectively. Furthermore, as noted in Sahraeian and Yoon (2013), simply comparing CI counts may be misleading, unless the interaction conservations are among orthologous groups. The next subsection provides a measure denoted with COI (conserved orthologous interactions), which takes this fact into account.
Analysis of output clusters
Evaluations based on biological significanceSimilar to previous PPI network alignment studies, our biological significance evaluations are based on the hierarchical Gene Ontology (GO) categorization, where proteins are annotated with appropriate GO categories organized as a directed acyclic graph (). To standardize the GO annotations of proteins, similar to the evaluation methods of Aladag and Erten (2013),, we restrict the protein annotations to level five of the GO directed acyclic graph by ignoring the higher-level annotations and replacing the deeper-level category annotations with their ancestors at the restricted level. The protein annotations are used to measure the consistency of generated clusters. A cluster is annotated if at least two of its proteins are annotated by some GO categories.An annotated cluster is considered consistent if all of its proteins share at least one common standard GO annotation. The consistency evaluations of the BEAMS, IsoRankN and SMETANA alignments are provided in the first five multirows of. The top row in each of these multirows indicates the number of annotated clusters, the middle row provides the number of consistent clusters and finally the bottom row indicates the ratio of consistent clusters to annotated clusters. This ratio is called specificity in some previous alignment studies (). Considering the complete set of annotated clusters, it is clear that the BEAMS alignments outperform those of IsoRankN and SMETANA in terms of the number of consistent clusters. Furthermore, the aligned clusters of BEAMS are more specific than those produced by IsoRankN and SMETANA. To measure how sensitive the provided alignment results are, we use the sensitivity definition as in. Analogous to that definition, for a given GO category, let its closest cluster denote the cluster that contains the maximum number of proteins annotated with this GO category. The sensitivity of an alignment is then defined as the average, over all GO categories, of the fraction of aligned nodes annotated with a GO category that are also in its closest cluster. Correct nodes, another measure that reflects sensitivity of an alignment (), are defined as the total number of annotated proteins in all the consistent clusters. In the corresponding multirow, the top provides this number, whereas the bottom provides the ratio of correct nodes to the number of annotated nodes in the alignment. Additionally, we provide an alternative metric to measure the correct nodes of an alignment relative to an alternative alignment. An RCNC1 value shown under a BEAMS column provides the number of annotated proteins in consistent clusters in a BEAMS alignment and in inconsistent clusters in an IsoRankN alignment under the same settings. The RCNC1 value under an IsoRankN column provides the exact opposite. Similarly, RCNC2 measures analogous relative correct node counts between BEAMS and SMETANA alignments. We note that for SMETANA the RCNC2 score provided in the table is relative to the BEAMS alignment with  0.3 setting. The rest of the scores for SMETANA relative to the BEAMS alignments with  0.4, 0.5, 0.6, 0.7 settings are 5330, 5332, 5400 and 5367, respectively. The BEAMS alignments provide much better sensitivity, correct node counts and relative correct node counts than those of IsoRankN and SMETANA. Mean normalized entropy (MNE) is another consistency evaluation metric used in previous studies (). The normalized entropy of an annotated cluster
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
F.Alkan and C.Erten at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
BEAMS at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Let V denote the set of nodes in all the PPI networks,  max denote the maximum degree of any node in any of the input PPI networks and finally let  denote the maximum degree in S. With the reasonable assumptions that  max  O and jVj  O k , the running time of BEAMS is bounded by OV 2  k1 . A formal running time analysis of the algorithm can be found in the Supplementary Document. An important advantage of BEAMS and SMETANA over IsoRankN is their superb execution speed. For the IsoBase data experiments of this section, IsoRankN required almost 40 h for execution completion on average. The time requirements of BEAMS and SMETANA were similar. Both required almost half an hour for completion under the same computational settings. Furthermore, the memory requirements of BEAMS is much better than those of SMETANA; the former requiring 2.5 Gb for the experiments on the IsoBase data, whereas the latter required almost 4.5 Gb on the same input. Details of all the required CPU times can be found in the Supplementary Document. 4 CONCLUSION We provided a combinatorial optimization formulation for the global many-to-many alignment of multiple PPI networks. We showed that the problem is computationally intractable. Based on the general seed-and-extend framework, we then provided a novel heuristic, BEAMS for the problem. We compared the BEAMS algorithm against two popular state-of-the-art algorithms, IsoRankN and SMETANA. Using the network data of IsoBase, we showed that BEAMS outperforms both algorithms with regards to several biological significance metrics proposed in literature. We note that in addition to the many-to-many version of the network alignment problem, versions including one-to-one and one-to-many have also been studied previously. Owing to lack of standard criteria for evaluations of alignments produced by different versions, it was out of the scope of the current article to compare BEAMS against those algorithms proposed for one-to-one or one-to-many alignments. Further studies involving the design of evaluation criteria for various alignment problem versions would enhance our understanding of comparative biological network analysis.
