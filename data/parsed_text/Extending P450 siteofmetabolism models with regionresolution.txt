Motivation: Cytochrome P450s are a family of enzymes responsible for the metabolism of approximately 90% of FDA-approved drugs. Medicinal chemists often want to know which atoms of a mol-ecule—its metabolized sites—are oxidized by Cytochrome P450s in order to modify their metabolism. Consequently, there are several methods that use literature-derived, atom-resolution data to train models that can predict a molecule's sites of metabolism. There is, however, much more data available at a lower resolution, where the exact site of metabolism is not known, but the region of the molecule that is oxidized is known. Until now, no site-of-metabolism models made use of region resolution data. Results: Here, we describe XenoSite-Region, the first reported method for training site-of-metabolism models with region-resolution data. Our approach uses the Expectation Maximization algorithm to train a site-of-metabolism model. Region-resolution metabolism data was simulated from a large site-of-metabolism dataset, containing 2000 molecules with 3400 metabolized and 30 000 un-metabolized sites and covering nine Cytochrome P450 isozymes. When training on the same molecules (but with only region-level information), we find that this approach yields models almost as accurate as models trained with atom-resolution data. Moreover, we find that atom-resolution trained models are more accurate when also trained with region-resolution data from additional molecules. Our approach, therefore, opens up a way to extend the applicable domain of site-of-metabolism models into larger regions of chemical space. This meets a critical need in drug development by tapping into underutilized data commonly available in most large drug companies. Availability and implementation: The algorithm, data and a web server are available at http:// swami.wustl.edu/xregion.
IntroductionCytochrome P450 (abbreviated as CYP or P450) enzymes are a family of proteins responsible for the metabolism of $90% of FDA-approved drugs () The P450-mediated metabolism of a drug affects its clinical efficacy and safety. Knowing which atoms of a moleculeits sites of metabolismare oxidized by P450s enables medicinal chemists to rationally design new molecules with improved metabolic profiles. Determining which exact atoms of an individual molecule are metabolized is often difficult and expensive. The mass spectrometry experiments typically used in drug discovery most often can only identify regions of a molecule that are metabolized, rather than identify the specific metabolized atoms that medicinal chemists need to know. Analyzing the mass spectra of a P450-substrate reaction to determine metabolic products is a complicated problem, the). The key point is that although there are many ways of interpreting mass spectrometry data, none can reliably identify atom-resolution sites of metabolism for all molecules (). For these two reasonsthe value of knowing sites of metabolism and the difficulty of determining them at atom-resolutionsubstantial effort has been invested in building computational models that can predict a molecule's sites of metabolism (). There are several methods, but the best performing methods all use machine learning to train models from literature-curated databases of hundreds of molecules with known atom-resolution sites of metabolism (). The reliance of these models on literature-derived, atom-resolution data has two important consequences. First, the molecules used to train site of metabolism models are, for the most part, limited to only those available in the literature. Literature-derived data are based, primarily, on molecules that are structurally different from proprietarylead molecules. Consequently, models trained on literature data are often not as accurate on molecules in drug development, the exact molecules for which accurate predictions are most important (). Second, these models do not make use of the large number of molecules with known, region-resolution sites of metabolism, which can include data from thousands of molecules more similar to the molecules currently in development. To overcome these shortfalls, we introduce XenoSite-Region, the first reported method that uses region-resolution data to train atomresolution site of metabolism prediction models. Region-resolution data are much easier to experimentally obtain than atom-resolution data, and it is already collected in drug discovery on a regular basis. For example, Pfizer collects ADME data, including region-resolution sites of metabolism, on 2000 molecules every week, more than triple the total amount of atom-resolution data in literaturederived datasets (). By including this region-resolution data, site-of-metabolism models could extend into areas of chemical space that are poorly represented in the public domain. Our strategy is to modify an existing site-of-metabolism prediction method, XenoSite (), to train from regionresolution data. XenoSite uses a neural network to predict which atoms in the molecule are metabolized, and is a suitable starting point for our approach for two reasons. First, XenoSite is accurate, picking out a correct site of metabolism in the top two predictions for every molecule with an accuracy of 87% on literature-derived data. This accuracy surpasses those of other site-of-metabolism models like RS-Predictor (), SMARTCyp (), StarDrop () and Schrodinger (Schr dinger LLC, 2011)with performances of 84.3, 82.1, 75.8 and 68.2%, respectivelyon the same dataset (). Second, Xenosite can both train from probabilistically labeled training data and also outputs a score that is a well-scaled probability. In addition to using binary 1/0 labels on each atom, Xenosite can also train from data where the probability is used as a training target. Similarly, XenoSite's outputs range from 0 to 1 and correspond closely to the probability that an atom is a site of metabolism. Both these capabilities are necessary for the approach we will use to adapt XenoSite to use region-level data. We hypothesize that a statistical method called Expectation Maximization (EM) () can train XenoSite models with region-resolution data. XenoSite, like all reported machine learning methods in the literature, requires a training set with every atom labeled as a site or not-a-site-of-metabolism. For regionresolution data, however, these labels are hidden from us. EM is designed to work in just these situations, enabling statistical models to be trained with key variables hidden from view. The EM algorithm is iterative, using the output of the model to successively improve an estimate of the true labels for the training data, which is, in turn, used to improve the output of the model.
Materials and methodsIn this section, we start by describing the atom-and region-resolution data used in this study. Next, we specify the model used to predict sites of metabolism, describing how it is trained from atomresolution data. Finally, we explain how this model is extended with the EM algorithm to train from region-resolution data.
Atom-resolution dataFor this study, we use the largest publicly available repository of P450 substrates, which contains 680 molecules distributed across nine isozymes () (). Each CYP substrate is a molecule with multiple sites, at least one of which is a site of metabolism (a positive) and the rest are non-metabolized sites. Sites of metabolism are metabolized CYP enzymes, and the rest are not (). These data have two important nuances that must be understood (). First, some sites of metabolism actually correspond to more than one atom in cases where two atoms are involved in the CYP reaction. Second, atoms in molecules with local or global symmetries are topologically equivalent to one another. These groupings are automatically calculated for all molecules, and are available in the supporting information.
Multi-atom sitesEven when the exact site of metabolism is known, this site sometimes maps to more than one atom in a molecule. Using a strategy described in prior work, we group atoms representing the same metabolic reaction together into the same multi-atom site (). In this study, any halogen or oxygen bound to a single atom is grouped with the atom to which it is bound, forming a multi-atom site.
Topologically-equivalent atomsIt is also necessary to track atoms that are topologically equivalent. These atoms are modeled separately during training, so each oneyields its own distinct prediction in the model. During assessment, however, only the topologically equivalent site with the highest prediction is kept, with the others being discarded. This prevents topologically equivalent sites from being double counted.
Region-resolution dataPharmaceutical companies generate large amounts of region-resolution metabolism data (), which is entirely unused for modeling because there does not exist methods of using it. In public databases, there are hundreds of molecules with atom-resolution data, but in these private datasets there are thousands of molecules with region-resolution data. Unfortunately, these large databases of region-resolution data are not publicly available. Instead, we used a public database of atom-resolution metabolism data to simulate region-resolution data. Region-resolution data are simulated from the atom-resolution site of metabolism data for use in this study by using a graph partition algorithm () to splis each molecule in the training sets into regions of approximately three, five, seven or nine atoms (). In practice, regions of size five are most similar to those observed in real region-resolution data from mass spectrometry experiments, and the range of sizes enables us to assess the sensitivity of our approach to region size. Each of these regions is labeled with either the exact number of observed sites of metabolism (for the 'exact' region data) or a binary label indicating if there is one or more observed sites of metabolism (for the 'inexact' region data). These labels give rise to region constraints that are used during the training.
Site-of-metabolism modelXenoSite constructs models using a neural network with five hidden nodes. These models take as input a vector of numerical descriptors for each heavy atom in a molecule, and output a score for each atom.
Atom descriptorsIn this study, we use the five classes of descriptors to numerically characterize each atom. First, we use topological descriptors that encode features about the local graph structure of the molecule in the atom's neighborhood. Second, we use quantum descriptors that quantify the electronic structure near the atom as computed by MOPAC. Third, we include the output of SMARTCyp as an input descriptor, which quantifies each atom's reactivity with a heme iron in a quantum chemical simulation. Fourth, we use atom fingerprints to include information about other atoms in the training set that are in a similar environment. Fifth and finally, we include descriptors of the molecule as a whole. The exact specification of these descriptors is detailed in.
Training targetTo train the model, we need a target for each atom. For atomresolution data, this target is just a one or zero indicating if an atom. Topological equivalence and multi-atom sites. This sample molecule (bromfenac) illustrates both multi-atom sites and topologically equivalent atoms, two types of atom groupings that are important during training and assessment of site-of-metabolism models. (Top) Topologically equivalent atoms (grouped by gray boxes) arise from either global or local symmetries in the molecule. They are treated as multiple sites during training, but are grouped together when evaluating predictions. (Bottom) Multi-atom sites (grouped by gray shading) are formed by grouping halogens and singlybound oxygens with the heavy atom to which they are bound. Regions for an example molecule. Regions of approximately three, five, seven and nine atoms are marked on an example molecule, ellipticine, with grey polygons. For reference, the primary, secondary and tertiary atomic sites of P450 metabolism are marked, respectively, with solid, dashed and dotted circles. Qualitatively, regions of size five appear to be most similar to those obtained from mass spectrometry data is a member of an observed site of metabolism or not. We can also use a probability (a real number ranging from 0 to 1) in place of a binary target.
Training algorithmThe neural nework's weights are calibrated with gradient descent on the cross-entropy error (), For each training run, three random restarts were performed, and the weights with the best training set accuracy were kept. Models created with this protocol produce output scores between 0 and 1 that can be interpreted as probabilities. Probabilistically interpretable output is a key feature of this approach, as it enables us to apply the EM algorithm.
Multi-atom sitesThe model directly assigns a prediction for every atom in the molecule. Some sites, however, include multiple atoms. We define a site prediction y s as the probability that at least one of the associated atoms are metabolized,where the product is over the predictions of all the atoms y a in the site.
Region predictionFor each region, we can compute the predicted number of sites of metabolism within a region aswhere the summation is over the sites within the region.
The EM algorithmWe hypothesize that it is possible to use EM to learn P450 models from region-level data. EM is a statistical method that allows the parameters of a model to be fit, even when the outputs of the model cannot directly be observed in the training data (i.e. when they are hidden) (). Biologists may be familiar with EM because it is a technique frequently used to train Hidden Markov Models for sequence alignment and to fit multimodal distributions (). In our case, the hidden variables are the elements of a vector of numbers, associated with every site in the training data. Each variable should be a 1 for sites of metabolism and 0 otherwise, but we do not know what the correct value is, they are hidden. First, this vector is initialized to reasonable starting values. Next, during the Maximization step (M-step) we train a neural network to create a mapping between each atom's descriptors and the current estimate of the hidden variables. Then, during the Expectation step (E-step), we re-estimate our hidden variables using the trained model and the region constraints that specify how many sites of metabolism we expect in each region. Finally, we alternate between the E-and M-steps until convergence.
Initialization and progression of the algorithmThe EM algorithm alternates between E-and M-steps until convergence. To initialize the algorithm, we pick a random output vector Y  (y i ) by sampling from a uniform distribution ranging from 0 to 1. Applying the E-step to this vector gives an initial guess for our hidden variables, K  (k i ), which is consistent with the training data (Equation 3). Here, by consistent, we mean that the sum of k i s associated with each region is within the range of known sites of metabolism for the region. Each element of K is our current estimate of the exact atom-resolution sites of metabolism. Next, the M-step fits a neural network using K as targets (Equation 4),W 1 and Y 1 M-step K 1 ; D;where W 1 is the tuned weights of the neural network and Y 1 is the output of the model using these weights with the data. This output vector is used in the M-step to compute the next guess for the hidden variables K. The next iteration repeats the E-and M-steps,W 2 and Y 2 M-step K 2 ; D:Subsequent iterations repeat these steps until convergence. Convergence is most easily measured by waiting for the K vector to stabilize, which usually takes no more than 10 iterations. As the algorithm progresses, both the K and Y vectors should converge to the true, atom-level sites of metabolism. They should label the metabolized atoms with high probabilities, and the nonmetabolized atoms with low probabilities. This behavior is a key feature we hope to observe in our empirical studies, which would indicate atom-level sites of metabolism can be recovered from regionlevel training data.
Expectation stepThe E-step computes the expected values of the hidden variables K from the outputs Y conditioned on the region constraints associated with the training data. The expectation of the hidden variables is the probability-weighted average of all binary realizations of binomial distributions parameterized by Y that assign the right number of metabolized sites to each region. Conceptually, the expectation is computed by, first, enumerating all binary realizations of Y, each denoted as a vector of boldface variables Y  (y i ), from which binary site and integer region y variables are computed with Equations (1) and (2), respectively. Second, vectors that do not have the right number of sites in each region are rejected. Third, the remaining vectors are scored by their probability according to Y, and, finally, a probability-weighed average of the binary vectors is computed. This average vector is the expectation, and is assigned to K. While conceptually clear, computing K in this way is very slow because there are exponentially many realizations of Y that must be enumerated. Fortunately, the expectation is computable in polynomial time. Here, we treat the sites of metabolism labels as binary random variables following binomial distributions parameterized by Y. For each region, the expectation of these variables is assigned to elements of K. For sites in an individual region r known to have between m r and n r sites of metabolism, this update can be derived from Baye's Rule, Py s is 1 Pm r  1 y r  y s n r  1 Pm r y r n r  ;where y r is the integer sum of the binary labels associated with the sites in region r which contains site s, y s is the binary label associated with site s, Py s is 1 is probability according to Y that the site s is metabolized (or y s , using Equation 1 as required), the numerator is the probability that the number of sites of metabolism in the region, Extending P450 site-of-metabolism modelsignoring site s, ranges from m r  1 to n r  1, and the denominator is the probability that the number of metabolized sites in the region will range from m r to n r. For the exact data, m r and n r are equal to the known number of sites of metabolism in the region. For the inexact data, m r is one and n r is infinity for regions with at least one known site of metabolism, otherwise both m r and n r are 0. The summation distributions necessary to compute the probabilities in the formula are constructed by convolving Y parameterized binomial distributions associated with the region's sites. This requires only a few lines of code to implement, and is best understood by studying the Python implementation included in the supporting information. Multi-atom sites. For multi-atom sites, the expectation of individual atoms is conditioned on the expectation of its associated site k s Py a is 1 P1 y s  ;where k s is the expectation of the site from Equation (7), Py a is 1 is y a (the output of the model on atom a) and the denominator is the probability that at least one atom in the site is metabolized. Once again, the summation distribution necessary to compute the denominator is constructed by convolving binomial distributions corresponding to the summation terms.Topologically equivalent atoms. The expectation step estimates the atom-resolution sites of metabolism, assigning a k a to all atoms in the molecule, for use as a target during training. Topologically equivalent atoms may be assigned different targets, which is not consistent. Consequently, as a final step, topologically equivalent atoms are assigned the maximum k a of all the k a 's associated with them.
Maximization stepThe M-step finds a maximum a posteriori estimate of the neural network's parameters using gradient descent on the negative log likelihood of the data according the model,The network's parameters (an array W) are adjusted so the outputs of the network (an array Y), using the descriptor data (a matrix D) as an input, matches our current guess for the sites of metabolism (an array K). The final term is a weight decay term that keeps the network's parameters from becoming too large. H is the sum of the cross-entropy of all elements of K and Y,where the summation is over all atoms in the training data and is equivalent to the negative log likelihood of the data conditional on the model. This minimization computes a maximum likelihood estimate of the network's parameters given the data. This is a standard neural network training with gradient descent to match the network's output to our guesses for the atom-level sites of metabolism K.
Results and discussionIn the following sections, we study the behavior and performance of site-of-metabolism models trained on region-resolution data.
ConvergenceAs a first test, we verified that the model would converge within a reasonable number of iterations. Convergence was tracked by plotting how much either the Y or K vector changed during each iteration. Running the algorithm with 5-atom sized regions, we observed that the algorithm usually converged in five to six iterations (). This is an encouraging result, which was consistent across all isozymes and region sizes (data not shown). We therefore decided to iterate the EM algorithm 10 times in all further experimentsmore than enough to reach convergencerather than construct more complicated convergence criteria.
Identifying sites of metabolism in regionsAs a second test, we verified that the K and Y vectors converge to the atom-resolution sites of metabolism during training. Put another way, we expected that region-trained models should identify atomresolution sites of metabolism in the training data. In many specific cases, region-trained models identify sites of metabolism in metabolized regions (). There are also cases where the correct site of metabolism is not identified. These examples are only qualitative evidence, but we were able to quantify this behavior more systematically. Using the area under the ROC curve (AUC), we extracted all the sites within metabolized regions, and measured how well the output of the trained model separates sites of metabolism from non-metabolized sites. All AUCs were divided by the AUC performance of an atom-trained model, which serves as a good upper limit on the best performance we could expect from any of the region-trained models (). The region-trained models are never shown which sites within a metabolized region are the true sites of metabolism, so this is a valid assessment. Unfortunately, defining regions in different ways changes the atoms over which the performance is measured. The raw AUCs between different region sizes, therefore, are not directly comparable. However, normalizing performance by dividing by the atom-trained performance makes the AUCs comparable. The atom-trained models, in this sense, are trained with the exact sites of metabolism and are only included here to make the region AUCs comparable. In this assessment, we see that, across all isozymes, regiontrained models can identify sites of metabolism in metabolizedin the first few iterations, after which the change quickly stabilizes at a low value. The distance never reaches 0 because of small variations from run to run and floating point errors. These convergence behaviors are consistent across all isozymes and region sizes regions with almost the same accuracy as atom-trained models. As would be expected, their ability to identify sites of metabolism is not as strong as atom-trained models and decreases as region size increases. This is a critical result, because it shows that the EM algorithm is working as we would hope, and we expect that the regiontrained models will work nearly as well as atom-trained models. We see nearly the same performance in both the exact and inexact datasets. The inexact data only mark regions as containing more than one site of metabolism or not, without specifying exactly how many sites are metabolized. Inexact regions, for this reason, give the algorithm less information. It is not always possible to exactly specify how many sites of metabolism are in a region from mass spectrometry data, so the performance on the inexact data is important to track. The fact that the inexact-trained performance is nearly the same as the exact-trained performance is encouraging.
Cross-validated accuracyFor the next test, we assessed the accuracy of region-trained models using leave-one-out cross-validation. In this assessment, we hold out one molecule from the training set to test on for each fold. In turn, every molecule is held out from training and then has its sites of metabolism predicted by the trained model. Predictions are assessed using the Top-2 metric, where the percentage of molecules where a correct SOM is predicted within the top two sites of the molecule. They are also assessed using the average AUC, where the AUC for each molecule is computed and averaged across the whole dataset. The performance of region-trained models is compared with atomtrained models configured with identical parameters. There are no other region-trained methods with which to compare because this is the first published study on this problem. We expect that regiontrained models will perform nearly well as the atom-trained models in this assessment. This is exactly what we see. Region-trained modelsusing either exact or inexact regionsperform quite well, having results that are comparable to those of atom-trained models (). Using the Top2 metric, we see exact region-level models using regions of size 3, 5, 7 and 9 to have respective accuracies 1, 10, 17 and 25%, respectively, lower than those of atom-level models, averaged across all isozymes. With inexact regions, we observe average performance drops of 5, 9, 13 and 19%, respectively. Using the AUC metric, we see similar patterns, with an average performance loss across all isozymes of 2, 9, 14 and 18% for exact regions of size 3, 5, 7 and 9, respectively. With inexact regions the performance drop is comparably small; we see an average performance drop of 9, 15, 17 and 21% for the same region sizes. As we would expect, the atom-trained models tend to perform the best, having the highest accuracy for all but two of the datasets. Likewise, the accuracy of the region-trained models falls off as the. Identifying atomic sites of metabolism in region-resolution training data. Sample molecules from the 7-atom region dataset (with regions circled) demonstrate how the correct site of metabolism is often identified in training molecules, even though this information is not given to the algorithm (top left and right molecules). Sometimes, however, the correct site of metabolism is not identified (top right molecule). Using the AUC normalized by the performance of atomtrained models, we quantified this behavior by extracting all the sites within metabolized regions, and measuring how well the output of the trained model could separate sites of metabolism from non-metabolized sites. This is true for models trained with both exact and inexact region data region size increases. Nonetheless, the performance for regions of size is very close to atom-trained data. Similar results were observed using alternative performance metrics, including AUC and the Top-3 metric (results not presented). This is an exciting result, demonstrating that it is possible to train models on the region-resolution data.
Extending models with region-resolution dataThe results presented so far suggest that we can, in fact, train siteof-metabolism models on region-resolution data alone. In practice, however, there is often atom-resolution data for some molecules and region-resolution data for other molecules. We hypothesize that using both types of data simultaneously is better than training on the atom-resolution data alone. Moreover, we hypothesize that using the region-resolution data can improve the model's accuracy on molecules structurally distant from the atom-resolution data. Pharmaceutical companies want to predict the metabolism their molecules. They have atom-resolution metabolism data from publicly available sources and a much larger amount of private, region-resolution metabolism data, generated in-house, for molecules similar to theirs. Currently, the region-resolution data are ignored in modeling, but could including the region-resolution data improve the models? We simulate this scenario using a modified version of leave-one-molecule-out cross validation. For each cross-validation fold, there is one molecule in the test set, and the remaining molecules are used as the training set. Using fingerprints similar to Daylight fingerprints (), the molecules in the training set are sorted by their Tanimoto similarity to the test molecule. During training, the atom-resolution data are available for only the 25% most dissimilar molecules from the test molecule. Region-resolution data are available for the remaining 75% of molecules. Now, we train and test two models. One model trains on the atom-resolution data alone, on just 25% of the training set. The other model trains on both the atom-and region-resolution data together. For this experiment, we measured performance with two metrics, Top-2 accuracy and Average AUC. The Average AUC is a more sensitive metric that also assesses how well sites of metabolism are picked out by the model. An ROC curve is constructed for each molecule, and the AUC is computed for curve. The average of these AUCs across all molecules in the training set is the Average AUC. We expect that training on a reduced set of atom-resolution data will reduce the models' performance, but we also expect that some of this performance drop will be reversed by adding back the missing molecules as region-resolution data. This is exactly the behavior we. Top-2 performance using leave-one-molecule-out cross-validation. We quantified the performance of atom-and region-trained models using the Top-2 metric: the percentage of molecules for which a site of metabolism is ranked within the top two sites of the molecule. Region-trained models perform nearly as well as atom-trained models, though their accuracy does decrease as the size of regions increases. Extending atom-trained models with region-resolution data. We compared the performances of models trained using 100% of atom-resolution data, 25% of atom-resolution data and 75% region-resolution data. According to both the Average AUC (left) and Top-2 (right), there is a performance drop across all isozymes when only 25% of the atom-resolution data is used. This performance drop is substantially reduced by adding back in the region-resolution data for the removed molecules. The figures show the results only using exact regions of size 5, but very similar results are observed for all regions datasets observe (). Training on just 25% of the atom-resolution data causes the performance to drop (by the Average AUC metric) by an average of 6% across enzymes. Adding the missing molecules as region-resolution data reduces the performance loss to 1, 2, 3 and 4% using regions of size 3, 5, 7 and 9, respectively. Very similar results are observed with the Top-2 metric. We see an average performance loss of 8% for the atom-only model across isozymes. Adding the region-resolution data back reduces this performance loss to 2, 3, 4 and 5% for regions of size 3, 5, 7 and 9, respectively. When available, atom-resolution for all molecules is best, but this data are not always available. These results indicate that using region-resolution data where atom-resolution data are not available can train site-of-metabolism models nearly as accurately as if atomresolution data for all molecules were available.
ConclusionIn this study, we present the first site-of-metabolism model that uses region-resolution data. Moreover, it appears that extending atom-resolution training data with region-resolution data improves the accuracy of site-of-metabolism models. This is an exciting result, because there is often much more region-resolution site of metabolism data available in pharmaceutical companies, much of which covers chemical space currently underrepresented in public atomresolution literature-derived data. By using data already collected in drug development, but unused for modeling, Xenosite-Region may prove to be a powerful way of extending site of metabolism models making them more accurate. Furthermore, the approach we describe here is general and could extend other SOM modeling approaches to use region-resolution data as well, and we leave this for future work.
Supporting InformationIsozyme-specific substrate sets are provided as SDF files in the supporting information. These files indicate the specific atoms that are oxidized when the substrate is metabolized by the given CYP isozyme. Additional files are provided that indicate, for each atom, whether it is or is not metabolized, it's topological and multi-atom site information, and, in separate files, the substrate region to which the atom has been assigned.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
J.M.Zaretzki et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
