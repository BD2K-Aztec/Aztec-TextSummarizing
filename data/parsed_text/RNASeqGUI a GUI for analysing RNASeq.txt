We present RNASeqGUI R package, a graphical user interface (GUI) for the identification of differentially expressed genes across multiple biological conditions. This R package includes some well-known RNA-Seq tools, available at www.bioconductor.org. RNASeqGUI package is not just a collection of some known methods and functions, but it is designed to guide the user during the entire analysis process. RNASeqGUI package is mainly addressed to those users who have little experience with command-line software. Therefore, thanks to RNASeqGUI, they can conduct analogous analyses using this simple graphical interface. Moreover, RNASeqGUI is also helpful for those who are expert R-users because it speeds up the usage of the included RNASeq methods drastically. Availability and implementation: RNASeqGUI package needs the RGTK2 graphical library to run.
INTRODUCTIONThere is a plethora of RNA-Seq data analysis tools available to study the difference of the gene expression across multiple biological conditions; see Soneson and Delorenzi (2013) for a review. Generally, a complete analysis requires carrying out several steps, using different methods and comparing their outputs to obtain more reliable and less biased results. RNASeqGUI is a tool that facilitates and speeds up the exploration of the RNASeq data, the usage of several RNA-Seq methods and the comparison of different results. Moreover, RNASeqGUI is a modular software. This gives the user the possibility to customize the software for a specific type of study.
Other GUIs and objectives of RNASeqGUISeveral bioinformatics tools () have been implemented as user-friendly graphical interfaces to provide point-and-click access to sophisticated data analysis. Among them, RNASeqGUI has a clear focus on the analysis of RNA-seq data. Analogous focus, but with different functionalities, is present in. More recently, Sanges et al.(2007) has been extended to RNA-Seq data analysis as well. With respect to these interfaces, RNASeqGUI has some overlaps, but also several unique features to be considered a useful and valid alternative. The design of RNASeqGUI main interface is inspired to that one presented in. It tries to be intuitive and to guide the user through the RNA-Seq data analysis. To meet this goal, the main interface (described in detail in the rest of the article) is organized into several different sections/interfaces (), each of them devoted to a specific stage of the analysis. Usability is enhanced thanks to the presence of numerous explanatory vignettes. Moreover, RNASeqGUI is designed to facilitate the extensibility, thanks to its software development organization. In fact, it is extremely easy to add new buttons that call new functionalities. Therefore, a user can customize RNASeqGUI interfaces for his own purposes and benefits by adding the methods he needs mostly (for more details see How to customize RNASeqGUI: Adding a new button in just three steps of the user manual).
STRUCTURE OF RNASEQGUI MAIN INTERFACERNASeqGUI R package was implemented by following and expanding the idea presented in Villa-Vialaneix and Leroux (2013) and using the RGTK2 graphical library (Lawrence and Temple Lang, 2010). Its main interface is divided into five sections (). Each section corresponds to a particular step of the RNA-Seq data analysis work-flow and includes one or more graphical interfaces. Inside each interface, there are several available functions (also called methods). Each function takes specific inputs that can be numeric ones, strings or both and produces one or more outputs that can be plots, text files or both. Each analysis starts by creating or retrieving a specific project. Despite the fact that each function can be executed by simply clicking the corresponding button, for each project a detailed history of all performed steps is automatically saved in a report file. In the following, we briefly describe all sections of RNASeqGUI main interface.
Bam exploration sectionIn the first section of RNASeqGUI main interface, we find the Bam Exploration Interface that can be easily called by clicking the corresponding button (). This interface includes five different methods to explore the alignment files (in bam format), such as Read Counts, Mean Quality of the Reads, Per Base Quality of Reads, Reads Per Chromosome, Nucleotide Frequencies. Each of these functions takes as input a folder containing all the bam files that the user wants to explore. Usually, *To whom correspondence should be addressed. each bam file corresponds to a sample. This section is important to discover possible errors that may have occurred either during the alignment step or during the experimental steps (i.e. sequencing, PCR, extraction of RNA-sequences).
Count sectionIn the second section of RNASeqGUI, we find the Read Count Interface that gives the possibility to perform the quantification process against an annotation file in gene transfer format (GTF) format. It works similarly to htseq-count (www.huber.embl.de/ users/anders/HTSeq). The Count Reads button, inside this interface, calls summarizeOverlaps function from the package GenomicRanges (). It can be used in three different modes (Union, IntersectionStrict and IntersectionNotEmpty) and returns a table of counts, where the first column represents the gene names, while the remaining columns correspond to the names of the bam files. Rows report the number of reads that have hit a particular gene in the given sample. Read counting can be a computationally expensive process, especially for large experiments with several samples and big alignment files. The R environment is not optimized for this particular task. Therefore, this procedure makes use of bplapply function of the BiocParallel package () to parallelize the code to reduce the execution time.
Pre-analysis sectionIn the third section of RNASeqGUI, there are two interfaces: Data Exploration Interface and Normalization Interface. Both interfaces take an input count file that must be tab-delimited as those provided by Count Reads function as output, with rows representing genes names and the columns representing the samples. Data Exploration Interface: This interface includes 12 methods, such as Plot Pairs of Counts, Plot all Counts, Count Distr, Density, MDPlot, MeanVarPlot, Heatmap, Principal Component Analysis (PCA), PCA3D, Component Histogram, QplotHistogram and Qplot Density. This interface uses several functions defined in, and it is crucial to find out possible biases that could affect the RNASeq-experiment and provide useful diagnostic figures to decide whether a normalization procedure is needed. Normalization Interface: This interface includes four normalization procedures, such as reads per kilobase per million mapped reads (RPKM) (), Upper Quartile (), trimmed mean of M-values (TMM) (), Full Quantile ().
Data analysis sectionThis section is the core of RNASeqGUI and contains the Data Analysis Interface. This interface includes five different statistical methods to identify differentially expressed (DE) genes, such as edgeR (), DESeq, DESeq2 (), NOISeq (), baySeq (). Each method takes an input count file and returns two text files and one or more plots. The first text file shows the results of the chosen method, whereas the second text file shows the differentially expressed genes only.
Post-analysis sectionThis section includes two interfaces: Result Inspection Interface and Result Comparison Interface. Result Inspection Interface: This interface includes the possibility to generate volcano plots, fold change plots and histograms of the false discovery rates (FDRs) or P-values for each method for the user to explore the results. It is also possible to display a specific gene of interest inside the volcano or the fold change plot. All generated plots are automatically saved in pdf format. Result Comparison Interface: This interface includes the possibility to generate Venn diagrams and text files that show those genes that have been identified as differentially expressed by the methods used in the Data analysis section.
USAGE EXAMPLEIn this usage example, we start the analysis of the RNASeq data from alignment files and we compare the results of edgeR, DESeq and NOISeq among them. We analysed the dataset published byand used inas a real data working example. We selected the chromosome 2L only to reduce the execution time. Aligned data (bam files) are available at http://bioinfo.na.iac.cnr.it/RNASeqGUI/Example. We analysed the expression of 2986 genes belonging to 2L chromosome. The methods found 128, 148, 102 DE genes, respectively. The intersection of these three gene sets contains 86 genes. Hence, all the three methods used found 86 DE genes in common (for more details, see the Supplementary data).
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RNASeqGUI at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RNASeqGUI is an R package that allows the quick usage of several methods to identify the differentially expressed genes from RNASeq experiments. In future, we will include new methods, new normalization procedures, the possibility to define more complex experimental designs, the pathway analysis and the Gene Ontology.
F.Russo and C.Angelini at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
