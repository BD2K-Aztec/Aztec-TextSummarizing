Motivation: Recent advances in technology have dramatically increased the availability of proteinâ€“protein interaction (PPI) data and stimulated the development of many methods for improving the systems level understanding the cell. However, those efforts have been significantly hindered by the high level of noise, sparseness and highly skewed degree distribution of PPI networks. Here, we present a novel algorithm to reduce the noise present in PPI networks. The key idea of our algorithm is that two proteins sharing some higher-order topo-logical similarities, measured by a novel random walk-based procedure , are likely interacting with each other and may belong to the same protein complex. Results: Applying our algorithm to a yeast PPI network, we found that the edges in the reconstructed network have higher biological relevance than in the original network, assessed by multiple types of information , including gene ontology, gene expression, essentiality, conservation between species and known protein complexes. Comparison with existing methods shows that the network reconstructed by our method has the highest quality. Using two independent graph clustering algorithms, we found that the reconstructed network has resulted in significantly improved prediction accuracy of protein complexes. Furthermore, our method is applicable to PPI networks obtained with different experimental systems, such as affinity purification, yeast two-hybrid (Y2H) and protein-fragment complemen-tation assay (PCA), and evidence shows that the predicted edges are likely bona fide physical interactions. Finally, an application to a human PPI network increased the coverage of the network by at least 100%.
INTRODUCTIONRecent advances in high-throughput techniques, such as yeast two-hybrid (Y2H) and tandem affinity purification, have enabled the production of a large amount of proteinprotein interaction (PPI) data (). These PPI data can be modelled by networks, where nodes in networks represent proteins and edges between the nodes represent physical interactions between proteins. These networks, together with other high-throughput functional genomics data, are offering unprecedented opportunities for both biological and computational scientists to understand the cell at a systems level (). For example, global analysis of PPI networks has revealed important connections between topology and function (). PPI networks have also been used for predicting gene functions, functional pathways or protein complexes, with both supervised and unsupervised methods (). Furthermore, much effort has been devoted recently towards incorporating PPI networks to obtain a better mechanistic understanding of complex diseases and to improve the diagnosis and treatment of diseases (). However, the growing size and complexity of PPI networks poses multiple challenges to biologists. First, PPI networks often have a high false-positive rate and an even higher false-negative rate (). Second, PPI networks are typically sparse, partially because of the high false-negative rate, which places a hurdle for algorithms that rely on neighbour information, for example, in gene function prediction (). Third, PPI networks are known to have skewed degree distribution, meaning that they have more than expected quantity of hub genes. Such hub nodes can often reduce the performance of existing graph theoretic algorithms (e.g. for predicting protein complexes) that were often designed for networks with relatively uniform degree distributions. In this article, we present a novel method to improve the quality of a given PPI network by computationally predicting some new interactions and removing spurious edges. It is worth noting that our idea is purely based on the topology of the network, with no additional biological information involved. This ensures that our algorithm can be easily combined with other algorithms that have already been developed for predicting protein complexes or performing PPI-based studies. There are also several studies that attempt to combine additional biological information, such as gene ontology and gene expression, with PPI network for protein complex prediction (). It should be straightforward to use our method in these approaches, by replacing the PPI network with our reconstructed PPI network. To assess the performance of our algorithm, we tested it on three yeast PPI networks obtained with different experimental systems, and we examined the biological relevance of the results *To whom correspondence should be addressed.  The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com using multiple information sources, including gene ontology annotations, gene expression data, protein complexes, list of essential genes, conservation between species and a large collection of known physical interactions in the BioGRID database. Results show that the predicted PPIs have much higher functional relevance than the removed ones, and they are likely bona fide physical interactions. Comparison with several existing methods shows that the network reconstructed by our method has the highest overall quality. Furthermore, applying two independent graph clustering algorithms, we found that the reconstructed network has resulted in significantly improved prediction accuracy of protein complexes. Finally, an application to a human PPI network shows encouraging results.
METHODS
Rationale and related worksIn recent years, many computational methods have been developed to predict missing links from networks (), and reviewed in (), some of which have been successfully applied to PPI networks. These methods basically fall into two categories: common neighbour based and distance based. The first type of methods is based on a simple yet effective ideatwo nodes sharing many common neighbours are likely in the same module (). These methods may have limited value on PPI networks that are usually sparse. To circumvent this problem,generalized the idea to consider neighbours of greater path lengths and showed that the so-called 'global geometric affinity' (GGA) measurement can help predict new PPI. The second type of methods measures the 'distance' between pairs of nodes in the network taking into consideration all alternative paths; popular examples include two algorithms based on random walks, namely, Euclidean commute time (ECT) () and random walk with restart (RWR) (). ECT measures the expected number of steps needed for a random walker to travel between two nodes as the distance between them, whereas RWR computes the probability for a random walker starting from node i to reach another node j. Performance of this type of methods may be significantly affected by hub nodes that are connected to many nodes in the network. Another method falling into this category is because of, where they attempted to embed a PPI network into a low dimensional geometric space using multiple dimensional scaling (MDS), and assign edges to pairs of nodes that have short distances in the embedded space. While good performance was observed, this method may not work very well in general as it may not always be easy to find an accurate geometric embedding for a given PPI network. In this work, we propose a novel method that can be considered as a generalization of the simple common neighbour-based method, combining ideas from the distance-based method. We hypothesize that two nodes having similar 'distances' (in the view of a random walker) to all other nodes in the network can potentially interact with each other. This idea is more general than the aforementioned two types of methods because it can not only predict links that are covered by the aforementioned two types of methods but can also predict links between nodes that are themselves far away from each other (for a random walker) and do not share any common neighbours. The basic idea of our method consists of three steps and is illustrated in. First, a topological profile, which measures the 'distances' between a target node and all other nodes in the network, is calculated for each node. Second, similarities of topological profiles are calculated between every pair of nodes. In the final step, edges are created to connect nodes that are topologically similar. The framework is general, and each step can have multiple designing choices. Here, we propose a novel random walk procedure for computing topological profiles, which can handle hub nodes better than the existing random walk-based methods. We use simple ideas for the other two steps, leaving room for future improvements.
Random walk with resistanceLet GV, E be an undirected graph representing a PPI network, with V the set of nodes and E the set of edges (for convenience, a self-loop is also added for each node). For v 2 V, let Nv  fu 2 V jfv, ug 2 Eg be the set of neighbours of v and dv  Nv the degree of v.The simple random walk for one node on a graph G is a walk on G where the next node is chosen uniformly at random from the set of neighbours of the current node. Formally, when the random walker is at node i, the probability for her to move in the next step to the neighbour j is P ij  1=di for fi, jg 2 E and 0 otherwise. Assume that a random walk is initiated at a node v. Let q k v, i be the probability for the random walker sitting at node i at a discrete time point k. Then, at time point k  1, the probability for the random walker taking the path from node i to node j can be calculated asand the probability for the random walker to reach node j at time point k  1 can be calculated asIt is important to note that, under some mild conditions, with this simple random walk, the probability to reach node j, q v, j , converges to the same value regardless of the starting point v (LovaszLovasz, 1993). Therefore, the stationary probability distribution obtained from the simple random walk cannot be used directly to measure distance between nodes. To provide a measurement of the distance between two nodes in a network, several modifications have been proposed. For example, ECT measures the expected number of hops needed to travel between two nodes in the simple random walk (), whereas RWR attempts to bias the random walk to stay close to the starting node by teleporting the random walker to the starting node with a certain probability (). Here, we describe a random walk algorithm, named random walk with resistance (RWS), based on two key ideas: (i) we bias the random walker towards staying close to the starting point by adding a small amount of. Basic idea of our method resistance on each edge of the network, and (ii) we introduce a condition to discourage the random walker from roaming into new territories via hub nodes, by adding additional resistance for a random walker to overcome when meeting a new node that she has never visited before. The algorithm can be best described as a modification to the simple random walk algorithm. Basically, we replace Equation (1) bymax0, q k v, i P ij  , if q k v, j 40; max0, q k v, i P ij  , if q k v, j  0 max t q k v, t P tj  ! ; 0, otherwise:The probability of reaching node j at time point k  1 is then calculated by adding up the probabilities to enter j from all paths, and re-normalized so that the probability vector sums to 1:As in Equation (3), the algorithm first checks whether a destination node, j, is new to the random walker. If not, that is, q k v, j 40, the random walker will visit the node with probability q k v, i P ij . The probability will be set to 0 if it is 50. Combined with the normalization step, the purpose of introducing the parameter is similar to the teleporting idea in RWR that biases the random walker to stay close to the starting node, so that the stationary probability vectors for different starting nodes are not always converged to the same values. If the node j is new to the random walker, then an additional parameter, , is introduced to discourage the random walker from visiting the new node, unless there is at least one path for v to enter j with sufficiently large probability. The main motivation for this step is to reduce the impact of hub nodes in the random walk process. Imagining that without the parameter, a random walker reaching a hub node will be able to travel, with the same probability, to all other nodes that are connected with the hub nodes, which may or may not be functionally related to the starting node. In contrast, with our algorithm, given the same scenario, the random walker would selectively prefer the nodes that are not only connected to the hub nodes but are also connected with the starting node via some alternative paths not involving the hub nodes. (See Supplementaryfor a toy example). In our experiment, is set to V j j= E j j 2 and is set to 1= E j j. This choice is based on an analysis of the minimum and average value of f v, ij on each edge. Empirically, we have found that these two values perform well on multiple, both biological and non-biological, networks. Variations of these two values within a constant multiple do not significantly change the results. The aforementioned procedure is applied iteratively for each starting node. A random walker is considered to have reached its stationary distribution when the change of its probability to arrive at any node is less than a small cut-off value. In our experiment, all nodes converged in 520 iterations, which only took a few minutes on a personal computer.
Calculating topological similarityAfter applying the aforementioned random walk procedure to the network, we have a V j j  V j j probability matrix, denoted as   h i, j i V j j V j j , where i, j represents the probability for a random walker started at node i to reach node j at convergence. To magnify the difference between probability vectors from different nodes, we first obtain the median vector H from all the vectors, where the j-th element of H is defined as H j median ( i1$ V j j, j ). This median probability vector is similar to the stationary probability vector for the simple random walk. We then calculate the V j j  V j j offset matrix , where  ij  ij H j. Finally, we calculate the Pearson correlation coefficient between each pair of rows or columns of the offset matrix as a measurement of topological similarity, C ij , between nodes. Empirically, we have found that using columns of the offset matrix as topological profiles, that is, letting C ij pcc( 1$ V j j, i ,  1$ V j j, j ), works slightly better than rows. Informally speaking, a row vector represents the information passed from a node to all nodes in the network, whereas a column vector represents the information that a node receives from the network; therefore, the latter is a more accurate way of describing the position of the node in the network.
Reconstructing PPI networkFinally, a network is reconstructed from the topological similarity matrix by connecting pairs of nodes whose similarity is above a certain threshold. Although more sophisticated methods are possible (e.g., in this article, we choose to implement a simple strategy for easy evaluation and fair comparison to other methods: we simply pick a cut-off value so that the number of edges can be kept the same as in the original network. We will show that this simple strategy worked well. In Section 4, we discuss some future plans in improving cut-off selection, which should further improve the quality of the reconstructed network, and particularly, reduce the false-negative rate of PPI networks. slightly lower but consistent values (Supplementary). We also measured the Pearson correlation coefficient between the gene expression profiles of every pair of genes, using the yeast stress response microarray data (). We used the average similarity of the pairs of nodes connected by an edge in a certain group to represent the functional relevance of that edge group. As shown in, the after group has a higher functional relevance than the before group based on both GO and gene expression. Moreover, the confirmed group has the highest functional similarity compared with the other groups, and the removed group is far lower than the new group. The standard error of these average measurements are all 510 5 ; therefore, these differences are highly significant. Further investigation showed that the GO-based similarity is 40:95 for 36% and 32% of the edges in the confirmed and new groups, respectively. In contrast, only 7% of removed edges have a GO-based similarity 40:95 (). Next, we used essential genes to compare different edge groups. The list of essential genes in yeast is retrieved from the Saccharomyces Genome Database (). As two interacting proteins may belong to the same protein complex, they tend to have the same essentiality. In other words, if one is (not) essential, the other is also expected to be (not) essential. As shown in, the percentage of the removed edges that share the same essentiality is actually lower than that of the randomly generated edges, which suggests that the removed edges are probably connecting genes in different complexes (also see Section 3.2). In contrast, the measurement for the new edges is close to that of the confirmed PPIs. We also looked at the conservation of the edges in other species. We downloaded conserved PPIs between yeast and four species including Caenorhabditis elegans, fly, mouse and human from InteroLogFinder (http://www.interologfinder.org/) (). As shown in, a considerable fraction of confirmed edges are conserved in at least two other species. Although a small fraction of the removed edges are conserved in one or two species, they are rarely conserved in more than two species. In comparison, the new edges tend to be more conserved than the removed edges, although not as much as the confirmed ones. The conservation analysis also suggests that the predicted edges are bona fide physical interactions rather than functional links (see also Section 3.5). Finally, it has been shown that genes with high connectivity in the PPI network tend to be more essential, but it is also known that connectivity and essentiality (percentage of genes that are essential) are only weakly correlated (). For example,shows that although the essentiality of genes is generally increasing for genes with low to intermediate degrees, the essentiality of genes with the highest degrees is relatively lower than expected by their degrees. Besides several possible explanations, it may be that some of the proteins with the highest degrees may be 'sticky' in the sense that they may seem to interact with many proteins under the experimental protocol, but these interactions do not exist in reality because the protein ispoorly expressed or not co-expressed with the proteins they can potentially interact with. It can be seen that in the reconstructed network, essentiality and degree have a much better correlation (). In summary, using multiple independent sources of evidence, we have shown that the new edges have clearly higher functional relevance than the removed ones. These results suggest that our algorithm can indeed reduce the noise in PPI network and improve the network quality.
Reconstructed PPI network improves accuracy of protein complex predictionWe investigated whether the improved PPI network can also improve the prediction accuracy of protein complexes. We applied two network clustering algorithms to the original and modified PPI networks, and compared the predicted complexes with the MIPS known protein complexes (), which included 767 proteins in 170 known complexes after intersecting with the PPI network. Markov Clustering Algorithm (MCL) is a well-known graph clustering algorithm and has been shown to outperform other protein complex prediction algorithms in two independent evaluation studies (Brohee and van). HQcut is a community discovery algorithm developed by one of the co-authors, based on the optimization of a so-called modularity function (). For MCL, we set the inflation parameter to 1.8 as suggested by others (Brohee and van). HQcut does not require any user-tuned parameters. To measure the accuracy of the prediction, we used the FowlkesMallows index for comparing clustering (). Formally, let A be the list of gene pairs that fall into the same complex in the set of predicted complexes and B that in the set of known complexes, the prediction accuracy is measured by A \ B j j= ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi A j j  B j j p , where A j j denotes the cardinality of the set A. As shown in, the prediction accuracy is significantly improved for both MCL and HQcut, demonstrating that the improvement is general. Moreover, as the MIPS database of known protein complexes only covers 530% of the proteins in the PPI network, we measured the average pairwise functional similarity using gene ontology semantic similarity and co-expression (see Section 3.1) between every pair of nodes that are predicted to be in the same complex. Again, it is shown that the results are improved significantly in the modified network for both MCL and HQcut (). To further investigate why the reconstructed network can result in better prediction accuracy of protein complexes, we directly compared different edge groups for the fraction of edges that are connecting genes in the same known complex (in-complex) versus those that are in different known complexes (between-complex). Indeed, as shown in, the new edges have much higher in-complex probability and lower betweencomplex probability compared with the removed edges, whereas the confirmed edges have the highest in-complex probability and lowest between-complex probability. Therefore, it is likely that the reconstructed PPI network can be combined with any existing protein complex prediction algorithm and improves its accuracy.shows the changes to the PPI network relevant for two known protein complexes. The prediction for the Arp2/3 complex is improved in the after network, because connectivity is increased within the complex, and many between-complex edges are removed. Interestingly, for the anaphase-promoting complex (APC) complex, our algorithm not only removed several external edges and added many in-complex edges but also predicted interactions between a non-member protein, MND2 and the complex members. It turns out that MND2 is indeed a member of the APC complex ().
Comparisons with previous methodsWe compared our algorithm with four existing methods, namely, ECT (), RWR (), MDS () and GGA (). The ECT and RWR methods are well known in data mining and network analysis communities, whereas the MDS and GGA methods were recently proposed to improve the quality of PPI networks (see Section 2.1). As all four algorithms calculate some topology-based similarity scores for pairs of nodes, and then use different (ad hoc) approaches to determine cut-offs, for a fair comparison, here, we simply took the top 7123 pairs of genes having the highest scores as the predicted PPIs.Knownshows the change to the network introduced by each method. We then compared the functional relevance of the reconstructed PPI networks. As shown in, the PPI network reconstructed by our method has the highest GO similarity, highest fraction of in-complex edges and lowest fraction of between-complex edges. In fact, our algorithm is the only method that shows consistent improvement over the original network using all four criteria. For example, RWR improved GO similarity scores and the fraction of in-complex edges, but at the same time reduced the co-expression scores and increased between-complex edges. GGA resulted in lower co-expression scores. The network reconstructed by ECT has slightly higher co-expression than the network reconstructed by our method, but its GO similarity score is much lower than the original network, and it has a decreased fraction of in-complex edges and an increased fraction of between-complex edges. MDS resulted in degraded functional relevance scores according to all measurements except between-complex edges.
Applicability to other types of PPI networksWe also applied our method to two other datasets, obtained by, using Y2H and protein-fragment complementation assay (PCA), respectively. Although the affinity purification (AP) technique used inis designed to capture co-complex memberships, Y2H and PCA directly detect binary interactions and were shown to have higher false-negative rate but lower false-positive rate than AP (). The original Yu and Tarassov networks cover 1278 and 1124 genes with 1641 and 2513 edges, respectively, excluding self-interacting edges. With our method, we were able to replace (predict and remove) 706 (43.0%) and 1203 (47.9%) of the edges for the two networks, respectively. As shown in, the evaluation results based on Gene Ontology for these two datasets and the evaluation results based on co-expression for the Yu data set are consistent with those for the Krogan dataset, confirming the general applicability of our method to PPI networks regardless of the experimental systems used to infer them. On the other hand, the differences between the predicted and removed edges are smaller in Yu/Tarassov data than in Krogan data. In fact, for the Tarassov data, the removed edges have slightly better co-expression than the predicted ones; nevertheless, both are lower than the confirmed edges and significantly higher than the randomly predicted ones. These deviations from the Krogan dataset likely reflect the lower false-positive rate of the Y2H and PCA data compared with AP data (). As our results consistently showed that the removed edges have much higher functional relevance than random predictions, chances are that many of the removed edges are not really false positivesthey just tend to contain more false-positive edges than the confirmed group of edges. To reiterate, we chose to keep the original number of edges in the predicted networks to facilitate an unbiased comparison of different approaches, as otherwise changing parameters may significantly alter and bias the evaluation outcomes. In practice, because of the high false-negative rate in PPI networks, especially for Y2H and PCA based networks, one would prefer to choose a lower similarity threshold to make more predictions and remove fewer edges than we have done here. As mentioned in Section 2 and later in Section 4, we are aware of and are developing better ways to select cut-offs to improve the coverage of PPI networks, which will be presented elsewhere. Similarly, as in Krogan data, the predicted edges in Yu/ Tarassov data have higher co-essentiality than the removed edges, suggesting that the predicted ones are more likely to be in-complex than the removed ones. On the other hand, although the confirmed edges in Krogan data have high co-essentiality, those in the Yu/Tarassov data have much lower co-essentiality, indicating that a large portion of between-complex edges in these two datasets are preserved by our algorithm. As shown in, Y2H and PCA usually detect morebetween-complex edges than AP. Our algorithm nicely preserved this property.
Predicted edges are bona fide physical interactionsFinally, it is interesting to ask whether the edges predicted by our algorithm are bona fide physical interactions or simply functional interactions. To answer this question, we validated the edges predicted by our algorithm on the three yeast datasets using the physical interactions present in the BioGRID database (). It is known that different PPI assay techniques have different characteristics and produce complementary, largely disjoint, results (). We, therefore, classified the PPIs in BioGRID into four categories according to the experimental systems: AP, Y2H), PCA and other. Note that each PPI in BioGRID may have been captured by multiple experiments and, therefore, appear in multiple categories. The three datasets we used, Krogan, Yu and Tarassov, were generated by the first three systems, respectively, and are all present in the BioGRID database. To ensure fair comparison, before evaluating results for a particular dataset (e.g. Krogan), BioGRID entries from the corresponding publication were removed (as otherwise the validation rate for the confirmed or removed group for the Krogan dataset would be 100%).shows the number and fraction of edges in different groups validated by BioGRID, using all physical interactions (column 'All') or using edges detected by specific experimental systems (columns 'AP', 'Y2H', 'PCA' and 'other'). When all physical interactions are considered, for all three datasets, the confirmed edges always have the highest validation rate compared with the other edge groups. The validation rates for predicted/removed edges are lower than that of the confirmed ones but significantly higher than the random ones (51% in all cases). For Krogan data, the predicted edges have a much higher validation rate than the removed ones, whereas for Tarassov and Yu data, the validation rates for the predicted edges are similar as or lower than that for the removed ones. These results suggest that the predicted edges in all three datasets are likely bona fide physical interactions, and reconfirm that the removed ones are not necessarily false-positive results, especially for Y2H and PCA-based data, which are known to have lower false-positive rate than AP (). Therefore, it may be preferred to have a lower cut-off to increase the coverage of PPI networks, as discussed in Section 3.4. Overall, Krogan data has the highest percentage of validated predictions (36.0% or 1033/2870), compared with Yu and Tarassov data, which have 9.2% (65/706) and 11.2% (135/ 1203) predicted edges validated by BioGRID, respectively (but see later in the text). As the BioGRID PPI data may still have a high false-negative rate, the real validation rate is likely underestimated. We also validated our results using the BioGRID PPIs within each specific category. Interestingly, it seems that the different characteristics in different experimental systems are carried over to the predicted edges. For example, the predicted edges for Krogan data are mostly validated by the AP-based interactions in BioGRID. Moreover, although Y2H only covers 12.6% of edges in BioGRID, it accounts for 53.9% (35/65) of the validated predictions in Yu data. Similarly, PCA only contributes 7.1% of the edges in BioGRID, but accounts for 17.0% (23/135) of the validated predictions in Tarassov data. Therefore, the relatively low validation rate for the Yu and Tarassov data can be partially explained by the insufficient presence of Y2H and PCA data in the BioGRID database.
Application to human PPI networkFinally, we apply our method to predict novel interactions in the human PPI network downloaded from the Human Protein Reference Database (HPRD, version 9) (). The largest connected component of this network contains 9205 nodes and 36 720 edges. We first tried to use the idea to retain the same number of edges, which causes 24 187 (65.9%) edges to be replaced. To evaluate this result, we calculated gene ontology-based similarity and gene co-expression for different edge groups, following the same logic as in Section 3.1. The gene expression data used for this purpose is downloaded from M 2 DB and contains 878 normal (non-diseased) tissue samples from the Affymetrix Human U133A platform, following the parameters suggested by the developers ().shows the validation results. Similar as for the yeast data set, the reconstructed network has improved scores using both criteria. Although the confirmed edges have the highest similarities scores, the predicted ones have better scores than the removed ones, and both are significantly better than random predictions. On the other hand, because of the high replacement rate (65.9%), and the non-trivial functional and gene co-expression similarity scores, we suspect that most of the removed edges are probably true interactions. Therefore, we further investigated the distribution of the topological similarity scores for the PPIs in the original network, which clearly follow a bimodal distribution (Supplementary). Therefore, we used topological similarity score 50.2 to select 4309 edges to be treated as high-confidence false-positive edges (top removed), and topological similarity score 40.9 to select 3802 edges as high-confidence false-negative edges (top new) and evaluated them using gene ontology and gene co-expression. As shown in, the high-confidence falsepositive edges have close-to-random gene co-expression (0.01), and low GO-based similarity. In contrast, the average GO-based similarity score for the high-confidence false-negative edges are almost as high as the confirmed edges, and they have high co-expression. These results indicate that the topological similarity scores can be used to prioritize edges for further validation. In fact, as shown in, with as many as 35 000 (50 000) predicted edges, the average gene co-expression (GO similarity) of interacting genes are as good as that in the original PPI network, indicating that we can increase the coverage of the HPRD human PPI network by at least 100%.
CONCLUSIONSIn this article, we have presented a novel network topology-based algorithm to improve the quality of PPI networks, which in turn. Results of our algorithm on human PPI network, evaluated by functional relevance scores based on gene ontology, gene expression. See main text for definitions of top new and top removed can improve the prediction accuracy of protein complexes. The key idea of our algorithm is that two proteins sharing some high-order topological similarities, which are measured by a novel random walk-based procedure, are likely interacting with each other and may belong to the same protein complex. Overall, the reconstructed yeast PPI network have much higher biological relevance than the original network, and better quality than those reconstructed by several existing algorithms, assessed by multiple types of information, including gene ontology, gene expression, essentiality and conservation between species. The reconstructed network has also resulted in significantly improved protein complex prediction accuracy using two different algorithms. Furthermore, our method is applicable to PPI networks obtained with different experimental systems, such as Y2H, affinity purification based and protein-fragment complementation assay, and evidence shows that the predicted edges are likely bona fide physical interactions. Finally, an application to a human PPI network increased the coverage of the network by at least 100%. Our method may be improved in several directions. For example, to derive a network from the topology-based similarity matrix, we have used a simple cut-off-based strategy to maintain the number of edges in the original network. We made this choice to facilitate a fair evaluation of different network reconstruction/clustering algorithms. In fact, we have found that many edges with similarity slightly below the cut-off also have higher biological relevance than those removed, as shown in the human data. This is also biologically understandablethe original PPI network has a higher false-negative rate than false-positive rate (). In future work, it may be worthwhile to develop methods that can guide the selection of a more appropriate cut-off that would allow more functionally relevant edges being included without introducing too many false-positive edges. One possible way is to examine the distribution of the similarity scores of the original edges and non-edges and determine what edge weights might represent a good separation.
ACKNOWLEDGEMENTThe authors would like to thank Saleh Tamim for his assistance in obtaining the human microarray data. We also thank the anonymous reviewers for their insightful comments that have significantly improved this manuscript.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
C.Lei and J.Ruan at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RESULTS AND DISCUSSION For evaluation, we applied our algorithm to three yeast PPI networks obtained from different technologies: tandem-affinity purification (Krogan et al., 2006), Y2H (Yu et al., 2008) and protein-fragment complementation assay (Tarassov et al., 2008). In Sections 3.13.3, we discuss results on the Krogan dataset, which is the largest, and in Sections 3.4 and 3.5, we present some comparative analysis of the three datasets. In Section 3.6, we present an application to a human PPI network. 3.1 Reconstructed PPI network has better functional relevance We performed a random walk on the Krogan PPI network, which covers 2708 genes with 7123 edges, and derived a modified PPI network by choosing 7123 potential connections with the highest similarities (see Section 2). Within the modified network, 2870 (40%) edges are new (and the same number of edges in the original network has been removed). To evaluate the functional relevance of the newly predicted edges, we resort to several types of sources, including gene ontology, gene expression, essentiality, known protein complexes and conservation of interactions in other species. To facilitate discussion, we call the group of edges present in the original network 'before' group, and that in the modified network 'after' group. Furthermore, 'new' edges designate the edges that are in 'after' but not 'before' group, 'removed' edges are 'before' but not 'after'. Finally, those present in both 'before' and 'after' are called 'confirmed'. We also generated random networks with a randomly rewiring procedure that preserves the degree of each node (Ruan and Zhang, 2008). As interacting proteins are likely involved in similar biological processes, they are expected to have similar functional annotations in gene ontology and similar gene expression patterns across diverse conditions. Therefore, we measure the functional relevance between any pair of genes that are connected by an edge using the semantic similarity between the GO terms annotated with the proteins, using a popular method (Wang et al., 2007b; Yu et al., 2010). Results shown are based on the 'molecular function' branch of Gene Ontology. Using 'biological process' yielded similar values, and 'cellular localization' resulted in
Algorithm for reconstructing PPI networks at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
