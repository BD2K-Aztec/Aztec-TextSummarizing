Motivation: Both the quantitative real-time polymerase chain reaction (qPCR) and quantitative isothermal amplification (qIA) are standard methods for nucleic acid quantification. Numerous real-time read-out technologies have been developed. Despite the continuous interest in amplification based techniques, there are only few tools for pre-processing of amplification data. However, a transparent tool for precise control of raw data is indispensable in several scenarios, for example, during the development of new instruments. Results: chipPCR is an R package for the pre-processing and quality analysis of raw data of amplification curves. The package takes advantage of R's S4 object model and offers an extensible environment. chipPCR contains tools for raw data exploration: normalization, baselining, imput-ation of missing values, a powerful wrapper for amplification curve smoothing and a function to detect the start and end of an amplification curve. The capabilities of the software are enhanced by the implementation of algorithms unavailable in R, such as a 5-point stencil for derivative interpolation. Simulation tools, statistical tests, plots for data quality management, amplification efficiency/quantification cycle calculation, and datasets from qPCR and qIA experiments are part of the package. Core functionalities are integrated in GUIs (web-based and standalone shiny applications), thus streamlining analysis and report generation. Availability and implementation: http://cran.r-project.org/web/packages/chipPCR. Source code:
IntroductionQuantitative polymerase chain reaction (qPCR) and quantitative isothermal amplification (qIA) are standard methods used for nucleic acid amplification. qPCR and qIA are used in real-time monitoring technologies, such as our previously reported VideoScan technology (), microfluidics and point-of-care devices to quantify nucleic acids by specific curve parameters like the quantification point (Cq) (). The fundamental steps of amplification curve analysis are (i) raw data read-in, (ii) pre-processing (e.g. noise reduction), (iii) amplification curve processing (e.g. Cq calculation), (iv) post-processing and (v) data export/report generation. Reliable data flow between all steps is a requirement for the proper optimization (e.g. the Taguchi method) of amplification reactions (). R is widely used in bioinformatics and an early adopter of novel technologies (e.g. digital PCR, NanoString nCounter Platform) (). Available R packages focus on the read-in and (post)-processing of data from commercial qPCR systems. R packages for the amplification analysis steps 1 and 35 cited earlier are available (Gehlenborg). However, R packages for the pre-processing and quality analysis of raw data of amplification curves are unavailable. Preprocessing in most commercial cyclers is a black box, which restrains reproducible research (). The development and optimization of equipment would benefit from the availability of a software capable of pre-processing raw data. Pre-processing algorithms remove stochastic errors and artefacts (Supplementary Section S2) and provide the means for raw data inspection and transformation in a format suitable for successive analysis steps (e.g. smoothing, imputation), data reduction (e.g. removal of invalid sets) and data quality management. Misinterpretations are more likely if arbitrary corrections are performed and a manual alteration is contradictory to reproducible research. The chipPCR ('Lab-on-a-Chip' & PCR) package was developed to automatize pre-processing, analysis, visualization and quality control of qPCR and qIA experiments. R enables sophisticated statistical and reproducible cross-platform analysis, and quick adaptation to changing experimental setups. Moreover, it is advantageous to set up workflows in an open environment, which offers graphical user interfaces (GUIs), downstream analyses facilities, powerful data visualizations and report generation. The target audience encompasses developers and users who process raw data from commercial systems.
ImplementationWe implemented the chipPCR package in the R software environment. chipPCR is a relative of the MBmca (), the Real-time PCR Data Markup Language (RDML) () and the dpcR () packages, but focuses on pre-processing of amplification curves. The package contains pre-processor functions (smoothing, imputation, background range detection, baseline correction and normalization), a singleblinded randomized rating function, quality analysis summary functions, an amplification efficiency function, an amplification curve simulator and a report generation function (Supplementary Section S4). The supplemental material uses Donald Knuth's literate programming principle () to conveniently present the source code. chipPCR's naming convention is period.separated (B th, 2012). We use R's object model S4 class system (Supplementary File) to separate between interface and implementation. S4 classes require a higher effort than S3, but assures better control on the object structure and the method dispatch. For fast running of codes in high-throughput applications, we avoided loops and left options for partially parallel computing usage (e.g. smoother function). chipPCR includes a set of classes for plotting. The output of our custom made plots is minimalistic, but many parameters can be adjusted directly or by the ellipse parameter. We aim to make our software available for researchers not fluent in R. Therefore, we have implemented core functionality of our package in selected GUI technologies available in R () as a desktop application or web-based service. chipPCR offers the means to run the GUI applications as a service on a server without installing R (e.g. http://michbur.shinyapps.io/ MFIaggr_gui), on a local desktop (e.g. Supplementary Figs S2 and S6), or as deployed from an external source for a local R installation. The functions AmpSim, th.cyc, bg.max and amptester are part of online GUIs. We aimed to build monolithic systems to parse, pre-process and analyze amplification curve data in a combined work-flow. chipPCR relies solely on the native R workspace and dedicated R packages as default data import and export format (). chipPCR presents S4 objects with tailored summary and plot methods. Because datasets are an essential element of reproducible research (), we have included datasets from commercial and experimental cyclers to this package.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Example: quality analysis MFIaggr is a versatile analytical and graphical tool for fast multiple comparison of cycle-dependent signal dispersion and distribution [Fig. 1; Ruijter et al. (2013) dataset]. The continuous explanatory variable x (cycle number) is used to describe its relationships to n continuous predictor variables y i (fluorescence values), where i 2 f1;. .. ; ng. Use cases include the comparison of independent reaction vessels or the analysis of replicate experiments (Supplementary Section S6). In particular, this function might be useful for quality management during the development of highthroughput technologies. An analysis via the shiny MFIaggr.gui app is shown in Supplementary Figure S7. 4 Results and conclusions chipPCR is the first R package for the pre-processing and quality analysis of amplification curve raw data. In addition, we implemented standard methods for amplification curve processing. The chipPCR functions are embeddable in customized routines with other packages (Supplementary File), such as the RDML and MBmca packages. The modular package structure enables flexible data analysis adaptable to the requirements. For example, solely the functions inder and smoother are needed to estimate the Cq second derivative maximum (SDM). smoother will be a method of smoothing in inder, and by putting data in the bg object with summary method summary-der, the user obtains the Cq. Thanks to GUI's it should be easy for users without any R experience.
S.R diger et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
