Visualizing genomic data in chromosomal context can help detecting errors in data processing and may suggest new hypotheses to be tested. Here, we report a new tool for displaying large and diverse genomic data along chromosomes. The software is implemented in R so that visualization can be easily integrated with its numerous packages for processing genomic data. It supports simultaneous visualization of multiple tracks of data. Large genomic regions such as QTLs or synteny tracts may be shown along histograms of number of genes, genetic variants, or any other type of genomic element. Tracks can also contain values for continuous or categorical variables and the user can choose among points, connected lines, colored segments, or histo-grams for representing data. chromPlot takes data from tables in data.frame in GRanges formats. The information necessary to draw chromosomes for mouse and human is included with the package. For other organisms, chromPlot can read Gap and cytoBandIdeo tables from the UCSC Genome Browser. We present common use cases here, and a full tutorial is included as the pack-age's vignette. Availability and Implementation: chromPlot is distributed under a GLP2 licence at http://www.bio conductor.org.
IntroductionWhen analyzing large amounts of genomic data, visualization in chromosomal context can reveal chromosome-specific or genomewide patterns suggesting new hypotheses and their appropriate tests. In addition, it may show errors in data generation or in an analysis step. We distinguish between two types of genomic visualization: local and global. Local visualization displays data in a region within one chromosome. Global visualization displays data in whole chromosomes. Tools available for local visualization are very flexible, allowing highly customized plots with diverse data, e.g. GenomeGraphs () and GenoPlotR () R packages and the Integrative Genomics Viewer (IGV) (). Global Visualization has been incorporated in websites of cross-species repositories, e.g. UCSC, Ensembl and NCBI, and in species-specific websites, such as or the Chromosome Visualization Tool (() and Gviewer (gmod.org/wiki/Flash_GViewer). Standalone tools are task-sepecific, e.g. PhenoGram () represents genotype-by-phenotype associations. Quantsmooth displays discrete and continuous data in the local view, and large segments in the global view. The IdeoViz R-package can plot continuous values as lines or bars for binned data () but has no support for categorical data. Thus, there is a need for a generic tool for global visualization to mach flexibility of local visualizers of genomic data.
SoftwareThe chromPlot package was developed in R and uses builtin functions for data processing and plotting using points, lines, bars or colored segments. It automatically finds clusters of overlapping segments and stacks them for saving plotting space. When segments are too numerous, e.g. all genome's genes, it uses histograms.
UsageThe user interacts with a single main function called chromPlot with 50 arguments. The gaps argument uses the 'gap' table from the UCSC Table Browser (https://genome.ucsc.edu/) to set a system of genomic coordinates: number of chromosomes, chromosomes names and lengths and the position of centromeres (shown as solid circles). The tables for human and mouse are provided with the package. The following arguments take genomic data: bands: data is shown as colored bands on chromosomal bodies. It detects cytoBandIdeo tables from the UCSC genome browser and shows them as an idiogram. Tables for human and mouse idiograms are included in the package. annot14: they are plotted sequentially as histograms per genomic bins (1 Mb by default). This is ideal for genomic elements that are subsets of each other. For example, genes in the genome, in an array, detected and differentially expressed, respectively. A track of all genes in the genome can be directly obtained from the Ensembl repository by providing an organism name to the org argument. segment and segment2: tracks of large segments plotted as colored lines on either side of chromosomes. Up to two categories for each segment are supported ('Group' and 'Group2' columns). Segment categories are distinguished by color and a shape in the middle. If segments are smaller than the size of bins or if they are too many (>200 by default), they are plotted as histograms, but this can be changed by setting the noHist argument to TRUE. Stacked histograms are used for categorized segments. stats and stats2 display continuous data in XY plots along chromosomes. A column containing values must be indicated with the statCol argument. The user can choose between connected lines or points by setting statsTyp to 'l', 'p' or 'n' to omit. If an ID column is present, labels are printed, avoiding overlapping among labels. Example command for creating the plot in: chromPlot(gapsmm9_gap, bandsregion, annot1genes, annot 2array, annot3filtered, annot4selected, segmentqtl, chrc(2, 11, 17))
ResultschromPlot creates karyotype-like graphs and the data can be plotted on three areas: to the left, to the right and on the chromosome. Multiple tracks may be overlaid or shown on different chromosomal sides. The user can generate a virtually infinite number of possible graphs. This is a list of common uses for the package: Synteny plots: the genomic regions of homology are represented by colored segments within chromosomes. Data can be read in AXT format or as a table.Differentially expressed genes: as histograms in chromosomal context may reveal clusters of differential expression. This may suggest effects from regional context such as chromatin state, epigenetics regulation or cis-eQTL as in. QTL mapping: QTLs can be represented as LOD curves or chromosomal segments. It is possible to integrate such information with results from omics experiments, such as differential expression (). GWAS: genomewide association studies in outbred populations can be summarized as, for instance, average log 10(p) values by chromosomal bins. Similar plots may be created to summarize genomewide genetic divergence (e.g. Fst) or measures of positive selection like iHS. Genome sequencing: chromPlot can be used for quality controlling or summarizing results from whole-genome sequencing experiments. For instance, it is possible to plot genome coverage as connected-lines or number of detected variants as histograms. Local ancestry: chromosomes of admixed individuals can be painted by genetic ancestry on the body (bands) or on either side (segment and segment2). Physical maps of genes or makers: use the stat argument, omitting the statCol argument and providing an 'ID' column.
Discussion and conclusionchromPlot is a generic and highly flexible tool for global visualization of genomic data. It is able to plot large datasets for different scientific needs. It was developed in R to facilitate inclusion in genomic workflows of data analysis. This feature makes chromPlot a more versatile software compared to other global visualization tools currently available.
ReferencesCannon,E.K.SChromosome visualization tool: a whole genome viewer. Int J Plant Genomics, 2011. doi:10.1155/2011/373875.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
