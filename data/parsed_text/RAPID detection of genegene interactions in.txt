Motivation: In complex disorders, independently evolving locus pairs might interact to confer disease susceptibility, with only a modest effect at each locus. With genome-wide association studies on large cohorts, testing all pairs for interaction confers a heavy computational burden, and a loss of power due to large Bonferroni-like corrections. Correspondingly, limiting the tests to pairs that show marginal effect at either locus, also has reduced power. Here, we describe an algorithm that discovers interacting locus pairs without explicitly testing all pairs, or requiring a marginal effect at each locus. The central idea is a mathematical transformation that maps 'statistical correlation between locus pairs' to 'distance between two points in a Euclidean space'. This enables the use of geometric properties to identify proximal points (correlated locus pairs), without testing each pair explicitly. For large datasets (∼ 10 6 SNPs), this reduces the number of tests from 10 12 to 10 6 , significantly reducing the computational burden, without loss of power. The speed of the test allows for correction using permutation-based tests. The algorithm is encoded in a tool called RAPID (RApid Pair IDentification) for identifying paired interactions in case–control GWAS. Results: We validated RAPID with extensive tests on simulated and real datasets. On simulated models of interaction, RAPID easily identified pairs with small marginal effects. On the benchmark disease, datasets from The Wellcome Trust Case Control Consortium, RAPID ran in about 1 CPU-hour per dataset, and identified many significant interactions. In many cases, the interacting loci were known to be important for the disease, but were not individually associated in the genome-wide scan.
INTRODUCTIONRecent technological developments in sequencing and genotyping have made it feasible to conduct genome-wide scans of large population cohorts to find genetic markers for common diseases (The Wellcome). Nevertheless, significant challenges remain. Many genome-wide association * To whom correspondence should be addressed.studies (GWASs) seek to associate each marker with the disease phenotype. As multiple hypotheses are generated, individual associations must have large effect to show up as significant. In complex disorders, many independently evolving loci might interact to confer disease susceptibility, with only a modest effect at each locus. Here, we focus on detecting such interactions. Detecting k-locus interactions in GWAS on large populations is computationally and statistically challenging, even when k = 2. A test involving all pairs of m markers, with a casecontrol population of n individuals, involves O(nm 2 ) computations. For GWAS, it is not atypical to have n  10 3 , m  10 6 making these computations, especially with permutation-based tests of significance, intractable. A straightforward (Bonferroni-like) correction for the multiple tests would result in significant loss of sensitivity. Therefore, many strategies for two-locus interaction testing are based on a two-stage, filtering approach. In the first stage (the filter stage), the objective is to discard the vast majority of locus pairs, while retaining the truly interacting pairs. If the filtering stage is fast and efficient (only a small fraction of all pairs are retained), then computationally intensive tests of association can be performed on the few remaining candidate pairs in a second, scoring, stage. For a filtering algorithm to be effective, it must have (a) speed, in that the number of computations scale linearly with the size of the data; (b) sensitivity/power (truly interacting pairs are retained); and, (c) efficiency (most pairs are discarded). Fast and efficient filters allow non-parametric permutation tests to be employed to assess significance. With the advent of deep sequencing, the number of variants considered will grow far beyond 10 6 markers, and designs of filters will be critical to GWAS analysis of interactions. While many approaches to detecting interactions have been proposed (see, for an excellent review), the design of filters has not been investigated explicitly. A recent approach, both pragmatic and effective for filtering, is based on the assumption that interacting pairs of loci should also show a marginal effect at each locus (). Here, the filtering stage consists of single marker tests at each locus. The scoring stage is then limited to pairs in which either one, or both loci, are individually associated. In either strategy, the filter speed is high, as single-marker analysis scales linearly with the number of loci and individuals. Empirical results show that only a small fraction of the loci show a marginal effect, leading to high efficiency. However, as Marchini et al. point out, there is some loss of power in employing these filters, particularly in interaction models where the marginal effects of the individual loci are small.provides a cartooninto the same bin with higher probability, relative to non-interacting pairs x,z. (d) Pairs that fall in the same bin K consecutive times in one of L trials are selected. illustration of such confounding interactions. Here, compensating mutations in coding SNPs (T and G, or A and A) allow the encoded proteins to interact, but individual mutations destroy the lock and key mechanism. Therefore, the locus pair (x,y) will show strong association, but there is no marginal effect at either locus. We tackle this case. In this article, we describe a filtering strategy, Rapid (RApid Pair IDentification). Under certain assumptions, the algorithm provides explicit guarantees on speed, efficiency and sensitivity. To formalize the argument, we parametrize the total computation for n individuals and m markers. Let input parameter  denote the desired false negative rate of detecting interactions. Rapid performs at most  1 m 1.07 tests, and allows no more than  2 m 1.07 ln(1/) pairs by chance, while capturing a fraction 1 of the truly interacting pairs. The surviving pairs can be tested for interaction using a total of O(nm 1.07 ln(1/)) computations. This can be compared with the time of O(nm 2 ) when no filtering is employed. For GWAS, where m 10 6 , this results in several orders of magnitude speed up. Additionally, increasing desired sensitivity 1 incurs only modest increases in running time. Extensive power simulations demonstrate the power of our approach. We also used Rapid to reanalyze data from The Wellcome Trust Case Control Consortium (WTCCC) dataset, a benchmark GWAS. The filtering using Rapid on either dataset only took about 45 min on a 1.8 GHz, 16 GB RAM computer and identified many significant interactions.
THE DESIGN OF RAPIDThree key ideas underlie the design of Rapid. The first is a mapping of allelic values at loci to a Euclidean metric so that statistical correlation between two loci corresponds to distance in the Euclidean space. The second is the use of a randomized protocol called Locality Sensitive Hashing (LSH). LSH has been used successfully to cluster and query high-dimensional datasets (). Its use in the context of filtering for interacting loci is novel and illustrated below. The final idea is a standard one of amplifying a probability bias through repeated trials.
Statistical correlation and the Euclideanmetric: we describe a transformation that maps every locus to a point in a Euclidean Space. For exposition purposes, consider haploid data with n individuals, and m biallelic loci. Each locus x can be described by a vector x {0,1} n of allelic values. Likewise, the casecontrol status of the individuals can also be expressed by a vector d {0,1} n. The null hypothesis of no association of a pair of loci x,y against d can be tested using a  2 test on a 222 contingency table (or 332 for genotype data). Specifically, the goal is to identify all locus pairs x,y such that  2 is high. While other, more powerful, tests of association have been proposed, the  2 test is sufficient for the filtering stage. By choosing appropriate thresholds, we can recover all candidate paired interactions, and leave the advanced tests of association for the scoring stage. We note that if x,y,d jointly associate, then at least one of the following projected associations must hold (Supplementary Section S1).Each of these conditions can be tested independently. The first two describe marginal associations that can be tested directly (O(m) tests). The latter two conditions have also been proposed in the context of interactions (), but require testing every pair of loci (O(m 2 ) tests in principle). These case-only (or controlonly) tests are the focus of our article. Much of the discussion below is therefore limited to a population consisting entirely of n case (or control) individuals. We use the following geometric transformations. Let P x denote the fraction of individuals in the population with allele '1' at locus x. For a {0,1}, define. This maps the allelic values at locus x for all n individuals onto a unit vector  x (a point on the unit hypersphere) in n. For two loci x,y, the vectors  x , y are both on the unit hypersphere. Inverting the alleles at y (changing all 0's to 1's and vice-versa) does not change the correlation between the loci, but replaces  y by  y. We fold these two cases together by defining the distance between loci x,y asWe can show (Supplementary Section S2) that for a pair of loci x,y,Page: 2858 28562862
D.Brinza et al.Thus, we can transform the statistical problem of identifying interacting locus pairs {(x,y) :  2 x,y  t} (where t is a threshold) into a geometric problem of computing proximal vectors: identify all locus pairs (x,y) such thatThe transformations for genotypes are more complex and will be described in Section 3. By itself, the metric connection offers no help for filtering. We have m vectors in n , and potentially, each pair must be compared with identify the proximal pairs. Here, we apply the second idea. LSH: to identify locus pairs (x,y) for which dist( x , y )  , we choose a random unit vector r, and project each of the points onto r (). The operation is fast (O(nm) steps) as each locus is treated independently. We choose an appropriate value of B (Amplification of bias: let 1 denote the desired power (the fraction of true interacting pairs that are retained for a second-stage scoring). Parameters L,K are computed automatically by Rapid (as described below). We run the hashing procedure LK times, and select only those pairs that fall in the same bin all K times, in at least one of the L iterations. We will show (Section 3) that usingRapid will output a high fraction (1) of all interacting pairs, but at most m c ln(1/) non-interacting pairs, where c = 1+ ln(1/f 1 ) ln(1/f 2 ). We make the reasonable assumption that the number of truly interacting pairs is small. Therefore, the number of pairs output by Rapid is also approximately m c ln(1/). We show (Section 3) that the running time for Rapid is bounded by O(nm c ln(1/)) steps. Further, any second-stage scoring step to identify the truly interacting pairs is also bounded by O(nm c ln(1/)) steps (O(n) steps for each pair). Substituting f 1 = 0.95, f 2 = 0.5, this gives a run time of O(nm 1.07 ln(1/)) steps for filtering and secondstage scoring. Clearly, for large m, we get a substantial speed-up in running time over the naive O(nm 2 ) computations while maintaining the desired sensitivity.
MATERIALS AND METHODSRAPID overview: the input of Rapid includes a SNP genotype matrix (limited to cases, or to controls), and two parameters ,.The output is a filtered list of paired loci x,y with dist( x , y )  The overall algorithm is described below, with details in subsequent sections. It is applied to cases only, and to controls only, and the results are merged. We map genotypes at each locus to vectors in n. Next, we compute the bin size B for hashing, as well as parameters L,K. Pairs that map to the same bin all K times in at least one of L iterations and pass an optional second stage filtering are returned. While we employ a simple second stage filtering in our tests, we expect that Rapid will be used in conjunction with sophisticated tests.
Computing haploid vectors:The metric property of statistical correlations for the haploid case can be extended to genotypes, but the transformations are more complex. We transform the genotype vectors to haploid vectors. Consider a single locus with major allele denoted by a and minor allele denoted by A. Let n aa , n aA , n AA denote the counts of the three genotypes. A 33 contingency table describes the interaction of the two locations. A natural decomposition is to decompose the locus into 2n aa +n aA 'a' alleles, and 2n AA +n aA 'A' alleles. Note that this transformation is silent on deciding the phasing of heterozygotes for pairs. In checking interactions between two loci, the heterozygotes were phased either randomly, or identically. Neither of these choices works, as subtle interaction effects of minor variants are removed. See Supplementaryfor comparisons. Instead, we map each genotype locus x onto two haploid loci X 0 ,X 1. In the first, heterozygous individuals are counted as 'a' (major allele), and in the second, they are counted as 'A' (minor allele). Specifically,We show empirically (Supplementary Section S3) that for any pair x,y of loci, if x,y are interacting ( 2 x,y is high), then one of the four values  2 X i ,Y j is high as well. The overall algorithm remains unchanged, except that all loci are transformed into biallelic loci at the beginning. At the end, a pair x,y is accepted only if at least one of its four haploid pairs X i ,Y j is accepted.
Genegene interactions in GWAS
Bin Size computation and LSH: bin size B and parametersL,K are used to balance a trade-off between speed, sensitivity and efficiency, and form the heart of the argument. For each SNP x, the procedureThe separation between  and  2 allows us to choose an appropriate bin size B. Consider z = (uv)r for a random vector r  n on the unit hypersphere (r = 1). Observe that E(z) = 0 andThe distribution of (uv)r can be approximated by N (0,uv/  n) (Supplementary Section S5). Let , denote the c.d.f of a N (,) distributed variable. If x,y are interacting, thenIf x,y are non-interacting thenDiscrete examples of f 1 ,f 2 ,B based on different values of  are shown in Supplementary Table S1 for illustration.
Selecting parameters L,K for two-stage LSH: the probabilitythat two interacting pairs x,y (respectively, two non-interacting pairs) fall in the same bin each time in K random hashings is. Finally, we repeat the super-trials L times. A pair (x,y) survives if it falls in the same bin all K times, in at least one of L iterations. Therefore, a fraction Lf 1 K of the interacting pairs are selected, while only a fraction Lf 2 K of non-correlated pairs are selected. The run time of this over all m markers is KLmn steps (since it takes n steps to compute each individual hash). Various constraints are used to determine the optimum values of L,K. The probability that a truly interacting pair fails in each of the L super-trials is bounded byBy choosing L = f 1 K ln(1/), we ensure that e f 1 K L  , giving us the desired sensitivity of 1. Next, we consider the total running time. The filtering time is LKmn steps. Assuming that the majority of the pairs are non-interacting, the total number of pairs that survive the filtering is given byThe bin size B is now determined by choosing B that minimizes the run time (6) subject to the specified sensitivity 1. Note that f 1 ,f 2 are given in terms of B by Equations (4) and (5), and K,L are determined by Equation (3). The minimization is computed numerically and occurs in the vicinity of B  2/  n. Altogether, L,K,f 1 ,f 2 ,B are computed in terms of inputs n,m,,.
Second stage filteringEach pair output by Rapid is considered in turn. Denote as  2 92 , thethat match a user-defined cut-off on the two statistics are considered. Note that in the haplotype case, the connection between the parameter  and the desired  2 cut-off is explicit, but not in the genotype case. In practice, we usually take a small value of . With small  values, the most significant pairs have high sensitivity, and the sensitivity reduces for less significant interactions. As a final step in filtering, we eliminate pairs that are too close, or are unreliable. Specifically, for the WTCCC study, the human Gap track table was downloaded from the UCSC genome browser. All SNPs within a distance 1 Mb from intervals marked in the gap table as centromeric, telomeric, heterochromatin or short arm, are discarded, and all SNP pairs on the same chromosome within a distance 1 Mb of each other are discarded. The second stage filtering is not optimal, and possibly discards truly interacting pairs. We only use these final steps to identify interesting examples of interacting pairs. We expect that Rapid filtering will be used in combination with a user-specified second stage of scoring.
Simulated datasetsTo test speed versus power, we took a collection of 50K SNPs from the WTCCC dataset and exhaustively computed all pairs with   0.4, and   0.1, respectively. These served as positive controlsPage: 2860 28562862
D.Brinza et al.in testing Rapid with parameter  = 0.1, and  = 0.4, respectively. For different choices of , Rapid automatically computes parameters L,K,B. Let TP (respectively, FN) denote the number of pairs from the positive set that were filtered (respectively, discarded) by Rapid. Sensitivity was empirically computed as TP/(TP+FN). Speed-up was measured by the ratio of the number of steps in the naive computation to the number of steps in RapidTo test speed versus data-size, we duplicated the WTCCC SNPs and appropriate number of times to create datasets of size up to 100M SNPs. Both speed-up, and actual runtimes were plotted against the threshold , after fixing  = 0.05. To compare Rapid against other filtering approaches, we simulated two datasets according to two general epistatic models that have been proposed earlier (). See Supplementary Section S4 for details. In Model 1, the odds of disease increase multiplicatively with genotype both within and between loci. Model 2 (corresponding to, has threshold effects so that the odds of disease increase only if both loci have at least one disease-associated allele, but additional minor alleles do not further increase the odds. Marginal effects for each locus (independent of the other) should be present in Model 1, but less so for Model 2. For each model, we simulated genotypes at two interacting loci in n = 2000 cases and n = 2000 controls. The distribution of genotypes was governed by the following parameters: marginal odds for major alleles and minor allele-specific effects described by parameter . Empirical values of these parameters are difficult to obtain. Instead, we followed the calculations of Marchini et al. to derive them using , where 1+ is the heterozygous odds ratio at a single locus, disease prevalence P D = 0.01, and minor allele frequencies  =  A =  B. For each choice of parameters  {0.2,0.5,1.0} and   {0.05,0.1,0.2,0.5}, and derived values of  and , we simulated 1000 interacting pairs, by sampling genotypes values according to probabilities induced by the model parameters. Significance of search results was corrected using m = 300 000 SNPs.
WTCCC casecontrol datasetWe tested the performance of Rapid on a published dataset: the WTCCC consortium dataset (2000 individuals in six diseases
RESULTSRapid has two key parameters,  and . The user decides the minimum strength of interactions (measured by the  2 statistic), and uses it to specify a bound on the Euclidean distance  between the transformed vectors. The parameter  describes the acceptable type II error rate among the pairs that satisfy the  threshold. The parameters L,K also influence speed and sensitivity, but can be computed given n,m,,, as described in Equation (3).We tested the speed versus sensitivity of Rapid on the WTCCC control dataset of 3000 individuals, using a different choice of ,. For each choice of , define the false negatives (FN) as the number of pairs that exceed the threshold , but were rejected by Rapid. True positives (TP) is the number of pairs exceeding the threshold that were accepted. Likewise, for each choice of ,, we define speed up as the drop in number of computations, compared with the naive approach (O(nm 2 ) computations).describes the speed versus sensitivity [TP/(TP + FN)] trade-off for  = 0.1 and 0.4. For low values of , we can show 23 orders of magnitude speed up without sacrificing sensitivity. We next explored the speed-up, and actual runtimes for increasingly large datasets (c), and different thresholds after fixing the  = 0.05 (or 5%). Even for large datasets (1M SNPs and 3000 genotypes), strongly interacting pairs can be identified with 95% sensitivity in a few hours on a commodity PC. In practice, we work with low  values for large datasets as only the most significant interactions are required. We compared Rapid against two strategies widely used to measure interactions (). Strategy I can be thought of as a filtering strategy. Only a subset of the possible pairs are tested, those in which one of the SNPs (Strategy Ia), or both (Strategy Ib) show a marginal effect. In Strategy II, all pairs of SNPs are tested for interaction. On the face of it, Strategy II should demonstrate the highest power.argue that as the scoring stage is limited to the filtered pairs, the correction factor is based on the number of pairs being considered at the scoring stage. To ensure an overall type I error of at most , the significance level of the test for each pair is set to / 2 where  2 is the number of filtered pairs. For Strategy I,  2 m, but for the full interaction model,  2 = m 2 . Due to the larger number of tests in Strategy II, Strategy I often outperforms Strategy II (). As Rapid is only a filtering strategy, it cannot be directly compared. Here, we took only the top In the first model, the case odds increase multiplicatively upon addition of minor alleles at either loci. In the second (threshold) model, the odds increase only if both locus have at least one minor allele, and do not improve with addition of minor alleles. The model parameters in both cases are derived numerically using the single locus heterozygous odds ratio 1+ ( {0.2,0.5,1.0}), and disease incidence P D = 0.01. Model 1 (top panels) shows marginal effects, as do models with higher values of  (= 1). Rapid outperforms other methods, and shows a clear improvement when the marginal effects are low. multiplicatively with genotype both within and between loci. Model 2 (corresponding to), has threshold effects so that the odds of disease increase only if both loci have at least one disease-associated allele, but additional minor alleles do not further increase the odds. For each model, we simulated genotypes at two interacting loci in n = 2000 cases and n = 2000 controls. The distribution of genotypes was governed by the parameter , where 1+ is the heterozygote odds ratio. For each choice of parameters, we simulated 1000 pairs, and corrected using m = 300 000 SNPs.shows power of each strategy for different simulation parameters. Low values of  present the higher challenge, as association exists with low marginal effects. In all tests, the performance of Rapid shows greatly improved power over previous approaches. Our analysis reveals that many significant pairs do not show individual effects and might be missed by Strategy I, but are identified by Rapid without the overhead of multiple tests.
Results on the WTCCC dataWe analyzed six WTCCC datasets with Rapid, using stringent parameters  = 0.1,  = 0.05 for speed, and to detect the most significant interactions first. The search time for each data set was about 75 min, with a total of 10M pairs output prior to secondstage filtering. For second-stage filtering, we filtered out proximal pairs (Section 3), and only kept pairs whose  2 92 P-value was 10 7 or better, and there was a significant interaction component (the  2 (xy),d P  0.01). This resulted in a total of 34 hits across all datasets (Supplementary). A select subset of pairs with a stronger interaction component is shown inwith interaction above the thresholdthe  2 92 P-value is 8.910 22. The SNP rs13126272 is proximal to the solute carrier protein ANT1. Mutations in the ANT1 gene mediate the BD phenotype (). The SNP rs1918942 is proximal to contactin (CNTN1), a neural adhesion gene that is implicated in neurological disorders including BD (O'). In the WTCCC dataset, the two SNPs show a strong interaction (P-value 6.310 3 ). CAD: among the interactions observed, many involve SNP rs2164411 (chr 2) in the gene DNMT3a, involved in DNA methylation. Altered global DNA methylation has been observed in CAD and other cardiovascular diseases (). T1D: we observe a number of interactions connected to T1D. Many variants, including rs12661352 (HLA-DQB2), rs9268858 (HLADRA), rs2523742, rs244545 (HLA-B) involve genes on the 6p21 HLA locus which is a known susceptibility locus for T1D (). Consider the interaction between rs935497 and rs9268858. rs934597 lies in the PPM1L gene which has been implicated in diabetes in mouse knockouts (). It adds a significant interaction term to rs9268858 ( 2 P-value 6.610 3 ), which lies in the HLA-DR region. Likewise, considerPage: 2862 28562862
D.Brinza et al.the interaction of rs244545 and rs2596571. The variant rs244545 lies in a gene desert, but upstream of the TF islet-1. Islet-1 is known to activate insulin gene expression, and is also implicated in pancreatic islet cell development. Mutations in ISL-1 are associated with maturity-onset diabetes of the young (). HT: HT is a complex disorder with high heritability, but few loci have been confirmed in GWASs. The SNP rs12590471 associates weakly (P-value 6.0810 6 ). However, the  2 92 statistic with SNP rs17146413 has P-value 4.5210 9. The SNP rs17146413 lies in EHD1, involved in endocytosis of IGF-1 receptor (). Circulating IGF-1 levels are known to mediate HT ().
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Lf 2 K ). We note that with the speed-ups obtained, we can also use non-parametric, permutation tests of significance. We tested the approach on two different models of disease interaction (Section 3). In Model 1, the odds of disease increase
DISCUSSION The chief contribution of Rapid is a methodological one. We make a dent in the seemingly intractable problem of identifying pairs of loci that interactively associate with the phenotype, while not showing any marginal effects. On the one hand, the algorithm is naive, especially from a statistician's perspective. It only uses  2-like tests, when many, more sophisticated tests are possible. This is done with a purpose. First, Rapid is designed to be complementary to the array of tools being developed for interactions. It is meant to be used as a filtering tool, to identify a small number of candidate pairs on which any statistic can be applied. Indeed, there are many different models by which loci can interact. Rapid starts with the lowest common denominator, on the idea that any form of interactions implies a departure from the  2-values. The combination of Rapid with multiple second-stage scoring strategies, can help capture different interactions. Second, our method exposes an interesting relationship between  2 and the Euclidean metric, which has not (to our knowledge) been previously explored. This geometrization of statistical correlations should open new algorithmic approaches for identifying multiplelocus interactions. The extension of the metric properties to the genotype case is significantly harder than haplotypes, and raises open questions about multi-allelic loci. In some of our own work, we are considering more accurate projections of the genotypes, and have extended it to multi-allelic loci as well (Tesler,G., submitted for publication). Here, we only handle the pairwise interaction case. While we can work out a formal technique for multiple loci, there is a pragmatic way in which we can simply consider chains (or, dense, connected components of interacting locus pairs). The results on the WTCCC dataset, while interesting in themselves, are only presented as an exemplar of how Rapid can be used. We plan to collaborate with
