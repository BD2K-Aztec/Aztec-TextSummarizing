The ModuLand plug-in provides Cytoscape users an algorithm for determining extensively overlapping network modules. Moreover, it identifies several hierarchical layers of modules, where meta-nodes of the higher hierarchical layer represent modules of the lower layer. The tool assigns module cores, which predict the function of the whole module, and determines key nodes bridging two or multiple modules. The plug-in has a detailed JAVA-based graphical interface with various colouring options. The ModuLand tool can run on Windows, Linux or Mac OS. We demonstrate its use on protein structure and metabolic networks. Availability: The plug-in and its user guide can be downloaded freely from: http://www.linkgroup.hu/modules.php.
INTRODUCTIONNodes of biological networks often belong to multiple network communities. Recently, a number of methods were published to determine tightly or extensively overlapping network modules (). Our ModuLand framework () introduced community landscapes. The xy plane of a community landscape is a conventional 2D visualization of the network, whereas the z-axis represents community centrality. Community centrality of a given edge (or node) was defined as the sum of local influence zones of all network edges (or nodes) including the given edge (or node; Supplementary). Thus community centrality represents an integrated measure of the whole network's influence to one of its edges or nodes. Hills of the community landscape correspond to network modules (Supplementary) yielding extensive overlaps. This concept led to the development of the ModuLand family of network modularization methods (). * To whom correspondence should be addressed.  The authors wish it to be known that, in their opinion, the first two authors should be regarded as the joint first Authors.The widely used Cytoscape program () has several very useful clustering plug-ins (). However, these methods do not focus on extensive modular overlaps, and do not build a modular hierarchy, where meta-nodes of the higher level represent modules of the lower level. Moreover, existing plug-ins do not provide measures identifying the centre of the module, as well as key nodes bridging two or multiple modules (see Supplementary Table S9, and Supplementary Discussion). Here, we introduce the Cytoscape plug-in of the most widely applicable version of the ModuLand method family (). We demonstrate its ability to determine biologically relevant, extensively overlapping network modules, hierarchical layers of modules, module cores and key inter-modular nodes using protein structure and metabolic networks.
SOFTWARE OVERVIEWThe ModuLand Cytoscape plug-in uses the LinkLand influence zone determination method and the ProportionalHill module assignment method of our formerly published ModuLand network module determination method family (). These two methods provide a good trade-off between the fast (but rather inaccurate), and accurate (but rather slow) other ModuLand methods. The installation of the ModuLand plug-in follows Cytoscape procedures. This is much easier than the setup required for the earlier version (). The program can be distributed as a single .jar file. Moreover, the current implementation works on Linux, Windows and Mac OS, thereby extending the options of the former version. The plug-in determines extensively overlapping modules using any undirected network type and weight description of Cytoscape. Moreover, the plug-in calculates a set of hierarchical modules. In the modular hierarchy, modules of the lower level become metanodes of the upper level, and modular overlaps of the lower level become weights of the meta-edges at the upper level. The plug-in creates, automatically re-loads and visualizes the higher and higher level hierarchies (with lower and lower number of meta-nodes and meta-edges, see), until the whole network coalesces into a single meta-node.The lower number of modules at higher hierarchical levels may be visualized either using the meta-nodes of the higher hierarchical level itself, or projecting this higher level modular structure to the nodes of the original network. On any level of module hierarchy, nodes or meta-nodes can be visualized assigning them the colour of the module they mostly belong to. This shows a non-overlapping assignment of nodes to modules. Nodes can also be marked by blending the colours of the modules proportional to the overlapping module assignment of the given node. Edges may be optionally visualized as a mix of the colour of their two nodes. The plugin sets meta-node labels on the higher hierarchical level based on the modules of one level below in the hierarchy. The metanode on the higher hierarchical level representing the module has the name of the node having the highest modular assignment value for the corresponding module at one level below in the hierarchy. Node colours can also visualize several node (or metanode) measures including weighted degree, betweenness centrality, community centrality, overlap and bridgeness (see Supplementary). The plug-in has an option to merge highly similar module pairs containing roughly the same nodes or meta-nodes with the same intensity. For merging of modules the plug-in offers a correlation histogram, and allows the user to select an appropriate correlation threshold. The runtime complexity of the plug-in version remained  O(n 3 ), as defined earlier (). To enhance the performance of the plug-in for calculating the higher hierarchical layers further, we introduced a user-selected optimization. This results in the disappearance of meta-edges with very small weights at the higher hierarchical levels. These low intensity meta-edges are derived from the minor overlaps of distant modules of the lower level. This optimization allowed a speedup in running time by a factor of 7 for larger networks (Supplementary). The plug-in is capable to generate overview reports for each hierarchical level. These reports list the number of the nodes (metanodes), edges (meta-edges) and modules, the effective number of modules (see) and the size of each module. The overview also contains the list of the 10 nodes of each module having maximal module assignment value to the respective module (called as the module core). Data related to the module assignment and the calculated measures of nodes (and meta-nodes of higher hierarchical levels) can be exported in a csv or txt format. The plug-in contains a Help function, and a detailed step-by-step User Guide can also be downloaded from the plug-in webpage: www.linkgroup.hu/modules.php.
ModuLand plug-in for Cytoscape
RESULTS AND CONCLUSIONModuLand-derived communities of various yeast proteinprotein interaction networks gave a functionally meaningful description of the yeast interactome (). Function of module core proteins proved to be good indicator of the function of the wholeCopyedited by: TRJ MANUSCRIPT CATEGORY: APPLICATIONS NOTE
M.Szalay-Bek  o et al.module (). Here, we demonstrate the use of the ModuLand Cytoscape plug-in on the protein structure network of Escherichia coli Met-tRNA synthase, since an elegant study () showed the existence of four alternative communication paths in this enzyme. The five major sub-domains of Met-tRNA synthase were well reflected by the five modules obtained at the second hierarchical level of the protein structure network (; Supplementary). Key amino acids of the most frequently used communication path () either belonged to the module cores of the three modules involved in transmission of conformational changes, or were inter-modular nodes between these modules (see Supplementary). These observations were in agreement with earlier findings (). We further demonstrated the use of the ModuLand plug-in by comparing the modular structures of the metabolic networks of the free-living bacterium E.coli and the endosymbiont Buchnera aphidicola (). E.coli metabolic module cores had a significant overlap (Fisher's exact test P = 1.410 7 ; see Supplementary Information for more details) with the modules determined earlier by. Both visual inspection (see Supplementary Figs S4S7) and numerical values (see Supplementary) suggested a more differentiated modular structure of the E.coli metabolic network than that of B.aphidicola. This finding is in agreement with earlier findings (). The difference in modular structure was not likely to be caused by the difference in the size of the E.coli and B.aphidicola networks (see Supplementary Figs S8 and S9, and Supplementary Tables S7 and S8). E.coli module cores corresponded to significantly less metabolic functions than those of B.aphidicola (0.53 versus 0.67 functions per module core reactions, respectively; bootstrap method P = 0.0392). This difference remained even when we used an ensemble of 1000 randomly selected sub-networks of the E.coli metabolic network having the same number of nodes or edges as found in the smaller B.aphidicola network (see Supplementary Material for more details). Moreover, additional tests suggested that the large twinmodules forming the centre of the B.aphidicola network were not responsible for the differences observed in the number of metabolic functions (see Supplementary Material). These results indicated that modules of the metabolic network of an organism from a variable environment (E.coli) are more specialized than metabolic network modules of a symbiont having a constant environment (B.aphidicola). It is noteworthy that our result is in agreement with earlier findings using non-overlapping modularization (), which is a further indication that the module cores of the plug-in capture well the biologically relevant function of modules. In conclusion, the ModuLand Cytoscape plug-in provides a userfriendly and efficient method to identify and visualize a hierarchy of extensively overlapping modules, and determines key network positions (like module cores and bridges). As shown by several case studies, modules identified by the plug-in correspond to biologically meaningful groups, module cores help the identification of biological functions and inter-modular nodes have a key role in a variety of biological networks.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
