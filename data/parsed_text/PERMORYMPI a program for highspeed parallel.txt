PERMORY is software for accelerated permutation testing of genome-wide association studies (GWAS). We have parallelized PERMORY using the Message-Passing Interface resulting in a nearly linear speedup. Furthermore, we added accelerated analysis of GWAS using quantitative phenotypes, and an accurate estimation of the effective number of independent tests. Availability and implementation: Free download from http://
INTRODUCTIONA genome-wide association study (GWAS) nowadays involves the statistical analysis of millions of single nucleotide polymorphism (SNP) markers. For the calculation of adjusted P-values for genome-wide testing, the Bonferroni method is highly conservative, because it ignores the correlation of markers caused by linkage disequilibrium. In contrast, a permutation-based correction of P-values fully accounts for this correlation and provides the highest statistical power among the procedures controlling genome-wide type I error risk. While conventional permutation algorithms often required prohibitively long computation times for large datasets, the PERMORY algorithm of Pahl and Schfer (2010) has made permutation testing feasible for large-scale GWAS analysis. In time, SNP chips with larger numbers of markers, such as Illumina  Human Omni with 5 Mio SNPs are available, and the nextgeneration sequencing techniques will open the way for full sequence association studies adding another 10 or 20 million of rare variants. We therefore have undertaken one step further and developed the first freely available parallel algorithm for permutation testing in GWAS. Based on the original PERMORY algorithm, the computation process now can be spread to multiple processors in a cluster using MPI (Message Passing Interface Forum, 2009). In addition, we have further developed the original algorithm, being restricted to the analysis of dichotomous phenotypes, now to handle quantitative phenotypes as well. Moreover, for each dataset, PERMORY now also provides an accurate estimate of the effective number of independent tests (). * To whom correspondence should be addressed.
DESCRIPTION OF PERMORY-MPIPERMORY-MPI 1 is an open source program written in C++ using the C++ library Boost MPI. It can be run on every computer cluster where an MPI implementation is installed, for example Open MPI version 1.2.7 rc2 or higher (http://www.open-mpi.org/). The data files must be available at the specified path on each node PERMORYMPI should run at. A network file system is useful in this situation. If a network file system is not available, or the throughput of the network file system is insufficient, the data files have to be copied to each node before submitting the job to the MPI cluster. The program supports various input data formats (PLINK,). The format is detected automatically. Files of different formats can be used in combination. Marker genotypes may be coded as 0, 1 and 2 for the copy number of a specific allele, or in allelic representation as 'AC' and 'GT'. Phenotypic values can be real numbers coding for quantitative traits, or 0/1 or 1/2 coding for unaffected/affected, respectively. The type of trait, quantitative or dichotomous, is determined automatically by the software. Regarding dichotomous traits, PERMORY is using Cochran Armitage's trend test, where, for each marker, a test statistic is derived from the contingency table that contains the genotype frequencies for cases and controls (). The handling of quantitative traits is a novel feature, which requires a different type of statistic. PERMORY-MPI uses the test statistic defined by Lin (2006)where Y i is the phenotypic value of the i-th subject, X ji is the genotype score for the j-th marker of the i-th subject, and  y and  j are the population means of Y i and X ji. To maintain the computational speed of the original algorithm, the two most important acceleration methods, genotype indexing with transposed permutations and reconstruction memoization (Pahl and Schfer 2010), were further developed to be applicable to the above statistic (). For the mentioned statistics the asymptotic distributions are known so that a raw P-value, say p j , can be derived for each of the j = 1,...,M markers. To correct p j for the multiplicity of tested hypotheses, the distribution under the null of no marker being
PERMORY-MPIassociated with the trait is simulated by permuting the phenotype values (or trait labels). In particular, the genome-wide adjusted P-value for marker j is calculated using a single step max-t procedure (). Assuming a set of, say, r permutations, k = 1,...,r, of the phenotype vector, we setwhere T j is the value of the test statistic for marker j in the original sample, andTand andT k max is the maximal test statistic over all markers under the k-th permutation. With a number of P available processors, PERMORY-MPI delegates the calculation of r/P maximal values T k max to each processor. These values are then merged on the central process, where the adjusted P-values are calculated. The final output consists of a sorted list of a user-specified number of top markers, providing two-sided raw (i. e., unadjusted) and genome-wide adjusted P-values for every marker. Permutation tests are considered the gold standard for multiple testing correction in GWAS. One important alternative approach is to estimate the effective number of independent tests M eff () for a set of M markers, and use this number for an improved Bonferroni correction: p * j = p j M eff. The more accurate M eff can be estimated, the more precise will be the P-value adjustment. Since by simple algebra M eff = p * j /p j , the adjusted P-value obtained from the permutation test yields a direct estimate of M eff. PERMORYMPI now calculates M eff for the top marker, which, assuming a sufficient number of permutations, provides a more accurate estimate than available 'indirect' approaches (e. g.). Any method or test realizable by the presented permutation approach can be incorporated into the software. The implementation of additional methods is supported by the object oriented software design of PERMORY. In particular, stratified testing and the inclusion of covariates are planned to be implemented in a next version.
While the official name of the software has remained PERMORY, we use the term PERMORY-MPI throughout the article to emphasize new features of the software.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RESULTS We investigated the runtime behavior of PERMORY-MPI using genotype data from the WTCCC2 study (The Wellcome Trust Case Control Consortium, 2007) with 1 115 428 SNPs in 5667 individuals, randomly divided into 2834 cases and 2833 controls. The benchmarks resulted in a nearly linear speedup (Fig. 1). A conservative extrapolation of the results of Pahl and Schfer (2010) would result in runtimes of more than 250 h with PRESTO and of more than 15 000 h with PLINK for the present dataset. We also compared PLINK and PERMORY for quantitative phenotypes, using the genotype data of the WTCCC2 study in Chromosome 22 with 18 649 SNPs combined with randomly generated quantitative phenotypes following a Gaussian distribution. With 10 000 permutations, runtimes were 0.27 h with single process PERMORY, and 0.04 h using 10 parallel processes, as compared to 52.38 h with PLINK.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
