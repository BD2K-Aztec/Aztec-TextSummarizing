Motivation: Design of protein–protein interaction (PPI) inhibitors is a key challenge in structural bioinformatics and computer-aided drug design. Peptides, which partially mimic the interface area of one of the interacting proteins, are natural candidates to form protein–peptide complexes competing with the original PPI. The prediction of such complexes is especially challenging due to the high flexibility of peptide conformations. Results: In this article, we present PepCrawler, a new tool for deriving binding peptides from protein–protein complexes and prediction of peptide–protein complexes, by performing high-resolution docking refinement and estimation of binding affinity. By using a fast path planning approach, PepCrawler rapidly generates large amounts of flexible peptide conformations, allowing backbone and side chain flexibility. A newly introduced binding energy funnel 'steepness score' was applied for the evaluation of the protein–peptide complexes binding affinity. PepCrawler simulations predicted high binding affinity for native protein–peptide complexes benchmark and low affinity for low-energy decoy complexes. In three cases, where wet lab data are available, the PepCrawler predictions were consistent with the data. Comparing to other state of the art flexible peptide–protein structure prediction algorithms, our algorithm is very fast, and takes only minutes to run on a single PC.
INTRODUCTIONProteinprotein interactions (PPIs) play a major role in cellular function. Thus, development of small molecules that modulate PPIs has become a major challenge in structural bioinformatics and computer-aided drug design. In particular, it is desired to detect small molecules that will block the PPI, without harming the intrinsic catalytic activity of the target (;). The search for such inhibitors includes drug-like small molecule inhibitors and short peptide inhibitors. The interaction between two proteins is often characterized by a large interface, lacking a significant single binding pocket (). Therefore, peptides, which are relatively large inhibitors, can be potential leads in the rational design of inhibitory drugs by mimicking the interacting area (Nieddu * To whom correspondence should be addressed. and; Mochly-Rosen and). Both naturally occurring and synthetic peptides have been used, and these are emerging as promising compounds that efficiently modulate signaling pathways in vitro and in vivo. Some inhibitory peptides were designed by deriving a short linear segment from one of the proteins in a given PPI complex (). These peptides were successfully able to inhibit interactions with the partner protein. In some of the examples, a mutated peptide was used to achieve better results, and in others, the derived peptide was stapled to form a stable cyclic peptide. Generally, a derived inhibitory peptide is target specific and may bind to the target protein with good binding energy. Using computational measures, it was recently shown that linear derived peptides dominate the interaction energy of many PPIs (). Given an input proteinprotein complex, we wish to derive a suitable peptide from one of the proteins, with high affinity to bind to the other, as well as predict the structure of the resulting peptide protein complex. Simply deriving a rigid peptide with high binding energy from the input complex is not enough (). First, peptides are highly flexible molecules containing backbone rotatable bonds and movable side chains. Second, the input structure might not be of high enough resolution for an accurate prediction. Finally, it might be hard to determine whether the resulting peptideprotein complex is stable. Several flexible peptideprotein docking methods have been introduced.applied a Monte Carlo (MC)-based method for flexible peptideprotein docking, which takes into account also protein side chain flexibility. Their suggested new potential, which considers proteinpeptide atom pair interactions and atomic solvation contribution, accurately predicted binding affinity on the test set. Recently, an MC-based algorithm for subangstrom peptide docking refinement that utilizes the Rosetta energy function was introduced by. A molecular dynamics-based refinement method was suggested by Antes (2010). Some high-resolution docking algorithms were designed for specific protein receptors (most of them are also MC based)e.g. MHC, PDZ and SH3 domains (;). These previous methods for flexible peptide docking have relatively long running times, mostly due to time consuming side chain energy minimization, which is extensively applied. In this article, we present PepCrawlera new method for flexible peptide docking. Our algorithm requires as input an initial peptide
PepCrawlerdocking hypothesis, which is close to the native structure (in a way that will be quantified). Peptides derived from the interface of the PPI are natural input candidates. This method allows backbone flexibility of the peptide, and side chain flexibility for both the peptide and the receptor protein. We generate large amounts of clash-free peptide docking conformations by using Rapidly-exploring Random Trees (RRT) (). RRT is a robotics motivated path planning approach, which has been previously used for computing large-amplitude motions of flexible molecules (). The peptide's flexible backbone conformation and its location are generated by the RRT algorithm. Side chain flexibility of both the peptide and the target protein is modeled by a rotamer library. The initial proteinpeptide conformation is refined to a low-energy docking solution. Moreover, since the binding energy itself is often not enough for predicting binding affinity (), a dense binding energy/root-mean-square deviation (RMSD) plot is created and scored. This plot assists in evaluating the affinity of the binding solution via energy funnels ().
METHODS
PepCrawler algorithm phasesThe PepCrawler algorithm () contains the following phases: @BULLET Phase Agiven an input proteinprotein complex, derives a single, short, low-energy binding peptide from one of the interacting proteins. @BULLET Phase Bgiven an input proteinpeptide complex, explores the conformational space by using our RRT-based algorithm, creating a large amount of flexible peptide conformations from the given complex; scores these conformations; performs clustering and outputs the top five cluster candidates. @BULLET Phase Csimilar to Phase B, performs a more refined RRT exploration focused around the conformation of each cluster candidate from the previous phase and allowing less peptide flexibility. It computes the backbone-atom RMSD (bb-RMSD) between the highest scoring conformation of the input peptide and each of the other conformations. It outputs the highest scoring complex, an Energy/bbRMSD plot containing all conformations generated in this phase and a corresponding funnel 'steepness' score of this plot.PepCrawler enables three different simulations. First, estimation of peptide binding affinity to a protein by creating and scoring a suitable energy plot, which represents the binding energy funnel (running Phase C). Second, refinement of a given proteinpeptide complex (starting from Phase B). Third, derivation of a binding peptide from a proteinprotein complex along with refinement and binding affinity estimation of the result (starting from Phase A).
Phase Aderivation of candidate binding peptidesGiven an input proteinprotein complex, we wish to derive a small peptide from one of the proteins (P 1 ) that binds to the other (P 2 ) with low energy. Assuming that the input complex is given at a sufficient resolution, the algorithm first finds all the amino acids of P 1 that are in the binding interface. Then, it computes the binding energy score (see Section 2.3.6) of all possible derived protein peptide chains of P 1 that satisfy both conditions: the number of amino acids in the chain is between 5 and 12 (inclusive) and there are no three consecutive amino acids that are not in the binding interface with P 2. The lowest binding energy peptide candidate is chosen [at this stage, we do not take into account the free (self) energy of the peptide]. Since peptides use hot spots to bind to proteins (), the algorithm tries to trim the candidate peptide, in order to dispose amino acids that are not in the binding site, or contribute non-negative energy (and therefore clearly cannot be hot spots). The peptide is trimmed by removing its tail (from each of the terminal sites), so that the cumulative energy of the peptide tail starting from such amino acid is only slightly negative (it cannot be positive due to the choice of the lowest energy peptide). If such a tail is found, the trimmed peptide is selected as the output-derived peptide. If not, the original peptide is selected.
Phases B and Ccreating and scoring clash-free peptide docking conformations using RRTGiven an initial proteinpeptide complex structure, we use the RRT method () to rapidly generate a large amount of clash-free peptide conformations in the protein binding site. The main advantages of the RRT method, compared e.g. to other MC methods, is its fast exploration of the feasible conformational space and the fact that a large amount of conformations checked for feasibility are indeed feasible.
Peptide as a moving articulated objectA peptide backbone is highly flexible. This flexibility is caused due to changes in the backbone torsion angles (, ). Therefore, the backbone rotatable bonds form a kinematic backbone chainwhere each chain link contains few of the peptide's atoms with no rotatable backbone bond between them. By generating a set of values for the backbone torsion angles, the peptide can be reconstructed, forming a new backbone conformation. Each amino acid contributes two rotatable bonds to the peptide backbone chain (, ). Apart from its flexibility, we also want to model the peptide global movement in the 3D space. So, given a 3D translation vector and three rotation angles, we can construct a suitable rigid transformation to apply to the peptide. To conclude, our method takes into account the following degrees of freedom (DOFs): peptide's backbone torsion angles and a rigid transformation. For a peptide with m backbone rotatable bonds, the number of DOFs will be D = m+6. These DOFs are randomly perturbed to create new conformations. We define suitable ranges for the possible perturbations in the DOFs values. For Phase B, we use a maximum distance of 3  for each translation parameter, and a maximum change of 40 @BULLET in the global transformation rotation angles and in torsion  angles from the original conformation. For Phase C, we use a maximum distance of 1  for each translation parameter, and a maximum change of 20 @BULLET in the transformation rotation angles and in the torsion angles relative to the original conformation.. Expansion of a tree toward a random conformation using an RRTbased algorithm in a 2D DOF space.
Page: 2838 28362842
E.Donsky and H.J.Wolfson
The conformational spaceIn robotics motion planning, a basic problem is to produce a continuous motion of an object starting from a given conformation, while avoiding collision with obstacles in the space. The conformational space C is the set of all possible conformations. The set of conformations that avoid collision with obstacles is called the feasible space. The forbidden space is the complement of the feasible space in C. In our method, the number of DOFs G is the dimension of the conformational space, since a suitable G dimensional vector of DOF values (DOF vector) determines the computed 3D backbone conformation. We define the feasible conformation space to be all DOF vectors that generate clash-free conformations. We thus define the forbidden conformational space to be all DOF vectors that generate conformations with steric clashes. RRT allows rapid exploration of the feasible space by expanding a random tree rooted at an initial conformation, using a greedy heuristic (as detailed below).
The RRT-based algorithmStarting from the initial input complex conformation, which is a G-dimensional vectorq init , the algorithm iteratively builds a tree of randomly generated vertices (). At each iteration, a conformation q rand is sampled from the conformational space, by choosing a random DOF vector (according to the limitations). This sample is used to determine the tree node to be expanded and also the direction of expansion in the conformational space. The nearest node q near in the tree to the sample q rand is found by using a distance metric of DOF vectors in the conformational space. The linear segment q near q rand is then defined. An attempt is made to expand the tree, progressing by discrete small increments on the selected segment, starting from q near , and checking whether the conformations found are feasible (). This progress stops when a forbidden conformation is reached, or if all conformations that were checked including q rand are feasible. If at least one new feasible conformation was found, the expansion succeeds, resulting in a new node q new being added to the tree as well as the feasible edge q near q new. The feasible conformations that were found on the way are stored for later use. As a result of this expansion strategy, the probability that a node will be chosen for an expansion is proportional to the volume of its Voronoi region in the conformational space (i.e. the set of points closer to this node than to the other tree nodes). Thus, the strategy has the desired effect of expanding the tree toward unexplored regions of the feasible space. The algorithm output is the final feasible tree, and all the feasible states that were discovered in the tree expansion process.
Collision detectionIn the tree expansion procedure, the algorithm extensively queries DOF vectors for feasibility. Therefore, a highperformance collision detection mechanism is required. The quadratic cost of enumerating all non-bonded atom pairs will be very slow in our type of complexes. For this purpose, we have implemented a 3D grid, for quick selection of all atoms in the 3D space that are close to a given atom (). To determine collision between two non-bonded atoms, we address two different criteria:(1) Distance criteriongiven a reduction factor K, if the centers of the atoms with radii r 1 and r 2 are less than K(r 1 +r 2 ) apart, they are defined to be mutually tight. For most complexes we have used K = 0.8, if one atom is a peptide atom and the other is a receptor protein atom (intermolecular). For the other possibilities (intramolecular), we have used K = 0.7 in order to increase side chain motion space within the molecule.(2) Repulsive VdW (rVdW) criterionthe complex energy (computed at a later stage) is strongly affected by rVdW forces; thus, we do not want to allow high rVdW forces to exist between atoms in feasible complexes. We define a threshold parameter Fthe maximum rVdW force allowed between two atoms. In our simulations, we have used F = 4 for Phase B and F = 1.5 for Phase C (we thus allow more atom penetration in Phase B than in Phase C). The computation time of the rVdW value is  3 times slower than the computation time of the distance criterion.In order to achieve fast collision detection, we first compute the distance criterion. If the atoms are not mutually tightthey are considered clashfree. Only if they are mutually tight, the rVdW criterion is computed in order to determine whether there is a collision. Decrement of the K-values or increment of the F-values will enlarge the feasible space, which will make the RRT more probable to explore small feasible cavities and narrow passages, but will also create large amount of feasible conformations with relatively high energy.
Side chain flexibilityThe algorithm takes into account side chain movements of the peptide as well as of the receptor protein. It moves the side chains in order to try to solve clashes before deciding that a DOF vector is in the forbidden space. The side chain movements are modeled by various side chains rotamers, taken from the Dunbrack backbone-dependent rotamer library (). A change in a side chain rotamer affects the 3D location of only a few atomsas opposed to a change in the RRT DOFs values that might affect the location of the whole peptide. Therefore, the algorithm performs side chain movement only to solve a current clash with the other atoms. Our clash detection algorithm (CDA) is therefore also responsible to move the relevant side chains. In detail, the input to the CDA is a DOF vector, to be checked for clashes. The algorithm iteratively inserts the atoms of the complex to a 3D grid by their location according to the DOFs, and previously stored rotamer conformations. If a pair of atoms clashes, the algorithm checks whether at least one of them is a moving rotamer atom (MRA), i.e. a side chain atom that changes its location for different rotamers. If so, the algorithm stores these two atoms and continues. If not, a clash in the complex is declared, and CDA is done. After inserting the entire complex, the algorithm randomly chooses a clashing side chain and tries to resolve the clash by replacing its rotamer. The rotamers are selected randomly according to their probability in the rotamer library. For side chains that clash with a non-MRA, all relevant rotamers are checked, until a feasible one is found. For two MRAs in a clash, belonging to different side chains, all possible rotamer pairs are checked. If all clashes were solved, the output is a set of side chain rotamers that makes a feasible conformation.
Energy computationIn the process of the RRT construction, we do not compute the energy of the feasible complexes. This method thus has the ability to circumvent energy traps better than other MC algorithms. The RRT exploration results in a tree containing feasible nodes and a list of feasible states found while extending the tree (when progressing on line segments). We then compute the energy of all feasible nodes and of every third state on each of the expanded line segment edges (for example, if an edge contains 12 feasible states, 4 will be scored). We use our previously developed binding energy function score of the FireDock method, which was originally implemented for proteinprotein binding (). This energy score includes a variety of energy terms: desolvation energy (ACE potential), VdW interactions (attractive, repulsive), partial electrostatics, hydrogen and disulfide bonds,  interactions, cation interactions and aliphatic interactions. The exact formula and further explanations appearthe simulation, we also compute its self energywhich includes rVdW forces between the peptide's atoms, the probability of side chains rotamers to appear according to the rotamer library and penalties for very low Ramachandran potential torsion angles (). We are not applying any side chain energy minimization method throughout the algorithm. The final complex energy of a conformation is the sum of the binding energy and the peptide's self energy. Hydrogen atoms were added to the initial conformation for energy computations purposes using REDUCE (). We then compute the bb-RMSD between the lowest energy peptide conformation and all the other feasible-generated conformations, and draw a corresponding energy versus bb-RMSD 2D plot: the proteinpeptide complex energy values on the y-axis and bb-RMSD values on the x-axis.
ClusteringThe first cluster is created by selecting all conformations that are at most 1.8  bb-RMSD from the lowest energy conformation. Then, the lowest energy conformation among all the unclustered conformations is found. All unclustered conformations that are at most 1.8  bb-RMSD from this current lowest energy conformation are then assigned to the second cluster. This process is repeated three more times to form five different clusters.
Scoring energy funnelsInspection of proteinprotein docking solutions has indicated that near-native results are expected to have not only low-energy values but also visible steep energy funnels (). Thus, it is plausible that steep energy funnels for proteinpeptide docking in the bb-RMSD 2D plot may also indicate good binding affinity (see Section 3.1). We therefore compute a rough funnel score, indicating the steepness of a funnel. In order to compute this score, we first compute the lower envelope of the energy plot (since no energy minimization procedure is performed on PepCrawler conformations, we thus relate only to the lowest energy conformations when identifying the funnel). This computation is done by dividing the bb-RMSD axis into short intervals (0.05  wide) and choosing the minimal energy conformation in each one. Then, we select a set of sampling points found on this lower envelope: 30 points in the interval 01 , 20 in the interval 12  and 25 in the interval 24.5  (points are selected by partitioning each bb-RMSD interval into n equal segments, where n is the number of points). Then, we compute the linear regression line of this set of sampling points, passing through the initial solution conformation (zero bb-RMSD). The output funnel score is defined to be the slope of this regression line. By choosing more sampling points near the origin and less sampling points far from the origin, we favor funnels that are steep in the area near the low-energy conformation (origin) and becoming more and more moderate on funnels that are moderate near the low-energy conformation and becoming steeper. Thus, a high funnel score will be achieved, for example, for peptides that are found inside a binding pocketcreating a relatively steep funnel near the origin.
RESULTS
Energy funnels of native proteinpeptide complexes and wrong proteinpeptide docking solutionsIn order to check the validity of our conjecture that steep energy funnels in the bb-RMSD 2D plot indicate high binding affinity, we have performed Phase C of the PepCrawler algorithm on two benchmark databasesone representing native proteinpeptide complexes and the other decoy complexes. For native inputs, we have used all PDBs from PeptiDBa clustered database of proteinpeptide complexes (). We have then run PepCrawler Phase C, creating the energy plot starting from the lowest energy conformation ().The docking solutions are numbered according to their final FiberDock score (where Solution-1 is the lowest energy complex). Although Solutions 1, 2 and 6 have better energy than the native complex, their funnel score is significantly lower.The average funnel score of all 103 input complexes was 8.41, and only 13 complexes had a funnel score < 5. In order to create decoy proteinpeptide docking solutions, we have arbitrarily selected 15 PeptiDB complexes, and used our previously developed rigid-docking PatchDock algorithm () followed by the flexible (both backbone and side chains) docking refinement FiberDock () algorithm, to create new energy-optimized docking solutions (10 solutions for each input). Out of the 150 solutions, we have chosen, in total, 60 low-energy complexes, where the peptide conformation is at least 20  apart from the native, forming a decoy docking solution. We have then run Phase C on these 'decoy' docking solutions. The average funnel score of all 60 input complexes was 4.08, and only 11 complexes had a funnel score > 5. Although the refined decoy solutions had low complex energy values, the funnel score of most of them was not steep (). Our experiments on the PeptiDB and the decoy benchmarks have shown clear correlation between the funnel steepness score and the binding affinity.
Peptide refinementWe have tested the PepCrawler refinement mechanism on 25 arbitrarily selected PeptiDB structures. For each structure, we have randomly created few clash-free random peptide conformations, with peptide bb-RMSD of  3.5 and 5  from the original conformation. We have assigned a random rigid transformation, chosen random  perturbations (up to 35 @BULLET shift for each torsion angle), and chosen random rotamer conformations for the side chains of the peptide as well as for the side chains in the binding site of the protein. We have then run Phases B and C of the algorithm on the input conformations. In 88% of the 3.5  input structures, one of the top three PepCrawler refinement solutions had < 1.6  bb-RMSD from the native conformation. For the 5  models, this success rate was 70%. We present refinement and funnel score results for three specific domain receptor groups. In each group, six arbitrarily selected Page: 2840 28362842models from the PDB were used to create six random models with 5  peptide bb-RMSD from native.
E.Donsky and H.J.Wolfson
Group 1MHC Class I proteinsMHC Class I (MHC-I) proteins contain two domains, which create a large groove for peptides to bind. These proteins bind peptides that are 811 aminoacid in length and that tightly fit into the groove, exhibiting shape and physicochemical complementarity. Very good results were achieved with MHC-I proteinpeptide complexes. In all simulations, the topscoring result had < 1.2  bb-RMSD from the native conformation. The average energy of these top-scoring results was 87.9 and the average funnel 'steepness' score was 11.3. The relatively high funnel score was achieved mainly due to the fact that even minor conformational changes of peptides that are found inside a groove, might cause some clashes with the receptor protein, resulting in a relatively high binding energy.
Group 2SH3 domain proteinsSH3 is a small protein domain of  60 amino acids. SH3 domains mediate signal transduction by recognizing peptides that are 810 amino acid in length, where all the amino acids of the peptide are found in the binding interface. In all simulations of the models in this group, one of the top two refinement solutions was < 1.6  bb-RMSD from the native peptide conformation. The average energy of the near-native solutions was 58.29 and the average funnel score was 7.26.
Group 3PDZ domain proteinsPDZ domains bind to specific C-terminal sequence motifs that are usually about five amino acids in length. Library screens suggested that two of the peptide residues are most critical for recognition (). Each of these two amino acids points into a different pocket of the PDZ domain. In this group's simulations, one of the top four refinement solutions was < 1.8  bb-RMSD from the native peptide conformation. The average energy of the near-native solutions was 38.29 and the average funnel score was 7.18. Since PDZ domain binding peptides are relatively short in length and since only two amino acids are critical for binding, we could expect the average energy of this group to be not as low as the other two. However, the average funnel of the PDZ complexes is as steep as in the other two cases.
Derived binding peptidesexperimentation on in vivo and in vitro examined dataWe have examined three cases where in vivo and in vitro data were published. We have evaluated the ability of PepCrawler to derive binding peptides from the structures of proteinprotein complexes for two of these cases. We have run the full PepCrawler algorithm on each of the two complexes, expecting that the derived PepCrawler peptide will be similar to the experimentally detected one, and that the existence of steep energy funnels will be in correlation with the binding affinity shown in vivo. In the third case, where three different derived peptides were examined in vitro, we checked the ability of PepCrawler to identify the best inhibitor.
Protein kinase CK2 subunit interactionProtein kinase CK2 has a quaternary structure consisting of two catalytic subunits (CK2-) and two regulatory subunits (CK2-).derived an eight-residue peptide from CK2- chain (residues 186193), referred to as the Pc peptide. This peptide was chosen by structural identification of CK2- hot spots, analyzing functional CK2- mutants, and performing in vivo validation of hot spots. A cyclic Pc peptide was created by cyclizing three additional glycine residues via two cysteine residues. The biological activity of Pc was examined, showing that the same amount of CK2- activity could be found associated with biotinylated CK2- or biotinylated Pc, indicating that Pc stably interacts with CK2-. Both cyclic and non-cyclic Pc peptides were shown to be effective. Another binding essay was performed, showing that Pc could antagonize the CK2 subunit interaction. We have tested the full PepCrawler algorithm (all three phases) on the input CK2 complex (PDB id: 1JWH). The algorithm Phase A first derived the lowest energy peptide (186197) with binding energy of 19.3. Then, it trimmed that peptide resulting in an 8mer (186193) with the binding energy of 17.54(remarkably, this is actually the non-cyclic Pc peptide). The complex energy of this peptide conformation was only 4.5 due to high inner peptide rVdW forces. Running Phases B and C on the conformation, resulted in a best energy peptide with 37.39 complex energy, 12.51 Page: 2841 28362842funnel score and 2.3  bb-RMSD from the starting derived peptide conformation (from the PDB). This top-scoring peptide also had the lowest bb-RMSD to the original peptide conformation, among all other cluster candidates. The relatively high funnel score indicates its high binding affinity ().
PepCrawler
HIV-1 integrase and LEDGF protein complexThe human transcriptional coactivator p75 (which is also referred to as LEDGFlens epithelium-derived growth factor), is the dominant cellular binding partner of HIV-1 IN ().designed a short LEDGF-derived peptide containing residues 365369, which were identified as the main residues that participate in IN binding. Using a combination of alanine scanning, fluorescence anisotropy, NMR and IN enzymatic assay, they showed that this peptide is a weak IN inhibitor. Although the residues 365369 are important for IN binding at the protein level, they are not sufficient for inhibition at the peptide level. We run the full PepCrawler algorithm on the IN-LEDGF complex (PDB id: 2B4J) input. Phase A of the algorithm derived the peptides 365369 from LEDGF (similar to the one chosen manually) with binding energy of 6.1. Phases B and C generated five output complexes where the best energy solution had an energy of 18.59, a relatively low funnel score of 2.16, and bb-RMSD of 2.7  from the starting derived peptide conformation (from the PDB). This topscore solution also had the best funnel score out of the other 4. Although few solutions with good complex energies were achieved, the lack of significant energy funnels indicates low binding affinity of this peptide ().tested the feasibility of stabilizing p53C protein by trying to find small peptides that bind its native state. They examined the p53C-53BP2 complex structure (PDB id: 1YCS). 53BP2 contains three loops which make the contacts with p53C. They tested three derived peptides corresponding to these three loops: residues 422428 (CDB1), residues 469477 (CDB2) and residues 490498 (CDB3). In vitro tests showed no significant binding of CDB1 to p53C. CDB2 and CDB3 did bind, where CDB3 had much tighter binding. CDB3 was chosen as the lead peptide for further experiments in p53 research. We run PepCrawler on the three different CDB-p53C complexes. Results are shown on.PepCrawler simulations predict that CDB3 has significantly tighter binding to p53C than the other two peptides, with better complex energy score and funnel score, in full agreement with the experimental results.
p53C and 53BP2 complex
Running timeWe have measured PepCrawler performance on a PC with a single core 2.4 GHz Intel processor, using a single-threaded version of our algorithmwhere all the algorithm operations are done sequentially. For all input complexes checked, Phase A took < 5 s to run. Phase C runs on average for 1:20 min for each input, performing 600 RRT exploration rounds with an average of 10 000 conformations checked for feasibility and  2500 energy computations of some of the feasible conformations. Phase B runs on average for 14:15 min, performing 7000 RRT rounds with average of 143 000 conformations checked for feasibility and 44 600 energy computations. The running times presented here can be significantly reduced by parallelizing clash detections and energy computations of complexes, or by running the program on a cluster.
SUMMARYWe have presented a generic method for high-resolution peptide docking in cases where an approximately binding peptide candidate is provided. By efficiently filtering conformations, performing fast energy computations and avoiding the need of running side chain minimization procedure on the result conformations, we drastically reduce running time compared with other MC type proteinpeptide docking methods. The algorithm allows distinguishing between near-native docking solutions and decoy conformations of peptide protein complexes. We have also presented an application of the algorithm for the highly challenging and useful task of detection of peptide inhibitors to PPIs. The latter application was demonstrated to be consistent with the published experimental data.
The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
