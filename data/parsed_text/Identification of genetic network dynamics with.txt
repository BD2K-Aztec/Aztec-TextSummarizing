Motivation: Modern experimental techniques for time course measurement of gene expression enable the identification of dynamical models of genetic regulatory networks. In general, identification involves fitting appropriate network structures and parameters to the data. For a given set of genes, exploring all possible network structures is clearly prohibitive. Modelling and identification methods for the a priori selection of network structures compatible with biological knowledge and experimental data are necessary to make the identification problem tractable. Results: We propose a differential equation modelling framework where the regulatory interactions among genes are expressed in terms of unate functions, a class of gene activation rules commonly encountered in Boolean network modelling. We establish analytical properties of the models in the class and exploit them to devise a two-step procedure for gene network reconstruction from product concentration and synthesis rate time series. The first step isolates a family of model structures compatible with the data from a set of most relevant biological hypotheses. The second step explores this family and returns a pool of best fitting models along with estimates of their parameters. The method is tested on a simulated network and compared with state-of-the-art network inference methods on the benchmark synthetic network IRMA.
INTRODUCTIONIdentification of genetic regulatory networks aims at inferring the regulatory mechanisms of gene expression from experimental data. Various modelling approaches have been employed with success for the reconstruction of the network of interactions among genes (see e.g., for recent reviews). In particular, Boolean activation rules () have been proposed as a natural framework for the description and reconstruction of gene activation rules, whereas Bayesian networks () have been utilized to capture statistical relationships in the expression of a network of genes. * To whom correspondence should be addressed.The development of experimental techniques for the quantitative monitoring of gene expression over time is paving the way for the learning of gene expression dynamics. Kinetic modelling, where the interactions among genes are encoded into the structure of a set of gene expression rates (see de Jong, 2002, and references therein), provides an accurate description of the time evolution of gene expression. Unfortunately, an overwhelming variety of gene activation functions must be explored in order to reconstruct the network structure and dynamics from the data. A way around this complexity is to quantify genetic interactions by universal approximators. In, the activation level of each gene is quantified by a saturated linear combination of the concentrations of the network proteins. This enables the reconstruction of direction and sign (inhibition versus activation) of the interactions among genes. Unlike in Boolean networks, the interplay among controlling genes in the regulation of the controlled gene (the 'logics' of the network) is not modelled explicitly. Similar insight into regulatory interactions near equilibria is provided by the linearization methods (). Glass andsuggested to model switch-like regulatory interactions by step functions. This results into a very simple piecewise linear model of gene product concentration kinetics (constant synthesis rate plus degradation) that can be fitted to experimental data () quite efficiently. For many activation functions, however, the approximation by step functions is rather coarse and may prevent the use of this framework for identification. In this work, we address the identification of kinetic models of gene regulatory networks from time course gene expression data. Our primary interest is the reconstruction of the network of interactions and logics behind gene expression control. We propose a modelling framework where the synthesis rate equations reflect the structure of a class of gene activation rules known as unate functions (). In the context of Boolean modelling, unate functions capture all interactions where each gene acts exclusively as an inducer or as an inhibitor for the expression of another gene. Based on biochemical analysis,argue that unate functions provide a comprehensive modelling framework for genetic regulatory networks. Unate functions include hierarchically (or nested) canalizing functions (), a class of Boolean functions describing the majority of the known gene activation rules ()
R.Porreca et al.and. We establish properties of the rate equations with unate structure and exploit them to set up an identification procedure in two steps. The first step selects a restricted family of gene interaction patterns consistent with the experimental data. The second step explores kinetic models with compatible structure and returns a pool of kinetic models of lowest complexity that explain the data in a statistical sense. This procedure ensures that a reduced number of models need to be fitted to the data, leading to substantial computational savings. Still, the number of model structures compatible with the data may be enormous in practice. To cope with this, we show by a relevant example how the method can be adapted to confine the search of model structures to the most relevant biological hypotheses. We assume that gene product concentration and synthesis rate measurements are available simultaneously at discrete time instants. Various direct of indirect methods providing this data exists (see for instance). The performance of the method is first tested on a simulated system and then compared with state-of-the-art on the network IRMA (In vivo assessment of Reverse-engineering and Modeling Approaches), a synthetic network designed byas a benchmark for gene network inference algorithms.
METHODS
Kinetic models with unate structureConsider a network with n genes. In the context of Boolean networks, the activation status of gene i, with i = 1,...,n, is encoded by a binary variable X i that is 1 if the gene is active and 0 otherwise. The laws governing the activation of gene i are captured by a Boolean rule B i (X) :{0,1} n {0,1}, with X = (X 1 ,...,X n ). In practice, B i depends only on the entries of X corresponding to the genes that control the expression of gene i.argued on the basis of biochemical reaction modelling that virtually all regulatory interactions can be described by unate functions. Also known as sign-definite functions, these are Boolean functions that are either non-decreasing or non-increasing in each of the input variables. Every unate function can be written in conjunctive normal form by an expression where each variable X i appears either in a positive form (X i itself) or in a negative form (the negation of X i , indicated by X i ), but not both. That is, it can be written aswhere '' and '' stand for conjunction ('and') and disjunction ('or'), respectively, each J l is a non-empty set of pairwise different indices from {1,...,n}, and each variableXvariable variableX j is uniquely defined as either X j or X j. By convention, a conjunction of n i = 0 terms is equal to 1. A theoretical investigation of the properties of Boolean regulatory networks based on unate activation functions is developed by Aracena (2008). Unate functions include, among others, the class of hierarchically canalizing functions (HCF;). According toand Szallasi and Liang (1998), HCF capture a large class of the known regulatory interactions among genes and are intimately related with the stability properties of the network. Let x i  R 0 denote the concentration of the product of gene i, and let x = x 1 ,...,x n . We consider ordinary differential equation models describing the evolution of x as follows (): for i = 1,...,n,where g i (x)  0 and  i (x)  0 are the synthesis and the degradation rates of the product of gene i. The gene network identification methods that we will discuss rely on sample observations of x and corresponding g i (x). As long as these data are available, the decay rate function  i (x) does not enter the problem and will be ignored. We focus on non-linear models of g i (x) of the type g i (x) =  0,i + 1,i b i (x),where  0,i  R 0 and  1,i  R 0 are constants and b i (x) : R n 0 quantifies the regulatory effects of the gene products on the expression of gene i via Hill activation functions ():where d  1 is a cooperativity coefficient and >0 is a threshold parameter. We propose a modelling framework where the unate structure of gene activation functions is reflected into the algebraic structure of b i (x). Given an activation function (1), we obtain the corresponding b i (x) by the following transformation rules. For parameters d and  possibly depending on i, we replace each X i by  + (x i ). Given any two functions (x) and  (x) representing the Boolean expressions T (X) and T (X), we encode T (X) by 1(x) and T (X)T (X) by (x) (x). With these rules, Equation (1) is transformed into (Supplementary Material)) ifXif ifX j =X j. By convention, a product of zero terms, i.e. n i = 0, is equal to 1. According to, this is the algebraic counterpart of (1) if x j low is interpreted as X j = 0 and x j high is interpreted as X j = 1. We will refer to (24) as a kinetic model with unate structure.
Hierarchies of consistent modelsWe show that kinetic models with unate structure possess monotonicity properties that are independent of the model parameters and of the decay rates  i (x). These properties can be exploited in order to accept or reject families of model structures based on a qualitative analysis of experimental data. Since the results apply equally to any fixed index i, in the remainder of the section we will drop index i from g i. We define the sign pattern of (34) to be the n-tuple p = (p 1 ,...,p n ) {1,0,+1} n , where, for j = 1,...n,Note that many different functions of the form (4) share the same sign pattern. We will write g(x|p) in place of g(x) to specify a synthesis rate with sign pattern p. The complexity C(p) of a sign pattern p is defined as the number of non-zero entries of p, and is equal to the number of effective inputs of g(x|p). Given any sign pattern p with C(p) > 0 and any two concentration vectors x 1 and x 2 , it holds that (Supplementary Material)In words, if all the elements of x move in the direction of growth (defined by p) of the corresponding sigmoid in g(x|p), then g(x|p) is bound to increase. In view of identification, consider a set of m concentration measurements x k and corresponding synthesis rates g k = g(x k ), with k = 1,...,m. A sign pattern p is called inconsistent with the data if there exist two data points (x k ,g k ) and (x l ,g l ), with k,l {1,...,m}, for which (5) is violated, i.e.,...,n and g k g l < 0 .A pattern that is not inconsistent is called consistent with the data. A sign pattern p is called a subpattern of p (and p is a superpattern of p ) if all itsPage: 1241 12391245
Identification of genetic network dynamics with unate structurenon-zero entries are equal to the corresponding entries of p. We indicate this fact by the notation p p. It is easily seen that in this case C(p )  C(p) and subpatterns of inconsistent sign patterns are also inconsistent. Conversely, superpatterns of consistent sign patterns are also consistent. Let us compute a set  P as follows.Computation of  P: set  P =. For all indices k,l {1,...,m}:(I) If g k g l < 0, define the sign pattern ), with j = 1,...,n, and include  p in  P.[By convention sign(0) = 0]. It follows from above that all sign patterns in  P are inconsistent. Moreover, it is shown in the Supplementary Material that every inconsistent sign pattern p is a subpattern of at least one pattern  p   P. It is possible to determine a set P * of minimal consistent sign patterns, such that every consistent pattern is a superpattern of at least one sign pattern in P * . In light of these properties, we will denote the hierarchy of consistent sign patterns by H (P * ). Given  P, the set P * of minimal consistent sign patterns can be computed by the following procedure.For increasing values of complexity = 0,...,min{n,  +1}:(II) Generate all patterns p of complexity. For each such p,(III) Check if p is consistent by verifying that there is no  p   P such that p  p. If this is the case,(IV) Check if p is minimal consistent by verifying that there is no p *  P * such that p * p. If this is the case, include p inThe complexity of the computation of  P is O(m 2 ). In the current implementation, the complexity of the computation ofwith   n. The correctness of the algorithm is proven in the Supplementary Material. In practice, the procedure will be applied to noisy data. The necessary extensions are presented in the next section.
Structure and parameter identificationWe exploit the properties of kinetic models with unate structure to perform model identification in two steps. In a first step, data is used to select a hierarchy H of consistent sign patterns. In a second step, we fit models of increasing complexity with sign pattern in H in order to build a pool P of models explaining the data with sufficient accuracy. The method requires simultaneous measurements of gene product concentrations and synthesis rates at m time instants t 1 ,...,t m , and a quantification of the statistics of the measurement noise. We assume that data obeys the following measurement model: for k = 1,...,m,wherexwhere wherex k i andgand andg k i are noisy observations of, respectively, while e k i and k i are mutually uncorrelated Gaussian random variables with zero mean and variancepossibly depending on x k i and g k i. We assume that the functions v e (x i ) and v (g i ) are known. This measurement model includes, for instance, additive noise models, where v e and v are positive constants, and multiplicative noise models (see e.g.), where v e (x i ) and v (g i ) are linear functions of x 2 i and g 2 i .
Outline of the algorithmGiven a sign pattern p, let S(p) be a set of admissible structures for a model g(x|p). Under the assumption that g(x|p) has a unate structure, each element s  S(p) determines the family of index sets J 1 ,...,J n i of Equation (4) and, in accordance with p, the sign of the sigmoids   (x j ), with j = 1,...,n. For a model (4) with structure s, the parameters  0,i ,  1,i , and the cooperativity and threshold parameters of all the sigmoids in the model will be collectively denoted by .,...,m, and values N > 0 and   (0,1) specified by the user, we perform identification by the following algorithm, executed separately for each gene i = 1,...,n. (The definition of several new quantities, including N and , will be discussed shortly.)Algorithm 1 Two-step identification.
Step 1. (Selection of consistent model structures)I. Set  P =. For all indices k,l {1,...,m}, ifgifIIIV. Execute the computation of P * from the resulting  P, as described in Section 2.2.
Step 2. (Identification of best consistent models) Set P =. DefineFor each such p, execute VI. VI. For all s  S(p), fit the model g i () with sign pattern p and structure s by solving the nonlinear regression problemIf <(), include the fitted model in P. VII. If P = return P and exit.
Discussion of the algorithmStep 1 computes the minimal consistent sign patterns. The procedure is an adaptation of Steps IIV of Section 2.2 to allow for the presence of measurement noise. For the various indices l,k {1,...,m} and j {1,...,n}, we employ standard statistical hypothesis testing for the mean of Gaussian random variables in order to evaluate the signs of g k i g l i and x k j x l j , on the basis of noisy data. For a given N > 0 (typically integer), the hypothesis g k i g l i < 0 is accepted if and only ifg ifis the standard deviation ofgof ofg k i   g l i. On the basis of (7), we make the approximation  k,lotherwise. The result of Step 1 is a set of minimal consistent sign patterns P * . The smaller N, the smaller H (P * ), at the price of an increased probability of excluding the true sign pattern fromIn Step 2, we seek models with structure compatible with H (P * ) that explain the data with sufficient accuracy. The search is conducted by increasing levels of complexity , starting from the simplest models ( = * ) with structure compatible with H (P * ) onwards, and is stopped at the level of complexity where at least one good model is found. The parameters  of a candidate model g() with sign pattern p and structure s are estimated by regression (8). The choice of the weights w k is determined by the statistics of the fitting errorsgerrors errorsg k i g i (
R.Porreca et al.threshold (). For a suitable   (0,1), we choose () = F 1 m|| (), where F 1 m is the inverse of a chi-square distribution with m degrees of freedom. Then, with confidence level , we reject the hypothesis that a model g i () with residual fitting error  is a satisfactory description of the data if   (), otherwise we accept the model and stop the iterations of the identification procedure at the current level of complexity. This mechanism favours simple models over complicated ones, reducing the risk of overfitting: the search of acceptable models proceeds by increasing levels of complexity and halts at the level for which at least one model is found. Several models of the same complexity may be accepted. If no good model exists, the procedure terminates at the maximum level of complexity n returning the empty set P =. Alternatively, a smaller upper bound to the complexity of the models searched can be placed by the user in the light of biological considerations. For the special circumstance where b i (x)  0 (no effective inputs), it is convenient to introduce a preprocessing step that checks if a constant model explaining the data well enough exists. We do this by a standard chi-square test with confidence level : Step 0. (Check for trivial dynamics) For w 1 =  = w m = 1, solve regression (8) with respect to g i (x)   0,i = . If <v ( 0,i )F 1 m1 (), then return the model g i (x) =  0,i and exit. Otherwise execute Algorithm 1.
Restriction of the search space.In practice, searching all unate structures S(p) associated with a sign pattern p is prohibitive, especially for large values of complexity C(p). A possible remedy is to confine the search to sign patterns having limited complexity (i.e. only a limited number of genes may have a direct regulatory effect on the expression of another gene). Another sensible approach is to reduce the set of model structures S(p) associated with each sign pattern p. Based on a priori information on the nature of the interactions, separately for every gene i = 1,...,n, identification can be focused on the most relevant models of regulation. For example,note that many gene activation rules are unate functions (in fact HCF) in one of the following forms:where is the number of effective inputs of B i (X) and j 1 ,...,j are pairwise different indices from the set {1,...,n}. Both expressions are in the form (1). Following Section 2.1, the algebraic counterpart of (9) becomesFor the purpose of exemplification, in our identification experiments we will restrict ourselves to models in form (10), which will be referred to as kinetic models with S-structure,
Performance indices.In order to provide an evaluation of our identification method, we propose suitable indices of performance for Steps 1 and 2 based on repeated identification experiments. Let p * and s * denote the sign pattern and the structure of the true model. Let H r and P r , with r = 1,...,M, denote the hierarchy of consistent sign patterns and the pool of identified models, respectively, computed by the r-th of M identification experiments. We shall write s  P r to denote that P r contains a model with structure s. For Step 1, we define the reliability index R =|{r : p *  H r }|/M (|| denotes set cardinality) and the selectivity indexR is the relative frequency of p * falling in the set of consistent sign patterns: the larger R, the more reliable the procedure. When p * is deemed consistent, S counts the number of patterns that need not be explored in Step 2 thanks to Step 1, relative to the number of patterns that would be explored in Step 2 in absence of Step 1, under the assumption that the model acceptance criterion in Step 2 is perfect. Therefore, S quantifies the computational savings provided by Step 1: the larger S, the more significant the saving. For Step 2, we define the accuracy index A =|{r : s *  P r }|/M and the dispersion indexis the relative frequency of s * being found in the pool of identified models: the higher A, the more effective the identification. When s * is found in the pool of identified models, D  1 counts how many models are included in the pool on an average: the smaller the D, the more accurate the results.
RESULTS AND DISCUSSIONIn this section, we will discuss the identification of two regulatory networks by the algorithm in Section 2. The first is an in silico network specifically designed for testing the performance of the identification method. The second is IRMA, a synthetic network engineered byin Saccharomyces cerevisiae cells and proposed as a benchmark for the comparison of reverse engineering algorithms. The identification algorithm was implemented in Matlab and optimization (8) was performed by the standard Matlab procedure fmincon.
Performance test on a repressilatorWe considered a network of six genes where three genes form a core control loop in which a single gene represses the expression of the next gene. This portion of the network is usually called repressilator and was first synthesized by Elowitz and Leibler (2000). It induces oscillations in the product concentration and activation levels of each of the genes. The expression of the remaining three genes is activated according to various functions of the product concentrations of the core genes. The network is governed by the following equations (for a graphical representation of the network refer the Supplementary Material):The parameters and initial conditions for this system are reported in the Supplementary Material. In particular, the cooperativity coefficients of the sigmoids are assumed known and equal to 2.1 (). We attempted identification of this system with 90 equally spaced data points over a time interval such that the product concentrations of the core genes complete three full oscillations. MeasurementsxMeasurements Measurementsx k i andgand andg k i were artificially corrupted by Gaussian noise samples according to the observation model (7),the different noise levels  e =  = 0.01,0.03,0.05,0.07. This corresponds to noise roughly within 3%, 10%, 15% and 20% of the actual values of x k i and g k i. The performance of Algorithm 1 (with N = 6 and  = 0.95) for the various noise levels and all genes is conveyed by the scores on the performance indices R, S, A and D (). These were computed Page: 1243 12391245as described in Section 2.3.4 on the basis of M = 100 identification runs with the same system evolution, but with different random outcomes of the noise. Each run (Matlab V.7 R.14) took on an average roughly 5 min on a Windows XP workstation with Pentium 3.20 GHz processor and 2.00 GB RAM. Computational time ranged from 2 s for the identification of g 3 to 4 min for the identification of g 6. Step 1 always performs very reliably, i.e. index R is constantly equal to 1. This is expected since the choice N = 6 makes Step 1 conservative, i.e. the probability of declaring the true sign pattern inconsistent is negligible. The selectivity S generally decreases with the increase of the noise level. Even for high noise level, however, Step 1 is able to save the exploration of 50% of the sign patterns from the iterative identification procedure in Step 2; note that the total number of patterns that would be explored in absence of Step 1 is 232 for the most complicated case of Gene 6. The accuracy A of Step 2 is very high. The true model structure is included in the pool of identified models in >80% of the cases except for Gene 6. In this case, which corresponds to the most complicated synthesis rate function, the accuracy drops drastically with the increase of noise. On average, pools of less than four models (index D) are returned and need to be discriminated on the basis of biological knowledge or dedicated experiments. Note that the data fit of all models produced by Algorithm 1 is satisfactory (according to the acceptance test in Step 2.VI of Algorithm 1), even if the correct model is not found. Scores D inreveal that when the true structure is among the models found it is also often the only model found. Intuitively, this means that frequently the best fit model (usually associated to the correct structure) is the only one that passes the acceptance test among models of the same complexity. Finally, for correctly identified model structures, parameter estimates turned out to be quite accurate in all numerical experiments (results not shown).
Identification of genetic network dynamics with unate structure
Performance assessment on the IRMA networkA graphical representation of the network of interactions IRMA, comprising five genes, is depicted in., the ODE-based TSNI algorithm () was able to achieve the best performance in the context of reverse engineering from time series data, and hence it will be used for comparison in our study. The networks produced by TSNI are reported inalong with their performance measures. Given the availability of time series concentration data only and due to the lack of in vivo measurements of synthesis rates, we generated the latter data using the mathematical model proposed bywhere just three out of five kinetic models have a unate structure. We then applied Algorithm 1 with N = 2 and  = 0.95 to the combination of the in vivo concentration and in silico synthesis data. The latter were corrupted by an artificial measurement noise according to (7) with ( g k i ) 2. Three values of  (0.07, 0.1 and 0.3) were considered. Roughly, they correspond to noise contributions within 20%, 30% and 90% of the data values. The value N = 2 was chosen to make the sign pattern selection effective given the highly noisy data. For each value of  , 100 noisy dataset were produced and, for each dataset, a single reconstructed network was obtained by selecting the best fit model among the pool returned by Algorithm 1. The average performance of the method was evaluated by computing mean and standard error of the PPV and Se values for the 100 reconstructed networks, as shown in. In order to provide a visual inspection of the results,shows as representative networks the ones inferred more frequently for switch-on and switch-off time series. Results inshow that Algorithm 1 succeeds in reconstructing correct interactions for the two lower noise levels, outperforming TSNI also. There is a decay of performance for increasing values of  , particularly relevant for the highest noise level. The good performance of the proposed technique is confirmed by the representative networks in, in particular with respect to the few false positive interactions. Interestingly, our method is also accurate in inferring the sign (activation/inhibition) of the Page: 1244 12391245
R.Porreca et al.(a) () and by (c) Algorithm 1. Grey arcs (respectively, grey-end markers) denote incorrect direction (respectively, sign) of the inferred interactions. Values of PPV and Se for the signed directed graph, when different from the unsigned case, appear in square brackets. The three values of Se in (c) refer to increasing noise levels, while dashed and dotted arcs denote interactions inferred only for  < 0.3 and  < 0.1, respectively.interactions. Indeed, PPV and Se values computed with respect the signed graph in(i.e. an arc is false positive if it has either the wrong direction or the wrong sign) and shown inare very similar to their unsigned counterparts. Moreover, all arcs inhave the correct sign. Conversely, there is a significant performance decay for the TSNI algorithm, especially for the switchoff data where only one out of the five reconstructed interactions has correct direction and sign. This analysis reveals that the proper use of concentration and synthesis rate data can significantly improve results obtained by methods based on concentration data only, such as the algorithms considered in.
CONCLUDING REMARKSWe presented a kinetic modelling framework for genetic networks based on the unate structure of the regulation functions typically encountered in Boolean network modelling. We exploited monotonicity properties of the models in this class to devise a model identification procedure. Assessment on an artificial repressilator system and on the benchmark network IRMA revealed that the method performs well and outperforms state-of-theart reconstruction methods provided product synthesis rates and concentration time series are both available. The fact that our method, compared with most reverse engineering algorithms, provides a pool of accepted models opens new perspectives in the analysis of the results. As an example one can assign confidence measures on the interactions according to their frequency of appearance in the pool of accepted models. For the case where only concentration time series are available, we are currently working on the extension of the method based on non-parametric or semiparametric estimation for the missing data. First results based on bootstrapping suggest that the approach is still feasible in this case.
The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 1239 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
1 1 Gene 3 Step 1 R 1 1 1 1 S 0.92 0.92 0.92 0.92 Step 2 A 0.93 0.93 0.93 0.92 D 1 1 1 1 Gene 4 Step 1 R 1 1 1 1 S
