Motivation: Post-translational modification, abbreviated as PTM, refers to the change of the amino acid side chains of a protein after its biosynthesis. Owing to its significance for in-depth understanding various biological processes and developing effective drugs, prediction of PTM sites in proteins have currently become a hot topic in bioinformatics. Although many computational methods were established to identify various single-label PTM types and their occurrence sites in proteins , no method has ever been developed for multi-label PTM types. As one of the most frequently observed PTMs, the K-PTM, namely, the modification occurring at lysine (K), can be usually accommodated with many different types, such as 'acetylation', 'crotonylation', 'methylation' and 'succi-nylation'. Now we are facing an interesting challenge: given an uncharacterized protein sequence containing many K residues, which ones can accommodate two or more types of PTM, which ones only one, and which ones none? Results: To address this problem, a multi-label predictor called iPTM-mLys has been developed. It represents the first multi-label PTM predictor ever established. The novel predictor is featured by incorporating the sequence-coupled effects into the general PseAAC, and by fusing an array of basic random forest classifiers into an ensemble system. Rigorous cross-validations via a set of multi-label metrics indicate that the first multi-label PTM predictor is very promising and encouraging. Availability and Implementation: For the convenience of most experimental scientists, a user-friendly web-server for iPTM-mLys has been established at http://www.jci-bioinfo.cn/iPTM-mLys, by which users can easily obtain their desired results without the need to go through the complicated mathematical equations involved.
IntroductionPost-translational modification (PTM or PTLM) means the change of the amino acid side chains of a protein after its biosynthesis. Since the importance of PTM to basic research and drug development, identification of PTM sites in proteins has become a very hot topic in bioinformatics (). Among the 20 native amino acid residues, the modification at lysine (K), the so-called K-PTM, is one of the most frequently observed PTMs. Furthermore, some Lys residues in proteins can undergo sequential or cascades of covalent modifications; i.e. they can be targeted by various different K-PTM types, such as acetylation, biotinylation, butyrylation, crotonylation, methylation, propionylation, succinylation, ubiquitination and ubiquitin-like modifications. Meanwhile, various computational methods have been developed to predict the modification sites in proteins for different K-PTM types (). But to our best knowledge, so far no computational tool whatsoever can be used to deal with the system that simultaneously contains several different K-PTM types or multiplex Lys residues. Actually, this kind of multiplex Lys residues in proteins may have some exceptional functions worthy of our special notice for both basic research and drug development. In view of this, the present study was initiated in an attempt to fill such an empty field by establishing a novel method that can be used to predict the multiple K-type modifications in proteins. According to the Chou's five-step guidelines () and followed by many investigators in a series of recent publications (, b, c, d, e;), for developing a new prediction method that can be widely used by broad users, we should consider the following five points: (i) how to construct or select a valid benchmark dataset to train and test the predictor; (ii) how to formulate the biological sequence samples with an effective mathematical expression that can truly reflect their essential correlation with the target concerned; (iii) how to introduce or develop a powerful algorithm (or engine) to run the prediction; (iv) how to properly conduct cross-validation tests to objectively evaluate the anticipated accuracy; (v) how to provide a web-server and user guide to make people very easily to get their desired results. In the rest of this article, we are to address these point by point.
Materials and methods
Benchmark datasetNote that so far, the statistically significant and experimentconfirmed data are available only for the four K-PTM types: acetylation, crotonylation, methylation and succinylation. Thus, the proteins used in this study were collected according to the following procedures: (i) Open the web site at http://www.uniprot.org/, and click the button 'Advanced'. (ii) Select 'PTM/Processing' and 'Modified residue' for 'Fields'. (iii) Select 'Any experimental assertion' for 'Evidence'. (iv) Type 'human' for 'Term' to do search. (v) Collected were only those proteins that with keywords of 'acetyllysine', 'crotonyllysine', 'methyllysine' or 'succinyllysine'. (vi) Collected were only those proteins that contain 50 and more amino acid residues. Finally, we obtained 1769 working proteins. To make the description logically more rigorous and clear, the Chou's scheme () was adopted to formulate the peptide samples, as done recently by many authors in studying the nitrotyrosine sites (), methylation sites () and carbonylation sites (). According to Chou's scheme, a potential K-PTM site-containing sample can be generally expressed bywhere the symbol K denotes the single amino acid code K, the subscript n is an integer, R n represents the n-th upstream amino acid residue from the center, the R n the n-th downstream amino acid residue, and so forth. The detailed procedures to construct the benchmark datasets are as follows.(i) As done in (), slide the 2n  1-tuple peptide window along each of the aforementioned 1769 protein sequences, and collected were only those peptide segments that have K (Lys or lysine) at the center (Equation 1). (ii) If the upstream or downstream in a protein sequence was less than n or greater than L  n (L is the length of the protein sequence concerned), the lacking amino acid was filled with the same residue as its nearest one. (iii) The peptide segment samples thus obtained were put into the positive subset if their centers have been experimentally annotated as the acetylation site; otherwise, into the negative subset. (iv) If there were two or more samples sharing a same sequence, kept was only one of them. (v) Repeat the cycle of (iiv) by successively changing 'acetylation' in (iii) to 'crotonylation', 'methylation' and 'succinylation', respectively. By doing so, we obtained the following four benchmark datasetswhere the positive subset S  n acetylation  contains only the peptide samples with their center residues K (Equation 1) confirmed by experiments being able to be of acetylation, while the negative subset S  n acetylation  only contains those samples unable to be of acetylation, and the symbol [ denotes the union in the set theory. Likewise, the remaining three sub-equations in Equation 2 have exactly the same definition but refer to 'crotonylation', 'methylation' and 'succinylation', respectively. As we can see from Equations 1 and 2, with different n values, the benchmark datasets would contain length-different samples. However, many preliminary tests had indicated that the best outcomes were obtained when n  13; i.e. the sample's length was 2n  1  27. Accordingly, hereafter we are focused on the 27-tuple peptide samples only. Thus, Equations 1 and 2 can be reduced towhere the numerical argument 1, 2, 3 or 4 denotes 'acetylation', 'crotonylation', 'methylation' or 'succinylation', respectively. The numbers of samples in the benchmark datasets are outlined in, and their detailed sequences and positions in the proteins are given in Supplementary Material.
Incorporate sequence-coupled effects into general pseudo amino acid compositionWith the avalanche of biological sequence generated in the postgenomic age, one of the most important problems in computational biology is how to formulate a biological sequence with a discrete model or a vector, yet still considerably keep its sequence pattern or essential feature. This is because all the existing machine-learning algorithms can only handle vector but not sequence samples, as elaborated in Chou (2015a). To address this problem, the pseudo-amino acid composition () or PseAAC was proposed. Ever since the concept of pseudo-amino acid composition or Chou's PseAAC (; Lin and Lapointe, 2013) was proposed, it has rapidly penetrated into nearly all the areas of computational proteomics (). Because it has been widely and increasingly used, recently three powerful open access soft-wares, called 'PseAAC-Builder' (), 'propy' () and 'PseAAC-General' (), were established: the former two are for generating various modes of Chou's special PseAAC; while the third one for those of Chou's general PseAAC (), including not only all the special modes of feature vectors for proteins but also the higher level feature vectors such as 'Functional Domain' mode (Equations 9 and 10 of), 'Gene Ontology' mode (Equations 11 and 12 of) and 'Sequential Evolution' or 'PSSM' mode (Equations 13 and 14 of). Inspired by the successes of using PseAAC to deal with protein/peptide sequences, three web-servers () were developed for generating various feature vectors for DNA/RNA sequences as well. Particularly, recently, a powerful web-server called Pse-in-One () has been developed that can be used to generate any desired feature vectors for protein/peptide and DNA/RNA sequences according to the need of users' studies. According to the general PseAAC (), the peptide sequence of Equation 3 can be formulated aswhereIn Equation 6, p  13 R 13 jR 12  is the conditional probability of amino acid R 13 occurring at the left first position (Equation 3) given that its closest right neighbor is R 12 ; p  12 R 12 jR 11  is the conditional probability of amino acid R 12 occurring at the left second position given that its closest right neighbor is R 11 , and so forth. Note that in Equation 6, only p  1 R 1  and p  1 R 1  are of non-conditional probability because the right neighbor of R 1 and the left neighbor of R 1 are always K (Lys). All these probability values can be easily derived from the positive training subsets taken from Supplementary Material, as done in. Likewise, the components in Equation 7 are the same as those in Equation 6 except for that they are derived from the negative training subsets taken from the same supporting information.
Ensemble random forest algorithmThe random forest (RF) algorithm is a powerful algorithm and has been widely used in many areas of computational biology (). The algorithm of RF is based on the ensemble of a large number of decision trees, where each tree gives a classification and the forest chooses the final classification via the most votes (over all the trees in the forest). In the most commonly used type of RFs, split selection is performed based on the so-called decrease of Gini impurity. In this study, the RF is used to rank the features using Gini importance that is implemented with the machine learning platform scikit-learn. The detailed procedures of RF and its formulation have been very clearly described in (), and hence there is no need to repeat here. In this study, however, the benchmark datasets are extremely unbalanced. As we can see from, for the case of acetylation, the number of positive samples is much larger than that of the negative ones. But for the case of crotonylation, methylation or succinylation, the situation is just opposite: the number of positive samples is much less than that of the negative ones. A predictor trained by a very skewing dataset would inevitably yield many bias errors. To deal with this problem, we resort to the asymmetric bootstrap approach, as described below. From the four highly unbalanced benchmark datasets (Equation 2), we can construct a set of 4  m balanced datasets by doing m bagging cycles of randomly picking 2403 positive acetylation samples from S  1  , 115 negative crotonylation samples from S  2  ; 127 negative methylation samples from S  3  ; and 1169 negativewhere m  1; 2;    ; 5; S Boot m   1   contains 2403 positive samples for acetylation, exactly the same as the number of samples in its negative subset S  1   (see column 2 and row 4 of); S  Bootm 2 contains 115 positive samples for crotonylation, exactly the same as the number of samples in S  2  ; and so forth. Now, based on the 4  5  20 balanced benchmark datasets in Equation 8, we can establish four ensemble predictors by the fusion approach (;), as formulated by RF E i    RF 1 i  8RF 2 i  8    8RF 5 i    8 5 m1 RF m i  ;where i  1; 2; 3; 4; RF E 1, RF E 2, RF E 3 and RF E 4 are the ensemble predictors for identifying the acetylation, crotonylation, methylation and succinylation sites, respectively. The symbol 8 denotes the fusing operator (), and RF m i   is an individual RF predictor based on the benchmark dataset S Balance Boot m   i   in Equation 8 with 150 trees for each of the individual predictors. For more detailed about using the fusion approach to form an ensemble predictor, see a comprehensive review (), where a crystal clear description with a set of elegant equations are given and hence there is no need to repeat here. Finally, the results obtained by the four ensemble classifiers, RF E 1, RF E 2), RF E 3) and RF E 4  ; will be subjected to a combination to display (1) whether the query sample can be of K-PTM, and(2) what K-PTM type/types it can be of. The predictor obtained thru the above procedures is called iPTM-mLys, where 'i' stands for 'identify', 'PTM' for 'post-translational modification' and 'mLys' for 'multiple lysine sites'. To provide an intuitive picture, a flowchart is given into illustrate how the 4  5  20 individual RF predictors are fused into four ensemble classifiers, and how their outputs are combined to yield the final results.
Results and discussionAs mentioned in Section 1, among the five guidelines in developing a useful predictor, one of them is how to objectively evaluate its anticipated success rates (). To fulfil this, the following two things need to consider: one is what metrics should be adopted to measure the predictor's quality; the other is what kind of test method should be used to derive the metrics rates. Below, let us address such two problems
Metrics for measuring the prediction quality of multi-label systemsAs shown in Supplementary Material and, we have a total of 6394 samples, of which 3991 are labeled with 'acetylation', 115 with 'crotonylation', 127 with 'methylation', 1169 with 'succinylation' and 1,750 with 'non-K-PTM'. Note that in the above samples, some have two or more labels. Therefore, in the current study, we are dealing with a multi-label system () and hence the conventional metrics () defined for single-label systems are no longer valid. According to Chou's formulation (), the metrics for a multi-label system can be formulated aswhere N is the total number of the samples concerned, M the total number of labels in the system, [ and \ the symbols are for the. A flowchart to show how the iPTM-mLys predictor works. See the text for further explanation 'union' and 'intersection' in the set theory, jj jj means the operator acting on the set therein to count the number of its elements, L k denotes the subset that contains all the labels experiment-observed for the k-th sample, L  k represents the subset that contains all the labels predicted for the kth sample, and1; if all the labels in L  k are identical with those in L k 0; otherwise (The above approach had been effectively used to study various multi-label systems, such as those in which a protein may exist in two or more different subcellular locations (), or a membrane protein may have two or more different types (), or an antimicrobial peptide may have two or more different types ().
Cross-validationWith a set of multi-label metrics clearly defined, the next step is what kind of validation method should be used to derive the metrics values. The following three cross-validation methods are often used in literature: (i) independent dataset test, (ii) subsampling (or K-fold cross-validation) test and (iii) jackknife test (). Of these three, however, the jackknife test is deemed the least arbitrary that can always yield a unique outcome for a given benchmark dataset as elucidated in (). Accordingly, the jackknife test has been widely recognized and increasingly used by investigators to examine the quality of various predictors (). In this study, however, to reduce the computational time, we adopted the 5-fold cross-validation method, as done by many investigators with SVM as the prediction engine. The 5-fold cross-validation results obtained by the iPTM-mLys on the benchmark dataset of Supplementary Material are given by Aiming  69:78% Coverage  74:54% Accuracy  68:37% Absolute-True  60:92% Absolute-False  13:40%indicating: (i) the rate of ''Aiming'' or ''Precision'' () is 69.78%, the average ratio of the predicted labels that hit the target of the real labels; (ii) the rate of ''Coverage'' or ''Recall'' () is 74.54%, the average ratio of the real labels that are covered by the hits of prediction; (iii) the rate of ''Accuracy'' is 68.37%, the average ratio of the correctly predicted labels over the total labels including correctly and incorrectly predicted ones as well as those real labels but are missed out during the prediction; (iv) the rate of ''Absolute-True'' is 60.92%, the average ratio of the perfectly correct hits over the total prediction events and (v) the rate of ''Absolute-False'' or ') is 13.40%, the average ratio of the completely wrong hits over the total prediction events. Since iPTM-mLys is the first multi-label predictor ever developed for identifying multiple PTM sites in proteins, it is hard to demonstrate its power by comparison with its counterparts for exactly the same purpose. Nevertheless, we can show its power by a comparison with some multi-label predictors in other areas via the following analysis and discussion. In Equations 10 and 12, the first four metrics are completely opposite to the last one. For the former, the higher the rate is, the better the multi-label predictor's performance will be; for the latter, the lower the rate is, the better its performance will be. Among the five metrics in Equation 10, the most strict and harsh one is the 'Absolute-True'. To our best knowledge, very few multilabel predictors in biology could reach over 50% for the absolute true rate. For example, iLoc-Animal, a very powerful multi-label classifier for predicting subcellular localization of animal proteins (), its reported absolute-true rate was 45.62%. Also, for iAMP-2L, a powerful two-level multi-label classifier for identifying antimicrobial peptides and their functional types (), its reported absolute-true rate was 43.05%. None of them could reach even 50%; in contrast, the absolute-true rate achieved by iPTM-mLys can reach over 60%, as shown in Equation 12. Also, among the same five metrics, the most important is the 'Accuracy'. According to the reports for iLoc-Animal () and iAMP-2L (), their accuracy rates were 62.88% and 66.87%, respectively. In contrast, the accuracy rate achieved by iPTM-mLys is 68.37%.
Web-server and user guideTo enhance the value of its practical applications, the web-server for iPTM-mLys has been established. Furthermore, to maximize the convenience of most experimental scientists, a step-by-step guide is provided below. Step 1. Opening the web-server at http://www.jci-bioinfo.cn/ iPTM-mLys, you will see the top page of iPTM-mLys on your computer screen, as shown in. Click on the Read Me button to see a brief introduction about the predictor. Step 2. Either type or copy/paste the query protein sequences into the input box at the center of. The input sequence should be in the FASTA format. For the examples of sequences in FASTA format, click the Example button right above the input box.
iPTM-mLys: identifying multiple lysine PTM sites and their different types| Read Me | Supporting Information | Citation | Enter the sequences of query proteins in FASTA format (Example), and the number of proteins is limited at 5 or less for each submission.
Submit ClearEnter your e-mail address and upload the batch input file (Batc h-examp le); The predicted result will be sent to you by e-mail once completed; it usually takes no more than one minute for each query protein sequence.. A semi-screenshot to show the top-page of the iPTM-mLys web-server at http://www.jci-bioinfo.cn/iPTM-mLys
iPTM-mLysStep 3. Click on the Submit button to see the predicted result. For instance, if you use the two query protein sequences as an input, after 30 seconds or so since clicking the submit button, you'll see the following results popped on the screen. (1) Sequence-1 (Q16778) contains 20 K residues, of which the residues at the sequence position sites '6', '12', '16', '17', '21' and '24' can be of both 'Acetylation' and 'Crotonylation'; residue '58' can be of both 'Acetylation' and 'Methylation'; residues '35' and '47' can be of both 'Crotonylation' and 'can be of only 'Acetylation'; while residues '28', '29' and '31' can be none of the four PTM. (2) Sequence-2 contains invalid character(s): 'Check your input!' For facilitating comparison, both the predicted and experimental results for protein Q16778 are listed in. Substituting the consistent and inconsistent scores between the prediction and observation into Equation 10, we have the rates of aiming 67.50%, coverage 65.00%, accuracy 62.50%, absolute-true 55.00% and absolute-false 15.00%, quite similar to the rates obtained by the cross-validation tests as given in Equation 12. Step 4. As shown on the lower panel of, you may also choose the batch prediction by entering your e-mail address and your desired batch input file (in FASTA format of course) via the 'Browse' button. To see the sample of batch input file, click on the button Batch-example. Step 5. Click on the Citation button to find the relevant papers that document the detailed development and algorithm of iPTM-mLys. Step 6. Click the Supporting Information button to download the benchmark dataset used to train and test the current predictor. Note: To obtain the predicted result with the anticipated success rate, the entire sequence of the query protein rather than its fragment should be used as an input.
ConclusionThere are many existing computational predictors for identifying the PTM sites in proteins; all of them are for the single-label PTM systems but not for the multi-label ones. The iPTM-mLys presented in this paper represents the first web-server ever established that can be use to deal with both single-and multi-label PTM systems. It has not escaped our notice that, similar to the current multi-label KPTM, the other PTM systems such as C-PTM, R-PTM and S-PTM do also have their corresponding multi-label PTM sites at Cys, Arg and Ser residues, respectively. Likewise, the approach and formulations proposed in this article can be used to analyze them as well. To maximize the users' convenience, a step-by-step guide has been provided, by which users can easily get their desired results without the need to go through the complicated mathematical equations. Although the current iPTM-mLys predictor is limited to analyze the multi-label systems of four different K-PTM types, with more experimental data available in future, we will update it with a new version to cover more types as well, such as biotinylation, butyrylation, propionylation and ubiquitination. By that time, an announcement will be given in the website http://www.jci-bioinfo. cn/iPTM-mLys.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
W.-R.Qiu et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Ace, acetylation; Cro, crotonylation; Met, methylation; Suc, succinylation.
