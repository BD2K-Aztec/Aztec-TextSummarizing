Coordinated Gene Activity in Pattern Sets (CoGAPS) provides an integrated package for isolating gene expression driven by a biological process, enhancing inference of biological processes from transcriptomic data. CoGAPS improves on other enrichment measurement methods by combining a Markov chain Monte Carlo (MCMC) matrix factorization algorithm (GAPS) with a threshold-independent statistic inferring activity on gene sets. The software is provided as open source C++ code built on top of JAGS software with an R interface. Availability: The R package CoGAPS and the C++ package GAPS-JAGS are provided open source under the GNU Lesser Public License (GLPL) with a users manual containing installation and operating instructions. CoGAPS is available through Bioconductor and depends on the rjags package available through CRAN to interface CoGAPS with GAPS-JAGS.
INTRODUCTIONMany biological processes (BPs) and phenotypes result from coordinated activity among sets of genes, so that inference from transcriptional measurements using gene sets is more powerful for inferring BPs than inference based on isolated genes. However, gene reuse in BPs is common, so genes are typically multiply regulated. Thus, inference on sets of genes should ideally begin by identifying the portion of each gene's behavior related to its use in a BP. We have developed Coordinated Gene Activity in Pattern Sets (CoGAPS), which infers biological activity by identifying overlapping, coregulated sets of genes and applying Z-score based statistics. CoGAPS can presently be used to isolate transcription factor (TF) or BP activity in datasets of thousands of genes and tens to thousands of samples. * To whom correspondence should be addressed. Several methods exist to infer activity of gene sets (GSs). Hypergeometric tests have been used to determine if genes in sets are differentially expressed across samples (). These statistics have been extended to rank membership (e.g.). However, these methods do not account for multiple regulation of genes. Matrix factorization techniques have been applied to infer overlapping patterns of coregulation in gene expression, including Non-negative Matrix Factorization (NMF;), Bayesian Decomposition (BD;) and Bayesian Factor Regression Modeling (BFRM;). Comparison of matrix factorization techniques on Saccharomyces cerevisiae transcriptomic data suggested that MCMC techniques more accurately find patterns that relate to BPs and phenotypes (), inspiring our use of the GAPS MCMC matrix factorization in CoGAPS. Moreover, CoGAPS infers activity in specific gene sets related to the inferred BPs by applying the Z-score based statistic fromto patterns identified with GAPS. CoGAPS is based on JAGS () and includes an R interface. CoGAPS has been applied in the DESIDE algorithm to identify transcriptional responses to signaling through estimation of the activity of TFs (). CoGAPS inferred expected decreased activity in the KIT pathway and unexpected activity in p53 and STAT3 pathways from microarrays generated from treated gastrointestinal stromal tumor cell lines and tumor sample data. We provide the data with CoGAPS and an R/Sweave document for this analysis in the Supplementary Material.
METHODSCoGAPS takes as input preprocessed microarray measurements in a data matrix D of N genes and M conditions, an uncertainty matrix  , whose ij entry is the standard deviation of the i-th gene and j-th sample of D, and a list of gene sets G k , where k indexes the sets. First, CoGAPS implements GAPS to infer common underlying patterns in gene expression across columns of D by factorization into a pattern matrix (P) and a corresponding amplitude matrix (A). GAPS seeks P and A matrices whose product is from the distribution for D, which is assumed normal. That is,where ij is independent, normal noise with mean zero and variance  2 ij. Estimates must be provided for  , which we have typically obtained from). The rows of P form a set of non-orthogonal basis vectors that describe the patterns of coexpression behavior across the samples in the columns of D. The rows of A quantify the amount of the behavior of a gene that is explained by each of the patterns (the rows of P). The number of rows in P sets the number of patterns that GAPS will infer. GAPS presently constrains the entries in A and P to be non-negative. Even so, the A and P matrices are not mathematically uniquely determined independent of prior information. As noted in the Section 1, MCMC techniques recover BPs better than other factorization techniques. The Kossenkov and Ochs (2009) study found that inference of sparse matrices with atomic priors for MCMC inference (), such as in BD, has a particular advantage in retaining minimally varying patterns across samples, which define many BPs. These atomic priors also naturally enforce non-negativity and sparsity in the corresponding elements of A and P. Therefore, GAPS is implemented in GAPS-JAGS by incorporating the model in Equation (1) with an atomic prior in JAGS. When running GAPS-JAGS, the user specifies a hyperparameter for the expected number of atoms ( A and  P for matrices A and P, respectively) and a parameter for the number of patterns (n p ) that provides the dimensionality required to reproduce D. The  parameters represent the sparsity of A and P and have default values of 1%. While the algorithm is insensitive to small changes in these parameters, order of magnitude changes will significantly alter the estimated A and P matrices. At 1%, GAPS was found to retain the sparsity of our previous successful MCMC studies, and we recommend this value for most applications. The appropriate number of patterns is data dependent and typically unknown. Dimensionality estimation prior to MCMC sampling can be obtained from new techniques () or by trying multiple matrix factorizations of different n p (). While there is no guarantee that the A and P matrices are uniquely identifiable, we have found in practice that a unique solution within uncertainty estimates from the sampling is typical for MCMC microarray analysis. However, we recommend multiple MCMC simulations to reduce the probability of finding a local maximum in the posterior distribution. In order to infer activity of a BP, CoGAPS estimates the probability that genes in a set are overrepresented in a pattern from a statistic based on the average Z-score for all A sp for s  GS (). This score can be used to rank sets and a frequentist interpretation is provided through permutation of the gene labels on a pattern-by-pattern basis.
IMPLEMENTATIONThe software is run through the CoGAPS R package. The central R function for the CoGAPS algorithm inputs files containing D and  , as well as sparsity parameters  A and  P , the number of patterns, and gene sets in a format specified in the Users Manual. This function also allows users to specify a folder and prefix for output files summarizing the statistics computed by CoGAPS. The Users Manual also describes additional runtime options. CoGAPS first factors the matrix of microarray data through a C++ package called GAPS-JAGS () as described in Section 2. This package is an extension of JAGS (version 1.0.3) that includes a module for GAPS, and this is required by the CoGAPS
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
R package. With N M and typical data size of thousands of genes by hundreds of samples, the computational cost is O N logN and memory requirements are moderate (see Supplemental Material for specifics). The MCMC chain for A and P are output as temporary files, and the summarized estimates of the statistics for A and P are retained in output files. Optionally, CoGAPS also plots the identified patterns and creates a heatmap for the corresponding A intensities. CoGAPS computes Z-scores and P-values for each GS in each pattern. An 'activity' is also calculated that rescales the p-value estimates from 1 to +1, suitable for pictorial representation of TF activity. These statistics are output into three separate files. We have developed open-source C++ software, GAPS-JAGS, with an R interface, CoGAPS, for inferring GS enrichment from transcriptomic data. When applying GSs defined by TFs, the DESIDE algorithm used this approach to infer the changes in cell signaling during treatment of gastrointestinal tumors. We note that any high-throughput biological data representable as a quantitative matrix of biomolecule measurements across samples is amenable to this approach, if these biomolecules can be linked in GSs. Funding: National Library of Medicine (Grant LM009382); National Science Foundation (Grant 0342111). Conflicts of Interest: none declared.
