Motivation: The ability to engineer control systems of gene expression is instrumental for synthetic biology. Thus, bioinformatic methods that assist such engineering are appealing because they can guide the sequence design and prevent costly experimental screening. In particular, RNA is an ideal substrate to de novo design regulators of protein expression by following sequence-to-function models. Results: We have implemented a novel algorithm, RiboMaker, aimed at the computational, automated design of bacterial riboregulation. RiboMaker reads the sequence and structure specifications, which codify for a gene regulatory behaviour, and optimizes the sequences of a small regulatory RNA and a 5 0-untranslated region for an efficient intermolecular interaction. To this end, it implements an evolutionary design strategy, where random mutations are selected according to a physicochemical model based on free energies. The resulting sequences can then be tested experimentally, providing a new tool for synthetic biology, and also for investigating the riboregulation principles in natural systems. Availability and implementation: Web server is available at http:// ribomaker.jaramillolab.org/. Source code, instructions and examples are freely available for download at http://sourceforge.net/projects/ ribomaker/.
INTRODUCTIONRegulatory RNAs have been identified at the core of many cellular processes in both prokaryotes and eukaryotes (;). Among all possible mechanisms, here we focus on regulatory RNAs that interact with a given mRNA to control protein expression. By applying engineering principles, we can design synthetic regulatory RNAs to create genetic modules from which to program novel functions in the cell (). In bacteria, this can be achieved by means of a small RNA (sRNA), whose length varies from tens to hundreds nucleotides and which is highly structured. The sRNA interacts with the 5 0-untranslated region (5 0-UTR) of a given mRNA, as this region controls the ability to interact with the ribosome (). This control of gene expression only relies on structural changes in the 5 0-UTR, without any RNA processing, which makes it independent of any additional cellular machinery. This riboregulatory mechanism allows harnessing physicochemical models to predict RNA interaction and function. We take advantage of RNA folding prediction methods (), as well as methods for predicting RNA interactions (), to perform the de novo design of sRNAs and 5 0-UTRs with a base-pair energy model. Then, the designed RNA systems can be exploited, for instance, to control metabolic pathways in bioproduction applications (). In this work, we present an evolutionary method to design nucleic acid sequences implementing riboregulatory modules. For that, a multi-objective, combinatorial optimization algorithm is implemented, where the free energies and secondary structures of the system are considered. Importantly, fully synthetic sequences obtained by computational design have been already verified for functionality in vitro and in bacterial cells (). In contrast to our previous method (), the present is not restricted to a neutral evolution within the inverse folding of predefined RNA secondary structures (). Therefore, the full specification of the intramolecular structures of the species is not essential. This dramatically speeds up the optimization.
APPLICATIONRiboMaker is devised for the computational design of conformation-based riboregulation, and in particular of bacterial riboregulation. It designs the riboregulator (sRNA) and the targeted 5 0-UTR of a given mRNA (). Moreover, sRNAs can be designed to activate or repress protein expression. It can also design only one element (5 0-UTR or sRNA) provided the other is fixed. The resulting sequences can then be tested experimentally in a living cell, provided promoter sequences. RiboMaker could be expanded to account for the computational design of further riboregulatory mechanisms (). *To whom correspondence should be addressed.
METHOD
Model of bacterial riboregulationOur model accounts for several energetic and structural terms. The objective function (F obj ), to be minimized, reads F obj ="G 5 0 UTR:sRNA +"G seed 5 0 UTR:sRNA  "G 5 0 UTR:5 0 UTR  "G seed 5 0 UTR:5 0 UTR  "G sRNA:sRNA  "G seed sRNA:sRNA +"G structure 5 0 UTR +"G structure sRNA +"G structure 5 0 UTR:sRNA +G sRNA : 1 "G 5 0 UTR:sRNA is the free energy release after complete hybridization between the 5 0-UTR and the sRNA. "G 5 0 UTR:5 0 UTR and "G sRNA:sRNA are the same but for homodimer formation. "G seed 5 0 UTR:sRNA is the free energy release after seed pairing, here approached by the length of the seed region (). "G seed 5 0 UTR:5 0 UTR and "G seed sRNA:sRNA are the same but, as before, for homodimer formation. "G structure 5 0 UTR , "G structure sRNA and "G structure 5 0 UTR:sRNA are the works required to fold the 5 0-UTR, the sRNA and the complex 5 0-UTR:sRNA according to the structure specifications. For that, we calculate the Hamming distance between the actual and target structures, rescaling it in terms of free energy with an empirical parameter (). Finally, G sRNA is the free energy of the sRNA. In Equation (1), positive terms correspond to objectives for a positive design strategy, whereas negatives ones correspond to objectives for a negative design (). We give the same importance to accessibility as to hybridization (), and, for simplicity, we do not consider weighting parameters to construct F obj. Accordingly, we will maximize the interaction between the 5 0-UTR and the sRNA, while minimizing the two interactions to form homodimers (). This is important to shift the equilibrium towards the appropriate complex. In addition, we will minimize the structural distance between the actual and target systems (for the 5 0-UTR and complex 5 0-UTR:sRNA) to reach the intended regulatory behaviour.
Sequence and structure specificationsRiboMaker starts from random sequences or can read initial ones in case the user wants to feed it. As sequence specifications, the user only needs to detail the Shine-Dalgarno box and the start codon for the 5 0-UTR, which will be kept fixed during the optimization. For the sRNA, the user can specify the sequence of the transcription terminator, although it is not mandatory and the sRNA can be designed without. In addition, as structure specifications, RiboMaker only requires the specification of the structure of the Shine-Dalgarno box (and neighbouring nucleotides) in both intra-and intermolecular folding states. To compute "G structure 5 0 UTR (intramolecular specification), the partition function is used to avoid high ensemble defects (). RiboMaker does not require the specification of the full intramolecular structures of all single species.
Optimization schemeWe used Monte Carlo Simulated Annealing (MCSA) as an optimization scheme (). Initial sequences are iteratively mutated, subjected to sequence constraints, towards a solution that satisfies the specified behaviour. Single-point mutations in one strand are applied every iteration. After that, F obj is evaluated to decide the acceptance or rejection of that mutation, following a Metropolis criterion. The MCSA temperature is continuously adjusted during the process following an exponential cooling scheme. Accordingly, the initial temperature is usually chosen to be high, hence moving during evolution from random to adaptive walk. To avoid undesired sequences, a quality check operator is applied, for instance, to avoid repeats.
Fitness landscape and convergenceThe vast search space for RNA design can be explored by means of combinatorial optimization methods (). For the problem of riboregulation,shows the energy landscape, together with an optimized trajectory, in terms of three significant components of F obj , which account for interaction and structural specifications of regulation. There, each point represents a different sequence, and different solutions can be reached from the same specifications. The method can reach a good solution in few minutes (in a standard computer with a 2 GHz processor). Because all structural specifications, intra-and intermolecular, are introduced into the objection function (following the penalty method), all sequences generated by mutations are evaluated, which allows preventing traps and reaching many different adaptive paths (10 3 iterations can be enough to obtain good designs for the riboregulatory models shown in).
Designability and limitationsOf relevance, F obj has been shown to correlate with riboregulatory activity in natural and synthetic systems (). To increase riboregulatory activity, the user can also specify certain recognition element of the RNA chaperon Hfq as a part of thedesigned sRNA (). It is expected that by starting from random sequences, the designed ones be sufficiently dissimilar to others to make cross-talk unlikely (), and, in turn, to be able to regulate chromosomal genes too (). In addition, orthogonal systems could be obtained afterwards by introducing few key mutations (). The main limitation of our approach, which is otherwise general for RNA design, is the use of secondary structure to model RNA, which prevents obtaining designs with pseudoknot interactions or even noncanonical base pairing (). This is not critical, as it only has the effect of restricting the space of available sequences, already too large to explore it exhaustively. Moreover, the control over conformations, although simple, is useful to obtain functional designs in bacteria that regulate ribosome binding (), but it would require new regulatory models to get designs for mammals or plants.
IMPLEMENTATION
Source distributionThe program is implemented in C++, and it has been compiled and executed under Linux and Mac OS X environments. The Vienna RNA package v1.8 () is used as a library to calculate RNA secondary structures and free energies. The program reads the design specifications from a text file and writes the designed sequences and scoring terms into another text file. The program can run distributed in high-performance computing clusters.
Web serverThe site was developed in HyperText Markup Language and PHP HyperText Preprocessor. For creating the web structure (header, body and footer), we used Cascading Style Sheets. To initialize the values and check that all fields are filled, we created a JavaScript function. The user needs to fill the fields for sequence and structure specifications. Session variables are employed to hold all information (sequences and structures for all species) during a single-user session. Then, our C+ + program is executed for optimization of sequences. The designed sequences, together with the corresponding structures and free energies, are shown on the screen ().
ACKNOWLEDGEMENTWe thank Ricardo Marco for the development of the website and Joan H erisson for his support with the abSYNTH web platform.
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RiboMaker at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
G.Rodrigo and A.Jaramillo at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
