Motivation: Microsatellites are among the most useful genetic markers in population biology. High-throughput sequencing of microsatel-lite-enriched libraries dramatically expedites the traditional process of screening recombinant libraries for microsatellite markers. However, sorting through millions of reads to distill high-quality polymorphic markers requires special algorithms tailored to tolerate sequencing errors in locus reconstruction, distinguish paralogous loci, rarify raw reads originating from the same amplicon and sort out various artificial fragments resulting from recombination or concatenation of auxiliary adapters. Existing programs warrant improvement. Results: We describe a microsatellite prediction framework named HighSSR for microsatellite genotyping based on high-throughput sequencing. We demonstrate the utility of HighSSR in comparison to Roche gsAssembler on two Roche 454 GS FLX runs. The majority of the HighSSR-assembled loci were reliably mapped against model organism reference genomes. HighSSR demultiplexes pooled libraries, assesses locus polymorphism and implements Primer3 for the design of PCR primers flanking polymorphic microsatellite loci. As sequencing costs drop and permit the analysis of all project samples on next-generation platforms, this framework can also be used for direct simple sequence repeats genotyping.
INTRODUCTIONMicrosatellites or simple sequence repeats (SSRs) are tandemly repeated DNA motifs 26 bp in length that typically harbor high levels of sequence polymorphism. This level of variability has led to widespread use of SSRs in many areas of molecular biology, including applications in forensics and paternity testing (, population genetics and conservation/management of biological resources (). Until recently, the major obstacle to SSR use was slow and costly de novo isolation of SSRs for each taxon being investigated. SSR marker development has typically involved fractionation of the genome, enrichment for SSR-containing fragments, construction of a clone library from the enriched fraction, Sanger sequencing of clones and informatics analysis to identify SSR-containing fragments and PCR primer sites (). The procedure continues with the evaluation of amplification efficiency and polymorphism of each locus. Thus, it entails considerable time and investment to develop the large numbers of SSRs necessary to study patterns of diversification between populations () or to construct genetic maps (). Next-generation sequencing technologies are revolutionizing the process of SSR discovery by reducing cost and time to a fraction of what was previously needed (), but the millions of raw sequencing reads they produce necessitates in silico automation of SSR prediction and locus classification (). In this article, we present the HighSSR framework for SSR discovery and locus development from 454-generated raw data. HighSSR facilitates the recognition of SSR motifs, the parsing of MID tagged sequences for identification of multiplexed samples, the identification of unique SSR loci within a sample and the development of PCR primers for the recovered loci. Unlike other methods, HighSSR first predicts SSRs for all input sequences and later uses the SSRs as pivots to assemble loci. In other words, it begins by grouping reads based on their SSR motif and proceeds toward locus identification through comparisons of the more complex flanking regions. The approach greatly reduces computational time by eliminating the need for all-against-all alignments, as implemented in QDD framework (), and therefore permits SSR locus identification and development from millions of reads simultaneously. It also takes advantage of a PostgreSQL database for efficient data management throughout the process. In this article, we evaluate HighSSR using multiplexed SSR-enriched sequences collected on the Roche 454 GS-FLX platform. First (hereafter the 'first run'), we examine two siblings of a non-model butterfly of conservation concern (Euphydryas anicia cloudcrofti) because previously reported Lepidoptera SSR primers (*To whom correspondence should be addressed. failed for their genotyping. Next (hereafter the 'second run'), we evaluate the performance of HighSSR in a multiplexed experiment of 60 species including mosquito, cress plant and chestnut blight fungus (Aedes aegypti, Arabidopsis thaliana and Cryphonectria parasitica, respectively) for which there are published genomes and also nine populations of Euphydryas butterfly without reference genomes.
SYSTEM AND METHODS
OverviewThe work flow associated with HighSSR analysis using data derived from a multiplex sequencing run proceeds as follows:(1) Identify microsatellite containing reads using Tandem Repeats Finder (TRF) (http://tandem.bu.edu/trf/trf .advanced.submit.html;).(2) Deposit raw reads, microsatellite predictions from Step 1 and reference genomes (optional) in a PostgreSQL database.(3) Assign SSRs to a canonical consensus.(4) Associate MID tags to respective samples using a hidden Markov model (HMM) structure.(5) Group reads into 'crude clusters' based on shared canonical consensuses and similarity in flanking regions for each organism. These are first approximations of loci. The crude clusters are stored in the database.(6) Refine crude clusters using a multiple alignment guide tree generated by MUSCLE (Edgar, 2004a, b) with the distance threshold between branches preset to sort potential paralogs into separate loci that are stored in the database.(7) Prioritize refined loci on the basis of the number of reads from which they are constructed, the length of flanking regions available for primer design and decreasing size of repeat motifs.(8) If multiple accessions of a taxon are included, select loci for potential polymorphism across accessions.(9) Design amplification primers for each locus using Primer3 ().
SSR prediction and normalizationSSRs are identified and scored in raw sequencing reads with TRF (), which relies on a probabilistic model. Further analysis requires that SSRs are assigned to their canonical consensuses so that microsatellites of the same type are processed unambiguously (). All predicted SSRs and their assignments to the canonical consensuses are stored in a PostgreSQL database.
Demultiplexing reads with a universal amplification primerMultiplex identifiers (MIDs) are commonly used to distinguish sequences from different DNA samples pooled on the same plate region. HighSSR implements a program based on HMM to recognize the MIDs along with a universal amplification primer that was ligated to MseI restricted gDNA fragments. The remainder of the MseI recognition site provides additional evidence for target sequence localization. The structure of the adapter and target DNA sequence is shown in. The program establishes HMM structure () and identifies sequence fragments by reconstructing the optimal threading of the sequence with the Viterbi algorithm (). Decoded MID fragments associate target sequences to samples. We tested the false-positive rate of demultiplexing with the sequences from our second 454 run and unused MID sequences described in Roche TCB No. 005-2009 technical bulletin (). Levenshtein edit distances () are recorded for each MID and adapter sequence. Constraining edit distance to be less than or equal to one significantly improves MID recognition fidelity and lowers the number of false positives (). By restricting the edit distance between HMM-recognized MIDs and the target MIDs, only those sequences that can be assigned to their original sample with high confidence are retained, because mistakes in MIDs normally indicate poor overall quality of a read ().
Crude clustering of reads and locus refinementSequences with the same SSR canonical consensus and the same flanking sequences are grouped into 'crude clusters' by the following process. SSRs originating from the same sample are first binned to groups that share the same canonical consensus. Each round of crude clustering starts with a seed SSR with both flanks ideally 50 nt in length and 30 nt at a minimum. Candidate sequences are added to the cluster one by one based on comparison with the seed sequence. Flanking sequences of the seed SSR are compared in a 7-nt sliding window to each candidate added to the group. The threshold should be set to least 30  7  23 for the number of oligonucleotides matching on a flank of a seed SSR and a crude cluster candidate SSR, following an observation that one substitution would result in 7 oligo mismatches. Clustering in each group continues iteratively until the group is exhausted, and the groups are processed sequentially, starting with the largest to free memory for further processing. Information on newly created crude clusters and participating SSRs is deposited to the database. Clustered SSRs do not participate in the subsequent clustering rounds. Crude clusters are aligned with MUSCLE (Edgar, 2004 a, b) to identify paralogs. MUSCLE is chosen for its accuracy and speed (). A guide tree reported by MUSCLE is used to determine whether to merge loci, beginning with the most closely associated sequences located at the top of the tree and working down to the root (). Two metrics of dissimilarity are used to compare the consensus sequences depending on complexity of a region (). In areas of high complexity, both indels and substitutions contribute to the distance between the consensus sequences. In low complexity regions (SSRs), indels are not included in the distance calculation. To estimate similarity between loci HighSSR generates all possible 12 nt oligos from the high complexity flanks and connects them by edges in a graph if the number of oligos shared between the loci (nodes) is more than 4. It builds a histogram representing the number of times an oligo is detected in the locus-flanking regions and approximates this distribution by a Mixture of Gaussians (MOG). A 10-component MOG is fit to the histogram using an expectation maximization algorithm (). The program eliminates from further analysis all the oligos that are classified by maximum a posteriori to a Gaussian component with the maximum mean value. This strategy sorts out inflated homology scores associated with oligos that are ubiquitous among the target sequences (such as fragments of mobile elements) and also oligos that are parts of unfiltered auxiliary sequencing adapters. To deal with the unfiltered auxiliary adapters and recombinant DNA fragments that(b)normally stick out of the multiple sequence alignments resulting from restriction digestion (), we trim flanking multiple alignment columns that are below minimum occupancy (non-gap symbols) at a threshold of 5%. The maximum number of sequences per locus is reported. Loci are listed in decreasing order of their SSR insert size because longer SSRs are most frequently the most polymorphic markers (). Paralogs are not reported.
Sequencing library preparationWe tested the performance of HighSSR in the analysis of two Roche 454 GS-FLX sequencer runs. SSRs were enriched as follows (modified from). Genomic DNA was digested with MseI, sequencing adaptors were ligated to the fragment ends (these include the universal amplification component plus diagnostic MID) and the fragments were amplified by PCR for 30 cycles. The resulting amplicons were enriched for SSRs by hybridization with a mixture of. We recommend enriching genomic DNA for trinucleotide (or larger) repeats because dinucleotide SSRs are subject PCR slippage () and more difficult to score. Subsequent library preparation was performed according to the Roche protocol.
Genotyping experimentsThirteen loci identified in the first run by HighSSR were chosen for genotyping on the criteria of exhibiting three to six nucleotide repeats and four or fewer alleles (to reduce potential complications in analysis from paralogs), and flanking regions with a high GC content. PCR conditions are described in Supplementary Materials. Amplicons were sequenced (ABI 3100) and aligned to closely matching alleles using MUSCLE (Edgar, 2004a, b) and consensus sequences were reconstructed from the corresponding HighSSR loci (Supplementary Materials).
RESULTSIn the first run, HighSSR reduced 41:3 million raw sequence reads to 1901 unique SSR-containing loci with a consensus size of 36 nt shared between two samples (Tables 1, 4 and 5). The number of reconstructed loci is substantially lower than the number of putative loci (37 072) because paralogous loci and loci with flanking sequences of low complexity are removed. Three of 13 primer pairs chosen for genotyping from the first run were verified in three individuals by Sanger sequencing as reported in Supplementary Materials. The number of sequences demultiplexed from the second run is reported in Supplementary Materials and. Positively identified MIDs out-number false positives by two orders of magnitude. The number of predicted false positives compares directly to that predicted by Roche demultiplexing utility sffinfo with several hundred false positives per quarter plate region.lists the number of unique loci reconstructed using HighSSR in comparison to gsAssembler for model species in the second run. For all but one sample (A. aegypti), HighSSR recovered at least five times more loci than gsAssembler (). In our experiments, we ran gsAssembler on raw reads from the same sample. Although gsAssembler can report microsatellite polymorphisms among the variants found, default assembly settings proved very rudimentary for efficient microsatellite handling. We mapped all loci recovered by HighSSR to the published genomes of A. thaliana, A. aegypti and C. parasitica () using gsMapper with default parameters to test HighSSR's ability to assemble complex loci and parse orthologs into separate loci. All reconstructed loci were also reciprocally mapped with BLASTN (using an expectation threshold of 10 50 . Between 85% and 100% of all loci recovered by HighSSR mapped to the published genomes and 100% of the mapped regions corresponded to unique non-overlapping locations in the genome.. Locus reconstruction based on the MUSCLE guide tree. Consensuses D and X are treated as paralogs if they are too distant. Arrows indicate what consensuses are combined according to a guide tree toward unified consensus representing a multiple alignment combining corresponding raw reads. Schematic representation of multiple sequence alignment used for locus reconstruction. The consensus is reconstructed by assigning a nucleotide at each position most common in the multiple alignment column corresponding to that position
DISCUSSIONPrograms predicting SSRs within genomic DNA can be subdivided into several categories according to their underlying approach. RepeatMasker (http://www.repeatmasker.org) and DUST/SIMPLE () are used to mask low-complexity fragments in biological sequences to speed up genome-wide pattern-match searches. STAR () and TROLL () look for predefined tandem motifs in the query sequence. TRF () is a popular SSR prediction and scoring tool that is based on sound probabilistic model. TRDB (), InSatdb (), TRbase (), VNTRfinder along with PolyPredictR (O') and UCSC genome browser () use TRF as an internal microsatellite prediction engine. We also adopted TRF for SSR prediction following the observation that raw sequencing reads frequently contain sequencing artifacts and polymorphic variations. HighSSR represents an improvement over existing programs for the discovery of SSRs from next-generation sequence files.HighSSR reconstructs more loci than Roche gsAssembler (Newbler).Majority of the HighSSR assembled loci map against the reference genome. All the loci mapped against the reference genomes in unique non-overlapping positions.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
A.Churbanov et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
HighSSR software at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
HighSSR software at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from MsatFinder (http://www.genomics.ceh.ac.uk/msatfinder/), SSRIT (Temnykh et al., 2001), MISA (Thiel et al., 2003 and SSR finder (http://www.maizemap.org/bioinformatics/ SSRFINDER/SSR_Finder_Download.html) search for SSRs with regular expressions, while Sputnik (http://espressosoft ware.com/pages/sputnik.jsp), ATR-hunter (Wexler et al., 2005), TandemSWAN (Boeva et al., 2006), Mreps (Kolpakov et al., 2003) and TRStalker (Pellegrini et al., 2010) search for SSRs based on repeat size. None of the these report summary statistics and locus information. Imperfect SSR Finder (http://ssr.nwisrl.ars.usda.gov/), SciRoKo (Kofler et al., 2007), IMEx (Mudunuri and Nagarajaram, 2007) and TRF (Benson, 1999) efficiently screen genome sequences for perfect and imperfect microsatellites and report such statistics. However, they do not quantify the number of alleles of each SSR locus. Additional advantages of the HighSSR framework include the storage of intermediate results in a PostgreSQL database, permitting the examination of intermediate results and arranging analysis in a distributed server/client paradigm, and the use of freely available third-party software. Our results confirm duplication of numerous SSR loci in insects (Vant Hof et al., 2007). In E. a. cloudcrofti among 1901 unique SSR-containing loci, 78 (4.1%) had three or more predicted alleles with perfectly matching flanking regions. Although we present HighSSR as a platform for characterizing SSR loci for subsequent traditional PCR amplification and sizing, this framework and others like it will ultimately be amenable to genotype large sets of individuals run exclusively on next-generation sequencing platforms. This would take the same processing steps involved in design of PCR primers for SSR genotyping, where all the statistics on the alleles detected in the designed loci would be summarized in the table. HighSSR can be applied to cluster reads made with newer platforms, such as Illumina HiSeq 2000/2500 and Ion Torrent PGM. Such improvements will permit comparisons of individuals across large numbers of loci, providing previously unheard-of resolving power.
