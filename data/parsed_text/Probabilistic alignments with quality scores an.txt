Motivation: Recent studies have revealed the importance of considering quality scores of reads generated by next-generation sequence (NGS) platforms in various downstream analyses. It is also known that probabilistic alignments based on marginal probabilities (e.g. aligned-column and/or gap probabilities) provide more accurate alignment than conventional maximum score-based alignment. There exists, however, no study about probabilistic alignment that considers quality scores explicitly, although the method is expected to be useful in SNP/indel callers and bisulfite mapping, because accurate estimation of aligned columns or gaps is important in those analyses. Results: In this study, we propose methods of probabilistic alignment that consider quality scores of (one of) the sequences as well as a usual score matrix. The method is based on posterior decoding techniques in which various marginal probabilities are computed from a probabilistic model of alignments with quality scores, and can arbitrarily trade-off sensitivity and positive predictive value (PPV) of prediction (aligned columns and gaps). The method is directly applicable to read mapping (alignment) toward accurate detection of SNPs and indels. Several computational experiments indicated that probabilistic alignments can estimate aligned columns and gaps accurately, compared with other mapping algorithms e.g. SHRiMP2, Stampy, BWA and Novoalign. The study also suggested that our approach yields favorable precision for SNP/indel calling.
INTRODUCTIONA number of recent studies have revealed the importance of considering quality scores of (short) reads [produced by nextgeneration sequencing (NGS) platforms () e.g. Illumina GA, Roche 454 FLX and ABIin various fundamental analyses on NGS data: mapping (alignment) of reads to reference genomes (; Lunter and Goodson, * To whom correspondence should be addressed. 2011;), error correction of reads (), insertion and deletion (indel) detection from mapped reads () and gene prediction from reads derived from metagenomic data (). This is because error rates of current NGS platforms are relatively high and the errors cannot be ignored in those analyses. Several recent studies also suggest that probabilistic alignment techniques estimate more accurate alignment in terms of aligned columns or gaps than conventional maximum score-based alignments. For example, -centroid alignment () is theoretically suitable for accuracy measures such as the sensitivity and positive predictive value (PPV) with respect to aligned bases () (we call it 'Aligned column accuracy', formally defined later). In -centroid alignment, the marginal probability of aligned bases is employed. On the other hand,proposed probabilistic alignments, which use the marginal probabilities of gaps as well as the marginal probabilities of aligned columns. Those probabilistic alignments are, therefore, appropriate for accuracy measures in terms of prediction of gaps (we call it 'Gap accuracy'). When quality scores are given to both (or one of) the sequences to be aligned, probabilistic alignments that consider the quality scores are useful for estimating accurate alignments. There do not exist, however, any studies about this.utilized (conventional) maximum score-based alignment, not probabilistic alignments, while considering quality scores; () employed a probabilistic (-centroid) alignment without considering quality scores.In this article, we therefore propose two probabilistic alignment methods that consider quality scores explicitly. The methods are based on posterior decoding techniques, which use marginal probabilities that incorporate all the possible alignments, with quality scores. To demonstrate the effectiveness of the proposed methods, we apply them to short read mapping (alignment) to reference genomes. Mapping short reads is one of the most fundamental information analyses of NGS data (), and a number of mapping algorithms have been proposed including Bowtie (), SHRiMP2 (), BWA (), Stampy (), novoalign, MAQ (), PerM () and others (). Those mapping tools mainly focus on accurate prediction of the genomic location of mapped reads, and in the evaluation, a mapped read is considered to be correct if it overlaps
M.Hamada et al.the true mapping (we call it 'Mapping accuracy'). This means that the detailed alignment between the mapped read and the reference genome, for example, 'Aligned column accuracy' or 'Gap accuracy', is not always correct even if the mapping is correct. It is possible that probabilistic alignment improves those accuracy measures. Moreover, in this personal genome era, the importance of accurate detection of SNPs and/or indels has been increasing (), because not only SNPs but also indels have been implicated in a number of diseases e.g.. In the 1000 genome project, a number of novel indels was reported (). There are several studies about detecting SNPs and/or indels: e.g. Dindel (), VarScan (), SAMtools () and others (). All the tools require the result of mapping of short-reads as the input. Especially, because SAMtools and VarScan directly employ the mapping results (without re-alignment), the accuracy of read alignments is important to the performance. In this article, we also demonstrate that the proposed probabilistic alignments improve the accuracy of SAMtools and VarScan.
METHODS
Incorporating quality scores into a score matrixSuppose that we have a (usual) score matrix (e.g. HOXD70/55), {S a,b } a,b{A,C,G,T} (where S a,b means a score for nucleotide a aligning with b) and p(c|b,q), a distribution on {A,C,G,T} given (b,q), where b is a nucleotide and q is its quality score. The distribution p(c|b,q) is obtained by using a model of quality scores adopted by each NGS platform. Then, the score between a nucleotide a and a nucleotide b with a quality score q (which is denoted as S a,(b,q)) is computed by the following formula:where R a,(b,q) is an expected value,and T is a scaling parameter, which is computed from the given scoring matrix {S a,b } (). The quality scores are usually given by finite integers and therefore all the values {S a,(b,q) } a,b,q can be pre-computed beforehand, which reduces the overhead of the computation of an alignment when considering quality scores, compared with the case not considering quality scores. [The score in Equation (1) is rounded to the nearest integer in our implementation.) Note that this extension of a usual score matrix with quality scores was originally proposed by, and was justified from a Bayesian viewpoint. See also Section 4.3 in the case of considering quality scores of both sequences.
Probabilistic model for alignmentsBy using the transformed score matrix {S a,(b,q) } and a specific score model (e.g. specified by gap open/extend scores), the score of an individual (local) alignment A between x and y, where each base in y has a quality score, is defined. We denote the score by S(A) in this article. [In other words, S(A) is computed by using a position-specific score matrix (PSSM) for a read, given byFor a given (local) alignment A, the probability of the alignment A is naturally introduced,where Z is the partition function: Z = A exp S(A)/T in which the sum is throughout all the possible local alignments A between two sequences, which is specified by a local alignment model (e.g. Supplementary). Note that the maximum score alignment achieves the highest probability of the probabilistic model.
Various marginal probabilitiesFor the probabilistic distribution of Equation (2), the following marginal probabilities (with respect to the distribution) are efficiently computed by using the forward and backward algorithms e.g.): @BULLET p ik is the marginal probability that a base x i (i-th base of x) aligns with a base y k (k-th base of y).i is the marginal probability that a base x i aligns with a gap. @BULLET u (x) i is the marginal probability that x i belongs to an un-aligned (outer gap) region that is not contained in the local alignment.The key point is that these probabilities are based on all possible ways of aligning the two sequences, not just one maximum score alignment. These probabilities are essential in the next section. Because the distribution Equation (2) includes information of the quality scores, all the marginal probabilities reflect the quality scores of sequence y.
Probabilistic alignments with quality scoresIn this study, we propose two probabilistic alignment methods, both of which are able to consider quality scores of (one of) the sequences by using the marginal probabilities described in the previous section.
Probabilistic alignment (I) (-centroid alignment)The first method is based on the -centroid estimator () for the probabilistic model of Equation (2). The -centroid estimators are employed in many bioinformatics studies (). The -centroid alignment is an alignment that maximizes the sum of aligned column marginalized probabilities larger than 1/( +1), that is, it maximizes the following score for alignment A:where x i  y k  A means an aligned column (without gaps) in A. The alignment is therefore computed by a NeedlemanWunsch () type dynamic programming (DP):where M i,k stores the optimal value of the alignment between two subsequences,In this case, a local alignment is obtained from the global alignment by removing unaligned regions at the edges. (In other words, the outer gaps in the global alignment are removed.) To be clear, we first perform the forward and backward algorithms to calculate the marginal probabilities, and then perform the DP algorithm just described. The parameter  adjusts the sensitivity and PPV with respect to aligned columns. When  is low, the method is conservative and only aligns bases that have high probability p ik : this tends to reduce false positive aligned bases but increase false negatives. When  is high, the method aligns bases more permissively, which tends to increase false positives while reducing false negatives. It is known that -centroid alignment is theoretically appropriate for accurate prediction of aligned nucleotides (i.e. Aligned column accuracy).for details.] A drawback of the -centroid alignment is, however, that it is not always appropriate for gaps. Actually, -centroid alignment with small  tends to contain many gaps. We, therefore, introduce another probabilistic alignment method, which considers the marginal probabilities of both aligned columns and gaps explicitly, in the next subsection.
Page: 3087 30853092
Probabilistic alignments with quality scores
Probabilistic alignment (II) (LAMA alignment)We propose a probabilistic alignment by maximizing the following score q(A) of the alignment A, which contains the marginalized probabilities of gaps explicitly:where x i A and y k  A mean alignment columns with deletion and insertion in the alignment A, respectively. This alignment can be computed by the following recursive equation:In this case, a SmithWaterman-like algorithm (Smith and) is utilized in order to obtain a local alignment. It is noted that this probabilistic alignment is equal to the 'Alignment Metric Accuracy' (AMA) estimator for global alignments (), when a global alignment model is considered instead of a local alignment model (in that case, u(x)k = 0 for all i and k) in the above estimator. Obviously, the alignments given by the AMA estimator are suitable for the accuracy measure, AMA, which explicitly considers gaps.
Mis-mapping probabilityWhen a DNA read is aligned to a genome sequence, it will often align to multiple locations. We assume, however, that it comes from one location. We therefore calculate a mis-mapping probability for each location, the probability that it is not the source of the read. According to, the mis-mapping probability of a read at location i is computed as follows: 1 exp(S(A i )/T ) j exp(S(A j )/T )where S(A i ) is the (non-probabilistic) alignment score at location i, {A j } j is a set of alignments/locations derived from the read and T is the same as in Equations(1) and (2). The threshold  for the mis-mapping probability can adjust the sensitivity and PPV of 'Mapping accuracy'. [A lower threshold will achieve higher PPV and lower sensitivity (
ImplementationTo demonstrate our method, we have incorporated it into a large-scale alignment tool, LASTfor details of the algorithm]. In brief, LAST follows these steps: (i) find seeds (initial matches); (ii) extend a gapless alignment from each seed; (iii) shrink each alignment to a 'core' (maximal run of identical matches); (iv) extend a gapped alignment from either end of each core, using an X-drop algorithm. Probabilistic alignment adds: (v) apply a forwardbackward algorithm, within the DP region determined by the preceding X-drop algorithm (). See Supplementary Section A for details. This implementation has a weakness: probabilistic alignment is not applied to the core. Nevertheless, the method gives useful results (see below). Note that, as the result of our implementation, the 'Mapping accuracy' of probabilistic alignments is expected to be the same as that of the original (non-probabilistic) LAST. In this study, the gapless and gapped score thresholds of LAST (-d and-e) were set to 108 and 120, respectively (determined by a small dataset). Then, we calculated mismap probabilities. Finally, we discarded alignments with score <150, or mismap probability
EXPERIMENTS
Experimental settings
Accuracy measuresIn this study, we employed three types of accuracy measure as follows.(i) Mapping accuracy: a mapped read is deemed to be true positive when the read shares at least one alignment column (without gap) with the reference (correct) mapping (alignment); (ii) aligned column accuracy: a predicted aligned column (without gap) is deemed to be true positive when the aligned column is exactly identical to the reference alignment; (iii) gap accuracy: a predicted gap is deemed to be true positive if the gap matches a reference gap within a +3/3 window. This is because the position of gaps in the reference can be ambiguous. [For example, a gap in a homo-polymer has several equivalent placements (In each evaluation described above, the sensitivity (SEN) and positive predictive value (PPV) are employed: SEN =TP/(TP+FN) and PPV=TP/(TP+FP) where TP, FP and FN are the number of true positives, false positives and false negatives, respectively. It should be emphasized that the 'Mapping accuracy' has been utilized in most of the previous studies about short-read mapping, in which we cannot evaluate the accuracy of the aligned columns and gaps.
Simulated data for read mappingWe employ several simulation experiments in this study. To generate simulated reads, we utilized Stampy (v1.0.11) (http://www.well.ox.ac.uk/projectstampy) (). As the reference genome, human chromosome 1 (hg19) was used. We generated reads of length 76 bp. (This length is after simulating indels.) The dataset labeled 'SNPn-INDELl' (for n,l = 0,1,2,3,4) consists of 100 000 (single-end) reads, each of which contains n SNPs and one insertion or deletion (continuous gaps) whose length is l. [Note that actual reads given by sequencers are expected to resemble a (weighted) mixture of these datasets.] The ratio between insertions and deletions for simulated reads is set to 1:1. In addition, we simulated sequencing errors in the reads. To do this we obtained real, non-simulated reads in FASTQ format; extracted their quality scores; attached them to our simulated reads; and then mutated each simulated base with probability implied by the attached quality score. We used the FASTQ dataset from SRR005802, whose quality scores imply a mean error probability of 0.13 and median of 0.03.
Real data for read mappingIn these experiments, we used the entire human genome (hg19) as a reference genome, and 1 million reads with quality scores from the short read archive (SRA): SRR003994 (the read length is 36 bp) and SRR005802 (the read length is 76 bp) derived from the 1000 genome project ().
Simulated data for variant callingWe created simulated datasets for evaluating variant calls as follows. The reference genome is a 5 Mb region (chr17:
M.Hamada et al.list (where SNPs were simulated according to genotypes generated by dwgsim, and indels were simulated in both genomes). Finally, using the diploid genomes we generated reads with sequencing errors using Stampy (). Similarly to the previous section, the quality scores for the simulated 76 bp reads are taken from real reads (SRR005802) for generating sequencing errors. These settings were used to create 10, 20 and 40 coverage simulated datasets.) and Stampy (ver. 1.0.11) (). We tried the sensitive and-n 10 options in Stampy and BWA, respectively, as well as default options. For the other tools, the default parameters were employed in our experiments., we showed comparisons between LAST considering quality scores and LAST without considering quality scores, with respect to the accuracy measures described in the previous section. The results clearly indicate that considering quality scores improved every accuracy measure for LAST with/without probabilistic alignments. For both 'Mapping accuracy' and 'Aligned column accuracy', considering quality scores substantially improved the sensitivity ( 15%), although the PPVs were decreased slightly ( 0.5%). For 'Gap accuracy', both the sensitivity and PPV were improved by considering quality scores ( 10% for the sensitivity). Note that this is a simulation where the quality scores are perfectly accurate and actual quality scores produced by NGS instruments might be less accurate.(and SupplementaryS6), we compared LAST without probabilistic alignment and LAST with probabilistic alignments.shows that the probabilistic alignments improve the sensitivity ( 2 % with respect to Aligned column accuracy;  6 % with respect to Gap accuracy) compared with the non-probabilistic alignment, while both achieve similar PPVs.
Compared methods
Results for simulated data
Considering quality scores substantially improves accuracy of read alignment In
Probabilistic alignments improve 'Aligned column accuracy' and 'Gap accuracy' In
Usefulness of the  parameter in probabilistic alignmentsFor Aligned column accuracy, both the probabilistic alignments (I) and (II) with larger  gradually increase the SENs while slightly decreasing the PPVs (). From a theoretical viewpoint, the probabilistic alignment (I) of Equation (4) (i.e. -centroid alignment) is more suitable for 'Aligned column accuracy' than the probabilistic alignment of Equation (6) and maximum score alignment. In our computational experiments (cf.), we observed that the probabilistic alignment (I) achieved slightly higher PPVs than the probabilistic alignment (II). As mentioned in Section 2, the probabilistic alignment (I) with small  is not appropriate for 'Gap accuracy'. Actually, -centroid alignment with small  decreases the PPV of gap accuracy,The horizontal axis and the vertical axis indicate the performance when not considering quality scores and considering quality scores, respectively. The black circles, red triangles and green crosses show LAST without probabilistic alignment, LAST with probabilistic alignment (I) and LAST with probabilistic alignment (II), respectively. We used dataset of SNPn-INDELm for n,m = 0,1,2,3,4 (Each point corresponds to one of the dataset). The  is fixed to 4 in the probabilistic alignments. because it tends to produce many gaps. On the other hand, the probabilistic alignment (II) of Equation (6) is more appropriate for 'Gap accuracy'. In our computational experiments, we observed those theoretical properties, especially, the probabilistic alignment of Equation (6) achieved slightly better accuracy with respect to 'Gap accuracy' than the -centroid alignment. It should be emphasized that by using smaller  described in the previous section (which can adjust 'Mapping accuracy') and  (that adjusts 'Aligned column accuracy' and 'Gap accuracy') values, the probabilistic alignments are expected to achieve arbitrarily low PPVs, which is useful in a number of downstream analyses, such as SNP/indel detection.(and Supplementary Figs S7S12), we show the comparison between LAST and existing state-of-the-art methods. The main result is that LAST with or without probabilistic alignment, and Novoalign, performed much better than the other methods. When there are
Comparison with state-of-the-art methods In
Page: 3089 30853092
Probabilistic alignments with quality scores .shows Gap accuracy. The left and right columns show the sensitivity and PPV, respectively. The black bar indicates the performance of LAST without probabilistic alignment, the red bars and the green bars indicate performance with probabilistic alignment of Equations (4) and (6), respectively. The  has values 0.5, 1, 2, 4 and 8 from left to right in the red/green bars. The values of the 2nd and 3rd columns in Gap accuracy (PPV) are 0.6956 and 0.9010, respectively. The complete results for SNPn-INDELl are shown in Supplementary Figures S3S6. no indels and few SNPs, Novoalign performed slightly better, otherwise LAST performed slightly better. LAST is much faster than Novoalign (). It is vital to bear in mind that these methods have parameters that can be varied to increase accuracy at the expense of run time (e.g. lastal's-m parameter). Thus, it is hard to draw fundamental conclusions about the methods: we can only say that Novoalign's default parameters are tuned for longer run time in the hopes of higher accuracy, compared with LAST's. LAST with probabilistic alignment (LAMA) achieved better Gap accuracy than Novoalign in all cases. Stampy sometimes achieved higher sensitivity, but at the expense of poor PPV. In these tests, BWA exhibited low sensitivity (but somewhat better PPV), because it is designed to be more accurate and faster on queries with low error rates ( 3%) or few differences (cf.; BWA achieved good performance with low error rates ().). It is hard to be certain why LAST performs better, because these methods differ in many details. Likely one reason is the efficiency of LAST's adaptive spaced seed algorithm (). Another reason is that LAST models both sequencing errors and real differences in a rigorous way (), which may give it an advantage when there are real differences., Aligned column accuracy (middle) and Gap accuracy (bottom) for SNP1-INDEL1 (i.e. every read contains 1 SNP and 1 indel of length 1 in addition to sequencing errors) are shown. The first column and the second column indicate the sensitivity and PPV, respectively. We used  = 4 for probabilistic alignments in LAST. 'Mapping accuracy' of the original LAST is expected to be almost identical to that of LAST with probabilistic alignments. Note that the scale of vertical axis in PPV is quite different from the one in SEN. The complete results for SNPn-INDELl with n,l = 0,1,...,4 are shown in Supplementary Figures S7S12.
Results for real dataIn Table 1, the results of real read mapping (alignment) are shown. All methods find fewer alignments for shorter reads, but this effect is greatest for LAST. This may indicate that the sensitivity of LAST, or the PPV of the other methods, suffers for shorter reads. We note that Novoalign has the second-greatest decrease in alignments for shorter reads. Stampy predicted more indels than the other methods. This is because Stampy employs relatively small gap open/extension costs and aims at sensitive prediction of indels. [Actually, the authors mainly evaluate the sensitivity (recall) in their article.] However, considering not only sensitivity but also PPV is important to a number of downstream analyses e.g. SNP/indel calls from the mapping results. Note that LAST with probabilistic Page: 3090 30853092
M.Hamada et al.
DISCUSSION
Selecting  for probabilistic alignmentsBoth methods (-centroid and LAMA) in Section 2.4 have one parameter . The  of the -centroid alignment can trade-off between sensitivity and PPV with respect to aligned and unaligned bases. On the other hand, the  in LAMA alignment can trade-off between aligned regions and unaligned regions in local alignment.There exist accuracy measures, which consider a balance between Sensitivity and PPV: Mathews correlation coefficient (MCC) and F-score. In RNA secondary structure prediction,proposed an approximate method to maximize expected MCC/F-score by combining the -centroid estimator and pseudoexpected MCC. The method is also applicable to the proposed probabilistic alignments. However, we believe that the optimal  setting depends on the application in many cases: if algorithms in downstream analysis are robust to false-positive prediction, we can use relatively large  to obtain sensitive predictions, while a small  value should be used when we would like to avoid false-positive predictions. A merit of using probabilistic alignments is that we can arbitrarily trade-off sensitivity and PPV.
Accuracy of quality scores produced by sequencersAlthough we assume that quality scores are completely accurate in Equation (1), quality scores produced by current sequencers arePage: 3091 30853092In this experiment, SAMtools () was used as a variant caller. The threshold for consensus quality score was 20. We used  = 4 for LAST with probabilistic alignments in this table.indicates the results for LAST with gap justification. Complete results (including LAST without gap justification) are shown in Supplementary Table S1. See Supplementary Table S2 for results using VarScan. sometimes not so accurate. For example, in Illumina sequencers, once the quality score hits the lowest value ('B') in a read, the quality scores of subsequent bases stay the lowest value, even if the intensity values regain higher quality for a basecall. Other sequencer specific errors are also known (), which might lead to inaccurate quality scores. Obviously, improvement of base-callers and quality estimation would benefit our methods. Fortunately, pessimistic qualities ('B') are fairly benign because they simply make our methods attach less weight to those bases. The effect is similar to, but less drastic than, trimming those bases from the read. Applying a base quality score recalibration (http://www.broadinstitute.org/gsa/wiki/ index.php/Base_quality_score_recalibration) is also useful to our methods.
Probabilistic alignments with quality scores
Extensions of the proposed methodsA possible extension of the probabilistic alignments is probabilistic alignments that consider quality scores of both target and query sequences by extending S a,(b,q) of Equation (1) to S (a,q 1 ),(b,q 2 ) , the score between a nucleotide a with a quality score q 1 and a nucleotide b with a quality score q 2 :This equation is derived from a Bayesian formula similar to. If the set of quality scores is finite (like quality scores produced by current NGS instruments), the overhead of computation (compared with the case without considering quality scores) is expected to be small because S (x,q 1 ),(y,q 2 ) for all combinations of x, q 1 , y and q 2 can be pre-computed beforehand. Probabilistic alignments considering quality scores of both sequences will be useful in assembly of reads (). Another extension of the proposed probabilistic alignments is to extend them to multiple alignment (), which can be applied to the multiple alignment of several reads mapped to a similar region. Re-alignment of multiple reads and the reference genome is a more promising approach to SNP/indel detection than re-alignment between each read and the reference genome separately ().
Further applications of the proposed methodsRecently, Li (2011) has shown that marginal probabilities of aligned columns [they call it 'base alignment quality (BAQ)'] in a read alignment improve the accuracy of SNP detection. That method, however, does not use the marginal probabilities to create the alignment. The marginal probabilities with quality scores proposed in this article will be directly applicable to their method. Another application of the proposed probabilistic alignment is to map short reads derived from bisulfite sequencing (), because accurate estimation of aligned columns is important in this case.
CONCLUSIONWe proposed two probabilistic alignment methods (-centroid alignment and LAMA alignment) in which quality scores are naturally considered from a Bayesian viewpoint. To the best of our knowledge, this is the first article that combines probabilistic alignments and quality scores. We implemented the methods in LAST (http://last.cbrc.jp/) and applied them to read mapping and variant calling. Compared with the original LAST, probabilistic alignment slightly improves both 'Aligned-column accuracy' and 'Gap accuracy' in read alignment. (The probabilistic alignment also outperformed existing algorithms.) Moreover, by utilizing a parameter , probabilistic alignments can trade-off sensitivity and PPV with respect to aligned columns and/or gaps. This property is useful for various downstream analysis (e.g. variant calling or detection of (un)methylated nucleotides) after read mapping.
Page: 3092 30853092
M.Hamada et al.Conflict of Interest: none declared.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Each dataset (SRR003994 of 36 bp; SRR005802 of 76 bp reads) contains 1 million reads with quality scores. The columns 'Mapped', 'Aligned' and 'Indel (gap)' indicate the number of mapped reads, the number of aligned columns and the number of indels (gaps), respectively. The columns 'Time' and 'Mem' shows the elapsed computation time in minutes (not including the indexing time of every tool) and used memory in gigabytes, respectively. The computation was conducted using a machine with Intel(R) Xeon(R) CPU X5550 2.67 GHz and 24 GB memory. We used  = 4 for probabilistic alignments. Bowtie cannot handle gaps in read mapping. Due to the huge memory requirement, we gave up executing SHRiMP2 in this experiment. alignments easily adjusts SEN and PPV with respect to 'Aligned column accuracy' and 'Gap accuracy' by using the  parameter. ('Mapping accuracy' is adjustable by using the parameter  in LAST with/without probabilistic alignments.) One drawback of probabilistic alignment is computational time. Actually, Table 1 indicated that LAST with probabilistic alignments is 35 times slower than LAST without probabilistic alignment. However, it is still faster than Stampy (sensitive) and Novoalign, both of which achieved a comparable performance to LAST. Bowtie was much faster than the other programs, although it could not predict any indels in mapped reads, because the algorithm of Bowtie cannot treat indels. BWA is one of the fastest tools, but it achieves less sensitive predictions than LAST, Stampy and Novoalign. (Note that most of these tools have tunable parameters that enable them to be arbitrarily fast, at the expense of accuracy.) 3.4 Toward accurate SNP/indel detection Most SNP/indel callers take the result of short-reads mapping as input (Nielsen et al., 2011). In this section, we apply and examine our proposed alignment method as a pre-processing step for SNP/indel calling. We employed a simulated dataset described in Section 3.1.4. For comparison with the proposed methods, we applied BWA (with default options and the '-n 10' option), Novoalign and Stampy (default options). As variant callers, we used SAMtools(-Pileup) (Li et al., 2008) and VarScan (Koboldt et al., 2009), which were widely used in many studies, and directly employ the information of input read alignments. An estimated SNP is considered a true positive if it is in the correct variant list. An estimated indel is deemed to be true positive if it is in the correct variant list within a +5/5 window (we require that the length of the indel must be equal to the length of the reference indel). In Table 2 and Supplementary Table S2, we show the performance of sequence alignment tools with application to SAMtools and VarScan, respectively. For SNP detection, LAST consistently outperforms BWA, Novoalign and Stampy. LAST also achieves favorable accuracy at low coverage (10) for indel detection. The results also indicate that both probabilistic alignment (I) and (II) of LAST improve the sensitivity and PPV, compared with LAST without probabilistic alignment in many cases (for predicting both SNPs and indels). We further observed that indel detection accuracy depends on the treatment of ambiguous indels (e.g. in homopolymer runs). SAMtools and VarScan detect such indels more accurately if the alignment tool places them consistently when aligning different reads. Unfortunately, alignment using quality scores tends to place insertions inconsistently, because the quality scores vary stochastically. Probabilistic alignment can also place gaps inconsistently. To partly compensate for this problem, we tried leftjustifying all gaps in the LAST alignments. (That is, we slid each gap to the left, one base at a time, so long as the number of mis-matches in aligned columns did not increase.) Gap justification made almost no difference to SNP prediction but it improved indel prediction (Supplementary Tables S1 and S2). In summary, our alignment methods are clearly promising for SNP/indel detection, but would benefit from better integration with the downstream variant caller.
