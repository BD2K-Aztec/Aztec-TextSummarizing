Motivation: Cysteine residues have particular structural and functional relevance in proteins because of their ability to form covalent disulfide bonds. Bioinformatics tools that can accurately predict cysteine bonding states are already available, whereas it remains challenging to infer the disulfide connectivity pattern of unknown protein sequences. Improving accuracy in this area is highly relevant for the structural and functional annotation of proteins. Results: We predict the intra-chain disulfide bond connectivity patterns starting from known cysteine bonding states with an evolutionary-based unsupervised approach called Sephiroth that relies on high-quality alignments obtained with HHblits and is based on a coarse-grained cluster-based mode-lization of tandem cysteine mutations within a protein family. We compared our method with state-of-the-art unsupervised predictors and achieve a performance improvement of 25â€“27% while requiring an order of magnitude less of aligned homologous sequences ($10 3 instead of $10 4). Availability and implementation: The software described in this article and the datasets used are available at http://ibsquare.be/sephiroth.
IntroductionCysteine amino acids are extremely relevant for proteins from both structural and functional perspectives. Their side chain ends in a thiol group that, in an oxidative environment, may covalently bond with other cysteines to form disulfide bonds within the protein or to other proteins. These non-local interactions pose structural constraints that reduce the conformational freedom of proteins, thus affecting their stability, maturation and folding rate, inducing conformational changes and ultimately influencing their function (). Next-generation sequencing technology is producing a flood of new and unannotated protein sequences. There are commonly two prediction steps that can be taken to annotate cysteines in these sequences. The first one is to predict whether their thiol group is in a bound (oxidized) or free (reduced) state, which can help in the functional and structural characterization of proteins (). The second one is to reconstruct the most probable disulfide bonding pattern, which represents the connectivity of the covalent bonds formed between the oxidized cysteines within one sequence (intra-chain). This prediction step is important, asknowledge of these connectivities provides clues to the protein fold and structural similarity to other proteins (), and in ab-initio structure prediction, it adds long-range constraints and reduces the conformational space to be searched (). Most of the state-of-the-art prediction tools follow this division in two steps; depending on the case, they can deal with the oxidation states alone (), the connectivity prediction alone (and thus assuming perfect knowledge of the), which is the ultimate goal of this field. Rubinstein and Fiser (2008) already observed that methods for the prediction of cysteine oxidation states have a long history of high performances: more than 10 years ago, 88% of accuracy was already reached (), and recently, 93% of cysteines were correctly classified, with 86% of proteins predicted correctly (). These approaches are distinct from the prediction of disulfide bond connectivity, where typically accuracies of up to 5060% are reached starting from known oxidation states. The machine learning (ML) methods commonly used to predict connectivity can be improved by coupling them with statistical approaches based on the analysis of correlated mutations between cysteine positions in multiple sequence alignments (MSAs). As shown in, the information produced by these statistical approaches is to a certain extent orthogonal and thus complementary to ML methods, which can natively integrate these predictions as new dimensions in the feature vectors. In particular,show that correlated cysteine mutation analysis can provide a 10% improvement over ML performances. The principle underlying methods based on the statistical analysis of MSAs is that, generally, residues that experience spatial proximity in the three-dimensional protein structure tend to coevolve during the evolution of protein families, so preserving the propensity of their interaction (). Bonded cysteines are no exception to this behavior: their structural and functional relevance leaves a co-evolutionary trace among the cysteine-harboring positions in an MSA of homologous sequences in the form of 'tandem' (compensatory) mutations between contacting pairs (). Evolution thus provides MSAs with 'clues' of the protein three-dimensional structure, but this coevolutionary signal is confounded by the entanglement of spurious (transitive network-mediated) correlations and entropic/phylogenetic biases, mostly due to the sampling of the sequences during alignment (). Different algorithms have been developed to extract the valuable co-evolutionary signal from its noisy background () and are routinely used in contact prediction (CP). Compared with the more general CP problem, the disulfide connectivity prediction presents a problem of lesser difficulty because (i) only a few positions in the MSA have to be analyzed and (ii) cysteines are expected to have a structural or functional impact and thus a strong correlation trace through evolution. Disulfide connectivities have been predicted from MSAs this way using correlated mutation analysis methods () and using a mutual information (MI) approach combined with a sparse inverse covariance estimation method () derived from the CP tool PSICOV (), so improving the performances of their full annotation predictor (). Although these approaches are effective, they do not take into account, for example, the evolutionary distances between the sequences or any biological reasoning except for the compensatory mutation process. Here, we address this problem through Sephiroth, an unsupervised predictor that infers the most likely intra-chain disulfide bond connectivity patterns starting from known or predicted cysteine bonding states. Sephiroth (i) relies on high-quality MSAs obtained with the fast and accurate hidden Markov model alignment method HHblits () and (ii) is based on a novel coarse-grained cluster-based modelization of tandem cysteines mutations within a protein family. We compared our method with state-of-the-art unsupervised predictors on the same dataset and achieve a performance improvement of 2527%, while requiring an order of magnitude fewer aligned homologous sequences (in the order of 10 3 instead of 10 4 ), thus extending the applicability of these tools in terms of increased range of predictable sequences at a lower computational cost. Sephiroth can be combined with ML methods and in this case provides a 15% improvement compared with other state-of-the-art supervised prediction methods.
Materials and methods
PDBCYS datasetIn this study, we adopted the PDBCYS dataset used in), which is available at http://dislocate.biocomp. unibo.it/ dislocate/default/method. The dataset has been built from the Protein Data Bank release of May 2010 and contains 1797 proteins with at least two cysteines each. Only intra-chain disulfide bonds annotations are present in the datasets used in this article, as (i) inter-chain disulfide bonds are considerably rarer and (ii) their prediction is a radically different problem that regards also aspects related to the quaternary structure (). In the PDBCYS dataset, 276 sequences have only bonded cysteines (15.4%), 1320 contain only free cysteines (73.5%) and the remaining 201 chains have both bond and free cysteine (11.2%). The total number of cysteines is 10 813, of which 7619 are free (70.5%) and 3194 are connected by disulfide bond (29.5%). From a taxonomic point of view, the dataset contains only eukaryotic sequences, of which 44.8% belong to Homo sapiens. The other most represented species are Saccharomyces cerevisiae (10%) and Mus musculus (7.7%). Finally, the dataset contains 100 proteins with two disulfide bonds, 85 proteins with three bonds, 41 with four, 37 with five and 17 with six.
SPX datasetWe also tested our predictor on another dataset taken from literature, called SPX (). It contains 1018 proteins with known 3D structures that are annotated for disulfide bonding and connectivity. Seventy proteins in SPX are also present in PDBCYS and we removed them obtaining a final independent dataset of 948 proteins ('IND-SPX'). In PDBCYS, the shortest protein is 40 amino acids long, whereas IND-SPX contains 161 peptides shorter than 40 residues. We built another dataset by removing from IND-SPX all the peptides shorter than 40 residues, obtaining the 'IND-noFrag' subset of 787 proteins.
SephirothThe pipeline starts from(i) the 'query' (or 'target') protein sequence for which we want to predict the disulfide connectivity and (ii) knowledge of the oxidation states of the cysteines in that query protein. It consists of the following steps, also shown in.
MSA with HHblitsAn MSA in which the query protein is aligned with homologous sequences is computed using HHblits () (). The results are reformatted and trimmed to obtain a file containing one aligned sequence for each row. The iteration and E value parameters may vary and are discussed in Section 3.
Clustering the sequencesThe sequences in the MSA obtained from the previous step are labeled in function of the presence/absence of cysteines at the positions of the query sequence that contain bonded cysteines, and, as shown in, these labels are used to partition the protein family into subsets. Any non-bonded cysteine in the query sequence is treated as any other amino acid and is thus ignored in this procedure. The simple algorithm described here ought not be confused with clustering algorithms based on evolutionary principles that are used for phylogenetic purposes on protein families. We will, however, refer to our subsets as clusters, because they provide a partitioning of the sequences (based on label similarity) that is crucial for the following steps of the prediction pipeline. The clustering of the sequences is obtained by first assigning a binary label to each sequence that represents the 'cysteine presence/ absence footprint'. This binary label has a constant length equal to the total number of bonded cysteines in the query sequence and contains only '1' (cysteine present) and '0' (cysteine absent) symbols. For example, if the query sequence contains four bonded cysteines at positions C 1  14; C 2  29; C 3  56; C 4  90 and an homologous sequence S 1 has cysteines at positions C 2 and C 4 but different amino acids at C 1 and C 3 , the binary label assigned to S 1 is '0101'.
Disulfide connectivity predictionThe same binary label can be assigned to many sequences; sequences identified by the same binary label belong to the same cluster (). The query protein always belongs to cluster containing only '1's, and each defined cluster contains at least one sequence.
Defining edges between clustersThe following step is to define edges between certain pairs of clusters i and j (with j 6  i) obtained in the previous step. Each cluster i contains n i sequences and is identified by its binary label. We assign a direct edge (i, j) between clusters named i and j if j contains exactly two '0's more than i, obtaining the directed acyclic 'Cluster Graph' (CLG) shown in. We build this graph by allowing only edges between clusters that are likely to have experienced the disulfide-breaking 'tandem' cysteine mutations that are usually searched for by methods such as MI or Rubinstein and Fiser (2008). Instead of looking directly for these relationships, we carve them in the data structure underlying our modeled problem, obtaining a constrained CLG structure on which we can perform the search procedure. The assumption of tandem mutations of bonded cysteines is a useful modelization, but it is not always respected: MSAs frequently contain sequences with an odd number of cysteines. Because the defined edges are always between nodes with the same type of parity, the clustering procedure actually may provide two disjoint CLGs that separately contain clusters representing sequences with even and odd numbers of cysteines. Both of them are considered and processed in the following steps, but we describe the ideal case (only sequences with an even number of cysteines) for sake of clarity.
Sequences voting and distance measuresOnce we have defined the CLG for the clusters, we extract from this data structure information related to the cysteines paired in disulfide bonds. This is done in a two-step procedure explained below: first, we assign weights to any allowed transition (edge) between clusters (the weights w n in) and then we use these weights to build a new graph representing the possible disulfide bondings within the query protein (). The first step is done through a voting-like procedure. For each cluster i with exiting edges and for each protein sequence k 2 i, a sequence-based distance function D;  is computed between k and each sequence q belonging to the clusters adj(i) adjacent to i (reachable via one edge from i). The distance function D;  can in principle be any function that takes as input two protein sequences and returns a measure of their similarity. Here, we adopted the sequence identity between the two proteins a and b, as it has a linear computational cost and we are dealing with already aligned sequences. For each cluster i and sequence k 2 i, the weight associated to the edge (i, j) is incremented by one for the cluster j 2 adji that contains the sequence q for which the distance Dk; q is minimal, compared with all other sequences in the adj(i) clusters. Analytically, the weight w i;j between the clusters i and j can thus be computed as w i;j  X 8k2i darg min c2adji clustDistk; c; jwhere clustDistk; c  fminSIk; q; 8q 2 cg; c 2 adji are the clusters adjacent to i, SI is the sequence identity function and dx; y is the Kroenecker delta function that yields 1 if x  y and 0 otherwise. The relative pseudocode is available in the Supplementary Material. Every sequence in every cluster i with a non-empty adj(i) set therefore provides an unitary weight to the allowed (j 2 adji) edges (i, j); the unitary contributions are then summed, obtaining the global edge weights. In this way, each cluster i 'distributes' its voting power (the number of clustered sequences) by weighting its exiting edges depending on the degree of similarity with the other connected clusters j 2 adji. This procedure, coupled with the underlying cysteines tandem mutations assumption encoded in the CLG structure, indicates which cluster contains the closest homologs of i where loss of a disulfide bridge occurred and thus which cysteine pairs are more likely to experience a tandem mutation triggered by the functional disruption of a disulfide bond. For the second step, we switch from the cluster-oriented CLG (and D) to a cysteine-oriented graph by building a 'Connectivity Graph' (COG) (and F) where the nodes represent the oxidized cysteines in the query sequence and the undirected edges between them represent the possible disulfide bonds. Recalling that each 1 or 0 in the label associate to each cluster represent an oxidized cysteine in the query sequence, the weights on the CLG edges () can now be transferred to the COG () by looking at which cysteine pairs are 'lost' when following each edge. For example, the transition from '0011' to '0000' involves the loss of cysteines in positions 3 and 4 in the binary label, so the weight of the edge between '0011' and '0000' in the CLG is added to the edge between nodes C 3 and C 4 in the COG. The weight for the CLG edge between '1111' and '1100' would equally be added to the same COG edge (The relative pseudocode is available in the Supplementary Material).
EdmondsGabow algorithm for maximum weight perfect matching The weights obtained through the voting procedure on the CLG are then transferred to the COG, in which each edge represents a disulfide bond in the protein. Depending on the quality of the MSA and on the diversity of the sequences sampled from the evolutionary history of the protein family from which it has been generated, the CLG may be an uninformative graph, with few or just one node(s). This happens when all the sequences in the MSA belong to the same cluster or when they are grouped in few clusters that cannot be connected with edges following the rules shown in Section 2.3.3. In these pathological cases, it is not possible to assign weights to the CLG and thus to transfer them to the COG, since the retrieved homologous are not diverse enough to provide clues of the connectivity. When no connectivity information is available, the algorithm warns the user and returns a random prediction. To (i) provide most likely connectivity prediction in the case of informative or partially informative graphs and (ii) pose constraints enforcing the biological meaning on the COG connectivity, we maximized the likelihood of the final inferred disulfide connectivity by applying the EdmondsGabow (EG) maximum weight perfect matching algorithm () on the COG. This algorithm selects the edges with the highest weights and provides a final graph in which each node (cysteine) is the end point of one, and only one, edge representing a disulfide bond. The entire method has been implemented in Python and it is publicly available at: http://ibsquare.be/sephiroth.
Scoring prediction performancesWe measured the performances of our method using the common metrics adopted in the field that are generally derived from the precision scores Pre  TP=TP  FP, where TP, the true-positive predictions and FP, the false-positive ones. We define these measures of the prediction performances for both (i) the connectivity pattern of the entire protein
Results and discussion
Performances in function of the alignment parameters and MSA sizesWe built MSAs against UniRef20 using HHblits ().As the most direct way to influence the properties and information content of the MSAs used as inputs is by tuning the E value and the number of iterations chosen, inwe show the performance on the PDBCYS dataset in function of these parameters: for each fixed number of iterations we decreased the E value, providing more strict thresholds for the false positives and thus decreasing the total number of sequences.presents that on average, higher Sephiroth performances are obtained by increasing the number of iterations, so including more distantly related homologs in the MSA. We performed a non-exhaustive search in the space of these parameters: for each number of iterations, we aimed at identifying the optimal E value. This heuristic search shows that three iterations with E value  10 2 is the best performing combination of values, but that 2 iterrations E value  10 5 or 45 iterrations E value  10 5 perform almost equally well. The MSAs computed with HHblits and used by Sephiroth are roughly one order of magnitude smaller than the ones found to be optimal for MIp and ICOV (): in the range of 10 3 sequences instead of 10 4. The performances of Sephiroth when tested on these bigger alignments obtained with JackHmmer () are suboptimal with respect to HHblits and are shown in Supplementary Table S2. In Supplementary, the average number of sequences retrieved and aligned by HHblits is shown for different E value and iteration parameters combinations. The most populated MSAs, obtained with three iterations and E value  10 2 , contain on average 1406 sequences each, with a minimum of 1 sequence (no homologs found) and a maximum of 7966 sequences. The CP literature () points out that the huge requirement in terms of homologous sequences is one of the main drawbacks of co-evolutionary statistical approaches. The possibility to lower these requirements by one order of magnitude opens new horizons for the applicability of these methods in terms of (i) reliably predicting sequences with few homologs and (ii) reduced computational cost of the procedure: if less homologs are needed, faster databases searches can be performed, obtaining overall faster and more accurate predictions.
Comparison with other methodsWe benchmarked Sephiroth by calculating its performance on the PDBCYS dataset and comparing to the results obtained by MIp and ICOV, two state-of-the-art existing methods that were also validated on this dataset (). MIp is based on the corrected MI between two random variables, which is a nonnegative symmetric measure of their dependence. MI estimates the degree of co-mutation between different positions in the MSA by considering the cysteine-containing positions in an MSA as random variables that can assume discrete values within the amino-acids alphabet, with probabilities empirically estimated from the sequence conservation profile information. This measure suffers from some drawbacks due to phylogenetic and entropic biases () and needs to be corrected for the background of spurious correlations. The second method, ICOV, is based on a more complex statistical method that takes the network of spurious interaction underlying the co-evolutionary signal into account. It estimates the inverse of a sparse covariance matrix () to extract the direct coupling between the possibly correlated random variables (the positions in the MSA) by removing the confounding factors. We also included a random predictor that randomly guesses the bonds in each protein to obtain a baseline value for the prediction. In the comparison of prediction performances in, we focus on the previously defined Q p scores, which give the percentage of proteins whose connectivity has been predicted entirely correctly: this measure is the most prevalent scoring index in cysteine connectivity prediction. The 'All' Q p scores averaged over proteins containing two, three, four and five bonds (last column of) show that Sephiroth performs 27% better than ICOV and 24.4% better than MIp, showing a clear improvement with respect to these methods. If we compare Sephiroth's Q p scores with the maxima obtained by MIp or ICOV, but now subclassed by number of bonds, we obtain the following improvements: 10% for two bonds, 26% for three bonds, 51.7% for four bonds and 37.5% for five bonds. The difficulty of the prediction rapidly increases with the number of disulfide bonds: in particular, given the performance of the Random predictor, the five-bond prediction appears to be 330 times harder than for two bonds. Our method is, respectively, 127%, 657%, 4300% and 21 900% better than the random predictor for two, three, four and five bonds. Averaged over all the proteins, it performs 273% better than random guesses.Sephiroth is an unsupervised predictor based on statistical assumptions without learning steps; for this reason, it is not necessary to cross-validate the results to avoid overfitting. The ICOV and MIp performances were measured by averaging the scores in a 20-folds cross-validation-like procedure to provide results coherent with the other scores shown in that article. This procedure appears to provide a slight error in the estimation of the performances due to the sampling of the proteins in the different folds and to the subsequent averaging of the scores. To take into account also this effect when comparing the performances, we reproduced the same 20-folds sampling by using the same dataset division and averaging the scores. The positive sampling error appears to provide 2% estimation of the performances yielding approximately 2730% improvement instead of approximately 2527%.
Performances on independent datasetWe also ran Sephiroth on two independent datasets (IND-SPX and IND-noFrag) derived from the original SPX dataset () (see Section 2). The prediction performances we obtained are listed in: when predicting IND-SPX, we obtain a low 'Q p All' score of 39%. However, 161 of IND-SPX entries are peptides with less than 40 residues, and most of these fragments are too short to (i) produce significant HHblits alignments (the average number of homologs found for these peptides is 81) and to (ii) provide a meaningful sequence identity-based voting procedure in Sephiroth. By removing these short fragments (IND-noFrag), we obtained a subset of 787 proteins with on average 1119 homologs each (the most populated MSA contains 6393 sequences). The prediction performances obtained on IND-noFrag are 3136% higher than IND-SPX and comparable with the scores obtained on PDBCYS, showing that Sephiroth's performances are reproducible on different dataset and thus based on valid assumptions. Also in this case, Sephiroth is, on average, respectively 2.40 and 2.26 times better than the random predictions.
Combining Sephiroth with other ML methodsIn Table 2, we showed that Sephiroth is able to outperform the other unsupervised prediction methods by providing approximately 2527% improvement with respect to MIp and ICOV. A comparison between Tables 2 and 4 shows that Sephiroth also positively compares to ML methods based on hundreds of features (), as it performs 5.4% better than the support vector regression (SVR) approach. Sephiroth predictions can also be added to these ML methods; we assessed its contribution by reproducing the SVR approach adopted in, implementing it in Python with sklearn (). The performance is represented under skSVRSephiroth in. For each possible pair of cysteines, a window of 13 flanking residues representing the local sequence context of each cysteine is encoded in a feature vector with 2  13  20  520 dimensions. Each flanking residue is represented by a 20-dimensional vector extracted from the sequence profile obtained from the MSA, containing the frequencies of occurrence of each amino acid at that position. We also added three further dimensions to each feature vector: the cysteines sequence separation distance and their relative order (). We then added a single dimension containing Sephiroth bond/ free prediction to each of the 523-dimensional feature vectors encoding each pair of cysteines in proteins with 25 bonds, and weran a 20-fold cross-validation using the same fold division shown in (). Adding a single dimension containing Sephiroth's predictions to our sklearn-SVR followed by EG algorithm (skSVRSephiroth) produces a 26% improvement with respect to SVR and 15% with respect to SVRMIpICOV, showing the relevance of Sephiroth when it is integrated with ML methods. We also assessed the performances of Sephiroth starting from predicted oxidations states by reproducing an approach similar to DISLOCATE (). The error introduced by the oxidation state prediction translates directly to the Sephiroth performance, showing that the two prediction steps are very close to being independent (see Supplementary).
ConclusionIn this article, we present a novel unsupervised method for the prediction of disulfide bond connectivity patterns from known or predicted cysteine bonding states. It is based on assumptions similar to other statistical methods (cysteine conservation and co-evolution) but approaches the problem from a different angle, directly encoding the cysteine tandem mutations assumption in the structure underlying the problem, thus providing constraints for the search of the optimal solutions. The availability of homologous sequences is crucial for these predictors and we adopted a fast and accurate HMM-based iterative search tool, HHblits () to obtain small but highly informative MSAs. Compared with existing predictors, we obtain a significant improvement of the performances, while requiring one order of magnitude fewer aligned homologs. We also show that Sephiroth can provide a relevant improvement over stateof-the-art ML methods if used as extra feature in SVR pipelines for solving the disulfide connectivity prediction task. The enhanced reliability of the connectivity predictions coupled with lower requirements in terms of MSA sizes (and thus time required by database search) can improve the dependability of bioinformatics methods for the structural and functional annotation of unknown sequences.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
D.Raimondi et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
P b and Qprot are presented as percentages for the sake of clarity.
