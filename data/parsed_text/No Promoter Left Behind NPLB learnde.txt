Promoters have diverse regulatory architectures and thus activate genes differently. For example, some have a TATA-box, many others do not. Even the ones with it can differ in its position relative to the transcription start site (TSS). No Promoter Left Behind (NPLB) is an efficient, organism independent method for characterizing such diverse architectures directly from experimentally identified genome-wide TSSs, without relying on known promoter elements. As a test case, we show its application in identifying novel architectures in the fly genome. Availability and implementation: Web-server at http://nplb.ncl.res.in. Standalone also at https:// github.com/computationalBiology/NPLB/ (Mac OSX/Linux).
IntroductionPromoters play a key role in transcription initiation by harbouring specific DNA elements, which act as transcription factor recognition sites. But how these promoter elements (PEs) contribute to the diversity in transcriptional regulation is not yet clear. While highthroughput technologies are increasingly used to produce accurate maps of transcription start sites (TSSs) (), the subsequent step of characterizing promoters and their functions is still done using two rather dated approaches. The first involves classifying them based on known PEs such as the INR motif or TATA-box. Unfortunately, a majority of promoters and their activities cannot be explained by the presence or absence of these few PEs. Alternatively, de novo motif discovery methods are used to identify overrepresented elements directly from the sequences. These can miss PEs present only in a small fraction of promoters. Since promoters have diverse mechanisms of activation, most PEs fall in this category (). Even methods that identify cis-regulatory modules fail here, since although they look for motif-combinations, these are still required to be common across the full set (Van). No Promoter Left Behind (NPLB) is a new method modelled along the lines of unsupervised learning with feature selection that partitions TSS-aligned promoter sequences into distinct promoter architectures (PAs), each characterized by its own set of PEs, all learned de novo (). Since it explicitly allows for diversity, NPLB can be applied to the full dataset, leaving out no promoter, in contrast to the standard approach of presorting/ preselecting promoters on the basis of criteria such as presence of known PEs () or TSS peak characteristics (). In this new parallel software, the number of PAs and PEs are determined automatically using a mix of Bayesian modelling and cross validation.
Methods
Overview of NPLBEach promoter is characterized by one PA out of a finite set of PAs. Each PA is characterized by categorical distributions over nucleotides {A,C,G,T} at specific positions relative to the TSS. These positions and their distributions are expected to be unique to that PA.
779This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.All other positions follow a background categorical distribution, common for all PAs. Parameters of models with various numbers of PAs are learned using Gibbs sampling and the best model is decided using cross validation. Key advantages of NPLB are that it 1. identifies novel and possibly diverse architectures and elements, with the only input being the set of promoters, 2. is an organism and a cell-type independent, 3. can be applied to the full set, directly, 4. employs a likelihood-based approach, thus can be used to make new predictions of promoters, as well as classify between architectures, 5. uses multiprocessing, making it fast: takes about 2 h for bacteria and 10 h for fly on an Intel i7-3770 K desktop. (Supplementaryshows how runtime scales with number of promoters.)Written in C and Python, NPLB requires a prior installation of gnuplot 4.6. Weblogo 3.3 (), and is modified to generate sequence logos.
NPLB inputNPLB can learn new PAs (PROMOTERLEARN) or categorize new promoters based on an input PA-model (PROMOTERCLASSIFY). Both require a fasta file of promoters, aligned according to the TSS. A typical eukaryotic file would contain DNA sequences $50 bp upand downstream of the TSS. PROMOTERCLASSIFY also needs a previously learned model. Various other default settings such as number of PAs to be explored and the number of sampling iterations can be overridden by the user. This is especially useful when the user wants to choose between a quick, approximate solution and a slow, but more accurate characterization. A tab-separated text file with one line per promoter, containing additional characteristics of each TSS such as UTR length, TSS spread, etc. is an optional input. In such a situation, NPLB creates plots that can give insights into functional differences between PAs.
NPLB outputA successful run of PROMOTERLEARN produces the following outputs:A successful run of PROMOTERCLASSIFY produces all the aforementioned files except CVLikelihoods.txt, settings.txt and the likelihood plots.
Case study: DrosophilaPROMOTERLEARN was applied to 90-bp neighbourhoods centred on 6635 TSSs () reported in adult Drosophila melanogaster carcasses (). In the original study, four types of promoters were identified, based on known fly PEs (Ohler and): TATA-box, INR, DPE, Dmv4 and Dmv5. These four types accounted for 2112 of the 6635 promoters (Supplementary). Here, 12 PAs were identified (Supplementary); PROMOTERLEARN was run again on each of them. Eight PAs were split further into a total of 23 PAs (Supplementary), three of which were split to get a final set of 30 PAs (). A1A6 contain the TATA-box, but differ in its distance from the TSS. Interestingly, the INR motif TCAGTY varies slightly with the TATA-box position in A3A6. Standard analyses miss such variations, either because they rely on known PEs or look for elements overrepresented in the full set. For instance, in the sequences left out in the original study, NPLB finds PAs characterized by known as well as novel PEs (Supplementary). The characteristic file with the number of tags at each TSS and 5 0 UTR length was used to construct two box-plots (). A30 contains the ribosomal TCT motif () in place of the INR, which explains the significantly higher number of tags at those promoters (P < 10 21 ). This PA was missed in the original analysis possibly since it contains <2% of all promoters. Interestingly, A7A11, which contain variants of the DPE, but no obvious upstream element, create transcripts with longer 5 0 UTRs than other PAs (P < 10 62 ). This has not been noted before. A more detailed description of the PAs is available in the Supplementary methods. PAs can be further analysed for function through conservation analysis (; Supplementary) and GO term enrichment studies (; Supplementary Table S1).Data from new and advanced high-throughput technologies are increasingly making it clear that cells employ diverse mechanisms for transcriptional regulation. NPLB seeks to fulfil the need for an efficient and unbiased method that can identify these mechanisms directly from such data. Although NPLB has been designed for TSS maps, it can be applied to any DNA sequences aligned on the basis of a common genomic event such as splicing, eRNA synthesis or proteinDNA binding and expected to have distinct sequence architectures in the immediate neighbourhood.
FundingThis work was supported by an Early Career Fellowship from Wellcome Trust/DBT India Alliance to L.N. Conflict of Interest: none declared.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
S.Mitra and L.Narlikar at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
