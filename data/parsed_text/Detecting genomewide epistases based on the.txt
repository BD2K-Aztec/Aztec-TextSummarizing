Motivation: In genome-wide association studies (GWAS), up to millions of single nucleotide polymorphisms (SNPs) are genotyped for thousands of individuals. However, conventional single locus-based approaches are usually unable to detect gene–gene interactions underlying complex diseases. Due to the huge search space for complicated high order interactions, many existing multi-locus approaches are slow and may suffer from low detection power for GWAS. Results: In this article, we develop a simple, fast and effective algorithm to detect genome-wide multi-locus epistatic interactions based on the clustering of relatively frequent items. Extensive experiments on simulated data show that our algorithm is fast and more powerful in general than some recently proposed methods. On a real genome-wide case–control dataset for age-related macular degeneration (AMD), the algorithm has identified genotype combinations that are significantly enriched in the cases.
INTRODUCTIONWith recent development in high-throughput single nucleotide polymorphism (SNP) genotyping technologies, the number of SNPs that can be typed simultaneously on a DNA chip has grown from 10 000 in 2002 to 1 million in 2007 (). Genomewide genotype data as well as phenotype information for some common diseases have been accumulated in an accelerated rate for the past 5 years (e.g.). These genome-wide association studies (GWASs) have proven to be a powerful approach to reveal susceptibility genes for some complex diseases (). Nevertheless, the primary analysis paradigm for GWAS is dominated by single locus-based statistical approaches (). However, epistatic interactions (epistases) among multiple genes play an essential role in the pathogenesis of human complex diseases (). Many studies have also * To whom correspondence should be addressed.demonstrated that epistasis contributes to diseases such as breast cancer (), diabetes, obesity () and coronary heart disease (). Single locus-based approaches may not be able to detect all interacting genes, especially for those with small marginal effects. Recently, the problem of detecting genome-wide epistases has drawn much attention. Many computational algorithms have been proposed (). Existing approaches for searching genegene or SNPSNP interactions can be grouped into four broad categories: exhaustive search, stochastic search, data mining/machine learning approaches and stepwise search. Methods based on exhaustive search enumerate all possible combinations of multiple loci and perform desired interaction tests (e.g.  2 or logistic regression) for each combination.proposed a combinatorial partitioning method (CPM), which searches all possible ways of dividing m-locus genotype combinations into k genotypic partitions, and selects the best one to account for quantitative traits. CPM is only computationally feasible for small datasets even for two-locus interactions due to the enormous number of possible partitions. Inspired by CPM,proposed a multifactor-dimensionality reduction method (MDR), which partitions the multi-locus genotype space into two classes and exhaustively searches for the best classification model in predicting the disease status. It utilizes repeated crossvalidations and permutation tests to evaluate classification accuracy and significance, respectively. Similar to CPM, MDR cannot handle large datasets, even for two-locus interactions (). Though many extensions of MDR have been proposed recently, including MB-MDR () and RMDR (), they are unable to tackle large GWAS data efficiently. In another attempt,proposed a boolean operationbased screening and testing (BOOST) method, which can detect two-locus interactions for currently available GWAS data. However, because the search space grows exponentially with the number of involved genes/SNPs, methods based on exhaustive search can hardly be extended to include more than two loci. Instead of explicitly enumerating all possible combinations of m-locus, stochastic methods () use random sampling procedures to search the space of interactions. Among them, Bayesian epistasis association mapping (BEAM) () is one of the representatives. BEAM takes casecontrol genotypes as its input, and iteratively uses the Markov chain Monte Carlo (MCMC)Page: 6 512
M.Xie et al.approach to calculate the posterior probability of a locus being associated with the disease and/or being involved with other loci in epistasis.further extended BEAM in their epistatic module detection (epiMODE) method, which uses Gibbs sampling and a reversible jump MCMC procedure to search for significant epistatic modules. Data mining and machine learning approaches, such as neural networks (), random forests (), boosting () and predictive rule learning algorithms (), have all been used in search for significant interactions. Most of these algorithms use some heuristics to avoid exhaustive searches. For example, SNPruler () first uses a rule searching algorithm to find potential interactions and then adopts the  2 statistic to evaluate their significance. Stepwise search approaches first select a subset of SNPs based on some single-locus tests (or measures); tests for multi-locus interactions are then conducted based on the subset of SNPs detected in the first step (). Comparing to exhaustive approaches, stepwise algorithms usually are much faster, and may perform reasonably well for diseases with some marginal effects. On the other hand, stepwise search procedures may not be able to find interactions involving loci with small or no marginal effects. Similarly, methods based on stochastic search or machine learning algorithms cannot guarantee to find all significant interactions. In this article, we propose an algorithm called Epistasis Detector based on the Clustering of relatively Frequent items (EDCF) to detect multi-locus epistatic interactions in casecontrol studies. EDCF adopts the stepwise search strategy and starts with twolocus interaction models. It groups all genotype combinations into three clusters, representing frequent genotypes in cases, frequent genotypes in controls and the remaining genotypes. Items in the three groups for higher order interactions are then constructed sequentially. The significance of the final partitions can be evaluated by Pearson's  2 test. Extensive experiments on simulated data show that EDCF is faster and more powerful, in general, in finding the epistatic interactions than some of the recently proposed methods including MB-MDR, BOOST, SNPRuler and epiMODE. By applying the algorithm on a real genome-wide casecontrol data set for age-related macular degeneration (AMD), some genotype combinations have been found that are significantly enriched in the cases.
METHODS AND MATERIALS
NotationsWe assume all SNPs are diallelic and a genotype is encoded as 0, 1 or 2 according to the number of copies of the minor allele present at each SNP locus. For example, suppose A is the major allele and a is the minor allele at SNP locus A. The genotype A/A, A/a and a/a are encoded as 0, 1 and 2, respectively. For a casecontrol GWAS study, given the genotype data at M SNPs of N individuals with their dichotomous disease status, we use S to denote the ordered set of the M SNPs, s i to denote the i-th SNP in S, f m (s i ) to denote the minor allele frequency at s i and g i (j) to denote the genotype of the j-th individual at s i. Let N a and N u denote the number of affected individuals (i.e. cases) and the number of normal individuals (i.e. controls), respectively. Let (v 1 ,...,v d ) be a d-locus genotype combination at s i 1 ,...,s i d. Let n a v 1 ,.
..,v dand n u v 1 ,.
..,v dbe the number of affected and unaffected individuals with genotypes (v 1 ,...,,...,v d denote the population frequency of (v 1 ,...,v d ), which can be obtained based on genotype frequencies at each locus when assuming linkage equilibrium among all the involved loci. Let p v 1 ,...,v d denote the penetrance of (v 1 ,...,v d ) (i.e. the probability of being affected given the genotype combination). The population prevalence p can then be calculated as:
Genotype combination clusteringThe primary goal of association analysis is to find SNPs with allele and/or genotype frequencies in cases that are significantly different from those in controls. Many factors, including effect size, allele frequency, linkage disequilibrium between markers and disease loci, as well as sampling errors, may affect the distribution. The underlying assumption is that at the disease loci, the penetrance of their genotype combinations has drastic differences (seefor an example.) One can view the genotype combinations with penetrance greater than the population prevalence as high-risk combinations, as shown in bold with grey background in, while the others are regarded as low-risk combinations. However, in practice, one cannot directly use the assumption because the true disease genes/SNPs as well as their penetrance tables are unknown. Instead, we have to rely on the observed distributions of genotype combinations in cases/controls, usually organized in a contingency table (e.g.). A popular program, MDR () adopts a simple strategy in defining high/low-risk genotype combinations, by comparing the case/control ratio of each genotype combination with the overall case/control ratio. However, because of random sampling errors, this simple method may not work well in practice, especially with combinations whose case/control ratio is close to the overall ratio () , as illustrated in. Therefore, MDR may fail to detect such interactions. To prevent such cases, in this article, we propose to partition all genotype combinations into three groups, defined as G 0 , G 1 and G 2 , where G 0 contains all combinations that occur significantly more frequently in cases than in controls (presumably high-risk combinations); G 2 contains those occurring significantly more frequently in controls than in cases (presumably lowrisk combinations); and G 1 contains the others. To do so, we first need toHere, f m (A) = f m (B) = 0.4 and the population prevalence P = 0.024. The entries in bold with grey background are the high-risk two-locus genotype combinations, and the remaining are low-risk combinations.Counts in controls are in the brackets. N a = N u = 400. The entries in bold with grey background are the ones with ratios greater than N a /N u , therefore, regarded as high-risk combinations by MDR. And the others are low-risk combinations. The classification by MDR may not be consistent with the underlying penetrance (e.g. genotype combinations ').Page: 7 512
Detecting genome-wide epistasesderive some thresholds for declaring significance. Considering a genotype combination (v 1 ,...,v d ) at d loci s i 1 ,...,s i d , under the null hypothesis that the penetrance p v 1 ,...,v d is the same as the population prevalence p, the number of cases n a in the contingency table corresponding to (v 1 ,...,v d ) should follow a Binomial distribution n a  B(n = n t ,p a = N a /(N a +N u )). (For brevity, we omit the subscript 'v 1 ,...,v d ' from the notations in this section when it is implied in the context.) Similarly the number of controls n u  B(n = n t ,p u = N u /(N a +N u )). For a given significance level  s (e.g.  s = 0.05), let T a denote the critical value corresponding to  s for cases, i.e. Pr(k > T a |n t ,p a ) <  s. T u is defined similarly for controls.
..,v d ) is a relatively frequent item under  sin cases, and if n u > T u , (v 1 ,.
..,v d ) is a relatively frequent item under  s in controls.Based on the above definitions, for a given  s and for a set of SNPs, we define G 0 as the set of relatively frequent items in cases, G 2 as the set of relatively frequent items in controls, G 1 as the set of all other genotype combinations.
Evaluation of interactionsOnce all genotype combinations of d SNPs have been grouped into G 0 , G 1 and G 2 , a 32 contingency table (Supplementary) can be easily obtained, where the rows are the three groups and the columns are cases and controls. The  2 statistic with 2 degrees of freedom (), denoted as X 2 2 (i 1 ,...,i d ) here, can be used as a measure of significance for the partition. Intuitively, a group of SNPs with high X 2 2 may represent a group of interacting SNPs. However, this is not always true, because it is possible that some SNPs in the group might be redundant (e.g. when they do not affect the assignment of the three groups). To avoid such cases, we define an interaction module as a smallest possible significant SNP subset.Definition 2. If the following conditions are satisfied, (s i 1 ,.
..,s i d ) is an interaction module under the significance level :(1) the P-value of X 2 2 (i 1 ,...,i d )  ;(2) there is no subsetWhen there are many interaction modules, biologists may only be interested in the k most significant ones. In the next subsection, we propose an algorithm called EDCF to find the top-k significant genome-wide multi-locus interaction modules for a given d.
AlgorithmWe develop an iterative algorithm to search for the top-k significant d-locus interaction modules. The numbers of SNPs in current GWAS range from several hundreds of thousands to a few millions. For interactions involving d (d  3) loci, it is impractical to exhaustively search the whole space. In order to obtain the top-k significant d-locus interaction modules, we first obtain the top-kf s significant (d 1)-locus interaction modules (where f s  1 is a scale factor), with the assumption that some subsets of a significant interaction module will also be ranked high. The algorithm recursively searches the interaction space with smaller numbers of SNPs until d reaches 2, in which case all 2-locus genotype combinations will be evaluated. We stop at 2-locus interactions, because with an efficient implementation it is feasible to examine all pairwise SNPs for current GWAS. The significance of interaction modules is evaluated based on the X 2 2 statistic defined earlier, with appropriate adjustments for multiple testing (see next subsection). An efficient implementation of the algorithm, which takes advantage of bitwise operations () and a binary minimum heap structure, is available from the first author's website. The details of the algorithm and the analysis of its properties can be found in the Supplementary Material.
Type I error controlA challenge in epistasis analysis for GWAS is to appropriately control type I errors in the presence of multiple comparisons. Permutation tests and Bonferroni corrections are the two commonly used approaches for correcting the multiple testing problem. For EDCF, there are two levels of comparisons. The first level is due to the fact that there are M d d-locus combinations for a dataset with M SNPs. The second is related to the following fact.where M d corresponds to the Bonferroni correction for multi-locus combinations and  0 can be chosen from permutation tests for different d values on small datasets to ensure the overall significant level at 0.05.
Experimental designTo evaluate the effectiveness of EDCF, we perform extensive simulation experiments using different disease models and compare its power with that of some recently proposed approaches including MB-MDR (), BOOST (), SNPruler (), epiMODE (), as well as the naive 2-locus  2 test (ChiSQ). The procedure to generate background SNP genotypes is the same as the one used in previous studies (e.g.). For each SNP s i , its minor allele frequency f m (i) is first sampled uniformly at random from. Then the genotype g i (j) of an individual j is generated based on the allele frequency by assuming HardyWeinberg equilibrium. Finally, the genotypes at the disease loci for cases and controls are generated according to disease models, which will be described in next subsection.
Disease modelsIn our simulation experiments, we consider two types of disease models: epistasis models with and without marginal effects, and consider interactions with two or three SNPs. A disease model can be defined either by specifying the penetrance tableor by specifying the odds table. The odds of a genotype combination (v 1 ,...,v d ) is defined asIn theory, one can arbitrarily assign a penetrance (or odds) value to a genotype combination. In practice, many researchers only focus on constrained models. In many cases, there are only two free parameters, one representing baseline effect and the other representing additional effect relative to the baseline (e.g. Supplementary Tables S2 and S5). Even with two parameters, it is still hard to directly assign their values. Instead, one usually can specify the population prevalence p and another factor (either genetic heritability or marginal effect), and then numerically solve the two free variables based on their relationship for a given disease allele frequency. The genetic heritability h 2 is defined asPage: 8 512
M.Xie et al.The definition of the marginal effect size  of a disease locus is the same as the one used in Zhang and Liu (2007).Once the penetrance/odd table is resolved, the conditional genotype distribution given a disease status can be calculated and genotypes of cases and controls at these loci can be generated accordingly. For two-locus models with small marginal effects, we consider Models 14 (Supplementary). Model 1 involves two-locus multiplicative effects (). Model 2 is model Ep-6 in, which has been used as a model for handedness and the color of swine. Model 3 corresponds to model M86 in Li and Reich (2000) and Model 4 is a well-known XOR model (). The same models have also been used in previous studies (). For a fixed minor allele frequency f m of a disease-associated SNP, the parameters  and  of Models 14 in Supplementary Table S2 can be solved based on the population prevalence p and genetic heritability h 2. For two-locus models without marginal effects, we choose the same 60 two-locus pure epistasis models (Supplementary Tables S3 and S4 ) as those inin our simulation study. For three-locus models, we consider one with marginal effect (Model 5 in Supplementary) and one without marginal effect (Model 6 in Supplementary). Model 5 has some marginal effects, which is essentially the same as Model 4 in Zhang and Liu (2007). To be consistent with the original paper (), we use the marginal effect size to control the disease effect of Model 5. Model 6 is proposed by, which yields maximum genetic heritage h 2 with no marginal effect for the population penetrance p  (0,1/16] with minor allele frequency f m = 0.5. To further evaluate the effect of linkage disequilibrium (LD) between markers and disease SNPs on the detection power of each approach, we consider two scenarios in our experiments. We either randomly insert the disease SNPs themselves into the background genotypes, or embed SNP markers of the same frequencies but in LD (r 2 = 0.7) with the disease loci.
Statistical powerIn comparing the performance of different algorithms, we adopt the same measure of discrimination power proposed by, which is defined as n c /n, where n c is the number of replicates in which the true interaction loci are detected by the algorithm and n is the total number of replicates. The true interaction loci are detected if the set is the most significant one and its P-value is smaller than the predefined threshold for all the programs except epiMODE. epiMODE does not output the significance levels of epistasis modules. Therefore, if there is a module in its output that contains and only contains the embedded loci, epiMODE is considered to be successful in detecting the true epistasis. Only algorithms that can explicitly output d-locus interactions on d-locus disease models are compared against one another. In our simulation study, we consider different sample sizes with the balanced design (i.e. N a = N u ). For EDCF, we set  s = 0.05, k = 20 and f s = M/k unless otherwise stated.
RESULTSWe first discuss the control of false positive rates using simulated background genotype data, then compare the performances of EDCF, MB-MDR, BOOST, SNPruler, epiMODE and ChiSQ on different disease models. At last, we present the results of EDCF on a real GWAS dataset. The programs of MB-MDR (C++ implementation), BOOST (64 bit), SNPRuler and epiMODE are downloaded from the websites of their authors. Recall that MBMDR is a recent extension of MDR, BOOST is a fast exhaustive search approach to detect two-locus interactions, SNPRuler uses rule inference and can deal with three-locus and higher order interactions, and epiMODE is a recent extension of BEAM using stochastic
False positive rateWe set the significance level  =  0 / M d and test EDCF on simulated genotype data without any disease loci embedded to obtain the false positive rate. One thousand datasets are generated and the false positive rate is defined as n f /1000, where n f is the number of datasets from which EDCF reports one or more interaction modules. Each dataset consists of 2000 SNPs (i.e. M = 2000) and 800 individuals (400 cases and 400 controls). The test results () show that if  0 is set 0.02 for d = 2, 0.002 for d = 3 and 0.00002 for d = 4, the overall false positive rate of EDCF is <0.05. Therefore, in the following simulations, we let  0 = 0.02,0.002,0.00002 for d = 2,3,4, respectively, to control the overall false positive rate of EDCF. To properly control the false positive rates for programs MBMDR, BOOST, SNPruler and epiMODE, we mainly follow the recommendations from the original authors while considering the number of SNPs (mostly 2000 SNPs in our tests). MB-MDR uses permutation tests to control type I errors and its significance level is set to be 5%. By default, BOOST outputs all two-loci interactions with   30 (definition see), which corresponds to an unadjusted P  4.8910 6. SNPRuler outputs the top-k rules that contain d loci (k is set to be 20 in the following tests). The rules are then filtered using an unadjusted P-value of 1.510 7. ChiSQ uses the same threshold value as that of SNPRuler. epiMODE does not output the P-value and does not allow users to change its threshold. We empirically evaluate the false positive rates of all the approaches using the significance level thresholds defined above on 1000 replicates with no genetic effect, each with 2000 SNPs, and 400 cases and 400 controls (For MB-MDR, the number of SNPs is decreased to 100 so that the test can be completed in a day). The false positive rates of EDCF, MB-MDR, BOOST, SNPRuler, Page: 9 512
Detecting genome-wide epistases
Two-locus disease modelsFor the four two-locus disease models (Supplementary) with marginal effects, we adopt the same parameters as those in, namely, h 2 = 0.03 for Model 1 and h 2 = 0.02 for Models 2, 3 and 4. Minor allele frequencies are the same for both loci at three levels: f m = 0.1, 0.2 or 0.4. We first compare the performance of EDCF and MB-MDR on a small dataset with 100 SNPs. The results inshow that the power of EDCF varies for different  s , and in most cases EDCF performs the best when  s = 0.05. In such a case, EDCF outperforms MB-MDR for Models 1 and 3, especially when f m = 0.1 for Model 1. In other cases, EDCF and MB-MDR have similar performance. When the number of SNPs gets larger, MB-MDR becomes extremely slow. We cannot finish MB-MDR on the large datasets with 1000 SNPs within a reasonable amount of time. We further test the performances of EDCF, BOOST, SNPruler, epiMODE and ChiSQ on the large dataset with 2000 SNPs. The test results are illustrated in. Not surprisingly, the power of all algorithms improve significantly when the sample size increases from 800 to 1600 and when r 2 changes from 0.7 to 1.0. For Models 1 and 3, the power of most algorithms increases when the minor allele frequencies of the disease associated markers vary from 0.1 to 0.4. The trends are not that obvious for Models 2 and 4. It is not clear why BOOST shows a different trend for Model 1, although the trend is consistent with the results in their original paper (). When N = 800 and r 2 = 0.7, all algorithms perform poorly; but the power of EDCF is the highest except a few cases where the power is comparable with BOOST (e.g. Models 2 and 4 when f m = 0.4). For all other cases, EDCF also achieves the highest or comparable power. Many of these differences in power are statistically significant (as measured by the z-score test with P = 0.01). For example, EDCF significantly outperforms BOOST in 28 out of all 48 parameter combinations, while they are comparable in the remaining cases. For many models and parameter settings, the power of ChiSQ is only a little bit lower than that of EDCF, and it is actually more effective than all other complicated approaches. BOOST only outperforms ChiSQ in some cases in Models 3 and 4. epiMODE and SNPRuler are not very stable and have no discrimination power under some parameter sets. In addition, we test the five programs on the 60 two-locus epistasis models (Supplementary Tables S3 and S4) without marginal effects, which were also used in. The genetic heritability h 2 varies from 0.025 to 0.4 and f m from 0.2 to 0.4. For each model, we fix the sample size to be 800 with a balanced design and only consider the disease SNPs themselves. The experimental results are shown in Supplementary. On this dataset, when h 2  0.1, EDCF, BOOST, SNPRuler and ChiSQ have strong discrimination power, all of which reach or nearly reach 100%. However, when h 2 < 0.1, the power of these algorithms decreases significantly. To our surprise, epiMODE has no power on these 60 models under the above parameter settings, which may suggest that it has some limitations in capturing the two disease SNPs as the interaction set.
Three-locus disease modelsSince we only test programs that can explicitly output all three loci, BOOST is dropped from further comparisons because it can only deal with two-locus interactions. Exhaustive search for threelocus epistatic modules using three-locus  2 test is time consuming. Therefore, we only test the performance of EDCF, SNPRuler and epiMODE for three-locus interaction detections. For Model 5, the sample size N varies from 2000 to 4000 and the allele frequency f m varies from 0.1 to 0.5. The corresponding parameter l in the odds table of Model 5 is set to be 4, 1.5, 1, 0.7 and 0.5 for f m = 0.1, 0.2, 0.3, 0.4 and 0.5, respectively. All other parameters are kept the same. The effect parameters  and  in Model 5 (Supplementary) are determined numerically [for details see Zhang and] to keep the marginal effect size fixed (0.2). For Model 6, the sample size N varies from 400 to 800 with a fixed allele frequency of 0.5 and the population prevalence P = 0.01. The experimental results on Models 5 and 6 are shown inand b, respectively.shows that when the allele frequency f m is small, all algorithms have no or little discrimination power. In all other cases, EDCF shows strong power and significantly outperform SNPRuler and epiMODE, except in the case of N = 4000,f m = 0.5 and LD r 2 = 1.0 where SNPRuler shows comparable power. For Model 6,indicates that EDCF is powerful even when LD r 2 = 0.7 and N = 400 and it outperforms SNPRuler under all parameter settings. epiMODE shows no power on this three-locus pure epistasis model.
Running timeWe compare the running time of different algorithms by varying the sample size N and the number of SNPs M. Experimental results show that with a fixed number of SNPs, the running time of all algorithms increases linearly when the sample size N increases (Supplementaryand c), except epiMODE, whose running Page: 10 512time is not affected by the sample size. For a fixed sample size, the running time of all algorithms increases quadratically when M increases (Supplementaryand d). Supplementaryalso shows that for two-locus detection, the running time of EDCF, BOOST and ChiSQ has no much differences. In contrast, MBMDR, SNPRuler and epiMODE are much slower. For three-locus interaction detection, EDCF is much faster than SNPRuler and epiMODE.
M.Xie et al.
Test on a real GWAS datasetAMD is the leading cause of blindness for people over 50, and it is a common eye disease that is associated with aging and gradually destroys sharp, central vision. We apply EDCF on an AMD dataset (For the AMD dataset,reported two SNPs (rs380390 and rs1329428) that were associated with AMD, based on the allelic association test with 1 degree of freedom. The genotype-based  2 test employed by EDCF also ranked rs380390 and rs1329428 as the top two SNPs, whose unadjusted P-values are 1.7510 6 and 4.6110 6 , respectively. However, they did not meet our significance requirement after Bonferroni correction. Similar conclusions have been reached byand. EDCF has found no significant twolocus interaction modules, but has found some three-and fourlocus interaction modules. Though rs380390 does not reach the significance level based on single-locus test, EDCF does find it in a significant three-locus interaction module (rs380390, rs3781868, rs1036995), whose unadjusted P-value is 8.010 18. rs380390 is located in gene CFH on the long arm of Chromosome 1, which encodes a protein that has an essential role in the regulation of complement activation. rs3781868 is on gene NPAT, located at 11q22-q23. Protein NPAT is required in the progression of G1 and S phases of the cell cycle. rs1036995 is on gene PCDH9, which is located at 13q21. Gene PCDH9 encodes a cadherin-related neuronal receptor that is putatively involved in specific neuronal connections and signal transduction.
Page: 11 512
Detecting genome-wide epistases(a) (b)EDCF has also detected other significant three-locus and fourlocus interaction modules: (rs1458402, rs2207768, rs4901408), (rs1476623, rs6967345, rs1408120, rs10506115) and (rs595113, rs1569651, rs2031175, rs9300104) whose unadjusted P-values are 8.810 18 ,3.210 24 and 4.910 24 , respectively. rs2207768 is in gene NRG3 on Chromosome 10, which is a member of the neuregulin gene family and has been reported to be a susceptibility locus for schizophrenia and schizoaffective disorder. rs1476623 is in gene NXPH1 located at 7p22, which was reported being associated with Neuroticism to some extent (). rs1408120 is in gene PTPRD located at 9p23-p24. The protein encoded by PTPRD is a signaling molecule that regulates cell growth procession. rs2031175 is in gene KANK1 located at 9p24. rs9300104 is in gene RNF141 located at 11p15, which encodes a protein being involved in proteinDNA and proteinprotein interactions. Though the validation of relationship of these modules and AMD is beyond the scope of this work, the significant enrichment of some genotype combinations from these modules in AMD cases implies that they might interact and/or be associated with AMD. In 1000 permutation tests limited to these loci, the P-values of these four interaction modules are at levels of 3, 3.4, 3.1, 4.5%, respectively. The clustering details of genotype combinations of these four interaction modules can be found in Supplementary Tables S7S10.
DISCUSSIONBy partitioning all d-locus genotype combinations into two groups, MDR () significantly reduces the dimensionality of the d-locus genotype combination space from 3 d to 2, which potentially improves its detection power. However, the simple partitioning method utilized by MDR may not work well in practice, especially when the case/control ratios of some genotype combinations are close to the overall ratio. MB-MDR () and RMDR () are two recent extensions of MDR to address this problem. The authors propose to separate all multi-locus genotype combinations into a high-risk group, a lowrisk group and an unknown risk group. To determine which group a genotype combination belongs to, MB-MDR uses the  2 test and RMDR uses Fisher's exact test. In general, MB-MDR and RMDR outperform MDR, especially in the presence of low minor allele frequencies or genetic heterogeneity. However, Fisher's exact test for every genotype combination causes RMDR running even slower than MDR. Though MB-MDR is faster than MDR, the repeated cross-validations and permutation tests are still time consuming and prevents its usage in large-scale GWAS studies. Furthermore, the validity of  2 test requires that all cells in the contingency table are not very small (). When the minor allele frequency is very low, there are always many empty entries in a multilocus interaction contingency table, and the  2 test based grouping of MB-MDR will be inefficient. EDCF clusters the genotype combinations into three groups by assuming that the counts of multi-locus genotype combinations follow Binomial distributions. EDCF's clustering is more robust than MB-MDR's grouping and much faster than RMDR's grouping. In our experiments, EDCF outperforms MB-MDR when f m = 0.1 for Models 1 and 3 while in the other cases, EDCF has similar performance as MB-MDR. After the clustering, EDCF obtains a 32 contingency table and uses the  2 test to evaluate the significance of the interaction. By avoiding the cross-validation step, EDCF is much faster than MB-MDR and RMDR. Though EDCF generally outperforms other algorithms in the simulations, it has some limitations. Since EDCF separates genotype combinations into G 0 ,G 1 and G 2 based on clustering relatively frequent items, when h 2 is small, the disease-related genotype combinations may be not significant enough to be relatively frequent items. In such a case, all genotype combinations may be clustered into group G 1 , and EDCF will lose some power (e.g. in Supplementary, on some two-locus models with no marginal effects and low h 2 ). EDCF currently cannot directly address the problem of population stratification, which, if exists, may alleviate the type I error of EDCF. One should always test for and correct stratification (if it exists) before performing association tests. Finally, like many data mining approaches, EDCF has some parameters (such as k, f s ,  s and  0 ) that need to be specified by the user. The choices of these parameters may also affect the efficiency and/or power of EDCF. Although we have provided some default values in this article based on simulations, it would have been better if the parameters were chosen automatically based on input data. Parameter k is the number of interaction modules that one wishes to investigate, and f s controls the buffer size of interaction modules involving a small number of loci. Both parameters primarily depend on the available computational resources. Obviously, EDCF runs faster with a smaller f s , but with the price of possibly missing some real interactions. In our experiments, we chose  s and  0 according to simulations. These values might be too conservative for real data analysis (of the same sizes) because of correlations among SNPs and LD structures in real data. How to choose proper values for  s and  0 using real GWAS data could be computationally challenging. We will investigate this in our future work. In this work, we have only tested disease models with risk allele frequencies >0.1. Detecting rare SNPs in association studies is a much harder problem, which itself requires special attention and novel algorithms. Page: 12 512
M.Xie et al.
CONCLUSIONIn this article, we have developed a new algorithm called EDCF. Based on the clustering of relatively frequent items, EDCF groups all d-locus genotype combinations into three groups and uses the  2 statistic to measure significance. To control type I error rate, we have combined Bonferroni correction and permutation tests and proposed a fast multi-test correction method. By combining the advantages of the  2 test and MDR, EDCF is an effective and efficient algorithm for detecting epistatic effects for GWAS. Extensive experiments on simulated data illustrate that EDCF is more powerful, in general, in finding epistatic interactions than some of the recently proposed algorithms. In terms of efficiency, EDCF is comparable to BOOST in detecting two-locus interaction modules and is much faster than MB-MDR, SNPRuler and epiMODE. On a real genome-wide AMD dataset, several genotype combinations reported by EDCF are significantly enriched in cases, which may imply their involvement and association with AMD as interaction modules.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
