We previously reported the multi-modal Dynamic Cross Correlation (mDCC) method for analyzing molecular dynamics trajectories. This method quantifies the correlation coefficients of atomic motions with complex multi-modal behaviors by using a Bayesian-based pattern recognition technique that can effectively capture transiently formed, unstable interactions. Here, we present an open source toolkit for performing the mDCC analysis, including pattern recognitions, complex network analyses and visualizations. We include a tutorial document that thoroughly explains how to apply this toolkit for an analysis, using the example trajectory of the 100 ns simulation of an engineered endothelin-1 peptide dimer. Availability and implementation: The source code is available for free at
IntroductionMolecular dynamics (MD) simulations are a promising method to investigate the dynamical behaviors of various molecular systems with atomic details. Although recent advances in the computer technologies have realized the long-term simulations of large systems, the huge amount of trajectory data thus generated is not easily interpreted. In order to tackle this problem, analyses toolkits have been extensively developed, such as MDAnalysis (), Wordom () and VMD (). Long-term trajectories reflect complex behaviors of the local and global conformational changes of molecules. The distributions of atomic coordinates may be unimodal, i.e. adequately described by a cluster that is approximated by a single mean and standard deviation, or multi-modal, with several spatially distinct clusters, often slowly interchanging with relatively rapid fluctuations within each cluster. For example, a common multi-modal local motion in proteins results from the rearrangements of hydrogen bonds associated with transient flipping of side chains. The analysis of multi-modal motions, which are not each describable by a single Gaussian distribution, is not straightforward. We previously proposed a new analysis method, named 'multimodal Dynamic Cross Correlation (mDCC)' (), as a variant of the conventional Dynamic Cross Correlation (DCC) method (). Because DCC calculates the correlations between atomic motions, based on deviations from the averaged coordinate of each atom, it does not make sense when atoms undergo multi-modal motions. To characterize such multimodal motions, the mDCC method takes advantage of a Bayesian statistics-based pattern recognition technique (), and classifies the distributions of atomic coordinates into some clusters, or modes. We applied this method to analyze transcription factorDNA interactions, and found that many transient, multi-modal interactions are formed at interfaces between proteins and DNA. See Supplementary Materials S1 and S2 for details of the method. Here, we present an open source, easy-to-use toolkit for the mDCC method. This toolkit performs the full analysis techniques applied in our previous work (), and not only covers the correlative coefficients of multi-modal atomic motions, but also enables visualization of the results effectively as a heatmap and a complex network diagram, powered by standard software V C The Author 2016. Published by Oxford University Press.
2531This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com) and R (R Core). As the output files are simple tab-separated texts, users can apply their favorite software for visualization. Users can easily learn how to use this toolkit via the attached tutorial document, with the trajectory of the 100 ns simulation of an engineered endothelin-1 peptide dimer as an example.summarizes the mDCC analysis by using mDCC_toolkit, which is composed of two C  programs and several scripts. mDCC_tools handles a variety of trajectory file formats, such as Gromacs, AMBER and CHARMM, by taking advantage of MDAnalysis library (). In addition, files in PRESTO format () and tab-separated text files are also accepted. The analysis is performed by the following programs: mdcc_learn () recognizes the multi-modal motions of each atom from a MD trajectory. By parameter fitting of the Gaussian mixture model, the spatial distribution of the atomic coordinates is classified into some Gaussian functions, each referred to as a 'mode'. mdcc_assign () calculates the probability of the event that an observed atomic coordinate r i (t) belongs to a mode k (Gaussian element) for all i (atom) and for all k over the total time t. cal_mdcc.py () calculates the mDCC values between modes. The correlation map shows the maximum mDCC value of each pair of residues (upper triangle). The map also indicates the difference from the conventional DCC values in the lower-triangle, where the residue pairs with large differences from the DCC show multi-modal behaviors. The R-script for drawing this heatmap is included in this package.
ImplementationThe network diagram () provides a bird's-eye view of the interactions in the molecular system. Each node indicates each residue, and each edge indicates a pair of residues with highly positive mDCC values (0.5 is used in this example) and atomic contacts (the minimum distance 5 A  ). The toolkit generates files readable by Cytoscape, one of the standard programs for complex network analyses. In addition, the importance of each residue can be quantified by the betweenness values, which are calculated by nx_centrality.py. The betweenness quantifies the centrality of each node in the network. High betweenness values imply that the node plays an important role in the network (see the Supplementary Material S3). The simulation trajectory of the engineered endothelin-1 peptide dimer (PDB: 1t7h) in a 150 mM NaCl solution is included in this package, as a tutorial example. The 100 ns simulation in the NPT ensemble was performed by using Gromacs (). Users can readily trace our analyses starting from the trajectory file, in a step-by-step manner. The analysis revealed the transient interactions between Asp10 in chain A and Arg2 in chain B (the red edge in, which had mDCC and DCC values of 0.55 and 0.31, respectively. A transient flipping motion of Asp10 side-chain resulted in breaking the salt bridge with Arg2 (). See our previous publication for more details regarding the theory and application to a more complex molecular assembly, consisting of two transcription factors on a double-stranded DNA (). Although this method has been tailored for analyses of MD trajectories, it can be applied to any multi-dimensional distribution (see the software documentation).
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
K.Kasahara et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
