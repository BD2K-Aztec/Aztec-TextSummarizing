Motivation: Estimating a phenotype distribution conditional on a set of discrete-valued predictors is a commonly encountered task. For example , interest may be in how the density of a quantitative trait varies with single nucleotide polymorphisms and patient characteristics. The subset of important predictors is not usually known in advance. This becomes more challenging with a high-dimensional predictor set when there is the possibility of interaction. Results: We demonstrate a novel non-parametric Bayes method based on a tensor factorization of predictor-dependent weights for Gaussian kernels. The method uses multistage predictor selection for dimension reduction, providing succinct models for the phenotype distribution. The resulting conditional density morphs flexibly with the selected predictors. In a simulation study and an application to molecular epidemiology data, we demonstrate advantages over commonly used methods. Availability and implementation: MATLAB code available at https:// googledrive.com/host/0Bw6KIFB-k4IOOWQ0dFJtSVZxNE0/ktdctf.
INTRODUCTIONMany areas of research are concerned with learning the distribution of a response conditional on numerous categorical (discrete) predictors. The important predictors for characterization of this distribution are not usually known in advance, and there may be hundreds or thousands of candidates. Methods that attempt to accommodate interactions among these predictors become mired in the enormous model space. For example, in a moderatedimensional case involving p  40 categorical predictors, each with d j  4 possible realizations, considering all possible levels of interaction leads to a space of 4 40 % 10 24 possible models. Parallelization and technical tricks may work for smaller examples, but data sparsity and the sheer volume of models force us to consider different approaches. The conditional density may vary in more than just location;illustrated this in an application to the conditional density of blood glucose levels given insulin sensitivity and age. In the work that follows, we present a novel non-parametric Bayes (NPB) approach to learning conditional densities that makes use of a conditional tensor factorization to characterize the conditional distribution given the predictor set, allowing for complex interactions between the predictors. The particular form assumed for the conditional density gives rise to an attractive predictor selection procedure, providing support for distinct predictor selection steps. This addresses the challenges of high-dimensional data and produces conditional density estimates that allow assessment of tail risks and other complex quantities.
APPROACHThe primary goal of our work is to model the conditional density fyjx, where the form of this density for the response y changes flexibly with the predictor vector x. There is a large body of work devoted to this idea of density regression in settings involving x of dimension p 30, and such models have provided many options for that situation. We wish to develop techniques for problems involving much larger p, and ideally to scenarios where p41000. We want to provide a method that performs variable selection, assesses the probability of a predictors inclusion in the model and provides easily interpretable estimates of the impact of different predictors. This problem has been addressed with variations on the finite mixture model,This is the basic form of the hierarchical mixture of experts model [HME, Jordan and. In this representation, K represents the number of contributing parametric kernels K; h  distinguished by parameters h. The h provides the weights in this convex combination of kernels, where P K h1 h  1 and  1 ,. .. , K  2 S K1 , the K  1 probability simplex. The most straightforward forms rely on a pre-specified K and include the predictors x in a linear model for the mean. HME methods in the frequentist literature have often relied on expectation maximization (EM) () techniques, which can suffer from overfitting (). EM approaches in the Bayesian literature seek to avoid this;used EM to find maximum a posteriori estimates using the inherent Bayesian penalty against complexity to regulate those estimates. In addition, the Bayesian framework allows the quantification of uncertainty about the parameters in the model. *To whom correspondence should be addressed. NPB methods, such as the Dirichlet Process, prompted techniques like that in,presented an approach using mixtures of transformed Gaussian processes. These and other methods of Bayesian density regression have proven successful, but as datasets have grown in size and complexity, these approaches encounter difficulties. This is even more daunting when we consider interactions of discretely valued predictors because we must consider the factorial combinations of those levels. The associated challenges of variable selection and dimensionality reduction have been explored in Bayesian density regression. Dimensionality reduction has a goal similar to that of variable selection, that of finding a minimal set of predictors that account for variation in the response. The logistic Gaussian process approach ofincludes a subspace projection method to reduce the dimension of the predictor space.developed a technique for Bayesian sufficient dimensionality reduction based on a prior for a central subspace. Although all of these approaches have demonstrated their utility, they do not scale easily beyond p  30 predictors. There are also techniques like the random forest () that aim to find parsimonious models for density estimation involving a large number of predictors. One disadvantage to this type of 'black box' method is in interpreting the impact of specific predictors on the response. Bayesian additive regression trees (BART) () focus on modeling the conditional mean and assume a common residual distribution. As previously noted, there are many questions that require learning about more than just the conditional mean of the response. Another flexible approach is the Bayes network (BN), which considers the predictors and the response on equal footing to develop a parsimonious network linking all variables (). The conditional distribution of the response given the predictors can be derived from such a model, using developed BN techniques for mixed continuous and discrete data (). A BN does estimate a joint density for all of the predictors; the effort to estimate this very high-dimensional nuisance parameter is unattractive, if the conditional density is of primary interest. We propose an approach based on a conditional tensor factorization (CTF) for the mixing weights. As in the DDP and certain of the kernel stick-breaking methods, the predictors influence the mixing weights for this CTF model. The conditional tensor factorization facilitates borrowing of information across different profiles in a flexible representation of the unknown density. We focus our attention on situations involving continuous responses and categorical predictors.
METHODSWe consider a univariate response y and a vector of p categorical predictors x  x 1 ,. .. , x p , where the j th predictor x j can take values 1,. .. , d j. We would like a model that can flexibly accommodate conditional densities that change in complex ways with changes in the predictor vector. In addition, we must consider situations where p ) n; there may be no exemplars for certain predictor vectors. To address this, we propose a Tucker-style factorization with the following general model for the conditional density fyjx:, ... , hp xy; h1, ... , hp  where h1, ... , hp x  Y p j1 j hj x j : 2This form uses the maps j , j  1,. .. , p to associate the predictor vector x with a separate weight for each combination of the latent identifiers h 1 ,. .. , h p and thus with each of the k 1      k p kernels in the representation. The x th j row of j is a vector of weights, one for each h j  1,. .. , k j. These weights j 1 x j ,. .. , j kj x j  are all inand P kj hj1 j hj x j   1. The number of latent predictors p, is the same as the number of observed predictors, but the form of the j hj may mean that different predictor vectors x result in the same sets of weights 1, ... , 1 x,. .. , k1, ... , kp x. This provides the mechanism for dimension reduction that we will develop. An important distinction from the HME is in the treatment of the weights h1, ... , hp x as a tensor factorization and the use of kernels y; h1, ... , hp , which do not depend on the predictor vector x. This is similar in spirit to the classification approach proposed by Yang and Dunson, 2012, but we address the problem of estimating an infinite-dimensional conditional density rather than the finite-dimensional problem of a categorical response distribution. In addition, we make distinct improvements in predictor selection to allow the approach to scale to larger numbers of candidate predictors. Tucker decompositions () and other kinds of decompositions have appeared in the machine learning literature before.developed an 'infinite' Tucker decomposition making use of latent Gaussian processes rather than explicit treatment of tensors and matrices; in comparison, the proposed method uses the Tucker decomposition to characterize the mapping of predictors into weights. Other factorizations have been used for similar problems;presented a reducedrank approach for table data, but this approach focused on the development of estimates for the mean of a continuous response. Chu and) derive an approach for partially observed multiway data based on a Tucker decomposition; their objective is to learn about the latent factors driving observations rather than the characterization of the response distribution or variable selection. The collection across j  1,. .. , p forms a 'soft' clustering from the d 1      d p possible realizations of the x vector to each of the M  k 1      k p possible latent vectors. This means that a predictor vector x is not exclusively associated with one of the M kernels, but has a weight for each kernel determined by the product in (2). This allows each observation to contribute some information about the influence of each of the p sites, and thus allows borrowing of information across different combinations of h 1 ,. .. , h p. In settings of extreme sparsity, where most of the possible predictor vectors are not represented, this is an attractive property. This uses many fewer parameters than a full factorial representation and is still flexible enough to represent complex conditional distributions. Finally, we assume normal kernels:This resembles other mixture-based approaches to density estimation as originally specified in (1), but the proposed model for the weights provides the desired support for sparsity and information borrowing as previously discussed. In addition, the kernel-specific means h1, ... , hp and precisions h1, ... , hp are not functions of the predictor vector.shows a conditional dependence graph for the model parameters and the observed data.
Predictor selectionThe first task in learning the conditional distribution is to identify those predictors that provide the most information about the response; the second task is to learn the form of the conditional distribution given this set of informative predictors. The k 1 ,. .. , k p parameters indicate the number of latent levels for each predictor. Because each k j can take on the values 1,. .. , d j , the possible combinations of different values for k 1 ,. .. , k p can be immense, and including these as parameters in an Markov chain Monte Carlo (MCMC) sampler is not an attractive option. In the notation of (3), predictors exclusion is equivalent to identifying those sites j such that k j  1. Consequently, predictor vectors that differ only at the j th position will have the same conditional density, and the j th predictor can be excluded from the model. To identify those j such that k j  1, we use a predictor selection step based on a special form of the j. For each j  1,. .. , p and each x j  1,. .. , d j , we specify the j so that j hj x j   1 for exactly one h j and j hk x j   0 for all h k 6  h j. This form for the j associates each predictor vector x with exactly one of the M  k 1      k p kernels by giving that particular kernel a weight of one. That is, if the set of maps j , j  1,. .. , p is such that 1 h1 x i1   1,. .. , p hp x ip   1 for values h 1 ,. .. , h p , then only the kernel indexed by h 1 ,. .. , h p will have non-zero weight. For computational convenience, we use conjugate priors and make the simplifying assumption that the prior precision of each kernel mean h1, ... , hp is the same as the kernel precision h1, ... , hp for each h 1 ,. .. , h p , so that h1, ... , hp j h1, ... , hp $ N0, 1 h1, ... , hp  and h1, ... , hp $ Gamma t =2, t =2. Because the proposed form for 1 ,. .. , p maps each predictor vector to exactly one of the M groups, we can collect the observations that map to each of the M groups and compute a marginal likelihood for each group. Given the prior structure, the simplifying assumptions and the clusterings defined by the 1 ,. .. , p , the log marginal likelihood for the m th group iswhere Y m is the vector of responses, N m is the number of observations in group m and J Nm is a N m  1 vector of 1's. The sum of these M approximated log-marginal likelihoods gives a score for the particular levels of k 1 ,. .. , k p and the particular 1 ,. .. , p. Using these scores for different levels of k 1 ,. .. , k p and different hard-clustering forms of 1 ,. .. , p , we can find those predictors with influence on the conditional density. It is not generally feasible to evaluate every possible set of k 1 ,. .. , k p , even for moderately sized problems. Instead, we begin with the null model, where k 1  k 2 . ..  k p  1 and propose random changes to the different k j and the associated j. The randomly proposed changes are of two types: 'split' and 'merge'. A 'split' change at position j means changing the j map so that the distinct x ij map to more levels. For example, assume that the j th position has three observed levels (d j  3) and the current form of j is such that all three observed levels of x j are mapped to the same level. In this case, k j  1 and j . Conversely, a 'merge' move will decrease the number of mapped levels by one; using the definitions above, one such merge move would be to replace j  with j. If site j already has k j  d j , then only merge moves are considered. Likewise, if site j already has k j  1, then only split moves are considered. We use a Metropolis step to accept or reject the proposed change; the stochastic search proceeds as:,. .. , p; compute the marginal likelihood ML c .(ii) For j  1,. .. , p, draw from all possible split and merge moves with equal probability. For a split, propose k  j  k j  1; for a merge, propose k  j  k j  1.(iii) Compute ML  for the proposed configuration; accept the move with probability 1 ^ ML  ML c. If the new configuration is accepted, set(iv) After T iterations of steps 2-3, compute inclusion probabilities(v) Retain those predictors such that p j 4; using  0:5 is equivalent to choosing the median probability model. This stochastic search is similar to). The approach we propose here is simple and appealing, but in our initial simulation studies we noticed a tendency for this search to choose overly complex models. Model selection was sensitive to the order in which the predictors were considered. When the important features were considered after many unimportant factors, randomly induced associations in the data and stochastic variation in the search led to complex models that were not improved by addition of the important predictors.To combat this tendency, we introduced a preliminary predictor identification step that considers each of the predictors in isolation. We can represent the entire stochastic search on the j th predictor with a d j  d j discrete-time Markov transition matrix derived from the acceptance and move probabilities defined above. We can then compute the long-run proportion of time that the chain spends in states such that k j 41. This can be done in an embarrassingly parallel fashion, and the computation of each p j proceeds quickly. For the simulation case, where d j  4 for all j, computation of each p j took $0.3 s. At the conclusion of this single-predictor search step, we arrange the predictors in descending order of these p j , retaining only those predictors such that p j 4, and proceed with the full stochastic search to identify a final predictor set.
Estimation after predictor selectionTo estimate the parameters in the model using the selected predictors, we introduce a prior precision 0 $ Gamma 0 =2, 0 =2 for each kernel mean h1, ... , hp $ N0, 0 , a prior for each kernel precision h1, ... , hp $ Gamma t =2, t =2 and separate Dirichlet priors for each weight vector j x j  $ Diri 1 kj ,. .. , 1 kj . To facilitate computation, we augment the model proposed in (3) with classification vectors z i that associates the i th observation with exactly one kernel and gives a complete-data likelihood that can be expressed as a product:The full conditional distributions are(1) h1, ... , hp j    $ N  h1, ... , hp ,   h1, ... , hp  1 , where:  h1, ... , hp  0  h1, ... , hp P N i1 1z i  h 1 ,    , h p   h1, ... , hp  f h1, ... , hp P N i1 y i 1z i  h 1 ,    , h p g=  h1, .
.. , hp(2) h1, , hp j    $ Gamma  =2,  =2, where:The updates for the h1, ... , hp , h1, ... , hp and j can be done blockwise, and the z i can be updated blockwise at each position j. Using the final predictor set and the full conditionals, we produce a posterior sample for the model parameters. This posterior sample allows us to compute conditional densities and credible intervals around those estimates for various combinations of the predictors.
DISCUSSION
Simulation studyTo assess the variable selection and prediction performance of the CTF, we conducted a simulation study, varying the number of training observations N 2 f300, 500, 1000, 1500g and using a consistent ground truth to produce simulated datasets with total number of predictors p  1000. In each case, the true model was based on three predictors at positions 30, 201 and 801, each with d j  4 levels and including three-way interactions among these predictors. The resulting marginal density is an equally weighted mixture of 64 Gaussians with different means and the same residual precision. In other words, an observation with x i, 30 , x i, 201 , x i, 801   3, 2, 1 is drawn from N 3, 2, 1 , 1 , and so forth for each of the 64 distinct predictor vectors. For each of 20 training sets, we produced selected predictor sets and posterior samples. We then made predictions for 20 validation sets drawn from the same underlying true distribution. As competitor methods, we used random forests (RF) and quantile regression random forests (QRF) (); these are implemented in the randomForest and quantregForest packages in R. BART, as implemented in the BayesTree package, was unable to run to completion on any of the training sets, though we were able to use BART with the real data example in Section 4.2. RF and QRF include predictor selection directly, and QRF directly addresses the idea of coverage proportion. BART is another MCMC-based approach, but it does not directly address variable selection, allowing us to investigate the impact of the large predictor space. The implicit cost in estimating the joint distribution of predictors and response made Bayes networks unattractive. We computed mean square prediction error (MSPE) as the average squared difference between the response value predicted by the model for a predictor vector from the validation set and the actual response value for that observation. We defined coverage proportion as the proportion of times that the 95% prediction interval for an observation in the validation set included the actual response value, averaged over the intervals for each posterior sample. When comparing performance with that of the competitors, we attempted to give those competitors whatever advantages we could provide. In the case of RF, this meant that we did two passes over the training data. The first pass identified important variables using the importance method in the randomForest package. We used the 'mean decrease in accuracy' style of importance; this measurement is derived from the impact of permuting out-of-bag data for each tree in the forest. We then fed those variables identified as important as a preselected set into a second run of RF. This generally improved the MSPE performance of RF. An analogous method was not available for QRF, so we could not treat that method in the same manner. In each of the 20 cases for p  1000 and training N  500, the CTF outperformed RF on mean square prediction error and showed comparable 95% coverage proportions to those derived from QRF; this is summarized in. The CTF and RF showed comparable accuracy in identifying important predictors, but RF tended to include many unimportant predictors. In contrast, the CTF produced no false-positive results, identifying the correct subset of predictors in each case. This performance is particularly attractive given the large number of possible interactions in the original predictor set. Both RF and QRF may have suffered because of the strong interactions present in these simulated data.
Molecular epidemiology applicationWe also consider an application to an epidemiology dataset, comparing CTF performance with that of the same competitor methods (RF, QRF and BART). The dataset concerns DNA damage to instances of different cell lines when exposed to environmental chemicals. The exposure types are hydrogen peroxide (H 2 O 2 ) and methyl methane sulfonate (MMS), and the remainder of the predictor set is genotype information on 49 428 single nucleotide polymorphisms (SNPs).provide extensive details on the original experiments. One hundred separate instances of each of 90 cell lines were exposed to each chemical and examined at each of three time points (before treatment, immediately after treatment and a longer time after treatment). The nature of the measurement is destructive; at the desired time interval, comet assay was performed on each cell and the Olive tail moment (OTM) () was recorded; this assesses the amount of DNA damage in the cell, with higher measurements indicating more damage. The cells from each line are genetically identical, but the resulting distribution of OTM has a different shape for each cell line. In addition, these distributions are different at the separate time points; generally, OTMs are smallest (least damage) before exposure to the chemical, largest (most damage) immediately after exposure and somewhere in-between after a longer recovery time. We computed empirical quantiles of the OTM for each cell line at each of the three time points and then derived a singlenumber summary w ij to tie these three quantile vectors together for cell line i and exposure j. The summary measure w ij 2 0, 1 is the value that minimizesHere, Q ij, N, h indicates the h=32 th quantile for the i th cell line's OTM distribution at the 'No treatment' time, with corresponding quantities for the 'Later' time point and the 'immediately After' time point for the j th exposure. The use of only the higher quantiles reflects our desire to learn more about the extremes of DNA repair. We used a logit transform to derive our final response y ij  log wij 1wij ; this is appropriate for the assumptions of the model. Negative values of the response indicate that the OTM distribution long after treatment is closer to the distribution right after treatment; positive values indicate that the 'long after' distribution is closer to the distribution before treatment. SNPs in genes thought to be associated with some aspect of DNA repair were genotyped, leading to data on 49 428 individual SNPs. Given the small number of cell lines and the fact that many individuals have two copies of the major allele for these SNPs, many of the SNP profiles were identical or had no individuals with two copies of the minor allele. We recoded the genotypes so that one indicated at most one copy of the major allele and two indicated two copies of the major allele. After recoding, we reduced the predictor set to those SNPs with distinct profiles, leaving 23 210 SNPs for analysis. We used leave-one-out cross-validation to assess the performance of CTF against the three competitors RF, QRF and BART. We ran the variable selection chain for 5000 burn-in iterations and computed inclusion probabilities from 10 000 samples. We ran the MCMC chain for 40 000 burn-in iterations and retained a sample of 20 000 iterations. Autocorrelation diagnostics indicated an effective sample size of 15 000. We used the same burn-in and posterior sample sizes for BART. As in the simulation study, we used the results from a first run of RF to seed a final run of RF. CTF showed consistent selection of the treatment (H 2 O 2 or MMS) as the most important predictor and selected a set of four SNPs (IGFBP5, TGFBR3, CHC1L and XPA) as predictors; information about these SNPS is summarized in. In contrast, RF chose the treatment variable in only 56 of the 180 crossvalidation scenarios and did not consistently identify any other predictors. Comparison with the competitor methods showed patterns similar to the simulation study;compares the results from each method. The interactions between the treatment and the various SNPs may be weak enough that they do not contribute to the same elevated MSPE that RF demonstrated in the simulation study. Even though the MSPE for RF was close to that for the CTF, the CTF was able to achieve lower MSPE while not sacrificing coverage performance. This improved performance offsets the CTF's higher computational time requirement.shows estimated conditional densities with 95% credible intervals from the full dataset given varying levels of the treatment and of the IGFBP5 SNP while holding the other three SNPs atthe 'Zero/One Copy' level, and illustrates how the conditional density changes in more than the conditional mean when the predictor vector changes. In this case, the interaction between MMS treatment and two copies of the major allele for this IGFBP5 SNP tightens the density markedly, although it has a more muted impact on the conditional mean. The change is less dramatic under the exposure to H 2 O 2. Here, the shift in the mean response as treatment and genetic profile change is less interesting than the difference in conditional variance; under treatment with H 2 O 2 , the mean response is slightly different than under treatment with MMS, but the tail probabilities are noticeably different.summarizes these differences in conditional mean, conditional variance and conditional 90 th percentile for each scenario. As suggested in, the medians of the conditional densities given the exposure (H 2 O 2 or MMS) are close, but in the tail of the distribution (the 90th percentile), the separation between the estimated quantile curves is larger. This varying shift in the 90th percentile reflects the interaction between the exposure and the level of the IGFBP5 SNP.
CONCLUSIONWe have presented a novel method for flexible conditional density regression in the common case of a continuous response and categorical predictors. The simulation study and real data example suggest that this conditional tensor factorization method can have better performance than other modeling tools when there is substantial interaction between the predictors of interest. The CTF does have a higher computational time requirement than the competitor methods, but the improvement in prediction accuracy and coverage still make the CTF an attractive method. A particularly appealing aspect of the CTF is predictor selection, which finds low-dimensional structure in the high-dimensional predictor set. This reduction to more parsimonious models yields a succinct description of the ways in which the phenotype varies given exposure and SNPs. Finally, a distinct advantage of the CTF is its ability to produce conditional density estimates. This property of the CTF provides insight beyond a simple conditional expectation and makes it possible to answer more complex questions about the relationship between the response and the predictors.
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Learning phenotype densities with the CTF at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
D.C.Kessler et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
