Motivation: The growing availability of full-text scientific articles raises the important issue of how to most efficiently digest full-text content. Although article titles and abstracts provide accurate and concise information on an article's contents, their brevity inevitably entails the loss of detail. Full-text articles provide those details, but require more time to read. The primary goal of this study is to combine the advantages of concise abstracts and detail-rich full-texts to ease the burden of reading. Results: We retrieved abstract-related paragraphs from full-text articles through shared keywords between the abstract and paragraphs from the main text. Significant paragraphs were then recommended by applying a proposed paragraph ranking approach. Finally, the user was provided with a condensed text consisting of these significant paragraphs, allowing the user to save time from perusing the whole article. We compared the performance of the proposed approach with a keyword counting approach and a PageRank-like approach. Evaluation was conducted in two aspects: the importance of each retrieved paragraph and the information coverage of a set of retrieved paragraphs. In both evaluations, the proposed approach outperformed the other approaches. Contact:
INTRODUCTIONIn recent years, the development of bioinformatics and information technology has coincided with the rapid growth of biomedical literature databases, and the rate at which more full-text scientific literature becomes available on the web is accelerating. The U.S. National Center for Biotechnology Information (NCBI, under the U.S. National Library of Medicine) has collected more than 20 million biomedical study abstracts in its free-access literature database, PubMed, which acts as a portal site for various biomedical journals and provides a literature search service for browsing and retrieving abstracts. The service helps researchers keep up-to-date on biomedical progress and discoveries, and also reduces the risk of redundant experiments. This overwhelming volume of information obviously defies manually exploration and, given time limitations, the ability of individuals and organizations to digest this flood of data is an issue of growing concern. Investigations into the automatic extraction of important information begun decades ago (). Recently, many text mining applications have been developed to raise * To whom correspondence should be addressed. efficiency and save time in literature reviews (Goetz and von der). GoPubMed () categorized PubMed search results into various topics to assist users in looking for articles relevant to their specific interests; Litlnspector () enhanced search results by highlighting keywords with various colors according to predefined keyword categories. GeneLibrarian () extracted specific information from PubMed abstracts to facilitate awareness of critical relationships between genes of interest. All of these applications use various methods to compile abstracts and present concise information. In the past, obtaining full-text articles could be very inconvenient. However, these days more and more full-text literature is available online via digital literature databases. PubMed Central (PMC) and PubMed (both established by the NCBI), differ mainly in that PMC is dedicated to collecting full-text articles in the life science, while PubMed collects abstracts only. Both services offer free access to their collections and the PMC database currently consists of nearly 900 life science journals. Following the increased availability of free full-text articles, text mining applications have allowed readers to peer into the main texts, providing full article searches which extract more complete and detailed information than would otherwise be available in the abstracts. However, directly applying tools designed for searching abstracts on a full-text corpus entails unacceptably high computation and performance costs. In recent years, new research has been proposed on full-text utilities. Lin (2009) compared search engine performance at various levels: abstract, whole article and sections of an article;studied keyword distribution and difference cross sections;investigated the performance of semi-automatic indexing on abstracts and full-text articles. All of these studies make clear that the development of tools for full-text use is a matter of great urgency. The advantage of applications which search full-text articles is that the main text is where the details of the research are addressed. However, this data inevitably is accompanied by redundant or trivial description material. From the perspective of text miming, the variety of elements (e.g. text, equations, figures, tables, etc.) is a significant challenge for full-text information extraction (), and information noise from redundant and trivial description may impair system performance. Abstracts contain much less information than the full-text articles, and they are wellstructured and helpful for readers to quickly ascertain a paper's purpose. An abstract briefly describes the research focus, methods, findings and main conclusion in a brief text. In this study, we propose an approach to assist readers in digesting full-text more effectively and efficiently. Effective andefficient reading requires a mid-sized text containing essential and detailed information. To generate this condensed text, we combine the respective advantages of an abstract and full-text article using text mining and summarization techniques, and propose a ranking framework to recommend important and relevant paragraphs. These paragraphs should be related to topics mentioned in the abstract, and contain complementary and detailed information. We then collect these paragraphs into a condensed text to assist readers. In Section 2, we describe the proposed ranking framework and a metric named paragraph relevanceinverse sentence relevance (PRISR), which is used to evaluate the importance of paragraphs. Section 3 describes the materials and experimental settings used in performance evaluation. Section 4 presents the results of two perspective evaluations and conclusions are drawn in Section 5.
J.-H.Chiang et al.
METHODSFirst, paragraphs related to the abstract are retrieved, with relatedness determined based on the degree of information overlap. This study proposes a metric called PRISR to score the importance of paragraphs. By ranking these retrieved paragraphs, we can obtain a set of important abstract-related paragraphs which complement the topic mentioned in the abstract. Rather than reading the entire article, users can first read the summary information from the abstract, and then derive complementary information from the set of paragraphs.illustrates the workflow of this concept.
PreprocessingAs mentioned above, a full-text article not only contains detailed research information but also text that is used to make the essay more complete and readable, such as transitional paragraphs connecting different subjects. This text usually does not provide crucial information, so the objective of preprocessing was to eliminate useless information and to compile the fulltext article in the required format.
Keyword extractionIn our application, keywords are a set of terms identified in the abstract and used to describe the topical information of the article (Do gan and Lu, 2010). Such keywords may constitute useful entries for linking an abstract sentence to specific paragraphs which describe similar or identical concepts/topics, or may serve as a concise summary for a given document. Through keywords, abstract sentences can be associated with paragraphs which contained the same keywords. In this study, abstract sentences containing keywords are called query sentences (QS). In information retrieval applications, one of the simplest possible approaches is to use a frequency criterion to select 'important' keywords inRules are used to extract keywords and each keyword is assigned an initial weight by rules' weight. a document. However, this method was generally found to give poor results, and interest turned to other methods. In recent years, several supervised machine learning algorithms have been proposed for classifying candidate terms as keywords (). However, the training phase of machine learning approaches requires extra training corpora and computational resources, rendering them less economic than rule based approaches. Using a combination of lexical and syntactic features, Hulth (2003) significantly improved keyword extraction performance over previously published results, suggesting that syntactic information may play an important rule in keyword extraction. In our observations, informative keywords usually appear as nouns or noun phrases. We thus designed a syntactic rule-based keyword extractor. The proposed keyword extractor identified keywords by part-of-speech (POS) tags and a set of syntactic rules. Our study used the Stanford Log-linear Part-Of-Speech Tagger () to tag the parts of speech of words in abstracts at the sentence level. After tagging, every abstract sentence would be turned into a sequence of POS tags. Terms or phrases which matched the patterns of our syntactic rules would be extracted as candidate keywords/key-phrases. In this study we considered only noun or noun phrases as candidates, and the syntactic rules were listed in. MeSH vocabulary also was included as keywords.
Weight assignment Keywords playthe role of linking abstract sentences to related paragraphs in the full text, therefore the selection of keywords will affect the referential value of retrieved paragraphs. For instance, general nouns usually represent general ideas and proper nouns represent more specific ideas. In terms of the referential value of retrieved paragraphs, proper nouns usually outperformed general nouns. To raise the Page: 1145 11431149credit of paragraphs with a higher referential value, we assigned weights to keywords and used them to score each paragraph. Each keyword gained was assigned an initial weight according to the syntactic rule it matched. General nouns, for instance, were common in descriptions and thus were given lower initial weights, while keywords having more specific meanings, such as proper nouns and compound nouns, were assigned higher initial weights. Weights were then adjusted according to an adjustment procedure shown in. Weight adjustment was performed to retrieve paragraphs which had more specific content. In general, the abstract is written in refined sentences to briefly summarize a complete research project, thus the focus of each sentence should be specific and easily distinguishable from the others, and keywords which differentiate these focuses could aid the retrieval of paragraphs associated with the specific concept contained in the sentence. For example, consider the following two sentences: " Despite the importance of this procedure, there is a little work on consistent evaluation of various GO analysis methods. " Especially, there is no literature on creating benchmark datasets for GO analysis tools.
Condensing biomedical journal textsThe terms in italics are keywords. The two sentences were both related to GO analysis, but consistent evaluation and benchmark datasets differentiated their focus, thus we raise the weights of these two terms to enhance their influence. At the end of preprocessing stage each query sentence would be represented as a set of tuples of keyword and weight,}, where t i is the keyword and w i is the weight assigned to t i .
Paragraph relevanceReaders develop awareness of the relationship of two pieces of text through semantic understanding, but semantic understanding is still a technical challenge for machines. In information retrieval applications, awareness of relationship among documents is achieved through keyword (information) overlapping. The basic assumption is that, the more keywords a query and a document share, the likely they are to be related, and this assumption forms the foundation for algorithm development for many IR systems and search engines. In this study, sentences taken from the abstract are regarded as queries for the retrieval of relevant paragraphs. To link query sentences to paragraphs, this study incorporated two considerations: how many concepts/ideas of a query sentence are addressed by a paragraph, and is the content of a paragraph dedicated to the concepts of the query sentence.The first consideration is keyword/information overlapping (IO). For a query sentence QS and a paragraph P, term coverage was defined as: TCover(QS,P) = |{t|t  QSt  P}| |QS|TCover indicates the proportion of keywords of QS appearing in a paragraph. Through TCover we can highlight paragraphs which share more keywords with QS; that is, paragraphs with a higher TCover score might convey more information related to a query sentence. In biomedical articles, abstracts are usually written in complex sentences and it is likely that multiple keywords will be mentioned in a single sentence. In this case, TCover would prefer introductory paragraphs because they tend to mention various keywords in their content. But, TCover was unable to reflect the value of paragraphs which focused only on a few keywords of QS. To resolve the issue, we designed an indicator to quantify a paragraph's specificity to QS. The specificity of paragraph P to QS was defined as:where S i is i-th sentence of P, and |P| is the number of sentences in a paragraph. To avoid promoting long paragraphs, the frequency of present keywords is normalized by the number of sentences in each paragraph. However, Equation (2) ignored the referential value of keywords; general keywords and informative ones were treated equivalently. To promote informative keywords, we introduced their weights into Equation (2) and defined weighted specificity as:where w j is the weight of keyword t j. Finally, the relevance score of a paragraph to the query sentence is defined as: PR(QS,P) =TCover(QS,P)WS(QS,P)Subsequently, we could use relevance score as a measure to evaluate a paragraph's relevance to a query sentence.
PRISRIn information retrieval, term frequencyinversed document frequency (TF IDF) is a well-known statistical measurement used to evaluate how important a word is to a document corpus. The importance rises proportionally to the number of times a word appears in the document but is offset by the frequency of the word in the corpus. We think that a similar relationship exists between QS and paragraphs: the relevance of a paragraph to QS rises proportionally to PR score of the paragraphs and is offset by summation of PR scores of the paragraphs to all QSs. Therefore, we propose a measure called PRISR to assess how relevant a paragraph is to a QS. When a paragraph was considered to be relevant to a sentence, we expect the paragraph to contain complementary information for certain concepts addressed in the sentence. As the PR score was an indicator of the complementariness of a paragraph, a higher PR score means that a paragraph is more relevant to a query sentence. However, when the paragraph is relevant to many query sentences, it implies that the content of the paragraph is general, thus its ranking should be lowered. We define a value called inverse sentence relevance (ISR) to reflect this characteristic, and define the PRISR of paragraph i to sentence j as:where |S| is the number of sentences in the abstract. Through this definition, a paragraph relevant to a greater number of sentences in the abstract resultsPage: 1146 11431149
J.-H.Chiang et al.in a higher sum of PR scores, thus diluting the influence of its PR score and resulting in a lower ranking. Accordingly, the relevance of paragraph i to sentence j increased proportionally to PR score but was offset by the sum of PR scores to all query sentences. By determining the PRISR of every paragraph to a target sentence, paragraphs can be ranked by this value, thus identifying the most relevant and specific paragraph for a given sentence.
Abstract-related condensed textCondensed text is expected to provide supplementary information to abstract content, and query sentences are considered crucial to condense a research paper. Therefore, we define condensed text as a collection of the most relevant paragraphs for each query sentence. In scientific research articles, the focus of sections varies even though these sections may mention or explain certain concepts belonging to the same keyword. If a section emphasizes a given concept, the explanation or description of that concept will usually cover multiple paragraphs. Therefore, the section may contain many paragraphs relevant to the concept keyword, and the paragraph with most referential value may be among them. Based on this idea, we recommend paragraphs for a query sentence by(1) evaluating the relationship between query sentences and sections, and choosing a candidate section, and then(2) recommending the most relevant paragraph from the chosen section via PRISR ranking.The metric for relationship evaluation between the query sentence and a given section was the relevant section score (RSS), which is defined as:where P j is j-th paragraphs of the section. RSS is the average PR score of a section's relevant paragraphs. If a section has higher RSS, the section is more likely to contain the related paragraphs, so that paragraph can be recommended from the section. Applying this two-step procedure on each query sentence, an abstract related condensed text could be produced.
EXPERIMENTS
Experimental settingsIn this study, we conducted a preliminary experiment to evaluate whether IO correlated with the importance of paragraphs. Consequently, we evaluated the performance of the retrieval algorithms in two aspects. One was to evaluate the agreement of results of single paragraph retrieval with human opinion, using a small annotated corpus. The other was to evaluate the qualities of condensed text, using a recall-oriented metric.
MaterialsThe source of the full-text corpus for experiments is the NCBI's PMC. We randomly selected 1000 BMC Bioinformatics articles on the PMC ftp site. To compare human opinions against the algorithm retrieval results, 10% of the 1000 articles were annotated by eight human assessors experienced in reading scientific articles in the field of bioinformatics. Each paragraph was annotated with either abstract related or unrelated and labeled with an importance level from 1 to 5, indicating the relative importance of each paragraph. A total of 3610 paragraphs from 100 articles were annotated.
Algorithms for comparison
Keyword-count approachWe designed a baseline system to retrieve paragraphs that contained the most shared terms of a query sentence. The query sentence was also represented in the bagof-words model, and terms were selected using the same process as the proposed approach. In the baseline system, however, term weighting was not considered and, unlike in the proposed approach, all terms were treated equally.) is a graph-based ranking algorithm used by Google's search engine to assigns numerical scores to web pages through analysis of the hyperlink structure of the World Wide Web. The basic idea implemented in PageRank is that of 'voting'. A link to a page counts as a vote of support. A page having more incoming links will gain more support, thus making it more important. In addition, the importance of the page casting the vote determines how important the vote itself is. That is to say, importance of a page is derived from how many pages link to it and how important these pages themselves are. In practice, the importance score (IS) of page V i can be derived from recursive calculation through following equation:
PageRank-like approach PageRank (Brin and Pagewhere In(V i ) are pages which link to V i , and Out(V j ) are pages to which V j links. In the above equation, d is a damping factor. In this study, the first step of applying the PageRank approach was the modeling of a full-text article as an undirected graph. Paragraphs were regarded as vertexes, and linkages were defined by the existence of keywords shared between paragraphs. In contrast to Web, we modeled the paragraph network as an undirected graph (), and named this approach PageRanklike approach. Similar to a search engine, relevant paragraph to a query sentence was determined by the number of shared keywords and the scores of paragraphs. Candidate paragraphs were those sharing shared keywords with the query sentence. Candidate paragraphs were ranked first by the amount of shared keywords and then by the paragraph's score. Therefore, the paragraph containing the most shared keywords and having the highest score would be recommended as the query sentence's most relevant paragraph.
IO and paragraph importanceThe determination of importance is very subjective and may vary among different readers. A more objective comparison requires a metric which can objectively reflect the opinions of most assessors. We conducted an experiment to evaluate the correlation between IO and the importance of given paragraphs. Here we regard an abstract as a set of keywords, and the IO between a paragraph and the abstract was defined as:where A is the abstract, P is a paragraph of full text and S i is the i-th sentence in P. In this experiment, P was derived from 3610 paragraphs annotated for importance and A was the abstract.Average IO for various levels of importance is shown in.
Page: 1147 11431149
Condensing biomedical journal textsThe results indicate that IO and a paragraph's importance are positively correlated.
Assessing agreement with human opinionTo evaluate the capacity to recommend truly useful paragraphs to readers, we conducted an experiment to assess whether paragraphs recommended by our method agreed with those chosen by human reviewers, based on the 100 manually annotated articles. Each paragraph was annotated with an importance level from 1 to 5. For every query sentence, the algorithm (keyword count or PageRanklike, Section 3.3) recommended the most relevant paragraph. The algorithm then was scored according to importance levels of the paragraphs. For example, the algorithm obtained a score of 1 when it selected a paragraph labeled level 1. The algorithm achieving a higher average score was thought to be better able to recommend important paragraphs.
Evaluation qualities of condensed textOur system recommended one most appropriate paragraph for each target sentence, and integrated all these recommended paragraphs into a short text that ideally addressed most of the significant information which authors intended to convey in the article. We ran the experiment on 1000 full-text articles to evaluate the system's performance. Recall-Oriented Understudy for Gisting Evaluation (ROUGE) is a set of metrics used for evaluating automatic summarization software in natural language processing (). ROUGE measures summary quality by counting overlapping units such as the n-gram, word sequences and word pairs between the candidate summary and the reference summary. ROUGE-N is an n-gram recall measure computed as follows:where n stands for the length of the n-gram, and Count match (n-gram) is the maximum number of n-grams co-occurring in a candidate summary and a set of reference summaries. Count(n-gram) is the number of n-grams in the reference summaries.Generally speaking, ROUGE-1 is a metric of informativeness, while ROUGE-2, which considers bi-gram, and ROUGE-L, which considers the longest common subsequence, are metrics of fluency and grammaticality, respectively. Among these different scores, the uni-gram-based ROUGE score (ROUGE-1) has been shown to best agree with human assessment. In this study we focused on a paragraph's informativeness, and thus applied ROUGE-1. Assessing the quality of the condensed text requires a reference text. Here, IO score was adopted as an index to classify paragraphs into notable and non-notable categories. The notable reference was used to assess the systems' capability to retrieve notable information.
RESULTS AND DISCUSSION
Analysis of annotation of paragraphsAccording to the annotation result, only 28% of the 3610 annotated paragraphs were considered to be important (i.e. labeled with 4 or 5), while 40% were considered to be trivial descriptions (i.e. labeled with 1 or 2). Not all paragraphs facilitated understanding of an article's critical information, and the important paragraphs made up only small parts of the full text articles. That is, a literature review would be more efficient if researchers could focus on important paragraphs. The result addressed a need for an automatic paragraph recommendation system. In addition, the ratio of paragraphs marked as abstract-related correlated positively with importance level (). Abstract-related paragraphs made up >80% of important paragraphs, and 96% of paragraphs labeled with importance level 5 were considered to be abstract-related. These results suggest that taking advantage of information in the abstract could contribute to the retrieval of important paragraphs from full-text articles.
Importance of retrieved paragraphsThe results of an experiment to assess the agreement with manual reviews is shown in; PRISR achieved an average IS of 3.69, compared to 2.98 for the keyword-count approach, 3.26 for PageRank-like and 1.79 for a random selection. Together, Figures 4 and 5 show a higher proportion of sentences containing keywords is in important paragraphs, which explains the better performance Page: 1148 11431149of algorithms taking advantage of keywords. PRISR's superior performance might be due to PageRank-like and the keywordcount approach counting distinct keywords while recommending paragraphs. However, a paragraph which illustrates a specific concept might tend to mention only a few specific keywords. Though keywords in this kind of paragraphs are less varied, they were thought to be important. Usually, paragraphs in the introduction section contain more keywords. PRISR took account of the weighted specificity and increased the likelihood of this kind of paragraph being recommended. The performance of the PageRanklike algorithm was similar to that of the keyword-count approach, but it used the PageRank score to recommend paragraphs when candidate paragraphs contain the same number of keywords. This result suggests that analyzing cross-referencing between paragraphs helped in the discovery of important paragraphs. Similar results were also observed in an evaluation of 900 unannotated articles. The IS was replaced with IO. Both experiments indicated that weighted specificity is beneficial for identifying important paragraphs.
J.-H.Chiang et al.
Information coverage of condensed textWe used ROUGE-1 as the metric for evaluating the quality of condensed texts. First, paragraphs were divided into notable and non-notable categories by their IO score. Here we used the average IO score of paragraphs which were labeled with importance level 5, 0.635, as the threshold. For each article, a collection of notable paragraphs acted as a notable reference text, and collection of non-notable paragraphs acted as a non-notable reference text. The result is shown in. All three methods obtained higher ROUGE-1 scores in the notable categories, indicating that most paragraphs which were in condensed texts belonged to the notable category. Compared with the keyword-count approach, PRISR obtained the highest scores in the notable category, but the difference in the non-notable category was negligible, indicating that paragraphs recommended by PRISR were more concentrated in the notable category. In addition, on average the length of the recommended paragraphs was longer in the keyword-count approach results. Long paragraphs achieve a higher recall rate because they contain more words. But, in this evaluation, the keyword-count approach didnot outperform PRISR, most likely due to the effect of ISR. As mentioned previously, ISR was designed to lower a paragraph's ranking when it is relevant to many sentences, which indicates that the paragraph's content may be too general. Thus, PRISR reduced the rankings of non-notable paragraphs through ISR and retrieved more notable paragraphs, even though they were shorter in length.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [11:41 21/3/2011 Bioinformatics-btr080.tex]
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CONCLUSION As the availability of full-text articles grows, how to use the resource effectively and efficiently becomes an important issue. In this article, we proposed a paragraph-ranking approach to produce mid-size texts to assist literature review. The annotation result indicates that not all the selected paragraphs contribute to a good understanding of the literature content, thus a literature review would be more efficient if researchers could focus on important paragraphs. Abstracts and full-text articles each have distinct advantages: abstracts are wellstructured short texts expressing the main research focus, while fulltext papers contain many details of that research. Readers may thus find it helpful to have a condensed text that combines the advantages of both. In our evaluation, the outcome of the proposed approach outperformed the other two algorithms. Paragraph-ranking achieves the highest average IS, that is, the approach best agreed with results of manual reviews. Paragraph-ranking retrieves paragraphs using keywords as query terms. That is, determining the relation between the query sentence and paragraphs requires the existence of shared keywords. However, we found that a small number of paragraphs were labeled with high importance level by curators, but do not mention any keywords. In fact, they do include some valuable information. Deeper semantic analysis is required to produce a semantically enhanced recommendation, and we note this issue for future work.
