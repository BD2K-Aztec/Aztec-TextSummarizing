Although the R platform and the add-on packages of the Bioconductor project are widely used in bioinformatics, the standard task of multiple sequence alignment has been neglected so far. The msa package, for the first time, provides a unified R interface to the popular multiple sequence alignment algorithms ClustalW, ClustalOmega and MUSCLE. The package requires no additional software and runs on all major platforms. Moreover, the msa package provides an R interface to the powerful package shade which allows for flexible and customizable plotting of multiple sequence alignments. Availability and implementation: msa is available via the Bioconductor project:
IntroductionMultiple sequence alignment is one of the most fundamental tasks in bioinformatics. It serves as the basis for the detection of homologous regions, for detecting motifs and conserved regions, for detecting structural building blocks, for constructing sequence profiles, and as an important prerequisite for the construction of phylogenetic trees. Since exact methods scale exponentially with the number of aligned sequences, approximative methods have been introduced that try to obtain decent, yet not necessarily optimal, alignments with reasonable computational effort. ClustalW is a classic, but still very commonly used, method (). T-Coffee () and MUSCLE (, b) are other methods that are widely used. ClustalOmega () is a more recent top-notch method that has been designed to align large numbers of sequences in relatively short time. For a more comprehensive overview of multiple sequence alignment methods, we refer to, Edgar and Batzoglou (2006) and Notredame (2007). All methods mentioned above are available as command line programs or via Web interfaces (e.g. on the EMBL-EBI server http://www.ebi.ac.uk/Tools/msa/). However, for the R platform that is widely used in bioinformatics, the possibilities to perform multiple sequence alignment are limited. The Biostrings package (), which is the standard package for sequence analysis within the Bioconductor project, provides data structures for storing and manipulating multiple sequence alignments, but not methods for computing them. Only recently, the muscle package that provides a simple interface to MUSCLE has been released via Bioconductor. For other methods, users still need to resort to external stand-alone programs. This article presents msa, an R package released as part ofBioconductor 3.1 in April 2015. The package provides a unified interface to the three most common multiple sequence alignment methods and further integrates shade () for customizable pretty printing of multiple sequence alignments.
Package description
Multiple sequence alignmentThe msa package provides interfaces to the three multiple sequence alignment methods namely ClustalW, ClustalOmega and MUSCLE. All three are available as R functions with a unified interface. Theshows an example of a multiple sequence alignment produced by the ClustalW interface of msa that has been rendered with msaPrettyPrint() using some custom parameters.
Cross-platform availabilityThe package is available for all major platforms, Linux/Unix, Windows and Mac OS X. It does not require any external software or libraries for performing multiple sequence alignments. However, to generate PDF output with the msaPrettyPrint() function, a / system is required. msa does not consist of re-implementations of the three methods, but includes the original source codes of their corresponding standalone programs along with some modifications to facilitate crossplatform compatibility. This approach ensures the easy integration of future releases of the methods. Moreover, it also allows for potentially maintaining the use of OpenMP () to speed up ClustalOmega's computations. On Linux/Unix systems, on which the packages are usually built from source, OpenMP support depends on the availability and configuration of OpenMP on the respective system. For Mac OS, OpenMP support has been disabled entirely due to technical difficulties, but we hope to overcome this limitation in future releases.
Future extensionsOne of the major goals for future releases is the integration of more multiple sequence alignment methods, in particular, T-Coffee. Previous versions of the T-Coffee source code made use of threads that were not portable to Windows in an easy way. Nevertheless, we will explore possibilities to integrate T-Coffee and other methods (). Moreover, ClustalW offers phylogeny methods which are currently not accessible via the R interface of msa. Where possible and meaningful, we will strive for making all functionalities of the included methods available.shade: shading and labeling of multiple sequence alignments using 2e. Bioinformatics, 16, 135139.Fast and sensitive multiple alignment of large genomic sequences. BMC Bioinformatics, 4, 66. Dagum,L. and Menon,R. (1998) OpenMP: an industry standard API for shared-memory programming. IEEE Comput. Sci. Eng., 5, 4655.. Example of a multiple sequence alignment of Hemoglobin alpha 1 (HBA1) sequences of 24 vertebrates. The sequences have been downloaded from UniProt and have been aligned using ClustalW via msa with default parameters. The resulting multiple sequence alignment has been rendered using msaPrettyPrint() using custom parameters. The alignment is shaded in 'functional/structure' mode. A sequence logo is shown at the top of the alignment using the color mode 'rasmol'. The sequence logo and the alignment itself demonstrate that HBA1 is a highly conserved protein
References
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from functions accept DNA, RNA and amino acid sequences that can be provided as objects of classes 'DNAStringSet', 'RNAStringSet', or 'AAStringSet', respectively. Sequences can also be provided as standard R character vectors. In this case, the user must specify the type of the sequences explicitly. All three methods allow for customizing substitution matrices. To this end, users can specify matrices by identifiers or they can also provide custom matrices (previously, this was not possible for ClustalOmega). For ClustalW and MUSCLE, it is also possible to specify custom gap penalties. The user can further decide whether the sequences in the resulting multiple sequence alignment should be in input order or in the order that is returned by the respective method (which typically groups similar sequences together). Results are returned as S4 objects, the classes of which have been derived from the classes provided by the Biostrings package. Therefore, all methods for processing multiple sequence alignments, such as the computation of consensus matrices and sequences, are inherited from the Biostrings package. 2.2. Pretty printing The Biostrings package only offers a relatively basic function for printing multiple sequence alignments as plain text. The msa package integrates the powerful package shade (Beitz, 2000) which allows for flexible and customizable plotting of multiple sequence alignments. This interface is available via the function msaPrettyPrint(). The most common functionalities of shade are controllable via the R-only interface of msaPrettyPrint(), so users can pretty-print multiple sequence alignments without the need to know the details of or shade. For more advanced presentations of the results, users can supply custom code to msaPrettyPrint(). There are basically two scenarios how to use the function: (1) By default, the function generates a source file from which a PDF file is built. This is the standard use case for interactive R sessions. Note that msaPrettyPrint() does not allow for plotting multiple sequence alignments via R graphics devices. (2) The function also has an output mode that writes the generated code to the output stream as it is. This is the perfect choice in code chunks of Sweave or knitr documents (Leisch, 2002; Xie, 2014), since it allows for embedding the generated shade code directly into the resulting source file that is generated by Sweave or knitr. Needless to say, this works only for knitr documents based on the / Sweave syntax.
U.Bodenhofer et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
