Palindromic sequences, or inverted repeats (IRs), in DNA sequences involve important biological processes such as DNAâ€“protein binding, DNA replication and DNA transposition. Development of bioinformatics tools that are capable of accurately detecting perfect IRs can enable genome-wide studies of IR patterns in both prokaryotes and eukaryotes. Different from conventional string-comparison approaches, we propose a novel algorithm that uses a cumulative score system based on a prime number representation of nucleotide bases. We then implemented this algorithm as a MATLAB-based program for perfect IR detection. In comparison with other existing tools, our program demonstrates a high accuracy in detecting nested and overlapping IRs. Availability and implementation: The source code is freely available on
INTRODUCTIONPalindromic sequences, or inverted repeats (IRs), are sequences that can form complementary pairing with themselves. Found in abundance throughout both eukaryotic and prokaryotic genomes, the ability of IRs to self-pair allows for the formation of DNA secondary structures that serve as intermediates in biological reactions such as DNA replication and transposition (): cruciforms can initiate DNA replication by changing the supercoiling level or chromatin structure, affecting the binding of DNA replication regulatory factors (); DNA hairpins are a result of the palindromic nature of perfect and imperfect IRs, allowing them to act as the binding sites of dimeric regulatory factors () and aid in the transposition process (). Both perfect and imperfect IRs also have an impact on genomic structure: transposons prefer palindromic insertion sites (). Transposons can be present in eukaryotic genomes in a nested manner by occurring within other transposons (). Hence, analysis of nested and overlapping perfect IRs can aid in a variety of research areas including the study of regulatory factor binding sites and of nested transposons. Currently available tools in the detection of palindromes do not perform well in terms of result quality (). To make genome-wide studies of palindromic sequences feasible, we need to develop efficient and accurate tools for detecting both perfect and quasi-palindromic sequences (palindromes contain mismatches and/or non-palindromic spacers). Here we describe a novel algorithm for a tool detecting perfect IRs, implemented as a MATLAB function, capable of running on genome-scale inputs. then process each remaining substring with a filtering step to eliminate non-IRs that happen to be balanced in nucleotide numbers.
IMPLEMENTATION AND EVALUATIONThe proposed algorithm was implemented as a MATLAB function (using MATLAB R2012a) and was compared for accuracy against existing IR detection tools including EMBOSS (), BioPHP (http://www.biophp.org/minitools/find_ palindromes) and the MATLAB built-in function palindromes on several simple test cases (Supplementary). The tool IRF (Inverted Repeat Finder) () was excluded from the comparison because it cannot detect overlapping IRs. Our MATLAB tool was able to detect all nested and overlapping IRs, whereas the other competing tools were unable to function with 100% accuracy in many cases. As indicated in the Supplementary Table S1, MATLAB's and EMBOSS's algorithms were unable to detect some perfect IR instances of TATA sequences, whereas BioPHP's algorithm missed overlapping perfect IRs starting in same position.used BioPHP in their analysis of IRs in HIV-1 gp120 sequences. In their analysis in the C3 region on patient number three, they missed the detection of perfect IRs: ATAT and TATA, whereas our tool was able to detect them (see Testcase_HIV.fa in our supplementary data). For validation on real data, our MATLAB program was run on the HIV-1 genome (NC_001802.1) to search for all perfect IRs, including the nested and overlapping patterns, of lengths 41000 nt. Consequently, we detected 649 perfect IRs in 0.1339 s. Moreover, our tool proves to be well-suited for the detection of perfect IRs in larger genome data sets like chromosome 1 of Arabidopsis thaliana, Homo sapiens and Zea mays: we detected 17 030 043 perfect IRs in H.sapiens, 25 181 675 in Z.mays and 2 788 106 in A.thaliana, using 1.035 h, 1.050 h and 7.943 min, respectively. Although our tool has considerably higher accuracy than other tools, that accuracy comes with some cost in runtime. To determine whether the program was still practical to use on large sequence inputs, we looked at the average execution time over 100 randomly generated sequences at sequence length ranging from 4 to 1000 bp and found it to increase linearly with input size (Supplementary).
CONCLUSIONDifferent from conventional string-comparison approaches adopted in the existing tools, our MATLAB program uses a novel prime number-based algorithm and can accurately detect nested and overlapping IRs of lengths ranging from 4 to 1000 nt. This tool is practically feasible for perfect IR detection in large DNA sequences. Hence, this tool will assist in the effective and accurate detection of perfect IRs in a genome-wide scale.
ALGORITHM Different from conventional string comparison algorithms adopted in existing tools for palindrome detection, the major steps of our algorithm are shown in Figure 1 (see the graphic representation and pseudo-code of our algorithm in Supplementary Figs S1 and S2). The algorithm detects the boarder positions of perfect IRs using a cumulative scoring system. The scoring system is based on assigning prime number scores to nucleotides such that the scores of complimentary bases cancel each other out. A perfect IR is defined as a DNA sequence that satisfies the following two conditions: (i) the numbers of complementary nucleotide bases are equal and (ii) the number of nested palindromes within the sequence, which share the same center as with the sequence, is equal to half the number of the total bases present. Our detection scheme is based around the assignment of scores to each nucleotide: A and C are each assigned different prime number scores, whereas T and G are each assigned a score equal to the negative of the score of their complementary base, as shown in Supplementary Figure S1. We then scan the sequence and keep a running cumulative score, noting that if a score repeats itself at two positions, the intervening section must have a balanced number of complementary bases (a result following from our choice of prime number score values), and hence is potentially a perfect IR. We filter out all substrings larger than 1000 bp, as doing so significantly increases the efficiency of our algorithm, and our data testing using chromosome one of human, Arabidopsis and maize genome indicates that the presence of palindromes larger than 1000 bp are exceedingly rare. We *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
S.Sreeskandarajan et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
