Drugster is a fully interactive pipeline designed to break the command line barrier and introduce a new user-friendly environment to perform drug design, lead and structure optimization experiments through an efficient combination of the PDB2PQR, Ligbuilder, Gromacs and Dock suites. Our platform features a novel workflow that guides the user through each logical step of the iterative 3D structural optimization setup and drug design process, by providing a seamless interface to all incorporated packages. Availability: Drugster can be freely downloaded via our dedicated server system at http://www.bioacademy.gr/bioinformatics/drugster/. Contact: dvlachakis@bioacademy.gr.
INTRODUCTIONDrugster is a fully integrated, Perl/Tcl-Tk based, interactive platform combining in a rational pipeline the algorithms of PDB2PQR v.1.8 (), Ligbuilder v.1.2 and v.2.0 (), Gromacs v.4.5.5 () and Dock v.6.5 (). All previously mentioned algorithms remain a native set of numerous UNIX-based modules, lacking a comprehensive and objectoriented graphical user interface (GUI). Therefore, Drugster was developed to ease and automate the full task of setting up drug design, lead and structure optimization experiments. All major 3D molecular viewers can be used for visualization purposes. In this study, we used Pymol () as molecular viewer. In the beginning, Drugster addresses all common problems associated with PDB file formatting and partial charges. Subsequently, the receptor will be structurally optimized by energy minimization using a variety of different force fields as implemented into Gromacs. Upon structural optimization, the Ligbuilder algorithm is used to generate novel molecules for the given site or to improve an existing lead compound. Dock is used to verify and evaluate the potential of each newly designed ligand, as it is used to re-score all candidate compounds and search for better docking interactions. Finally, the receptor ligand complex is energetically minimized, to reduce any residual geometrical strains, and subsequently subjected to molecular dynamics simulations (MDs), allowing full degrees of freedom to both the ligand and the receptor. There is an option for a final energy minimization step after the MDs. of the scaffolding, common core structures that will be later generated and analysed. Then the user has the choice of either the growing or the linking algorithms of Ligbuilder. The combination of molecular fragments starts automatically as soon as the user has completed the parameters setup section (i.e. molecular weight, number of donors/acceptors, LogP and other chemical properties). The third phase is the compound screening function, where the elite molecules are selected for the next step.(4) Ligand optimization and re-scoring. All ligand candidate molecules prepared in the previous step are subjected to docking simulations using Dock, which are followed by energy minimizations (EM) within the receptor. The ligand molecules are then re-scored and re-ranked. Notably at this stage, EM is performed allowing full degrees of freedom for both the ligand and the receptor. This way a certain degree of receptor flexibility is allowed to the iterative drug design process. The re-scoring approach is based on free energy perturbation and compoundreceptor interaction analysis. The scoring functions included in Dock are fast and versatile, offering a reliable set of tools for scoring and re-ranking our candidate compounds. Finally, ligand topologies can be either automatically assigned or manually using freely available dedicated software ().(5) Complex optimization. The final step of the Drugster pipeline is the automatic error-prone feeding of the top scoring candidate compounds to the Dock's molecular dynamics engine. Here options include a force field selector, generator for the coordinate and topology files, the setup of a periodic system, solvation and the actual molecular dynamics simu
DESCRIPTION OF DRUGSTER Drugster's main window is a menu-driven interface as well as a tab step-by-step layout (Fig. 1A). It provides the user with a process window to monitor active calculations in real time as well as with a command-line equivalent (Fig. 1B). A complete drug design and/or lead and structure optimization experiment using the Drugster toolkit is broken down in five steps: (1) Input preparation. This is a crucial step missing from most major suites, where all common PDB file problems are automatically fixed before the experiment. There are some other platforms that provide tools for protein preparation, but they include modules that are commercially available even for academic use (Lill et al., 2011; MOE, 2010; Sybyl, 1994). Missing hydrogens are added, partial charges are calculated, heteroatoms can be removed and the C' and N' termini of the protein can be neutralized. (2) Receptor optimization. One of the major drawbacks of structure-based drug design algorithms is the lack of conformational optimization of the receptor. Using the versatile Gromacs suite, the receptor is energetically minimized before the de novo drug design experiment. This automated step addresses many inconsistencies and free energy issues that may derive by removing heteroatoms, without restoring to the 'relaxed' conformation of the receptor PDB file, which will be used for the generation of new ligands. (3) Ligand building. At this stage, the actual de novo structure-based drug design of new ligand structures takes place. This tab enables the user to fully parameterize the ligand-building process, by offering support to both Ligbuilder 1.2 and 2.0 versions. Here the process is organized in three fully user-customizable phases. First a pharmacophore is prepared, which prepares and summarizes the 3D properties *To whom correspondence should be addressed. y The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
lation. Basic, but rather informative, post MD simulation trajectory analysis has been incorporated to aid the user to speed up the selection of the best candidate compounds (Fig. 1C). Furthermore, an extensive manual for the use of Drugster will pop-up through the Help button (Fig. 1D), using the system's default HTML browser. Notably, through the Drugster interface, it is possible to start a log file, which is vital for keeping track of all useful information that may prove to be time-consuming and complicated for some users. Moreover, the status tray area provides information about the logging process plus a process interruption switch. There are three progress indicators, a progress bar showing the current step as a fraction of the total steps, a label showing an estimation of the remaining run time and the percentage (%) of work completed. A processor, memory and swap file usage gauge is to be found right next to the logging indicator, providing real time information of the system's resources. Calculations and step counts are done by Drugster. Noteworthy, all input, output and intermediate files are automatically stored in user predefined directories for further analysis, simulation/experiment resuming, error tracing and archiving purposes. 3 CONCLUSIONS In conclusion, the Drugster toolkit provides a novel, user-friendly, fast and reliable tool for conducting drug design experiments, with the incorporation of a series of elite molecular modelling algorithms in one platform. It is a fast and easy-to-use alternative to rather expensive commercial suites, while being the only modern and updated tool of its kind that is fully distributed as freeware. 4 AVAILABILITY Drugster is an open source, cross platform application available freely to all users under a GNU license basis. The full package, including installation scripts, figures, a full description, a detailed manual, complete tutorials as hands-on use cases, software prerequisites and various examples can be downloaded at: http:// www.bioacademy.gr/bioinformatics/drugster/. Before download, check the provided information on the website about software prerequisites. Please email comments and bug reports at dvlachakis@bioacademy.gr.
Introducing Drugster at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
