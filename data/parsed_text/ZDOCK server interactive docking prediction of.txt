Protein–protein interactions are essential to cellular and immune function, and in many cases, because of the absence of an experimentally determined structure of the complex, these interactions must be modeled to obtain an understanding of their molecular basis. We present a user-friendly protein docking server, based on the rigid-body docking programs ZDOCK and M-ZDOCK, to predict structures of protein–protein complexes and symmetric multimers. With a goal of providing an accessible and intuitive interface, we provide options for users to guide the scoring and the selection of output models, in addition to dynamic visualization of input structures and output docking models. This server enables the research community to easily and quickly produce structural models of protein–protein complexes and symmetric multimers for their own analysis.
INTRODUCTIONProteinprotein interactions are responsible for a wide range of key biological processes such as cell signaling, enzyme inhibition and immune recognition. A high-resolution structure of a protein complex provides the atomic details of the interaction, and enables rational design of therapeutic molecules that inhibit or improve binding. Although many structures of protein complexes have been determined by x-ray crystallography, many have not been characterized experimentally due in part to cost and experimental limitations. This has led to the development of proteinprotein docking algorithms, of which the top-performing methods often produce models with atomic-level accuracy. These approaches are distinct from those developed for proteinsmall molecule docking, which are often used to dock ligands (or sets thereof, for virtual screening) to a known binding pocket. To facilitate proteinprotein docking prediction, web-based servers have been developed for rigid-body docking (), flexible docking and refinement (), clustering () and symmetric multimer docking (Schneidman). The rigid-body proteinprotein docking program ZDOCK was developed in our laboratory 410 years ago (). It uses the Fast Fourier Transform algorithm to enable an efficient global docking search on a 3D grid, and utilizes a combination of shape complementarity, electrostatics and statistical potential terms for scoring. ZDOCK achieves high predictive accuracy on proteinprotein docking benchmarks, with 470% success in the top 1000 predictions for rigid-body cases in the most recent benchmark version (), and consistent success (acceptable or better predictions for 22 of the last 35 submitted targets) in the international proteinprotein docking experiment, Critical Assessment of Predicted Interactions (CAPRI) (). To provide the research community with a simple interface to predict structures of protein complexes using ZDOCK, we developed the ZDOCK Server. Since its initial implementation, the ZDOCK Server has undergone major changes to improve its docking performance, functionality and user interface. The improvements were motivated by valuable user suggestions as well as our own initiatives and algorithm development. These include upgrading the docking algorithm from ZDOCK 2.3 to ZDOCK 3.0.2, resulting in greater accuracy and highly efficient searching. A portal for running the program M-ZDOCK () to predict the structures of symmetric multimers was recently added. Also, various aspects of the user interface have been improved, integrating viewing of structures and descriptions during submission and analysis of results.
IMPLEMENTATIONThe ZDOCK Server web interface is written in PHP and HTML, as well as Javascript for dynamic functionality. JMol (http:// www.jmol.org) is used for molecular visualization on the residue selection and results pages, and the Protein Data Bank (PDB) RESTful web service interface () is used to dynamically gather information for PDB IDs that are entered during submission. The ZDOCK Server allows users to generate sets of predictions in PDB format from job output files with aJobs are run on a dedicated computer server at the University of Massachusetts Medical School with 128GB RAM and 64 (2.2 GHz) cores. Each ZDOCK and M-ZDOCK job is parallelized using Message Passing Interface (MPI) to run on eight cores. A Perl script on the backend server checks for jobs to submit, submits jobs, checks for completed jobs and sends results to users. The ZDOCK and M-ZDOCK executables and code were not modified for the server from the downloadable and published algorithms; default sampling levels are used for all jobs.
USAGEPrediction of complexes using the server proceeds in three steps ():(1) Input structures and options. On the initial submission page, users provide two input structures to be docked (one structure in the case of M-ZDOCK), either by uploading their own PDB files or by specifying PDB codes followed by selection of chains or biological assembly via dynamically generated checkboxes. Options include selection of ZDOCK version (3.0.2 or 2.3.2).(2) Selection of blocking/contacting residues. The next step is selection of blocking (ZDOCK and M-ZDOCK) and contacting (ZDOCK only) residues for each submitted protein, which is aided by JMol visualization of each molecule that highlights selected residues for the user.(3) Viewing results. Users are emailed a link to the results page on job completion, where randomly generated codes are used for results page names (to ensure privacy of users' data). In addition to the ZDOCK output and pre-processed input PDB files, the results page features a JMol visualization of the top docking models and the center-of-mass positions of the top 500 ligands (the latter for ZDOCK only), as well as the capability to visualize (in JMol) or download any individual complex from the output. In addition to the top 10 models that are available as a user download, sets of predicted complexes can be generated using a Java program, or alternatively an executable file that is included with the download of the appropriate program (ZDOCK or M-ZDOCK).The ZDOCK Server has established a sizable user base. Since its move to the dedicated computer server at the University of Massachusetts 7 months ago, the ZDOCK Server has completed 46200 jobs from 41000 unique users. The average running time for jobs is 11.5 min. While this is significantly faster than most docking servers, its predictive performance is comparable with recently developed docking servers. For example, based on CAPRI 'Acceptable' criteria, the success rates of ZDOCK 3.0.2 on Docking Benchmark 4.0 () are 12 and 51%, for the top 1 and 50 predictions, respectively, versus rates of 10 and 57% reported for the SwarmDock Server, which takes up to 36 h per docking run ().
CONCLUSIONSThe ZDOCK Server provides a fast and effective means to produce models of proteinprotein complexes and symmetric multimers, via a user-friendly web interface. In addition to generating and viewing structures of docking models through the server's tools and interface, users have the option of submitting ZDOCK Server output files directly to several available docking refinement and post-processing tools (linked from the server page). In the future, possible developments include clustering and postprocessing functionality directly on the server itself, in addition to other improvements based on user requests.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
B.G.Pierce et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
