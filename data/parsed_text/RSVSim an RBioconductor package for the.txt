RSVSim is a tool for the simulation of deletions, insertions, inversions, tandem duplications and translocations of various sizes in any genome available as FASTA-file or data package in R. The structural variations can be generated randomly, based on user-supplied genomic coordinates or associated to various kinds of repeats. The package further comprises functions to estimate the distribution of structural variation sizes from real datasets. Availability: RSVSim is implemented in R and available at http://www. bioconductor.org. A vignette with detailed descriptions of the functions and examples is included.
INTRODUCTIONNext-generation sequencing (NGS) has accelerated the detection of (large) deletions, insertions, inversions, tandem duplications and translocations tremendously during the past years (). Various methods dealing with the comparison, annotation, visualization and especially the detection of structural variations (SVs) were published (). The simulation of SVs is a powerful, quick and inexpensive approach to assess their performance and correctness. Evaluating the performance of programs for SV detection, for instance, requires a large number of validated variations of various types with high-breakpoint precision. Depending on the scope of the application, certain parts of a genome might be of special interest like coding regions, a subset of genes or regions of low complexity. Variant detection from real data may not always comply with these requirements because of limitations of the experiment design, few validated SVs or low-breakpoint resolution. A simulation, however, can generate a base exact ground truth consisting of (almost) any number of SVs, which can then be used to test the sensitivity and precision of SV detections (). The output of the algorithm can be compared with the set of simulated SVs to see not only how many SVs were correctly identified but also the SVs missed and falsely predicted because of limitations of the algorithms rather than laboratory issues. A typical workflow for the assessment of an SV algorithm for SV detection consists of SV simulation ) Read simulation ) SV algorithm ) Evaluation A FASTA-file with the simulated, rearranged genome can be used by most read simulators (e.g.) to generate NGS datasets from various sequencing platforms, which can then be used to assess an SV algorithm. A comprehensive simulation of different SV types of various sizes combined with a variety of read simulations with different numbers of reads, insert-sizes (for paired-end reads) or read lengths can give valuable information for the design of sequencing experiments. Currently, most publications of SV detection methods restrict the SV simulation to deletions or insertions and implement a known set of SVs, taken, for example, from studies of the 1000 Genome project or Venter's genome or a random set into a reference genome (). FUSIM () is a more sophisticated approach, but specialized on the simulation of fusion transcripts for RNA-Seq analysis. To our knowledge, RSVSim is the first toolkit that covers a wide range of SVs, which are detectable by DNA-Seq data, and that incorporates knowledge about size and formation mechanisms of SVs for realistic modelling of their breakpoints.
AVAILABLE FUNCTIONALITYRSVSim is implemented in R and works with any kind of genome that is available as FASTA file or BSgenome package in R.
Types of structural variationsRSVSim can simulate five common types of SVs: deletions, insertions, inversions, tandem duplications and translocations. For deletions, a sequence is removed from the genome and the ends are joined together. Insertions remove or duplicate a segment from one place and insert it into the same or another chromosome. In case of inversions, one segment is cut out and its reverse complement is inserted back at the same position without any loss of sequence. Tandem duplication repeats a sequence several times one after the other. Translocation breaks two chromosomes into two parts each and exchanges the loose ends. Translocations can be simulated in a balanced or unbalanced fashion.
Size of structural variationsThe size of every single SV, except translocations, can be set by the user to fixed or arbitrary values. According to studies from *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com the 1000 Genomes Project, for deletions, insertions and duplications, the amount of SVs decreases rather quickly as their size increases (). RSVSim provides a function to estimate the distribution from real data by assuming a beta distribution of the values. Its shape can be derived from a given set of SVs. This function provides default parameters for all SV types except translocations, which were estimated from SVs between 500 bp and 10 kb from all sequencing studies available in the Database of Genomic Variants (DGV) release March 29, 2012 (): 1.129 deletions, 490 insertions, 202 inversions and 145 tandem duplications in total.compares the distribution of SV sizes of deletions and insertions from the DGV to the same number of values drawn from the fitted distribution.
Breakpoint simulationStructural variation formation in the human genome is not a random process but rather the result of mechanisms, such as non-allelic homologous recombination (NAHR), non-homologous recombination (NHR), variable number of tandem repeats (VNTRs) and transposable element insertions (TEIs) (). These mechanisms can further be associated with repeat elements, such as LINEs, SINEs, Micro-/Minisatellites and segmental duplications (). Hence, SVs often overlap with regions of high sequence homology and/or sequence repeats. For the hg19, RSVSim uses the coordinates from the UCSC RepeatMasker track (2010) to overlap both breakpoints (NAHR) or an extensive part of the SVs (NHR, VNTR and TEI) with repeat regions. Each SV type is associated differently to NAHR, NHR, VNTR and TEI events, based on the studies with SVs 1 kb by. The events themselves are biased towards certain kinds of repeats according to the enrichment analysis in Lam et al., 2010 (). The weights of these biases can be adjusted by the user or turned off to achieve a uniform breakpoint distribution. Furthermore, SV breakpoint formation often co-occurs with smaller mutations. The user can also influence the amount of indels and SNPs that are generated randomly close to the breakpoints. In general, SV breakpoints are placed in a non-overlapping manner. Unannotated regions or assembly gaps, denoted by the letter 'N', are detected automatically and excluded from the simulation.
Simulation within a subset of the genomeBy default, the simulation is carried out across the whole genome. Some applications or special test cases demand the occurrence of SVs in certain subsets of the genome only, like exome sequencing experiments or SV callers specialized for variations within certain repeats or low-complexity regions. Therefore, the simulation can be restricted to a set of user-defined regions. These restrictions can be set individually for every SV type. The implementation in R and available R-packages facilitate the access of genome annotations from Ensembl or UCSC databases to extract coordinates of exons, introns or transcripts for hg19 and further regions of interest. Another typical use case is the evaluation of an algorithm on a set of known, previously validated SVs from other studies or own experiments. For those cases, RSVSim allows to implement a given set of SVs at pre-defined positions. These region parameters can further be used to generate heterozygous SVs. Repeating the simulation with a subset of the previously generated SVs creates two rearranged genomes, where only one of them holds certain variations. Both genomes can then be combined, e.g. for simulation of NGS reads. Related genomes with recurrent SVs, e.g. from paired samples (healthy/ diseased), can be generated in a similar manner.
OutputRSVSim reports every SV with its location and size. Some algorithms for SV detection, e.g. those working with split-read mappings, are able to report the SV breakpoint with single-nucleotide resolution. Hence, the output of RSVSim further provides the breakpoint sequence, i.e. the sequence up-and downstream of the breakpoint in the rearranged genome, for comparison with the sequence predicted by SV detection. All this information can be saved as tables in CSV format. The rearranged genome can be exported as a FASTA file. The package includes a function to compare the output of the simulation with a set of SV detections in BED-or BEDPEformat. It computes the overlap between the breakpoints or approximate breakpoint regions, aligns the breakpoint sequences (if available) and calculates the sensitivity and precision.
CONCLUSIONThe R package RSVSim provides functionalities to simulate the five common types of structural variations within any kind of genome. It enables the user to adapt the simulation to the scope of his own application or experiments in terms of type, size and position of every single SV. Artificially rearranged genomes
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
C.Bartenhagen and M.Dugas at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RSVSim at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
