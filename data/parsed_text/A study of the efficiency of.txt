Motivation: It has been claimed in the literature that pooling DNA samples is efficient in estimating haplotype frequencies. There is, however, no theoretical justification based on calculation of statistical efficiency. In fact, the limited evidence given so far is based on simulation studies with small numbers of loci. With rapid advance in technology, it is of interest to see if pooling is still efficient when the number of loci increases. Methods: Instead of resorting to simulation studies, we make use of asymptotic statistical theory to perform exact calculation of the efficiency of pooling relative to no pooling in the estimation of haplotype frequencies. As an intermediate step, we use the log-linear formulation of the haplotype probabilities and derive the asymptotic varianceâ€“covariance matrix of the maximum likelihood estimators of the canonical parameters of the log-linear model. Results: Based on our calculations under linkage equilibrium, pooling can suffer huge loss in efficiency relative to no pooling when there are more than three independent loci and the alleles are not rare. Pooling works better for rare alleles. In particular, if all the minor allele frequencies are 0.05, pooling maintains an advantage over no pooling until the number of independent loci reaches 6. High linkage disequilibrium effectively reduces the number of independent loci by ruling out certain haplotypes from occurring. Similar calculations of efficiency for the case of no pooling justify the common belief that it is not worthwhile to use molecular methods to resolve the phase ambiguity of individual genotype data.
INTRODUCTIONPooling DNA samples is a common cost-effective practice in genetic association studies, especially for the purpose of initial screening (). Large pools of DNA samples also come up in forensic studies (). To facilitate haplotype-based association analysis, it is necessary to estimate haplotype frequencies from pooled DNA data, and many algorithms, mainly the expectation maximization (EM) algorithm and its variants (To whom correspondence should be addressed.2003;), have been proposed in the literature. However, the emphasis of these papers is very much algorithmic and numerical, focusing on computing speed and numerical convergence, rather than on the statistical property and efficiency of the estimates being computed. This is unfortunate, because even if the best available algorithm is used to compute, say, the maximum likelihood estimate (MLE), it will be of no use if the estimator itself does not possess good statistical property. What we meant by the statistical property of an estimator is its performance under repeated sampling from the postulated model. Thus, we are concerned about quantities such as bias, variance and also coverage in the case of interval estimation. To compute the estimation efficiency of one estimator relative to another, we adopt the usual definition of taking the ratio of the variance (or mean squared error for biased estimators) of estimator 2 to that of estimator 1. In this article, estimator 1 is the MLE based on pooled genotype data, and estimator 2 is the MLE based on individual genotype data. The number of pools used in estimator 1 and the number of individuals used in estimator 2 are kept equal so that the genotyping costs of the two estimators are the same. Given the large body of work on haplotype estimation based on pooled data, it will be important for practitioners to know when to pool and when not to pool.believed that pooling DNA samples is efficient in estimating haplotype frequencies. In particular, they demonstrated that although pooling K individuals increases ambiguities, the uncertainty of ML estimation increases less than K times that of unpooled DNA, at least for small pool sizes and small number of loci. Thus, for the same genotyping cost, the pooled data MLE will be more efficient than the MLE computed from individual genotype data. Their comparison was limited to the case of small number of loci. Due to rapid advance in technology, huge numbers of SNPs are genotyped routinely, and it would be interesting to find out what happens when the number of loci increases. Our study differs fromin that our reported efficiencies are based on theoretical calculations using asymptotic variance formulae rather than based on simulations. By carrying out theoretical calculations, we avoid some of the shortcomings of simulation studies and can handle more loci. Our findings, for the case of linkage equilibrium and non-rare allele, suggest that pooling begins to lose estimation efficiency (relative to no pooling at the same genotyping cost) when the number of loci is larger than 3. Other factors affecting the efficiency of pooling that have been mentioned in the literature include sparsity (), linkage disequilibrium (LD) and allele frequencies ().commented that it is not necessarily the case that pooling will lead to loss of haplotypePage: 2557 25562563
Efficiency of pooling in haplotype estimationinformation when LD is so strong that only a small number of haplotypes will occur with appreciable frequency. Kirk and Cardon (2002) defined high haplotype complexity by 'low LD, common alleles' and low haplotype complexity by 'high LD and/or many rare alleles'. Another aim of this article is to unify and reconcile all these claims with our findings. One way to think about LD is that it reduces the 'effective number of independent loci' by reducing the number of non-rare haplotypes. Thus, if the L loci can be grouped into B blocks with high LD within blocks and low LD between blocks, then the situation is similar to the case of B independent loci. We report some efficiency calculations to support this conjecture. The effect of rare alleles is also to reduce the number of non-rare haplotypes to just a few. Instead of having 8, 16 and 32 possible haplotypes for the cases of 3, 4 and 5 loci, if all the minor allele frequencies are small, we will argue later that there are only 4, 5 and 6 haplotypes with non-negligible probabilities when the number of loci is 3, 4 and 5. As a result, it will take a larger number of independent loci for pooling to lose efficiency relative to no pooling for rare alleles. For example, we show that if all the minor allele frequencies are 0.05, then pooling begins to lose efficiency when there are 6 (rather than 4) independent loci. When there is no rare allele, the normal guideline of not to pool when the effective number of independent loci is more than 3 is applicable.
THEORYIn order to derive the asymptotic variances of estimated haplotype frequencies, we reparameterize haplotype frequencies by using a log-linear model representation. In this section, we first calculate the asymptotic variances of estimated log odds ratios in the log-linear model under the assumption of linkage equilibrium, then compute the asymptotic variances of estimated haplotype frequencies by using the delta method. Let L be the number of loci in each DNA strand, Y j the binary allele at locus j, and Y = (Y 1 ,...,Y L ) denote the haplotype. There are various ways to parameterize the distribution of multivariate binary data such as Y = (Y 1 ,...,Y L ). We shall start with the canonical parameters because they are the simplest mathematically and they are not constrained. Under this log-linear formulation (), the probability distribution ofis the normalizing constant and ={0,1} L is the collection of all possible L-tuples of 0's or 1's. As pointed out by, the canonical parameters  have interpretations as the log-conditional odds, log-conditional odds ratios and higher order log-conditional odds ratios, which are defined as contrasts of log-conditional odds ratios. For example,and so on. Note that  (L) 12 and (L1) 12 have different interpretations because the conditioning sets are different. While the canonical parameters are easier to handle mathematically, it is more meaningful to talk about the unconditional odds and odds ratioand so on. Because these are parameters for the unconditional marginal distributions, there is no need to add superscripts to the 's like what we did for the 's. One useful observation isbecause the conditioning set of 12L is empty, and so 12L can be interpreted unconditionally. By making use of the method of efficient score, we prove in Appendix A (Section A1) that as the number of pools n P increases, the asymptotic variance of the MLE of  (L) 12L =  12L based on pooled allele frequencies at L loci which are at linkage equilibrium and K individuals in each pool, is given bywhere p j = P(Y j = 1). By applying the same argument to m < L, we can conclude that the asymptotic variance under linkage equilibrium of the MLE of (m) 12m =  12m based on pooled data for the first m loci only is also given by (2), with m in place of L. But since the pooled allele frequencies at the remaining L m loci contain no additional information about  12m under linkage equilibrium, the MLE of  12m based on pooled data at all L loci has the same asymptotic variance as the MLE based on the first m loci alone. This heuristic argument can be made precise and a rigorous proof can be provided on request. Thus the asymptotic variance (under linkage equilibrium) of the MLE of  12m based on the pooled allele frequencies at all L loci will still be given by (2) with m in place of L. The results presented thus far pertain to the estimation of the unconditional log odds ratios 's. What the scientists are more interested in estimating are the haplotype probabilities given by (1). To obtain the asymptotic variance of the haplotype frequency estimates, we first obtain the asymptotic variancecovariance matrix V K () of the pooled data MLE of the canonical parameters 's. An outline of how to do this is given in Appendix A (Section A2). Next, since P(Y = y) for each y is a function of the canonical parameters according to (1), the asymptotic variance V K (y) of its MLE is D y V K ()D T y by the delta method, where D y is the derivative of P(Y = y) with respect to . For example, when L = 2,
RESULTS
Efficiency in estimating unconditional log odds ratiosWe first compute the asymptotic relative efficiency (ARE) of the pooled data MLE of  12m ,m  L, to the unpooled data MLE (i.e. K = 1) as the following ratio of two asymptotic variancesIt follows that for estimating the locus-specific log odds  j , corresponding to m = 1, ARE is given by K 21 = K which is always greater than 1 since the pool size K is at least 2. Thus, pooling gains efficiency for estimating first-order quantities like  j , bearing in mind that we are not comparing the estimate based on n pools of K individuals each with the estimate based on nK individuals, but rather with the estimate based on n individuals, so that the genotyping costs are the same. For estimating the unconditional log odds ratio  jk at two loci, m = 2, and the ARE is K 22 = 1, meaning that the pooled and unpooled data MLEs are equally efficient. For estimating  jkl , the ARE is K 23 = K 1 < 1 , and so pooling will lose efficiency. For estimating  jklm , the ARE is K 24 = K 2 , which is worse. While it is not a big surprise that we cannot estimate higher order association parameters well from pooled DNA data, it is quite amazing to discover that there is an efficiency ladder. It is neat to be able to work out precisely the exact orders (in powers of K, the pool size) of the asymptotic variance of the pooled data MLE of the different parameters. Equation (3) is revealing because it tells us that the ARE of pooling versus no pooling in estimating the (m1)-th order log odds-ratio  12...m is reduced by a factor of K whenever m is increased by 1.summarizes what happen for up to the case of 8 loci. The numbers in the first column are the numbers of  parameters for which pooling gains efficiency in estimation. In the next column are the numbers of  parameters for which pooling and no pooling are equally efficient. Further right are the numbers of  parameters for which pooling loses efficiency in estimation, and notice that the farther out we go to the right of the table, the heavier is the loss in efficiency. We can see fromthat for the case of two loci, there are no  parameters with ARE less than 1. For the case of three loci, there are three  j 's for which the pooled data MLE is better, three  jk 's for which pooling and no pooling are asymptotically equivalent, and pooling is worse (ARE= K 1 ) only for the estimation of  123. These explain the findings ofthat pooling is efficient in estimating the haplotype probabilities P(Y = y), which are functions of the 's, when there are only two or three loci. Butalso tells us that the same cannot be expected to hold true when the number of loci is 4 or more.For the case of four loci, there are four  parameters which can be estimated from pooled data with ARE=K > 1, 6 parameters with ARE = 1, 4 parameters with ARE = K 1 < 1, and 1 parameter with ARE = K 2 << 1. On this ground, we expect pooling to begin to lose efficiency in the estimation of haplotype frequencies when there are four loci. This is confirmed by theoretical calculations to be reported later. Things should get progressively worse as the number of loci L increases. One can see fromthat as L increases, there will be more and more higher order parameters for which pooling will do progressively worse, since the ARE decreases by a factor of K every time we move to the right by one column.
Efficiency for haplotype frequency estimatesFor haplotype frequency estimation, we can define the asymptotic efficiency of pooling relative to no pooling bywhere K is the number of individuals in each pool, V K (y) is the variance of the MLE of P(Y = y), and ={0,1} L. As described at the end of Section 2, this ratio can be calculated theoretically for different choices of the number of loci L, minor allele frequencies and pool size K. To reduce the number of configurations, we select the minor allele frequencies to be equally spaced between 0.1 and 0.3. The results are summarized in. It can be seen that pooling loses efficiency in the estimation of haplotype frequencies when the number of loci is 4 or more, as one could have guessed from. Pooling will lose efficiency even for the case of three loci, when the pool size reaches 5 or more. For every fixed pool size K (i.e. column of), the efficiency of pooling decreases rapidly as the number of loci L increases. It decreases with pool size when L  3. The efficiency loss can be really huge. In fact, the efficiency of pooling relative to no pooling is no greater than 20% when the number of loci is 5 or more and the pool size is at least 4. To show how the variances of the haplotype frequency estimates grow as the number of loci increases, the lower panel ofdisplays the sum of the asymptotic variances of the haplotype frequency estimates. For calibration purposes, the figures are divided by 2 L (the total number of possible haplotypes) so that they can be interpreted as the average variances over all possible haplotypes. The numbers are further multiplied by n P , the number of pools, to remove their dependence on n P. We observe that the averagevariance decreases with L when the pool size is 1. They are more or less constant when the pool size is 2. For pool size larger than 2, the average variance increases with L, and more rapidly the larger L is. Note that if we divide the first column of the lower panel ofby the remaining columns, we recover the relative efficiencies displayed in the upper panel which always decay when the number of loci increases regardless of pool size. In addition to the scenario of equally spaced minor allele frequencies between 0.1 and 0.3, we also follow Kirk and Cardon (2002) and consider the cases where the minor allele frequencies are 0.5, 0.1 or 0.05 across all markers. The first situation will lead to many distinct haplotypes and the last situation will lead to very few haplotypes with appreciable probabilities and so they are at two ends of the sparsity spectrum. Based on our earlier argument, we expect pooling to fare better for rare alleles and this is confirmed byNote that there is severe loss in efficiency due to pooling, even for the case of three loci, when the minor allele frequency is 0.5. For allele frequency 0.1, pooling begins to lose efficiency relative to no pooling when the number of loci is 4 or more. However, when the minor allele frequency is 0.05, we observe fromthat pooling is more efficient than no pooling until we reach six or seven loci, and not the usual four loci that we have been advocating so far. There is an explanation why pooling is expected to fare better for rare alleles. Let p be the minor allele frequency which is assumed to be small and constant over loci, the 2 L possible haplotypes can be grouped according to the size of their probabilities of occurrence. Obviously, P(0,...,0) = (1p) L is of order O(1) as p goes to zero. The next frequent batch of haplotypes are the unit vectors (1,0,...,0),...,), containing one '1' and L 1 zeros with probability of occurrence P
Efficiency of pooling in haplotype estimation. All other haplotype probabilities will be of order O(p 2 ) or smaller. Thus, out of the possible 2 L haplotypes, only L +1 of them have non-negligible probabilities of occurrence. Following through the above argument, we have P,...,P L (1) are the locus-specific probability forallele '1'. These locus-specific or marginal probabilities can be estimated accurately from the corresponding sample proportions and the precision of a sample proportion depends only on the number of individuals in the sample whether it is pooled or not. In our setup of equal genotyping cost, there are K times more individuals under pooling compared with no pooling, where K is the pool size. Thus, it is not surprising that pooling does better than no pooling in estimating haplotype frequencies for very rare alleles. As to how rare is rare,suggests that a minor allele frequency of 0.1 is still within the domain of applicability of the usual guideline. When all the minor allele probabilities are 0.05, pooling has an advantage over no pooling until we reach six or seven loci. When half the minor allele frequencies are 0.01 and the other half are 0.05 (not reported in), pooling only begins to lose efficiency when the number of loci is 10. Further calculations suggest that pooling is more efficient than no pooling when all the minor allele frequencies equal 0.01.
Effects of genotyping errorWe have assumed perfect genotype data thus far. In practice, there will be error inand pooling was not considered. By using a uniform distribution of error for 010% randomly chosen individuals for whom Pr(observed genotype | underlying genotype) is the same for all possible genotypes, they might have exaggerated the effect of genotyping error by giving too much weight to large errors. More relevant to our theme of comparing pooling with no pooling,considered estimation of haplotype frequencies from pooled DNA samples when there is genotyping error and concluded that 'the EM algorithm performs well even in the presence of genotyping error' and that genotyping error only 'slightly decreases the accuracy of haplotype frequency estimates'. However, they studied the twomarker case only and their n-binomial model of observed genotype given true genotype was primarily an inflated variance model rather than one inducing a systematic bias. A third model of genotyping error proposed by Zou and Zhao (2003) assumed that genotyping error was introduced independently into each marker of each chromosome. We will use this model to demonstrate the effect of genotyping error because it is more amenable to theoretical analysis. For biallelic (0 and 1) marker, let 0 be the probability of miscalling a '0' as a '1', and 1 the probability of miscalling a '1' as a '0'. It follows that if p j is the probability of allele 1 at marker j, then the probability of actually observing allele 1 will be given by p * j = p j (1 1 )+(1p j ) 0 , which does not equal p j in general, hence creating a bias. Under linkage equilibrium, the true haplotype probabilities that we wish to estimate are P(of 0's and 1's, but the observed data actually follow the distributionNeglecting genotyping error, we are effectively estimating P * (y) rather than P(y), leading to a bias of b(, and the asymptotic variance of the estimator will have the same form as before, but evaluated at P * (y) rather than P(y). To take bias into account, we should define the efficiency of pooling relative to no pooling by the ratio of the sums of mean squared errors rather than the sums of variances. Thus (4) should be replaced by,where we have usedTo illustrate, we assume 0 = 1 = 0.05 and obtaininstead offor the efficiencies of pooling relative to no pooling when n P = 50. Comparingwith Table 2, we can see that genotyping error changes the relative efficiencies only slightly and the change is toward 1 because the squared bias term y b 2 (y) is common to both the numerator and denominator of the expression above. We will assume no genotyping error in the remainder of this article.
Efficiency under LDWhile the preceding results are derived under linkage equilibrium, we can expect the same to hold true near linkage equilibrium. To gain some insights into what happens when there are moderate to high LD, we will carry out some efficiency calculation. To make it amenable to theoretical calculation without the need to resort to simulation studies, we consider the case where the loci can be grouped into blocks of size 2 each, with independence between blocks, and with intra-block LD coefficient D = 0,0.25,0.5,0.75,0.99. The minor allele frequencies are the same within blocks and equally spaced from 0.1 to 0.3 between blocks. We denote these block size 2 models by 22, 222 and so on. Thus, under model 22, the probability of the occurrence of haplotype (1,1,1,1) is {0.In general, D = 0 corresponds to the case of L = 2B independent loci, where B is the number of blocks, and the effective number of independent loci reduces from 2B to B when D = 0.99. By fixing the block size at 2, we are able to express the expected Fisher's information matrix in terms of certain quantities involving the noncentral hypergeometric distribution () which can be calculated accurately (). In Appendix A (Section A3), the derivation of the asymptotic variancecovariance matrix of the MLE of haplotype frequencies for model 22 is given. The derivations for models 222 and 2222 can be similarly obtained. The efficiencies of pooling relative to no pooling for estimating haplotype frequencies under these block size 2 models are reported in. Since many haplotypes have negligible probabilities of occurring under high LD, it may not be reasonable to include the variances of their estimates in the sums appearing in the numerator and denominator of (4). As an alternative measure, we consider thresholding the sums by including V 1 (y) and V K (y) in the sums only when P(Y = y) exceeds a threshold. We consider a haplotype probability to be lower than the threshold if P(Y = y)  c/2 L for two choices of c, 0 and 0.1. The use of c = 0 corresponds to no thresholding, whereas the choice c = 0.1 would exclude a haplotype from the summations in (4) if its probability is less than or equal to one-tenth of the uniform probability 1/2 L for the case of L loci. It can be seen fromthat the effect of thresholding on the resulting relative efficiencies are minimal and so we will concentrate on the non-threshold version in the following discussion. When D = 0, all the loci are independent, which is why the first rows for models 22, 222 and 2222 are close to the 'L = 4', 'L = 6' and 'L = 8' rows of. They are close but not identical because the marginal minor allele frequencies are different. To be specific, model 22 incorresponds to the case, whereas the four loci case ofis for p 1 = 0.1,p 2 = 0.167,p 3 = 0.233 and p 4 = 0.3. We observe also that the last rows under models 22, 222 and 2222 inare very close to the 'L = 2', 'L = 3' and 'L = 4' rows of. This verifies our intuition that the B-block model reduces to the case of B independent loci when D is large. Another observation fromis that the efficiency of pooling increases with D , which underlies why high LD is sometimes used to justify pooling. This phenomenon can again Page: 2561 25562563. ARE of pooling relative to no pooling in estimating haplotype frequencies for various combinations of D (LD coefficient) and K (pool size) for models 22, 222, and 2222 with thresholding constant cbe explained by the fact that the effective number of independent loci decreases as LD increases. The efficiency of pooling is always less than 1 infor model 2222 because the effective number of independent loci is at least 4. Pooling can be more efficient than no pooling for model 222, but only when D = 0.99, so that there are effectively only three independent loci, and when the pool size K is less than 5. The results for the case of intermediate LD are expectedly in between those for linkage equilibrium and high LD. The 'D = 0.75' row under model 22 is peculiar in that the efficiency is not monotonic, but first increases with pool size and then decreases. An explanation of this unusual behavior is that according to, the efficiency decreases with pool size when the number of independent loci is 3, but increases with pool size when there are only two loci (which in turn can be explained by). When D = 0.75, the effective number of independent loci for model 22 is somewhere between 2 and 3 and hence the non-monotonic behavior.
Efficiency of pooling in haplotype estimation
DISCUSSIONWe have shown in this article that contrary to the findings of, pooling loses efficiency relative to no pooling in the estimation of haplotype frequencies when the number of independent loci is more than 3 and the alleles are not rare. Rare alleles cause sparsity which favors pooling. When the minor allele frequency is 0.05, pooling is more efficient than no pooling until the number of independent loci reaches 6 or 7. Rarer alleles will favor pooling even more. The effect of high LD is also to cause sparsity which allows pooling to maintain an advantage over no pooling for a larger number of loci than is possible under linkage equilibrium. To apply the guidelines derived under the assumption of linkage equilibrium, we find it useful to think in terms of the effective number of independent loci. For example, for model 2222, the effective number of independent loci is 8 when D = 0 and 4 when D = 0.99. By interpolation, it seems reasonable to treat the cases D = 0.25,0.5,0.75 like there are 7, 6 and 5 independent loci, respectively, and this is substantiated by comparing Table 2 with. To summarize, the main finding of this article is that for non-rare alleles and for the same genotyping cost, pooling loses efficiency relative to no pooling in the estimation of haplotype frequencies when the number of independent loci is more than 3. The critical number will increase for rare alleles, for example, to 6 when the minor allele frequency is 0.05. Our findings do not mean that pooling should not be applied in practice. There are circumstances under which pooling is more efficient than no pooling, namely, in situations when only a small number of haplotypes can occur with appreciable frequency () which can be caused by high LD, or rare alleles, or both. Thus, pooling is potentially useful in studies which employ dense sets of markers such as in the genome-wide context.suggests that genotyping error does not have a prominent effect on our findings. Ideally, one could incorporate genotyping error into the modeling and estimation procedure but this is beyond the scope of the present article. To compare haplotype frequencies in casecontrol studies, we must first estimate the frequencies separately for the cases and the controls and so our findings are still relevant. Note that when we say no pooling in this article, we actually mean that we are not pooling individuals (i.e. pool size is 1). As commented by, even when the pool size is 1, the data collected for each individual is typically genotype data which is a pool of two chromosomes or haplotypes. There will be information loss due to phase ambiguity. The ARE of haplotype estimation from individual genotype data without phase information relative to genotype data with phase information (which is much more expensive to get; easily 10 times more according to our colleagues who collect such data) can also be calculated using the results of this article for the asymptotic variance of the unphased data MLE and the multinomial variance formula for the phased data MLE. Assuming again that the minor allele frequencies are equally spaced between 0.1 and 0.3, the asymptotic efficiencies of the estimator based on unphased data relative to that based on phased data are 0.874,0.717, ,0.101,0.078 for the case of 212 Page: 2562 25562563
A.Y.C.Kuk et al.independent loci. Unlike in Tables 2 and 3, we have not taken cost into consideration so far. Suppose it is c times more expensive to obtain phased data, then the costs of collecting phased data for n I individuals and unphased data for cn I individuals are the same and the aforementioned asymptotic efficiencies should all be multiplied by c to give a fairer comparison based on the same cost. It follows that if c = 10, there is no gain in estimation efficiency (for the same cost) to obtain phase information if the number of independent loci L is less than 12. The effect of LD is to reduce the effective number of independent loci and this will favor no phasing even more. This provides theoretical justification to the prevailing practice of not ascertaining phase information using molecular haplotyping method.
APPENDIX12L , we can work with the canonical parameters and the problem reduces to finding the asymptotic variance of the MLE of 12L. For a pool of K individuals, there are n = 2K DNA strands. Letbe the haplotypes of the n strands. Assuming HardyWeinberg equilibrium, Y 1 ,...,Y n are independent and identically distributed according to the distribution given by (1). With DNA pooling, we observe only, where T j = Y 1j ++Y nj is the total allele frequency at locus j. The likelihood function based on the observed data T = Y 1 ++Y n can be obtained from the probability function (1) using the multivariate convolution formula and we can differentiate the resulting log-likelihood function to obtain the score function. This is very tedious and an easier way to obtain the score functions based on the observed data T = Y 1 ++Y n is to take conditional expectation of the score functions based on the unobserved data Y 1 ,...,Y n , which is a well-known result in the EM literature (see, e.g., p. 100). It is straightforward to write down the score functions based on Y 1 ,...,Y n because the distribution in (1) belongs to an exponential family. Taking conditional expectations of these exponential family score functions will give us the score functions based on the observed data T = Y 1 ++Y n. Under linkage equilibrium, the score functions can be further simplified toThe last score S 12L above corresponds to
Efficiency of pooling in haplotype estimationMLEMLE MLE12L , as the number of pools n P increases, is to find the efficient score which is the projection of the score S 12L to the space orthogonal to all the other scores. When this is done, the asymptotic variance ofof of12L is n 1 P times the reciprocal of the variance of the efficient score. It can be easily verified that the efficient score isn since it can be written as S 12L plus a linear combination of the other scores, and it is orthogonal/uncorrelated to all the other scores as a result of centering and independence. Using the facts that E(S) = 0 and the T j 's are independent under linkage equilibrium, the variance of the efficient score S isfrom which (2) follows.An orthogonal basis for the 2 L 1 score functions S 1 ,...,S L ,S 12 , ...,S L1,L ,S 123 ,...,S L2,L1,L ,...,S 12L of the canonical parameters is given by
A2 DerivationOne can readily express the scores S 1 ,...,S L ,S 12 ,...,S L1,L , S 123 ,...,S L2,L1,L ,...,S 12L as linear combinations of the Z's by taking inner products. As a result, we can obtain the Fisher's information matrix, which is just the variancecovariance matrix of the scores, from the variancecovariance matrix of the Z's which is diagonal due to orthogonality. The asymptotic variancecovariance matrix of the MLE of the canonical parameters is n 1 P times the inverse of the Fisher's information matrix.
A3 DerivationDefineTDefine DefineT 34 ,n * 2 ,p * 2 ,I 2 similarly for loci 3 and 4 in block 2. Exploiting intra-block independence and definethen the score vector for  = (is the probability of allele '1' at loci i 1 ,...,i k. Denote p  1615 by B. By the delta method, the asymptotic variancecovariance matrix for the MLE of p is B(AI 1 A T ) 1 B T .
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
