Gene coexpression analysis was developed to explore gene interconnection at the expression level from a systems perspective, and differential coexpression analysis (DCEA), which examines the change in gene expression correlation between two conditions, was accordingly designed as a complementary technique to traditional differential expression analysis (DEA). Since there is a shortage of DCEA tools, we implemented in an R package 'DCGL' five DCEA methods for identification of differentially coexpressed genes and differentially coexpressed links, including three currently popular methods and two novel algorithms described in a companion paper. DCGL can serve as an easy-to-use tool to facilitate differential coexpression analyses. Contact: yyli@scbit.org and yxli@scbit.org
INTRODUCTIONFrom the perspective of systems biology, gene coexpression analysis is useful for investigating gene interconnection at the expression level. Differential coexpression analysis (DCEA), which examines the change in expression correlation of gene pairs between two conditions, helps to explore the global transcriptional mechanisms underlying phenotypic changes. Compared with traditional differential expression analysis (DEA), the development of DCEA tools is lagged. In this work, we developed an R package, DCGL, implementing three previously proposed DCEA methods and two new algorithms reported in a companion paper (submitted for publication). Log Ratio of Connections (LRC) calculates the logarithm of the ratio of the connectivities of a gene between two conditions (). Average Specific Connection (ASC) counts the 'specific connections' that exist in only one coexpression network (). The weighted genecoexpression network analysis (WGCNA) weights links with correlation coefficients and compares the sums of the correlation coefficients of a gene (). In contrast, our two methods, differential coexpression profile (DCp) and differential coexpression enrichment (DCe), are designed based on the exact coexpression changes of gene pairs, and thus can differentiate significant coexpression changes from relatively trivial ones, and identify coexpression reversal between positive and negative (submitted for publication). All the five methods are able to identify differentially coexpressed genes (DCGs) from microarray datasets, and DCe is also able to pick out differentially coexpressed gene pairs or links (DCLs).
DESIGNA typical DCEA workflow involves three successive procedures: gene filtration, link filtration, DCG and DCL identification. Correspondingly, DCGL consists of three parts of functions (). For gene filtration, one choice is based on the expression level (expressionBasedfilter) and the other based on its variability (varianceBasedfilter). For link filtration, we provide three functions for cutting off coexpression values (systematicLinkfilter, percentLinkfilter and qLinkfilter).
B.-H.Liu et al.if both of its coexpression values for two conditions are lower than the cutoff. The third part, also the core of the package, includes five methods for identifying DCGs and DCLs, which mainly differ in the measure of differential coexpression (dC) of a gene. After the steps of gene filtration and link filtration, suppose gene i is associated with n i links whose coexpression values are projected to X ={x i1 ,x i2 ,...,x in i }and Y ={y i1 ,y i2 ,...,y in i } for two conditions. The dC measures of different methods are given in the following equations.where N and K indicate the numbers of total links and total DCL links in the coexpression network, respectively, and n i and k i indicate the links and DCLs connected to gene i (see Yu,H. et al., submitted for publication).with x and y are transformed from original x and y values with a 'soft-thresholding' strategy ()Link sets C 1 (i) and C 2 (i) for two conditions are determined by screening the coexpression values according to a certain threshold.
IMPLEMENTATIONDCGL is released as an R package including two gene filtering functions, three link filtering functions and five DCEA functions (). These functions generally expect gene expression matrices (with genes in rows and samples in columns) as a major input, and the ultimate output are genes ranked by dC measure or P-value, from which one can obtain a DCG list. DCe has an additional output of classified DCLs. DCGL can be obtained from the supplementary data to this manuscript, or at http://cran.r-project.org/web/packages/ DCGL/index.html. We tested the five DCEA methods using dataset GSE3068 obtained from GEO (). Note that this test was carried out with the most time-efficient option of link filtration (setting thresholds on coexpression value directly). For the memory analysis, we tested DCp and DCe with the most memory-intensive filtration optionDifferent subsets, with a reduced number of rows, were taken from GSE3068 by favoring genes with top-ranked expression variability. The computing platform is a Linux system with five nodes, each having a dual quad-core Intel Xeon 2.33 GHZ CPU and a RAM of 16 GB. Execution time was averaged over five repetitive runs. 'qLinkfilter'. We approached a memory limit of around 5.7 GB at a gene total of 7000. So it is anticipated that, if qLinkfilter is evoked, a gene expression matrix generally should undergo a gene filtration step beforehand so that the gene total is cut down to a few thousands or less.
EXAMPLEThree simulated datasets are included in the package for exploring the functions. For example, 'dataC' gives expression values of 1000 genes in 20 samples divided equally into two groups corresponding to two conditions. Since this dataset contains a moderate number of genes, the gene filtration step can be skipped. The link filtration procedure is wrapped as a sub-function in the DCEA functions, so one can specify the link filtration choice in the arguments of DCEA functions. If the DCEA function DCe is called, one can get a resulted variable with four components. The gene names ranked by the dC measure (P-value) make up the first '$DCGs' component, while DCLs of different types are given in other three components.
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
