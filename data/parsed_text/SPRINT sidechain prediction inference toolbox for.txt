SPRINT is a software package that performs computational multistate protein design using state-of-the-art inference on probabilistic graphical models. The input to SPRINT is a list of protein structures, the rotamers modeled for each structure and the pre-calculated rotamer energies. Probabilistic inference is performed using the belief propagation or A* algorithms, and dead-end elimination can be applied as pre-processing. The output can either be a list of amino acid sequences simultaneously compatible with these structures, or probabilistic amino acid profiles compatible with the structures. In addition, higher order (e.g. pairwise) amino acid probabilities can also be predicted. Finally, SPRINT also has a module for protein side-chain prediction and single-state design. Availability: The full C++ source code for SPRINT can be freely downloaded from
INTRODUCTIONThe objective of engineering a protein to perform a particular biological function is called protein design. The design problem is usually restricted to the search for an amino acid sequence that assumes a target 3D structure (), presuming that it will possess a corresponding function. This paradigm typically assumes a fixed protein backbone, and the amino acid side chain conformations to be considered are taken from a library of energetically favorable empirical observations termed rotamers (). Lastly, pairwise atomic energy functions are used to assign pseudo-physical energetic values to pairs of rotamer atoms (), and thus employed to score the compatibility of a particular sequence to the structure. Recently, researchers have moved toward more realistic modeling of proteins in their cellular environment by generalizing the design concept to explicitly seek sequences that adopt multiple functional states, (). We have achieved this goal by formulating protein design using probabilistic graphical models (). Here, we * To whom correspondence should be addressed. present the software built to this end, SPRINT (side-chain prediction inference toolbox for multistate protein design). SPRINT accepts as input multiple protein structures, their respective rotamers and their pre-calculated energies. Furthermore, it is explicitly built to provide the user with a global view of the sequence space compatible with these multiple structures, since we have shown the significance of predicting both multiple low-energy sequences () and amino acid profiles ().
METHODSSPRINT is an open-source C++ software package that uses structural data to design functional protein sequences. The probabilistic inference core of SPRINT is based on the FastInf package (). Protein structures are cast as probabilistic graphical models, and inference is performed to obtain amino acid sequences compatible with the multiple input structures (). Multiple sequences can be predicted using the type-specific Best Max-Marginal First algorithm (), and amino acid profiles can be calculated using the sum-product belief propagation (BP) algorithm (). Seefor an overview of the SPRINT procedure.
RESULTSSPRINT can be downloaded and installed on the user's machine. In addition, due to their object-oriented nature, SPRINT modules can be extended to provide user-specific functionalities, such as atomic energy function calculations for input PDB structures.demonstrates a run of the SPRINT package on the peroxisome proliferator-activated receptor (PPAR) interface design problem from. As input, rotamer rotamer energies must be pre-computed (obtained here using the RosettaDesign package;) for each protein structure and stored in the FastInf format (see http://www.protonet .cs.huji.ac.il/sprint/energies.php for details). The energy files, along with the relevant rotamer lists, are the input that SPRINT uses to construct a probabilistic graphical model. Since it has been shown that state-of-the-art atomic energy functions can still benefit from significant improvement (), we did not choose a particular energy function to be included in the package but leave this choice to the user, thus separating the energetic aspects of the design process from the search process.Page: 2467 24662467. The SPRINT input consists of a set of protein structures (e.g. 1K74.protein), their rotamer lists and pre-calculated interaction energies. These are converted into a probabilistic graphical model (illustrated here for four positions) and a probabilistic inference algorithm is run. The user can choose to output multiple low-energy amino acid sequences (top) or globally consistent amino acid probabilities (bottom). In this example, we demonstrate a run of SPRINT on the interface of PPAR, where the goal is to design PPAR interface sequences compatible with binding both the retinoic acid receptor (RXR, PDB code 1K74) and another PPAR monomer (PDB code 2PRG) (). The SPRINT command-line options for running these examples are shown on the arrows, and the data files can be found at http://www.protonet.cs.huji.ac.il/sprint/#examples. The extensive benchmarking results for the algorithms implemented in the open-source SPRINT package are shown at far right; detailed lists can be found in Supplementary Tables S1S4. SPRINT builds a graphical model to represent all protein structures in the multistate design by connecting corresponding positions in the structures and requiring that they choose the same amino acid. In, SPRINT will design the PPAR interface to be optimal for binding both RXR and another PPAR monomer. Probabilistic inference is performed using either the BP () or A* algorithms (), and typedependent dead-end elimination can be applied as pre-processing for the prediction of low-energy sequences (). We have previously shown that BP-based approaches outperform other methods in predicting sequences with low energies and computing more accurate sequence profiles (); see, Supplementary Tables S1S4, and accompanying references for details. The user can choose to predict either multiple low-energy sequences suitable for the input protein structures, or to predict amino acid probabilities for each position (or pair of positions).shows both options, with the 10 interface sequences most suited to bind both RXR and PPAR (top), and positional probabilities (bottom) calculated by approximating a statistical evaluation of all possible sequences weighted by the Boltzmann distribution of their side-chain conformational free energies (). In, it was found that the sequences predicted to bind both targets better match evolutionary PPAR profiles than those optimized to bind only one target. To this date, we have successfully used SPRINT for numerous single-state design problems (7 to 92 designed positions, rotamer space 10 24 to 10 200 ,) and hundreds of multistate design problems (20 positions, up to three states with combined rotamer space 10 200 ,), where in all cases all amino acids were permitted at each design position. Lastly, we note that SPRINT also has a module for protein side-chain placement and single-state design; see web site for details.
Inference toolbox for multistate protein design
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
