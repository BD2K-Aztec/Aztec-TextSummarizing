Motivation: Metagenomics is a powerful approach to study genetic content of environmental samples , which has been strongly promoted by next-generation sequencing technologies. To cope with massive data involved in modern metagenomic projects, recent tools rely on the analysis of k-mers shared between the read to be classified and sampled reference genomes. Results: Within this general framework, we show that spaced seeds provide a significant improvement of classification accuracy, as opposed to traditional contiguous k-mers. We support this thesis through a series of different computational experiments, including simulations of large-scale metagenomic projects. Availability and implementation, Supplementary information: Scripts and programs used in this study, as well as supplementary material, are available from
IntroductionMetagenomics is a powerful approach to study genetic material contained in environmental samples. The advent of high-throughput sequencing technologies (known as Next-Generation Sequencing, NGS) revolutionized this approach by avoiding the need of cloning the DNA and thus greatly facilitating the obtention of metagenomic samples, at the same time drastically decreasing its price. Presentday metagenomic studies focus on various bacterial, fungal or viral populations, exemplified by the Human Microbiome project () that investigates microbial communities at different sites of human body. Modern metagenomics deals with vast sequence datasets. On the one hand, metagenomic samples (metagenomes) obtained through NGS are commonly measured by tens of billions of bp (). These sequences generally come from a number of different species, some of which either have a previously sequenced reference genome or have a related sequenced species sufficiently close phylogenetically to determine this relationship by sequence comparison. Other sequences, however, may come from organisms that have no sufficiently close relatives with sequenced genomes or from DNA fragments that show no significant similarity with any available genomic sequence. The metagenomic classification problem is to assign each sequence of the metagenome to a corresponding taxonomic unit or to classify it as 'novel'. A way to improve the accuracy of metagenomic classification is to match the metagenome against as large set of known genomic sequences as possible. This set, stored in a working reference database, may contain thousands of full microbial genomes (). Alignment-based classifiers () proceed by aligning metagenome sequences to each of the genomes in the reference database. This can be done with generic BLAST-like alignment programs (). While this approach can be envisaged for small datasets (both metagenome and database) and is actually used in such software tools as MEGAN () or PHYMMBL () (see () for V C The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com more), it is unfeasible on the scale of modern metagenomic projects. On the other hand, there exists a multitude of specialized tools for aligning NGS readsBWA (), NOVOALIGN (http://www.novocraft.com/), GEM (), BOWTIE (), just to mention a few popular oneswhich perform alignment at a higher speed and are adjusted to specificities of NGS-produced sequences. Still, aligning multimillion read sets against thousands of genomes remains computationally difficult even with optimized tools. Furthermore, read alignment algorithms are usually designed to compute high-scoring alignments only and are often unable to report low-scoring alignments. As a result, a large fraction of reads may remain unmapped (). Several techniques exist to reduce the computational complexity of this approach. One direction is to pre-assemble reads into longer contigs, potentially improving the accuracy of assignment. Assembly of metagenomic reads has been a subject of many works () and remains a fragile approach, due to its error-proneness and high computational complexity. Overall, it appears feasible mostly for small-size projects with relatively high read coverage. To cope with increasingly large metagenomic projects, alignment-free methods have recently come into use. Those methods do not compute read alignments, thus do not come with benefits of these, such as gene identification. Alignment-free sequence comparison is in itself an established research area, reviewed in a recent dedicated special issue (). Most of alignment-free comparison methods are based on the analysis of words, usually of fixed size (k-mers), occurring in input sequences. A popular approach is to compute the distance between frequency vectors of all k-mers in each of the sequences. In the context of metagenomics, however, when one of the sequences is short (NGS read), the analysis is based on the shared k-mers, without taking into account their multiplicities in reference genomes. This is also dictated by the prohibitive computational cost of computing and storing k-mer multiplicities for metagenomics-size data. Two recently released toolsLMAT () and KRAKEN ()perform metagenomic classification of NGS reads based on the analysis of shared k-mers between an input read and each reference genome. Given a taxonomic tree involving the species of the database, those tools 'map' each read to a node of the tree, thus reporting the most specific taxon or clade the read is associated with. Mapping is done by sliding through all k-mers occurring in the read and determining, for each of them, the genomes of the database containing the k-mer. Based on obtained counts and tree topology, LMAT and KRAKEN algorithms assign the read to the tree node 'best explaining' the counts. Further similar tools have been published during last months (). The goal of this work is to show that the metagenomics classification based on the analysis of shared k-mers can be improved by using spaced k-mers rather than contiguous k-mers. The idea of using spaced k-mers goes back to the concept of spaced seeds for seed-and-extend sequence comparison (). There, the idea is to use as a seed (i.e. local match triggering an alignment) a sequence of matches interleaved with 'joker positions' holding either matches or mismatches. The pattern specifying the sequence of matches and jokers is called spaced seed. Remarkably, replacing contiguous seeds by spaced seeds in sequence alignment significantly improves the sensibility-selectivity trade-off with almost no incurred computational overhead. This has been first observed byand then extended and formally analyzed in a series of further works, see Brown (2008) and) and references therein. Recently, it has been reported in several works that spaced seeds bring an improvement in alignment-free comparison as well.show that comparing frequency vectors of spaced k-mers (k-mers obtained by sampling must-match positions of one or several spaced seeds), as opposed to contiguous k-mers, leads to a more accurate estimation of phylogenetic distances and, as a consequence, to a more accurate phylogenetic reconstruction.study another measurethe number of pairs of matching (not necessarily aligned) spaced k-mers between the input sequencesand show that it provides an even better estimator of phylogenetic distance. In No and Martin (2014), it is shown that the number of hits of appropriately chosen spaced seeds (i.e. the number of pairs of matching aligned spaced k-mers between the two sequences) and their coverage (i.e. the total number of matches covered by all hits) provides a much better estimator for the alignment distance than the same measures made with contiguous seeds. From a machine learning perspective,and Onodera and Shibuya (2013) show that spaced seeds provide better string kernels for SVM-based classification, confirmed by experiments with protein classification (see also No and Martin, 2014). In this work, we show that using spaced k-mers significantly improves the accuracy of metagenomic classification of NGS reads as well. To support this thesis, we consider different scenarios. As a test case, we first study the problem of discriminating a read between two genomes, i.e. determining which of the two genomes is 'phylogenetically closer' to the read. We then analyze the correlation between the score of an alignment of a read to a genome and the seed count for this read, defined either as the number of hits or as the coverage. This analysis provides an insight on how well one can estimate the similarity between a read and a genome out of k-mer occurrences. Finally, we make a series of large-scale metagenomic classification experiments with KRAKEN software () extended by the possibility of dealing with spaced seeds. These experiments demonstrate an improved classification accuracy at the genus and family levels caused by the use of spaced seeds instead of contiguous ones.
MethodsA spaced seed is a binary pattern over symbols # and-denoting match and joker, respectively. For example, seed #-## specifies a match followed by either match or mismatch followed by two consecutive matches. A seed acts as a mask for comparing short oligonucleotides, for example sequences gaat and gcat differ at the 2nd position, but they match via seed #-## as the 2nd position is masked out. The number of #'s in a seed, called weight, defines the number k of matching nucleotides. In the above example, k  3 and the matching (spaced) k-mer is gat. In a slightly different terms, a seed is a pattern that specifies a small part of a gapless alignment seen as a binary sequence of matches and mismatches. For example, seed #-## occurs in (or hits, as usually said) any alignment containing a match followed by another two matches shifted by one position. When spaced seeds are used for sequence alignment within the seed-and-extend paradigm (), a pair of matching k-mers (or, sometimes, a matching sequence of several closely located k-mers) indicates a potential alignment of interest in which the two k-mers are aligned together. When spaced seeds are used for alignment-free sequence comparison (), the goal is to estimate the similarity of two sequences based on the number of matching k-mers, with no or limited information about their positions in one or both sequences. This measure can be defined in several different ways. In the context of metagenomic classification of NGS reads, the goal is to estimate the distance between a short read and a long sequence (genome), which can be modeled by the best alignment score of the read against the sequence. Because of large genome size and large number of reference genomes involved in computations, one of the constraints is to avoid keeping track of positions of k-mers in genomes. We can only afford constructing an index to quickly answer queries whether a k-mer occurs in a given genome, without information on its positions. On the other hand, k-mer positions in the query read can be included to the analysis. Therefore, we have to derive our estimation from the number of k-mers shared between the read and the genome, together with their positions in the read alone. One simple estimator is the number of k-mers in the read that occur in the target genome, we call this measure the hit number. However, one may want to favor cases when matching k-mers cover a larger part of the read versus those with matching k-mers clumped together due to overlaps. This leads to the concept of coverage (), earlier used in seed-based alignment algorithms as well (;). The coverage is the total number of positions covered by all matching k-mers. For example, consider seed #-## and read gaatcagat. Assume the seed hits at positions 1, 4 and 6, i.e. k-mers g-at, t-ag and a-at occur in the target genome (joker symbol is shown for the sake of clarity). Here, the hit number is 3, and the coverage is 7 as seven positions are covered by hits, namely positions 1, 3, 4, 6, 7, 8 and 9. Hit number and coverage are two main estimators studied in this work.
Results
Binary classificationFrom the machine learning viewpoint, hit number and coverage can be viewed as instances of kernel functions for sequence data (). Our first step is to compare their capacity with respect to a simple binary classification task. Assume the (impractical) case when our database contains only two genomes. Given a read, we have to decide which of the two genomes the read is closer to. How good can we be at that? Which kernel works better for this task? And are spaced seeds better than contiguous seeds here?
Classifying aligned readsConsider alignments A s , A l of a random read to two genomes and assume they are gapless and have mismatch probabilities P s , P l, respectively, with P s < P l. Throughout this article, the read length is set to 100, a typical length of ILLUMINA read. Therefore, the alignments can be viewed as random binary strings of length 100 of matches and mismatches, with mismatch probabilities P s and P l, respectively. Given a seed, we compute two counts C s and C l on alignments A s and A l, respectively, where by 'count' we mean, unless otherwise stated, either the hit number or the coverage. For example, if the seed is #-## and the alignment 111101111 (1 stands for match and 0 for mismatch), then the hit number is 3 and the coverage is 7. Note that in this model, common (spaced) k-mers are assumed to occur necessarily at the same position in the read alignment, although in reality, a k-mer of the read may not be aligned with the same k-mer in the genome. However, here we abstract from this fact. If C s > C l (respectively, C s < C l ), then we report a correct (respectively, incorrect) classification, otherwise a tie is reported. By iterating this computation, we estimate the probability of correct/incorrect classification for each parameter set. Some results are presented in. In all cases, spaced seeds showed a better classification power. In some cases, the difference is striking: for example discriminating between alignments with mismatch probabilities 0.1 and 0.2 () using seeds of weight 22 yields 86% of correct classifications with a spaced seed (coverage count) and only 65% with the contiguous seed, whereas the fraction of incorrect classifications is essentially the same. The results also show a slight edge of the coverage count over the hit number, which will be confirmed later on in other experiments as well. Compared with recent works (No and Martin, 2014;) showing the advantage of using spaced seeds in SVM kernels, here we demonstrate the superiority of spaced seeds in a very simple classification setting where sequences have to be classified according to identity rate, without a training stage and without resorting to SVM machinery.
Classifying unaligned readsLet us now turn to a more practical setting, where we want to classify reads coming from a genome G between two other genomes G 1 and G 2 based on the phylogenetic closeness. To study this, we implemented the following experimental setup. Using DWGSIM read simulator (http://github.com/nh13/DWGSIM), we generate single-end ILLUMINA-like reads from genome G. In all experiments, we assumed 1% of base mutations (substitutions only) and 2% of sequencing errors (DWGSIM options-e 0.02-r 0.01-R 0). Given a seed, (contiguous or spaced) k-mers of G 1 and G 2 are indexed to support existence queries only. For each read, all k-mersare queried against G 1 and G 2 and corresponding counts C 1 and C 2 are computed. If C 1 > C 2 (respectively, C 1 < C 2 ), the read is classified to be closer to G 1 (respectively, G 2 ), otherwise a tie is reported. Besides considering absolute counts (hit number and coverage), we also considered hit number normalized by the number of distinct k-mers in the corresponding genome (computed at the indexing stage). This measure approximates the Jaccard index () and reflects the Bayesian probability of seeing a k-mer relative to the 'k-mer-richness' of genomes. Note that the counts are computed here relative to the whole genome, as it is done in the approach ofand Wood and Salzberg (2014) (see Section 1). This makes the seed weight an important parameter, as seeds of low weight increase random k-mer hits that do not evidence any alignment of the read. We experimented with bacterial genomes of Mycobacterium genus. Members of this genus present low interspecies genetic variability and their phylogeny remains uncertain (). If G coincides with one of G 1 , G 2 , i.e. reads have to be discriminated between their source genome and another genome, then all estimators correctly classify nearly all reads as soon as G 1 and G 2 are genomes of distinct species. For example, classifying reads obtained from Mycobacterium tuberculosis (H37Rv, acc. NC_018143) against M.tuberculosis itself and Mycobacterium avium (104, NC_008595) led to more than 99% of correct classifications for all estimators. The more interesting case when G is distinct from G 1 , G 2 corresponds to the real-life situation when reads to be classified come from a genome that is not represented in the database. Here, we expect our procedure to determine whether G is phylogenetically closer to G 1 or to G 2. For example, we classified Mycobacterium vanbaalenii (PYR-1, NC_008726) reads against Mycobacterium smegmatis (MC2 155, NC_018289) and Mycobacterium gilvum (PYR-GCK, NC_009338) genomes. Alternative phylogenies given in Tortoli (2012) (4) imply different evolutionary relationships among these three species. Our results, shown in, suggest that M.vanbaalenii is closer to M.gilvum than to M.smegmatis. For non-normalized hit number and coverage estimators, this conclusion is supported by seeds of weight 16 or more, while weight 14 supports the opposite conclusion. This is due to spurious hits that become dominating when the weight drops to 14 and to the larger size of M.smegmatis genome (6.99 Mb) compared with M.gilvum (5.62 Mb). This effect is corrected by Jaccard index due to normalization by the number of distinct k-mers (6.09 M for M.smegmatis versus 4.96 M for M.gilvum for the spaced seed of weight 14). Overall, we observe a significantly sharper discrimination produced by spaced seeds compared with contiguous seeds. We also performed a series of experiments with the large and genetically variable Bacillus genus.shows a demonstrative experiment with members of Bacillus cereus group: Bacillus thuringiensis (serovar konkukian 97-27, NC_005957), Bacillus anthracis (Ames, NC_003997) and B.cereus (ATCC 14579, NC_004722). The three bacteria are close to the point of being considered to be different lineages of a single B.cereus species (). The results provide a strong support that the B.thuringiensis strain is closer to the B.anthracis strain than to the B.cereus strain, which agrees with phylogenies reported in the literature (). Indeed, the B.thuringiensis and B.anthracis strains have a much higher pairwise identity rate than the former has with the B.cereus strain [estimated DNADNA hybridization distance 81% versus 45%, as computed by GGDC (. However, for species with low sequence similarity, a large majority of reads may have no hits to either genome, and only a small fraction of reads may reveal a significant difference in distance. This situation is illustrated inshowing the results of classification of Bacillus licheniformis (ATCC 14580, NC_006270) reads against B.anthracis (Ames, NC_003997) and Bacillus pumilus genomes (SAFR-032, NC_009848). The results support a higher similarity of B.licheniformis to B.pumilus than to B.anthracis, but the difference is revealed on a very small fraction of reads. The conclusion, however, is significant as those reads represent the majority of reads having any hits to one of the genomes. In all our experiments reported in this section, spaced seeds showed a better classification capacity. The difference is especially significant in 'nontrivial' cases involving relatively dissimilar genomes, such as those illustrated by Tables 2 and 4. While the difference between hit number and coverage estimators appeared insignificant (in agreement with results of Section 3.1.1), the Jaccard index generally provides a more distinct discrimination and, combined with a spaced seed, appears to be the best estimator.
Correlation of counts and alignment scoreIn metagenomic projects, reads to be classified may come from species whose genomes are not stored in the database. These species can be genetic variants of species of the database, such as different strains of the same bacteria, but can also come from organisms represented in the database only at the rank of genus or family or may have no representatives at low taxonomic ranks at all. Therefore, an accurate mapping of a read to a corresponding clade requires estimating its distances to each of the genomes to locate its position within the whole taxonomic tree. With this motivation, we studied how well the measured counts correlate with the alignment score. For a fixed minimal identity rate P id , we randomly sampled gapless alignments of length 100 with identity rate from interval P id ::1 and collected pairs (number of mismatches, count), where, as before, 'count' stands for either the number of hits or the coverage of a given seed. For these data, we computed Spearman's rank correlation. A typical result, corresponding to seed weight 22, is shown in. It implies that when the identity rate of alignments takes a large range of values (minimal id rate smaller than 0:9), spaced seeds yield a significantly higher correlation than contiguous seeds, for both hit-number and coverage counts. Furthermore, the coverage count slightly outperforms the hit-number count, especially for spaced seeds and larger weights. For high-similarity alignments, however, the picture changes: the coverage count loses its performance, with its correlation value sharply decreasing. Furthermore, the correlation of hit number goes down for spaced seeds as well, while it continues to grow for contiguous seeds ending up by reaching and even slightly outperforming the one for spaced seed. This is due to a larger span of spaced seeds and to their combinatorial properties that cause the hit number values to be less sharply concentrated at certain values and therefore to be less well correlated with the number of mismatches. In conclusion, while spaced seeds provide a much better estimator for alignments whose score ranges over a large interval, for highscoring alignments (> 90% of identity), the hit number of contiguous seed becomes a better estimator. The superiority of hit number over coverage for high-scoring alignments has also been reported in No and Martin (2014). Along with Spearman's correlation, we also made an analysis of mutual information computed on the same data (data not shown) that confirmed the above conclusions.
Correlation on real genomesTo validate the conclusions of the previous section in a real-life metagenomics framework and to analyze more closely how well different counts for a read correlate with the best alignment of the read to a real genomic sequence, we implemented another series of experiments. Given a genome G, we generated a set of ILLUMINA-like single-end reads by selecting random substrings of G of length L (L  100) and introducing k mismatch errors, with k drawn randomly between 1 and 20 for every read. For each read, we computed the countshit number and coveragewith respect to genome G under a given seed, similar to Section 3.1.2. Collected data have then been analyzed.shows a typical result of this experiment (for seed weight 20) applied to M.tuberculosis genome. Each plot shows the density of reads for each pair (number of mismatches, count), depending on the seed (contiguous or spaced) and count (hit number or coverage). Spearman's and Pearson's correlation coefficients are shown for each plotted dataset. The plots clearly illustrate the advantage of spaced seeds over contiguous seeds for estimating the alignment quality. Plots for contiguous seeds are more blurred, whereas plots for spaced seeds demonstrate a better correlation between the two values. This is confirmed by the absolute values of Spearman's rank correlation coefficient that are significantly higher for spaced seeds, indicating a better statistical dependence. Comparing hit-number and coverage estimators, we observe that coverage yields a slightly better Spearman correlation and a significantly better Pearson correlation, due to a convex shape of the dependence, compared with the more straight dependence for the coverage. This analysis has been done for several other bacterial genomes, producing similar results. Plots for other genomes and other seed weights can be found in supplementary material.
Large-scale experimentsTo validate the advantage of spaced seeds in large-scale metagenomic projects, we modified KRAKEN software () to make it work with spaced seeds rather than with contiguous seeds only. The limitation of this approach is that it allows estimating the effect of using spaced seeds only in combination with the KRAKEN algorithm and within its implementation. In return, this allows us to measure the effect of spaced seeds in an unbiased manner, by keeping unchanged all other factors that might influence the results. Our extended implementation, that we call SEED-KRAKEN, allows the user to specify a spaced seed as a parameter. For a set of genomes, a database of spaced k-mers matching the seed is constructed, which is later used to classify reads with the original KRAKEN algorithm. Since KRAKEN uses k-mer counting JELLYFISH program () as the k-mer indexing engine, we had also to modify JELLYFISH to allow it to deal with spaced k-mers. Integration of spaced seed into KRAKEN required a minor modification of the way KRAKEN deals with complementary sequences. In KRAKEN, complementary k-mers have a single representative in the index, the lexicographically smallest of the two. With spaced seeds, dealing with complementary sequencing is more delicate, as the complement of a spaced k-mer does not match the same seed but its inverse. To cope with this, we modified KRAKEN to index each distinct k-mer. We then processed each read in direct and complementary directions separately and select the one which produced more hits. Compared with original KRAKEN, this procedure takes more index space (additional 5% in practice) and doubles k-mer query time.We compared the performance of KRAKEN and SEED-KRAKEN on several datasets. First, we performed experiments with three simulated metagenomes HiSeq, MiSeq and simBA-5 introduced in the original work (), each containing 10 000 sequences. Furthermore, we created a dataset from Human Microbiome Project data by randomly selecting 50 000 sequences from SRS011086 Tongue dorsum metagenomic sample (http://hmpdacc.org/HMSCP/). Here we only report on results for MiSeq and HMPtongue datasets and refer to the supplementary material for a complete account including results for HiSeq and simBA-5. MiSeq is a merge of ILLUMINA reads of 10 bacterial genomes, and HMPtongue is a random sample of real ILLUMINA whole-metagenome sequences. Because of resource limitations, the database we used in MiSeq experiments was half of the size of the KRAKEN's default database (which requires 70GB of RAM). Our database was obtained by choosing a single representative strain of each bacteria species, except for the species from HiSeq and MiSeq metagenomes for which all strains were included. Overall, this represented 915 genomes of total size 3.3 GB. For HMPtongue dataset, this database was extended with a subset of HMP reference library, 0.8 GB in total, including references for the selected 50 000 sequences. For each metagenomic dataset, we measured the sensitivity (percentage of correctly classified reads out of all reads) and precision (percentage of correct classifications out of all classifications) of KRAKEN and SEED-KRAKEN at three taxonomic levels: species, genus and family. In each case, this has been done with seeds of different weights between 20 and 31, and for each weight, SEED-KRAKEN has been run on a few different spaced seeds (see Section 4).shows sensitivity-precision receiver operating characteristic curves for SEED-KRAKEN and for the unmodified KRAKEN. In the case of SEED-KRAKEN, the 'best performing' seed is charted for each weight. Furthermore, triangle points correspond to SEED-KRAKEN run on contiguous seeds, plotted to measure the effect of our modification in dealing with complementary sequences.
Spaced k-mer-based metagenomic classificationAt the levels of genus and family, spaced seeds consistently show a better sensitivity-precision trade-off, with the sensitivity increase of about 2 percentage points for MiSeq and 35 points for HMPtongue, for a given precision rate. The results of SEED-KRAKEN with contiguous seeds (triangle points) confirm that this improvement is due to the use of spaced seeds and not to our slight modification of the assignment algorithm due to complementary sequences. For small weights (2022), a spaced seed achieves simultaneously a better sensitivity and a better precision than the contiguous seed of the same weight. When the weight grows, the increment in precision disappears reaching the level of the contiguous counterpart or sometimes coming down below it. However, this is largely compensated by the increase in sensitivity. For the species level, the picture turns out to be more involved. Here, we observe that due to the small modification of the assignment algorithm, SEED-KRAKEN run with contiguous seeds (triangle points) shows a modified behavior compared with KRAKEN. Specifically, we observe a drop in precision and a gain in sensitivity and those are different for MiSeq and HMPtongue datasets. The reason for this is that SEED-KRAKEN makes more species-level classifications than KRAKEN but at the same time makes more inaccurate assignments to a closely related organism (typically, different strain of the same bacteria), which eventually leads to a lower precision. This phenomenon has a bigger impact for rich databases (HMPtongue experiment) compared with 'sparse' databases where each species is represented by few organisms (MiSeq). As for the contribution of spaced seeds, we observe an improved sensitivityprecision trade-off here as well. Compared with SEED-KRAKEN applied to contiguous seeds, this improvement is small for MiSeq but significant for HMPtongue, which shows a correction capacity of spaced seeds with respect to erroneous assignments to close strains. Compared with the original KRAKEN, we obtain a sensitivity increment of about 1% which becomes smaller (MiSeq) or completely disappears (HMPtongue) when the seed weight grows. As mentioned earlier, the spaced seed corresponding to each plotted SEED-KRAKEN point has been selected out of a few (usually two to four) seeds tried. The full list of seeds applied in experiments and corresponding results can be found in the supplementary material. Here, we just mention that for large weights (24 and more), the span of the seed becomes an important factor, with seeds of large span showing a drop in sensitivity and best seeds being those with relatively few jokers. Building a SEED-KRAKEN limited database takes approximately 1 hour on a server with 20 CPU cores, and the resulting size is 26 GB for seed of weight 24, which compares to the 25GB for original KRAKEN. The classification running times are longer than for original KRAKEN by a factor of 35.
DiscussionThrough a series of computational experiments, we showed that spaced seeds significantly improve the accuracy of metagenomic classification of short NGS reads. The superiority of spaced seeds for different variants of alignment-free sequence comparison has been recently demonstrated by other authors as well (). In this work, we specifically focused on the metagenomics setting characterized by very large volumes of data, both in terms of the number of reads and the size of genomic database.This quantity of data precludes using some alignment-free comparison techniques andz leaves room only for highly time-and space-efficient approaches. Note also that in our setting, we have to compare short sequences (reads) with long ones (whole genomes), which makes an important difference with problems considered inis to use multiple seeds, i.e. several seeds simultaneously instead of a single one. This extension is known to bring an advantage in seed-and-extend sequence alignment () and () show that this improvement applies to alignment-free comparison as well. However, each seed requires building a separate index for database genomic sequences, and therefore it appears computationally difficult to use multiple seeds in metagenomics, unless some new indexing techniques are designed for this purpose. In our work, we studied three estimators: hit number, coverage and Jaccard index. Hit number and coverage behave similarly in classification (Section 3.1), but Jaccard index generally improves on them in the case of mapping to real genomes (Section 3.1.2), due to the correction with respect to the k-mer-richness. Considered as an estimator of alignment quality (Sections 3.2 and 3.3), coverage provides a certain advantage over hit number. More subtle estimators can be considered as well, e.g. by taking into account the position of k-mer in the read (reflecting the sequencing error rate), and this provides an issue for further study. Designing efficient seeds for metagenomic classification is another important issue that goes beyond the present study. Note that optimal spaced seeds for seed-and-extend alignment are generally not optimal for alignment-free k-mer-based comparison (). In No and Martin (2014), the authors designed (sub-)optimal seeds maximizing the Pearson correlation between hit-number/coverage count and the alignment quality. Their solution is implemented in IEDERA software (The latest version of IEDERA performs design for Spearman correlation as well.) (http://bioinfo.lifl.fr/yass/iedera) (). On the other hand, recent work () introduces quadratic residue seeds (QR-seeds) for seed-and-extend alignment, which present a good performance and have the advantage of easy design, avoiding the computationally expensive enumeration of IEDERA. In our work, we used both IEDERA and QR-seeds adapted to our setting. We observed that in most cases, IEDERA seeds are superior (being designed specifically for our task) but in a few cases, QR-seeds demonstrated equal or even better performance (e.g. best results offor weights 14-18 were obtained with QR-seeds). This may be due to their large span (cf. supplement material) for which applying IEDERA is computationally costly. Real data experiments of Sections 3.1.2, 3.3 have been done using SNAKEMAKE (K ster and). Overall, all our experiments corroborate the thesis of better performance of spaced seeds for metagenomic classification. Experiments with KRAKEN (Section 3.4) give a strong evidence that spaced seeds can improve the classification accuracy in real-life large-scale metagenomic projects. One further improvement would be to implement coverage and Jaccard measures that showed, in general, a better performance compared with the hit number. Introducing spaced seeds rises new issues, such as the construction of an efficient index of the database or adapting the algorithm of computing the most likely node of the taxonomic tree from counts produced by individual genomes, i.e. leaves of the tree. These questions are a subject for future work.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
K.Binda et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
