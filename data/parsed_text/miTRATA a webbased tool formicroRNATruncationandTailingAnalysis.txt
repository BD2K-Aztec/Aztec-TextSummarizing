We describe miTRATA, the first web-based tool for microRNA Truncation and Tailing Analysisâ€”the analysis of 3 0 modifications of microRNAs including the loss or gain of nucleotides relative to the canonical sequence. miTRATA is implemented in Python (version 3) and employs parallel processing modules to enhance its scalability when analyzing multiple small RNA (sRNA) sequencing datasets. It utilizes miRBase, currently version 21, as a source of known microRNAs for analysis. miTRATA notifies user(s) via email to download as well as visualize the results online. miTRATA's strengths lie in (i) its biologist-focused web interface, (ii) improved scalability via parallel processing and (iii) its uniqueness as a webtool to perform microRNA truncation and tailing analysis. Availability and implementation: miTRATA is developed in Python and PHP. It is available as a web-based application from https://wasabi.dbi.udel.edu/apps/ta/.
IntroductionRevolutionary changes in next-generation sequencing and its everdecreasing cost have driven a growing need for bioinformatics tools and algorithms. Molecular analysis of plant microRNAs (miRNAs) has demonstrated their 3 0 protection by action of the methyltransferase HUA ENHANCER1 (HEN1), which adds a 2 0-O-methyl group to the 3 0 terminal ribose of miRNAs and other small RNAs (). Such 3 0 modification protects plant miRNAs from uridylation [addition of uridine (U) nucleotides] (). We and others have previously demonstrated via sequencing studies and comparative analysis that miRNAs in a hen1 mutant (and to a much less extent in wild type Arabidopsis) demonstrate an array of 3 0 modifications, include loss of nucleotides (truncation) and an addition of one to several non-templated nucleotides, predominantly uridines (U) (). Previous reports described varying degrees of 3 0 modifications that differ among miRNA families yet are conserved for a given miRNA across plant species (). With advancements in highly productive forward-and reversegenetics approaches, additional genes important to 3 0 modifications of small RNAs are being characterized. Deep sequencing in these mutants is providing insights into the mechanisms by which these genes function, or at least fail to function in the mutants. For example, analysis of the hen1/heso1 double mutant revealed a reduction in 3 0 uridylation relative to hen1 (). Recent genetic analysis identified a HESO1 ortholog, URT1, with a similar but non-redundant role as a nucleotidyl transferase that uridylates miRNAs (). Thus both genetic analysis and sequencing have demonstrated the complexity of 3 0 truncation and tailing (). Interestingly, these 3 0 end modifications can alter the nature of interaction with a target, while the pairing of a miRNA with its targets has been proposed to play critical role in the V C The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com extent of 3 0 modifications (). Further insights into these miRNA-target interactions and the influence of 3 0 modifications could be gained via a new generation of computational tools () In analysis of 3 0 ends from sRNA sequencing data, computational tools separate the template miRNA from the non-templated additions, while also assessing truncation. Yet, there are no online, web-based tools for these measurementsthey're run from a command line. Hence, we aimed to provide biologists with an automated, parallelized, web-based tool for these analyses in plants and animals (miTRATA, for microRNA Truncation and Tailing Analysis).
AlgorithmWe adapted for web access the 'truncation and tailing' algorithm that we previously developed (). We reimplemented it in Python (version 3). Step 1: miTRATA's web interface collects input parameters such as adapter-cleaned sequence files ('tag count' format, or sequence plus abundance), the genome to be used (aka the 'Bowtie index'), a list of mature miRNA(s), etc., from the user. One of the most substantial changes to the algorithm is the addition of parallel processing to increase the scalability of our webtool especially when dealing with multiple high-throughput sRNA sequencing datasets and large genomes like maize and Norway spruce. Step 2: for an individual sRNA sequence file (the 'tag count' file), all non-genome-matched reads are first chopped iteratively, one nucleotide at a time, from their 3 0 end, until the remaining 'head' sequence perfectly matches to the genome. This way, we divide individual non-genome-matched reads into two parts: the 5 0 genome-matched component (5GMC) or head, and a 3 0 tail. The modified workflow can be seen in the Supplementary. Previously, this process of finding the 5GMC and tail was performed serially for each tag count file and was time consuming; parallel processing the individual tag count files finds the 5GMC and tail simultaneously. Step 3: the 5GMC is aligned to known, mature miRNAs from miRBase () to determine the miRNA and the extent of truncation and tailing. Step 4: in this last step, images are generated to represent the truncation and tailing results for each miRNA. Finally, miTRATA notifies the user, sending a link to download the results or view them online.. The miTRATA web tool. The user enters: (1) first, the input data or parameters such as the small RNA sequence files; (2) the genome of interest (the Bowtie index to be used); (3) the list of miRNAs to analyze; (4) their contact information. When the user selects 'Perform Truncation and Tailing Analysis', the files and settings are uploaded and the analysis is performed. The results page (the inset red box) displays the output, including a summary of truncation and tailing results in a tabular form, the graphed data, and links to download the results
Web tool designmiTRATA is available online at https://wasabi.dbi.udel.edu/~apps/ ta/. We designed this webtool so that it has necessary settings to aid advanced as well as intermediate users. This webtool requires the following inputs: 1. Small RNA sequence file(s): User can choose to upload small RNAs in 'tag count' formatted files in two different ways: (i) a single file in '.txt' or compressed '.gz' format, (ii) multiple files in a compressed archive ('.zip' or '.tar.gz'). Alternatively, the user can also select an example file to run the analysis and see expected results. We have also provided users with FASTQ preprocessing capabilities to generate these 'tag count' files (see Section 4); this step will remove adapters and poor quality sequences. 2. Genome sequence: The Bowtie index of the genome of interest can be selected from a drop-down menu of pre-loaded genomes. The default genome is set to Arabidopsis for the example. 3. Mature miRNA sequence(s): The user has two options to select miRNAs for comparison: (i) an advanced user can upload a set of mature miRNAs in FASTA format. (ii) Mature miRNA sequences from miRBase (currently version 21) can be selected from a drop-down menu listing chosen species present in miRBase. Alternatively, the user can choose to run the analysis with an example miRNA.
DiscussionNew algorithms are emerging in the study of 3 0 modifications of sRNAs. For example, EnD-Seq () is an experimental protocol for high-throughput sequencing of RNAs in which the 3 0 modifications of the captured RNA is sequenced separately from the 5 0 end. This technique is partnered with an algorithm, AppEnD () that describes these 3 0 end modifications from the EnD-Seq-derived data. Our approach differs from that ofin that our algorithm uses standard sRNA sequencing data, it characterizes the extent of 3 0 truncation (a common 3 0 modification of sRNAs), and it generates a graphical output for the results of each miRNA or sRNA of interest. Another tool may be a better comparison to ours: Tailor () is specialized for sRNA 3 0 analyses, and it characterizes both biological alterations (such as RNA editing events) and technical confounding factors (such as sequencing errors). Although poor quality nucleotides will be removed by FASTQ processing, our approach does not characterize sequence polymorphisms generated by RNA editing; however, we have emphasized truncation, as this 3 0 modification is a common source of variation in sRNAs, and a unique graphical output. Finally, to make our tool less prone to the inclusion of sequencing errors and make more easily accessible, we provided users with a standalone and Python-based FASTQ processing script to produce the 'tag count' formatted files required as input to our webtool. The processing script performs trimming and chopping, taking the raw FASTQ file(s) (single or paired end) and a set of user-defined parameters that include adapter sequences that may vary from default Illumina adapters. The parameter file also determines whether the FASTQ processing yields a FASTQC report, and whether it generates the graphs after trimming and chopping (for which the genome sequence must be provided). These details are described in a README file. This processing script is available from the web page or can be downloaded from (https://github.com/atulkakrana/helper. github.git). In summary, we have built a biologist-friendly web tool that provides easy access to our previously-described algorithm for
Bioinformatics, 32(3), 2016, 450452 doi: 10.1093/bioinformatics/btv583 Advance Access Publication Date: 10 October 2015 Applications Note at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
0 analysis of sRNAs (Zhai et al., 2013), generating reports detailing the complexity of truncation and tailing modifications; this tool should be particularly useful for characterizing the impact of mutations in the pathways for sRNA stabilization or turnover.
P.Patel et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
