Motivation: Current advances in DNA synthesis, cloning and sequen-cing technologies afford high-throughput implementation of artificial sequences into living cells. However, flexible computational tools for multi-objective sequence design are lacking, limiting the potential of these technologies. Results: We developed DNA-Tailor (D-Tailor), a fully extendable software framework, for property-based design of synthetic DNA sequences. D-Tailor permits the seamless integration of multiple sequence analysis tools into a generic Monte Carlo simulation that evolves sequences toward any combination of rationally defined properties. As proof of principle, we show that D-Tailor is capable of designing sequence libraries comprising all possible combinations among three different sequence properties influencing translation efficiency in Escherichia coli. The capacity to design artificial sequences that systematically sample any given parameter space should support the implementation of more rigorous experimental designs. Availability: Source code is available for download at https://source forge.net/projects/dtailor/
INTRODUCTIONThe accumulation of genomic data has fueled the development of numerous computational tools that infer functional behavior from biological sequences. These algorithms essentially capture our understanding of how functional information is encoded in nucleic acid and protein sequences. As a result, molecular biologists can now access a plethora of sequence analysis tools to help them predict functional behaviors from plain sequences (). Common tasks comprise the identification of sequence motifs from nucleic acid (DNA/RNA) or protein sequences (e.g. promoter or termination activity, recombination or splicing sites), as well as the computation of sequence properties that are mechanistically linked to particular phenotypes (e.g. codon usage or propensity to form transmembrane protein domains). Such sequence-analysis tools are usually used to inform biological discovery in natural genomic sequences. However, considering recent advances in DNA technologies and the concomitant rise of synthetic biology applications (), these same tools may also be leveraged to guide the design of artificial sequences satisfying predefined functions of interest. Ideally, elementary biological functions should be contained within well-defined sequence parts that could be re-used with acceptable reliability in different contexts [e.g.. However, it is becoming increasingly clear that many molecular behaviors result from the combined influence of several sequence determinants that cannot be neatly encapsulated within the physical boundaries of a single part, but rather emerge at the interface between the different parts (). In this context, the multidimensional examination of DNA sequences becomes necessary to better capture the inherent complexity of biological behavior and further enable predictive design of synthetic sequence functions and activities [e.g., Rhodius and Mutalik (2010),. Valuable sequence-design tools implementing heuristic searches have been successfully developed for multi-objective optimization within specific applications [e.g. protein synthesis optimization (. However, application of such optimization procedures requires an objective function relating computed sequence properties to an expected performance score. Unfortunately, the data and models required to describe these relationships are generally not sufficient to support truly reliable functional design. Interestingly, sequence-design tools can also be used upstream of the optimization process to produce libraries of sequences that are more suited for the development of predictive models. Although large-scale studies have mostly used random approaches to introduce variability in the synthetic sequences to be interrogated (), similar endeavours have greatly benefited from following well-established design of experiments (DoE) (). *To whom correspondence should be addressed.  The Author 2014. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/bync/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.comDoE is a general framework that fully integrates planning and analysis phases, and comprises three major steps. The first one consists in identifying the factors of interest and defining the range of values for each factor. In the case of molecular sequences, factors are properties of the primary sequence itself and can be typically identified by reanalysing available functional genomic data and published mechanistic studies. The second step consists in implementing a particular experimental design wherein multiple combinations of factor levels are selected to create an experimental dataset providing maximal information to relate the design factors to the response variable(s). For example, one of the most informative DoE is the full-factorial design, where all possible combinations of factor levels across the different factors are performed. The resulting dataset not only permits to estimate the contribution of each factor to the measured response variable, but also robustly captures the interactions between the different factors (). Last, the third step includes the collection of experimental data and definition of a model relating the multiple factors to the response variable(s). Of note, this can be an iterative process wherein models derived from the third phase can inform the design of a new set of experiments. Although implementation of experimental designs systematically varying easily manipulated factors can be straightforward (e.g. growth medium, pH, temperature or oxygen levels), the ability to design artificial sequences whose intrinsic properties can be systematically varied is not necessarily trivial (e.g. binding site affinity or the strength of an RNA secondary structure). Here, we present D-Tailor, an extendable framework supporting integration of multiple sequence analysis tools to mine and design biological sequences. D-Tailor uses a heuristic search algorithm to enable flexible design of synthetic sequences varying multiple properties of interest so as to satisfy complex DoE. We have validated our tool by successfully designing artificial sequence libraries conforming to full-factorial designs, which represent the upper bound of experimental design complexity. More specifically, we have designed libraries systematically varying multiple sequence properties known to impact translation efficiency in E.coli. To further demonstrate the versatility of the algorithm, we also used D-Tailor to design artificial bacterial promoter sequences varying multiple cis-regulatory properties (see Supplementary Material).
METHODSD-Tailor essentially implements the two-step planning process outlined above (). The analysis mode computes property scores from plain biological sequences. Here, the user specifies input sequences and a predefined set of properties to be computed. The design mode integrates the analysis routines with a parameterizable Monte Carlo algorithm that evolves an input sequence (seed) so as to match the specified combinations of property scores. In a typical workflow, users can use the analysis mode to identify sequence properties and operational ranges that seem worth exploring in design mode.
Sequence analyzerD-Tailor provides a generic interface for multidimensional interrogation of DNA sequences. The software is designed with a modular architecture, so that users with basic programing skills can easily implement or extend modules for handling any sequence property of interest. Such modules can be implemented using custom Python code or scripts connecting tothird party software (see the Tutorial available in the Supplementary Material). In analysis mode, D-Tailor reads a set of sequences in either delimiter separated (e.g. CSV) or FASTA format files. A property profile is then computed for each of the input sequences by successively calling the analysis modules specified by the user (, left panel). D-Tailor currently comprises 14 different modules to compute various sequence properties involved in diverse mechanisms of gene regulation. This collection of sequence property evaluators includes algorithms to score promoter regions or transcription factor binding sites based on sequence logos (), estimate translation initiation rates based on the ShineDalgarno (SD) sequence (), predict propensity to form RNA structures, calculate nucleotide composition or compute the codon adaptation index (CAI) for a given gene sequence (). Although the implementation of the different sequence property evaluators is usually self-contained within D-Tailor, the computation of specific properties may rely on third party softwares [e.g. UNAfold () for the prediction of RNA secondary structure]. Together, these modules illustrate diverse implementation modalities and provide useful examples to guide future extensions (see Supplementary Material). The specification of adequate analysis routines is an essential prerequisite to running the design mode.
Sequence designerAs capacities for DNA synthesis increase exponentially, the ability to computationally design artificial sequences need to become more automated and transparent. The most innovative feature of D-Tailor is to provide a generic solution of designing synthetic sequences constrained by multiple properties of interest (, right panel). The design process in D-Tailor starts with the specification of a seed sequence and the desired design objective (i.e. the DoE) (, right panel). Seed sequences serve as a template to bootstrap the evolutionary design process. Typically, users would use a particular sequence of interest from which they want to derive a mutational series. The DoE enumerates combinations of sequence properties that need to be generated, each of which constitutes a design target. D-Tailor provides a flexible scheme for the definition of DoE, which can vary from full-factorial to entirely customized designs. The definition a finite number of targets requires the discretization of continuous property scores into a finite number of nominal or ordinal levels. For example,shows the discretization of two sequence property scores into three ordinal levels (low, medium and high). This framework markedly differs from usual multi-objective optimization approaches (), which operate to optimize a single continuous and integrated performance score rather than explicitly target different regions of the parameter space. As illustrated in the Section 3, natural feature profiles extracted from available genomic sequences can be used to guide the discretization processes and ensure biological relevance of the sampled space. For each sequence property, users may define as many levels as necessary to attain the desired degree of resolution in the designed sequences. However, since the number of possible combinations increases geometrically with the number of properties/levels, their definition must be mindful of downstream experimental capacities. Finding a sequence that conforms to an arbitrary combination of property levels is often computationally infeasible using a brute force approach. Indeed, the sequence space to be searched is gigantic (4 N where N is the number of nucleotides in the sequence to be designed, more if indels are allowed). To optimize the search process, D-Tailor uses a Monte Carlo algorithm to evolve a given seed sequence towards the set of design targets (). More specifically, the algorithm loops through cycles of evolution until all target combinations of property levels specified by the DoE are found. Each cycle consists in three consecutive steps: (i) a target combination of property levels is randomly selected; (ii) a template sequence is chosen from the repository of previously generated sequences using fitness proportionate selection (only seed sequences are available at the very first iteration); and (iii) a predefined number of mutational iterations are performed until a sequence satisfying the target combination of the property level is found (, sequence evolver). We use the inverse of the cumulative Euclidean distance (D) between property levels, as a generic fitness measure of a sequence relative to a given design target in Equation (1)where n represents the number of sequence properties; d i and t i represent the levels of the i-th sequence property in the designed sequence and the desired combination, respectively. Each iteration of the sequence evolver also comprises three steps: (i) the sequence being evolved is analyzed and a property requiring optimization (i.e. not within the target level) is randomly selected; (ii) the template sequence is then mutated following user-specified mutational rules (see below); and (iii) the feature scores of the resulting sequence are analyzed and evaluated with respect to the current design target. Every generated sequence is also screened for compliance to a user-defined set of rules meant to prevent the emergence of undesired properties in the final designed sequences (e.g. restriction sites, unexpected promoters or terminators). Only validated sequences are stored in the database. Next, if the new sequence matches the target combination (D  0), then the target is marked as completed and the evolution cycle is terminated. Otherwise, the algorithm updates the template for the next mutational iteration, choosing between retaining the current template sequence or accepting the mutant just derived. At this point, we defined three different selective regimes: (i) directional selection, where the sequence with the lower Euclidean distance to the target combination is chosen; (ii) neutral selection, where any of the two sequences is selected with predefined probabilities; or (iii) temperature selection, as inspired by simulated annealing optimization (), where the sequence is selected based on a temperature schedule that allows worse sequences (longer distances) to also be selected with a probability that decreases with the number of iterations performed. At each of the mutational iterations, new sequences can be generated through random mutation of the template sequence, as usual in many sequence optimization tools (). In addition, D-Tailor offers the possibility to implement specialized mutation operators that aim at improving the likelihood to generate desired property changes. Practically, a mutation operator. Sequence designer algorithm comprised by three different steps described in the main text. Initially, a target combination of features is selected and then a sequence that is close (i.e. short Euclidean distance) to the desired target is chosen to serve as the template in the sequence evolution step. This last step applies successive mutations until it finds a sequence matching the target combination of featuresAutomated analysis and design of DNA sequences randomly selects a property amongst those that are non-optimal in the current template (d i  t i 6  0). We then distinguish between: (i) targeted operators, which restrict the mutational space to specific regions of the sequence that are therefore more likely to affect the property that needs to be evolved; and (ii) oriented operators, which further specify particular mutation patterns to bias the production of variants toward the current design target. For example, if the design goal specifies an increase in the CAI of a gene, the targeted mutation operator restricts the mutable region to the coding sequence and randomly replaces a codon by another one irrespective of its usage score. The oriented mutation operator further constrains the replacement of a randomly chosen codon with one associated with a higher usage score, thereby enforcing the required increase. For certain emergent features, the definition of oriented mutation might not be so straightforward. For example, we implemented oriented mutation operators for RNA secondary structure by specifically targeting mutations to bases that are predicted to be paired or unpaired, to, respectively, decrease or increase the strength of the mutated RNA structure. Importantly, any mutation operator targeting gene-coding sequences can be further constrained to only generate synonymous mutations, thereby preserving the encoded protein sequence while modifying the underlying DNA properties. In some applications, it may be desirable to limit the overall divergence between sequences in the designed library, so that it provides small variations with respect to a particular reference sequence. Conversely, users might want to generate sequences that are as dissimilar as possible and, therefore, share as few confounding factors as possible. In D-Tailor, users can manipulate mutational patterns and the selective regimetwo major parameters of the evolutionary design processto indirectly control sequence diversity, and consequently impact the rate of sequence evolution, as well as the overall performance of the search algorithm (see below).
RESULTS AND VALIDATIOND-Tailor provides an integrated Python-scripting framework for multidimensional analysis of sequence properties and for the design of artificial sequences constrained by multiple sequence properties of interest. As a case study, we have chosen three different previously reported sequence determinants of translation efficiency. In E.coli, two major factors have been shown to modulate the rate of translation initiation: (i) the strength and position of a SD motif upstream of the start codon (); and (ii) the propensity of these sequence signals to engage in mRNA secondary structures (de Smit and van). Subsequent to initiation, the rate of elongation may also affect the overall translation efficiency and is mainly determined by the codon usage of the gene (). We first illustrate how D-Tailor analysis module can be used to examine such sequence properties in the natural genome of E.coli. Then, we demonstrate how to use D-Tailor design module to generate artificial sequence libraries systematically varying the three properties of interest according to a fullfactorial DoE.
Using D-Tailor to interrogate sequencesWe used D-Tailor to re-analyze three different sequence properties across the entire E.coli W3110 genome (). Mechanistically, the SD motif stabilizes the initial binding of the 30S subunit of the ribosome by establishing canonical base pairing with the 3 0-end of the 16S rRNA (anti-SD) (). We applied a sequence property evaluator that calculates the strength of the SD sequence by searching for a subsequence within the 25 nucleotides upstream of a start codon with highest affinity to the known anti-SD (). The presence of secondary structures in this region of the mRNA can hinder initiation by occluding the SD motif or the nearby start codon from recognition by the ribosomal subunits. For that purpose, we used an RNAstructure evaluator to compute the minimum free energy of the 60 nucleotides subsequence centered on the start codon (). Finally, we used a CAI calculator to score the codon usage of a gene sequence (). Practically, the usage of these property evaluators and associated parameters requires a standard interface, which is provided by extending the abstract class Feature in D-Tailor (see Supplementary Material). The sequence property profiles resulting from a genome analysis give a solid basis to identify trends in the properties of interest, and to further determine the relevant parameter space to explore during the design step (C). Correlations amongst property scores may also provide insights onto potential functional interactions although some may be purely incidental. For example, the modest correlation between RNA structure in the translation initiation region and the affinity between ribosomes and the SD sequence () might merely reflect the thermodynamic propensity of G-rich SD motifs to engage in secondary structures. Similarly, the peculiar shape of the relationship between CAI and RNA secondary structure () might stem from the joint contributions of independent evolutionary pressures for expression levels acting on these two properties to tune expression levels [highly expressed genes being both under selection for high CAI and for low structure (. It is then up to the user to define a DoE containingcombinations of sequence property scores that are more adequate to test the research hypothesis to be investigated.
Using D-Tailor to implement experimental design on sequence propertiesAlthough recent advances in DNA synthesis, cloning and sequencing make it possible to generate and experimentally probe thousands of custom DNA/RNA sequences (), the availability of computational tools to aid the rational design of large sequence libraries remains very limited. The main purpose of D-Tailor is to provide a flexible computational tool to design custom sequences satisfying complex specifications. Such task can be extremely laborious when the properties of interest physically overlap in the sequence space. For instance, in our case study, the subsequence containing the SD motif influences the formation of RNA secondary structures in that same region. Likewise, the secondary structure can be affected when modifying codon usage at the beginning of the gene. Typically, such optimization problems are best solved using a trial-and-error approach wherein sequence variants are generated using random mutations until a desired combination of property scores is found (). To generalize this process, the design mode of D-Tailor provides a framework to integrate any sequence property evaluator into a parameterizable Monte Carlo algorithm that iteratively evolves sequences toward a specific set of design targets (or combinations of property levels). We used D-Tailor to design sequences that systematically vary the three properties of interest (or factors) defined above (). For each of these factors, we defined five contiguous ordinal levels on the basis of the quintiles observed in the natural genome (C, dashed lines). We then instructed D-Tailor to search for sequences conforming to a full-factorial DoE based on these levels. This DoE describes a total of 125 design targets corresponding to all combinations of five levels across the three different properties (5 3 ). To validate our approach, we compared the performance of four increasingly complex evolutionary strategies available in D-Tailor at deriving full-factorial libraries for 30 different genes randomly selected in E.coli (and B). In these simulations, the algorithm was run for at most 3000 generationswith a single mutational event per generation allowing for unrestricted mutations in the 5 0 UTR but only for synonymous mutations in the coding sequence. We first explored the most rudimentary evolutionary strategy available in D-Tailor, random sampling, which does not implement any heuristic search and simply generates random sequences until all desired design objectives are completed. Every attempt to complete the full-factorial design before the threshold of 3000 generated sequences failed (and B, black line, 54.2 generated sequences per target foundon average). The second design strategy used D-Tailor's generic heuristic algorithm (and Section 2) along with the simplest mutational method wherein new sequence variants are generated by random mutagenesis (, yellow line). This strategy improved the efficiency of the search algorithm by a factor of 2 as compared to that of the random sampling method (24.8 versus 54.2 gspt on average, MannWhitney test P-value  2.3  10 10 ,). Still, many sequences had to be generated to meet the various design objectives. The third mutational strategy employed spatially targeted mutation operators (see Section 2) and improved the search algorithm efficiency by another factor of 2 (13.3 gspt on average,). The fourth strategy used more 'rational' mutation operators that explicitly orient mutations toward the desired objective (see Section 2) and provided slightly faster dynamics (, orange line, 11.8 versus 13.3 gspt on average, MannWhitney test P-value  0.129,). Since the computational time necessary to achieve a given set of design targets is dependent on the number of generated sequences per target, these results illustrate the advantage of defining specific mutation operators whenever it is possible. When designing synthetic sequences, users may want to limit the divergence of the designed sequences with respect to the initial seed. To roughly control the spread of the generated sequences during the evolutionary process, users can manipulatethe average hamming distance between the seed and the sequence matching the target combination as a function of the Euclidean distance to the target combination using neutral (light blue), directional (orange) or temperature selection (black). (D) The number of generated sequences until the desired target is found as a function of the Euclidean distance to the target combination using either neutral (light blue), directional (orange) or temperature (black) selectionAutomated analysis and design of DNA sequences the strength of selection toward the desired target(s). To better illustrate this point, we evolved each of the 30 seeds previously selected toward six different target combinations bearing different Euclidean distances from the seeds (and D). We then examined the behavior and results of the algorithm in response to three contrasted selective regimes: neutral, directional and temperature selection (Section 2). As expected, we observed that a more relaxed selection process (neutral) is able to generate sequences matching the desired target that are more similar to the seed sequence than those resulting from the directional or temperature selection approach (average hamming distance of 21 versus 31.3 and 39.2, respectively; MannWhitney test P-value  0.0005 and 1.03e  13;). Nonetheless, the limitation of sequence diversity comes at the cost of longer computation time (). In fact, for the 30 seed sequences, the neutral selection process requires the generation of eight and six times more sequences per target than the directional and temperature selection approach, respectively and on average. For large designs, users may have to balance the desired divergence of the designed sequences with the available computational power. A hybrid approach, wherein the algorithm is initially set with weak selection and hard constraints to limit divergence, and then progressively configured with increased selection bias and/or relaxed mutational constraints (e.g. allow non-synonymous mutations in coding sequences if it is acceptable by the user) as the rate of target discovery slows down may then be recommended. The details of such procedure are likely specific for each application, and therefore we have not sought to implement an automatic schedule to control this behavior. Since the state of a D-Tailor design mode run is permanently stored in a database, we suggest users to manually experiment with adjusting these parameters.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
J.C.Guimaraes et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CONCLUSION Advances in DNA-reading/writing technologies readily enable the construction and validation of complex genetic systems (Gibson et al., 2010). However, rules to successfully design synthetic sequences to functional specifications have been limited by measurements from biased natural samples and/or small scale controlled synthetic samples comprising at most hundreds of sequences (e.g. Allert et al. (2010), Amit et al. (2011), Barrick et al. (1994), Garcia et al. (2012); Mutalik et al. (2012); Na et al. (2013); Rhodius and Mutalik (2010); Rodrigo et al. (2012), Salis et al. (2009)]. This lack of knowledge strongly restrains the practical applications of ab initio design. Innovative experimental methodologies based on high-throughput technologies are scaling the characterization process up to tens of thousands of designed sequence variants, providing larger datasets to better understand sequence/activity relationships (Dvir et al., 2013; Kinney et al., 2010; Patwardhan et al., 2009, 2012; Sharon et al., 2012; Smith et al., 2013). However dramatic, this increase in throughput remains limited in comparison to the sheer immensity of the sequence space. It is therefore crucial to reduce the dimensionality of the design space to a set of sequence properties of interest that can be independently varied to facilitate estimation of their individual contribution to the measured phenotype and further support predictable design of synthetic variants (Allert et al., 2010; Sharon et al., 2012; Smith et al., 2013). We developed D-Tailor as an extendable and flexible software platform for the multi-objective design of artificial sequences. It provides a generic interface to integrate multiple sequence analysis tools into a heuristic Monte Carlo search procedure capable of evolving sequences towards pre-defined design targets (Fig. 1). D-Tailor presents significant differences to other multiobjective sequence optimization tools (Allert et al., 2010; Chung and Lee, 2012; Dana and Tuller, 2012; Gaspar et al., 2012; Raab et al., 2010; Racle et al., 2012; Salis et al., 2009). First, it allows the definition of multiple design targets as combinations of sequence properties that embody particular DoE. A DoE can range anywhere from one specific combination of property levels to a full-factorial design, where the parameter space is fully explored. In contrast, traditional optimization tools describe design objectives in terms of desired response performances, which are linked to the sequence properties by a complex and pre-defined static objective function. Such formalization is suited for functional optimization, but do not explicitly support systematic exploration of the parameter space. Second, D-Tailor provides an evolutionary algorithm to optimize both coding and non-coding regions. Third, D-Tailor supports the implementation of advanced mutational strategies that can significantly enhance the heuristic search performance (Fig. 4B). Finally, our tool is not application-specific and provides an open source solution based on an extendable architecture, such that new sequence property evaluators can be easily implemented and integrated into the sequence design engine. We demonstrate that D-Tailor can efficiently design artificial sequences to systematically vary any given set of properties of interest. To this end, we successfully derived full-factorial sequence libraries, starting from 30 different seed sequences, exploring the entire parameter space of three intertwined sequence properties affecting translation efficiency. Interestingly, we observed that the dynamics of target discovery varies slightly depending on the input seed (see Supplementary Material for details). This illustrates that different sequences may have distinct evolutionary landscapes; some being more amenable to generate widely variable profiles of property scores, with fewer mutational cycles than others (Cambray and Mazel, 2008; Wagner, 2008). For both targeted and oriented mutational methods, the average dynamics of target discovery revealed a relatively steady rate for the first $80% of targets, followed by a sharp decrease in efficiencypresumably because the remaining targets specify combinations of property levels that are harder to attain (Fig. 4A, orange and light blue lines). We also confirmed that more simplistic design approachessuch as generation of random sequencesperform poorly in comparison to a heuristic search (Fig. 4A and B). In addition to the case study detailed here, we have used D-Tailor to systematically design synthetic bacterial promoter sequences varying multiple cis-regulatory properties (see Tutorial in Supplementary Material for details), that way demonstrating the generality and flexibility of our methods and tool. D-Tailor permits the implementation of advanced experimental designs into artificial sequence samples that can serve as a basis to rigorously and consistently test sets of molecular hypothesis. We believe that comprehensive full-factorial libraries of sequences are needed to investigate complex biochemical activities and J.C.Guimaraes et al.
