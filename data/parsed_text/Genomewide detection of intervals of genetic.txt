Motivation: Genetic heterogeneity, the fact that several sequence variants give rise to the same phenotype, is a phenomenon that is of the utmost interest in the analysis of complex phenotypes. Current approaches for finding regions in the genome that exhibit genetic heterogeneity suffer from at least one of two shortcomings: (i) they require the definition of an exact interval in the gen-ome that is to be tested for genetic heterogeneity, potentially missing intervals of high relevance, or (ii) they suffer from an enormous multiple hypothesis testing problem due to the large number of potential candidate intervals being tested, which results in either many false positives or a lack of power to detect true intervals. Results: Here, we present an approach that overcomes both problems: it allows one to automatically find all contiguous sequences of single nucleotide polymorphisms in the genome that are jointly associated with the phenotype. It also solves both the inherent computational efficiency problem and the statistical problem of multiple hypothesis testing, which are both caused by the huge number of candidate intervals. We demonstrate on Arabidopsis thaliana genome-wide association study data that our approach can discover regions that exhibit genetic heterogeneity and would be missed by single-locus mapping. Conclusions: Our novel approach can contribute to the genome-wide discovery of intervals that are involved in the genetic heterogeneity underlying complex phenotypes. Availability and implementation: The code can be obtained at: http://www.bsse.ethz.ch/mlcb/ research/bioinformatics-and-computational-biology/sis.html.
IntroductionGenetic heterogeneity is the phenomenon that several distinct sequence variants may give rise to the same phenotype (); one refers to allelic heterogeneity if these variants are located in the same gene, and to locus heterogeneity if they occur in several distinct genes. This phenomenon is of the utmost importance to the exploration of the genetic basis of complex phenotypes, as most complex phenotypes have been found to be affected by numerous loci, rather than a single locus (). The common ways of computing associations between genotype and phenotype are rather limited in their ability to detect genetic heterogeneity. Standard genome-wide association studies (GWAS) compute correlations between single genome positions, primarily single nucleotide polymorphisms (SNPs) and the phenotype of interest (Wellcome Trust). The smaller the sample size and the more SNPs that are involved in a phenotype, the less likely it is that genetic heterogeneity can be detected by this type of single-locus mapping. Gene-based tests quantify whether or not the number of sequence variants in one gene is enriched in cases versus controls (). Although this approach does consider the combined effect of several SNPs, it is also restrictive in the sense that it only checks entire genes for association. It will
i240This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com, i240i249 doi: 10.1093/bioinformatics/btv263 ISMB/ECCB 2015 miss any variants that lead to genetic heterogeneity, but are not located in or near the same gene. Besides these two standard approaches to GWAS, many regression-based models for associating phenotype and genotype have been proposed, such as Lasso models (e.g.). Although they are not limited to a single SNP or gene and thereby assess all possible loci at once, these models are limited in the sense that they cannot provide a measure of statistical significance for their findings on the level of sets of SNPs. At best, these models may provide a P-value that quantifies the probability that a certain SNP contributes to the phenotypic variance. But they cannot account for the inherent multiple hypothesis testing problem that is created by checking arbitrary contiguous intervals in the genome for genetic heterogeneity, let alone arbitrary sets of remote genetic loci. The scale of this multiple testing problem in genetic heterogeneity search can be illustrated as follows: when considering all possible intervals in a genome in a dataset with 10 6 SNPs, the number of tests one performs is quadratic in the number of SNPs in the genome, i.e. approximately 5  10 11 candidate intervals. When ignoring the multiple testing problem, one will obtain billions of false positives. If one performs the standard Bonferroni correction (), which divides the significance threshold a (typically 0.05 or 0.01) by the number of tests, then the corrected threshold will be so low that hardly any finding will be statistically significant. We propose an algorithm for genome-wide detection of contiguous intervals that may exhibit genetic heterogeneity with respect to a given binary phenotype. More specifically, we search for genomic intervals in which the occurrence of at least one type of sequence variant (e.g. a point mutation or minority allele) is significantly more frequent in one of the two phenotypic classes. The fact that the sequence variant may occur at any SNP within the interval allows us to detect genetic heterogeneity in this manner. Our algorithm automatically finds the starting and end positions of these intervals, while properly correcting for multiple hypothesis testing and preserving statistical power. Central to this algorithm is an approach by, which allows one to reduce the Bonferroni correction factor for multiple testing. We employ our novel algorithm on 21 binary phenotypes from Arabidopsis thaliana and discover intervals of SNPs in the Arabidopsis genome that are associated with 14 of these phenotypes, but could not be found with previous methods.
ApproachWe will first state our problem formally, then provide the necessary background on statistical association testing and the multiple testing problem, before presenting our approach to genetic heterogeneity detection.
Problem statement: significant interval searchWe are given a set of n individuals classified into two phenotypic groups, n 1 cases and n 2 controls (). Each individual is represented by an ordered sequence of L binary genotypes. The sequence of binary genotypes can represent binary SNPs in a homozygous setting or, more generally, a dominant/recessive encoding in a heterozygous setting. Our goal is to find all genomic intervals, such that the occurrence of at least one genotype encoded as 1 (for instance, a minor allele or recessive genotype) within in each of these intervals is statistically significantly associated with the occurrence of a phenotype of interest.The intervals found are promising candidates for regions of genetic heterogeneity underlying phenotypic variation and should be functionally investigated. More formally, we are given a dataset s i ; y i  f g n i1 where s i is the binary sequence of length L representing the i-th individual and y i 2 Cases; Controls f gis its corresponding binary phenotype. Each s i can itself be represented as an L-dimensional vector s i  s i 0; s i 1;. .. ; s i L  1 with binary entries s i j 2 0; 1 f g. We denote the interval s; l of length l starting at index s of a sequence s i as s i s; l  s i s; s i s  1;. .. ; s i s  l  1. There are LL1 2 possible intervals as we vary l  1;. .. ; L and s  0;. .. ; L  l. Finally, let gs i s; l be a binary random variable defined as gs i s; l  s i s _ s i s  1 _. .. _ s i s  l  1, where _ denotes the binary OR operator. Note that gs i s; l takes value 1 if the subsequence s i s; l contains at least one non-zero entry and value 0 otherwise. Intuitively, gs i s; l indicates whether the i-th individual has one or more minor alleles in the genomic region determined by the interval s; l or not. The problem we solve in this article is that of finding all intervals s; l with l  1;. .. ; L and s  0;. .. ; L  l such that the random variable gss; l is statistically associated with the phenotype y after correction for multiple hypothesis testing.
Statistical background
Statistical modelFor each interval s; l, the data f gs i s; l; y i g n i1 can be arranged in the form of a 2  2 contingency table:Variables gss; l  1 gss; l  0 Row totalsBy the definition of gss; l; x s;l is the number of individuals in the dataset which have one or more minor alleles within the genomic interval s; l. Similarly, a s;l has the same interpretation but restricted only to cases. In this article, the strength of the association between the phenotype y and the random variables gss; l will be evaluated using Fisher's exact test (). We denote the P-value obtained by applying Fisher's exact test to the 2  2 contingency table corresponding to the genomic interval s; l as p s;l. An interval s; l will be deemed to be significantly associated with the phenotype if p s;l d, with d being the corrected significance threshold.Our work can be readily extended to use other test statistics instead of Fisher's exact test such as, for instance, the v 2-test ().
Multiple hypothesis testingTo solve the significant interval search problem we must perform a statistical association test such as Fisher's exact test for each of the LL1 2 possible intervals s; l. This means that for usual values of L in the order of 10 5 or 10 6 , tens or hundreds of billions of hypotheses are being tested simultaneously. This creates a challenging multiple hypothesis testing problem which would result in a crippling amount of false positives if multiple testing is not taken into account. Therefore, in this article, we chose to focus on approaches which strictly control the Family Wise Error Rate (FWER), defined as the probability of generating one or more false positives. FWER control requires using testing procedures which guarantee that FWER a with a being the desired significance level. To this end, one usually chooses the corrected significance threshold d appropriately. Ideally, the optimal d  would be obtained by solving the following optimization problem d   max djFWERd a f g ; as it would yield the highest power, i.e. the probability of detecting true positives, while still strictly controlling the FWER. However, since evaluating FWERd in closed form is not possible in general, the most popular approaches resort to sub-optimal solutions. For instance, the well-known Bonferroni correction () is equivalent to simplifying the original problem by using the bound FWERd dD, where D is the total number of statistical association tests being performed. When dD is used instead of FWERd in the optimization problem above, it leads to the well-known correction d  bon  a=D. Despite being popular due to its simplicity, the Bonferroni correction is often overly conservative, i.e. FWERd  bon  ( d  bon D in practice. More importantly, in our setup where D  LL1 2 is a huge number, the Bonferroni correction is too severely under-powered. An alternative to the lack of power of the Bonferroni correction is to use permutation-testing methods, such as the WestfallYoung (WY) permutation testing procedure (), to empirically estimate FWERd. In WY permutation testing, we generate a resampled dataset by randomly permuting the class labels with respect to the individuals, obtaining a new dataset in which no interval is statistically associated with the (permuted) class labels. Then we compute the minimum P-value across all LL1 2 intervals, p min  min s;l p s;l , and compare it with d. If p min > d, then no interval is significant and there are no false positives in the resampled dataset; otherwise there are one or more false positives. If we repeat this a sufficiently large number of times J, obtaining J different minimum P-values p j min n o J j1, one can compute an empirical estimate of the FWER aswhere 1takes value 1 if its argument is true and 0 otherwise. The optimal corrected significance threshold d  wy which solves the original optimization problem can then be estimated as the a-quantile of theAlthough proving theoretically that the WY permutation-testing procedure achieves strong FWER control is challenging, often requiring the assumption of hard-to-verify technical conditions such as the subset pivotality condition, permutation-based testing is widely applied in computational biology as empirical evidence often suggests that strong FWER control is in fact achieved. Next, we review the concept of the minimum attainable P-value for discrete test statistics, which we will extensively exploit in our contribution.
2.2.3The concept of minimum attainable P-value Tarone was the first to discuss in () the existence of a minimum attainable P-value when discrete test statistics, such as Fisher's exact test, are used. The idea is simple: since the test statistic is discrete, it can only take a finite set of values and there exists a minimum attainable P-value strictly greater than 0. As Tarone showed, one can exploit that to obtain an improved Bonferroni correction factor which exhibits a great increase in statistical power in many cases of interest. In the context of 2  2 contingency tables, a large class of test statistics considers the table margins x s;l , n 1 and n 2 to be constant and, as a consequence, knowing the value of one of the four inner cell counts determines the value of the other three, i.e. the table has a single degree of freedom. Relevant examples are Fisher's exact test, the v 2-test and the CochranMantelHaenszel test (), among others. If we choose a s;l as the cell count of reference (regardless of which of the four cell counts is chosen as the independent random variable one obtains exactly the same results, thus, we use a s;l without loss of generality), then a s;l 2 a min ;. .. ; a max f g where a min  max0; x s;l  n 2  and a max  minx s;l ; n 1  are the minimum and maximum possible values of the cell count a s;l consistent with the table margins. Thus, there are at most a max  a min  1 different attainable values for the test statistic and corresponding P-values. One can then compute the minimum attainable P-value as Wx s;l ; n 1 ; n 2   min p s;l a s;l ; x s;l ; n 1 ; n 2 ja s;l 2 a min ; a max    . (In our setup, the table marginals n 1 and n 2 are constant for all LL1 than permutation-based testing approaches. On the other hand, by exploiting the discreteness of the test statistic, it has greatly increased statistical power when compared with a standard Bonferroni correction. The method as proposed by Tarone had to be solved by a brute-force approach requiring computation of the minimum attainable P-values for every single test. When a very large number of tests have to be performed, that is unfeasible due to the daunting computational complexity involved. Nonetheless, by carefully designing context-dependent pruning techniques, Tarone's method was successfully applied recently to association rule mining () and graph mining (). However, all of those approaches cannot work directly with the exact minimum attainable P-value function Wx. Instead, they used a surrogate function ^ Wx which greatly overestimates the potential for significance when the margin x is close to n. Since that situation is commonly encountered in the significant interval search problem, especially for sufficiently large intervals, the existing methods cannot be readily extended to our task. Next, we present our contribution: two alternative algorithms to solve the significant interval search problem by making use of the exact minimum attainable P-value; one based on Tarone's method and another on WY permutation testing.
Our approach: significant interval search with fast automatic interval search and FAIS-WYHere, we describe the Fast Automatic Interval Search (FAIS) algorithm and its WestfallYoung-based counterpart, FAIS-WY. Both methods exploit the concept of minimum attainable P-value reviewed in Section 2.2.3 along with a novel pruning technique to obtain a corrected significance threshold d  for the significant interval search problem. However, their exact goal differs: FAIS provides a computationally efficient way to apply Tarone's method to the significant interval search problem whereas FAIS-WY makes applying the WY permutation testing procedure to the significant interval search problem feasible. That is, FAIS computes d  tar whereas FAIS-WY computes d  wy. In practice, FAIS-WY is more computationally demanding than FAIS but has increased statistical power. The main body of FAIS and FAIS-WY is presented as Algorithm 1, which emphasizes the common structure between both methods. The general idea is to initialize the tentative corrected significance threshold d to the largest possible value such that all intervals are initially testable. Intervals s; l are then sequentially enumerated in increasing order of length and, if they are testable at the current level d, they are processed leading to an adjustment of d to ensure that the respective FWERrelated target is satisfied: djI T dj a for FAIS and FWERd a, with FWERd estimated via WY-permutations for FAIS-WY. Finally, intervals are pruned from the search space, if possible. Therefore, we need to have an efficient way to check whether an interval s; l is testable and a way to determine when all intervals containing the current interval s; l can be pruned from the search space. We address each of those points next.
TestabilityLet d 0 ; d 1 ; :::; d n 2 b c n o be the image of Wx sorted in a monotonically decreasing sequence. Notice that there are only n 2    1 different values because Wx is symmetric around n=2 (). Now, we define the testable region Rd as the set R d   & 0; n   such that x s;l 2 Rd , s; l 2 I T d. In other words, the interval s; l is testable at level d if and only if the margin x s;l of interval s; l belongs to Rd. Two important properties of the testable regions Rd are:, the region R k is the union of two symmetric intervals, i.e.the region is composed of a single interval,defined above, with testable regions Rd k  R k. Property 2, along with the symmetry of Wx, implies that the regions Rd k  are easy to describe and can in fact be computed by starting from Rd 0   0; n and iteratively 'shrinking' them to obtain Rd k  from Rd k1 . The computational complexity of each such step is negligible (O(1)). The two different shapes that testable regions R k can take are described in. In summary, to check if an interval s; l is testable at level d 2 d k ; d k1  one just needs to check if x s;l 2 R k or not.. Minimum attainable p-value W(x) for n  60, n 1  15 (blue dots) Genome-wide detection of intervals of genetic heterogeneity i243 2.3.2 Pruning We exploit the following fact: intervals s 0 ; l 0  containing the interval s; l have margins x s 0 ;l 0 ! x s;l. Thus, if the interval s; l is non-testable and x s;l > n  r k l , no interval containing it can be testable and we can prune the search space. Notice that an interval s; l can be non-testable, i.e. x s;l = 2 R k , and yet the search space will not be pruned if x s;l < n  r k l. Thus, if we enumerate intervals in increasing order of length, every time an interval with x s;l > n  r k l is found to be non-testable, any other interval which contains it can be deemed to be non-testable too without needing to inspect it.
Detailed description of the pseudocodeNext, we describe in greater detail the pseudocode common to FAIS and FAIS-WY in Algorithm 1 in order to discuss the specific aspects of each of the two algorithms. Initialization: In Line 2 the variables specific to FAIS or FAIS-WY are initialized. Key to the enumeration procedure is the variable interval queue , which is initialized in Line 3 by pushing all length 1 intervals. Finally, the tentative corrected significance threshold is initialized to d  d 1 , which is the largest value that Wx can take other than the trivial value d 0  1, and the corresponding testability region R k and its left-most point r k l is obtained. Enumeration process: Between lines 5 and 15 one finds the core of the algorithm; a while loop which analyzes the intervals contained in the queue one by one, iteratively adding new intervals which cannot be pruned to the queue during the process. The loop naturally stops once the queue becomes empty. Within the loop, first of all, the interval s; l located at the head of the queue is popped (Line 6). The values of the random variable g s i s; l are then evaluated for all n individuals, and the corresponding margin x s;l is computed (Lines 7 and 8). Next, in Line 9, one checks if the interval s; l is testable at the current corrected significance level d k. If x s;l = 2R k , then the interval is not testable and does not need to be processed. In contrast, if x s;l 2 R k , the interval is testable at the current significance threshold d k and we must process it, appropriately decreasing d k and shrinking R k , thus also decreasing n  r k l. How that processing step is made is what sets FAIS and FAIS-WY apart algorithmically and statistically and will be discussed later. Finally, pruning occurs in Line 12. We know that if either the current interval being processed s; l or the preceding interval s  1; l are non-testable with margin x > n  r k l , then the interval s  1; l  1 cannot possibly be testable and does not need to be appended to the queue of intervals to be processed. Note also that if either interval s; l or interval s  1; l had been previously pruned due to this criteria, interval s  1; l  1 will be pruned too. In other words, pruning propagates from shorter intervals to longer length intervals containing them. As n  r k l decreases as intervals are processed, the algorithm naturally ends after all testable intervals at the final d  have been enumerated. FAIS specific functions: In Algorithm 2, we describe how FAIS processes the testable intervals. The key idea is to keep an n  1dimensional vector of counters c, originally initialized with all zero entries, such that ck is the number of intervals processed so far which had x s;l  k. Thus, P x2R k cx equals the number of testable intervals at the corrected significance threshold d k found so far. Every time a new testable interval s; l is found, the corresponding counter cx s;l  is increased by one making the improved Bonferroni bound  P x2R k cxd k increase too. If the bound is still lower than a, nothing needs to be done. However, when it becomes larger, we know that the current testability threshold d k is too large. Thus, in line 7, we increase k, reducing d k and effectively shrinking the testability region R k until the condition  P x2R k cxd k a is satisfied again.This approach is well-defined mainly due to two properties of the FWER estimator: (i) if the significance threshold d k remains fixed, inspecting a new interval can never make FWERd k  decrease; and (ii) FWERd can be evaluated exactly for all d d k using only the set of intervals satisfying x s;l 2 R k. Thanks to those two properties, the algorithm follows an iterative cycle of interval enumeration, FWER estimation and significance threshold adjustment which continues until all intervals belonging to a certain R k  have been enumerated. Finally, d  can be obtained as the a-quantile of p j min n o J j1 .
Enumeration of significant intervalsOnce the corrected significance threshold d  has been obtained, either with FAIS or FAIS-WY, we execute a slightly modifiedin this case, the significance threshold d k does not change along the execution of the algorithm.
Filteringof overlapping significant intervals Due to the way the problem is formulated, it is common to have clusters of overlapping significant intervals which introduce redundancy in the findings. As a post-processing step, only the most significant interval in the cluster, i.e. the one with the smallest P-value, is kept. As the most significant interval is guaranteed to be kept by this post-processing scheme, the FWER is unchanged and thus the computation of the significance threshold d  is unaffected. We illustrated this filtering process in Figure (Supplementary).
ExperimentsWe evaluate the ability of FAIS and FAIS-WY to detect genomewide contiguous intervals that may exhibit genetic heterogeneity on simulated data as well as on data from an association mapping study in Arabidopsis thaliana. As benchmarks, we use BRUTE, the 'brute force' method using the Bonferroni correction, BRUTE-WY, the WestfallYoung version of BRUTE, and UFE, the univariate Fisher's Exact Test, which only checks for a significant difference in single SNPs.
Results on simulated dataIn this simulation study two aspects of our algorithm are investigated, (a) its accuracy, and (b) its speed. The protocol used for the construction of simulated datasets is identical in both cases. Following the notation in Section 2.1, we have n binary sequences of length L, where the first n 1 sequences have label y  Cases and the remaining n 2 have label y  Controls. Initially, every entry s i j of each sequence s i is sampled from a Bernoulli distribution with parameter p 0 , i.e. s i j $ B1; p 0 ; i  1; 2;. .. n; j  1;. .. ; L so that s i j  1 with probability p 0 , which is essentially the background noise. We now prepare l max significant intervals d; 1; 2d; 2;. .. ; dl max ; l max  with d > l max. In other words, the parameter d is the (approximate) space between successive significant intervals, and each sequence has a significant interval of length 1 at position d, followed by a significant interval of length 2 starting from the position 2d, and so on. Then for every sequence s i (i  1; 2;. .. ; n 1 ) for the cases, elements in significant intervals s i dl; l (l  1; 2;. .. ; l max ) are replaced with new sequences such that the probability of at least one 1 occurring in each s i dl; l is equal to p case. This is achieved by sampling each element in s i dl; l from a Bernoulli distribution with parameter 1  1  p case  l. The same procedure is performed for the sequences s i (i  n 1  1; n 1  2;. .. ; n) for the controls using p con instead of p case. With this setup, we set the length of each sequence to be L  d  l max  1.
Power and FWERRecall that the statistical power is defined as 1  b, where b is the Type II error, i.e. the probability of a false negative occurring. To investigate the power of FAIS, FAIS-WY, BRUTE and UFE, we run a simulation with the following parameter settings: n 1  100 cases, n 2  100 controls, d  1000; l max  10; a  0:05; p 0  0:1; p con  0:2; and we vary p case from 0.2 to 0.9 to see how the power of the algorithm varies with respect to changes in p case. Note that p case  0:2 corresponds to the situation where there is no difference between the cases and controls. Also note that BRUTE-WY is not considered in this experiment because it will give the same results as FAIS-WY. With these parameter choices, each sequence s i in the cases contains 10 significant intervals s i 1000; 1; s i 2000; 2,. .. , s i 10000; 10. Each algorithm runs over this simulated dataset and identifies a list of significant intervals. These significant intervals are then clustered according to overlapping sets of intervals and the most significant interval is picked up as the representative in each cluster, as discussed in Section 2.3.5. That way, we obtain the resulting list of (disjoint) significant intervalsone for each overlapping clusters  i ; l  i  for i  1; 2;. .. ; M. If one of these intervals s  i ; l  i  overlaps a true significant interval (dl, l), we say that (dl, l) has been successfully detected. Otherwise if s  i ; l  i  does not overlap any true significant interval, then it is a false detection. Results are shown in. This shows that FAIS-WY has more power than FAIS, which has significantly more power than BRUTE, which in turn has significantly more power than UFE for p case in the range 0:4; 0:8. In the Supplementary Material, Supplementary Figs S5 and S6 show that the increase in power is similar for intervals of different lengths (except for UFE, which performs poorly for longer intervals).
Running time comparisons Figure 4 compares the runtimes of FAIS, FAISWY, BRUTE andBRUTE-WY for parameters n  100 and J  100 (number of permutations) while varying the sequence length L. UFE is not included because it is simply linear in L. Note that the axes are log-scaled: for L $ 100000, FAIS-WY takes 26.56 s, while BRUTE takes 30 min and BRUTE-WY takes $ 24 h. Further experiments were done for varying n and J (Supplementary Material), which shows that the WY methods are approximately linear in n and J. Extrapolating from these values, if J  10000, then FAIS-WY would take $ 40 min, while BRUTE-WY would take $ 100 days. Other simulations in the Supplementary Material show that the runtime of FAIS and FAIS-WY scales approximately linearly in the number of cases and controls.
Heterogeneity detection in Arabidopsis thalianaTo evaluate our methods on real data, we downloaded a widely used Arabidopsis thaliana GWAS dataset byGenome-wide detection of intervals of genetic heterogeneity i245 from the online resource easyGWAS (). This dataset is a large collection of 107 continuous and dichotomous phenotypes for at most 194 inbred lines and a total of 214 051 SNPs. All 21 dichotomous defense-and developmental-related phenotypes were selected for further analysis (). Because the genotypes are homozygous, we encoded the major allele as 0 and the minor allele as 1. For this study, we did not apply a minor allele frequency filtering. The significance level for FAIS/FAIS-WY and all other methods was set to a  0:05. We measured the extent of population structure for each phenotype by computing the genomic control inflation factor k using a logistic regression. Phenotypes inare ordered by increasing values of k. We ran two univariate association mapping methods to detect single SNPs that are significantly associated with a given phenotype: UFE Test and a state-of-the-art linear mixed model (FaSTLMM) to account for confounding due to population structure (). To estimate the genetic similarity between individuals in the LMM we computed a realized relationship kinship matrix (). We applied a Bonferroni correction to account for multiple hypothesis testing for these two methods. In, we reported the number of significant hits detected by the two univariate methods as well as the number of novel intervals detected by FAIS and FAIS-WY. We configured the methods in such a way that only intervals of length 2 or more are tested. For all methods, we observed a clear trend of detecting more significantly associated SNPs or intervals with increasing population structure (measured using genomic control k). Note that this is even true when using a LMM, which is able to account for confounding due to population stratification. We further observed that FAIS detects a total of 57 intervals, whereas FAIS-WY detects a total of 217 intervals across all 21 dichotomous phenotypes, which is on average 3.8 times more intervals than detected by FAIS. FAIS-WY is able to detect more significant intervals because it implicitly takes into account correlations between SNPs and hence leads to a less stringent corrected significance threshold, as shown in Supplementary Table S1. Because our method cannot explicitly correct for confounding due to population structure, we investigated how many of our significant intervals contain or are in close proximity (10 kb up-or down-stream) to a 'confounded' SNPa SNP found to be significantly associated by UFE (a UFE 'hit'), but not found to be significantly associated by a LMM, that is able to correct for population structure. We used a 10 kb window since linkage disequilibrium (LD) decays on average within 10 kb in Arabidopsis thaliana (). We found that only 6.9% (15 intervals) among all significant intervals (217) were close to such a confounded SNP (). Even for the phenotype with strongest population structure (YEL), only one of the intervals contained such a confounded SNP (Supplementary). Eventually, we excluded all intervals that contained or were in close proximity to any significant hit found with an UFE or a LMM. A set of 152 intervals, that is 70% of all detected intervals, was left (). Those can be deemed as truly novel intervals that cannot be detected with a univariate method.
Biological annotation and interpretationWe used the tool snpEFF () to annotate all genetic variants found in the most significant intervals of FAIS-WYPhenotypes are ordered with increasing population structure measured by the inflation factor k using a logistic regression. FAIS finds a total of 57 significant intervals, whereas FAIS-WY finds a total of 217 significant intervals.that do not contain a significant hit found by an UFE (Supplementary)referred to as noUFE filteringand that do not contain or are in close proximity to any significant hit found with an UFE or a LMMreferred to as stringent filtering (Supplementary). For each of the bacterial pathogenesis factors in our dataset (avrB, avrRpm1, avrPhpB and avrRpt2), the plant receptor that mediates the defense response was previously known () and had also been detected in previous GWA studies (). Under the noUFE filtering, the most significant intervals for avrPhpB and avrRpt2 were found in close proximity (<10 kb) to the corresponding R-genes [RESISTANCE TO PSEUDOMONAS SYRINGAE 5 (RPS5) and RESISTANCE TO PSEUDOMONAS SYRINGAE 2 (RPS2),. The same was true for the lesioning phenotype, where the most significant interval was found just upstream of the known causal gene ACCELERATED CELL DEATH (ACD6) (). All of these genes are known to have more than one allele that is maintained across different lineages (). If these alleles arose independently in different genetic backgrounds, individuals that share the same allele would have different nearby polymorphisms. Thus, these intervals of genetic heterogeneity might reflect close linkage to a true causal polymorphism that is maintained by selection in different lineages. After filtering out intervals that were <10 kb from a previous UFE or LMM hit (stringent filtering), the most significant interval for the avrPhpB was found to be $18 kb upstream of RPS5. There is a cluster of genes encoding flavin monooxygenase (FMO) family proteins in this region and a member of this family, FMO1, has previously been shown to be an important regulator of R-gene-mediated defenses (). Under these filtering criteria, the most significant interval for avrRpt2 was found in a region nearby two R-genes. For lesioning, the most significant interval encoded a chloroquine resistance transporter, which was previously shown to be important for resistance to Phytophthora brassicae (). For all other phenotypes, the most significant interval did not change between the noUFE and stringent filtering. For the avrB phenotype, the most significantly associated interval contained AT3G07195 (Supplementary Tables S2 and S3), a gene that encodes a paralog of the negative immune system regulator RPM1 INTERACTING PROTEIN 4 (RIN4) (). This interval was also identified in association with the response to another bacterial pathogenesis factor, avrRpm1 where it was the second-most significant interval. Because both avrB and avrRpm1 are detected by the host immune receptor RESISTANCE TO PSEUDOMONAS SYRINGAE PV MACULICOLA (Rpm1) through modification of RIN4 (), it suggests a plausible role for this RIN4 paralog in mediating natural variation in response to the activity of these bacterial virulence determinants. We also found that two phenotypes that are not related to defense had intervals that contained a cluster of two or more paralogs. In the case of leaf rolling at 10 C (Leaf roll 10), the most significant interval covered a cluster of receptor-like proteins. For the lesioning or yellowing phenotype (LY), there was a cluster of RING domain/ U-box proteins in the most significant interval. Thus, intervals of genetic heterogeneity may reflect copy number variation or rearrangements that are common features of paralog clusters (reviewed in _ ZmienkoZmienZmienko et al. 2014). For other phenotypes, the polymorphisms in the interval itself may have a role in explaining the phenotype. The most significant intervals for two of the phenotypes that indicated reduced chloroplast function (YEL and Chlorosis 22) contained a gene that encoded a protein that was predicted to be localized to the chloroplast. Taken together, these results suggest that intervals of genetic heterogeneity associated with biological traits may result from(i) linkage to an allele that is maintained independently in different lineages, (ii) structural variation in the region or (iii) true genetic heterogeneity within a gene that is responsible for the phenotype.
Discussion and conclusionWe have presented an algorithm for detecting genomic intervals of SNPs that may jointly explain the genetic heterogeneity underlying a phenotype of interest. On data from Arabidopsis thaliana, we discover novel genomic regions that may be involved in the genetic heterogeneity of several defense and developmental phenotypes. Our method improves the state of the art in two important ways: First, it automatically finds the starting and ending positions of these intervals in the genome, while current approaches require the definition of a fixed starting and ending point for each interval. Second, despite the huge number of intervals that we are testing, we can properly account for the resulting problem of multiple hypothesis testing without losing statistical power, that is the ability to detect true intervals. Hence, our algorithm combines in a unique way the ability to efficiently mine the genome for intervals of genetic heterogeneity with a proper way to measure the statistical significance of our findings. Our method is based on a number of assumptions, which should be overcome in future work in order to further extend the applicability of our method. First, we do not model confounders such as population structure. That is, we do not account for the fact that there may be distinct subpopulations of individuals in our sample (). We envision extending our method in this direction by. Proportion of novel intervals among all intervals found by FAIS-WY, across all phenotypes. The green part shows the proportion of novel intervals found by FAIS-WY. The red part (UFE 6 10 kb\LMM 6 10 kb) are intervals containing an UFE hit or are in close proximity (610 kb) to one and the hit could not be found with a LMM. The blue part (LMM 6 10 kb\UFE 6 10 kb) are intervals containing a LMM hit or are in close proximity (610 kb) to one and the hit could not be found with an UFE. The purple part (LMM 6 10 kb\UFE 6 10 kb) are intervals that contain both, a hit (610 kb) found with an UFE and a LMM Genome-wide detection of intervals of genetic heterogeneity i247 conducting meta-analyses, that is searching significant intervals in different subpopulations and then combining these results, e.g. via the CochranMantelHaenszel test (), while still accounting for multiple testing. Second, the method is encoding-sensitive in the sense that changing the binary encoding of a particular SNP will affect the results, and potentially lead to an interval being missed. As in many multi-locus interaction models (e.g. Kam), it is an open problem how to overcome this coding-sensitivity, while retaining the computational efficiency and statistical power of our current method. Third, we here consider contiguous intervals of SNPs that exhibit genetic heterogeneity, rather than arbitrary sets of SNPs anywhere in the genome. This decision is based on the computational and statistical consideration that the number of candidate sets is quadratic in the number of SNPs in our setting, but exponential in the size of the candidate sets in the general setting. Still, it is an important question to ask whether our approach here can be extended to detect groups of SNPs in gene pathways () that may explain the genetic heterogeneity of a given phenotype. Based on our results, we propose three reasons that explain why an interval of genetic heterogeneity is associated with a phenotype. First, regions flanking a locus that is under balancing selection exhibit polymorphisms that are linked to the segregating alleles () and this can give rise to genetic heterogeneity that is associated with a phenotype that is governed by the locus under selection. All three of the R-genes (Rpm1, Rps5 and Rps2) that govern the responses to the four bacterial pathogenesis factors (avrB, avrRpm1, avrPhpB and avrRpt2) in our phenotype dataset were previously found to be under balancing selection (). We found that at least one of the significant intervals of genetic heterogeneity for each of these bacterial pathogenesis factor phenotypes was in the region flanking the corresponding R-gene (Supplementary). Because all of these phenotypes also had a hit in previous UFE test or LMM GWAS for the cognate R-gene, these intervals were filtered out under the no UFE criteria. The same was true for the lesioning phenotype, where the most significant interval that did not contain a significant hit found by an UFE was near the causal ACD6 locus, which is also thought to be under balancing selection (). Thus, it is possible that intervals of genetic heterogeneity that we detected for other phenotypes in our dataset may also have resulted from linkage to a locus under balancing selection that was previously missed by a univariate or LMM approach. Second, regions such as multi-copy gene clusters undergo frequent structural rearrangements () that might become associated with different polymorphisms. Under the most stringent filtering criteria, we found that the most significant interval for four phenotypes (avrPhpB, avrRpt2, LY and Leaf roll 10) overlapped or was adjacent to a multi-copy gene cluster. Therefore, intervals of genetic heterogeneity may reflect structural variation that is missed by single SNP GWAS. Third, genetic heterogeneity may arise within a gene that underlies a phenotype. Our analysis uncovered a potential role for a RIN4 paralog in determining resistance to the bacterial pathogenesis factors avrB and avrRpm1, but not for avrRpt2 or avrPphB. The host immune receptor Rpm1 recognizes avrB and avrRpm1 (), avrRpt2 is detected by another receptor (Rps2) () and avrPphB is perceived by a third receptor, Rps5 (). All of these interactions are indirect and the virulence factors are not themselves directly recognized by the receptors, but detected through their modifications of targeted host proteins according to the Guard Hypothesis (). For avrB, avrRpm1 and avrRpt2, the target host protein (guardee) is RIN4, while avrPphB targets the unrelated host protein PBS (). The fact that we detected a RIN4 ortholog in a novel interval for responses to two of the three pathogenesis factors targeting RIN4 suggests the intriguing possibility of natural variation in a guardee contributing to pathogen resistance, similar to what has been observed for the tomato guardee RCR3 (). In short, we see exciting challenges for future work, but also high potential for the method present here to help in the discovery of genetic heterogeneity at a genome-wide level.
FundingThis work was funded in part by the Alfried Krupp von Bohlen und HalbachStiftung (KB), the SNSF Starting Grant 'Significant Pattern Mining' (KB), the Max Planck Society (BR), a Grant-in-Aid for Scientific Research (Research Activity Start-up) 26880013 (MS) and the Marie Curie Initial Training Network MLPM2012, Grant No. 316861 (FLL, KB). Conflict of Interest: none declared.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
intervals and only the margin x s;l depends on the interval s; l. Thus, we omit the dependence of Wx s;l ; n 1 ; n 2  on n 1 and n 2 from now on.) The concept of the minimum attainable P-value Wx s;l  has profound implications for multiple hypothesis testing problems involving discrete test statistics. Intuitively, it quantifies the strongest association that we could ever observe just based on the table margins. When applied to the significant interval search problem, if W x s;l  > d then we know that the interval s; l can never be significant regardless of the actual value of a s;l. More importantly, when test statistics are used which consider the table margins fixed, one can prune those intervals from the search space without affecting the FWER. More formally, we define I T d  f s; ljWxs; l d g as the set of testable intervals at corrected significance level d. All intervals which are not in I T d can never achieve significance at level d and are thus called non-testable at that level. The FWER at significance level d can then be upper bounded by djI T dj, motivating the following procedure to find the corrected significance threshold d  : d  tar  max djdjI T dj a f g Like the Bonferroni correction, Tarone's method also ignores the dependence structure between test statistics, thus being less powerful i242 F.Llinares-L pez et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
