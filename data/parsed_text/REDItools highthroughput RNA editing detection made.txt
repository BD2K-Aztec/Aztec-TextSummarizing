The reliable detection of RNA editing sites from massive sequencing data remains challenging and, although several methodol-ogies have been proposed, no computational tools have been released to date. Here, we introduce REDItools a suite of python scripts to perform high-throughput investigation of RNA editing using next-generation sequencing data. Availability and implementation: REDItools are in python programming language and freely available at
INTRODUCTIONRNA editing is an important post-transcriptional mechanism that alters primary RNAs through the insertion/deletion or modification of specific nucleotides (). It occurs in a wide range of organisms and, concurrently with alternative splicing, increases the diversity of eukaryotic transcriptomes and proteomes (). In humans, RNA editing affects both coding and non-coding transcripts by the deamination of cytosine to uridine (C-to-U) or, more commonly, through the conversion of adenosine to inosine (A-to-I) by members of adenosine deaminase (ADAR) family of enzymes, which act on double-stranded RNA (dsRNA) (). Editing events can lead to a variety of biological effects depending on the RNA type (mRNA or ncRNA) or region (5 0-UTR, 3 0-UTR, CDS, intron) involved in the RNA editing modification (). For example, changes in UTRs can lead to altered expression, preventing efficient ribosome binding or recognition by small regulatory RNAs whereas alterations in coding protein regions can induce amino acid replacements with variable functional consequences. In addition, RNA editing can influence the activity of ncRNAs such as siRNAs, miRNAs and potentially of piwiRNAs by affecting base-pairing interactions within RNA secondary structures (). The importance of RNA editing is underlined by the fact that its deregulation in humans is associated with a variety of neurological or neurodegenerative disorders and cancer (). Although the identification of sites subject to RNA editing is simple, in principle, requiring the direct comparison between transcripts and their corresponding genomic loci of origin, accurate genome-wide implementation remains a challenging task (). Few years ago, we published the first attempt to use massive transcriptome sequencing (RNA-Seq) for exploring the RNA editing landscape in mitochondria of grapevine (). Since then, RNA-Seq has become the de facto standard approach to study RNA editing potential in whole eukaryotic genomes, with sometimes questionable results (). The major challenge in identifying RNA editing changes by RNA-Seq data is the discrimination of true RNA editing sites from genome-encoded SNPs and technical artefacts caused by sequencing or read-mapping errors (). The use of DNASeq data from single individuals, annotations in dbSNPs and several stringent filters can minimize the detection of false RNA editing sites (). Although several methodologies to reveal the RNA editing potential in eukaryotic transcriptomes have been proposed, no comprehensive software devoted to this aim has been released. In the meantime, massive transcriptome sequencing data are routinely produced worldwide and a large number of experiments from different organisms and conditions are freely available through specialized databases such as the Short Read Archive at NCBI. To promote the investigation of RNA editing at large scale in the next-generation sequencing era, we developed the package REDItoolscomprising of a suite of scripts written in the portable python language. REDItools are available under the MIT license at http://code.google.com/p/reditools/, are not organism oriented and work with RNA-Seq and DNA-Seq data from any sequencing platform.
FEATURESREDItools include three main scripts to study RNA editing using both RNA-Seq and DNA-Seq data from the same sample/individual or RNA-Seq data alone. REDItoolDnaRNA.py detects RNA editing candidates by comparing pre-aligned RNA-Seq and DNA-Seq reads in the standard BAM format. The script explores genomic positions site by site and returns a table containing the coverage depth, the mean quality score, the observed base distribution, the strand if available and the list of observed *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com substitutions as well as the frequency of variation. If DNA-Seq data are also available, the same information, except for the strand, is provided to assess genomic sequence and, thus, exclude potential SNPs. In addition, individual positions can be filtered according to read coverage, base quality score, mapping quality, bases supporting the variation, type of substitution and frequency. REDItoolDnaRna.py can exclude positions in homopolymeric regions of predefined length, in intronic sequences surrounding known splice sites, invariant RNA-Seq positions, sites not supported by DNA-Seq and positions near read ends. Additionally, users can provide genomic regions to include or exclude in RNA editing searches. Additional read level filters include the possibility of excluding ambiguously mapped reads, possible PCR duplicates and discordant paired-end reads. In the case of directional RNASeq data, REDItoolDnaRna.py can infer the strand per position, improving the reliability of RNA editing calls by excluding noise from antisense transcription or mapping errors. Alternatively, the strand of individual positions can be inferred from user specified annotations. REDItoolKnown.py, has been developed to explore the RNA editing potential of RNA-Seq experiments by looking at known events only, following an improved methodology implemented in our ExpEdit web service () (see Supplementary Material for details). Finally, REDItoolDenovo.py performs the de novo detection of RNA editing candidates using RNA-Seq data alone without resequencing data for the individual donor genome () (see Supplementary Material for details). REDItools includes some accessory scripts to post-process output tables, filtering candidates position-by-position using known annotations and identifying ambiguous alignments by Blat. All candidate positions can also be easily and quickly annotated using relevant databases as those in the UCSC genome browser.
IMPLEMENTATIONREDItools are in the portable python programming language and based on the Pysam module, a wrapper for the widely used SAMtools (), which includes methods and functions to handle read alignments in SAM/BAM format facilitating the browsing of multiple read alignments site by site along a reference genome. All scripts have low memory request enabling RNA editing calling on standard desktop computers. Because the search for RNA editing candidates is time-consuming requiring the processing of individual genomic positions, REDItools can speed up the process by distributing calculations over independent cores using the native python multiprocessing module. Filtering and annotation of individual positions is extremely fast and memory efficient, as it is performed by the tabix program () wrapped in the Pysam module. REDItools require inputs in BAM format from any platform/ organism, and results are provided in tab-formatted tables facilitating downstream analyses. We tested REDItools on the lymphoblastoid cell line GM12878 used infor which BAM files produced by the BWA mapper () were kindly provided by the authors. Limiting the analysis to chr21 and using the same filtering scheme as the original work, we obtained remarkably similar results (see Supplementary Material for details). Remapping all reads by GSNAP () to preserve the paired end information and reapplying REDItools, we obtained 221 401 and 2089 candidate editing sites in Alu regions and non-Alu non repetitive regions, respectively, with respect to 147 029 and 1451 sites detected by(see Supplementary Material for details). In conclusion, REDItools is a unique and effective resource for the investigation of RNA editing from NGS data. It is highly flexible, including a variety of filters and quality checks, and may provide very reliable sets of editing candidate sites according to the user requirements (see Supplementary Material for a further benchmark application on Illumina Body Map RNA-Seq data).
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
E.Picardi and G.Pesole at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
