An ultrafast DNA sequence aligner (Isaac Genome Alignment Software) that takes advantage of high-memory hardware (448 GB) and variant caller (Isaac Variant Caller) have been developed. We demonstrate that our combined pipeline (Isaac) is four to five times faster than BWA Ã¾ GATK on equivalent hardware, with comparable accuracy as measured by trio conflict rates and sensitivity. We further show that Isaac is effective in the detection of disease-causing variants and can easily/economically be run on commodity hardware. Availability: Isaac has an open source license and can be obtained at https://
INTRODUCTIONMotivated by a growing need for faster turnaround times for whole-genome sequencing (WGS) data analysis, we present here a novel alignment and variant calling pipeline that is able to rapidly align WGS data and deliver high-quality variant calls on a single server node. The aligner, Isaac Genome Alignment Software, is designed to align next-generation sequencing data with low-error rates (single or paired-ends). Speed improvements come from the fact that the Isaac aligner has been designed to take full advantage of all the computational power available on a single server node. As a result, the Isaac aligner scales well over a broad range of hardware architectures, and alignment performance improves with hardware capabilities (i.e. clock speed, number of cores, IO bandwidth and memory). The typical endto-end time to align a $3040 human dataset from BCL or FASTQ files to a sorted and duplicate-marked BAM file is $4 h on an Amazon High-Memory Quadruple Extra Large Instance and can be as fast as 2 h on an optimized high end server (see Supplementary Material for specs). Beyond speed and scalability, the Isaac aligner also delivers ease-of-use, flexibility and robustness. The creation of sorted, duplicate-marked BAM files from BCL or FASTQ files is done in a single operation, alleviating the need to rewrite large BAM files multiple times in a typical workflow. Additional command-line options are available to the expert user to finely control the algorithm's inputs, outputs and computational performance (Supplementary Section S1 describes the details of the Isaac aligner algorithm and its implementation). The Isaac Variant Caller calls SNPs and small indels using a Bayesian framework to compute probabilities over diploid genotype states. The Isaac Variant Caller uses an internal read realignment routine to improve variant call accuracy near indels and includes a site-specific error dependency term (Supplementary Section S2 provides a detailed explanation of the Isaac Variant Caller algorithm and implementation). The Isaac Variant Caller is designed to efficiently genotype and provide output for all variant and non-variant genomic loci as Genome VCF files (gVCF;, manuscript in preparation; https://sites.google.com/site/gvcftools/), a convention for efficiently representing whole-genome output in VCF format (http://www.1000genomes.org/node/101). To demonstrate the performance of the Isaac aligner and variant caller pipeline (Isaac), we compare the quality of the variant calls and the time-to-answer of this pipeline with the community standard combination of BurrowsWheeler Alignment (BWA) () and the Genome Analysis Tool Kit (GATK) (). We also demonstrate that Isaac can successfully detect a clinically deleterious variant in a neonatal sample ().
METHODS
SoftwareBWA can be obtained from http://bio-bwa.sourceforge.net/. GATK can be obtained from http://www.broadinstitute.org/gatk/. Isaac can be obtained from https://github.com/sequencing and is subject to the Illumina open source license.
Alignment and variant callingThe details of the alignment and variant calling pipelines are discussed in Supplementary Section S3. Briefly, the aligner/variant caller *To whom correspondence should be addressed. combinations are Isaac and BWA  GATK. For Isaac, indel realignment is performed by the Isaac aligner, whereas for BWA  GATK, indel realignment is performed post-alignment using GATK. For the GATK variant calling, the GATK best practices is used, which involves variant calling using the Unified Genotyper followed by filtering with the variant quality score recalibration (VQSR) protocol ().
DatasetsTwo datasets were used for the analysis. The first dataset, used for the comparison of Isaac and BWA  GATK, is a human family trio selected from the 1000 Genomes project (). The trio consists of CEPH family members NA12878 (child), NA12891 (father) and NA12892 (mother). This dataset was used to evaluate the variant call quality by assessing the number of Mendelian SNP conflicts, the SNP conflict rate and the sensitivity (% callable bases) of each pipeline. The second dataset is a neonatal sample (UDT173) used for genetic disease diagnosis (). This dataset was used to demonstrate that Isaac can be effectively used to isolate clinically relevant variants. In addition to evaluating the quality of the variant calls, the performance in wall clock time of each pipeline on equivalent computer hardware architectures is reported. The CEPH DNA was obtained from Coriell Institute and sequenced internally on a HiSeq 2000. The neonatal sample was sequenced on a HiSeq 2500. Polymerase chain reaction-free sequencing methods were used for all the samples analyzed ().depicts the wall clock time for each of the pipelines. Isaac took $78 h as compared with 4346 h for BWA  GATK, demonstrating a significant performance enhancement on equivalent computer hardware. One source of this improved performance is that Isaac does not require generation of FASTQ files before alignment. In general, the generation of FASTQ files adds an additional 23 h to the BWA  GATK workflow.compares the quality of the resulting variant calls and the sensitivity of the two pipelines. The number of conflicts was slightly larger for Isaac with a slight reduction in sensitivity. Additional alignment and variant metrics are shown in the Supplementary Section S4. To demonstrate Isaac's clinical use, we analyzed a genome with a previously confirmed novel disease-causing mutation in ATP7A, causing Menkes Disease (). To show that the results of Isaac are capable of being equivalently filtered to identify the correct disease-causing mutation, we generated small variants from the same genome sequence data using Isaac. The variants went through an annotation pipeline) and produced results that also identified the correct disease-causing variant (seeNote: Filters are applied consecutively. Variants altering the protein coding sequence are those that are non-synonymous, frame shirt, stop gain/loss or splice site; medically relevant genes are those genes with variants in HGMD; variants predicted to be deleterious are determined by its polyphen score () and/or SIFT score ().
Hardware specifications
RESULTS
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
C.Raczy et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Isaac at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
