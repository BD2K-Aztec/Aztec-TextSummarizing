Motivation: Protein aggregation is associated with a number of protein misfolding diseases and is a major concern for therapeutic proteins. Aggregation is caused by the presence of aggregation-prone regions (APRs) in the amino acid sequence of the protein. The lower the aggregation propensity of APRs and the better they are protected by native interactions within the folded structure of the protein, the more aggregation is prevented. Therefore, both the local thermodynamic stability of APRs in the native structure and their intrinsic aggregation propensity are a key parameter that needs to be optimized to prevent protein aggregation. Results: The Solubis method presented here automates the process of carefully selecting point mutations that minimize the intrinsic aggregation propensity while improving local protein stability. Availability and implementation: All information about the Solubis plugin is available at http://solu
IntroductionProtein aggregation remains a major bottleneck in the production of many therapeutic proteins. To reduce this aggregation problem, several approaches have been developed such as (i) generation of a fusion protein containing a solubilizing tag (); (ii) careful formulation of the buffer () or (iii) increasing the colloidal stability by increasing the net charge (). Nowadays, it is, however, common knowledge that aggregation is mediated by the presence of aggregation-prone regions (APRs) resulting in several computational methods that can predict the aggregation tendency and therefore, the effect of a mutation on protein aggregation (Supplementary). As none of the available methods currently takes into account protein stability, there is a need of integrating these with protein stability predictors (Supplementary). The Solubis method is such an integration approach that selects mutations that reduce the aggregation tendency by combining both TANGO () and the empirical forcefield FoldX (). This combination results in a tool to guide the design of aggregation-resistant protein sequences, by identifying mutations that reduce TANGO while respecting the thermodynamic stability. We experimentally validated the approach by improving the solubility and abundance of both protective antigen and alpha-galactosidase (unpublished results). In addition, we analyzed the performance of our method on published variants that increase solubility (Supplementary). Eighteen of the 24 variants (75%) lower the aggregation tendency (DTANGO < 0), where the other six mutations do not increase he aggregation tendency. In contrast, many of them do not pass our conservative criteria of respecting structural stability (DDG < 1). However, for a large fraction of mutations with a DDG higher than 1, the calculation were based on homology models, which is known to negatively affect the performance of FoldX. Overall, 6 out of the 24 analyzed variants that increase solubility can be identified following the Solubis method presented here butthis number increases to six out of seven if homology models are not included. Therefore, the use of homology models is not recommended to obtain an accurate prediction of the effect on protein stability. For user friendliness, we here present an implementation of Solubis in the YASARA molecular viewer environment ().
Implementation and required softwareThe Solubis plugin combines two established methods, FoldX and TANGO into YASARA. YASARA (View) can be downloaded freely at http://www.yasara.org. FoldX and TANGO are free for non-commercial purposes and can be downloaded from, respectively, http:// foldx.crg.es and http://tango.crg.es. This plugin is written in python, which needs to be installed on MS Windows (http://www.python. org), and is platform independent. Installing the plugin adds a new dropdown 'Solubis' menu in the main 'Analyze' menu ().
The solubis menu items
Complete analysis of objectComplete analysis of object runs the TANGO algorithm and returns the short APRs present in your protein. To have an idea whether your protein contains such a stretch, you can analyze an object of choice. The APRs are colored, if desired according to their aggregating strength, in the same object or in a newly created object. The output of the algorithm is printed to the YASARA console and to a file (see 'Save last calculation').
Complete analysis of moleculeThis item has the same function as 'Complete analysis of Object' but allows analyzing only certain molecules.
Mutate residueMutate residue mutates one residue to one or more new residues and returns the effect on aggregation tendency. The necessary steps are (i) residue selection to select the residue to mutate; (ii) selection menu to choose the desired replacement residue(s); (iii) set options (temperature, ionic strength and pH) to run the aggregation predictor, default shown; (iv) settings to define an aggregating stretch, default shown and (v) menu to indicate whether your structure contains a gap. This will return a new object for each selected mutation and outputs whether a mutation affects (both increase and decrease) the aggregation tendency. If the effect on protein stability is also required, we advise to use the FoldX plugin () or use the menus 'Solubis run on complete molecule' or 'Solubis run in marked region'.
Solubis run on complete moleculeSolubis run on complete molecule search for a selected number of mutants that minimize the intrinsic aggregation tendency and, if selected, do not destabilize the protein. As minimizing the aggregation tendency is done by introducing so called gatekeepers (P, R, K, D and E) () into APRs, it is advised to filter out the destabilizing mutations with FoldX. The required steps are (i) select the molecule to mutate; (ii) set options to run the aggregation predictor, default shown; (iii) set thresholds to define an aggregating stretch, default shown (iv) menu to enable the FoldX analysis to calculate the effect on protein stability. As FoldX needs to start from a repaired structure, you need to select 'FoldX RepairPDB' if not the case; (v) options for FoldX specific settings: number of runs, temperature, pH, Ionic strength and Vander Waals penalty, default shown; (vi) menu to select the threshold for aggregation tendency and protein stability, default shown; (vii) box to select how many mutations you want to retrieve and (viii) menu to indicate whether your structure contains a gap. If a mutation minimizes the aggregation tendency with a certain threshold and the DDG is below the selected value (setting point 6), this mutation is considered as a Solubis mutant. Stringent conditions require a more negative DDG (more stabilizing) and more positive aggregation threshold.
Solubis run in marked regionSolubis run in marked region performs the same calculation as above but on a selected region of the protein. When analyzing a large protein, these calculations can take a considerable amount of time, as multiple APRs are present. To limit the calculation time, this menu allows you to first select a certain region for further investigation. After this step, the same steps are followed as in 'Solubis run on complete molecule'. The marked region has to contain an APR, so it is recommended to first run 'Complete analysis of Object/ Molecule' if unknown.
Save last calculationThe user can save all files or just the SUMMARY file. This file contains, dependent on the performed action, the APRs present in a protein, the effect of a mutation on the aggregation tendency or the Solubis mutations. If the user chooses to save all files, this includes the raw output and the used Options file.
SummarySolubis is a protein redesign method to abrogate aggregation through disrupting aggregation-nucleating sequences with mutations that maximally reduce their intrinsic aggregation propensity while preserving thermodynamic stability of the functional protein. The graphical interface makes it very straightforward to identify mutants that lead to marked reduction in protein aggregation upon overexpression and will attract non-experienced computer users to perform these complex calculations. However, we want to emphasize that our method does not take into account available information about the active site or post-translational modifications but focus on theSolubis: optimize your proteinstructural integrity. Therefore; users should always control whether the selected mutations do not affect important functional sites.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
G.De Baets et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
