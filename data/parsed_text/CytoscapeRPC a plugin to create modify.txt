CytoscapeRPC is a plugin for Cytoscape which allows users to create, query and modify Cytoscape networks from any programming language which supports XML-RPC. This enables them to access Cytoscape functionality and visualize their data interactively without leaving the programming environment with which they are familiar. Availability: Install through the Cytoscape plugin manager or visit the web page: http://wiki.nbic.nl/index.php/CytoscapeRPC for the user tutorial and download.
INTRODUCTIONCytoscape () is a network visualization and analysis tool which is mainly used in the life sciences. It enables users to display the data as graphs and helps them to perform basic actions such as gathering network-topological statistics. It comes with its own plugin management system to facilitate the easy implementation of new functionality. Researchers in the life sciences often use scripting languages to process their data and use Cytoscape to visualize it. Their workflow when using Cytoscape comes down to running their algorithm, converting the output data such that Cytoscape can use it, loading the data into Cytoscape and then setting the appropriate layout and visualization rules to control how the data is displayed. The last three steps of this process are repetitive and time consuming. We present CytoscapeRPC, a Cytoscape plugin created to solve the aforementioned problems by enabling users to create a connection to Cytoscape using XML-RPC, allowing them to create, modify and query Cytoscape networks from within their own programming environment.
METHODS AND IMPLEMENTATIONCytoscapeRPC builds on top of the Cytoscape libraries, making these components easily accessible. Nodes, edges and networks e.g. can be accessed through their human-readable identifiers. Attributes for these components can be created, queried and modified. They can also be linked to visual mappers. For example, the user can perform a mapping from molecule type (receptor, ligand) to the shape of a node (triangle, square) or, by using the P-value of an interaction, change the colour of the edges between molecules. * To whom correspondence should be addressed.Layouts can be applied or the positions of nodes can be set manually by specifying the x-and y-coordinates. The plugin uses XML-RPC (), a communication protocol which uses XML to transfer messages between client and server applications. It allows programs written in different programming languages and running on different machines to communicate by passing messages which perform function calls. XML-RPC was chosen based on the relative simplicity of the protocol which ensures that server and client libraries are available for virtually every programming language (e.g. Perl, Python, Ruby etc.), thus giving access to Cytoscape through those languages. The user can specify whether the plugin should be started on Cytoscape start-up and on which port the XML-RPC server should listen for incoming calls. This can be used to run Cytoscape on headless (i.e. non-GUI) computers. The XML-RPC service normally listens to any incoming call. To limit access to the plugin, the XML-RPC security mode has been implemented. The user can request the plugin to only allow incoming calls from processes running on the same computer as Cytoscape itself. The plugin exposes the CyCommand API which was created to share functionality between Cytoscape plugins. Through CytoscapeRPC, the user can access this functionality and control third party plugins. Plugin developers can use the CyCommand functionality and CytoscapeRPC to easily share their work with other programmers.
Plugin designThe plugin consists of and relies on a number of components, as shown in. The different components are explained from top to bottom:(1) Cytoscape and its libraries.((3) CallHandler class: class which provides all the functions that are made available through the external interface. All calls are redirected to the appropriate functions in the handler classes.(4) XML-RPC: the Apache library providing the XML-RPC server.(5) External clients: client code which directly calls or provides abstract methods for working with Cytoscape.
Usage examplesAn example scenario with Python source code is provided in. Other scenarios which can be found in the documentation include:@BULLET Loading multiple network (sif), node attribute (noa) and edge attribute (eda) files, perform a default layout and set some visual attributes. This provides a starting point for analysis without having to go through the manual steps of data loading.@BULLET Use an external layout algorithm from a package such as iGraph () to determine the position of nodes. Use the plugin to transfer the location information to Cytoscape. This ensures that the computationally expensive network analysis can be performed using optimized software. @BULLET Demonstrate network changes by scripting events for Cytoscape. Time series data of e.g. gene expression can be loaded and used to create visual representations. While the layout of the network can remain static, the colours of the nodes (in this case genes) can change based on their expression values. These different instances of the same network can be saved to image files and can be combined by e.g. the ImageMagick  'convert' tool to create a movie of these changes.@BULLET Import data from Cytoscape using R, perform an analysis and update the Cytoscape visualization based on its output.
The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CONCLUSION CytoscapeRPC allows users to develop applications which leverage the functionality of Cytoscape without having to leave their programming environment. This lowers the barrier for people to start developing their own tools for Cytoscape.
