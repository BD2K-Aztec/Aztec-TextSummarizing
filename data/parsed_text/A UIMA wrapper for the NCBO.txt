The Unstructured Information Management Architecture (UIMA) framework and web services are emerging as useful tools for integrating biomedical text mining tools. This note describes our work, which wraps the National Center for Biomedical Ontology (NCBO) Annotator—an ontology-based annotation service—to make it available as a component in UIMA workflows. Availability: This wrapper is freely available on the web at
UIMA wrapper for the NCBO annotatorcreate annotations that were then referenced in OpenDMAP () patterns for identifying protein interactions. To make the functionality of the Annotator easily available to other projects, it is deployed as a web service. A web service is a software component that makes functionality available over the web in order to be used by computer programs. In this case, the Annotator is accessible to both humans and computers, respectively through the BioPortal user interface and the BioPortal web service application programming interface. The ubiquity of the web and the simple protocols involved make it easy to access. All that is required is an HTTP library and an XML parser. Other output formats are available that are even easier to parse, though do not include as much detail. The Annotator allows for control of term matching by exposing parameters available in the web service. For example, climbing the inheritance hierarchy can be limited with the levelMax parameter. A full description of parameters is available online (http:// www.bioontology.org/wiki/index.php/Annotator_Web_service). All options described there are supported by the UIMA wrapper with the exception of outputFormat which is set to XML so that the results can be parsed internally to the wrapper itself. Integrating the Annotator with UIMA requires a type system specification that defines the Java classes used to store annotations. This wrapper uses the CCP's type system, making it compatible with any of the other wrappers available in the CCP's collection, BioNLPUIMA (), freely available online (http://bionlpuima.sourceforge.net). Using this wrapper in combination with other UIMA tools will involve some adaptation between type systems. Since no standard type system has emerged (), different UIMA adaptations are likely to use different type systems. The Julie Lab's JCORE () and the Tsujii lab's U-Compare system (), for example, use different type systems. Each has used different methods for adapting between type systems that apply here as well. JCORE makes use of a pair of type system adapters that convert from the local type system to the foreign one and back. Such a converter can be re-used whenever another tool from the same foreign type system is used. U-Compare makes use of both a shared type system where comparable annotations share a base class (), and adapter pairs. Included with U-Compare is a pair of adapters for using CCP wrappers. The topic of type system design is explored more fully in Verspoor (2009). Annotations are retrieved from the web service by the wrapper using the HttpComponents (http://hc.apache.org/) from Apache. They are unmarshalled from the returned XML by JAXB (https://jaxb.dev.java.net/). Then they are represented in the primary UIMA data structure, the Common Analysis Structure or CAS, using the structures available in the CCP type system (). A CCPTextAnnotation delineates the span of the matched concept and holds references to other objects describing the annotation such as a CCPAnnotator that shows it came from the NCBO Annotator. A CCPClassMention object, named after the ontology and the term id, GO:000557, for example, contains references to CCPSlotMention objects that contain the attribute values. The attributes are ontology, concept and type. The type attribute tells what kind of a match the Annotator used to find the concept. Possible values are DIRECT, MAPPING and IS-A. DIRECT is for direct matches from the text to an ontology term found with MGREP. MAPPING is a match found in a second ontology based on a correspondence to a term in an initial ontology. More general concepts found through an ontology's hierarchy are marked with a type of IS-A. IS-A matches have a fourth attribute that tells how far up the hierarchy the term is, named LEVEL. The wrapper limits the size of the requests it makes on the web service by using sentence annotations created by an analysis engine upstream in the processing pipeline (we currently use the LingPipe toolkit for sentence analysis), and sending one sentence at a time. This keeps requests below the 300 word limit. The NCBO reports that with 10 simulated users, requests of 280 words take <5 s. Our tests have been limited to five concurrent requests to leave some bandwidth for others. On the rare occasions the Annotator is unavailable, the wrapper waits for a short timeout and throws an exception that stops the pipeline. The wrapper is available as part of the CCP's BioNLP-UIMA distribution. It requires Java 1.6 and includes build scripts that run on Macintosh and Linux variants. Windows support is forthcoming. Scripts download required third party jars and run the build. A sample pipeline is included ready to run after installation. Users outside our lab have installed the software quickly and easily. Further pipelines can be built using a UIMA-supplied GUI. The NCBO Annotator provides annotations from a wealth of ontologies. Packaged as a web service, it is readily available to NLP researchers. With a UIMA adaptation provided by the CCP, it is now also available to the world of UIMA tools and pipelines.
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
