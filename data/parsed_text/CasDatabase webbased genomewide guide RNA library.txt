Motivation: CRISPR-derived RNA guided endonucleases (RGENs) have been widely used for both gene knockout and knock-in at the level of single or multiple genes. RGENs are now available for forward genetic screens at genome scale, but single guide RNA (sgRNA) selection at this scale is difficult. Results: We develop an online tool, Cas-Database, a genome-wide gRNA library design tool for Cas9 nucleases from Streptococcus pyogenes (SpCas9). With an easy-to-use web interface, Cas-Database allows users to select optimal target sequences simply by changing the filtering conditions. Furthermore, it provides a powerful way to select multiple optimal target sequences from thousands of genes at once for the creation of a genome-wide library. Cas-Database also provides a web application programming interface (web API) for advanced bioinformatics users. Availability and implementation: Free access at
IntroductionRNA guided endonucleases (RGENs) derived from the Type II clustered regularly interspaced short palindromic repeats (CRISPR)-Cas (CRISPR associated) system, an adaptive immune response in bacteria and archaea, have been usefully harnessed in many genome engineering applications such as gene knockout and knock-in in various organisms (). Recently, a few groups have undertaken genome-wide Cas9-mediated genetic screens () in human and other mammalian cells. The selection of target sequences is an initial, rate-limiting step in RGEN applications. We and other groups have developed a number of web-based online tools or command-line programs for single-guide RNA (sgRNA) design or off-target site identification (). Although they are very useful for choosing sgRNAs that target one gene, selection of sgRNAs at the genome scale is still challenging. Previously, two genome-wide databases for SpCas9 design () have been built conceptually. However, although they are useful for selecting sgRNAs that target a small number of genes, neither offers an easy way to select optimal target sequences at once from thousands of genes for genome-wide library construction in a variety of organisms. Here we describe Cas-Database, a web-based genome-wide gRNA design tool for SpCas9 nucleases for genome-scale screening V C The Author 2016. Published by Oxford University Press.
2017This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com). Each target site has the following information: GC content, relative cleavage position in the CDS, constitutive exon coverage, a microhomolgy-associated out-offrame score (), and potential off-target sequences with up to 2-nt mismatches. In addition, JBrowse () is used to display all available target sites graphically in a zoomable interface with genomic location information for the user's convenience. Cas-Database basically provides a fast and easy way to select optimal target sequences in genes of interest from a variety of organisms. Additionally, it offers a powerful way to select optimal target sequences in many genes simultaneously. Selecting sgRNA sequences that target each gene is as easy as online shopping because of the use of a 'cart' system, similar to what is used in online shopping malls, which was implemented using cutting-edge web development techniques such as AJAX (asynchronous JavaScript and XML). Currently, Cas-Database supports sgRNA design in 12 different organisms, including five vertebrates (human, rat, mouse, pig and zebrafish), one insect (Drosophila melanogaster), one nematode (Caenorhabditis elegans) and five plants (Arabidopsis thaliana, tomato, banana, grapes and soybean). All processes required to generate the genome-wide database have now been automated using a scripts pipeline so that we can easily update information about the existing organisms or add new organisms to the database. We are planning to continue to add and support more organisms in the future.
Methods
Target selection for SpCas9 nucleasesThe latest whole genome sequence and associated annotation data from each organism in the Ensembl database were automatically retrieved and saved to our server using a homemade program written in Python language. To allow easy access to the annotation database, we used the Biomart protocol () for communicating with the Ensembl server. After retrieving the genome sequence and annotation data associated with each organism, we first searched for all possible targets that contain 5 0-NGG-3 0 PAM sequences in CDS regions and then calculated several characteristics of each target, e.g. sgRNA GC content, relative cleavage position in the CDS, common exon coverage throughout the various transcripts of the gene, and a microhomology-associated out-of-frame score.
Searching for potential off-target sitesAfter identifying all possible targets for SpCas9 nucleases in CDS regions and calculating the characteristics of each target, we next used the Cas-OFFinder program () to search for potential off-target sites that differ from each on-target site by up to 2nt and that contain 5 0-NGG-3 0 or 5 0-NAG-3 0 PAM sequences. Because this step is very time-consuming, we ran Cas-OFFinder on an OpenCL-enabled cluster computer such as Chundoong (http://chun doong.snu.ac.kr/) for all sites in parallel. During this process, we periodically validated that each searching node had finished correctly. After validation, all Cas-OFFinder output files were retrieved from the Chundoong server and moved to our local storage site. Then, for each selected target the total number of potential off-targets was counted; information about the genomic location of these potential off-targets, such as whether they reside in CDS, UTR, intron or intergenic regions, was also evaluated.
Inserting information into the databaseWe rearranged all of the resulting data and constructed a SQL database that contains all possible SpCas9 nuclease targets in CDS regions and related characteristics of each target. We chose PostgreSQL (http://www.postgresql.org/) as the database server, which showed the best performance in our case.
Web interfaceWe built a web interface for Cas-Database using the Python web framework Django (https://www.djangoproject.com/). Because of its modern and easily-implemented database application program interface (database API), the algorithm for storing and retrieving data from the PostgreSQL database is simplified and web site maintenance is easy. For creating the HTML part of the interface, we used the web development framework Bootstrap (http://getbootstrap.com/) and the JavaScript framework JQuery (https://jquery.com/). We also implemented asynchronous data upload and download to achieve a fast response time for each user using the asynchronous JavaScript and XML (AJAX) technique. Because the results are retrieved from the server asynchronously, user requests will be run in parallel rather than in sequence. In conclusion, searching and filtering functions will be operated and displayed immediately after a user changes the input data or filtering condition.
Results and discussion
Cas-Database overviewCas-Database provides a simple and easy way to design optimal sgRNAs. All available genes from a selected organism are listed on the main page of the Cas-Database website, as shown in. Users can easily search for desired genes by querying with the gene symbol, Ensembl ID or gene description. The search results are instantly displayed on the screen after every keystroke through the use of the AJAX web technique (). For a desired gene, users can use the 'Quick Info' function or the 'Add to collection' function. Basically, the 'Quick Info' function is useful for selecting sgRNAs manually for each gene; one can easily preview all available targets in a specific gene by clicking on the 'Quick info' button. Moreover, users can add additional desired genesjust as items are added to a shopping cart onlineand select sgRNAs for many genes simultaneously using the 'Add to collection' function. In addition, hundreds or thousands of genes can be imported from text files that contain gene symbols or Ensembl ID lists, with individual entries separated by line breaks or spaces ().
Use of the 'Quick Info' functionCas-Database provides an easy way to preview sgRNAs that target a specific gene. Clicking on the 'Quick info' button immediately provides detailed information about the gene, transcripts and targets in a new dialog box (C). Furthermore, the genomic locus of each target is displayed on the graphical genome browser, JBrowse () (). If one clicks on a target in the browser, the corresponding target () will be shown on the Cas-Database web page for added convenience. Cas-Database also offers a powerful filtering function. Using the filtering feature at the top of the web page, as shown in, users can change the filtering conditions and rapidly preview the new results.Filtering criteria include GC content, relative position in the CDS, exon coverage throughout all transcript variants of the gene, a microhomology-associated out-of-frame score (), excluding four thymidine nucleotides in tandem () and the number of mismatched nucleotides.
Use of the 'Add to Collection' functionCas-Database also provides a novel function that allows the selection of sgRNAs from hundreds or thousands of genes at once through the use of a 'cart' system. Users can either collect desired genes on the main web page by clicking on the 'Add to Collection' button () or by uploading a text file as discussed above and shown in. After all desired genes are collected, clicking on the 'Select optimal sgRNAs' button will open the results page, which will list all available sgRNAs filtered by the default conditions as shown in. Users can easily change the filtering conditions, including the total count of sgRNAs for each gene, in the filter section that appears at the top of the resulting page (). Because. The 'Quick Info' function of Cas-Database. The 'Add to Collection' function of Cas-Database. (A) Cas-Database provides a unique and easy way to select many genes at once by the implementation of a 'cart' system. Users can collect desired genes by clicking on the 'Add to Collection' button or by uploading a text file as described in thelegend. Note that one can also select genes from different organisms. By clicking on the 'Select optimal gRNAs' button, users will proceed to the next step. (B) The results page will list all available sgRNAs filtered by the default conditions on the top panel. A colored indicator represents the selection status for each gene, e.g. green (selected completely), yellow (selected partially) or red (not selected at all). A user can download only the genes for which sgRNAs were successfully designed, and repeat the process for the remaining genes by changing the filter criteria and clicking on the 'Remove " green " genes from list' button Cas-Databasethe AJAX technique is used, the retrieving processes run independently of each other, resulting in fast loading speeds; e.g. the loading time for 1000 genes is about 2 min in the default conditions. Whether enough sgRNAs have been selected for each gene after filtering is indicated by colored indicatorsgreen (selected completely), yellow (selected partially) or red (not selected at all), as shown in. In this step, users can download either sequences for all selected sgRNAs targeting each gene or for some sgRNAs selected completely from each gene with a green indicator. In other words, users can download sequences only for genes for which sgRNAs were selected completely under the initial filtering conditions. After that, users can eliminate genes with green indicators from the list by clicking the 'Remove green genes from list' button, and then can alter the filtering conditions again. After resetting the filtering conditions, users can download the genes with green indicators again and repeat this process until sgRNAs have been selected completely in the most remained genes. Finally, if a few genes are still left, users can manually select targets for those genes using the 'Quick info' function on the main page. As a result, users can select optimal sgRNAs from hundreds or thousands of genes and download a list of sgRNAs for every gene with the target specific information.
Web APIFor users familiar with bioinformatics, Cas-Database also provides a web application programming interface (web API). If users send queries through hypertext transfer protocol (HTTP) requests to our database server, the results will be returned in the JavaScript oriented notation (JSON) format. Thus, researchers can easily create their own simple homemade scripts for automated data retrieval. Details about the web interface are described in the Supplementary data.
Update of Cas-DatabaseThe entire process of database creation, from retrieving an organism's genome sequence and its associated annotation data from the ENSEMBL server to creating a new database, is totally automated by our homemade scripts. The time to build a new database depends on the organism's genome size, e.g. the creation of a new database for zebrafish (1.32 GB) took about three days. Currently, Cas-Database supports 12 different model organisms, including five vertebrates (human, rat, mouse, pig and zebrafish), one insect (D.melanogaster), one nematode (C.elegans) and five plants (A.thaliana, tomato, banana, grapes and soybean), and we are planning to update Cas-Database continuously to obtain the most recent versions of genomic sequences for the existing organisms. We also plan to add data from other organisms in the ENSEMBL database. In addition, we will update the database to allow for alternative CRISPR/Cas nucleases such as Cprf1 ().
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
J.Park et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Conclusion Cas-Database is an easy-to-use web-based tool for designing sgRNAs for SpCas9 nucleases on a genome scale. It can be applied to construct optimal sgRNA libraries that target thousands of coding sequences in 12 different organisms for genome-wide knockout screening experiments. Because Cas-Database contains all available targets in CDS regions as well as target-related information, including data about potential off-target sites, users can easily access the data through the interactive web interface or web API. The web interface was made using cutting-edge web development techniques such as AJAX, so the website is highly responsive to user input and the output results load quickly.
