Motivation: The spatial conformation of the chromosome has a deep influence on gene regulation and expression. Hi-C technology allows the evaluation of the spatial proximity between any pair of loci along the genome. It results in a data matrix where blocks corresponding to (self-)interacting regions appear. The delimitation of such blocks is critical to better understand the spatial organization of the chromatin. From a computational point of view, it results in a 2D segmentation problem. Results: We focus on the detection of cis-interacting regions, which appear to be prominent in observed data. We define a block-wise segmentation model for the detection of such regions. We prove that the maximization of the likelihood with respect to the block boundaries can be rephrased in terms of a 1D segmentation problem, for which the standard dynamic programming applies. The performance of the proposed methods is assessed by a simulation study on both synthetic and resampled data.
INTRODUCTIONMany key steps of the cell development and cycle, such as DNA replication and gene expression are influenced by the 3D structure of the chromatin (). The folding of the chromosome in the space defines chromosomal territories, the function of which has been studied for few years now (). Typically, topologically associating domains contain clusters of genes that are co-regulated (). Thus, the detection of chromosomal regions having close spatial location in the nucleus will provide insights for a better understanding of the influence of the chromosomal conformation on the cells functioning. Several chromosome conformation capture technologies have been developed in the past decade, among which Hi-C is the most recent. This technology is based on a deep sequencing approach and provides read pairs corresponding to pairs of genomic loci that physically interact in the nucleus (). The raw measurement provided by Hi-C is therefore a list of pairs of locations along the chromosome, at the nucleotide resolution. These measurement are often summarized as a square matrix Y, where Y i,j stands for the total number of read pairs matching in position i and position j, respectively. Positions refer here to a sequence of non-overlapping windows of equal sizes covering the genome. The number n of windows may vary from one study to another: Liebermanconsidered an Mb resolution, whereaswent deeper and used windows of 100 kb. Blocks of higher intensity arise among this matrix, revealing both cis-and trans-interacting regions (). Although both types of interaction are likely to exist, cis-interacting regions seem to be prominent in the data (see, for instance), and some have been confirmed to host co-regulated genes (). Such regions result in block of higher signal along the diagonal of the data matrix. The purpose of the statistical analysis is then to provide a fully automated and efficient strategy to determine these regions. A first attempt was presented in, where the author strategy is first to summarize the 2D data into a 1D index, called the directionality index, then to apply a regular hidden Markov model to the summary data to retrieve the segmentation. In this article, we show that such a two-step strategy can be avoided, and that summarizing the data is not required to solve the segmentation problem. Detecting diagonal blocks can be seen as a particular 2D segmentation issue. The 2D segmentation has been widely investigated for the detection of contour with arbitrary shape in images (see, for example,). From a computational point of view, image segmentation is an open problem because no predefined ordering exists that could be used to provide exact and efficient algorithms. Compared with contour detection, it is worth noticing that Hi-C data segmentation displays a specific pattern that did not receive any special attention from the image processing community. One of our contributions is to prove that this 2D segmentation problem boils down to a 1D segmentation problem for which efficient dynamic programming algorithms apply (). Our formulation of the problem also allows us to solve some nonblock diagonal segmentation problems (see the end of Section 2.2). The article is organized as follows. In Section 2, we define a general statistical model for Hi-C data, which can deal with both raw and normalized data. We prove that the maximum likelihood estimates of the block boundaries can be efficiently retrieved. In Section 3, we first present an extensive simulation study to assess the performance of our approach on both simulated and resampled data. We then apply the proposed methodology to the data studied by, which are publicly available, and compare our results with their regions. The package implementing the proposed method is presented in Section 4 where some open problems are also discussed. *To whom correspondence should be addressed.  The Author 2014. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com
STATISTICAL FRAMEWORK
Statistical modelingWe first define our statistical model. Because the Hi-C data matrix is symmetric, we only consider its upper triangular part denoted by Y, in which Y i;j 1 i j n stands for the intensity of the interaction between positions i and j. We suppose that all intensities are independent random variables with distribution Y i;j $ p; i;j ; i;j =EY i;j   1 where the matrix of means  i;j  1 i j n is an upper triangular block diagonal matrix. An example of such a matrix is displayed in(left). Namely, we define the (half) diagonal blockswhere 1=t * 0 5t * 1 5    5t * K * =n+1 stand for the true block boundaries and K * for the true number of blocks. We further define E * 0 as the set of positions lying outside these blocks:where A denotes the complement of the set A. The parameters  i;j  are then supposed to be block-wise constant: i;j = * k if i; j 2 D * k ; k=1;. .. ; K * ; = * 0 if i; j 2 E * 0 : 4As for the distribution p; i;j  defined in (1), we will consider Gaussian, Poisson or negative binomial distributions: G : Y i;j $ N  i;j ; 2 ; P : Y i;j $ P i;j ; B : Y i;j $ N B i;j ; : 5The Gaussian modeling (G) will be typically used for dealing with normalized Hi-C data and the others [(P) and(B)] to deal with raw Hi-C data, which are count data. In Models (G) and (B), note that the parameters and are assumed to be constant and depend neither on i nor on j.Parameter estimation For given boundaries t 0 ;. .. ; t K , the estimation of the block parameters k is straightforward for each of the distribution considered in (5). Denoting ' k Y i;j  and ' 0 Y i;j  the contribution of each data point to the log-likelihood (up to some constants), in D k and E 0, respectively, we get, for known parameters and 0 ,Y i;j =jD k j, for k in f1;. .. ; Kg; jAj denoting the cardinality of the set A.
InferenceDynamic programming algorithm Let us now consider the estimation of the boundaries t 0 ;. .. t K. The objective function can be rewritten as follows:where R k corresponds to the rectangle above D k (see), namely, R k =fi; j : t k1 j t k  1; 1 i t k1  1g. (Note that R 1 is empty.) Note that the rectangles R k do not overlap and that Eso the last equality holds. The important point here is that the objective function is now additive with respect to the successive intervals ft k1 ;. .. t k  1g; 1 k K. Defining the gain functioni387Two-dimensional segmentation for analyzing Hi-C data which can be done using the standard dynamic programming recursion (). For any 1 L K and 15 n, we definethe value of the objective function for the optimal segmentation of the submatrix made of the first rows and columns of Y into L blocks. Clearly, we have I 1 =C1; ,Hence, the optimal segmentation can be recovered with complexity OKn 2 , once the C;  have been computed.
Common parametersThe optimization procedure described above applies when both 0 and are known. Estimates of these parameters can be obtained in the following way. The estimate ^ 0 of 0 can be computed as the empirical mean of the observations lying in the right upper corner of the matrix Y, for instance, T 0 =fi; j : 1 i n=4; 3n=4+1 j ng: 8As for the overdispersion parameter of the negative binomial distribution , we computed ^ as follows:where ^ 2 0 corresponds to the empirical variance of the observations lying in the same right upper corner of the matrix Y as for ^ 0. Non-block diagonal segmentation problem Observe that a similar procedure could be used for dealing with a more general matrix  i;j  1 i j n defined bywhere the diagonal blocks D * k and the rectangles R * k are defined as above (see, right). In this case, no prior estimation of any mean parameter is required, as each 0 k * is specific to one single rectangle.
Model selection issueIn the case where the value of K * in the model defined by (1) and(4) is known a priori  ^ t k  1 k K * can be obtained from the recursion (7), which actually gives the values of  ^ t k  1 k K for all 1 K K max , where K max is a given upper bound for the number of blocks. If K * is unknown, it can be estimated by ^ K defined as follows:This strategy is illustrated in the next section.
RESULTS
Application to synthetic dataWe conducted several Monte Carlo simulations first on synthetic data and then on resampled real data to assess the sensibility of our method to block size and signal-to-noise ratio. The synthetic data are generated by using the domains found by Dixon et al.constant, we computed ^ K and the corresponding ^ t k s using the procedure described in Section 2. The upper part ofdisplays the histograms of the estimated change-points for c = 0.1, c = 0.2 and c = 0.5. The black dots correspond to the true change-points, and the bars indicate the frequency of each estimated change-point. One can observe that both the change-points and the number of changepoints are well estimated even in low signal-to-noise ratio frameworks (except for c = 0.1). The bottom part ofdisplays the log-likelihood curves (up to some constants) with respect to K for the same values of c, obtained on a given simulated matrix. The dotted line indicates the location of the estimated number of change-points. Even when the signal-to-noise ratio is small, the estimated number of change-points ^ K corresponds to the true number of change-points K *. When the signal-to-noise ratio is too small, i.e. for c = 0.1 here, some model selection issues arise.shows that for such signal-to-noise ratio, the method provides some spurious change-points within the blocks having the lowest mean. When c = 0.1, the value of the mean in the first diagonal block is very low (0.28) and very close to 0. Nevertheless, when taking the true number of blocks, the true change-points are recovered. We also assessed the performanceof our methodology in the Poisson framework, and we obtained similar results, which are not reported here.
Resampling of the dataIn this second analysis, we first get the boundaries found byin all the chromosomes of the hESCs. We shall call the corresponding blocks the Ren domains. From these domains, we generate a set of diagonal blocks D 1 ; :::; D K , such that (i) the size of each block is drawn in the empirical distribution of Ren domain lengths and (ii) the cumulated number of positions is not4300. Once the block sizes are drawn, we choose at random a human chromosome, and for each diagonal block D k , a Ren domain in this chromosome is randomly selected, and observations in block D k are resampled from the Ren domain data. Accordingly, the data outside the diagonal blocks are simulated by resampling from the data of the E 0 Ren domain in the selected chromosome. This strategy is repeated 100 times to obtain 100 interaction matrices. Compared with the previous simulation design, one can observe that the change-point positions now change from one dataset to the other, and that the data are not anymore simulated according to a negative binomial distribution. While the statistical analysis of datasets generated from this second simulation setting is more difficult, it allows one to visit more realistic data configurations closely similar to real data. We report here the results obtained when the simulated data are analyzed with Model (5) (B), the results obtained with Model (5) (P) being similar.(left and center) displays two log-likelihood curves (up to some constants) as a function of the number of changepoints. The solid and dotted lines indicate locations of the true and estimated number of change-points, respectively. One can observe that while the maximum is not always achieved at the true number of change-points K  , the estimated value ^ K corresponding to the maximum likelihood is still fairly close to K . The true and estimated numbers of change-points are identical for 91 of the 100 simulations, and the absolute difference j ^ K  K  j is never 42 except for one example. To further assess the quality of the estimated segmentation compared with the true one, we computed the Hausdorff distance between these two segmentations defined in the segmentation framework as follows, seeand Harchaoui and L evy-Leduc (2010):A small value of d 2 (distance from true to estimate) means that an estimated change-point is likely to be close to a true changepoint. A small value of d 1 (distance from estimate to true) means that a true change-point is likely to be close to each estimated change-point. A perfect segmentation results in both null d 1 and. First line: Histograms of the estimated change-points in a fixed block design for different signal-to-noise ratios in the negative binomial framework (from left to right: c = 0.1, c = 0.2, c = 0.5). The dots correspond to the true change-points, and the bars indicate the frequency of each estimated change-points. Second line: plots of the log-likelihood as a function of the number of change-points for one simulated dataset in the negative binomial framework for different signal-to-noise ratios (from left to right: c = 0.1, c = 0.2, c = 0.5). The dotted and solid lines give the value of the log-likelihood (up to some constants) for ^ K and K * , respectively i389Two-dimensional segmentation for analyzing Hi-C data
Application to real dataIn this section, we applied our methodology to the raw interaction matrices of Chromosomes 1322 of the hESCs at resolution 40 kb, and we compared the estimated number of blocks and the estimated change-points found with our approach to those obtained byon the same data, as no ground truth is available for those datasets. From, we can first see that the approach oftends to produce, in general, more change-points than our strategy except for Chromosome 22. This can also be seen in, which displays the log-likelihood curves (up to some constants) with respect to K as well as the number of change-points proposed byand the variance outside the diagonal blocks are of the same order). In the other case where Models (5) (P) and (B) can be applied, we used the following test procedure for overdispersion under the Poisson model to decide between both segmentations. Considering the data lying in T 0 as defined in (8), we first estimate the mean within this region byunder the hypothesis that all observations from T 0 arise from the same Poisson distribution. Following this rule, we chose Model (5) (B) only for Chromosomes 1 and 2. We can see from this figure that with the naked eye, the diagonal blocks found with our strategy present a lot of similarities with those found by. We did not report the segmentations that we obtained for the Chromosomes 122, but they are available from the Web page of the corresponding author http://www.agroparistech.fr/mmip/ maths/essaimia/_media/equipes:membres:page:supplementary_ eccb.pdf.
CONCLUSION
HiCseg R packageIn this article, we propose a new method for detecting cis-interacting regions in Hi-C data and compare it with a methodology proposed by. Our approach described in Section 2 is implemented in the R package HiCseg, which is available from the Web page of the corresponding author http://www.agroparistech.fr/mmip/maths/essaimia/_media/equip es:membres:page:hicseg_1.1.tar.gz and from the Comprehensive R Archive Network. In the course of this study, we have shown that HiCseg is an efficient technique for achieving such a segmentation based on a maximum likelihood approach. More precisely, HiCseg package has two main features, which make it attractive. Firstly, it gives access to the exact solution of the maximum likelihood approach. Secondly, as we can see fromand, which give the computational times on synthetic data following Models (5) (G), (P) or (B), HiCseg is computationally efficient, which makes its use possible on real data coming from Hi-C experiments. Note that the computational times ofwere obtained with a computer having the following configuration: RAM 3.8 GB, CPU 1.6 GHz and those ofwith a computer having the following configuration: RAM 33 GB, CPU 8  2.3 GHz.
Open questionsOur methodology could be extended, both to improve the algorithmic efficiency of our method and the modeling of the data. On the one hand, all available approaches work with data binned at the resolution of several kb. However, the original data are collected at the nucleotide resolution. One of the main challenges would be to alleviate the computational burden of the algorithm to fully take advantage of the Hi-C technology high resolution. Recent advances in segmentation algorithms for 1D data, such as those proposed byor Rigaill (2010), seem promising for dealing with this issue. On the other hand, the modeling could be improved in two directions. First, as observed by, Hi-C interaction matrices display a hierarchical structure corresponding to regions interacting at different scales. The proposed segmentation model does not account for such a structure but could be improved in such a direction. Second, a more refined modeling of the dispersion could be considered. While assuming a common dispersion parameter for non-diagonal blocks issensible because the signal is very low (and therefore, there is little room for large changes in dispersion), the strategy that we propose could incorporate non-homogeneous dispersion parameters for the diagonal blocks. This could be achieved, for instance, by estimating a dispersion parameter per diagonal block. Note that these two extensions could be implemented in the same efficient algorithmic framework as the one proposed in the article. These extensions will be the subject of a future work.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
