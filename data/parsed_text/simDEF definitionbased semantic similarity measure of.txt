Motivation: Measures of protein functional similarity are essential tools for function prediction, evaluation of proteinâ€“protein interactions (PPIs) and other applications. Several existing methods perform comparisons between proteins based on the semantic similarity of their GO terms; however , these measures are highly sensitive to modifications in the topological structure of GO, tend to be focused on specific analytical tasks and concentrate on the GO terms themselves rather than considering their textual definitions. Results: We introduce simDEF, an efficient method for measuring semantic similarity of GO terms using their GO definitions, which is based on the Gloss Vector measure commonly used in natural language processing. The simDEF approach builds optimized definition vectors for all relevant GO terms, and expresses the similarity of a pair of proteins as the cosine of the angle between their definition vectors. Relative to existing similarity measures, when validated on a yeast reference database, simDEF improves correlation with sequence homology by up to 50%, shows a correlation improvement >4% with gene expression in the biological process hierarchy of GO and increases PPI predictability by > 2.5% in F1 score for molecular function hierarchy. Availability and implementation: Datasets, results and source code are available at
IntroductionGene Ontology (GO) () describes the attributes of genes and gene products using a structured vocabulary. Many biomedical databases, such as UniProt () and SwissProt (), are annotated by GO terms to communicate semantic meanings of biomedical entities. Computing functional similarity of biomedical entities has been applied to problems such as prediction of proteinprotein interaction (PPI) (), gene expression studies () and homology analysis (). Also, in the context of text mining various studies () have aimed to enhance the literature-based GO annotation of gene products. There are two main computational models available to measure similarity of terms. Ontology-based models take advantage of lexical structures in their estimation of term similarity. Edge-based ontology measures like Wu () and RSS () consider the number of edges along the paths that link two GO terms. Node-based measures (which we designate as), GraSM () and AIC () compare the properties of the terms augmented with the properties of their ancestors or descendants. IC vectors () represent IC values in distributed forms in the computation of semantic similarity. Hybrid measures such as those of, Liu et al. (2009) and HRSS () combine node-based and edge-based measures. While these measures first compute semantic similarity of two gene products and then aggregate the results as a single functional similarity value, group-wise measures such as simUI (), simGIC () and SORA () calculate similarity by measuring two sets of GO terms annotating these genes.also proposed a similarity measure where gene functional similarity is based on vector representations of their GO terms. Ontology-based measures suffer from three important limitations: first, they depend on the constantly changing topological structure of GO; second, they use incomplete GO annotations to compute statistical information; and third, they offer no guarantee of generalization to multiple biological tasks. Distributional-based approaches derive from Firth's idea (1957) that a term is characterized by the company it keeps in its context. Measures following this notion calculate terms' specifications from relevant text data and represent them in a vector space for subsequent computation of their similarities. The Gloss Vector semantic relatedness measure () is a distributional-based approach with a wide application in natural language processing. This measure constructs definitions (glosses) of terms from a predefined thesaurus, and estimates semantic relatedness of two terms as the cosine of the angle between those terms' gloss-vectors. Interpolation of content words of a text corpus into the terms' definition was shown to outperform the direct definition comparison. Gloss vectors offer a new opportunity to exploit the information of GO term definitions and to infer gene functional similarity.successfully applied the Gloss Vector measure to the biomedical domain using MEDLINE as the text corpus and the unified medical language system and WordNet for the construction of extended definitions of medical concepts. The Gloss Vector approach requires a frequency cut-off in selecting the best features describing one term (). We have developed simDEF, an optimized version of the Gloss Vector targeted to analysis of gene functions. Here, by using MEDLINE as the text corpus, we compare the performance of simDEF with other leading approaches, and demonstrate its effectiveness using comparisons based on sequence homology, gene expression and PPI data.
Experimental data
GO and GO annotationsGO comprises three GOs which express different biological attributes: biological process (BP) for processes such as metabolism or cell proliferation; cellular component (CC) such as the nucleus or cell membrane; and molecular function (MF) such as catalytic or binding activities. GO is maintained and constantly updated by a group of curators. A GO annotation consists of a GO term associated with a specific reference and an evidence code to indicate how a given annotation is supported. Out of all the evidence codes available, Inferred from Electronic Annotation (IEA) is not assigned by a curator and is thus the least reliable so we treat them separately. GO and the required GO annotations were downloaded from the GO website (http://geneontol ogy.org (November 2, 2015).
MEDLINE abstractsMEDLINE (https://mbr.nlm.nih.gov/Download/) contains over 20 million citations of biomedical articles from 1966 to the present. The database includes journal articles from medicine, pharmacy, dentistry, nursing, healthcare and covers the literature in biology and biochemistry. For this study, we used MEDLINE 2013 as the corpus to build a first-order wordword co-occurrence matrix for the later computation of second-order co-occurrence (SOC) matrices which are used by simDEF.
Validation datasets
Sequence homologyWe used bitscores from the Basic Local Alignment Search Tool (BLAST) () to create our sequence homology dataset. In the first step, we performed an all-versus-all comparison of proteins in the yeast Saccharomyces cerevisiae database () with an expectation-value threshold of 0.1. Although this threshold is liberal, the corresponding bitscores associated with e-values near this threshold will be very low and have a minimal effect on our analysis. Since a bitscore for query and subject proteins is not symmetrical, we calculate log-reciprocal BLAST score (LRBS) and relative reciprocal BLAST score (RRBS) to express the general sequence similarity of protein pairs. For proteins A and B, the LRBS and RRBS are LRBSA; B  log Bitscore A; B  Bitscore B; A   2 ;RRBSA; B  Bitscore A; B  Bitscore B; A   Bitscore A; A  Bitscore B; B   :Finally, after LRBS and RRBS computations, we have a dataset of 20 167 protein pairs from the yeast S.cerevisiae database along with their LRBS and RRBS sequence similarity scores. All proteins in the dataset have their own GO annotations from the CC, BP and MF ontologies without considering IEAs.
Gene expressionThe gene expression dataset comes from the study by Jain and Bader (2010). In their study, the gene-expression dataset for S.cerevisiae was downloaded from GeneMANIA () and other microarray experiments. The authors prepared test datasets of 5000 S.cerevisiae gene pairs randomly selected from a list of all possible pairs of proteins in their gene expression dataset. This was done independently for CC, BP and MF annotations of gene products. Since in our experiments we mainly consider genes with non-electronic annotations, we used 4800 fitting gene pairs from their study.
Proteinprotein interactionFor the PPI experiment, we employed subsets of the yeast PPI dataset from. In that study, for each GO, independent gold-standard positive datasets for yeast were built from a core subset of the Database of Interacting Proteins (DIP) (). Negative datasets were independently generated by randomly choosing annotated protein pairs in BP, CC and MF, which are absent from a combined dataset of all possible PPIs. Since for different GOs the numbers of generated PPI pairs are different and more importantly many of them do not have GO annotations after excluding simDEF: definition-based semantic similarity measureIEA, we selected subsets of 3000 positive and 3000 negative PPIs for each ontology from that study to evaluate our measure against other similarity measures in a PPI prediction task.
MethodsPointwise Mutual Information (PMI) is a measure of association used in information theory. In computational linguistics, the PMI for two given words indicates the likelihood of finding one word in a text document that includes the other word. PMI is formulated aswhere p(w 1 , w 2 ) is the probability that words w 1 and w 2 co-occur in a document, and p(w 1 ) and p(w 2 ) for w 1 and w 2 , respectively, are the marginal probabilities of their occurrence in a document. It is expected that rare words are highly associated with and descriptive of each other, yet due to their sparse nature their bigram frequency (i.e. number of times they have been seen next to each other) is small in the corpus. This is the main drawback of the Gloss Vector measure in selection of the best descriptive features. We use PMI in our proposed measure, simDEF, for statistical elimination of insignificant features (words). simDEF requires procedures for building the co-occurrence matrix from a proper text corpus, constructing extended definitions for GO terms using GO term definitions, and finding words that are appropriate descriptors of that GO term. simDEF comprises six steps () (see Supplementary Material for pseudocode of the steps laid out in simDEF).
Step 1counting bigrams and building the firstorder co-occurrence matrixAfter discarding punctuation, changing all characters to lowercase, and removing stop words (a pre-defined list of 204 non-informative words like a and the) from the MEDLINE corpus, a list of bigrams and their frequencies for all the content words is constructed. A window size of 2 is used for extraction of bigrams. This window size controls how close two words can appear in bigrams. Stemming was found to reduce accuracy and was not adopted in simDEF. Then, by ignoring the order of occurrence in a bigram, we transform it from a bigram list to a co-occurrence list. Finally, we construct the firstorder co-occurrence matrix, which is symmetric and sparse and represents the contextual information of MEDLINE words. Cell values in the first-order matrix represent how many times the word associated with its row is seen in this corpus alongside the word associated with its column.
Step 2definition constructionof GO terms and then building BP, CC, and MF definition matrices all GO terms in BP, CC and MF. Now we see that for each word in the definition of a GO term we have an associated first-order co-occurrence vector calculated in Step 1. After changing all characters to lowercase and removing punctuation and stop words from these extended definitions we store them in different matrices for three different subontologies. In these matrices, the value of a cell represents how many times the word associated with its column appears in the definition of the GO term associated with its row.
Step 3building SOC matricesTo build the SOC vector for a GO term we sum the first-order cooccurrence vectors from the words in the constructed definition of that GO term (i.e. compute the centroid), and then normalize the result vector by the number of words in the definition. We do this process separately for each GO. The results are three different matrices for BP, CC and MF; each row again represents a GO term and features are the words. We have three SOC matrices for BP, CC and MF at the end of this step.
Step 4PMI on SOC matrices (PMI-on-SOC matrices)In our similarity measure, PMI-on-SOC matrices replace a conventional approach of low-and high-frequency cut-offs for detection of insignificant features or words in the Gloss Vector measure. We statistically measure the level of association between GO terms and their describing features in the SOC matrices and then apply a cutoff threshold on this level in the next step. Following (3), here, PMI(t i , w j ) measures the level of association between GO term i and feature j to discover how descriptive the word j of that GO term is. PMI is biased toward low-frequency words and consequently tends to favor them by assigning them a higher degree of importance (); in order to resolve this weakness, we employ the add-one technique. Before applying PMI on a matrix, all the elements of the matrix are incremented by 1 unit.
Step 5removing insignificant features from the PMI-on-SOC vectorsDefining a PMI threshold allows us to skip those words which provide low information for GO terms in their constructed PMI-onSOC vectors. By using the available dataset in an iterative way, we gradually increase the threshold of PMI cut-off from zero and then evaluate the results generated by simDEF. Depending on the biomedical task, for a chosen cut-off threshold, criteria such as Pearson's correlation or AUC (see Section 4.3) can be used for the performance evaluation of the estimated similarity results. In general, as cut-off thresholds increase we tend to get better results until a point where performance starts to drop rapidly. Therefore, by recording this curve for different performance results and cut-off points we try to find the optimal cut-off point in order to keep only those informative features describing one GO term. Also, to avoid this interval being sensitive to the choice of dataset, we use 5-fold cross validation to predict the extent to which the threshold will generalize to an independent dataset. This cut-off selection is done separately for the three constructed PMI-on-SOC matrices of the BP, CC and MF ontologies.
Step 6calculating semantic similarityIn this final step, the semantic similarity among GO terms is estimated. The cosine of the angle between optimized PMI-on-SOC vectors of two GO terms will indicate the degree of similarity for those terms. For the final usage of the measure, the last produced matrix is loaded into memory and used for measuring similarity between GO terms. In these matrices, each row stores the calculated optimized definition vector of its associated GO term. As, in most cases, gene products are annotated with more than one GO term in the same ontology hierarchy (BP, CC or MF), there are several methods to measure the functional similarity of gene products based on the semantic similarity of these GO terms. MAX and AVE define functional similarity between gene products as the maximum or average semantic similarity values, respectively, over the GO terms annotating the genes. MAX has been shown to be more useful for a PPI task (). If T A and T B are the sets of GO terms which annotate proteins A and B, respectively, the MAX for their functional similarity measurement is achieved by sim MAX A; B   MAX t1eTA;t2eTB simt 1 ; t 2    :The best-match average (BMA) method is found to be the best for evaluation of semantic similarity measures and the correlation of its results with sequence homology and gene expression data (). BMA for two gene products A and B with n and m GO annotations is given by sim BMA A;Consider that in these formulae T A of different ontologies would be different (likewise for T B ). Therefore, we will achieve three different protein functional similarity values for three different gene ontologies. MAX and BMA measure similarity between two gene products by combining semantic similarities between their terms. Semantic similarity estimation was used to evaluate the Resnik, Lin, Jiang, GraSM, Wang, AIC and simDEF measures (see Supplementary ma terial for definitions and formulas). In contrast, groupwise measures like simGIC and simUI are functional similarity measures by nature and do not rely on combining similarities between individual terms to assess gene product similarity, but calculate it directly by their annotation sets. By employing GO annotations for the previous measures and MEDLINE for the simDEF as the needed corpora, we implemented these measures as appropriate, and reported results alongside the best cut-off point for feature removal in each task.
Results
Correlation with sequence similaritySeveral authors have compared the performance of different semantic similarity measures by testing how well these measures correlate with sequence similarity. Various studies () showed that the more similar two sequences are the more similar their ontological annotations will be. To evaluate the semantic similarity measures, we used two distinct sequence similarity measures: LRBS and RRBS with the formulae of (1) and (2). LRBS is similar to the sequence similarity measure used previously by Lord, but compensates for the fact that BLAST scores are not symmetric. RRBS, suggested by Joshi and Xu (2007), is another indicator of functional similarity acting like the sequence identity percentage by taking amino acid substitutions into account.shows the degree of correlation between LRBS and the functional similarity estimations calculated by semantic measures of 20 167 protein pairs (without IEAs included).
simDEF: definition-based semantic similarity measureIn all cases, whether we use MAX or BMA, simDEF correlates with sequence similarity better than the other IC-based measures. The high correlation between simDEF and LRBS in the MF ontology is notable as it is more than the twice of the second best measure's result (Jiang). Supplementaryshows the exact numerical results of this experiment (with and without IEAs). The other metric used for sequence similarity measurement is RRBS which is not directly affected by sequence length (unlike LRBS). We assessed whether the dependency on sequence length affects the outcome of the evaluation.shows the degree of correlation between the similarity estimations calculated by semantic measures and RRBS. RRBS, like LRBS, shows the highest degree of correlation with simDEF among the similarity measures. In general, measures of functional similarity correlate more with LRBS sequence similarity than RRBS. We also observe among ICbased measures tested here that no single measure is superior to all others in the BP, CC and MF ontologies, which suggests task-dependency of these measures. AIC, the latest variant of IC-based measures, does not offer any improvement over the earlier measures. The Wang topological measure of similarity works only slightly better than the IC-based measures in the RRBS sequence similarity comparison of BP. The correlation results for LRBS and RRBS also demonstrate that BMA is the appropriate metric for functional similarity measurement of proteins from BP and CC points of view when we use IC-based measures while for simDEF in CC it is reverse. The difference between results generated by BMA and MAX for simDEF is typically small, whereas other pairwise semantic similarity measures tend to show larger discrepancies. Supplementaryshows the exact results of this experiment.
Correlation with gene expressionCorrelation with gene expression is another desirable criterion (e.g.). Since genes involved in the same process tend to exhibit similar expression patterns, we could expect good semantic similarity estimations calculated on the BP ontology to be correlated with the expression similarity (). For our experiments, the evaluation is done against the available standard reference of 4800 gene expression values. Here, we report Pearson's correlation between gene expression data and the results from simGIC, simUI and BMA of pairwise measures. We focus on the BMA criterion as it always gave higher correlations. Pearson's correlation between gene expression and semantic measures for CC, BP and MF ontologies with and without IEAs considered are shown in. The highest correlations in all cases are seen with the CC ontology, followed by BP and MF. Although the difference in correlation coefficients is not as striking as in the homology example, simDEF outperforms the next best method, GraSM, by 4% on the BP ontology and 12% on the CC ontology. GraSM has the best correlation for MF, 12% better than simDEF, which was also outperformed by the Resnik. Correlation coefficients were generally higher for datasets with IEAs, suggesting that electronic annotations have some value when investigating gene-expression profiles.showed that the correlation between gene expression and semantic similarity was negligible when semantic similarity values were low, but the two measures were highly related when semantic similarity was high.further showed a linear relationship for gene pairs with high levels of expression correlation. We examined this trend by comparing Resnik against simDEF for variable numbers of the highest correlated genes. For this purpose, after sorting gene expression data from the highest to the lowest values, we measured correlation of these data with Resnik and simDEF as we go from the top correlated expressions to the bottom.demonstrates the trend of change for this test. Considering other studies' findings and our result demonstrated in, we see that by being more focused on high-correlated gene expression pairs the overal correlation between functional similarity and gene expression increase only when we take the BP ontology into account. For CC and MF the reverse is true. The other important point learned for BP is that by employing simDEF as semantic measure, when we ignore electronic annotation we get better correlation with highly-correlated gene expression data while this is not true for Resnik. Moreover, we observe that for BP and CC simDEF works better than Resnik no matter which subset we consider. Nevertheless, this issue does not hold for MF and we only get better results from simDEF when we focus on higher correlated genes in terms of their expression.
Comparison with PPIsSemantic similarity can also be used as an indicator for the plausibility of putative PPIs, as proteins that interact in the cell in vivo are expected to participate in similar cellular locations and BPs. Like other studies (), we formulated this as a classification problem and checked how well the different semantic similarity measures perform for predicting true PPIs. For this purpose, the MAX and BMA results are directly interpreted as the classification probability of 'Interaction' and 'Not Interaction'. The higher this value is, the higher the probability of interaction will be. We applied this approach to a dataset of 6000 PPI pairs for each GO while half of the data have positive labels (due to experimentally confirmed PPIs) and the other half have negative labels.In our evaluation, the results of prediction were investigated by receiver operating characteristic (ROC) curves, with area under the curve (AUC) as the main accuracy criterion. Here, we report only MAX since, as we expected from the previous studies, for all the cases MAX predicted better results compared with BMA.shows the values of AUC for different semantic measures, including a hybrid measure that uses the average of the simDEF and Resnik values as the probability of interaction. As in the gene expression case, we found that including IEA records from GO improved the accuracy (in this case, the AUC). simDEF gave the highest accuracy when the BP and MF ontologies were used, while Resnik and GraSM performed best for CC. The hybrid classifier's AUC results are represented in the last row of. This result shows that simDEF is useful on all three ontologies, whether alone or as a complement to the Resnik measure. We believe different approaches of simDEF and IC-based semantic measures in similarity estimation is the main reason for this improvement. With consideration of IEA, the ROC for CC ontology shown inrepresents that the combination of Resnik and simDEF benefits from the results of simDEF and Resnik both. ROC is not always the only best approach to evaluate a classifier's performance in a PPI task (). Therefore, in our second experiment, by keeping the feature cut-off point of simDEF as before, considering Resnik as the baseline measure, and including IEA in the evaluation, we calculated different F1-scores for different classification cut-off points in the simDEF, Resnik and hybrid measures. Then, we compared the calculated mean and maximum F1-score values. While the mean and maximum F1-scores can be indicators of one classifier's performance in the detection of positive interactions (similar to AUC), maximum F1-score also helps in selection of the best classification cut-off point of a classifier having its ROC curve. The mean and maximum F1-score results are shown in. The simDEF prediction of PPIs based on the F1-score is always better than the results achieved by Resnik. Even though Resnik gave the best AUC for the CC ontology, the simDEF mean F1-score isThe mean and maximum F1 scores are shown for all three GOs. simDEF: definition-based semantic similarity measureconsiderably higher than that of Resnik, while the maximum scores differ by < 1%. For the other two ontologies the improved mean of the F1-scores in the simDEF measure against Resnik is notable. For MF the difference between max F1-score in the hybrid measure is >2.5% compared with Resnik's F1-score itself. We also see this improvement in the result is due more to simDEF than to the Resnik measure.
DiscussionOur approach to similarity estimation based on shared context makes intuitive sense, as concepts which share closely related attributes in their representation should exhibit high levels of similarity. We have shown that implementing these ideas via the Gloss Vector representation yields improved effectiveness across the majority of ontologies and problem types. For the yeast database, simDEF increases the correlation of semantic similarity with sequence homology by 50%, yields an increase of > 4% in correlation with gene expression on the BP ontology, and improves the PPI prediction F1score by >2.5% on the MF ontology. A key advantage of simDEF in comparison with IC-based measures is its reduced dependency on annotation data, and the GO structure. New GO terms typically do not have rich annotation information, which can influence the IC calculation of all GO terms as they depend on the root frequency which itself depends on all GO term frequencies. In contrast, simDEF needs to access only the direct parents and children of one GO term to expand that GO term's definition. In future work, simDEF can be evaluated against Enzyme Commission (EC) and protein family (Pfam) similarities. Gene clustering and orthologous protein distinguishing tasks present yet another opportunity for simDEF performance evaluation. simDEF needs to be tested on the other species than S.cerevisiae as well. Moreover, other statistical measures of association, such as Chisquare and log-lokelihood, can be examined in replacement of PMI for further improvement of simDEF. More in-depth studies can also find out if using larger window sizes of bigrams or even tri-grams in the word extraction of MEDLINE abstracts would improve the achieved results. Also, current advancement in deep neural networks for the low-dimensional yet more accurate representation of GO terms leaves room for further investigation of semantic similarity measures in the distributional model.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
In this step, we construct an extended definition for every term in GO. From the theoretical perspective, definition extension of parent GO terms (i.e. broader concepts) with their children's definitions (i.e. narrower and more specific definitions) adds more specific information. Although child GO terms may contain contradictory information, this information may nonetheless provide essential context when calculating functional similarity with other genes (which may in turn be augmented with conflicting information). From the practical perspective, we examined all the combinations of definition extension considering GO relationships such as is_a, has_part, part_of, regulates, siblings and synonyms. What is represented in Figure 2 yielded the best results in our experiments conducted in this study. Improvement in the results using relationships such as part_of and regulates indicates that besides the similarity, simDEF accounts for relatedness as well. See Supplementary material for more in-depth explanation of why definition extension can be beneficial. Each GO term has an identifier, a representative name, a GO definition, a namespace defining the sub-ontology of the GO term and other information such as its relationship to the other GO terms. For example, GO:0001104 has the representative name 'RNA polymerase II transcription cofactor activity' and belongs to the MF hierarchy. This GO term has the definition 'Interacting selectively and non-covalently with an RNA polymerase II (RNAP II) regulatory transcription factor and also with the RNAP II basal transcription machinery in order to modulate transcription. Cofactors generally do not bind DNA, but rather mediate PPIs between regulatory transcription factors and the basal RNAP II transcription machinery.' In order to make this definition even richer we concatenate definitions of its direct parents (i.e. GO:0003712 or 'transcription cofactor activity' and GO:0001076 or 'RNA polymerase II transcription factor binding transcription factor activity') and direct children (i.e. GO:0001105 or 'RNA polymerase II transcription co-activator activity' and GO:0001106 or 'RNA polymerase II transcription co-repressor activity') to its definition. We also add this GO term's representative name to this extended definition considering this name as part of its own definition. This process is done for Fig. 1. Computation of the simDEF semantic similarity measure Fig. 2. Pearson's correlation between semantic measures and RRBS (IEA)
A.Pesaranghader et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
