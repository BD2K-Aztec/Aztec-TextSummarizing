Motivation: Although peak finding in next-generation sequencing (NGS) datasets has been addressed extensively, there is no consensus on how to analyze and process biological replicates. Furthermore, most peak finders do not focus on accurate determination of enrichment site widths and are not widely applicable to different types of datasets. Results: We developed JAMM (Joint Analysis of NGS replicates via Mixture Model clustering): a peak finder that can integrate information from biological replicates, determine enrichment site widths accurately and resolve neighboring narrow peaks. JAMM is a universal peak finder that is applicable to different types of datasets. We show that JAMM is among the best performing peak finders in terms of site detection accuracy and in terms of accurate determination of enrichment sites widths. In addition, JAMM's replicate integration improves peak spatial resolution, sorting and peak finding accuracy. Availability and implementation: JAMM is available for free and can run on Linux machines through the command line
INTRODUCTIONA common task in Genomics research is detecting enriched sites after alignment of next-generation sequencing (NGS) reads, which involves separating the genome into regions of high enrichment (i.e. peaks or clusters or binding sites) and regions of low enrichment (). Most peak and cluster finding programs are developed with a specific experimental protocol or dataset type in mind (). Therefore, it is usually difficult to apply the same analysis pipeline uniformly across all datasets in a given project. Recently, there were attempts to develop universal peak finders by defining the problem as that of classical signal detection (). The main advantage of this approach is that it allows for uniform data analysis via theoretically proven optimal signal detection. However, it does not take into account that enrichment sites are often not expected to have the same shape or signal properties, even if in the same dataset. For example, DNase-I hypersensitive regions are expected to have different widths and signal-to-noise ratios (SNR;). Therefore, there is a need for an approach that would not only focus on optimal detection of enrichment sites but would also be able to adapt to enrichment sites with different signal properties and to define their boundaries accurately (). Furthermore, while others focus on integration of multiple datasets to define co-occurrence or differential enrichment, there is no consensus on biological replicates integration to find accurate consensus peaks. One common approach is to determine enriched sites on each replicate separately, and then combine the results via union or intersection (). Another common approach is to pool aligned reads from all replicates available and then detect enriched sites on the pooled alignments [seefor an example]. Taking the intersect or union of separately detected sites mandates rescoring the peaks and leads to inaccurate enriched sites' widths. Pooling alignments before site detection obscures the differential spatial and intensity information in the replicates. As biological replicate experiments are not expected to be exactly reproducible, there is a need to develop a method for replicate integration that takes advantage of the differential information in the individual replicates to find accurate consensus peaks. In this article, we introduce JAMM (Joint Analysis of NGS replicates via Mixture Model clustering): a universal peak finder that can integrate information from multiple replicates to find consensus peaks, determine accurate peak widths and resolve neighboring narrow peaks. We demonstrate JAMM using ChIP-Seq (), including transcription factor ChIP-Seq, punctate histone modification ChIP-Seq and broad histone modification ChIP-Seq as well as DNase-Seq (). We compare several programs that focus on different aspects of the peak finding problem (). MACS () models read counts using a local Poisson distribution, PeakRanger () focuses on detecting neighboring narrow peaks at high resolution, PeakZilla () is designed for uniform punctate transcription factor binding sites, BCP () develops explicit formulas to model read counts, CCAT () detects broad enrichment patterns with low SNR and DFilter () is a universal peak finder based on optimal signal detection. We demonstrate that JAMM is widely applicable to different types of datasets, can define accurate peak boundaries and that JAMM's replicate integration improves peak finding resolution and accuracy. *To whom correspondence should be addressed.
JAMM PEAK FINDING METHODS
OverviewFigure 1 provides an overview of JAMM's analysis steps. Core peak finding steps involve selecting local windows that are enriched over background, followed by clustering the normalized extended-read counts in those windows into a peak cluster and noise cluster(s). Local clustering allows JAMM to adapt to peaks with different widths and signal properties and to accurately determine their boundaries. Furthermore, using clustering as an approach for peak finding extends naturally to multivariate clustering, which is useful for integrating datasets that are correlated but not expected to be exactly the same, such as biological replicates. We chose clustering via multivariate Gaussian mixture models (), which allows for including information about the covariance of the replicates. Finally, JAMM scores peaks via the peak signal, represented by the geometric mean of the replicates peak signals, and how it compares to background.
Extended read countsFor ChIP-Seq datasets, JAMM uses cross-correlation analysis to estimate the average fragment length (, see Supplementary Text). (Step 1,) Fragment length is calculated for each replicate, including biological control, separately. Reads are extended/truncated to the average fragment length in the 5 0-to-3 0 direction. Extended-read counts at each base pair are divided by the mean extended-read count to produce normalized extended-read counts.
Enriched windowsJAMM selects enriched windows and then assigns peaks locally in those windows (Steps 2, 3 and 4,). To find enriched windows, JAMM divides the genome into small non-overlapping bins and makes a decision whether each bin is enriched over background. All book-ended enriched bins are merged into larger, non-overlapping, variable-width enriched windows. This approach ensures that enriched windows include entire binding sites and that JAMM can seamlessly adapt to broader enrichment domains. In addition, determining enrichment on the binlevel ensures maximized sensitivity, so that JAMM can easily adapt to reporting a large number of peaks. Similar to Song and Smith (2011), JAMM selects the bin size " that minimizes the cost function C n " ():where n is the total number of reads, k is the average number of reads per bin for bins with width " and v is the variance (). The user can also specify an arbitrary bin size. For multiple replicates, the optimum bin size is calculated separately for each replicate and the smallest bin size is selected.where s and b are the average normalized extended-read counts in the sample bin and the corresponding background bin, respectively, and SNR b and SNR chr are the SNR in the bin and the corresponding chromosome, respectively. Any SNR= s b, where s is the average sample normalized extended-read count and b is the standard deviation of the control normalized extended-read count. For multiple replicates, all replicates have to pass this enrichment test for a bin to be considered enriched.
Peak findingJAMM assumes that the signal (smoothed extended-read counts, see Supplementary Text) in enriched windows originated from a univariate Gaussian mixture model for single sample analysis or a multivariate Gaussian mixture model when integrating multiple replicates (Step 5,;; Celeux and):where T is the window size, K is the number of components (clusters), bp t is the read signal value for base pair t, w k is the weight of component k in the mixture and k and S k are the vector of means and the covariance matrix for component k, respectively (). The Gaussian mixture model is defined by the set of parameters =w 1 :::w k ; 1 ::: k ; S 1 :::S k. To find accurate peak boundaries in enriched windows, JAMM fits a Gaussian mixture model to cluster the smoothed extendedread count in each enriched window separately, assuming either two mixture components (corresponding to peaks and noise, parameters:-m normal) or three mixture components (corresponding to peaks, peak tails and noise, parameters:-m narrow). In the univariate case, variance is assumed to be different between different components. In the mutivariate case, the covariance matrix is assumed to be different among different components and is parameterized according to its eigenvalue decomposition ():where  k is the orthogonal matrix of the eigenvectors and  k is a diagonal matrix with the eigenvalues at the diagonals, with k being the first eigenvalue in  k and A k being a diagonal matrix with a vector at the diagonal that is proportional to the vector of eigenvalues. Therefore,  k determines the orientation of the eigenvectors of k, while k defines the volume k occupies in the n-dimensional space and A k defines the shape of the contour lines (). Gaussian mixture clustering starts with chromosome-wide parameter initialization based on an imaginary large window W l formed by concatenating the top-scoring windows in the chromosome. First, data points are assigned to clusters via k-means. Cluster assignments are then used to initialize an Expectation-Maximization (EM) algorithm to fit a Gaussian mixture model () starting with the maximization step. The Expectation step calculates the conditional probability that the read count signal at a given base pair bp t originated from component k given : p k bp t j. The Maximization step calculates the maximum likelihood estimates of the model parameters  given all p 1 :::p k for all bp 1 :::bp t. Assigning bp t to a cluster k is derived directly from p 1:::k bp t  where bp t is assigned to the mixture component k that maximizes p k bp t . Different structures of the covariance matrix (namely  k k A k  1 k and  k k A 1 k ) are tested and the one maximizing the Bayesian Information Criteria is chosen (, see Supplementary Text). Formulas to update  (Maximization Step) and p k bp t  (Expectation Step) for both models are described by Celeux and Govaert (1995). The model learned for W l is used to initialize the EM Gaussian mixture clustering algorithm for every enriched window separately starting with the Expectation step. The mixture component with the highest mean is taken to be the enriched cluster and contiguous base pairs assigned to this cluster are taken to be the peaks. In the multivariate case, all replicates are required to agree on the mixture component mean ordering, otherwise the window is rejected (see Supplementary Text).
Peak scoringThe background signal in every peak is subtracted from the corresponding sample signal (Step 6,). When analyzing replicates, sample signal is taken to be the per-position geometric mean of the replicates signals. The resulting background-normalized signal values are averaged to produce the mean peak background-normalized signal ( ns ). In addition, JAMM executes the MannWhitney U non-parametric test to compare the sample signal (not background normalized) with the corresponding background signal. A BenjaminiHochberg correction () is applied to the full list of P-values after peak finding is complete. JAMM defines the peak score to beBy default, each peak is scored and reported as a separate peak (parameters:-r peak). All peaks detected in one window can be merged to be scored and reported as one peak (parameters:-r region).
Implementation and outputJAMM is implemented as a bash script with peak finding and scoring implemented by R and Perl scripts. Other post-or preprocessing steps can be added to the pipeline easily if needed. JAMM outputs a sorted peak list in standard narrowPeak format with peak scores, P-values, corrected P-values and peak summits.
RESULTS
Accuracy and spatial resolutionFirst, we sought to establish that JAMM achieves a similar or better site detection accuracy compared with other peak finders. Accuracy refers to the extent to which peak finders can determine the correct locations of enriched sites. Because there is no gold standard for benchmarking peak finders (), we analyzed five different ENCODE transcription factor ChIP-Seq datasets, including CTCF-HeLa, CTCF-K562, NRSF-K562, MAX-K562 and SRF-GM12878 (see Supplementary Tables S1 and S5we refer to those datasets as 'accuracy-benchmark' datasets) using three different benchmarking methods: (i) motif finding precision (fraction of called peaks with motif matches) using FIMO (), which uses a uniform zero-order background model, (ii) maximum cumulative motif likelihood using SpeakerScan (), which uses a first-order local background model and (iii) accuracy of recovery of manually curated positive peaks as reported by(see Section 5 and Supplementary Text). Regarding motif precision, we found that all peak finders perform comparably although DFilter and JAMM rank better when results are averaged across multiple datasets (Supplementary). Regarding motif likelihood, we also found that all peak finders, except BCP, perform rather comparably. However, JAMM ranks better than other peak finders when results are averaged across multiple datasets (Supplementary, Supplementary Figs S13). Finally, we found that PeakZilla is the best performing peak finder, followed by JAMM and PeakRanger, in terms of recovering manually curated positive peaks (Supplementary). When we average the results over all datasets and all benchmarks (a total of nine comparisons, Supplementary Methods), we found that JAMM and PeakRanger are the top ranking programs (). JAMM ranked first for two benchmarks and third for one benchmark. PeakRanger ranked second for all benchmarks (Supplementary). When comparing JAMM-I (JAMM with replicate integration) with JAMM running on pooled replicates (JAMM-P), we found that JAMM-I consistently outperforms JAMM-P (JAMM-P ranked better than JAMM-I in only one out of five datasets where there was a difference), indicating that JAMM's replicate integration improves peak finding accuracy over replicate read pooling. A main contributing factor is JAMM-I's better spatial resolution owing to replicate integration via multivariate mixture model clustering.provides a demonstration of JAMMI's improvement over replicate pooling. Only JAMM-I can resolve two neighboring CTCF binding sites: the pooled replicate profile obscures the better spatial resolution of Replicate 1 owing to the poorer resolution of Replicate 2. To further confirm peak finding accuracy, we analyzed datasets used byvia the peak finding precision benchmark (FIMO-based), including Twist, PHA-4, NFKB, CEBPA and Ste12 (we refer to those datasets as 'bardet-benchmark' datasets, see Supplementary). We found PeakZilla, PeakRanger and JAMM-I to be, on average, the top performing programs (see Supplementary). Next, we asked whether peak finders can define accurate enrichment site widths. We found that BCP underestimates peak widths, while DFilter and MACS overestimate peak widths (). JAMM, PeakZilla and PeakRanger have accurate peak width determination to a large extent. PeakRanger slightly underestimated the peak widths of some sites with both CTCF and NRSF, while PeakZilla fixes peak widths at twice the estimated fragment length () (Supplementary Figs S4 and S5). Additionally, we observed a similar result with DNase-Seq: while JAMM can assign peak boundaries corresponding accurately to variable-width DNase-I-hypersensitive regions, DFilter can not (Supplementary). Spatial resolution is especially relevant for histone modifications with punctate enrichment patterns. We analyzed peak coverage (see Section 5) of ENCODE HeLa-S3 H3K4me3. H3K4me3 is expected to be maximally enriched immediately). Although ChIP-Seq datasets typically have enough resolution to separate the signal upstream of TSSs from the signal downstream (), many peak finders can not recover this resolution. Out of the peak finders we tested, only JAMM and PeakRanger can, on average, resolve neighboring H3K4me3 peaks, while other peak finders detect, on average, one large peak encompassing multiple enriched sites (and c, see also).
Broad enrichment patternsPeak finders designed to process punctate enrichment sites are typically not able to capture broad enrichment domains, often because those domains feature relatively low SNR and stretch over thousands of base pairs. H3K27me3 and other histone modifications display broad enrichment patterns when assayed with ChIP-Seq. We tested CCAT () (via PeakRanger's implementation of the CCAT algorithm) and BCP () (both designed for broad enrichment domains) as well as DFilter and JAMM (both universal peak finders) in terms of their ability to capture broad enrichment patterns. We found that BCP assigns the most broad peaks. JAMM also assigns broad peaks but generally smaller than those called by BCP. DFilter and PeakRanger's CCAT are less suited for defining broader enrichment domains ().
Peak scoring and sortingJAMM can typically report a large number of peaks and relies on its peak scoring to robustly rank the reported peaks (see Section 5). This facilitates downstream analysis and gives users more flexibility in choosing a method to filter the peaks. Irreproducible Discovery Rate (IDR) () is an ENCODE-recommended method for filtering peak calls based on replicate reproducibility (). Briefly, the IDR pipeline involves calling peaks on the replicates separately, followed by applying the IDR statistical model to determine the number of reproducible peaks n given a certain IDR threshold. Peak reproducibility involves whether the peaks overlap and how their ranks compare in the replicates peak lists. Finally, peaks are called on the combined replicates and the top n peaks are taken to be the high-confidence reproducible peaks (see ChIP-Seq IDR Web page for more information: https://sites.google.com/site/ anshulkundaje/projects/idr). We applied the IDR analysis pipeline to HeLa-S3 CTCF ChIP-Seq ENCODE dataset. We found that sorting the peaks using JAMM's peak scores produces a clear phase shift between reproducible peaks and irreproducible peaks (). To call peaks jointly on biological replicates (the final step in the IDR pipeline), aligned reads are usually pooled before peak finding, but pooling alignments obscures the differential signal intensities of the replicates, and, therefore, may lead to invalid peak sorting.shows an example of cases where JAMM-I's integrated sorting of peaks provides a more valid peak sort than sorting peaks called on pooled alignments. Pooling the replicates obscured the spatial information regarding peak 'b' (JAMM) as the two replicates do not agree on a specific peak location. JAMM relies on geometric averaging of replicates peak signal to score the peaks, which leads to more valid peak scores than those based on read pooling.Shows the average number of peaks per cluster at different cluster ranges. Cluster range is the maximum distance separating peaks in the same cluster (for example, if two peaks are 50 bp apart, they will be grouped together in one cluster if cluster range is 50 bp or more). See Supplementary Figures S8 and S9 for TSS peak coverage of other HeLa-S3 histone modification datasetsTaken together, JAMM provides a plausible approach to replicate integration that is widely applicable to different types of datasets and protocols. The analysis pipeline would start with peak calling on the replicates separately, followed by IDR analysis to select n (the number of reproducible peaks). Finally, peaks are called on the replicates jointly via JAMM's replicate integration and the top-scoring n peaks are taken as a highly confident set.
DISCUSSIONA desirable property in universal peak finders is detecting, and correctly determining the widths of, enrichment sites with different signal properties. JAMM fits a Gaussian mixture model for every local enriched window separately and only fixes the structure of the covariance matrix (see Section 2 and Supplementary Text). Therefore, JAMM can accurately determine widths of enrichment sites that have different signal properties, even if in the same dataset. Some peak finders start with learning an expected peak shape (), making it more difficult to detect enrichment sites with varying widths or to assign their boundaries accurately. Other peak finders adapt specialized subroutines for refining peak widths after peak finding is complete (). In some cases, this approach may be able to assign accurate peak boundaries. But when the original peak represents several closely spaced sites, this approach may result in choosing one site and missing the others (see Supplementaryinfor an example). We showed that JAMM's local clustering also avoids this caveat and can correctly resolve neighboring punctate sites, similar to programs specifically designed with this task in mind like PeakRanger (). JAMM is a universal peak finder that can analyze different types of datasets with little change, if any, to the underlying method. This demonstrates that finding enriched sites in readdensitybased NGS datasets is essentially the same task regardless of the sites' signal properties. Therefore, we propose that more attention could be directed toward developing universal peak finding solutions, refining preprocessing of read counts to correct for different biases () and toward developing solutions for biological replicates integration (). Pooling reads from biological replicates before peak finding is part of the ENCODE consortium recommended guidelines (). However, when peaks are called on pooled replicates, the differential intensities and differential spatial coverage of the replicates are obscured. JAMM addresses replicate integration by looking at biological replicates as not being exactly reproducible and attempts to model their variability using information about their covariance in local enriched windows. Using various accuracy benchmarks, we demonstrated that this approach results in better peak finding accuracy over read pooling. For peak scoring on replicates, JAMM uses the geometric average of the replicates peak signal. We demonstrated that this approach improves peak sorting. Additionally, we also show that peak finding on the geometric mean of separately normalized replicate signal profiles can improve peak finding accuracy over read pooling similarly to JAMM-I (see JAMMG in Supplementary Text Section 1.2 and Supplementary). Geometric averaging of normalized signal profiles can potentially be implemented as a preprocessing step irrespective of the specific peak finding method. Therefore, although it may not be an optimal solution with increasing replicates variability, it is a plausible approach that other peak finders could easily implement for biological replicates analysis, without requiring a multivariate clustering framework. Accuracy benchmarks are independent of read count densities, as opposed to peaks per cluster () and peak width accuracy (). However, motif content benchmarks do not represent a definite gold standard because of our incomplete understanding of proteinDNA interactions and potential biases in the benchmarking methods (). We attempted to remedy this by using two different motifscanning algorithms and by including a manually curated set of peak calls as an additional benchmark (). But manual curation may also be biased because the manually curated set represents only a small fraction of the peaks present in a dataset (345 peaks for MAX, 235 for NRSF and 198 for SRF), and because some peak finders (like PeakZilla) use peak detection methods similar to curation criteria (). Many peak finders ignore being able to report a larger number of peaks and/or ignore providing appropriate peak scores (), both required criteria for assessing replicate reproducibility via IDR analysis (). Appropriate peak scores would have few or no ties and represent the confidence in the peak accurately based on its read density and how it compares with background or biological control. JAMM can typically determine a large number of peaks, and it also provides robust peak scores with few score ties if any. This, in addition to its accurate peak width determination, makes JAMM potentially more applicable for different types of downstream analyses that rely on ranked peak lists. Although a multivariate clustering framework can potentially be used for differential peak finding, JAMM can not find differential peaks across multiple conditions in its current implementation. Also, JAMM does not take into account mappability, GC content and Copy Number Variations (CNVs). CNVs are especially relevant for cancer cell lines (), while GC content bias is a known problem in high-throughput sequencing libraries, probably due to PCR amplification (). We could not detect CNV bias in JAMM's peak calls in regions of loss when compared with a peak finder that corrects for CNVs (), but we noticed a possible increase in the proportion of peaks called by JAMM in regions of gain (see Supplementary). Explicit implementation of GC content bias and CNV correction could improve peak finding accuracy (), and we plan to incorporate appropriate correction subroutines in the near future. Finally, JAMM is typically slower than other peak finders with less complicated models, taking $67 h on average to analyze a typical human ENCODE ChIP-Seq dataset when run using a single processor.
METHODS
Datasets, preprocessing and accuracy analysisAll " accuracy-benchmark " datasets are ENCODE datasets. (). 'bardet-benchmark' datasets were produced by). Fastq files were aligned to the respective genomes using Bowtie2 () (hg19: CTCF-HeLa, CTCF-K562, CTCF-NHEK, NFKB, H3K4me3, H3K27ac, H3K27me3-mm9: CEBPA-dm3: Twist-ce6: PHA-4). Alternatively, we started with the alignments provided by Rye et al.), cumulative log likelihood analysis was done using SpeakerScan (background window: 150 bp) () and the curated peak set provided bywas used for manual curation analysis. Manual curation results were defined as the number of peaks that intersect at least one manually curated positive peak after subtracting the number of peaks that intersect manually curated negative peaks exclusively. Results for 'accuracy-benchmark' transcription factor datasets were 01 scaled and averaged over all three benchmarks to produce. See Supplementary Text, section 1.3.
VisualizationExtended Reads per Kilobase per Million reads mapped (RPKM)normalized read counts were produced using deepTools () at 10 bp resolution and visualized in IGV browser (Thorvaldsd ottir et al., 2013). Read coverage heatmaps were produced for peak regions (1000 bp in each direction centered at the peak center) using smoothed extended-read counts at 10 bp resolution. For peak coverage plots of histone modification peak calls, we intersected each set of peak calls with annotated promoter regions from UCSC hg19 known genes (4000 bp in each direction centered at the annotated TSS), using BEDTools (). Each base pair was assigned a score of 1 for each intersecting peak. Per-base pair scores were summed then divided by the mean per-base pair score to produce normalized peak coverage scores. Raw extended-read coverage was produced using ngs.plot () on the same TSS regions. See Supplementary Text, section 1.3 for more details.
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
M.M.Ibrahim et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
JAMM at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
