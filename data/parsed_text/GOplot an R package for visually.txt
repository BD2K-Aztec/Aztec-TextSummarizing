Despite the plethora of methods available for the functional analysis of omics data, obtaining comprehensive-yet detailed understanding of the results remains challenging. This is mainly due to the lack of publicly available tools for the visualization of this type of information. Here we present an R package called GOplot, based on ggplot2, for enhanced graphical representation. Our package takes the output of any general enrichment analysis and generates plots at different levels of detail: from a general overview to identify the most enriched categories (bar plot, bubble plot) to a more detailed view displaying different types of information for molecules in a given set of categories (circle plot, chord plot, cluster plot). The package provides a deeper insight into omics data and allows scientists to generate insightful plots with only a few lines of code to easily communicate the findings. Availability and Implementation: The R package GOplot is available via CRAN-The Comprehensive R Archive Network: http://cran.r-project.org/web/packages/GOplot. The shiny web application of the Venn diagram can be found at: https://wwalter.shinyapps.io/Venn/. A detailed manual of the package with sample figures can be found at https://wencke.github.io/ Contact: fscabo@cnic.es or mricote@cnic.es
IntroductionOmics technologies have become standard tools in biological research for identifying and unraveling transcriptional networks, building predictive models and discovering candidate biomarkers. Gene/protein/metabolomic expression data is especially challenging for investigators due to its high-dimensional nature. Exploratory data analysis techniques are used to get a first impression of the important characteristics of the dataset and to reveal its underlying structure. Statistical analyses are then performed to detect subsets of elements owing the ability to provide valuable insight into the underlying patterns of the investigated biological process. One common approach is to map the molecules to their associated biological annotations, e.g. gene ontology (GO) terms, and to further perform an enrichment analysis. Although many visualization methods, tools () and packages () have been developed, none of them enables the user to combine expression data with the results of functional analysis in a way that guarantees the preservation of the power of both analyses. R is commonly used by the omics community to analyze highdimensional expression data. We therefore developed the R package GOplot based on the implementation of the grammar of graphics (). GOPlot follows the path of deductive reasoning to allow the user to go from the most general to the most specific details of the functional analysis results. The package implements novel, original, high-quality plots which also allow the integration of other quantitative information about molecules, i.e. the expression levels. GOplot improves understanding of omics data and aids the communication of biologically relevant findings in publications.
Package descriptionGOplot imports various R packages and was built on ggplot2, one of the three graphic systems in R. The package makes use of the complexity of ggplot2 to provide the user with a collection of prespecified and multilayered charts. Each layer adds valuable information to the displayed context to convey the intended message. Two kinds of datasets are required as input: a list of selected molecules with their expression levels and the results of a functional analysis. We implemented two kinds of function: preprocessing and plotting. Preprocessing functions: Although using the preprocessing functions is not mandatory, it is highly recommended to ensure easy workflow. circle_dat() allows the user to easily combine expression and functional enrichment data and generates the appropriate input for most of the plotting functions. chord_dat() generates a binary matrix that assigns the molecules to each predefined functional term. This kind of binary matrix is used as input for GOChord(). The input format for the preprocessing functions can be checked with the help function in R. Plotting functions: The package provides the user with a guide to explore the data and to select lists of elements and terms of interest. The exploratory part of the data analysis starts at a very general level with the GOBubble() and GOBar() plotting functions for comparative charts. Both charts display information about the significance of the enrichment (log 10 of the adjusted P-value) and the z-score of the term. GOBar() allows processes to be sorted by z-score or P-value to provide a better overview. The circles of the bubble plot are area-proportional to the number of molecules in the given category. Based on these charts a list of relevant terms can be selected. With GOCircle(), GOChord() and GOCluster(), the user can add quantitative molecular information to the terms of interest (). With GOVenn() we have implemented a Venn diagram, that displays the number of overlapping elements as well as their expression patterns (commonly upregulated, commonly downregulated or contraregulated). In addition we have used shiny (http://CRAN.Rproject.org/packageshiny), the web application framework for R, to create an interactive web application of GOVenn().
ExampleThis section briefly exemplifies some of the functionalities of the GOplot package. Further details of the available functions and their usage can be found in the GOplot vignette. GOplot comes with a manually compiled sample dataset (EC). Selected samples were downloaded from the Gene Expression Omnibus (accession number: GSE47067). The data were normalized and a statistical analysis was performed to determine differentially expressed genes. The DAVID functional annotation tool () was used to perform a gene-annotation enrichment analysis of the set of differentially expressed genes (adjusted P-value < 0.05).shows three sample plots from the package created by the example code below.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
