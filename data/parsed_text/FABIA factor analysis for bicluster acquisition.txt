Motivation: Biclustering of transcriptomic data groups genes and samples simultaneously. It is emerging as a standard tool for extracting knowledge from gene expression measurements. We propose a novel generative approach for biclustering called 'FABIA: Factor Analysis for Bicluster Acquisition'. FABIA is based on a multiplicative model, which accounts for linear dependencies between gene expression and conditions, and also captures heavy-tailed distributions as observed in real-world transcriptomic data. The generative framework allows to utilize well-founded model selection methods and to apply Bayesian techniques. Results: On 100 simulated datasets with known true, artificially implanted biclusters, FABIA clearly outperformed all 11 competitors. On these datasets, FABIA was able to separate spurious biclusters from true biclusters by ranking biclusters according to their information content. FABIA was tested on three microarray datasets with known subclusters, where it was two times the best and once the second best method among the compared biclustering approaches. Availability: FABIA is available as an R package on Bioconductor
INTRODUCTIONRecent technologies such as the Affymetrix array plates and next-generation sequencing open up new possibilities for highthroughput expression profiling. These technologies in turn require advanced analysis tools to extract knowledge from the huge amount of data. If the experimental conditions are known, supervised techniques such as support vector machines are suitable to extract the dependencies between conditions and gene expression or to identify condition-indicative genes. However, conditions may not be known or biologists and medical researchers are interested in dependencies * To whom correspondence should be addressed. within or across conditions. For instance, it could be possible to refine pathways across conditions or to identify new subgroups within one condition. For these tasks, unsupervised methods such as clustering are required, which are usually insufficient, because samples may only be similar on a subset of genes and vice versa. In drug design, for example, researchers want to reveal how compounds affect gene expression; the effects of compounds, however, may be similar only on a subgroup of genes. Under such circumstances, biclustering is the proper unsupervised analysis technique. A bicluster in a transcriptomic dataset is a pair of a gene set and a sample set for which the genes are similar to each other on the samples and vice versa. If multiple pathways are active in a sample, it belongs to different biclusters. If a gene participates in different pathways for different conditions, it belongs to different biclusters, too. Thus, biclusters can overlap. A survey of biclustering approaches has been given by. In principle, there exist four categories of biclustering methods: (1) variance minimization methods, (2) two-way clustering methods, (3) motif and pattern recognition methods and (4) probabilistic and generative approaches. Transcriptomic data are usually supplied as a matrix, where each gene corresponds to one row and each sample to one column; the matrix entries themselves are the expression levels. (1) Variance minimization methods: define clusters as blocks in the matrix with minimal deviation of their elements. This definition has been already considered byand extended by. The -cluster methods search for blocks of elements having a deviation ('variance') below . One example are -ks clusters (), where the maximum and the minimum of each row need to differ less than  on the selected columns. A second example are -pClusters (), which are defined as 22 submatrices with pairwise edge differences less than . A third example are the Cheng and Church (2000) -biclusters having a mean squared error below  after fitting an additive model with a constant, a row and a column effect. FLexible Overlapped biClustering (FLOC;) extend ChengChurch -biclusters by dealing with missing values via an occupancy threshold  and by using both l 1 and l 2 norms. (2) Two-way clustering methods apply conventional clustering to the columns and rows and (iteratively) combine the results. Coupled Two-Way Clustering (CTWC;) iterativelyPage: 1521 15201527
FABIAperforms standard clustering of the rows (columns) using previously constructed columns (rows) clusters as features. Also Interrelated Two-Way Clustering (ITWC;) using k-means and Double Conjugated Clustering (DCC;) using self-organizing maps combine column and row clustering. (3) Motif and pattern recognition methods define a bicluster as samples sharing a common pattern or motif. To simplify this task, some methods discretize the data in a first step, such as xMOTIF () or Bimax (), which even binarizes the data and searches for blocks with an enrichment of ones. Order-Preserving SubMatrices (OPSM;) searches for blocks having the same order of values in their columns. Using partial models, only the column order on subsets must be preserved. Spectral clustering (SPEC;) performs a singular value decomposition of the data matrix after normalization. SPEC extracts columns (samples) with the same conserved gene expression pattern using the fact that they are linearly dependent and span a subspace associated with a certain singular value. The Iterative Signature Algorithm (ISA;) selects samples that have a given gene signature and then uses these samples to define a new sample signature. This sample signature, in turn, is used to select genes and to define a new gene signature. For each bicluster to be extracted, this process is initialized by a randomly selected binary gene signature and repeated iteratively. A related approach uses a Hough transform for identifying groups of linearly dependent genes and samples (). Contiguous column coherent (CCC biclustering;) is a method for gene expression time series, which finds patterns in contiguous columns. (4) Probabilistic and generative methods use model-based techniques to define biclusters. Statistical-Algorithmic Method for Bicluster Analysis (SAMBA;) uses a bipartitioned graph, where both conditions and genes are nodes. An edge from a gene to a condition means that the gene responds to the condition. With a probabilistic objective, subgraphs are found that have a significantly higher connectivity than the overall graph. In another approach,use Gibbs sampling to estimate the parameters of a simple frequency model for the expression pattern of a bicluster. However, the data must first be discretized and then only one bicluster with constant column values at each step can be extracted. Probabilistic Relational Models (PRMs;) and their extension ProBic () are fully generative models that combine probabilistic modeling and relational logic. Another generative approach is cMonkey (), which models biclusters by Markov chain processes. Both PRMs and cMonkey are able to integrate non-transcriptomic data sources. In the plaid model family (), the i-th bicluster is extracted by row and column indicator variables  ki and  ij. The values of each bicluster are explained by a general additive model  kij =  i + ki + ij. Parameters are estimated by a least square fit.generalized the plaid models to fully generative models called Bayesian BiClustering model (BBC). To avoid the high percentage of overlap in the plaid models, BBC constrains the overlapping of biclusters to only one dimension. Further it allows different error variances per bicluster. Caldas andalso extended the plaid model to a fully generative model using a Bayesian framework and found that the plaid model is equivalent to the PRM model for specific parameters. The latter models (;) are generative models which have the advantage that (i) they select models using well-understood model selection techniques such as maximum likelihood, (ii) hyperparameter selection methods (e.g. to determine the number of biclusters) can rely on the Bayesian framework, (iii) signal-to-noise ratios can be computed, (iv) they can be compared with each other via the likelihood or posterior, (v) tests such as likelihood ratio test are possible and (vi) they produce a global model to explain all data. These models are additive and assume that all effects are Gaussian to utilize Gibbs sampling for parameter estimation. However, after prefiltering, real microarray datasets are not Gaussian distributed and have heavy tails (), even after log transformation. This can be seen in Supplementary Figures S8, S9 and S19 for gene expression datasets. In this article, we propose a generative multiplicative model tailored to the special characteristics of gene expression data. This article is organized as follows. Section 2 introduces the multiplicative bicluster model class. Section 3 describes the model selection (training) algorithm for the new model class. Section 4 highlights how biclusters can be ranked according to the information they contained about the data. Section 5 describes how to extract bicluster members from our new models. Finally, Section 6 provides an experimental evaluation of the new method.
THE FABIA MODELWe propose a multiplicative model class for analyzing gene expression datasets for several reasons. First, a multiplicative model allows to model heavy tailed data, as observed in gene expression. Second, it can relate the strength of gene expression patterns to characteristics of the induced condition such as elapsed time or concentration of compounds. After log transformation, exponential dynamics such as decay (mRNA or compound) or saturation can also be modeled. Note that supervised multiplicative models, e.g. support vector machines, were successfully applied to logtransformed gene expression datasets. Further, artificial multiplicative effects are introduced during data preprocessing, for example, if expression values are standardized, then variations stemming from noise scale the signal. We assume that the gene expression dataset is preprocessed and filtered for genes that contain a signal (e.g. informative call or signal strength). The resulting data is given as a data matrix X  R nl , where every row corresponds to a gene and every column corresponds to a sample; the value x kj corresponds to the expression level of the k-th gene in the j-th sample. The matrix X is the input to biclustering methods. We define a bicluster as a pair of a row (gene) set and a column (sample) set for which the rows are similar to each other on the columns and vice versa. In a multiplicative model, two vectors are similar if one is a multiple of the other, that is, the angle between them is zero or, as realization of random variables, their correlation coefficient is (minus) one. It is clear that such a linear dependency on subsets of rows and columns can be represented as an outer product  z T of two vectors  and z. The vector  corresponds to a prototype column vector that contains zeros for genes not participating in the bicluster, whereas z is a vector of factors with which the prototype column vector is scaled for each sample; clearly z contains zeros for samples not participating in the bicluster. Vectors containing many zeros or values close to zero are called sparse vectors.visualizes this representation by sparse vectors schematically. The overall model for p biclusters and additive noise isPage: 1522 15201527
S.Hochreiter et al.= *where   R nl is additive noise;  i  R n and z i  R l are the sparse prototype vector and the sparse vector of factors of the i-th bicluster, respectively. The second formulation above holds if  R np is the sparse prototype matrix containing the prototype vectors  i as columns and Z  R pl is the sparse factor matrix containing the transposed factors z T i as rows. Note that Equation (1) formulates biclustering as sparse matrix factorization. According to Equation (1), the j-th sample x j , i.e. the j-th column of X, iswhere j is the j-th column of the noise matrix  andzand andz j = (z 1j ,...,z pj ) T denotes the j-th column of the matrix Z. Recall that z T i = (z i1 ,.
..,z il) is the vector of values that constitutes the i-th bicluster (one value per sample), whilezwhile whilez j is the vector of values that contribute to the j-th sample (one value per bicluster). The formulation in Equation (2) facilitates a generative interpretation by a factor analysis model with p factors (where x is the observation, is the loading matrix,  z i is the value of the i-th factor,  z = ( z 1 ,..., z p ) T is the vector of factors and  R n is the additive noise. Standard factor analysis assumes: the noise is independent ofzof ofz,  z is N (0,I)-distributed and is N (0,)-distributed (the covariance matrix  R nn is diagonalexpressing independent Gaussian noise). The parameter explains the dependent (common) and the independent variance in the observations x. Additive noise in gene expression is normally distributed (). That the covariance matrix forzfor forz is the unit matrix means that the biclusters should not be correlated. This assumption ensures that one true bicluster in the data will not be divided into dependent small model biclustersthereby ensuring maximal model biclusters. Note, however, that this assumption still allows for overlapping biclusters. Standard factor analysis does not consider sparse factors and sparse loadings that are essential in our formulation to represent biclusters. Sparseness is obtained by a component-wise independent Laplace distribution (), which is now used as a prior on the factorszfactors factorsz instead of the Gaussian:Sparse loadings  i and, therefore sparse , are achieved by two alternative strategies. In the first model, called FABIA, we assume a component-wise independent Laplace prior for the loadings (like for the factors):The FABIA model contains the product of Laplacian variables which is distributed proportionally to the 0th order modified Bessel function of the second kind (). For large values, this Bessel function is a negative exponential function of the square root of the random variable. Therefore, the tails of the distribution are heavier than those of the Laplace distribution. The Gaussian noise, however, reduces the heaviness of the tails such that the heaviness is between Gaussian and Bessel function tails about as heavy as the tails of the Laplacian distribution. These heavy tails are exactly the desired model characteristics. The second model, called FABIAS, uses a prior distribution for the loadings that is non-zero only in regions where the loadings are sparse. Following (), we define sparseness asleading to the prior with parameter spLRelation to Independent Component Analysis (ICA): our models are closely related to ICA (). ICA searches for a matrix factorization, where the components ofzof ofz in model Equation (3) without noise should be mutually independent. The matrix decomposition for ICA isICA results in sparse Z ICA , whereas ICA is not sparse as in our models.
MODEL SELECTIONTo identify the biclusters, we have to select the model parameters and that explain the data best. Maximum likelihood is the most common approach for selecting a generative model. Unfortunately, in our case, the likelihood is analytically intractable. The reason is that we aim at generating sparse values, for which we use Laplacian priors (in contrast to the commonly used Gaussian priors). The resulting integral defining the likelihood cannot be computed analytically. In such situations, variational approaches can be applied, where a lower bound of the likelihood is maximized instead of the likelihood itself. Expectation maximization (EM;) is the most popular method for maximizing the likelihood. The EM algorithm has been extended to variational EM (). We follow this approach. However, we also assume a prior on the loadings in order to make the loadings sparse as well. Therefore, we use variational EM for maximizing the posteriorin line with our previous approaches ().
Variational approach for sparse factorsAs mentioned above, the likelihoodcannot be computed analytically for a Laplacian prior p( z). Girolami (2001) introduces a model family that is parameterized by  , where the maximum over models in this family is the true likelihood:The variational EM algorithm does not only maximize the lower bound on the likelihood with respect to the parameters and , but also with respect to the variational parameter . In the following, and denote the parameter estimates in the current iteration. According to, we obtainwhere j stands for diag  j . The update for  j is
New update rules for sparse loadingsThe M-step for FABIA (Laplace prior on loadings) isThe M-step for FABIAS updates diag( new ) = EM and according to the standard EM. However, we must take into account that the prior on  i has restricted support. This is ensured by a projection of  i according to. The projection is a convex quadratic problem, which minimizes the Euclidean distance to the original vector subject to  i =1 and sp( i ) = spL, see Equation (5). The final update isFor n > p, the algorithm has a complexity of O(lp 2 n) per iteration, i.e. it is linear in n and l.
Extremely sparse priorsSome microarray data are extremely sparse. For example, we observed a kurtosis larger than 30 for Affymetrix SNP 6 arrays [see copy number variation (CNV) data on FABIA homepage]. We want to generalize our model class to deal with such sparse datasets and define extremely sparse priors both on the factors and the loadings utilizing the following (pseudo) distributions:Improper prior:The latter may only exist on an intervalwith sufficiently small. For updating the loadings in the M-step, we need the derivatives of the negative log-priors, which can be expressed proportionally to |z| spl for a specific exponent spl, where spl = 0 ( = 1) corresponds to the Laplace prior and spl > 0 to sparser priors. The M-step for the loadings is finally as in Equation (6), where sign() is replaced by || spl sign() with elementwise operations (absolute value, sign, exponentiation and multiplication). For the factors, we represent the priors by a convex variational form. According to, this is possible if g(z) =lnp(  z) is increasing and concave for z > 0. Our priors fulfill this, because first-order derivatives are positive and second-order derivatives are negative. Then the update for the variational parameter  j iswhere spz is the exponent of |z| in the first derivative of g(z); spz = 1/2 ( = 1) represents the Laplace prior and spz > 1/2 leads to sparser priors.
Data preprocessing and initializationThe data should be centered to zero mean, zero median or zero mode (Supplementary Material). If the correlation of weak signals is of interest too, we recommend to normalize the data. The iterative model selection procedure requires initialization of the parameters , and  j. We initialize the variational parameter vectors  j by ones, randomly and = diag(max(,covar(x) T )).
INFORMATION CONTENT OF BICLUSTERSA highly desired property for biclustering algorithms is the ability to rank the extracted biclusters analogously to principal component which are ranked according to the data variance they explain. We rank biclusters according to the information they contain about the data. The information content ofzof ofz j for the j-th observation x j is the mutual information betweewhere H is the entropy. The independence of x j andzand andz j across j givesTo assess the information content of one factor, we consider the case that factorzfactor factorz i is removed from the final model and, consequently, the explained covariance  ji  i  T i must be considered as noise:Again independence across j givesThis information content gives that part of the information in x that z T i conveys across all examples. Note that the information content grows with the number of non-zero  i 's (size of the bicluster).
EXTRACTING MEMBERS OF BICLUSTERSAfter model selection and ranking of bicluster, the i-th bicluster has soft gene memberships given by the absolute values of  i and soft sample memberships given by the absolute values of z T i. Soft clustering has the advantage that gradual memberships are able to account for ambiguities that occur in gene expression datasets (where hard memberships can be obscured by noise). However, some applications require hard 'yes/no' memberships. We determine the members of the i-th bicluster by selecting absolute values  ki and z ij above thresholds thresL and thresZ, respectively. First, the second moment of each factor is normalized to 1 resulting in a factor matrixZmatrix matrixZNow the threshold thresZ can be chosen to determine which percentage of samples will on average belong to a bicluster. For a Laplace prior, this percentage can be computed by 1 2 exp(  2/thresZ). We extract one bicluster for each factorzfactor factorz i. In gene expression, a gene pattern is either absent or present, but not negatively present. Therefore, the i-th bicluster is either determined by the positive or negative values ofzof ofz ij. Which of these two possibilities is chosen is decided by whether the sum overz over overz ij > thresZ is larger for the positive or negativ z ij. We may not normaliz for extracting loadings, since the factors have been normalized already. We suggest to estimate the average contribution ofPage: 1524 15201527
S.Hochreiter et al.  k z ij first. Therefore, we compute the standard deviation ofof ofNow we choose thresL = sdLZ/thresZ that corresponds to extracting those loadings which have an above-average contribution.
EXPERIMENTS
Evaluating biclustering resultsBefore comparing biclustering methods, we have to consider how to evaluate the performance of biclustering methods. If the true biclusters are known, the performance of a biclustering method should be evaluated by the consensus between the set of extracted biclusters and the set of true biclusters. Previous consensus measures such as the one indo not take overlapping biclusters into account. Other consensus measures do not consider the numbers of biclusters in both sets (e.g.). Thus, the set of true biclusters would be in consensus with very large sets of random biclusters. We introduce a novel consensus score for two sets of biclusters which avoids the drawbacks mentioned above as follows:(1) compute similarities between all pairs of biclusters, where one is from the first set and the other from the second set;(2) assign the biclusters of one set to biclusters of the other set by maximizing the assignment by the Munkres algorithm (); and(3) divide the sum of similarities of the assigned biclusters by the number of biclusters of the larger set.Step (3) penalizes different numbers of biclusters as emphasized above. We use the Jaccard index for computing the similarity of two biclusters. It measures the relative proportion of overlap of two biclusters as the quotient of the number of matrix elements contained in the intersection of the biclusters and the number of matrix elements contained in the union of the biclusters. The highest consensus is 1 and only obtained for identical sets of biclusters. Further note that the consensus score defined above can be applied analogously to comparing standard clustering results.
Compared methodsWe compare the following 13 biclustering methods:(1) FABIA: our new method with sparse prior Equation (4).(2) FABIAS: our new method with sparseness projection Equation (5).(3) MFSC: matrix factorization with sparseness constraints (Hoyer, 2004).(4) plaid: plaid model ().(5) ISA: Ihmels et al.(6) OPSM: Ben-Dor et al.(7) SAMBA: Tanay et al.(8) xMOTIF: conserved motifs ().(9) Bimax: divide-and-conquer algorithm ().(10) CC: ChengChurch -biclusters ().(11) plaid_t: improved plaid model ()(12) FLOC: a generalization of ChengChurch -biclusters ().(13) spec: spectral biclustering (). We used the following software: for (1)(3) our R package 'fabia', for (4) the software http://www-stat.stanford.edu/owen/plaid/, for (5) the R package 'isa2', for (6) the software BicAT (), for (7) the software EXPANDER (), for (8)(13) the R package 'biclust' (). In all experiments, rows (genes) were standardized to mean 0 and variance 1. For a fair comparison, the parameters of the methods were optimized on auxiliary toy datasets. If more than one setting was close to the optimum, all near optimal parameter settings were tested. In the following, these variants are denoted as method_variant (e.g. plaid_ss). A complete list of all settings and variants is available in the Supplementary Material. Among the compared methods, not only FABIA and FABIAS but also ISA, OPSM and SPEC are geared to identifying biclusters based on a multiplicative model. Additionally, we included MFSC, although it is not a biclustering method in the strict sense, but it is a standard method for multiplicative factorization and hence provides a baseline for our comparison.
Simulated datasets with known biclustersBenchmark datasets published inare small (50 to 100 genes), have low noise, equally sized biclusters, and only simultaneous row and column overlaps. FABIA performed very well on these datasets (see Supplementary, S6.3.1 and S6.3.2). However, we use more realistic simulated datasets that match the characteristics of gene expression data better, especially in terms of the heavy tails. This can be seen in the Supplementary Material by comparing the densities and moments of our simulated datasets (Supplementary) with real gene expression data (Supplementary Figs S8, S9 and S19). We assumed n = 1000 genes and l = 100 samples and implanted p = 10 multiplicative biclusters with the model given by Equation (1). The  i 's are generated by (i) randomly choosing the numbergenes randomly from {1,...,1000}, (iii) setting  i components not in bicluster i to N (0,0.2 2 ) random values and (iv) setting  i components that are in bicluster i to N (3,1) random values, where the sign is chosen randomly for each gene. The z i 's are generated by (i) randomly choosing the number N z i of samples in bicluster i from {5,...,25},samples randomly from {1,...,100}, (iii) setting z i components not in bicluster i to N (0,0.2 2 ) random values and (iv) setting z i components that are in bicluster i to N (2,1) random values. Finally, we draw the  entries (additive noise on all entries) according to N (0,3 2 ) and compute the data X according to Equation (1). Using these settings, noisy biclusters of random sizes between 105 and 21025 (genessamples) are generated. With this procedure, we created 100 independent datasets.shows the biclustering results for these datasets. The methods are evaluated by the average consensus score of the extracted biclusters Page: 1525 15201527 FABIAand the true biclusters as defined in Section 6.1. Our new methods FABIA and FABIAS outperform all other methods considerably.illustrates a FABIA result on a simulated dataset, where, in contrast to our 100 benchmark datasets, the biclusters have been created as contiguous blocks for visualization purposes. We observed the following characteristics of the methods, also confirming earlier findings of Gu and Liu (2008): SAMBA and OPSM excluded many relevant biclusters; SAMBA, Bimax, xMOTIF, CC and FLOC found many small random biclusters (overfitting). spec produces a partition of the samples for each gene set. The plaid models and ISA extract large overlapping clusters. Ranking by information content: to verify that the information content is useful for ranking the extracted biclusters, we performed a two-sided Spearman rank correlation test comparing (i) the information content and (ii) the Jaccard similarity to the assigned true bicluster. We obtained P-values of 1.710 5 for FABIA and 6.110 3 for FABIAS, which shows that true biclusters can indeed be identified by their information content. Data based on an additive model: we also generated data according to an additive model structure in order to analyze how well FABIA and FABIAS perform on data not satisfying the multiplicative model assumptions. We generated 100 datasets with the above settings, but using the general additive model from Section 1, category (4). Both FABIA and FABIAS outperform all other methods, followed by plaid_ms_5. Specifically, for three different signal levels, FABIAS gave average consensus scores of 0.150.270.55, FABIA 0.100.200.48 and plaid_ms_5 0.10 0.140.22 (detailed results, also for all other methods, are reported in the Supplementary Material). One would assume plaid methods to perform better than FABIA and FABIAS. We explain the superiority of our methods on datasets that do not even match the data generation model as follows:(i) they construct biclusters simultaneously, thereby, taking overlaps into account; (ii) the decorrelation of factors minimizes redundancy of biclusters; (iii) the low complexity of the model ensures low parameter interdependencies, which facilitates model selection.
Gene expression datasetsWe consider three gene expression datasets that have been provided by the Broad Institute and were previously analyzed by. They first clustered the samples using additional datasets and then confirmed the clusters by gene set enrichment analysis. Our goal was to study how well biclustering methods are able to re-identify these clusters without any additional information.The 'breast cancer' dataset (van't) was aimed at a predictive gene signature for the outcome of a breast cancer therapy. We removed the outlier array S54 that leads to a dataset with 97 samples and 1213 genes. After standardization, skewness was 0.45 and excess kurtosis 0.93. In, three biologically meaningful subclasses were found that should be re-identified.) was aimed at predicting the survival Page: 1526 15201527. For the methods assuming a fixed number of biclusters, we chose five biclustersslightly higher than the number of known clusters to avoid biases toward prior knowledge about the number of actual clusters. The performance was assessed by comparing known classes of samples in the datasets with the sample sets identified by biclustering as defined in Section 6.1, in this case on sample clusters instead of biclusters. For the multiple tissue dataset, plaid performs best and our methods FABIA and FABIAS are second best. For breast cancer and DLBCL datasets, our new methods FABIA and FABIAS detected the clusters most accurately. Further, note that FABIA and FABIAS have considerably fewer genes in their bicluster than the next-best methods. For the biological interpretation of the FABIA results, we applied gene ontology (GO), Kyoto encyclopedia of genes and genomes (KEGG) pathway and protein interaction network analysis. We provide a summary of these analysis results, details of which can be found in the Supplementary Material. Breast cancer: GO and KEGG agree that genes in bicluster 1 are related to the cell cycle (KEGG P-value: 9.710 8 ; GO P-value: 2.810 9 ), especially to M-phase (GO P-value: 2.510 15 ). Proteins which drive this bicluster are the cell division control protein CDC2 and the mitosisrelated KIF proteins. Genes in bicluster 2 are related to immune response (GO P-value: 1.410 26 ) and cytokinecytokine receptor interaction (KEGG P-value < 10 10 ), involving cytokinerelated proteins such as CCR5, CCL4 and CSF2RB. Note that cytokines are important regulators and mobilizers of the immune response. Bicluster 3 is too small to allow for a reliable biological interpretation. DLBCL: the most significant GO terms and KEGG pathways found for bicluster 1 are related to the ribosome (GO P-value: 2.210 6 ; KEGG P-value: 1.310 8 ) and to B-cell receptor signaling (KEGG P-value: 9.610 8 ). The latter fits especially well to the kind of cells the data stem from. The most significant GO terms and KEGG pathways for bicluster 2 are immune system-related (GO P-value: 3.210 6 ; KEGG P-value: 5.710 8 ). Multiple tissues: this dataset is very heterogeneous and the samples differ in many biological processes; hence, it is difficult to provide a comprehensible biological interpretation.
S.Hochreiter et al.
Drug designIn a drug design project, Affymetrix GeneChip HT HG-U133+ PM array plates with 96 samples (12  8) per plate were used to analyze the effect of different compounds on gene expression. The compounds were selected to be active on a cancer cell line and were tested in groups of three replicates. Raw expression data were summarized with FARMS () and informative genes are selected by I/NI calls (). The preprocessed data matrix was 141395 (one array was missing) with skewness of 0.39 and excess kurtosis larger than 3.0 (i.e. heavier tails than Laplace). We tested FABIA on this dataset. Biclusters were extracted with thresZ = 1.5 to obtain an average of 56 samples in a bicluster (note that, for the Laplacian prior, 1 2 exp(  2 1.5)  0.06). FABIA found four biclusters. The first bicluster consisted of two replicate sets (6 arrays), the second consisted of five replicate sets with one replicate missing (14 arrays). The third bicluster consisted of three replicate sets and an additional array (10 arrays). The fourth bicluster consisted of arrays located at the last column of the platecorresponding to border arrays which dry out. In the meantime, this problem has been fixed by Affymetrix. That replicates are clustered together shows that our biclustering approach works correctly. The bicluster with highest information content (two sets of replicates) extracted genes related to mitosis (GO analysis gave a P-value < 10 13 ). Regulation of mitosis genes is biologically plausible, as inhibiting cell division would be consistent with an active compound that does not kill the cell. The compounds of this bicluster are now under investigation by Johnson & Johnson Pharmaceutical Research & Development.
CONCLUSIONWe have introduced a novel biclustering method that is a generative multiplicative model. It assumes realistic non-Gaussian signal distributions with heavy tails. The generative model allows to rank biclusters according to their information content. Model selection is performed by maximum a posteriori via an EM algorithm based on a variational approach. On 100 simulated datasets with known true biclusters, FABIA clearly outperformed all 11 competing methods. On three gene expression datasets with previously verified subclusters, it was once Page: 1527 15201527 FABIA the second best and twice the best performing method. The biological relevance of the FABIA biclusters has been demonstrated by GO and KEGG analyses. Finally, FABIA has been successfully applied to drug design to find compounds with similar effects on gene expression.
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
