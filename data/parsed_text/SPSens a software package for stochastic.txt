SPSens is a software package for the efficient computation of stochastic parameter sensitivities of biochemical reaction networks. Parameter sensitivity analysis is a valuable tool that can be used to study robustness properties, for drug targeting, and many other purposes. However its application to stochastic models has been limited when Monte Carlo methods are required due to extremely high computational costs. SPSens provides efficient, state of the art sensitivity analysis algorithms in a single software package so that sensitivity analysis can be easily performed on stochastic models of biochemical reaction networks. SPSens implements the algorithms in C and estimates sensitivities with respect to both infinitesimal and finite perturbations to system parameters, in many cases reducing variance by orders of magnitude compared to basic methods. Included among the features of SPSens are serial and parallel command line versions, an interface with Matlab, and several example problems. Availability: SPSens is distributed freely under GPL version 3 and can be downloaded from http://sourceforge.net/projects/spsens/. The software can be run on Linux, Mac OS X and Windows platforms.
INTRODUCTIONStochastic models are used now more than ever to study, to analyse, and to predict the complex dynamics occurring in biology, chemistry and ecology. When the discrete and random nature of the system is not accurately captured by deterministic or stochastic differential equation models, stochastic reaction networks are often modeled in the framework of stochastic chemical kinetics (). A stochastic chemical kinetic model cannot be solved exactly except in the simplest cases and precludes the use of simulation and analysis methods commonly available for deterministic or stochastic differential equation models. One such analysis tool that is of particular importance is parameter sensitivity analysis, which quantifies how system output variables are affected by perturbations in model parameters. The stochastic model depends upon a set of reaction rate parameters, and it is of great interest to assess the dependence of system behaviour on these models via parameter sensitivity analysis. Such knowledge has wide applications, but the computation of the stochastic sensitivity coefficients is burdensome. In particular Monte Carlo (MC) methods are used, but are very often computationally demanding because they require large numbers of simulations to be performed in order to generate accurate statistics. Although software packages have been developed for sensitivity analysis using the linear noise approximation and Fisher Information Matrix (), such an approach is not appropriate for systems with particularly large fluctuations in molecular populations, such as those exhibiting bistability. Several MC methods for efficiently estimating stochastic parameter sensitivities of biochemical reaction networks have been reported recently (). Existing software packages have been developed to increase efficiency of stochastic simulations; however, such packages do not include methods for sensitivity analysis. To perform sensitivity analysis one must either write custom code or make significant modifications to existing code. SPSens addresses this problem by including efficient, state of the art parameter sensitivity analysis methods in a single software package. The capabilities, implementation and features are described in what follows.
METHODS
Stochastic sensitivity analysisIn stochastic chemical kinetics, a model is defined by specifying a list of species whose populations at time t40 are described by the discrete state vector, X(t). These species interact with one another through a number of reaction channels, each of which is defined by a stoichiometry vector and a propensity function. The propensity functions depend on a set of reaction rate parameters,. The objective of sensitivity analysis is to quantify how an output function of the form f(X(t;)) changes with perturbations to the components of. The sensitivity coefficients estimated by SPSens are analogous to first order sensitivity coefficients commonly computed for deterministic systems. Owing to the stochastic nature of the system, sensitivities of the expected value of the outputEwhere j 2 is the jth system parameter and T40 is a fixed time of interest. Although (1) can be derived directly from the Chemical Master Equation (CME), solutions to these equations are intractable except for the simplest examples. However, one can use MC methods and stochastic simulation algorithms (SSA) to estimate z j. *To whom correspondence should be addressed. For MC methods, a sensitivity estimator, denoted ^ Z j , is constructed and computed via stochastic simulation. A large number of samples (N) of the estimator are simulated, and the sample average, ^, is then taken as the sensitivity estimate. Its accuracy can be assessed by taking into account its bias (when present) and by constructing confidence intervals of the point sensitivity estimate in terms of the sample variance. Estimators with no or little bias and low variance are thus desired for the most accurate estimates. Several different sensitivity estimators have been proposed, each differing in its bias and variance properties. Finite difference (FD) estimators are among the most straightforward and generally applicable estimators. FD estimates are computed by first simulating the system at a nominal parameter set and then at a parameter set perturbed by a small but finite amount and then taking the FD quotient. The resulting estimate given by the sample average of many FD quotient samples has a bias that depends on the particular discretization scheme implemented. The variance of the estimates depends on how the samples are generated. A direct approach is to generate samples using independent and identically distributed random numbers (IRN), but this estimate often has high variance and requires many samples. This variance can be reduced significantly by instead generating samples that are correlated in an appropriate manner. Using common random numbers (CRN) can reduce variance significantly to increase efficiency. Although this approach combined with the direct method SSA () can be easily applied to reduce variance considerably, further gains in efficiency can be achieved by using the common reaction path (CRP) method (). CRP implements CRN with an SSA based on the random time change representation of Markov processes to reduce variance significantly. Another approach is the coupled finite difference (CFD) method (), which simultaneously simulates coupled processes for each parameter set to yield a FD estimate with highly desirable variance properties in many situations, especially when considering larger time intervals. Other approaches directly consider infinitesimal perturbations to the parameters to obtain the estimate. One such method, the Girsanov likelihood ratio (GLR), was first introduced in the context of stochastic chemical kinetics in (). This method derives numerically tractable weighting coefficients using the Girsanov measure transformation that can be computed during simulation to give an unbiased sensitivity estimate. GLR, although unbiased, often has high variance and can be inefficient in some situations. The Regularized Pathwise Derivative (RPD) method is an alternative approach that considers a close regularization of the original problem and computes the derivatives for each sample path to estimate the sensitivities (). RPD estimates are often significantly more efficient than the other methods, with variance reduction of over 10 orders of magnitude demonstrated for certain problems. A brief numerical comparison of these methods using example stochastic biochemical networks is provided in the Supplementary Material.
ImplementationSPSens implements the sensitivity algorithms summarized inin C and requires no external libraries outside the standard distributions. To run the program, the biochemical network of interest is first defined in a C source file by specifying the species, reactions and parameters, and additionally the partial derivatives of the propensity functions with respect to system parameters if GLR or RPD are desired. Several examples are provided with the SPSens distribution and can be easily modified for user-defined networks. Once the problem is defined, the code is compiled to build an executable program that can be run from the command line or using a scripting language. The sensitivity analysis algorithm can be specified within the problem file or at run-time by setting the appropriate command line flag. The sampling times, parameters and initial conditions can also be specified via command-line, permitting sensitivity analysis to be performed for a variety of conditions without the need to recompile any code. The methods using common random numbers (CRP, CRN) require special handling of the pseudo random numbers driving the SSA. Random number generation is therefore handled using the RngStream package (L'). The package supports parallel random number generation streams of long period, which are quite useful for ensuring proper synchronization of random numbers and independence of parallel streams.
Other featuresIn addition to sensitivity analysis programs, SPSens includes exact SSA that can be used to generate individual sample paths or ensembles of trajectories using the identical model definition. The command line sensitivity analysis and simulation programs are also implemented using the Message Passing Interface (MPI), permitting the programs to be run in parallel on a grid or on multi-core personal computers. SPSens includes the option to perform sensitivity analysis or simulation using antithetic sampling (AS). AS is a widely used variance reduction technique that in many cases induces negative correlation in samples to produce estimates with tighter confidence intervals. AS is easily incorporated with all algorithms in SPSens by setting a single flag from the command line. It should be noted, however, that variance reduction with AS is typically modest and that variance reduction is not guaranteed in general, so AS should be used keeping this in mind. Finally, source code allowing SPSens C-code to be compiled and run from MATLAB using the MEX interface are included with SPSens. An example m-file script is included to demonstrate how to build and call the programs from within MATLAB. Much more detailed information can be found in the User Guide provided with the SPSens distribution.
CONCLUSIONSPSens is a freely available and easy to use software package that implements efficient methods for parameter sensitivity analysis of discrete stochastic biochemical reaction networks. SPSens allows users to quickly and easily switch between algorithms to find the most efficient method for their particular problem. In general it is impossible to say which algorithm is best for a given problem, as the performance of each method depends on a number of factors. However there are some general guidelines that can be followed in practice. GLR is the only unbiased method, but it is often very inefficient and requires significant computational effort to produce accurate results. The FD methods with IRN and CRN are significantly less efficient than the CFD and CRP methods in most situations and are provided mainly for demonstration purposes. The RPD method is extremely efficient for a wide variety of problems when applicable, but requires judicious choice of the regularization parameter for efficient performance. Which of the three highly efficient methods (RPD, CFD and CRP) is most efficient will depend on the
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
SPSens at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
P.W.Sheppard et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
