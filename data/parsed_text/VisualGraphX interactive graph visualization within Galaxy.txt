Motivation: We developed VISUALGRAPHX, a web-based, interactive visualization tool for large-scale graphs. Current graph visualization tools that follow the rich-internet paradigm lack an interactive and scalable visualization of graph-based data. VISUALGRAPHX aims to provide a universal graph visualization tool that empowers the users to efficiently explore the data for themselves at a large scale. It is available as a visualization plugin for the Galaxy platform, such that VISUALGRAPHX can be integrated into custom analysis pipelines. Availability and Implementation: VISUALGRAPHX has been released as a visualization plugin for the Galaxy platform under AFL 3.0 and is available with instructions and application data at
IntroductionAny biological system carries out its function through an elaborate interaction of a multitude of molecular components that together form complex biological networks. Visualization of these networks is of great interest in modern biology as it helps to gain insight into complex biological processes.provide an overview of some of the major biological networks for which graphs are an appropriate mathematical representation (). As of today, various desktop-based applications that are able to visualize large-scale graphs exist. Most notable are CYTOSCAPE (), GEPHI () and TULIP (). In addition, the GRAPHVIZ software package provides a comprehensive collection of open-source tools for the visualization of graphs on the basis of the DOT graph description language (). It is widely distributed, because it can be called from general purpose languages via specific interfaces. However, the emergence of the internet as the default software platform triggered a shift toward Rich Internet Applications. These provide a rich and interactive user experience in a cross-platform manner through a standard web browser. Visualization of large-scale graphs benefits from this paradigm as web development technologies facilitate interactivity and scalability. TOUCHGRAPH V R (Touchgraph, LLC, USA), TOM SAWYER VISUALIZATION V R (Tom Sawyer Software, USA) and MANY EYES () follow the rich-internet paradigm and are able to visualize graph data in a sophisticated manner, but still lagging behind the possibilities offered by current web standards and are, beyond that, not optimized for biological networks. Similarly, Cytoscape Web () is a web-based network visualization tool that is modeled after Cytoscape. HYPERSCAPE () implements hypergraphs to capture complex hierarchical structures, but has its limitations in the generalization for biological networks. Nevertheless, hypergraphs provide an interesting concept both in the visualization and analysis of biological networks (). The Galaxy system for biological data analysis (), for a long time, did not offer graph visualization. Recently, an effort for the visualization of graphs (GraphVis, https://github.com/eteriSokhoyan/ GraphVis) has been integrated into the Galaxy Main instance. It is based on the cytoscape library for JavaScript (). We aim to contribute to this field and present VISUALGRAPHX for the interactive exploration of large-scale graphs in a scalable manner that utilizes current web standards to provide a rich user interaction. V C The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
ImplementationVISUALGRAPHX follows the Model-View-Controller (MVC) concept in order to isolate the data (M) from the presentation (V) and its manipulation (C).consider MVC as an architectural pattern that merely expresses the separation of concerns, while allowing it to be adapted to specific needs. It has been widely adopted as an architecture for rich-internet applications due to a variety of open-source frameworks that make use of this pattern. Although the interpretation of MVC distinguishes these frameworks from one another, the basic concept stays the same. VISUALGRAPHX utilizes the Backbone.js library for JavaScript that provides an unopinionated set of primitives to build single-page applications. The JSON graph format (http://jsongraphformat.info) is an appropriate file format for describing graphs where the nodes and edges are deposited as arrays of objects. In addition, its usage eases the processing of the data as Backbone.js provides a RESTful JSON interface. Visualization of graphs requires algorithms to determine the arrangements of its components in the multi-dimensional space. Multiple layout strategies are used in practice, but the force-directed layout () seems to be the most prominent one. In VISUALGRAPHX we use the D3 javascript (http://www.d3js.org) library, which implements the force-directed layout with a high degree of freedom using position Verlet integration. However, D3 does not offer graph traversal algorithms, which we implemented primarily as depth-first and breath-first searches.coined the information seeking mantra " Overview first, zoom and filter, then details-on-demand " , that we fulfill in both ways. In more detail, upon setting the parameters for graph depth and the start (root) node, VISUALGRAPHX starts to precompute the corresponding subgraph, which is displayed upon clicking " visualize ". Here, the precomputed subgraph can be expanded, contracted and moved by common user interactions, such as double-clicks on nodes. As opposed to other graph visualization environments this decoupling ensures a high efficient buildup of the graph, thus providing a high degree of scalability. VISUALGRAPHX achieves a high degree of flexibility as it allows nodes to be embedded as single predefined scalable vector graphics or as arbitrary external graphics when specified as Uniform Resource Locator (URL) in the nodes attributes of the JSON data. Furthermore, asynchronous method dispatch enables VISUALGRAPHX to update the subgraph without delay.
ResultsWe used VISUALGRAPHX for the visualization of the results of COVENNTREE (), which is a method for the comparative analysis of large datasets (). COVENNTREE generates a rooted tree based on the NCBI taxonomy, in which the nodes are associated with weighted Venn diagrams to illustrate the relation of the different datasets. Creation of the diagrams is outsourced, because they are given as URLs to the Google Chart API, which VISUALGRAPHX can handle directly. The output of COVENNTREE consists of a network file that defines the structure of the tree and a corresponding attribute file that contains the properties of the nodes. We wrote a tool that converts these files to the JSON graph format, namely vgx_converter installable through the Galaxy Toolshed. As VISUALGRAPHX precomputes an initial subgraph as opposed to loading the full graph at once it accelerates the buildup of large-scale graphs. Loading a graph that contains 4692 nodes and 7688 edges (mTOR_ChEMBL.jgf) with VISUALGRAPHX took 6 s, while loading into CYTOSCAPE took roughly 15 s, which corresponds to 2.5 speedup. We further increased the network size to 100K nodes/egdes for which the buildup of the graph took about 180 s. For further illustration of the general applicability of VISUALGRAPHX we visualized data from the CAUSAL BIOLOGICAL NETWORKS DATABASE (). We have converted several different biological networks from this database and deposited them in the repository for visualization with VISUALGRAPHX.
ConclusionWith VisualGraphX we present a general visualization plugin for the Galaxy platform through which it can be easily integrated in any bioinformatics pipeline where interactive graph visualization is of interest. VISUALGRAPHX has been structured with regard to the MVC concept and utilizes internal libraries of Galaxy to accurately fit to the platform. For the visualization we made use of widespread web standards that allow us to provide a more dynamic and interactive visualization of large-scale graphs than current tools. Furthermore, the structure of VISUALGRAPHX allows it to be extended for more specific use cases of graph visualization and its streaming design, where data is loaded and visualized on-demand, ensures its performance even for large scale graphs.
Funding
Bioinformatics, 2016, 13 doi: 10.1093/bioinformatics/btw414 Advance Access Publication Date: 13 July 2016 Applications Note Bioinformatics Advance Access published July 31, 2016 at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
R.A.Sch afer and B.Vo at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
