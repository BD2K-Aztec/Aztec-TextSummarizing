Motivation: Owing to recent advancements in high-throughput technologies , protein–protein interaction networks of more and more species become available in public databases. The question of how to identify functionally conserved proteins across species attracts a lot of attention in computational biology. Network alignments provide a systematic way to solve this problem. However, most existing alignment tools encounter limitations in tackling this problem. Therefore, the demand for faster and more efficient alignment tools is growing. Results: We present a fast and accurate algorithm, NetCoffee, which allows to find a global alignment of multiple protein–protein interaction networks. NetCoffee searches for a global alignment by maximizing a target function using simulated annealing on a set of weighted bipartite graphs that are constructed using a triplet approach similar to T-Coffee. To assess its performance, NetCoffee was applied to four real datasets. Our results suggest that NetCoffee remedies several limitations of previous algorithms, outperforms all existing alignment tools in terms of speed and nevertheless identifies biologically meaningful alignments.
INTRODUCTIONDiscovering functionally conserved proteins across different species is a fundamental task in comparative systems biology (). With the development of highthroughput technologies such as mass spectrometry (), microarrays (), yeast two-hybrid assays () and next-generation sequencing, a tremendous amount of genomic, proteomics and protein interaction data has been generated and became available in public databases (). This comprehensive experimental data provide a basis for analyses that aim at discovering conservation of protein function among different species, i.e. functional orthologs (FO). Orthologs are genes/ proteins of different species that have descended from the same gene in a common ancestor. The FO are orthologs whose functions are conserved in different species. It is often assumed that two proteins with similar sequences or similar structure have similar functions, and conversely that functionally related proteins have similar sequences. Based on this assumption, a number of approaches that use sequence similarity have been developed, e.g. reciprocal-best-BLAST-hits (RBH), for predicting FO. This resulted in several orthologs databases such as the Clusters of Orthologous Groups (), Inparanoid (O') and OrthoDB (). However, high sequence similarity does not necessarily indicate functional conservation. Because functional sites of proteins are usually only one or several small parts of the whole sequence, two proteins can have a highly significant overall similarity even though all functional sites are completely different (). To overcome this problem, network alignment approaches () have been proposed that supplement sequence-based algorithms with information from proteinprotein interaction (PPI) networks. Network alignment approaches can be generally classified into pairwise or multiple and into local or global approaches. Pairwise approaches align two networks and multiple approaches three and more networks. Local alignment approaches detect conserved subnetworks of two (pairwise local alignment) or more (multiple local alignment) networks. These conserved subnetworks are usually independent high-scoring local regions of the compared networks, each implying a putative functional module such as a protein complex () or a metabolic pathway (). Global alignment approaches determine an overall alignment between the input networks (). The resulting alignments can be used to transfer annotation from characterized to uncharacterized proteins. Typically, pairwise global alignment algorithms attempt to provide only a one-to-one node mapping between proteins of compared networks (), whereas multiple global alignment algorithms attempt to provide a many-to-many node mapping (). A many-to-many node mapping allows to find a set of functionally similar proteins that have descended from the same protein in a common ancestor based on four types of evolutionary events: protein deletion, protein duplication, protein mutation and paralog mutation (). For more information on the difference between local and global alignment, see the Supplementary Material. *To whom correspondence should be addressed. Many pairwise local and pairwise global alignment tools have been developed in the last decade. Among pairwise local alignment tools are PathBlast (), MaWISh (), NetworkBlast (), NetAligner (), PINALOG () and SIPINAL (). A review by Sharan et al. () extensively discusses some of these methods. Well-known pairwise global alignment tools are IsoRank (), PISwap (), MI-GRAAL (), Natalie 2.0 () and GHOST (). With the increasing availability of PPI networks, the demand for local and global alignment tools of multiple networks has risen. Several multiple alignment tools have been developed, most notably the multiple global alignment tools Graemlin 2.0 (), IsoRank-N () and SMETANA (), and the multiple local alignment tool NetworkBlast-M (). However, these tools have some limitations. Graemlin 2.0 requires a training dataset of known alignments to learn its many network-dependent parameters and a phylogenetic tree, which means it can not be applied to species without known alignments or without a phylogenetic tree. NetworkBlast-M does not work on networks containing protein nodes with large vertex degree, such as the yeast network in our test datasets. Both IsoRank-N and SMETANA need a lot of computing time for aligning six or more species. Thus, there is a demand for tools that can deal with many networks in a more efficient way. As a remedy for these limitations, we present a fast and accurate tool NetCoffee, which addresses the problem of global alignment of multiple networks. The algorithm implemented in NetCoffee has four main steps: (i) building the PPI networks and a library of bipartite graphs, (ii) assigning an integrated weight to each edge in the bipartite graphs using a triplet extension approach similar to T-Coffee, (iii) building a search space that consists of candidate edges (protein pairs) and (iv) simulated annealing (SA) with a large number of iterations of a Metropolis Scheme to maximize a scoring function for global alignments. We ran NetCoffee on four datasets consisting of up to six PPI networks. Our results show that NetCoffee overcomes the limitations of existing algorithms, outperforms all existing alignment tools in terms of speed and nevertheless identifies a biologically meaningful alignment.
METHODS
Definitions and notationLet fG 1 , G 2 ,    , G k g represent a set of k ! 3 PPI networks. Each network G i  V i , E i  is an unweighted graph, where V i is a set of nodes representing proteins and E i a set of binary interactions appearing in the networks. We refer to elements of E i as interactions to distinguish them from edges in a different type of graph below. Let V  [ k i1 V i be the union of all proteins. A match set # is a subset of V. By definition, a global alignment of the k networks is a node mapping that consists of a set of mutually disjoint match sets, f# 1 , # 2 ,    , # m g with # i \ # j  ;, 8i, j, i 6  j. A match set can contain more than one node from each network. Like a match set, a k-spine is a subset of V but contains exactly one protein from each network. In addition, two different k-spines can share nodes. In contrast to global alignments, a local alignment of k networks is a set of independent high-scoring local node mappings, each node mapping consisting of a set of k-spines ().
Generating a bipartite graph libraryGiven k species and their corresponding PPI networks, we build a bipartite graph library, which contains a graph B ij  V i [ V j , E ij  for each pair of input networks G i and G j , i j, i, j 2 f1, 2,   , kg. We use the term edges to refer to elements in E ij. To determine the sets E ij , we perform an all-against-all sequence comparison with the program BLASTP () for each pair of species, including pairs of the same species like humanhuman. Then, the set of  k1 2  bipartite graphs can be constructed by simply joining protein pairs v 1 2 V i , v 2 2 V j that have an e-value 10 7 by edges v 1 , v 2  2 E ij. In bipartite graphs B ii of the same species, we add only edges for pairs of two distinct proteins v 1 6  v 2 to E ii. This allows us to construct match sets that might reflect duplication events within a species and hence exhibit functional relation within a species.
Integration of two conservation measuresTo search for a biologically meaningful alignment, we developed a linear scoring model that assigns a weight to each edge of the bipartite graphs. The development of the scoring model was intuitively guided by two basic assumptions: (i) functionally conserved proteins are likely to have sequence similarity and (ii) interactions among orthologous proteins are likely to be conserved across species. Likewise, our scoring model consists of two independent parts for sequence and topology similarity. Given an edge e  v 1 , v 2 , we use S r v 1 , v 2  to denote a normalized sequence score and S t v 1 , v 2  to denote a normalized topology score for proteins v 1 and v 2. A combined score for the edge e is calculated with Sv 1 , v 2   S t v 1 , v 2   1  S r v 1 , v 2 , where is a user-defined parameter controlling how much of the topology score contributes to Sv 1 , v 2 . To compute the sequence-based score S r v 1 , v 2  for a pair of proteins v 1 and v 2 , we adopt a previously introduced log-ratio scoring function that uses distributions of e-values in two models, the homology model H and the null model N (). The null model includes all pairs of proteins from the input networks, whereas the homology model includes only pairs of proteins with an e-value 10 7. Given the distributions of e-values in these two models, we calculate the probabilities to observe the e-value x v1v2 of the two proteins v 1 and v 2 in the two models, Prx v1v2 jH and Prx v1v2 jN. Our normalized sequence score is the log-ratio y v1v2  log Prx v1v2 jH Prx v1v2 jN of these probabilities scaled to the range from 0 to 1 with the minimal observed log-ratio y min and maximal observed log-ratio y max of all protein pairs in the H model:To compute the topology-based score S t v 1 , v 2 , we use a triplet approach that bears similarities to the concept of overlapping weights () and T-Coffee's consistency approach () in multiple sequence alignment. Our approach is an incremental process with the final score reflecting the likelihood of a pair of proteins being topologically conserved. Initially, we set the topologybased scores of all edges in the k 2 bipartite graphs of two different species to zero. After this initialization, each of the edges has an equal right to be part of the global alignment with regard to the topology similarity.illustrates an example of species that are numbered 1 and 2. Next, we do a series of triplet comparisons as displayed ine. A triplet is a set of three PPI networks and the three involved bipartite graphs. We can construct a series of triplets by combining any three different PPI networks. A set of three nodes that are mutually connected by edges is a triplet match, e.g. fA 1 , A 2 , A 3 g in. In the process of reweighing, we consider all pairs of triplet matches that are connected by conserved interactions in all three networks, such as the edges in line with fine dots ine, and increase the score of each edge in the pair of triplet matches by one. In graphs of the same species, we set the topology-based score of all edges to zero. All edge scores of the two species 1 and 2 are illustrated in. As an example, the overall topology-based score for the two proteins B 1 and B 2 inis five, which is explained as follows: Inthe conserved interaction between fB 1 , C 1 g and fB 2 , C 2 g is confirmed by fB 3 , C 3 g, and hence the triplet matches fB 1 , B 2 , B 3 g and fC 1 , C 2 , C 3 g are completely connected by interaction edges contributing one to the score. In, the triplet matches fA 1 , A 2 , A 3 g and fB 1 , B 2 , B 3 g do not contribute because of the missing interaction edge fA 3 , B 3 g. In, the four combinations of triplet matches ffB 1 , B 2 ,contribute four to the score. For more details for this example including the other weighted bipartite graphs and pseudo-code for the triplet comparison see the Supplementary Material. After this process, each edge of the bipartite graphs has been assigned a topology-based score, which we normalize to the range between 0 and 1. However, the distribution of theses scores is extremely non-uniform, as the connectivity of biological networks follows a power-law distribution (). A few edges between hub-nodes have a topology score close to the maximal score, and many others are close to zero. For example, $90% of the protein pairs have a normalized topology score between 0 and 0.1 in our dataset 2. In contrast, 95% of the protein pairs has a normalized sequence score between 0.6 and 1. This implies that small normalized topology scores might still be statistically significant and indicate a high probability of functional relatedness. A large number of protein pairs have a small normalized topology score because the maximal score is large. Therefore, we lift the small scores up using a power-law redistribution to make sure that the topology score has a reasonable impact on the whole alignment score (for details see the Supplementary Material). This concludes the computation of the edge scores Sv 1 , v 2 , where each score now reflects sequence similarity and topology conservation.
Alignment algorithmOur algorithm for aligning multiple networks first collects candidate edges from the  k1 2  bipartite graphs. Subsequently, the algorithm combines some of these candidate edges to a global alignment with the metaheuristic method SA (). The collection of candidate edges reduces the computational complexity while retaining the sensitivity and specificity of the algorithm in praxis.
Collection of candidate edges We have givenof which formed by proteins from two different species. The weights of all edges in B ij , i5j reflect the likelihoods of the edges to be a true match of the global alignment, including information about sequence and topology conservation. We use a maximum weighted matching algorithm, namely, Edmond's Algorithm (), to find a one-to-one node mapping in each of thepartite graphs and collect the matching edges as candidate edges. Furthermore, we collect protein pairs of the same species with scores higher than a threshold  1  . The parameter is user-defined and enables our method to identify match sets formed by proteins of one species. The term 1   accounts for the fact that the topology score of these edges is always 0. We obtain a collection of candidate edges, denoted as .
Multiple alignmentTo find a multiple global alignment A , we define the scoring function A  P #2A f#, where f# is the score of a match set #  fv 1 , v 2 ,    , v j#j g. The score of # is calculated with the function f#  P i, j Sv i , v j  ij , where ij  1 if fv i , v j g 2 , otherwise ij  0. Let I be the collection of all possible global alignments. Then, the problem of multiple global alignment can be modeled as an optimization problem max A2I A. We use an SA approach to approximate the highest-scoring alignment. Unlike the strategy of progressive alignment (), which successively aligns closest pairs of networks and constructs a new network alignment, our SA approach starts with an empty alignment of all networks and runs a large number of iterations of a Metropolis scheme () to maximize A.Input: Matching edges , K, T min , T max , s Output: A solution x  with a set of mutually disjoint match sets 1: x  ;, T 0  T max , i  1; 2: while i K do 3: n  0; 4: T i  T o  iTmaxTmin K; 5: while n5N do 6: draw arbitrary sample 2 from uniform distribution; 7: x 0  updateStatex, ; 8:   x 0   x; 9: if 40 then 10: x  x 0 ; 11: else rand0, 15 expf=sT i g 12: x  x 0 ; 13: end if 14: n  n  1; 15: end while 16: i  i  1; 17: end while 18:The pseudo-code of the SA approach is given in Algorithm 1. Let x 2 I be a feasible solution (a set of mutually disjoint match-sets) for the problem and x the alignment score of x. At the beginning of the algorithm, we initialize our alignment x with ; and set a temperature parameter T 0 to its maximum. In the following annealing phase, we decrease the temperature and repeatedly perturb the current solution x with a Metropolis scheme using i / expx=sT i  as the equilibrium distribution. Parameters s, K, N, T min and T max control the SA. The updateState (x, ) updates the current alignment with an arbitrary sample  fu, vg 2. It runs into four possible scenarios. Let u= 2x indicate that 8 2 x, u= 2, and u 2 x indicate that 9 2 x, such that u 2. Then, the scenarios are (i) u= 2x and v= 2x; (ii) u= 2x and v 2 x; (iii) u 2 x and v= 2x;and (iv) u 2 x and v 2 x, but u and v are not in the same match set. In the first scenario, u and v are added to the current alignment x as a new match set. In the other scenarios, u and v are moved to the same match set of the alignment x in two possible ways, called combination and substitute. Details are described in the Supplementary Material. We continue this process until the 'temperature' T i decreases to T min .
Complexity analysisWe assume that the number of proteins in the largest PPI network is n, and the number of input networks is k. The pseudo-code of the triplet approach (see Supplementary Material) has a complexity ofSuppose there is a bipartite graph, B s  V s1 [ V s2 , E s , the running time complexity of Edmond's Algorithm on B s is OjV s1 [ V s2 j log jE s j. Therefore, the collection of candidate edges costsThe convergence time of SA has been a widely studied question in the last two decades. We assume   maxfx 0   xg, where x 0 is a neighbor state of state x. As shown by the proof in, SA converges (at any temperature) in time 2d exp=sT D , where D is the diameter, d is the degree of the underlying Markov chain and is defined by the convergence probability ! 1  2  . Theoretically, D and d are hard to calculate. However, in practice, the complexity of SA only depends on two parameters of the cooling scheme, K and N. From Algorithm 1, we can easily find that the complexity is K  N, which is independent of the number of compared species k. To sum up, practically, NetCoffee is able to deal with multiple networks and has a favorable time complexity. Our results show that the alignment score converges rapidly in our experiments (see Supplementary).
RESULTS AND DISCUSSION
Test datasetsWe have evaluated NetCoffee on three datasets of up to five eukaryotic species and one dataset of six microbes as shown in. The five eukaryotic species include Homo sapiens (human), Mus musculus (mouse), Dorsophila melanogaster (fruit fly), Caenorhabditis elegans (nematode) and Saccharomyces cerevisiae (yeast). The six microbes include Escherichia coli, Salmonella typhimurium, Vibrio cholerae, Campylobacter jejuni NCTC 11168, Helicobacter pylori 26695 and Caulobacter crescentus. To build the five eukaryotic networks of dataset 0, 1 and 2, we collected all experimentally determined interactions from the public database IntAct (). In addition, we collected the reference proteome sets of the five species from UniProtKB/Swiss-Prot release 2012 07 (), which are used for all-against-all sequence comparisons. To make sure the proteins in our networks are non-redundant and well-annotated, we discarded interactions between proteins that are not in the reference proteome sets. The number of proteins and interactions of these PPI networks are given in. Dataset 3 is the same dataset used in the original publication of Graemlin 2.0 (). For analyzing the biological quality of the alignments, gene ontology (GO) information was collected from UniProt-GOA () (downloaded on Jan. 8, 2013) to annotate proteins with the three basic types of ontologies: biological process (BP), molecular function (MF) and cellular component (CC). To exclude unreliable function annotations, GO annotations with evidence codes IEA (inferred from electronic annotation) and ISS (inferred from sequence or structural similarity) were discarded.
Experimental setupWe have implemented NetCoffee in C using the LEMON Graph Library () version 1.2.3. The implementation supports multicore parallelism for the triplet comparison. We ran NetCoffee on all four datasets and tuned its SA parameters such that the SA process converges to a stable score (see Supplementary). The default values are now s  0:005, K  100, N  2000, T min  10, T max  100 and  1:0. To compare NetCoffee with the state-of-the-art algorithm IsoRank-N, we executed IsoRank-N on the same datasets with recommended parameters: K  20, thresh  10 4 , maxveclen  10 6. Additionally, NetworkBlast-M, Graemlin 2.0 and SMETANA were included in our assessment. However, NetworkBlast-M is unable to work on dataset 0, 2 and 3 for two reasons. First, the yeast network has proteins with up to 3276 interactions, which is prohibitive for NetworkBlast-M. Second, NetworkBlast-M requires e-values as a protein similarity measure, but dataset 3 provides only bitscores. Furthermore, we ran Graemlin 2.0 only on dataset 3 because it needs additional training data (i.e. known alignments for the compared species) to learn its parameters. Because Graemlin 2.0 identifies match sets whose proteins are from a single species, we set  0:7 for dataset 3 to allow a fair comparison with Graemlin 2.0. We input the networks of the species in the same order for all programs, namely, the order from. Only the results of IsoRank-N depend on the order of input species. All experiments mentioned in the following parts were carried out on the same machine, an Intel(R) Xeon(R) CPU X5550 with 2.67GHz.
Performance comparisonWe demonstrate the quality of our alignments in terms of coverage and consistency and assess the performance of our method by measuring running times. Coverage, which serves as a proxy for sensitivity, indicates the amount of input data the algorithm can explain. Consistency, which serves as a proxy for specificity, measures the functional similarity of proteins in each match set. Coverage can be easily achieved by sacrificing consistency and vice versa. The running time demonstrates the ability of NetCoffee to deal with large datasets. Intuitively, the goal is to find a global alignment that has a good consistency while explaining as many proteins as possible (i.e. high coverage) in reasonably short time. We first look at differences the programs exhibit in coverage and then investigate the consistency of the match sets with three measures. Next, we compare running times and, finally, demonstrate how much NetCoffee benefits from the integration of similarity and topology score by addressing the influence of the parameter .
CoverageFor each program, we calculated the percentage of proteins (PPV) in the whole set of proteins that are covered by the alignment as the coverage (see). In comparison with IsoRank-N and NetworkBlast-M, the coverage of NetCoffee is significantly higher. For instance, the PPV of NetCoffee is up to 41.8% for dataset 1, whereas it is only 31.1% for IsoRank-N and 16.1% for NetworkBlast-M. The lower coverage of these two alignment tools can be explained by the facts that NetworkBlast-M is a local aligner and, thus, considers only conserved modules; IsoRank-N aligns proteins of at least three species into match sets and does not report match sets of proteins from only two species (These match sets can be recognized by running the pairwise aligner IsoRank on each pair of species.) (see an example in Supplementary Table S1). In comparison with Graemlin 2.0, NetCoffee also has a slightly higher PPV value except for the extreme case of  1. When  1, sequence scores of all pairs of proteins are set to 0 in NetCoffee. As a result, all protein pairs from a single species are excluded from the collection of candidate edges and consequently from the alignment. Hence, the coverage drops to 69.7% for dataset 3. In comparison with SMETANA, the coverage of NetCoffee is similar. NetCoffee achieves a lower PPV for dataset 0, 1 and 2, but a higher PPV for dataset 3. Concerning the number of match sets, IsoRank-N identifies more match sets formed by proteins from three of the compared species, and both Graemlin 2.0 and SMETANA find more match sets for dataset 3 than NetCoffee except for  1 (see Supplementary).
ConsistencyAn alignment tool that achieves a high coverage is not necessarily better than others. For example, a random global alignment may cover all proteins but aligns many unrelated proteins. Hence, we now address the performance of the alignment tools in terms of consistency. Consistency demonstrates the biological significance of predicted match sets. As a first consistency measure, we computed the mean entropy and the mean normalized entropy of the predicted match sets in the alignments of each algorithm. We calculated the entropy of a match set with the same method as in IsoRank-N according to its GO annotations. A match set has lower entropy if its GO annotations are more functionally coherent. From, we can see that the entropy of NetCoffee is considerably lower than that of IsoRank-N and NetworkBlast-M no matter which was used, whereas at the same time having a high coverage. Additionally, the entropy of NetCoffee is lower than that of SMETANA on all datasets except for dataset 3. In comparison with Graemlin 2.0, NetCoffee achieves nearly identical entropy results for dataset 3, whereas being considerably faster. The results for  0 and  1 demonstrate that both of our two conservation measures can favorably predict the functional relatedness between protein pairs. Dataset 3 exhibits an interesting trade-off using the parameter in terms of coverage and consistency. For  1, NetCoffee has the lowest entropy, however, at the cost of a much lower coverage. Decreasing improves the coverage while deteriorating the entropy measure. This behavior is less pronounced for the other datasets. However, it shows that the parameter can be used for having a specificity versus sensitivity trade-off.Second, we assessed consistency by three elaborate semantic similarity measures introduced in): BPscore, MFscore and rfunSim. Unlike many existing approaches () that simply evaluate functional similarity by counting the number of common GO terms of involved proteins, BPscore and MFscore assess the functional similarity of two proteins by exploiting BP and MF annotations with the GO hierarchy tree. The measure rfunSim is a combination of BPscore and MFscore (for details see the Supplementary Material). We report the arithmetic mean of the similarity scores of all involved protein pairs as the functional consistency of a match set. For instance, given a match set #  v 1 , v 2 ,    , v j#j , the functional consistency of # with respect to the BP annotation is defined asAnalogously, we can calculate MFscore and rfunSim. All three scores range from 0 to 1, which translates into an increasing degree of functional similarity. We calculated the scores using the functional similarity search tool (FSST) (). To avoid skipping too many meaningful match sets, match sets that contain 540% uncharacterized proteins were also taken into consideration. We separately compared match sets that contain proteins from 3, 4 and 5 species. And the distribution of match sets in each category can be seen in Supplementary Table S1. We compared the consistency of NetCoffee with that of IsoRank-N (see) and SMETANA (see Supplementary) on their alignments of dataset 2. As shown inc, when 40, the BPscore of NetCoffee is higher than that of IsoRank-N, and the MFscore and rfunSim are roughly the same. More importantly, the advantage of NetCoffee expands when i (i.e. the number of species) increases to 4, as shown inf, although it identifies more matchsets. NetCoffee shows significant improvements with regard to the BPscore, MFscore and rfunSim except for the case of  0. When  0, IsoRank-N reaches its highest point. However, we do not recommend to use  0 for IsoRank-N, as its coverage drops to only 21.9%. For i  5 illustrated ini, IsoRank-N improves the quality of match sets in terms of BPscore. The two algorithms are comparable in terms of MFscore and rfunSim. However, NetCoffee identifies $38 times more match sets than IsoRank-N (see Supplementary). Compared with the alignment of SMETANA, match sets identified by NetCoffee have lower semantic scores for i  3 but roughly the same scores for i  4 and i  5 (see Supplementary). Finally, we measured the consistency by computing the percentage of qualified match sets the algorithms identified. As demonstrated in, almost 60% of protein pairs in the Inparanoid Orthologs (IO) dataset has an MFscore 40.8 and 65% has a BPscore 40.6. Therefore, we regard those match sets that have an MFscore 40.8 or a BPscore 40.6 as qualified match sets, i. e. functionally related proteins. With these thresholds, $45% of the match sets recognized by NetCoffee are qualified match sets (see Supplementary), which is significantly more than those identified by IsoRank-N ($25%) and more than those identified by SMETANA ($42%). Visualizations of the GO trees for each qualified match set [drawn using the package GO::TermFinder 0:0  0:3  0:4  0:5  0:6  0:7  1:0  0:0  0:3  0:4  0:5  0:6  0:7  1:0Note: The five algorithms NetCoffee, IsoRank-N, NetworkBlast-M (NBM), Graemlin 2.0 (Gr. 2.0) and SMETANA (SME) were tested on the four datasets. The rows list the PPV, mean entropy (ME), mean-normalized entropy (MNE) and the running time. D-x in the first column represents the test dataset, Dataset-x. S, m and h in the row of time represent seconds, minutes and hours. Bold face numbers represent the best performance with respect to each row. The parameter of in both NetCoffee and IsoRank-N demonstrates the percentage of the topology score contributing to the whole-alignment score. And '-' indicates is not a parameter of the corresponding aligner, '*' means the corresponding aligner is not applicable in this dataset.(and more information of the alignment with  0:3 are available for download from https://code.google. com/p/netcoffee/downloads/list.demonstrates that our method is robust to the parameter in terms of running time. The running time of IsoRank-N, however, increases dramatically when grows. Specifically, NetCoffee is $13 orders of magnitude faster than IsoRank-N, 37 times faster than NetworkBlast-M, 82 times faster than Graemlin 2.0 (including training time) and 226 times faster than SMETANA. We chose to report the results achieved with multiple cores (i.e. eight cores) because they are the real running time for NetCoffee. NetCoffee is still faster than its competitors even on a single core except for SMETANA (see Supplementary Table S2).
Running time
Influence of the parameter To figure out howmuch the alignment tools benefit from the topology and sequence score, we ran both NetCoffee and IsoRank-N with various values. If  0, the global alignment is constructed only based on sequence score, and if  1, only based on topology score.anddemonstrate that NetCoffee is robust to the parameter in terms of coverage, consistency and speed, and that the parameter can be used for having a specificity versus sensitivity trade-off. Both the topology and the sequence score favorably predict functional relatedness between protein pairs. However, using either sequence score or topology score alone is not favorable for the coverage of IsoRank-N as shown in. Furthermore, the alignment quality and the computing time depend on .suggests that the performance of IsoRank-N tends to be best at a value of  0:3.
CONCLUSIONWe have proposed a fast and accurate algorithm for global alignment of multiple networks. It overcomes several limitations of existing tools by aligning multiple networks without additional. Consistency comparison on dataset 2 between NetCoffee (gray boxes) and IsoRank-N (white boxes). Box plots for the semantic similarity measures BPscore, MFscore and rfunSim of match sets conserved by i 2 f3, 4, 5g species, with respect to the parameter (the horizontal axis) training data, finding a global alignment of six species within several minutes and scaling to networks with tens of thousands of proteins and interactions. Further, it is the first alignment tool that can run with multiple cores in parallel. We rigorously combine protein sequence similarity and network topology similarity into a suitable scoring scheme for multiple networks, adapting a successful technique from multiple sequence alignment. This allows us to model the problem as a combinatorial optimization problem, which we solve with SA. On PPI networks of five eukaryotic species, such as human, mouse, fruit fly, nematode and yeast, our implementation NetCoffee successfully finds a global alignment covering $50% of the proteins; and $45% of the match sets are qualified. We compared NetCoffee with four existing tools, three of which fail to run on at least one of the three test datasets in our benchmark. The results indicate that NetCoffee outperforms the state-of-the-art algorithm IsoRank-N in terms of coverage and consistency, and at the same time is $13 orders of magnitude faster. Compared with NetworkBlast-M, Graemlin 2.0 and SMETANA, NetCoffee not only overcomes their limitations but also retains the quality of alignments in terms of both coverage and consistency. This suggests that NetCoffee provides substantial improvements to global network alignment and that the research community working on function annotation and phylogenetic analysis can benefit from it. Further, its application is not restricted to PPI networks. It could also be extended to other types of complex networks, such as Scientific Collaboration Networks (SCN) and World Wide Web Networks (WWWN).
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
NetCoffee at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
J.Hu et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
