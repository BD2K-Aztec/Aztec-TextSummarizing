Elementary flux modes (EFMs) are important structural tools for the analysis of metabolic networks. It is known that many topologically feasible EFMs are biologically irrelevant. Therefore, tools are needed to find the relevant ones. We present thermodynamic tEFM analysis (tEFMA) which uses the cellular metabolome to avoid the enumeration of thermodynamically infeasible EFMs. Specifically, given a metabolic network and a not necessarily complete metabo-lome, tEFMA efficiently returns the full set of thermodynamically feasible EFMs consistent with the metabolome. Compared with standard approaches, tEFMA strongly reduces the memory consumption and the overall runtime. Thus tEFMA provides a new way to analyze unbiasedly hitherto inaccessible large-scale metabolic networks. Availability and implementation: https://
IntroductionAn elementary flux mode (EFM) is a steady-state pathway that consists of an indivisible set of reactions (). EFMs permit a system wide analysis of metabolism and can be used to identify engineering targets (). Different approaches were published to calculate EFMs in large metabolic models. For instance,split a metabolic network into subnetworks and calculated the EFMs for each subnetwork in parallel. Others only enumerated the set of the shortest EFMs () or randomly sampled the full set of EFMs (). A complete EFM analysis for large genomescale models is still out of reach as the number of EFMs increases dramatically with the size of the metabolic network () requiring inhibitingly large computing resources. To tackle this problem the biological relevance of EFMs needs to be taken into account as only a small set of EFMs are biologically relevant (). Therefore, tools are necessary to find those subsets of (biologically) relevant EFMs.enumerated only those EFMs that were consistent with a given transcriptional regulatory network. Here, we use a network-embedded thermodynamic (NET) analysis () to detect and remove thermodynamically infeasible EFMs already during their enumeration. Thermodynamic EFM analysis (tEFMA) applies the NET principle and uses metabolite concentrations and the compounds' Gibbs energy of formation to determine the energy surface of an EFM. At a constant pressure a biochemical reaction only proceeds spontaneously if its Gibbs free energy of reaction is negative (). If the thermodynamic information is available for a reaction, it can be tested for its thermodynamic feasibility. tEFMA does not only analyze the feasibility of an isolated reaction, but considers the Gibbs free energy of reaction for all reactions contributing to an EFM. tEFMA is computationally much more efficient than a sequential approach, where an ordinary EFM analysis is followed by a NET analysis (). The reason for this is that tEFMA checks the feasibility of (intermediate) EFMs continuously and eliminates infeasible ones during the enumeration process. This reduces the computational costs significantly.
ImplementationWe extended the open source program 'efmtool' () and implemented the usage of metabolomics data. efmtool uses the double description method () to enumerate EFMs. This method computes EFMs iteratively. At each iteration, a new reaction is processed and EFMs are updated accordingly. The process stops when all reactions of the network have been processed. We integrated our extension at the beginning of each iteration step. Before EFMs are updated and new ones are created, the program tests each intermediate EFM for its thermodynamical feasibility using a linear program:s:t: D r G i 0; 8i 2 suppe k  (1b)According to the second law of thermodynamics every active reaction i has a negative Gibbs energy D r G i. This applies not only for a single reaction but also in context of a whole pathway, i.e. an (intermediate) EFM, e k (Eq. 1b). D r G is calculated using the transformed Gibbs energies, D f G 0 j , of the participating metabolites in respect to their stoichiometric coefficient, S ji (Eq. 1c). D f G 0 values dependent on the standard transformed Gibbs energy of formation, D f G j 00 , the molar gas constant, R, the temperature, T, and the concentration of the metabolite, c j , (Eq. 1d), which are allowed to vary within a given concentration range (Eq. 1e). As any solution showing the thermodynamic feasibility of an EFM is fine, we do not need to search for an optimum (Eq. 1a). As soon as an (intermediate) infeasible EFM is found it can be removed from the analysis without impacting feasible EFMs. The new features are accessible via additional command line arguments:-conc takes the concentration file. Each line in this file contains the speciesID of the network, the name of the species in the thermodynamic property file, and the minimum and maximum concentration in the following format: speciesID;thermodynamic name;minimum;maximum; The thermodynamic property file is taken by the argument-thermo. Each line contains the D f G 0 value, the charge and the number of H atoms for each charge state of the metabolite in the following format: thermodynamic name,. .. Optional parameters are-cmin and-cmax for default minimum and maximum concentration values.-ph,-temperature and-ionstrength for defining pH, temperature and ionic strength of the environment, respectively. With the parameter-thermothreads the number of threads for the linear program can be chosen. Infeasible patterns, the linear problem and its variables are written to the files given by-pattern,-lpfile and-lpvar.
ApplicationsWe tested our tool on an Escherichia coli core model (), consisting of 53 intracellular metabolites and 155 irreversible reactions. We used published metabolite concentrations for E.coli grown on glucose, glycerol and acetate (). D f G 0 values were retrieved from eQuilibrator (). Measured concentration ranges were available for 28 metabolites. For 23 metabolites no measured values were available and default ranges (10 7 1 M) were applied. For two metabolites no D f G were available. Reactions to which these two metabolites contributed were not checked for thermodynamic consistency to avoid false positives. Thus, uncharacterized reactions were assumed to be thermodynamically consistent with all other reactions. As a reference, we used the complete set of EFMs without considering any thermodynamic data. We note that any extension of the core model used here will only add more EFMs to the system but will not change the (in)feasibility of already existing EFMs. All runs were performed on a computer with 2 Intel Xeon CPUs (12 cores each) and a total of 378 GB of RAM using 10 threads for EFM enumeration and 18 threads for thermodynamic checks.compares the performance of tEFMA with an ordinary EFM analysis. The number of feasible EFMs decreased by up to 65%, the runtime decreased by up to 75% and the RAM usage decreased by up to 77%. We verified that a sequential approach, i.e. an ordinary EFM analysis followed by a NET analysis (), identified an identical set of infeasible EFMs, yet without harvesting any computational savings. More importantly, we were able to interpret all infeasible EFMs predicted by tEFMA in terms of known infeasible pathways (see Supplementary). tEFMA did not falsely identify any feasible pathway to be infeasible ().
ConclusionBy integrating the metabolite concentrations into the EFM enumeration we killed two birds with one stone. First, we strongly reduced the memory usage and the runtime of the EFM enumeration. Second, we got a step further to only calculate the set of biological relevant EFMs. Both points are essential to reach the final goal of calculating EFMs in large, genome-scale models. We stress that tEFMA greatly reduces the computational costs. Thus an EFM analysis of medium-scale models become possible already on current high-end personal computers and no longer requires a dedicated high performance computing environment.Numbers in brackets list the percentage compared to EFMA.
tEFMA
Bioinformatics, 31(13), 2015, 22322234 doi: 10.1093/bioinformatics/btv111 Advance Access Publication Date: 19 February 2015 Applications Note at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
M.P.Gerstl et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
