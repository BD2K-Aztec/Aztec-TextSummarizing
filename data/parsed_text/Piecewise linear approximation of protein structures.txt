Simple and concise representations of protein-folding patterns provide powerful abstractions for visualizations, comparisons, classifications, searching and aligning structural data. Structures are often abstracted by replacing standard secondary structural features—that is, helices and strands of sheet—by vectors or linear segments. Relying solely on standard secondary structure may result in a significant loss of structural information. Further, traditional methods of simplification crucially depend on the consistency and accuracy of external methods to assign secondary structures to protein coordinate data. Although many methods exist automatically to identify secondary structure, the impreciseness of definitions, along with errors and inconsistencies in experimental structure data, drastically limit their applicability to generate reliable simplified representations, especially for structural comparison. This article introduces a mathematically rigorous algorithm to delineate protein structure using the elegant statistical and inductive inference framework of minimum message length (MML). Our method generates consistent and statistically robust piecewise linear explanations of protein coordinate data, resulting in a powerful and concise representation of the structure. The delineation is completely independent of the approaches of using hydrogen-bonding patterns or inspecting local substructural geometry that the current methods use. Indeed, as is common with applications of the MML criterion, this method is free of parameters and thresholds, in striking contrast to the existing programs which are often beset by them. The analysis of results over a large number of proteins suggests that the method produces consistent delineation of structures that encompasses, among others, the segments corresponding to standard secondary structure.
INTRODUCTIONWith the rapid growth in the corpus of known structures, concise representations are increasingly preferred to inspect and analyze protein folding patterns (). At the core of this simplification is the idea that proteins contain repetitive substructural elements and that the essence of a fold lies in the assembly and * To whom correspondence should be addressed. interaction of these elements (). The appearance of some of these elements arises from the periodicity in the patterns of hydrogen bonds between backbone nitrogen and carbonyl groups along the protein polypeptide chain. Among the standard secondary structure definitions are: helix (-helix, -helix and 3 10-helix) and strand of sheet (). Ideally, the spatial trace of -Carbon (C  ) atoms of standard secondary structure show a linear trend allowing them to be abstracted using vectors or line segments, without much loss of structural information about the fold. The common practice is to fit an axis to a helix and a least-square line to C  or main chain atoms of strands of sheet (). Replacement of secondary structural elements with line segments is therefore one of the common methods to abstract protein structures and construct concise representation of their folding patterns. The number of standard secondary structural elements observed in a protein is typically an order of magnitude smaller than the number of residues in a chain. Therefore methods that utilize concise representations clearly benefit from a massive space and computational saving, especially when comparing and analyzing structures on a large scale (). Methods that abstract protein structure at the level of secondary structure generally rely on external programs that can automatically assign secondary structures to coordinate data. However, accurate identification and assignment of secondary structure is an inexact process (). Although definitions based on hydrogen bonding provides some rigor in assigning secondary structure, the standard definition of what constitutes a hydrogen bond is based on the notion of bond energy whose measurement can be imprecise and acutely sensitive even to small differences in the position of nitrogen and carbonyl atoms, especially the carbonyl oxygen positions. Two popular programs that use hydrogen bonding as a basis for assignment of secondary structure are DSSP () and STRIDE (). On the other hand, secondary structure can be defined using geometric features such as distances and dihedral angles of C  atoms along the backbone in addition to other local structural features. In fact, there is a direct correlation between patterns of hydrogen bonding and the geometry that arise out of them. However, secondary structural elements can deviate substantially from ideal geometry, therefore posing severe challenges to detect such elements using geometric features alone. Among the methods that rely primarily on geometry to assign secondary structure arePage: i44 i43i51
A.S.Konagurthu et al.(). (Seefor details of popular programs that assign secondary structural elements.) We note that previous comparative studies have highlighted the difficulties of existing programs to assign consistently secondary structure to coordinate data and have proposed using a 'consensus' definitionsecondary structure assignment that is at the intersection of all the methodsto arrive at a reliable simplification of protein structures (). The main goal for abstracting protein structures must be to achieve maximal economy of description with minimal loss of structural information (). However, simplifying structures at the level of standard secondary structure is lossy because the loop regions are ignored. Therefore, a reliable method that achieves the above goal and that is tolerant to measurement error and noise is preferred. Even better would be a method entirely independent of preconceived notions of what substructures are being sought. Here, we describe a method that generates a principled abstractions of protein structures. Our method uses the rigorous statistical framework of minimum message length (MML). In fact, the realization of the goal to maximize economy and minimize loss of information fits squarely into the MML criterion, making it extremely well-suited for this specific problem. In this work, we treat a protein as an ordered list of C  coordinates. Our method uses an information-theoretic approach to explain as a line segment the points between any pair of residues in the structure. Each such explanation is encoded in a certain number of bits (or code length). Using these code lengths, a globally optimal explanation is computed which minimizes the total encoded (message) length of the given coordinate data. The code lengths contributing to this minimum message length result in the best piecewise linear approximation of the structure. In a stark contrast to the existing methods, our method is completely free of parameters and thresholds. We emphasize that our method is not a method for delineating secondary structures. However, as expected from such a method, our results show that the line segments generated by this method correspond well with standard secondary structures of proteins. We note that this article generalizes to three dimensions the work of, who described a polygonal approximation method on general two dimensional sequence of points. 1 Indeed, it can be shown that our method described in this paper can be generalized to arbitrary dimensions and other types of structural data (over and beyond proteins). We have attempted to keep the notations in this paper consistent with those described in the work offor the convenience of the reader. Section 2 briefly summarizes the MML framework, followed by Sections 36 which describe the mechanics of our approach. Section 7 presents an analysis of the results of our method over a large number of protein structures.
THE MINIMUM MESSAGE LENGTH FRAMEWORKWallace and Boulton (1968) first proposed the theory of MML, where given a set of competing hypotheses (or models) that can explain some observed data, the MML criterion provides a statistically rigorous framework for selecting the best hypothesis to describe the data. In many ways, MML is a formal informationtheoretic realization of the principle of Occam's razor. Assume there are some observed data D and some hypothesis H that explains the data. From Bayes's theorem we getwhere p(H&D) is the joint probability of data D and the hypothesis H, p(H) is the prior probability of hypothesis H, p(D) is the prior probability of data D, p(H|D) is the posterior probability of H given D, and p(D|H) is the likelihood. MML applies the remarkable result from Shannon's 'Mathematical Theory of Communication' () that, given an event E with a probability p(E), the message length, l(E) for an optimal code is given by l(E)bits. Carrying this insight to the Bayes's theorem, we get the following relationship between conditional probabilities in terms of optimal message lengths.The essence of inductive inference is to fit a model to a mass of observed data. For such an approach it is the hypothesis H with the largest posterior probability p(H|D) that is often preferred. Among the terms in the above equation, p(H) (and hence l(H)) can usually be estimated well for some reasonable prior on hypotheses. At the same time, the likelihood p(D|H) can also be estimated. But to estimate the posterior probability distribution p(H|D), the prior of observed data p(D) will be needed. Estimating p(D) can be problematic and even impractical. However, for two competing hypotheses, H and H we have l(H|D)l(H |D) = l(H)+l(D|H)l(H )l(D|H ), thereby eliminating the necessity to estimate p(D) completely when comparing hypotheses. MML is best understood through a communication process where a transmitter and a receiver are connected through one of Shannon's communication channels. The objective is that a transmitter must send some data D to the receiver. The transmitter and receiver must have previously agreed on a set of rules (that is, a code book) of communication using common knowledge and prior expectations. If the transmitter can find a good hypothesis, H * , to fit the data, (s)he will be able to transmit the data economically. In MML, an explanation of the data comes as a two part message:(1) transmit the hypothesis H * taking l(H * ) bits, and(2) transmit the observed data D given H * taking l(D|H * ) bits. Such a message paradigm ensures complete transparency in communication. That is, any information that is not common knowledge cannot be included except as a part of the message sent by the transmitter. Otherwise, the message sent will be indecipherable
i44
Piecewise linear approximation of structures using MMLby the receiver. There can be no hidden parameters in this framework of communication. In fact, this issue extends to stating and inferring real-valued parameters to an 'appropriate' level of precision, which is pertinent to the current problem on hand. The MML framework additionally offers 'safety' in that if an inefficient code is used to encode a message, it can only make the hypothesis look less attractive than otherwise. Note that MML yields a natural hypothesis test: the null-model corresponds to transmitting the data raw. If a stated hypothesis takes longer than what is required by a null-model, then clearly such an hypothesis is unacceptable. A more complex hypothesis fits the data better than a simpler model, in general. We see that MML encoding gives a trade-off between hypothesis complexity (l(H)), and its goodness of fit to the data (l(D|H)). Therefore, MML criterion formally justifies and realises Occam's razor. An important aspect of MML framework is that it is tolerant to measurement accuracy and noise in the underlying data. For a justification of this and a comprehensive study of the principle of MML, refer ().
FORMULATING THE PROBLEM USING MINIMUM MESSAGE LENGTHA protein P ={P 1 , ,P n } is a sequence 2 of n three-dimensional points corresponding to the coordinates (in R 3 ) of C  atoms along the protein backbone, from its N-to C-terminus. 3 Define a piecewise linear approximation of P as a subsequence of k  n points from P of the form, and the first and last points of Q are the same as the first and last points of P (i.e.). Given some subsequence Q of sequence of points P, the protein can be approximated (or simplified) using line segments drawn between every successive pair of points in the subsequence, Q r and Q r +1 , 1 r < k. We will use the term delineation to describe this piecewise linear approximation. Further, we will use the term endpoint to describe any point in Q. This is because any pair of consecutive points,+1 , form endpoints for abstracting the points between P i r and P i r +1 (inclusive) in the protein with a line segment. Note that a subsequence Q with k endpoints yields a delineation containing k 1 line segments between successive endpoints. The goal this article is to find the best delineation of a given set of coordinate data, where the objective to select the best comes from defining the problem using the minimum message length criterion. Consistent to the communication process described in Section 2, the transmitter explains the data in P with a hypothesis Q and sends it as a message whose code length is globally minimum over all possible hypotheses. Receiver will then able to infer the entire data P from the received message to a reasonable level of precision using the general rules they have agreed upon as a part of the code book.For the problem of delineating a structure from coordinate data, the transmitter will send the following two part message (refer Section 2):(1) The first part is the subsequence of points Q which denotes the delineation of P. This is equivalent to transmitting the hypothesis Q in l(Q) bits.(2) The second part will contain the remainder of points in P (that is, P Q) that weren't sent in the first part. In other words, these are the points in P that are between the endpoints stated in Q. The statement of these points will be encoded as spatial deviations with respect to the line segments between endpoints. This is equivalent to transmitting the observed data P given the hypothesis Q over l(P|Q) bits.Therefore, as a part of the codebook, the transmitter and receiver must have agreed upon the encoding of the endpoints in Q and the encoding of deviations of points P Q explained by line segments between successive endpoints in Q. Since the coordinate data of proteins is available at some fixed precision, the transmitter and receiver agree on the specific precision at which the data should be sent. We emphasize that the encoding of the above should allow the receiver to decode the message to the agreed precision.
CODE LENGTH TO STATE THE DELINEATION AND DATA UNDER MML CRITERIONIn this section, we will discuss the statement and transmission of the two part message described in Section 3.
Encoding the first part of the messageThe first part pertains to the transmission of the delineation Q containing k endpoints. The transmitter must therefore state the number of points k. There are several optimal universal prefix codes available to encode integers. Here, we use an asymptotically optimal Elias omega code which encodes the integral value k in log * k bits 4 (). Next, the coordinates of all endpoints are to be encoded. Each endpoint is a set of three real numbers of the form x,y,z . Published protein coordinate data contain three putatively significant figures after the decimal point, in Angstrom () units. The transmitter can scale this data to one decimal precision and treat the coordinates as integers. Now, an optimal code to send these coordinates is for the transmitter to first send the coordinates of a bounding rectangular box, x min ,y min ,z min and x max ,y max ,z max over all possible values of x, y and z in the given data. Once this bounding box is specified, any (x,y,z) coordinates within the box can be coded in log(x max x min )+log(y max y min )+log(z max z min ) = log (x max x min )(y max y min )(z max z min ) = logV bits, where V is the volume of the bounding rectangular box. It follows from here that all the k endpoints in Q can be stated in k logV bits. 5 Therefore, the message length to state the first part of the transmission requires log * k +k logV bits.
A.S.Konagurthu et al.
Encoding the second part of the messageIn the second part, the transmitter has to encode the data, P Q, between endpoints stated in the first part of the message. For a successive pair of endpointsin Q, there are j i1 intermediate points between P i and P j in P. In this work, these intermediate data points will be treated as noisy samples and will be stated as a set of spatial deviations with respect to the line segment between P i and P j. If such a scheme is used to communicate the second part of the message, for each line segment in Q between successive endpoints, the second part of the message will encode the following information:(1) the number of points explained by the line segment.(2) three spatial deviations for each intermediate point with respect to the line that will allow the receiver to recover the original location of the intermediate point up to a reasonable approximation.(3) the parameters of the probability distribution associated with each of the three sets of spatial deviations, over all intermediate points. To explain the encoding of this part more clearly, consider. Let L ij denote the line segment between two successive endpoints in Q, Q r  P i and Q r +1  P j. This line will be used to explain the intermediate points P i+1 P j1  P. For any intermediate point P r , i+1  r  j 1, define three spatial deviations s r ,t r and u r. In the reverse order, u r is the signed distance of P r to the plane defined by vectors P j P i and z-axis. To define t r , first project P r to the plane defined above. Call this projection point P r. Given this projection, t r is the signed perpendicular distance of P r to the line L ij. Finally, the deviation s r is the (unsigned) lateral distance along the line L ij between points of projection of P r1 and P r onto the line (). (Refer the supplementary note containing a discussion on these deviations under arbitrary rotation of the coordinates.) Note that once the endpoints P i and P j are specified, and given the sets of spatial deviations s r 's, t r 's and u r 's for the intermediate points P r ,i < r < j, the receiver can entirely recover the coordinates of all intermediate points. In this work, we assume the three spatial deviations s's, t's and u's of the intermediate points to be independent and normally distributed. Individual variables of each distribution are considered independent and random. (See supplementary note for a discussion on these assumptions.) Given these assumptions we have three distributions of the form:, where  and  2 are the mean and variance of the respective normal distributions. For the structural coordinate data, we assume that the mean of the distributions of t's and u's is zero: t  N (0, 2 t ), and u  N (0, 2 u ). Therefore, to communicate the three distribution, the transmitter has to state the following four parameters:Consider the calculations of these parameters. For the line L ij , there are j i1 intermediate points. Represent this quantity by the variable m ij. Thenwhere D ij is the Euclidean distance between P i and P j. Note that once the endpoints are transmitted (see Section 4.1), the receiver can deduce the value of  s requiring no explicit statement for this parameter in the message. This reduces the number of parameters to be stated from four to three:. We will now compute the code lengths to state the variance of three normal distributions. Variance for a Gaussian distribution is simply 'mean squared minus squared mean':, since  t =  u = 0. We note that the code length for each parameter varies with 1 2 logm ij bits. [See Chapter 5 of (. With the parameters of the distributions encoded, we will now compute the code lengths required to state the individual values of s's. Since we have assumed that the distribution is a Gaussian, the probability distribution of a random variable s r with parameters  s and  s 2 is given by:Since we assumed that variables are independent, we havePage: i47 i43i51
Piecewise linear approximation of structures using MMLThis implies,Therefore, using Shannon's insight, the optimal code length to describe the entire sets of individual deviations of s's for a line L ij will require log pFollowing a similar expansion, we can show that the code lengths for the deviation t r 's and u r 's are
Problem statementGiven a delineation Q (hypothesis) of coordinates P (data), denote the total message length required to explain the data by the hypothesis as H(Q). Combining the code lengths to state the two part message described in Sections 4.1 and 4.2, the total message length is:This allows us to formally define the delineation problem as follows:
The problem:Given P containing a sequence of n points, find a subsequence Q  P containing k  n points such that the total message length to explainij , is globally minimum.
FINDING THE OPTIMAL DELINEATIONThis section will describe the procedure to compute the optimal delineation Q * for a given coordinate data. Broadly, the search for the optimal delineation has two steps. Potentially every pair of points P i and P j , 1 i < j  n can be a part of the delineation in Q * . (We note here that the segments in the delineation must not overlap, except for successive regions, and those only at their endpoints.) Therefore, we will first build a matrix H = (H ij ) 1i<jn of code lengths for all possible pairs of points in P. Then, the matrix H will be used to find a subsequence of points Q * such that the total code length H(Q * ) of the delineation is minimized, using a one-dimensional dynamic program.
Computation of code length over all possible segmentsEquation (2) expresses the message length H ij required to describe any line segment L ij between two points P i and P j. We will examine the complexity of computing each of the components that constitute Equation (2). For the n points in P, there are n2 possible line segments. The logV term inis constant across all possible segments and is computed once while reading the data points of P. Next, for each line segment, there are three parameters whose code lengths depend on the number of points in between the endpoints. This is trivially computed in constant time as j i1. The relatively complex part is to compute the code lengths of the spatial deviations of the line, s's t's and u's. Each of these three deviations have code lengths that depend on their respective variance,  2 s , 2 t and  2 u. While one can compute the variance of each set of deviations from the coordinate data, such a computation is linear in the number of points that each line segment explains. If this nive approach is followed, the computation of H requires O(n 3 ) operations. We will show in the later Section 6 that this is redundant and that the total time required to compute H can be achieved in O(n 2 ) operations, by computing the variances of all three spatialPage: i48 i43i51
A.S.Konagurthu et al.deviations incrementally from previous computations using a set of sufficient statistics. But before that we will describe the method to compute the optimal delineation given the matrix H.
Optimal delineation as a one-dimensional dynamic programDynamic programming is perfectly suited when dealing with problems that contain sequential constraints, where the solutions to the subproblems have a recursive overlapping substructure (). The problem statement in Section 4.3 is an ideal candidate for the search strategy of dynamic programming. Since a delineation is a subsequence which preserves the linear ordering of its elements, the optimal delineation of the given data can be derived by computing and memoizing (i.e. caching) the optimal delineation of its subproblems. We will use the matrix H of code length between all possible endpoints to find the optimal delineation Q * that minimizes H(Q * ) using a one-dimensional dynamic program. Let C i be an array that stores the optimal code length ofThe objective is to find the delineation of the given points where C n is minimum over all possible subsequences of the given points. Therefore, the recurrence relationship of optimal costs using a one-dimensional dynamic program is as follows:In other words, the optimal code length to delineate the points P 1 ,...,P j (1  j  n) builds on the optimal code length to delineate from P 1 ,...,P i , if and only if the value of C i plus the code length to state a new line segment H ij is minimum, over all 1  i < j. Using the above relationship, the array C is filled iteratively from 1 to n. Upon completion, the value C n gives the optimal message length corresponding to the best delineation Q * of P, where H(Q * )  C n is globally minimum. The subsequence of endpoints of this optimal delineation can be computed by storing, for each j, the back pointer i < j of the array from which the optimal value C j was derived. With these back pointers, a simple traceback from C n (until C 1 is reached) gives the set endpoints (in reverse order) that form the best delineation Q * .
EFFICIENT COMPUTATION OF MATRIX HAs mentioned in Section 5.1 the matrix of code lengths H can be computed efficiently in O(n 2 ) operations and this section will show how this can be achieved. For the matrix H to be computable in O(n 2 ) operations, each element H ij in the matrix should be computable in constant time.(2) cannot be computed in constant time. For a line segment L ij , nively, these three variances take time proportional to the number of points explained by the line to compute, leading to a O(n 3 ) algorithm for computing the matrix H. Below we will show that each of  rcan indeed be computed incrementally and in constant time from previous computations resulting in a O(n 2 ) algorithm.
Constant-time update of  2 s 'sConsider first these notations: for any vector v with direction ratios x,y,z, let ||v||  x 2 +y 2 +z 2 represents the vector norm of v. Let any point P i  P have the direction ratios of the form x i ,y i ,z i. By the definitions of the spatial deviations in Section 4.2, anyis the scalar associated with the projection of the vector (P r P r1 ) onto the vector L ij  (P j P i ). (Refer) LetL LetExpanding this we get,ij be a set of variables which we will call here sufficient statistics. These variables are of the form:, where A and B take the values {x,y,z}. Expressing Equation (3) in terms of the sufficient statistics, we getFrom Equation (4) it can be clearly seen that any S ij+1 can be updated from S ij in constant time, using the sufficient statistics. This holds because any S ABwhere {A,B}{x,y,z}. Therefore, using the sufficient statistics the computation of  s for a line segment can be computed incrementally in constant time. i48Page: i49 i43i51
Piecewise linear approximation of structures using MML
Constant-time update of  2 t 'sLet n 1 be the normal to a plane defined byzby byz  L ij , wher z is the unit vector along z-axis with the direction cosines 0,0,1. It follows that the direction ratios of. Define n 2 as a vector which is normal to the plane L ij  n 1. The direction ratios of n 2 will be:represent the direction cosines of n 2 , wherwher(Refer) This impliesexpanding along the steps we took in the previous section, we getwhere computation of any T ij+1 can be updated from T ij in constant time.
Constant-time update of  2 u 'sWe have seen above that(Refer) Expanding as before we getwhere again the computation of any U ij+1 can be updated from U ij in constant time, when sufficient statistics are maintained. Therefore, the update rules in Equations (4)(6) allows an efficient computation of the matrix H of code lengths in O(n 2 ) operations.
RESULTSIn the previous sections, we have demonstrated an efficient and statistically robust algorithm to simplify a protein structure with piecewise linear segments. We implemented the described algorithm (in C++). Our implementation is available from http://www.csse .monash.edu.au/~karun/pmml/. We evaluated our method using a non-redundant dataset containing 15 399 protein structures obtained from the protein data bank (). (The non-redundancy here implies that no two structures in this dataset share a sequence identity >65%.) This dataset was culled using the program PISCES (). The list of proteins structures in the dataset and the results of their delineation produced by our method can be obtained from the aforementioned link.gives the distribution of the measure of simplification of structures over the entire dataset. For a structure, the measure of simplification is the ratio of number of line segments identified by the program over the number of residues in the structure. On an average. Geometric profiles of ideal secondary structures used to classify coarsely the delineation identified by the program.  and  are average backbone dihedral angles. n is the periodicity of the local structure.  is the rise. p is the pitchthe respective secondary structure assignments using DSSP and STRIDE. We note that both these programs assign secondary structure definitions at a residue level, while the coarse assignment for our method described above is at a segment level. Therefore, to enable a comparison between the methods we assign all residues within a segment to the segment level secondary structure state.gives the concordance of Helix 6 and Strand assignments between DSSP, STRIDE, and our method, PMML. Although even a coarse segment level assignment by our method produced a satisfactory concordance with DSSP and STRIDE, there is still a disagreement of 15% between PMML and the other two methods. Inspecting these differences we note that the majority of them came from the terminal parts of the segments delineated by our program. Therefore, we refine the coarse level assignment produced by PMML using the hydrogen bonding patterns of residues within each segment to reassign the secondary structure state at a residue level. We use a simple proximity (of backbone nitrogen and carbonyl groups) and angle (of N, O, C atoms) based computation of hydrogen bonds. Comparing our refined assignments at a residue level with DSSP and STRIDE we notice a substantial improvement in the concordance of helix and stand assignments with DSSP and STRIDE. (See rows 3 and 4 in.) We emphasize that although PMML can be used to generate protein secondary structure assignments, its real aim is to generate concise representations of structures, irrespective of the nature of the segments of which they are composed. For instance, PMML could be applied to RNA structures without needing any appeal to the types of substructure anticipated. Manually evaluating the delineation of a large number of structures we notice that although PMML's delineation identifies the regions of helix and strand consistently, there remain small discrepancies in assigning precise beginning and end residuesThe SSEs in the rows follow the order of their appearance along the chain of the protein from its N-to C-terminus. The column wwPDB gives the residue ranges of various SSEs as indicated in the wwPDB file 5NLL. The column PMML gives the corresponding residue ranges of the segmentation produced by PMML. of secondary structure elements as ascertained by an expert. To highlight these differences consider the following example of the delineation produced by PMML.shows the structure of oxidized Clostridium beijerinckii flavodoxin. This protein binds a cofactor, flavin mononucleotide (FMN). Flavodoxin is a small / protein, containing a 5-stranded parallel -sheet ( 1 ,..., 5 ), with two helices packed against each face of the sheet ( A , E and  C , D ). There is also a short helix ( B ) located near the N-terminus of the protein. () Different segments produced by PMML are shown in different colors. The elements of secondary structure shown as thick ribbons are the secondary structure assignments taken from the structure's wwPDB file (5NLL).gives the residue ranges (that is, start and end residues) for each secondary structural element (SSE) of the flavodoxin structure listed in its wwPDB file. The residue ranges of the corresponding segmentation produced by PMML is also presented in the table. Broadly, the program correctly assigns segments to the SSEs. However, minor differences can be i50
A.S.Konagurthu et al.
Piecewise linear approximation of structures using MMLobserved in the locations of their start and end residues. In most cases, we notice an absolute difference of 1 or 2 residues in the N-or C-terminal regions of these SSEs. The segmentation in the regions around the SSEs  E ,  2 and  5 show some discrepancies. The residue range from wwPDB corresponding to  E was approximated by PMML using 2 segments instead of one. The first segment is composed of roughly one turn of the helix at  E 's N-terminal end. This is understandable as this turn is substantially skewed from the main helical axis and, indeed, there is an interruption in the hydrogen bonding. However, the second segment composed of 11 residues in this region is consistent with the assignment in the wwPDB file. In the case of  2 , the start location identified by PMML precedes the start location identfied in the wwPDB file by four residues. On inspecting the flavodoxin structure, there appears to be a backbone hydrogen bond between the carbonyl group of residue Asp29 and the nitrogen of Met1 (of strand  1 ), so the  2 strand may well start at residue Lys28 or Asp29. Similarly, for  5 , the start location of the segment from PMML was identified to be three residues before the location identified in the wwPDB file, and inspecting the structure, we note the bulge in strand  5 , and hydrogen bonds between atoms 80O109N and 82N109O; assignment of the start of the strand  5 to residue 109 is not indefensible.
CONCLUSIONWe have presented a novel and efficient method to delineate protein structures using the MML framework; MML is tolerant to measurement error and other inaccuracies. The model used in this work is independent of preconceived notions of what substructures are being sought to simplify the observed coordinate data. Our method maximizes the economy of representation while minimizing the loss of information, taking into account even the loop regions of proteins. Analysis of the delineations of a large number of protein structures suggests that the method is consistent in, among others, delineating standard secondary structures. The concise representations produced by this method have a potential use for rapid and accurate structure comparison and lookup. An implementation of our program is available from http://www.csse.monash.edu.au/~karun/pmml/.
Banerjee et al. (1996) use a related minimum description length principle for their approach, which is a technique that was introduced a decade after Wallace and Boulton (1968) proposed the MML criterion. The two approaches are significantly different. See Wallace (2005) for a comparison.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Page: i45 i43i51
We use the term sequence in this paper to mean an ordered list. This should not be confused with the primary sequence of amino acids of a protein. 3 Assume that the protein P is oriented such that P 1 is the origin, P 2 lies on the positive x-axis, and P 3 lies on the xy-plane. This is one of the many possible schemes that ensures that our method is invariant to rotation and translation of the frame-of-reference in which the coordinate data is defined. (See supplementary note for a detailed discussion on this issue.)
log * x = logx +loglogx + (over all positive terms) 5 Note that the coordinates of the bounding rectangular box is a constant given the data, so it can be ignored at least for the purposes of comparing two hypotheses. i45 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [19:47 6/6/2011 Bioinformatics-btr240.tex] Page: i46 i43i51
Fig. 2. Distribution of ratios of number of line segments over number of residues per structure in the dataset. Ratios are expressed in percentages and rounded to the nearest integral value. over the entire dataset the delineation size (that is, the number of line segments in the delineation) constitutes 13.85% of the total size of structure (in residues). In addition, the average segment length over the entire dataset is observed to be 8.11 residues. In general, the number of segments is correlated to total size of the protein structure. It is of considerable interest to evaluate the agreement of standard secondary structural elementshelices and strands of sheetswith the delineation identified by the program. We note that an ideal delineation of a structure must encompass these elements since they are ideal candidates for approximation with lines or vectors given the linear spatial trend in their geometry. In order to evaluate the agreement, we coarsely classify each segment to one of three secondary structure states: 'Helix', 'Strand' and 'Other'. This threestate classification is based on certain geometric characteristics of the segments in the delineation. Specifically, we compute the following geometric profiles for each segment: 'rise', 'pitch' and backbone dihedral angles  and . The rise () of the segment with endpoints P i and P j is  = D ij /(j i+1), where D ij is the Euclidean distance between the endpoints. In other words, the rise gives the average translation of points along the line between endpoints. The rise of a standard secondary structure is directly related to the pitch (p) of the segment. For a substructure with a geometry that repeats itself every n residues, the relationship between rise and pitch is given by p = n. Table 1 summarizes the geometric profiles of ideal secondary structures (Taylor, 2001). Inspecting these profiles per segment, a coarse characterisation for each segment in the delineation is achieved. Examining the coarse segment level assignment for the structures in the dataset, we note that the average length of segments assigned as 'Helix' is 13.01 residues while the same for those assigned as 'Strand' is 7.33 residues. To evaluate our coarse assignment, we choose two popular and extensively used secondary structure assignment programs, DSSP (Kabsch and Sander, 1983) and STRIDE (Frishman and Argos, 1995). DSSP and STRIDE assign each residue to one of multiple secondary structural states, including 3 10-, -, -helices and -strands of sheet. For the structures in our dataset, we generate i49 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
We do not distinguish between the three types of helices and treat them as one state.
i51 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
