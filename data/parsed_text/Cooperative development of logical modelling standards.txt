The identification of large regulatory and signalling networks involved in the control of crucial cellular processes calls for proper modelling approaches. Indeed, models can help elucidate properties of these networks, understand their behaviour and provide (testable) predictions by performing in silico experiments. In this context, qualitative, logical frameworks have emerged as relevant approaches, as demonstrated by a growing number of published models, along with new methodologies and software tools. This productive activity now requires a concerted effort to ensure model reusability and interoperability between tools. Following an outline of the logical modelling framework, we present the most important achievements of the Consortium for Logical Models and Tools, along with future objectives. Our aim is to advertise this open community, which welcomes contributions from all researchers interested in logical modelling or in related mathematical and computational developments. Contact: contact@colomoto.org 1 Motivation The rapid development of novel biomolecular technologies has fostered the study of complex regulatory systems during the last decade. Mathematical models have become invaluable tools for understanding the dynamical behaviour of such systems. There are various types of formalisms, which differ in the level of detail and model complexity (de Jong, 2002; Karlebach and Shamir, 2008). Logical (or logic), discrete models comprise the most abstract dynamic models and constitute nowadays a popular modelling framework (for reviews see Bornholdt, 2005; Saadatpour and Albert, 2013; Samaga and Klamt, 2013). In logical models, components are represented by discrete variables with a small range of possible values , with the most extreme case being Boolean models, where each component can be either active or inactive (Kauffman, 1969;
MotivationThe rapid development of novel biomolecular technologies has fostered the study of complex regulatory systems during the last decade. Mathematical models have become invaluable tools for understanding the dynamical behaviour of such systems. There are various types of formalisms, which differ in the level of detail and model complexity (). Logical (or logic), discrete models comprise the most abstract dynamic models and constitute nowadays a popular modelling framework (for reviews see). In logical models, components are represented by discrete variables with a small range of possible values, with the most extreme case being Boolean models, where each component can be either active or inactive (). Regulatory effects are defined by logical rules or lookup tables. The relative simplicity of these models provides several advantages over more complex modelling formalisms, such as systems of differential equations. In particular, logical models do not require precise knowledge of kinetic parameters, which makes them suitable for large models comprising up to several hundreds of components. Due to their qualitative nature, it is possible to incorporate various kinds of information in logical models. For example, natural-language statements from publications or expert knowledge on regulatory interactions can easily be transformed into logical rules (). Although logical models provide a rough approximation of concentration levels, they can reproduce the behaviour of many biological systems as illustrated in examples of case studies later. The discrete step functions resulting from simulations of logical models constitute a plausible simplification of typical sigmoidal response curves (; Thomas and d'). Biomolecular measurements can be analysed in the discrete framework by applying specialized discretization procedures (). Logical models have been successfully applied to a wide range of regulatory and signalling systems, in a variety of organisms. Examples include: yeast cell cycle (;), pathogenhost interactions (), development of the sea urchin embryo (), development of Drosophila melanogaster (; S nchez and), mammalian cell cycle (), murine cardiac development (), determination of cell fates in human (), multiscale signal transduction in human epithelial cells (), human T-cell receptor signalling () and T-cell differentiation (). The Consortium for Logical Models and Tools (CoLoMoTo, http://colomoto.org) was informally launched during a meeting at Instituto Gulbenkian de Cincia (Portugal) in November 2010 to gather interested scientists and promote the cooperative development of shared standards and tools. This meeting was followed by a second one at the European Bioinformatics Institute (United Kingdom) in March 2012, which focused more specifically on a common standard for the exchange of logical model [the Systems Biology Markup Language (SBML) Level 3 Qualitative Models or 'qual' package, see later]. The third meeting was held at the University of Lausanne (Switzerland) in April 2014, bringing together 22 participants from 14 different institutions. It included sessions devoted to scientific presentations covering methodological and computational developments, as well as models for real case applications. In addition, the participants discussed several topics requiring community consensus, including the development of standards, collaborative tools and model repositories. CoLoMoTo is an international open community that brings together modellers, curators and developers of methods and tools. It aims at the definition of standards for model representation and interchange, and the establishment of criteria for the comparison of methods, models and tools. Finally, CoLoMoTo seeks to promote these methods, tools and models. We first outline the logical modelling approach to then present the recent achievements of the consortium, as well as the outcomes of the last meeting regarding future directions.
Logical modellingThe definition of qualitative models mainly relies on the network architectures and does not require precise knowledge about the biological mechanisms at stake (). This makes the logical framework attractive for studying large interaction networks. Simulations and analyses of logical models can highlight the key characteristics of the behaviour of such large systems, but they cannot make detailed predictions on concentration levels. For such purposes, more complex models, such as biochemical models, may be more appropriate. These detailed models, in turn, are usually limited to much smaller networks and require a high amount of information and measurements. Hence, the purpose of logical modelling is often to give an overview of a regulatory system and to summarize the current state of research. They may be complemented by refined submodels that study parts of the network in detail. In what follows, we discuss the main distinct flavours of the logical framework, in what concerns the specification of models and their dynamics. Properties of interest and current methods for their analysis are then briefly reviewed.
Logical modelsThe development of a logical model for a regulatory and/or signalling network usually starts with the definition of a graph encompassing relevant regulatory components (nodes or vertices) and their interactions (directed edges or arcs). A variable is associated with each component to denote its concentration or activity level. A logical function (or logical rule) defines the evolution (target value of the corresponding variable) of each component, depending on the levels of its regulators. In Boolean models, all variables are binary (0 or 1), (), whereas in multivalued models, variables can take additional (discrete) values (). This extension is useful to account for distinct functional levels of a regulator when, for instance, it targets different components. The definition of the logical rules may be difficult as combined effects of interactions targeting the network components are often hard to obtain. Some models are thus limited to specific classes of functions that derive from the network architecture. This is the case of threshold functions successfully applied to cell cycle modelling () or canalyzing functions as discussed in. To handle uncertainty,proposed to randomly select the logical functions, according to predefined specifications. Finally, Random Boolean Networks, where both interactions and logical functions are randomly assigned, are employed to study global properties of certain classes of networks ().
Logical states and dynamicsThe current state of a logical model is encoded in a vector giving the levels of all components. As the number of integer values allowed for each variable is finite (and usually small), the state space is also finite. The evolution of each component at a given state is determined by its logical function but may also depend on the updating policy. In the synchronous policy, all components are updated simultaneously, leading to a deterministic behaviour, where each state has at most one successor. With the asynchronous policy, only one component is updated at a given time i.e. a state has as many successors as the number of components called to update. More sophisticated policies have been proposed, which can be deterministic (e.g. synchronous block-sequential as in), yield multiple successors (e.g. asynchronous priority classes,) or introduce stochastic choices (e.g. randomly selecting a successor from those enabled by the asynchronous policy,). An exhaustive list of these policies is beyond the scope of this letter, but it is important to realize that model behaviour may substantially change with the choice of updating.
Logical framework extensionsBriefly described later are a few of the extensions that have been proposed to extend the scope of the formalism. Time delays were an early concern of R. Thomas, temporal as well as spatial constraints are simply expressed in the form of additional logical rules. In classical Boolean networks, external components (input nodes with no regulator) are fixed at 0 or 1 for the duration of the simulation. Alternatively, the values of these external components can be set according to a probabilistic distribution over time to cope with variable environmental conditions. Furthermore, the activity levels of individual model components can be defined as the ratio of 0's and 1's over a number of time steps and thereby enable analyses mimicking experimental doseresponse curves (). Finally, logical models can be refined and translated into continuous models with similar dynamical properties by generating standardized ordinary differential equations based on the logical rules (). Such continuous models introduce numerous parameters, which then need to be defined or estimated. Alternatively, piecewise-linear differential equations (PLDEs) () approximate the switch-like properties of regulatory interactions. PLDE can be simulated using the Genetic Network Analyser (), provided that qualitative relationships between parameters are defined.
Analysis of logical modelsA first important property of a logical model is the repertoire of its asymptotic behaviours, namely its attractors. Attractors are sets of states from which the system cannot escape. They are often assumed to denote biologically relevant behaviours (). For example, stable states may describe cell fates such as differentiation or apoptosis, whereas complex attractors may represent oscillatory properties e.g. cell division cycle or circadian rhythms (). Alternative stable states have been associated with multiple differentiated T-helper subtypes (), with specific expression patterns associated with the different segments of fruit fly embryo (), with different cardiac progenitor cells () and with cell fates in response to death receptor engagement (). In contrast,associated a complex cyclic attractor with the oscillatory behaviour of the mammalian cell cycle. Reachability properties are also of high interest. They represent the capability of the model to generate particular trajectories. For example, one can analyse the model to identify a trajectory from an initial condition towards a specific attractor. Hereafter, we present some approaches to assess the dynamical properties of logical models.
Dynamical analysisThe dynamics of a logical model can be conveniently represented by a state transition graph (STG), where nodes denote states, whereas arcs denote enabled state transitions. Each transition may involve the update of one or more components, as determined by the logical regulatory functions and the updating policy. Dynamical properties can be obtained through the analysis of the STG reachable from a set of initial states (or all possible states for the complete STG). In this STG, an attractor corresponds to a terminal strongly connected component (SCC), defined as a maximal set of states such that each state can be reached from all other states and with no transition leaving this set of states. Whenever a terminal SCC encompasses a unique state, the attractor is a stable state, whereas an SCC containing at least two states denotes a cyclic attractor. To ease the identification of attractors and the analysis of STG structures, compact representations can be generated, including SCC graphs, or more compressed hierarchical transition graphs (). Moreover, efficient data structures greatly facilitate the identification of the attractors in Boolean models (). To mitigate the combinatorial explosion of the state space,proposed a Boolean Kinetic Monte-Carlo algorithm, which applies a continuous time Markov process to a Boolean state space. By assigning a transition rate to each component and considering time as a real number, it uses Monte-Carlo simulations to compute the temporal evolution of probability distributions and to estimate the stationary distribution of logical states. The verification of reachability properties quickly becomes time consuming even for small models, calling for semi-automated methods. One popular approach is model checking (), which has been widely used for the verification of software and hardware systems during the last 30 years. More recently, model checking has been successfully applied to logical models (), as well to piecewiselinear differential models (), and Petri nets (), among others.
Static analysisMethods were proposed to deduce dynamical information from the model itself, rather than computing explicit state transitions. In this context, the first question of interest is the identification of attractors, which is currently the subject of intense research. Stable states are independent of the updating policy, have a simple formal definition and can be efficiently computed using constraint-solving methods () or polynomial algebra (). In contrast, complex attractors depend on the updating policy and are more tricky to compute, in particular in the asynchronous case. A number of methods have been proposed recently for their identification, including an efficient SAT-based algorithm for the synchronous case (). The notion of stability has been generalized from single states to subspaces of states (with applications in model reduction and attractor detection. Like stable states, stable subspaces are independent of the updating policy and can be computed by constraint-solving methods (Za udo and). Multistability (existence of multiple attractors) or sustained oscillations (or homeostasis) require the presence of positive or negative regulatory circuits in the corresponding network (). The connection between network topology and dynamics is currently studied by several groups. It can be used to deduce dynamical properties, at least in some specific cases (). Finally, model reduction techniques aim at deriving simpler models preserving most dynamical properties. In this respect, automated reduction methods facilitate this process by properly rewriting logical rules ().
Standard and toolsWhile numerous independent software packages supporting logical models have been proposed over the years, no standard existed for exchanging models between them. The CoLoMoTo consortium was created to foster the design of such standards. Collaborative efforts within CoLoMoTo already led to a novel model exchange format, SBML qual, along with a standard Java LogicalModel library to handle logical models. SBML qual (Qualitative Models package for SBML) is an extension of the SBML Level 3 standard (). It is designed for the representation of multivalued qualitative models of biological networks (). After various meetings and refinements by logical modelling software developers, this new package was accepted by the SBML community in 2011 and finally approved by the SBML Editors in the spring of 2013. SBML qual is supported in libSBML () and JSBML (). Models encoded in SBML qual can be submitted to the BioModels database, which also includes a branch dedicated to nonmetabolic models automatically generated from pathway resources (). The SBML qual format supports the definition of the model itself as a list of components (or SBML species), each with a maximum value and an optional initial value. Interactions between these components and logical rules complete the model definition. This first version thus accounts for generic multivalued logical models. The extensions briefly described in Section 2 and simulation settings (e.g. updating mode, perturbations, etc.) are not yet supported. It is the goal of the consortium to tackle these issues. The LogicalModel library provides a reference implementation of logical models as supported by SBML qual, relying on logical functions and decision diagrams. While SBML qual is the main supported format, the API enables the definition of additional import and export formats. The LogicalModel library can thus act as a format conversion module for tools that do not support SBML qual directly. It is freely available at https://github.com/colomoto/logicalmodel. As shown in, several tools can now exchange logical models thanks to the new SBML qual format and this conversion tool.
Conclusions and prospectsLogical modelling of biological regulatory networks constitutes a very active field involving scientists with diverse interests, ranging from methodological developments and computational implementations to biological applications. With the aim to foster synergies between these multiples developments, the Consortium for the development of Logical Models and Tools (CoLoMoTo) was launched 4 years ago and already delivered the following results: (i) the definition of the SBML Level 3 Qualitative Modelling (SBML qual) package for the representation of multivalued qualitative models of biological networks and (ii) the implementation of the standard LogicalModel library, which can be used by various modelling and simulation tools. During the last meeting in April 2014, it was decided to organize CoLoMoTo activities along four main axes. The first axis aims at standardization. The reproducibility of results is enforced by defining and extending standards for the representation and interchange of models and their simulation parameters. Useful enhancements of SBML qual have already been discussed by the community. Improvements considered include the definition of models where rules are not (all) instantiated, models for which timing constraints (or rates) are specified, etc. In addition, further integration with core SBML Level 3 concepts will be needed. In particular, such integration would facilitate support of hybrid models, which combine features of both discrete and continuous formalisms. This activity is developed in close connection with the COmputational Modeling in BIology NEtwork community, which drives the development of standards for model interchange. One future direction addresses the issue of exchanging simulation settings for logical models, using the simulation experiment description markup language (). Moreover, the adoption of the kinetic simulation algorithm ontology (KiSAO) will permit a better description of the algorithms, their parameters and relationships (). Finally, CoLoMoTo is currently working on the definition of a controlled vocabulary (ontology) coveringAn updated list with further descriptions and links is maintained at CoLoMoTo's website (http://colomoto.org/software).
Development of logical modelling standards and toolsthe essential terms related to logical modelling, with textual definitions and corresponding references. The second axis aims at defining an umbrella model repository with links to existing model repositories. Authors of manuscripts describing new logical models will be encouraged to publish their models in one of these repositories. The third axis consists in defining benchmarks for the comparison of models and tools. Furthermore, successful modelling collaborations between experimentalists and modellers will be documented, in order to guide novel projects. The fourth axis is the creation of a repository of methods and tools that are made available by the different research groups working on logical modelling. This repository should not only list the different features and functionalities provided by each of the tools and methods but also provide guidelines for the selection of tools and methods suitable for typical use cases. A recently launched portal (http://colomoto.org) provides access to the reports of the CoLoMoTo meetings, a list of all involved research groups, as well as methods and tools available for the logical formalism. An important current aim consists in reaching more scientists and making them aware of existing models, methods and tools, which could be used for their own research lines. We thus conclude this letter by warmly inviting the international community interested in logical modelling to participate in future CoLoMoTo activities.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
A.Naldi et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
