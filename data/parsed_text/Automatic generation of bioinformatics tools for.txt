Motivation: Predictive tools that model protein–ligand binding on demand are needed to promote ligand research in an innovative drug-design environment. However, it takes considerable time and effort to develop predictive tools that can be applied to individual ligands. An automated production pipeline that can rapidly and efficiently develop user-friendly protein–ligand binding predictive tools would be useful. Results: We developed a system for automatically generating protein–ligand binding predictions. Implementation of this system in a pipeline of Semantic Web technique-based web tools will allow users to specify a ligand and receive the tool within 0.5–1 day. We demonstrated high prediction accuracy for three machine learning algorithms and eight ligands. Availability and implementation: The source code and web application are freely available for download at http://utprot.net. They are implemented in Python and supported on Linux.
IntroductionThe identification of proteinligand binding sites is important for understanding protein function. Many bioinformatics methods have been proposed for ligand-binding site identification or prediction. Computational methods are useful because they can be applied rapidly and at low cost, compared with biochemical experiments. They have a wide range of applications in enzyme design, drug discovery, chemical genetics, and other fields. The ligand-binding site prediction methods can be classified into sequence-based and structure-based methods. With high-throughput sequencing technologies yielding large amounts of sequence data, sequence-based methods can be applied to a wide range of proteins, even those whose structures have not been determined, and can be used for genome-wide analysis. In this study, we focused on sequence-based methods.When the structure of a target protein is known, structurebased methods can achieve high accuracy. However, if modeled structures are used, additional computation time is required and accuracy depends on model quality. The Critical Assessment of Protein Structure Prediction (CASP) () and the Continuous Automated Model EvaluatiOn (CAMEO) () are world-wide experiments for protein structure prediction, and they have the category of ligand-binding site prediction. Many structure-based or model-based prediction methods have been assessed in this category. Some structure-based methods use structure similarity to template libraries. COFACTOR threads the structure through the BioLiP protein function database using local and global structure matches to identify functional sites and homologies (
901This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.). Among sequence-based methods, LIBRUS () is a profile-based ligand-binding site prediction method that uses both sequence homology and machine learning. LigandRFs uses a random forest (RF) ensemble to identify ligand-binding residues from sequence information alone (). The performance comparison with these methods is described here. There are also prediction methods that have been developed for specific ligands. However, a binding-site prediction tool for a user-specified ligand is not always available. It will be convenient if a system can predict binding sites for any ligand specified by the user. Here, we describe a system for automatically generating a tool to predict the binding site for any ligand. This system takes as inputs a target ligand and an amino acid sequence to which the ligand binds, and as a prediction framework it constructs homology profiles to gather information on homologous proteins, using machine learning algorithms. This framework can be applied in common to numerous ligand types. The generated tools may be customized for individual ligand types to further improve prediction accuracy. The system can select and use three machine learning algorithms: support vector machine (SVM), neural network (NN) and RF, and can perform automatic optimization of the parameters of each algorithm. Its framework is based on semantic network technology and can be further extended to incorporate various features of proteins. For example, protein structural information can be used and other machine learning algorithms can be easily added to our framework. The basic procedures of machine learning-based proteinligand binding site prediction involve (i) construction of training datasets, (ii) extraction of sequence features and (iii) machine learning performance and parameter optimization. In our system, these steps are executed automatically as a pipeline in the Web application the University of Tokyo Proteins (UTProt) Galaxy (Supplementary Note S1). These steps produce predictors of ligand-binding sites for ligands of interest. The predictors generated by the system are displayed in the common user interface and can be used in the same manner. The system also stores these predictors in the pipeline workflow for subsequent use. Using the structures of proteinligand interaction sites extracted from Protein Data Bank (PDB) and the annotated sequences from Universal Protein Resource (UniProt) (), we developed the ProteinLigand Binding Site Pair Residue (PLBSP Residue) database. As a component of the pipeline system, this system collects positive (binding sites) and negative (non-binding sites) datasets for any specified ligand. UTprot Galaxy employs the Galaxy framework, which is a customizable pipeline of open-source Web applications (). Additional functional modules can be added to the present system and the developed program can be easily integrated, as a module, into other programs. Users can conduct the pipeline using a generic browser and graphical user interface; the framework also supports the graph database based on Semantic Web technology. Semantic Web technology is used as a method of linking the existing databases PDB () and UniProt with the newly developed resource description framework (RDF) databases PLBSP Residue and RDF SIFTS that contain in-house data. The European Bioinformatics Institute (EBI) developed the structure integration with function, taxonomy and sequences (SIFTS) platform as an upto-date resource for residue-level mapping between UniProt and PDB entries (). RDF is a core technology of the Semantic Web in the graph database. RDF represents graph data and regulates metadata format by the World Wide Web Consortium. In graph theory, a directed graph has three components: two nodes and a directed edge. A semantic graph assigns, as a RDF representation, a subject to one node, an object to another node, and a predicate to the edge. Each graph component expresses data as uniform resource identifiers (URIs) using ontology terms. This common form is useful for database integration, making it easy to express data relationships and link data that differ in underlying schema. The SPARQL Protocol and RDF Query Language (SPARQL) can operate a graph database that loads a dataset of RDF (). The fitting of data to the RDF facilitated the development of the system and the automatic generation of prediction tools.
Bioinformatics
MethodsThe present pipeline system, UTProt Galaxy, comprises a dataset-generating workflow and a prediction tool-creating workflow ().
Dataset-generating workflowWe analyzed all PDB files of X-ray crystal structure for extracting proteinligand binding site using an octree data structure. The octree is used because it permits easy and efficient searching and comparison of structures. We calculated the atomic distance between a residue and ligand at the binding site. In this study, we defined ligand-binding residues as those that contain at least one atom within n A  of any ligand atom in an experimentally determined structure. The distance n was set at 3.56 and 5 A  was used as the default value. Ligands connected by covalent bonds were excluded, and then information describing covalent ligandligand and ligandresidue bonds was extracted from the PDB file. We developed the PLBSP Residue graph database of ligandbinding residues for automatic generation of datasets for machine learning. PLBSP Residue is based on Semantic Web (linked open data) technologies; we modeled the graph database schema of. The pipeline workflow for automatic generation of ligand-binding site predictive tools. A user specifies the name of the ligand (chemical compound) for which a binding-site prediction tool is desired. The pipeline constructs the dataset for training, extracts the sequence features, and automatically performs machine learning and parameter tuning. As the backend of the pipeline system, we developed the PLBSP Residue database based on Semantic Web (linked open data) technologies. The pipeline output is a proteinligandbinding prediction tool PLBSP in RDF for analyzed in-house data. This database was constructed from all ligand-binding protein structures in the PDB. We used a public RDF dataset and ontology from PDB, PDB Chemical Component Dictionary (CCD) and UniProt with in-house data for the annotation. PDB sequences were mapped to UniProt to link multiple PDB sequences to a sequence, to obtain full protein sequences, and to link to various information. Other information linked to UniProt can be referenced. Ligand information from ChEBI, UniChem and SIFTS was also incorporated into PLBSP Residue. Using Semantic Web technologies, we can link various information sources and integrate system components dynamically (Supplementary Note S2). PDB contains protein molecule structures that were determined under various experimental conditions. It also contains partially determined structures. For machine learning, protein sequences and structural relationships should be handled consistently. Correspondences between residue numbers in PDB and those in UniProt were mapped as RDF by converting models from spreadsheets to graph structures based on information from EBI SIFTS, which describes cross-reference information for protein-related databases such as PDB and UniProt. Using the RDF database of PLBSP Residue, it became possible to use complete sequence data that match one or more PDB entries and to perform cross-reference analyses of UniProt-or PDB-related databases and the current ontology release on the Web (). UTProt Galaxy extracts IDs from PDB CCD for specified ligands. PDB CCD ID lists that were extracted from the PLBSP Residue database were classified using compound ontology chemical entities of biological interest (ChEBI). For example, the pipeline uses a PLBSP Residue database and performs a reasoning search using the following ontology vocabularies: urine nucleotide (ChEBI ID:26395), lipid (ChEBI ID:18059) and iron cation (ChEBI ID:24875). The pipeline then obtains a correspondence list mapped to ChEBI ID from the PDB CCD three-character ID (the same ID as the HETATM record in the PDB file) using the application programming interface of UniChem, which is a 'unified chemical structure cross referencing and identifier tracking system' (). The reasoning search permits a ligand group search based on ChEBI ontology hierarchies. The specified ligand and ligands at lower ontology layers are selected as a target ligand group that partially takes into account the similarity among ligands. In this study, the pipeline generated lists of non-redundant ligand-binding amino acid sequences that corresponded to ligand groups and ligand-binding residues using the dataset-generating workflow. The dataset-generating workflow involves ligand-binding protein acquisition followed by the removal of sequence redundancy and the collection of ligand-binding residues. In the ligand-binding protein acquisition step, proteins that bind the specified ligand are identified by searching the PLBSP Residue database and amino acid sequences are collected. The removal of sequence redundancy uses CD-HIT (), which removes redundancy from amino acid and DNA sequences. The default condition for removing redundancy is 90% identity and 50% coverage of sequences. During the step of collection of ligand-binding residues, the protein and ligand type are specified, and then the list of best-suited ligand-binding residues is obtained.
Prediction tool-creating workflowThe pipeline system generates proteinligand binding prediction tools that predict whether or not each residue in a protein is a part of a ligand-binding site (a ligand-binding residue). In the current design, three machine learning algorithms: SVM, NN and RF can be used for prediction. We employed the Python-based machine learning packages scikit-learn and LIBSVM (SVM), PyBrain (NN) and RandomForestClassifier (RF), We also used NumPy and SciPy as numerical computing packages in Python (). The positive training dataset is the one produced in the datasetgenerating workflow. The negative dataset comprises residues within 525 residues of each ligand-binding residue. PositionSpecific Iterated BLAST (PSI-BLAST) was used to construct multiple sequence alignments of homologous proteins to generate homology profiles for each sequence in the positive dataset, on the basis of the amino acid frequencies at each alignment position (). The feature vector, which was taken as an input to the machine learning algorithms, was generated from the homology profile. In PSI-BLAST, two iterations were performed using the NCBI non-redundant (nr) protein database (). The current system uses a sliding-window approach in which the feature vector is a position-specific scoring matrix (PSSM) profile of w consecutive residues and the center residue is the target residue for which the prediction is being made. The dimension of the feature vector is w  21, which corresponds to the number of amino acids (20 plus an N-or C-terminal spacer). PSSM profile is then converted into a feature vector with window size w. A spacer is a feature that indicates whether or not the site is beyond the N or C terminus. When the target residue is at the terminus of the sequence (either the C or the N terminus), it is assigned a value of 1. For all other residues in the window, the terminal spacer is set to 0 (). Our system enables using the residue conservation in a multiple sequence alignment of homologous proteins as another feature of machine learning. Because the effectiveness of this option depends on the types of ligands, we did not use this option for performance. Construction process of PLBSP Residue database. We use ligand-binding PDB structures determined by X-ray crystallography. Ligand-binding residues are defined as those that contain at least one atom within n A  of any ligand atom. The atomic distance is calculated for all pairs of ligand atoms and ligand-binding residue atoms. Ligands connected by covalent bonds are excluded. We modeled the graph database schema of PLBSP in RDF using a public RDF dataset and ontology from PDB, PDB CCD and UniProt. Ligand information is added from RDF ChEBI, RDF SIFTS and UniChem API
Automatic generation of bioinformatics toolsevaluation in this study. Other features such as various properties of amino acids, including charge, hydrophobicity, size, etc., can be conceived. These properties can be more effective than PSSM profile when some specific interactions exist between the proteins and the ligands, but we used PSSM profile here because it can represent more general properties of binding sites. This system automatically optimizes the parameters of machine learning: the optimal cost and Gaussian kernel parameters in SVM; the number of neurons and the learning rate in NN; the numbers of trees and of tries per tree in RF; and the window size w in all the machine learning algorithms. For parameter optimization, the system can use the genetic algorithm (GA) and grid search. The conditions used by the GA are as follows: the tournament selection method, 100 generations, 20 individuals, a point mutation rate of 0.05, the single-point crossover method, a crossover rate of 0.8, a gene initialized from a continuous or discrete uniform distribution. The genotype was then converted into a fitness function using the following procedure. The grid search exhaustively generates candidates from a grid of parameter values. The system uses cross-validation for parameter optimization. The results of the cross validation are evaluated using the fitness score AUC. The parameters obtained in each generation of GA step or each step of grid search are stored in a SQLite database. If the resulting parameters are the same as those of the previous generation, the calculation is removed using a cache technique. This practice increases the speed of calculation and reduces the total pipeline processing time.
Computational environmentThe computational experiments were run within the following cloud environment of a virtual machine powered by
Results and discussion
Performance of automatically generated predictorsWe used our pipeline system to generate predictors for purine nucleotide, lipid, iron cation (Fe), zinc cation (Zn), manganese cation (Mn), a-glucose, flavin adenine dinucleotide (FAD), adenosine monophosphate (AMP) and iron/sulphur cluster (SF4) binding sites. Accordingly, the dataset summary inincludes the number of ligand types, the number of interacting proteins and the number of ligand-binding residues that were extracted from the PLBSP Residue database for each ligand type. The performance of these predictors was plotted using receiver operating characteristic (ROC) curves (and) and the accuracy of the prediction tools was evaluated using 5-fold cross validation (). These analyses indicated sufficient performance for practical use. LigandRFs uses a RF ensemble with PSSMs as features and presents the results using Matthews correlation coefficient (MCC) (). The authors trained their predictor using the CASP8 dataset and then tested it against the CASP9 dataset (). They reported an MCC of 0.4 and sensitivity of 42.7%. For the metal binding proteins of the CASP9 dataset, their results were better, ranging from 0.2 (for a calcium binding protein) to 0.81 for two zinc binding proteins and 0.85 for a Fe (II) binding protein. The average MCC for CASP9 metal binding proteins was 0.55. Our predictor for iron using SVM achieved a MCC of 0.62. For zinc, the MCC was 0.56 (using SVM). Our predictors generally performed reasonably well when compared with the average case but the best case sensitivity was better for LigandRFs.. Feature extraction and machine learning. We generate a PSSM profile by performing two iterations of PSI-BLAST using the NCBI non-redundant (nr) protein database. The feature vector is a PSSM profile of w consecutive residues and the center residue is the target residue for which the prediction is being made. The dimension of the feature vector is w  21, which corresponds to the number of amino acids (20 plus an N-or C-terminal spacer). The feature vector can be taken as input to the three machine learning algorithmsAs for other types of classifier, a naive Bayesian classifier was used for 42 transmembrane protein sequences using a PSSM profile, the BLOSUM62 matrix, and various amino acid properties as features (). Suresh gives their results in terms of accuracy and sensitivity, achieving 65.25% accuracy and 50.18% sensitivity. Our predictor achieves reasonably good sensitivity/ specificity for some ligands, although average sensitivity is somewhat less (40.69%). The hidden Markov SVM method uses 1124 protein chains from PDB (). The authors divided the dataset into hetero-complex and homo-complex protein chains and obtained features using accessible surface area and order profile propensity (which are profile-based features) and a PSSM profile. When they tested the method using a PSSM profile and solvent-accessible surface area, they obtained an AUC of 0.825 and MCC of 0.455. Including order profile propensity helped them to improve the MCC to 0.474. This method compares quite favorably with our predictors in terms of MCC and AUC. Our predictors achieve similar AUC and MCC for many ligands, whereas sensitivity is lower than that of the HM-SVM method (74.0% against our 40.69%). However, our predictor performance remains similar as the study reported a significant hit in specificity (53.5% against our 98.6%). We also compared our predictor with specific ligand-binding site predictors for metal-binding residues (). In one study, the authors attempted to predict zinc-binding sites using SVM and homology score. They used 2727 chains from PDB (with 235 zinc-binding chains). Using PSSM profile, conservation score and homology score as features, they obtained an average AUC of 0.723. Our predictor achieved an AUC of 0.835 using SVM, although the sensitivity was 40.6%. Another study () showed metal cation-binding site prediction performance comparable to that in the present study. Details of the evaluation are described in the online methods. For lipid binding sites, a previous study () using a PSSM-based method achieved an AUC of 0.796, which is similar to the AUC obtained by our system.Note that the above performance comparison with the existing methods was performed on different datasets: the performance values of the existing methods were taken from the original papers. So the performance improvement may be due to new datasets but not the prediction methods.
Optimization of SVM parametersDuring the automatic generation of prediction tools, the system optimizes SVM parameters using GA within Pyevolve (. In this study, we evaluated the performance of GA in optimizing iron cation binding site predictions using the criteria of prediction accuracy as reported by AUC as well as execution times. The evaluation included 5-fold cross-validation. The average AUC for each prediction tool was improved by changing parameters using GA. In this experiment, the AUC at the start of the GA run was 0.691 and the AUC obtained after 100 generations was 0.934 with a standard error of 0.47%, indicating that GA facilitates parameter tuning of SVM within realistic calculation times ().A window size of nine was used for all cases. For SVM, sigma was 0.1 and cost was 1.0. For NN, the number of nodes was 25 and learning rate was 0.1. For RF, number of trees were 1501 and sampling size per tree was 20. The test dataset was 15% of the full dataset for each ligand. It was randomly sampled and removed from the dataset. The remaining dataset was used for training.
Automatic generation of bioinformatics toolsParameters for SVM affect to varying degrees how the algorithm finds the best separation between different classes. SVM uses a hyperplane to separate the points and calculate a value for the separation. This separation is maximized by changing the hyperplane. Separation can be calculated using Gaussian distance as used in our study or some other function such as Laplace or hyperbolic tangent. The calculations are performed by a kernel function and used by SVM to calculate a distance value between two set of feature vectors. The radial basis Gaussian kernel function can be written aswhere x 1 and x 2 are feature vectors. The sigma parameter (r) inversely affects the separation value returned by the kernel and in turn modifies how the machine learning algorithm learns. Smaller sigma values may improve data fitting, but very small values may lead to overfitting of data, as kernel values will approach zero. The cost parameter is a regularization parameter to help control bias (underfitting) or overfitting. A large cost value will reduce the distance allowed between a point and hyperplane before the point is considered misclassified. Large cost values control bias, whereas low cost values control overfitting.
Performance comparison of the machine learning algorithmsOur system can use three machine learning algorithms: SVM, NN and RF (). The performance of these algorithms is compared in Tables 4 and 5.presents values obtained by a predictor optimized using grid search.presents values from the predictor optimized using GA. Grid search can search a wider range of parameters and achieve higher accuracy than GA (). Comparison between the tables shows how well GA performed for each predictor. GA is a heuristic method, so performance is expected to be lower. However, the predictors perform quite well when using GA, and average AUC dropped only by 4% for SVM, 6.7% for RF and 1% for NN. Whether using GA or grid search, we reach the same conclusion as other studies: that SVM is one of the best-performing machine learning tools available for binding-site residue prediction. RF also gives promising results, but sensitivity suffers. NN based on a single hidden layer with a maximum of 25 nodes performed reasonably well. Better results may be expected by adding layers to the NN or changing the prediction function for RF. However, among offthe-shelf machine learning algorithms, SVM is the best method, while RF and NN are sufficiently different and accurate to be useful alternative options to SVM.
ConclusionWe present a user-friendly automatic production pipeline for proteinligand-binding site predictive tools using multi-omics big data. The pipeline's core data is organized by ontology as an evidence. Implementation of this system in a pipeline of Semantic Web technology-based Web tools allow users to specify a ligand and receive the tool within 0.51 day. We have demonstrated its high prediction accuracy for several ligands. The present pipeline system has backend-linked open data comprising $30 billion triples as an RDF graph. It is available as a Web application that can be accessed and used at URL http://utprot.net, UTProt Galaxy. We evaluated the software by automatically generating binding-site predictors for eight types of ligand using SVM and GA-based parameter optimization. We also evaluated performance for three types of ligand and three machine learning algorithms: SVM, RF and NNs, and two parameter optimization methods: GA-based and grid search. We are now developing methods to extract only biologically relevant ligands; in this study we excluded only ligands that are apparently buffer media used for crystallization. A general method that accommodates similarity among ligands should be designed. Our reasoning search of ligands based on ontology hierarchies partially addresses this need, but more general ligand grouping based on stereochemistry or minor substituents can be conceived. The combination of our system with homology-based or template-based methods is also a subject of future work.The best parameters found are as this table. The test dataset was 15% of the full dataset for each ligand and was same as used in.
Funding
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Y.Komiyama et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
