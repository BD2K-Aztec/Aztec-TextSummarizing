Motivation: Identifying functional modules in proteinâ€“protein interaction (PPI) networks may shed light on cellular functional organization and thereafter underlying cellular mechanisms. Many existing module identification algorithms aim to detect densely connected groups of proteins as potential modules. However, based on this simple topo-logical criterion of 'higher than expected connectivity', those algorithms may miss biologically meaningful modules of functional significance, in which proteins have similar interaction patterns to other proteins in networks but may not be densely connected to each other. A few blockmodel module identification algorithms have been proposed to address the problem but the lack of global optimum guarantee and the prohibitive computational complexity have been the bottleneck of their applications in real-world large-scale PPI networks. Results: In this article, we propose a novel optimization formulation LCP 2 (low two-hop conductance sets) using the concept of Markov random walk on graphs, which enables simultaneous identification of both dense and sparse modules based on protein interaction patterns in given networks through searching for LCP 2 by random walk. A spectral approximate algorithm SLCP 2 is derived to identify non-overlapping functional modules. Based on a bottom-up greedy strategy , we further extend LCP 2 to a new algorithm (greedy algorithm for LCP 2) GLCP 2 to identify overlapping functional modules. We compare SLCP 2 and GLCP 2 with a range of state-of-the-art algorithms on synthetic networks and real-world PPI networks. The performance evaluation based on several criteria with respect to protein complex prediction, high level Gene Ontology term prediction and especially sparse module detection, has demonstrated that our algorithms based on searching for LCP 2 outperform all other compared algorithms. Availability and implementation: All data and code are available at
INTRODUCTIONAdvances in high-throughput profiling techniques have enabled researchers to produce large-scale proteinprotein interaction (PPI) datasets (). Systematic analysis of these large-scale interactomic datasets based on their graph representations, in which nodes stand for proteins in species of interest and edges represent interactions between proteins, has the potential to yield a better understanding of protein functions computationally (). One way to chart out the underlying cellular functional organization is to identify functional modules in these networks by grouping the proteins sharing similar biological functions into the same modules (). Intuitively, based on interactomic data, if two proteins interact with each other, they are more likely to share the same cellular functionalities than proteins that do not interact. Thus, densely connected groups or subnetworks of proteins in a given network can be viewed as potential functional modules. Based on this idea, many modularity-based algorithms () have been successfully applied to identify functional modules in PPI networks by detecting 'higher than expected connectivity' subnetworks. Several algorithms based on Markov random walk on graphs also have been proposed recently. For example, Markov CLustering (MCL) algorithm is one of such module identification algorithms for biological network analysis by iteratively implementing 'Expand' and 'Inflation' operations on the transition matrix of the underlying Markov chain of random walk on the given network (van). Regularized MCL (RMCL) () further extends the original MCL algorithm to penalize the large module size at each iteration to obtain more balanced modules with a similar number of nodes within them. Other formulations based on Markov random walk, including finding low conductance (LC) sets (), also can be applied in module identification, which is similar to normalized cut problems () in graph partitioning to minimize the normalized cut size across modules. Recently, several overlapping module identification methods have been developed to detect densely connected modules that may overlap with each other in networks. For example, Cluster One (ClusterOne) () can be viewed as the overlapping version of normalized cut. Link community (LinkComm) () formulates the overlapping module identification in an innovative framework to implement the hierarchical clustering on edge graph representations, which reveals hierarchical and overlapping organization of networks. In addition to densely connected modules in PPI networks, such as protein complexes, there are other topological structures *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com in PPI networks that may possess important cellular functionalities. Again, based on interactomic data, the proteins that interact with similar sets of other proteins in a given network also intuitively have a higher probability of sharing the similar functionalities compared with the proteins that do not share any interacting partners or neighbors (). These proteins may not directly interact with each other but they still work toward similar cellular functionalities and hence should belong to the same modules. Take transmembrane proteins for example. It is well known that transmembrane proteins, such as receptors in signal transduction cascades, tend to interact with cytoplasmic proteins as well as with extracellular ligands, but rarely interact with themselves (). To identify such types of functional modules, many state-of-the-art blockmodel module identification algorithms have been proposed recently. For example, Power Graph (PG) () greedily collects topologically similar nodes into the same module based on Jaccard index similarity. Graph Summarization (GS) () uses the minimum description length principle to group nodes with similar interaction patterns. However, both PG and GS are solved by greedy algorithms, which can not guarantee the global optimality. Additionally, they tend to over segment the network to get relatively small modules based on our empirical experience. A Bayesian framework () based on a stochastic blockmodel formulation has been developed to identify modules as well as the optimal number of modules. However, the algorithm only guarantees to converge to local optima.has proposed to solve blockmodel module identification by optimally mapping the given network to an image graph using simulated annealing, and several optimization strategies also have been proposed to accelerate the original simulated annealing algorithm (). But those algorithms suffer from prohibitive computational complexity due to the inherent combinatorial complexity of the blockmodel problem. In this article, we propose a novel formulation to solve the functional module identification problem, which simultaneously identifies the previously described dense and sparse modules with similar interaction patterns. The article is organized as follows: In Section 2, we first introduce the new optimization formulation by searching for the low two-hop conductance sets (LCP 2 ) based on the two-hop transition matrix of the underlying Markov chain of the random walk on a given network. Then, we derive the corresponding mathematical programing problem and propose an algorithm SLCP 2 (spectral algorithm for LCP 2 ), which solves LCP 2 to search for non-overlapping modules by a spectral approximate method with a close-to-optimal solution. We also present an extended algorithm (greedy algorithm for LCP 2 ) GLCP 2 , which solves LCP 2 to search for overlapping modules by a bottom-up greedy strategy. In Section 3, we evaluate and compare our methods with other state-of-the-art algorithms for functional module identification on four large-scale PPI networks: the Saccharomyces cerevisiae PPI network extracted from the Database of Interacting Proteins (DIP) () (SceDIP); the corresponding network from the BioGRID database () (SceBioGRID); the Homo sapiens (HsaHPRD) PPI network collected from the Human Protein Reference Database (HPRD version 9) (); and the human PPI network HsaBioGRID obtained from BioGRID (). The experimental results of protein complex prediction show that nonoverlapping SLCP 2 outperforms most of the non-overlapping state-of-the-art algorithms and performs competitively with the more recent RMCL algorithm (). When we compare GLCP 2 with the other algorithms for overlapping modules, our experiments show that GLCP 2 outperforms ClusterOne () and LinkComm (). High level GO (Gene Ontology) term () prediction results further demonstrate that SLCP 2 is superior to other non-overlapping algorithms, whereas GLCP 2 and LinkComm perform equally well. Furthermore, we present a few identified functional sparse modules to illustrate that SLCP 2 and GLCP 2 have the advantage in detecting functional sparse modules compared with the other state-of-the-art algorithms in the last part of Section 3. In Section 4, we draw our conclusions by briefly summarizing the differences between our new SLCP 2 and GLCP 2 algorithms and other existing module identification algorithms.
METHOD
PreliminariesWithout loss of generality, let G  V, E represent a connected PPI network, in which there exists at least one path connecting any pair of nodes. Let V denote the set of nodes in G corresponding to n proteins and E is the edge set denoting interactions among all n proteins. A is the adjacency matrix of G, of which the element A ij  1 when node i 'interacts' with node j; A ij  0 when there is no interaction between node i and node j (there are no self edges and A ii  0). For random walk on G, its underlying Markov chain can be characterized by a transition matrix P  D 1 A, where D  Diagd 1 , d 2 ,. .. , d n  is an n  n diagonal matrix with the corresponding node degrees (d i  P j A ij , i  1,. .. , n) on its diagonal. As G is connected, the underlying Markov chain of the random walk is irreducible and ergodic. Therefore there exists a stationary distribution satisfying P T  , where i  d i =M, M  P n i1 d i. The conductance of a subset of nodes S in G can be defined as ()Finding k LC sets in the network G based on this conductance definition involves partitioning the node set V into k subsets (S 1 , S 2 ,. .. , S k ), which can be formulated as the following optimization problem:We call this method LC sets defined by P (LCP) for simplicity, and LCP is equivalent to the formulation of normalized k-cut in Xing and Jordan (2003).
Interaction patterns and transition matrix P 2Considering Markov random walk on the given network G, its corresponding transition matrix P describes the transition probability that the random walker walks from one node to another in one step. With two directly interacting nodes (A ij  1), the corresponding transition probability is uniformly random among all the direct neighbors:denoting the probability of walking from node i to j in one step. Clearly, nodes without connections have no chance to reach each other in one step. The conductance definition in (1) extends to the transition probabilities between two complement partitions S and " S in the given network. Hence, finding LCP tends to find densely connected modules as it aims to minimize the transition probabilities between potential modules to the rest of the network, which are dependent on the corresponding cut size or the number of edges across potential modules. However, in addition to densely connected modules, functional module identification in PPI networks desires to detect other meaningful modules with nodes having similar interaction patterns in networks. The star and biclique motifs inshow that nodes with similar interaction patterns may be sparsely connected or even have no interactions among them. For example, nodes marked by 'S' and 'T', which should be grouped into two respective modules, all have the same interaction patterns based on the network structure. But because there are no interactions among them, existing algorithms for densely connected modules, including LCP, rarely cluster them into the corresponding modules correctly. The second column inlists the random walk transition matrix P of each motif and the module dividing lines by LCP derived based on P. The third column ingives the objective function values computed by LCP (2). Based on the analysis of the three basic motifs, we confirm that LCP only focuses on detecting dense modules, which may not be adequate for functional module identification in PPI networks. To identify modules of more diverse topology based on interaction patterns, we propose to search for LC sets defined by a two-hop transition matrix P 2  P  P (LCP 2 ). Intuitively, nodes with similar interaction patterns (no matter whether densely connected or sparsely connected) are more likely to transit back to the nodes in the same module after two steps of random walk. Therefore, we redefine the conductance by replacing P with P 2 , which captures more meaningful modular structures in PPI networks. The fourth and fifth columns inshow P 2 transition matrices and module dividing lines for three basic motifs and LC values computed by P 2 , respectively. From P 2 in, we find that the nodes with the same interaction patterns have higher probabilities to walk to each other in two random walk steps. Therefore, the correct module identification of star and biclique motifs can be achieved by finding LC sets defined by the two-hop transition matrix P 2. For the clique motif, the nodes in cliques still have the same interaction patterns though the LC value computed by P 2 increases. Therefore, the corresponding cliques can still be correctly identified by LCP 2 as potential modules. The example of these three motifs demonstrates that dense modules like cliques and sparse modules such as stars and bicliques can be identified simultaneously through searching for LC sets based on P 2. Based on these motivating examples, finding LC sets using P 2 has the promising potential to discover biologically meaningful modules consisting of the nodes with similar interaction patterns. We now provide the mathematical formulation and the optimization algorithm to solve LCP 2. Similar to LCP, we aim to solve the following minimization problem LCP 2 by using the two-hop transition matrix P 2 :is the new conductance based on P 2. Note that P 2 is still a stochastic matrix and its stationary distribution is also (P T P T  P T  ). We can derive that(proof is provided in Supplementary Materials). With these, the aforementioned problem (3) can be transformed to an equivalent formulation:As the underlying Markov chain is ergodic given a connected network, we have i P ij  j P ji  A ij =M and i  d i =M. By expanding the objective function in (4), we can further derivewhere x h denotes the hth column of the n  k module assignment matrix X, which lies in the space:in which 1 k and 1 n are vectors with all of their elements equal to 1. Combining the transformed objective function and the constraint set (5), we can express LCP 2 as the following optimization problem:s:t:
Module identification by interaction patterns
Non-overlapping algorithm We can further transform theproblem (F) to the following relaxed optimization problem (detailed explanation is given in Supplementary Materials): F1 max trace Y T WY   s:t:THEOREM 1. (Ky Fan Theorem) Let T be a symmetric matrix with eigenvalues 1 ! 2 ! ::: ! n and the corresponding eigenvectors U  u 1 ,. .. , u n . Then P k i1 i  max X T XIk traceX T TX. Moreover, the optimal X  is given by X   u 1 ,. .. , u k Q with Q being an arbitrary orthogonal matrix.Following this theorem, we can use the largest k eigenvectors of the Gram matrix W to approximate the module assignment matrix Y. Therefore, we propose our module identification algorithm SLCP 2 in Algorithm 1.Algorithm 1 (Non-overlapping): Spectral algorithm for LCP 2 (SLCP 2 )Input: Adjacency matrix A and the number of modules k Output: Module assignment matrix X n 1. Add self loops to A  A  I n 2. Compute W  D 1=2 AD 1 AD 1=2 3. W   W  DiagdiagW 4. Find the largest k eigenvalues and their corresponding eigenvectors E, V k   eigW  , k 5. Obtain the approximated module assignment R by pivoted QR decomposition: V T k P  QR11, R12, then R  I k R 1 11 R 12 P T 6. The module membership of each node is determined by the row index of the largest element in the absolute values of the corresponding column of R The first step in the algorithm aims to compute the interaction similarity more accurately by considering the self connection. Adding self loops can make dense modules more distinguishable and avoid impairing the dense modular structure by considering interaction patterns. The second step computes W. The third step removes the diagonal part of the Gram matrix W to get rid of the influence of self similarity because proteins tend to be clustered into single node modules when they have large self similarities. To obtain modules of appropriate size, removing self similarity is necessary. The fourth step obtains the k largest eigenvectors of W . Steps 5 and 6 use the pivoted QR decomposition to approximate the module assignment matrix X (). The pivoted QR decomposition is a better option than the classic k-means method. It is well known that the performance of k-means heavily depends on its initialization. However, when dealing with a large-scale network that may have thousands of potential modules, it is difficult for k-means to find good initializations. Using the pivoted QR decomposition avoids the initialization step, therefore better performance can be achieved. As illustrated, the last column ofexhibits the second largest eigenvector of W  , from which we can easily distinguish the two different modules in the three motifs in.
Overlapping algorithm Based on the previously derived Grammatrix W, which contains the information of interaction similarity among all the nodes in the given network, we can further derive a bottom-up greedy algorithm to identify overlapping functional modules. The procedure of the greedy algorithm is illustrated in Algorithm 2. The idea of adopting the greedy strategy is similar to the one used in ClusterOne () to grow each module from each single protein as a seed. For each iteration, we add proteins to modules to acquire the most gain in the weight density of a module h, which can be computed aswhere W i, j measures the interaction similarity between proteins i and j. We keep adding proteins to potential modules until there is no increase of the weight density.LCP 2 formulation can detect both densely connected modules and sparsely connected modules (the sparsely connected modules contain proteins with similar interaction to the rest of the network), we use two quality functions to evaluate the obtained modules. One quality function is qf d  edgedensity  sqrtsize, which has been similarly adopted in Shih and Parthasarathy (2012) to identify high-quality dense modules. The other quality function is qf s  #:sharedproteins=size for sparse modules. We remove the modules when qf d 5 and qf s 5, where and are two user-specified thresholds. With larger and , we may remove a larger number of low-quality modules by qf d and qf s. After removing low-quality modules, we merge highly overlapped modules based on NAa, b  jVa\Vbj 2 jVajjVbj , where a, b are two modules with V a and V b proteins respectively. If NAS i , S j 4p, we merge modules S i and S j together. Here, p is another tuning parameter and we typically set it over 0.9 to guarantee that only highly overlapped modules are merged.
EXPERIMENTSWe first introduce how we implement the algorithms that we take for performance comparison, where we obtain the PPI networks and protein complex golden standard sets, and what criteria we use to evaluate the performance of the selected algorithms. After that, we compare all algorithms on synthetic networks with both dense and sparse modular structures and show that both the nonoverlapping and overlapping algorithms (SLCP 2 and GLCP 2 , respectively) based on the two-hop transition matrix outperform all other state-of-the-art methods. Then, we analyze the performance of protein complex and high level GO term predictions to demonstrate the potential of predicting biologically meaningful modules by all compared algorithms. In the end, we illustrate that the algorithms based on our LCP 2 formulation are superior to the state-of-the-art algorithms in identifying sparse functional modules by displaying the module detection results for several specific biological functional sparse modules.
Algorithms, data and metric3.1.1 Algorithms For algorithms that identify non-overlapping modules, we compare SLCP 2 with five state-of-the-art algorithms, which are LCP (), MCL (van), RMCL (), GS () and PG (). Comparing with LCP aims to show that finding LC sets through P 2 is superior to LCP based on the conductance definition by P, as LCP only focuses on detecting dense modules. We also compare SLCP 2 with MCL and RMCL because they are widely used network clustering algorithms in biological network analysis and have been shown to give biologically meaningful results. Additionally, two other algorithms, GS and PG, are chosen as they search for modules based on interaction patterns and hence are also able to detect both dense and sparse modules as SLCP 2 does. For overlapping module identification algorithms, we compare our GLCP 2 with two other recently proposed algorithms: ClusterOne () and LinkComm (Link Community) (). To distinguish non-overlapping and overlapping algorithms, we mark all the overlapping algorithms with a star (*) in all the figures in our experimental results. As discussed earlier, LCP is equivalent to the normalized k-cut problem (). Therefore, we adopt the spectral method proposed in Xing and Jordan (2003) to solve LCP. The implementation of the k-means clustering algorithm used by LCP is based on the procedure proposed in Bisgin and Dalfes (2008). We have obtained the source code for MCL (http://www.micans.org/mcl), RMCL (http://www.cse.ohiostate.edu/satuluri/research.html), GS(https://open-innovation. alcatel-lucent.com/projects/gscode/), PG(http://www.biotec.tudresden.de/re-search/schroeder/powergraphs/), ClusterOne(http://www.paccanarolab.org/cluster-one/index. html) and LinkComm (https://github.com/bagrow/linkcom) from the web pages provided in the corresponding articles. For non-overlapping module identification algorithms, SLCP 2 and LCP have one parameter k (the number of modules) and MCL also has one tuning parameter called 'Inflation' I F. RMCL has two tuning parameters, which are 'balance' b and 'Inflation' I F. For the number of modules k in SLCP 2 and LCP, we implement the grid search from k  5003000 with an interval of 100. For I F in MCL, we similarly search from 1.2 to 5.0 with an interval of 0.1. For RMCL, we set b and I F to 0.5 and 2.0, respectively, based on the suggestions in the articles (). Because both PG and GS are hierarchical bottom-up algorithms, they do not have any tuning parameter. For overlapping module identification algorithms, LinkComm has one parameter t and GLCP 2 has three parameters , and p. For LinkComm, we set the threshold t  0:2 as it yields the best results in our experiments. For GLCP 2 , the parameters set , , p determines the quality of the results. From our experience, , p  0:8, 0:9 gives good performance. As to , it depends on the density of the original network. In the following experiments, we set  0:76 for the Sce PPI networks and  0:7 for the Hsa PPI networks because the Hsa PPI networks are more sparse than the Sce PPI networks.
DataWe have run all these selected algorithms on four PPI networks. Two of them are S.cerevisiae (Sce) PPI networks obtained from the DIP () (SceDIP) and BioGRID database () (SceBioGRID), respectively. The other two are the H.sapiens (Hsa) PPI networks extracted from HPRD () (HsaHPRD) and BioGRID database () (HsaBioGRID), respectively. We use the largest components of these four networks as the input of the algorithms. We evaluate the complex prediction performance of the algorithms based on four protein complex golden standards. For Sce PPI networks, we use Munich Information Center for Protein Sequences (MIPS) () and Saccharomyces Genome Database (SGD) () golden standards. For Hsa PPI networks, we adopt the Human Protein Complex Database with a Complex Quality Index (PCDq) () as well as CORUM (comprehensive resource of mammalian protein complexes) golden standards () for our performance evaluation. We use all golden standard protein complexes with two or more proteins in all our experiments. For examining whether the detected modules capture protein functional relationships other than just protein complexes, we use the high-level GO terms in all three domains (molecular function (F), biological process (P) and cellular component(C)) as the golden standard for GO term prediction. Any GO term, whose information content (IC) () is42, is considered as a high-level GO term. The definition of the IC of a GO term g is IC  log jgj=jrootj  as given in Shih and Parthasarathy (2012), where 'root' is the corresponding root GO term (either F, P or C) of g. In addition, we remove GO terms that contain 52 proteins. The detailed information of the networks, complex golden standards and GO terms are listed in.
MetricTo evaluate the performance for complex prediction, we use two independent quality measures [used by] to assess the similarity between the predicted complexes and the golden standard reference complexes. In our experiments, we set the minimum size of detected modules to three for fair comparison between all competing algorithms. The first measure counts the number of predicted modules matched to the golden standard reference modules. A predicted module a with V a proteins is considered a match to a reference module b with V b proteins when the neighborhood affinity NAa, b  jVa\Vbj 2 jVajjV b j ! 0:25 (). The threshold of 0.25 is chosen because it represents the case when at least half of the complexes overlap if the two compared complexes are equally large. The second measure is the geometric mean of two other measures, which is the cluster-wise sensitivity (Sn) and the cluster-wise positive predictive value (PPV) (). Given r predicted and s reference complexes, let t ij denote the number of proteins that exist in both predicted complex i and reference complex j, and w j represent the number of proteins in reference complex j. Then Sn and PPV can be defined asBecause Sn can reach its maximum by grouping all proteins in one module, whereas PPV can be maximized by putting each protein in its own module, we use their geometric mean as 'accuracy' to balance these two measures (Acc  ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi Sn  PPV p ) (). To investigate the functional significance of identified modules, we follow the same strategy in Shih and Parthasarathy (2012) to compute F measure based on high-level GO term prediction. Let C  c 1 , c 2 ,. .. , c k f gdenote the identified modules and G  g 1 , g 2 ,. .. , g l   denote the selected GO terms. We can calculate the number of identified modules that match at least one GO term denoted by N cp : N cp  j c i 2 CjNAc i , g j 40:25,  9g j 2 Ggj. The number of GO terms that match at least one identified module can be computed: N cg  j g i 2 GjNAc i , g j   40:25, 9c i 2 Cgj. Based on these numbers, we can further compute precision and recall: precision  Ncp jCj , recall  Ncg jGj. The final F-measure is the harmonic mean of precision and recall: F  2  precision  recall=precision  recall. Finally, all experiments illustrated in this article can be accomplished within 1 h on a 2.4 GHz quad-core CPU and 6 GB RAM computer. Except when identifying modules in the HsaBioGRID PPI network, PG and SG fail to execute due to the large memory requirement from two algorithms for this large PPI network. Based on the simulation results, the run time of SLCP 2 and GLCP 2 is competitive with the other algorithms. For example, SLCP 2 only takes around 2 min for clustering the SceDIP PPI network into k  1000 modules and GLCP 2 needs 51 min for analyzing the SceDIP PPI network.
Synthetic networksTo illustrate the performance difference of different algorithms, we first evaluate all the selected algorithms on synthetic networks with the known ground truth. The modular structure of synthetic networks is shown in. There are three dense modules of different sizes together with two sparse modules of the same size. To test statistical significance, we generate the null model by shuffling edges from an original synthetic network based on the MaslovSneppen procedure ().is one example of the random network after half of the original edges are permuted. The performance is evaluated by generalized normalized mutual information (GNMI) () for both non-overlapping and overlapping module identification algorithms. GNMI ranges from 0 to 1 and it equals to 1 when the module identification result is the same as the ground truth.shows the mean values and the standard deviations of GNMI obtained by all the algorithms on 100 random null networks. For non-overlapping algorithms, SLCP 2 is superior to LCP, MCL and RMCL. For PG and GS, although the obtained GNMI values are better than LCP and MCL, they may not provide useful biological information as their identified modules are fine grained (one or two nodes in each module). For overlapping module identification algorithms, GLCP 2 outperforms ClusterOne and LinkComm.plots the logp  value of the t-test scores of SLCP 2 compared with other non-overlapping algorithms as well as the comparison of GLCP 2 to, we find that both SLCP 2 and GLCP 2 are significantly better than other state-of-the-art algorithms on synthetic networks with the ground truth modular structure. In addition, we estimate the statistical significance for each identified module in synthetic random networks for all nine algorithms. We annotate the dense modules inas D1, D2 and D3 and sparse modules as S1 and S2. Based on 100 random null networks, for each module, we can obtain the distribution of corresponding Acc scores based on the knownground truth.displays the mean values and the standard deviations of Acc scores produced by all the algorithms on every module in. For example, the first nine bars indicate the mean values and the standard deviations of Acc scores from all nine competing algorithms in detecting dense module D1 in. Based on the distributions of Acc scores, we can further compute the P-values of our proposed algorithms compared with other state-of-the-art algorithms.plots the logp  value of the t-test scores of SLCP 2 compared with other non-overlapping algorithms and the comparison of GLCP 2 to ClusterOne and LinkComm on all five modules, respectively. We consider our algorithms are significantly better when logp  value ! 3 p  value 1:0e  3. From, we find that LCP and SLCP 2 are competitive in identifying dense module D1. For the rest of the modules and algorithms, the logp  value values shown inimply that our SLCP 2 and GLCP 2 achieve significantly better performance in detecting both dense and sparse modules. Furthermore, from, we find the bars for sparse modules (S1 and S2) are typically higher than those corresponding to dense modules, which further validates that the competing algorithms focus more on detecting dense modules, whereas our proposed algorithms can simultaneously detect both dense and sparse modules based on interaction patterns.
Complex predictionWe test the quality of a module identification algorithm by how well it can be applied to make predictions for protein complexes. We compare SLCP 2 with other state-of-the-art non-overlapping module identification algorithms, including LCP, RMCL, MCL, GS and PG, on four PPI networks. Also, to detect overlapping modules, we compare GLCP 2 with ClusterOne and LinkComm. The information of the module identification results and the optimal parameters used by each algorithm are reported in Tables 2 and 3. For non-overlapping module identification algorithms, as shown in Tables 2 and 3, SLCP 2 and RMCL are competitive and outperform all the other non-overlapping algorithms. For the SceDIP PPI network, SLCP 2 achieves better performance than RMCL because it predicts more matched protein complexes and has a higher Acc score. For other PPI networks, SLCP 2 and RMCL obtain competitive results, as SLCP 2 consistently predicts more matched protein complexes, whereas RMCL gets higher Acc scores. In addition, SLCP 2 has the best coverage with more proteins clustered into corresponding modules on all four PPI networks except the SceBioGrid PPI network. For the SceBioGrid PPI network, RMCL only covers one more protein than SLCP 2. For overlapping module identification algorithms, based on Tables 2 and 3, we find that GLCP 2 outperforms LinkComm and ClusterOne. Although both GLCP 2 and LinkComm identify competitive numbers of protein complexes in different golden standards, GLCP 2 consistently achieves higher Acc scores for all four PPI networks. Finally, GLCP 2 also has the best coverage on all four PPI networks except the SceBioGrid PPI network, on which LinkComm has a higher coverage than GLCP 2. If we consider that LinkComm identifies larger numbers of smaller overlapping modules as shown in both tables, we expect that GLCP 2 may provide more biologically meaningful results. Furthermore, we test the statistical significance of our algorithms in terms of predicting the SGD golden standard complexes on the SceDIP PPI network. We first generate 100 random networks from the original SceDIP PPI network by randomly shuffling the original edges based on the MaslovSneppen procedure (). Then, we obtain the empirical distributions of Acc scores with respect to the prediction of the SGD golden standard on these 100 randomized networks for the competing algorithms. Based on the results provided in, we compare SLCP 2 with RMCL for nonoverlapping algorithms and GLCP 2 with LinkComm for overlapping algorithms because they are the two best-performing algorithms in predicting the SGD complexes among nonoverlapping algorithms and overlapping algorithms, respectively. For non-overlapping algorithms, the average and the standard deviation of Acc scores obtained by SLCP 2 are 0.5180 and 0.0064. Although for RMCL, the average and the standard deviation of the Acc scores are 0.5137 and 0.0044. For overlapping algorithms, the average and the standard deviation of Acc scores of GLCP 2 are 0.5018 and 0.0054. For LinkComm, the average and the standard deviation of the Acc scores are 0.4983 and 0.0047. By two-sample t-test, SLCP 2 is significantly better than RMCL with the P-value 1.429e-08 and GLCP 2 is significantly better than LinkComm with the P-value 1.095e-07.In summary, both SLCP 2 and GLCP 2 based on our new optimization formulation LCP 2 using the concept of random walk on graphs are among the best performing algorithms for protein complex prediction. However, protein complexes have typical dense modular structure within which proteins are highly connected. As our SLCP 2 and GLCP 2 aim to detect both dense and sparse modules, these protein complex prediction results only exhibit one aspect of our algorithms' performance. In thefollowing sections, we further compare the performance of different algorithms on functional module identification, especially for sparse module identification.
GO term predictionIn this section, we follow the same strategy in Shih and Parthasarathy (2012) to compare the biological significance of identified modules by all nine algorithms with respect to GO term prediction. Instead of using all GO terms, we only consider high-level GO terms with IC larger than two so that we can better understand the functional specificity of identified modules. The comparison for GO term prediction is illustrated inillustrates the F-measure comparison among all the algorithms.shows the percentage of GO terms that are considered to be correctly matched to at least one of the identified modules by different algorithms. Among non-overlapping algorithms,clearly illustrates that SLCP 2 not only detects the largest number of matched high-level GO terms for each PPI network, but also obtains the best F-measure score. Therefore, for non-overlapping module identification, SLCP 2 outperforms other state-of-the-art non-overlapping algorithms on high-level GO term prediction. For overlapping algorithms, based on,
Sparse module identificationTo further illustrate the advantage of our LCP 2 formulation in detecting functional modules with similar interaction patterns, we compare the performances of different algorithms with respect to identifying functional sparse modules in this section. However, in general, as we do not have sparse module golden standards, it is hard to provide quantitative measures for detecting sparse modules. In this section, we provide the examples of well-understood biologically meaningful sparse modules to evaluate the capability of different algorithms in identifying functional sparse modules. Through the comparison of identified corresponding modules, we demonstrate that our SLCP 2 and GLCP 2 are superior in detecting functional sparse modules.
Pro-survival proteins and cytochrome c releaseThe prosurvival proteins (BCL2, MCL1 and BCL2A1), which constitute the Bcl-2 subfamily, directly or indirectly prevent the release of cytochrome c from mitochondria (). Therefore, the pro-survival proteins module should interact with the module that has the release of cytochrome c from mitochondria functionality. In, we provide the comparison of the module identification results for detecting these two modules in the HsaBioGRID PPI network. For the pro-survival proteins module, we mark the three members in circle shapes. For the functional module with the release of cytochrome c from mitochondria functionality (HRK, BCL2L11, BID, BNIP3, BIK, PMAIP1, BAK1, BMF and BBC3), we mark the members in rectangle shapes. Shaded areas represent the modules detected by the corresponding algorithms. Based on the interactions in the HsaBioGRID PPI network, we find these two modules are sparse with constituent proteins having similar interaction patterns. As shown in, LCP detects part of the cytochrome c release module but fails to identify the pro-survival module. RMCL splits pro-survival proteins into two modules. MCL fails to detect both the cytochrome c release module and the prosurvival module. ClusterOne groups those two modules into one. LinkComm fails to detect the pro-survival modules. Only our algorithms SLCP 2 and GLCP 2 , which take the interaction patterns into account, achieve the most promising results. For two algorithms PG and GS, which also consider the interaction patterns, we do not have their module detection results because both algorithms run out of memory on this relatively large network. 3.5.2 FGF/FGFR signaling FGF/FGFR signaling has been associated with a diverse and broad range of biological functions, including cell growth, cell differentiation and the promotion of angiogenesis (). FGFR stands for the fibroblast growth factor receptors, which bind to the members of the family of FGF (fibroblast growth factor) proteins. Based on their functionality, FGFR proteins should interact with FGF proteins.illustrates the module identification results for FGFR and FGF modules in the HsaHPRD PPI network. Based on the network structure, FGFR and FGF modules are two sparse modules. We mark the FGFR proteins in rectangle shapes and FGF proteins in circle shapes. Shaded areas represent the modules detected by the corresponding algorithms. As shown in, LCP, RMCL, MCL, ClusterOne and LinkComm again can not identify these two modules correctly. PG, GS and our algorithms have the ability to correctly detect them. However, PG and GS over-segment the FGFR module, whereas our algorithms can provide better module identification results. promising functional module identification results. Both MCL and RMCL are network clustering algorithms based on (stochastic) flow simulation that extends the similar random walk Markov chain idea by two operations for better performance: 'Inflation' and 'Expand'. However, both operators are heuristic strategies. Theoretically, why they give good results is still a mystery. PG and SG are two non-overlapping algorithms that identify functional modules in terms of interaction patterns. Because they apply greedy algorithms to solve the module identification problem, the quality of the results is not guaranteed. Last but not least, LinkComm is a novel algorithm based on an edge graph representation that tends to detect a large number of overlapping modules whose biological meaning may not be immediately clear due to the fine-grained modular structure. In our experiments, we have applied our algorithms to analyze four unweighted PPI networks, which can be viewed as binary (f0, 1g) edge-weighted networks. However, both SLCP 2 and GLCP 2 can be extended in a straightforward manner for the analysis of general edge-weighted networks by modifying corresponding terms in Algorithms 1 and 2 proposed in this article. We will evaluate the performances of algorithms in module identification by introducing reliable edge weights when they are available in our future work. Another limitation for SLCP 2 is how to decide the desirable number of modules k in advance. One possible way is to search k values within a certain range and choose k with the best average weight density computed by (8). In our future research, we will also explore the ideas adopted into determine k based on the partition density and/or module entropy score, respectively. Finally, GLCP 2 is our preliminary solution strategy for identifying overlapping modules based on the LCP 2 formulation. We plan to further investigate the properties of the Gram matrix W, and we expect that we may achieve better performance with a better understanding of the problem structure. In conclusion, we propose a novel formulation to achieve functional module identification based on protein interaction patterns in PPI networks. An efficient spectral algorithm, which can obtain a close-to-optimal solution based on Ky Fan theorem, is designed to solve the new optimization problem for non-overlapping module identification. We also develop a greedy algorithm to solve the same problem but obtain overlapping results. Our algorithms not only can overcome the limitation of traditional module identification algorithms, which only focus on identifying dense modules, but they also have a better scalability for large-scale PPI networks to efficiently solve module identification problem. Experimental results show thatour SLCP 2 and GLCP 2 have achieved promising results on both protein complex and GO term predictions on four large-scale PPI networks. Most importantly, our new algorithms can detect functional sparse modules, which are often ignored by many other existing algorithms.
Y.Wang and X.Qian at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
& 7 where W  D 1=2 AD 1 AD 1=2 , and Y  D 1=2 X X T DX   1=2 denotes the relaxed assignment matrix, which is orthonormal. Let H  D 1=2 AD 1=2. We can rewrite W  HH T as the inner-product of H. Taking each column of H as the normalized interaction pattern of the corresponding node, this Gram matrix W measures the interaction similarity among different nodes (we note that the inner-product can be replaced by a general Mercer kernel if needed). According to this inner-product form of W, nodes in dense modules have high similarities as they share the same interaction pattern, which is to interact with each other within modules. At the same time, similarities among nodes in sparse modules are high because they interact with similar neighbors in the rest of the network. Consequently, similarities among nodes with similar interaction patterns (no matter whether in dense or sparse modules) are higher. Therefore, nodes that play identical roles in the network can be grouped together. We note that a formulation similar to ours has also been independently presented in Satuluri and Parthasarathy (2011). The authors in Satuluri and Parthasarathy (2011) have proposed to use a symmetrization strategy AA T to detect interaction patterns of nodes. In our new LCP 2 formulation, module identification depends on the different form HH T , which can be viewed as the normalized version of AA T. As shown in previous results obtained by normalized cuts, we expect that this new formulation depending on the normalized version HH T may yield more balanced modules that may lead to biologically meaningful functional module identification results. To derive the solution strategy for LCP 2 , we relax Y to be an orthonormal matrix and it turns out that (F1) has a closed-form solution based on Ky Fan Theorem.
Functional module identification by interaction patterns at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
DISCUSSION AND CONCLUSION The compared module identification algorithms in this article use different module definitions and methods. LCP, ClusterOne, SLCP 2 and GLCP 2 are all based on finding LC sets defined by the Markov chain of random walk on networks. LCP and ClusterOne are the non-overlapping and overlapping algorithms of searching for LC sets defined by the transition matrix P (LCP) of the underlying Markov chain. Therefore, they tend to find densely connected modules. However, SLCP 2 and GLCP 2 are respective algorithms for searching for non-overlapping and overlapping modules by finding LC sets based on the two-hop transition matrix P 2 (LCP 2 ) of the random walk Markov chain. By taking the advantage of finding two-hop LC sets, our new algorithms detect modules based on the interaction patterns, which reflect functional similarity between proteins. In Satuluri and Parthasarathy (2011), the authors present a similar formulation to search for modules based on the interaction similarity. However, our formulation depending on the Gram matrix W derived by LCP 2 can be viewed as the normalized version of the symmetrization matrix proposed in Satuluri and Parthasarathy (2011). Generally, as in normalized cuts, the normalized version often gives balanced modules that may lead to more Fig. 4. The top bar figure shows the comparison results based on the F measure on four PPI networks. The bottom figure displays the comparison of the percentages of matched GO terms in the complete set of selected high-level GO terms. For the HsaBioGRID PPI network, GS and PG fail to execute due to the memory limitation
