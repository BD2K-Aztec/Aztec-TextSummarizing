Motivation: The DNA binding specificity of a transcription factor (TF) is typically represented using a position weight matrix model, which implicitly assumes that individual bases in a TF binding site contribute independently to the binding affinity, an assumption that does not always hold. For this reason, more complex models of binding speci-ficity have been developed. However, these models have their own caveats: they typically have a large number of parameters, which makes them hard to learn and interpret. Results: We propose novel regression-based models of TF–DNA binding specificity, trained using high resolution in vitro data from custom protein-binding microarray (PBM) experiments. Our PBMs are specifically designed to cover a large number of putative DNA binding sites for the TFs of interest (yeast TFs Cbf1 and Tye7, and human TFs c-Myc, Max and Mad2) in their native genomic context. These high-throughput quantitative data are well suited for training complex models that take into account not only independent contributions from individual bases, but also contributions from di-and trinucleotides at various positions within or near the binding sites. To ensure that our models remain interpretable, we use feature selection to identify a small number of sequence features that accurately predict TF–DNA binding specificity. To further illustrate the accuracy of our regression models, we show that even in the case of paralogous TF with highly similar position weight matrices, our new models can distinguish the specificities of individual factors. Thus, our work represents an important step toward better sequence-based models of individual TF–DNA binding specificity.
INTRODUCTIONAt the level of transcription, gene expression is regulated mainly via the binding of transcription factors (TFs) to specific short DNA sites in the promoters or enhancers of genes they regulate. Accurate characterization of the DNA binding specificity of TFs is critical to understand how these proteins achieve their regulatory purpose in the cell. Currently, the most widely used model for representing the DNA binding specificity of a TF is the position weight matrix (PWM, or DNA motif) (), a matrix containing scores (or weights) for each nucleotide at every position in the TF binding site. PWMs can perform well in practice: these models have been combined with chromatin accessibility data to successfully predict where specific TFs bind across the genome in a cell-specific way (). However, PWM models make the assumption that individual bases in a TF binding site contribute independently and additively to the affinity of that site, which is not always true in practice. Dependencies among positions within TF binding sites have been observed in small-scale experimental studies (), in statistical analyses of known TF binding sites (), and in computational analyses of high-throughput in vitro and in vivo TF binding data (). This suggests that extending the classic definition of a PWM may lead to specificity models that better fit the TF binding data. Indeed, several studies have explored more complex models of TFDNA binding specificity and found that they outperform PWMs (). However, complex models are typically characterized by a large number of parameters, which makes them hard to interpret () and prone to overfitting (). Here, we present regression-based models of TFDNA binding specificity, which take into account both the contributions from individual bases in a TF binding site and the contributions from higher-order k-mers. Our approach differs from previous work in three aspects: (i) our models are trained on high-throughput quantitative data generated specifically for this task; (ii) we use a new feature selection method based on LASSO regression () to restrict the number of features, which makes our models easier to visualize and interpret; and (iii) we include dependencies by using 2-mers and 3-mers as features and by using a non-linear support vector regression (SVR) method. The first aspect is important because many previous models were trained either on a small number of high-resolution binding regions () or on high-throughput in vivo data (), both of which are noisy, have low resolution and may reflect both direct and indirect DNA binding of the tested TFs (). In vitro data from high-throughput assayssuch as protein binding microarrays (PBMs) (), MITOMI () or highthroughput SELEX ()are more appropriate for learning complex models of TFDNA binding specificity (*To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com). Here, we use the PBM technology to generate custom data on the binding specificities of the TFs of interest. Our microarray designs contain hundreds or thousands of genomic DNA regions centered at putative DNA binding sites for the TFs of interest (see Section 2 for details). The features used in our regression models are based on the occurrences of 1-mers, 2-mers and 3-mers at various positions in the TF binding sites or their flanking regions. Regression models that take into account all k-mers have hundreds or thousands of parameters, depending on the value of k and on the size of the flanking regions. Such a large number of parameters can lead to overfitting the training data and also make the models hard to visualize and interpret. To overcome this problem, we use a feature selection approach based on LASSO regression (). This allows us to drastically reduce the number of parameters to estimate while maintaining high prediction accuracy. To illustrate the accuracy of our regression models, we train and test them on custom PBM data for five TFs from the bHLH protein family: yeast TFs Cbf1 and Tye7, and human TFs c-Myc ('Myc'), Max and Mad2 ('Mad'). We show that for both yeast and human bHLH TFs, our regression models can distinguish the binding specificities of individual family members, although their PWMs () are highly similar. This illustrates that our approach may be used to better understand the importance of intrinsic sequence preferences for achieving specificity within TF families.
APPROACHOur approach for learning TFDNA binding specificity models is summarized in. We design custom microarrays that contain genomic regions centered at putative TF binding sites. Next, we measure TF binding to the selected genomic regions, using the PBM technology (). Briefly, in a PBM experiment, we express each TF of interest with an epitope tag (typically a GST or 6xHis tag), purify it and apply it to a doublestranded DNA microarray. After the TF binds its preferred sequences on the microarray, we label the microarray with a fluorophore-conjugated antibody specific for the protein tag. Next, the microarray is scanned to generate a fluorescence intensity value for each DNA sequence present on the array. Higher intensities correspond to DNA sequences with higher affinities for the TF. The vast majority of PBM data available in the literature have been generated using 'universal' array designs, which contain artificial DNA sequences designed to collectively cover all possible 10-mers (). Thus, universal PBM data provide a broad, unbiased view of the DNA binding preferences of TFs. However, universal PBM data are not suitable to predict binding of a TF to longer genomic sequences. To overcome this problem, we designed custom 'genomic' arrays to directly measure TF binding of putative DNA binding sites in native genomic context. The DNA sequences on our custom microarrays were designed to include a large number of potential DNA binding sites for the TFs of interest. To learn the DNA binding specificities of Cbf1 and Tye7, we used custom PBM data from Gordan. For Myc, Max and Mad, we designed a new array containing potential Myc/Max/Mad binding sites extracted from the human genome. As all bHLH TFs used in this study are known to have a strong preference for the E-box CACGTG, both the Cbf1/Tye7 and the Myc/Max/Mad array designs focus on the genomic sites centered at this E-box (). From the raw PBM data, we compute the natural logarithm of the normalized signal intensity for each DNA sequence containing the E-box CACGTG flanked by genomic sequences of 12 or 15 bases on each side for Cbf1/Tye7 and Myc/Max/Mad, respectively. Next, we derive quantitative features from the sequence content of the genomic regions flanking the CACGTG E-box core, and we use them to train regression models that can predict the PBM signal intensity (i.e. the in vitro TFDNA binding specificity). Our custom PBM data allow us to investigate whether the genomic flanks of the E-box sites influence binding affinity differently for distinct members of the same TF family. Regression-based approaches are a natural fit for the continuous intensity data from PBM experiments. The purpose of a regression model is to estimate a function f to fit the output y to the input features X as y  fX. In our case, y is the binding intensity as measured on the microarray and X are DNA sequence features. In particular, to introduce dependency effects, we take X to be all individual nucleotides, and all pairs, triplets and quadruplets of sequential nucleotides (2-mers, 3-mers and 4-mers) in the DNA sequences in our training set. A good candidate function is expected to fit the training set well (i.e. y close to f(X)) and to produce accurate predictions on new test examples (i.e. low generalization error). The latter is usually assessed by cross-validation experiments, where part of the dataset is used to learn the regression function, which is used to predict the output y on the held out part. When X is of high dimension, regularization is a standard practice, which consists in smoothing function f to ensure low
Feature derivation11.64 0 0 1 1 1 0 0.5 1 11.90 1 0 0.5 1 0 1 0.5 0 11.55 0 0.5 0.5 0 0.5 1 1 1 11.28 0.5 1 0.5 1 0 0generalization error and to prevent overfitting. One method of regularization, known as 'feature selection', is to select a small subset of features that are sufficient to model the data. We note that our DNA sequence features result in high-dimensional features, which support the use of feature selection. Feature selection lends a model interpretability, by basing predictions on a small number of features that may have biological meaning, which is a desirable property when one wants to study further which features contribute to model accuracy. Two popular regression methods are SVR (Smola and) and LASSO regression (). SVR often has good generalization error properties and, when used with a non-linear kernel, can capture non-linear functions f. LASSO regression includes an L 1 constraint that selects a small subset of features in X to explain the y variable and is preferred for interpretability purposes. However, the feature set selected by LASSO is not robust, even to slight perturbations of the data. This lack of stability casts doubt on the relevance of the subset of variables it selects. Following previous work (; Meinshausen and Buhlmann) on 'stability selection', we propose a regression scheme that combines SVR and a stable feature selection procedure based on LASSO. We describe our methodology in detail in Section 3 and show the performance of our models on human and yeast TF binding data in Section 4.
METHODS
PBM dataCustom PBM data for Cbf1 and Tye7, in the form of normalized log signal intensity values, were obtained from Gordan. For Myc, Max and Mad, we performed PBM experiments () using 6xHis-tagged proteins expressed and purified in bacteria (as described in). As Myc requires heterodimerization with Max to bind DNA efficiently, the Myc PBM experiments were performed using both Myc and Max on the same microarray. As in previous work (), we used a 10 times higher concentration of Myc compared with Max to ensure that mostly Myc:Max heterodimers, instead of Max:Max homodimers, are formed. Similarly, Mad PBM experiments were performed using both Mad and Max on the same microarray, with a 10 times higher concentration of Mad. The Myc/Max/Mad custom array contains, in addition to positive and negative control sequences, 36-bp long human genomic regions centered at CACGTG sites. After scanning the microarray and normalizing the raw PBM data (as described in), we compute, for each genomic sequence, the median log signal intensity over the six replicate spots that contain that particular sequence. These median log intensity values are used by the regression algorithms. In addition, to test the reproducibility of our PBM data, we performed replicate PBM experiments for TF Myc. We obtained a Pearson correlation coefficient (R) of 0.98 between replicate experiments. Before training regression models using the custom PBM data, we filtered out any sequence that contained potential TF binding sites in the regions flanking the CACGTG core, to ensure that each sequence contains one and only one TF binding site. We required that the flanks do not contain any 8-mer with a PBM enrichment score (E-score) greater than 0.3. PBM E-scores range from 0.5 to 0.5, with higher values corresponding to higher sequence preferences; typically, E-scores 4 0.35 correspond to specific TFDNA binding (). After the filtering step, we obtained 280 sequences for Cbf1, 312 for Tye7, 4917 for Myc, 4430 for Max and 4292 for Mad. As expected, the number of sequences for each TF is much higher for the human TFs as compared with yeast TFs. For each TF, we use N to denote the number of DNA sequences selected from the custom PBM data. The averaged DNA binding intensities (as measured on the PBMs) are the output y  y 1 ,. .. , y N  that we aim to predict using regression models.
Feature derivationIt is commonly accepted that much of the binding specificity of a proteinDNA complex is encoded in the base content of the DNA sequence. Therefore, our regression methods use sequence-based features. Numeric features are derived from sequences as follows. bHLH TFs typically bind DNA as dimers, i.e. two copies of the same protein or related proteins interact to bind two symmetric half-sites. Thus, as there is no way to define a 'left' versus a 'right' flank, we describe the base content of the two flanks simultaneously. To do so, we define the flanks as a single sequence using the palindromic symmetry of the E-box as shown in. For each position flanking CACGTG, from 1 to 12 for Cbf1/Tye7 or 1 to 15 for Myc/Max/Mad, we count the occurrences of each k-mer, where k 2 f1, 2, 3, 4g. We obtain n vectors describing the sequenceswhere: x i j  0:5 if the k-mer is present at that position in one flank 1 ifthek-mer is present at that position in both flanks 0 otherwise 8 < :The index j refers to one k-mer at a particular position. p is therefore the product between the length of the flanking sequence and the number of k-mers used (seefor values of p). More precisely, a feature value of 1 means the corresponding k-mer is present in one flank at the corresponding position, and its complementary k-mer is present in the other flank at the same position. We eliminate those k-mer features that are completely absent from all sequences. We note that Cbf1, Tye7 and Max bind DNA efficiently as homodimers, i.e. using two copies of the same protein, whereas Myc and Mad
Feature selection with 'Stable LASSO'LASSO regression enables feature selection through the use of an L 1 penalty. In particular, the output y is modeled as a linear function of the input features X by estimating the coefficient vector w 2 R p that minimizes the squared residual error plus the (scaled) absolute value of the coefficient weights, inducing many of the weights to go to zero, and effectively eliminating the use of that feature in prediction. We can write LASSO regression as the following optimization problem:Parameter reflects the trade-off between fit and sparsity, or the proportion of features removed. The penalty term means that a solution w becomes sparser as increases. Thus, a smaller set of features are used to model y. The least angle regression (LARS) algorithm () allows us to compute the solution path for all values of. This iterative algorithm adds features to the linear model one by one and exploits the fact that the w coefficients vary continuously as increases. A good value for is often chosen by cross-validation; instead, we keep the whole solution path, in a stability selection procedure described later in the text. LASSO regression is sensitive to perturbations of the training set and often does not result in a robust set of selected features. This is especially true when the features are correlated, as is the case here because of redundancy between k-mers of different lengths. As the coefficient values estimated for each feature are unstable, they cannot be used directly as importance scores for features. To overcome those limitations,;and Meinshausen and BuhlmannBuhlmann (2010) have proposed the use of a stability selection procedure. This consists in randomly perturbing the dataset many times, running LASSO on those perturbed datasets and combining the successive regressions to obtain importance scores for each feature, based on the frequency with which they are selected in the successive LASSO runs. Such a score is akin to a probability that the feature should participate in the model.
Algorithm 1 Stable LASSOINPUT: X 2 R n, p , y 2 R n ,  perturbation level, T  number of iterations OUTPUT: An area score for all features for t  1 to T do Randomly perturb the data: Draw a subsample (y t , X t ) of size n/2 from (y, X)Compute the LASSO path of length n/2 using LARS Keep the selection matrix F t 2 f0, 1g p, n=2 where F t i, j  1 if i-th feature selected at j-th LARS step 0 otherwise &
end forCompute the area score for feature i asAs described in Algorithm 1, at each iteration t  1. .. T, we perturb the original training set (y, X): we randomly subsample one half of the training set (y t , X t ) and reweight all features in X t using randomly generated weights w drawn uniformly on. Parameter controls the level of perturbation: a smaller implies more variable weights, whereas  1 means no reweighting. In practice, instead of a loop of length T as shown in Algorithm 1, we run a single loop of length T/2 and compute the LARS path on the two random halves of the dataset at each iteration. This still allows us to compute the 'area score' (i.e. the feature importance score) as the average of T selection frequency matrices, as shown in. The area score can be interpreted as the area under the average selection frequency curve over T iterations (see). In the classic version of LASSO regression, one needs to select a value for parameter. Instead, the area score uses the whole regularization path and therefore has the great advantage of avoiding any arbitrary cutoff on the number of features and any additional computation time owing to parameter selection. We observed that the area scores were distributed according to a multimodal distribution, each model corresponding to a given k-mer length. This suggests we cannot apply a single uniform threshold on the importance score across all features with different values of k. Instead, we derive one threshold value for each group of features of the same length. To do so, we computed a background score distribution for each k-mer length by randomly permuting the intensity values and running Stable LASSO on the permuted values. We then select features with an area score higher than the mean plus two standard deviations of their corresponding background distribution. Finally, we use this feature subset as input to anSVR to learn binding specificity models. In Section 4, we show that this Stable LASSO selection procedure performs better than simply choosing a small number of features (random selection) or choosing features based on their SVR weights (SVR selection) (see).
Regression with SVRSVR () uses the concept of maximum margin () for regression. SVR is formulated as an optimization problem as follows:The only difference between the SVR and the SVM lies in the loss function, which is devised for a continuous output in the case of the SVR. This loss function, called the "-insensitive function, enforces the support vectors, or informative examples, to lie within a tube of width " around function f. Parameter C orchestrates the trade-off between the loss term, which enforces a good fit to the training data, and the margin term, which regularizes the f function and often produces better generalization error. Parameter " plays a similar role to C, with small values of " leading to a better fit on the training set, and larger values preventing overfitting. An essential ingredient to any SV method is the kernel function K, which can be thought of as a similarity function between any two example points. Function f can be written as fx  P N i1 i Kx i , x The simplest kernel is the linear kernel, which is the dot product between the feature vectors for two samples:implying f is linear in the input features x. Other kernels, however, yield a non-linear function f, via the 'kernel trick'. This consists in defining an implicit mapping of the original features into a higher dimension space and looking for a linear function f in that transformed space. A common non-linear kernel is the radial basis function (RBF) kernel, defined byThe linear SVR allows us to associate coefficients to the features by rewriting f(x) so that coefficient for variable j isHowever, the relationship between the features and the output is often better modeled by a non-linear (but not interpretable) kernel such as the RBF kernel. Each model was evaluated by computing by computing the squared Pearson correlation coefficient (R 2 ) between predicted DNA binding specificity/intensity and the actual PBM log signal intensity values.
RESULTS
Regression models trained on custom PBM data give accurate predictions of DNA binding specificityWe first evaluate the performance of full SVR regression models (i.e. without any feature selection) learned from yeast and human custom PBM data. To describe the DNA sequences, we used k-mers of different lengths and generated several features sets that included, successively, {1, 2, 3, 4, 12, 13, 14}-mers.shows the resulting number of features (p) for different feature sets. Next, for each feature set, we ran a linear and an RBF SVR. We used 10-fold cross-validation for parameter selection over a large grid of possible parameter values. Each model was evaluated by computing the Pearson squared correlation coefficient (R 2 ) between the predicted and the actual signal intensity of held out test data. For each method, a 10-fold cross validation was carried out to assess the performance in predicting binding specificity for test DNA sequences.shows that the linear and RBF SVR model predictions are well correlated with the actual intensity. Among the regression models tested here, linear SVR models based on 1-mer features are technically equivalent to PWM models, including the assumption of independence and additivity. These models fit the data well and result in R 2 values of 0.6 or higher in the 10-fold cross-validation test. This is in agreement with previous studies suggesting that even when the additivity assumption does not fit the data perfectly, in many cases, it gives a good approximation of the data (). However, taking into account non-independent contributions, by either using the RBF kernel or by incorporating 2-mer and 3-mer features, slightly improves the accuracy of our regression models trained on custom PBM data. Using 1-mers and 2-mers is enough to reach a good performance on Cbf1 and including 3-mers improves performance only slightly on Tye7. Taking into account 4-mer features in addition to 1-mers, 2-mers and 3-mers did not improve our models any further for TFs Cbf1 and Tye7 (). Based on this observation, we limited all experiments on the larger human datasets to feature sets containing 1-mers, 12-mers or 13-mers. Overall, from, we see that the best regression-based specificity models were obtained using the RBF kernel and either 12-mer or 13-mer features.
Feature selection using Stable LASSO maintains or improves the accuracy of DNA binding modelsAlthough the regression models trained on 12-mer and 13-mer features are highly accurate, they are hard to interpret because ofLinear SVR RBF SVR. Performance (R 2 ) of linear and RBF SVR regression methods (without feature selection) for learning binding specificity from sequence content. We used several feature sets to investigate the use of including longer k-mers in the models i121Stability selection for regression models of TF-DNA binding the large number of features (). To address this problem, we used the Stable LASSO feature selection procedure described in Section 3.3 and re-ran the linear and RBF SVRs using only the subset of selected features. The performance on the regression models remained almost the same or even improved slightly after the feature selection step (). We also compared the performance of Stable LASSO against a feature selection procedure based on the feature weights learned by the linear SVR model. More precisely, for each dataset, we ran a linear SVR using the full set of features, computed the feature coefficients, ranked the features in decreasing order of their absolute value and then selected the same number of features as were previously selected by Stable LASSO. We also implemented a 'random selection' procedure that selects randomly, the same number of features as Stable LASSO. We tested these two alternative procedures on the smaller of our two datasets (i.e. the yeast data).shows that both SVR selection and random selection perform worse than Stable LASSO, demonstrating the power of the bootstrap and randomization scheme to select relevant features for this problem, which maintain or even improve the accuracy of the model. In addition, we note that running feature selection before training the regression model greatly reduces the computation time, which is important, especially for the human TF data. As an example, for Cbf1 data, an RBF SVR without feature selection and with parameters optimized on a grid of size 1620 ran in an hour on a laptop with a 2.3 GHz Intel Core i5 and 4 GB RAM, when the method with Stable LASSO feature selection took only 7 min, and the parameters were optimized on the same grid. We believe this huge difference comes mostly from kernel computation, as it increases linearly with the size of the feature set. Moreover, we hypothesize that reducing the feature set might also make the problem easier to solve and therefore help the SVR algorithm to converge faster.reports the numbers of features that were selected for each feature set and TF. These numbers are small such that our models become interpretable, a desirable property for understanding how binding is enacted. This algorithm also provides a short list of features and their importance scores that reflect how often each feature was selected. To determine whether a particular sequence feature has a positive or negative influence on TF binding, we can look at the sign of the feature weight calculated from the linear SVR model (Section 3.4). As an example,shows the selected features for Cbf1 and Tye7, ordered by position on the flank from the core to the extremity (see), and then by k-mer size (i.e. first 1-mers and then 2mers). The second-to-last column gives the importance score assigned to each feature by our algorithm, and the last column is. Selected features for Cbf1 (top) and Tye7 (bottom) ordered by position on the flank and length. Positions are specified relative to the core of the binding site (position 1 is the closest to the core). The secondto-last column is the area importance score of the feature, and the last column reports the weight coefficient attributed to the feature by a linear SVR. In red, we show the features with the six top coefficients; the blue features are those that contribute negatively to binding. Predicting binding intensity for Cbf1, Tye7, Myc, Max and Mad using a regression-based model trained on selected features. The squared correlation coefficient between predicted intensity and actual intensity (yaxis) is computed for different feature selection strategies followed by a linear and an RBF SVR.
Interpretability
thecoefficient assigned to it when a linear SVR is trained on the selected set to predict binding intensity. We observe that the order on positions correlates well with the importance score order, suggesting that, as expected, positions right next to the E-box are more important than positions further away. Our selection procedure does identify features in the distal flanks that appear to be important for model accuracy (e.g. feature AA at position 11 in the Tye7 model,). Interestingly, the selected distal features are mostly 2-mers that exhibit specific DNA shape characteristics. For example, AA/AT dimers are typically bent toward the minor groove, and AA/TT shows the largest roll among all dimers (). Both minor groove width and roll are important for DNA binding by
Model specificityWhen trying to predict TFDNA interactions using models of DNA binding specificity, a difficult problem arises in the case of paralogous TFs (i.e. TFs that belong to the same protein family). Such TFs often have highly similar DNA binding specificities (), despite the fact that they are observed to interact with different sets of genomic sites in vivo). However, their PWMs are similar () () and cannot be used to distinguish the genomic regions bound in vivo by the two TFs with any specificity (). Myc, Max and Mad are members of a network of TFs that controls cell proliferation, differentiation and death. Despite playing different roles in the cell and having different sets of targets sites in vivo (ENCODE Project), Myc, Max and Mad have almost identical PWMs (). Myc, Max and Mad PWMs cannot be used to differentiate between the genomic regions bound in vivo by these factors (Munteanu and GordanGordan, 2013). To illustrate that our regression-based approach can generate TFDNA binding models specific enough to distinguish between paralogous TFs, we performed a comparison among three different types of models: (i) available PWMs of size 10 for the TFs of interest (); (ii) linear SVR models trained on custom PBM data using 1-mer features from the core 10 positions (these models are technically equivalent to PWMs of size 10, but learned from our quantitative PBM data); and (iii) RBF SVR models trained on custom PBM data following feature selection. We trained each model on data for one TF and used it to predict the binding specificity of related TFs. All the PWMs used in this analysis have been derived from universal PBM data and are in good agreement with previously reported motifs for the same TFs (). We chose PWMs of size 10 because they obtained the best correlation coefficients between the PWM log ratio scores (for the putative binding site in each PBM probe) and the PBM log signal intensity. Figures 9 and 10 present the results of our specificity analysis, reporting the squared correlation coefficients between predicted and true binding intensities. In general, we notice that a model learned on TF A is less accurate at predict intensity for TF B than the model actually trained on data for TF B. For instance, our best SVR models after stability selection for yeast TFs were obtained on 12-mer features. In a 10-fold cross-validation test, the model trained on Cbf1 data proved highly accurate at predicting Cbf1 binding specificity (R 2  0.737) and not so accurate(as in)Predictions from PWM model for TF: Cbf1 Tye7 Tye7 Cbf1. The specificity of RBF regression models with feature selection (using 12-mers for Cbf1/Tye7 and 13-mers for Myc/Max/Mad) (A), linear SVR 1-mers models trained on sites of size 10 (B) and PWM models of size 10 (C) was tested by comparing performance when predicting the binding intensity of test sequences from a model trained on the same TF versus a different TF. Numbers represent R 2 values i123Stability selection for regression models of TF-DNA binding at predicting Tye7 specificity (R 2  0.461); similarly for Tye7 (Figs 9 and 10A). The two PWM models in our comparison (and C) exhibit smaller and more similar correlation coefficients, and are therefore less accurate and less specific. For instance, we see that predicting binding signal for Cbf1 from the Cbf1 versus the Tye7 PWMs gives similar results () (R 2  0.147 and 0.130, respectively). Learning PWM-like models from the custom PBM data improves both the accuracy and the specificity of the models (), but the best models are the ones that include non-independent contributions and are trained on custom PBM data (). These results suggest that highly quantitative data (such as the custom PBM data in our study) allow us to gain both in specificity and accuracy. In addition, departing from the standard PWM model (by adding dependencies between adjacent positions and non-linear contributions to binding) helps improve the models even further on both levels.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
DISCUSSION We have presented a new approach for learning regression-based models of proteinDNA binding specificity from quantitative TF binding data, using SVR with feature selection. When tested on yeast and human TF binding data, our models are able to predict the specificity of each TF of interest. In addition, we show that the regression models trained on custom PBM data are able to distinguish binding behaviors of paralogous TFs, even when their PWM models are similar. Several factors contribute to the accuracy and specificity of our TFDNA binding models. First, we train our regression models on quantitative highresolution data obtained using a high-throughput in vitro technology (PBM). This allows us to train complex models of specificity without the risk of overfitting the training data. Highthroughput, in vitro data, including data generated using the PBM technology, has been previously used to train complex models of TFDNA binding specificity (Agius et al., 2010; Annala et al., 2011; Weirauch et al., 2013). Our approach is somewhat similar to the work of Agius et al. (2010) and Annala et al. (2011), who also learn regression models from PBM data. However, both these studies use PBM data generated using universal array designs, which contain artificial DNA sequences designed to collectively cover all possible 10-mers (Berger et al., 2006). When using such an array design, each probe on the array may contain 0, 1 or more binding sites for the TF of interest, and these binding sites may be located at any position along the probe (i.e. any position relative to the free DNA end). Given the well-characterized positional bias in the universal PBM data (Berger et al., 2006), models trained on these data either try to learn the bias (Zhao and Stormo, 2011) or implicitly assume that the bias will average out when multiple probes are considered (Annala et al., 2011; Weirauch et al., 2013). In contrast, our custom microarray is designed so that each probe contains a single putative binding site located at the same location related to the free DNA end. This allows us to learn regression models that take into account k-mer occurrences at specific positions relative to the core of the binding site, as opposed to k-mers occurrences along the probes as done previously in Annala et al. (2011). The use of positional information makes our models easier to interpret than simple k-mer based models. Second, by using a feature selection procedure, we restrict our regression models to a small number of parameters while maintaining a high prediction accuracy. This makes our models easier to visualize and interpret than other complex models of DNA binding specificity. For example, Agius et al. (2010) have also developed SVR-based models trained on PBM data. Their models fit the universal PBM data very well; however, the models are based on a special string kernel that makes is difficult to identify specific features that are important for model accuracy. In contrast, our feature selection procedure identifies relevant sequence features and also reports how frequently each feature is selected and how it contributes to the binding affinity (see Fig. 8). Third, unlike the widely used PWM models, our regression models take into account non-independent contribution from individual bases in a TF binding site, by using the RBF kernel in the SVR algorithm and by incorporating 2-mer and 3-mer features. Importantly, our algorithm selects sequence features not only in the regions next to the CACGTG core but also in distal flanking regions, where the TF might not make specific DNA contacts. This suggests that the flanking regions may have an indirect influence on the binding affinity, possibly exerted through DNA shape, a hypothesis that we have tested previously for yeast TFs Cbf1 and Tye7 (GordanGordan et al., 2013). We note, however, that the current study is different from our previous work in several respects: previously, we neither performed any feature selection nor tried to interpret the specificity models; instead, we focused on the importance of intrinsic sequence preferences of paralogous TFs Cbf1 and Tye7 for achieving in vivo specificity, and on the potential role of DNA shape in providing a mechanistic explanation for the influence of flanking regions on DNA binding affinity. In the current study, we generate custom data for human TFs in addition to using the yeast data from GordanGordan et al. (2013), and we focus on using feature selection to get more accurate and interpretable models of binding specificity. Future work will include developing similar models for TFs from other structural classes and organisms, as well as refining the feature selection procedure and testing other feature selection methods (Maldonado and Weber, 2010; Nguyen and de la Torre, 2010; Yang and Ong, 2010) that might help us identify sequence features relevant for model accuracy. In conclusion, our regression-based approach for learning complex models of TFDNA binding specificity from custom PBM data can be easily extended and improved, and we anticipate that the proposed regression models will help explain, at least in part, how paralogous TFs with highly similar PWMs are able to interact with distinct genomic targets.
