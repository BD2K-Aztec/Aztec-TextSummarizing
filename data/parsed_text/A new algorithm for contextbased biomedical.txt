Motivation: Diagrams embedded in the biomedical literature convey rich contents, which often concisely and intuitively highlight key thesis of a research article. Despite their vital importance and informative clues for biomedical literature navigation and retrieval; currently, we miss an effective computational method for automatically understanding and accessing these valuable resources. Proposed Method: To address the aforementioned gap, we propose a novel context-based algorithm for estimating the similarity between a pair of biomedical diagrams. The main difference of the proposed algorithm with respect to the existing methods lies in the new algorithm's incorporation of the semantic context associated with diagrams in their source documents into the diagram similarity estimation process. In addition, the new approach also performs a series of advanced image processing and text mining operations to comprehensively extract the semantic content graphically encoded inside diagram images. Results: The new algorithm can be deployed as a reusable component providing a fundamental function for building many advanced, semantic-aware applications on biomedical diagram processing. As a case study, in our experiments, we demonstrate the advantage of the new algorithm for diagram retrieval. A set of biomedical diagram search and ranking experiments were conducted, where the performance of the new method was compared with that of five peer methods. The comparison results demonstrate the performance superiority of the new algorithm with all peer methods with statistical significance. Contact:
INTRODUCTIONDiagrams are widely used graphical vehicles for illustrating ideas, explaining hypotheses and reporting findings. They provide a powerful communication device for visually sharing key information supplied in a document. These visual elements are well received by readerspeople often like to overview key contents of a document through browsing its embedded diagrams, if any. Such a diagram browsing-based practice for document navigation has been popularly adopted in reality by many biomedical researchers to cope with the exploding amount of biomedical literature in existence today. In this article, we propose a new diagram similarity estimation method, which exploits the context information of a diagram latent in its source document for deriving a high-level understanding over the diagram's intended semantic messages. As image similarity is of fundamental importance for many biomedical diagram image processing, understanding and retrieval tasks, our new similarity estimation method can be used for many advanced semantic computing applications relating to diagram images, such as searching, ranking, clustering and categorizing diagrams, to name a few. One important extended application of our algorithm is to apply the algorithm to empower search engines and digital library systems, so that they can more capably return diagrams and the corresponding source documents to meet users' needs and interests in diagram searching and diagram browsing-based visual literature navigation. Because of space limit, we will only report the results of our experiments that demonstrate the advantage of our method for diagram retrieval and ranking. In this article, we introduce a new method for context-based diagram similarity estimation via a probabilistic reasoning approach. Based on the new method, we build an algorithmic framework for deriving context-based diagram similarity, including procedures to detect nodes and edges from an input diagram image using off-the-shelf computer vision tools, a method to represent the extracted nodes and edges from the input diagram image as a graph and the procedure to apply the new method for deriving pairwise diagram similarity through cross-referencing the diagrams' graph representations and their source documents (seefor an example). In the end, we also present extensive experimental results for validating the effectiveness of our new method in the application context of diagram retrieval and ranking.
RELATED WORKWe will now briefly look at two aspects of work closely related to our study here, including (i) diagram similarity estimation and (ii) context-based image retrieval. Diagram similarity estimation. Significant efforts have been dedicated to designing algorithms and methods for estimating pairwise diagram similarity, most of which focus on processing *To whom correspondence should be addressed. y The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors. a specific type of diagram. For example, within the software engineering community, statecharts are a specialized type of diagrams widely used for illustrating calling logics in a software architecture design.studied the problem of optimally matching statecharts, where they offered a specialpurpose image similarity metric for measuring statechart similarity.validated a number of metrics for measuring the similarity between a pair of workflow diagrams, where each workflow is represented as finite state automata. All the metrics he evaluated can be broadly categorized into language and structure-based approaches. His study suggested that the relatively simple n-gram sets-based approach achieves the best performance among all peer methods.proposed a structural approach using high-level change operations for measuring similarity between two process model diagrams. Their idea is to find a minimum set of addition, deletion and moving operations to transform one diagram into another diagram, where the minimum number of transformation steps needed is used as the pairwise diagram distance.experimentally compared three classes of similarity measurement methods for business process model diagramslabel similarity, structural similarity and behavioural similarity (element labels and causal relations captured in a process model). Their result shows that structural similarity attains the best performance.introduced a method for measuring the similarity between a pair of business process model diagrams. Their method derives diagram similarity from three aspects: syntactic, linguistic and structural measures.studied the problem of workflow diagram similarity estimation and retrieval by introducing a structure-based approach using a weighted graph edit distance.proposed a versatile graph matching algorithm, called 'similarity flooding', for matching data schema diagrams. Their algorithm first derives a similarity propagation graph to denote pairwise node similarities between two diagrams and then performs a similarity spreading process in the graph for deriving an optimal matching between the two diagrams.introduced a structural method using Artificial Intelligence (AI) planning techniques for comparing diagrams illustrating workflow models. Their method first uses a domain-independent AI planning-based approach to represent diagrams of business workflow models as cases and then adopts a case-based reasoning framework for deriving pairwise diagram similarity. Context-based information retrieval. A decade ago, Lawrence (2000) pointed out the importance of context in web search. Recently,discussed the challenges associated with characterizing context for building information retrieval applications. Within the image retrieval field, people have explored contextual information for image processing, annotation and retrieval, e.g.;; O'Hare and Smeaton (2009);; Segev and Toch (2009);; Fisher and Hanrahan (2010);;. For the diagram retrieval problem, textual information carried inside a diagram only intends to shed highlights rather than to provide detailed explanation over the diagram's content; in addition, the caption of a diagram does not always cover every message illustrated in the diagram. Both factors incur computational difficulties for automatic diagram understanding and retrieval. In the bioinformatics literature,observed the importance of socioeconomic context when developing social marketing models for improving reproductive health.designed a context-sensitive search method for retrieving medical text with better accuracy.Sinha and Jain (2008) described an unsupervised context analysis method for inferring context-specific gene regulatory networks from publicly available gene expression data. Rodriguez-Esteban and Iossifov (2009) introduced a figure mining method that jointly leverages image understanding, text mining and optical character recognition (OCR) techniques to retrieve tables and figures embedded in the biomedical literature that match a certain user-prescribed image type. Among all the methods surveyed earlier in the text, none has looked into the contextual information of diagrams as a clue for estimating diagram similarities. To develop more comprehensive and accurate understanding over a diagram's semantic contents, we propose to acquire supplementary contextual information of a diagram from its source document for estimating diagram similarity in a semantically meaningful way. Our proposed approach is also applicable for processing other generic types of figures, such as statecharts and workflow diagrams, even though our method works particularly effectively with biomedical contents because of the prevalence of diagrams in biomedical publications. To the best of our knowledge, no published efforts have previously pursued this idea in the biomedical informatics field.
a1
REPRESENTING A DIAGRAM WITH ITS DOCUMENT CONTEXT AS A GRAPHGiven a diagram G embedded in its source document D, in our method, we represent it as an attributed undirected graph. Each entity in G is represented as a node in the graph; each visually illustrated relationship between entities in G is represented as an edge in the graph. When no ambiguity arises, we will not differentiate the diagram from its graph representation. We can formally characterize G as NG, EG, WG, where NG  fN i jN i 2 Gg is the set of nodes in G; EG  fE i, j jN i , N j 2 NG, E i, j 2 Gg is the set of edges in G; WG is a weighted adjacency matrix, which describes whether two nodes in the diagram are connected, and if so, how intensively the source document D discusses the semantic relationship represented by the edge, or how saliently the semantic relationship is embodied in D. We will look at how to derive WG later. As from the matrix WG, we can readily understand the node connectivity information, we can more compactly characterize a diagram as NG, WG, without losing any information.gives an example of two sample diagrams' graph representations constructed by our method.
Detecting nodes from a diagramGiven an input diagram G in the form of a static image, we detect its nodes and edges through a set of image processing steps as follows. We first apply the Gaussian filter function offered by the OpenCV 2.2.0 package (http://sourceforge.net/projects/opencvlibrary) to remove local image noise from G. We then detect from G a collection of basic shape elements, including quadrilaterals, circles and ellipses. In our current implementation, we adopt the method proposed in the study byto detect these elements. For each detected shape element, we further attempt to recognize any text that may be carried inside the interior image region of the shape. This text recognition task is accomplished by parsing the image region to the OCR tool provided in the Microsoft Office 2007 Document Imaging package. In our OCR process, currently, we only process English contents. For each recognized word from the OCR process, we match the word against the full text of the diagram's source document D. Only words that occur in D will be retained; the rest of the words will be considered OCR errors and, hence, discarded. For all remaining OCR result words, we further remove stop words. Finally, we perform a stemming process to restore each word to its basic root form. Each shape element detected previously will be represented as a node N i. In this way, we establish our node set NG  fN 1 , N 2 ,   g, where each N i is a shape element. After this step, we remove from the image G all the detected shape elements, including their interior image regions, to make the downstream image processing steps more reliable.
Detecting edges from a diagramTo construct the edge set EG for representing the node connectivity information in the diagram, we first detect arrows and line pieces, the latter of which are composed of one or multiple line segments in the image G (seefor an example). To detect line pieces in G, we applied the application programming interface (API) named 'cvHoughLines2' in the OpenCV 2.2.0 package; to detect arrows in G, we adopted the algorithm proposed in the study by, which is relatively easy to implement and is capable of producing satisfying performance in our experiments. Occasionally, line pieces and arrows in a diagram may be accompanied by annotation text. To capture such text, we first remove from G all recognized line pieces and arrows. For the remaining image region, we then perform a text detection procedure using the method suggested in the study by. For each recognized text region, we will anchor the text region onto its nearest line piece or arrow according to the Euclidean distance. Finally, we will call another OCR procedure to recognize these annotation text strings. For each line piece or arrow detected previously, we need to associate both its end points to their respective closest shape elements according to the Euclidean distance. In our work, we define the distance between a line piece or an arrow to a shape element as the minimum distance between one end point of the line piece or arrow and a pixel on the contour of the shape element. As each shape element has been represented as a node N i , any pair of nodes commonly pointed to by a line piece or an arrow are considered linked, in which case, we will introduce an edge to connect the two nodes in G. Through the aforementioned process, we construct our edge set EG for G. The aforementioned procedure of transforming an input diagram image into its corresponding structural graph representation is implemented as a fully automatic module in our prototype system.
Identify counterpart text for diagram nodesFor each node N i detected from G, we need to identify text fragments in the source document D that embody the semantics represented by N i 's corresponding visual symbol on the diagram. To locate a text position in a document, we use a sentence's sequence number in the document as the location index. For text appearing in the main body of an article, we separate it into sentences according to the presence of punctuation marks in the text; in particular, for text occurring in the title of an article, an article section or sub-section, as long as the source document allows automatic detection of these title regions, we treat all text displayed in one title region as a single sentence. Let the set of sentences semantically related to the node N i be S i  fs i, 1 , s i, 2 ,   g, where each s i, j is a sentence in D that explains or discusses the meanings of N i. Each s i, j is associated with a significance score i, j 2 0, 1 that indicates the semantic relatedness between s i, j and N i. For an arbitrary sentence s x 2 D, to measure its semantic relatedness with N i , we compare the alignment of the semantics represented by s x and N i , respectively, according to their text. Recall that the text of the node N i has been previously recovered through the OCR process. To estimate the aforementioned semantic alignment, we use the algorithm proposed in the study by, which is specifically designed for measuring semantic similarity between two pieces of short text. To determine the sentence set S i for a given node N i , we start with an empty set and scan all sentences in D. We respectively derive each sentence's semantic relatedness with N i following the aforementioned procedure. If the detected semantic relatedness exceeds an empirically chosen threshold (0.05 in all our experiments), we consider the sentence noticeably related to the node and collect the sentence into the set S i. In this document sentence scanning procedure, we consider all sentences in the full text of the document, including those in the document's title, abstract, footnotes and figure captions.
Identify counterpart text for diagram edgesOnce we have identified the counterpart text in D for every node in G, we can further identify the corresponding text in D that reflects the semantic meanings denoted by each edge in the diagram. Our edge counterpart text detection procedure is based on the node counterpart text detection result. Recall that Ei, j is the edge that connects the nodes N i and N j in G; N i , and N j 's counterpart text in D is organized as two sentence sets S i and S j , respectively. To locate counterpart text for the edge Ei, j, we essentially pair sentences from S i and S j , one from each set. Let jS x j be the number of sentences in the sentence set S x. Our aforementioned edge counterpart text identification procedure leads to jS i j  jS j j instances of the counterpart text for Ei, j. For the sentence pair s i, u 2 S i and s j, v 2 S j , we estimate its significance in representing the semantic meanings of Ei, j as i, u j, v s i, u , s j, v . Recall that i, u and j, v are the significance of the sentences s i, u and s j, v in embodying meanings of the nodes N i and N j , respectively; s i, u , s j, v  is a newly introduced measure that quantifies how likely the two sentences s i, u and s j, v embody the semantic meanings intended by the edge Ei, j. We assume the farther apart the two sentences are, the less likely the pair of sentence describes the relationship represented by the edge. Note that s i, u and s j, v may both refer to the same sentence, in which case, it is most likely the meanings of the edge Ei, j are reflected by the sentence. In our current design, s i, u , s j, v  is estimated as follows: s i, u , s j, v   exp dissi, u , sj, v  ave disD , where diss i, u , s j, v  is the number of non-stop words separating the two sentences s i, u and s j, v ; ave disD is the average number of non-stop words in a sentence in the document D. We further introduce a function %s i, u , s j, v , t i, j  2 0, 1 to measure the degree of relevance (the larger, the more relevant) between text of the two sentences s i, u and s j, v and the annotation text of the edge t i, j. Recall that we mentioned earlier that occasionally a line piece or an arrow in a diagram may be accompanied by some annotation text. We empirically define %s i, u , s j, v , t i, j  as follows:where w a , w b  2 0, 1 computes the semantic relatedness between a pair of words, w a and w b , according to WordNet::Similarity (http://search.cpan.org/dist/WordNetSimilarity/doc/intro.pod). If the edge does not have any anchoring text, i.e. t i, j  ;, %s i, u , s j, v , t i, j   1. The reason why we made such a value assignment is due to the following logic: if an edge does not carry any anchoring text, no particular semantic relationship is specified to govern the edge's two end nodes. Hence, we give the benefit of doubt by assuming any text can be relevant in some way to the relationship represented by the edge. If there is indeed some anchoring text associated with the edge, then only those counterpart text instances that embody the same semantic relationship specified by the anchoring text shall be considered well matched and relevant to the edge. Based on the significance of each sentence pair, we can further estimate the significance of the edge Ei, j embodied in the entire document D by aggregating the significance of all its counterpart sentence pairs across the document as follows:where z is a scaling factor to ensure the significance value for the most significant edge in G is 1. Based on the estimated significance for each edge in G, we can construct a weighted adjacency matrix WG, for characterizing whether two nodes in the graph are connected, and if so, how saliently this connection is embodied in the source document D. Let W i, j G be the element on the i-th row and j-th column of the matrix WG; we define WG as follows: W i, j G  w i, j if E i, j 2 EG and 0 otherwise.
MEASURING DIAGRAM SIMILARITY BY LEVERAGING DOCUMENT CONTEXTGiven two diagrams G 1 and G 2 , to measure their similarity, we need to compute an optimal matching between these two diagrams. Let jNG 1 j and jNG 2 j, respectively, be the number of nodes in the two diagrams. We can then represent any matching relationship between G 1 and G 2 using a jNG 1 j  jNG 2 j dimensional matching matrix MG 1 , G 2 . The element on the i-th row and j-th column of MG 1 , G 2 , denoted as M i, j G 1 , G 2  2 0, 1, represents the matching degree between the i-th node in G 1 and the j-th node in G 2. Note that M i, j G 1 , G 2  can be any number between 0 and 1, which implies one node from a diagram can match to one, multiple or no node in the other diagram. Such a fuzzy matching mechanism allows our method to deal with a wide range of diagram matching scenarios without enforcing a strict one-to-one matching between two diagrams' nodes, the situation of which does not always exist in reality. For simplicity, we will abbreviate MG 1 , G 2  for M from now on when no ambiguity arises. Also, we will abbreviate WG 1  and WG 2  as W 1 and W 2 , respectively, for easy notation. In the following, we will introduce a method for deriving an optimal matching relationship matrix b M for an arbitrary pair of diagrams G 1 and G 2. The optimality in the matching relationship matrix refers to the estimation of the optimal matching degree between two matrices using our heuristic-based estimation framework. We first introduce a heuristic function HG 1 , G 2 , M to represent the semantic relatedness between two diagrams G 1 and G 2 , assuming that nodes in the two diagrams are matched according to the correspondence relationship M. Intuitively, the more semantically related the two diagrams are, the larger the value of HG 1 , G 2 , M becomes. This modelling perspective is inspired by the work of Li and Hsu (2008), who studied a related problem of content-based natural image retrieval with relevance feedback using a graph-theoretic region correspondence estimation method. Given the aforementioned function HG 1 , G 2 , M, we can search for the optimal matching relationship matrix b M as follows:As mentioned earlier, a diagram G can be characterized using its node set NG and its weighted adjacency matrix WG. Working with this premise, we empirically assume that:where HN i G 1 , N j G 2 , W 1 , W 2 , M estimates the pairwise node matching score between N i G 1  and N j G 2 . Recall that N i G x  is the i-th node in the node set NG x , and M i, j is the element on the i-th row and j-th column of the matching matrix M. It shall be noted that the above property is heuristically assumed. Intuitively, the pairwise graph similarity can be estimated according to the pairwise similarities between corresponding nodes in the two graphs. The higher such node similarities collectively are, the more semantically related the two graphs may be perceived as assumed by our heuristic. Note that if M i, j 6  0, it means that the node N i G 1  from NG 1  matches the node N j G 2  from NG 2  according to the matching relationship M. The reason why we raise the pairwise node matching score function HN i G 1 , N j G 2 , W 1 , W 2 , M to the power of M i, j is because the matching degree M i, j can be any number between 0 and 1 to emulate the fuzzy nature of such non-binary matching decision. Again, this power factor is empirically introduced, whose effectiveness will be proved through our experimental results to be presented later in this article. Next, to estimate HN i G 1 , N j G 2 , W 1 , W 2 , M, we take into account two clues: (i) self similarity, i.e. how closely the two nodes' carrying text are; (ii) context similarity, i.e. how similar the two nodes' surrounding nodes are in terms of their text similarity. To measure the self similarity N i G 1 , N j G 2  between a pair of nodes N i G 1  and N j G 2 , we first implement a method for estimating content similarity between a pair of sentences. Let s i , s j  2 0, 1 be the semantic similarity for an arbitrary pair of sentences s i and s j. s i , s j   1 indicates the two sentences deliver the same semantics, whereas s i , s j   0 shows the two sentences share no semantic overlap. To derive the value of s i , s j , in our current implementation, we adopt the sentence similarity estimation algorithm proposed in the study bybecause of the algorithm's leading performance among the peer methods. Based on the function of s i , s j , we can now estimate N i G 1 , N j G 2 . Assume N i G 1  and N j G 2 's counterpart sentence sets detected from diagrams G 1 and G 2 's source documents D 1 and D 2 , are S i G 1  and S j G 2 , respectively. Also recall that the significance for a sentence s i, u (s j, v ) in S i G 1  S j G 2 ) to embody the meanings intended by the node N i G 1  N j G 2 ) is i, s  j, v ). We can now estimate N i G 1 , N j G 2  as follows:i, u j, v s i, u , s j, v  5 where ZG 1 , G 2  is a normalization term to ensure the maximum pairwise node similarity across the two graphs G 1 and G 2 is 1. To estimate the context similarity of the pair of nodes N i G 1  and N j G 2 , we first consider the similarity of the two nodes' immediately adjacent neighbours, which is denoted as # 1, 1 N i G 1 , N j G 2 , as follows:where W 1, i, u and W 2, j, v are the short notations for W i, u G 1  and W j, v G 2 , respectively. Similarly, we can estimate the similarity between one node's immediate neighbour node and the other node's second-level neighbour node. In analogy to the definition of # 1, 1 N i G 1 , N j G 2 , we can further define # 1, 2 N i G 1 , N j G 2  and # 2, 1 N i G 1 , N j G 2  as follows:Similarly, we can further define # 2, 2 N i G 1 , N j G 2 , whose explicit form is omitted because of space limit. By aggregating all the aforementioned sub-estimates, we can derive the context similarity for the pair of nodes N i G 1  and N j G 2 , denoted as #N i G 1 , N j G 2 , as follows:In our method, we do not calculate # u, v N i G 1 , N j G 2  for u42 or v42 because their values are almost always 0.Finally, by combining N i G 1 , N j G 2  and #N i G 1 , N j G 2 , we can estimate HN i G 1 , N j G 2 , W 1 , W 2 , M as follows:where is a fixed constant. Substituting Equation (10) into Equation (4), we further have:To calculate the optimal matching matrix b M, we first create a jNG 1 j  jNG 2 j dimensional matrix @, whose element on the i-th row and j-th column, @ i, j , takes the value of log  N i G 1 , N j G 2   #N i G 1 , N j G 2 . We thus have:As M is a matching matrix, it has the property that P j M i, j 1 and P i M i, j 1 for all i and j. The inequality in the constraints is introduced for handling the situation that an element from a diagram shall not be matched to any element in the other diagram to yield an optimal matching between the two diagrams. To solve the aforementioned optimization problem, we can use linear programming to find the optimal matching matrix, b M, that maximizes, j. Once we derive b M, we can further derive the value of HG 1 , G 2 , b M as the similarity between the two diagrams G 1 and G 2. For information retrieval tasks that only care about rankings where the absolute similarity value is not important, it suffices to use the optimized target function value yielded in the linear programming procedure, i.e.
EXPERIMENTATION
Experiment set-upTo explore the effectiveness of our new diagram similarity estimation method for diagram retrieval, we conducted a set of evaluation experiments using a PC equipped with a Core i3 2.93 GHz CPU and 4 GB main memory, which ran the Windows XP operating system. To carry out our experiments, we first constructed a diagram image corpus where each diagram is accompanied by its corresponding source document. We acquired these images and their source documents through both downloading from PubMed Central (PMC) and using Google Image Search as follows:(i) we first downloaded all the publicly accessible images from PMC where each image is always accompanied by its source document. We then applied the diagram image recognition algorithm proposed in the study byto identify diagrams from all downloaded images. This procedure lets us acquire 12 500 diagrams. (ii) We then randomly selected 50 diagrams downloaded from PMC in the first step and fed the captions of these images, respectively, as queries into Google Image Search. For each search result image, Google always provides a back link to its source webpage. Following the back link, we can check whether the search result image is associated with a meaningful source document. In this operation, we first removed all the advertisement and navigation content from an image's source webpage using the algorithm proposed in the study by. If the filtered webpage contains4500 words, we then consider the webpage as a meaningful document. Otherwise, we discard the search result image. For all the images that passed the preceding test, we ran the algorithm ofto detect and select all images of the diagram type and added them into our diagram corpus. Using the second approach, we acquired $3000 additional diagrams through Google Image Search. To experimentally explore the performance of a diagram retrieval method, we conducted a collection of diagram image search sessions, which were organized into 16 groups of queries, where each query group consists of multiple query sessions on a common theme. The 16 querying themes are, respectively, as follows, for which we also specify the number of query sessions performed for each theme group using a number in the bracket following the theme's topic phrasea: breast cancer (9), b: gastric cancer (9), c: non-Hodgkin's lymphoma (9), d: multiple myeloma (9), e: HIV (8), f: detection of chronic kidney (9), g: heart block (9), h: malaria (8), i: thrombosis (8), j: angiogenesis (8), k: tumour angiogenesis (8), l: ochrobactrum (8), m: gene expression (8), n: cardiomyopathy (8), o: respiratory syndrome (9) and p: bone metastase (9). Query theme groups ac primarily consist of images acquired through Google Image Searches; query theme groups dm mostly consist of images downloaded from PubMed; the remaining query theme groups, i.e. groups n, o and p, contain images acquired through both means more evenly. For each query session, we randomly selected an image from our diagram corpus whose caption matches the session's theme phrase as the query input image. We then performed diagram retrieval against the whole diagram corpus (excluding the selected query input image) using a retrieval method whose performance is to be evaluated.
Experimental resultsAfter the aforementioned procedure, we then applied the new diagram similarity estimation method introduced in this article for diagram retrieval and ranking. In each query session, we rank all the retrieved diagram search results according to each result diagram's estimated relatedness to the query diagram. We then recruited five subjects and asked each of them to independently label the relatedness of each search result diagram to the input query diagram according to each subject's personal judgment regarding the two diagrams' semantic similarity. The numeric label ranges from 0 (entirely irrelevant) to 1 (extremely related). We then took an average of the five user labels as the image's overall user-rated query relevance score. Based on this score, we further calculated the normalized discounted cumulative gain (NDCG) to measure the quality of diagram retrieval and ranking for the query session. To understand the definition of NDCG, we first need to introduce the notation of discounted cumulative gain (DCG), which measures the information retrieval quality of a ranked search result set. DCG takes into consideration the query-relevance of each search result document along with its ranking position in the result list. The DCG score at a particular rank position p can be computed as:To further verify our method's performance superiority to the peer methods, we calculated P-values for the paired t-test following the well-established procedure in statistic hypothesis testing. We tested a series of null hypotheses that the performance of our method and that of a specific peer method is statistically equal. In, we report the P-values as results of two-tailed paired ttests for diagram querying experiments of 16 theme groups. More concretely, for each query theme group, we executed all its constituent query sessions using our method and the five peer retrieval methods, respectively. Without loss of generality, let's focus on the first peer method PM1 initially. For every query session, we paired the NDCG scores for the top 20 diagram retrieval results obtained by our method with those returned by PM1 according to their respective rank positions. That is, every query session will produce 20 pairs of NDCG scores. For each query session in the first query theme group, we repeated the same process and collected all the resultant NDCG score pairs. This gave us 180 pairs of NDCG scores because there are nine query sessions in the first query theme group. Given these NDCG score pairs, we can then derive the P-values for the two-tailed paired t-test comparing the retrieval quality of our method and that of PM1 for the whole query theme group. The aim is to test the statistical significance of the superiority of our method with respect to PM1. The result is reported in the tabular cell under the column 'Ours-PM1' and on the row for the first query theme group in. To fill the entire table, we repeated the aforementioned procedure for comparisons against all the peer methods and query theme groups. In Table 2, we further report P-values for both onetailed and two-tailed t-tests for all 16 theme groups of query experiments. To calculate the P-values, this time we collected all paired NDCG scores comparing our method and one of the peer methods across all query sessions in all query themes. Overall, among all P-values reported in, almost all of them are 50.05, except for a few ones that are marked in bold. In, all calculated P-values both for the one-tailed and twotailed t-tests are50.05. These small P-values consistently indicate a statistically significant superiority of our method with respect to the peer methods in retrieving diagrams semantically relevant to the input query diagram. To explore the diversity in the search result diagrams, we further calculate the distributions of co-author distances among top ranked diagram retrieval results returned by our method. The purpose is to verify that the new algorithm is capable of retrieving diagrams composed by people sharing weak or no collaboration relationships. That is, the algorithm will indeed retrieve diagrams according to their semantic similarity rather than common diagram composition styles or practice shared by people who are academically closely related. Let D author A x , A y  be the co-author distance between a pair of authors A x and A y. In this work, we derive the co-author distance between a pair of authors by checking all the publication records in the open access portion of the PubMed corpus. D author A x , A y   0 if and only if A x is the same person as A y ; D author A x , A y   1 if A x and A y at least co-author one article as captured in the corpus; for the general case, we used the classic Dijkstra's shortest distance algorithm to compute D author A x , A y . Based on the notation of D author A x , A y , we. For each of the 16 theme groups of query sessions conducted in our experiments, we collected all images that were ranked among the top 20 search results by our method in at least one of the query sessions. We then computed the distribution of image co-author distances between the input diagrams and their corresponding search result diagrams for all executed query sessions. In, we report the percentage distribution of image co-author distances for each query theme group, respectively. From the reported results, we can clearly see that the new algorithm is able to retrieve semantically related diagrams regardless of whether these diagrams are composed by people that are closely related academically.
CONCLUSION AND DISCUSSIONSWe propose a novel context-based method for estimating diagram similarity. The method augments concepts and their relationships illustrated in a diagram by leveraging the contextual information provided by the full text of the diagram's source document. As a diagram usually highlights rather than explains its intended message, expanding the concisely encoded message by cross-referring to the diagram's source document can supply rich supplementary context for more accurately and comprehensively understanding the diagram's intended semantic meanings. The comparative experiments demonstrate the superiority of our new method for semantically oriented diagram similarity estimation with respect to traditional image similarity metrics, which do not explore such context information. Our enhanced diagram similarity estimation can benefit many information retrieval tasks dealing with diagrams, e.g. improving user experiences with digital library systems for diagram searching and diagram browsing-based visual literature navigation. The main challenge of estimating the similarity of diagrams embedded in the biomedical literature lies in the following two aspects: (i) unlike diagrams used in the software engineering and many other engineering disciplines that are typically composed of parametric objects using the Unified Modelling Language (UML) or other specialized languages or software packages and, hence, amenable to automatic computer processing, diagrams in the biomedical literature are typically released as bitmap images with no high-level descriptive representation. Therefore, detecting, extracting and automatically understanding entities and their mutual relationships graphically encoded in these bitmap images present a non-trivial technical challenge. To address this issue, we introduce a series of advanced image processing procedures in Section 3.2. For diagrams embedded in the biomedical literature, we witness the novel opportunity of observing and borrowing the context in a diagram's source document to acquire informative semantic clues for enhancing automatic diagram understanding and similarity estimation. Such an opportunity is unique for diagrams carried inside a peer-reviewed research publication because the document usually contains high-quality text that explains its embedded diagrams (such property does not always exist for diagrams from other sources, e.g. those included on casual webpages, as they usually do not have rich and quality explanation text). To leverage the aforementioned opportunity for enhancing automatic biomedical diagram understanding and similarity estimation, we thus introduced a novel and advanced diagram similarity estimation method by incorporating the rich semantic context information supplied in a diagram's source document (see Section 4). Finally, in terms of the applicability of our method, even though the new method aims to process diagrams embedded in the biomedical literature, it can be applied for dealing with diagrams in the literature of other science or technology fields. Nevertheless, we notice that many science and technology fields do not use diagrams as intensively as by the broad biomedical discipline, which affects the potential of our method in processing diagrams in these fields. One fundamental limitation of our method is that it does not work with stand-alone diagrams that do not have accompanying source documents.
Biomedical diagram similarity estimation at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
S.Xu et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
reli  1 log 2 i  1 , 13 where rel i is the average user-rated query relevance of the search result item ranked at the position i in the list. Based on the notation of DCG p , we can further calculate the NDCG score for a ranked search result set at a particular rank position p as follows: NDCG p  DCG p IDCG p , 14 where IDCG p is the ideal (maximum) DCG score at the rank position p reachable by the current search result set. For more thorough discussions on the NDCG metric, readers are referred to JarvelinJarvelin and Kekaanen (2002). In this article, we adopted NDCG as our retrieval performance metric following the predominant practice in the information retrieval research field because such metric gives weighted considerations to search result items at different ranking positions, prioritizing those displayed at the top positions of the list. Plenty of information retrieval research, e.g. JarvelinJarvelin and Kekaanen (2002), has pointed out that the NDCG metric can better reflect the search quality perceived by end users than the traditional precision-based evaluation, which ignores rank positions. For all our experiments reported in this article, we use NDCG 20 as the metric, as we empirically find it behaves most representatively among all versions of the NDCG scores for our application. For comparison purposes, we also applied the following peer image search methods to repeat the image search experiments described earlier in the textPeer Method (PM) 1: each image is represented using its caption text. We then used the text search engine Lucene to retrieve and rank images, whose ranking mechanism is described with details in the study by Hatcher and Gospodnetic (2004). PM 2: the method is to use the text present in title, description and tags of the images for improving the results obtained with a standard content-based search (Barrios et al., 2009). PM 3: each image is represented using its caption text and its visually embedded text, as well as the image's anchoring text, i.e. the sentence(s) in the source document that directly quotes the image. This is the image search method proposed in Xu et al. (2008). The weighting for mixing the three types of text in the ranking process is also manually tuned to maximize the total NDCG score of the method for all our tested queries. PM 4: the biomedical image metadata manager system proposed by Korenblum et al. (2011) that retrieves similar biomedical images using semantic metadata features. PM 5: a state-of-the-art process model diagram search method proposed by Li and Hsu (2008). When conducting all sessions of our comparative experimental studies, we used the same target diagram corpus when executing the five peer methods and our algorithm to ensure fair comparison among all methods. To explore the diagram retrieval performance of the new method with respect to the five peer methods, we conducted a series of diagram search experiments using the aforementioned 16 theme groups of diagram query sessions. Figure 2 reports NDCG scores of both our method and that of the five peer methods in all these experiments, where the NDCG score of each method for every query is individually reported. We also congregated these individual NDCG scores to derive the distributions of all NDCG scores attained by our method and the five peer methods in all our querying experiments, whose distributions are reported in Figure 3 using boxplots. All the aforementioned experiment results clearly show that our new diagram similarity estimation method performs significantly superior to all peer methods for searching and ranking diagram images.
