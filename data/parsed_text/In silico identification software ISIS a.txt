Motivation: Liquid chromatographyâ€“mass spectrometry-based metabolomics has gained importance in the life sciences, yet it is not supported by software tools for high throughput identification of metabolites based on their fragmentation spectra. An algorithm (ISIS: in silico identification software) and its implementation are presented and show great promise in generating in silico spectra of lipids for the purpose of structural identification. Instead of using chemical reaction rate equations or rules-based fragmentation libraries, the algorithm uses machine learning to find accurate bond cleavage rates in a mass spectrometer employing collision-induced dissociation tandem mass spectrometry. Results: A preliminary test of the algorithm with 45 lipids from a subset of lipid classes shows both high sensitivity and specificity.
INTRODUCTIONThe field of proteomics has enjoyed considerable success in part due to software tools like SEQUEST () and Mascot (), which enable highthroughput identifications of detected peptides (and their corresponding proteins) based on their fragmentation spectra generated by collision-induced dissociation (CID) mass spectrometry. These tools have benefited from the close link between DNA and protein sequences and the fact that the polymeric structure of amino acid residues in proteolytic peptides provides a convenient basis for interpreting peptide tandem mass spectra. However, small molecules other than peptides have to be considered as 2D or 3D structures of atoms or functional groups of atoms. These differences require novel algorithms. To date, the main approaches to predict in silico tandem mass spectra are based on either chemical reaction equations, libraries of fragmentation spectra/pathways, or bond cleavage probabilities based upon bond strengths. None of these approaches (briefly discussed below) have shown sufficient accuracy in generating in silico spectra to enable automated and correct identifications of non-peptide small molecules. * To whom correspondence should be addressed.Chemical reactions involving unimolecular dissociation are commonly studied using the RiceRamspergerKasselMarcus (RRKM) () and quasiequilibrium theories (QET) (). Chemical reaction time evolutions are described in systems of differential equations as in a master equation approach. These theories are invaluable to understanding chemical reaction mechanisms and energies required for state transitions. Yet, while quantum calculations like RRKM and QET explain the dissociation of activated ions, they are insufficient in explaining the activations of ions in inelastic collisions for molecules larger than a few atoms (). Predicting or identifying fragment ions in tandem mass spectra is difficult for large molecules; indeed, little is known regarding the rates at which ions gain internal energy in activation methods and at which bonds dissociate. A few small peptides such as leucine enkephalin and bradykinin have been empirically studied as to their fragmentation behaviors; however, these results cannot be translated to the fragmentation of non-peptide small molecules (). Hence, it remains difficult to explain many ions and their intensities in fragmentation spectra or to generate accurate in silico spectra knowing only the molecular compositions. Tools such as Mass Frontier from Thermo Scientific (Highchem, http://www.highchem.com/) and ACD/MS Fragmenter, (ACDLabs, http://www.acdlabs.com/products/adh/ms/ms_frag/) generate fragments using a large library of rules describing fragmentation pathways. This can become unmanageable in that rules are not necessarily exclusiveone rule can affect another rule. Sometimes the correct rules are not available entirely or are not available with sufficient specificity. Mass Frontier generates 'bar code' spectra where all ions have the same intensity because bond cleavage rates are not considered. Bar code spectra are not sufficient when many molecules generate the same fragment ions. In these instances, only the relative ion intensities will aid the correct identification.(). It may be surmised that many BDEs are either not available or sufficiently accurate. Thus, defining an accurate algorithm that identifies non-peptide small molecules from CID tandem mass spectra is still an open problem. In a proof-of-principle demonstration, the algorithm presented here shows promise in generating accurate in silico CID tandem mass spectra for identification of lipids, knowing only the molecular structures. That is, the algorithm uses no chemical reaction equations (in which parameters have to be estimated), no fragmentation rules from observed pathways, and no bond cleavage rates provided by bond strengths. Instead, the algorithm simulates the fragmentation process in an ion trap mass spectrometer model using a machine learning approach to overcome the difficulties that result from unknown quantities and simplifying assumptions in the CID process. Importantly, the algorithm uses a model of the CID process in a linear ion trap mass spectrometer. We believe the model is qualitatively accurate and do not claim that the algorithm describes the actual physical quantities in the variables discussed. The results from a first test using 45 lipids are presented. As a class of non-peptide small molecule, lipids have been extensively studied, providing relatively well-understood fragmentation pathways. As such, they provide a good set for both initial development and testing of the algorithm.
METHODS
Lipid standardsThe 22 training and 45 test lipid standards were purchased from Avanti Polar Lipids Inc. (Alabaster, AL). A detailed list of the training and test lipid standards is provided in Tables 1 and 2, respectively. A working standard of 110 pmol/l was prepared for each lipid standard in chloroform/methanol/300 mM aqueous ammonium acetate (30/65.5/3.5).
Mass spectrometric analysis of lipidsMass spectrometric analysis was performed using a linear ion trap (LTQ; Thermo Scientific, San Jose, CA) operated in positive ion mode. Samples were delivered to the mass spectrometer through a 100 cm capillary of 150 m internal diameter and 360 m outer diameter at a flow rate of 0.5 l/min. The ion spray voltage, capillary voltage and capillary temperature were set to 2.2 kV, 49 V and 200C, respectively. Full-scan spectra of each lipid standard were first obtained to determine the m/z of the precursor ion. The parameters for CID were set as follows: isolation width (m/z) of 3 u, normalized collision energy of 30%, activation Q of 0.18 and activation time of 30 ms.
THEORYThe algorithm in ISIS is based on Monte Carlo simulations, and, as such, it is conceptually simple. The description that follows covers the major components of the algorithm. Additional details regarding the linear ion trap model and CID energy calculations are provided as Supplementary data. The algorithm has two phases. In the first phase, using machinelearning, it learns to predict bond cleavage energies from which cleavage rates can be calculated. A bond cleavage energy is defined as the energy at the maximum reaction rate in a break-down diagram (50% break down), specific to each bond. In the second phase, the algorithm generates in silico tandem mass spectra from molecular structures and uses these spectra in identifications of lipids.shows the flowchart of the algorithm. The three components above the dashed line are associated with the machine-learning phase, and the dotted rectangle around Molecules and Experimental Spectra signifies that these are given in pairs to the algorithm during the learning phase. The algorithm is, in essence, learning the mapping function from molecular structures to spectra. The components below the dashed line are those that are involved in generating in silico spectra both in the training phase and from a trained algorithm. The machine-learning phase proceeds as follows: based on molecule/experimental spectrum pairs, the algorithm uses a model of the linear ion trap and the artificial neural network (ANN) in kinetic Monte Carlo (KMC) simulations to incrementally learn bond cleavage energies in CID. For each molecule in a training set, a KMCsimulation generates an in silico spectrum that is compared to an experimental spectrum, and a measure of the correlation between these two spectra is added to a cumulative fitness score. That fitness score represents the goodness of one hypothetical solution to a genetic algorithm (GA) that iteratively continues to optimize a best hypothetical solution in a set of hypothetical solutions. The variables that are optimized in each solution are the weights for the ANN that predicts bond cleavage energies. Improved predictions increase the fidelity of the in silico spectra. In the applied phase, the best solution determined in the learning phase from the training lipids is used to generate in silico tandem mass spectra for novel lipids, i.e. a library is populated with in silico spectra based on a large database of lipid molecular structures. Finally, experimental tandem mass spectra of unknown lipids are searched against the library of in silico spectra for matches, in order to provide ranked lists of candidate identifications.
KMC simulationA KMC algorithm (;) simulates the slow heating of ions in a linear ion trap (). Initially, the model linear ion trap is loaded with a number of replicates of the same ion with internal energies stochastically sampled from an electrospray ionization model (all distributions in the algorithm are assumed to be Gaussian instead of 'Gaussian like' or Boltzmann (; Gabelica and De). The iterations of the KMC proceed by selecting an eventa specific ion to experience one collision with an inert gas atom in the linear ion trap. After the collision, the ion is tested to see if one of its bonds will cleave at the achieved internal energy of the ion. Typically, the ions experience a large number of collisions before reaching energy levels sufficient for fragmentation. The simulation stops when the KMC has accumulated incremental time steps equivalent to the excitation time set for the linear ion trap (30 ms). Next, all simulated intact ions and fragment ions are added to an in silico spectrum. The major KMC steps are as follows:
Step 1. Selecting a collision eventIn a slow heating environment like a linear ion trap, both larger and faster ions moving in an environment of inert (e.g. helium) atoms have higher rates of collisions compared to smaller and slower ions. Thus, the rate is not only an increasing function of each ion's collision cross-section and velocity but also of the number density of the collision gas (see Supplementary data for details). The latter defines the number of atoms per volume in the linear ion trap and is equal for all ions in the trap. The inverse of the product of collision cross-section, molecular velocity, and the number density of the collision gas is the mean free time, i.e. the time interval between collisions that provides the collision sampling rate for each ion required by the KMC. Suppose we have N distinct ions, each with a collision rate r i , where i . (The mean time between collisions for an ion i is 1 / r i .) We define R k , the cumulative sum of r i , asThe total collision rate, then, is R N .
L.J. Kangas et al.Assuming a Poisson process, given a continuous random number  0 (0   <1) we could generate a time to the next collision with any ion asand use this to advance the KMC simulation 'clock'. The collision rate r i determines the relative collision probability for species i, so we could use another continuous random number  1 to determine the colliding ion by solvingAn efficient way to do this is to precompute bounds and do a binary search on  1 .
Step 2. Performing a collisionThe linear ion trap employs a low energy collision activation or slow heating method. Each collision between an ion and an inert atom provides at the most a few hundredths of 1 eV, while the critical energy needed for dissociation can be several eV () or 0.007 eV per degree of freedom for a molecule (). The ions in a dipole-excited ion trap oscillate at high velocities in an oscillating electric field of a few hundred kHz. The kinetic energy of the ion as a function of its mass and velocity is, in the collision with an inert atom, calculated into a center of mass frame kinetic energy. This is the maximum ion collision energy that can be converted from kinetic energy to internal energy for the ion. The normalized collision energy schedule, E schedule (Volt peakto-peak) in the ion trap is an m/z adjusted collision energy following an estimated linear regression line (; Thermo Product Support Bulletin, PBS 104), E schedule = 0.002m/z +0.4for a 30% collision energy (maximum 5 V peak-to-peak in an oscillating electric field). Adjusted for a user specified collision energy percent (Coll) it isThe relative velocity v between an ion and a target atom iswhere m is the mass. (The target is assumed stationary.) In the dipole excited oscillating electric field in the ion trap, the instant velocity magnitude v inst is sinusoidal:where  is a uniformly sampled random number in. The instant laboratory frame kinetic energy of the ion E lab is thenThe energy of interest is the center-of-mass energy, E com that is the maximum collision energy available as internal energy to the ion (;),The KMC simulation continues with a dissociation test to see if the ion has reached sufficient internal energy to cleave a bond.
Step 3. Calculating the cleavage probability after a collisionThe internal energy of an ion is thermal-like from both the heating in the ESI and the CID (). While at low energies the distribution is Poisson, after additional heating in the CID, the distribution tends toward Gaussian with variance a function of energy and degrees of freedom as proposed by Drahos and Vkey (1999). The ion selected in Step 2 is tested for bond dissociation by an ANN that first assigns a mean cleavage energy to each bond. Next, probabilities of internal energies are assigned to each ion.shows the integration of the Gaussian probability densities Q k (T ) for four hypothetical bonds k . We further define Q k (T ) as fractionswhere E 0,k are specific internal energy levels above which we quantify the probabilities of the individual bonds k to cleave from the probability density function P(E,T ) of the ion internal energies E at temperature T. We treat the Q k (T ) fractions as probabilities in what follows. Note that each bond cleavage is assumed an independent event and the bond dissociation test allows either no bond cleavage or exactly one bond to cleave in the calculations below. The cumulative probability Q C of one and only one of B bonds cleaving at temperature T iswhere S k (T ) is the contingent probability of bond k breaking:Allowing only one bond to break or no bond to break, the relative cumulative probability Q C f one and only one of B bonds cleaving isCopyedited by: AHwhere the probability of no cleavage is
In silico identification softwareand the relative contingent probability S k (T ) f bond k breaking isObserve that we continue to use tildes with relative probabilities when allowing only one bond break or no bond break.shows the cumulative probability for a hypothetical lipid with four bonds with their relative contingent probabilities S k (T ) where k range from 1 to 4. Assuming multiple cleavages do not occur, the contingent probability of no cleavage, S NC (T ) occurring at temperature T is S NC (T ) = 1 Q C (T ).This contingent probability S NC (T )s shown in the figure as the vertical extent above the bonds. An event, a specific bond cleaving or a 'no cleavage' is selected by a random number in the range (01). The ion selected for a collision has at this time reached the end of this KMC iteration. If a bond cleaves and produces two separate fragments, a singly-charged ion and a neutral molecule, both fragments would replace the molecule that was fragmented in the ion trap. A charge prediction model, explained later, labels each fragment as either an ion or a neutral. The fragment ions lose their velocities as their m/zs no longer resonate with the dipole excitation frequency in the trap. This removes them from the collision selection, excluding them from additional collisions in subsequent KMC iterations. Further, a cooling schedule is applied to fragments in the ion trap (), meaning that the internal energies of fragments decrease due to a lack of collisional heating. Note that the specifics for a molecule before a fragmentation are recomputed for each new fragment ion, since the internal energy of a molecule before fragmentation is proportionally distributed to the fragments according to their degrees of freedom. The algorithm also predicts a new bond cleavage energy for each bond in the fragment(s); there is no assumption that a bond in the precursor/z (we make no claim for the cleavage energies to be quantitatively accurate). The molecule shows that the hydroxyl bond for a water loss has the lowest energy, 0.182 (3.64 eV) and the head group loss has the second lowest energy, 0.241 (4.82 eV), that in turn generate the two significant ions at 506 and 184 m/z, respectively. Observe that the water loss occurs by cleaving off the hydroxyl and an additional hydrogen (not shown) in an E1/E2 elimination that has not yet been implemented. Although the predicted energies give the correct ions as shown in the figure, inconsistencies can be observed in the labeled bonds; for example, one C  C bond in the fatty acyl has an incorrectly low predicted value of 0.338. With the addition of more training exemplars and more training of the algorithm, the values should approach correct cleavage energies.
Molecule vector encodingThe algorithm represents molecules as undirected graphs of atoms and bonds stored in adjacency matrices (). These are processed to tree structures, from which vectors can be encoded for machine learning (). To make a vector from an adjacency matrix of a molecule, one atom is selected as a root vertex and the remaining atoms and bonds are processed in a breadth-first search up to tree depth eight (a neighborhood size), with atoms being vertices and bonds being edges. The path through the tree from the root to a given atom, considering every atom and bond in the path, is calculated to a vector index, i.e. the offset to an element in a vector. The vector element at that index is incremented by one (all elements are initially 0). A vector element is incremented once for each atom in the neighborhood (details of index calculations are provided in the Supplementary data).
Bond cleavage energy predictionA feedforward ANN was configured to take pairs of the encoding vectors described above, i.e. rooting each of the two atoms defining a bond, and predict one bond cleavage energy at a time. The ANN is iterated over all bonds in a molecule to find each bond cleavage energy.shows two 627-element vectors encoding the left and right tree from the two atoms defining a bond. These vectors consist of the packed indices from the above encoding algorithm. 'Packed' indicates that all vector elements that do not have indices occurring in any of the lipids in the training set are removed (without packing, the vectors would have 3.7  10 9 elements). Six additional metrics were input to the ANN as shown in.The cycle length is that of the shortest path around; for example, a ring, if the bond in focus is in a cycle. The cycle length is 0 if breaking the bond in focus results in two separate fragments. The ANN has eight hidden nodes and one output. Typically, ANN weights are trained with the back-propagation algorithm, but as was shown in, a GA (), together with the KMC simulations, trained the ANN (true bond cleavage energies are unknownbackpropagation requires target values for training). The GA trained the ANN with 22 lipids, optimizing the ANN weights to better predict the bond cleavage energies that produce ions and their corresponding intensities in the in silico spectra. The GA was configured with 10 individuals (chromosomes), each a set of ANN weights, i.e. each set of weights is a hypothetical ANN solution. The GA optimized the individuals iteratively with the objective to have the in silico spectral ions match those in the experimental spectra using a Pearson R 2 correlation. Observe that because the ANN predicts cleavage rates, each ANN solution produces a different set of ions and ion intensities. The training algorithm was stopped after 4 months (3 GHz PC) with an R 2 of 0.97 against the 22 lipids in the training set. The configuration of the ANN relative to the number of training samples (all the bonds of all the lipids) suggests that the ANN will overfit the training lipids and will not generalize well to novel molecules. An ANN exhibits overfitting when new inputs not seen in a training set produce unexpected outputs. This is significantly reduced in the encoding vectors by the element values being discrete (the number of atoms/paths sharing the same indices) and the encoding vectors being packed to only those indices computed from the training set. When novel molecules are encoded, indices that were not in the training molecules are discarded. The novel molecules will thus only be encoded in inputs to the ANN for which the ANN was trained. The Supplementary data further discusses why overfitting may not be the case. Note that the KMC uses a model of the linear ion trap, and one KMC simulation is performed with each lipid loaded into the trap in many replicates. The more replicates simulated, the slower the training. The training was started with 10 replicates and finished with 100 replicates, which appeared to give a reasonable spectral intensity resolution of the in silico ions.
Charge predictionA second ANN is in the algorithm to predict which fragment carries the charge when a molecule fragments. This ANN uses the same input vectors as the ANN predicting bond cleavage energies and was trained offline using the backpropagation algorithm (. This ANN was trained to predict on which sides of a bond the ions and neutrals would appear for all possible first fragmentations of the intact precursor lipids. The labels, charged or uncharged, for the training vectors were found by comparing the fragment masses to the experimental spectra. The fragment sides with matching ions on the spectra were labeled charged and those without, uncharged. The charge prediction ANN was applied to the fragments when these were taken from the ion trap and placed on the spectra. The KMC simulations were thus performed with both ion and neutral fragments (the description of this ANN is kept short as it will be removed from ISIS; current work is focused on predicting charges from the covalent bonds in the molecule fragments).
In silico spectral libraryTo test ISIS, the contents of the LIPID MAPS database was used, and, to ensure correct hits were possible, the 45 test lipids () were added to this database. Also, from the >22 k lipids in LIPID MAPS, only those lipids with atoms in {C,H,O,N,S,P} and with masses 1100 Da were used (1100 Da is the upper bound of the lipids of interest in our research). These 18 399 filtered lipids were processed, with 300 replicates of each, by ISIS to produce in silico spectra for a spectral library, the contents of which will be compared to the experimental spectra of the 45 test lipids. The collision energy in ISIS was set at 30% for all lipids. Generating in silico spectra requires computationally expensive MC simulations, about one minute per spectrum. We partition spectra onto multiple threads in this task.
RESULTSA rank test was performed with 45 lipids not included in the training set but which were selected from the same lipid classes/subclasses as those in the training set. The test of each lipid proceeded by first finding the subset of lipids in the in silico spectral library that matched the experimental mass of the precursor ion within 500 ppm. Next, the in silico spectra for these subset lipids were compared to the experimental test spectrum and Pearson R 2 scores were generated. The subset lipids were sorted in descending order based on these scores.shows the results from screening the spectral library with test lipid PS (18:0/18:1) observed at m/z 790.5 (shows that the first four hits, true positives, have high R 2 s, 0.993 0.996. Starting with the fifth hit, the R 2 s fall rapidly, 0.1170.000, and corresponds to false positives. The 45 test lipids within 500 ppm resulted in a total of 808 candidates against the in silico spectral library (a candidate is a hit against one molecule in the database that has a mass within a mass margin of the observed precursor mass).shows the distributions of the true and the false positive R 2 scores for these hits. Clearly, most true positives have high scores and false positive have low scores. Observe that hits were counted as true positives if they only varied in chirality, locations of double bonds in the fatty acids, or by the distribution of the correct total number of carbons over two fatty acidsinformation that cannot be determined by simple CID MS/MS analyses in positive mode. The test ranked 40 of the 45 test lipids at the top position and five at the second position. These five test lipids were ester lipids which each had one ether lipid from the same class ranked above it. For example, the ester test lipid PC (18:0/0:0), mass 523.3638 Da, ranked second after a false positive identification of ether PC (O-19:0/0:0), mass 523.4002 Da. These two masses differ by 70 ppm, which is below the mass resolving power of the linear ion trap. The confusion between ester and ether lipids is a result of the training set not having ether lipids. Examining the experimental spectra of LPC and PC ester and ether lipids, it appears that the algorithm should learn to separate these subclasses by the relative intensities of the 184-Da ion from the head group (discussed in the Supplementary data). Incorporating the five new ether lipids into the training required the vector lengths to increase from 627 to 738 observed indicesa significant increase. This means that, having only used the 627 indices when the ether lipid in silico spectra were generated for the library, many of the atom types and bond orders did not contribute to predict correct ion intensities. The results presented were from direct injected lipid standards that were identified against a relatively small database. In studies of biological samples using a large database, ISIS will encounter similar issues as, for example, SEQUEST applied in proteomics, i.e. the fraction of ambiguous identifications is large, multiple species in one spectrum occur frequently, and only a small fraction of the ions are actually recognized as peptides.Producing a rank list of candidates consists of comparing the observed mass of the unknown species against the masses of the molecules in the LipidMaps database. The in silico spectra of those molecules with a mass within a specified mass margin are compared to the observed spectrum and squared Pearson coefficients are computed between the pairs. Each rank list is sorted and written to a file. The preliminary test results presented covers a subset of lipid classes that ISIS has been trained to recognize. This subset includes most glycerophospholipid classes that are of interest to many in lipid research. In the future, we will extend ISIS to identify other lipid/metabolite classes. Our test only searched a lipid database as would be expected in lipidomics research of biological samples where the lipids have been extracted by the method developed by Folch, et al. or a variation thereof ().
Comparison: ISIS to MetFragWe compared the performance of ISIS in ranking candidate spectra to that of MetFrag (). Using the 45 test lipids in, ISIS ranked 40 of the correct candidates at the top and the remaining 5 in second positions.shows that MetFrag ranked only 21 lipids at the top and 8 at the second position. The remaining 16 lipids ranked in the third and fourth positions. ISIS thus performed significantly better at ranking the candidate spectra as correct identifications. The MetFrag application used approximately one hour per identification; each observed spectrum was compared against an average of eight candidate spectra. In a speed test, ISIS identified 3400 observed spectra per minute; each compared to an average of 35 candidate spectra. We provide the ISIS and MetFrag scores for all candidates and statistical measures for both algorithms in the Supplementary data. This comparison only covered lipid classes for which ISIS was trained. A future comparison with other metabolites may yield different results.
CONCLUSIONSISIS was developed to generate in silico spectra of lipids for highthroughput identifications in LC-MS-based non-peptide small molecule studies. In the first test with lipids, the software appears to have significant sensitivity and specificity. Although the test was small with only a subset of lipid classes, ISIS is expected to do well with other lipid classes and other metabolites as these are incorporated into the algorithm. The current training set has increased from 22 to 97 lipids that include more lipid classes, and as more training exemplars are added, the algorithm is also expected to generalize better to new (untrained) metabolite classes. Currently, the software only ranks database hits. An approach to improve the rank scores is to generate in silico spectra in both positive and negative MS modes. While some lipids only yield good spectra in one mode, many produce quality fragment ions in both modes for better rank scores. The algorithm has the capacity and versatility to be trained with either positive or negative mode spectra. Also, to reduce the number of candidates for true positives, the rank lists can be shortened by using hybrid mass spectrometers like LTQ-Orbitrap or quadrupole-time-of-flight which have higher resolving powers and would allow narrower mass margins when screening in silico databases. Indeed, we have started the identification of experimental lipids using an LTQ-Orbitrap. Two important additions to the ISIS algorithm are currently in development. The first is modeling any rearrangement of atoms and bonds from bond cleavages. The second is to enable the algorithm to process different adductsit now only accepts hydrogen adducts. Note that modeling rearrangements provides individual atom charges that in turn provide the means to calculate fragment charges. Consequently, the ANN described to predict fragment charges may not be needed in the algorithm. The algorithm presented here models a linear ion trap, a tandem in time instrument that typically generates ions from only primary fragmentations. However, the algorithm allows also secondary fragmentations. As we adopt the software to, for example, a tandem in space instrument like a triple quadrupole, only a small amount of program code will need to be changed (we still need to research the new instrument to design a model). Finally, a possible correction to the described algorithm is being investigated. A KMC simulation was described as first selecting one ion for a collision with an inert atom, and then testing that ion for a bond cleavage. Secondary fragmentations (rare in an ion trap) or two bonds cleaving simultaneously may be better modeled by uniformly sampling the ions for the bond cleavage tests from all ions in the ion trap. Thus, the ion selected for a collision and the ion selected for a bond cleavage test should possibly be modeled as two independent events.
In silico identification softwareDespite possible corrections to details in the algorithm, as a concept, ISIS shows promise for a robust algorithm to identify small molecules such as lipids using tandem mass spectrometers.
ISIS share siteThe ISIS application (see MetISIS) and data are available for download to all users on-line at the Pacific Northwest National Laboratory Biological MS Data and Software Distribution Center, hosted at http://omics.pnl.gov/ and described in ().
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
