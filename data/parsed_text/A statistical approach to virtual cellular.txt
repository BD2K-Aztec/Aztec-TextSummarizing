Motivation: We address the following question: Does inhibition of the expression of a gene X in a cellular assay affect the expression of another gene Y? Rather than inhibiting gene X experimentally , we aim at answering this question computationally using as the only input observational gene expression data. Recently, a new statistical algorithm called Intervention calculus when the Directed acyclic graph is Absent (IDA), has been proposed for this problem. For several biological systems, IDA has been shown to outcompete regression-based methods with respect to the number of true positives versus the number of false positives for the top 5000 predicted effects. Further improvements in the performance of IDA have been realized by stability selection, a resampling method wrapped around IDA that enhances the discovery of true causal effects. Nevertheless, the rate of false positive and false negative predictions is still unsatisfactorily high. Results: We introduce a new resampling approach for causal discovery called accumulation IDA (aIDA). We show that aIDA improves the performance of causal discoveries compared to existing variants of IDA on both simulated and real yeast data. The higher reliability of top causal effect predictions achieved by aIDA promises to increase the rate of success of wet lab intervention experiments for functional studies.
IntroductionUnderstanding of the complex molecular networks underlying cellular processes is the key challenge of systems biology. Here, we focus on gene regulatory networks. Interpreting these networks causally requires a direction of information flow. Given a causal network, the most basic question is: If I perturb gene X, what happens to gene Y? Of course, this question can be answered experimentally by inhibiting X, e.g. by PCR-based gene deletion strategy (), RNA interference (), or CRISPRi () screening, and observing Y. We here discuss to what extend the same question may be answered in a virtual way, i.e. without the need to perform a cellular perturbation experiment. A high-throughput version of this problem would be the following: Find all pairs of genes X ! Y, where perturbing X affects Y. We refer to this causal data mining approach as causal discovery. Statistically, the challenge is to estimate causal effects between random variables from purely observational data. For gene expression data the causal effect of gene X on gene Y can be defined as the number of units gene Y changes in expression, if the expression of gene X is experimentally altered by one unit. Causal Networks are a well established statistical framework for analyzing this problem (). In causal transcriptional networks the nodes of a directed acyclic graph (DAG) are random variables representing genes and their V C The Author 2015. Published by Oxford University Press.
3807This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.comexpression values. A directed edge from X to Y denotes that the expression of X causally and directly influences the expression of Y. Consequently, the expression of Y is determined by the expression of its parents in the network. If the causal network is known, Pearl's do-calculus allows estimating the strength of the causal effects between pairs of random variables from observational data (). However, causal transcriptional networks are largely unknown. Multiple statistical algorithms have been established to estimate the undirected skeleton of a network from conditional independence tests (Huynh). The PC algorithm (Kalisch and B hlmann, 2007;) allows to define the direction of some edges allowing for a causal interpretation of the network. The network cannot be fully directed because different networks with identical skeletons can encode the same conditional independence assumptions and thus can not be distinguished on observational data only (). Recently,introduced the Intervention calculus when the Directed acyclic graph is Absent (IDA) algorithm, which combines partial estimation of the network with the estimation of lower bounds for causal effects between genes. They prove consistency of the bounds () and show in applications that IDA outperforms regression-based methods in terms of number of true positives versus number of false positives for the top 5000 predicted effects on the transcriptome of yeast gene deletion strains from a large dataset of expression profiles of wild type yeast (). However, in simulations with large networks and medium sized datasets, which are typical for many biological applications, networks often cannot be reconstructed correctly.suggest using stability selection (), a subsampling strategy that is wrapped around IDA as a remedy. In fact, their CStaR algorithm outperforms plain IDA with respect to true positive selections versus false positive selections (). Here we propose an alternative subsampling strategy in combination with a modification of the IDA algorithm called accumulation IDA (aIDA). Our method represents an improvement over CStaR, IDA, and regression based methods as demonstrated for both simulated and two yeast datasets.
Causal discovery
Causal transcriptional networksWe represent transcriptional causal networks by DAGs consisting of nodes X  X 1 ; :::; X p and edges E  E 1 ; :::; E s. Every gene is represented by one node in the network. Statistically, every node is a random variable whose values indicate the expression levels of a gene. We further assume that the variables follow a multivariate Gaussian distribution. Edges represent conditional dependencies; nodes that are not connected represent variables that are conditionally independent. Moreover, we interpret the edges causally. If there is a directed edge X ! Y, we assume that an experimental perturbation of the expression level of X will affect Y, but not vice versa. A DAG fully specifies the conditional dependencies of all nodes (), but not vice versa. Several DAGs with the same skeleton of undirected edges and the same v-structures () encode the same conditional dependency structure (). These equivalence classes of DAGs can be represented by completed partially directed acyclic graphs (CPDAGs) that consist of the joint skeleton and the directed edges which are common to all DAGs in the equivalence class ().
Causal effectsIn a hypothetical perturbation experiment we may increase the random variable X by one unit (X7 !X  1) and observe the effect on a second variable Y. If Y is changed by Y7 !Y  b, we call b the causal effect of X on Y. Given a causal network and a dataset of joint observations of the nodes X, Pearl's do-calculus () provides guidelines how to estimate causal effects b for all pairs of nodes. In the Gaussian case one can use a linear regression of Y on X and a set of additional nodes Z that fulfill the Back-door criterion (), a criterion that only depends on the topology of the underlying causal network. A set of variables Z satisfies the Back-door criterion relative to an ordered pair (X, Y) in a DAG G, if i. no node in Z is a descendant of X. ii. Z blocks (see Supplementary Section 1) every path between X and Y that contains an arrow into X (Pearl, 2000). It can be shown, that the true parents of a node X do always fulfill the Back-door criterion relative to every ordered pair (X, Y) (). Inthe set of nodes {2,3} fulfills the Back-door criterion relative to the ordered pair (6,10). In addition, the set {4,7} fulfills the Back-door criterion relative to the ordered pair (6,10), while for example the set {4} does not fulfill the Backdoor criterion, because the path (6,3,7,10) remains unblocked.then b X is a consistent estimator of the causal effect of X on Y (). Z adjusts the regression for possible confounders that affect X and Y simultaneously, thus creating spurious correlations between X and Y. An example for an adjustment set Z that satisfies the Back-door criterion of a node X with respect to all other nodes Y is the set of true parents of X.
IDA and CStaRFor transcriptional networks the underlying causal graph is mostly unknown and needs to be estimated. An obvious idea is to first reconstruct a causal network and then estimate causal effects thereof using Equation (1). Several algorithms have been proposed to estimate the equivalence class of a DAG from observational data (). IDA uses the PC-algorithm (), which estimates the CPDAG in a two-step procedure. In the first step, the skeleton and the v-structures of the CPDAG are estimated by testing for conditional independence. In the second step, orientation rules are applied (), which exploit the facts that (i) the network cannot be cyclic, and (ii) that no new vstructures are found in an equivalence class. A parameter a is used to calibrate the sparseness of the estimated network. Large values of a increase the number of edges within a network. Importantly, increasing a also increases the runtime of the algorithm significantly, such that one often needs to compromise on the sparsity of the network to keep computations feasible. The existence of equivalent DAGs complicates the estimation of causal effects.have demonstrated that it is still feasible to derive lower bounds of causal effects using their IDA algorithm. In a computationally elegant and efficient way, IDA enumerates all possible parent sets of a node X in a CPDAG, and calculates causal effects of X on all its descendants using any one of the parent sets as adjustment sets Z in Equation (1). This yields a set of estimated effects, and its minimum is used as a lower bound. IDA is asymptotically consistent. From the systems biology perspective, IDA was ground-breaking, becausesucceeded in predicting expression changes of 5361 genes in 234 yeast deletion strains from 63 expression profiles of wild type yeast, thus constituting the first high throughput analysis of virtual perturbation experiments. Transcriptional networks consist of tens of thousands of genes. Typically, however, one has not more than at best a few hundred observations of their gene expression values. In situations with many nodes and few observations the accuracy of estimated CPDAGs by the PC algorithm is poor (). As a remedysuggest applying stability selection () on the IDA algorithm. K subsets of samples are drawn and sets of causal effect bounds are estimated for all of them using IDA. Finally, genes are ranked by how often they appear in the top q genes with the highest effects. This procedure is repeated for several values of q and the median rank is used to calculate the final rank of a gene. This modified IDA algorithm called CStaR was demonstrated to improve on causal discovery ().
LimitationsA limiting factor in both IDA and CStaR is the poor accuracy of the estimated CPDAGs and the strong dependence of subsequent steps on a valid causal network (Supplementary Figs S1 and S2). Albeit it is difficult to improve on the quality of estimated networks, we argue that there is a more effective way to extract causal information from imperfect networks. More specifically, we have identified two steps in the IDA/CStaR procedure that confine causal discovery.
Selecting a causaleffect from a multiset For a given pair of nodes X and Y and a given CPDAG, IDA calculates multiple causal effects of X on Y, if the CPDAG connects X to other nodes via undirected edges. Both IDA and CStaR are conservative in that they report the minimum of the effect set. While the minimum is a valid lower bound of the causal effect, it represents a biased estimate that can lead to missed causal discoveries.
Summarizing effects across subsampling runsCStaR applies stability selection to detect stable causal effects. It prefers gene pairs that repeatedly obtain a high score. The focus on gene pairs with the highest scores can lead to missed causal effects with smaller effect sizes. Whether an estimated effect in the set of causal effects from X on Y associated with a CPDAG, MX ! Y, is valid or not depends on the corresponding adjustment set Z used in Equation (1). IDA and CStaR aim at deriving valid effects by identifying the true parents of the node X. If the CPDAG is correct, at least one of the effects in MX ! Y is based on the true parents of X and thus valid, but we do not know which one it is. If the CPDAG is incorrect, it is well possible that all values in MX ! Y are invalid.
The aIDA algorithm
MotivationWe aim at distinguishing between valid and invalid effects both within multisets of effects and across subsampling runs. If the causal network is known, the Back-door criterion and other graph-based criteria () can be used. If the network is not known, we argue that the distribution of effects across subsampling runs is helpful to estimate the true causal effect. We use estimated causal effects from simulated data using known causal networks to study features of the estimated CPDAGs and the distributions of valid causal effects versus invalid causal effects.Improved causal discovery in virtual cellular experimentsare no strict requirement to calculate causal effects. Certain benign mistakes do not impede causal effect estimation. If the estimated parents fulfill the Back-door criterion they yield valid estimates even if they are not true parents. For a given DAG with edge weights that represent direct causal effect strengths we can generate artificial gene expression data (Details are given in the Supplementary Materials Section 3.1). We generated 50 samples for a random DAG of 1000 nodes, drew 100 subsamples of size n  25, and ran the PCalgorithm as implemented in () on each subsample, resulting in 100 CPDAGs. From all pairs of nodes X ! Y we calculated the multisets of possible estimated parents of X. Since we know the correct parents of X in the simulation scenario, we can count how often the PC-algorithm correctly identifies a parent set. In these cases IDA can derive valid causal effects. However, finding the correct parent sets is a sufficient but not a necessary criterion to get valid estimates. In fact, every gene set Z that fulfills Pearl's Back-door criterion also yields valid causal effect estimates. In our simulations from known networks (see Supplementary Material for details on data simulation), we can verify whether an estimated parent set fulfills this criterion and count how often this is the case.shows that although estimated parent sets often are not the true parents, they nevertheless frequently fulfill the Backdoor criterion and will hence generate valid estimates of causal effects. In other words, finding the true parents is difficult, whereas obtaining a set of estimated parents satisfying the Back-door criterion is not. For example, in more than 40% of the cause-effects pairs the Back-door criterion was fulfilled in more than 90% of the estimated parent sets over the 100 subsampling runs, conversely there were no subsampling runs that contained at least 90% true causal parent sets. Similar observations can be made when reconstructing real biological networks (Supplementary). This explains in part why IDA and CStaR are successful in spite of the poor performance of the PC-algorithm.
Valid effects generate peaks in the effect histogramsWe next used Equation (1) to estimate causal effect sets for all pairs of nodes X ! Y and all estimated parent sets that can be derived from the CPDAGs. We pool these numbers both across effect multisets and subsampling runs and visualize their distribution in the light gray histogram of. The solid curve inis a smoothed density estimate of all effects from node 6 on node 10 across 100 subsampling runs derived from valid adjustment sets. We observe a pronounced peak in this density around the true causal effect (dotted vertical line). This is because estimates derived from valid adjustment sets Z are unbiased estimates of the true causal effect and, hence, scatter around it. The true parents of the cause are always a valid adjustment set, but they are not necessarily the only one. Valid are all sets that fulfill the Back-door criterion relative to the cause and the effect of interest. The dashed curve shows the density of the estimates that are not derived from valid adjustment sets. This distribution is not centered around the true effect. Estimates based on invalid adjustment sets can take any value, and their corresponding distribution is unknown. Since the Back-door criterion is not a necessary condition for Z to be a valid adjustment set, some of these estimates might still be valid but others are not. If a large fraction of effects is valid, one would expect them to have similar values centered around the true causal effect, and therefore give rise to a peak in the histogram. This observation is the motivation for the algorithm described below. The basic idea is to pool effects across multisets and subsampling runs and to use the mode of the smoothed histogram as causal effect estimate.
AlgorithmThe input of our algorithm is a set of expression profiles consisting of p genes observed in n samples. This data is observational, i.e. the cells were not perturbed. We assume that all samples were drawn from the same underlying joint distribution of gene expression levels. The output of our algorithm is an ordered list of triples (X, Y, C), were X and Y are genes and C is the estimated causal effect of X on Y. The list is sorted by the absolute value of the effect strength C. The algorithm performs the following steps: 1. Randomly draw K subsets of samples of size l, resulting in K resampled datasets. 2. For each of these subsets estimate a CPDAG using the PC-algorithm as implemented inwith sparseness parameter a, resulting in K CPDAGs on the same set of nodes. 3. For every ordered pair of genes X ! Y extract the multisets M X ! Y of possible estimated parents of X and pool them across all CPDAGs. 4. For all elements Z of this multiset estimate a causal effect using the regression model from Equation (1). 5. Generate one histogram of estimated effects per gene pair (Accumulation step). Smooth these histograms using a GaussianThe algorithm follows CStaR in steps 14 but differs from CStaR in step 5. Step 6 ranks all gene pairs by effect size to achieve results comparable to CStaR. Since the accumulation idea is added to the IDA concept, we call our algorithm aIDA for accumulation based IDA.
ResultsaIDA and CStaR () were applied to both simulated datasets and two gene expression microarray datasets from Saccharomyces cerevisiae using the order independent implementation of the PC algorithm (). For the simulated datasets true causal effects are known from the simulation process. For the microarray datasets the target set of causal effects is calculated as described infrom interventional experiments (single knock-out strains, see details in Section 5.1 of the Supplementary Materials).
Parameter calibrationaIDA depends on the calibration of several parameters. The most critical of them is the sparseness parameter a of the PC algorithm (Kalisch and B hlmann, 2007). Since a is shared by aIDA and CStaR, its calibration does not impede a fair comparison of the methods. The other parameters were set to the recommended values from CStaR (see Supplementary Materials Section 6). For the bandwidth of the Gaussian kernel we used default values of the density() function from basic R, since further calibration did not improve effect estimation. A larger a leads to denser CPDAGs and larger multisets. This in turn leads to more regression parameters that need to be estimated from Equation (1), which might increase the standard error of the effect size b X. We tested the recommended value for a from the IDA literature but observed for both, the simulated and real data, that resulting CPDAGs can have very different numbers of edges in comparison to previous publications. This is further aggravated by a correction of the implementation of the PC algorithm, which leads to systematically sparser graphs for the same values of a, especially for graphs with many variables and few observations (). For the simulated datasets we have calibrated a such that we obtain CPDAGs with densities similar to the expected density (Supplementary Figs S4 and S5). The histograms show, that a  0:5 is a realistic value for a. Additionally, we show that choosing a higher value of a leads to a better performance (Supplementary Figs S1 and S2). For the datasets from S.cerevisiae we compared the densities to a density derived from a transcriptional regulatory network published by(). We observed that both alpha  0.01 and alpha  0.5 underestimate the density of the network. Although the data suggest using an alpha even above 0.5, we did not increase it further due to runtime constraints.
Performance of aIDA on simulated dataFirst, we tested the performance of aIDA on simulated datasets generated from known causal Gaussian networks. We simulated random DAGs of various sizes and augmented their edges with weights sampled from a uniform distribution on the interval (0.1,1). The weights represent direct causal effect strengths. For each DAG, we generated artificial datasets of varying size using the R package pcalg (). Details on the data generation are given in the supplements, Section 3.1. We use these data to evaluate the performance of aIDA and compare it to that of CStaR. A comparison to plain IDA is not needed, because it has already been shown that it is outcompeted by CStaR with respect to true positive selections versus false positive selections ().
Improved causal discovery in virtual cellular experimentsIn a first analysis we randomly simulated two sets of 10 small DAGs with 100 nodes each. For the first set we generated 10 small datasets with each set containing n  50 samples, and for the second set we simulated 10 large datasets of n  1000 samples. We then run aIDA and CStaR on this data, both using 100 subsamples of size n 2 and a sparseness parameter of a  0:1.shows barplots of the partial areas under receiver operating characteristics (ROC) curves (pAUC) up to 100 false positives. The error bars correspond to standard errors across the 10 datasets with 50 and 1000 samples, respectively. aIDA outperforms CStaR for both large and small datasets with respect to pAUC up to 100 false positives. Both CStaR and aIDA become impractically slow for datasets with more than 1000 nodes and realistic settings of a. In a second analysis we tested aIDA on 5 sparse and 5 dense random networks of size 1000. The sparse and dense random networks contain approximately 1250 and 2500 edges, respectively. We simulated small datasets of 50 samples for each graph. We again used both aIDA and CStaR to rediscover the causal effects in the networks and compared their prediction performances.shows barplots of the pAUC for the 5 datasets generated from dense and sparse graphs, respectively, up to 100 false positives for a  0:5 (for more values of a see Supplementary Figs S1 and S2). Again aIDA outperforms CStaR, and achieves its best results for larger settings of a.
Application to gene expression data of S.cerevisiae deletion strainsaIDA and CStaR were applied to two large scale gene expression studies conducted in yeast. Both datasets analyzed S.cerevisiae single-gene deletion mutants (). The datasets contain both observational data of wild type yeast and expression data from many individual deletion strains. We ran aIDA and CStaR on the wild type data to predict causal relationships between genes from observational data and validate these predictions using the data from the corresponding intervention experiments.This reference dataset was previously analyzed using IDA () and CStaR (). Data was preprocessed as described previously by these authors, resulting in expression data of 234 single-gene deletion mutants plus 63 wild type samples. We ran aIDA and CStaR with the same 100 subsamples of the 63 observational samples. Lists of predicted causal effects were generated and filtered for gene pairs X ! Y), where X is among the 234 genes, for which deletion strain data was available. The interventional data from deletion strains were used to classify these predictions into true and false positive predictions.shows ROC curves up to 100 false positives for CStaR and aIDA, respectively. Again, aIDA outperforms CStaR.
Application
Application
DiscussionWe presented aIDA, a method to estimate causal effects from observational data in situations where we have many variables but only few observations, a common situation in biology due to costs of the experiments and availability of biomaterial. aIDA does not require any knowledge about the causal network underlying the data. It uses IDA in a subsampling approach () to account for small sample sizes. While IDA and CStaR take the. Comparison of the partial area under the ROC curve up to 100 false positives for the 5 simulated datasets with 1000 nodes, n  50 samples, a  0:5 and a dense and a sparse underlying true graph, respectively. Black bars show values for aIDA, gray bars show values for CStaR. The error bars indicate standard errors across the 5 datasets minimum absolute value of causal effects from K subsampling runs (), aIDA uses the whole multisets of causal effects. The estimate for the true causal effect is the mode of the density calculated over all estimated sets of causal effects across K subsampling runs. IDA and all its extensions require among other assumptions that the multivariate Gaussian distribution is faithful to the DAG (Kalisch and B hlmann, 2007), i.e. statistical conditional independencies can be inferred from the underlying DAG. Faithfulness in general is not testable () and, of course, there is no evolutionary selection pressure that makes biological networks faithful. An additional limitation of all existing approaches for causal discovery is that feedback mechanisms cannot be captured by a DAG. Therefore, IDA, CStaR and aIDA cannot replace wet lab experiments, but are a good starting point for experimental design. We show that aIDA outperforms CStaR on both simulated and real datasets with respect to the partial area under the receiver operating characteristics (ROC) curve up to 100 false positives. Besides yielding improved estimates of the top candidates for intervention experiments, the results on simulated data suggest that aIDA performs better than existing algorithms on small sample sizes. In summary aIDA improves the estimation of causal effects from observational data. These findings suggest aIDA as a useful tool for experimental design of functional studies.Improved causal discovery in virtual cellular experiments
A B
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
F.Taruttis et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
