Motivation: Pyrosequencing technology provides an important new approach to more extensively characterize diverse sequence populations and detect low frequency variants. However, the promise of this technology has been difficult to realize, as careful correction of sequencing errors is crucial to distinguish rare variants ($1%) in an infected host with high sensitivity and specificity. Results: We developed a new approach, referred to as Indel and Carryforward Correction (ICC), to cluster sequences without substitutions and locally correct only indel and carryforward sequencing errors within clusters to ensure that no rare variants are lost. ICC performs sequence clustering in the order of (i) homopolymer indel patterns only, (ii) indel patterns only and (iii) carryforward errors only, without the requirement of a distance cutoff value. Overall, ICC removed 93â€“95% of sequencing errors found in control datasets. On pyrose-quencing data from a PCR fragment derived from 15 HIV-1 plasmid clones mixed at various frequencies as low as 0.1%, ICC achieved the highest sensitivity and similar specificity compared with other commonly used error correction and variant calling algorithms. Availability and implementation: Source code is freely available for download at http://indra.mullins.microbiol.washington.edu/ICC. It is implemented in Perl and supported on Linux, Mac OS X and MS Windows.
INTRODUCTIONMassively parallel sequencing (MPS) technologies, such as 454 pyrosequencing (), are becoming common to rapidly and cost-effectively detect and quantitate rare sequence variants. Pyrosequencing generates up to millions of reads that can include rare variants to detect low frequency drug resistance and immune escape variants in viral (Human immunodeficiency virusand Simian immunodeficiency virus) populations (). However, the PCR required before pyrosequencing of HIV/SIV populations introduces misincorporation errors, and the pyrosequencing process introduces a significant number of indels and carryforward errors (). To accurately estimate population diversity by MPS, it is crucial to distinguish biological variants from process errors with high sensitivity and specificity. Previous studies of 454 pyrosequencing data have managed to reduce sequence-processing errors by improving PCR and sequencing platforms (). Also, several error correction and variant calling algorithms have been published (). Salmela and SchroderSchroder () used multiple alignments of reads as well as quality scores to distinguish correct base calls from erroneous ones, and their method is easily adjustable to reads derived from different MPS platforms. Prosperi and Salemi () developed a program for viral population reconstruction with a built-in Poisson error correction method and post-reconstruction probabilistic clustering.introduced VPhaser, a single nucleotide variant calling tool that uses phase and quality filtering with a probability model that incorporates and recalibrates individual base quality scores to increase both sensitivity and specificity. Sequence clustering is also a common way to reduce sequencing errors. One approach is to cluster sequences using genetic distances (). Another approach is based on flowgrams rather than sequences, which allows pyrosequencing errors to be modeled naturally, as performed by) and. Both approaches require a distance cutoff value that combines substitutions, insertions and deletions in a single distance measure. The cluster centers are haplotypes, and the cluster sizes are interpreted as the haplotype frequency in the population. Error correction in a cluster is performed by collapsing variation within the cluster. Therefore, there is a risk for loss of real variants in a population if an inappropriate cutoff value is set, especially in a population of low genetic diversity. To address the challenge of detecting genetic variants, especially those occurring at low frequencies, we developed a new approach that clusters sequences without substitutions and locally corrects only indel and carryforward errors within clusters *To whom correspondence should be addressed. to ensure that no rare variants are lost. Indel and Carryforward Correction (ICC) provides a complete suite for users to analyze pyrosequencing data, including read quality filtering and alignment, indel and carryforward error correction, variant calling and calculation of single nucleotide variant and haplotype frequencies. To determine the efficiency of ICC in correcting errors, we calculated and compared error rates before and after ICC correction on datasets derived from previously sequenced plasmid DNAs. Using pyrosequencing data of PCR fragments derived from a mixture of 15 HIV-1 plasmid clones at various frequencies, we used ICC to estimate sensitivity and specificity and compared these results with several other commonly used error correction and variant calling algorithms.
SAMPLE PREPARATION AND PYROSEQUENCING
Control datasetspNL4-3, a plasmid containing a full-length HIV-1 genome, served as a control for pyrosequencing error calculations and comparisons. Two sets of first round PCR products were generated with primers that targeted portions of the gag-pol genes to produce a 2.6 kb amplicon and the env gp120 coding sequence for a 2.1 kb amplicon. Nested second round PCR reactions were multiplex PCRs that generated four amplicons (gag3, pol1, env3 and env5) from the mixture of two first round products that ranged from 391 to 597 bp in size with primers containing the 454 sequencing adapter and Multiplex Identifier (MID) adapter (Supplementary). PCR reactions are described in supplementary data.
HIV-1 plasmid mixtureFifteen HIV-1 plasmid clones () were mixed to reach the final proportions (Supplementary), with individual DNA concentrations determined using a Nanodrop instrument (Thermo Scientific, USA). The plasmid mixture was further quantified by limiting dilution endpoint PCR () with the program Quality (http://indra.mullins. microbiol.washington.edu/quality/). An estimated maximum of 1000 (691 AE 310) plasmid molecules were used as templates for PCR amplification and subsequent pyrosequencing. Primers and nested PCR conditions were the same as for pNL4-3 mentioned previously (and see Supplementary Data).
HIV-1 clinical sampleRNA was extracted from five plasma specimens from one HIV-1 infected individual from the Seattle Primary Infection Cohort () using the QIAamp Viral RNA Mini Kit (Qiagen, Valencia, CA) according to the manufacturer's protocol. A total of 560 ml of plasma was extracted in each case and eluted in 80 ml of elution buffer. cDNA was synthesized using Takara BluePrint First Strand Synthesis Kit (Clontech 6115A) according to the manufacturer's protocol. cDNA was synthesized with gene specific primers, R3337-1 (5 0-TTTCCYACTAAYTTYTGTATRTCAT TGAC-3 0 ) for gag-pol and R9048 (5 0-AGCTSCCTTGTAA GTCATTGGTCTTARA-3 0 ) for gp120, at final concentrations of 400 nM. Fragments of gag-pol (2.6 kb) and env (2.1 kb) were amplified in first round reactions separately, then mixed together and used as template for multiplex second round amplification of a 505bp gag and a 597 bp env fragment (gag3 and env5) (Supplementary). PCR amplifications are described in supplementary data. PCR products were visualized using a Qiaxcel (Qiagen, USA), purified using Agencourt AMPure beads (Beckman Coulter, USA) and then pyrosequenced on the 454 Life Sciences GSFLX Titanium platform according to the manufacturer's protocols.
ALGORITHM
Multiple sequence alignmentSequences in a user-defined window were aligned using the NeedlemanWunsch algorithm (). First, sequences were collapsed so that only unique sequences were presented, and unique sequences were ranked by their abundance. The two most abundant unique sequences S 1 and S 2 were pairwise aligned using dynamic programming ():. s(x,y) denotes the score obtained by aligning character x against character y. Second, the profile of the alignment was computed, taking into account the abundances of the aligned unique sequences. The third most abundant unique sequence was then aligned to the profile, which produced a new multiple sequence alignment including the first three most abundant unique sequences:V(i,j) denotes the value of the optimal alignment of prefix S 1with the first j columns of the profile. For a character y and column j, let p(y,j) be the frequency that character y appears in column j of the profile; S(x,j) denotes P y sx, y  py, j, the score for aligning x with column j. The process of calculating the profile of the newly produced multiple sequence alignment and aligning the next most abundant unique sequence to the updated profile was repeated until the last unique sequence was aligned. The default scoring parameters for alignment were as follows: match, 10; mismatch,-9; gap penalty,-15.
Computing sequence similarity and edit transcriptThe similarity of two sequences, and associated optimal alignment and edit transcript, can be computed by dynamic programming (). An edit transcript is a string over the alphabet I (insertion), D (deletion), R (replacement or substitution), M (match) that describes a transformation of one string to another. To compute the similarity of two sequences , a pairwise scoring matrix can be calculated by Equation (1). Therefore, the optimal edit transcript can be computed to describe the transformation between two sequences and distinguish sequence differences by insertion, deletion and substitution.shows an example of a pairwise alignment of two sequences S 1 and S 2, as well as the edit transcript. The differences between two sequences can be readily identified from their edit transcript. Moreover, the transcripts can be used along with the aligned sequences to distinguish indels in homopolymer and non-homopolymer regions, where a homopolymer is defined as two or more adjacent nucleotides with the same state, and to identify the pattern of carryforward errors.
IMPLEMENTATION
Error correction by ICCICC was written in the Perl scripting language and has been tested on Linux, Mac OS X and MS Windows systems. Starting with raw pyrosequencing reads and their quality scores, the software pipeline performs the following steps. The workflow of the implementation is shown in.(i) Read quality filtering: Raw pyrosequencing reads are filtered based on ambiguous bases, length and average quality. The default parameters remove reads that are shorter than 100 bp, contain ambiguous bases or have average quality scores 525.(ii) BLAST and retrieval by sequence window: Reads passing (i) are mapped to a reference sequence using the BLASTN algorithm () with parameters for alignment as followsmatch reward, 1; mismatch penalty,-1; gap existence, 1; gap extension, 2. User-defined window and stride size parameters retrieve windows of sequences across the reference sequence from the BLASTN output.(iii) Non-substitution clustering and error correction: In each window of sequences, the similarity between each pair of sequences is computed using dynamic programming, along with an optimal edit transcript, which is then used for sequence clustering. Sequence errors are corrected through three sequential steps of non-substitution sequence clustering specifically designed for correction of homopolymer indels, indels and carryforward errors. A greedy scheme is used to cluster reads from the most to the least abundant. First, homopolymer indel errors are corrected by clustering sequences only differing by homopolymer indels. All sequences are condensed into unique sequences. Unique sequences with their abundance are used to perform sequence clustering. The most abundant sequence is used to cluster other sequences. Pairwise alignments of the most abundant sequence to all other sequences are computed along with the edit transcripts. The sequences with edit transcripts not containing substitutions and only showing the pattern of homopolymer indels relative to the most abundant sequence are clustered together with the most abundant sequence. For the next round, the most abundant sequence among the remaining sequences is chosen as a cluster seed, and the whole procedure iterates until the cluster seed reaches the first single sequence. Errors are corrected by collapsing variation within a cluster using the most abundant/consensus sequence for each cluster. The cluster size is now the abundance of the corrected sequence. Next, the sequences after homopolymer indel correction are further corrected for indel errors using the same strategy as homopolymer indel correction, except that it clusters sequences only differing in indels, i.e. sequences with edit transcripts not containing substitutions and only showing the pattern of indels to the mostabundant sequence are clustered together with the most abundant sequence. Finally, after correcting homopolymer and non-homopolymer indels, carryforward errors are corrected by clustering sequences only showing carryforward patterns.(iv) Variant calling and profiling: A Poisson probability model approximates the expected distribution of mismatch error rates to distinguish sequencing errors from authentic minor variants (). The nucleotide variant frequencies at each site across the reference sequence are calculated. Local haplotypes in each window are constructed by the most abundant/consensus sequence in each cluster. The cluster size is interpreted as the haplotype frequency in the population.
Error rate calculationPyrosequencing reads that served as the control for error rate calculations were processed by read quality filtering [step (i) mentioned previously]. The remaining qualified reads were aligned to the pNL4-3 reference sequence using BLASTN with the alignment parameters as followsmatch reward, 1; mismatch penalty,-1; gap existence, 1; gap extension, 2. Each type of error rate (number of errors/total number of mapped reference bases) was calculated by parsing the BLASTN output file, categorized by insertion, deletion and mismatch.
RESULTS AND DISCUSSION
Efficiency of sequencing error correctionTo characterize the frequency of pyrosequencing errors and determine the efficiency of the ICC method in correcting errors, we sequenced a control dataset of six PCR-derived amplicons from the HIV-1 gag, pol and env genes within the pNL4-3 plasmid. We compared these reads with the Sanger-derived sequence of the clone.shows the comparison of sequencing error frequencies of the six amplicons before and after error correction by ICC. These errors include both those introduced by PCR and those introduced during pyrosequencing. Overall error frequencies were reduced by 9395%, whereas the frequencies of insertion and deletion errors were reduced by 9899%, and mismatch errors were reduced by 4871%, the latter due to correction of carryforward errors because no substitution mutations were corrected (see Section 5.2 later in the text). We also applied ICC to data from an individual (PIC64236) with HIV-1 infection. We pyrosequenced PCR-derived amplicons from the viral gag and env genes found in the patient at five different time points, and we analyzed variants by their frequency.shows the analysis of one of the amplicons (gag3, 383 bp with primers trimmed). ICC reduced the number of variable sites by an average of 84%, and the overall trend was as expected for early HIV infection, with a slightly higher level of diversity early and then increasing diversity through time ().
Correction of carryforward errorsThe 454 pyrosequencing is known to be particularly prone to errors in homopolymeric regions due to carryforward and incomplete extension errors (). Incomplete extension refers to a homopolymer that is not completed due to insufficient local nucleotide concentrations within a flow. Carryforward errors occur when reagent flushing between the flows is insufficient, and leftover nucleotides are introduced near but not adjacent to homopolymers. With commonly used parameters for alignment, including the settings we used, one carryforward error was usually interpreted as two mismatches when aligned to the reference sequence. Because most carryforward errors were found immediately 3 0 to homopolymers, we investigated carryforward errors as a function of homopolymer length using the same control dataset of six amplicons. Carryforward errors increase as the length of the homopolymer increases, with a large increase noted with homopolymers of 6 nt in length (mean rate increased from 0.03 to 1.3% as homopolymer length increased from 3 to 6) (). According to these results, we conservatively corrected carryforward errors when found in up to 5% of reads. However, users can set different cutoff values. Because ICC does not correct mismatches, the reduction in mismatch errors noted above is attributable solely to the correction of carryforward errors.
Comparison with other error correction and variant calling algorithmsWe used several other error correction and variant calling programs to process our control datasets: V-Phaser (MacalaladReads passing quality filter InsertionOverall), QuRe (), Coral (), Acacia () and the PyroNoise component of AmpliconNoise v1.25 (). All compared algorithms were run using their default parameters. To compare sensitivity and specificity across the various algorithms, we mixed 15 HIV-1 plasmid clones of known sequence at frequencies ranging from 0.1 to 80% (). A 534 bp amplicon in gag was PCR amplified and subjected to pyrosequencing. After pyrosequencing, we detected 12 of the mixture of 15 plasmid clones with one at 80% frequency and the remaining 20% divided among the other 11 minor variants. Three minor variants mixed in at 0.1% frequencies were not detected, as expected, as we sequenced only 691 AE 310 templates. Because the Coral, Acacia and PyroNoise algorithms do not have methods to call variants, to fairly compare sensitivity and specificity among different programs, we set a frequency cutoff at 0.1% according to our experimental setup of $1000 input templates, i.e. only variants at frequencies !0.1% were considered when calculating sensitivity and specificity (). The specificity of each method was similar. However, ICC outperformed the other programs in sensitivity with each of the 11 minor variants detected. We also calculated the raw and corrected nucleotide frequencies from pyrosequencing data using PyroNoise, Acacia, Coral, QuRe, V-Phaser and ICC. Except for PyroNoise, we found good correlations between raw and corrected nucleotide frequencies of the expected variants (). PyroNoise and QuRe showed a relatively high specificity, indicating that they performed well in reducing sequencing noise, but PyroNoise had the lowest sensitivity among the six methods (). Furthermore, some variants detected by PyroNoise had much lower frequencies compared with raw and expected frequencies (). Using QuRe on the same dataset, we obtained results over only a portion of the amplicon (423 bp of the full length of 479 bp), as this program trimmed the amplicon at both ends, where highsequencing noise is usually detected. QuRe also used more relaxed settings by default in calling variants by Poisson distribution than ICC did. Thus, QuRe reached the highest specificity by removing more errors; on the other hand, it also eliminated more real rare variants, resulting in a lower sensitivity (). These results show that ICC is able to reduce sequencing noise to a large extent while retaining the correct frequencies of real variants. PyroNoise uses distances defined by flowgrams to assist in removing pyrosequencing errors. In our studies, PyroNoise eliminated some high-frequency variants, whereas some mutations were retained no matter how low their frequency. We found that mutations resulting in a flow cycle change were never corrected, whereas others that maintained flow cycles were subject to correction.shows an example of these two different types of mutations. When we compared the distance between (I) and (II) with the distance between (I) and (III) at the sequence level, there was no difference, with both having one mismatch. But at the flowgram level, the distance between (I) and (II) was different from that between (I) and (III). With a mutation from (I) to (II), the flows were maintained and still aligned. But when a mutation from (I) to (III) occurs, the flows were changed by an insertion of one flow cycle (highlighted in bold type); therefore, the flowgrams were no longer aligned. We therefore defined an In-Flow-Cycle (IFC) mutation as oneNote: Sensitivity is reported as the fraction of the known variants found in the raw data by each correction algorithm. Specificity is reported as the fraction of sites not containing the known variants observed in the raw data. Variant calling required a frequency of !0.001 with total input copy number of 691 AE 310.Note: Pyrosequencing data were derived from a PCR amplicon from the HIV-1 gag gene from one infected individual at five time points over the first 14 months of infection. Variable sites correspond to aligned nucleotide positions with at least two different nucleotides. that does not change the number of flows, and an Out-FlowCycle (OFC) mutation as one that changes the number of flows. Although there is no difference in distance between IFC and OFC mutations at the sequence level, there is a difference at the flowgram level. Because of their misalignment, each cycle after an OFC mutation increases the distance between flowgrams. To verify this finding, we simulated flowgrams having different frequencies of minor variants with various numbers of IFC or OFC mutations. The results of PyroNoise correction using the program's default parameter settings are shown in. Variants with frequency up to 19% were eliminated if there was one IFC mutation between major and minor variants. The frequency threshold of minor variants to be eliminated decreased as the number of IFC mutations increased. However, minor variants were not eliminated if there was a single OFC mutation distinguishing major and minor variants (). The results from sequencing the mixture of 15 HIV-1 plasmid clones also confirmed these findings (). Thus, it is crucial to choose proper parameters to not eliminate rare and sometimes abundant variants when using PyroNoise to correct sequencing errors.
Determination of minor variantsICC does not correct mismatches, and as a result, it maximizes the number of real rare variants retained. To distinguish mismatch errors from authentic minor variants, we applied a statistical analysis that assumes a Poisson distribution in the frequency of these errors (). Variants whose frequency of occurrence yielded a P50.001 according to the Poisson model were considered highly unlikely to be sequencing errors. Pyrosequencing error rate is largely dependent on the sequencing platform, PCR amplification and sequence context) than in nonhomopolymeric regions (0.0007). Therefore, they used two Poisson distributions of errors to distinguish sequence errors from authentic minor variants in homopolymeric and nonhomopolymeric regions, respectively. Considering that carryforward error is a major source of 454 pyrosequencing errors and one carryforward error is usually interpreted as two mismatches when aligned to reference sequence, we asked whether the difference in mismatch rate between the two contexts could be caused by carryforward errors in homopolymeric regions. To test this, we examined six amplicons on two separate pyrosequencing runs using the 454 GS-FLX Titanium platform. We calculated different types of errors and categorized them according to their sequence context (inside or outside of homopolymer regions) by distinguishing carryforward errors from substitutions in alignments (). The average mismatch error rate of the six amplicons, excluding carryforward errors, was 0.00013. The rates of mismatch errors were equivalent in non-homopolymeric regions (0.00013) and homopolymeric regions (0.00012) when carryforward errors were correctly aligned to the reference. After ICC correction of indels and carryforward errors, we therefore required only one distribution of mismatch error rates, which approximated a Poisson distribution with m  0.00013. We then used this empirically observed distribution to distinguish sequence errors from authentic minor variants. Within ICC, users can provide specific values according to different sequencing platforms and PCR conditions. In conclusion, ICC provides a complete software pipeline for users to analyze pyrosequencing data for both library and amplicon applications. It is specifically designed to correct indel and carryforward and incomplete extension errors in 454 pyrosequencing data and avoid the elimination of real variants during error correction by a novel approach of non-substitution clustering without need of a distance cutoff value. ICC can beNote: Flowgrams were simulated based on an amplicon of 339 bp. IFC mutations represent mutations that do not change the number of flow cycles. OFC mutations will change the number of flow cycles.. The effect of different mutations on flowgrams. Flowgram data corresponding to the sequences on the left, with nucleotides flowed in the order of TACG. The ':' indicates a new flow cycle series of the four nucleotides. Mutated nucleotides are highlighted in bold type. Inserted flow cycle is also highlighted in bold type applied in other next-generation sequencing platforms such as Ion Torrent and Illumina. Ion Torrent has similar technology and the same source of errors as 454 pyrosequencing. ICC is able to analyze Ion Torrent data with the same efficiency as 454 pyrosequencing data. It can also be run on Illumina data, although there is low indel error in Illumina platform. By applying a Poisson probability model, ICC is able to distinguish sequencing errors from authentic minor variants and remove sequencing noise to a large extent. With the high sensitivity and specificity achieved by ICC, it should expedite analysis of variable sequence populations.
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Indel and Carryforward Correction at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
W.Deng et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
