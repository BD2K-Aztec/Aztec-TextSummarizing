Eukaryotic genomes are hierarchically organized into topologically associating domains (TADs). The computational identification of these domains and their associated properties critically depends on the choice of suitable parameters of TAD-calling algorithms. To reduce the element of trial-and-error in parameter selection, we have developed TADtool: an interactive plot to find robust TAD-calling parameters with immediate visual feedback. TADtool allows the direct export of TADs called with a chosen set of parameters for two of the most common TAD calling algorithms: directionality and insulation index. It can be used as an intuitive, standalone application or as a Python package for maximum flexibility. Availability and implementation: TADtool is available as a Python package from GitHub (https:// github.com/vaquerizaslab/tadtool) or can be installed directly via PyPI, the Python package index (tadtool).
IntroductionChromosome conformation capture (3C) studies (), specifically their high-throughput derivative Hi-C (), have revealed the hierarchical folding of eukaryotic genomes. Chromatin has been found to be typically organized into genomic regions with a strong enrichment of intra-chromosomal contacts (). These regions, termed self-or topologically-associating domains (TADs), can range in size from hundreds to thousands of kilobases with smaller domains often being nested within larger ones (). A number of algorithms to identify TADs computationally have been developed. Among the most popular and intuitive are the directionality index () and insulation index (). The former calculates upstream and downstream contact biases for each locus along the genome  TAD boundaries are then generally demarcated by strongly directionally biased loci. The latter uses a rectangular sliding window approach to sum up contacts within a given region surrounding each locus-as TADs are regions of increased contacts, they can easily be identified via contact count cutoffs. The properties of identified domains critically depend on the parameter choice of the applied TAD-calling algorithms. For the directionality index, the window size around a locus for which biases are computed primarily determines the size of the identifiable TADs. The cutoff used for biases strongly influences the sensitivity and specificity of TAD identification. Changing the window size and contact cutoff in the insulation index algorithm has similar effects. Finding suitable, robust parameters for the data set of interest is often a multistep, iterative process of testing and recalculation. To reduce the element of trial-and-error and to facilitate the meaningful identification of self-associating domains, we have developed TADtool: an interactive plot that assists in choosing relevant TADcalling parameters with immediate visual feedback.
UsageTADtool is launched from the command line and requires two input files: a square normalized Hi-C matrix and a list of genomic regions that correspond to matrix bins. The user selects a genomic region of interest and can choose between the insulation and directionality index. After automatically calculating the values for the chosen TAD-calling algorithm with a wide range of window sizes, an interactive figure will be opened that shows: a Hi-C plot () , TADs as called with the current set of parameters (), a line plot showing the respective index values for the current window size (), and a heatmap summarizing index values for all calculated window sizes (). The figure supports synchronized zooming and panning, and the colour intensity of both heatmaps can be adjusted using sliders. By clicking the line plot and heatmap the user can interactively select the TAD-calling cutoff and window size, respectively  TAD regions will be updated automatically. Thus, with only a few clicks, a meaningful set of parameters for the chosen TAD-calling algorithm can be selected. TADs as called with the current parameters and other plot data can be directly saved to file using the provided buttons.
Discussion and conclusionThe usefulness of TADtool can easily be demonstrated on realworld data sets.shows a 2Mb region on mouse chromosome 12 with TADs of varying sizes, some of them nested (lymphoblastoid Hi-C data at 10kb resolution from). TADs naturally vary in size and intensity. By modifying parameters in TADtool (), especially the window size, it is possible to deliberately call smaller (top) or larger (bottom) TADs.shows the same region in a lower-resolution embryonic stem cell Hi-C map (40 kb,), alongside directionality index plots for two different sets of parameters. In the original publication a window size of 2Mb was used (, bottom). Similarly to the insulation index, by adjusting the window size of the directionality index we show that it is very easy to alternatively identify smaller, nested TADs (, top).have used a similar approach to derive hierarchical TAD trees. With TADtool, the process of finding suitable window sizes and cutoffs matched to the nested TAD sizes is greatly simplified. The chosen examples also illustrate that TAD calls can be very sensitive to parameter changes in certain ranges. TADtool is designed to find parameters that match the visual perception of how TADs should be called and, importantly, that produce stable TADs across a range of values. While this process is greatly simplified with this tool, it remains the user's responsibility to verify TAD calls in their data using a range of parameter combinations and other, independent statistical means. In summary, this tool speeds up and improves the process of finding meaningful parameters for two of the most popular TADcalling algorithms. As such, TADtool is of great practical value for the genome organization community.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
