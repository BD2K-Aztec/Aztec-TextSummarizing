Motivation: Deciphering the complex mechanisms by which regulatory networks control gene expression remains a major challenge. While some studies infer regulation from dependencies between the expression levels of putative regulators and their targets, others focus on measured physical interactions. Results: Here, we present Physical Module Networks, a unified framework that combines a Bayesian model describing modules of co-expressed genes and their shared regulation programs, and a physical interaction graph, describing the proteinâ€“protein interactions and protein-DNA binding events that coherently underlie this regulation. Using synthetic data, we demonstrate that a Physical Module Network model has similar recall and improved precision compared to a simple Module Network, as it omits many false positive regulators. Finally, we show the power of Physical Module Networks to reconstruct meaningful regulatory pathways in the genetically perturbed yeast and during the yeast cell cycle, as well as during the response of primary epithelial human cells to infection with H1N1 influenza. Availability: The PMN software is available, free for academic use at
INTRODUCTIONTranscription regulation plays a major role in controlling gene expression and cell function. Despite intensive research, the topology and function of most regulatory circuits remain largely unknown. The increasing availability of large-scale datasets, such as genomics sequence, gene expression profiles and proteinDNA or proteinprotein interaction data, provides an opportunity to automatically infer regulatory circuits on a genome-wide scale. Three main types of approaches have been used to infer regulatory models from genomic data (), each suffering from substantial limitations. Observational models, including Bayesian networks () and their extensions (e.g.), rely on dependencies between the expression profiles of regulators to those of their target genes. These can handle abundant expression data, but often fail to distinguish true regulation from co-expression (). Perturbational models associate targets to factors based on the effect of the factors' genetic manipulation on gene expression (; Capaldi * To whom correspondence should be addressed.  The authors wish it to be known that, in their opinion, the last two authors should be regarded as joint). These identify functional effects, but may fail to correctly distinguish direct from indirect targets (). Finally, physical models associate regulatory factors with the targets whose promoters they bind (), or where a cis-regulatory site is present (e.g.). These identify molecular targets, but some of those may be functionally silent (). Thus, a major challenge is to build a realistic, molecular and functional model of gene regulation that combines changes in gene expression with the underlying physical interactions. Previous attempts toward this goal have mostly introduced new hypotheses only at one level, while using the other level to support them. These include works that detect functional modules by integrating phenotypic and physical data () or that reconstruct or annotate signaling pathways or binding events (). A notable exception () integrated binding, sequence and expression information in a Bayesian framework to identify both clusters of genes and their transcriptional regulators. However, this work did not consider upstream signaling pathways. Here, we present Physical Module Networks (PMN), a novel probabilistic graphical method that learns transcriptional networks by combining gene expression profiles, proteinprotein and proteinDNA binding data. The PMN model, based on Module Networks (), discovers modules of co-expressed genes, sets of regulators that control their activity, and a path of physical interactions that connects the regulators to their target module (). The modules, regulators and paths are inferred simultaneously, resulting in the most probable physical model of gene regulation that underlies the observed data. Using synthetic data, we show that the addition of physical interactions to the simple Module Network (MN) model improves the model's precision, without compromising recall. We evaluate the biological power of the model in two yeast systems (gene perturbations and cell cycle), and a human dataset (response of epithelial cells to flu infection). In each case, the learned modules and pathways are biologically sound, and lead to novel insights, emphasizing the power of integrated probabilistic models.
THE PMN MODELA PMN () consists of two components: an MN representing the relation in expression between a regulator and its targets and a Physical Interaction Graph providing a path of physical interactions between them.(top) and its 37 target genes (bottom), during 2 cell cycles (two replicates are shown). (b) A physical pathway connecting Mob1 via Cdc28 to the transcription factor FKH2 that binds 15 of the module genes. (c) Learning procedure. Input: gene expression, a set of potential regulators and physical proteinprotein and proteinDNA interactions. PMN Learner: an iterative optimization procedure that finds modules, their regulators and the physical pathways that explain the regulation. Output: the best configuration found by the learner.
Module NetworksAn MN model () represents regulatory dependencies in expression profiles between genes. It relies on two major assumptions. First, it assumes that the expression level of a target gene can be predicted from the expression level of one or more regulators. Second, it assumes that genes are organized into modules, where all members of a module are regulated by the same factors and in the same way. For example (), the expression values of all the genes in a G2/M module can be predicted by the level of the same regulator (Mob1), in the same way. In some cases, multiple regulators act combinatorially. This may be modeled in different ways, including a decision tree (), linear regression (), etc. Formally, a Module Network is a Bayesian network which is defined over gene groups (modules) rather than over individual genes (,). Briefly, an MN model M consists of three components. The first is the partition of all genes G in the domain into a set of modules C ={M 1 ,...,M n }. The second is a structure S that assigns for each module M j a set of).
Physical Interaction GraphA Physical Interaction Graph (Figs 1b and 2b) describes possible interactions between proteins and genes. Formally, an interaction graph I is a graph over a set of genes and proteins with three types of edges: proteinprotein interactions (an undirected edge between two proteins), proteinDNA interactions (directed edge from a protein to a gene), and transcription interactions (directed edge from a gene to its protein product). Thus, each gene in the domain is represented by two nodes, one for the gene and one for its protein product. Protein nodes corresponding to transcription factors are marked according to prior biological knowledge. The interaction graph may contain genes whose expression was not measured (and thus do not appear in the MN).
Regulatory PathsAn MN M and a Physical Interaction Graph I are consistent, if we can explain how the state of the regulators in the MN reaches the target genes through physical interactions. More precisely, for each pair of regulator X i and target module M j in M, there should be a consistent physical Regulation Path from X i to M j. A Regulation Path () is a sequence of nodes v 1 ,...,v n in I, where v 1 is a protein node of the protein product of X i and v n is a transcription factor (TF) that binds all the genes in M j. If the protein v 1 is a transcription factor, the path can be the trivial one, of length zero. The regulation path is partially directed, such that the edge between v and v +1 is either undirected or directed from v to v +1. A PMN P ==M,I model has a consistent configuration if each regulator in the Module Network has a regulation path from its protein to the genes in its target module ().
Physical Module Networksdescribes the data. The input consists of (1) gene expression measurements, D X , (2) a pool of potential ('candidate') regulators R  G from which the algorithm can choose, and (3) proteinprotein and proteinDNA interaction measurements (D I ), associated with P-values that represent their confidence. Following the literature on graphical models (), we pose the learning problem as a discrete optimization problem. We define a score function that captures how well a model decribes the observed data, and then search for the model that maximizes the score.
Model scoreFormally, let P ==M,I be a PMN model which consists of an MN M and a Physical Interaction Graph I. We score how well a given model describes the data D ==D X ,D I using a Bayesian Score, which is derived from the posterior probability of the model. According to Bayes rule, we know thatwhere P(P) is the prior of the model, P(D|P) is the likelihood of the model given the data. Thus, we can define a score Score(P : D) = logP(P)P(D|P). Note that we are ignoring the normalization constant, since it depends only on the data and thus does not change the relative score of different models. The score must fulfill two major requirements. First, it must be decomposable into the two model components, allowing us to calculate the score of one component while the other is fixed, an important attribute for efficient learning. Second, we must ensure model consistency, by a high penalty on inconsistent configurations, such that they will not be chosen during the learning. Under the following two constructions, the Bayesian score satisfies both decomposability and consistency. First, the prior has the following structure:where C(M,I)=1 if M and I describe a consistent configuration, and 0 otherwise. Although this requirement limits the class of priors we can use, it ensures our model is both consistent and enables efficient learning. Second, we require that the likelihood of each component be independent from the other, given the model. That is,This is a reasonable assumption since the gene expression and physical interaction observations are derived from independent sources. If these assumptions are satisfied, the Bayesian score can be further developed for consistent pairs M,I:For inconsistent pairs the score is . The MN score Score(M : D X ) is described by (). Briefly, under several assumptions, it is decomposed to the score of the gene assignment and the score of the network structure, allowing efficient learning of each aspect, while the other is fixed. The new contribution of our work is the Physical Interaction Graph score, Score(I : D I ). This score is constructed from local scores of the individual edges in the graph. We make the simplifying assumption that the observations about edges of the interaction graph are independent of each other, given the underlying interaction network. This assumption is reasonable since the experimental measurement of each pair of edges is independent of the other pairs. Thus, each edge, and the evidence supporting it, contribute to the score independently of other edges in the graph. Formally, we define E to be the set of edges that can appear in I: all undirected edges between two protein nodes, and directed edges from a protein (TF) node to a gene node. (The transcription edge from a gene to its protein is assumed as given.) Let e be a (potential) edge in E, we define I e to be the indicator random variable with value 1 if e is in I and 0 otherwise. The set of variables {I e : e  E} defines uniquely the graph I. We represent the evidence from various interaction screens about an edge e in D I as another indicator random variable d e , such that d e = 1 if e was observed in D I and 0 otherwise. The independence assumption implies thatScore(I :where P(I e) is a prior belief in the edge e, and it can be set to be uniform, or to reflect other external biological knowledge, such as the quality of the experimental assay. and P(d e |I e ) is the probability to observe e given I e. This definition of the score seems to involve all edges in E, which can be a very large number. This would be in contrast to the typical assumption that real interaction graphs are sparse. To avoid this problem, we rewrite the score as Score(I :where Score(I  : D I ) is the score of the empty graph andis the likelihood cost of adding e to the graph. Since Score(I  :is constant, we can ignore it when evaluating different I. The remaining terms involve only the weights of the edges present in I. We note that we choose a uniform prior P(I e ) = 0.001 so as to ensure that W e < 0 for all edges. It means that adding an edge always has a cost, and thus penalizing long pathways. Finally, we choose the probability of the observation function.There is no clear mechanistic argument for a specific function, and for mathematical convenience we choose to use the following functionwhere  = 0.9 is a constant estimated from the data and p e is thePage: i180 i177i185
N.Novershtern et al.
Model optimizationThe MN learning procedure () performs a coordinate-wise greedy optimization (), iterating between two optimization procedures. The first procedure keeps the partition of genes into modules fixed, and improves the score by modifyng the regulatory programs. This involves steps of adding and removing regulators to modules. The second procedure keeps the regulatory program fixed, and improves the score by moving genes from one module to another. Given the properties of the Bayesian score, each procedure can be implemented as a greedy hill-climbing search with local operations that can be evaluated relatively easily. In learning PMNs, we maintain the same overall architecture, with an important distinction: at the same time that a change in M is evaluated, we also need to change I to maintain consistency, and determine what is the score of these changes. Thus, each local step in the MN learning procedure is accompanied by a step on the Physical Interaction Graph, and the impact of the proposed step on the score is the sum of these two components. Specifically, when adding an edge from a regulator R to a module M in M, we must ensure that there is a consistent regulatory path. If there is none, then we consider the addition of proteinDNA edges that will introduce at least one such path. If after such inclusion there is still no path, the step will not be taken. Recall that a regulatory path is a single path from the regulator to a transcription factor, and then branches into edges from the transcription factor to each of the genes in the module. Considering each transcription factor T seperately, the procedure searches for the heaviest path (using the weights W e defined above) from R to T using the Bellman Ford algorithm (). (Since all the weights are negative, finding the heaviest path is equivalent to finding the shortest path by BellmanFord.) It then evaluates the cost of edges from the TF to the genes in M. The total score for T is the sum of these two terms. The transcription factor T that maximizes the score is chosen, and the associated edges are added to I. When removing an edge from R to M, we may remove some edges in I. The algorithm examines edges on the path from R to M, and then considers which ones can be removed, while still maintaining consistency of all other regulatory paths. This is done with all edges until no more edges can be removed. When reassigning a gene from one module to another, a set of TF to gene edges has to be removed and others added. These depend on the regulatory paths choosen for each module. Thus, the resulting procedure is essentially isomorphic to the MN procedure except for the additional book-keeping for maintaining changes to I that accompany each change in M. The initialization of the procedure is with an initial clustering of genes, and the procedure stops upon convergence.
EVALUATION WITH SYNTHETIC DATAWe first compared the performance of PMN on synthetic data to that of a standard MNs model, examining its robustness to noise and comparing its precision and recall in recovering regulatory interactions. We reasoned that in this comparison we can most directly evaluate the specific impact of the additional information (physical data) and constraints (e.g. consistency) in a PMN.We generated a synthetic network over 312 genes, partitioned to 7 modules that are regulated by 10 genes (out of the 312 genes). The conditional probability distributions (CPDs) are taken from a Bayesian network test case (). We sampled physical interaction observations from a set of real interactions (), covering 43% of the original network. The distributions of node degrees and of edge weights were similar to that of the original network. We built the synthetic Physical Interaction Graph by choosing 7 TF proteins as the 'true' TFs, and finding pathways that connect them to the regulators. (Data available online at http://www.compbio.cs.huji.ac.il/PMN/.) We evaluated the models by three criteria: (i) the likelihood of a previously unseen set of gene expression samples (test set); (ii) the ability to choose the correct regulators for each gene (reconstruction); and (iii) the PMN's ability to reconstruct the correct regulation pathway by counting all the interactions that were selected for the model (this criteria is not applicable for MN). The latter two criteria were measured by recall (where we normalize the entries to sum to 1. We find that the likelihood of a test set given the learned PMN is almost identical to the likelihood given the MN (), indicating that both models have similar predictive power. Thus, the additional constraints in a PMN (by consistency requirements) do not compromise its predictive power. While both models have good recall, the PMN has substantially higher precision. Recall ranges between 80% and 100%, when learning with a sufficient number of modules. The PMN, however, chooses fewer false regulatory relations than the MN, resulting in a higher precision (). This is likely due to the additional constraints on the choice of regulators in a PMN, which must be supported by both expression and physical interactions. Notably, when smoothness is introduced to the expression data, the performance of MN and PMN is similar in terms of test set likelihood, recall and precision (data not shown). With strong smoothing the observation values are nearly uniformly distributed, and the MN recall is higher compared to the PMN (data not shown). In this case, the train score is so low, that the addition of the physical interaction score prevents the algorithm from adding regulators, even if they are correct. Conversely, when the smoothing is lower, the PMN outperforms the MN in precision (). We next examined the contribution of proteinprotein interactions and proteinDNA interactions to the correctness of the reconstructed pathways. First, introducing noise to the proteinprotein interaction observations (by adding random edges, weighted by the average weight of edges in the interaction set), had little, if any, effect on the PMN's ability to correctly reconstruct regulatortarget relationshipsPage: i181 i177i185
Physical Module Networks(a) (and pathways. Second, increasing the number of proteinDNA interactions from the true TFs to their true modules, had a negligible effect on the accuracy of regulatortarget relationships, but dramatically improved the accuracy of the reconstructed pathways (), emphasizing the importance of the TF choice in the model.
A MAP OF THE YEAST RESPONSE TO GENE PERTURBATIONSWe next assessed the biological accuracy and insights in real data, addressing two capabilities of the PMN approach. First, we considered the reconstruction of correct regulation pathways, between known modules and their known regulators, as determined by gene perturbation in yeast (). Second, we assessed the biological performance of a full learning of PMN from yeast cell cycle expression data (), a relatively well characterized system which enables us to estimate the biological relevance of the inferred model. In both cases, we collected observations for proteinprotein and proteinDNA interactions from multiple sources (), generating a dataset of 18.1K proteinprotein and 90.6K protein DNA interactions over 5640 proteins. To avoid spurious overrepresentation of highly connected ('hub') proteins in reconstructed pathways (as they connect most protein pairs in the network in the most efficient way), we determined the confidence in each edge (P-value) according to the degree of the adjacent nodes in the observed network, such that edges that involve highly connected proteins are penalized. In addition, the P-value prefers edges that are supported by more than a single line of evidence. Formally, the P-value of an edge e with degree x of its heaviest adjacent node, was set to be:2+e 0.2x+5 +0.2C where C = 0 when the edge is supported by two or more lines of evidence, or C = 1 otherwise. Unobserved edges were associated with a constant P-value which is higher than any observed edge. (See http://www.compbio.cs.huji.ac.il/PMN/ for additional information.) To evaluate the ability of PMN to reconstruct regulation pathways, we used a test case in which the regulators and the modules are known. We used a set of expression profiles measured following single-gene knockouts () and knockdowns (). We defined each perturbed gene as a regulator, the genes that were significantly repressed as one target module, and those that were significantly induced as another target module. The threshold for significance was defined as more than a 2-fold increase or decrease, and one set () was further filtered using a significance threshold presented in the original paper (P < 0.01). We removed small target modules (less than 5 genes), resulting in a set of 827 regulator-module pairs, for 446 distinct regulators. We used the interaction data as described above. For each of the 827 regulator-module pairs we reconstructed the most probable (primary) regulation pathway that starts with the regulator and ends with a TF that binds some of the target genes. For example, consider the simple pathway that was reconstructed from NDD1 (), a component of the MCM1/NDD1/FKH transcription factor complex that activates G2/M transition genes (). The pathway correctly reconstructs the connection of NDD1 to FKH2, which in turn has evidence for binding 28% of the 60 target genes. We successfully reconstructed 660 primary pathways with an average length of 2.6 edges, including 48 pathways of size zero (directly from a perturbed TF to its targets). On average, the selected TFs had evidence for binding 20% of genes per target module. We failed to reconstruct pathways for the remaining 167 pairs, where the observed physical interactions did not have paths from the regulator proteins to a TF. Long-term gene perturbation can cause drastic changes in the cell, and may thus affect the target genes in more than one way. To search for secondary effects, we removed the edges in the primary pathway, and repeated the pathway reconstruction procedure. For example, after removing the (trivial) primary pathway from SWI4 () to its targets genes (39% of the genes that were repressed after its perturbation are bound by SWI4), we detected a secondary pathway from SWI4 to FKH2 gene, which in turn binds 12% of the altered genes. To statistically assess the reconstructed pathways we estimated their score's P-value empirically, by randomization of the input interactions. We used an edge-swapping algorithm () to generate 50 randomized observation networks that maintain the node degrees of the original network, and then learned pathways for the same 827 regulator-module pairs using each of the 50 networks. We then assessed the significance of each pathway learned with the real network, based on the frequency of observing a path with that score or higher in the randomized networks. We found that 99 primary pathways and 6 secondary pathways were significantin the text. Proteins were manually annotated with the following categories: Metal-ion transport (grey), cell-cycle (green), protein biosynthesis (light blue), amino-acid metabolism (purple), stress (pink), sugar metabolism (orange), mating (yellow) or other (white). (aj) Pathways that are discussed in the text.
i181
N.Novershtern et al.These significant reconstructed pathways span a spectrum of cellular processes, including cell-cycle, mating, stress response, protein biosynthesis, amino-acid metabolism and metal ion transport (). To biologically interpret them, we annotated each pathway member according to the process in which it participates, and each target module with its enriched GO process terms (Fisher's exact test, corrected with FDR 5%). We then inspected the functional relevance of each pathway and its terminal TF to the module and regulator with which it was associated. There are 6 coherent mating pathways, each consists of known members of the pheromone response, and ends with STE12, the pheromone response TF (). Three start with STE18, STE5 and STE7, and end with repressed modules enriched for pheromone response genes, a fourth starts with DIG1, a STE12 repressor (), and indeed ends with an induced module enriched for pheromone response genes. These provide a proof of concept. We detected 10 coherent cell-cycle pathways, of which 5 are meiosis pathways that end with UME6, a TF that regulates both induction and repression of early meiotic genes (). Two of the pathways () start with an ISW2 knockout, a member of the ISWI chromatin remodeling complex, which is known to be recruited by UME6 (). Another pathway starts from a GPA2 knockout (), a G-protein that is coupled with the carbon sensor GPR1, through the early meiosis activators IME2 and IME1, to UME6, which binds a target module enriched for sporulation genes. This is consistent with induction of sporulation during carbon (and nitrogen) starvation. Some of the reconstructed meiosis pathways lead to novel hypotheses. Most notably, the secondary pathway from SIN3 (), a histone deacetylase component involved in meiosis regulation, which is connected to its target module through STB4. STB4 is a zinc-finger with an unknown function that interacts with SIN3 in a 2-hybrid assay (), and binds 6% of the genes in the target module. We hypothesize that STB4 plays a role in induction of early meiosis genes. Several pathways reflect the cellular response to stress following gene perturbations, and the coupling between reduction of cell growth (through repression of ribosomal functions) and changes to carbon metabolism during stress. Twelve pathways lead to ribosomal protein (RP) gene modules (), ending with the known RP activators FHL1 or RAP1. Interesting exceptions are two pathways that start with the knockout of GCR1, a transcriptional activator of glycolysis genes (): in the primary pathway GCR1 binds RAP1 leading to repression of both carbohydrate catabolism genes [known to be regulated by RAP1 and GCR1 (and RP genes. In the secondary pathway GCR1 binds GCR2, a known co-activator, which binds 19 of the repressed genes, including), indcued in G1 & S, is enriched for DNA replication and telomerase maintenance genes, and is regulated by ACM1 and SWI4. Right-all other pathways reconstructed. Modules (rectangles) are colored according to their peak activity phase, and proteins are colored according to the phase in which they are known to play a role. reflect a 'real' transduction of a regulatory signal, although their intiation (perturbed gene) and endpoint (the TF GCN4) are correct. Indeed, when GCN4 is removed, other, more relevant pathways may be revealed, for example in the case of RTG1 (). Despite these limitations, we concluded that PMN can recover known coherent pathways in the correct context, as well as reveal novel potential mechanisms.
Physical Module Networks
RECONSTRUCTING A YEAST CELL CYCLE NETWORKWe assessed the reconstruction of a full PMNmodules, regulators and pathwaysusing the yeast cell cycle, a well-studied system that facilitates careful evaluation. We used expression profiles measured at 50 time points during 2 cell cycles from yeast cultures synchronized with -factor (). We focused on the 594 top cyclic genes as defined in the original publication (PNM5 posterior > 0.999), 68 of which have a known regulatory role in cell cycle (by GO), and were designated as candidate regulators for the model to choose from. We augmented the physical interactions described above with proteinDNA interactions measured specifically during the yeast cell cycle (). The inferred network consists of 36 modules of average size 17.5 genes (19.7 genes), 11 with a single regulator and 4 with two regulators, with regulation paths of average length of 2.5. Nine modules peak at G1 or G1/S (right, pink or pink-yellow), of which one is enriched for cytokinesis genes (module #43), two for mitosis genes (#5, #44), and four for DNA replication genes (#36, #39, #44, #48). For example, module 36 (left) is regulated by SWI4, via SWI6 and MBP1, which binds 59% of the module genes, consistent with the known role of the SBF (SWI4-SWI6) and MBF (SWI6-MBP1) complexes in regulating late G1 genes. Module 36 is also regulated by ACM1, an inhibitor of mitosis that is induced during G1/S, via a pathway consisting of (in order) CLN1, SIC1 (both G1/S transition regulators), and CDC14, a phosphatase required for mitotic exit. Although CDC14 does not seem to be directly connected to G1/S regulation, it is known to interact with SWI6-MBP1 complex that binds the module genes (). Six modules peak at S and four at G2/M (, blue). For example, Module 33, enriched for mitosis genes, is active throughout S and G2/M, and is regulated by FKH1, a key TF of G2/M genes, which binds directly to 46% of the module genes. In another example, Module 45 (Figs 1a and b, 5 right) is regulated by MOB1, an essential component of the mitotic exit network, through a pathway that consist of (in order) CDC28, the catalytic subunit of the main cell cycle CDK, and FKH2, a major G2/M TF, which binds 43% of the module genes. The module genes are also enriched for binding of NDD1, an FKH2 transcriptional co-activator (). In some notable exceptions, biologically 'incoherent' regulators are chosen by the PMN. For instance, Module 13 (right) peaks in S phase, is highly enriched for histones, and is regulated by ESP1 and HSL1, mitosis and budding regulators. This may reflect the fact that in some cases, induction of a regulator's mRNA precedes the time of its protein's activity (). While the choice of regulator in the MN is based solely of the expression pattern, the physical interactions in the PMN may be able to reduce the number of such false cases. Conversely, the selected TF is coherent with the target module in all cases where the TF binds more than one gene per module: MBP1 is chosen as the TF of 4 G1 and S modules; FKH1 for two S and G2/M modules; FKH2 for two G2/M modules; MCM1, a major cell cycle transcription and DNA replication regulator, for a G1 module; and HCM1, a transcription regulator of S phase genes, for two G1 and S modules. Besides FKH1, the TFs are not chosen as the regulators themselves (at the beginning of a pathway), because their own mRNA expression profiles do not correlate with their protein activity: some are induced in a different phase, and others do not show a cyclic pattern at all. Yet, the PMN correctly associated them with their target modules.
PATHWAY RECONSTRUCTION OF HUMANFLU INTERACTIONSInfection of human cells with the H1N1 influenza virus results in substantial changes in the cells' transcription profile. A recent study () measured these changes in human primary bronchial epithelial cells at 10 time point along 18 h following infection with wild type virus, attenuated virus, viral RNA or i183
N.Novershtern et al.(identify the potential mechanisms that lead from the viral proteins to changes in expression. This presents a special challenge, since the human physical network is much larger than in yeast, and is still poorly covered (). We used 12 gene modules that were pre-defined (), and reconstructed the pathways from 10 viral genes to each cluster. We used human proteinprotein and proteinDNA interactions collected from multiple published sources (), and human-viral protein interactions from the original paper. To reduce noise, we included only 32 TFs whose targets were enriched (Fisher's Exact Test, FDR 5%) in at least one cluster. We ran the pathway reconstruction procedure six times, removing in each round the TF that was selected in the previous round, to reconstruct multiple secondary pathways. The first three rounds, selected only general TFs (TAF1, CREB1, NRF1 and SP1) for each of the 12 modules. Specific pathways emerged only after we removed these general factors. One intriguing example is the pathway that connects the viral polymerase subunits NP and PB2 to the human TF Interferon Regulatory Factor 2 (IRF2) (), a known regulator of interferon-dependent gene expression, which binds 16 out of 57 genes in cluster #2, which is induced by interferon. The initial study identified a novel role for the viral polymerase in perturbing host signaling (), but its relation to the transcriptional program and mode of action remained unknown. Our PMN analysis suggests that the polymerase subunits act through a pathway that includes apoptotic proteins TRAF1, API1 and p53, and impact interferon-dependent gene expression, thus raising testable mechanistic hypotheses. Other interesting pathways () connect the NA and HA viral proteins to three clusters. All three pathways consist of (in order) CREBP, VCAF, MLL and CREBBP, but end in three different TFs: NFKB1 that binds cluster #7 (5 out of 60 genes, induced only in presence of whole virus), E2F1 that binds cluster #5 (5 out of 55 genes, induced by virus or viral RNA) and the interferon-dependent factor IRF1 that binds cluster #4 (23 out of 139 genes, induced by interferon alone), all major regulators in host response pathways. This suggests a novel role and mechanism for additional viral proteins in modulating the host transcriptional response.
DISCUSSIONHere, we presented PMNs, a probabilistic graphical method that learns transcriptional networks by combining phenotypic effects (changes in gene expression) with their underlying physical mechanism (proteinprotein and proteinDNA interactions). We evaluated the model by comparing to a simple MN on synthetic data, and by reconstructing coherent pathways and regulation in yeast and human data. A PMN builds and subtantially extends on MNs, a special case of a Bayesian network that is defined over a set of gene modules rather than single genes (). The main drawback of a simple MN is that each regulator is chosen solely based on its expression pattern, limiting its ability to distinguish between true regulators and false positives. The PMN addresses this limitation by presenting additional constraints on the choice of regulators, requiring a physical pathway that connects it to some of the target genes. Indeed, as we have shown on synthetic data, the added physical interactions increase the model's precision without compromising recall. Furthermore, the PMN presents a new hypothesis for the regulation mechanism. We showed that it can determine coherent pathways and regulatory mechanisms that connect genetic perturbations to target genes (in yeast and human data), as well as coherent modules, regulators and pathways in the yeast cell-cycle system. Notably, adding physical interactions also carries disadvantages, especially when interaction data are very partial and noisy. PMN may miss a true regulator if a full regulation path is missing (hurting recall), the reconstructed pathways are sensitive to noise in the interaction measurements, and certain types of interactions (protein modifications, chromatin occupancy, cellular localization), as well as alternative splicing, are not modeled in the simple interaction graph. Nevertheless, PMN's success in several realistic cases, in yeast and human, suggest that it provides an important advance toward reconstructing models of regulatory circuits in eukaryotic cells.
LEARNING A PMN Given input data, our goal is to find the configuration of the modelmodules, regulators and regulation pathsthat best i178 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Page: i179 i177i185
P-value of e. That is, if the edge is not in the graph we assume that the probability to observe it in the data is its P-value. If the edge is in the graph, the probability to observe it has an exponential distribution which is dependent on its P-value. Note that under these assumptions, an edge which is not observed in the data may still be included in the graph, associated with a low prior probability. i179 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
glycolysis genes. Coupling between RP gene regulation and sugar metabolism is also observed following perturbation of the splicing factor PRP39 (Fig. 4i), proposing a new molecular pathway. Finally, 14 pathways reflect protein biosynthesis and amino acid metabolism, ending with GCN4, a major TF activator of amino acid metabolism genes. The pathways control 10 modules, both repressed and induced, that are enriched for amino acid metabolism genes. While statistically significant, these pathways likely reflect mostly indirect effects on amino acid metabolism by many of the genetic perturbations in the study, a fact noted in the original study (Hughes et al., 2000). In such cases, the reconstructed pathways may not i182 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
i184 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
