Motivation: High-throughput experimental techniques have produced a large amount of proteinâ€“protein interaction (PPI) data. The study of PPI networks, such as comparative analysis, shall benefit the understanding of life process and diseases at the molecular level. One way of comparative analysis is to align PPI networks to identify conserved or species-specific subnetwork motifs. A few methods have been developed for global PPI network alignment, but it still remains challenging in terms of both accuracy and efficiency. Results: This paper presents a novel global network alignment algorithm , denoted as HubAlign, that makes use of both network topology and sequence homology information, based upon the observation that topologically important proteins in a PPI network usually are much more conserved and thus, more likely to be aligned. HubAlign uses a minimum-degree heuristic algorithm to estimate the topological and functional importance of a protein from the global network topology information. Then HubAlign aligns topologically important proteins first and gradually extends the alignment to the whole network. Extensive tests indicate that HubAlign greatly outperforms several popular methods in terms of both accuracy and efficiency, especially in detecting functionally similar proteins. Availability: HubAlign is available freely for non-commercial purposes at
INTRODUCTIONHigh-throughput experimental techniques such as yeast-twohybrid () and protein co-immunoprecipitation () have produced a large amount of proteinprotein interaction (PPI) data for several organisms such as Homo sapiens () and Saccharomyces cerevisiae (). PPI networks contain a significant amount of information about modular organization of cells and protein functions. Comparative analysis such as alignment of PPI networks can help identify evolutionarily conserved pathways/complexes that may be structurally or functionally important and species-specific pathways/complexes, and infer protein functions. Similar to sequence alignment, we can also align PPI networks either locally or globally. Local network alignment (LNA) such as NetworkBlast (), Mawish () and AlignNemo () aims to find small isomorphic subnetworks corresponding to pathways and protein complexes () and thus may yield a many-to-many mapping between the proteins. These methods search for conserved subnetworks using an alignment graph, in which nodes correspond to groups of orthologous proteins and edges to conserved interactions. These methods mainly differ in building alignment graphs, the definition of dense clusters and search algorithms. Different from LNA, global network alignment (GNA) aims to maximize the overall match between the input networks. Such methods such as IsoRank (,b), Mawish, MI-GRAAL (), GHOST (), PISwap () and NETAL () are designed for pairwise alignment while others such as NetworkBlast, Graemlin 2.0 and IsoRankN for multiple alignment. In addition to network topology information, all network alignment algorithms excluding NETAL and MAGNA () make use of sequence similarity to help improve alignment accuracy. IsoRank aligns two PPI networks by exploiting the observation that two proteins are good match if their interacting partners can match well. IsoRankN is an extension of IsoRank and mainly for multiple network alignment. It applies IsoRank to compute the alignment score between each pair of networks, and then employs a PageRank-Nibble algorithm to cluster all the proteins by their alignment score (). Graemlin2.0 integrates network topology and phylogeny information and uses a hill-climbing algorithm to generate alignments (). MI-GRAAL, an improved version of GRAAL, integrates network topology information such as graphlet signature and sequence similarity to align two nodes (). GHOST uses graph spectrum to measure the topological similarity of proteins (). Both MI-GRAAL and GHOST use a seedand-extend strategy to build an alignment. MI-GRAAL fulfills this by solving a weighted bipartite matching, while GHOST by solving a quadratic problem. PISwap refines an alignment generated by other tools such as IsoRank. It iteratively swaps the edges in an alignment until reaching an optimum (). MAGNA uses a genetic algorithm to search for the best alignment (Saraph and Milenkovic,Milenkovic, 2013). NETAL aligns two proteins based upon their interacting partners. Current global network alignment methods have two major issues. One is that existing algorithms run slowly, especially in aligning very large PPI networks. The other is that the alignment accuracy is still low. This motivates us to develop a new method for global network alignment to significantly improve both alignment accuracy and computational efficiency. This paper presents a novel global network alignment algorithm, denoted as HubAlign, to align two PPI networks using both network topology and sequence homology information, based upon the observation that topologically and functionally *To whom correspondence should be addressed.  The Author 2014. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com important proteins (such as hubs and bottlenecks) in a PPI network are more conserved and thus, shall be aligned. We use a minimum-degree heuristic method to estimate the relative importance of one protein from the global network topology information. Such a score reflects the topological and functional importance of one protein in a PPI network. Then, we use a greedy algorithm to align two proteins based upon the combination of their importance scores and sequence similarity. That is, we align more important proteins first and then gradually less important. Such a procedure is more biologically meaningful and leads to a much faster and more accurate alignment algorithm. We have tested HubAlign on both prokaryotic and eukaryotic PPI networks, showing that HubAlign greatly outperforms several popular methods such as IsoRank, MI-GRAAL, GHOST and PISwap in terms of both alignment accuracy and running time.
METHODSMain idea. A biological network usually contains some topologically and functionally important proteins such as hubs and bottlenecks. Hub proteins have many connections, may be involved in various biological modules and play a central role in all biological processes. In Han's work (), proteins with more than five interactions are defined as hubs, while those with fewer interactions are peripheral nodes. Bottlenecks refer to those proteins with a high betweenness centrality (i.e., the number of shortest paths passing through a node) (). These proteins usually connect functional clusters, so removing them can divide a PPI network into several subnetworks and disrupt the cooperation between functional modules (). Because hubs and bottlenecks are topologically and functionally important, they tend to mutate more slowly and thus, are more conserved. That is, they are more likely to be aligned. To make use of this observation, we assign a score or weight to each node and edge of a PPI network using an iterative minimum-degree heuristics algorithm, measuring the topological and functional importance of a node (i.e., the likelihood of being a hub or bottleneck) and an edge in the PPI network with respect to the global network topology. Such an importance score reflects the global topological property of a protein. Then we calculate an alignment score for a pair of proteins using two properties: their relative importance scores (i.e., global topological property) and sequence information. Meanwhile, the global topological property is the most important and informative. Finally, we construct a global network alignment by picking those protein pairs with high alignment scores using a greedy method. Definition. We represent a proteinprotein interaction (PPI) network by an undirected graph G= V; E   where V is the set of vertices (proteins) and E the set of edges (interactions). Let N u denote the neighbors of a node u 2 V and jNuj is the size of Nu. Let degu denote the degree of vertex u, i.e. deg u  =Nu. Each edge e=u; v 2 E may be associated with a score indicating the interaction strength. A global alignment of two networks G 1 =V 1 ; E 1  and G 2 =V 2 ; E 2  is a function g= V 1 ! V 2 that maps node set V 1 to V 2. Without loss of generality, we assume jV 1 j jV 2 j where jVj is the number of vertices in set V.Computing the topological and functional importance of proteins. We calculate the relative importance of a node or edge based upon only the network topology information of a PPI network. Such a relative importance shows the role of a node or edge in maintaining network structure or function (). Although high-degree nodes play an important role in maintaining the structure and function of a network (), we do not simply use the degree of one node to calculate its relative importance, as the degree is only a local property. We want a global topological property reflecting the structure of the entire network. We do not use existing measures such as edge-betweenness () either, which defines the number of the shortest paths going through an edge in a network. That is, edgebetweenness takes into consideration only the shortest paths in a graph. Nevertheless, for the robustness of a network the longer alternative paths are also important (). In addition, it is also observed that (i) edges connecting high-degree nodes are more important, as they connect many nodes and may be relevant to the global structure property of the network (H., 2006); and (ii) a pair of two nodes with a large number of common neighbors are more likely to be related (). Here we use a minimum-degree heuristics algorithm to calculate the topological importance of nodes and edges, starting from the nodes with degree one and stopping at those with degree d. The value of d cannot be very large, as the deletion of very highdegree nodes (e.g. hubs) may destroy the whole network functionally or structurally while random deletion of a fraction of peripheral nodes may cause only a small damage to the network (). Empirically d=10 yields a good result. To calculate the relative importance of nodes, we assign an initial weight to nodes and edges as follows.w e  = 1 e2 E 0 otherwise ; w u  =0 8u 2 V (Where we and w u   represent the weight of edge e and node u, respectively. We may initialize the edge weight by the PPI confidence score if it is available in the PPI data. We update the weight by always removing one of the nodes with minimum degree. When one node is removed, its adjacent edges are also removed and the weight of the removed node and edges are allocated to their neighboring nodes and edges. In this way, the topological information is propagated from a node to its neighbors. In particular, when removing node u 2 V, we update the weights as follows.(1) If deg u  =1, 8v 2 Nu, set w v  =w v  +w u  +w u; v  .(shows for a small example PPI network how an edge gains more weight after the removal of some peripheral nodes. For example, when nodes d; c; e and f are removed, their own weight and those of their adjacent edges are transferred to the edge a; b, which indicates that this edge is important in maintaining the network connectivity. After calculating the weights, i439HubAlign we assign an importance score as follows to each node by combining both node and edge weight to indicate its topological importance in the network.Where Sv is the score of node v, controls the importance of the edge weight relative to the node weight. Empirically =0:2 yields a biologically more meaningful alignment. Finally, we normalize Sv as follows to reduce the impact of network size.The way we calculate the relative importance of nodes and edges is inspired by graph tree-decomposition, which is used to simplify a graph as a tree in which each vertex represents a highly connected subgraph component and each edge represents the intersection between two adjacent components. The size of the highly connected components reflects the topological complexity of a graph and also importance of nodes. Several simple heuristics methods such as the minimum-degree heuristic method (;) are developed to tree-decompose a general graph. Remark. To validate that the resultant importance score (i.e., S) makes biological sense, we examine the top 50 proteins with the highest S scores in the human PPI network. Meanwhile, all the top 10 proteins have a very high degree, which indicates they are vital hubs of the network. The two example proteins are P62993 with degree 663 and Q9H0R8 with degree 491. Seefor the subnetwork containing P62993. On the other hand, among the top 50 proteins there are also some low-degree proteins, such as Q9UPN3 with degree 7. As shown in, although Q9UPN3 is not a hub, it is a bottleneck connecting several functional modules. This protein is also related to breast cancer disease (). Another interesting example is P04156 with degree 52 and betweenness 0.005. As shown in, this protein is a hub connecting several other hubs. Removal of this protein can disrupt the cooperation of the hubs connecting to it. Building alignment. The normalized S score measures the relative importance of one protein with respect to the whole PPI network. It reflects the global topological properties of one protein in a network. If two nodes have similar S scores, they may be similarly important in their respective networks. Thus, they are more likely to be aligned. We calculate the topological similarity between two nodes u 2 V 1 and v 2 V 2 as follows:A u; v  =minS u  ; S v   We also incorporate sequence homology information (i.e., sequence similarity) into our alignment score. Let B u; v   denote the normalized BLAST bitscore for two proteins u and v. The final alignment score is defined as follows.Where 0 1 is a parameter that controls the contribution of sequence similarity relative to topological similarity. Meanwhile, =1 implies that only topological information is used, while =0 implies that only sequence information is used. Tuning allows us to find the relative importance of sequence information in aligning the networks. In our implementation, we set to 0.7 by default. That is, our method uses much more network topology information than sequence information. Our algorithm identifies the pair of nodes with the highest alignment score as a seed alignment and gradually extends it using a greedy algorithm. After aligning a pair of nodes u and v, we then consider aligning their neighbors, which is reasonable because functional modules and protein complexes are densely connected and tend to be separated from other subnetwork modules. Algorithm continues to align neighboring nodes until their alignment score is relatively high (more than the average of the alignment scores). When the subnetwork alignment resulting from the initial seed is terminated, the next best unaligned pair is chosen as a new seed. This procedure is repeated until all proteins of the smaller network are aligned with the proteins of the larger network. Time complexity. Let n=max jV 1 j; jV 2 j f g. At the first step, it takes On to find the node with minimum degree. As we mentioned before, we only remove the nodes with degree less than 10. Thus, updating the weight of the neighbors can be done in O1. Further, as we can remove up to n nodes from a network, the total time complexity for the first step is On 2 . At the second step, we calculate the alignment score for each pair of nodes of the input networks. Because there are at most n 2 pair nodes, this step takes On 2 . At the final step, a seed can be selected in On 2 . Then for extension, we use a priority queue to save theof the graph has at most n neighbors, updating the priority queue takes Onlogn. Extracting the pair with highest score from this queue can be done in constant time. That is, the final step for aligning n nodes takes On 2 logn. As such, the total time complexity is On 2 logn.
RESULTSWe compare our algorithm HubAlign with several popular and publicly available global network alignment methods IsoRank (,b), MI-GRAAL (), GHOST () and PISwap (). Following, we use the alignment produced by GRAAL and IsoRank as input of PISwap. We do not compare HubAlign with Graemlin 2.0 (), because the latter requires the knowledge of phylogenetic relationship among species. We do not compare HubAlign with GRAAL because MI-GRAAL is an improved version of GRAAL. Following Kuchaiev's work (), we evaluate network alignment quality by five measures including edge correctness (EC), largest common connected subgraph (LCCS), symmetric substructure score (S 3 ), functional consistency (FC) and average of functional similarity (AFS). Meanwhile, EC, LCCS and S 3 reflect network topological similarity of an alignment, but not biological significance. FC and AFS reflect biological significance by measuring the consistency of the GO (gene ontology) terms assigned to the aligned proteins. FC and AFS shall be more important metrics than EC, LCCS and S 3. The alignment accuracy of two PPI networks depends not only on the evolutionary distance of two respective species, but also on the quality of the PPI data. That is, the closer the two species are or the higher quality the PPIs are, the better alignment we may obtain. Edge correctness (EC). It is calculated as the percentage of edges in the first network that are aligned to edges in the second network. Here we assume the first network is smaller than the second one. Let V 1 ; E 1  and V 2 ; E 2  denote two networks under alignment where V and E denote nodes and edges, respectively and g : V 1 ! V 2 be an alignment. Mathematically, EC is defined as follows.Symmetric substructure score (S 3 ). The intuition underlying S 3 is to penalize the alignments that map sparse regions of the network to denser ones and vise-versa (Saraph and Milenkovic,Milenkovic, 2013). Let GV denote the induced subnetwork of G with node set V and EG denote the edge set ofLargest common connected subgraph (LCCS). It is calculated as the number of edges in the largest connected subgraph in an alignment. Larger and denser subgraphs give more insight into common topology of the network (). In addition, the larger and denser subgraphs may be more biologically important (), as Bader and Spirin have shown that a dense PPI subnetwork may correspond to a vital protein complex (). Functional consistency (FC). We use GO (gene ontology) terms to measure the functional consistency of two aligned proteins. GO terms describe some biological properties of a protein such as Cellular Component (CC), Molecular Function (MF) and Biological Process (BP). We exclude root GO terms from the analysis. Proteins with similar GO terms are supposed to be functionally similar. To analyze the biological significance of an alignment, we calculate the fraction of aligned proteins sharing common GO terms. The fraction is calculated with respect to the size of the smaller network because in a global alignment all nodes of smaller network are aligned to nodes of larger network. The larger the fraction, the more biologically meaningful the alignment is. Average of functional similarity (AFS). It is calculated based on the semantic similarity of the GO terms, which depends on the distance between them in the ontology. We can use semantic similarity measures to calculate the functional similarity in each category of BP, MF and CC. Schlicker's similarity, based on the Resnik ontological similarity, is one of the best performing methods for computing the functional similarity between proteins (). Let s c u; v denote the GO functional similarity of proteins u and v in category c (i.e., BP, MF or CC). AFS is defined as follows.
Alignment of the yeast and human PPI networksWe apply our algorithm HubAlign to align the yeast and human PPI networks, which are taken from IntAct (). The yeast PPI network has 5673 nodes and 49 830 edges and the human network consists of 9002 nodes and 34 935 edges. We ran IsoRank and PISwap with the default parameters. MI-GRAAl was run using the degree, signature similarity and sequence similarity. The parameters for GHOST are automatically determined or set to default. As shown in, our algorithm HubAlign produces an alignment with much larger EC, LCCS and S 3 than the otherWe also apply HubAlign to align PPI networks of H.sapiens (human), S.cerevisiae (yeast), Drosophila melanogaster (fly), Caenorhabditis elegans (worm) and Mus musculus (mouse). All these networks are obtained from IntAct ().lists the AFS of all the pairwise alignments generated by five different methods: HubAlign, IsoRank, PISwap, MIGRAAL and GHOST. The humanyeast alignment is already analyzed in the preceding section, so it is not included here.shows that the alignments produced by HubAlign outperform those by the other methods in term of AFS under all three categories BP, MF and CC. HubAlign also produces alignments with higher FC than all the other methods (see Supplementary). Specifically, the more common GO terms required to determine FC, the more advantage HubAlign has over the other methods. For example, if only one shared GO term is required, HubAlign greatly outperforms the second best method GHOST for five of nine alignments (i.e., humanfly, flyyeast, mouseworm, mousefly andmouseyeast) and slightly outperforms GHOST for the remaining four alignments. If at least two shared GO terms are used to determine FC, HubAlign greatly outperforms GHOST for all the alignments. Moreover, HubAlign produces alignments with larger EC, LCCS and S 3 than the others except NETAL (see Supplementary). The NETAL alignments again have very low FC and AFS. These results indicate that HubAlign is able to align more functionally similar proteins and find larger complexes that are significant either topologically or biologically.
Alignment of bacterial PPI networksWe also apply HubAlign to align the PPI networks of two bacterial species Campylobacter jejuni and Escherichia coli, which have the most complete PPI networks among all bacteria. The PPI network for Bacterium C.jejuni has 1111 nodes and 2988 edges (). Escherichia coli is a model organism for studying the fundamental cellular processes such as gene expression and signaling. The E.coli PPI network has 1941 nodes and 3989 edges (Peregr n). As shown in, HubAlign produces an alignment with larger EC, LCCS and S 3 than the other methods except NETAL. In terms of AFS, HubAlign outperforms the other methods although all the AFS values are pretty small due to insufficient GO annotations of the bacterial proteins. The average number of GO terms associated with the proteins of E.coli and C.jejuni is much smaller than that of the other species. In addition, HubAlign produces alignments with larger FC (see Supplementary).
Evaluation of parameters andOur algorithm makes use of two parameters and. determines the relative importance of edge and node weight, while determines the relative importance of sequence and topological similarity. In this section, we study the relationship between these two parameters and network alignment quality. We apply HubAlign to PPI networks of yeast and human and report EC, LCCS, S 3 and AFS of their alignment for different values of parameter between 0 and 1. As shown in, AFS increases as gets close to 1. The underlying reason could be that the higher values of give more importance to the edge weights which in turn, makes the proteins with important interactions align together. On the other hand, by increasing the value of , we put less emphasis on the node weight and therefore, it is less likely that the hubs be aligned together. As a result, the topological qualities (i.e. EC, LCCS and S 3 ) decrease.shows that increasing from 0 to 0.2 improves the AFS significantly but does not change the EC much. However, as we continue to increase further, the EC decreases sharply. We also observe a slight increase in the biological quality. There are similar plots for the S 3 and the LCCS (see the Supplementary). Thus, we can achieve a good trade-off between the topological and the biological quality by setting in the range (0.1, 0.2). We also compute the yeasthuman alignment for different values of. As shown in, increasing from 0 to 1 decreases AFS. This is because a larger value of reduces the effect of sequence information. Moreover, in line with our expectations as goes up, so does the topological quality of the alignment.shows that increasing from 0 to 0.7 does not change AFS much but improves the EC significantly. However, as we continue to increase further, the AFS decreases sharply. There are similar plots for the S 3 and the LCCS (see the Supplementary). Thus, we can achieve a good trade-off between the topological and the biological quality by setting in the range (0.7, 1).
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
