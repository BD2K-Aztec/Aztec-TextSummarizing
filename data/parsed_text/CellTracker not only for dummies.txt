Motivation: Time-lapse experiments play a key role in studying the dynamic behavior of cells. Single-cell tracking is one of the fundamental tools for such analyses. The vast majority of the recently introduced cell tracking methods are limited to fluorescently labeled cells. An equally important limitation is that most software cannot be effectively used by biologists without reasonable expertise in image processing. Here we present CellTracker, a user-friendly open-source software tool for tracking cells imaged with various imaging modalities, including fluorescent, phase contrast and differential interference contrast (DIC) techniques. Availability and implementation: CellTracker is written in MATLAB (The MathWorks, Inc., USA). It works with Windows, Macintosh and UNIX-based systems. Source code and graphical user interface (GUI) are freely available at: http://celltracker.website/.
IntroductionThe migration analysis of in vitro cultured cell populations plays a key role in a wide range of dynamic cell behavior studies (). In the last decade, dozens of methods have been proposed for such analyses (). There is no universally best, but a great variety of methods exist for different fluorescent microscopic scenarios (). However, very few tracking tools can analyze images taken by phase contrast, DIC, or other label-free microscopy (i.e. techniques using transmitted light or its modulations), which are common ways to observe living cells. Furthermore, the majority of these tools require relevant image processing skills, which strongly limits their practical usefulness within the biologist community (). For instance, BioImageXD (), TimeLapseAnalyzer () and TACTICS () require segmented cells for tracking, and cell segmentation on label-free microscopic images is very challenging. Accordingly, so-called point-and-click manual tracking tools are often used () and they are considered as the gold standard for cell tracking (). Nevertheless, manual tracking is operator-dependent, laborious and error-prone (). An automated, user-friendly, and versatile open source software with track editing possibilities would boost live cell analysis research. In this work we present CellTracker, a cellcenter detection and tracking tool for different imaging modalities. An early version of CellTracker was already used in (). Here we describe its implementation and usage (Supplementary Material S1) with the intention of providing a tool also for users with limited image processing background.
MethodsThe GUI of CellTracker () is designed to intuitively support users during the analysis. Several functions are included in order to pre-process images (tiff, avi and Bioformats files are supported), track cells, edit and analyze tracks. Microscopes are imperfect systems both in terms of optics and mechanics. Any microscopic image has a certain degree of uneven illumination (), which may affect cell tracking algorithms (). Furthermore, during time-lapse acquisition, spatial misalignments can occur due to stage imperfections. CellTracker is capable of correcting such imperfections. Three different tracking modalities are available and can be combined. Fully automatic tracking is a combination of template matching and a tracking algorithm (). Using semiautomatic tracking, the user selects the cells to be tracked. The algorithm defines a specific template for each selected cell and searches for best match on the consecutive frames. An adaptive template method is used to handle slight cellular deformations over time. The manual tracking option provides a point-and-click solution, wherein the user defines the position of the cell either on each frame or on key frames. In the latter case, intermediate cellular positions are determined by using a novel dynamic programming method described in Section 2.1. For the semiautomatic and manual tracking, histogram or template matching search algorithms may be chosen to determine the position of selected cells on consecutive frames. Several additional functions enable the user to merge, delete, move, display, save and load the tracks (). A great variety of measurements at singlecell and population level are available ().
A track refinement approach for manual tracking based on dynamic programmingTypically, manual tracking tools allow the user to define the position of the individual cell simply by clicking every kth frame. In case k > 1, missing positions are usually determined by linear interpolation. Besides this approach, we present a new solution to find the globally optimal track between key frames. A globally optimal track maximizes the match between the template of the shape (cell) of interest and the image, while large, unrealistic jumps are restricted. This global optimization problem can be solved very efficiently using dynamic programming approach () by building a directed graph over all possible tracks. Dynamic programming methods solve a complex problem by breaking it into a collection of simpler sub-problems. In brief, we search the optimal path between the nth and mth frames such that we recursively find optimal paths for every position at frame m-1 and select the most optimal amongst these. The method is described in Supplementary Material S2.
ResultsA qualitative comparison of CellTracker with relevant tracking tools is shown in Supplementary Material S3. Furthermore, we quantitatively compared six different settings of CellTracker (details in Supplementary Material S4) by using three different datasets (fluorescence, DIC and phase contrast images, Supplementary Material S5). We only tracked cells that are present in the first frame, and excluded those touching image borders (ground truth is provided in Supplementary Material 6).summarizes the obtained results (Supplementary Material S7). We used three metrics for this comparison (Supplementary Material S8). Relative root mean squared error, normalized to the cell size (rRMSE), Jaccard similarity coefficient (JSC,) and overall processing time. Automatic tracking was considerably precise (average rRMSE 0.28), but it required the most time for post-processing of the detected tracks. Automatic tracking might be the best choice for applications where the detection of cells is relatively easy. Semiautomatic tracking was the fastest modality and represents a good trade-off between cell detection and tracking accuracy. As expected the most accurate solution was manual tracking. The best solution was obtained by manual tracking combined with template matching (rRMSE 0.22, JSC 0.99). In conclusion, CellTracker is a versatile tool able to track cells and other objects (Supplementary Material S9) in different scenarios. Combining accuracy and usability, it is an easy-to-use and efficient solution especially for users with limited expertise in image processing.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
F.Piccinini et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
