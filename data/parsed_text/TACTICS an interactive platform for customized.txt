We describe a modular MATLAB Ã• Toolbox named TACTICS for time-lapse image analysis that meets several requirements not generally offered by currently available software packages: (i) the ability to assess quality of extracted imaging information by directly linking data end points to the original position, (ii) massively parallel analysis of each parameter, for flow cytometry-like assessment of possible relationships between parameters within sub-populations of the images, (iii) options for user control of the tracking such as an interface to restrict the analysis region, (iv) manual correction of automated processes and (v) user interfaces for post-tracking analysis that is linked to the original images, including options to view cell pedigrees and normalized polarization ratios based on fluores-cence ratiometric measurements. Availability and implementation: We provide TACTICS source code as well as video tutorials, data sample and comprehensive user guide on the TACTICS toolbox website (http://www.tactics-toolbox.com).
INTRODUCTIONThe past decade has seen dramatically increased use of time-lapse microscopy to address how cells communicate and respond to external signals. Owing to the volume and complexity of output from time-lapse imaging, biologists require a simple yet high-throughput platform with which to extract meaningful data. Herein, we present a generic platform for High Content Analysis (HCA) that is straightforward yet multi-featured and highly adaptable by MATLAB developers. TACTICS is structured from several collaborative modules that can be interactively used for extraction, inspection and presentation of timelapse imaging data. This simplifies the analysis scheme, allowing unfamiliar users to use the program intuitively. Each TACTICS module enables user-friendly visualization of the original, filtered and segmented images with optional display of cell index, trajectories and proximity vectors between cells in different channels. The TACTICS graphical user interface is characterized by selection tools and interactive slider-bars () that simplify the optimization of settings for image processing. Information about the image-processing procedures and the experimental information is collected and stored. Some aspects of the application of TACTICS to analyse migrating lymphocytes have been illustrated recently (), and further features are described below.Where visual inspection indicates errors in the automated segmentation or tracking, an interface for manual correction is available. False detections can be removed with a mouse click using the Cell Tracking Module. Poorly segmented cells can be either improved or discarded. Developers can easily incorporate other tracking algorithms for other types of migration patterns, or cell parameters as presented recently (). Options for manual correction of the tracks include rejection of invalid track points, definition of a new track point, track splitting (following a cell division) and track flipping. Finally, all tracks can be filtered out by optional parameters such as velocity and length. Massively parallel analysis. Quantitative information about morphological and geometric descriptors of each cell is extracted and logged. Next, the Measurements Module enables visualization and data exploration to quantify the spatiotemporal history of a specific cell, record data on population basis and quantify properties such as asymmetry of fluorescence. TACTICS can analyse multi-spectral images of multiple labelled cells, enabling quantification of intracellular protein localization by combining one channel for segmentation and tracking, a second channel for alignment and a third channel to quantify the protein of interest. Once defined, a customized list of cell features such as morphology, cell migration, fluorescence ratiometric coefficients and protein localization is automatically generated and saved to a selected folder in the multiple-position batch mode to create data libraries. The list is adaptable, and developers can easily add other features by requirement (). Importantly, these parameters can be displayed and compared on a cell-by-cell basis, and the data can be 'gated' on the basis of individual parameters to determine correlations between different parameters as demonstrated previously (). The Measurements Module allows the combined quantification and visualization from multiple channels, such as the ability to track interactions between cells in different channels. Applications include the generation of lineage trees to track cellular behaviours over many generations, and traceable descriptors of immune cell velocity with direction of movement and proximity to other interacting cells. Each module in TACTICS can be re-called repeatedly for each position by using the Robust Module to automate the extraction of multi-parameter information from many simultaneously imaged individual cells on a population basis. Thus, TACTICS provides high-throughput automation with minimum human intervention, with the capacity to refer back to the original images throughout the process. In summary, TACTICS provides both ease of use for biologists with limited software expertise, as well as the flexibility for developers to incorporate additional bioinformatic processes for cell segmentation and cell tracking.
IMPLEMENTATIONTACTICS source code is distributed under the BSD Licence. TACTICS can be installed as a MATLAB app or by unpacking a compressed file to the desired folder. It requires at least MATLAB 7.6 (R2008a) with the presence of Image Processing  and Statistics  Toolboxes. Several shared third-party functions are used within the main TACTICS folder, and need be additionally installed. All these files are located in separate open-code subfolders, with proper acknowledgements to its contributors including direct links to the original files.
FEATURES Organization. To set up the experiment, the user inputs a set of tiff images into an experiment generator tool for preliminary inspection. Experimental folders are then created on the basis of position or optical section (for confocal microscopy). Up to six parametric image sequencesx, y, z, time, multi-channel (different fluorescent wavelengths) and multiple positionscan be processed in batch mode with a button click. This approach has been recently used to analyse immune cells confined in microfabricated microwells during long-term time-lapse observations (Pham et al., 2013). Additionally, the segmentation module offers an interface for customized filters to improve the quality of the original raw files, such as denoising and contrast enhancement. An interactive pop-up menu enables automated segmentation, including generation of virtual channels. Similar to other interactive approaches such as 'ICY' (de Chaumont et al., 2012), chained image processing enables the user to efficiently explore different combinations of filtering and arithmetic operations. The user can export and import different combinations of processing settings for high throughput analysis, and the applied settings are logged on a frame-by-frame basis. Current segmentation methods use the Otsu MATLAB built-in function, Kmeans and Level Set Evolution (Li et al., 2010). The most frequently used cell-separation approaches to separate touching cells (intensity splitting algorithm and watershed) can be applied with a single mouse click on the region defining the joined cells. Alternative automated cell-segmentation approaches can be easily incorporated in addition to more morphological and arithmetic operations. Manual correction. Objects within the binary images are identified and labelled as individual cells. A default tracking algorithm that assumes random migration is automatically applied. To track dividing cells, an algorithm associates the two daughter cells based on the cell trajectories and the point of cell division. *To whom correspondence should be addressed. y The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
R.Shimoni et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
