Markov state models (MSMs) for the study of biomolecule folding simulations have emerged as a powerful tool for computational study of folding dynamics. MSMExplorer is a visualization application purpose-built to visualize these MSMs with an aim to increase the efficacy and reach of MSM science.
INTRODUCTIONIn kinetics-based Markov state models (MSMs) for biomolecule folding simulations, conformation space is partitioned according to natural free-energy barriers, avoiding problematic clustering approximations (). Since their introduction in 2009, programs for generating these models have seen substantial interest and use (). Current visualization tools for MSMs are essentially manual, inhibiting visual analysis of MSMs and slowing down figure production for publications. Indeed, it has become clear that visualization is now a key bottleneck in the use of MSMs to understand kinetic phenomena of interest. MSMExplorer is an application to address this visualization bottleneck. Specifically, MSMExplorer has three primary aims:(1) To provide a tool for efficient visual analysis of MSMs.(2) To streamline the production of publication-ready figures for common MSM network visualization types.(3) To synthesize disparate MSM research tools into a single intuitive graphical interface.
IMPLEMENTATION AND CAPABILITIESOverview: MSMExplorer is a network visualization application custom-built to visualize MSMs for folding research. The application is built in Java 6 using Swing GUI widgets and makes extensive use of the prefuse visualization toolkit (). The application is organized around a central window, termed GraphView, containing a visualization of the currently loaded MSM, with associated panels used for displaying settings and additional information. File format support: MSMExplorer has been designed to operate in concert with MSMBuilder (https://simtk.org/home/ msmbuilder). As such, MSMExplorer can open raw MSMBuilder output. Additionally, because MSMBuilder projects have a relatively predictable structure, MSMExplorer is able to make educated guesses about the location of additional data. To provide interoperability with other network visualization applications and bundled graph output, MSMExplorer also supports opening and saving files in the GraphML format. Automatic graph drawing: MSMExplorer makes use of a forcedirected layout algorithm for automatic graph drawing, wherein edges act as springs and nodes as masses (). In this scheme, the system will generally settle into a local energy minimum, which corresponds to an approximation of a maximally spaced graph within constraints of edge equilibrium length. Simulation parameters can be set by the user. The layout may also be disabled to allow nodes to be placed manually. Additionally, the visibility of nodes may be filtered based on backing data. Flexible data-based visual encoding variables: In MSMExplorer, many visual encoding variablesnode size, color and shape; edge color and weightare adjustable. In first order, the user may set each of these properties individually for aesthetic control. Moreover, each of these variables may be set to vary with data provided by the user (see example in). On opening an MSM, MSMExplorer stores node numbers, equilibrium probabilities and transition probabilities, but additional data can be supplied in newline-delimited (for nodes) or matrix (for edges) files; thus, any data imported may be used to vary visual encoding variables. Scatter plots: MSMExplorer provides facilities to position nodes along 2D axes to generate a scatter plot. Any node data (including user-supplied, as described earlier in the text) may be used for the axes. Axis labels and gridline spacing are fully adjustable. To allow for standard scatter plot production, graph edges may be temporarily hidden.provides an example of a scatter plot layout.Users can easily switch between levels of the hierarchy or overlay models in the same hierarchy atop one another to indicate the membership of the states of a more detailed model in the states of a more coarse-grained model. A custom graphdrawing algorithm is applied to group nodes in the same macrostate together. Seefor an example hierarchical visualization. Transition path theory: Transition path theory (TPT) is a theoretical framework deployed in biomolecule research to explore folding pathways, in particular those pathways of highest reactive flux between conformations (E and). In MSMExplorer, the user selects start and end nodes, and a graph depicting the n highest reactive flux pathswhere n is set by the useris automatically generated. Reactive flux through nodes and edges is indicated by node size and edge weight, respectively. Reactive fluxes are saved into the graph backing data and can thus be saved out or used in GraphView to adjust any visual encoding variable. MSMExplorer's implementation of TPT algorithms uses Apache Commons Math matrix facilities and includes an implementation of Dijkstra's algorithm to select highest flux paths after generating a matrix containing reactive fluxes (). Image export: As a means to save and share visualizations, MSMExplorer allows export of vector files in SVG format, aswell as export of several raster image file formats. The image can be resized on export. Support for provided images: MSMExplorer allows users to specify the location of a folder containing images corresponding to nodes. These images may be displayed on top of nodes (see example in), where they will intelligently rescale with node size, or they are displayed in another window. PyMol integration: PyMol is a tool for 3D visualization of molecular structures (Schrodinger LLC). On computers with PyMol installed, users may specify a folder containing PDB files. MSMExplorer can then launch PyMol with the PDB file corresponding to the selected node.
ComparisonNetwork visualization tools, such as Cytoscape and Gephi, have the most in common with MSMExplorer (). Both have much more general aims than those of MSMExplorer; thus, they do not provide MSMExplorer's tools specific to biomolecule folding research, including built-in TPT support, PyMol integration, MSM hierarchy support and MSMBuilder integration. Additionally, MSMExplorer is substantially lighter-weight than Gephi or Cytoscape and does away with many features in those programs that would likely be 'cruft' to folding researchers, resulting in a gentler learning curve. Still, MSMExplorer supports full interoperability with these programs via the GraphML format if their interfaces or particular abilities are desired.
CONCLUSIONA visualization tool for MSMs for biomolecule folding simulations, called MSMExplorer, has been developed for the purpose of increasing the efficacy of doing folding science with MSMs. The program is currently being used for visual analysis and visualization production for publications in the Pande Lab. Active development will continue to refine MSMExplorer to further achieve its primary aim of advancing folding simulation research.
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
MSMExplorer at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
B.Cronkite-Ratcliff and V.Pande at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
