The Insight Toolkit offers plenty of features for multidimensional image analysis. Current implementations, however, often suffer either from a lack of flexibility due to hard-coded Cþþ pipelines for a certain task or by slow execution times, e.g. caused by inefficient implementations or multiple read/write operations for separate filter execution. We present an XML-based wrapper application for the Insight Toolkit that combines the performance of a pure Cþþ implementation with an easy-to-use graphical setup of dynamic image analysis pipelines. Created XML pipelines can be interpreted and executed by XPIWIT in console mode either locally or on large clusters. We successfully applied the software tool for the automated analysis of terabyte-scale, time-resolved 3D image data of zebrafish embryos. Availability and implementation: XPIWIT is implemented in Cþþ using the Insight Toolkit and the Qt SDK. It has been successfully compiled and tested under Windows and Unix-based systems. Software and documentation are distributed under Apache 2.0 license and are publicly available for download at https://bitbucket.org/jstegmaier/xpiwit/downloads/.
IntroductionAutomated analysis of large-scale multidimensional image data has become an integral part of current biological research. Particularly, 3D imaging techniques like confocal, light-sheet or electron microscopy easily produce terabytes of image data that cannot be assessed manually (). Although many comprehensive and user-friendly graphical user interfaces (GUIs) for the automation of image analysis problems have been presented in the past, their applicability to terabyte-scale data remains limited (). On the other hand, tools that are usable for large-scale analyses are mostly single-purpose command-line tools with a substantial lack of flexibility. The Insight Toolkit (ITK), for instance, often serves as a basis for such specialized highperformance implementations, as it offers plenty of features for multidimensional image analysis and has an active community in the biomedical field that constantly improves and extents the functionality of ITK (). However, many available solutions based on ITK require advanced programming skills, are limited to a certain task due to specialized C pipelines or suffer from slow execution times, e.g. caused by multiple I/O operations for separate filter execution or inefficient implementations. To overcome these limitations, we developed XPIWIT, an XML-based wrapper application for ITK that allows a graphical setup and rapid prototyping of image analysis pipelines while preserving the performance of a pure C implementation (Supplementary). Created XML pipelines can directly be used to interface XPIWIT on large clusters, and the current version of XPIWIT already incorporates about 70 different filters, including I/O filters, preprocessing filters, edge detectors, morphological operators and segmentation filters (Supplementary). We also integrated our recently published algorithm for the efficient segmentation of fluorescently labeled cellular nuclei as an exemplary pipeline (XPIWIT can be constantly extended with new functionality, we created template files that facilitate the implementation of new filters for XPIWIT. Filters that are already implemented as image-to-image filters in ITK can be added to XPIWIT in a matter of minutes and are instantly accessible via the XML interface. Because of the flexible design, literally any additional C code can be encapsulated as an XPIWIT filter, as long as the input and output images are appropriately casted to ITK-internal types. The platform-independent opensource software tool was successfully applied to automatically analyze multiple terabytes of time-resolved 3D microscopy image data in embryomics using a Hadoop cluster (, Supplementary Section S2).
Methods
XML pipeline interfaceA general concept of automated image processing, which is also inherent to ITK, is the arrangement of processing operators in a feedforward pipeline structure. We specifically developed an XMLbased pipeline format that allows to create flexible image analysis pipelines using a variety of different processing filters (Supplementary Listing S1). Each of the specified filters has a set of inputs that either point to files on disk or the output data of a preceding filter. In addition to image inputs and outputs, XPIWIT also has an internal metadata handling system that can be used to share meta-information such as extracted object locations or image statistics between processing operators. The optimal execution order of the individual processing operators is internally determined by XPIWIT and ensures that the requested image and meta-inputs are available as soon as a processing operator is executed and that memory is released as soon as the data is not needed anymore. The XML structure allows to adjust all available parameters of each filter using key-value pairs. The XML pipelines are decoupled from the I/O parameters, which facilitates sharing customized pipelines with other users and additionally allows to use a single XML pipeline to process multiple images.
Data generationTo apply a predefined XML processing pipeline to a desired set of images, XPIWIT has to be executed from the command prompt with command line input arguments. Alternatively, a configuration text file can be piped to the executable (Supplementary Listing S2). This configuration file needs to contain the output path, one or more input paths, the path to the XML file to be processed and may be customized using further optional parameters as described in the online documentation. This concept allows to heavily parallelize the data processing, e.g. using distributed computing environments such as Apache Hadoop, where one XPIWIT configuration file is generated per image and all jobs are distributed among available processing nodes. In addition to the image output, metadata generated by one of XPIWIT's processing operators is saved. The used CSV format (Comma Separated Value) is able to store large tables in a text file where each column is separated by a specific character (e.g. ',' or ';') and each row by a line break. Many powerful data analysis tools (e.g. Excel, MATLAB, Gait-CAD, SPSS, Knime and RapidMiner) provide functionality to import such CSV files and therefore allow to explore the generated data in detail. All data formats used by XPIWIT are either simple text files or common data formats. This allows third party software to easily automate the creation of input files, to interpret the generated data and to embed XPIWIT into existing image processing pipelines.
GUI for rapid prototypingWe developed an easy-to-use GUI that allows to create and modify XML pipelines based on the filters compiled into the XPIWIT executable. The GUI is entirely decoupled from the command-line tool and offers a more convenient environment for rapid prototyping and parameter optimization than directly adjusting the XML text files. In, the basic layout of the GUI is depicted. Filters can be placed via drag and drop from the filter list (1) to the pipeline drawing area (2). All parameters are adjustable by selecting the respective filter in the drawing area and by setting the parameters in the parameter customization panel (3). Once the input and output parameters (4) are defined, the pipelines can be used to process the specified data and may be saved and re-opened using the menu bar (5).
Implementation detailsXPIWIT is implemented in C using ITK (http://www.itk.org) and the Qt SDK (http://www.qt-project.org). Platform-independent project files have been realized using the CMake build tool (http:// www.cmake.org). Both XPIWIT and the associated GUI have been successfully compiled and tested under Windows, Linux and Mac OS X. The software is licensed under Apache 2.0, and we host a public repository that encompasses source code, example pipelines and a detailed documentation on https://bitbucket.org/jstegmaier/ xpiwit/downloads/. To encourage non-programmers to use the software for their image analysis tasks, precompiled binaries for the three major operating systems are hosted in the repository as well.
ConclusionsXPIWIT is a new command-line tool based on ITK that combines the performance of a native C application with the ability to create filter pipelines at runtime using a specialized XML format. The functionality is completed with an interactive GUI that simplifies rapid prototyping, parameter optimization and the generation of XML pipelines. XPIWIT is explicitly not meant to replace any of the general purpose GUIs that exist for biomedical imaging but aims at filling the niche of an easy-to-use and flexible tool that is highly efficient, lightweight and platform independent. Both XPIWIT and the GUI open up a wide area of possible biomedical applications. Exemplary screenshot of the XPIWIT GUI on Windows. The main control elements of the GUI are the filter list (1), the pipeline drawing area (2), the parameter adjustment panel (3), the input/output definition panel used for pipeline test runs (4) and controls for saving, loading and executing pipelines (5). Generated pipelines are independent from the GUI, e.g. to perform largescale analyses on computing clusters ranging from automated analyses of 2D image data on single workstations to large-scale analyses of multidimensional image data on high performance computing clusters. We successfully applied the presented software solution to segment and visualize terabytescale 3Dt light-sheet microscopy images of developing embryos. Further work will be put on a shared library-based plugin system to simplify adding new filters to XPIWIT and to combine a stepby-step execution with result previewing for interactive parameter optimization. Moreover, we will try to identify possibilities to integrate XPIWIT with widespread tools like Fiji, ICY or KNIME ().
FundingThis work was supported by the Helmholtz Association in the Program BioInterfaces and by the German Research Foundation DFG (grant no. MI 1315/4).
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
A.Bartschat et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
