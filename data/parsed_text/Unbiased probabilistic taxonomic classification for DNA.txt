Motivation: When targeted to a barcoding region, high-throughput sequencing can be used to identify species or operational taxonomical units from environmental samples, and thus to study the diversity and structure of species communities. Although there are many methods which provide confidence scores for assigning taxonomic affiliations, it is not straightforward to translate these values to unbiased probabilities. We present a probabilistic method for taxonomical classification (PROTAX) of DNA sequences. Given a pre-defined taxonomical tree structure that is partially populated by reference sequences, PROTAX decomposes the probability of one to the set of all possible outcomes. PROTAX accounts for species that are present in the taxonomy but that do not have reference sequences, the possibility of unknown taxonomical units, as well as mislabeled reference sequences. PROTAX is based on a statistical multinomial regression model, and it can utilize any kind of sequence similarity measures or the outputs of other classifiers as predictors. Results: We demonstrate the performance of PROTAX by using as predictors the output from BLAST, the phylogenetic classification software TIPP, and the RDP classifier. We show that PROTAX improves the predictions of the baseline implementations of TIPP and RDP classifiers, and that it is able to combine complementary information provided by BLAST and TIPP, resulting in accurate and unbiased classifications even with very challenging cases such as 50% mislabeling of reference sequences. Availability and implementation: Perl/R implementation of PROTAX is available at
IntroductionDNA barcoding has gained much interest in recent years, the Barcode of Life project () being the most widespread endeavour in this field. The great promise of barcoding approaches is that in principle any organism can be identified from a tissue (or other biological) sample. To be effective and practical, barcoding genes should have sufficient variation between species, but limited variation within species, to provide the necessary signal for species-level identification. Commonly used barcoding genes include COI in animals, ITS in fungi, and rbcL as well as matK in plants (). Barcoding approaches are particularly powerful when combined with next-generation sequencing (NGS) methods, which can be used to produce massive amounts of sequence data from environmental samples (). That way, entire species communities can be profiled for taxonomic affiliations. Two contrasting, although not mutually exclusive approaches have been applied to analyze the environmental sequence data. First, a number of approaches have focused on classifying samples into operational taxonomic units (OTUs), which can be done in the absence of a well-resolved taxonomy and reference sequence database. The OTU approach is especially prevalent in studies on bacteria and other micro-organisms (). The complementary problem, which we address here, and which underlies the Barcode of Life project, is the case where a sequence reference database and an established taxonomy are available. Here the problem lies in classifying the environmental sequences with respect to an existing taxonomy. In popular software packages like MOTHUR () and QIIME (), it is possible to carry out both the clustering and the taxonomic classification. Several methods exist for assigning taxonomic labels to sequence data. MEGAN () classifies sequences according to the lowest common ancestor (LCA) node of BLAST hits. BLAST is also used in MetaPhlAn (). There are fast alternatives for BLAST, e.g. LAST () which is based on suffix array and used in Taxator-tk (). PhymmBL () is based on the combination of BLAST and interpolated Markov models and mOTU () utilizes hidden Markov models (). Another set of tools uses methods from phylogenetics, e.g. TIPP () is based on a phylogenetic placement algorithm. The commonly used RDP classifier () is based on navenave Bayes classifier (NBC) which uses the 8-mer decomposition of a sequence. MyTaxa () allows the use of multiple markers simultaneously and Kraken () and CLARK () can utilize full-length genome sequences. Existing classification methods give good results if the target classes are well represented with adequate training data (), but it has remained difficult to account for taxonomic units without reference sequences (). Another typical practical problem is the presence of mislabeled training data, which the present methods to our knowledge fail to properly account for. With any method of sequence classification, a central question concerns the reliability of the classification. To move from sequence similarity to a more objective measure of the reliability of species identification, it is desirable to estimate the set of probabilities by which the query sequence represents the possible candidate species or higher taxonomical units. In our past work (), we developed a statistical model that estimates the probability by which the best matching reference sequence (for instance, based on a BLAST search) represents the true species. In this paper, we develop our previous approach into a general tool for probabilistic taxonomic classification, called PROTAX. PROTAX utilizes a reference sequence database and a taxonomic tree structure to estimate the probability with which an environmental sample can be placed in a given taxon. Outcomes of the classification include not only the species for which reference sequences are available, but also species for which no reference sequences are available, as well as speciesor higher taxonomic unitsthat are not known to science in the sense that they are missing from the taxonomy. PROTAX accounts for the possibility that some of the reference sequences are mislabeled, a complication often present with real data. PROTAX is based on a Bayesian multinomial regression model and it can use as predictors any kind of covariates, in particular any kind of sequence similarity measures. In this paper, we present the general statistical framework and illustrate the use of PROTAX in the context of classifying amplicon sequencing data based on covariates generated by BLAST sequence similarity and the TIPP and RDP classifiers, as well as a combination of BLAST and TIPP. We illustrate with simulated data that PROTAX is able to perform taxonomical classification in an accurate and unbiased manner. In particular, we show how PROTAX can improve the classification accuracies of TIPP and RDP classifiers and remove the bias that they in some cases have for the estimates of classification uncertainty. We then apply PROTAX to a fungal case study, illustrating the relevance and generality of the results obtained for simulated data.
MethodsConcerning the overall workflow of the PROTAX pipeline shown in, the input files consist of the sequence data to be identified, the taxonomy against which the sequence data are to be identified, and the reference sequence database that populates at least part of the taxonomy. The output file is the classification of the sequence data, in the fullest version the vector of probabilities of all possible outcomes for each query sequence. The taxonomy is viewed as a tree structure in which the leaves correspond to species, and the other nodes to higher taxonomical levels such as genera and families. The taxonomy represents the set of known species and their assumed phylogenetic relationships, and it includes also those species for which no reference sequences are available. PROTAX accounts for the possibility of missing taxonomical levels, i.e. that some branches of the tree may be missing at any of the levels, due to not-yet-discovered taxonomical units. The reference sequence data are associated to leaves or higher-level nodes of the taxonomy, depending whether they have been identified to the specieslevel or say, the genus-level only. PROTAX estimates the fraction of the reference sequences that are mislabeled, and accounts for it when performing classifications. This is relevant, as the mislabeling rate can be high in some species groups. For example, in fungi it is estimated to be more than 10%, e.g. due to the fruit body from which the sample is derived being misidentified, the sample being contaminated, or other such problems ().
Modeling the probability of placement to a given taxonomical levelThe aim of PROTAX is to partition the probability of species identity to all logical outcomes that can be derived from the taxonomical. Flowchart of PROTAX pipeline. PROTAX combines information of user-defined predictors which can be sequence similarities e.g. based on BLAST, or outputs of existing classifiers such as TIPP or NBC tree: species present in the taxonomy (with or without reference sequences), unknown species belonging to one of the levels of the taxonomy (e.g. an unknown species belonging to a known genus, or an unknown species belonging to an unknown genus that belongs to a known family). The collection of all these cases forms the set of outcomes, for each of which PROTAX estimates a probability, in such a way that the probabilities sum to one. If the query sequence can be classified with high certainty, one of these probabilities will be close to one. If there remains a high level of uncertainty, even the highest probability may be close to zero. The algorithm works in a hierarchical manner from the root of the tree towards the leaves. As illustrated in, at any given node z, the task is to decompose the probability assigned to that node to the known branches and the possible unknown branches. The number of missing branches is unknown in reality. We denote the expectation for the number of missing branches under the node z by u z. Expert knowledge about which parts of the taxonomy are likely to be more complete than others can be used to estimate u z. In the absence of such information, we may simply set u z  1 for all nodes, as we do in the rest of this paper. We denote the levels of the nodes by l  1; 2;. .. ; L, so that for example the levels l  1, 2, 3 could correspond to family, genera and species, respectively. Assume that the node z at level l has n z known branches. Conditional on the query sequence belonging to the node z, we aim to decompose the unit probability into 1  n z parts, out of which the first one (i  0) corresponds to the possibility that the species belongs to an unknown branch, and the remaining (i  1; 2;. .. ; n z ) parts to the known branches. We denote by Y z the random variable indicating to which of the branches the sequence belongs. We model Y z by the multinomial regression modelHere b z j denotes the regression coefficient associated to predictor j  1;. .. ; m at node z. The matrix X z is the 1  n z   m design matrix which includes m predictors that are used to guide the classification algorithm. In principle any predictors that are informative for the classification purpose can be used. The weights w zi are set to w zi  u z for i  0 and otherwise to w zi  1. While in the more general model the values of the regression coefficients b z j can be node-specific, we make here the simplifying assumption that they are constant within each level, and thus we denote them henceforth by b l j , with j  1;. .. ; m, with l ranging across the levels present in the tree. Thus, the parameters b l j guide the classification from the root level to the lowest taxonomical level present in the taxonomy, and finally the parameters b L j guide the classification from the genus level to the species level. In the more general model also the number m can be node-or level-specific, but here we assume that it is same for all nodes and levels. To account for the possibility that the reference sequences can be misidentified, we denote by I(s) the identity of the true species behind the sequence s, and by I  s the species identity that is assigned to the sequence. For any species identity I, we denote by Y(I) the outcome corresponding to the species identity, so that, e.g. Y  2; 1; 3, stands for family 2, genus 1 within that family and species 3 within that genus. For another example, Y  2; 0; 0 stands for family 2, unknown genus within that family, which implies that also the species within that genus is unknown. Given a query sequence s, the probability that the observed outcome YI  s is the outcome y isHere q is the probability that the training sequence is misidentified and PY  y is the prior probability of the outcome y. The probability P YI  s  yjb; I  s  Is   is given by the product of the multinomial probabilities (Eq. 1) over the relevant levels. We fitted the model to training data (see below) with Bayesian inference, the parameters to be estimated being the level-specific regression coefficients b l j and the mislabeling probability q. We assigned for each of the regression coefficients the essentially uninformative N0; 100 2  prior, and used the same prior also for the logit-transformed probability q. As described in the Supplement, we fitted the model using the Metropolis algorithm, with normally distributed proposal distributions adjusted adaptively during the burn-in.
Model parameterizationAs the first example, denoted by PROTAX(BLAST), we construct the predictors using BLAST sequence similarity, with four predictors (m  4). We set the case of a missing branch as the reference level, and thus the first row (i  0) of the design matrix to (0, 0, 0, 0). The subsequent n z rows of the design matrix model the probability of theunknown +C A B. Visualization of how PROTAX decomposes the probabilities of taxonomic placement among different possibilities. We consider here classification of one level only, e.g. from a given genus to the underlying species. Nodes A, B and C represent three known species of this genus and 'unknown' represents possible unknown species within this genus. We assume that species A and B have reference sequences whereas species C does not have. Classification probabilities are shown for an input sequence as a function of the sequence similarity (value between 0 and 100%) for species A (x-axis) and species B (y-axis). In this example, the design matrix is X  ((0,0,0),(0,1,simA), (0,1,simB), (1,0,0)), where the rows correspond to the nodes 'unknown', A, B and C, respectively, and simA and simB are the sequence similarities between the query and reference sequences. In this numerical example, we have assumed the parameter values b  0:1; 2; 8. In applications, this parameter vector is estimated based on training data (see main text). To simplify the illustration, we have summed here the probabilities of the unknown node and the species C without reference sequences species belonging to each of the known branches. If the branch does not contain any sequence data, the row of the design matrix is set to (1, 0, 0, 0), and thus the regression coefficient b l 1 models the probability (relative to a missing branch) that the species belongs to a node that is included in the taxonomy but for which no reference sequences are available. For branches for which one or more reference sequences are available, the row of the design matrix is set to 0; 1; s 1 ; s 2 , where s 1 and s 2 are respectively the mean and the maximal sequence similarity between the query sequence and a representative subset (see Supplementary Material) of reference sequences under the node. The mean s 1 is first averaged over the sequences for each species, then over the species within each genus, and so on, always averaging over all units for which at least one sequence is available. Thus the regression coefficients b l 2 ; b l 3 and b l 4 model the probability by which the query sequence belongs to a node with reference sequences with a given mean and maximal similarity. The reason for including not only maximal similarity but also mean similarity is that the latter is expected to be more robust to mislabeling error. As the second example, denoted by PROTAX(TIPP), we construct the predictors using the classification provided by TIPP, with three predictors (m  3). In this case the first row (i  0) of the design matrix is (0, 0, 0), and rows for branches not containing sequence data are set to (1, 0, 0). The remaining rows are 0; 1; s 3 , where s 3  logite  1  2ep, where p is the probability predicted by TIPP, logitp  logp=1  p, and we have set the parameter e  0:001 to avoid singular cases related to classifications with p  0 and p  1. Similarly as with PROTAX(TIPP), we also construct the predictors for the output of RDP classifier. As a fourth example, denoted by PROTAX(BLAST  TIPP), we utilize the predictors s 1 , s 2 and s 3 for nodes with reference sequences, thus ending up to a model with five predictors (m  5).
Generation of training dataAs PROTAX aims to estimate the probabilities of all possible outcomes for query sequences derived from environmental data, the training data should be constructed in such a way that they represent the expected species diversity in the environmental data. In the context of Bayesian analysis, information about the expected species diversity can be incorporated as a prior. The prior is constructed by listing all the possible outcomes associated with the taxonomical tree, and giving each outcome a prior probability. Training data can then be generated by first randomizing the desired outcome from the prior, and then generating data that mimic the chosen outcome (see below). The prior that we assume here corresponds to the assumption that it is equally likely that the environmental sequence belongs to any node at each level, including the possibility of an unknown branch. Thus, if the taxonomy involves e.g. two genera in a given family, we assume that conditionally on the species belonging to this family, it belongs to either genera with probability 1/3, and to an unknown genus under this family with the remaining probability 1/3. Applying this algorithm recursively generates prior probabilities for each possible outcome, and these prior probabilities sum to unity. Ideal training data would consist of sequences that would represent all outcomes and that would be independent of the sequences present in the reference database. While such sequences could be generated in a simulation study, they will not be available with real data (e.g. sequences that represent species unknown to science, or sequences that represent known species without reference sequences). Thus, we attempt to mimic ideal training data as closely as possible.Exactly how this is done depends on the nature of the outcome to be mimicked, for which there are the following three possibilities. The outcome is a known species with at least one reference sequence available. In this case ideal training data would be an additional query sequence of that species. If the species has at least two reference sequences, we used a randomly selected sequence as the query sequence, and left the other sequences to the reference database. If the species has only one sequence, it is not possible to generate training data for that particular species, as no reference sequences would remain available after taking the only sequence as the query sequence. In this case we generated training data for another outcome, which is as similar as possible to the originally chosen one, but for which the required data are available. This other outcome is the node which has the smallest taxonomic distance to the original node and which is on the same taxonomic level as the original node. The outcome is a known species with no reference sequences available. In this case ideal training data would be a test sequence for the chosen species. As such data do not exist, we selected another species which had at least one reference sequence and was as related to the original species as possible, following the recursive algorithm described above. We randomly selected one of the reference sequences as the query sequence, and removed all the other reference sequences for that species to mimic the situation where no reference sequences would be available. The outcome is an unknown branch of a given node. In this case ideal training data would be a sequence for a randomly selected species under that node. As such data are not available, we mimicked such a situation as follows: if the node had any branches with sequences, we selected randomly one of those branches, proceeded to a randomly selected species with at least one sequence, and selected randomly one of the sequences as the query sequence. We then removed the entire branch under the node to generate training data mimicking the case of a missing branch. If the originally chosen node had no branches with sequences, we generated training data for another node, which was at the same level as the originally chosen node (e.g. both representing genera) and as related to the original node as possible (in the sense of the recursive algorithm as described above), and which had the required data.
Evaluating the performance of the algorithm with simulated dataWe evaluated the performance of the algorithm with the help of simulated data, including taxonomies, reference sequences and validation sequences. We assumed that the taxonomy consists of two levels, called here genus and species. We thus consider classification within a single family, and assume that in the underlying reality it is split to 10 genera, each of which is split to 10 species, thus yielding 100 species together. We model barcoding sequences by strings consisting of 300 nucleotides (A, C, T or G). We first generated an 'ancestral sequence' to the root level by assigning each nucleotide randomly to one of the four possibilities. We generated a mutated sequence for each genus by assuming that each nucleotide mutates to a random one with probability 1. Similarly, we generated a sequence for each species by mutating each nucleotide of the genuslevel sequence with probability 2. Finally, to generate multiple sequences for each species, we mutated the nucleotides of the specieslevel sequences with probability 3. The first 50 nucleotides were assumed to form a conserved region, and they were thus kept identical for all sequences. We tested the algorithm with eight case studies summarized in Supplementary Table S1. Case 1 was chosen as an easy starting point in which sequence identification should be successful to the species level. In this case, we assume that all species were known to science and thus included in the taxonomy, and that 4 sequences were available for all species, and that none of the sequences were mislabeled. The levels of sequence dissimilarity were set to 1  0:05; 2  0:02; 3  0:01, and thus we assumed larger differences among genera than among species within a genus, and larger differences among species within a genus than among individuals within a species. The remaining cases are derived from Case 1 by changing some of the parameters. In Case 2 we made the classification more difficult by setting 1  2  3  0:01, and thus having only small differences among genera and species. Case 3 is otherwise identical to Case 1, but reference sequences are available only for the fraction P  0.5 of all species. Cases 4 and 5 differ from Case 3 in that we assume that 20% (q  0.2) or 50% (q  0.5) of the sequences are mislabeled, respectively. Case 6 differs from Case 3 in that only 7 out of the 10 genera are assumed to be known to science, and that within each known genus only 7 out of the 10 species are assumed to be known to science. Thus in this case the taxonomy file consists of 49 species while the underlying reality still consists of the full set of 100 species. Case 7 is otherwise as Case 3 but the level of sequence similarity is assumed to vary within the taxonomical tree: when generating the mutations for a given node at level l, we randomized the level of sequence dissimilarity using a uniform distribution in the range 0; 2 l , so that the mean mutation probability is l. The motivation for this case is that while such variation in sequence similarity is present in real taxonomies, the statistical model ignores it. Finally, Case 8 combines the aspects of Case 4 (mislabeled reference sequences), Case 6 (incomplete taxonomy) and Case 7 (heterogeneity in levels of sequence similarity) that are expected to make taxonomic classification difficult in the case of real data. For each of these eight cases, we simulated 5 independent replicates of the taxonomy and the reference database, as well as 100 independent validation sequences, one for each species. We generated training data with 1000 data points for each of the four PROTAX models (BLAST, TIPP, RDP classifier and BLAST  TIPP), and used the MAP (maximum a posterior) parameter estimate for classification. We performed a full classification of the validation sequences by decomposing the probability of one among all possible outcomes of the taxonomic tree. We selected the outcome with the highest probability, and examined if it was the correct one, i.e. if it matched with the species behind the generated validation sequence. We assessed the accuracy and bias of the classifications by plotting the cumulative predicted probabilities against the cumulative number of cases in which the outcome with the highest probability was correct. Concerning a possible bias, if an outcome is assigned e.g. the probability 0.9, it should be correct in 90% of the cases and wrong in 10% of the cases. If in reality the answer would be correct, say in 50% or in 99% of the cases, the assessment of classification reliability is biased. An unbiased classification is accurate if it assigns high probabilities to some outcomes and low to others, while it is not accurate if it assigns equally low probabilities for all outcomes. For example, if the algorithm would return just the prior probabilities, it would be unbiased, but not accurate. While we predicted the probabilities separately for each possible outcome, we pooled some of them before comparing to the true species identity in the validation data. The reason here is that if a genus has several species with no reference sequences, the classification probabilities for these outcomes are necessarily identical. Thus we summed these to obtain a single probability for the outcome being any species within a particular genus with no reference sequences. Further, we added to this prediction the probability of the sequence belonging to an unknown species of that genus, and thus the pooled outcome was 'an unknown species within this genus, or one of the species in this genus without reference sequences'. To compare the performance of the PROTAX models with the baseline implementations of the TIPP and RDP classifiers, we performed sequence classification with these (without the PROTAX extension) and assessed the bias and accuracy in the same way as we did for the PROTAX models.
Singling out mislabeled reference sequencesIn addition to identifying environmental sequences (mimicked above by the validation sequences), the fitted model can be used to single out mislabeled reference sequences by treating the reference sequences as test sequences, and by comparing the probabilities of the outcomes to the species label. While making such predictions, the sequence to be classified is removed from the set of reference sequences to avoid circular results due to the 100% match to itself. We considered a reference sequence as inconsistent if the model predicted a wrong genus with high confidence. To be conservative, we required the probability of the most likely classification to be at least 100 times the probability of the outcome corresponding to the species label. We examined how well this heuristic approach performed by counting the fraction of truly mislabeled sequences that were classified as inconsistent (in the optimal case this would be one), as well as the fraction of correctly labeled sequences that were classified as inconsistent (in the optimal case this would be zero). We did this test for the three PROTAX models as well as the baseline TIPP model.
Case study of Polyporales of FinlandFor the evaluation of the method with real data, we used a database consisting of ITS sequences of all Polyporales (one fungal order) species of Finland available through UNITE (K oljalg et al., 2013). We used a two-level taxonomy consisting of the genus and species levels. Our database involves 265 known species in 75 genera, and 336 ITS sequences that belong to 162 species in 58 genera. Sequence lengths vary between 502 and 972 bp, mean length being 688 bp. In addition to 103 species without any reference sequences, more than half (89/162) of the species with sequence information contained only one reference sequence. We computed pairwise sequence similarities with BLAST, as detailed in the Supplementary Material. Unlike with simulated data, with real data there are no validation sequences for which the species identity would be known with full certainty. Thus, we tested the performance of the fitted model by identifying each of the reference sequences against the database from which the focal sequence was excluded. We then assessed the performance of the model like we did with simulated data, with the assumption that the query sequences were not mislabeled. Thus, our assessments of the model's identification success are likely to be conservative. We compared the performances between TIPP, RDP classifier, and the four versions of PROTAX as with simulated data. In addition, we constructed PROTAX for the full combination where BLAST, TIPP and RDP classifier were used as predictors in the same model.
Unbiased probabilistic taxonomic classification
Results
Simulated dataThe performance of PROTAX against the simulated case studies is shown in. As expected, in Case 1 all algorithms resulted in almost perfect classifications, which are both accurate (cumulative probability close to 100%) and unbiased (the lines depicting the relationship between predicted and true identities fall very close to the identity line). In other words, all algorithms assigned in almost all cases a very high probability to only one of the outcomes, and in almost all cases this outcome was the correct one. Making the test case more challenging decreased the accuracy, and in some cases introduced a bias in the predictions (). The presence of species without reference sequences (Case 3 versus Case 1) as well as the presence of species not included in the taxonomy (Case 6 versus Case 3) made the baseline TIPP algorithm produce conservative estimates of the identification probabilities. The PROTAX extension of TIPP corrected the bias on identification uncertainty, and also improved the accuracy of the identifications. However, the presence of 50% mislabeling (Case 5 versus Case 3) made the predictions of TIPP and RDP classifier overconfident, which bias PROTAX was able to correct for on average () but not within the individual replicates (Supplementary Figs S2 and S4). In contrast, PROTAX(BLAST) provided essentially unbiased estimates for all cases studied here. Interestingly, PROTAX(BLAST) performed better in some cases, whereas PROTAX(TIPP) performed better in other cases. In particular, BLAST was a better predictor in the presence of mislabeling, whereas TIPP was a better predictor in the presence of heterogeneity in sequence similarity. The latter result is to be expected, as the phylogenetic model behind TIPP does not assume that the realized level of mutations is identical among the branches. The fact that BLAST and TIPP carry different kinds of information suggests that together they should perform better than either method in isolation. This was indeed the case: PROTAX(BLAST  TIPP) performed at least equally well as PROTAX(BLAST), PROTAX(TIPP), or the baseline implementation of TIPP in all the cases studied. Quite unexpectedly, even in the very challenging Case 5, where 50% of the reference sequences were mislabeled, PROTAX(BLAST  TIPP) was able to correctly classify 87% of the validation sequences, and its estimates of identification uncertainty were essentially unbiased (). The PROTAX models which included BLAST as a predictor were able to estimate the mislabeling probability with good accuracy in Cases 4 and 8 with q  0.2 as well as in Case 5 with q  0.5 (Supplementary). In contrast, the way in which the statistical model accounts for mislabeling was not compatible with the predictive information provided by TIPP, as e.g. with q  0.5 PROTAX(TIPP) tended to estimate the mislabeling probability either to zero or to one. All models were successful in assessing the great majority of mislabeled sequences as unreliable and the great majority of the correctly labeled sequences as reliable (Supplementary). The combined model PROTAX(BLAST  TIPP) worked the best also in the task of singling out mislabeled reference sequences. Interestingly, PROTAX(TIPP) was almost equally successful as PROTAX(BLAST) in singling out mislabeled reference sequences (Supplementary) in spite of its poor ability to estimate mislabeling probability (Supplementary).
Case study of Polyporales of FinlandResults based on PROTAX, TIPP and RDP classifier are shown in. The conclusions are in concordance with the results from
DiscussionIn this paper, we have introduced PROTAX, a probabilistic method for taxonomical classification. PROTAX converts sequence similarities into unbiased taxon membership probabilities. It takes into account uncertainties of both the taxonomy and the content of the reference sequence database. We have demonstrated its use in the context of fungal ITS amplicon sequencing, but the method is general and can be used with any markers. In addition to DNA sequences, it can be used also for classifying other types of data. We emphasize that PROTAX can include any covariates in the regression model and thus the examples presented in this paper are demonstrations of only some possible choices. Besides using pairwise sequence similarities as a proxy for taxon membership, any node-sequence similarities can be used. As an example of this, we used the node probability from TIPP and RDP classifier as a covariate in PROTAX. Further, we note that the choice of using the maximal and mean sequence similarities in PROTAX(BLAST) is one choice among many possible sets converting sequence similarity into PROTAX predictors. We believe that all higher-level analyses, such as characterization of sample abundance profiles, benefit if the first step of assigning a sequence read into a taxonomic unit is done in a manner that enables reliable assessment of identification uncertainty. PROTAX provides a statistical model that can be used with present classifiers or their combinations. It is not a new classifier per se but it combines the information obtained from user defined covariate sources. An important feature of PROTAX is that it gives unbiased probabilities of taxonomic placement. Furthermore, it explicitly models uncertainty related to missing data and missing branches in the taxonomy which to our knowledge other classifiers do not properly take into account. In the experiments so far we have started with the simple assumption that the set of explanatory variables are the same for all nodes, and that the regression coefficients are specific to the level l only, so that b z j  b lz j , where l(z) is the level to which node z belongs. The results have been satisfactory already with this approach, but to account for sequence similarity variation between taxonomical units at the same level (e.g. between genera), it would be possible to model b z j e.g. as a random effect with a multivariate normal structure. We provide Perl and R scripts for training the models and using them for classification. Both speed and memory consumption depend mainly on the choice of covariate sources. As an example, we have constructed models for a large fungal ITS database with 75 000 reference sequences using a 6-level taxonomy with 130 000 species. For classifying 1000 sequences using a single processor on a standard Linux desktop, it took 40 s to calculate sequence similarities using LAST () and 104 s to perform the taxonomic classification and output all nodes with probabilities above 0.01. Memory consumption was 477 Mb. When classifying large amounts of sequences, speed and memory usage can be improved by pre-clustering the data and applying a naive parallelization of the algorithm.(a) Accuracy and bias of sequence identification by different versions of PROTAX, TIPP and RDP classifier for 336 fungal ITS sequences. For 262 sequences, the best outcome of PROTAX(BLAST  TIPP) was a species with reference sequences. (b) Histogram of best outcome probabilities from PROTAX(BLAST  TIPP)Unbiased probabilistic taxonomic classification
P.Somervuo et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
