Motivation: Biological sequence data is accumulating rapidly, motivating the development of improved high-throughput methods for sequence classification. Results: UBLAST and USEARCH are new algorithms enabling sensitive local and global search of large sequence databases at exceptionally high speeds. They are often orders of magnitude faster than BLAST in practical applications, though sensitivity to distant protein relationships is lower. UCLUST is a new clustering method that exploits USEARCH to assign sequences to clusters. UCLUST offers several advantages over the widely used program CD-HIT, including higher speed, lower memory use, improved sensitivity, clustering at lower identities and classification of much larger datasets. Availability: Binaries are available at no charge for non-commercial use at
INTRODUCTIONBiological sequence data is accumulating more quickly than the growth in computing efficiency predicted by Moore's Law (), which motivates the development of improved highthroughput methods. Computational sequence analysis often begins by classifying sequences by reference to a database or by de novo classification (clustering), which is used to predict homology and function, reduce redundancy, generate subsets that are tractable for more computationally expensive methods, compare data from different environments and quantify ecosystem diversity. Central to most such classification methods is a sequence search algorithm such as BLAST (), which has been widely adopted for its high speed and sensitivity.
METHODSUBLAST and USEARCH are new algorithms for sequence database search that seek high-scoring local and global alignments, respectively. UCLUST is a new clustering algorithm that employs USEARCH as a subroutine to assign sequences to clusters. High-throughput is achieved by using a fast heuristic designed to enable rapid identification of one or a few good hits rather than all homologous sequences. For a given query, database sequences are sorted in order of decreasing number of words in common to exploit the fact that similar sequences tend to have short words in common (see e.g.). When examined in this order (i) if a hit exists in the database, it is likely to be found among the first few candidates, and (ii) the probabilitythat a hit exists falls rapidly as the number of failed attempts increases. A search can therefore often be terminated after examining a small number of candidates without a large cost in sensitivity. Pair-wise sequence comparisons are performed using standard fast alignment techniques, including gapless high-scoring segment pair detection by extending word seeds and banded dynamic programming. More details are provided in the Supplementary Material.
RESULTSI compared UBLAST and USEARCH to NCBI BLAST+ v2.2.22 using Pfam-A v24.0 () and Rfam v9.1 (), two large sequence family databases containing 4.9M protein domains and 192k RNAs, respectively. In each case, 1000 sequences were extracted at random to use as a query and the remainder used as a search database (and Supplementary). As a simple model of a classification task, only the top hit was considered, which was designated as a true (false) positive if it belonged to the same (different) family as the query, though sequences in different families may in fact be homologous. On this test, UBLAST was  70 faster than MEGABLAST with significantly higher sensitivity, 300 faster than BLASTN with similar sensitivity, and  350 faster than BLASTP with comparable sensitivity above the protein twilight zone (2035% id.). To illustrate typical improvements achieved by UCLUST compared to the widely used program CD-HIT (), the most efficient previous clustering method, a set of 1.110 6 pyrosequencing reads of length 300 nt was taken from a recent microbial ecology study () and clustered at representative identities (). UCLUST produced higher quality clusters, enabled clustering at lower identities, usedthreshold; Size, average cluster size (bigger is considered better); Sim., average identity between a cluster member and its representative sequence (higher is considered better); Time, CPU time; Mem., maximum amount of RAM used by the program. Experiments were performed on a commodity laptop computer with 2 Gb RAM. Default options were used for both programs except to specify the identity threshold and the amount of available memory. Cluster size is divided by 100 for set B to allow direct comparison with A. The size and similarity are comparable, showing that cluster quality is only slightly degraded when processing the huge number of sequences in set B.
Search faster than BLASTsubstantially less memory for large sets and was often one or more orders of magnitude faster. CD-HIT generated clusters with larger, and thus apparently better, average size at 99% identity, but this proved to be an artifact of a bug in CD-HIT as almost half (47%) of the reported identities were 98% and therefore fell below the threshold by the CD-HIT's own measure. Many of these assignments were verified as being below 99% by creating independent alignments using MUSCLE (). Despite generating smaller clusters, which should enable higher average similarity to be achieved, CD-HIT produced clusters with lower average similarity than UCLUST in all cases. This shows that when a sequence can be assigned to more than one cluster, UCLUST tends to identify a better match. To demonstrate the scalability of UCLUST, 100 copies of theset were concatenated, giving an input file with 1.110 8 sequences. Clustering a set of this size with previous methods would require large-scale computational resources, while UCLUST was able to generate high-quality clusters at identities between 85% and 95% in 35 h on a commodity laptop computer in <100 Mb memory ().
DISCUSSIONUBLAST and USEARCH introduce a new search paradigm that seeks one or a few good hits rather than all hits in order to improve throughput. This approach is well suited to next-generation sequence classification, where search is often a critical bottleneck in analysis. Low-ranking hits are rarely needed and may even be undesirable due to increased overhead. The user can tune the trade-off between speed and sensitivity by adjusting parameters that control how many candidate hits are examined before the search is terminated. Speed and sensitivity are thus strongly dependent on the data and program options. In typical applications, USEARCH typically achieves good sensitivity at around 40% identity and above for amino acids and 65% for nucleotides. UBLAST is sensitive to more distant relationships, with useful sensitivity extending into the twilight zone for proteins. BLASTP has significantly better sensitivity at lower identities, which is partly due to refinements of the BLAST algorithm not yet implemented in UBLAST and also the problem that some distantly related proteins have no perfectly conserved words of the required length. UBLAST and USEARCH require memory that is roughly 10 the size of the database, which is sometimes more than BLAST but in most cases is readily accommodated by currently available commodity computer hardware. UCLUST is definitively superior to CD-HIT. It is usually significantly faster, uses significantly less memory, can cluster at lower identities and is more sensitive. While CD-HIT often fails to identify the closest cluster, or overlooks that a match is possible (false negative), UCLUST rarely misses a match and in most cases finds the best possible match. UCLUST also enables rapid clustering of much larger numbers of sequences. UBLAST, USEARCH and UCLUST can dramatically reduce the resources required for classification of large sequence sets, and will therefore be of value to biologists in a wide range of applications.
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
