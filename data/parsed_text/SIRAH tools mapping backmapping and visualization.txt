Coarse-grained (CG) models reduce the cost of molecular dynamics simulations keeping the essence of molecular interactions. Still, the diversity of CG representations (sizes, connect-ivity, naming, etc.) hampers the handling and visualization of such models. SIRAH Tools comprises a set of utilities to convert all-atoms coordinates to arbitrary residue-based CG schemes, write GROMACS' topological information at any resolution into PSF format and a VMD plugin to visualize , analyze and retrieve pseudo-atomistic information from CG trajectories performed with the SIRAH force field. These tools facilitate the use of intricate CG force fields outside the small devel-oper's community. Availability and implementation: Different utilities of SIRAH Tools are written in Perl, Tcl, or R. Documentation and source codes are freely distributed at http://www.sirahff.com.
IntroductionMolecular dynamics (MD) simulations constitute a reliable approach for the study of bimolecular structures, dynamics and interactions (). However, its computational cost has prompted the development of coarse-grained (CG) models aimed to reach ever-growing size and timescales. In general, different mapping schemes are used to provide CG representations from all-atoms (AA) molecular systems (), making difficult the creation and editing of molecular topology files. Moreover, arbitrary CG schemes can be challenging for general-purposes visualization programs to yield correct rendering, molecular connectivity, beads' size, charges, etc. To overcome such difficulties we created a series of utilities named SIRAH Tools, which are distributed within the SIRAH force field package for CG and multiscale simulations (seeand references therein). SIRAH Tools is freely available along with tutorials for running and analyzing CG simulations at http://www.sirahff.com.
SIRAH tools features
Mapping AA to CG modelsSIRAH Tools contains the Perl script cgconv.pl that takes as input AA files in PDB or PQR format and transforms residue coordinates to CG following mapping rules described in, so called, map files. Three mapping functions are currently available: CMASS, CGEOM and MAP. For CMASS and CGEOM, the atoms specified are mapped to their center of mass or geometry, respectively. If MAP is used, the positions of single atoms are given to CG beads. Though SIRAH mapping is used by default, user-created files can be read from the command line, the flag h displays all available options. Mapping can also be restricted to sets of residues to build multiresolution systems ().
Converting GROMACS' topologies to PSFMolecular visualization programs guess the connectivity of AA systems from standard interatomic distances and angles. However, this is difficult for arbitrary CG representations and topological information must be supplied in additional files, e.g. AMBER's topology () or X-PLOR PSF files (). However, GROMACS' topologies () are not currently supported by visualization software. SIRAH's g_top2psf.pl converts GROMACS' topologies to PSF files interpreting the '#include' statements used to consider chains, solvent molecules, ligands, etc., being equally useful for AA, multiscale or arbitrary CG topologies.
Visualization and structural analysis of CG systemsThe sirah_vmdtk.tcl plugin improves the visualization and analysis of CG trajectories with VMD (). This plugin sets correct van der Waals radii, coloring code by atom and residue types and macros for selecting molecular components on SIRAH trajectories (). The utility sirah_ss assigns secondary structures to CG proteins in SIRAH classifying amino acids in a-helix (H), extended b-sheet (E) or, otherwise, coil (C) conformations, based on the instantaneous values of the backbone's torsional angles and Hydrogen bond-like (HB) interactions (). Comparing the assignments of sirah_ss with STRIDE (), we find 90% of agreement between both methods (). Sirah_ss produces ASCII files of average and by-frame results, which can be visualized as a color matrix using the R script ssmtx2png.R (see, for instance,in).
Backmapping CG coordinates to AAThe sirah_vmdtk.tcl plugin also includes the module sirah_backmap to retrieve pseudo-atomistic information from CG models. The atomistic positions are built on a by-residue basis following the geometrical reconstruction proposed by (). Briefly, atomic positions are generated from the location of CG beads or previously reconstructed atoms using internal coordinates. Bond distances and angles are derived from rough organic chemistry considerations stored in backmapping libraries. Currently, backmapping libraries contain instructions for proteins and DNA of SIRAH, but user-defined procedures can be easily included for other models. Although plane AA reconstructions may result in poor stereochemistry conformations, this is readily fixed performing energy minimization using an AA force field, making the procedure robust and independent of the fine details of the backmapping library. The present implementation runs 100 steps of steepest-descent followed by 50 steps of Conjugated Gradient minimization in vacuum using the sander module of AmberTools (). Clearly, the accuracy of the reconstruction depends on the CG model. Backmapping of four SIRAH CG trajectories from() results in good structural descriptors (). As a stringent test, we calculated the HB conservation (Hydrogens are often lost in CG models). The conservation of HB calculated with a Donor-Acceptor cutoff of 0.4 nm and 120 between Donor-H-Acceptor varied from 12% (s.d. 1) for 1QYO up to 24% (s.d. 3) for both 1RA4 and 1TQG. These numbers raised to 45% (s.d. 4), 59% (s.d. 5) and 64% (s.d. 4), for 1QYO, 1RA4 and 1TQG, respectively, if we only consider the backbone interaction associated to the secondary structure, while the DNA kept a 74% (s.d. 5) of HB in the WatsonCrick region.
ConclusionCG models are considerably expanding. Yet, their visualization and analysis still suffers from limitations that restrict their use to highly skilled users. SIRAH tools aims to bridge this gap by providing easy and flexible mapping utilities, processing of topologies and data analysis.
FundingThis work was partially funded by FOCEM (MERCOSUR Structural Convergence Fund), COF 03/11. M.R.M. and S.P. belong to the SNI program of ANII.Conflict of Interest: none declared.
V C The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
M.R.Machado and S.Pantano at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
