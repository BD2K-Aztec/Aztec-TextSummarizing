Motivation: Discovering variation among high-throughput sequenced genomes relies on efficient and effective mapping of sequence reads. The speed, sensitivity and accuracy of read mapping are crucial to determining the full spectrum of single nucleotide variants (SNVs) as well as structural variants (SVs) in the donor genomes analyzed. Results: We present drFAST, a read mapper designed for di-base encoded 'color-space' sequences generated with the AB SOLiD platform. drFAST is specially designed for better delineation of structural variants, including segmental duplications, and is able to return all possible map locations and underlying sequence variation of short reads within a user-specified distance threshold. We show that drFAST is more sensitive in comparison to all commonly used aligners such as Bowtie, BFAST and SHRiMP. drFAST is also faster than both BFAST and SHRiMP and achieves a mapping speed comparable to Bowtie. Availability: The source code for drFAST is available at
INTRODUCTIONGenomic variation between individuals or across species ranges from single nucleotide polymorphisms (SNPs) and structural variation to larger chromosomal rearrangements (). Thanks to the improvements in sequencing technologies, large-scale genome variation studies such as the 1000 Genomes Project (1000 Genomes) have made it possible to better characterize normal human genomic variation and disease (). The development of high-throughput sequencing (HTS) technologies has changed the landscape of genome research. The first commercially available HTS technology was from Roche/454 Life Sciences () and was used to sequence the genome of James Watson (). It was followed by other 'second generation' sequencing platforms that generate orders of magnitude more data for a fraction of the cost, such as Illumina Genome Analyzer () and AB SOLiD (McKernan * To whom correspondence should be addressed.  The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First). Third-generation sequencing platforms are now under development, and HeliScope () and PacBio RS () were recently made available; however, for the time being, they produce reads with higher error rates. Analysis of genomic variation using sequencing starts with mapping the randomly sheared and ideally uniformly sampled DNA fragments from the genome. Different properties and error models of sequence reads generated by these technologies require the development of specialized read mapping algorithms for each platform for accurate read alignment and characterization of genomic variants. This becomes more complicated for short reads: due to repeats and duplications in genomes, they can map to multiple locations with equal sequence identity. Leveraging the high sequence coverage and randomly selecting one 'best' location when a read cannot be unambiguously placed has proven to be effective in discovering SNPs and small indels in relatively non-complex areas of the genome (). However, structural variation detection sensitivity is shown to benefit from tracking all map locations of the reads including suboptimal alignments (), and characterization of segmental duplications is extremely resistant against mapping the reads uniquely (). Read mappers can be broadly classified into two categories according to the method used to index the reference genome using either hash tables or suffix arrays [compressed through the Ferragina-Manzini index (with the use of the Burrows-Wheeler Transform (. Hashbased aligners such as MAQ (), SHRiMP (), mrFAST (), mrsFAST () and BFAST () have poorer performance in comparison to suffix array-based aligners [e.g. BWA (), Bowtie (when dealing with short reads; however, their relative performance increases considerably and surpasses the suffix array-based aligners when the read length and thus the number of errors (mismatches or indels) that need to be tolerated increase. In this article, we describe a hash-based read mapping algorithm named 'di-base read fast alignment search tool' (drFAST) designed for the di-base encoded color-space reads generated with the SOLiD platform. The main advantage of di-base encoding is increased base call accuracy due to each base being represented by two 'colors'. This helps in differentiating base calling errors (color-space errors) from real sequence variance, thereby increasing the reliability of detected genomic variants. We show that mapping speed of drFAST is higher than other SOLiD-enabled hash-based read mappers, BFAST () and SHRiMP (),
F.Hormozdiari et al.
Fig. 1. Translatingthe read from color-space to letter-space may result in a new sequence different from the original read if there exists a color-space error. and comparable to suffix array-based aligner Bowtie (). In addition, drFAST was able to map more reads than all the tools we benchmarked. Furthermore, drFAST achieves 100% sensitivity if the maximum allowed edit distance is less than L/k, where L is the sequence length and k is the length of the k-mers stored in the hash table (k is set to 12 by default). Coupled with its ability to store all map locations within a user-specified distance threshold and its paired-end (PE) mapping capabilities, drFAST can be used to characterize segmental duplications () and increase sensitivity of structural variation discovery using VariationHunter ().
METHODSFor each read sequenced from a donor genome, a mapping algorithm aims to find locations in a 'reference genome' where the read can be aligned exactly or within a small number of errors in the form of substitutions or insertions/deletions (indels). drFAST is a read mapper designed for colorspace reads generated with the SOLiD platform, and finds 'all' possible map locations for each read of length r in the reference genome within a user-specified e mismatches. drFAST is a seed-and-extend type algorithm and it builds an index of the reference genome by creating a collision-free hash table for all subsequences of length k (k-mers) of the reference genome. To map the reads, it first partitions each read to (e+1) k-mers and searches for each of these k-mers in the hash table. For each hit in the hash table, it then tests if the remainder of the read can be 'extended' by aligning to the reference genome starting at the determined hit location. How exactly this is done is described below.
Genome transformationThe sequence data produced with the SOLiD platform are in color-space format (S ={0,1,2,3} * ), where the reference genome sequence is in letterspace (i.e. R ={A,C,G,T } * ). Each color encodes two adjacent base pairs in the read, and each base pair is represented by two colors. Transformation of reads from color-space to letter-space before mapping may result in generating incorrect reads where base call errors exist, as depicted in. To avoid such incorrect decoding of reads, we translate the reference genome to color-space and use this transformed genome to create the index.
Indexing the reference genomedrFAST creates a collision-free hash table for all k-mers in the reference genome. Each entry of this index is a 2-tuple  = (s,L), where s is a kmer from the genome (k = 12 by default) and L is a list of all positions of the genome starting with this subsequence. The index is maintained in lexicographically sorted order with respect to their subsequences. For a reference genome of length n, the upper bound for the size of its index is O(n); but due to the repetitive nature of genome sequences, the index size is smaller in practice.
Indexing the readsdrFAST partitions each read of length r into e+1 non-overlapping blocks of length k where e is the user-specified maximum Hamming distance allowed for mapping. In the case where k r/(e+1), the pigeon hole principle guarantees that at least one of these blocks maps to the reference genome with no errors. Similar to the indexing described in Section 2.2, drFAST creates an index of blocks computed from all reads in 2-tuples  r = (s,L r ), where L r denotes the list of reads that include the k-mer s.
SearchingdrFAST compares the reference genome index keys with read index keys to find the locations in the reference genome where a read can be mapped with at most e errors. For each partition of the read, drFAST first finds the locations of the reference genome with the identical subsequence (same keys). It then tries to extend the location through sequence alignment of the reads to the genome, and reports those locations where the Hamming distance of the alignment is at most e. A simple loop scans both indices (both are lexicographically sorted); if the keys of the indices are the same (same subsequence) for entries  = (s,L) in the reference and  r = (s,L r ) in the read index. Then all entries in L are candidate map locations for each read entry in L r , and thus the entire list L should be compared with L r (extending step). Similar to mrsFAST (), drFAST performs 'all-to-all' list comparison using a recursive divide-and-conquer strategy that guarantees cache obliviousness; i.e. asymptotically minimizing the number of costly cache misses ().
ExtendingThe final step is to verify if each read can be aligned to candidate map locations within the user-specified error threshold e. drFAST aims to align the color-space read (S c ) to the letter-space sequence (S l ). The aligning process can be considered as finding a letter-space read S l that aligns to S l , and highly similar to S c if transformed to color-space:where CCG is the function that transforms the letter-space to color-space as defined by the SOLiD technology, and Sim is the similarity function. Maximizing the similarity between two sequences is equivalent to minimizing their distance. We use Hamming distance (i.e. the number of mismatches) as the distance measure between two sequences.To address the problem, drFAST introduces two efficient methods.
Method I: dynamic programmingLet ={A,C,G,T }, and ,  , and let Score(i,) indicate the optimal alignment of two subsequences S land S c(from the first to the i-th character) while  is the last character of S l. We then define Score(i,) =d(S l,)+min  {Score(i1, )+d(Scwhere d(a,b) = 1 if a = b, and d(a,b) = 0 otherwise. The detailed version of Equation (3) is as follows:Score(i1, C )+d(Sc, 1 ) Score(i1, G )+d(Sc, 2 )Score(i1, T )+d(Sc, 3 )Score(i,Score(i1, C )+d(Sc, 0 ) Score(i1, G )+d(Sc, 3 )Score(i1, T )+d(Sc, 2 )Score(i,Score(i1, C )+d(Sc, 3 )Score(i1, G )+d(Sc, 0 ) Score(i1, T )+d(Sc, 1 )1921 drFASTScore(i,Score(i1, C )+d(Sc, 2 )Score(i1, G )+d(Sc, 1 ) Score(i1, T )+d(Sc, 0 )The minimum value of Score(|S l |, A ), Score(|S l |, C ), Score(|S l |, G ) and Score(|S l |, T ) is the Score of the best translation of S c to S l .shows an example of aligning a letter-space and a color-space sequence using the dynamic programming described in Equation (3). The minimum value in the last column represents the score of the best alignment. Using the backtracking pointer, we can then recover the best alignment sequence.
Remark 1. The dynamic programming formulation in Equation (3) will find the optimal solution to the objective function in Equation (2) if the costs of mismatches and read errors are equal to one.
Remark 2. Dynamic programming described in (3) can be modified to handle any cost function for mismatches and read errors.Note that the Equation (3) uses Hamming distance but it can be easily generalized for edit distance to allow indels. Score(i,j,) = min,j1, )+d(Sc,CGG( ))+d(S l,) Score(i1,j, )+d(S l,) Score(i,j1, )+d(Sc,CGG( ))
Method II: transformation-based detectionThe second method is based on the theoretical design aspect of color-space reads (). A string of colors c 1 c 2 c 3 ...c k can also be treated as transformations. For example, C102 can be written as)) where the transformation of the colors is applied one after the other. This specific transformation converts C to G, acting as color 3 (C102 = C3 = G). For any other base pair, color string 102 will behave exactly as color 3. The set of color operations is isomorphic to the 'Klein Four Group' (). The Klein Four Group is the symmetry group of a rectangle, which has four elements: identity, vertical reflection, horizontal reflection and a 180 @BULLET rotation. In other words, given the four bases in the corners of a rectangle, each color operation has a oneto-one correspondence with one of the Klein Group elements (). The Klein Four Group is closed under its elements meaning that if a b are two elements of this group ab and ba (ab means a followed by b) is also an element of the this group. It also has associative, identity, reverse and commutative properties. This means that any sequence of color operations can be considered as one color operation. We use this property of the color-space reads to detect mismatches. Let two sets of color operations of the same length exist (c 1 ...c k and r 1 ...r k ) with different starting color (c 1 = r 2 ). For both sets, if any two consecutive colors are replaced with their equivalent (closure property) starting from left-hand side, you will end up with one at the end. If the last color matches with no intermediate matching colors then these two operations show a mismatch of length k 1. To illustrate this, consider two color operations 313 and 100. For simplicity, we also consider a leading base C. After applying the color operations, strings GTA and AAA will be generated, respectively. It):For all i from 1 to k 1:We use Theorem 1 as the basis of our validation function (i.e. extending step). If there is a color mismatch between the read and the reference genome, we consider the next e+1 colors to test if there exists any same color transformation of size at most e+1 between the read and the genome. Considering a window of limited length, this sometimes may cause incorrect classification of a long stretch of mismatches as two independent read error calls. We refine such calls at the final step.
ADDITIONAL FEATURESParallelization: an embarrassingly parallel wrapper for drFAST can be easily written to split the reads into smaller 'chunks' (15 million reads per file) and align on cluster nodes. This approach is the best practice because:(i) drFAST requires < 700 MB to load the genome and its index and only a total of  1.3 GB of memory to map 1 million reads to the genome.(ii) Mapping of each read is independent from mapping the others (except in the case of PE sequences where both ends need to be processed in the same chunk). PE mapping: SOLiD, like most other HTS technologies, can generate PE sequences. A pair of PE sequences are generated from the prefix and suffix of the same sheared DNA fragment, thus they can be used to increase mapping accuracy and discover structural variation (). Current
F.Hormozdiari et al.implementation of drFAST supports tracking the PE information, enabling direct use of VariationHunter for structural variation () and transposon insertion () discovery, as well as NovelSeq () for characterization of novel sequence insertions.
RESULTSTo measure the performance of drFAST, we compared its two variants to popular color-space read mappers currently available.Parameters: we used the following parameter settings for these mappers:@BULLET drFAST: e=2,3 (error threshold for different runs).@BULLET Bowtie: n,v = 2,3 (error threshold for different runs);-a (for reporting all);-S (output in SAM format);-C (color-space mapping). @BULLET SHRiMP:-m 1 (score 1 for match);-i-1 (score-1 for mismatch)-x-1 (score-1 for color-space error);-U (ungapped alignment)-o 10 000 (maximum number of alignments for a read);-N 1 (number of threads);-h 96% (96% alignment identity). @BULLET SOCS:-x 0 (number of bases to trim);-s 2 (mismatch sensitivity);-t 4 (mismatch tolerance);-m 0 (maximum number of alignments for a read, 0 indicates to report all);-T 1 (number of threads);-l yes (consider the lower case bases in genome).@BULLET Mapreads: S = 0 (color-space mapping); M = 2 (number of mismatches allowed); A = 2 (count adjacent mismatches as one mismatch); Z = 10 000 (maximum number of alignment for a read).@BULLET PerM: seed S20 (full sensitivity for two SNPs);-v 4 (number of mismatches). We used the same parameters (for reporting 'all' mapping locations) when available to ensure a fair comparison. Note that BWA and MAQ are not considered here since they ignore the first two characters of SOLiD reads. Data, reference genome and computing power: we used both simulated and real datasets for comparisons. We simulated three sets, each with 4 million reads of length 50 bp sampled randomly from chromosome 1 of human reference genome (NCBI build 35) as follows:@BULLET Set 1: we transformed the reads to color-space with no color errors and no mismatches.In addition, we randomly selected 1 million (50 bp long) reads from publicly available color-space reads generated from the genomes of NA18507 () (SRX004555), NA10847 (SRX008164) and NA12156. We used the human reference genome (NCBI build 35, unmasked) as the reference genome in all our experiments. The benchmarking results we report are performed on a server with 64 bit Intel Xeon processor and 8 GB of RAM. Time, accuracy and sensitivity results: we give the comparison results for all the mappers above with respect to the proportion of the reads that have at least one map location on the reference genome (sensitivity), total number of map locations found (comprehensiveness) and time needed to map the reads.shows the results on simulated datasets with error threshold of 2 (color errors and mismatches), except in the case of PerM where we allowed up to four mismatches due to recommendations of its developers. drFAST maps all the reads from simulated datasets back to the reference genome very efficiently. The closest competitor to drFAST appears to be Bowtie, which is, in general, slower than drFAST-CT and is not 100% sensitive. Although Bowtie with a parameter setting of v = 2 seems to map each read to more locations than drFAST, when no substitutions are present (Set 1), or a single color error is added (Set 2), this is simply due to Bowtie not being stringent on the number of errors it permits disregarding the parameter setting; we noticed that there are mapping locations with more than five color errors. When the reads involve a nucleotide substitution (Set 3), the number of mapping locations are lower than that of drFAST. What is more interesting is the number of reads that can be mapped to the reference genome. It seems like Bowtie can map at most 61.9% of the reads even when they include a single color error (Set 2), in contrast, drFAST (both variants) map 100% of the reads. When the errors are in the form of nucleotide substitutions, the proportion of reads mapped by Bowtie drops to 51.66%. Since Bowtie was the closest competitor to drFAST, we performed another experiment on the same datasets by increasing the error threshold to 3 (). Interestingly for this setting, the proportion of reads mapped by Bowtie is 99.4%, almost matching the 100% mapping sensitivity of drFAST. However, both in terms of time and the number of map locations, drFAST (both variants) perform better than Bowtie, especially when errors (Set 2 for color errors and Set 3 for nucleotide errors) are present. As all three sets are generated from chromosome 1 with at most two errors added, a sensitive mapper should be able to map all reads to chromosome 1 when the error threshold is set to 2. In order to experimentally check the accuracy of all locations found by drFAST, we simulated the corresponding Illumina reads (letterspace) and aligned to chromosome 1 using mrsFAST. As seen infor Sets 1 and 3, drFAST finds slightly more mappingdisease susceptibility and genome evolution. Although there are inherent accuracy and bias problems associated with different sequencing platforms (), we can also leverage the different 'strengths' of these technologies to increase confidence and) and structural variation () discovery. For species where a reference genome is available as in human, mapping sequence reads to this reference assembly is the first step in genome analysis. Sensitivity and accuracy, as well as the speed of read alignment, are crucial for precise characterization of genomic variants. To this end, many mapping algorithms were developed () focusing mainly on the Illumina Genome Analyzer data, and very little effort was devoted to analyze color-space reads generated with the SOLiD platform (). The main limitation of the SOLiD-aware read aligners is that they were not optimized for structural variation detection [except for SHRiMP (), which is more powerful in mapping to more complex areas of the genome], and they are unusable for segmental duplication analysis due to their unique mapping approach (). On the other hand, by tracking all possible map locations and underlying sequence variation, drFAST provides an opportunity to better access and increase 'mappability' in repeat and duplication-rich areas of the genome that are known to harbor much structural variation (). Although the sensitivity of drFAST is higher than the other aligners, we also demonstrate speed enhancements of both dynamic programming and color transformation versions. Through its readiness to be integrated to VariationHunter () for more sensitive SV discovery, to NovelSeq () to characterize novel sequence insertions, and usability for segmental variation detection (). drFAST is an important step forward for recovering additional genetic variation from di-base encoded color-space sequencing.
drFAST
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [13:14 22/6/2011 Bioinformatics-btr303.tex]
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
75 115 629 100 locations than mrsFAST, where the sensitivities of both aligners are 100%. The reason drFAST can find more mapping locations for SOLiD reads compared with the corresponding Illumina reads is because drFAST could map a read like T0000 to two different positions with base pair contents TTTT, and also CCCC when one color error is 'corrected'. This is not the case with letter-space reads generated by a platform like Illumina Genome Analyzer. Although it would not be correct to arbitrarily select one 'version' above the other, or returning both alignments as possibilities, we propose to correct such artifacts by incorporating the base pair quality values. This problem will arise only in polyN regions, and thus, we propose to disable error correction of polyN reads where the base quality value of the first base is sufficiently high (i.e. q > 30). BFAST and SHRiMP results are not presented for the three real datasets (Table 6) due to: (i) in our experiments, BFAST terminated with error in indexing step; (ii) SHRiMP requires 16 GB of main memory for alignment. Furthermore, both programs are slower than drFAST or Bowtie. As a result, we compared drFAST with Bowtie, SOCS, Mapreads and PerM with an error threshold of 2 (Table 6) and we compared drFAST with Bowtie (closest competitor) with an error threshold of 3 (Table 7). In five out of the six cases, drFAST maps significantly more reads, and to substantially more locations, in comparable time. The performance of the two programs are comparable only for NA18507 for n = 2, in terms of mapped reads; however, drFAST-CT is slightly faster on this dataset. We also compared the amount of memory used by each program when mapping 1 million reads to the human reference genome assembly (Table 8). One important issue to note is that the drFAST aligner is aimed at SV/CNV inference and it does not return mapping quality values, which are still essential for accurate SNP detection. However, drFAST also returns 'best' map locations for PE and mate pair reads in addition to all possible discordant configurations where 'best' is defined as the mapping with the lowest Hamming distance and with span size closest to the library average. Future releases of drFAST will have the capability of returning mapping quality for these best map locations, which will effectively increase the appeal of drFAST, and users will be able to use it for both structural variation discovery through multimapping PE and mate pair reads, and SNP discovery. Until this feature is available in drFAST, one may need to run other aligners in parallel to discover SNPs. 5 CONCLUSION This is an exciting time for genomics research. The amount of available (1000 Genomes Project Consortium, 2010) and anticipated (Genome 10K Community of Scientists, 2009) sequence data now arms us to expand our understanding human variation,
