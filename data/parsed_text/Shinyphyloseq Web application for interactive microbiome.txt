We have created a Shiny-based Web application, called Shiny-phyloseq, for dynamic interaction with microbiome data that runs on any modern Web browser and requires no programming, increasing the accessibility and decreasing the entrance requirement to using phyloseq and related R tools. Along with a data-and context-aware dynamic interface for exploring the effects of parameter and method choices, Shiny-phyloseq also records the complete user input and subsequent graphical results of a user's session, allowing the user to archive, share and reproduce the sequence of steps that created their resultâ€”without writing any new code themselves. Availability and implementation: Shiny-phyloseq is implemented entirely in the R language. It can be hosted/launched by any system with R installed, including Windows, Mac OS and most Linux distributions. Information technology administrators can also host Shiny-phyloseq from a remote server, in which case users need only have a Web browser installed. Shiny-phyloseq is provided free of charge under a GPL-3 open-source license through GitHub at
INTRODUCTIONAnalysis of microbial communities requires the interpretation of one or more high-dimensional abundance matrices and its relationship with other datasets, using a complex and emerging suite of methods from ecology, genetics, phylogenetics, multivariate statistics, visualization and testing. Filtering, custom curation and transformation of the abundance data are also required usually, but the precisely reproducible workflow from raw data to final analyses is often difficult or impossible to reproduce exactly. Ideally, published scientific analyses are completely reproducible in as easy a fashion as possible; and anything less represents an impediment to both progress and peer review (). Fortunately, R is well suited for the analytical aspects of microbiome research, with an interaction-oriented functional programming design (R Development Core) that includes support for reproducible research (). We recently described a software package for the R language, phyloseq, dedicated to the object-oriented representation and analysis of microbiome census data (). One of the originally stated goals of phyloseq was to leverage R-based resources for reproducible research, and thereby, improve the reproducibility and portability of published microbiome analyses. Unfortunately, for many microbiome researchers with classical training in biology, learning a programming languageeven a functional interactive language like Rhas proven to be a prohibitive investment of time and effort. However, most of the necessary computations are not only tractable by R, but also fast enough for dynamic interaction via a graphical user interface (GUI). Here we describe our release of 'Shiny-phyloseq', a Web browser GUI that leverages phyloseq and other R resources for the analysis of microbiome census datawhile also allowing the user to archive the complete code and data necessary to exactly reproduce their session results. Although it is difficult for any single GUI application to support the full range of analyses required in microbiome research, Shiny-phyloseq provides a compelling framework and introduction to microbiome analysis in R. Its modular opensource design encourages modification, customization and code reuse. There are other resources with GUI elements available for the analysis of microbiome census data, including MG-RAST (), QIIME () and CloVR (). To our knowledge, there are no GUIs available for the analysis of microbiome census data that also leverage the R programming language, ggplot2 (), and phyloseq while also providing a 'provenance record' of a user's session.
METHODSShiny-phyloseq is almost entirely R code, but, like any Shiny app, can be further customized/extended using HTML, CSS and JavaScript. Shinyphyloseq is fully cross-platform and will launch locally from any R environment (Console R, Rgui, RStudio, etc.). It can also be hosted by a remote Web serverthis latter case only requires that the user has a modern Web browser installed. Shiny-phyloseq leverages Shiny's reactive programming framework to compartmentalize and cache expensive computational steps so that they are not recomputed unnecessarily during an interactive session. The current implementation of Shiny-phyloseq is dependent on many important updates to the phyloseq package, including (i) an interface to DESeq2 () for a negative Binomial method recommended by; (ii) a ggplot2-friendly data organizing function, psmelt; (iii) the inclusion of low-level C code from APE () for $100 faster UniFrac () distance calculations and tree plotting; (iv) faster network plot function with better default settings, plot_net; and (v) additional options for ordering heatmaps by covariates. *To whom correspondence should be addressed.  The Author 2014. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.
BIOLOGICAL APPLICATIONSA typical workflow in Shiny-phyloseq begins with data upload and selection, followed by optional filtering of Operational Taxonomic Units (OTUs) or samples. A number of exploratory data analysis methods are available in separate panels, including alpha diversity estimates, multivariate ordination methods, as well as network, heatmap, scatter and bar graphics. Some of these methods depend on data transformations (e.g. regularized log) or ecological distances (e.g. weighted UniFrac, BrayCurtis), which can be selected from a sidebar panel of parameter-input widgets placed next to each graphic on each panel. Graphics can be downloaded in a user-specified format by clicking the download button at the bottom of each sidebar panel. Finally, a user can download a compressed file containing the complete code and data necessary to completely reproduce the steps that led to their graphical result. Shiny-phyloseq provides new features, including (i) a contextand data-aware, browser-based interactive GUI application, (ii) interactive 3D network graphics based on d3.js, for exploring OTU or sample distance structure and (iii) provenance tracking for reproducible sessions. There are two network-graphic panels, both of which use new functionality. The Network panel features the ability to animate vertex connectedness as a change in the distance threshold, and scales edge thickness according to inverse distance value. The former feature can help a user to quickly scan the dependency of the network on the choice of global threshold. Alternatively, using the d3Network panel, networks can be interactively explored by dragging and stretching nodes in a live 3D network animation, with taxonomy or covariates mapped to node color and/or mouse-over labels (). This D3 () interactive graphic is a special phyloseq implementation of the d3Network package (). The final panel, Provenance, includes a button that (re)initiates a special processing of the Shiny event log into reusable R code. This record of parameter changes and analysis stepswhen coupled with the complete workspace environment dataconstitutes a so-called provenance record of the analysis session. Shinyphyloseq initiates a browser download of the compressed file containing the code and data sufficient to exactly reproduce the series of graphics created in the session up to that point. This can be archived or shared for batch re-execution in R.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Shiny-phyloseq at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
