Motivation: Constraint-based metabolic modeling methods such as Flux Balance Analysis (FBA) are routinely used to predict metabolic phenotypes, e.g. growth rates, ATP yield or the fitness of gene knockouts. One frequent difficulty of constraint-based solutions is the inclusion of thermo-dynamically infeasible loops (or internal cycles), which add nonbiological fluxes to the predictions. Results: We propose a simple postprocessing of constraint-based solutions, which removes internal cycles from any given flux distribution v ð0Þ without disturbing other fluxes not involved in the loops. This new algorithm, termed CycleFreeFlux, works by minimizing the sum of absolute fluxes jjvjj 1 while (i) conserving the exchange fluxes and (ii) using the fluxes of the original solution to bound the new flux distribution. This strategy reduces internal fluxes until at least one reaction of every possible internal cycle is inactive, a necessary and sufficient condition for the thermo-dynamic feasibility of a flux distribution. If alternative representations of the input flux distribution in terms of elementary flux modes exist that differ in their inclusion of internal cycles, then CycleFreeFlux is biased towards solutions that maintain the direction given by v ð0Þ and towards solutions with lower total flux jjvjj 1. Our method requires only one additional linear optimization, making it computationally very efficient compared to alternative strategies. Availability and implementation: We provide freely available R implementations for the enumer-ation of thermodynamically infeasible cycles as well as for cycle-free FBA solutions, flux variability calculations and random sampling of solution spaces.
IntroductionConstraint-based methods for the functional analysis of metabolic networks (CBM or COBRA methods) rely on stoichiometric equations and do not require kinetic information for individual reactions. They are thus applicable to genome-scale metabolic systems (). Flux-balance analysis (FBA), which involves the maximization of a fitness-related objective function in steady-state conditions (), has been successfully applied to predict phenotypes such as growth rates, ATP yield and the effects of gene knockouts. Recent publications have applied FBA to predict drug targets (), while others have used FBA to study the evolution of metabolic systems (). FBA predicts the maximal value of the objective functionoften the yield of biomass production (in the metabolic system (a 'flux distribution') (). One of the difficulties of FBA predictions is that they frequently include thermodynamically infeasible internal cycles, i.e. sets of reactions that together carry a flux that has no influence on the exchange reactions of the model (). These are metabolic 'perpetual motion machines' and do not occur in biological reality. Such internal cycles thus distort predicted flux distributions and should be removed from the predictions. Thermodynamically infeasible cycles affect not only the predictions of FBA, but also those of many other constraint-based analysis methods. In particular, thermodynamically infeasible cycles distort the output of sampling algorithms that aim to characterize the steady-state solution space, and lead to the assignment of unrealistically high values to the flux ranges that can be carried by individual reactions in flux variability analysis (FVA) (). At least for FBA, there exists a strategy that ensures the thermodynamic feasibility of the flux distribution: the minimization of the sum of absolute fluxes under the additional constraint of an optimal value for the original objective function (minimization of total flux, MTF) (). This method aims to approximate a flux distribution that minimizes cellular investment into enzymes, and is hence sometimes called parsimonious FBA (). As a side effect of its parsimonious strategy, MTF also removes any internal cycles. MTF solutions do not represent the full thermodynamically feasible solution space of the original FBA problem; hence, they cannot be used to characterize this full space, which is the purpose of random sampling algorithms and FVA calculations. Several approaches for the identification and/or exclusion of thermodynamically infeasible cycles have been proposed (De). The most widely used method, ll-COBRA (), is based on the integration of thermodynamic constraints with FBA into a mixed-integer linear problem (MILP). However, this approach is computationally expensive, resulting in runtimes that severely limit its applicability to large-scale studies. Here, we propose a new algorithm, termed CycleFreeFlux, which removes all thermodynamically infeasible cycles from any given flux distribution with a single linear optimization step; this makes it orders of magnitude faster than previous approaches when applied to sampling or flux variability analyses of genome-scale metabolic networks.
Results
Characterization of thermodynamically feasible flux distributionsTo motivate the CycleFreeFlux algorithm, we first formally characterize thermodynamically feasible flux distributions. Consider the following standard FBA problem (bold face indicates vectors): max c T v subject to :Here, S is a stoichiometric matrix, where each row corresponds to one metabolite, and each column contains the stoichiometric coefficients of one reaction; v is a vector of fluxes through these reactions; Sv  0 enforces a steady state in which all internal metabolite concentrations are constant; l and u are vectors of lower and upper bounds for v, respectively, where is applied element-wise; and c T v with a constant weight vector c is a linear combination of fluxes that is maximized (the 'gain' of v). In many applications, this objective function contains just one hypothetical flux that corresponds to the rate of biomass production, c T v  v bio (). In the following, we will call a flux distribution 'feasible' if it is nonzero and adheres to all constraints in the FBA problem (1) (i.e. if it lies in the space of feasible solutions of (1)). supportv 0  denotes the set of indices j with v j 0 6  0. A flux distribution v 0 is thermodynamically feasible if, and only if, there exists an assignment of free energies G to the metabolites such that the free energy change caused by each active reaction is strictly negative, i.e. v j 0 DG j < 0 for all j 2 supportv 0 , with DG j  s j T G, where s j denotes the j-th column of S (). We will explicitly consider the free energies of external metabolites in order to deal correctly with thermodynamically infeasible flux distributions that involve transport reactions (reactions that shuttle metabolites between internal compartments and the external compartment). For each external metabolite, we add one reversible 'exchange' reaction between the external compartment and an additional 'NULL' compartment that is not explicitly modeled. Many genome-scale metabolic reconstructions already define exchange reactions in that way. For any given free energy of a metabolite present in the external compartment, we can set a hypothetical free energy outside the external compartment that drives the exchange reaction in the desired direction. Thus, exchange reactions as defined here are always thermodynamically feasible. When considering thermodynamical feasibility, we only need to examine internal reactions (including transport reactions), and it is hence convenient to partition the stoichiometric matrix into an internal and an exchange part, S  S int ; S ex . We call a nonzero flux distribution Dv 'internal' if, and only if, it fulfills the conditions SDv  0; min fl i ; 0g v i max f0; u i g for all fluxes v i , and if all its exchange fluxes are zero. Thus, internal flux distributions do not change any internal or external metabolite concentrations; they can be thought of as combinations of internal cycles that collectively neither consume nor produce anything. If the constraints of (1) do not enforce any nonzero fluxes, then internal flux distributions are also feasible. As free energy is a state variable of metabolites, the free energy changes of the reactions active in Dv must add to zero in steady state: DvDG  0 (). Thus, Dv k DG k !0 for at least one reaction k 2 supportDv. There is hence no thermodynamic driving force for at least one reaction in supportDv; consequently, all internal flux distributions are thermodynamically infeasible. The following theorem characterizes thermodynamically feasible flux distributions: Theorem: A flux distribution v 6  0 that is feasible for (1) is thermodynamically feasible if, and only if, there does not exist any internal flux distribution Dv 6  0 with supportDv&supportv and Dv k v k !0 for all k. Proof:Then, by definition, v is thermodynamically feasible, if, and only if, there exists a vector of free energies G such that S T int G < 0 (i.e. each component of the vector S T int G must be negative). By Gordan's theorem (see, e.g. Theorem 2.2.1 in ()), this is the case, if, and only if, there does not exist a vector x!0 with x 6  0 and S int x  0. Identifying x with Dv the claim follows. We have thus shown that a feasible flux distribution v is thermodynamically feasible if and only if it cannot be 'reduced' by subtracting an internal flux distribution Dv.
Removing internal cycles from a given flux distributionThe theorem provides the motivation for the CycleFreeFlux algorithm. We aim to reduce a given flux distribution v 0 to its thermodynamically feasible part. To achieve this goal, CycleFreeFlux minimizes the sum of absolute fluxes while (i) all exchange fluxes are kept constant, and (ii) no internal flux is allowed to change direction or increase in size. If the input flux distribution is the output of a previous optimization, CycleFreeFlux additionally constrains the value of the objective function c T v to its optimal value. We assume that there are no lower bounds l i > 0 and no upper bounds u j < 0, i.e. all fluxes are allowed to be nonactive; otherwise, these constraints may enforce thermodynamically infeasible fluxes, and then v 0 cannot be reduced to a feasible solution that is also thermodynamically feasible. We thus solve the following linear optimization problem:subject to :As fluxes are not allowed to change directions, we can transform (2) trivially to a linear problem by replacing the sum over the absolute values by two sums over positive and negative fluxes, respectively:The flux distribution v resulting from this optimization is 'structurally consistent' with v 0. Here, we define a flux distribution v as structurally consistent with an input flux distribution v 0 if v neither increases (in absolute value) nor inverts any fluxes compared to v 0. CycleFreeFlux outputs a minimal (in terms of the sum of absolute fluxes jjvjj 1 ) flux distribution that is structurally consistent with the input flux distribution v 0 .
Corollary:A flux distribution v 6  0 that is feasible for (1) (with l 0 u) is thermodynamically feasible if, and only if, the output of the CycleFreeFlux algorithm (2) with input v 0  v is v itself.
Proof:To simplify the presentation assume again that v 0 !0. If CycleFreeFlux returns a flux v 6  v 0 , then, by construction, Dv : v 0 v!0 and supportDv & supportv 0 . Thus, by the theorem, v 0 is not thermodynamically feasible. Conversely, if v 0 is not thermodynamically feasible, then, by the theorem, there exists an internal flux distribution Dv 6  0 with supportDv & supportv 0 . Then, v 0  D v is feasible for (2) for small > 0, reducing the objective value in (2), so that CycleFreeFlux will not return v  v 0 as output.). In contrast, the loop e 3 involves only the internal fluxes v 2 , v 4 and v 5 and is hence type III (i.e. thermodynamically infeasible). The fluxes shown in the figure are our input flux distribution, v 0. To apply the CycleFreeFlux algorithm, we constrain the internal reactions v 4 and v 5 to non-negative values (0 v 4 1000 and 0 v 5 1000), while the third internal reaction, v 2 , is constrained to nonpositive values (999 v 2 0). At the same time, we fix the exchange reactions at their input values, v 1  v 3  1. Minimizing the total flux under these conditions reduces the flux through the internal loop down to the point where v 2 becomes zero, and hence the algorithm puts out v  e 2 as the thermodynamically feasible part of the input flux distribution v 0  e 2  999e 3. Note that the decomposition of the input flux distribution v 0 in terms of the elementary modes is not unique: we can also write v 0  e 1  1000e 3. Thus, v  e 1 would be an alternative thermodynamically feasible solution consistent with the input flux distribution v 0. This alternative inverts the direction of one internal flux, v 2 , and is thus not structurally consistent with v 0. The preference for structurally consistent solutions causes a corresponding bias if there exist alternative decompositions of v 0 into elementary flux modes that are structurally inconsistent with v 0 ; in addition, CycleFreeFlux is biased towards solutions with lower total flux jjvjj 1. That there always exists a structurally consistent solution is caused by the fact that internal flux distributions are cycles, and hence it is always possible to route the thermodynamically feasible flux through the cycle section that runs in the same direction. The condition of structural consistency with an input flux distribution is what differentiates cycleFreeFlux from MTF. We can write the thermodynamically feasible output flux distriin terms of type I elementary flux modes, and the internal flux distribution Dv  P j b j e III j in terms of type III elementary flux modes (). This allows us to writei.e. there exists a decomposition of the input flux distribution into. A toy model illustrating our algorithms. Three metabolites (A, B, C) can be interconverted by three internal reactions (v 2 ; v 4 ; v 5 ). A can be taken up from the environment through the exchange reaction v 1 , while B can be secreted through v 3. All fluxes except v 2 are unidirectional, allowed to proceed only from left to right (which is also the nominal flux direction of v 2 ). The steady-state flux distributions of this model can be expressed as positive linear combinations of the elementary flux modes e1; e2; e3 (dashed lines). The cycle e3 involves only internal fluxes (i.e. it is a type III elementary flux mode), and is thus thermodynamically infeasibleEfficient removal of loopstype I and type III elementary flux modes such that the output flux distribution consists exactly of the type I contributions. Note that if the constraints in (1) entail lower flux bounds l i > 0 and/or upper bounds u j < 0, then these enforce nonzero fluxes through the corresponding reactions. Such bounds are rarely used in FBA-type analyses. However, if such bounds are used and are chosen inappropriately, they may result in nonzero activities of thermodynamically infeasible cycles. These will be removed by our algorithm, resulting in an output flux distribution that will not be feasible for the original problem. That such an inconsistency may be present can be detected by comparing the output of the CycleFreeFlux algorithm to the constraints of the original problem to check its feasibility. However, if one is certain that the constraints of (1) do not enforce internal cycles, then corresponding modifications of the constraints in (2) to handle this case are straightforward. Futile cycles involve the consumption and/or production of 'currency metabolites' such as ATP. Futile cycles are often thermodynamically feasible. They are not internal flux distributions, and do not require special treatment in our formalism.
SpeedBecause of their different strategies, the output of CycleFreeFlux and ll-FBA cannot be compared directly: ll-FBA () directly solves an FBA problem within the subspace of thermodynamically feasible flux distributions; in contrast, CycleFreeFlux takes any given steady-state flux distribution (which may or may not be the result of an FBA calculation) and removes its thermodynamically infeasible contributions. As the CycleFreeFlux algorithm is a postprocessing step consisting of a single linear optimization, it increases the computation time approximately 2-fold compared to standard FBA, and is thus very similar to an MTF strategy in terms of run times.compares the run time of CycleFreeFBA (standard FBA followed by the CycleFreeFlux algorithm) to that of the ll-FBA algorithm proposed by. For better comparability, both algorithms were implemented in R and are run on the same metabolic networks, using the same numerical solver. We used the default environments and biomass reactions supplied by the BIGG database () for the Escherichia coli models and by the original publication for the yeast model (). For the genome-scale networks of E.coli () andSaccharomyces cerevisiae (), cycleFreeFlux is 4002500 times faster than the alternative ll-FBA algorithm, which solves a mixed-integer linear problem instead of a standard linear programming problem.
Cycle-free samplingThe CycleFreeFlux algorithm can be applied to any given steadystate flux distribution. Thus, it can not only remove internal cycles from FBA solutions, but it can also be directly applied to random samples of the solution space (). To remove thermodynamically infeasible cycles from sampled flux distributions, we reduce each sample to its contributions from type I elementary flux modes as explained above. Flux samples taken from the two solution spaces including and excluding internal cycles are compared infor the genomescale metabolic model of E.coli (). The sampled fluxes involved in thermodynamically infeasible internal cycles () are reduced () to the 'normal' range observed for reactions not involved in active loops (; these nonloop fluxes are identified as those that remain unchanged when applying the CycleFreeFlux algorithm). The sampling of the thermodynamically feasible solution space aims at covering all steady-state solutions with the same finite probability. This aim is not fully achieved through the CycleFreeFlux algorithm, as can be seen from the example in. Ideally, the two type I elementary flux modes, e 1 and e 2 , should be sampled in equal proportions. However, any initial sample that contains a nonzero flux around e 3 will be reduced to a flux distribution that only contains e 2 , biasing the samples towards this flux mode. Any point in the solution space that is involved in an internal cycle and simultaneously has a nonunique representation in terms of elementary flux modes may cause a violation of uniform sampling. We note, however, that uniform sampling is required only when volumerelated features are investigated. In many applications, the bias introduced by cycleFreeFlux may be preferable to the bias caused by the inclusion of thermodynamically infeasible flux distributions. ll-COBRA () also suggests to remove internal cycles from sampled flux distributions in a postprocessing step, minimizing the distance of the flux vectors between the sampled flux vector and the cycle-free subspace. As can be seen from the example in, this strategy introduces a bias that is very similar to the one caused by the CycleFreeFlux algorithm. Thus, currently no published method exists that guarantees uniformsampling of the thermodynamically feasible solution space; as CycleFreeFlux increases the time for sampling only about 2-fold compared to methods that include internal cycles, we consider CycleFreeFlux the method of choice.
Cycle-free flux variability analysisFlux variability analysis (FVA) calculates upper and lower bounds for steady-state fluxes through each reaction at the optimal value of the objective function (). Thus, FVA results can be used to characterize the space of alternative optimal solutions to an FBA problem. Thermodynamically infeasible internal cycles are unbounded except by a priori constraints, leading to artifactual bounds for all reactions involved in such cycles (). To exclude internal cycles from FVA, we propose CycleFreeFVA, an extension of the CycleFreeFlux algorithm. Standard FVA performs two linear optimizations for each reaction R i , one maximization and one minimization (). We extend this approach by iteratively performing maximizations and removing cycles. To obtain the flux variability for reaction R i excluding thermodynamically infeasible internal cycles (i.e. based only on type I elementary flux modes), we apply the following algorithm. Any constraints added in one iteration are maintained through further iterations, and the flux distribution v 0 is updated accordingly in each iteration: Repeat: { find a steady state flux distribution v 0 with maximal flux v, resulting in a new flux distribution v 2 that contains one internal cycle involving R i ; break the internal cycle: constrain the fluxes v j that are zero in v 1 but not in v 2 to v j  0; } } The upper bound for v i excluding internal cycles is now in v 0 i. In sum, after maximizing the flux through reaction R i , the algorithm checks whether the reaction is involved in internal cycles by applying the CycleFreeFlux algorithm to the resulting flux distribution v 0 ; if the flux v i through R i is reduced through the removal of internal cycles, then the original maximum v 0 i was indeed influenced by such cycles. We identify one such cycle involving v i by fixing v i at its original (cycling) maximum v 0 i and then removing all other cycles; afterwards, we break this cycle by reducing its flux as little as possible, but as much as necessary. These steps are repeated until all loops involving v i have been removed. The calculation of the lower bound for v i excluding internal cycles is performed in the same way, replacing maximizations with minimizations. To see how the algorithm works, it is again instructive to consider the toy model in. Let us assume that we want to calculate flux variability within the steady-state solution space to an FBA problem with v 3 as the objective function and v 1 1. v 1  1 and v 3  1 are then fixed by the boundary conditions, and we need to find the variability of the remaining three reactions. In standard FVA, we would conclude that v 4 can vary within the full range allowed by the a priori constraints, say, 0 v 4 1000. Now let us apply the above algorithm for v 4. The first flux distribution with maximal flux through v 4 will be the one indicated in, v 0  e 2  999e 3. Application of the CycleFreeFlux algorithm reduces this to v 1  e 2. v 4 changed its value between v 0 and v 1 , indicating that we're not done yet. As the model contains only one internal cycle, we have v 2  v 0. The only reaction that is zero in v 1 but not in v 2  v 0 is v 2 ; this reaction we now constrain to zero. The maximal value for v 4 is now 1. Exactly the same happens when we consider v 5. What about v 2 ? Its maximum, 1, is not affected by the internal cycle e 3. Its minimum is again realized in the flux distribution v 0  e 2  999e 3 indicated in. Again, we have v 1  e 2 and v 2  v 0. Reducing the flux through the cycle as little as possible, but as much as necessary, we identify the lower limit 0 v 2. We applied the CycleFreeFVA algorithm to the genome-scale model of E.coli ().shows the distribution of the maximal fluxes for reactions that can be affected by internal cycles with standard FVA () and with CycleFreeFVA (), and compares those to the distribution for fluxes not affected by internal cycles ().
Enumeration of internal cyclesTo enumerate thermodynamically infeasible cycles, we propose a method based on an extension of the CycleFreeFVA approach. We perform CycleFreeFVA for each internal flux v i , and we simply store the cycles removed in each iteration (i.e. Dv : v 2  v 1 ). Because the same cycle may be identified for each reaction involved in the cycle, we need to restrict the total set of identified internal cycles to unique reaction sets. Each set of reactions identified through this algorithm represents a unique internal flux distribution that cannot be reduced while maintaining the flux through one of its reactions (the one used for its identification); thus, it is an 'elementary' internal cycle (type III elementary flux mode). Can we be sure to identify all internal cycles in this way? For each reaction involved in internal cycles, CycleFreeFVA identifies at least one such cycle. Thus, each internal cycle that contains at leastone reaction not shared with another cycle must be identified as soon as this unique reaction is considered. However, it is possible to construct examples where all reactions in one loop are also involved in other loops; in this case, the corresponding loop might be missed by our algorithm. The enumeration algorithm is thus only approximate: we may fail to identify some internal cycles if these share all their reactions with other internal cycles. On the other hand, we can be sure that all reactions involved in internal cycles are identified, and the algorithm is exact in this sense. We used our algorithm to identify thermodynamically infeasible cycles in the genome-scale metabolic model for E.coli (). The identification of internal cycles in this network took less than five minutes on a standard laptop (core i7 processor and 8GB RAM). Excluding trivial cycles involving only two reactions (i.e. forward and backward reactions of the same stoichiometry), we identified 26 nontrivial thermodynamically infeasible cycles. This is very close to the number reported by (), 27; as the detailed results of () are not available, we could not examine if the one additional cycle consists entirely of reactions involved in the other cycles, which would explain why it is not contained in our results. Recently, (De Martino et al., 2013) reported a lower bound of189 nontrivial thermodynamically infeasible loops (!2 reactions each) in the same metabolic network model. 11 of these internal cycles were also identified by our approach; the remaining 178 cycles violate at least one a priori thermodynamic constraint, i.e. at least one reaction in the cycle carries flux in a direction not allowed by the published model ().
ConclusionsThe CycleFreeFlux algorithm described above, MTF (Holzh tter, 2004), and ll-FBA () each put out one thermodynamically feasible flux distribution. However, these algorithms are not directly comparable, as they differ in both their goals and their inputs. MTF delivers very special flux distributions, which minimize the total sum of absolute fluxes jjvjj 1 , constrained only by the optimal value of the objective function. In contrast, cycleFreeFlux takes any given steady-state flux distribution (which may or may not be the result of an FBA calculation) and reduces it to its loopless contribution. Finally, ll-FBA solves an FBA problem such that the resulting flux distribution already lies in the thermodynamically feasible subspace. Given that the MTF flux distribution will often be biologically more realistic than many alternative solutions to an FBA problem (), MTF (or parsimonious FBA) should be the method of choice when just one thermodynamically feasible solution to an FBA problem is required. In contrast, CycleFreeFlux and ll-COBRA provide means to characterize the full space of thermodynamically feasible (optimal) steady-state solutions. CycleFreeFlux solutions are biased towards solutions that run in the same direction as internal cycles with which they overlap and towards solutions with lower total flux jjvjj 1 whenever alternative decompositions into elementary modes exist; in many applications, these biases will not be important. The CycleFreeFlux algorithm and its extensions allow the reliable identification and exclusion of thermodynamically infeasible internal cycles. We implemented corresponding functions as an extension package for sybil (), an opensource library for constraint-based analyses in the framework of the R-project for statistical computing (R Development Core Team 2013). The implemented CycleFreeFlux functions are orders of magnitude faster than previously available algorithms for the generation of thermodynamically feasible random flux samples and flux variability analyses and are freely available from CRAN (http://cran. r-project.org/web/packages/sybilcycleFreeFlux/).
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
A.A.Desouki et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
