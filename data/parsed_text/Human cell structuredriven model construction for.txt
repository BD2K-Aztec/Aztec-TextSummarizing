Motivation: The systematic study of subcellular location pattern is very important for fully characterizing the human proteome. Nowadays, with the great advances in automated microscopic imaging , accurate bioimage-based classification methods to predict protein subcellular locations are highly desired. All existing models were constructed on the independent parallel hypothesis, where the cellular component classes are positioned independently in a multi-class classification engine. The important structural information of cellular compartments is missed. To deal with this problem for developing more accurate models, we proposed a novel cell structure-driven classifier construction approach (SC-PSorter) by employing the prior biological structural information in the learning model. Specifically, the structural relationship among the cellular components is reflected by a new codeword matrix under the error correcting output coding framework. Then, we construct multiple SC-PSorter-based classifiers corresponding to the columns of the error correcting output coding codeword matrix using a multi-kernel support vector machine classification approach. Finally, we perform the classifier ensemble by combining those multiple SC-PSorter-based classi-fiers via majority voting. Results: We evaluate our method on a collection of 1636 immunohistochemistry images from the Human Protein Atlas database. The experimental results show that our method achieves an overall accuracy of 89.0%, which is 6.4% higher than the state-of-the-art method. Availability and implementation: The dataset and code can be downloaded from https://github. com/shaoweinuaa/.
IntroductionOne important task in the research of proteomics is to explore the natural function of proteins in performing and regulating the activities of an organism at cell level (). It is widely recognized that the function of a protein is closely associated with its corresponding cellular compartments (). Proteins can only find their correct interacting molecules at the right place. Thus, subcellular location can provide important clues for understanding the function of a protein. With the breakthrough of genome sequencing and bioimaging techniques, traditional timeconsuming and expensive wet-laboratory experimental approaches cannot catch up with the speed of newly known proteins (). Hence, finding an automatic computational way to determine the subcellular locations of proteins has been becoming a focus in computational biology (). From the perspective of machine learning, this task can be transformed, where we first need to figure out a proper feature representation way for encoding the protein data, which then will be fed into a trained machine learning model for label decision. There are two major research categories depending on how the protein data are represented, i.e. one-dimensional amino sequence and two-dimensional image (). On one hand, if a protein is represented in amino acid sequence, PseAAC (), PSSM () and gene ontology () are among the applied sequence-based features. In the second step, various machine learning algorithms have been proposed. For instance, researchers in Yoon and Lee (2012) adopted a boosting framework to accomplish the classification task, and in, a random label selection method was presented to learn the label correlations from training dataset to guide the classification for multi-label proteins. On the other hand, accompanied with the explosive increments in genomic data, we witnessed great advances in automated microscopic imaging in recent years (). Because of the intuitive characteristics of images compared with amino acid sequence, bioimage-based protein subcellular distribution pattern analysis has attracted much attention. For example, it is found that image-based analysis can be successfully used to detect protein biomarkers, which will dynamically change their subcellular locations in the cancerous tissues (). If proteins are represented with two-dimensional images, e.g. through fluorescent or immunohistochemistry microscopy, the most widely used image features can be grouped into two categories, i.e. global and local features. For global feature, the DNA feature () is designed to characterize DNA distribution in a cell image. Since there is high co-occurrence of protein and DNA in a protein image, we can infer the relative position of protein according to the DNA distribution. Besides, Haralick feature based on db wavelet is another global feature to describe image texture such as inertia and isotropy, which is demonstrated to be robust to cell rotations and translations (). As to local feature, LBP () feature is the most frequently applied descriptor to characterize the spatial structure of images involving flat areas, edges and spots. Some extensions are also reported.constructed a mixed local feature set by adding two extensive forms of LBP, i.e. LTP () and LQP ().) applied the SURF feature to handle the classification problem in cell images. Considering different features will have their own advantages, a common strategy is to fuse multiple types of features. For instance, different features are concatenated as a long vector to perform the subsequent classification task (). Intuitively, since single type of features cannot reflect all the information of a protein image, fusing multiple types of features together is expected to be a more promising way. For learning algorithms design,applied neural networks to classify four protein types;proposed a probability-based support vector machine (SVM) to predict the subcellular location of proteins in human reproductive system. By considering a high ratio of human proteins co-exist at different locations,designed a multi-label classification classifier. Other efforts includeused a multiresolution approach, and logistic regression algorithm with latent variables was proposed inAlthough much progress has been achieved in designing different statistical classifiers, to the best of our knowledge, none of the existing image-based classifiers takes the biological cell structure information into consideration, which has already been demonstrated to be effective in solving biological sorting problems (). The basic hypothesis of existing predictors is to parallelly consider every cellular component class regardless of their organizations in the cell. It is expected that better performance will be achieved when we incorporate the cell nature component organization structure into the model construction. To enable the learned model to incorporate the subcellular component organization structure, we propose a new classifier learning approach by utilizing the error correcting output coding (ECOC) framework (). This new approach can decompose the multi-class problem into several binary classification problems according to the prior human cell structural information. The final decision will then be made by combining the results of these binary classifiers. In the new structure-driven learning approach, we first construct a codeword matrix to reflect the biological structure of cellular compartments with ECOC. Then, for each binary classifier corresponding to the columns of the ECOC codeword matrix, we use kernel combination method to fuse different types of features rather than the direct combination strategy. Finally, we perform the classifier ensemble by combining multiple classifiers via majority voting. The experimental results show that our method performs much better than several state-of-the-art methods, because the proposed approach has incorporated the cell structure prior knowledge into model generation.
Materials and methods
DatasetStarting from 2005, the researchers use the antibody-based technique to functional study of the human proteome and build the wellknown Human Protein Atlas (HPA) database (). In the recent 13th version of HPA database, 86% of human genome is involved. Specifically, 16 ;975 genes with 24 028 antibodies have been covered to 46 different normal human tissues and 20 different cancer types. In this study, we have generated a collection of 1636 immunohistochemistry images with high validation and objective scores () from HPA as our benchmark dataset. It contains 21 proteins related to 46 normal human tissues. And each image belongs to one of the seven most frequently appeared subcellular locations, namely, cytoplasm, Golgi apparatus, mitochondrion, vesicles, nucleus, endoplasmic reticulum and lysosome.summarizes the distribution of our dataset.shows the flowchart of our method, which consists of four major steps. First, we extract and select features from the given protein images. Then, we use ECOC method to transform the multiclass classification problem into a series of binary classification subproblems according to a pre-defined codeword matrix. Here, the codeword matrix comprised 14 bits. The first six bits are designed according to the biological structure of cellular compartments, which can bring more prior information to the learning process. And the other eight checking bits are used to strengthen the errorcorrecting ability of this ECOC-based model. Next, since db wavelet was employed to get the multi-resolution global feature (i.e. Haralick feature), we can construct 10 different SC-PSorter models based on different sets of features extracted from 10 vanishing moments of db wavelets. Moreover, for each SC-PSorter model, we construct 14 multi-kernel-based SVM classifiers corresponding to the columns of the ECOC codeword matrix. Finally, we perform the classifier ensemble by combining those 10 SC-PSorter-based classifiers via majority voting.
Feature extraction and selectionFor protein images, different types of features (i.e. global and local features) are expected to provide complementary information (). Therefore, we are encouraged to use both of the two types of features to describe protein images. Specifically, as to global feature, we select Haralick feature with 10 different vanishing moments from 1 to 10, then for each vanishing moment, an 836dimensional feature can be obtained. In addition, a fourdimensional global DNA feature is also incorporated due to their values in inferring the relative position of protein. As to local feature, we prefer to choose the most widely used LBP feature, which is constituted by a 256-dimensional vector. Hence, for every protein image, we can get a 1096-dimensional descriptor for each db wavelet if we directly combine them together. After that, to reduce computational time cost and avoid overfitting, we select the most distinguishing features by applying the stepwise discriminant analysis method ().
Error correcting output codingIn this article, our goal is to determine the subcellular location that a protein image belongs to. Since there are seven subcellular locations, this problem can be regarded as a multi-class classification problem. Nowadays, multi-class classification is an important issue in many machine learning domains, such as text classification (), and medical analysis (). There are two main lines to deal with such multi-class learning problems, including 'direct multi-class representation' and '(indirect) decomposition design'. The first line aims to design multi-class classifiers directly, such as neural network () and multi-class SVMs (). In contrast, the second line endeavors to first transform the original multi-class problem into several binary classification problems and then to combine the results of these binary classifiers for making final decision. As a typical indirect decomposition way to deal with multi-class problems, ECOC () is one of the representative methods. Specifically, there are three main steps in ECOC-based classification system, including (i) encoding, which decomposes the original problem into several binary classification problems; (ii) binary classifier learning and (iii) decoding, which makes a final decision based on the outputs of those binary classifiers. In the following, we will introduce each step in detail.
EncodingIn the encoding procedure, a codeword matrix M kl is employed to decompose the original multi-class problem into several binary subproblems. Here, the rth r  1; 2. .. k row of M (i.e.M r ) represents the codeword of the rth class, while each column of M denotes the new class label vector for each of original classes. The elements in each column of the codeword matrix can be set as 1, 0, and 1 in ternary ECOC encoding methods and 1 and 1 in binary ECOC encoding methods (). Below, we briefly introduce two typical ECOC encoding strategies including one-versus-all coding and the forest coding ().
1) One-versus-all codingIn this approach, k different binary classifiers are built, each of which learns to distinguish one class versus the others. In the codeword matrix, all of the diagonal elements are set as 1, while the others as 1. In Equation (1), we show a codeword matrix M kk using the widely used one-versus-all coding strategy, which transforms the k-class classification problem into k one-versus-all binary classification problems:::: ::: ::: :::2) Forest coding In this data-dependent coding strategy, the codeword matrix is completely determined by the partition of the dataset by using the decision tree algorithm. Here, when building decision tree, each node corresponds to the best bi-partition of the set of classes by maximizing the mutual information between different types of samples. The process is recursively applied until sets of single classes corresponding to the tree leaves are obtained.
Binary classifier learningThe second step is to train multiple binary classifiers based on the codeword matrixM. Specifically, a binary classifier is corresponding to a specific column of the codeword matrix, where the samples labeled as 1 are used as positive instances, and samples labeled as 1 are regarded as negative instances. It is worth noting that thoseinstances labeled as 0 will not be used for training the classifier in ternary encoding methods. Given a codeword matrix M that contains l columns, we then learn a total of l binary classifiers. In the literature, these binary classifiers are usually directly taken from many existing classifiers (e.g. SVM) ().
DecodingIn the decoding stage, given a new instance, we first calculate the output vector from the multiple binary classifiers, i.e. Hz  h 1 z;h 2 z;:::;h l z. Then, we need to find a decoding method that can transform the output vector into a specific target class label, through which the original multi-class classification problem can be solved ultimately. Currently, there are many decoding methods, such as Hamming distance (HD) decoding, Euclidean distance decoding and linear-loss weighted decoding (). Among various decoding strategies, HD is one of simple and effective decoding method. Accordingly, we use the HD to perform ECOC decoding in this article. Then, the predicted class label y of a testing instance z can be estimated through the followingwhere the testing sample z is assigned to label r if the output vector Hz is much closer to the rth row of the codeword matrix M in terms of HD, when comparing with the other rows of M.
ECOC coding with biological structural informationAs mentioned in Section 2.4, ECOC-based methods transform the multi-class classification problem into a series of binary classification sub-problems according to a pre-defined codeword matrix. Different designs of codeword matrix may lead to different partitions of original classes, which will affect the classification performance. Hence, the design of the codeword matrix is important for ECOC-based methods. On the other hand, it is highly recognized that the biological structural information () plays a crucial role in determining protein subcellular location. Intuitively, such structural information can be used to guide the codeword matrix design, which can bring more prior information to the learning process and boost the learning performance. Accordingly, we design a codeword matrix according to the hierarchical structure of cellular compartments. In, we illustrate the proposed codeword matrix by taking advantage of the cellular compartments structure shown in. As listed in, we derive six binary classifiers from this codeword matrix. Starting from roots, we use classifier h root to distinguish between three intra-cellular compartments and the other four secreted pathway-based compartments. Then, for the splits under inter-cellular compartments, we apply h intra to discriminate nuclear and cytoplasm internal node, a union of proteins in cytoplasm and mitochondrion. Similar to h intra , h cyto is another classifier that is applied to characterize the differences between cytoplasm and mitochondrion. Pointing to the right sub-tree of root node, since the main function of vesicle is to uptake and transport of materials within the cytoplasm, and lysosome is capable of breaking down all kinds of biomolecules, they can be categorized into metabolic functional compartments. Moreover, the main functions of Golgi apparatus and ER are modifying the proteins for cell secretion, so classifier h sp is applied to distinguish the cellular compartments having either metabolic or modified functions under the node of secreted pathway. Finally, h meta and h modi are also constructed to classify the compartments within the nodes of metabolic function and modified function shown in. In this work, we will mainly use this coding pattern to predict protein subcellular location under ECOC framework. Moreover, in the work by, they also utilize the biological structure information and then build a tree-based classifier to predict the sequence-based protein subcellular location. Here, we will compare our proposed ECOC-based method with the method byin Supplementary Section S5 in the Supplementary Material.
ECOC coding by adding checking bitsFrom the detailed analysis in Supplementary Section S4, it is worth noting that, although the codeword matrix shown infollows the biological structure shown in, it has no error-correcting ability for the HDs between pairs of codewords are too short (e.g. there is only 1 bit difference between the codewords under the nodes of cytoplasm, metabolic function and metabolic function). So, to strengthen the error-correcting ability of the codeword matrix shown in, we add eight checking bits for each codeword of cellular compartment (shown in) to enlarge the HDs between pairs of codewords. As listed in, the newly added eight checking bits are used for distinguishing different nodes or cellular compartments (e.g. c 1 is used to distinguish between modified function and cytoplasm-based proteins), which cannot reflect the hierarchical structure of cellular compartments in. So, after adding these eight checking bits, each cellular compartment is represented by 14 bits and the HDsHuman cell structure-driven model constructionbetween pairs of codewords are accordingly enlarged (e.g. the HD between the codewords under the nodes of Cytoplasm is enlarged from 2 to 4 if we add the eight checking bits).
Kernel combinationAs the second procedure in ECOC framework, binary classifier learning is also important for multi-class classification. To better make use of different kinds of features, we adopt a kernel combination method () to design each of multiple binary classifiers in ECOC. Specifically, for each dichotomy, we fuse both the global features (i.e. Haralick feature and DNA feature) and the local features (i.e. LBP) by a multi-kernelbased SVM classifier (). Suppose that we are given n protein images. Let x 1 i and x 2 i denote the global and the local feature of the ith sample, respectively, and their corresponding labels belong to f1; 1g. Multi-kernel-based SVM solves the following primal problem arg min w m ;b m ;eiwhere w m , b m and / m represent the normal vector to hyperplane, the weight value and the kernel-induced mapping function of mth type of feature, respectively. For a testing sample, its corresponding label can be obtained by the followingHere, k m is the kernel function of the mth type of feature induced by mapping function / m , with element.and(4), we can see that the multi-kernel-based SVM is an extension of single-kernel-based SVM, where the kernel matrix for multi-kernel-based SVM is a linear combination of its single kernel matrix on different types of features. The weight value b m m  1; 2; b 1 b 2  1 is applied to balance the importance between the global and the local features, which is determined by a coarse-grid search method (). Specifically, we first equally split training samples into 10 subsets and utilize nine of them to train a series of models to determine a b m m  1; 2 that can achieve the highest classification accuracy on the remaining one subset. Then, after getting the optimal b m m  1; 2, we can train a model for all of the training samples, thus the final effectiveness of this model can be evaluated by classification accuracy on the testing samples.
Ensemble classification methodAs can be observed from, db wavelet has 10 vanishing moments from db1 to db10. Accordingly, we construct 10 SC-PSorterbased classification models, with each one corresponding to a specific type of vanishing moments. Inspired by, we adopt a majority voting strategy to combine those SC-PSorter-based models together. Specifically, for a testing protein image z, if the ith (I  1, 2,.. . , 10) SC-PSorter model predicts that it belongs to the location c1 c 7, the vote for the cth compartment is added by one. Then, z is in the location with the largest vote-based on all of the 10 SC-PSorter models.
Experimental results
Experimental settingsIn previous works (i.e.), researchers use images from the same protein for training and testing via cross-validation. Following these works, in our experiment, we use the same cross-validating strategy. Specifically, we equally divide the images in each protein into five disjoint subsets, with four subsets used for training and the remaining subset used for testing. For all the proposing and comparing methods in this article, the SVM classifier is implemented by using LIBSVM toolbox (), with an RBF kernel and the parameter r is tuned from 0.9 to 2.1 at a step size of 0.1 by using grid search on the training data. Also, for each feature f i in the training set, a common feature normalization scheme is adopted, i.e. the normalized feature fthe maximum value of the ith feature in the training set. Also, the f max i value will be used to normalize its corresponding feature in the test set.
Results for combining different types of featuresTo evaluate the efficacy of using different types of features, we first perform experiments by only using one type of features(i.e. the global feature and local feature) and combining different types of features together (i.e. direct combine and kernel combine) to predict the targets of proteins. Here, we choose the one-versus-all coding strategy, with experimental results shown in. As can be seen from, on one hand, direct combination of different types of features will not lead to the improvements of prediction accuracies. In most cases, the classification accuracies for this combination strategy are between using global or local feature only. On the other hand, using kernel combination method to fuse different types of features is a much more effective way, where classification accuracies consistently outperform those methods based on one single type of features (i.e. global feature or local feature). However, even for the kernel combination strategy, the classification accuracies cannot achieve to 70% for all of the 10 db wavelets, which reminds us to replace the simple one-versus-all coding strategy with other coding strategies for further improving.
Results for different coding strategiesIn the second groups of experiments, we test the classification performances for three different coding strategies, namely, oneversus-all, forest and biological structural-based coding strategies (i.e. following the codeword matrix shown in), which are denoted as OVA-PSorter, F-PSorter and S-PSorter, respectively. Here, we also use kernel combination method to fuse global features (including both Haralick features and DNA features) and local features (i.e. LBP features) due to its superior classification performances in the first group of experiments.shows the classification accuracies by using all of the 10 db wavelets.As can be seen from, our proposed S-PSorter method consistently outperforms the other two methods (i.e. OVA-PSorter and F-PSorter), which shows the advantage of using the biological structure of cellular compartments to design the codeword matrix. On the other hand,indicates that F-PSorter achieves consistently better classification accuracies than OVA-PSorter. This is because F-PSorter constructs codeword matrix by maximizing the mutual information between different classes rather than the simple one-versus-all coding strategy used in OVA-PSorter. Moreover, we also compare the computational efficiency of different coding strategies in Supplementary Section S8.
Further improvement by adding checking bitsAs discussed in Section 2.6, we also add eight checking bits (shown in) to the codeword matrix of S-PSorter model to strengthen its error-correcting ability. Here, we denote two ECOC-based methods, whose codeword matrices are derived by adding these eight checking bits to the S-PSorter-based codeword matrix and only using these eight checking bits, as SC-PSorter and C-PSorter, respectively.presents the individual classification accuracies of the above two methods when comparing with S-PSorter method for all of the 10 db models. As can be seen from, on one hand, SC-PSorter consistently outperforms S-PSorter on all of the 10 db wavelets. This is because we enlarge the HDs between pairs of codewords, and thus a few mistakes in some bits can be corrected by the decoding procedure. On the other hand,also shows the classification accuracies of C-PSorter method are consistently inferior to the other methods, which is because these eight checking bits are just designed to distinguish different nodes or cellular compartments, and they do not reflect the hierarchical structure of cellular compartments shown in. (Detailed classification results are reported in Supplementary Section S4.)
Ensemble results with different coding strategiesAs shown in, for each method (i.e. OVA-PSorter, F-PSorter, S-PSorter and SC-PSorter), the classification accuracies from its individual 10 classifiers are different, which motivates us to utilize an ensemble strategy for better fusing the complementary individual decisions. Here, we use the majority voting strategy introduced in Section 2.8 to combine different classifiers together.compares the classification accuracies of the best individual classifier and the ensemble model for these 4 methods (i.e. OVAPSorter, F-PSorter, S-PSorter and SC-PSorter) As listed in, we can always obtain better classification accuracies when performing the classifier ensemble via majority voting.also indicates that the classification accuracy of our proposed SC-PSorter method is improved from the best individual classifier of 0.8600.890, which is the best overall classification accuracy among all of the four methods.a much more effective and flexible way than the direct combination strategy applied in the other two methods. We also compare the classification accuracies of the best individual classifier and the ensemble model for the above three methods. As listed in, for these three methods, we obtain better classification accuracies when performing the classifier ensemble via majority voting than the best individual classifier. On the other hand,also indicates that, by performing the ensemble strategy, the SC-Porter method achieves the best classification accuracy among all of the three methods. This result again validates the advantage of our proposed SC-PSorter method for prediction of protein subcellular location.
Diversity analysisFor the purpose of understanding how our proposed ensemble SCPSorter works, we endeavor to apply the kappa measure () to plot the diversity-error diagram, which evaluates the level of agreement between the outputs of two individual classifiers. In, we show the diversity-error diagrams of ensemble SC-PSorter and the methods in Xu et al. (2013) andfor the task of predicting protein subcellular locations. In our experiment, each ensemble contains 10 individual classifiers, with each corresponding to a specific classifier using different global db features. The value on the x-axis of a diversity-error diagram denotes the kappa diversity of a pair of classifiers in the ensemble, while the value on the y-axis is the averaged individual error of a pair of classifiers. Since a small value of kappa diversity indicates better diversity and a small value of averaged individual error indicates a better accuracy, the most desirable pairs of classifiers will be close to the bottom left corner of the graph. As shown in, our proposed ensemble SC-PSorter achieves much lower kappa value and much lower classification errors than the methods in. At the same time, our proposed SC-PSorter method is not as diverse as the method in, but apparently, it has more accurate base classifiers than the method in. It seems that our proposed method can achieve a better trade-off between accuracy and diversity than the compared two methods. That is, it builds a classifier ensemble based on the reasonable diverse but markedly accurate individual components.
Slight variations on tree structureWe design another two variants of the hierarchy of cellular compartments (i.e. T1 and T2 are shown in Supplementary Figs. S1 and S2 in Supplementary Section S1, respectively), which are constructed by making slight variations on the tree structure in. Specifically, on one hand, for the tree representation T1, we neglect the hierarchical structure of four cellular compartments (i.e. lysosome, vesicle, Golgi and ER) under the node of secreted pathway. On the other hand, for the tree representation T2, we misuse cytoplasm (which is originally under the node of intra cellular) as a metabolic functional compartment (under the node of secreted pathway). The classification results in Supplementary Table S3 in the Supplementary Section S1 shows that the slight variations on the tree structure inwill lead to decreases in the classification accuracies for all of the 10 db models when comparing with SPSorter method. Also, as can be seen from Supplementaryin the Supplementary Section S1, the ensemble classification results for these two tree representations (i.e. T1 and T2) are 0.866 and 0.842, respectively, which are still higher than those of previously published methods (i.e.), although a bit lower than our original S-PSorter method. These results suggest that the proposed tree representation inreflects the true hierarchy of subcellular compartments.
Prediction on unseen proteinsAs mentioned in Section 3.1, we use images from the same protein to evaluate the performance of SC-PSorter method. However, a strict test, i.e. recognizing subcellular patterns in new protein, is also very important. So we have added one more experiment to compare SC-PSorter method with the other two methods (i.e.) for predicting proteins that are not included in the training set (detailed in Supplementary Section S3). As can be seen in Supplementary Table S6, our proposed SCPSorter method consistently achieves better classification accuracies than the other two approaches for all of the 10 db wavelets. Moreover, when performing the classifier ensemble via majority voting, the classification accuracies for SC-PSorter,methods are 0.809, 0.684 and 0.603, respectively. This result again validates the advantage of our proposed SCPSorter method for the prediction of protein subcellular location.
ConclusionIn this article, we develop and test a novel prediction model, SCPSorter, for determining image-based protein subcellular locations. Specifically, we first devise a novel codeword matrix by considering the biological structural information under the ECOC framework, and then for each binary classifier corresponding to the columns of the ECOC codeword matrix, we adopt kernel combination method to fuse different types of features. Finally, we develop a classifier ensemble by combining multiple SC-PSorter-based classifiers via majority voting. In this study, our method has been shown effective in case of each protein corresponding to only one location. However, as a matter of fact, nearly 20% percentage of human proteins co-exist more than two locations (), and thus we will design a new method to solve this multi-label-based protein classification problem. Also, since different biomarker may provide complementary information for the prediction of protein subcellular location (), we will add non-image data (e.g. amino acid sequence) to our image-based predictor for further performance improvement.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
W.Shao et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Discussion 4.1 Comparisons with existing works We also compare our SC-PSorter method with several existing approaches for image-based prediction of protein subcellular location. For example, in Xu et al. (2013), the authors construct k SVM models where k is the number of classes. In training the ith SVM model, examples belonging to the ith class are seen as positive samples, while the other examples as negative samples. For a query protein image z, the output vector consists of k probabilities related to k different subcellular locations. We say z belongs to the class with the largest probability in the output vector. Different from Xu et al. (2013), the authors in Yang et al. (2014) construct k(k  1)/2 SVM classifiers where each one is trained from two different classes. Then, the testing sample z is fed into these k(k  1)/2 SVMs and these classifiers also output a probability denoting which class it belongs to. Here, the SVM classifier is implemented with RBF kernel and the parameter r is also tuned from 0.9 to 2.1 at a step size of 0.1 by using grid search on the training data. Figure 6 presents the individual classification accuracies of the above two methods when comparing with our proposed SC-PSorter method. As can be seen from Figure 6, our proposed SC-PSorter method consistently achieves better classification accuracies than the other two approaches. Here, the better classification accuracies of our method are mainly owing to the following two aspects: (i) since the prior biological information is crucial in computational biology, we use the biological structural information to guide the learning procedure and (ii) we apply the multiple kernel combination strategy to fuse different types of features, which is regarded as Fig. 4. Performance comparison among different coding strategies Fig. 5. Performance comparisons among S-PSorter, C-PSorter and SCPSorter methods
