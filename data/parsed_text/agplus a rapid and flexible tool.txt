Aggregation plots are frequently used to evaluate signal distributions at user-interested points in ChIP-Seq data analysis. agplus, a new and simple command-line tool, enables rapid and flexible generation of text tables tailored for aggregation plots from which users can easily design multiple groups based on user-definitions such as regulatory regions or transcription initiation sites. Availability and Implementation: This software is implemented in Ruby, supported on Linux and Mac OSX, and freely available at
IntroductionAggregation plots are frequently used to convert genome-wide chromatin immunoprecipitation-sequencing (ChIP-Seq) data into a simple curve of averaged ChIP-Seq signal intensities at user-interested points (anchor points), such as regulatory sequences (). Aggregation plots allow differences in the signal distribution among different ChIP-Seq data to be assessed intuitively. Many ChIP-Seq data analysis toolkits include software for the creation of aggregation plots, including HOMER, bwtools, CGAT, ngsplot and HTSeq (). These software are designed to analyze transcription start sites (TSSs), transcription factor binding sites (TFBSs), exon-intron structures, etc. For example, ngsplot takes a configuration file of gene sets with corresponding raw data to produce a visual of different ChIPSeq signal distributions at gene loci. More recently, ChIP-Seq applications have begun to offer diverse purposes for aggregation plots. However, user definitions of the anchor points required for aggregation plots are not trivial, e.g. comparisons of the signal distribution of transcription start sites around different gene sets (gene ontology database or a set defined by their gene expression profile data) or regulatory regions (promoters, enhancers or other non-coding region). Therefore, a simpler tool for loci definitions and grouping tasks is preferred. Here, we introduce agplus, a flexible tool designed for the creation of aggregation plots using various points of user interest.
Featureagplus was implemented in Ruby to calculate the average signal intensity (aggregated signal) around specific anchor points from ChIPseq data. agplus calculates the average signal intensity of the 'target' signal at each 'reference' region group as defined by an 'assignment' table, therefore agplus script requires reference, target and assignment files. The reference file defines the anchor points of user interest, e.g. gene loci or regulatory regions. The file should be in BED6 format (6 columns BED), since the names and strand information are needed for the calculation. The target file should be in wiggle or BED format with a scores field. The assignment file is a simple tab-delimited, two-column text file. The first column holds the reference name defined in the reference file and the second column holds an arbitral group name of the references. The assignment file defines a group of anchor points, e.g. gene loci corresponding to gene ontology or gene expression levels against a RefSeq gene list, which is used as a reference file. The assignment file is therefore what gives the benefits of agplus. The output file is a tab-delimited text table of averaged signal intensities in each group per 1 base pair. The output file can be easily handled in subsequent analysis using gnuplot, R, Matlab MS Excel, etc. The fast processing time of agplus comes from bedtools (), which agplus internally uses to calculate overlaps between the target and reference files.
Usage and applicationsThe installation places scripts anywhere. Ruby (version > 2.0) andBEDTools are required to be in the $PATH environment. The target file is a single wiggle or BED format with scores field and converted through bam2bwshifted to support the bam file. The assignment file should be a single file, and assignExprGroup supports the gene expression profile of mRNA-Seq data generated by cufflinks (). The script generates an assignment file of gene groups divided by 10 percentile expression levels (default interval length), as shown in. The drawing of a smoothed average signal intensity using the output table of agplus is supported by agpdraw-line. The supporting utilities of bam2bwshifted requires SAMTools () to count read numbers and UCSC's wigToBigWig () for format conversion. agpdrawline requires R to smooth and draw curves. The basic procedure to create an aggregation plot from mapped reads (bam) (Step 1 generates an optimal target file for the aggregation. The output file, sample-shifted.bw (bigWig; compressed wiggle format), holds reads per million-normalized () counts of the mid-point of the mapped DNA fragment on the genomic coordinate. This file conversion step reduces the intermediate file size and processing time of subsequent calculations by agplus. Step 2 decompresses the bigWig file such that the target file can be used for agplus. Step 3 aggregates the read counts in the target file by the groups defined in the assignment file at the anchor-points defined in the reference file. The '-d' option sets the position of the anchor points relative to the reference, and can be either of start (left-most), end (right-most) or center, i.e. '-d start' uses TSSs as center when the RefSeq gene is the reference. Step 4 generates a PDF file of the aggregation plot, in which curves range from bp from to bp to. The total computation time of these four steps to obtain the result oftakes 4 min under our computational environment (Intel(R) Xeon(R) CPU E5-2687 W on x86_64 GNU/Linux). As an option, control_aggregated.txt can be supplied with '-c' to correct the bias of input DNA. The generated curve reports the average density of the reads aggregation, i.e. summation makes total RPM within 1 kb from the anchor points. The same procedure is also applicable to estimate nucleosome densities from MNase-Seq data.
ConclusionWe have developed agplus, a tool that enables rapid and flexible creation of aggregation plots. This tool is expected to reduce effort and time for aggregation-style analysis by ChIP-Seq users.
2000
V C The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
