The biomedical literature is a knowledge-rich resource and an important foundation for future research. With over 24 million articles in PubMed and an increasing growth rate, research in automated text processing is becoming increasingly important. We report here our recently developed web-based text mining services for biomedical concept recognition and normalization. Unlike most text-mining software tools, our web services integrate several state-of-the-art entity tagging systems (DNorm, GNormPlus, SR4GN, tmChem and tmVar) and offer a batch-processing mode able to process arbitrary text input (e.g. scholarly publications, patents and medical records) in multiple formats (e.g. BioC). We support multiple standards to make our service interoperable and allow simpler integration with other text-processing pipelines. To maximize scalability, we have preprocessed all PubMed articles, and use a computer cluster for processing large requests of arbitrary text. Availability and implementation: Our text-mining web service is freely available at http://www. ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/tmTools/#curl Contact: Zhiyong.Lu@nih.gov
IntroductionManaging the rapid growth of biomedical knowledge buried in text such as literature, medical records and patents makes the development of automated text-mining technology increasingly important. For instance, the biomedical literature contains the latest reports of scientific discoveries, but is represented in a highly unstructured format. Many text-mining systems have thus been developed in recent years to help unlock this information, both for information retrieval and for novel computational analyses. Text-mining approaches to automatically recognize and extract key biological concepts are of particular interest as this task is often considered to be a building block for many integrated and sophisticated information extraction and retrieval solutions. Over the years, a number of biomedical named entity recognition (NER) tools have been developed. The entities targeted include genes/proteins (), chemical/drug (), disease (), sequence variation () and species/taxonomy(). To use these tools, and in particular integrate them into existing pipelines, one has to install the software and address many issues including 'lack of modularity, operating system incompatibility, tool configuration complexity, and lack of standardization of interprocess communications' (). Web-based text mining services provide an alternative solution where the details of the tool are hidden from users and no system installation or maintenance is required. Although one can access text-mining applications like Reflect () and MyMiner () through web page visits, we are only aware of a few that offer programmatic web APIs and can therefore be integrated easily: Whatizit (), BeCAS (), Cocoa (http://npjoint.com/) and Acromine (). In comparison to these tools, our web services are unique in several aspects: (i) the entity taggers used offer highly competitive performance in benchmarks for both mention and concept level results, typically via hybrid systems, as opposed to use dictionaries in the previous systems; (ii) for system scalability, our method allows immediately with a unique session ID, which can be used to check the processing status. Once finished, the user can use the same session ID to retrieve the result, as shown in. The text-mining output can be directly visualized using PubTator as shown inwhere computer-tagged entities are highlighted in various colors throughout the document. To improve system interoperability, we support multiple formats including BioC/XML (), PubTator/TXT () and PubAnnotation/JSON (). By doing so, our service becomes interoperable for different applications. To simplify programmatic access to our web services, we also provide sample client code in Perl, Python and Java.
UsageSince the inception of our web services on March 31, 2015, millions of requests have been made, primarily through the HTTP GET access mode. From interactions with some of our users, we learned that the results of our text-mining services are being used in many different research areas from biocuration, to crowdsourcing, to translational bioinformatics. For instance, our web services are used to provide initial annotations for the mark2cure crowdsourcing project (https://mark2cure.org/) and our gene tagger results are used in assisting the daily curation of HuGE navigator () a knowledge base for human genome epidemiology.
Discussion and ConclusionWe previously developed a number of high performance NER tools and made them open source for public use. In this work, we provide a new way to access these tools in an interoperable and scalable manner, making it simpler to integrate them into complex customized systems. Our format can be converted to new formats like Open Annotation () via existing converter. Since providing instant access to the tagged results of PubMed abstracts is(DNorm (Disease) 78.20% (tmVar (Mutation) 93.98% (Computer cluster RESTful API curl-H "content-type:applicaon/json"-d '{"sourcedb":" MedicalRecord","sourceid":" 1000001","text":"Paent was seen iniially in the Emergency Department aaer presenng with melena on exerron ."}' hp://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/DNorm/Submit/ curl-H "content-type:applicaon/json" hp://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/5257-1478-9472-7177/Receive/ {"sourcedb": "MedicalRecord","text":"Paent was seen iniially in the Emergency Department aaer presenng with melena on exerron .","sourceid": "1000001","denotaons ":[{"obj": " Disease:MESH:D008551","span":{"begin":77,"end": 83}}]} curl-H "content-type:applicaon/json" hp://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/Disease/26196251/JSON/ {"text":"Breast cancer: Oophorectomy for BRCA1 ER-negave disease-an open debate. ","sourcedb": "PubMed","sourceid": "26196251","denotaons":[{"obj":"Disease:D001943 ","span":{"begin":0,"end":13}}]} A. Overview of the NCBI text-mining web services. The overall architecture is provided on the left while system input/output is shown on the right an extremely useful feature of the current system, we plan to include preprocessed results of PMC full text articles in the future.
Submit
Bioinformatics, 32(12), 2016, 19071910 doi: 10.1093/bioinformatics/btv760 Advance Access Publication Date: 16 February 2016 Applications Note at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from users to submit multiple documents in a single request (instead of one per request) and we process these batch requests using a computer cluster when needed. Moreover, articles in PubMedthe most common target document typeare preprocessed and handled specially so that their tagged results can be instantly retrieved and (iii) for system interoperability, we support multiple formats including BioC, a recently proposed XML format for BioNLP research (Comeau et al., 2014) that complements several other existing platforms such as UIMA (Kano et al., 2009). 2 Materials and Methods Figure 1 describes the overall architecture of our web services, which use standard HTTP method calls (often known as RESTful services) and allow two access modes: (i) a batch-oriented processing function for any raw text input (abstract, full text, patent, etc), submitted via HTTP POST and (ii) instant retrieval of pre-tagged results of PubMed abstracts via HTTP GET. For the batch-processing function, users may submit one or multiple documents per batch, and large requests will be sent to a computer cluster for parallel processing. When retrieving pre-tagged results of PubMed abstracts, the request only requires the PMIDs of the requested abstracts. This option is provided because annotating biomedical literature is the most common use case for such a text-mining service. From a technical standpoint, the preprocessing is made possible by our previous system PubTator (Wei et al., 2013a), which stores text-mined annotations for every article in PubMed and keeps in sync with PubMed via nightly updates. We show in Table 1 the five entity types we currently support, along with their associated tagger and respective benchmarking performance (tmChem for chemicals, SR4GN for species, DNorm for diseases, tmVar for mutation/variations, GNormPlus for gene/proteins). Figure 1 shows one example for each access mode. For instance, the disease tagger (DNorm) is being requested to process a text via the RESTful API using our JSON format. Once the request is submitted, our web service responds
C.-H.Wei et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
