The search for short words that are absent in the genome of one or more organisms (neverwords, also known as nullomers) is attracting growing interest because of the impact they may have in recent molecular biology applications. keeSeek is able to find absent sequences with primer-like features, which can be used as unique labels for exogenously inserted DNA fragments to recover their exact position into the genome using PCR techniques. The main differences with respect to previously developed tools for neverwords generation are (i) calculation of the distance from the reference genome, in terms of number of mismatches, and selection of the most distant sequences that will have a low probability to anneal unspecifically; (ii) application of a series of filters to discard candidates not suitable to be used as PCR primers. KeeSeek has been implemented in C++ and CUDA (Compute Unified Device Architecture) to work in a General-Purpose Computing on Graphics Processing Units (GPGPU) environment.
INTRODUCTIONIn the recent past, different methods for finding non-existing sequences in genomes, previously called 'nullomers' or 'unwords', have been proposed (). Though nullomer definition is accepted, the term may be confusing and evocative of a k-mer of 'null' length. For this reason, we propose 'neverwords' to indicate strings that do not exist in a genome. Such neverwords have been proposed for the following aims: (i) studies of population genetics, species identification and evolution; (ii) drug discovery and development; (iii) target design for recalling or eliminating genetically engineered organisms (e.g. suicide targets); (iv) design of molecular barcodes () or specific adaptors for PCR primers [e.g. for the detection of viral insertion sites in host's genomes (. The algorithms proposed so far for neverwords generation are only focused on the detection of absent words in genomes, without providing any information about their distance in terms of number of mismatches. This additional information is crucial when such k-mers are used as barcodes or PCR primers: for these purposes, ideal neverwords must be distant enough to any position of the reference genome and must possess 'primer-like' features. Here we present keeSeek, software developed for the design of distant k-mers that can be used as barcodes or PCR primers. keeSeek allows the user to generate, for any reference genome, a set of k-mers absent in that genome, selecting a desired length and a minimum number of mismatches along all positions of the reference. The advantage versus previous tools is the capability to produce longer sequences (results were obtained up to the length of 31 nt) and, most importantly, to provide information about the number of mismatches and the position of the best match in the reference. In addition, a set of filters has been implemented to select only k-mers with primer-like features. The algorithm is written in C++ and CUDA, to exploit the high parallelization provided by Graphics Processing Units (GPUs).
METHODS
K-mers generation:Here we report the example and test of 20-mers. Because the number of different k-mers of length l that can be generated using four symbols is 4 l , the amount of 20-mers that must be tested when looking for the most distant candidate compared with a reference genome is in the order of 10 12. By default, keeSeek starts with the generation of all the possible k-mers of a defined length. Alternatively, the user can define a priori the nucleotide composition of the k-mer: if the goal is a primer sequence, a good balance among the different nucleotides should provide better chances to generate complex k-mers. Starting from the base composition selected by the user, keeSeek will generate and test all possible anagrams that can be obtained by permutating nucleotides. The total number of combinations of a 20-mer made of 5A, 5T, 5C and 5G drops from 4 20 to 11 732 745 024. K-mers filtering: for some purposes, as primer design, the reduction of the combinatorial complexity is obtained by filtering k-mers according to a set of criteria, instead of testing all of them. Filtering is performed on the basis of sequence complexity, conformity of 3 0-terminals, detection of long homopolymers, melting temperature and the tendency to generate hairpins and duplexes (see details on Supplementary File S1.3). These filters are applied by default in the 1626 range of lengths, but they can be disabled if the aim is the exhaustive generation of neverwords. After the filtering step, potential candidate 20-mers of composition 5A-5T-5C5G are further reduced to 139 090 688. K-mers evaluation: each k-mer is searched against both strands of the reference genome, to evaluate its presence/absence and the minimum *To whom correspondence should be addressed. number of mismatches. Because the tool is aimed at primer-like k-mers, the search is ungapped, allowing the implementation of an algorithm linear in space and time (see Supplementary File S1.1 for details). We encode both the reference and the k-mer using a compressed binary representation in blocks of 64 bits and, by using a sliding window, each candidate is then compared with all reference positions within the blocks; because the target architectures provide 64 bit registers, differences can be computed using fast bitwise operators. By combining the minimal number of mismatches among all the blocks through a multithreaded reduction, the overall minimal distance between the k-mer and the genome is calculated (see details on Supplementary File S1.1). This step is computationally intensive and has been optimized to run on GPUs, taking advantage of hundreds or thousands computing cores. Because the number of k-mers to test is huge (exponential in k), the anytime nature of the algorithm provides the user valuable suboptimal solutions in reasonable time. K-mer generation is memoryless but ordered, so that the tool can be stopped and restarted from the last generated k-mer, continuing the scan of new candidates.
RESULTSWe have assessed keeSeek on three model organisms, Mycobacterium tuberculosis, Arabidopsis thaliana and Homo sapiens, and at different word lengths, up to 31 nt.reports, for each reference genome, a small panel of 20-mers with a minimum distance of three mismatches and the relative computational time required to generate them. The results were validated by searching them with a thirdparty tool, glsearch (), based on the Needleman and Wunsch algorithm (). Additionally, a comparison of searching times between GPU and CPU implementations has been performed ().Note: Each nullomer was generated in an independent run of the algorithm, using the 'anagram mode': we started by defining an equal distribution of the four nucleotides (5A, 5T, 5C and 5G), and we reshuffled the anagrams starting from a random seed (-R 0). One of the nullomers with the highest distance from the respective reference genome is shown for each run. Times refer to the first block of 128 evaluated k-mers (see Supplementary File S1.6 for details) obtained on a Tesla GPU M2050. Loading of the genome is not considered.. Computational times required to search for a sequence of length 20 on three selected genomes, obtained by running the GPU implementation of keeSeek (default options), its multithreaded CPU version (-N option) and glsearch algorithm. The y-axis is in logarithmic scale. See Supplementary File S1.7 for additional details
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
CONCLUSIONS keeSeek is a tool developed for the generation of non-existing words we call neverwords with a minimum selectable distance from a reference sequence. The tool is optimized for the production of PCR primer-like sequences of different lengths suitable for use in molecular biology. keeSeek can also find useful applications in experiments of targeted genomic manipulation such as those based on zinc finger nucleases, Transcription Activator-Like Effector Nucleases (TALEN) and Clustered Regularly Interspaced Short Palindromic Repeats (CRISPRs) (Gaj et al., 2013).
KeeSeeK: finding neverwords at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
M.Falda et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
