Motivation: Sequence alignment is one of the most popular tools of modern biology. NCBI's PSI-BLAST utilizes iterative model building in order to better detect distant homologs with greater sensitivity than non-iterative BLAST. However, PSI-BLAST's performance is limited by the fact that it relies on deterministic alignments. Using a semi-probabilistic alignment scheme such as Hybrid alignment should allow for better informed model building and improved identification of homologous sequences, particularly remote homologs. Results: We have built a new version of the tool in which the Smith-Waterman alignment algorithm core is replaced by the hybrid alignment algorithm. The favorable statistical properties of the hybrid algorithm allow the introduction of position-specific gap penalties in Hybrid PSI-BLAST. This improves the position-specific modeling of protein families and results in an overall improvement of performance. Availability: Source code is freely available for download at
INTRODUCTIONSequence alignment is one of the most commonly used tools in modern biology. The BLAST () and PSI-BLAST () algorithms have become standard tools for homology detection. In particular, PSI-BLAST () iteratively refines models for a protein family of interest with the goal of working toward the detection of weaker or more distant homologs. The detection of deeper evolutionary relationships can impact many aspects of biology such as the broadness of evolutionary studies (), the quality of gene annotations (), protein structure/function predictions () and our understanding of genes found in metagenomic surveys (). Improving PSI-BLAST has the potential to affect a large number of users and scientific applications. * To whom correspondence should be addressed.The idea behind PSI-BLAST, or Position Specific Iterated Basic Local Alignment Search Tool, is to leverage information from identified homologs to create a position-specific substitution matrix that can then be used to detect even more distant homologs (). These searches take place in an iterative fashion by using homologs identified in the previous round for the model building phase where the position-specific substitution matrix is refined for the next round. While this method increases the sensitivity of the subsequent searches, the BLAST core imposes a severe limitationnamely, an inability to incorporate position-specific gap costs. This limitation stems from the inability to statistically assess the significance of alignment scores with position-specific gap costs on practical timescales. Here, we overcome this limitation by replacing the alignment core of PSI-BLAST by the semi-probabilistic hybrid alignment algorithm (). This algorithm's main advantage over the alignment core of NCBI PSI-BLAST is its statistical tractability, particularly with regards to position-specific gap costs (). In effect, Hybrid alignment introduces to PSI-BLAST one of the advantages usually reserved for profile Hidden Markov Models (). The Hybrid PSI-BLAST software, which we present here, incorporates the hybrid alignment algorithm for both homolog detection and model building, thus allowing the use of position-specific gap costs that were previously unfeasible. We show that Hybrid PSI-BLAST represents an improvement to the overall sensitivity and selectivity of homolog detection in comparison to NCBI PSI-BLAST.
METHODSHybrid PSI-BLAST has been developed in several steps. Here, we will focus on novel features, most notably the use of position-specific gap costs, and not repeat details already discussed in previous publications. However, we refer the interested reader to References () for more information on the hybrid alignment algorithm (), its use in building positionspecific substitution matrices () and the incorporation of information about suboptimal alignments into the model building (). Since even the discussion of these newly implemented features is rather lengthy and technical, the reader most interested in the outcome of these is invited to skip directly to the Section 3. The full Hybrid PSI-BLAST algorithm consists of essentially two major componentsHybrid Similarity Search and Hybrid Model Building. We thus discuss the details of each below. Many of the implementation details depend on the choice of parameters such as cutoffs and other constants. We choose these parameters by
Y.Li et al.optimizing the retrieval performance of the algorithm on a training dataset. In order to evaluate the performance of our remote homolog detection, we use SCOP () that classifies sequences based on the relatedness of their protein structures. Specifically, we use for parameter optimization the ASTRAL40 subset of SCOP version 1.69 (7024 sequences) which contains sequences with less than 40% sequence identityensuring that evaluation is based on the ability to detect remote homologs. These parameters were then frozen and the performance of Hybrid PSI-BLAST was compared with that of NCBI PSI-BLAST (see Section 3) on an independent test dataset derived as the non-overlapping portion of ASTRAL40 version 1.75 (4974 sequences).
Hybrid similarity searchThe goal of this phase is the identification of homologous sequences for inclusion in future model building phases. Since the gapless version of the hybrid and the classical SmithWaterman algorithm () are identical, Hybrid PSI-BLAST retains the word search heuristics of NCBI BLAST () for narrowing the list of candidate sequences. The full hybrid alignment algorithm is then used on these candidate sequences to determine whether or not they are homologs. The hybrid alignment algorithm () was so named because it contains features of both deterministic () and probabilistic alignment algorithms (). In particular, this semi-probabilistic algorithm measures sequence homology according to the maximum log-likelihood score:where Z i,j is the probabilistic likelihood score at sequence alignment positions i and j, and M and N represent the subject and query sequence lengths, respectively. Then, as in the case of deterministic alignment, the maximum score is used as the basis for evaluating sequence homology. The significance of these scores can be assessed by using the same universal distribution derived for the case of gapless local alignment ()where K and  are the typical mode and tail parameters of the extremal distribution (). However, in the case of hybrid alignment, we know a priori that  = 1 for appropriately chosen scoring weights even in the presence of position-specific gap costs ()a fact that we will exploit in this work. [The same feature is also known for profile Hidden Markov models (Thus, only the value of K needs to be evaluated in order to assess the statistical significance of our sequence hits.
Model buildingThere are a number of aspects to model building: choosing sequences to include in the model, weighing the contribution of each sequence appropriately and finally generating the position-specific scoring matrix (PSSM) that will act as the query in the next round.
Choosing sequencesSequences to be included in the model are chosen based on an E-value cutoff. In order to calculate E-values using Equation (2), the parameters K and  have to be known. While  = 1 is fixed, K depends on the scoring system. Thus, we recalculate the value of K in each round based on the new search model. More specifically, we use the island method () which determines the value of K from aligning random sequences of length 2000 amino acids to a model of length 2000 generated by concatenating several copies of the new search model. The length of 2000 is chosen in order to minimize edge effects. The number of such alignments is dynamically adjusted such that a statistical error of 5% on the estimated value of K is achieved. Similarly, the island method is used to estimate in every round the parameters H and  (), which are used to correct the length dependence of the E-values (). The actual choice of the inclusion threshold has to be empirically determined. A higher value will allow detection of more homologs but also increases the risk of model corruption by inclusion of false positives. After trying several cutoffs in steps of factors of 10, we settled on a cutoff of 0.0001. The fact that this is lower than the default cutoff of NCBI PSIBLAST (0.005) is a reflection of the fact that the more detailed models with variable gap costs recognize homologs even at a smaller threshold. While the database search itself is not much more computationally expensive using the hybrid algorithm than with the SmithWaterman core, model building can become a major computational bottleneck if a very large number of homologs of the query are found. In order to avoid this bottleneck, we set an upper limit of 500 sequences that are included in the model building. If less than 500 homologs are found, all are used for model building. If more than 500 homologs are found, 500 of them are randomly sampled from the total list of homologs. Using this cutoff ensures that the computational load of Hybrid PSI-BLAST remains similar to that of NCBI PSI-BLAST. In practice, our version of Hybrid PSI-BLAST is about 23 times slower than NCBI PSI-BLAST on the same hardware. Lastly, the ends of the sequences to be included in the model building have to be determined. It is important to focus only on highly scoring subsequences since otherwise residues are included in model building that are irrelevant for the protein family in question which can lead to the inclusion of nonhomologs in the model in later rounds. SmithWaterman alignment directly provides a beginning and end of its high scoring path. In hybrid alignment, the end is still well-defined but there is no beginning of the path. Instead of a hard beginning, there is a probability at each model position that the high scoring alignment has already started. For the purpose of model building, we define the beginning of the alignment to be the position where this probability exceeds 0.95 for the first time. In order to minimize contributions from neighboring domains to the model for the next round, we shorten the so determined sequence by three amino acids on each end.
Sequence weightingSince the sequence weighting algorithm in the original PSI-BLAST is based on the multiple alignment which in turn is a result of the SmithWaterman algorithm, we had to develop an alternative sequence weighting scheme that is based on the quantities provided by the hybrid algorithm. In developing this weighting scheme, we strive to stay as close as possible to the intent of the NCBI PSI-BLAST weights, i.e. prevent sample biases in the database from dominating the query models (). The quantity calculated from the SmithWaterman multiple alignment in the original PSI-BLAST is the weighted number of times an amino acid A occurs in column j of the multiple alignment, which yields the normalized frequency q j,A of amino acid A at model position j. This quantity is later used to determine the substitution score for amino acid A at position j. In the original PSI-BLAST, its initial value q j,A is calculated by summing the weights of all sequences that contain the amino acid A at position j of the SmithWaterman alignment with the query PSSM. Especially if the number of sequences in the multiple alignment is small, a matrix derived directly from the q j,A may overfit the data. Thus, NCBI PSI-BLAST calculates the final frequencies using the pseudocount approachHere,  j is a measure of the number of sequences in the multiple alignment at position j which is calculated by the sequence weighting algorithm and  s is the (substitution) pseudocount constant that has been chosen by the NCBI group () for optimal retrieval performance. The pseudocounts g j,A themselves are calculated from the raw counts q j,A by using the original non-position-specific matrix, such as BLOSUM62, for estimating the probabilities of seeing an amino acid substitution.
Page: 33 3137
Hybrid PSI-BLASTIt is fairly natural to switch most of the model building process from SmithWaterman alignments to hybrid alignments and take advantage of the information buried in suboptimal alignments. Instead of simply counting how often an amino acid A occurs in column j of the SmithWaterman multiple alignment, we use the posterior probabilities Pr(A,j,X|) of finding amino acid A in sequence X at column j of the multiple alignment under the protein family model. These probabilities can be readily obtained from the results of the forward and backward algorithms [the details of which can be found in (where f M i,j and b M i,j are the forward and backwards match weights at positions i and j in the subject and query sequences, respectively, and Z s E ,m E is the likelihood score satisfying Equation (1). Summing these over all sequences and normalizing yieldsIf the optimal alignment between sequence X and model is dominant, its probability will be the leading term in Pr(A,j,X|). In this case, Pr(A,j,X|) has a single peak that is close to 1 for the amino acid A appearing in the optimal alignment and 0 for the other 19 amino acids. Thus, we simply 'count' the dominant amino acid in this position in the same way as done in the original PSI-BLAST. Otherwise, the distribution of Pr(A,j,X|) is flatter. A single sequence will contribute more than one amino acid to the multiple alignment at column j albeit with a reduced weight reflecting the uncertainty of the alignment at this position. The goal of the weighting scheme is to calculate for every position j of the PSSM an effective number of sequences  j to be used in the pseudocount Equation (3) and a weight w X,j for each sequence X. In the original PSIBLAST, only sequences that have a match or mismatch at position j are used to calculate these quantities for position j, i.e. sequences with a gap at position j or the local alignment of which starts past position j or ends before position j do not contribute to these quantities. In addition, only the columns of the multiple alignment from an interval [l j ,r j ] contribute in which none of the sequences that contribute have a gap or end. In hybrid alignment, gaps and beginnings of alignments are not well defined but rather probabilistic in nature (the end of an alignment is, however, still well defined). Thus, we first introduce the probabilitythat sequence X has any amino acid at position j in the probabilistic alignment (i.e. the complement of the probability that sequence X has a gap or not yet started or already ended at position j). We then introduce an arbitrary cutoff  = 0.95 and treat sequences with t X,j > as having an amino acid at position j and the others as not having an amino acid at position j. This allows us to defineas the set of sequences relevant for position j. The boundaries of the interval of positions relevant for position j then are given bythat is, they are the maximal choices of columns surrounding position j between which all of the sequences relevant for position j have at least probability  for an amino acid. In order to calculate the weight w X,j for sequence X at position j, we first calculate the 'frequencies'of amino acid A at position k for all sequences that are relevant at position j. These are determined for all positions k = l j ...r j. Following the original PSI-BLAST weighting scheme, the contribution of amino acid A at position k is the inverse of the frequency f j,k,A of this amino acid times the inverse of the total numberof amino acids that occur at all at position k. Since the Pr(A,k,X|) determine the probability of seeing amino acid A at position k in sequence X, the total weight g j,k,X contributed by position k to sequence X is(which we take to be zero if f j,k,A = 0 which implies Pr(A,k,X|) = 0). Since sequence X contributes to the alignment at position k with probability t X,k , the total weight for sequence X  X j at position j is proportional toThe unnormalized weights w X,j of sequences X  X j that are not relevant for position j are set to zero. Finally, the actual weights w X,j are calculated from the w X,j by normalizing them at each position j. In order to calculate the effective number of sequences  j at position j, we first determine the diversity D j of each position j. In the original PSIBLAST, the diversity is the number of different amino acids that occur in this column of the multiple alignment. We replace this by the number of different amino acids that are the highest probability amino acid at position j within their sequence for all relevant sequences X  X j. In order to calculate  j , the diversities are averaged over all positions k between max{j 5,l j } and min{j +5,r j }, i.e. over all positions from the relevant interval but no further away from j than five (the original PSI-BLAST weighting scheme uses the whole interval [l j ,r j ] but we found that further restricting the number of positions over which to average gives better results).  j is obtained by subtracting one from this average, since an average of one corresponds to all relevant sequences agreeing with the query sequence in which case no additional information can be retrieved from the identified homologs at this position. Thus, just like in the original PSI-BLAST weighting scheme,  j is a number between zero and the alphabet size minus one. Given the sequence weights w X,j and the effective numbers of sequences  j , the raw 'frequencies' are determined asEquation (3) is applied to determine the final frequencies q j,A which, in turn, are used to calculate the new PSSM.
PSSMThere are two major parts to determining the PSSM: the amino acid substitution, i.e. match or mismatch, and the gap, i.e. insertion or deletion, weights. The substitution weights are dealt with in a similar way to NCBI's PSI-BLAST () with the inclusion of amino acid probabilities instead of a discrete alignment, and has already been described in detail by. Therefore, here we will focus on the inclusion of position-specific gap costs. The main advantage of using the hybrid algorithm is that it allows positionspecific gap costs in a natural way. In order to use position-specific gap costs, the PSSM has to be extended to include the substitution weight  j and the gap weights j for every model position j. Correspondingly, the implementations of the (forward and backward) hybrid algorithm have to be modified to use these position-specific gap weights instead of the constant weights derived from the gap penalties supplied by the user. During the first round of the iterative process, the additional parameters of the PSSM are initialized from the gap initiation cost  and the gap extension cost supplied by the user. Specifically, they are calculated () from the two parameters   exp
Y.Li et al. ug is the easily computable Gumbel parameter in the absence of gaps (), aswhere transition probabilities are represented by  j , respectively. Since we disable the transitions between insertion state and deletion state, other transitions from node j to node j +1 are I j  M j+1 , D j  M j+1 and D j  D j with the corresponding transition probabilities , respectively. The transition I j  I j loops at node j. A detailed description of the hybrid alignment algorithm and of its parameters can be found in Li (2006). Note, that probability conservation requires in the framework of hybrid alignment that the weight for a gap initiation is split into the two pairs of contributions, respectively. The major question is how to choose these parameters in the subsequent iterations based on the subject sequences identified in the previous rounds. A straightforward approach to answer this question is closely modeled after the determination of the substitution scores in the PSSM. From the results of the forward and backward algorithm, we can calculate for each sequence X and each position j the probabilitythat an alignment exists at position j and has a substitution at position j, the probabilitythat an alignment exists at position j and has an insertion at position j, and the probabilitythat an alignment exists at position j and is the beginning of a deletion. The new parameters  j , j which encapsulate the relative weights of substituting, having an insertion or starting a deletion at position j should then be proportional towhich means we can assignThe other weights are slightly more difficult to calculate. The deletion extension weight  D can be derived from the probabilitiesthat the alignment of sequence X has a deletion at position j and extends it and the probabilitiesthat the alignment of sequence X is in the deletion state before position j. Since  D represents the probability of extending a deletion conditional on being in a deletion, the new weight can be derived by dividing the total probabilities, i.e. aswhere q j, D and q j, D are calculated according Equation (19) forCalculating the insertion extension weight,  I is different from calculating the deletion extension weight, since a deletion contains only at most a single gap at model position j while in case of an insertion the complete insertion occurs in a single model position j. Thus, the essential quantity to extract from the results of the forward and backward algorithms iswhich is the average number of insertion nodes visited at model position j or the average length of an insertion times the probability of having an insertion in the first place. This quantity can be averaged over the sequences to yieldSince this quantity is the average length of an insertion times the probability that an insertion takes place, and q j, I2 calculated inis the probability that an insertion takes place, the average length of an insertion given that an insertion takes place is L j /q j, I2. This average length has to be translated into a value of  I j. To this end, we note that every insertion at position j visits the first insertion node. The probability to visit the second insertion node is  I j , the probability to visit the third insertion node is ( I j ) 2 , etc. Thus, the length distribution of an insertion is geometric with average 1/(1 I j ). Equating this to the measured average length of an insertion finally yieldsThe remaining two weights  D 1 and  I 1 depend on the others through normalization conditions and will be discussed at the end of this subsection. Just as with the substitution weights, the transition weights determined in this way may be overfitting the data if there is only a small number of sequences contributing at model position j. Thus, we subject the raw weightsto a pseudocount correction:where  j is the number of sequences contributing to positon j as calculated by the weighting scheme just as in Equation (3),  g is a user-defined pseudo-count constant which can a priori be different from the pseudo-count constant  s for the substitution weights, and W 0 is the original value of the corresponding weight according to Equation (15). We find  g = 1 to be a good choice of the pseudocount constant. This choice of pseudocount constant is lower than the value of  s = 10 for the substitutions. This means that the presence or absence of gaps at a position of the model could have a strong influence on the ability of finding homologs with gaps at novel positions. Instead of increasing the pseudocount constant, we take a more refined approach. Gaps tend to correspond to loops in the protein and thus tend to occur in model positions that show lower levels of conservation. Thus, the expectation of gaps should be informed by the level of conservation in the corresponding positions as already implemented long ago in CLUSTALW (). We thus calculate the information contentof the substitution scores at each position j and average these over positions j 2,...,j +2 when calculating gap weights at position j. If this average is bigger than the empirically determined threshold 0.9, there is a large amount of conservation and we increase the weight for not having a gap by replacing  j by (1+ j )/2. If on the other hand, the average information content is below the threshold, we cap the weight  j for not having a gap at (1+ 0 )/2 where
Page: 35 3137
Hybrid PSI-BLAST 0 is the user provided value of  for the first round of searches according to Equation (15). In any case, the value of  j is capped on the bottom at 0.001 to always allow some probability for not having a gap and to avoid numerical artifacts. Once  j is changed, the corresponding change is applied equally to in order to continue to fulfill the normalization condition that requires those three values to add up to one. Lastly, to avoid numerical artifacts, the weights  D j and  I j are capped at a minimum of 0.0001 and a maximum of 0.9999. Then, the normalization conditions for the weights are used to calculate the two remaining weights
RESULTSUsing the parameter values we identified using SCOP v1.69, we measure the performance of both NCBI and Hybrid PSI-BLAST by comparison against an independent dataset that derives from the ASTRAL40 subset of SCOP v1.75. Of the 10 569 sequences in the ASTRAL40 subset of SCOP v1.75, 4974 are not contained in the ASTRAL40 subset of SCOP v1.69. We use the new sequences as an independent set of queries for testing the performance of Hybrid and NCBI PSI-BLAST. We use version 2.2.18 of NCBI PSI-BLAST and Hybrid PSIBLAST as described above to search the NCBI nr database for homologs of the query sequences in ASTRAL SCOP v1.75 that are not in ASTRAL SCOP v1.69 and save the resulting models after each round. These models are then used to search the ASTRAL SCOP v1.75 database and we ask how many proteins identified by NCBI and Hybrid PSI-BLAST are in agreement or disagreement by plotting the number of true versus false hits that occur, ordered by E-value. In order to determine which hits are true and which are false, we use the SUPERFAMILY evaluation ruleset for SCOP 1.69 benchmarks () which classifies each pair of sequences in SCOP as either homologs, non-homologs or undecidable. In general, two sequences in the same SCOP superfamily are considered as homologs, sequences in different folds are considered non-homologs and sequences in the same fold but different superfamily are considered undecidable. The authors of the evaluation ruleset also include a number of exceptions from this general classification scheme for common folds such as Rossmann folds and TIM barrels, as well as for individual sequences deemed to be misclassified by SCOP after manual inspection. Since a newer version of the ruleset is not available, we manually verified that none of the sequences covered by specific exceptions in the ruleset change classification between version 1.69 and 1.75. For the purpose of evaluating the algorithms, we ignore hits classified as undecidable. The round by round results for NCBI PSI-BLAST are shown in. From this plot, one can see the effects of the rather classic problem of model corruption in iterative approaches. As previously reported (), NCBI PSI-BLAST performance initially improves in subsequent rounds, but then becomes worse past round 4 due to inclusion of a large number of non-homologs in the building of the query models. Hybrid PSI-BLAST exhibits very little model corruption up to round 7, as shown in.. Here, the optimal performance is given by round 6. Note that the coverage of Hybrid PSI-BLAST, while still subject to the effects of model corruption, is less sensitive than that of NCBI PSI-BLAST to these effects.Finally, we plot the best rounds for both algorithms and compare their overall performances.shows that Hybrid PSI-BLAST performs measurably better than NCBI PSI-BLAST. In order to determine if this improvement is due to the position-specific gap cost or due to the other changes in the algorithm, we repeat the evaluation of Hybrid PSI-BLAST keeping the gap weights constant at their initial value while keeping all other parameters the same.shows that in this case the model corruption effects are present but not as severe as for NCBI PSI-BLAST. Adding the performance of the best round of fixed gap cost Hybrid PSI-BLAST to, we find that its performance is between that of NCBI and full Hybrid PSI-BLAST in the low coverage region. However, in the higher coverage region Hybrid PSI-BLAST without position-specific gap costs performs worse than NCBI PSI-BLAST. We thus conclude that incorporating position-specific gap costs indeed improves detection of remote homologies.
DISCUSSIONThis work implements a version of PSI-BLAST that incorporates the semi-probabilistic hybrid alignment scheme. This alignment scheme allows for the use of position-specific gap costs and information from suboptimal alignments in the model building phase, resulting in overall more accurate homology searches than NCBI PSI-BLAST. The relevance of our result is that we have shown how to improve the very core of PSI-BLAST, i.e. the alignment engine, which was already backed by a long record of scientific scrutiny and sound theoretical foundations (). Our performance improvements are orthogonal, and therefore potentially cumulative, to those brought about by more recent advances on. Here, the optimal performance is given by round 4, two earlier rounds than for Hybrid PSI-BLAST with position-specific gap costs. Note that the coverage of the fixed gap cost Hybrid PSI-BLAST is more sensitive to model corruption than the full Hybrid PSI-BLAST algorithm, but less sensitive than NCBI PSI-BLAST. other parts of PSI-BLAST such as the homolog detection and model building ().
The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
