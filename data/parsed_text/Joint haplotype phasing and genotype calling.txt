Motivation: Hidden Markov model, based on Li and Stephens model that takes into account chromosome sharing of multiple individuals, results in mainstream haplotype phasing algorithms for genotyping arrays and next-generation sequencing (NGS) data. However, existing methods based on this model assume that the allele count data are independently observed at individual sites and do not consider haplo-type informative reads, i.e. reads that cover multiple heterozygous sites, which carry useful haplotype information. In our previous work, we developed a new hidden Markov model to incorporate a two-site joint emission term that captures the haplotype information across two adjacent sites. Although our model improves the accuracy of genotype calling and haplotype phasing, haplotype information in reads covering non-adjacent sites and/or more than two adjacent sites is not used because of the severe computational burden. Results: We develop a new probabilistic model for genotype calling and haplotype phasing from NGS data that incorporates haplotype information of multiple adjacent and/or non-adjacent sites covered by a read over an arbitrary distance. We develop a new hybrid Markov Chain Monte Carlo algorithm that combines the Gibbs sampling algorithm of HapSeq and Metropolisâ€“Hastings algorithm and is computationally feasible. We show by simulation and real data from the 1000 Genomes Project that our model offers superior performance for haplotype phasing and genotype calling for population NGS data over existing methods.
INTRODUCTIONLow-coverage sequencing of multiple samples is an efficient strategy to profile genetic variations in a population () because low-sequencing depth makes it affordable to sequence a larger number of samples. The high accuracy of genotype calling and haplotype phasing of such a design strategy is achieved by many innovative developments in the field of bioinformatics and statistical genetics. As demonstrated by the 1000 Genomes Project (), for common variants, the accuracy of genotype calling from low-coverage sequencing is comparable with that from genotyping arrays. Although haplotype phasing was not the primary goal of the 1000 Genomes Project, the linkage disequilibrium (LD)-based refinement method, Thunder (), used in the project to refine genotype calls from individual subgroups, also phases genotypes into haplotypes. Thunder, and most LD-based genotype refinement algorithms, is based on the Li and Stephens model (). This model takes into account chromosome sharing among multiple individuals, and can be efficiently optimized by hidden Markov model (HMM)-based algorithms. This model was traditionally applied to array-based genotype data in which, at each site, it only observed the unphased genotype. HMM-based methods can phase the haplotypes of multiple individuals simultaneously through a population genetics model that models the chromosome sharing among these individuals. With a modification of single-site emission probability, Thunder extended this approach to phase population next-generation sequencing (NGS) genotype data. By comparing with the Illumina Omni 2.5 M genotyping array data that were phased by additional family samples, Thunder was reported to make one switch error in about every 300400 kilobytes (KB). However, Thunder assumes that the allele count data are independently observed at each site and does not consider haplotype informative reads, i.e. reads that cover multiple heterozygous sites, which carry useful haplotype information. In our previous work (), we developed the HMM based on the Li and Stephens model to incorporate a two-site joint emission probability that can capture the haplotype information across two adjacent sites. Our method, which is implemented in the software package HapSeq, has achieved a 912% reduction of error rates compared with Thunder for genotype calling of the sequencing data from the 1000 Genomes Project. Still, haplotype information in sequencing reads was not fully used in our previous work. Haplotype information in reads that cover more than two adjacent sites is not used because of severe computational burden of higher order HMMs. This throws away valuable haplotype information, especially because newer sequencing technologies can offer longer reads. In addition, paired-end reads can cover non-adjacent sites and thus offer haplotype information over multiple adjacent and/or nonadjacent sites. Paired-end reads are routinely used in sequencing projects in aiding read mapping and assembly (). It would be important to develop advanced statistical methods that can fully use the haplotype information in reads. *To whom correspondence should be addressed. Notably, a probabilistic haplotype phasing model, HASH, was proposed byfor a single individual using whole-genome sequencing reads. Their approach was termed 'haplotype assembly' because of its resemblance to the traditional fragment assembly problem. Traditional fragment assembly generates a single consensus sequence out of a set of reads from a single individual, ignoring the diploid nature of the human genome. Bansal et al.'s haplotype assembly was to generate a pair of consensus sequences out of a set of reads from a diploid individual. Their model is based on the haplotype likelihood of sequencing readsthe probability of a haplotype pair given the sequencing reads. With the assumption of the uniform prior on the space of haplotypes, this probability is proportional to the probability of reads given the haplotype pair. A MetropolisHastings (MH) algorithm was proposed to sample haplotype pairs in which 'moves' are flipping of substrings of the haplotypes. They estimated the switch error rate of haplotypes inferred for a genome () sequenced by 7.5X Sanger reads was $1.1%. However, their method assumes that genotypes are readily known, and it requires highsequencing coverage; thus, it is not applicable to low-coverage sequencing in which read counts are sparse and joint genotype calling and haplotype phasing are essential for high accuracy. In addition, with the assumption of the uniform prior, their method ignores the haplotype information contained by other individuals and/or reference haplotypes. Another notable work is by. Their Hap-seq (not our program 'HapSeq') method extended the haplotype assembly approach by incorporating population information. Their haplotype likelihood was divided into two independent parts: the probability of sequencing of reads given the haplotype pair, which is similar to that used in HASH (), and the probability of the haplotype pair given the set of reference haplotypes, which can be calculated using the HMM similar to the HMM in Thunder/HapSeq.designed a dynamic programming algorithm to find a haplotype pair to maximize the haplotype likelihood. Their simulation results showed that the haplotype inferred from such model had lower switch error rates than those obtained from IMPUTE v1.0 (). The method ofcan be used for low-coverage sequencing but still assumes that the genotypes at each site are already known. Essentially, they extended the Li and Stephens model into higher-order Markov models, and thus their method incurs a computational complexity of O4 V , for just running a Viterbi pass for phasing one individual, where V is the maximum number of sites spanned by reads. Their approach is impractical if V is large. Unfortunately, paired-end reads are commonly used in real sequencing projects, as such reads generally span a large number of sites. To avoid this potential problem,had to split a long read to the multiple reads that each span only three heterozygote sites. Obviously, this approach is not optimal, as it does not fully use the haplotype information of reads that cover a large number of sites. In this work, we develop a fully probabilistic model for joint genotype calling and haplotype phasing that incorporates the joint distribution of two or more sites covered by a read over an arbitrary distance. Our model integrates elements of the population-haplotype likelihood in Thunder/HapSeq and the read-haplotype likelihood in HASH (), each capturing complementary haplotype information. Because both methods are Markov Chain Monte Carlo (MCMC)-based, we develop a combined MCMC method that embeds a MH procedure into a Gibbs sampling algorithm. Specifically, in each iteration, we first use the Thunder/HapSeq HMM to jointly perform genotype calling and haplotype phasing, and then use the MH algorithm to sample haplotypes of each individual according to the likelihood based on sequencing reads and reference haplotypes. Our method is implemented in the HapSeq2 program, and is evaluated together with Thunder and HapSeq by using simulation and real data.
METHODS
OverviewOur probabilistic model incorporates both the likelihood of the multisample chromosome sharing and the likelihood of haplotypes given multisite-spanning reads. Although our model is similar to that of, our algorithm is an MCMC sampling algorithm that is practically efficient. Basically, our MCMC sampling method is a hybrid of the HMM-based Gibbs sampling-like algorithm as in Thunder/HapSeq, and the MH algorithm as in HASH. The overall algorithm is a Gibbs sampling-type algorithm that updates each individual in turn and runs for a number of iterations. For each individual in each iteration, we refine its genotypes and haplotypes in two steps. First, we perform the Thunder/ HapSeq HMM sampling to obtain the genotypes and haplotypes. After that, with the assumption of fixed genotypes for that individual, we perform the MH sampling to update the haplotype pair of that individual. The efficiency of our algorithm comes from the idea that we identify three kinds of genotype and haplotype information in reads (as detailed in Section 2.2) and only use parts of the information in reads that are suited in each step. In the first step, we only use reads covering single sites and covering two adjacent sites as in Thunder/HapSeq, and intentionally ignore the haplotype information in multisite-spanning reads. In the second step, the sampling procedure is according to the sequencing reads that cover two or more heterozygote sites (adjacent and/or nonadjacent) and the reference haplotypes. In summary, our procedure can be described as the following. Initialization: Assign genotypes and haplotypes of each individual according to the sequencing reads;Outer Iteration: For t  1, 2,    , perform the inner iteration;Inner Iteration: For each individual n  1, 2,    , N:(1) Perform the HMM sampling to obtain genotypes and haplotypes,(2) Perform the MH to update haplotypes; Finalization: Construct the consensus haplotypes and genotypes of each individual based on haplotypes and genotypes obtained from each outer iteration. The detailed descriptions of each step are given in subsequent sections.
Genotype and haplotype information in readsFor a typical NGS shotgun sequencing project, we observe reads covering L polymorphic sites for N individuals. Throughout, we assume biallelic sites, with alleles labeled as 0 (the reference allele) and 1 (the alternative alleles). Based on the haplotype information contained, we identify three sets of read information, R 1 , R 2 and R 3 , according to the following rules: (i) a read that covers a single site belongs to R 1 ; (ii) a read that covers two adjacent sites belongs to R 2 and R 3 ; (iii) for a read that covers three or more adjacent sites, we do the following: first, we put every two adjacent sites to R 2 , second, if there is a site left (i.e. the read covers an odd number of adjacent sites), we put the last site to R 1 , third, we put the entire read to R 3 ;(iv) for a read containing non-adjacent sites, e.g. a read pair, we first do step (iii) for each chunk of the consecutive sites covered by the read, and then put the entire read to R 3. In HapSeq, we use two types of reads, R 1 and R 2 , where R 3 is broken into R 1 and/or R 2. In this work, we use R 1 and R 2 in the HMM sampling and R 3 in the MH sampling. It is worth noting the classification of a read to R 1 , R 2 and R 3 is based on the number of sites, and not the number of heterozygote sites that it covers. Such classification is only performed once with the fixed set of variant sites at the beginning of algorithm; thus it is not changed according to genotypes or haplotypes. We denote R 1, fl, ng as the set of reads that cover the single site l for the individual n, R 2, fl, ng as the set of reads that cover two adjacent site l-1 and l for the individual n and R 3, fl, ng as the set of reads that end at site l and cover two non-adjacent sites and/or three or more sites for individual n.
The HMM for the whole-genome shotgun sequencing data in Thunder/HapSeqWe denote the set of reference haplotypes as T, and the number of reference haplotypes as jTj. For genotype calling and haplotype phasing, both external haplotypes (e.g. haplotypes obtained from the external reference data such as data from the HapMap Project or the 1000 Genomes Project) and/or internal haplotypes (haplotypes estimated from sequenced individuals in the same study) can be used as reference haplotypes (). For NGS data, external reference haplotypes are often incomplete and/or unavailable. As a result, Thunder and HapSeq often use internal reference haplotypes only. For N individuals, the number of internal reference haplotypes is 2*(N-1) (and the reference haplotypes themselves are different across different individuals). For the rest of manuscript, we will ignore the individual index subscript n for the sake of simplifying notations. This is fine because our overall algorithm runs in a Gibbs sampler fashion and iteratively infers the genotypes and haplotypes for each individual given the reference haplotypes. The HMM is the same as the HMM in HapSeq (), which can be described as following:In formula (1), we use a series of indicator variables S l l  1,    , L to represent a hypothetical (and unobserved) state sequence for that individual, indicating to which reference haplotypes that individual is closest at the site l. At a specific site l, a diploid state S l  x l , y l l  1,    , L indicates that the two haplotypes of the individual are x l and y l out of the jTj reference haplotypes, respectively. In addition, PS 1  denotes the prior probability of the initial mosaic state and is usually assumed to be equal for all possible compatible haplotype configurations of each individual; PS l j S l1  denotes the transition probability between two mosaic states and reflects the likelihood of historical recombination events between the sites l and l-1; PR 1, l j S l  denotes the emission probability, which is the probability of observed R 1 reads that cover the site l conditioning on the underlying mosaic state at the site l; PR 2, l j S l1 , S l  denotes the emission probability, which is the probability of R 2 reads that cover two adjacent sites (l-1 and l) conditioning on the underlying mosaic state at sites l-1and l. Note that the emission probability PR 2, l j S l1 , S l  at site l not only depends on S l but also depends on S l1 because R 2, l actually reflects the haplotype information between the sites l-1 and l. The emission probability, PR 2, l j S l1 , S l , is based on two haplotypes h 1l and h 2l defined by S l1 and S l across the sites l  1 and l, and the error parameter , which is the per base sequencing error rate. We further denote R 2, l  n 00, l , n 01, l , n 10, l , n 11, l  as the number of combinations of alleles 0 and 1 across the sites l  1 and l that are simultaneously observed in the R 2 reads. Then PR 2, l j S l1 , S l  is defined to follow a multinominal distribution (): PR 2, l  n 00, l , n 01, l , n 10, l , n 11, l  j S l1 , S l   PR 2, l  n 00, l , n 01, l , n 10, l , n 11, l  j h 1l , h 2l  / P00 j h 1l , h 2l  n00,l P01 j h 1l , h 2l  n01, l  P10 j h 1l , h 2l  n10, l P11 j h 1l , h 2l  n11, l 2 where P00 j h 1l , h 2l   0:5  P00 j h 1l   0:5  P00 j h 2l   3 and P00 j h  1   2 , if two hapolotypes are identical h  00, 1  , if two haplotypes differs at one site h  01, 2 , if two haplotypes differes at both sites h  11:P01 j h 1l , h 2l , P10 j h 1l , h 2l  and P11 j h 1l , h 2l  can be defined similarly. Once the prior probability, the transition probability [PS l j S l1 ] and the emission probability [PR 1, l j S l  and PR 2, l j S l1 , S l ] in formula (1) are defined, we can use the standard HMM Monte-Carlo procedure to sample S 1 ,    , S L , impute the genotype and determine the haplotype pair of each individual over a number of iterations. The detailed description of all terms in the HMM and the sampling procedure can be found in. Theoretically, we can incorporate the R 3 reads into the HMM:It can be seen that the emission probability PR 3, l j S 1 ,    , S l1 , S l  depends on not only S l and S l1 if R 3, l covers sites l and l-1 and some sites from 1 to l-2. This greatly increases the computational complexity when we perform the forward probability calculation in Monte-Carlo sampling. The computation increases rapidly with the inclusion of reads that cover more sites. Note, when we only consider the reads that cover a single site and two adjacent sites, the complexity of calculation of the forward probability is still O( j T j 2 ). Therefore, the above pure HMM is not practical to handle R 3 reads because of the high computational complexity.
MetropolisHastings procedureWe denote H as a haplotype pair and PH j R 3 , T as the haplotype likelihood H of the given sequencing reads and the set of reference haplotypes (T). We further denote PrH ! H   as the proposed probability from a haplotype pair H to a new haplotype pair H . Our MCMC procedure is a standard MH procedure and can be described as follows:Initialization: Obtain H 0 , the haplotype pair of that individual from the HMM procedure; Iteration: For t  1, 2,   , obtain H t1 from H t as follows:(1) Propose H  according to H t and the sequencing reads with the probability PrH t ! H  ,With the probability min1, PrH  j R3, TFinalization: Construct the consensus haplotype pair from H 0 , H 1 ,    , H t ,    and use it in the next step of HMM. We would like to make the following notes: (i) For this MH procedure, we assume that the genotypes are fixed, as they are already determined from the HMM procedure so only haplotypes of that individual are updated according to the sequencing reads and haplotypes from the reference haplotypes (internal and/or external reference haplotypes). The rationale behind this is that the HMM step already can generate highly accurate genotypes. (ii) Because we assume that the genotypes are fixed, the homozygote sites covered by the R 3 reads will not affect the proposed probability [PrH  ! H t  or PrH t ! H  ] or the ratio of likelihood of two haplotype pairs [PrH  j R 3 , T= PrH t j R 3 ,, and only the heterozygote sites need to be considered in the calculation of PrH t j R 3 , T. Here R 3 are the reads spanning two or more sites, and T is the set of reference haplotypes. It can be seen that we use both the information of haplotypes from the sequencing reads (R 3 ) and the LD information (T) from this set of samples or the reference samples to update the haplotypes of that individual. (iii) The updated haplotypes will be used as the reference haplotypes for other individuals in the next iteration of HMM. So we expect that the updated haplotypes (more accurate) will then improve the overall accuracy of HMM for genotype calling and haplotype phasing. To describe our detailed algorithm of making proposal H  , we first introduce the following notations. As we have mentioned, we only need to consider the heterozygote sites of that individual. We assume there are K heterozygote sites: l 1 , l 2 ,    , l K. For the sequencing read i spanning two or more heterozygote sites (adjacent or non-adjacent), we use Z i  fz ik , k  l 1 ,    , l K g to represent the observed allele of the read i at the site l k as the reference allele (0), the alternative allele (1) or no observation (1). Similarly, we use H  fh, hg  ffh k g, f h k g, k  l 1 , l 2 ,    , l K g to represent the haplotype pair of an individual, where h j  0 or 1 ( h j  0 or 1) represents the observed allele of that haplotype. Given the current haplotypes of that individual, H t , we only consider the proposal H  that is a single crossover away from H t. A single crossover of haplotype pair at a recombinant point refers to that two haplotypes beyond that point are swapped to form a new haplotype pair. We choose the recombination point (between two adjacent heterozygote sites) with the probability PrH t ! H   that is proportional to a weight. We define the weight of two adjacent heterozygote sites, l k1 , l k  as Wl k1 , l k , k  2,    , K for the recombination point between heterozygote sites l k1 and l k. The weight is calculated according to H t and H  and the sequencing reads. Specifically, we first calculate the total number of sequencing reads that are in conflict with the current haplotype pair H t and the proposed haplotype pair H  and denote them as C t and C  , respectively. A conflict is claimed for a read if (i) the read spans the recombination point, i.e. covers at least one site from l 1 to l k1 and one site from l k to l K ; and (ii) the read is not compatible (identical) with either of haplotype of H t at the heterozygote sites covered by this read. If C t ! C  , the weight is 1 plus C t  C  , otherwise the weight is 1 (to avoid weight of 0). Once a recombinant point is chosen, the new haplotype pair H  is just the recombinant haplotypes of H t at the recombination point. Our procedure captures the essential element of HASH () that concentrates on 'flipping' a subset of the entire haplotype pair. In the same time, we restrict the allowed flipping operation to just the single crossovers so the likelihood ratio in the MH procedure can be efficiently calculated, as described below. In the second step of the MH algorithm, we accept or reject the proposal H  according to PrH t j R 3 , S and PrH  j R 3 , S. To calculate PrH j R 3 , S, we have: PrH j R 3 , T / PH, R 3 , T  PR 3 j HPH j T  6 where PR 3 j H  Q i PZ i j H  Q i 1 2 PZ i j h  PZ i j h is the haplotype likelihood of the sequencing reads () and is a function of per base sequencing error and PH j T is the conditional probability of the haplotype pair H given the reference haplotypes and reflects the LD information of sites. PH j T can be considered as a prior distribution of a haplotype pair. In the article of), the uniform prior was used. Here, PH j T incorporates essential chromosomal sharing information and the HMM can be used to calculate PH j T  Ph j TP h j T. Again, the haplotype h is considered as the recombination events of reference haplotypes and each reference haplotype is considered as a hidden state. Therefore, the probability Ph j T is calculated across all possible hidden states:In formula (7), the prior probability [PS l1 ], the transition probability [PS lk j S lk1 ] and the emission probability [Ph lk j S lk ] can be defined similarly as the HMM in HapSeq. Then Ph j T can be easily calculated by the Baum's forward algorithm. Specifically, we define the forward probability:First we calculate 1 i as: 1 i  Ph l1 , S l1  i  Ph l1 j S l1  i PS l1  i. Then the following recursion is used to calculate k1 i:Finally, we can calculate Ph j T  P i K i. We would like to point out that the above computation can be greatly reduced. It can be seen that the complexity of the navenave implementation of the calculation of the forward probability is OK  j T j 2 , as we need j T j (the number of reference haplotypes) additions for k i. However, the complexity can be reduced because the transition probability, PS lk  i j S lk1  j, only depends on if i is same with j. Specifically, PS lk  i j S lk1  j  1  k  k = j T j if i  j and PS lk  i j S lk1  j  k = j T j if i 6  j, where k is the recombination rate between the sites l k1 and l k. Thus, we defineThe computational complexity is reduced to OK  j T j . As the probability Ph j T for each haplotype is calculated independently, the computational burden of this MH procedure is actually small compared with the HMM step.
Evaluation using simulationWe used simulated sequencing data to compare the performance of Thunder, HapSeq and HapSeq2. We generated chromosomes for two populations using the cosi program (). We adopted the 'bestfit' model distributed with the cosi package, which takes into account the HapMap LD patterns, local recombination rates and recent human population demography. We generated 3000 chromosomes from the 'European population' (EUR) and 3000 chromosomes from the 'African population' (AFR). Each chromosome is of length 100 KB. For each population, we randomly sampled with replacement 60 sets of unrelated diploid individuals, each of N  60 (120 chromosomes), to form a 'population panel'. These 60 sets are simulated with 6 scenarios, each with 10 repetitions:(the performance of these methods in different sequencing settings with various read length and insert length for paired-end reads. We fixed the rest of the simulation parameters: sequencing error rate to 0.5%, sequencing depth of coverage to 4X, as we have shown that the trends observed from different settings of these parameters tend to be similar (). Generation of reads and site promotion follow that of HapSeq (). Briefly, read starting positions were placed uniformly and randomly along the chromosome, and sequencing errors were generated uniformly and randomly along the length of the reads as well. For paired-end settings, the starting positions of insert fragments were placed uniformly and randomly along the chromosome, and a pair of reads from each end of the insert fragment was generated. We followed Li et al. () and calculated the score w  P N n1 d n d n  1=2, where d n is the minor allele count of individual n at each site. We promoted sites with w ! 5 as potential polymorphic sites. For each dataset, we run four versions of programs with 100 iterations of Gibbs sampling: (i) the original Thunder; (ii) Thunder  MH; (iii) the original HapSeq; (iv) HapSeq  MH, i.e. HapSeq2. We ran 5c iterations for the MH-flipping after each HMM iteration where c is the total number of heterozygote sites of the haplotypes obtained from the HMM (same as below). For Thunder, we also ran 200 and 300 iterations of Gibbs sampling. These may also improve the performance of Thunder with comparable running time as options (ii)(iv) mentioned above. For each simulated dataset, we computed the switch error rate, genotype calling concordance rates and r 2 between the estimated and true genotypes. The averages over 10 repetitions are presented in the Results section.
Evaluation using the 1000 Genomes Project phase 1 dataTo capture complexities in real sequencing data, we also evaluated these methods using the 1000 Genomes Project phase 1 data. The low-coverage read alignment data and the integrated variant calls of chromosome 20 were downloaded for 98 individuals of Utah residents with Northern and Western European ancestry from the CEPH collection (CEU) and 99 individuals of Yoruba in Ibadan of Nigeria (YRI) from http://www. 1000genomes.org/. We used VCFTools v0.1.9.0 () to extract the polymorphic sites (but not the genotypes) in the integrated variant call sets for chromosome 20, removing any non-SNP (single nucleotide polymorphism) variant sites. We used SAMTools version 0.1.18 () to merge the BAM files of the same individual, and then used an internal script to parse the BAM file of each individual to obtain the read counts (R 1 ), jumping reads (R 2 ) and read site spanning information (R 3 ) over these sites. Following the 1000 Genomes Project phase 1 evaluation (), we used the Omni 2.5 genotype data phased by SHAPEIT () as released from the 1000 Genomes Project Web site as the gold standard. Most CEU and YRI phase 1 samples are parents of fathermotherchild trios, and thus the Omni data, available for all members of trios, can be phased with high accuracy. We calculated the genotype concordance and haplotype switch error results against the Omni data by using VCFTools v0.1.9.0 (). In most simulated datasets, Thunder produced the shortest SEF blocks, serving as baseline performance. Both HapSeq (as Thunder  reads covering two adjacent sites) and Thunder  MH produce longer SEF blocks, although the performance of one is not always better than the other. Overall, HapSeq2 always produces the longest SEF blocks. Variations of HapSeq in general produce longer SEF blocks compared with variations of Thunder with otherwise the same settings. The average improvement is 41.4%. This is reassuring, as the improvement from adding interlaced MH-flipping is cumulative to the improvement from considering joint emission probabilities of reads covering two adjacent sites (HapSeq versus Thunder). The results are consistent across European and African population data. Noticeably, haplotype phasing of European samples is generally better than that of African samples. This is expected, as European samples are simulated with severe bottlenecks and are known to have longer shared haplotype blocks. We also compared different sequencing strategies from short and unpaired reads with long and paired-end reads. Throughout, Thunder produced consistent short SEF blocks, reflecting its inability to capitalize the haplotype information in sequencing reads. All other methods benefit from longer and paired-end sequencing designs. The greatest improvements between methods with MH-flipping versus those without are for 100 bp reads with 500 bp or 1000 bp inserts, with an average improvement over 100%. It is clear that 100-bp-long paired-end reads offer the best phasing results, although there are no major differences in terms of performance of HapSeq2 between these 100-bp pairedend designs. Accurate haplotype phasing from interlaced MH-flipping is not an artifact of simply eliminating heterozygous sites. As shown in, genotype calling error rates are lower in methods with MH-flipping than those without in both heterozygous sites (HET) and in overall sites. Looking across rare (minor allele frequency (MAF)51%), low-frequency (1% MAF5 5%) and common (MAF ! 5%) single nucleotide polymorphisms, Thunder  MH offers higher genotype concordance and r 2 between the estimated genotypes and the true genotypes (, Supplementary). We think that theimprovement of genotype calling is due to better haplotypes (served as internal reference haplotypes) resulted from more accurate haplotype phasing. The interlaced MH-flipping procedure results in longer running time. The time increased is linear to the number of flips and to the number of potential MCMC moves in each round. In total, the running time for HapSeq2 is $23 times that of Thunder, and is thus still practical.
Results from 1000 Genomes Project phase 1 dataAlthough the patterns of read-cover in the 1000 Genomes Project phase 1 data are consistent to what we observed in the simulated data, the patterns of read-span is more complex (). There are pairs of reads that span over 1000 sites. This is likely because of structural variations or technical artifacts. Still, bimodal patterns of read-span are observed in both CEU and YRI data. Note that CEU has a fraction of 454 reads that are longer, and thus CEU data have longer read-cover and read-span. Over the entire chromosome 20, haplotype phasing by interlaced MH-flipping produced longer SEF-blocks, whereas genotype calling accuracy is also improved, especially for heterozygote genotypes (). For all pairs of methods, one with and one without interlaced MH-flipping, interlaced MH-flipping increases the average length of SEF block by 7086 KB. This represents 23.644.6% improvement. Between Thunder and HapSeq2, the improvement of the length of the SEF block is 148 KB (77.6%) for CEU and 148 KB (66.7%) for YRI. All these improvements coincide with improvement of genotype calling accuracy. Interestingly, YRI has longer SEF blocks than CEU, which is different from what we observed in the simulated data. This may be due to the significantly higher heterozygote rate in the YRI samples compared with the CEU sample, which would result in a greater number of sequencing reads being useful for haplotype phasing. Another possible reason may be due to the fact that we use the same set of sites across YRI and CEU datasets in the real data analysis, whereas we used the promoted sites individually defined in each dataset in simulations.
DISCUSSIONWe developed a new approach for haplotype phasing and genotype calling from sequencing data of a set of population samples. We designed an MH-flipping algorithm that can be embedded into traditional Gibbs sampling algorithms based on the Li and Stephens HMM model. Using simulated and real datasets, we showed that our new method can greatly improve the accuracy of haplotype phasing over current state-of-the-art methods. In the 1000 Genomes Project phase 1 data, our HapSeq2 method produces 6080% longer SEF haplotype blocks than Thunder. Although the primary goal of introducing the MHflipping procedure is to improve haplotype phasing, we found that this technique also improves genotype calling accuracy. Accurate haplotype phasing will have broad impacts on genomic and genetic research areas. First, reconstructing long haplotype blocks in reference panel will improve the accuracy of genotype imputation. Second, long haplotype blocks will help haplotype-based genetic association studies. Third, accurate haplotype phasing will produce more insights into population genetics inferences. This work is one of the first to prove the feasibility of incorporating haplotype information over multiple sites in ultra-long reads and long insert paired-end reads for phasing sequencing data with improved accuracy. This provides additional methodological support for the ultra-low coverage sequencing design (). In our simulation studies, we only used the read length of 36 and 100 bp and the fixed insert size of 250, 500 and 1000 bp. For the 1000 Genomes Project chromosome 20 data, the insert size varies and the portion of the proportion of R 2 and R 3 reads also varies across different regions. For the chromosome 20, the proportions of reads covering two sites and at least three sites are 28.0% and 24.8% for the CEU samples and 27.3% and 24.1% for the YRI samples, respectively. For the major histocompatibility complex region, the proportions of reads covering two sites and at least three sites are higher: 25.4% and 34.6%% for the CEU samples and 25.5% and 31.5% for the YRI samples, respectively. The performance. Read cover and span distributions in the 1000 Genomes Project datasets of the proposed method for such regions is expected to be further improved. Therefore, more studies are needed to show how the accuracy of haplotype phasing and genotype calling is affected by the length of reads, the length of inserts and the proportion of R 2 and R 3 reads using our newly developed method. It will be future work to conduct extensive simulations including the simulation of reads with varied insert sizes to investigate the optimal design strategies. In the MH sampling, we proposed the new haplotype pair as a single crossover of the current haplotype pair and chose the recombinant point with the probability that is proportional to a weight. We defined the weight as the function of the difference of the number of sequencing reads that are in conflict with the current haplotype pair and the proposed haplotype pair. Although we also used the uniform weight and found the results from the uniform weight to be just slightly worse than the proposed weight, it is not clear whether the proposed weight is optimal. We will investigate this with more simulations in the future. To investigate whether the single crossover is sufficient for convergence of the MH sampling, we ran HapSeq2 5c, 10c and 20c iterations for the MH sampling, where c is the number of heterozygote sites of that individual. We found the results from 5c are similar to those obtained from 10c and 20c. In addition, we found the acceptance ratios from 5c, 10c and 20c are similar, indicating it is sufficient for convergence.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
K.Zhang and D.Zhi at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Haplotype phasing and genotype calling using haplotype informative reads at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RESULTS 3.1 Simulation results As all calculation is done over the promoted potential polymorphic sites, the following measures are relevant to LD-refinement algorithms based on haplotype-informative reads: (i) read-cover: the number of sites covered by a read; (ii) read-span: the number of sites between the first site and the last site covered by a read. The only difference between these two measures is that sites skipped by the gap between the paired-end reads are counted in read-span, but not in read-cover. For non paired-end reads, the two statistics are the same. Figure 1 shows, as expected, that whereas the read-cover of paired-end reads is twice as that of single reads, the read-span of paired-end reads is much longer. Noticeably, paired-end reads that span longer distance (100500 and 1001000) have a clear bimodal distribution of their read-span. The difference between read-span and read-cover demonstrates the information can be used by the MH haplotype flipping (MH-flipping), but not Thunder/HapSeq. As shown in Figure 2, Thunder and HapSeq with interlaced MH-flipping result in longer switch error-free (SEF) haplotype blocks in both European and African samples. The average improvement with MH-flipping is 46.1%. Therefore, the ability of MH-flipping in capturing haplotype information over multiple sites in reads improves the haplotype phasing. If comparing HapSeq2 (HapSeq  MH) and Thunder, the average improvement across all datasets is 105.1%. Notice that running Thunder for more iterations produces slightly longer SEF haplotype blocks, but the magnitudes of improvement are not comparable with Thunder  MH and HapSeq methods, especially for datasets with paired-end reads. (a) (b) Fig. 1. Site coverage (a) and site span (b) statistics of simulated sequencing reads. Reads covering no potential polymorphic sites are not counted. The distributions for the AFR population are similar (data not shown)
