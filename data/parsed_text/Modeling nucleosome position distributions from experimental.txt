Motivation: Recent experimental advancements allow determining positions of nucleosomes for complete genomes. However, the resulting nucleosome occupancy maps are averages of heterogeneous cell populations. Accordingly, they represent a snapshot of a dynamic ensemble at a single time point with an overlay of many configurations from different cells. To study the organization of nucleosomes along the genome and to understand the mechanisms of nucleosome trans-location, it is necessary to retrieve features of specific conformations from the population average. Results: Here, we present a method for identifying non-overlapping nucleosome configurations that combines binary-variable analysis and a Monte Carlo approach with a simulated annealing scheme. In this manner, we obtain specific nucleosome configurations and optimized solutions for the complex positioning patterns from experimental data. We apply the method to compare nucleosome positioning at transcription factor binding sites in different mouse cell types. Our method can model nucleosome translocations at regulatory genomic elements and generate configurations for simulations of the spatial folding of the nucleosome chain. Availability: Source code, precompiled binaries, test data and a web-based test installation are freely available at http://bioinformatics. fh-stralsund.de/nucpos/
INTRODUCTIONThe DNA of eukaryotic organisms is wrapped around a histone octamer, forming nucleosomes, the basic DNA packing unit of chromatin. Nucleosomes can impede the binding of transcription factors to DNA. Therefore, the positions of nucleosomes control local DNA accessibility and can directly affect the readout of DNA sequence information at regulatory genomic elements, thus regulating gene expression. The genome-wide study of nucleosome positions has been made possible by high-throughput DNA sequencing techniques that identify the nucleosomal DNA isolated after digestion of the linker DNA between nucleosomes with micrococcal nuclease (MNase-seq) (). However, obtaining nucleosome positions based on these MNase-seq data is fraught with difficulties: nucleosome positions have an intrinsic biological variability. Some nucleosomes, such as the 1 nucleosome at the transcription start site, are known to be positioned with high precision in yeast (), but the positions of other nucleosomes can vary substantially (). In addition, the results reflect the experimental methodology used. First, although MNase preferentially digests the linker DNA between the nucleosomes, the nucleosomal DNA fragments obtained in this manner display some length variation from the precise boundaries of the nucleosome. Second, the proportion of the nucleosomal DNA fragments that can be identified is affected by MNase concentration and incubation time (). Third, the experiments probe a population of typically 10 5 to 10 7 cells. Each cell contributes its individual nucleosome configuration to this average, which is potentially incompatible with other configurations. Accordingly, experimental nucleosome occupancy maps contain overlapping and ambiguous nucleosome positions at many locations. Several approaches and tools have been proposed to extract nucleosome positions from MNase-seq data, such as the following: peak calling on smoothed coverage data (), hidden Markov models (), template filtering (), mixture models () and sliding window statistics (). Many of these approaches need an elaborate parameterization or cannot extract non-overlapping nucleosome configurations and decide between overlapping peaks. The sole identification of local occupancy maxima determines the average nucleosome positions of a cell ensemble but does not cope with the sterical incompatibilities arising from averaging many, usually unsynchronized cells. If different configurations lead to overlapping occupancy peaks, it is impossible to represent the data with a single configuration of non-overlapping nucleosomes. Here, we address these issues with two approaches going beyond peak calling. We apply a binary-variable approach that generates an ensemble of nucleosome configurations that, when combined with each other, reproduce the input data with *To whom correspondence should be addressed. minimal error. Ambiguous peak data can be dissected into source components, including non-overlapping nucleosome configurations. This allows quantification of the dynamics of nucleosome positioning and of the relative occlusion of DNA by nucleosomes. For some applications, like 3D modeling of the nucleosome chain or combinatorial transcription factor binding, a single optimal configuration of non-overlapping nucleosomes is desirable, even though the data are ambiguous. We address this by applying a Metropolis Monte Carlo (MMC) algorithm that generates a dynamic population of non-overlapping nucleosomes. Our simulation algorithm yields an ensemble of nucleosome configurations that reproduces the distribution of the input data. To find an optimized placement of nucleosomes, we combine Monte Carlo simulation with a simulated annealing protocol. Our approach compares favorably to existing peak-calling methods and it was applied to the analysis of promoter and enhancer regions in mouse embryonic stem cells (ESCs), and neural progenitor cells (NPCs) as well as embryonic fibroblasts (MEFs) derived from these (). The three cell types have identical genomes but differ in their differentiation state. Comparing them by using our method allowed quantification of differences in nucleosome patterns and dynamics at binding sites for transcription factors that have important roles in cell differentiation. Furthermore, we analyzed the nucleosome density at the Samd4 locus for the three cell types, as an example of a gene that shows changes in gene expression during differentiation.
METHODS
Binary-variable analysis of overlapping nucleosome populationsPositioning data from MNase-seq experiments represent an overlay of different nucleosome populations. Hence, the MNase-seq data can be imagined as a combination of different non-overlapping nucleosome configurations for the same locus. We aimed to dissect the overlay into single nucleosome configurations and quantify their occurrence such that their combination reproduces the experimental distribution with minimal error. In a preparatory step, fragments of nucleosomal DNA from mapped paired-end reads () are transformed into occupancy data. The number of read centers is counted per base pair, smoothed with a Gaussian kernel and normalized (). In the next step, we identify all peaks in the occupancy data. A peak is defined by having a greater occupancy value than the two neighboring positions. Every peak is assumed to be a potential nucleosome center. In a subsequent step, clusters of overlapping peaks are identified. A cluster is defined as a sequence of peaks that are connected by an overlap between neighboring peaks. Two peaks are considered to overlap if their peak-to-peak distance is 5147 bp. A cluster comprising n peaks can be represented by a vector ~ c  c 1 , c 2 , c 3 ,. .. , c n , with c i being the location of the i-th peak in the cluster. Owing to steric effects, it is not possible that all peaks of a cluster are populated by nucleosomes at the same time. Therefore, we generate different sterically possible configurations of nucleosomes for a cluster (). A configuration can be represented as vector ~ k  k 1 , k 2 , k 3 ,. .. , k n k i 2 f0, 1g (). A nucleosome at position c i is represented as k i  1, whereas k i  0 denotes a nucleosome-free position. By a recursive procedure, we create all possible configurations containing only non-overlapping nucleosomes (). Additionally, we apply the constraint that each configuration has to be maximally populated, that is, no further nucleosome can be added without producing an overlap. The m different configuration vectors can be combined to a matrix K with m rows and n columns. After identifying all sterically possible nucleosome configurations, we compute the proportion of the individual configurations with respect tohas four potential nucleosome positions. Each position has two different states: occupied by a nucleosome (k i  1) and empty (k i  0), yielding a total of 2 4 different configurations. Only three configurations (paths along gray nodes) fulfill the constraints of having no overlapping nucleosomes and being maximally populated. The result set can be represented as a binary matrix () the original peak heights. The n individual peak heights of a cluster can be represented by a vector ~ h  h 1 , h 2 , h 3 ,. .. , h n. Given that occupancy data are an overlay of different configurations, the contribution of the individual configurations should ideally sum to the original peak heights ~ h:where ~ s is a vector of the size m, with s j as the contribution of the j-th configuration to the overall occupancy. The number of configurations m is smaller or equal to the number of peaks n. When m  n, the equation can be solved unambiguously. When m5n, Equation (1) is over-determined and can, in most cases, only be solved with a certain error. We apply the LawsonHanson implementation of the non-negative linear least square method () from R-package nnls () to solve Equation (1) (). Importantly, this method prevents negative coefficients, avoiding nonreasonable negative contributions. However, the value 0 is allowed, implying that a certain configuration was dismissed. After computing the relative contribution ~ s j of each configuration, the deviation between original and reconstructed data can be computed (). The number of configurations with a value s j 40 gives a measure for the number of possible nucleosome configurations and the dynamics within the cluster.
Monte Carlo simulation of nucleosome populationsThe binary-variable analysis of nucleosome populations presented here yields a weighted set of possible nucleosome configurations for clusters of overlapping nucleosomes. However, for some applications, a single configuration of non-overlapping nucleosomes is needed, ignoring ambiguity from experimental data. We developed a simulation approach based on an MMC protocol combined with simulated annealing to retrieve a single optimized solution from the experimental data. Each simulation starts with an interval of nucleosome-free DNA. During the simulation, the initially nucleosome-free configuration is altered randomly by so-called Monte Carlo moves that add, delete or slide nucleosomes (). Each nucleosome occupies an interval of 147 bp on the DNA and excludes the binding of other nucleosomes within its boundaries. The MMC algorithm comprises three essential steps (Heermann, 2010):(i) Alter the nucleosome configuration by a Monte Carlo move (ii) Compute the energy difference E between new and old configuration (iii) Accept the new configuration with the probability min[1, exp(E/k B T)]; step back to (1). We derive the energy function E used in step (2) from experimental data (). The starting point is, as described earlier in the text, fragments of nucleosomal DNA () taken from mapped paired-end reads. In the first step, input data are converted into a frequency distribution of nucleosome centers with base pair resolution (). The nucleosome centers, assumed to be in the middle of a fragment, are counted for every base pair. Because the real position of the nucleosome center is unknown, a smoothing with a Gaussian kernel is then applied to the frequency distribution of nucleosome centers. A normalization step then transforms the smoothed frequency function into a probability function for nucleosome centers with values between 0 and 1. The MMC simulation is based on Boltzmann statistics. Considering a Boltzmann ensemble, the probability and the energy of a state are connected. Because we are only interested in energy differences, we derive the energy E i from the Boltzmann factor ():where P i is probability of finding a nucleosome center at base pair i, k B the Boltzmann constant and T the temperature.The MMC criterion in step (3) ensures that genomic positions are populated with nucleosomes according to the input distribution from MNase-seq experiments (Supplementary). We additionally introduced a chemical potential to enforce the binding of nucleosomes:where N is the change in the number of nucleosomes. The potential gives a constant energetic reward for every added nucleosome and an energetic penalty for every removed nucleosome. Nevertheless, genomic positions with low probability remain nucleosome-free owing to their unfavorable overall energy. The MMC algorithm produces a statistical ensemble of possible nucleosome populations. Pseudo-random numbers were generated using the Mersenne Twister algorithm ().
Simulated annealing for an optimized nucleosome placementThe MMC algorithm can be combined with a simulated annealing scheme to search for a single optimized solution of the nucleosome positioning problem. In this case, the simulation starts at a high temperature, causing the nucleosome population configurations to be highly dynamic. Over the simulation run, the temperature is gradually reduced with exponential decay. At low temperatures, the annealing process resembles an energy optimization because nucleosomes are allowed to move only to more favorable positions (). The final nucleosome configuration of the annealing run represents the result of nucleosome positioning.
RESULTSWe analyzed experimental nucleosome maps in mouse ESCs, as well as NPCs derived from these and MEFs for the same mouse strain (). In a first step, we identified non-overlapping nucleosome configurations from the experimental data as described in Section 2.1. We weighted the contribution of each nucleosome configuration using a least squares method. Based on the weighted configurations, we determined the relative occlusion of DNA with nucleosomes and characterized the dynamics of nucleosome positioning at particular genomic features.
Quantifying accessibility changes at transcription factor binding sites during cell differentiationThe binary-variable analysis described in Section 2.1 yields the proportion of the overall occupancy made up from each individual nucleosome configuration. This enables quantification of the relative occlusion of DNA by nucleosomes. We focused on transcription factor binding sites in promoter and enhancer regions that were determined previously by chromatin immunoprecipitation in mouse ESCs (). For the analysis, we evaluated the center of a given transcription factor binding site and computed the percentage of weighted configurations, which occlude the binding site with a nucleosome. In contrast to the occupancy, which was normalized globally, this relative occlusion value refers to nucleosome configurations within one cluster of overlapping peaks. We found significant differences in the relative occlusion among the three cell lines (and Supplementary). For the example shown in, some transcription factor binding sites were found to be fully buried in a nucleosome in all configurations (), whereas others were fully exposed (for example the STAT3 site,). Furthermore, the accessibility of transcription factor binding sites showed large variations between the three cell types at some other sites: for example, the Tcfcp2l1 site in the enhancer region studied had a medium accessibility in ESCs and NPCs but was completely occluded in MEFs ().3.2 Computing stringency of nucleosome positioning to map large-scale nucleosome occupancy changes A metric introduced by Valouev et al. quantifies the stringency of positioning based on the number of overlapping nucleosome positions (). Here, we used the number of unique and incompatible nucleosome configurations as a measure of the dynamics of a particular locus. We quantified stability versus flexibility in the nucleosome positions by calculating a stringency value S: S  1=n S 4 where n S is the number of nucleosome configurations with a value s i 40 (Section 2.1). A stringency of S  1 describes a configuration with stably positioned nucleosomes, whereas a value of 0.25 means that four different nucleosome configurations coexist in a given genomic region. Thus, low stringency values indicate 'mobile nucleosome hot spots', where nucleosomes can be arranged in many different configurations. When analyzing the three different cell differentiation states in this manner, we found regions with similar stringency patterns as well as regions with significant differences (). Raw data were smoothed with a sliding average (window size  1000 bp). The number of individual nucleosome configurations can vary dramatically between the cell lines. See for example the arrows in the region of LINE repeats from experimental bias, additional information is required, e.g. coverage maps from MNase-digested naked DNA or synchronized cells.
Applying the simulated annealing method to the Samd4 locusThe MMC approach was implemented in our open source software tool NucPosSimulator. As described in Section 2.2, it generates a dynamic nucleosome population by applying random Monte Carlo moves. The total number of positioned nucleosomes is variable and depends on the experimentally determined nucleosome occupancy, which enters into the energy function (Section 2.2). Each simulation run started with nucleosome-free DNA. Thus, in the first part of the simulation, the number of nucleosomes increased rapidly. After the equilibration phase, the frequency of adding and removing events was balanced and the number of nucleosomes fluctuated around a stable value. Nucleosomes were allowed to move around and populate all positions that were covered by reads of nucleosomal DNA. In the simulation run, the algorithm generates a statistical ensemble of possible solutions for the nucleosome positioning problem. To produce a single solution, we applied a simulated annealing scheme. During the simulations, the temperature was continuously decreased to 'freeze' the nucleosome population (). The annealing yielded a configuration that was optimized in terms of nucleosome density as well as fitting the experimental occupancy data. We performed a simulated annealing procedure for the nucleosomes occupancy data from the three mouse cell lines () and analyzed the nucleosome maps of the Samd4 locus, with 300 kb length including the gene locus itself and flanking DNA up-and downstream. Simulation parameters are listed in Supplementary Table S1. We found 1420, 1476 and 1513 nucleosomes for ESCs, MEFs and NPCs, respectively. Dividing by the locus length yielded a nucleosomal repeat length (NRL) of 211, 203 and 198 bp, respectively. This is slightly lower than the genome-wide global average, which yielded NRLs of 186193 bp (). The latter is based on a region of up to $10 nucleosomes and includes non-genic regions. Furthermore, local variations from the global average are expected so that the NRL values determined for the Samd4 are well within the values expected from the experiments. Our approach led to a higher number of nucleosomes for a single configuration than a best-peak-first peak-calling approach. However, a high number of detected nucleosomes is only meaningful in combination with sufficient accuracy, which we validated in the next steps.
Comparison with peak-calling approachesAs explained in the Introduction, peak-calling approaches address the problem of finding the ensemble-average nucleosome positions, which is different from the problem of finding the most probable nucleosome configuration in a single cell addressed here. Nevertheless, a comparison of our method with peak-calling approaches is instructive. As a benchmark, we compared our NucPosSimulator software with the peak-calling tool PeakPredictor from the GeneTrack project () and the recently published positioning tools nucleR () and NOrMAL (). We used the Samd4 locus as a test case and analyzed nucleosome positions from the ESC dataset (). The output of all tools is affected by their parameterization. For PeakPredictor, we used two different smoothing factors and a peak-to-peak distance of 147 bp to prevent overlapping peaks. NucPosSimulator was used with its default smoothing factor of 20 bp and a nucleosome size of 147 bp. The tool nucleR does not provide a peak prioritization strategy, and can thus return peaks from overlapping nucleosomes. However, the output contains a score for eachThe occupancy data that were used to derive the energy function. (b) Snapshots of the nucleosome population during a simulations run. Each row of rectangles represents one configuration. Simulation starts with naked DNA at step 0 and stops at a stable nucleosome configuration. (c) Annealing scheme: the temperature decreases gradually from 600 K to 0.1 K, at which point the nucleosome population freezes. Nucleosome positions after a simulated annealing run. Ellipses indicate nucleosome positions for (a) ESC, (b) MEF and (c) NPC cell lines. The nucleosomes are not always located at peak positions, but rather are located such that the overall energy of the system is optimized called peak. For comparison reasons, we used this quality value to sort the peaks and called the best peaks first while excluding less significant peaks in a neighborhood of 147 bp. The tool NOrMAL was originally developed to derive nucleosome positions from single-end reads. We transformed our paired-end data back to single-end data and performed the analysis with NOrMAL in two setups, the first allowing 35% overlap between nucleosomes and the second allowing no overlap. The analysis with NucPosSimulator yielded the largest number of positioned nucleosomes (), which is in better agreement with the experimentally determined nucleosome density (Section 3.3) than results from other tools. In addition, we used synthetically generated nucleosome maps to assess accuracy and number of positioned nucleosomes simultaneously and compared the results with nucleR and PeakPredictor (). Synthetic nucleosome maps were sampled after addition of noise to generate more realistic data. A part of the nucleosome maps was generated with the nucleRpackage (for details see Supplementary). In regularly spaced nucleosome sets with no overlap, all tools detected every nucleosome with high accuracy. In highly overlapping nucleosome configurations (e.g. the Samd4 dataset or set 5,), the simulated annealing had clear advantages over the best-peakfirst strategies, concerning the number of detected nucleosomes, while keeping a high accuracy.summarizes the characteristics of the different nucleosome positioning strategies based on a synthetic nucleosome map. The binary-variable analysis recovers the source components within clusters of overlapping nucleosomes. NucPosSimulator generates an optimized non-overlapping nucleosome configuration from ambiguous experimental data. The solution is optimized to the following criteria: maximal number of nucleosomes and good compliance with the input distribution, i.e. accuracy. Best-peak-first strategies focus locally on the highest peaks but dismiss relevant peaks in the neighborhood that would contribute to an optimal overall solution. Our simulation approach is suited for genomic regions up to several mega base pairs (Mb). In contrast to the other tools mentioned, it is currently too computationally intensive to be applied to larger genomic regions. However, in many instances it is feasible to separate large genomic areas into smaller parts (). Regions kept free of nucleosomes by, for example, the binding of CTCF () act as insulators, preventing steric interactions between nucleosomes. Also, chromatin domains of $1 Mb apparent in high-resolution microscopy and by in situ cross-linking are functional units (). Thus, smaller genomic regions could be simulated independently and in parallel to reduce computation time. Furthermore, in many instances it is important to calculate the nucleosome distribution at a single enhancer/promoter.Note: The number of positioned nucleosomes at the Samd4 locus for ESCs is shown in the right column.We have described a binary-variable analysis and a Monte Carlo simulation approach to analyze ambiguous nucleosome position data from MNase-seq experiments. Nucleosome maps derived from cell populations represent an overlay of nucleosome configurations from single cells that typically display some heterogeneity. The binary-variable approach analyzes the source components to dissect this heterogeneity, whereas the simulations provide an identification of distinct nucleosome configurations. By using an MC approach, we were able to derive an ensemble of nucleosome chains that can represent the experimental dataset as a sum of distinct configurations. Furthermore, we derived an optimized nucleosome placement from the MC ensemble by a simulated annealing method to derive a single non-overlapping nucleosome configuration for ambiguous MNase-seq data. Compared with previous approaches, it yields a higher number of nucleosomes, which fits better the experimentally determined nucleosome densities. The combination of these approaches offers a comprehensive view on possible nucleosome positions in cell ensembles and accounts for the incompatibility of mutually overlapping nucleosome configurations. By applying our novel methodology to an experimental dataset, we (i) revealed different nucleosome positioning patterns between the three mouse cell types ESCs, MEFs and NPCs; (ii) derived the relative occlusion of transcription factor binding sites by nucleosomes in clusters of overlapping peaks; and (iii) introduced a stringency descriptor to quantify the flexibility of nucleosome positioning. This was applied to mobile nucleosome hot spots from regions of low stringency values that differed between the three cell lines in terms of transcription factor binding site accessibility. Thus, our method identifies biologically relevant nucleosome translocations at functional genomic elements. It can be applied to the increasing number of experimental nucleosome occupancy datasets to extract important information for the functional analysis of nucleosome positions and their translocation that cannot be obtained easily with existing techniques. In particular, we consider it as crucial to break down the ensemble average data into specific configurations that each represents the genome organization of a single cell. This is essential to further dissect nucleosome translocation changes or to evaluate the spatial folding of a given locus in meaningful manner.
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Modeling nucleosome position distributions at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
R.Sch pflin et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
