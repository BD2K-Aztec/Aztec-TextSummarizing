Motivation: PacBio sequencers produce two types of characteristic reads (continuous long reads: long and high error rate and circular consensus sequencing: short and low error rate), both of which could be useful for de novo assembly of genomes. Currently, there is no available simulator that targets the specific generation of PacBio libraries. Results: Our analysis of 13 PacBio datasets showed characteristic features of PacBio reads (e.g. the read length of PacBio reads follows a log-normal distribution). We have developed a read simulator, PBSIM, that captures these features using either a model-based or sampling-based method. Using PBSIM, we conducted several hybrid error correction and assembly tests for PacBio reads, suggesting that a continuous long reads coverage depth of at least 15 in combination with a circular consensus sequencing coverage depth of at least 30 achieved extensive assembly results.
INTRODUCTIONThe advent of high-throughput sequencing technologies enables us to determine various genomes rapidly. A number of sequencers have been developed (e.g. Illumina, 454 and SOLiD), and Pacific Biosciences, or 'PacBio' for short, has provided a unique sequencer, which produces two types of reads: (i) continuous long reads (CLR) (long reads with high error rates), and (ii) circular consensus sequencing (CCS) reads (short reads with low error rates) (see Supplementary Tables S1S3 for empirical statistics of CLR and CCS reads). These two types of read set could be useful for hybrid de novo genome assembly, and, using the PacBio sequencers, Chin and Sorenson (2011) have determined the genome sequences of two clinical Vibrio cholerae strains. There are several simulators for reads produced by highthroughput sequencing technologies, such as pIRS (), ART (), Grinder (), FlowSim (), MetaSim () and dwgsim in SAMtools () (see also Supplementary). However, no read simulator has targeted the specific generation of PacBio libraries so far. We have therefore developed a simulator (called PBSIM) that simulates both CLR and CCS reads of PacBio sequencers. We adopted two simulation approaches: (i) a sampling-based simulation (in which both length and quality scores are sampled from a real read set), and (ii) a model-based simulation. In addition, we conducted hybrid error correction and assembly tests for datasets simulated by PBSIM, suggesting that a CLR coverage depth of at least 15 in combination with a CCS coverage depth of at least 30 achieved extensive assembly results.
METHODS
Model-based simulation
Analyses of real datasetsModels of read length and quality score were derived from features observed in real PacBio reads publicly available. Only PacBio reads filtered by length (4100 bp) and accuracy (475%) were used in constructing the models because only the filtered PacBio reads were used in de novo assemblies (). To learn how to simulate differences (errors) introduced to reads, we analyzed real PacBio reads by aligning them to reference sequences. LAST () was used for the alignment with parameters: match  1, mismatch  2, gap existence  1 and gap extension  1. The detailed results are shown in the Supplementary Material: Supplementary(basic statistics),(patterns of substitutions),,(patterns of insertion and deletion) and(length of insertion and deletion).
Distribution of lengthAccording to observed distributions of read length, we used log-normal distributions to model the length of CLR and CCS reads (Supplementary Figs S1S3).
Distribution of read accuracyFor CLR reads, the average accuracy over the length of each read is taken from a normal distribution with parameters (mean, , and standard deviation, ) given by the user. For CCS reads, an exponential function, fx  exp0:5x  75 75 x 100 0 0 x575 was used for modeling the accuracy of every read (Supplementary Figs S4S6).
Quality scoresErrors from single molecule sequencing are considered to be stochastic (random). In fact, no position-specific error profile in CLR and CCS reads was found (compare with Supplementary *To whom correspondence should be addressed.). Quality scores are therefore simulated stochastically, i.e. in the model-based simulation, a quality score at each position of a simulated read is randomly chosen from a frequency table of quality scores. For each accuracy of a read, frequencies of quality scores were precomputed using Escherichia coli C227-11/55989 CLR datasets and C227-11 CCS dataset. For accuracies of 059% and 86100% of CLR and 084% of CCS, uniform distributions are used because datasets are not sufficiently large. Note that these CLR and CCS datasets were not filtered by the length (4100 bp) and accuracy (475%).
Simulation of nucleotide sequencesSimulated read sequences are randomly sampled from a reference sequence, and differences (errors) of the sampled reads are introduced as follows. The substitutions and insertions are introduced according to the quality scores, which are chosen as described in Section 2.1.4. Their probabilities are computed for each position of a simulated read from the error probability of the position (computed from the quality score of the position), and a ratio of differences was (substitution/insertion/deletion) given by a user (Supplementary Section S1). From the observations of the real PacBio reads, we found a weak frequency bias in the substitution pattern (Supplementary), but the cause of this bias is not clear; hence, we do not include this pattern in the current version of PBSIM (i.e. substitutions are simulated by using a uniform distribution.). On the other hand, we found that the probability that inserted nucleotide is the same as either of its neighbors is significantly higher than that of random choice (Supplementary), and this bias is considered to be caused by the mechanism known as cognate sampling (); therefore, half of inserted nucleotides are chosen to be the same as their following nucleotides, and the other half are randomly chosen. From the observations of the real PacBio reads, we found that the nucleotide frequency of deletion is uniform (Supplementaryand d), and that the distribution of deletion length is similar to the geometric distribution (Supplementary). Therefore, the deletion probability is uniform throughout all positions of every simulated read, which is computed from the mean error probability of the read set and the ratio of differences (Supplementary Section S1). It was reported that coverage depth of PacBio reads across a genome and against GC content is nearly uniform (). We therefore do not introduce coverage bias and GC bias to simulated sequence reads.
Sampling-based simulationIn the sampling-based simulation, lengths and quality scores of reads are simulated by randomly sampling them in a real library of PacBio reads (provided by the user). Subsequently, their nucleotide sequences are simulated by the same method with the model-based simulation described in Section 2.1.5.
RESULTS AND DISCUSSIONPBSIM is implemented using the C language. PBSIM produces a set of simulated reads in the FASTQ format () and a list of alignments between a reference sequence and simulated reads in the MAF format (https://cgwb.nci.nih.gov/FAQ/ FAQformat.html#format5).
Simulator performance
Speed and memoryTo test PBSIM's speed, we chose three genomes from Supplementary Table S7 as reference sequences, and simulated CLR and CCS reads at 10, 20, 50 and 100 coverage to each of the reference sequences. Supplementaryshows the computational time for simulating reads by PBSIM, indicating that PBSIM is sufficiently fast (at most 200 s). On the other hand, the memory requirement of PBSIM depends on the length of the reference sequence.
Accuracy of simulatorBecause the length and accuracy are selected stochastically, the difference between a set of real reads and a set of simulated reads tends to be larger when the number of simulated reads is smaller. We evaluated this point by using the-phage genome (which is the shortest genomes in this study; see Supplementary). In the sampling-based simulation, we used E.coli C227-11 real reads as the sample reads. Supplementary Figures S11 and S12 show a comparison of real reads and simulated reads. Note that the variance would be much smaller if we used a longer reference sequence. Alignment tests of simulated reads show that simulated reads reproduced CLR and CCS reads well (Supplementary, compared with Supplementary).
Assembly test for simulated readsFinally, we conducted hybrid error correction and assembly tests using datasets simulated by PBSIM. We simulated CLR and CCS reads with coverage depth of 5, 10, 15, 20, 30, 40 and 50 (by both model-based and sampling-based simulations), and tested all the combinations of these coverage depth. In the model-based simulation, for CLR reads, the length and accuracy are set to be $3000 bp and 78%, respectively; for CCS reads, the length and accuracy are set to be $450 bp and 98%, respectively. In the sampling-based simulation, we used E.coli C227-11 real reads (from which reads are sampled). Reference sequences tested were E.coli 55989, Drosophila melanogaster chr2L and Homo sapiens chr21 (compare with Supplementary). For a hybrid assembly of CLR and CCS reads, we used the PacBioToCA (), a hybrid error correction method and de novo assembly of single-molecule sequencing reads. In the pipeline, error correction of CLR reads was first conducted using CCS reads, and then the corrected (CLR) reads were assembled with the Celera assembler (). CLR reads without error correction can not be assembled by the Celera assembler because of the high error rate. The results are shown in, Supplementary Figures S13 (the number of contigs), S14 (aligned reference bases by PBcR), S15 (aligned reference bases by contigs), S16 (N50 of contigs) and S17 (maximum length of contigs). For every reference sequence, an extensive assembly was obtained with a CLR coverage depth of at least 15 in combination with a CCS coverage depth of at least 30 (Supplementary Figs S16 and S17). Additionally, we simulated and assembled error-free CLR reads for all the CLR coverage depth tested earlier. Although the error correction of PacBioToCA improved assembly metrics, assembly of error-free reads was more comprehensive still. Also, higher read coverage did not always translate into larger assembly. These results suggest that there is room for progress in the correction of PacBio errors and read assembly (see the 'error-free' parts inand Supplementary Figs S13S17). In this section, we have shown that users can use PBSIM to design sequencing experiments (e.g. to determine the depths of CLR and CCS reads). Note that users can design sequencing experiments of hybrid assembly of PacBio CLR (simulated by PBSIM) combined with Illumina's short reads (simulated by existing Illumina simulators e.g.). PBSIM will be also useful for comparisons of hybrid assembly algorithms.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Y.Ono et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
PBSIM: PacBio reads simulator at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
