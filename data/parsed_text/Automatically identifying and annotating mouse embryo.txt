Motivation: Deciphering the regulatory and developmental mechanisms for multicellular organisms requires detailed knowledge of gene interactions and gene expressions. The availability of large datasets with both spatial and ontological annotation of the spatio-temporal patterns of gene expression in mouse embryo provides a powerful resource to discover the biological function of embryo organization. Ontological annotation of gene expressions consists of labelling images with terms from the anatomy ontology for mouse development. If the spatial genes of an anatomical component are expressed in an image, the image is then tagged with a term of that anatomical component. The current annotation is done manually by domain experts, which is both time consuming and costly. In addition, the level of detail is variable, and inevitably errors arise from the tedious nature of the task. In this article, we present a new method to automatically identify and annotate gene expression patterns in the mouse embryo with anatomical terms. Results: The method takes images from in situ hybridization studies and the ontology for the developing mouse embryo, it then combines machine learning and image processing techniques to produce classifiers that automatically identify and annotate gene expression patterns in these images. We evaluate our method on image data from the EURExpress study, where we use it to automatically classify nine anatomical terms: humerus, handplate, fibula, tibia, femur, ribs, petrous part, scapula and head mesenchyme. The accuracy of our method lies between 70% and 80% with few exceptions. We show that other known methods have lower classification performance than ours. We have investigated the images misclassified by our method and found several cases where the original annotation was not correct. This shows our method is robust against this kind of noise. Availability: The annotation result and the experimental dataset in the article can be freely accessed at
INTRODUCTIONUnderstanding the role of expression of a given gene and interactions between genes in the developmental processes of multicellular organisms requires monitoring the gene expression levels and spatial distributions on a large scale. Two highthroughput methods have been widely used to curate gene expression at different developmental stages of organisms including: DNA microarrays () and RNA in situ hybridization (ISH) (). DNA microarrays measure gene expression levels of a large number of genes for a tissue sample or cell, which can reflect the relative changes of gene expression level in each individual gene during time courses. However, it does not provide spatial gene expression patterns. RNA ISH uses specific gene probes to detect and visualize spatialtemporal information of particular target genes in tissues. It offers the possibility to construct a transcriptome-wide atlas of multicellular organisms that can provide spatial gene pattern information for comprehensive analysis of the gene interactions and developmental biological processes. The result of RNA ISH consists of images of sections of tissue stained to reveal the presence of gene expression patterns. To understand gene functions and interactions of genes in depth, we need to transform the raw image data into detailed knowledge. Annotation of gene expression patterns in the raw images from RNA ISH provides a powerful way to address this issue. The process of annotating gene expression pattern comprises the labelling of images with ontological terms corresponding to anatomical components. For every anatomical component that shows expression in the image, the image is labelled with that anatomical component using an hierarchically structured ontology that describes the developing mouse embryo. Much effort has been devoted to the curation of gene expression patterns in the developmental biology. For example, the EUREXPress project () has built a transcriptomewide atlas for the developing mouse embryo established by RNA ISH; it has so far collected more than 18 000 genes at one development stage of wild-type murine embryos and has curated 4 TB of images. Some studies have been conducted on Drosophila gene expression patterns (), for instance, the research inhas produced 3375 genes for genome-wide analysis on Drosophila. Many other spatial gene expression patterns generated via RNA ISH such as FlyBase () and Mouse Atlas () provide rich information for genetics. Currently, all annotations of spatial gene expression is hand curated by domain experts. With large amount of curated image
L.Han et al.data available already and a further increase in volume expected due to more automatic instruments for ISH, it is difficult and inefficient for domain experts to keep relying fully on manual annotation. Furthermore, the accuracy of annotation heavily relies on the consistency of domain experts. Therefore, it is crucial to develop an automatic method for the annotation of spatial gene expression patterns. Some existing studies have developed methods for annotating images from fruit fly () and adult mouse brain (). These annotations have provided potential opportunities for further genetic analysis. However, to date, no attempt was made to automatic annotation of gene expressions for mouse embryos. In comparison with a fly embryo, the structure of an embryonic mouse in its later stages of development () is more complicated and has many more anatomical components, for instance, the data curated by EURExpress project, used in our study, are all from 23 stage, a late stage in the developmental mouse embryo. The anatomical structure of the mouse embryo is complex and there are over 1500 anatomical features to be annotated. In this article, we have developed and evaluated a method to automatically annotate images resulting from ISH experiments on mouse embryos performed in the EURExpress project (). The main contribution of our study consists of the following aspects.(1) We have developed a method that combines machine learning and image processing. We use image processing to preprocess images and feed the result to a machine learning method to construct classification models for automatic annotation.(2) To cope with issues arisen in multi-anatomical components coexisting in images, we have designed a set of binary classifiersone for each anatomical component. The main advantage is a strong extensibility of the framework. Given a dataset, if a new anatomical component to be annotated appears, we can create a new classifier and directly use it without the need to re-create previous classifiers. Consequently, the classification performance of existing classifiers will not be affected when new classifiers are added.(3) We evaluate our method on image data from the EURExpressII study where we use it to automatically classify nine anatomical terms: humerus, handplate, fibula, tibia, femur, ribs, petrous part, scapula and head mesenchyme. The accuracy of our method lies between 70% and 80% with few exceptions. We show that other known methods perform far worse and have much more variability in their accuracy.(4) We have investigated the images misclassified by our method and found several cases where the original annotation was not correct. This shows our method is robust against this kind of noise.The rest of this article is organized as follows. The problem domain is described in Section 2; Section 3 presents the method used in this proposed framework; Section 4 describes the evaluation of our method; Section 5 concludes and discuss our work.
PROBLEM CONCEPTUALIZATION
Data description and challengesThe data used in this article is from the EURExpress project (www.eurexpress.org). The EURExpress project aims to build a transcriptome-wide atlas for the developing mouse embryo established by RNA ISH. The project uses automated processes for ISH experiments on all genes of whole-mount mouse embryos at Theiler Stage 23. The result is many images of embryo sections that are stained to reveal where RNA is present, namely where genes are expressed in embryos. These images are then annotated by human curators. The annotation consists of 1500 terms representing anatomical components, which are used to label each image if and only if an image exhibits gene expression in the whole or part of that component. So far, 80% of images have been manually annotated by human curators. The goal is to automatically perform annotation of the remaining 20% and any new images with the correct terms. Currently, 85 824 images remain to be annotated. In other words, the input to our method is a set of image files and corresponding metadata. The output will be the identification of all anatomical components that exhibit gene expression patterns for each image. This is a typical pattern recognition task. As shown in, we need first to identify the features of 'humerus' in the embryo image and then annotate the image using ontology terms listed on the left side. Three major challenges must be overcome to automate the process of the annotation.
Automatic annotation of mouse embryo gene expression patterns(1) The images created from RNA ISH experiments include variations arising from natural variation in embryos and technical variation from processing and capturing material. The same anatomical components, therefore, may have variable shape, location and orientation.(2) Each image for a given gene will in general be annotated with multiple anatomical terms. This means features for multiple components coexist in the image, which increases the difficulty of discrimination. Hence, if components often exhibit gene expression in the same image, it will be hard to discriminate between the two components.The number of images associated with a given anatomy terms is distributed unevenly. Some terms may be associated with many images, whereas others with only a few.To address these challenges, we have developed a new method that combines image processing with machine learning techniques to automatically identify gene expressions in images, as shown in.
A high-level overview of the pattern recognition taskTo automatically annotate images, the following three stages are required. At the training stage, the classification model has to be built, based on a training set of image datasets with human annotations. At the testing stage, the performance of the classification model has to be evaluated in terms of accuracy. Finally, when the performance is satisfactory, at the deployment stage the model has to be deployed to perform the classification of images without annotation. The following subtasks are needed for the training stage: integration of images and annotations; image processing; feature generation; feature selection and extraction; and classifier design. These are shown in.@BULLET Image integration: before we can perform machine learning, we need to integrate data from different sources. The manual annotations are stored in a database and the images are located in a file system. The result of this integration process is a set of images with annotations.@BULLET Image processing: the width and height of images are variable. We apply median filtering and image rescaling to reduce image noise and rescale the images to a standard size. The output of this process is a set of standardized and de-noised images. These images can be represented as 2D arrays mn.@BULLET Feature generation: after image pre-processing, we generate features that represent different gene expression patterns in images. We use a wavelet transform method to obtain features. The features again are represented as 2D arrays mn.@BULLET Feature selection and extraction: due to the large number of features, the feature arrays must be reduced before we can construct a classifier. This can be done by either feature selection or feature extraction or a combination of both. Feature selection selects a subset of the most significant features for constructing classifiers. Feature extraction performs the transformation on the original features to achieve the dimensionality reduction and obtain a representative feature vectors for constructing classifiers. @BULLET Classifier design: the main task is to annotate images with the correct anatomy terms. As gene patterns in images will typically express in several anatomical components, we must construct classifier that can discriminate between patterns in different components. Here, we have formulated this multiclass problem as a two-class problem. Namely, we construct a set of binary classifiers where each classifier will aim to decide for one anatomical component, whether that component exhibits gene expression. In other words, the result of such a classifier is either 'detected gene expression' or 'not detected'.The test and evaluation stage will use the result from the training stage to validate the accuracy of classifiers. During this stage, k-fold cross-validation is used for evaluating the classification performance. With k-fold validation, the sample dataset is randomly split into k disjoint subsets. For each subset, we construct a classifier using the data in k 1 subsets and then evaluate the classifier's performance on the data in the k-th subset. Thus, each record of the dataset is used once to evaluate the performance of a classifier. If 10-fold validation is used, we can build 10 classifiers each trained on 90% of the data and each evaluated on a different 10% of the data. This process is essential to prevent unlucky distributions of training and testing datasets and to prevent the overall classifier from overfitting its performance on one training set. The deployment stage deals with the configuration on how classifiers are deployed, i.e. how classifiers are applied to automatically add annotation to images that have not been annotated before.
METHODSWe have adopted image processing and machine learning methods to facilitate the annotation task.
Image processingWe first obtain training datasets by integrating both images and manual annotations using a database SQL query to specify which images will be included. These images will be filtered and standardized to a uniform size suitable for the feature generation process. We use median filter to remove noise from images (). The median filter is a non-linear filter. Its advantage over the traditional linear filter is its ability to eliminate noise values with extremely large magnitudes. The median filter replace a pixel using the median of its neighbouring pixels' values. Given a 2D image, the value of a pixel is represented as f 0 (m 0 ,n 0 ), a neighbourhood of f 0 is represented as K and a pixel value in k is represented as f (m,n). The representation of a median filter can be expressed mathematically as,and b show the result of an image before and after the median filter. The filtered image is much smoother than the original image. In addition to the median filter, we also standardize image sizes so that the images can be processed by the methods used in the feature generation step (e.g. where wavelet transform and matrix operations involved). Given an image, the output of the standardization is scale times of the original image size and all scaled images will have the same size as pre-specified; for instance, the dimension of an original image is 180220. If the required image size is 200368. The scaled image size will be 200368.
Feature generationTo characterize multiple spatial gene expression patterns in embryo images, we use wavelet transforms to generate features. The wavelet transformis well known as a powerful tool for applications in signal and image processing (). There are two major reasons for using the wavelet transform here. The wavelet transform provides a mathematical tool for the hierarchical decomposition of functions to obtain a projective decomposition of the data into different scales and therefore extract local information. In contrast, Fourier Transforms only provide global information in frequency domain. By using wavelet transforms, an image can be decomposed into different subimages at subbands (different resolution levels). As the resolution of the subimages are reduced, the computational complexity will be reduced. In mathematics, the wavelet transform refers to the representation of a signal in terms of a finite length or fast decaying oscillating waveform (known as the mother wavelet). This waveform is scaled and translated to match the input signal. In formal terms, this representation is a wavelet series, which is the coordinate representation of a square integrable function with respect to a complete, orthonormal set of basis functions for the Hilbert space of square integrable functions. Wavelet transforms include continuous wavelet transform and discrete wavelet transform. In this case, the 2D discrete wavelet transform has been used to generate features from images. In fact, the wavelet transform of a signal can be represented as an input passing through a series of filters with down sampling to derive output signals based on scales (resolution levels). This is achieved using iterations.shows the filter representation using the wavelet transform on a 2D array input. LL is a low-low pass filter that is a coarser transform of the original 2D input and a circle with an arrow means down sampling by 2; HL is a high-low pass filter that transforms the input along the vertical direction; LH is a low-high pass filter that transforms the input along the horizontal direction; and HH is a high-high pass filter that transforms the input along the diagonal direction. After the first iteration of applying these filters into the input (called wavelet decomposition), the result of this wavelet transform will be LL1out, HL1out, LH1out, HH1out. In the second iteration, we continue performing wavelet transformation on LL1out and the output will be LL2out, HL2out, HL2out, HH2out. These steps can be continued, which leads to decomposition of the initial input signal into different subbands. Mathematically, for a signal f (x,y) with 2D array M N, the wavelet transform is the result of applying filters at different resolution levels (e.g. LL1out, HL1out, LH1out, HH1out, LL2out, HL2out, etc.), which can be calculated as follows:
L.Han et al.(b)where i = (H,V ,D), W  (j 0 ,m,n) is LLout1 and W i  (j,m,n), respectively, represents HL1out, LH1out and HH1out when the wavelet decomposition is performed along the vertical, horizontal and diagonal direction. j 0 is a scale as start point. (j 0 ,m,n) and  j,m,n are wavelet basis functions. In this case, we use Daubecheis wavelet basis functions (db3) (). An example of a wavelet transform of an embryo image at the second resolution level is shown in. The image is decomposed into four subbands (subimages). The subbands LH1, HL1 and HH1 are the transformations of the image along horizontal, vertical and diagonal directions with the higher frequency component of the image, respectively. After applying filters, the wavelet transform of LL1 is further carried out for the second-level resolution as LL2, LH2, HL2 and HH2. If the resolution of the image is 30401900, the dimension of subimages are down sampled by a factor of 2 at the second resolution level and are, respectively, LL2 (760475), LH2 (760475), HL2 (760475), HH (760475), LH1 (1520950), HL1 (1520950) and HH1 (1520950). The number of coefficients from the total wavelet transformthese are the featuresfor this image is 30401900 = 5 776 000.
Feature selection and extractionDue to the large number of high-dimensional features generated in the previous subtask, it is necessary to select the most discriminating features. We use Fisher Ratio analysis () for feature selection and extraction. The Fisher Ratio finds a separation space to discriminate features of two classes by maximizing the difference between classes and minimizing differences within each class. For two classes,, the Fisher Ratio is defined as the ratio of class-to-class variance to the variance of within classes. The Fisher Ratio can be represented as follows:[
Automatic annotation of mouse embryo gene expression patternswhere m 1,i represents the mean of samples at the i-th feature in C 1 , m 2,i represents the mean of samples at the i-th feature in C 2. v 1,i represents the variance of samples at the i-th feature in C 1. Similarly, v 2,i represents the variance of samples at the i-th feature in C 2 .
Classifier constructionWe construct a classifier for each anatomical component and formulate our multi-class problem as a two-class problem. Namely, for each anatomical component, e.g. a classifier, we create a training dataset that is divided into two classes; one class contains all the samples that exhibit spatial gene expression in part of the anatomical component and the other contains all the samples without any gene expression in that component. In this case, we use linear discriminant analysis (LDA) (). For a given two-class problem (, the linear discriminant function can be formulated as follows:The goal is to find W (a weight vector) and w 0 (a threshold) so that if f (X) > 0, then X is C 1 and if f (X) < 0 then X is C 2. The idea is to find a hyperplane that can separate these two classes. To achieve this, we need to maximize the target function denoted as follows:where S W is called the within-class scatter matrix and S B is the betweenclass scatter matrix. They are defined, respectively, as follows:where m 1 is the mean of x i  C 1 and m 2 is the mean of y i  C 2 .
EXPERIMENTAL EVALUATION
Experimental setup and evaluation metricsCurrently, we have built up nine classifiers for nine gene expressions of anatomical components (humerus, handplate, fibula, tibia, femur, ribs, petrous part, scapula and head mesenchyme) and have evaluated our classifiers using 809 images. We have used 10-fold cross-validation to validate the accuracy of our proposed method. The dataset (809 image samples) is randomly divided into 10 subsets. Nine subsets are formed as a training set and one is viewed as a test set. This process is then repeated 10 times with each subset used exactly once as the validation dataset. The classification is calculated based on the average accuracy across the 10-folds. We adopt both 'sensitivity' and 'specificity' as evaluation metrics to measure the classification performance. If both of specificity and sensitivity are high, we can say the accuracy of classification is good. Sensitivity is the true positive rate that represents the proportion of actual positives (i.e. those images that have gene expression in the anatomical component) in the test dataset that are correctly predicted. Specificity is the true negative rate that represents the proportion of negatives (e.g. those images that do not have gene expression given the anatomical component) that are correctly predicted.shows the results of 10-fold validation for 9 anatomical components in terms of specificity and sensitivity as averaged over the 10-folds with a confidence interval of 95% around the average (in brackets). The confidence interval for specificity and sensitivity can be calculated as average  confidence. The result clearly shows that the proposed method for automatic classification works well with the specificity and sensitivity between 70% and 80% for most components. The exceptions are ribs, where it is difficult to identify gene expression that is not present, and head mesenchyme, where it is difficult to identify gene expression that is present. We postulate that this could be a result of the particular shape and distributed nature of these anatomical components.
A comparative study with other machine learning methodsWe have evaluated other well-known machine learning algorithms. These are Support Vector Machine (SVM) (Shawe), Artificial Neural Networks (ANN ) () and Convolutional Neural Networks (CNN) () and Lagrangian Support Vector Machines (LSVMs) (). SVM is a classification method that uses a maximum margin hyperplane from a set of hyperplanes in a high-dimensional space to separate two or more classes by distancing the plane from the closest data point of all classes. LSVM is a specific SVM based on an iterative approach with the aim to speed up training.ANN is an Artificial Neural Network program that is inspired by the operation of biological neural networks. It provides a non-linear classification. The neural network processes samples one by one and compares the results calculated by the neural network with the known classification of samples. The errors are then fed back into the network in order to modify parameters for the next iteration until the output gets closer to the known correct classification of samples. There is another class called Convolutional Neural Networks (CNN), which are often used to face recognition. They provide non-linear algorithms for feature extraction in hidden layers built into the ANN, which consider local receptive fields, shared weights and spatial subsampling to achieve a certain degree of shift and distortion invariance (). We have computed both the sensitivity and specificity when using SVM, LSVM, ANN and CNN to perform the patter recognition task. We have optimized the parameter settings for these algorithms and then have performed the same k-fold cross-validation as for our method. The results are shown in. When compared with results from our method, we conclude our method outperforms the other four methods as it provides the most consistent results across the anatomical components as well as the most balanced results between sensitivity and specificity. Note that it is easy to get a high sensitivity by classifying many images as positive, but this will lead to a low specificity. The results from SVM for handplate and head mesenchyme are a good example of this kind of unwanted behaviour. (Although both SVM and LDA are using hyperplanes to separate two classes, their performance can have a vast difference based on problem domains. This is because they adopt different optimal criteria to find that hyperplanes. With SVM, it is hard to reach convergence in the experiments.) Similarly, with CNN, we have worse classification performance, comparing with others. (It is also hard to reach convergence in the experiments.) The overall classification performance is compared inby multiplying the specificity and sensitivity results of each method.
A further investigation into falsely classified imagesUpon inspection of the images falsely classified in the test sets, either as false positives (i.e. classified as gene expression in anEuxassay 003591, Section 1: erroneous false negative for humeruscurator has annotated based on gene expression seen in other sections where none is found here. anatomical component while the manual curation states that no expression is present) or false negatives, we found that several images were erroneously annotated. In, we discuss and show several examples where we explain the reasons for the erroneous annotations. This suggests that the results incan be further improved by correcting the annotation of these images in the original dataset and then re-running the whole experiment. It also suggests that our technique is robust against the kind of noise arising from erroneous human annotation. Such noise is common in curated datasets often due to fatigue by the curators.
CONCLUSION AND DISCUSSIONWe have developed and evaluated a method for automatic identification and annotation of gene expression patterns in images of ISH studies on mouse embryos. Our method has several important features. The automatic identification and annotation of gene expression patterns is based on a flexible combination of image processing and machine learning techniques and provides an efficient way for domain experts that handle large datasets. The method allows incremental construction of classifiers as we have formulated the multi-class problem (i.e. what anatomical components exhibit gene expression in an image?) as a two-class problem (i.e. in this image does a given anatomical component exhibit gene expression?). One classifier is related only to one anatomical component and its result is, therefore, independent from other classifiers. We evaluate our method on image data from the EURExpress study where we use it to automatically classify nine anatomical terms: humerus, handplate, fibula, tibia, femur, ribs, petrous part, scapula and head mesenchyme. The accuracy of our method lies between 70% and 80% with few exceptions. We show that other known methods perform far worse and have much more variability in their accuracy, both across anatomical components and between their sensitivity (i.e. the ability to correctly classify images that contain gene expression) and specificity (i.e. the ability to correctly classify images that do not contain gene expression).
Page: 1107 11011107
Automatic annotation of mouse embryo gene expression patternsWe have investigated the images misclassified by our method and found several cases where the original annotation was not correct. This shows our method is robust against this kind of noise. Moreover, it shows our method is useful not only for automatic annotation, but also to validate existing annotation.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [09:27 26/3/2011 Bioinformatics-btr105.tex]
