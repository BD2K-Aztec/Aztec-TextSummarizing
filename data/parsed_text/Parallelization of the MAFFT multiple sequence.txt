Multiple sequence alignment (MSA) is an important step in comparative sequence analyses. Parallelization is a key technique for reducing the time required for large-scale sequence analyses. The three calculation stages, all-to-all comparison, progressive alignment and iterative refinement, of the MAFFT MSA program were parallelized using the POSIX Threads library. Two natural parallelization strategies (best-first and simple hill-climbing) were implemented for the iterative refinement stage. Based on comparisons of the objective scores and benchmark scores between the two approaches, we selected a simple hill-climbing approach as the default. Availability: The parallelized version of MAFFT is available at
K.Katoh and H.TohBAliBASE, using different numbers (116) of threads on a 16 core PC (4  Quad-Core AMD Opteron Processor 8378). When the number of threads is eight, the efficiencies of parallelization are 0.89 and 0.55 for the best-first approach and the simple hill-climbing approach, respectively. As expected, the loss of speed in the simple hill-climbing approach increases with an increase in the number of threads. This is because the number of discarded alignments increases, as mentioned above. The loss of speed for the best-first approach is relatively small. However, within the range of the target systems in the present study (common multi-core PCs), the simple hill-climbing approach is faster, and therefore was adopted as the default. We also examined the applicability of the simple hill-climbing approach to larger data. As shown in Supplementary Table, the efficiency with eight threads is 0.550.74 for five datasets, each with 1000 sequences. MAFFT versions 6.8 switch to the pthread version by simply adding the-thread n argument, where n is the number of threads to use. No special configuration is required for parallel processing on a multi-core PC with the Linux operating system.
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
