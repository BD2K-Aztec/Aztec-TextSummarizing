We present a novel R package named synbreed to derive genome-based predictions from high-throughput genotyping and large-scale phenotyping data. The package contains a comprehensive collection of functions required to fit and cross-validate genomic prediction models. All functions are embedded within the framework of a single, unified data object. Thereby a versatile genomic prediction analysis pipeline covering data processing, visualization and analysis is established within one software package. The implementation is flexible with respect to a wide range of data formats and models. The package fills an existing gap in the availability of user-friendly software for next-generation genetics research and education. Availability: synbreed is open-source and available through CRAN http://cran.r-project.org/web/packages/synbreed. The latest development version is available from R-Forge. The package synbreed is released with a vignette, a manual and three large-scale example datasets (from package synbreedData).
BACKGROUNDHigh-throughput genotyping technologies delivering thousands of single nucleotide polymorphism markers (SNPs) have become available for many crop and livestock species. In breeding, selection of the best genotypes can be conducted on high-density marker profiles once sufficiently accurate genome-based prediction models have been established. To achieve this, prediction models are developed based on large training populations for which genotypic and phenotypic data are available (). Implementation of genomic prediction in breeding programs will be advanced through the availability of comprehensive, userfriendly software that covers a wide range of analysis steps. Currently, a researcher is faced with a plethora of different software tools. The program ASReml () provides restricted maximum-likelihood estimation procedures for linear mixed models with arbitrary variancecovariance structure. The program PLINK () implements algorithms for linkage disequilibrium (LD) and identical-by-descent estimation. * To whom correspondence should be addressed.Within the R software (R Development Core Team, 2012), the package regress () fits linear mixed models in which the covariance structure can be expressed as a linear combination of known matrices. However, there is no single software covering the specific needs of genomic prediction. By connecting important analysis tools such as processing of SNP data, estimation of genome-and pedigree-based coefficients of relatedness, different statistical models and cross-validation (CV), we provide a framework for genomic prediction within one software. Where necessary, a gateway to other software is provided to extend the field of applications. This enhances the implementation of customized high-throughput analysis pipelines. An intuitive application is warranted through the consistent use of a unified data object.
OVERVIEWThe data flow in synbreed is guided by a single, unified data object of class gpData ('genomic prediction Data') which is used for storage of multiple data sources. This includes an array for the phenotypes (individual  trait  replication) and a matrix for the marker genotypes (individual  marker scores). If required, this structure can be extended to include pedigree information and a marker map. All analysis functions are based on this data structure. A key feature of the synbreed package is the generality of the class gpData which is suitable for a wide range of statistical methods using genotypic and phenotypic data. Moreover, it is very convenient to store and share objects of class gpData. Any object of class gpData can be converted to class cross in the qtl R package () and vice versa or a data.frame. The function codeGeno provides algorithms for the processing of SNP data. This includes the transfer of arbitrary coding schemes into the number of copies of the minor allele, preselection of SNPs and imputing of missing values, e.g. using a gateway to Beagle (). Linear mixed models are used for the prediction of genetic values from genome-wide marker data with y = X +Zu+e,where y is the n1 vector of n phenotypic records,  is the vector of fixed effects and u is a n1 vector of random effects. Observations are allocated to the fixed and random effects by the corresponding design matrices X and Z. The n1 vector e denotes the residuals with e  N(0,I 2 ). In genome-based best linear unbiased prediction (GBLUP), genetic values are modeled as random effects with u  N(0,U 2 u ), where U is the realized relationship matrix () and  2 u is the genetic variance pertaining to model (1).The GBLUP model can be fitted with package regress through the unified interface of the function gpMod. Moreover, we implemented pedigree-based BLUP and established a connection to the BLR package for Bayesian regression models (). CV can be used to assess the predictive ability (correlation of predicted and observed phenotypic values) of a statistical model with stratified CV schemes (). All results generated by the package such as the LD patterns and coefficients of relatedness can be visualized using summary statistics and innovative plot functions.
EXAMPLEThis example traces the steps from processing raw data to the validation of a prediction model according to the workflow in Supplementary. We use simulated data of a maize breeding program. It comprises 1250 doubled haploid (DH) lines fingerprinted for 1117 polymorphic SNPs and a quantitative trait evaluated in testcrosses of DH lines with a single tester.Step 1 (raw data merge): The object maize is given as object of class gpData and hence Step 1 is omitted. To load the data, use data(maize)Step 2 (processing and filtering): DH lines are fully inbred lines and hence homozygous for every SNP. Recoding SNP marker genotypes to the number of copies of the minor allele and preselection of SNPs with a minor allele frequency 0.05 is conducted using maizeC <-codeGeno(maize, maf=0.05)Step 3 (kinship coefficients): Remaining 995 SNPs were used to estimate the realized relationship matrix based on the recoded marker genotypes:U <-kin(maizeC, ret="realized")A heatmap visualization is available by using plot(U), see Supplementary.Step 4 (prediction model): A GBLUP model for the trait is developed using the realized relationship matrix from Step 3. For the prediction of testcross values, the relationship matrix must be replaced by the kinship matrix, i.e. divided by 2. GBLUP <-gpMod(maizeC, mod="BLUP", kin=U/2)Estimates for marker effects are visualized using the manhattanPlot function, see Supplementary.Step 5 (model validation): Finally, we estimate the predictive ability of GBLUP using 2-fold CV with five replications each with a random assignment into estimation set (ES) and test set. The estimated variance componentscomponents components 2 andand and 2 u are committed from Step 4 and used to build a prediction model within every ES: cv <-crossVal(maizeC, k = 2, Rep = 5, cov.matrix = list(U/2), varComp = GBLUP$fit$sigma, Seed=1)By using summary(cv), we obtain an average predictive ability of 0.48 with a range from 0.44 to 0.52.
CONCLUSIONIn the plant breeding community, there is a strong demand for a standard software covering a wide range of analysis steps. The package synbreed offers a comprehensive collection of methods required in the analysis of genomic prediction data. This is a step towards automatized analysis pipelines in the analysis of nextgeneration genotype and phenotype data which are required to bring genomic prediction from theory to practice. Moreover, synbreed is a valuable tool for the education of young scientists and breeders.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
