Motivation: Simulating complex evolution scenarios of multiple populations is an important task for answering many basic questions relating to population genomics. Apart from the population samples, the underlying Ancestral Recombinations Graph (ARG) is an additional important means in hypothesis checking and reconstruction studies. Furthermore, complex simulations require a plethora of interdependent parameters making even the scenario-specification highly non-trivial. Results: We present an algorithm SimRA that simulates generic multiple population evolution model with admixture. It is based on random graphs that improve dramatically in time and space requirements of the classical algorithm of single populations. Using the underlying random graphs model, we also derive closed forms of expected values of the ARG characteristics i.e., height of the graph, number of recombinations, number of mutations and population diversity in terms of its defining parameters. This is crucial in aiding the user to specify meaningful parameters for the complex scenario simulations, not through trial-and-error based on raw compute power but intelligent parameter estimation. To the best of our knowledge this is the first time closed form expressions have been computed for the ARG properties. We show that the expected values closely match the empirical values through simulations. Finally, we demonstrate that SimRA produces the ARG in compact forms without compromising any accuracy. We demonstrate the compactness and accuracy through extensive experiments. Availability and implementation: SimRA (Simulation based on Random graph Algorithms) source, executable, user manual and sample input-output sets are available for downloading at: https://github.com/ComputationalGenomics/SimRA
IntroductionWe address the task of modeling and simulating complex scenarios of related multiple populations with subdivision and admixture. These scenarios can be used to study the effect on the genetic profiles of extant populations as well as for testing complex hypotheses. The aim of simulations is to not only capture the resulting populations but also the relevant evolutionary history (for possible reconstruction studies). In literature, most admixture models are based on rather simplistic hypothesis of their possible inter-evolution history. One of the bottlenecks has been the sheer size of the monolithic common history of multi-populations, each of realistic size. Under these conditions simulators of even simple scenarios of just three populations often do not terminate in reasonable time in spite of meaningful parameter settings (sometimes up to 1012 hours, for instance with COSI ()). We observed a similar abort-and-rerun requirement in our experiments even with the classical algorithm (called Hudson in the paper). We present a framework for modeling complex evolutionary scenarios and an algorithm named SimRA that is both time and space efficient enough to be practical. SimRA makes it possible to run hundreds of experiments in very short time (in minutes) enabling a very effective means of carrying out complex studies, such as in. We demonstrate that the algorithm does not compromise the accuracy of the resulting simulations, all the while being very compact in its description.
BackgroundARG is a directed acyclic graph (DAG) that captures the common evolutionary history of extant samples (). SimRA is based on backward simulation of the ARG. Backward simulations begin in the present and move in time through the past generations and are usually more efficient than forward simulations due to the elimination of many (obvious) redundant paths in the evolution process. The big picture showing the relationship between a complete genealogical network and an ARG highlighting the backward trace of history is illustrated in. Complex simulation of scenarios results in complex interplay of parameters. For instance, what should be the sample size m of a population such that the expected number of active lineages in t generations is more than one. We present analytic forms of the expected ARG characteristics of a population in terms of the input parameters. These derivations use the graph-theoretic results of the random graph model presented in Parida (2010b). To the best of our knowledge, this is the first time that such closed forms of the ARG characteristics estimates have been computed. The estimated expected values can be effectively utilized by the user to design appropriate input regimens, removing time consuming trial and error iterations (see case study in Supplementary Section S5).
Modeling multiple populationsWe model the relationship between m populations by a DAG P 0 with m leaf nodes, and call it a scaffold. An example is shown in(i). The progress of time is assumed to be from top to bottom and the m leaf nodes are annotated with the population labels. Further, each edge e in P 0 has three characteristics: the incubation length lene, the number of lineages at the bottom of the edge, l b (e) and the number of lineages at the top of the edge, l t e. The length is a time parameter defined in generations. Note that two parameters, an effective population size and a recombination rate, determine the number of lineages l t e for a fixed pair of values of l b (e) and lene. We assume that the scaffold P 0 is binary (i.e., each internal node in P 0 has exactly two ascendants or two descendants, but not both). For each internal node, the junction constraints are defined asshows the substructure of (a) based on tracking some chromosomal segment from four extant samples, marked in dark purple. The bold edges mark the flow of the genetic segments of interest to the four extant units. (c) shows the relevant part by removing the extraneous parts of the network of (b). Note that a forward simulator (moving in time from past to present) may have to simulate the network in (a) or (b), whereas the network in (c) is adequate for a backward simulator (moving in time from present to past). In fact a backward simulator may only construct the network in (d) where every node has either multiple descendants or multiple ascendants (termed the ARG). For visual clarity, the time scale has been adjusted. (e) The possible flow of 3 non-mixing segments in the ARG is shown in three distinct colors, green, red and blue (from left to right on the chromosomal segment). The dashed edges imply that these do not affect any of the four extant samples, due to a recombination node in their path B D A C A B D C(i) scaffold (ii) ARGshows the scaffold P 0 .shows a corresponding ARG P. Note that in general the structure of P 0 is not apparent from P and the ARG P simply looks like the ARG in. See text for more details follows (see also). A node v in P 0 that has two incoming edges e 1 and e 2 and an outgoing edge e 3 (termed a split node) the following relationship holds: l t e 3  l b e 1   l b e 2 , i.e., the lineages at v is the union of the lineages of the two incoming edges. Similarly if node v has two outgoing edges e 1 and e 2 with one incoming edge e 3 (termed a merge node), then l b e 3  l t e 1   l t e 2 , i.e., the lineages at v is the union of the lineages of the two outgoing edges. Each edge e of P 0 represents the evolution of a Wright Fisher population captured in a DAG say P e. The union of each of these DAGs by appropriately gluing the ends of the edges corresponding to the nodes of P 0 gives the ARG P that can be written as: P  [ e2P 0 P e : Such a P is shown in(ii) where the leaf nodes correspond to extant units of each population of P 0 .shows an example of parameters that define the scaffold P 0. Additionally a recombination rate (r) and effective population size for each edge, ultimately decides the topology of the resulting ARG. Further, the mutation rates and the short tandem repeats (STR) details define the polymorphism in the samples of the individuals of the populations. Consider the scaffold specified in. Each edge is simulated as a single population (Section 3) and assume that the effective populations size N ej is specified for each edge e j. For instance, the edge e 1 labeled with population D is simulated with 12 extant samples, i.e.,
ARG network sampling algorithmWe now address the problem of simulating each edge of the scaffold P 0 which can also be viewed as the ARG sampling of a single population. This is a well-studied problem as discussed in (). In the remainder of the paper, we refer to this classical backward algorithm, based on Kingman coalescence, as Hudson (). The reader is directed to () and citations therein for a comprehensive description of Hudson. However, we found that even Hudson algorithm was not efficient enough to admit complex scaffold simulations: it was too time consuming and in many instances failed to terminate in reasonable time, forcing to abort and re-run. A single scaffold requires multiple runs (corresponding to each edge) thus making the algorithm prohibitively expensive. Here we present our algorithm for simulating a single (neutral) population.
Overview of the approachThe algorithm is based on Kingman coalescence and is along the lines discussed in () and is very similar to the Hudson algorithm. Again, to keep the discussion self-contained we give the complete description here, along with the changes specific to SimRA in the text of the description below. The algorithm works back-in-time starting from the present (time 0), moving back into the past. Further, the ARG is incrementally constructed by identifying the event nodes in the graph. An event node either has multiple incoming or multiple outgoing edges. For example a chain node is not an event node. An important assumption, that considerably simplifies the algorithm, is made: The probability of multiple events in the same epoch (generation) is extremely low, hence the algorithm assumes there is at most one event per generation. The design of the overall algorithm is affected by this and at each step the algorithm simply seeks the closest generation from the current where an event node occurs.
3.1.1The closest event node from the current state in the ARG In the interest of brevity, some basic definitions are presented in Supplementary Section S1 and use here. Let L lineages be active at time T. Let t coal ab denote the time to the coalescence of lineages l a and l b. Let t rcmb l denote the time to the closest (to T) recombination event of lineage l. Eq. 23 (in Supplementary) shows that each of the L 2 coalescent events, generically written as t coal ab , can be approximated by an exponential distribution with parameter k  1. Recall the following observation from (Parida, 2010b): OBSERVATION 1. (Ancestor Without Ancestry Paradox) The edges (and nodes) of an ARG must be annotated with the chromosomal segment that flows through the edge. Based on the above observation, Eq. 26 (in Supplementary) can be approximated by an exponential distribution with parameter r 0 l where r 0 l  Nr l and r l is the recombination rate of the segment flowing through lineage l. These approximations to the exponential distributions are based on two assumptions (Wright Fisher population): the population at each generation is N and a unit picks its parent randomly from the previous generation (non-overlapping generations and panmictic mating population). Also, note that the factor of N in r 0 l is due to the approximation of the distributions, and not due to the underlying population evolution model. The task is to find t, the time to the closest event node in the past. This event could either be a coalescent event (merging of two lineages) or ausing Property 1 (Supplementary Section S1). The overbraces capture the L 2 coalescent events and the underbraces capture the L recombination events. t computes the time to the closest event back in time from the current time T, but, is the closest event coalescent or recombination? The answer to this comes from Property 2 (Supplementary Section S1). The event is a coalescent event with probabilityand a recombination at lineage 1 k Lwith probabilityIn the implementation of the algorithm, both Eqs. 2 and 3 are used in a single draw of a random number. Imagine a unit interval 0; 1 is broken up into 1  L sub intervals of lengths in the following ratio L 2 : r 0 1 : r 0 2 :. .. : r 0 l :. .. : r 0 L : Thus a random number drawn from the interval 0; 1 belongs to one of these 1  L sub-intervals and is appropriately interpreted: the first interval implies coalescent event and kth (k > 1) interval implies a recombination at the lineage l k1. Since the events are random, t is estimated first and then the lineages are picked at random from the L active lineages.
Genetic material flowing through the ARGThe chromosomal segment whose evolution history is captured by the ARG is represented as the real interval 0; 1, without loss of generality. Every node in the ARG is annotated with union of one or more sub-intervals of 0; 1. Thus genetic material, I, carried by a node is:s 1: The closed intervals ' i ; u i  2 I are termed solid and the open intervals u i ; ' i1  are termed gaps where 1 i < i  1 s. The length (len) of I is defined as the total span of I, irrespective of the gaps, while density (den) of I is defined as the total span of the solid intervals only. The definitions are summarized as (see also):x; y & solidI () x; y & ' i ; u i ; for some 1 i s:The union operation on segments, I a [ I b  I a[b , has the natural interpretation: '; u 2 I a[b () '; u & solidI a  OR '; u & solid I b :The splitting of I at x (' 1 x u s ) into I a and I b is defined as:I a  f' 1 ; u 1 ; ' 2 ; u 2 ;. .. ; ' j ; xg; I b  fx; u j ; ' j1 ; u j1 ;. .. ; ' s ; u s g;I b  f' j1 ; u j1 ;. .. ; ' s ; u s g;) when u j x ' j1 :8 > > > > > > > < > > > > > > > :3.
On the uniqueness of GMRCAA founding ancestor of the extant units is termed GMRCA (grand most recent common ancestor). Let X denote the set of all (infinite) graphs, with nodes partitioned into distinct levels, or generations, with N nodes at each level, and each node having no more than two parents. For each X 2 X, and any subset V of the nodes at level 0, there is an induced subgraph of X, namely the ARG induced by V and we call this the ARG associated with X. Following Parida (2010a) we introduce a probability measure on X as follows. For X 2 X and h > 0, we denote by X h the truncation of X to depth h, i.e., X h is the finite induced graph from X on the set of vertices of level h. Similarly, for a subset E & X, and h > 0, we denote E h  fX h jX 2 Eg. We say that E is finitely determined if there exists some h 0 , such that X 2 E () X h0 2 E h0 , and in this case we denote lE  jE h 0 j jX h 0 j. The family, F , of finitely determined subsets E 2 2 X clearly forms a field, and thus by the Caratheodory extension theorem (see for example Varadhan (2001), Theorem 1.1, pp. 4), l can be uniquely extended to the r-field generated B by this family. We denote this measure also by l and consider X as a probability space with measure l. Let E unq & X be the set of graphs X 2 X, such that the ARG associated to X has a unique GMRCA. The following theorem (whose proof is presented in the Supplementary due to space constraints) follows from the definition of the measure l. It assures us that almost every ARG has a unique GMRCA. In fact, in over ten thousand simulations, of which about three thousand are reported in this paper, SimRA terminated in every instance with a unique GMRCA.The subset E unq is measurable and lE unq   1.The measure of the space of all ARGs with no unique GMRCA is zero.
Algorithm to generate the topologyINPUT: Due to historical reasons, the unit of recombination rate is specified in centiMorgans per megabase per generation and the mutation rate is specified in number of mutations per base pair per generation (10 8 ). The input parameters and some typical parameter values for a human chromosomal segment are given below. ASSUMPTION: Not more than one event, coalescent or recombination, occurs at a generation. Also, no back mutations, i.e., a position undergoes no more than one mutation in the entire ARG. The mutation rate and recombination rate are uniform over the segment being simulated. OUTPUT: ARG; L is the number of GMRCAs.
Sampling ARG of multiple populations with SimRA
Painting ARG edges with SNP & STR mutationsEach time t of Step 2(a) can be scaled to generation as j  Nt. Let time t be associated with an incoming edge on node v. At this stage, each edge is annotated with the mutation events, which is appropriately reflected in I v , the segment carried by node v.
SNP mutationsSince number of generations is Nt and the span of the segment I v has been normalized in the initialization step, let p  lNt and n  gdenI v :Each edge of the ARG, incoming on node v, is annotated with number of mutations based on Eq. 9 as follows. X, the random draw from a Poisson distribution with parameter np: X  Poisson np:Then the X mutations are placed at random in segment I v (excluding the gaps, see).
STR mutationsNote that the number and positions of the STR loci are fixed by the input specification. For each STR locus, k, carried by I v , we compute the following. The number of STR mutations at locus k on each edge of the ARG, incoming on node v, is X v , the random draw from a Poisson distribution with parameter Ntl str :X k  Poisson Ntl str :Let p  be the probability of the mutation that increases the number of copies (by 1 in one generation) and p  be the probability of the mutation that decreases the number of copies (by 1 in one generation). Then, X k , the number of times the STR mutation results in an increase in the number of copies of the repeat follows a binomial distribution, hence is the random draw from a binomial distribution with parameter X k and p  X k  Binomial X k ; p  : Thus the remainder, i.e., X k  X k must be the number of events that result in decrease of the number of copies. Thus D k the net change in the number of copies at locus k is: D k  X k  X k  X k   2X k  X k : If unspecified, we use the default value of p   1 2 , assuming p   p   1 2 :
Four quantitative hallmarks of ARGThe ARG is a random object defined by parameters, m, the extant sample size; N, the population size; g, the length of the genomic segment whose common history is being tracked; r the recombination rate; l, SNP mutation rate. In fact, other polymorphisms, such as STR, can be incorporated just as the SNP mutations are. Note that the unique founding ancestor, GMRCA, is attained in an ARG with probability 1 (see Section 3.2). We consider the following four quantities as the hallmark of the random object ARG with parameters m, N, g, r, l:is initialized to m. c. For lineage l, incident on leaf node v, the recombination rate (based on Eq. 26 in Supplementary Section S1) is:Since, len I v   1 for the leaf nodes, for each l, r l 0  a where a  Ngr:d. Time T is set to 0 and iteration i to 1. 2. Loop. Iterate until L is one (or T crosses a pre-defined threshold). Iteration i is defined as follows. a. Compute the recombination rate r l 0 of each lineage l (the outgoing edge on node v) using Eqs. 6 and 7 asThen compute the time t i to the next event using the exponential distribution (Eq. 1):In other words, draw a random number from the above exponential distribution. b. Based on Eqs. 2 and 3, if coalescent event, then pick two lineages, l a and l b (with genetic material I a and I b respectively) at random and coalesce them to one and update the genetic material of this new node and lineage I a [ I b (as defined in Eq. 4). Update L to L  1. c. If recombination at lineage k, then randomly pick a point x on the segment being carried by lineage k, splitting the lineage into two, as defined in Eq. 5. Update the genetic material of the two lineages based on this splitting point. Update L to L  1. d. T is updated as T  t i and iteration as i  1.(b): gapsI are shown as dashed lines and solidI as solid segments. I is mapped to a normalized line segment, say 0; 1, shown in the bottom in both (a) and (b). In (a) the gaps are skipped, and the lengths of each element in solidI is proportionally represented in 0; 1. Thus any element in 0; 1 can be mapped back to a unique location in solid(I). In (b) the gaps are not skipped, and the lengths of each element in solidI and in gaps(I), is proportionally represented in 0; 1. Any element only in the solid section in 0; 1 can be mapped back to a unique location in solid(I); any other element maps to a gap in I GMRCA in the absence of recombinations (). Our derivations are based on the theorems and observations in Parida (2010a). In fact, we found that if we required a single population only to study the hallmark expected values, but not the sample population, then the closed form approximations were tight enough to make the actual simulation redundant. Overview of the derivations. We use two notions: depth of a node and girth of an edge. An edge length, as well as depth of a node, is defined to be in time units. The unit of time is measured in generations. The depth of each node is measured from the leafnodes and the depth of a leafnode is defined to be 0. The girth of an edge is defined to be the product of the edge length and the size of the genomic segment the edge transmits. 1. The ARG network is decomposed into overlapping trees (see Thm 2; also Figs 6 and 7 andin Supplementary). 2. For each tree, we compute the depth of each node and the girth of each edge, using Kingman coalescence. The depth of a tree is simply the depth of its root node. The girth of the tree is the sum of the girth of each edge of the tree. 3. The depth and girth of each tree are used for approximating the ARG hallmark values. However, the interdependence of the trees makes these computations non-trivial.
Mathematical detailsTo keep this section self-contained, we recall the following basic identities. Let 0 < m 0 < m.Consider a tree with m leafnodes. Using Kingman coalesence, all the non-leaf nodes of the tree can be written in increasing depth (from the leafnodes) as v 1 , v 2 ,. .. , v m1 , with the active lineages decreasing by one at each node. Let t i denote the depth of v i from v i1 where depth of v 0 is defined to be 0. Then the tree truncated at a depth that has m 0 active lineages, is written as T m;m 0. Let H T m;m 0 be the depth of this tree. Then using Property 3 (Supplementary Section S1), linearity of expectations, and the above identities we get:Let g the length of the genomic segment carried by each edge in the tree and the girth of the tree be wt T m;m 0. Then% 2g log m m 0 :The complete tree with a single root node is written as T m;1 andEwt Tm;1   2g logm:We recall the following from Parida (2010a) relating population genetics entities with graph entities like least common ancestor (LCA). A non-mixing genetic segment does not have any recombination event in the common history of the m samples. THEOREM 2 Let G be an ARG with some K ! 1 non-mixing segments. Then K marginal trees are embedded in G and the GMRCA of G is the LCA of the K LCAs of the K marginal trees.gives a simple illustration on an ARG on four samples with three non-mixing segments. An alternative view of the theorem is as follows: Let T l; b denote a tree defined on l leafnodes each carrying the segment of length b. Then for some partition of genome segment g into K non-overlapping segments, wherewhere the roots of the T k 's are the leaves of T 0. Two examples illustrate the embedded trees, one inand the other, due to space constraints, in the Supplementary in. In the former the number of nodes in T 0 is of the order of K while the latter has the smallest possible size of just one node. In both, T 1-T 3 are the marginal trees of usual shape and size.Corollary 2. If H 1 is the maximum of the depths of T k m; g k and H 2 is the depth of T 0 K; gand H is the depth of the GMRCA of the G, then H  H 1  H 2 :Corollary 3. The girth of ARG G is the sum of the girth of each T k m; g k  and T 0 K; g.
Summary of closed-form formulationsDue to space constraints, the derivations have been presented in Supplementary Section S2 and only the results are summarized here. Leta  Nrg; b  aH 1  1; c  2a  b;of m, g and N. The recombination rate used is r  0:1  10 8 Morgan/bp/generation, l  1:5  10 8 mutations/bp/generation, and m 0  1. For the results with m 0 > 1, seein the Supplementary. Note that the mutation rate affects only (iii) and (iv). Each experiment was run 100 times, using both SimRA and Hudson. The box-and-whisker diagram summarizes the result for each. On each box, the central mark is the median, the circle is the mean, the edges of the box are the 25th and 75th percentiles, the whiskers extend to the most extreme data points not considered outliers, and outliers are plotted individually. In each, the green diamond is the expected value as computed by the closed form, while the hollow circles are the observed empirical values by SimRA and Hudson. Notice that not only do the two algorithms give similar values; the closed form is also a tight approximationThen the four (expected) hallmark values are:EY % 2lgNlogm  logK;Expected Height of Truncated ARG. H 1 , a and b values are as above and m 0 is the number of surviving lineages of the truncated ARG. Then c  2a  m 0 b;
Comparison studyFor a comprehensive survey of sampling algorithms and simulators the reader is directed to (), which discusses both backward and forward simulators. Many simulators in literature address the issue of redundancy in the simulations and they can also be classified on the basis of the extent of non-redundancy (see, for instance). The underlying mathematics of a backward simulator is nontrivial and the classical Hudson algorithm captures the essence of backward simulations. SimRA simulates multiple populations under admixture and subdivision, while other simulators incorporate other demographic models, making it difficult for a nose-to-nose comparison. However, the core engine of SimRA can be compared with the Hudson algorithm, which forms the basis in all backward simulators. Hence in the comparative study here, we use only the single population of SimRA and the classical Hudson algorithm using exactly the same input parameters. Furthermore, to keep the comparisons agnostic to other possible extraneous factors, we use identical implementation for the common parts of SimRA and Hudson.
Differences from Hudson algorithmRecall that Hudson algorithm uses a single scaled recombination rate Nr, while SimRA uses the L segmented versions r 0 l  Nr l ; l  1; ::; L. This is reflected in Eqs. 13. Eq. 1 suggests that in our algorithm, to account for recombination event, time t takes into account not just the number of active lineages but also the size of the segments carried by each of them (r l  grlenI v  of Eq. 6). Note that P v lenI v  6  1 at each iteration making the two computations distinct; hence distinct algorithms. Thus if p c is the probability of coalescence (Eq. 2), then the probability of recombination is 1 p c with equal probability over all the lineages in Hudson algorithm. But SimRA uses Eq. 3 to pick a lineage for the recombination event. Thus Eq. 3 has no counterpart in the classical Hudson algorithm. The accuracy of the two algorithms are comparable while SimRA outperforms Hudson in time, space and non-redundancy factor, as seen below. We performed extensive comparative analysis between the two algorithms SimRA and Hudson, to measure various outcomes. In particular, we carried out hundred runs for each parameter set up, for both the algorithms.
Accuracy measuresWe demonstrate the accuracy of the SimRA algorithm by comparing the four hallmark values to the ones computed by Hudson. The results are shown in. Notice that the SimRA and the Hudson estimates are very close to each other, over 100 runs for each configuration. We use the same set-up to compare the closed form expected values of the last section to the observed empirical values. Again, note the tightness of the approximations. In addition,in the Supplementary shows the expected height of truncated ARG compared against the observed values using both SimRA and Hudson, with similar accuracy.shows the results of the comparative time and space performances. SimRA shows consistently superior performance in both time and space, and, the difference is particularly accentuated with increasing values of recombination rate r. For higher values of r, the time and space requirement is nearly two orders of magnitude higher for Hudson. In particular, for the study summarized in, the Hudson algorithm had to be aborted and re-run several times and it took over six months just to complete, while SimRA was done with the four hundred runs in less than half a day.
Time and space performance
Non-redundant ARGs of SimRAHow redundant is the ARG network sampled by an algorithm? If we assume that all the marginal trees and the resulting samples are the essential content of a simulation, then it is meaningful to ask what portion of the ARG resulting from a simulation has no contribution to the essential content. This is formally studied as the minimal descriptor inand other details pertaining to. The box-and-whisker diagrams of the time and memory performance of SimRA and Hudson computed for 100 runs with N  10K, g  150K, l  1:5 10 8 and different value of recombination rates (shown in the x-axis) and for each parameter setting both the algorithms were run 100 times. The red line demarcates the time and space requirement for Hudson for the rightmost value of r. While all values of r the time and space requirement of SimRA is better than that of Hudson. In particular for large r SimRA is nearly two orders of magnitude better than Hudson the execution of the experiments are presented in Supplementary Section S4. Let the compaction factor f be defined as the ratio of the number of nodes in the minimal descriptor to the number of nodes in the original ARG as in (). Thus the closer the value of f to 1, the less redundant is the ARG and thus more compact.shows that the ARGs produced by SimRA are systematically more compact than the ones produced by the Hudson algorithm. This is particularly accentuated for higher values of r.
ConclusionThe design of the SimRA algorithm was influenced by the implications of the Ancestor Without Ancestry Paradox, which also paved the way for computing the closed forms of the expected values of the ARG characteristics. To the best of our knowledge this is the first time analytic formulae have been given for an ARG. Such closed-forms, apart from mathematical completeness, also serve multiple practical purposes. Ironically, it obviates single population simulations in many situations where the interest is only in the characteristic estimates. In others it provides a framework for evaluating correctness of the ARG sampling algorithms. Also, for complex scenarios such as the ones with population scaffold architectures it aids in parameter specification (this is illustrated in Supplementary Section S5). Through extensive comparison studies, we demonstrated that the ARGs produced by SimRA are more compact, more efficient in time and space, without compromising accuracy. Currently we are looking into extending SimRA to incorporate other demographic models including selection.. The box-and-whisker diagrams of the compaction factor f, for different values of r. The other parameter values are the same as used inand for each parameter setting both the algorithms were run 100 times. ARGs produced by SimRA are consistently more compact (or less redundant) than that of Hudson
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
t t N N 2 1 (i) Merge (ii) Split Fig. 3. The two types of nodes in a scaffold P 0 : Merge and split nodes are marked by the horizontal dashed lines at time t. The tiny black disc nodes and the thin black edges are part of the underlying ARG P
A.P.Carrieri et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
non-mixing segments shown in three distinct colors: green, red and blue (from left to right on the chromosomal segment) Fig. 7. The four trees embedded in the ARG network of Figure 6 (as captured in Eq. 20). The three marginal trees, T 1 to T 3 correspond to the three non-mixing segments shown in green, red and blue Sampling ARG of multiple populations with SimRA
