Motivation: Transcriptional regulatory networks controlling cell fate decisions in mammalian em-bryonic development remain elusive despite a long time of research. The recent emergence of single cell RNA profiling technology raises hope for new discovery. Although experimental works have obtained intriguing insights into the mouse early development, a holistic and systematic view is still missing. Mathematical models of cell fates tend to be concept-based, not designed to learn from real data. To elucidate the regulatory mechanisms behind cell fate decisions, it is highly desirable to synthesize the data-driven and knowledge-driven modeling approaches. Results: We propose a novel method that integrates the structure of a cell lineage tree with tran-scriptional patterns from single-cell data. This method adopts probabilistic Boolean network (PBN) for network modeling, and genetic algorithm as search strategy. Guided by the 'directionality' of cell development along branches of the cell lineage tree, our method is able to accurately infer the regulatory circuits from single-cell gene expression data, in a holistic way. Applied on the single cell transcriptional data of mouse preimplantation development, our algorithm outperforms conventional methods of network inference. Given the network topology, our method can also identify the operational interactions in the gene regulatory network (GRN), corresponding to specific cell fate determination. This is one of the first attempts to infer GRNs from single-cell transcriptional data, incorporating dynamics of cell development along a cell lineage tree.
IntroductionUnderstanding gene regulatory networks (GRNs) that control cell fate decisions is of paramount importance in biology. It can provide critical insights into many questions in developmental biology (), stem cell (), cancer (), synthetic biology (), etc. Mouse preimplantation development is a prominent example for the study of cell fate decisions (). Starting from the 1-cell fertilized zygote it proceeds to the 64-cell blastocyst, consisting of three). For this classic developmental process, many results and insights have been obtained through decades of research. However, the regulatory mechanism for differential gene expression that leads to the formation of the three cell types remains to be elucidated. One hurdle lies in that many analyses were conducted on the average expression of a population of cells in mouse as well as other species (), ignoring the heterogeneity among individual cells, which however is critical for the cell lineage formation. Recently, the technology of single-cell RNA profiling promises to overcome this hurdle and provides new insights (). In 2010, Robson lab generated a single-cell RNA profiling dataset for the early development of mouse embryo (). Using statistical analysis techniques on the dataset, they identified intriguing patterns that shed light on the dynamics of cell fate decisions. The results obtained from this dataset (which we will refer to as 'Robson's data' hereafter) demonstrated the power of single-cell expression analysis. However, the data-driven approach in () was limited to descriptive statistical relations of gene expression, interpretation of which requires highly specialized knowledge and experiences of researchers. To gain a systematic and holistic understanding of the causal mechanisms, an integrative network model that is 'executable' through computer simulations would be highly desirable. In conjunction with experimental works, mathematical models have been proposed for the study of cell fate determination. Many models are based on the theory of dynamical systems (), which represents a cell state by a vector of gene expression levels, S  x 1 ; x 2 ; ::: ; x n , where x i is the expression value of the ith gene. Hence, each cell state is a point in the n-dimensional state space, in which a change of the cell state is represented as a movement along a trajectory. Constrained by the architecture of a GRN, cell states tend to move toward stable states called 'attractors'. Kauffman proposed that cell types can be modeled as attractors over 40 years ago, and he pioneered the use of Boolean networks (). Among numerous applications, Boolean networks have been applied to studies of cancer cell death () and stem cells (). In addition to the discrete model of Boolean network, ordinary differential equations based approaches that include kinetic models of molecular interactions are popular for cell fate modeling (). The continuous models can represent the physical processes of gene regulation precisely and quantitatively, and they are amenable to theoretical analysis of the underlying systems (e.g. steady-state analysis). For the inference and analysis of GRNs, various differential equation models have been developed (). However, differential equation models need accurate estimation of parameter values, which remains a challenge in many cases (). Machine learning models have also been developed to elucidate gene regulation in cell development. For example, in () and (), cell lineage trees were incorporated into machine learning algorithms to infer gene networks and expression programs, respectively. Reverse engineering of GRN from gene expression data is a challenging problem in computational biology. Although many methods have been proposed (see, and references therein), they were mostly designed for the average expression in a population of cells, and rely on local dependence among variables (e.g. genes). However, single-cell expression data pose new challenges for GRN inference. The heterogeneity among cells could make the average of expression levels misleading. Moreover, many existing methods of GRN inference require long and dense times series data of RNA profiling, which are often unavailable, especially when the experimental cost is high. Therefore, alternative strategies of GRN inference are needed for single-cell transcriptional data with short and sparse time series. In this article, we propose a novel approach to the inference of GRN from single-cell expression data. It takes into account the relative positions of cells on the cell lineage tree. Our assumption is that GRN provides the driving force that pushes cells from ancestral states towards descendant states (). Such 'directionality' of cell development is imposed by the logical constraints of the underlying GRN. From Robson's dataset of mouse early development, we can observe which cell states belong to a certain node in the cell lineage tree. Given a candidate GRN, we can simulate the dynamic trajectories of cells following the regulatory rules encoded in the GRN. If the simulated trajectories are compatible with the directed paths from the root towards leaves of the cell lineage tree, the GRN is likely to be true. Conversely, if a candidate GRN drives cells from descendant states backward to ancestral states, it is likely to be false. To implement this strategy, we choose the framework of Boolean network for its strength in state transition analysis, and genetic algorithms (GAs) for optimization (see Section 2.2 for details). A similar idea for GRN inference based on Boolean network was proposed in (). However, Pal et al. assumed that the expression data should be sampled from attractor states, which may be too restrictive for single-cell data. Relying on the concordance of attractor states of the model with states of the data, they did not consider fully the 'directionality' of cell development along branches of a cell lineage tree. Therefore, although the method of Pal et al. is very insightful, it is not directly applicable to the single-cell expression data of mouse embryonic development. Running on the Robson's dataset, our method for GRN structure inference achieved better performance than most of the other methods, validated using a published benchmark GRN constructed manually from experiments (). Moreover, given the structure of GRN, our method is able to predict operational regulatory interactions responsible for a specific cell lineage formation. Most of the predictions are consistent with literature of experimental observations. To the best of our knowledge, the method proposed here is one of the first attempts to infer GRN from single-cell expression data. Unlike existing methods, it does not rely on local dependence of variables, which is difficult to detect from short and sparse time series data. Instead, it is a holistic approach that utilizes global information about a system (e.g. network stability). As more singlecell data become available in near future, our method is promising to help decipher the mechanisms of cell fate decisions.
Methods
DataWe used the single-cell gene expression data from (), which were generated by high-throughput single-cell qPCR. This dataset describes the expression profiles of 48 genes during the mouse preimplantation development, from 1-to 64-cell stage (see Section S.1 in Supplementary material for more information). Two cell fate decisions are made during this period (see). The first decision is made when cells transform from 16-to 32-cell stage, where two distinct cell lineages take shape: TE and inner cell mass (ICM). The second decision is made during the transitions from the 32-to 64-cell stage, and two cell types are generated from ICM: PE and EPI. To focus on the cell fate regulation during these two processes of cell lineage formation, we extracted data from the three stages, i.e. 16-, 32-and 64-cell stages. As Boolean network was used to model the GRN, we first discretized the continuous gene expression levels into two states: 0 (lowly expressed) and 1 (highly expressed), for the data of three stages (i.e. the 16-, 32-and 64-cell stages) separately. Let Xfx ij g nm be the gene expression dataset with n genes and m samples. For each gene, by assuming Gaussian distribution, we calculated the mean m and SD r, and set the discrete value d ij of the ith gene in the jth sample as; i  1; :::; n, and w is the weight which was set to 0.5 in our experiments ().
Structure inference of GRNIn this section, our goal is to reconstruct the topological structures of GRNs underlying cell fate decisions. The hierarchical structure of the cell lineage tree is used to guide the GRN inference, based on the premise that a true GRN should have simulated trajectories consistent with the temporal order of the developmental process. To simulate the dynamic trajectories of cell state transitions, we used simple and general rules to update the states of genes (), based on the assumption that the behaviors of a cellular system depend more on the topology of the regulatory network and less on the parameters of the interactions (). Let g i t  1 be the state of the ith gene at time t  1, N I i t be the number of inhibitory edges incident to the ith gene at time t, and N A i t be the number of activating edges at time t. The updating rule for the ith gene is defined as follows:Because the state of a gene in a Boolean network can only be 0 or 1, when N I i t  N A i t; g i t  1 will be randomly assigned to 0 or 1 with equal probability. For a proposed network structure, we generate its state transition graph (STG) by asynchronously updating the states of genes using the rule described in Equation (2). For a particular cell state (i.e. a vector of states of genes), in each step, we randomly pick one gene with equal probability and update its state based on its inputs (i.e. regulators) and the rule in Equation (2), thereby making a transition from this cell state to another. After u updates, we calculate the transition probabilities from this cell state to others. In this way, we obtain an STG (represented by its adjacency matrix A), of which each entry contains the transition probability between cell states. For the ith cell state, we havewhere n is the number of genes and i  1; ::: ; 2 n. Here A is a Markov matrix, since the transition probabilities do not change over time. Therefore, by calculating A l , we can obtain the end states after l time points from any starting state. Following the 'directionality' of cell development, during ICM ! PE  EPI (similarly for 16C ! TE  ICM), we expect the states in PE and EPI to be stabler than the ICM states. As such, the 'forward' transitions from ICM to PE or EPI should have higher probabilities than the 'backward' transitions. Therefore, we give bonus to the transitions from ICM to PE or EPI (we also give bonus to self-transitions within each cell type), while impose a penalty on any transition from PE or EPI back to ICM. In addition, we also put penalties on trans-transitions across different cell types at the same stage, e.g. PE ! EPI or EPI ! PE. Accordingly, the fitness score for structure inference is defined aswhere W is the set of indices of cell states belonging to the upperlevel cell type; M k is the set of indices of states in the kth lower-level cell type (here we assume there are two cell types at the lower level, i.e. k  1 or 2, although our method can be easily generalized to more than two descendant cell types); p ij is the transition probability from ith to jth state (i.e. p ij is an element of the matrix of STG); M k 0 is the alternative representation of M k , which means when k  1, k 0  2 and when k  2, k 0  1. To learn the optimal GRN structure that best fits the data, a GA is designed to optimize the scores of candidate topologies. GA is often used to solve optimization and search problems, by simulating the process of natural selection, crossover and mutation to reach an advanced species (). The pseudocode of GRN structure inference based on GA is shown in Algorithm 1. First, we create a population with N candidate individuals (i.e. the initial population). Each GA individual, which corresponds to a network, is a binary string obtained by concatenating the columns of the adjacency matrix of the network. The maximum number of regulators for each gene is K, as a constraint for each individual. Then we calculate the fitness scores based on Equation (4), which are used to select the top N 0 individuals as candidates for the next GA iteration. In 'crossover', two parents are randomly chosen by Roulette wheel selection based on their scores. A typical 'recombination' procedure is performed to generate their children. In 'mutation', dependent on the mutation rate, we randomly choose chromosomes (i.e. individuals) and randomly decide the mutation sites to be flipped. As such, a new population is generated and the algorithm enters the next iteration till the maximum number of iterations is reached. Since the time complexity of Algorithm 1 is exponential in the number of genes n, our method is currently more applicable to small networks (e.g. n < 10). We have provided detailed information about the parameters in our algorithm and analyzed their influence on the performance of the algorithm in Section S.2 in Supplementary material.
Identifying operational interactions in GRN
Network encodingIn this section, we will demonstrate that the same framework of inference as in the previous section can also be used to identify the operational interactions responsible for a specific cell fate decision, from a given network topology. The GRN is again encoded as an asynchronous PBN N. The states of genes are updated based on their inputs (regulators) and Boolean functions (or rules). Because the incoming edges for each gene are known, we only need to determine the Boolean rules for generating the dynamic behaviors of N. Here the rules were derived based on the knowledge from literature (see Section 3.2 for details). For a particular network N, the collection of regulatory rules R consists of a set of Boolean functions F and their corresponding probabilities in set P. Thus we have R  F; P f g, where F  fF 1 ; F 2 ; :::; F n g; P  fP 1 ; P 2 ; :::; P n g, and n is the numberLi n o , where i  1; 2; :::; n. Here f i j is the jth regulatory rule of the ith gene with probability p i j , and L i is the total number of rules for the ith gene. The probabilities of rules should satisfyThe dynamic behavior of a GRN is not only determined by the Boolean functions in F, but also influenced by the probability parameters in P. Because a rule with a higher probability is more likely to be chosen to update the states of genes, the probabilities of rules affect the dynamics of the network.
Probability inferenceWe employ GA again to infer the probability vector P. Without loss of generality, we assume that cell fate decision is a bifurcation in the cell lineage tree: Up ! Low 1  Low 2 (e.g. ICM ! PE  EPI). Because we aim to identify the operational components for a specific lineage decision (e.g. Up ! Low 1 ), the GA should maximize the transition probabilities for this lineage, and minimize the transition probabilities in the alternative direction (i.e. Up ! Low 2 ). Hence, the fitness score is defined aswhere M 1 and M 2 are the sets of indices of cell states belonging to the two lower cell types; W is the set of indices of cell states of the upper-level cell type; p ij is the transition probability from the ith state to the jth state. To calculate the transition probabilities among cell states, we employ an asynchronous PBN to model GRN and obtain the STG by asynchronously updating the activities of nodes. In each step, we randomly select one rule f (f 2 F) based on its probability p (p 2 P) and update the corresponding target gene. After the STG is obtained, we map the cell states from real data to the STG. Then a fitness score will be calculated for a particular setting of P using Equation (6). Through GA, the final probability vector P would show which rules are more frequently used for the cells to commit to a specific lineage. The process of probability inference is very similar to Algorithm 1, except for the codification and constraint of GA individuals, and the calculation of fitness scores. Here the GA individual is a vector of the probabilities of all rules for all genes, and each individual is constrained by Equation (5).
Results
Results of structure inferenceTo validate our algorithm (named SingCellNet hereafter) for GRN structure inference, we applied SingCellNet to real single-cell expression data and compared output with benchmark networks derived from experimental evidence (). The benchmark networks for 16C ! TE  ICM and ICM ! PE  EPI are shown in. Note that the edge Fgf4 ! Fgfr2 inAlgorithm 1. GA-based GRN inference from single-cell transcription data INPUT: Single-cell gene expression data, population size N, number of selected individuals N 0 , mutation rate m, permutations per chromosome Z, and maximum iteration times MaxIt OUTPUT: A vector P, which consists of regulators of each gene in the network (i.e. P is the representation of a network topology) P 0 N / initial population for each i 2 P 0 do Calculate score(i) using Equation (4) end for Select top N 0 individuals based on their scores and insert them into a queue Q for k  1 to MaxIt do P k a null set // Crossover while(sizeP k  < N) Choose two parents P i k1 and P j k1 from Q by Roulette wheel selection Generate two children by RecombinationP i k1 ; P j k1  Check and modify children according to the constraint for individual Add children to P k end while // Mutation Select N  m members from P k Invert Z randomly selected site for each chromosome Check and modify children according to the constraint for individual Add new individuals to P k // Scoring for each i 2 P k do Calculate score(i) using Equation (4) end for Q a null set // Selection Select N 0 top score individuals from P k and insert them into Q Save a copy of the N 0 top score individuals to P end for Determine P by taking the 'consensus' of high-score networks in P Return P Single-cell transcriptional analysisis a signal transduction event which occurs among cells (i.e. from EPI progenitors to PE progenitors) (). Because we aim to reconstruct GRN within cells rather than across cells, we do not count it when evaluating the performance of GRN inference. To evaluate the strength of SingCellNet, we applied other methods of GRN inference on the same dataset and compared their performance with our method. These methods include Bayesian network [using WinMine package (, Boolean network [using BoolNet package (, Random Forest (), LASSO (), Elastic-Net () and Treegl (). The results of comparisons are shown inshows the inferred networks for ICM ! PE  EPI by different methods. Additional experimental results of structure inference are provided in Section S.3 of Supplementary material, including the inferred networks for 16C ! TE  ICM, and more results about the performance comparison among the methods. As shown in, our method SingCellNet can achieve performance close to Random Forest which ranks first in the GRN inference for 16C ! TE  ICM. It suggests that SingCellNet is competitive with Random Forest, even although it probably loses some information in data due to discretization.shows that SingCellNet outperforms all other methods significantly in the structure inference for ICM ! PE  EPI. We notice that SingCellNet performs better in ICM ! PE  EPI than in 16C ! TE  ICM, while most other methods have lower performance in ICM ! PE  EPI. One possible reason could be that the performance of other methods might be affected by the reduced number of samples, as the number of cells in ICM ! PE  EPI is 56.75% of that in 16C ! TE  ICM. The good performance of SingCellNet is probably due to its ability to utilize the characteristics of single-cell expression data in the context of cell development. Among cells of the same cell type in the single-cell datasets there is heterogeneity of cellular gene expression. However, there are only two time points with a wide interval in each of the two datasets used here, which provides insufficient information of variation along time points for conventional methods to capture the dependency among variables (i.e. genes). Bayesian network can learn causal relationships among variables and is widely used in GRN inference. However, when applied to the single-cell expression dataset, Bayesian network would assume each cell is an independent sample without considering the heterogeneity among cells and their clustering into cell types. Boolean network is a simple yet effective method for GRN inference. To compare Boolean network with our method, we used the BestFit algorithm to represent Boolean network approaches. Because this method does not take into account the inherent relationship among cell types, its performance is lower than SingCellNet. Random Forest, LASSO and ElasticNet are regression-based methods, which are quite effective for GRN inference partly because they do not require data discretization. Similar as Bayesian network, these methods would consider a single cell as an independent sample and build the regression models based on the samples. As a result, they may have high FP rates. Among the six methods, Treegl is probably the closest to SingCellNet in that it also considers the cell lineage tree for reverse engineering of gene networks. However, Treegl was not designed for single-cell expression data. Moreover, it does not take into account the dynamic 'directionality' of cell development, but instead relies on the similarity among networks. Compared with other methods, SingCellNet takes advantage of additional information supplied by the single-cell gene expression data. For example, the heterogeneity among individual cells can provide statistical signals of state transitions; the directionality of trajectories along branches of cell lineage tree can help filter out many spurious network topologies. Running on the dataset with short and sparse time series, SingCellNet is less affected by the lack of sufficient signals of local dependence among variables, because it captures the global and qualitative properties of a system (e.g. the stability of a network state).
Results of identifying operational interactionsTo validate our method for probability inference of rules on real expression data from 16-to 64-cell stage, we adapted the network derived from experimental evidence () as our benchmark network (see). By encoding a network with rules and corresponding probabilities, and comparing simulated trajectories of cells with expected paths on the cell lineage tree, our method can infer which part of the network is responsible for a specific cell fate decision. The encoded rules for this network (i.e.) are provided in S4 of Supplementary material. Applied to). Because the link Fgf4 ! Fgfr2 is a signal transduction event, it is represented by a dashed lineRobson's single-cell gene expression data, our method is able to identify the significant rules (i.e. rules with high probabilities) for each lineage formation, shown in(see S4 of Supplementary material for more details). As shown in, the most significant rule for 16C ! TE is 1 ! Cdx2. Gene Cdx2 is the main regulator for TE cell type (). Signaling pathways such as the Hippo pathway are known to play important roles in TE/ICM segregation, by activating Cdx2 in TE while blocking it in ICM (). Consistent with the observations, our algorithm assigned the highest probability to the rule 1 ! Cdx2 in 16C ! TE. The second significant rule Oct4jNanog ! Sox2 may suggest that, during the TE formation, Sox2 needs to be suppressed, which is achieved by the inhibition of its activator Oct4 or Nanog by Cdx2. In other words, Oct4 or Nanog passes the inhibition from Cdx2 to Sox2. The active rule for 16C ! ICM is Cdx2& $(Oct4jNanog) ! Cdx2, which shows the inhibition of Cdx2 by Oct4 (as well as Nanog). It has been shown that the antagonism between Cdx2 and Oct4 (as well as Nanog) directs and reinforces the cell fate to be either TE or ICM (). The target of this rule is Cdx2, which indicates that the driving force of ICM formation may be from the suppression of Cdx2. Unlike TE formation, where the driving force is from signaling pathways, cells adopt the ICM cell fate mainly by negative regulation of TE regulators (). For ICM ! PE, the rule with the highest probability is Nanog ! Fgf4, which reflects the following aspect of PE/EPI specification. Fgf4/Fgfr2 is a ligand-receptor pair in FGF signaling pathway, which is essential for PE differentiation. First Fgf4 and Fgfr2 are both activated. Then Fgfr2 activates Gata6 which is the marker gene of the PE cell type. Nanog in EPI progenitors activates Fgf4 (i.e. Nanog ! Fgf4), which would further induce PE-specific genes in PE progenitors through Fgf4 ! Fgfr2 and complete the program of PE differentiation (). The significant rule for ICM ! EPI inferred by our algorithm is $Nanog&(Gata6jFgfr2) ! Gata6, which shows the inhibition of Gata6 from Nanog. This is consistent with literature that EPI formation is obtained by the suppression of Gata6 (). Overall, our method can infer the operational interactions in the GRN for specific cell fate decisions, which are consistent with experimental literature, and can shed new light on mechanism of cell development by analysis of the single-cell data.
DiscussionIn this article, we have proposed a novel method to uncover regulatory circuits of cell fate decisions from single-cell transcriptional data. We mapped the transcriptional dynamics of cell development to the STG generated by an asynchronous PBN, and defined a score to evaluate how well a candidate network fits the data. To learn the optimal network structure, a GA was employed to search for the network with the most natural cell state transitions according to the cell lineage tree. Applied to real single-cell expression data and validated against benchmark networks from biological experiments, our method outperformed most of the other methods for GRN inference. Through simple adaption, our method could also be used to identify operational interactions in GRN responsible for cell fate decisions. As one of the first methods for network analysis of single-cell data, our method still needs to address several issues. First, it has been verified only on Robson's dataset, partly due to the dearth of publicly available single-cell data and benchmark networks. Nevertheless, we believe that the strategy of our method can be naturally applied to other single-cell datasets in many biological contexts (e.g. cancer, stem cell). Second, although our method achieved good prediction performance (measured by precision, sensitivity and F-measure), it is currently slower than the other methods, partly because our method was implemented in Matlab, while others were in Java or C. Also, we used GA, which is known to be computationally intensive. In future, we will speed up our method by parallel computing, and other strategies (e.g.). Third, the procedure of cell lineage commitment is often triggered by external stimulus, e.g. signaling events from neighboring cells, which has not been explicitly included in our current model. In future, this could be modeled as a perturbation that pushes a cell state to a different point in a state space without following any internal regulatory rules.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
