Motivation: Many RNAs, such as riboswitches, can fold into multiple alternate structures and perform different biological functions. These biologically functional structures usually have low free energies in their local energy landscapes and are very stable such that they cannot easily jump out of the current states and fold into other stable conformations. The conformational space of feasible RNA secondary structures is prohibitively large, and accurate prediction of functional structure conformations is challenging. Because the stability of an RNA secondary structure is determined predominantly by energetically favorable helical regions (stacks), we propose to use configurations of putative stacks to represent RNA secondary structures. By considering a reduced conformational space of local optimal stack configurations instead of all feasible RNA structures, we first present an algorithm for enumerating all possible local optimal stack configurations. In addition, we present a fast heuristic algorithm for approximating energy barriers encountered during folding pathways between each pair of local optimal stack configurations and finding all the stable local optimal structures. Results: Benchmark tests have been conducted on several RNA riboswitches, whose alternate secondary structures have been experimentally verified. The benchmark results show that our method can successfully predict the native 'on' and 'off' secondary structures, and better rank them compared with other state-of-art approaches.
INTRODUCTIONRNA molecules play important roles in many biological activities. The structures of RNAs are key to understanding their functionalities. The native secondary structures of RNA molecules are usually the minimum free energy (MFE) structures. However, many regulatory RNAs may form multiple alternate metastable structures, each of which, performs a different function (). For example, the cis-regulatory RNAs (called as riboswitches) are widely present at the non-coding regions of mRNAs in bacteria, and regulate both transcriptional and translational expression of their cognate * To whom correspondence should be addressed. metabolic genes and thus comprise a metabolite-sensing system. Riboswitches can selectively bind with small metabolites and form alternative structure conformations, in order to exert control over translation initiation or formation of a transcription terminator (or an anti-terminator) helix and thus turn 'off' (or 'on') the gene transcription (). Alternate structure conformations of RNA riboswitches can be experimentally verified using in-line probing (), X-ray crystallography () or Nuclear Magnetic Resonance (NMR) spectroscopy (). However, these methods are usually time consuming and expensive. Computational approaches for accurately predicting alternate conformations are in need. The alternate functional structures are usually also energetically favored and are stable in their local energy landscapes. The conformational transitions between any pair of alternate structures may involve high-energy barriers, such that RNAs can easily become kinetically trapped by these structures. Accurate predictions of alternate structures of an RNA molecule should be conducted by exploiting the energy landscape and the folding dynamics of the RNA, in combination with the binding of the target metabolites. The ideal approach is to construct an exact energy landscape on all possible suboptimal secondary structures, then analyze every possible local optimal structures as well as all possible folding pathways in the landscape, and finally determine the most significant structures. In the following, we will briefly review existing methods for enumerating suboptimal structures and predicting alternate structures for RNA molecules.devised the first algorithm, mfold, for predicting the MFE structure and multiple suboptimal structures. For a given sequence, it generates, for each admissible base pair, the energetically best structure containing that base pair. For a sequence of length n, mfold produces at most n(n1)/2 suboptimal structures, which are a very small fraction of all the candidate suboptimal structures, and may miss some of the functional structures. In addition, mfold uses a filter based on the base pair metric to remove structures that are similar to one another. The filter is based on base pair difference, while it might be better to infer stability of structures in the context of energy landscape and remove unstable structures.proposed the first exact solution, RNAsubopt, for predicting all possible suboptimal structures between the MFE and an arbitrary upper limit using a mathematical model proposed bybased on the Turner energy model ().devised MC-Fold, a similar solution to the same problem that takes into account both non-canonical base pairings and pseudoknotted structures. In addition,presented BARRIERS, an algorithm for constructing the exact energy landscape on all possible
RNASLOptsuboptimal structures produced by RNAsubopt. BARRIERS is able to distinguish all the local optimal structures and can build a barrier tree representing the energy landscape. However, the number of feasible structures grows quickly with the length of the RNA sequence and the energy range, and RNAsubopt enumerates enormous solutions for even a short sequence with a small energy range. For example, the free energies of the native 'off' and 'on' structures of the 110 nt long adenine riboswitch of ydhL from B.subtilis are 32.3 and 14.8 (kcal/mol), respectively. The number of feasible structures grows quickly as free energy increases (which is shown in Supplementary), and the number of structures with free energies between the two native structures exceeds 10 9. Therefore, it is very difficult and time consuming to find a few alternate structures from an enormous collection of candidates. Applications of these algorithms are generally limited to very short RNA sequences with a small energy range. The conformational space of feasible structures not only is prohibitively large, but also renders redundant information, because many structures in the space are similar to one other. Thus, researchers have also proposed alternative approaches, which investigate reduced conformational spaces instead of the space of feasible suboptimal structures. Pipas andpresented an algorithm that can construct the best k structures composed of compatible stacks (i.e. sharing no base in common and forming no pseudoknot).used a search tree for generating suboptimal structures by selecting a subset of stacking regions that can coexist, from the set of all possible stacking regions. The search tree is composed of m level of nodes, where m is the number of possible stacks and nodes at depth i determine whether the i-th stacking region is selected.provided an algorithm that can enumerate all possible saturated structures such that no unpaired base can be paired without affecting the validity of the structures (). They employed a dynamic programming similar to that ofand incorporated a saturation check to ensure that structures are saturated. Giegerich and his cooperators also presented RNAShapes (), an approach that first extracts RNA abstract shapes based on juxtaposition and embedding of stacks, and then clusters structures with the same shape together, and finally represents all the structures in a cluster by the 'shrep' of the cluster (i.e. the secondary structure with the lowest free energy in the cluster). One shortcoming of the stack-based approaches is that they may exclude incompatible stacks that overlap by only one or a few bases. If we consider shortening one of the stacks by cutting off the overlapping bases, it will result in a pair of compatible stacks. Another drawback of these approaches is that it is hard to infer the stability of RNA secondary structures in the context of energy landscape and thus is hard to accurately predict native structures. Recently, Lorenz and Clote (2011) proposed an approach, RNAlocopt, that can sample a user-defined number of structures from the space of locally optimal structures. A locally optimal structure has the lowest free energy compared with its neighboring structures (obtained by adding or deleting a single base pair). One shortcoming is that when the sample size is small, RNAlocopt may fail to predict the native structures, and when the sample size is large, it would be difficult to identify the significant structures from a large number of candidates. We are interested in finding stable local optimal (SLOpt) structures that conform to the following criteria. First, a SLOpt,4,5 represent local optima and 2 * represents the global optimum. The dot adjacent to a local optimum 5 represents a none local optimal structure, which can transit to 5 along a gradient walk. Lower-case characters a,b,c and d are saddle points (i.e. structures with the highest free energies) of folding pathways between local optima 1&2, 2&3, 3&4 and 4&5, respectively. Bars represent the minimal additional energy required for the RNA molecule to 'jump' out of the corresponding energy basins. structure should be local optimal (LOpt) in that it resides at the bottom of a basin in the energy landscape (i.e. has the lowest free energy compared with all its neighbors). None local optimal structures are unlikely to be biologically functional, because they can continuously transit to their lower energy neighboring structures, like climbing down a hill until a local optimum (the bottom of a basin in the energy landscape) is reached. Second, a SLOpt structure should be stable in that the minimal energy barrier between this structure and any other SLOpt structures should be high. This criterion is proposed because secondary structures with lower free energies are not guaranteed to be more stable than those with higher energies. This criterion ensures that the RNA molecule can be 'trapped' by the energy basin where the SLOpt structure resides, without being able to getting out of the basin easily.illustrates a schematic representation of the energy landscape of an RNA molecule. Each LOpt structure (e.g. the local optimum, number 5) can represent a set of none LOpt structures in its associated energy basin (e.g. the dot). In addition, although bothPage: 2996 29943001
Y.Li and S.Zhangin the energy landscape, and each can represent a set of similar secondary structures, we introduce LOpt stack configurations to approximate LOpt structures. LOpt stack configurations are configurations that have a maximal number of putative stacks such that no stacks can be added rendering lower energy structures. We then present algorithms for finding all possible LOpt stack configurations based on both the Nussinov model () and the Turner energy model (), using the mathematical scheme advocated by. Next, we describe a fast heuristic algorithm for computing pairwise energy barriers among LOpt stack configurations. The energy barrier between a pair of LOpt stack configurations indicates the amount of additional energy required for the RNA molecule to fold from one structure to the other, and can be used to filter out unstable LOpt structures. Finally, we employ a simple neighbor joining algorithm to cluster unstable LOpt structures, obtain stable local optimal structures and assign rank accordingly.
RNA secondary structures and stack configurationsConsider an RNA sequence as a string A = a 1 a n of n letters over alphabet ={A,U,G,C}. A pair of nucleotides a i and a j (i < j) can interact with each other and form a base pair (denoted by (i,j)), if they are complementary to each other. In this article, we only consider the canonical base pairings (GC and AU) and the wobble base pairing (GU). A secondary structure of an RNA can be represented by an ensemble of pairing bases. A secondary structure is pseudoknotted if it contains two base pairs (i,j) and (i ,j ) such that i < i < j < j. In this article, we only consider pseudoknot-free secondary structures. The stability of an RNA secondary structure is determined predominantly by energetically favorable helical regions, where both base pair stacking and hydrogen bonding provide stabilizing energy contributions (). We denote a helical region by a stack. A stack p = (p b ,p e ,p l ) has p l consecutive base pairs, where (p b ,p e ) is the outmost base pair and (p b +p l 1,p e p l +1) is the innermost base pair. Without loss of generality, p l can be 0. We define two arbitrary stacks as compatible with each other if they are parallel or one stack encloses the other. We define partial orders < P and < I between compatible stacks as follows. If a stack p is parallel to a stack q, and p resides to the 5 of q (i.e. p e < q b ), then p < P q. If p encloses q [i.e., then q < I p. We denote the ensemble of all possible putative stacks of an RNA sequence by P. We can compute P using the algorithm of) in O(n 2 ) time. Following their work, we score hydrogen bonds between pairing bases GC, AU and GU by 3, 2 and 1, respectively, and set the minimum length of putative stacks ( min ) as 4 and the minimum score of hydrogen bonds (h min ) as 8, because statistics show that the fraction of true stacks missed is <10% with the cutoff (). The number of putative stacks predicted is usually much less than the number of feasible pairing bases. This yields a faster algorithm for enumerating suboptimal structures, which recursively branches when a putative stack (instead of a feasible base pair) is encountered. In addition, the typical lengths of riboswitches are around 100200, and the number of putative stacks predicted for an RNA of similar length may even be smaller than the sequence lengths. For example, we predicted 62 putative stacks for the 110 nt long adenine riboswitch of ydhL gene from B.subtilis. In order to elucidate the basic idea, we define a notion of stack configuration. A stack configuration of an RNA sequence is composed of a set of putative stacks in P that are pairwisely compatible.shows a schematic representation of a stack configuration. A stack configuration  is local optimal if there does not exist any stack p in P that p can be added to  without affecting the validity of  (i.e. forming a pseudoknot or paring a base with more than one partner). Next, let p and q be putative stacks and q is enclosed with p, we also define the following terms: |p|: the length of the subsequence covered by p (i.e. p e p b +1). P(p): the set of all possible putative stacks on a subsequence covered byp,q. A schematic representation of a stack configuration. Filled arcs represent putative stacks p,q,u and v. The relationships between these putative stacks are as follows:N (p): all possible LOpt stack configurations composed of putative stacks in P(p). F I (p): a subset of putative stacks in P(p),,0) that is enclosed by p and juxtaposes to the 5 end of q, provided that q < I p. r p,q : a stack (q e +1,p e p l ,0) that is enclosed by p and juxtaposes to the 3 end of q, provided that q < I p. In the next two subsections, we will describe algorithms for generating all possible LOpt stack configurations based on the Nussinov model and the Turner model, respectively.
Stack-based folding using Nussinov model
Computing the maximum number of base pairsThe RNA folding problem was formulated as a loop matching problem byand solved using dynamic programming. In the Nussinov model, the energy contribution of each base pair is 1, while base pair stacking and loop entropies have no energetic contributions. Given an arbitrary stack p, we define N(p) as the maximal number of base pairs of all the stack configurations in N (p). The recursive formula for computing N(p) is shown in Equation (1). If F I (p) is an empty set, then no putative stack is enclosed with p and N(p) = p l (the number of base pairs in p). Otherwise, we can divide the sequence covered by p into three parts: (i) the stacking base pairs in p, (ii) an arbitrary stack q in F I (p) and (iii) a stack l p,q which is enclosed with p and to the 5 of q. In this case, N(p) is the sum of base pairs in the three parts. The time complexity for computing N(p) is O(|P(p)| 2 ). In addition, we denote the entire RNA sequence by a stack p * = (1,n,0) and can obtain the maximum number of base pairs over all possible stack configurations on the sequence by computing N(p * ).
Generating all possible LOpt stack configurationsWe present inan exact algorithm for enumerating all possible LOpt stack configurations with at least n  base pairs. We keep an array of partial stack configurations in R. Each partial stack configuration  in R comprises an ordered list of stacks, which are labeled with either finished or unfinished. The label finished indicates that we have finished processing p and p should appear on all the stack configurations  represents. The label unfinished means that the structures on the subsequence covered by p is not determined yet and p needs to be dealt with in the future. Each partial stack configuration  can represent a set of LOpt stack configurations that contain all the finished stacks in . And, a partial stack configuration (p * ,unfinished) can represent all possible LOpt stack configurations on the entire RNA sequence. Besides, when all the stacks in  are labeled with finished,  only represents exactly one stack configuration. The algorithm is as follows. First, we push (p * , unfinished) to R. Then, we repeatedly pop up the last partial stack configuration  from R and process  according to the following procedures until R is empty. Given , we pop) for enumerating all possible local optimal stack configurations on an RNA sequence A with at least n  base pairs. The meaning of ,  and  are pushing back an element to the end of an array, inserting an element to the beginning of an array, and popping up the last element from an array, respectively. the last element (a stack p) from the array of  and check its associated label. If the label of p is finished, then all the stacks in  should have been processed. (Because we always insert stacks labeled with finished to the front of the array of  and push stacks labeled with unfinished to the end.) In this case, we output the only stack configuration that  represents. Otherwise, we decompose the unfinished stack p into three disjoint components: (i) the stacking base pairs of p, (ii) a stack q  F I (p) and (iii) a stack l p,q. We can construct a stack configuration on the subsequence covered by p by combining (i) the stack p, (ii) a stack configuration taken from N (q) and(iii) a stack configuration taken from N (l p,q ). If q is determined, we can construct |N (q)||N (l p,q )| possible new stack configurations. And, for each stack q in F I (p), we construct a new stack configuration  by pushing (p,finished) to the end of  and inserting (l p,q ,unfinished) and (q,unfinished) to the beginning of . We can compute the size of N (p) using Equation (2).Next, we push all the new partial stack configurations that have at least n  base pairs to the end of R. We denote the maximal number of base pairs of a partial stack configuration  by N(). As shown in Equation (3), N() is the sum of N(p) over all stacks p in . Each stack labeled with finished contributes exactly p l base pairs, and each stack labeled with unfinished contributes at most N(p) base pairs [where N(p) can be computed usingthe label of p is finished N(p) the label of p is unfinished
Stack-based RNA folding using the Turner modelAccording to the Turner model, the free energy of a stack configuration is the additive sum of energy contributions of all the stacking base pairs, hairpin loops, bulges, interior loops, multiloops and dangling bases (). We describe the energy parameters and terminal symbols used in the following:and I(p,q) can be obtained from the tabulated energy parameters, and S(p) can be computed as the sum of tabulated stacking energies of adjacent stacking base pairs in p. All the free energy parameters are taken from the work of. We also define the following non-terminal symbols as follows:{C(q)+FM(l p,q )+M i +|r p,q | * M b }(4)
Generating all possible LOpt stack configurationsIn this section, we describe an algorithm for numerating all possible local optimal stack configurations of an RNA sequence A within E of the MFE. The detailed procedures are described in Supplementary Figures S4S8. We denote the free energy upper limit for stack configurations by e  , where e  is equivalent to the MFE of all possible stack configurations plus E. We keep an array of paired objects,...}. Each paired object of R comprises of a partial stack configuration  and its associated minimum free energy E(). Each partial stack configuration  comprises an ordered list of stacks, each with a label (i.e.  ={(p,label),(p ,label ),...}). There are five types of labels, including finished, F, C, FM1 and FM. The label finished indicates that we have finished processing stack p, and p will appear on all the stack configurations that  represents. The remaining labels correspond to the following cases: F(p), C(p), FM1(p), and FM(p), respectively. The algorithms starts with a partial stack configuration  0 = (p * = (1,n,0),F) and its associated minimum free energy E( 0 ).  0 represents all possible stack configurations on A, and E( 0 ) is the minimum free energy of  0 (i.e. E( 0 ) = F(p * )). We push ( 0 ,E( 0 )) to R and repetitively process the last element of R according to the following procedure until R is empty. Let (,E()) be the last partial stack configuration and its associated energy in R, and let (p,label) be the last stack and its associated label in . First, we check the label of p. Similar to the algorithm based on the Nussinov model, we also ensure that stacks labeled with finished are inserted to the front of the array of  and other stacks are pushed back to the end of the array. If the label of p is finished, then all the stacks should have been processed. In this case, we output  if E  is less than e . Otherwise, we will construct a set of new partial stack configurations according to the label. Each new Page: 2998 29943001
Y.Li and S.Zhangpartial stack configuration  is constructed by combining all the remaining stacks other than p in  (denoted by   , where   =  {(p,label)}) with stacks enclosed with p. Next, we compute E( ) for each new partial stack configuration  , and push them to the end of R if E( ) is less than or equal to e  , as described in the following: Case F: p (p b = 1 and p l = 0) is a stack. For each stack q in F I (p), we construct a new partial stack configuration  by pushing (q,C) and (l p,q ,F) to the end of  . E( ) is given by Equation (5).Case C: p (p l = 0) should appear on all the stack configurations that  represents. We construct a set of new partial stack configurations according to Cases C.1, C.2 and C.3. C.1: p closes a hairpin loop. We construct a new partial stack configuration  by inserting (p,finished) to the front ofC.2: p closes a stack q and forms an interior loop (or a bulge) with q. For each stack q < I p, we construct a partial stack configuration  by inserting (p,finished) to the front of   and then pushing (q,C) to the end. E( ) is given by Equation (7).C.3: p closes a multibranched loop. For each stack q  F I (p), we construct a new partial stack configuration  by inserting (p,finished) to the front of   , and then pushing (q,C) and (l p,q ,FM1) to the end. E( ) is given by Equation (8).Case FM1: p (p l = 0) is directly enclosed with a multibranched loop, and there exists at least a stack q such that q l = 0 and q < I p. For each stack q in F I (p), we construct a new partial stack configurations  by pushing (q,C) and (l p,q ,FM) to the end of  . E( ) is given by Equation (9).Case FM: p (p l = 0) is directly enclosed with a multibranched loop. We construct a set of new partial stack configurations according to cases FM.1 and FM.2. FM.1: all the bases covered by p are unpaired. We construct a partial stack configurationFM.2: there exists a stack q (q l = 0) enclosed with p. For each stack q < I p, we construct a partial stack configuration  by pushing (q,
Redefining partial orders < I and < PStack configurations produced by our approach consist of pairwisely compatible stacks, therefore incompatible stacks that overlap one another by only a few bases cannot coexist in a structure. To solve this problem, we use looser definitions of partial orders < I and < P , which allow compatible stacks to share a small portion of bases in common. RNASLOpt is able to produce stack configurations containing incompatible stacks overlapping by a few (by default, no >20%) bases.
Obtaining SLOpt structuresUsing the algorithm described above, we can produce a set of all possible LOpt stack configurations on an RNA sequence, and denote it by R. However, although the conformational space of LOpt stack configurations is dramatically reduced compared with the space of feasible secondary structures, the number of structures considered may still be enormous. In literature, many distance metrics, such as base pair metrics (), tree metrics (), mountain metrics (), metrics based on base pairing probability matrices () and metrics using the LempelZiv algorithm (; Zhang and) have been proposed for filtering out similar structures and reducing the number of structures considered. In contrast, we are only interested in stable local optimal (SLOpt) structures. And, we will filter out unstable structures from the space instead of removing similar structures that share base pairs, shapes or pairing probabilities in common. The SLOpt structures should be difficult for an RNA molecule to escape, and the associated energy barrier between any pair of SLOpt structures should be greater than or equal to a certain threshold B. Using pairwise energy barriers among LOpt stack configurations as a distance matrix, we can evaluate the stability of RNA secondary structures in the context of energy landscape. The problem of determining the minimal energy barrier between two conformational structures has been well studied, and it is usually solved in conjunction with finding the optimal folding pathways with the minimal energy barrier. Many approaches have been proposed to address the problem. These approaches can either be based on the Nussinov model [e.g. an exact algorithm proposed byand a greedy algorithm byor the Turner model [e.g. an exact solution devised byand heuristic algorithms developed by. In this article, we focus on using energy barriers to find SLOpt stack configurations (instead of determining the optimal folding pathways). Therefore, here, we propose a fast heuristic for computing pairwise energy barriers among LOpt stack configurations. Upon these pairwise energy barriers, we cluster unstable LOpt stack configurations using a simple neighbor joining algorithm, and obtain all the SLOpt stack configurations with the minimal pairwise energy barrier no less than B. Finally, we rank these SLOpt structures either according to their free energies or their minimal associated energy barriers.
Approximating barrier energyConsider secondary structures S and S , the folding pathway between S and S involves a series of intermediate structures, among which, the saddle point structure S * is the one with the highest free energy (e.g. in, a is the saddle point for the folding pathway from local optima 1 to 2). We denote the energy barrier from S to S by B(S  S ) and denote the energy barrier between S and S by B(S S ). B(S  S ) is equivalent to the absolute difference in the free energies of S and) can be computed using Equation (12).We list our assumptions for approximating barrier energy B(S  S ) in the following. The saddle point S * between S and S can be achieved when all the base pairs in S are opened or shifted such that S can be formed without opening more base pairs. The amount of additional energy required for opening an entire stack p is roughly S(p), and the amount for opening a base pair in p is about 1 p l * S(p), while the amount for sliding one endpoint of a base pair in p is , by default,  is 0.5). Given a base pair (i,j) in S and an arbitrary stack p in S , we determine the necessary operation to apply to (i,j) (i.e. operations that can make the formation of p possible) according to the positional relationship between (i,j) and p. Let w((i,j),p ) denote the additional energy associated with the operation. We describe the four types of positional relationships and the corresponding w((i,j),p ) in. Case 1 (i,j) is compatible to p (i.e. either be nested or juxtapose to each other). In this case, we cannot infer the operation to apply to the base pair, because the stack can be formed anyway. Case 2, (i,j) is consistent with p. We do not apply any operation to the base pair so as to keep it intact during the folding. Case 3 (i,j) partially conflicts to p [i.e. there exist two base pairs (i,i ) and (j ,j) in. In this case, we may slide either Page: 2999 29943001. Positional relationships between a base pair (i,j) and a stack p
RNASLOptCompatible (i,j) and p either are nested or juxtapose to each other  (not applicable) 2 Consistent (i,j) is in p 0 3 Partially-Conflict there exist base pairs (i,i ) and (j ,j) in pendpoint i or j to its new partner (i or j ) to form p. Case 4 (i,j) conflicts to p. In this case, we have to open (i,j) in order to make the formation of p possible. Since S usually contains more than one stack, we use the smallest w((i,j),p ) over all the stacks p in S , to represent the least amount of additional energy required so as to form S. If (i,j) is compatible with all the stacks in S , we have to delete (i,j), which requires 1 p l * S(p) additional energy. We present the approximated algorithm for computing B(S  S ) in Equation (13).
Pairwise energy barrier-based clusteringA LOpt stack configuration  is considered as stable if the minimal energy barrier between  and any other stable structures is no less than B.  can be seen as a representative of all the unstable structures in the energy basin it resides. Let R * denote the set of SLOpt stack configurations. We describe the procedure for constructing R * from the set of LOpt stack configurations R in Supplementary. First, we sort LOpt stack configurations in R by their free energies (i.e. the lower the free energy is, the higher the stack configuration ranks). Then, we push the MFE LOpt stack configuration (i.e. R) to R * . Next, we define a lower triangular matrix M * for saving pairwise energy barriers of SLOpt stack configurations in R * , where M *represents the energy barrier between R *and R *[i.e. B(R *R *)]. We analyze each LOpt stack configuration  in R. If the energy barrier between  and any SLOpt stack configuration in R * is less than B, we consider  as unstable, and discard it. Otherwise, we push  to R * as a SLOpt stack configuration and update M * accordingly. When M * is constructed completely, we stepwisely neighbor join SLOpt stack configurations in R * which have the lowest pairwise energy barrier in M * , and obtain a cluster tree. Finally, we rank SLOpt structures in R * either by their free energies or by their associated minimal energy barriers.
RESULTS
Reducing the conformational spaceThe number of feasible secondary structures within a certain energy range of the MFE can be enormous. Therefore, instead of investigating the vast conformational space of feasible secondary structures, we want to reduce the size of the conformational space to consider. First, we only enumerate LOpt stack configurations instead of feasible structures, the number of which is greatly reduced compared with that of feasible structures. In addition, we can further reduce the number of candidates to consider by filtering out unstable structures and only investigate SLOpt stack configurations. Note that the reduced space still grows exponentially with the RNA length and the energy range. Comparisons of sizes of different conformational spaces are shown in Supplementary Figures S2 and S3.). Usually, RNASLOpt can be applied on RNAs of around 200 nt long and finish the computation within a few minutes. Next, we compare the ranks of the best structures corresponding to the native structures produced by mfold, RNAShapes, RNAlocopt and RNASLOpt in. The best structures should share the most backbone structures in common with the native structures. RNASLOpt can rank predicted structures both according to their free energies and minimal associated energy barriers. In all the cases, RNASLOpt ranks the best structures corresponding to the native 'on' and 'off' structure conformations among the top. And, in six out of seven cases, RNASLOpt provides better ranks than the others. For example,show both the native 'on' and 'off' structures of adenine riboswitch from the ydhL gene of B.subtilis () and the best stack configurations produced by RNASLOpt. RNAsubopt produces >10 9 feasible secondary structures, mfold selects 43 representative structures and RNAShapes predicts 25 shreps (with the most abstract option). In contrast, RNASLOpt enumerates 19 LOpt stack configurations within 55% of the MFE, filters out 14 unstable stack configurations, and obtains 5 SLOpt stack configurations. Two SLOpt stack configurations among the five have the similar backbone structures to the native conformations and are ranked among the top according to both free energies (i.e. ranked 1 and 4, respectively) and the minimal associated energy barriers (i.e. ranked 1 and 2, respectively). Since the 'on' and 'off' structures predicted by RNASLOpt are LOpt stack configurations, an extra stack was predicted for each configuration (and D) without affecting the backbone structure. We also list the native 'on' or 'off' conformations of the seven riboswitches, together with the best structures produced by mfold, RNAShapes, RNAlocopt and RNASLOpt in Supplementary Figures S10S16.
Y.Li and S.Zhang
CONCLUSIONIn this article, we designed an approach RNASLOpt for predicting stable local optimal stack configurations of an RNA molecule.We first predict all possible local optimal stack configurations that are significantly different from one another. With each stack configuration representing a set of similar RNA secondary structures, we are able to greatly reduce the size of the conformational space considered, and make applications on longer sequences with a higher energy range possible. In addition, we also employ a fast heuristic to compute pairwise energy barriers among LOpt stack configurations. Finally, we filter out unstable structures based on their pairwise energy barriers, obtain stable structures and rank them either according to their free energies or their minimal associated energy barriers. RNASLOpt can produce interesting stable local optimal stack configurations for an RNA, and can be used to predict alternate structure conformations for riboswitches. We benchmarked RNASLOpt on seven riboswitches and the results show that RNASLOpt is able to successfully predict both native 'on' and 'off'
A B C D
Page: 3001 29943001RNASLOpt structures for all the riboswitches. In addition, RNASLOpt is able to assign better ranks than the other methods in most cases. Since RNASLOpt is still an exponential algorithm, it is best applied to RNAs of up to 250 nt long. In conclusion, RNASLOpt can possibly be used in the following applications: (i) detecting alternate structure conformations for novel riboswitches; (ii) producing stable local optimal structures for an RNA molecule, which comprise a compact representation of the energy landscape; and (iii) unraveling the folding kinetics of an RNA molecule by exploiting the compact energy landscape and then determining its functionality. Stack configurations of an RNA molecule contain only the backbone helices and represent scaffolds of secondary structures. When finer grained structures conforming to the backbone structure are in need, we can take stack configurations as constraints and obtain the MFE structures that conform to the constraints using constraint folding (e.g. RNAfold with-C option,).
Conflict of Interest: none declared.
The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
and 3 are local optima and 1 has even lower energy than 3, 1 is still less stable. This is because the conformational transition from 1 to 2 involves a lower energy barrier, while the transitions from 3 to any lower free energy LOpt structures yield higher energy barriers. We formalize the problem as follows: given an RNA sequence A, an energy range E and an energy barrier cutoff B, find all the stable and local optimal structures, of which (i) the free energies are within E of the MFE and (ii) the minimal energy barrier between any pair of SLOpt structures is  B. We will describe our approach (RNASLOpt) for addressing the problem in Section 2. In Section 3, we will compare RNASLOpt against the state-ofart methods and show benchmark tests on known riboswitches. In Section 4, we will discuss possible applications of our approach and conclude the article. 2 METHODS First, we introduce configurations of stacks to represent scaffolds of RNA secondary structures. RNA secondary structures involve both stacking base pairs and isolated base pairs, where stacking base pairs contribute significantly to the stabilization of RNA secondary structures (Yakovchuk et al., 2006). Structures with isolated base pairs are usually unrealistic and the removal of these structures from the search space may yield more significant structures (Zuker, 1989). Since LOpt structures reside at bottoms of basins
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Len, lengths of riboswitches. SubOpt, the percentage suboptimality. 3.2 Predicting alternative structures for riboswitches We will show that although the conformational space of SLOpt stack configurations is greatly reduced compared with the space of feasible structures, it does not miss native structures for all the benchmark tests. Therefore, we can predict alternate structures for riboswitches by exploring the space of SLOpt stack configurations. We performed benchmark tests on seven riboswitches, including the adenine riboswitch of the ydhL gene from B.subtilis (Mandal and Breaker, 2004) (denoted by adenineBS), the adenine riboswitch of add gene from Vibrio vulnificus (Lemay et al., 2011) (denoted by adenine-VV), the guanine riboswitch of xpt-pbuX operon from B.subtilis (Mandal et al., 2003), the S-adenosylmethionine (SAM) riboswitch of metE from Thermoanaerobacter tencongensis (Epshtein et al., 2003), the c-di-GMP riboswitch of tfoX from Candidatus desulforudis (Smith et al., 2009), the lysine riboswitch of lysC from B.subtilis (Blouin et al., 2011) and the thiamin pyrophosphate (TPP) riboswitch of thiamin from B.subtilis (Mironov et al., 2002; Rentmeister et al., 2007). We describe the parameters used in the tests as follows. By default, the minimum length of putative stacks (i.e. min ) is 4, and the minimum score for hydrogen bonds (i.e. h min ) is 8. However, min is 3 for the SAM riboswitch and c-di-GMP riboswitch, because a large proportion of stacks in the native structures of both cases are of lengths  3. Percentage suboptimality is a parameter that determines the free energy upper limit for the predicted structures. If percentage suboptimality is x%, then only structures that have free energies  (1x%) of the MFE will be computed. The default value is 20%, since usually the native structures are within a lower energy range from the MFE. However, for the adenine-BS riboswitch and the guanine riboswitch, suboptimality is assigned a greater value (i.e. 55%), because the free energies of the 'on' structures for both riboswitches are >20% of the MFE. The default energy barrier cutoff B is 12 (kcal/mol), which is empirically chosen to reflect the stability of alternative structures, and it can be changed by users. First, we compare the number of structures produced by mfold (v3.5), the number of 'shreps' by RNAShapes (v2.1.6) and the numbers of LOpt and SLOpt stack configurations by RNASLOpt in Table 2. The number of SLOpt produced by RNASLOpt is less than that of RNAShapes in all the cases. It reveals that although the number of candidates considered by both methods are exponential, the space of RNASLOpt is reduced compared with the space of RNAShapes. Interestingly, the number of candidates produced by RNASLOpt is even less than that of mfold [which generates O(n 2 )
