Motivation: When analysing gene expression time series data, an often overlooked but crucial aspect of the model is that the regulatory network structure may change over time. Although some approaches have addressed this problem previously in the literature, many are not well suited to the sequential nature of the data. Results: Here, we present a method that allows us to infer regulatory network structures that may vary between time points, using a set of hidden states that describe the network structure at a given time point. To model the distribution of the hidden states, we have applied the Hierarchical Dirichlet Process Hidden Markov Model, a non-parametric extension of the traditional Hidden Markov Model, which does not require us to fix the number of hidden states in advance.
INTRODUCTIONThe analysis of gene expression data in the field of systems biology is a challenging problem for a number of reasons, not least because of the high dimensionality of the data and relative dearth of data points. A number of approaches have been taken to inferring regulatory interactions from such data, often using graphical models or sparse regression techniques L bre, 2009; Opgen). These problems are further compounded by the nature of the biological systems under consideration, owing to the influence of unobserved actors that may alter the behaviour of the system. Often experiments are performed for long periods during which it is natural to expect the regulatory interactions at work to change. The time scales of regulatory responses to stimuli often differ from those of signalling and metabolic responses, and so it may be that responses to stimuli, around which experiments are often designed, take place in several phases each having different time scales. Previous studies have attempted to address this problem by introducing changepoints in the time series, allowing the inferred network structure to differ between the resulting segments of the time series. For example in, a changepoint model is applied in which Dynamic Bayesian Networks are inferred for each segment of the time series. However, such approaches may place strong prior assumptions on the number of changepoints that can be observed, and do not adjust for the complexity of the observed data automatically. Instead in, an allocation sampler is used in combination with Bayesian Networks to assign each observation to a group, but unlike changepoint models, this method treats the observations as being exchangeable, ignoring the fact that the data are sequential. The similar methodology in Ickstadt (2011) uses a more flexible non-parametric prior on group assignments, applied to the modelling of molecular interactions using Bayesian Networks, but suffers the same drawbacks in not recognizing the sequential nature of the data. A solution to the related, but different problem of inferring networks from multiple datasets that may vary in their underlying structure owing to changes in conditions, is presented in. By applying a hierarchical model, it is possible to model the interactions that may be shared for a number of different experimental conditions while also modelling the interactions specific to certain cases. However, this method treats the whole time series for a condition as a single static network, rather than allowing the network structure to change within a time series. Here, we present a methodology that allows us to infer network structures that may change between observations in a nonparametric framework while modelling the sequential nature of the data. To that end, we have used the infinite hidden Markov model of, also known as the hierarchical Dirichlet Process Hidden Markov Model (HDP-HMM) (), in particular the 'Sticky' extension of, in conjunction with a Bayesian network model of the gene regulatory network structure. The HDP-HMM allows the number of different states of the network structure to adapt as necessary to explain the observed data, including a potentially infinite number of states, of course restricted in practice by the finite number of experimental observations. In the previous work of, it was demonstrated that the HDP-HMM outperforms a Dirichlet Process mixture for Gaussian graphical models on heterogeneous time series. We apply our methodology to both simulated data and gene expression data for Arabadopsis thaliana and Drosophila melanogaster, demonstrating its effectiveness in detecting changes in network structure from time series data, and compare its performance and accuracy to existing methods. We also consider the biological implications of our results and present hypotheses as to their significance.
APPROACHGiven gene expression time series data over m genes at n time points, we denote the observations as the n  m matrix *To whom correspondence should be addressed.  The Author 2012. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited. X  x 1 ,. .. , x n  T , where x j  x j1 ,. .. , x jm  T , the column vector of expression levels for each of the m genes at time point j. We formulate our model as a HDP-HMM, a stochastic process, whereby a set of hidden states s 1 ,. .. , s n governs the parameters of some emission distribution F over a sequence of time points 1. .. n. Each observation x j is then generated from a corresponding emission distribution F k , where s j  k. For our emission distributions, F, we use a Bayesian Network model over the m variables to represent the regulatory network structures corresponding to each hidden state.
METHODSIn the following, we will consider the problem of network inference in a Bayesian framework, aiming to draw samples from the distribution of the model parameters , given some observed data X, P(jX), known as the posterior distribution. By application of Bayes rule, it can be shown that for a given modelwhere the term P(X), commonly called the evidence, is constant with respect to the parameters , and so PjX / PXjP. The prior distribution P() over the parameters summarizes our knowledge of the model parameters before we have observed the data, and so it should be consistent with any data we could potentially observe.
The Dirichlet ProcessBayesian non-parametrics aims to ensure that the prior of a model remains appropriate for a wide range of data, allowing the complexity of an inferred model to adapt in light of the observed data. One particular Bayesian non-parametric formulation, known as the Dirichlet Process (an extension of the Dirichlet distribution as described below), has been used extensively as a prior in clustering and mixture modelling, as it is able to adapt the complexity of the model to best fit the number of components in the data, without resorting to schemes such as reversible jump Markov Chain Monte Carlo (MCMC) (), as used in L bre et al. (2010). The Dirichlet Process is a non-parametric extension of the Dirichlet distribution (), which can be constructed in a number of ways. Conventionally, the Dirichlet distribution is defined for M dimensional vectors x under the constraint that all x i 40 and P M x i  1, and takes parameters i , for i 2 1,. .. , M:As the x i sums to one, they can be interpreted as specifying a discrete probability distribution over a set of outcomes 1,. .. , M. Using the Dirichlet distribution as the prior for a set of multinomial observations, i can be interpreted as the number of a priori observations of outcome i (). The Dirichlet Process can then be obtained as the limit of a symmetrical Dirichlet distribution with dimension M and concentration parameters M as M !1. One construction of the Dirichlet Process is the 'stick breaking' construction of, whereby an infinite sequence of discrete probability atoms are drawn from the underlying distribution, known as the base measure. These points are weighted by coefficients i , that are defined asfor some concentration parameter. The i can thus be seen as lengths broken from a stick of unit length, 1 taking a length of 0 1 , 2 taking a fraction 0 2 of the remaining stick (which has length) 1  0 1 and so on. Larger values of will result in smaller values of 0 and thus many atoms i with similar weights i. The distribution of the i dependent on is referred to as $ GEM. Then for a Dirichlet Process with concentration parameter and base measure H, written DP(,H), and G $ DP, H, we havewith i $ H and $ GEM. As we will see with the application of the HDP to HMMs, the ability of Bayesian non-parametric methods to adaptively explain the complexity of the observed data makes them a valuable tool in the statistical analysis of data when we wish to make few a priori assumptions. The HDP is constructed simply by taking a Dirichlet Process as the base measure of another Dirichlet Process. Then we have thatand using the stick breaking construction,where i $ H, $ GEM and $ DP, . For a derivation of this form of the HDP, we refer the reader to).
HDP-HMMsTo model a hidden state sequence that evolves over time, we apply the methodology first introduced in, whereby a finite state Hidden Markov Model (HMM), consisting of a set of hidden states s 1 ,. .. , s n over some alphabet 1. .. K, is extended so that K !1. In a classical HMM (), the number of states K is typically specified in advance, and states follow a Markov process, whereby transitions are made between states with probability kl  ps j  ljs j1  k so that the next state in the sequence depends only on the previous state. The HDP-HMM (; Teh and Jordan, 2010) instead applies a Dirichlet Process prior to the transition probabilities p k out of each of the states k, and uses a hierarchical structure to couple the distributions between the individual states to ensure a shared set of potential states into which transitions can be made across all of the p. This allows for an unlimited number of potential states, of course limited in practice by the number of observed data points. More formally, each hidden state k possesses a Dirichlet Process distributed G k , from which the next state is drawn, and a common (discrete) base measure G 0 is shared between these Dirichlet Processes so that G k $ DP, G 0 . As a result, transitions are made into a discrete set of states shared across all of the G k and drawn from G 0. The base measure G 0 is in turn drawn from a Dirichlet Process, G 0 $ DP, H, H being our prior over parameters for the emission distributions F k. Then using the stick-breaking construction offor G 0 and drawing l independently from H, we have that G 0  P 1 l l l ,
3299Inference of temporally varying Bayesian Networks with $ GEM, and so G k  P 1 l kl l with p k $ DP, . The resulting model is outlined in. For a comprehensive introduction to the construction of the HDP-HMM, we refer the reader to the excellent and extensive description in. However, in a biological system, it is more realistic to assume that only a subset of the large variety of potential behaviours of the hidden state sequence is relevant, as behaviour such as rapid cycling between states at adjacent time points would a priori seem to be unlikely to be observed in most gene expression datasets. Thus, we choose to apply the Sticky HDP-HMM (), which introduces an extra parameter that biases the prior probability of transitions between states towards remaining in the current state rather than transitioning to a differing one. Adding such a prior assumption simply states that we expect the state of the system to remain the same between successive time points; this is both parsimonious and would seem to be justified in the case of gene expression datasets, where we might only expect to observe a small number of transitions to differing states across the time series. This modification to the HDP-HMM gives us a model generating observed data points x j as ()$ H, 14 x j js j $ F sj   15
Gibbs sampling for the Sticky HDP-HMMTo sample from the hidden state sequence, we have used a Gibbs sampling procedure () based on the conditional probabilities for the hidden state s i, given the remaining hidden states s i as described in, updating each hidden state individually in a sweep over the n states,where s j denotes the state sequence s 1 ,. .. , s n excluding s j , N j kl indicates the number of observed transitions from state k to state l within the hidden state sequence s j , and N j k the total number of transitions from state k within s j. Briefly, to update the hidden state sequence s, iterating over each j, ps j  kjs j , , ,  is calculated for all k, and a weighted sample taken from these to decide the updated value of s j. The full process is described in Algorithm 1. We use standard vague prior parameters for and (), and set so as to prefer sequences of identical consecutive states. It is possible in principle to further extend the method by adding priors on the hyperparameters , and , but in most cases, the HDP-HMM already exhibits the required flexibility without this.
Bayesian Network emission distributionsTo model the regulatory network structure corresponding to the hidden states of the HDP-HMM, we have applied a Bayesian Network methodology to capture the relationships between the genes represented in our data. Thus, each hidden state has a unique Bayesian Network describing the interactions occurring between the genes at the time points corresponding to a particular state. Bayesian Networks are probabilistic models, whereby a directed graph defines the conditional independence relationships between a set of random variables (). For the model to remain consistent, the graph structure G, with nodes u 2 N G representing random variables and directed edges v, u 2 E G representing conditional probability relationships between them, must be acyclic. For a given Bayesian network structure, G, and model parameters, , the joint distribution pXjG,  factorizes as a product of local distributions for each node,where for each observation, the value x iu of a node u is dependent on the values of its set of parent nodes pa G u  fv 2 Njv, u 2 Gg and some parameters u. Here, we have used a Gaussian Bayesian Network (BGe) model () that allows the variables to take continuous values and defines the local distributions for each observation i 2 1,. .. , m of a gene u aswith parameters u  u , b u , 2 u. With a Wishart distribution, the conjugate before the multivariate Normal distribution, this simplifies the form of the resulting equations, and we can calculate the local marginal likelihoods px u jpa G u as described in Geiger and Heckerman (2002) and from these derive the joint probability pXjG. Unfortunately, owing to the restriction of the network structure to that of a directed acyclic graph (DAG), it is difficult to explore the space of possible network structures. Several MCMC schemes have been proposed, including those of Grzegorczyk and Husmeier (2008) and, but performing random walks over DAG network structures faces the problem that proposing moves that maintain the DAG structure can be complex and time consuming, and mixing of the Markov chain can be slow. However, as noted in, a DAG structure G corresponds to a partial ordering on the nodes and so induces a (non-unique) total ordering, and allows us to perform a random walk over total orderings of the nodes. This Markov chainefficiently explores the space of possible graph structures, improving the mixing properties of the chain. Although this introduces a bias in the prior distribution over graph structures (), it greatly simplifies the computational complexity of the MCMC procedure, and such a bias may be justified by arguments of parsimony, as graphs consistent with more orderings are more likely to be sampled. Furthermore, the uniform prior on DAG structures is not uniform over Markov equivalent graphs, and so also introduces a different kind of bias in the results. Finally, a trivial modification of the algorithm of Friedman and Koller (2003) allows for a correction of the bias (). Thus, in our methodology, we apply the MCMC sampler of Friedman and Koller (2003) to infer Bayesian Network structures for each hidden state of the HDP-HMM by sampling over total orderings of the nodes 0, given the data points corresponding to the state in question. It is easy to calculate the likelihood of an ordering 0 using the formula given in Friedman and Koller (2003)where pa 0 G denotes the set of possible parent sets over the nodes of G consistent with the ordering 0. Then we can use a Metropolis Hastings sampler to sample from the posterior of orderings p0 jX  pXj 0p0 (), by beginning with an initial ordering and proposing and accepting new orderings 0 0 , distributed as q0 0 j 0 with probability according to the Metropolis Hastings acceptance probability p acc  min 1, pXj 0 0 p0 0 q0 j 0 0  pXj 0p0q0 0 j 0 , 20 over a number of iterations. We choose to propose changes by swapping nodes in the ordering rather than more complex schemes such as 'deck cutting', as these were found to have little impact on performance in previous studies (;). Proposals 0 0 $ qj 0 are thus drawn by selecting two nodes within the ordering uniformly at random and exchanging their positions to produce a new ordering. In the absence of a compelling alternative, we take the prior over orderings p0 as the uniform distribution. Then for our emission distribution for a given state k, we apply a Bayesian Network ordering 0 k generating observed data points X k distributed as pX k j 0 k  where by X k we denote the subset of X ij , including only rows i corresponding to states s i  k. The full method is outlined in Algorithm 1 and combines Gibbs updates of the hidden state sequence with Metropolis Hastings updates of the node orderings of the Bayesian Networks for each state at every iteration. To sample hidden state sequences and orderings from the posterior distribution, the algorithm is first run for a number of burn-in iterations, after which samples are collected. As a single iteration of our algorithm combines a full Gibbs update sweep along with an update of the Bayesian Network orderings over a number of Metropolis Hastings steps, in practice a comparatively small number of iterations of the algorithm are required to reach the posterior. To reduce the computational complexity of the Bayesian Network inference, we restrict the number of potential parents of a gene to be 2. Even in such a case, we still face a large number of possible parent sets, of size Pin the analyses presented below, we restrict our dataset to a subset of genes of special interest, as is commonly the case in gene expression data analysis. Given that the parent set for a given group of genes will be of sizeFinally, once we have inferred the hidden state sequence and generated a posterior sample of orderings corresponding to each state, we can then easily sample DAG structures from the posterior by first sampling an order from the posterior of a given state, and then sampling from the graphs consistent with this ordering, weighting the choice of parents by the local scores, and optionally attempting to account for the bias in the prior as described in Ellis and Wong (2008).
RESULTS
Examplesimulated dataTo evaluate the efficacy of our method, we generated simulated data from three different Bayesian network structures and interleaved the data points into a single time series. Applying our methodology to this data, we then attempted to recover the hidden state sequence. Three different Bayesian Networks of 10 nodes each having random structures and parameters were used, with the restriction that each node had at most two parents. Such a restriction is realistic for real world biological networks and reduces the computational complexity of the Bayesian network inference, as the number of potential sets of parents of each node is greatly reduced by constraining the search. A total of 100 data points were used, consisting of a sequence of 25 generated by the first network, 25 by a second network structure, another 25 from a third network structure and finally a further 25 data points generated by the second network structure. The Gibbs sampling MCMC scheme outlined in Algorithm 1 was applied over 500 iterations after a 1000 iteration burn in, with 100 MCMC iterations of the Bayesian network order sampler run on each network structure between each Gibbs sweep. We performed a comparison of the true hidden state sequence with the state sequences for the 500 samples from the Gibbs sampler, and found that our method perfectly recreates the original hidden state sequence, correctly identifying that the network structure is the same between two separate segments of the time series. To assess the accuracy of our method, we compared its performance to the Auto Regressive TIme VArying (ARTIVA) method ofL bre et al. (2010). Although ARTIVA was able to infer change points at the appropriate time points for one of the genes, all of the remaining genes had no predicted changepoints, despite the fact that their interactions change during the time series.
Drosophila melanogaster midgut development gene expression dataApplying our method to real world gene expression data, we took the publicly available gene expression dataset of Li and White (2003), as stored in the Gene Expression Omnibus database (). This dataset gives tissue specific expression levels for genes in D. melanogaster midgut at time points before and after puparium formation, taken at 11 time points. A subset of genes to analyse was chosen by selecting genes having the highest variance across the time series, using the genefilter R package in Bioconductor www.bioconductor.org (). This resulted in a dataset of 23 genes at 11 time points. This allows us to apply our approach without having to consider the additional issues arising from the 'large-p-small-n' problem.The results shown inidentify two regions of the time series having different network structures, with a change occurring after the 0 hour time point at which puparium formation occurs. This suggests that a different structure of regulatory interactions is at work during the midgut development after the puparium formation begins. The networks inferred for each of the different states are also shown in, illustrating a clear change between differing network structures. A main objective of this type of approach is to distill new mechanistic hypotheses from such data, and the temporally resolved and varying network structures do, indeed, deliver candidates for further analysis. Looking at the inferred network structures, e.g. we see a number of genes whose interaction patterns change over the course of the time series. Perhaps most interesting amongst these are the genes Jonah 65Aiv (Jon65Aiv) and Jonah 99Ciii (Jon99Ciii), which are known to be expressed in the D. melanogaster midgut during development (), but whose function is not fully understood. It appears that Jonah 99Ciii is involved in development before puparium formation, whereas Jonah 65Aiv develops several interactions after puparium formation. The gene alphaTry seems to be involved in development before and after puparium formation, whereas nimrod C4 (nimC4) seems to interact only before puparium formation. In addition to this, a number of relatively unknown genes appear to have differing regulatory interactions between the time points. Given only gene expression data, it is not feasible, however, to identify potential mechanisms of the changes taking place, as many different factors may affect the presence or absence of regulatory interactions. The inferred network structure before puparium formation is based on a small number of time points, and so may not be entirely robust. However, such cases are bound to arise when considering time varying networks without a priori knowledge of the time varying structure, and should be treated as indications that further experimental work is needed if closer investigation of the network structure is required.
Transcriptome of starch metabolism during A. thaliana diurnal cycleWe have also analysed the gene expression dataset of, as included in the GeneNet () R package (R Development Core Team,). The dataset consists of expression levels for 800 genes encoding enzymes involved in starch synthesis and in conversion of starch to maltose and Glc, at 11 time points for 12 h, transitioning from dark to light. The first 5 time points were collected during a dark period after which a switch to a light period was made, with time points spaced so that expression is measured at 0, 1, 2, 4 and 8 h after the switch to the dark period, and the same intervals after the switch to the light period (), as well as a final 24-h time point at the switch back to the dark period. A reduced subset of the 800 genes in the dataset was selected using the genefilter R package, as described previously, giving a subset of 40 genes that were analysed using our method. In, we show the results generated by our method, clearly indicating two distinct phases within the time series. It appears that one phase is detected from 1 to 12 h, with a second phase inferred between 13 and 24 h that is also represented at the initial time point. This is consistent with the design of the experiment, as a change in expression would perhaps not be expected to be observed immediately at the point at which the switch between light and dark takes place, but rather later at a subsequent time point, as is observed here. As the 24-h time point was taken under the same conditions as the initial time point, one would expect these two time points to be grouped together using our method. The networks inferred for the two different phases, shown in, again demonstrate a clear change in the network structure, with the two networks having distinct topologies. Several of the genes, e.g. COL2 and CCA1, appear to interact both during the light and dark phases, and both are known to be involved in circadian regulation (). A gene showing a clear differentiation in its interactions between the dark and light phases is LHY1, with no interaction inferred during the dark phase, followed by a proliferation of interactions in the light phase. It is known that LHY1 is expressed at peak levels at dawn () and involved in flowering, and mutants cause late flowering (). AFR appears to be regulated by LHY1 during the light phase, and AFR is known to be involved in far-red light signalling (The Arabidopsis Information Resource (TAIR), www.arabidopsis.org).
3305
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Inference of temporally varying Bayesian Networks at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
DISCUSSION From our simulated data, it appears that the HDP-HMM Bayesian Network sampler we have constructed accurately infers the hidden state sequences governing Bayesian Networks that capture how the regulatory organization of a biological system, here observed at the level of mRNA data, changes with time. By delivering time-resolved predictions of regulatory interactions, our method generates biological hypotheses that can be tested more robustly through the use of e.g. conditional knock-downs and RNAi. Further to this, network structures that are adopted for a small number of samples can identify segments of the time series, focussing on which would improve the modelling of the system, thus suggesting experiments that will deliver increased understanding of the biological system being examined. The accuracy of our method on test data lends hope that it will perform well on real world datasets, and the existence of more sophisticated and demonstrably more efficient samplers indicates that there is room for even further improvement and computational efficiency. For example, the beam sampler of Van Gael et al. (2008) and the Hierarchical Chinese Restaurant Process formalism of Makino et al. (2011) show improved mixing and perform better than standard Gibbs samplers, especially on time series, such as those we examine here where neighbouring states are likely to be correlated. We would like to emphasize that it is essential to consider the fluid nature of regulatory network structures when inferring networks from datasets where such change is likely. Performing an analysis on data using a model with a fixed network structure, when it is known or believed that the network structure will change (this possibility should really never be discarded), is inherently incorrect, and thus will introduce unnecessary bias into the results. Although it may be possible to infer correct results from an incorrect model, it would not seem wise to rely on such approaches when alternatives exist. Our methodology crucially accounts for the sequential nature of the data, something that has previously been ignored (Ickstadt, 2011; Grzegorczyk et al., 2008), but we feel is crucial to the modelling of gene expression time series datasets. Furthermore, our methodology has an advantage over changepoint models that data may be shared between distinct segments Fig. 3. (Left) Inferred network structure corresponding to the first hidden state. (Middle) Inferred network structure corresponding to the second hidden state. (Right) Posterior distribution of states at each time point inferred by our method applied to the A. thaliana diurnal cycle expression data (Smith et al., 2004). States are represented by colours, and frequencies of their appearance for each time point in the posterior samples are plotted. The first state is coloured blue, the second red 3303 Inference of temporally varying Bayesian Networks at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
T.Thorne and M.P.H.Stumpf at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
