Motivation: Many human genes express multiple transcript isoforms through alternative splicing, which greatly increases diversity of protein function. Although RNA sequencing (RNA-Seq) technologies have been widely used in measuring amounts of transcribed mRNA, accurate estimation of transcript isoform abundances from RNA-Seq data is challenging because reads often map to more than one transcript isoforms or paralogs whose sequences are similar to each other. Results: We propose a statistical method to estimate transcript iso-form abundances from RNA-Seq data. Our method can handle gapped alignments of reads against reference sequences so that it allows insertion or deletion errors within reads. The proposed method optimizes the number of transcript isoforms by variational Bayesian inference through an iterative procedure, and its convergence is guaranteed under a stopping criterion. On simulated datasets, our method outperformed the comparable quantification methods in inferring transcript isoform abundances, and at the same time its rate of convergence was faster than that of the expectation maximization algorithm. We also applied our method to RNA-Seq data of human cell line samples , and showed that our prediction result was more consistent among technical replicates than those of other methods. Availability: An implementation of our method is available at http://
INTRODUCTIONAlternative splicing is a biological process in which an exon can be either included or excluded, or there can be several splice sites so that it allows a gene to have multiple forms of proteins. A recent study suggested that 490% of human genes undergo alternative splicing, and that many alternative splicing events vary among tissues (). It has also been reported that some aberrant splicing results in human diseases, such as cystic fibrosis and spinal muscular atrophy (). Hence, it is important to identify transcript isoforms that are expressed in particular tissues under some conditions, and not in others. To quantify transcription levels, RNA-Seq that uses highthroughput sequencing of cDNA has been widely used. Advantages of RNA-Seq over other conventional methods, such as DNA microarrays, include precise measurements of levels of transcripts and splice patterns because the sequencebased approach directly determines mRNA sequences (). Probabilistic approaches have been proposed to compute the relative frequencies of alternative splice isoforms for each gene, but these methods do not handle reads that map to multiple gene loci, and hence do not estimate global transcript abundances for each isoform (). In most cases, reads are often shorter than a full transcript, and sequences of alternatively spliced transcript isoforms and paralogs are often similar to each other (). Hence, short reads generated by RNA-Seq do not always map uniquely to reference cDNAs, which lead to inaccurate estimation of transcript isoform abundances. Several approaches have been proposed to resolve ambiguous reads that map to multiple transcript isoforms (multi-map reads). One ad hoc approach is to allocate fractions of multimapped reads to target transcript isoforms equally, which is implemented as the default option in Cufflinks (). Another approach is to allocate fractions of the reads in proportion to the coverage of uniquely mapped reads divided by the length of the transcript isoforms ('rescue' method) (), which is implemented as the '-u' option in the latest version of Cufflinks. Statistical methods that use a generative model of RNA-Seq data have been proposed, in which the transcript isoform abundance is estimated as a latent random variable by the expectation maximization (EM) algorithm (). Althoughshowed that the statistical methods performed better than the rescue method (), their methods cannot handle the gapped alignment of reads, i.e. an alignment with insertions into reference sequences or deletions from reference sequences. When reads generated from high-throughput sequencers become longer with some insertion or deletion errors, it will be more difficult to map the reads to reference sequences without allowing gapped alignment. Hence, the limitation of methods that are unable to handle gapped alignments of reads is a huge drawback when more sophisticated mapping tools such as Bowtie2 *To whom correspondence should be addressed.() or Novoalign (www.novocraft.com) are considered. Also, the EM algorithm used in these statistical methods tends to overfit the model parameters to the RNA-Seq data, i.e. the methods try to estimate as many transcript isoforms as possible, as long as the likelihood function increases. It is problematic, for example, when there are many transcript isoforms whose sequences are similar to the one that is actually expressed, and the read sequences contain base substitution, insertion and deletion errors. As a result of the maximum likelihood estimation, the method might predict false positives ('spurious' transcript isoforms), and hence, the transcript abundances estimated for true isoforms are affected. One strategy to avoid such overfitting is to consider a model selection framework based on the marginal likelihood (), where a tradeoff of matching of sequence reads and the number of isoforms can be considered. However, this involves integrating over all latent variables as well as model parameters, which is usually difficult and intractable to compute. In this article, we propose a statistical method named TIGAR, a transcript isoform abundance estimation method with gapped alignment of RNA-Seq data by variational Bayesian (VB) inference. The proposed method can handle gapped alignment of reads to reference sequences, allowing mismatches, insertions and deletions. Our VB inference approach resolves the issue of overfitting by optimizing the number of transcript isoforms under the model selection framework (). The VB inference approximates full posterior distributions by assuming the factorization of latent variables and model parameters (). An approximation of the posterior distribution is obtained via an iterative EM-like algorithm with a closed-form solution in each iteration, and its convergence is guaranteed (). We show from simulation experiments that the proposed method successfully predicts transcript isoform abundances more accurately than other comparable methods, and at the same time, its rate of convergence is faster than that of the EM algorithm. We also apply our method to RNA-Seq data of human cell line samples, and show that the prediction result obtained by the proposed method is more consistent than those obtained by other methods.
METHODS
Generative model of RNA-seq dataWe use the directed graphical model (Bayesian network) for a generative model of RNA-seq data (), which is an extended version of the models proposed in the past literature () so that gapped alignment of reads can be handled. For simplicity, we describe the model that handles single-end reads in the following sections. For details of handling paired-end reads in the model, see the Supplementary Material. The model generates N independent and identically distributed reads of length L, and each read n is represented by the random variable R n. Each read is associated with four latent variables T n , S n , O n and A n , which represent the transcript isoform choice, transcript start position, read orientation and alignment state, respectively. Each read is also associated with a random variable Q n , which represents the set of quality scores at all positions of the read. The abundance of each transcript isoform (a fraction of the total mRNA) is represented by the parameter vector h  0 ,. .. , T   0 , where P T t0 t  1 and T is the number of transcript isoforms (e.g. a total number of cDNA sequences in the RefSeq database). Here, h 0 represents the noise isoform abundance, from which reads that do not map to any other known isoforms are generated. The random variable T n  t indicates that read n is generated from the transcript isoform t. The random variable S n  s indicates that read n is generated from the start position s of the transcript isoform. The random variable O n  0 indicates that read n is generated from the sense strand (read n maps to the sense strand of the reference sequence), whereas O n  1 indicates read n is generated from the anti-sense strand (the reverse complement of read n maps to the sense strand of the reference sequence). The random variable A n represents the alignment state (either alignment match, insertion or deletion at each alignment position) between read n and reference t, encoded in the CIGAR string format (http://samtools.sourceforge.net) by mapping tools. For example, if A n  '10M3D15M', then the first 10 positions of read n are matches or mismatches with the reference sequence, the next three are nucleotide deletions from the reference sequence and the last 15 are matches or mismatches with the reference sequence. The random variable Q n represents the set of quality scores at all position of read n, indicated by Phred quality scores (). We impose the conditional independence assumptions as indicated in, and the conditional likelihood for this model is decomposed as the product of conditional probabilities:PT n jh represents the probability that read n is generated from transcript isoform T n  t given the parameter vector. We compute the transcript isoform choice given the parameter vector as PT n  tjh  t. P S n jT n  represents the probability of the start position of read n given the transcript isoform choice. We assume a uniform distribution of start positions () and calculate P S n  sjT n  t    1=l t if mRNAs have poly(A) tails, and P S n  sjT n  t    1=l t  L  1 if mRNAs do not have poly(A) tails, where l t is the length of the transcript isoform t. P O n jT n  represents the probability of the orientation of read n given the transcript isoform choice. For a strand specific protocol, it can be set as P O n  0jT n  t    1 and P O n  1jT n  t    0. Otherwise, it can be set as P O n  0jT n  t    P O n  1jT n  t    0:5 or can be estimated empirically from the RNA-Seq data. P A n jT n , S n , O n  represents the probability of the alignment state of read n given the transcript isoform choice, start position and orientation of read n. Based on the CIGAR string format, we construct the alignment state sequence ax at each alignment position x as either 'M' (match or mismatch), 'I' (insertion) or 'D' (deletion). Then the conditional probability is calculated as follows:. The generative model for RNA-Seq data used by TIGAR. The transcript isoform abundance, transcript isoform choice, read start position, orientation, alignment state, quality score and sequence of read n are represented by h, T n , S n , O n , A n , Q n and R n , respectively where start is the probability of starting with a 1   (from which the alignment state of read n starts), trans is the probability of transition from the previous alignment state to the current state and X is the total number of alignment positions. trans a X  , aX  1    transa X  , ''END '' is the probability of ending with a X  . PR n jT n , S n , O n , A n , Q n  represents the probability of the sequence of read n, given the transcript isoform choice, start position, orientation, alignment state and quality score of the read. Based on the alignment state ax defined earlier in the text, the read sequence character rx, either 'A', 'T', 'G', 'C' or '-' (deletion from the reference sequence), and the corresponding quality score qx, either one of the Phred quality score, or ''-'' (deletion from the reference sequence) are constructed. In a similar fashion, the reference sequence character cx, either 'A', 'T', 'G' ,'C' or '-' (insertion into the reference sequence) is constructed according to the alignment states of the read and the reference sequence. To summarize the latent variables T n , S n ,O n and A n , we introduce an indicator random variable Z ntsoa , where Z ntsoa is equal to 1 if T n , S n , O n , A n     t, s, o, a of read n and 0 otherwise. We calculate PR n jT n , S n , O n , A n , Q n  when Z ntsoa  1 as:where emit is the emission probability calculated according to the current alignment state ax as follows:where subst is a substitution matrix constructed for each Phred quality score, insert is a position independent insertion probability constructed for each nucleotide character and delete is a position independent deletion probability constructed for each nucleotide character. For example, subst ('A', 'I', 'C') is the probability that we observe the nucleotide character 'A' at the aligned position of the read, given that the nucleotide character of the reference sequence is 'C' and the Phred quality score of the corresponding position of the read is 'I'. PQ n  represents the prior probability of the quality score and we calculate this as a constant value. If T n  0, then the random variables S n , O n and A n are assumed to be conditionally independent of T n. Hence, we set the conditional probability of reads generated from a noise isoform as follows:where read x is a nucleotide character at position x of read n, and is a position independent background distribution (). All of the aforementioned functions, such as transition and emission probabilities, can be either calculated in advance or estimated as parameters from the RNA-Seq data. TIGAR estimates these parameters along with h during the first 10 iterations of the variational Bayesian inference algorithm described later in the text.
Variational Bayesian inference methodOur goal is to estimate the model parameter vector h   0 ,. .. , T  0 , which represents the transcript isoform abundances (the fraction of each isoform abundance among the total mRNA). The maximum likelihood estimate of the parameter can be calculated by the EM algorithm (see the Supplementary Material for details). On the other hand, we propose a VB inference approach for approximation of full Bayesian inference by factorization assumptions of latent variables and model parameters (), in which model parameters and latent variables are treated as random variables. In Bayesian inference, prior distribution is given to the model parameters, and integration of the parameters is considered. As the prior distribution of the parameter Ph, we use the Dirichlet distribution:where t 40 is a hyperparameter, C is a constant and P T t0 t  1. If t ! 1, then t  1 can be interpreted as the effective count of prior reads that are assigned to transcript isoform t. If t 51, the prior favors that some of the transcript isoform abundances to be 0 (). In this article, we assume that there is no prior knowledge about the transcript isoform abundances, and we set a single hyperparameter 0 for all transcript isoforms. From the iterative procedure between the variational Bayesian E (VBE) and M (VBM) steps described later in text, the posterior distribution over the model parameter h and the latent variable Z is optimized.
Variational Bayesian inference algorithmGiven a hyperparameter 0 for the prior distribution of h and RNA-Seq data R, a lower bound on the model log marginal likelihood is optimized iteratively with the following procedures:For each transcript isoform t, initialize t  0 .
Step 2. VBE stepUsing the current estimate of
Step 3. VBM stepUsing the current estimate of
Step 4. Check for a stopping criterionIf any of the E h t   has been changed more than a pre-specified threshold, return to Step 2. Each cycle of the VB inference algorithm increases the lower bound on the log marginal likelihood of the model, and convergence under a stopping criterion of the aforementioned procedure is guaranteed (). For a stopping criterion, a relative change of 10 3 for an isoform whose abundance parameter t 410 7 is used as the threshold for each E h t   (). In Step 2, E Z Z ntsoa  is calculated by using the current estimate of the posterior distribution over hwhere n is defined as the set of all t, s, o, a tuples for possible alignments of read n, andwhere is the digamma function. In Step 3, E h t   is calculated by using the current estimate of the posterior distribution over Z as follows:For details of derivations of the equations and how to calculate the lower bound of the log marginal likelihood, see the Supplementary Material.
RESULTS
Simulation experimentsTo assess the performance of the proposed method in quantifying transcript isoforms, we prepared synthetic single-end RNASeq data from human reference cDNA sequences in the RefSeq database (). Because it has been shown that expression levels roughly follow log-normal distributions (), 10 000 transcript isoforms were randomly chosen such that their transcript abundance parameters follow a log-normal distribution. It turned out that these isoforms were generated from 7771 gene locus in total, of which 1586 genes have more than one transcript isoform. For this experiment, 3.0 million, 2.1 million, 1.4 million, 1.05 million and 0.42 million mRNA reads of 35, 50, 75, 100 and 250 bp, respectively, were synthetically generated independently from the cDNA sequences in the RefSeq database. Start positions of reads were chosen randomly across each transcript. The total number of nucleotides (the total throughput of base pairs) was the same for each experiment. These reads were generated with 1% substitution, 1% insertion and 1% deletion errors randomly at each nucleotide position of the read sequences. We used the Bowtie2 software () to align the reads to the reference sequences with the 'very-sensitive' option specified. Then we estimated transcript isoform abundances with TIGAR by variational Bayesian inference and the EM algorithm, called TIGAR (VB) and TIGAR (EM), respectively. To compare quantification results with TIGAR, we used RSEM v1.1.20 () that implements the EM algorithm after mapping with Bowtie. We also used Cufflinks (with the '-u' and TopHat2 '-G' and 'no-novel-juncs' options with using Bowtie2, so that it handles multimap reads and does not predict novel transcripts. To choose an appropriate hyperparameter 0 for TIGAR (VB), we calculated the lower bound of the log marginal likelihood of the model given 0 (see the Supplementary Material for the calculation in detail). The lower bound of the log marginal likelihood of the model was maximized when 0  0.1 for the 3.0 million reads of 35 bp (). Similarly, 0  0.1 was also selected for all the read sets of 50, 75, 100 and 250 bp because it maximized the lower bound of the log marginal likelihood for all cases.shows the number of transcript isoforms predicted with TIGAR (VB) for varying 0 , and TIGAR (EM). Please see the Supplementaryfor the zoomed-in region of the first 1000 iterations. We can see from the results that TIGAR (VB) converged faster than TIGAR (EM), although the total predicted number of isoforms resulted in different levels according to the 0 .shows the number of iterations until convergence at the different read lengths with TIGAR (VB), TIGAR (EM) and RSEM. It turned out that TIGAR (VB) required the least number of iterations until convergence, regardless of the read length. The only difference between VB inference and the EM algorithm in terms of computation cost at each iteration step is the evaluation of E h log t   in Step 2 of the inference algorithm. The computation cost of this calculation is OT, where T is the total number of isoforms. The total computation cost in Step 2 is OM  T , where M is the total number of mappings. Because the number of reads is usually much larger than the total number of transcripts, OM  T  % OM, and hence, the same as the EM algorithm.shows the total CPU time with TIGAR (VB) and that of TIGAR (EM) for varying read lengths. We can see that the fewer iterations until convergence resulted in less computation time. The transcript abundance was measured as fragments per kilobase of exon per million mapped fragments (FPKM) (). We kept transcript isoform predictions whoseFPKMs40.01. The root mean square error (RMSE) of log(FPKM1) between predicted and true abundances is calculated for comparison. The Supplementaryshows the RMSE obtained by TIGAR (VB) at each 0 and by TIGAR (EM). It can be seen from the results that TIGAR (VB) performed better than TIGAR (EM), when 0 was51. We hypothesized from the results that the beneficial effect of 0 on the convergence speed came from optimizing the number of transcript isoforms given appropriate prior distributions by VB inference, which in this case also lead to better prediction performance in terms of the RMSE by eliminating spurious predictions in the early iterations.shows a summary of prediction performances, which is a comparison between true and predicted abundances based on RMSE with varying read lengths. Overall, both TIGAR (VB) and TIGAR (EM) performed well compared with RSEM and Cufflinks. When the length of reads became longer, prediction performances by RSEM and Cufflinks became worse. This is likely because TIGAR (VB) or TIGAR (EM) was able to handle gapped alignments, which resulted in using more reads with insertion or deletion errors. At the same time, TIGAR benefited from longer reads, which were expected to map to the reference sequence more uniquely. When reads were generated with 0.1% substitution errors and without insertion or deletion error, the performances between TIGAR and RSEM were similar (see the Supplementary). The relatively poor performance of Cufflinks might come from the fact that it uses the rescue strategy (), which roughly corresponds to one iteration of the EM algorithm. In addition, Cufflinks uses a mapping software called TopHat2 () to map reads against the reference genome, instead of against cDNA sequences, by chopping reads at prefixed intervals (such as 25 bp), which might lead to false-positive mappings of reads to exons and their junctions. This result suggested that the optimization and elimination of spurious isoforms were successfully performed by VB inference.shows scatter plots of the true and predicted FPKM of each transcript isoform for 35 bp reads (see the Supplementary Figs S4S7 for 50, 75, 100 and 250 bp, respectively). Because TIGAR (EM), RSEM andCufflinks try to predict as many transcript isoforms as possible, they tend to predict more false positives whose sequences were similar to the one that was actually expressed. From the correlation coefficient between the true and predicted FPKM in, TIGAR (VB) successfully obtained accurate estimates of FPKM, whereas others underestimated transcription levels of many isoforms. Similarly, we observed better performances with TIGAR (VB) over other methods when 3.0 million, 2.1 million, 1.4 million, 1.05 million and 0.42 million paired-end reads of 35, 50, 75, 100 and 250 bp, respectively, were synthetically generated with fragment size distributions with a mean m  600 and a standard deviation of  40 (see the Supplementary Figs S8S11).
Real data analysisTo evaluate the proposed method with real data, we analyzed two datasets obtained from different sequencing technologies. First, we analyzed single-end RNA-Seq data of human cell line samples (HeLa) that is publicly available from the Ion Community Web site (http://ioncommunity.lifetechnologies. com). In the study, the sequencing was performed with the Ion Total RNA-Seq Kit v2 and the Ion PGM sequencer. For this analysis, 4.5 million reads were obtained. To evaluate the prediction performance of each method using the real data, we prepared technical replicates named Samples 1 and 2, each with 3.0 million reads of 35 bp, and 1.05 million reads of 100 bp, which were randomly obtained from the original data without replacement. We used the Bowtie2 software () to align the reads to the cDNA sequences with the 'very-sensitive' option specified.shows scatter plots of FPKM for each transcript isoform predicted by TIGAR (VB and EM), RSEM and Cufflinks. The hyperparameter 0 was set to 0.1 as a maximizer of the lower bound of the log marginal likelihood for these data. It can be seen from the result that TIGAR (VB) predicted abundances of transcript isoforms more consistently than the other methods. For example, Cufflinks predicted many transcript isoforms whose FPKM values are relatively small (i.e. 51), as shown in. Although it will be difficult to validate such tiny abundances of the transcript isoforms, we conclude that TIGAR (VB) was most consistent in estimating transcript isoform abundances between the two technical replicates constructed from the same sample. Second, we analyzed paired-end RNA-Seq data of K562 human cell line samples, which were generated by the ENCODE Project Consortium and publicly available from the Web site (http://hgdownload.cse.ucsc.edu/goldenPath/hg19/ encodeDCC/wgEncodeCaltechRnaSeq/). For this analysis, we analyzed two technical replicates, each with 12.8 and 13.0 million paired-end reads of 75 bp, obtained using the Illumina Genome Analyzer IIx. The software parameters were set the same as the previous experiment. The hyperparameter 0 was set to 0.1 as a maximizer of the lower bound of the log marginal likelihood for these data. The Supplementaryshows scatter plots and the Pearson correlation coefficient of FPKM predicted with TIGAR (VB), TIGAR (EM), RSEM and Cufflinks. The Pearson correlation coefficient of FPKM between the two technical replicates with TIGAR (VB) was 0.975, whereas those with TIGAR (EM), RSEM and Cufflinks were 0.970, 0.969 and 0.954, respectively. In addition to the better prediction performance with TIGAR (VB), its rate of convergence was faster than those with TIGAR (EM) and RSEM. The number of iteration steps until convergence with TIGAR (VB) was 1735, whereas those with TIGAR (EM) and RSEM were 4249 and 4701,respectively. In terms of the CPU time until convergence, TIGAR (VB) was faster by 31.6% compared with the TIGAR (EM).
DISCUSSIONIn this article, to estimate transcript isoform abundances from RNA-Seq data, we proposed a statistical method, named TIGAR, which can handle gapped alignments of reads against reference sequences. To avoid overfitting, we also proposed VB inference that iteratively optimizes the number of transcript isoforms. We showed through simulation experiments that in quantifying transcript isoform abundances from RNA-Seq data, TIGAR (VB) performed better than the popularly used Cufflinks and RSEM, especially when the length of reads became longer with some insertion and deletion errors. We also showed that the convergence speed of TIGAR (VB) was faster than those of TIGAR (EM) and RSEM, which is likely explained by the optimization of the number of transcript isoforms in the early iterations. We also applied our method to real data from human cell line samples and showed that the prediction result by our method was more consistent than those by other methods in estimating transcript abundances of technical replicates. Notably, TIGAR (VB) made fewer predictions of transcript isoforms whose FPKM were small (e.g.51), in comparison with predictions by Cufflinks and RSEM, many of which we believe might be false positives. It is also important to consider experimental noise introduced during library preparation under different conditions. To handle such variations among multiple replicates or experimental conditions, methods such as Cuffdiff () or EBSeq () can be considered in a downstream analysis. The performance of TIGAR will become more significant when it is applied to RNA-Seq data produced with new types of sequencers, such as the Ion PGM and Pacific Biosciences' RS, whose reads are longer but with relatively many insertion and deletion errors (). Our TIGAR (VB) optimizes the number of transcript isoforms by maximizing the lower bound of log likelihood for RNA-Seq data. On the contrary, other model selection methods such as the Bayesian information criterion (BIC) () or a sampling-based approach can be considered. However, it has been reported that the variational lower bounds outperform the BIC in finding the correct model structure, while approaching the performance of the much more costly sampling procedure (). Hence, we believe that the proposed method offers the advantage of Bayesian inference to avoid overfitting but keeps the computational speed comparable with that of the EM algorithm. A useful application of TIGAR (VB) might be the quantification of novel alternative spliced isoforms or fusion transcripts from RNA-Seq data by augmenting reference sequences to include novel splice junctions (). Another useful application might be fusion transcripts predicted from discordantly mapped mate pairs (). In such cases, Because the number of possible splice junctions or combinations of exons increases dramatically, the proposed method will be helpful to select a set of plausible transcript isoforms so that predictions can be further validated. Alternatively, if we know in advance from other experiments that certain transcript isoforms expressed more than others, then the proposed method might be able to incorporate the prior information by setting the hyperparameter 0 as an effective read count. Hence, hyperparameters can be fixed according to prior knowledge or 0 can be chosen as a maximizer of the lower bound of the log marginal likelihood, as described in the article. The current model cannot distinguish between sequencing errors and the alignment mismatches because of single nucleotide polymorphisms (SNPs) or structural variations inherent in samples. It will be useful to incorporate structural variation information in the dbSNP (http://www.ncbi.nlm.nih.gov/projects/SNP/). Our future work will include investigations of topics mentioned earlier in text.
The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com
N.Nariai et al.
