Motivation: Enhancers are of short regulatory DNA elements. They can be bound with proteins (activators) to activate transcription of a gene, and hence play a critical role in promoting gene transcription in eukaryotes. With the avalanche of DNA sequences generated in the post-genomic age, it is a challenging task to develop computational methods for timely identifying enhancers from extremely complicated DNA sequences. Although some efforts have been made in this regard, they were limited at only identifying whether a query DNA element being of an enhancer or not. According to the distinct levels of biological activities and regulatory effects on target genes, however , enhancers should be further classified into strong and weak ones in strength. Results: In view of this, a two-layer predictor called 'iEnhancer-2L' was proposed by formulating DNA elements with the 'pseudo k-tuple nucleotide composition', into which the six DNA local parameters were incorporated. To the best of our knowledge, it is the first computational predictor ever established for identifying not only enhancers, but also their strength. Rigorous cross-validation tests have indicated that iEnhancer-2L holds very high potential to become a useful tool for genome analysis. Availability and implementation: For the convenience of most experimental scientists, a web server for the two-layer predictor was established at http://bioinformatics.hitsz.edu.cn/iEnhancer-2L/, by which users can easily get their desired results without the need to go through the mathematical details.
IntroductionEnhancers are distinct genomic regions that can upregulate transcription of target genes through interaction with transcription factors (TFs) (). In contrast to gene proximal elements, such as promoters, enhancers are distal elements that can be 20 kb or further away from a gene, or even located on a different chromosome. This feature makes the prediction of enhancer a challenging task.Experimental methods, such as chromatin immunoprecipitation followed by deep sequencing (), can successfully detect many regulatory enhancers by targeting enhancer binding TF, such as P300 (). But TF only binds to enhancers in a cell-specific manner. Not all of the functional enhancers are occupied by a certain TF. Besides, active enhancers are nucleosome-depleted open regions, which display deoxyribonuclease or DNase I hypersensitivity (). But, many other DNA elements, such as promoters, are also accessible by DNase I. The histones in the flanking nucleosomes of enhancer often carry characteristic post-translational modifications. Accordingly, genome-wide mapping of histone modifications () allows accurate determination and classification of enhancers and promoters. For instance, the open chromatin regions flanked by histone modifications, such as H3K4me3 and H3K27ac, have been classified as strong enhancers, while the regions flanked by H3K4me1 classified as weak enhancers (). These kinds of techniques have now been widely used and the results thus obtained are quite consistent with the enhancer activity assays. Unfortunately, the experimental methods by the aforementioned authors are expensive and time consuming. Therefore, several computational methods were developed in an attempt to timely predict enhancers in genomes. These methods differ in operation algorithms and input features. For instance,developed a predictor called CSI-ANN by using an Artificial Neural Network (ANN) approach combined with efficient data transformation and feature extraction. Fernandez and Miranda-Saavedra (2012) proposed a support vector machine (SVM) classifier called ChromeGenSVM by employing a genetic algorithm to optimize specific histone epigenetic marks in feature selection process. Using the random forest algorithm,proposed a predictor called RFECS to identify enhancers. By combining a multiple kernel learning method and evolutionary conservation,developed a different enhancer predictor called EnhancerFinder. Considering the inherent limitation of the conventional k-mers approach due to the high-dimension and overfitting problems,utilized the gapped k-mers to develop a classifier named GKMSVM for identifying enhancers. Very recently, using an ensemble prediction framework,developed a novel predictor called DEEP and they claimed that it performed better than the four state-of-theart methods in identifying enhancers. Although the aforementioned computational methods can yield quite encouraging results and each of them has its own advantage, further work is needed due to the following reasons. Most of those studies were focused on discriminating enhancers from other regulatory elements. But it was shown that enhancers are a large group of functional elements with many different subgroups, such as, strong enhancers, weak enhancers and poised or inactive enhancers (), implying that enhancers of distinct subgroups will have different biological activities and regulatory effects on target genes. Therefore, in order to really understand the mechanism underlying the gene regulation through enhancers, it is indispensable to classify them according to their attributes to these subgroups. This study was initiated in an attempt to address this problem. According to the Chou's 5-step rule () and performed in a series of recent publications (), to establish a really useful sequence-based statistical predictor for a biological system, we should consider the following five procedures: (1) construct or select a valid benchmark dataset to train and test the predictor; (2) formulate the biological sequence samples with an effective mathematical expression that can truly reflect their intrinsic correlation with the target to be predicted; (3) introduce or develop a powerful algorithm (or engine) to operate the prediction; (4) properly perform cross-validation tests to objectively evaluate the anticipated accuracy of the predictor and (5) establish a user-friendly web-server for the predictor that is accessible to the public. Below, we are to describe how to deal with these steps one-by-one.
Materials and methods
Benchmark datasetThe benchmark dataset was constructed based on the chromatin state information of nine cell lines, including H1ES, K562, GM12878, HepG2, HUVEC, HSMM, NHLF, NHEK and HMEC. The chromatin state information was annotated by ChromHMM () with the whole genome profile of multiple histone marks, such as H3K4me1, H3K4me3, H3K27ac, etc. As pointed out by a comprehensive review (), there is no need to separate a benchmark dataset into a training dataset and a testing dataset for validating a prediction method if it is examined by the jackknife test or subsampling (K-fold) cross validation because the outcome thus obtained is actually from a combination of many different independent dataset tests. Thus, the benchmark dataset set S for this study can be formulated aswhere S  is the set that contains non-enhancers only, [ is the symbol for union in the set theory, S  is the set containing enhancers only, S  strong is the subset containing the strong enhancers only and S  weak is the subset containing the weak enhancers only. The strongiEnhancer-2L: a two-layer predictorenhancers in S  strong and the non-enhancers in S  are clearly annotated in all the nine tissues mentioned above, but the weak enhancers in S  weak vary significantly with different tissues. To cope with this kind of situation, the weak enhancers were constructed based on the human embryonic stem cell. All the samples obtained via the above procedure were divided into 200 bp fragments in order to be consistent with the length of nucleosome and linker DNA. All those samples with length <200 bp were removed. Thus, we obtained 742 strong enhancers, 370 517 weak enhancers, and 5 257 994 non-enhancers. To get rid of redundancy and avoid bias, the CD-HIT software () was used by setting the cutoff threshold at 80% to remove those DNA fragments with high sequence similarity (note that the most stringent cutoff threshold for DNA sequences allowed by CD-HIT was 75%). The numbers of weak enhancers and non-enhancers are much larger than that of strong enhancers. To get a benchmark dataset with balanced subsets in size, we randomly picked 742 samples from the weak enhancers and 1484 samples from the non-enhancers. The final benchmark dataset S thus obtained contains 2968 samples, of which 742 are strong enhancers belonging to S strong , 742 weak enhancers belonging to S  weak , and 1484 non-enhancers belonging to S  (cf. Equation 1). The sequences of the 2968 samples classified into three subsets are given in Supplementary Information S1.
Pseudo k-tuple nucleotide composition (PseKNC)Suppose a DNA sample D with L nucleotides; i.e.where N 1 represents the first nucleotide at the sample sequence position 1, N 2 the second nucleotide at the position 2, and so forth. They can be any of the four nucleotides; i.e.N i 2 f A adenine C cytosine G guanine T thymineg (3)If the DNA sequence sample is represented by the k-tuple nucleotide (or k-mers) composition (), the corresponding feature vector will contain 4 k components, as given bywhere the symbol T is the transpose operator, f i represents the normalized occurrence frequency of the ith k-mer. As we can see from Equation (4), with the incensement of k values, although longerrange information can be incorporated, the vector's dimension will increase rapidly. As we can see from Equation (4), when k > 4, the number of the vector components will rapidly increase, causing the so-called 'high-dimension disaster' () or overfitting problem that will significantly reduce the deviation tolerance or cluster-tolerant capacity () so as to lower down the prediction success rate or stability. Therefore, the k-mers approach is useful only when the value of k is very small. In other words, it can only be used to incorporate the local or short-range sequence-order information, but certainly not the global or long-range sequenceorder information. To approximately cover the long-range sequence-order effects, one popular and well-known method is to use the pseudo components that were originally introduced in dealing with protein/peptide sequences () and recently extended to deal with DNA/RNA sequences (, b, c, 2015a, b; Liu et al., 2015a, b, c). According to the concept of pseudo components, the DNA sample of Equation (2) can be formulated by the vector called pseudo k-tuple nucleotide composition of PseKNC (); i.e.whereIn Equation (6), the definition of f u u  1; 2;. .. ; 4 k  is the same as the components in Equation (4), meaning the normalized occurrence frequency of the uth non-overlapping k-mer in the DNA sequence, andwhere h 1 is called the first-tier correlation factor that reflects the sequence-order correlation between all the most contiguous dinucleotide along a DNA sequence (), h 2 ; the second-tier correlation factor between all the second most contiguous dinucleotide (); h 3 ; the third-tier correlation factor between all the third most contiguous dinucleotide (); and so forth. C i;ij denotes the coupling factor of the ith dinucleotide with the i  jth one along a DNA sequence, and its detailed definition is given bywhere l is the number of DNA physicochemical properties considered that is equal to 6 in this study and will be further explained bellow. Now, it is clear that the first 4 k components in Equation (5) are used to incorporate the short-range or local sequence-order information of the DNA sequence, while the remaining components used for its long-range or global sequence order information. Obviously, k can also be viewed as the number of the total pseudo components used to reflect the long-range or global sequence effect (Liu et al.,2015d, e), and w of Equation (6) is the weight factor (). The concrete values for k and w will be further discussed later.
DNA local structural property parametersMany reports indicate that DNA physicochemical properties play important roles in gene expression regulation (), and that they are also useful for conducting genome analysis (). Actually, being evolutionarily more constrained than the underlying actual sequence, they are also closely correlated with the functional non-coding elements such as enhancers (). Accordingly, it is reasonable to use the physicochemical properties of nucleotides to define the coupling factors of Equation (8). According to, the spatial arrangements of two neighboring base pairs are usually characterized by six parameters, of which three are local translational parameters (shift, slide and rise) and other three are the local angular parameters (twist, tilt and roll). The detailed values for the six DNA local parameters are given in1 of Supplementary Information S2, which were used to calculate the coupling factors of Equation (8) to reflect global or long-range sequence pattern information for the DNA sequences concerned. Note that before substituting these parameters into Equation (8), all the original values P g D i  i  1; 2; 3;. .. ; 6 were subjected to a standard conversion, as described bywhere the symbol h i means taking the average of the quantity therein over the 4 2  16 different dinucleotides, and SD means the corresponding standard deviation. For the detailed mathematical formulation of SD, see Equation (4) of Chou (2001) or Equation (4) of Chou (2005). The advantage to do so is that the converted values obtained by Equation(9) will have a zero mean value over the 16 different dinucleotides, and will remain unchanged if going through the same conversion procedure again (). Listed in2 of Supplementary Information S2 are the corresponding values obtained via the standard conversion of Equation(9) from the data in1 of Supplementary Information S2. Thus, any DNA sequence can be uniquely defined by a feature vector of Equation (5), where the short-range or local sequence pattern can be reflected by the 4 k k-tuple nucleotides, while the longrange or global sequence correlation can be reflected by the k pseudo components as given by Equations (68.).
Support vector machineBeing widely used in the realm of bioinformatics (see, e.g.), SVM is a machine-learning algorithm based on the statistical learning theory (). An SVM training algorithm builds a non-probabilistic binary linear classifier to assign new samples into one of the two categories. In an SVM model, the samples are mapped to points in space, where the separate categories are divided by a clear wide gap. New samples are then mapped into that same space and their categories are predicted according to which side of the gap they fall on. In addition to linear classification, SVMs can efficiently perform a non-linear classification by using the so-called kernel trick, implicitly mapping the inputs into high-dimensional feature spaces.In this study, we used the functions provided in LIBSVM (), a library for SVM classification and regression. The RBF kernel function contains two parameters C and c , which will be optimized for the benchmark dataset via the grid search tool provided in LIBSVM (), as will be further discussed later. For a brief formulation of SVM and how it works, see, Chou and Cai (2002); for more details about SVM, see a monograph ().
Two-layer classification frameworkTo make the prediction method not only able to identify whether a DNA sample is an enhancer but also make it able to identify the strength type, here we are to develop a two-layer predictor similar to the treatment in identifying membrane proteins and their types (Chou and Shen, 2007a,b). The first-layer predictor was trained and tested by the benchmark dataset in the first equation of Equation (1); while the secondlayer predictor was trained and tested by its second equation. Both the two predictors were operated with the SVM algorithm as described in the last section. But their parameters k, k and w were optimized separately, as will be further discussed later. The two-layer predictor thus obtained is called Enhancer-2L. To provide an intuitive view, a flowchart to show the process of how the 2-layer classifier works is given in.
Performance metrics and cross validationTo more completely and objectively evaluate the quality of a predictor, one needs to consider two things. One is the metrics used to quantitatively measure its performance, and the other is the test method adopted during the cross validation. The predictions performed by both the layers in Enhancer-2L are actually in dealing with a binary (two-lass) classification problem. Its first layer is to address whether a query DNA sample belonging to an enhancer or non-enhancer. If it is the former, the prediction will be automatically continued by its second layer to find out where the enhancer is of the strong type or weak one. For this kind of. A flowchart to show how iEnhancer-2L works. The input DNA sequences are first identified by its Layer-I sub-predictor as enhancers or nonenhancers. Subsequently, the predicted enhancers are further identified by Layer-II as strong or weak ones. Training datasets I and II mean S and S  of Equation (1), used to train Layer-I and Layer-II sub-predictors, respectively iEnhancer-2L: a two-layer predictorbinary classification problem, the following set of metrics were often used to measure the prediction qualitywhere TP represents the true positive; TN, the true negative; FP, the false positive; FN, the false negative; Sn, the sensitivity; Sp, the specificity; Acc, the accuracy; MCC, the Mathew's correlation coefficient (). But the metrics formulated in Equation (10) is not easy-to-understand for most experimental scientists, and hence here we would prefer to use the following formulation as done by many investigators in a series of recent publications (see, e.g.where N  is the total number of the positive samples or enhancers investigated while N   the number of enhancer samples incorrectly predicted to be of non-enhancer; N  the total number of the negative samples or non-enhancers investigated while N   the number of the non-enhancers incorrectly predicted to be of enhancer. Based on Equation (11), the following are evident. When N    0 meaning none of the enhancers was incorrectly predicted belonging to non-enhancers, we have the sensitivity Snthat all the enhancers were incorrectly predicted belonging to non-enhancers, we have the sensitivity Sn  0. Similarly, when N    0 meaning none of the non-enhancers was mispredicted, we have the specificity Sp  1; whereas N    N  meaning that all the non-enhancers were incorrectly predicted as enhancers, we have the specificity Sp  0. When N    N    0 meaning that none of enhancers in the positive dataset and none of the non-enhancers in the negative dataset were incorrectly predicted, we have the overall accuracy Acc  1 and MCC  1; when N    N  and N    N  meaning that all the enhancers in the positive dataset and all the non-enhancers in the negative dataset were incorrectly predicted, we have the overall accuracy Acc  0 and MCC  1; whereas whenwe have Acc  0:5 and MCC  0 meaning no better than random guess. As we can see from the above discussion, it would make the meanings of sensitivity, specificity, overall accuracy, and Mathew's correlation coefficient much more intuitive and easier-to-understand by using the metrics formulated in Equation (11) instead of Equation (10), particularly for the meaning of MCC.Note that, however, the set of metrics in Equation (11) is valid only for the single-label systems. For the multi-label systems whose emergence has become more frequent in system biology () and system medicine (), a completely different set of metrics is needed as elaborated in Chou (2013). With the performance metrics well defined, now let us consider the test methods. In statistical prediction, the following three crossvalidation methods are often used to calculate the metrics values for a predictor: independent dataset test, subsampling (or K-fold crossvalidation) test and jackknife test (). Of the three methods, however, the jackknife test is deemed the least arbitrary that can always yield a unique outcome for a given benchmark dataset as elucidated in Chou (2011) and demonstrated by Equations (28)(32) therein. Therefore, the jackknife test has been widely recognized and increasingly used by investigators to examine the quality of various predictors (see, e.g.). Accordingly, in this study we also use the jackknife test to evaluate the accuracy of the current predictor. During the jackknife test, each of the samples in the benchmark dataset is in turn singled out as an independent test sample and all the rule-parameters are calculated without including the sample being identified. Although the jackknife test may take more computational time, it is worthwhile because it will always yield a unique outcome for a given benchmark dataset.
Results and discussion
Parameter optimizationAs we can see from Equations (57), the present model depends on the three parameters k, w and k, where k reflects the local or shortrange sequence-order effect, w is the weight factor usually within the range from 0 to 1 and k is the number of correlation tiers considered to reflect the global sequence pattern effect (). In general, the greater the k or k is, the more local or global sequence-order information the model will contain; but if k or k is too large, it may cause the high-dimension problem, reducing the clustertolerant capacity () so as to lower down the crossvalidation accuracy due to over-fitting or 'high dimension disaster' problem (). Therefore, our searching for the optimal values of the three parameters was within the ranges defined below 1 k 10 with step D  1 0 w 1 with step D  0:1 1 k 20 with step D  1 8 > > < > > :It can be seen from the above equation that to optimize the values for the three parameters, we need to consider 10  11  20  2200 different cases for each of the two layers in iEnhancer-2L. To reduce the computational time, we used the 5-fold cross-validation to determine the optimal parameters, and the results thus obtained for the two layers of iEnhancer-2L are k  6 for both 1st and 2nd layers k  9 for both 1st and 2nd layers w  0:1 for the 1st layer w  0:4 for the 2nd layer3.
The performance in identifying enhancers and classifying their strength typesSubsequently, the parameter values in Equation (13) are used to conduct the rigorous jackknife tests on the iEnhancer-2L predictor for calculating the Sn, Sp, Acc and MCC as defined in Equation (11). The results thus obtained are given in, from which we can see that the overall accuracy (Acc) by the first layer of iEnhancer-2L is $77% with MCC being 0.54. Although these rates are only slightly better than the corresponding jackknife rates obtained by gkm-SVM () and kmer () on the same benchmark dataset used in this study, the success rates (see the third row of) achieved by the second layer of iEnhancer-2L in identifying the types of enhancers is beyond the reach of gkm-SVM () and kmer (). To the best of our knowledge, iEnhancer-2L is so far the first computational predictor ever established for being able to identifying not only the enhances but also their types in strength. As pointed out in, the availability of web-server for a prediction method will make it much more convenient to users. Unfortunately, neither kmer () nor gkm-SVM () had a web-server, and hence their practical usage was limited. In contrast, the web-server for the new iEnhancer-2L is available, as detailed below.
Web-server and its user guideFor the convenience of users, particularly for the vast majority of experimental scientists, a publicly accessible web-server for iEnhancer-2L has been established. Moreover, to maximize users' convenience, given below is a step-by-step guide on how to use it to get the desired results without the need to go through the above mathematical details.Step 1: Open the web-server by clicking the link at http://bioinformatics.hitsz.edu.cn/iEnhancer-2L/ and you will see the top page of iEnhancer-2L as shown in. Click on the Readme button to see a brief introduction about the server.Step 2: You can either type or copy and paste the query sequences into the input box at the center of, or directly upload your input data by the Browse button. The input sequence should be in the FASTA format. A potential sequence in FASTA format consists of a single initial line beginning with the symbol, >, in the first column, followed by lines of sequence data in which nucleotides are represented using single-letter codes. Except for the mandatory symbol >, all the other characters in the single initial line are optional and only used for the purpose of identification and description. The sequence ends if another line starting with the symbol > appears; this indicates the start of another sequence. Example sequences in FASTA format can be seen by clicking on the Example button right above the input box.Click on the Submit button to see the predicted results. The predicted results will be shown on the screen. For example, if using the query sequences in the Example window, you will see the following on the screen: (1) the first query sequence contains nine strong enhancers: sub-sequences 1200, 2201, 3202, 4203, 5204, 6205, 7206, 8207 and 9208; (2) the second query sequence contains one weak enhancer at sub-sequence 1200; (3) the third query sequence contains one weak enhancer at sub-sequence 1200; (4) the fourth query sequence contains no enhancer; (5) the fifth query sequence contains no enhancer. All these predicted results are fully consistent with experimental observations.
ConclusionIt is a big challenge to identify the enhancers from enormous amount of DNA sequences generated in the postgenomic era. One of the keys to develop a sequence-based predictor is how to effectively formulate the sequence samples concerned. Inspired by the successes of introducing the pseudo amino acid composition or PseAAC to formulate protein/peptide samples (), in the currently proposed iEnhancer-2L predictor, we have used the pseudo k-tuple nucleotide composition or PseKNC to formulate DNA samples, in which the local sequence patterns of DNA samples are reflected by the k-mer composition, while their global sequence patterns reflected by the pseudo components (). iEnhancer-2L is a two-layer predictor. Its first layer is to identify whether a query DNA element is of enhancer or not. If the outcome is yes, then the second layer will automatically continue to identify its strength: strong or weak. To the best of our knowledge, it is the first predictor ever developed that can be also used to classify enhancers according to their strength. A user-friendly web server for iEnhancer-2L has been established at http://bioinformatics.hitsz.edu.cn/iEnhancer-2L/, by which users can easily obtain their desired results without the need to go through the complicated mathematics involved, which were presented here just for its integrity. It is also the first web-server ever established for identification/classification of enhancers. It is anticipated that iEnhancer-2L may become a very useful high throughput tool for studying enhancers or, at the very least, play an important complementary role to the existing methods in this area.iEnhancer-2L: a two-layer predictor
FundingThis work was supported by the National Natural Science Foundation of China, the Scientific Research Foundation for the Returned Overseas Chinese Scholars, State Education Ministry, the Natural Science Foundation of Guangdong Provinceand National High Technology Research and Development Program of China (863 Program). Conflict of Interest: none declared.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
B.Liu et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
