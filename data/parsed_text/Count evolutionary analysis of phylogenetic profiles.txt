Count is a software package for the analysis of numerical profiles on a phylogeny. It is primarily designed to deal with profiles derived from the phyletic distribution of homologous gene families, but is suited to study any other integer-valued evolutionary characters. Count performs ancestral reconstruction, and infers family-and lineage-specific characteristics along the evolutionary tree. It implements popular methods employed in gene content analysis such as Dollo and Wagner parsimony, propensity for gene loss, as well as probabilistic methods involving a phylogenetic birth-and-death model. Availability: Count is available as a stand-alone Java application, as well as an application bundle for MacOS X, at the web site
INTRODUCTIONSome aspects of genome evolution are best captured by integer quantities. Given a phylogeny with terminal taxa X , such a quantity forms a numerical profile, which extends the so-called phylogenetic profile of presenceabsence () : X {0,1,2,...,}. In a typical application,denotes the number of genes in genome x  X for a certain homolog gene family: a homolog family comprises all descendants of the same ancestral gene () in evolutionary lineages. Such families are routinely identified by pairwise sequence comparisons, coupled with the clustering of postulated homolog pairs (). In other interesting examples,might be the size () of genome x or a sequence length polymorphism in population x (). Given a phylogeny, an evolutionary character's history can be inferred by various means in order to reconstruct its state at ancestral nodes or to estimate the tempo of evolution (). The Count software package provides a convenient graphical user interface to sophisticated computational methods in such analyses, and to the manipulation of datasets involving numerical profiles. Count was already used to study the evolution of gene repertoire in Archaea () and nucleo-cytoplasmic DNA viruses ().
FEATURESCount is designed primarily to work with a dataset of numerical profiles for homolog gene families. It allows for combining multiple profiles with various annotations, as found in databases of clustered homolog families such as COG (). Profiles can be filtered by criteria based on presence, membership count and annotations, in order to compile winnowed datasets for further analysis. Given an evolutionary tree T , Count computes the states at tree nodes u  T , based on each profile by imposing=for all terminal taxa u. In parsimony approaches, the ancestral reconstruction minimizes a criterion based on the implied state changes over the edges uv. Alternatively, Count works with so-called phylogenetic birth-and-death models that consider (: u  T ) as a random variable with a well-defined distribution.
ParsimonyCount implements Dollo parsimony () and Wagner parsimony (). In case of the latter, it also implements an asymmetric version () that penalizes losses and gains differently. Count also computes Propensity for Gene Loss (), which quantifies the frequency of loss for each family using Dollo parsimony.
Phylogenetic birth-and-death modelsThe probabilistic model employed in Count relies on linear birthdeath-immigration processes (), commonly used to model population growth and queuing systems. In the general phylogenetic birth-and-death model, three rates are assigned to each branch: gene loss rate , gene duplication rate  and a gain rate . 'Gain' covers multiple phenomena without specifying the origin of the gain, including de novo gene formation and lateral gene transfer. Specifically, character evolution on each edge uv with length  is stochastically determined by a continuous time Markov process X with X(0) = and X() = . The process is characterized by the gain rate , loss rate  and duplication rate : for 0 < n, 0 t   and any 0 <,Less general models may forbid gain ( = 0), or duplication ( = 0), or even both. Paralogs evolve independently in this model, capturing the birth-and-death evolution of multigene families (), as opposed to concerted evolution, or eventsinvolving multiple members at a time. The standard pruning algorithm () for computing likelihoods cannot be used with numerical characters, because the ancestral state space is not bounded. Adequate algorithms were proposed for  = 0, > 0 () and for , > 0 (Cs urs and Mikls,). Count computes the likelihood using our algorithm described before (Cs urs and), which applies to the general model and all the restricted models. Count allows for rate variation across branches and gene families. Model parameters are set by maximizing the likelihood. The optimized model can be used for ancestral reconstruction and to infer lineage-specific trends by using posterior probabilities conditioned on the profiles.
Count: evolutionary analysis of numerical profiles
User interactionFigure 1 illustrates the rich graphical user interface of Count. The program can work with multiple datasets and models at the same time, in order to help comparisons between different analyses. Entire work sessions can be saved, and individual analysis results can be exported into tab-delimited text files, in order to use with other programs such as spreadsheet tools. Main software components (rate optimization and ancestral reconstruction) can also be launched from the command line without invoking the graphical interface.
ImplementationCount is written entirely in Java (Java SE 6), and was tested on various computer platform, including Microsoft Windows, MacOS X and Linux. In addition, Count is also available as an integrated application bundle on MacOS X and a Java Webstart application. The software is distributed with test data and a detailed User's Guide.
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
