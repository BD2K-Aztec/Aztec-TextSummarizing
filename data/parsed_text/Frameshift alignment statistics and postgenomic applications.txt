Motivation: The alignment of DNA sequences to proteins, allowing for frameshifts, is a classic method in sequence analysis. It can help identify pseudogenes (which accumulate mutations), analyze raw DNA and RNA sequence data (which may have frameshift sequencing errors), investigate ribosomal frameshifts, etc. Often, however, only ad hoc approximations or simulations are available to provide the statistical significance of a frameshift alignment score. Results: We describe a method to estimate statistical significance of frameshift alignments, similar to classic BLAST statistics. (BLAST presently does not permit its alignments to include frameshifts.) We also illustrate the continuing usefulness of frameshift alignment with two 'post-genomic' applications: (i) when finding pseudogenes within the human genome, frameshift alignments show that most anciently conserved non-coding human elements are recent pseudogenes with conserved ancestral genes; and (ii) when analyzing metagenomic DNA reads from polluted soil, frameshift alignments show that most alignable metagenomic reads contain frameshifts, suggesting that metagenomic analysis needs to use frameshift alignment to derive accurate results. Availability and implementation: The statistical calculation is available in FALP
INTRODUCTIONAlthough the pairwise alignment of DNA and protein is a classical problem in bioinformatics (), it presents new challenges as next-generation sequencing (NGS) of DNA supplants Sanger sequencing. The per-base error of Sanger sequencing is as low as 0.001% (), but NGS can produce per-base errors of $12% (). NGS can also make frequent insertion and deletion errors, e.g. 454 sequencing in HIV-1 produced occasional per-base insertion and deletion error rates of almost 50% (). More recent sequencing methods such as PacBio also have high indel rates (). The insertion and deletion errors cause frequent frameshifts when DNA is annotated by electronic translation and alignment to proteins. This article studies the statistics of 'frameshift alignment', a pairwise alignment of translated DNA and a protein, with particular attention to frameshift errors. Frameshift alignment has been used for protein domain classification (), determining exact gene start position (), discovering distant protein homologies (), predicting exonintron structure () and so on. Large post-genomic datasets require fast sequence comparison tools. There are several tools that can compare DNA sequences with proteins, including NCBI BLAST (), USEARCH (), RapSearch (), PAUDA () and GHOSTM (), but none of these consider frameshifts. The FASTA package has excellent support for frameshifts, but is not designed for large searches such as whole (meta)genomes versus all known proteins (). LAST has supported frameshift alignment since 2009, and is designed for large searches (). We should also mention HAXAT, which accurately aligns Roche 454 DNA sequences to proteins allowing for frameshifts, but is not designed for largescale searches (). Some studies have focused on developing frameshift alignment algorithms; few have focused on the accurate estimation of E-values for frameshift alignment scores. In alignments without frameshifts, errors in approximate E-values can usually be controlled (); with frameshifts, errors are rarely controlled. On one hand, FASTX/Y calculates alignment P-values with z-scores (). On the other hand, BLAST tools comparing translated DNA to protein do not consider frameshifts. Rather, they consider six alignment reading frames, calculating their E-values as though only one reading frame was explored (). With NGS supplanting Sanger sequencing, the need for accurate frameshift alignment P-values has increased because users require an E-value accounting for frequent frameshifts to decide which sequences are true homologs. The Ascending Ladder Program (ALP) was developed for real-time computation of the statistical parameters in BLAST (). It is based on an importance sampling method using a global alignment of two simulated sequences generated by a Markov chain (). Heuristic modeling of the ascending alignment scores of the global alignment as a Markov additive *To whom correspondence should be addressed.
yThe authors wish it to be known that, in their opinion, the first three authors should be regarded as Joint First Authors process yielded analytical formulas for estimating the parameters of a modified Gumbel distribution. This article has two aims: (i) it presents the Frameshift Ascending Ladder Program (FALP), which extends ALP by handling frameshift errors from NGS; (ii) it exemplifies the use of FALP by finding pseudogenes in the human genome and analyzing metagenomic DNA from polluted soil. FALP uses the same probabilistic framework as ALP, but the importance sampling for generating random sequence pairs requires seven Markov chain states in FALP, instead of three states in ALP. The organization of this article is as follows. The Methods section describes the mathematics of frameshift alignment and our development and implementation of the FALP algorithm. It also describes heuristic frameshift alignment with LAST for genomic sequence data applications and provides the dataset we used for pseudogene and metagenome analyses. The Results section compares the approximate P-values from FALP to frameshift alignment P-values from simulation. It then shows how frameshift alignment helps to detect pseudogenes in the human genome and to analyze metagenomic DNA reads. Finally, the Discussion section reflects on our results. The Supplementary Data details the importance sampling used in FALP.
METHODS
Frameshift alignment and its notationsLet A=a 1 a 2 ::: be a DNA sequence and B=B 1 B 2. .. be an amino acid sequence, where a i is drawn from the nucleotide alphabet L A = a; c; g; t   , and B j is from the amino acid alphabet L B = A; C; D; E; F; G; H; I; K; L; M; N; P; Q; R; S; T; V; W; Y f g. Let T a i2 a i1 a i   =A i 2 L  B =L B [  f g be an amino acid translated from the codon a i2 a i1 a i or a stop codon denoted by . Let s : L  B  L B R denote a 'scoring matrix'. In database applications, s A; B   quantifies the similarity between A and B, e.g. the so-called 'PAM' (point accepted mutation) or 'BLOSUM' (block sum) scoring matrices can quantify evolutionary similarity between two amino acids (). Let w g =" 0 +" 1 :g (" 0 ; " 1 ! 0) denote the affine gap penalty, where " 0 is called the gap opening penalty, " 1 is called the gap extension penalty and g is the gap length in amino acids. Let be the 'frameshift penalty', imposed when sequencing errors necessitate a frameshift in the alignment of DNA and amino acid sequences. The scoring matrix s A; B  , the gap penalty w g and the frameshift penalty constitute the 'frameshift alignment scoring system'. The frameshift alignment graph  A;B of the sequence-pair A; B   is a directed weighted lattice graph in two dimensions, as follows. The vertices v of  A;B are non-negative integer points i; j   (Throughout the article, i, j, k, m, n and g are integers.). Seven sets of directed edges e come out of each vertex v= i; j  : one northward, three in slightly varying directions northeastward and three eastward. The first northeastward edge goes into v= i+3; j+1   with weight s e  =s A i+3 ; B j+1   , corresponding to a match between a codon and an amino acid. The second northeastward edge goes into v= i+4; j+1  with weight s e  =s A i+4 ; B j+1    , corresponding to a nucleotide insertion between two consecutive DNA codons. The third northeastward edge goes into v= i+2; j+1  with weight s e  =s A i+2 ; B j+1    , corresponding to a nucleotide deletion, so that the last position of a codon overlaps with the first position of the next DNA codon. For each g40, one eastward edge goes into v= i+3g; j  and one northward edge goes into v= i; j+g   , both assigned the same weight, s e  =  w g 50. The remaining eastward edges go into v= i+3g+1; j  and v= i+3g  1; j  with weight s e  =  w g  50.A (directed) path = v 0 ; e 1 ; v 1 ; e 2 ; :::; e k ; v k   in  A;B is a finite alternating sequence of vertices and edges that starts and ends with a vertex. For each i=1; 2;. . .; k, the directed edge e i comes out of vertex v i1 and goes into vertex v i. We say that the path starts at v 0 and ends at v k and the alignment's score is the 'path weight' S := X k i=1 s e i  . Seefor an example. Let ^ M m;n denote the local maximum scores for a given DNA sequence A=a 1 a 2. . .a m and amino acid sequence B=B 1 B 2. . .B n. In the appropriate limit, if the frameshift alignment scoring system is in the so-called 'logarithmic phase' () (i.e. if the optimal global alignment score of long random sequences has a negative score), the random score ^ M m;n follows an approximate Gumbel extreme value distribution with 'scale parameter' and 'pre-factor' K:The search space size mn in Eq (1) is sharpened by edge effect ().
Algorithm for frameshift alignment scoreWe assume that a nucleotide insertion or deletion error occurs only between two consecutive codons. Then, for gap penalty w g =" 0 +" 1 :g and frameshift penalty , the global frameshift alignment score S i;j is calculated with theindicate vertices , and the origin 0 = 0; 0   is at the southwest corner of theThe optimal frameshift alignment path consists of six edges, in order: 2 northeast, 1 north of length 2, 1 northeast, 1 east of length 1 and 1 northeast. It corresponds to the alignment word-pairs gct; A  , taag; R  , "; D  , "; C  , tgg; W  , at;"  and tgt; C  . The frameshift alignment score isNote that frameshift occurs twice in the alignment by a nucleotide t insertion between gct and aag and a nucleotide deletion between tgg and tgt. Double line edges show that alignment is in reading frame 1 and dotted line edges show that alignment is in reading frame 2 I i;j =max S i;j1  "g;0 =  1 for g40. The three array names S, I and D are mnemonics for 'substitution', 'insertion' and 'deletion'. If '"' denotes a gap character, the alignment word-pairs of the forms aa; B  , aaa; B   , aaaa; B   , "; B  , aa; "  , aaa; "   and aaaa; "   correspond to the operations for editing sequence A into sequence B (). Note that aa; B   and aa; "   represent a nucleotide deletion while aaaa; B   and aaaa; "   represent a nucleotide insertion into the boundary of a codon. The preceding calculation disallows adjacent insertions and deletions. If desired, they can be allowed by replacing the recursion for I i;j in Eq (3)As usual, the global alignment algorithm and its boundary conditions can be converted into a local alignment algorithm for comparing DNA and amino acid sequences.
Trial distribution for importance samplingTo estimate the Gumbel parameters, FALP uses importance sampling together with Eqs (24). Like all Monte Carlo methods, importance sampling estimates the integral of some function over some target distribution. It improves its estimate's accuracy by generating samples from a biased trial distribution that focuses its probability in a region where the function is large. It then corrects for sampling bias by multiplying the function values it samples by the ratio of target to trial probabilities before averaging. In the present context, our importance sampling generates frameshift alignments with high scores, so the Gumbel approximation is relatively accurate, to improve the accuracy of the corresponding estimated statistical parameters (). Let the letters in sequences A and B be independent and identically distributed with background (target) probabilities p a : a 2 L A   and q B : B 2 L B   , respectively. In FALP, importance sampling generates high-scoring random sequence pairs with a trial distribution using a Hidden Markov model whose underlying Markov chain has seven statesr 0 represent a transition probability from state r to state r 0 , whereThe transition probabilities t r;r 0   are determined using the scores s A; B  , the gap penalty w g =" 0 +" 1 :g and the frameshift penalty. The emission probabilities on D 1 ; D 2 ; D 3 and I states have the forms p a p a p a , p a p a , p a p a p a p a and q B , respectively. The emission probabilities on S 1 and S 2 states have the forms e aaa;B and e aa;B , respectively. The emission probabilities for the S 3 state have the form p a e aaa;B. The Supplementary Data has further details on the transition and emission probabilities. Under the assumption of independent letters in A and B, our methods then produce accurate statistical parameters applying to the output of the frameshift alignment algorithm in Section 2.2. As we generate sequence pairs by the hidden Markov model, we compute importance sampling weights as the ratio of the target probability over the corresponding trial probability. The importance sampling weights can be computed efficiently by a dynamic programming algorithm, similar to ALP (), but with some technical complications, as described in the Supplementary Data.
ImplementationFALP can be run in three modes. 'Gumbel Mode' estimates the modified Gumbel parameters for a given frameshift alignment scoring system. The modified Gumbel parameters include the two parameters and K of the Gumbel distribution in Eq (1), together with parameters for a 'finite-size correction' to the Gumbel approximation. The finite-size correction accounts for edge effects caused by finite sequence lengths (). 'P-values Mode' calculates P-values and E-values using the modified Gumbel parameters. 'Align Mode' computes the optimal frameshift alignment score for a given pair of nucleotide and amino acid sequences. The default frameshift alignment scoring system in FALP is BLOSUM80 with w g =11+2g and =15. The default letter frequencies are uniform frequencies for the 4 nucleotides (all 0.25) and the Robinson and Robinson (1991) frequencies for the amino acids. Users can assign their own frameshift alignment scoring system and letter frequencies, and translation table. FALP automatically allocates computation resources to compute all statistical parameters to the accuracy a user requires. The default accuracy for K is 0.5%. (Typically, K takes more time to estimate than .) FALP computes standard errors for its estimates of the modified Gumbel parameters by partitioning the random sequence-pairs from importance sampling into subsets. The user can specify the number of partition subsets, with default 10.
Fast heuristic frameshift alignment with LASTFor genomic-scale sequence data like genomes and metagenomes, we use LAST to find alignments quickly but heuristically. LAST follows the same three steps as BLAST: find 'seeds' (short initial matches); extend a gapless alignment from each seed; and if there is a sufficiently highscoring gapless alignment, then extend a gapped alignment with frameshifts. LAST achieves adequate speed for genome-scale data by using adaptive seeds in the first step (). In the third step, the frameshift recursion is calculated in a limited region of the dynamic programming matrix, defined by an x-drop algorithm (). It uses this variant of the recursion, which aims to be as fast as possible (and assumes that ! " 1 ): x=max S i3;j1 ; S i2;j1  ; S i4;j1   This variant does consider adjacent insertions and deletions.
Pseudogene analysisWe identified human pseudogenes by comparing the genome (hg19) to a database of known proteins [UniRef90 version 2012_07, (. The comparison was done with LAST v362 (), after masking tandem repeats with tantan v13 (). First, the proteins were masked and indexed: tantan-p-r0.02 j lastdb-p-c Then, the genome was masked and aligned: tantan-c j lastal-pBLOSUM80-F15-e131-m100-f0As a control, we also aligned the genome after reversing (but not complementing) it: tantan j reverse j lastal-pBLOSUM80-F15-e93-m100-f0-u3The results were compared with the following annotation files from the UCSC database (): knownGene.txt, pseudoYale60.txt (), vegaPseudoGene.txt (). They were also compared with human-versus-lamprey alignments (hg19.petMar2.net.axt). We also attempted a BLAST search, using NCBI BLAST+ 2.2.28. First, the proteins were masked and prepared: tantan-p-r0.02 j makeblastdb-dbtype prot Then, the genome was masked and aligned: tantan-c j blastx-matrix BLOSUM80-outfmt 7-lcase_masking
Metagenome analysisWe also analyzed a set of metagenomic DNA reads (SRR629686) by comparing it with UniRef90. The reads were first converted to fasta format, then masked and aligned as follows: tantan j lastal-pBLOSUM80-F15-e129-f0gives FALP's estimates for scale parameter and prefactor K for the BLOSUM62 and w g =11+g, the default scoring system in BLASTP for proteins. We used uniform nucleotide frequencies (all 0.25) and Robinson and Robinson (1991) frequencies for amino acids. As the frameshift penalty increases, estimates of converge to 0:330 AE 0:001.displays P-value accuracies for FALP, if the frameshift alignment scoring systems are BLOSUM62, w g =11+g and =9, and BLOSUM80, w g =11+2g and =15. The 'gold standard' P-values were calculated using importance sampling in 2  10 8 simulation runs. Other scoring schemes also gave qualitatively similar results.
RESULTS
FALP P-value evaluation
Finding pseudogenes in the human genomePseudogenes are gene fossils that no longer produce functional proteins, so they accumulate arbitrary mutations including frameshifts. One useful application of frameshift alignment is to identify pseudogenes by finding alignments (indicating homology) between a genome and all known proteins (from a protein database such as UniRef). The results will include exons of real genes as well as pseudogenes, but overlap with gene annotations identifies the real exons, which can then be removed. Gene annotations are often incomplete, so some real exons might remain, but for some applications this does not matter (see below). Accordingly, we used frameshift alignment to find human pseudogenes. In fact, any frameshift aligner reasonably approximating LAST's algorithm above could have been used to produce the input scores for FALP. As usual, the alignment score threshold should be as low as possible, to find subtle pseudogenes, but not so low that it encourages 'too many' spurious alignments. FALP estimates that, if we compared a shuffled human genome to a shuffled UniRef90, with the default frameshift alignment scoring scheme, about 700 random alignments are expected with score S ! 100, about 20 alignments with score S ! 110, etc. (). We conservatively chose a score threshold of S=131, with corresponding E-value E 0:01, so almost no spurious alignments are expected. Thus, FALP permits control of the number of spurious alignments in random sequences, but the implications of this controlfor spurious alignments in real DNA is unclear. To investigate, we aligned the reversed (but not complemented) human genome against UniRef90. DNA never evolves by reversal (due to its chemical 5 0 to 3 0 directionality), and so any alignments found are spurious (non-homologous).shows that FALP predicts far fewer spurious alignments than actually occur.suggests that matches between simple repeats account for most of the spurious alignments.shows the results after masking simple repeats with tantan. FALP (dashed line) predicts the observed number of spurious alignments (black line) after repeat-masking with tantan, except for a dozen or so spurious alignments with unexpectedly large scores. All of the spurious alignments we investigated seem to arise from database artifacts, UniRef proteins that were computationally translated from reversed (but not complemented) RNA sequences. For example, UniRef proteins Q13540 and Q61506 are translations from human mRNA M14624 and mouse mRNA X00951, respectively, and the corresponding mRNAs match the reference genome when reversed (but not complemented). Once the database artifacts inare discounted, the observed number of spurious alignments was slightly less than the expected number, simply because our heuristic alignment tool (LAST) misses some alignments. Indeed, when we reran LAST more slowly and sensitively (-m1000 instead of-m100), the observed number of spurious alignments increased (but did not exceed the expected number). In summary, after repeatmasking with tantan, FALP permits reliable control of the number of non-homologous alignments. [Note: this is not the case for repeat-masking programs other than tantan because they miss some cryptic simple repeats (Our pseudogene search (which took 13 CPU hours) identified 65 005 putative pseudogene parts, segments of the human genome aligning to known proteins but not overlapping with annotated protein-coding sequences. (We say 'parts' because one pseudogene may have several separate fragments.) As noted above, some of the putative pseudogene parts are probably real exons lacking annotations, but 36 376 of 65 005 had frameshifts, which real exons should lack. We compared our putative pseudogene parts with two pseudogene catalogs: Yale pseudogenes () and Vega pseudogenes (). (In these catalogs, one pseudogene may have multiple 'exons', i.e. genomic segments.) Of our 65 005 putative pseudogene parts, 43 554 (including 19 679 with frameshifts) have no overlap with any pseudogene in Yale and Vega, whereas our search missed only 4792 Yale and Vega exons. The detailed breakdown insearch missed a greater proportion of exons from Vega than from Yale, possibly because Vega includes transcribed pseudogenes, including exons not derived from protein-coding sequence. To check whether our alignment methods have real benefit, we also attempted a BLAST search of the human genome against UniRef90. Using just chromosome 1, BLAST ran for 48 h with no output before it was killed by our queuing system. Thus, the mere ability to handle this scale of data is a non-trivial benefit.
Most anciently conserved non-coding elements are pseudogenesGenomes contain conserved non-protein-coding elements, which often coincide with enhancers that appear to control fundamental aspects of embryonic development, including development of brain regions (). Therefore, studying these elements is a promising approach to understanding development. On the other hand, some non-coding elements are conserved for more prosaic reasons: recent pseudogenes can appear conserved simply because their parent genes were highly conserved.Thus, to find the 'interesting' (regulatory) elements, we need to filter out the 'uninteresting' ones. To explore this issue, we examined alignments between the human and lamprey genomes, obtained from the UCSC database. Lamprey is a jawless vertebrate that is very distantly related to human, so these alignments reflect very ancient conserved elements. They include 25 383 putative non-coding elements, i.e. segments of the human genome that align to lamprey but have zero overlap with protein-coding sequence of known genes. Most of these non-coding elements (13 755: 54%) overlap pseudogene parts from our earlier search. This provides a straightforward (non-regulatory) explanation for these elements: presumably they became pseudogenes (via duplication or simply inactivation) much more recently than the common ancestor of human and lamprey, and their parent genes encoded conserved proteins. One example is shown in. This element appears strikingly conserved, and it lies in a gene desert (where conserved regulatory elements often lie). Without further information, we might suspect that it performs some fundamental, perhaps regulatory, function. Our alignments show, however, that it is actually a ribosomal protein pseudogene. This is a case where it does not matter that our pseudogenes may include unannotated real exons. We wish to filter out conserved elements that have a straightforward explanation (that they either used to or still do encode proteins), to get the interesting unexplained ones.
Application to analyzing metagenomic DNA readsBy comparing metagenomic DNA reads to a protein database, we may gain clues as to what kinds of proteins and enzymes are encoded in the DNA (). As an example, we examined a set of DNA reads from industrially polluted soil in India (). This has 409 782 reads (133 529 997 bases) sequenced with the FLX titanium system. This sequencing system is often used in metagenomics because it produces fairlylong reads, which is especially beneficial for characterizing DNA from unknown or novel organisms. On the other hand, it has a significant rate of insertion and deletion errors (in particular, homopolymer length errors), which are likely to introduce frameshifts. As usual we need to choose an alignment score threshold, so as to find as many significant alignments as possible, but not too many random alignments.shows expected numbers of random alignments if we compare all the DNA reads to the protein database. (Note these are different from BLAST Evalues, which are for comparing one query sequence to the dataThis environment is polluted with chemical waste (from manufacture of dyes, paints, solvents, pharmaceuticals, etc.), likely including mutagens, which might conceivably cause some of the frameshifts. Although it is hard to distinguish sequence errors from real frameshifts, we can at least say that, since frameshifts are so frequent, it is important to take them into account to correctly understand relationships between metagenomic sequences and known proteins. For example,has two compensatory frameshifts, which means that non-frameshift alignment is likely to align the middle part wrongly, obscuring its evolutionary history.
DISCUSSIONWe presented a new program FALP that assesses the statistical significance of a frameshift alignment score. In the algorithm section, we assumed that a nucleotide insertion or deletion occurs only between two consecutive codons. However, FALP can easily handle general error models because FALP is based on a Markov chain. Simply we define insertion or deletion error events as Markov states and add the corresponding Markov states to the current seven states in the Markov state-space. We suggested a simple way of roughly annotating pseudogenes in a genome by frameshift alignment search of a protein database. These annotations are highly informative, even without tackling the hard question of distinguishing pseudogenes from real genes. In particular, these annotations overlap, and explain, most apparently conserved non-coding elements. This enables us to focus on the remaining unexplained conserved elements, which are likely to have important biological roles, such as regulation. On the other hand, 'ultraconserved elements' () are not pseudogenessee the Supplement. We also analyzed one metagenomic DNA dataset by alignment to known proteins, and surprisingly found that most alignable reads exhibit frameshifts. This fact testifies to the importance of analyzing such data with frameshift alignments. Some frameshifts might not be sequencing errors, but could indicate interesting evolutionary events. Since frameshift alignment is rarely used, we suspect that there is a lot to discover with it. Frameshift alignment may improve taxonomic identification of metagenomic sequences that lack close relatives in the database. This is because protein is typically more conserved than DNA, and so frameshift alignment should be able to find more distant relationships than the usual DNA-level alignment. It is also likely to improve gene prediction, where it is critical to get the correct reading frame. This study demonstrates that statistically rigorous large-scale frameshift alignment can be done easily, and we hope it will encourage renewed interest in this powerful technique.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
S.L.Sheetlin et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Frameshift alignment at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
