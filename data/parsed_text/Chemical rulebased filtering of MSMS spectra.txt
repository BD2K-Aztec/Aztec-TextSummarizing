Motivation: Identification of proteins by mass spectrometry–based proteomics requires automated interpretation of peptide tandem mass spectrometry spectra. The effectiveness of peptide identification can be greatly improved by filtering out extraneous noise peaks before the subsequent database searching steps. Results: Here we present a novel chemical rule-based filtering algorithm , termed CRF, which makes use of the predictable patterns (rules) of collision-induced peptide fragmentation. The algorithm selects peak pairs that obey the common fragmentation rules within plausible limits of mass tolerance as well as peak intensity and produces spectra that can be subsequently submitted to any search engine. CRF increases the positive predictive value and decreases the number of random matches and thus improves performance by 15–20% in terms of pep-tide annotation using search engines, such as X!Tandem. Importantly, the algorithm also achieves data compression rates of $75%. Availability: The MATLAB source code and a web server are available at http://hydrax.icgeb.trieste.it/CRFilter/
INTRODUCTIONIdentifying proteins from the mass spectra of their proteolytic peptides has become a standard method for analyzing complex biological samples (). In a typical experiment, mass spectra obtained via liquid chromatography coupled to tandem mass spectrometry (MS/MS) are compared with theoretical spectra derived from a sequence database (In this work, we address the filtering of preprocessed spectra, which consist of a series of monoisotopic peaks that are characterized by their fragmentation mass (m/z ratio) and their intensity. The goal of filtering is to increase the quality of the data while reducing the size of the dataset under analysis. Because the analysis capacity of instruments is constantly increasing, there is a growing need for fast and efficient filtering strategies. Briefly, filtering methods fall into two large categories: spectrum filtering approaches and peak filtering approaches. Spectrum filtering approaches seek to identify low-quality spectra based on their peculiar intensity or m/z distributions, and subsequently exclude these spectra from further analysis. One general strategy is to use peptide fragmentation rules to identify high-quality spectra (). There are many ways to incorporate peptide fragmentation rules into spectrum annotation, and in a broad sense, all de novo algorithms and sequence tagging algorithms use fragmentation rules. Peak filtering approaches, meanwhile, seek to discard unwanted peaks from the spectra of a particular experiment. Such unwanted peaks are identified by their low intensities and/or by the fact that they do not obey the fragmentation rules of a given experiment. Although technically incorrect, any peak that is deemed superfluous for a particular data processing workflow can be discarded from the spectrum as 'noise'. For instance, we can simply retain only the top 50 most intense peaks, or discard peaks with intensities55% of the maximum intensity. A number of laboratories have reported on the use of such classical signal-to-noise filters that also reduce the number of peaks in a spectrum (). The advantage of noise filtering methods is that they can produce cleaner spectra. These can then be further analyzed with any search engine. However, the signal-to-noise filters are typically equally destructive to all low-intensity peaks, regardless of whether or not they follow the expected fragmentation rules. To address this problem, we developed a set of spectral processing filters designed to reduce the number of uninformative peaks in peptide fragmentation spectra. The motivation is to use the chemical rules of gas-phase peptide fragmentation () to produce filtered spectra, which can then be further analyzed by any search engine of *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com choice. Importantly, the filters presented here remove peaks that do not form by (ax, cz) pairs or are not separated by the mass of an amino acid. In contrast to spectrum filtering methods that use related principles for controlling spectrum quality (), our strategy only discards peaks deemed to be uninformative, rather than discarding entire spectra. This peak-by-peak strategy has negligible computational costs, results in data compression rates of $75% and a substantial improvement in the number of the annotated spectra at the same false discovery rate (FDR) level as compared with unfiltered data. The article is structured as follows: Section 2 describes the data and the general computational methods, Section 3 describes the results (i.e. the principle, the algorithm and the tests conducted on the method) and Section 4 contains the discussion and conclusions.
METHODSDatasets. The Jurkat dataset is an experimentally acquired set of tryptic peptide spectra obtained from a human cell extract, collected on a Thermo LTQ Orbitrap instrument (). The dataset contains 5853 MS/MS spectra (charges from 2 to 6) and were downloaded from Proteome Commons (https://proteomecommons.org/). UPS, a second experimental dataset, was created from a tryptic digest of the Universal Proteomics Standard I (Sigma) using an Applied Biosystems 4800 MALDI-TOF/TOF instrument as previously described (). The UPS I standard contains 50 human proteins, and our UPS dataset contains 3368 peptide spectra. HSPP2A dataset (), the largest, contains 29 583 spectra (20 773 doubly, 8706 triply, 474 quadruply, 26 quintuply and 4 hexuply charged spectra) obtained with LTQ mass spectrometer on trypsin-digested human protein phosphatise 2A system and was acquired from www.peptideatlas.org/repository/publications/Glatter2008. Top N intensity filter. We have implemented Top N filters for a comparison as well, which retains the N most intense peaks (). N  40100 gives good results for many datasets. In our experiments, N was set to 50. Spectrum identification. The raw and the filtered experimental spectrum datasets have been annotated with X!tandem (version 2010.12.01.1), Mascot program (version 2.2), MassMatrix () and InsPecT version 2012 (). For all search engines, the parent and fragment ion mass tolerance were set to 0.1 and 0.3 Da, respectively, for the UPS dataset; 0.03 and 0.3 Da, respectively, for the Jurkat dataset and 0.1 and 0.3 Da, respectively, for the HSPP2A dataset. The IPI human sequence database (version 3.71) () was used as a reference with X!Tandem, InsPecT and MassMatrix. We included reversed sequences as the decoy dataset. The 'total peaks' parameter in the X!tandem program was set to 5000. Default values were used for the rest of the parameters. Mascot was used with above parameters using the SwissProt human database (version 2012.03). Performance evaluation methods. The positive predictive value (PPV) is the ratio of the matching peaks in the experimental spectra over the total peaks [see Altman and, formally PPV  #matches #peaks :Filtering performance was also evaluated by the receiver operator curve (ROC) technique as follows: a dataset (raw or filtered) was submitted to a search engine, and the identified peptides were listed in the order of decreasing significance (increasing E-value). In this list, peptides of the human proteome were considered positive hits and the peptides of the decoy dataset were considered negative hits. The number of positive hits was then plotted as a function of the number of negative (decoy) hits by varying the decision threshold (). This plot yields a monotonously increasing curve, the ROC curve, and higher running ROC curves indicate better performance. The FDR () was calculated as the ratio of the number of the decoy hits over the number of the positive hits at a certain threshold t by the following formula:The ROC plot was used to compare methods at the level of the same FDR value. For instance, FDR  0.2% is a straight line in the ROC plot, and its intersections with the ROC curves indicate the number of target and decoy peaks found at the same level of FDR. FDR  100% would coincide with the diagonal x  y line. All calculations and chemical rule-based filtering (CRF) algorithm were implemented in MATLAB (version R2010b). The source code and a web server are available at http://hydrax.icgeb.trieste.it/CRFilter/.
RESULTS
Principle of CRFGiven an experimental MS/MS spectrum, CRF seeks to retain (i) high-intensity peaks that are trusted without further conditions, and (ii) low-intensity peaks that are related to one of the high-intensity peaks according to any of the following three rules:Certain types of instruments may not produce equally intense by (ax or cz) peak pairs, for instance, triple quadrupole or quadrupole-time-of-flight instruments tend to produce only either b-or y-ions, thus only one member of the ion pair is visible. In this case, CRF keeps such peaks if they are either intense enough to be considered high-intensity peaks or are separated by a mass of an amino acid from high-intensity peaks and hence pass the amino acid mass distance rule. Furthermore, when amino acids lose NH 3 or H 2 O on collision-induced dissociation (CID) fragmentation under certain circumstances, or when some amino acids carry posttranslational modifications, CRF keeps these peaks if they are intense enough or they have a high-intensity amino acid neighbor and thus pass the first or the second rule. Peaks that do not have amino acid neighbors, such as internal fragment ions, might be retained if they are high-intensity peaks. The high-and low-intensity peaks are defined via userspecified thresholds (an example is shown in). As an approximation, the high-and the low-intensity peaks are defined as the percentage of the estimated maximum peak number (EMP). Assuming that under the conditions of CID, seven ions can be produced for every peptide bond (). The number of peptide bonds can thus be roughly calculated by dividing the precursor mass by the average mass of amino acids, so EMP can be calculated aswhere AAM denotes the average amino acid mass, which is calculated from a table of amino acid masses, plus the masses of any modifications that are specified. For instance, by specifying 30% as the upper threshold and 70% as the lower threshold, we select 30% of the EMP as 'high-intensity' peaks and the next 3070% as 'low-intensity' ones. Peaks in the 71100% interval are discarded. EMP is a rough estimate because it does not contain irregular fragmentation events. However, we found it useful because it does not penalize either small or large peptides.
Formal description of the CRF algorithmLet S  p j , i j  n j1 denote a singly charged spectrum of n peaks, where the pair (p j ,i j ) denotes the mass (m/z) p j and the intensity i j of the jth peak, and without the loss of generality, let us assume the peaks are ordered by the intensity in descending order, i.e. i 1 ! i 2 !. .. ! i n. Let T H and T L (T H 5T L ) be two user-defined thresholds expressed in percentage of the EMP. CRF uses T H and T L threshold parameters to calculate two sets, the HIGH(T H ) and LOW(T H , T L ) that contain high-and low-intensity peaks, byCRF marks every peak in HIGH as accepted, and peaks (p,i) 2 LOW are marked only if there is a peak (q,j) 2 HIGH for which any of the following rules are satisfied:(i) Mass complementation rule: p  q  MH   1, (ii) Amino acid mass distance rule: jp  qj 2 AM, (iii) Amino acid mass complementation rule: jMH  jp  qj  1j 2 AM, where AM denotes the set of the amino acid masses. Finally, CRF removes the unmarked peaks from the spectrum. CRF is made tolerant to experimental error by considering the equations fulfilled within user-defined tolerance limits defined in Daltons. Two such tolerance values are used:  F is the fragment ion mass (m/z) tolerance and  P is the precursor ion mass (m/z) tolerance. The values of  F and  P depend on the accuracy of the mass spectrometer and should be set to approximately the same values as those used by the search engine. However, CRF is not indifferent to the tolerance parameters. In extreme cases of tolerance parameters, the effect of the three chemical rules becomes insignificant, and the filtering will be dominated by the intensity thresholds, which determine the sets HIGH and LOW. This happens because CRF lets all peaks pass that are in the sets HIGH or LOW if the tolerance parameters are too loose. Conversely, if tolerance parameters are too tight then only peaks in set HIGH will pass and peaks in LOW will be discarded. These examples illustrate that CRF will still keep the most intense peaks even under bad parameter settings. When a spectrum has a multiply charged precursor ion, all possible charge states for fragmentation peaks are taken into consideration, and if such a peak obeys any of the three rules, the original peak is kept.
Testing the algorithmTo verify that the CRF improves the spectrum identification, we used the Jurkat and the UPS raw spectrum datasets. UPS is a standardized mixture of proteins, and the dataset was collected on a MALDI-TOF/TOF instrument. The Jurkat dataset was collected with an Orbitrap instrument, which is one of the most commonly used instruments for proteomics. We used X!Tandem or the MassMatrix search engines (using decoy sequences as described in Section 2). The filtering parameters were as follows: T H  50%, T L  110% for the Jurkat dataset; T H  70%, T L  120% for the UPS dataset and T H  120%, T L  160% for the HSPP2A dataset (see Section 3.4). The main hypothesis behind CRF is that selecting peak pairs based on appropriate chemical rules will decrease the number of random hits in a filtered spectrum as compared with a raw spectrum. For the first 'proof of principle' test, we produced a histogram of the number of matching peaks between the experimental and the theoretical spectra obtained from database searching using X!Tandem with the UPS dataset (). In general, it is convenient to divide such a histogram into a left and a right side roughly corresponding to high and low scores. In the low-scoring region, the distribution of experimental (target) and randomly simulated (decoy) datasets coincides. This is a consequence of the fact that a low number of matches frequently occurs at random when comparing a spectrum either with target (i.e. real) or with decoy spectra. On the other hand, in the high-scoring region, the frequency of the target hits is higher than those of decoy hits.shows that CRF filtering dramatically decreases random hits while leaving the true hits essentially intact. This is shown by the fact that the right-hand tail of the raw and filtered datasets are essentially identical (shown by solid red and green lines). It is also apparent that the histogram of the decoy dataset is shifted more by CRF filtering than the histogram of the target dataset (compare solid green with dashed green lines). Because significance (P-value) is usually expressed as a distance between target and decoy data, CRF filtering will naturally increase the significance of peptide identifications. This finding thus confirms that CRF removes the uninformative peaks in the spectrum dataset and decreases the influence of random matches. Another way to show the efficiency of the filtering is to directly compare PPVs (Section 2, performance measures) obtained on filtered and raw spectra. We used the X!Tandem search engine for spectrum annotation and calculated the number of the theoretical peaks that match a peak in an experimental spectrum. The calculated PPVs were plotted as a function of the precursor mass (). This figure shows a large improvement in PPV for the CRF-filtered spectra. We think that this improvement is due to the elimination of the uninformative peaks, which improves the ratio of the matching (informative) peaks in a spectrum. The filtering also improves the E-values of the X!Tandem search results.compares X!Tandem E-values of raw and CRF-filtered data on the peptide as well as on the protein level. In this representation, each spectrum is represented by a dot of E-value pairs (y-axis corresponds to CRF-filtered E-value and x-axis to raw E-value). The oblique line corresponds to the diagonal, y  x, so dots above the line represent spectra where CRF filtering improves the E-values, while dots below the line are spectra where CRF filtering had a negative effect (Left). It is apparent that the large majority of the annotated spectra are improved at the peptide level. Protein identification data show a similar trend (B), and here nearly all protein E-values are improved on CRF filtering. These data are consistent with the results shown inand indicate that CRF filtering improves the significance of peptide and protein identifications. The efficiency of CRF and Top50 intensity filtering was compared using ROC analysis (). The raw and filtered datasets were submitted to the X!Tandem, MassMatrix, InsPect and Mascot search engines (using decoy sequences as described in Section 2), and the lists of identified peptides were analyzed by the ROC technique. The ROC curves inindicate that CRF generally identified more targets than the two other approaches. The intersection points of the ROC curve and the straight line of FDR  0.2% show, at the same FDR level, that CRF allows for the annotation of more spectra. Improvements in numbers are shown in, obtained with X!Tandem at the same FDR level. On the Jurkat dataset, X!Tandem with CRF filtering identifies 8.7 and 25.5% more spectra and 8.1 and 21.7% more unique peptide sequences compared with Top50 and raw, respectively. On the UPS dataset, the improvements achieved with CRF are 0.5 and 18% for spectra and 1 and 14% for unique peptide sequences compared with Top50 filtering and raw, respectively. When the Jurkat dataset is analyzed with X!Tandem, CRF identifies 8% more unique peptides than Top50, and 22% more than in the raw dataset. On the UPS dataset, the respective improvements are 1% as compared with Top50 and 14% as compared with the raw dataset.shows the actual number of spectra and unique peptides identified with the two filters, respectively. Roughly speaking, CRF increased both the number of spectra and the number of the unique peptide sequences by 1525% as compared with unfiltered data and by 15% compared with Top50 filtered data.
Parameter selectionCRF has two adjustable threshold parameters: T H is used for defining the high-intensity peaks that are accepted without condition and T L is used for defining low-intensity peaks that are accepted only if they form a pair with other high-intensity peaks. We examined how the thresholds T H and T L affect the spectrumidentification results. The number of the identified peptides at FDR  0.2% are plotted inas a function of the threshold parameters. We found a large plateau where the spectrum identification reaches its maximum. The greatest spectrum identification was seen when T H  4090% and T L  60160%. The large plateau illustrates the robustness of CRF because even with a wide variety of settings, the filters are highly efficient at retaining the informative peaks. We also plotted the percentage of kept peaks (data compression) for various values of T H and T L (). These results indicate that CRF is relatively refractory to the values for T H and T L , except for extremely low (too stringent) and high (too permissive) values. Therefore, we expect that only a minimal sample-to-sample tuning will be necessary for the use of CRF. Importantly, a substantial decrease indataset size accompanies the improvement. Based on these results, we chose T H  50 and T L  120% as the default values. CRF has two tolerance parameters:  F is the fragment ion mass (m/z) tolerance and  P is the precursor ion mass (m/z) tolerance; their role is briefly discussed above (end of Section 3.2). The values of  F and  P depend on the accuracy of the mass measurements and are to be set by the experimenter. In our case, we used
Post-translational and chemical modificationsIdentification of post-translational and chemical modifications is becoming an increasingly important part of the analysis of proteomics data and accounting for modifications plays a fundamental role in MS data (). To handle modified peaks, CRF uses an amino acid table that is adjustable for both complete and partial modifications. We studied this problem on the UPS dataset in which the modifications were accounted for during database searching: carbamidomethylation (57.02 Da on Cys) as a fixed modification, deamidation (0.98 Da on Asn and Gln) and oxidation (15.99 Da on Met) both as partial modifications. In the raw dataset, X!Tandem annotated 735 spectra at FDR  0.2%. When CRF was used without specifying modifications, 864 spectra were identified; when the above modifications were applied during filtering, the number of annotated spectra increased to 866. In other words, the increase with respect to the raw data is substantial regardless of whether the modified amino acids are correctly specified during filtering. We checked the shifted peaks in the spectra (details not shown) and found that the marginal increase in the number of identified spectra (866 versus 864) was due only to a few shifted peaks. This may appear somewhat counterintuitive; however, we note that amino acid modifications do not change most of the inter-peak distances on which CRF is based. So CRF will detect spectra of peptides containing modified residues well even if the modifications are not, or incorrectly, specified (also see Supplementary Materials).
DISCUSSIONWe have developed a spectrum filtering method based on the gas-phase chemistry of peptide fragmentation and we therefore refer to this strategy as CRF. The main goal of this filtering strategy is to enrich for peaks that most search engines recognize as coming from fragmented peptides. We have used a series of rules: one based on finding by complementary pairs, one based on finding peaks separated by the mass of an amino acid residue (amino acid neighbors) and a third one that is a combination of the first two. We found that CRF filtering improves peptide annotation by 1525%, at the same FDR level, and provides an $75% compression of the data. We have tested the CRF on data collected with MALDI-TOF/ TOF, ion trap and Orbitrap ion trap hybrid instruments. We have found that the CRF approach also improves the search engine performance with respect to these data. However, data compression and search engine performance gains with ion trapThe numbers represent the number of the identified spectra or the number of the identified unique peptide sequences, as indicated at FDR  0.2%.
ABdata were not as great as those achieved with datasets coming from high-resolution instruments. The principle weaknesses with ion trap data are the high mass errors, which requires the mass tolerance to be 41 Da and ambiguities in the charge states. Both these issues cause filters to keep more extraneous peaks in the output. However, even with ion trap data, CRF yielded $50% data compression and a 10% increase in terms of spectrum annotations. CRF is most similar to sequence tagging algorithms. However, CRF produces peak list that can be analyzed using standard spectral matching algorithms. A number of groups have published similar algorithms designed to perform quality control checks on each spectra (). Spectra that do not have enough amino acid neighbors, or by pairs, are typically excluded from the search, while those that pass the quality control check are searched in total. In essence, the rule-based filters are performing a similar quality control check. However, this control is performed at the level of individual peaks, rather than complete spectra. This removes $75% of all the peaks in the dataset and results in 1525% more annotated spectra at the same FDR level. The BYONIC search engine uses a similar strategy, where lookup peaks are extracted from spectra and then searched using a custom algorithm (). Not only does our strategy differ in the rules that are used to select peaks, but we output the selected (and in a separate file, the discarded) peaks in the MASCOT Generic Format (mgf). Searching with the discarded peaks resulted in no legitimate peptide identifications, which indicates the rule-based filters are efficient at retaining the informative peaks and removing noise peaks.come close to using CRF, in that they apply their Top N filter within a set window surrounding the most intensive peaks. The rational for this filtering is that a true peak should have no more than one true neighbor within 57 Da (the mass of the smallest amino acid), which in the case of a b-ion would be a y-ion (). We have purposefully omitted this type of strategy because the small neutral losses of water and ammonia are often helpful in interpreting spectra and the a-type ion is particularly useful in identifying the b-ion series (). The MASCOT search engine uses a different approach to spectral filtering. MASCOT initially searches with a restricted set of high-intensity fragment ions and then iteratively repeats the search using the less intense peaks, until it is clear that the results are no longer being improved. This is incredibly effective at finding the best set of peaks in a spectrum, but it is not computationally efficient and does not allow for data compression. Unfortunately, the current batch of de novo and sequence tagging search algorithms do not allow the output of the peaks they select to be analyzed. Many of these programs use sophisticated peak picking algorithms and they are likely to produce similar, or even greater, improvements than seen with the chemical rule-based filters (). However, one advantage of using a simpler algorithm is that it is relatively fast. For example, it takes only 2.8 s to filter 1000 spectra (347 821 peaks) on a PC. The time estimate does not include input/output operations. Because CRF efficiently extracts the peaks coming from peptide fragmentations, PPV and the expectation value of the spectra are increased (and 4, respectively), while the number of random matches is reduced (). Interestingly, the best scoring matches from the unfiltered data typically do not improve as much as more marginal spectra. We think this is largely owing to the fact that the best scoring matches may leave little room for further improvement. The use of the chemical rule-based filters greatly improved the performance of the tested search algorithms as has been shown by ROC analysis (). CRF is easy to use and its performance compares favorably with the filters based solely on signal-to-noise or raw intensity measures. We hope this approach will be useful for the analysis of large-scale proteomics data.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
B.Reiz et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Chemical rule-based filtering of MS/MS spectra at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
