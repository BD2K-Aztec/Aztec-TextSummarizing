BioNetGen is an open-source software package for rule-based modeling of complex biochemical systems. Version 2.2 of the software introduces numerous new features for both model specification and simulation. Here, we report on these additions, discussing how they facilitate the construction, simulation and analysis of larger and more complex models than previously possible. Availability and Implementation: Stable BioNetGen releases (Linux, Mac OS/X and Windows), with documentation, are available at
IntroductionRule-based modeling is an approach for addressing combinatorial complexity in models of biochemical systems (). Instead of manually enumerating all possible species and reactions that can exist within a system, a rule-based model defines only the reactive motifs within macromolecular complexes and the interactions and modifications that involve those motifs. BioNetGen is an open-source software package for constructing and simulating rule-based models (). It has been used to model a variety of biological processes, including cell signaling, gene regulation and metabolism (, and references therein; see also bionetgen.org/index.php/ Model_Examples). Models are written in a human-readable, textbased modeling language known as BNGL (BioNetGen language). Numerous user-specified actions can be added to a BNGL model file, including generating a reaction network and performing deterministic or stochastic simulations. Models can also be exported to different formats, such as SBML () and MATLAB language (The MathWorks Inc., Natick, MA). Furthermore, BioNetGen interfaces with NFsim (), a 'network-free' simulator that avoids enumeration of species and reactions, which may be intractable for large models. RuleBender is a). Taken together, the BioNetGen/NFsim/RuleBender suite of tools () provides powerful capabilities for rule-based modeling and simulation. Until recently, however, there were several significant shortcomings: (i) BNGL models were limited to mass-action kinetics; (ii) network-based stochastic simulations were limited to computationally expensive 'exact' methods; (iii) network-free simulations were limited to fewer than a few million particles due to high memory load; (iv) there was no facility for importing models from SBML format. Each of these shortcomings has been addressed in the recent BioNetGen 2.2.x series of releases, as described below. Additional information can be found in extensive online documentation at http://bionetgen.org/index.php/Documentation (see Supplementary Information for specific links).
Additions
Functional rate lawsBioNetGen 2.2 introduces the ability to define arbitrary mathematical functions that can be used as rate laws. Functional rate laws are integrated into the BNGL grammar and are supported by both NFsim and the network-based simulators (deterministic and stochastic) included in the BioNetGen package. Functions are defined using 'observables,' which compute the concentrations of species with specified properties (), and can either be evaluated globally, i.e. over the entire system, or locally, over a specified molecule or molecular complex. Local functions greatly expand the expressiveness of BNGL because they enable a single rule to specify many reactions with rates that depend on the specific properties of the reacting species ().
Accelerated-stochastic simulations leaping is an approach for accelerating stochastic simulations of biochemical networks (). Numerous variants of s leaping have been proposed in the literature, including a multiscale variant known as the partitioned-leaping algorithm (PLA) (). In their simplest realizations, s-leaping methods are analagous to the explicit forward Euler method for solving ordinary differential equations (ODEs). Therefore, as with ODE integrators, higher-order and implicit versions of s leaping algorithms are possible. BioNetGen 2.2 includes an explicit Runge-Kutta implementation of the PLA (RK-PLA) that can be used on any model for which a reaction network can be generated. Additional information, including a performance analysis, is provided in the Supplementary Information.
Hybrid particle/population simulationNetwork-free simulation methods that do not enumerate species and reactions are often required to simulate complex models (). However, they are limited by the fact that memory usage increases linearly with the number of particles.introduced a hybrid simulation method that treats a user-defined set of species as population variables rather than as particles. This hybrid particle/population (HPP) approach avoids the memory costs associated with having large pools of identical particles and was shown to significantly reduce computational memory expense with no effect on simulation accuracy and little effect on run time (). HPP is implemented within BioNetGen 2.2 and can be run using NFsim version 1.11 or later.
SBML-to-BNGL translationSBML is a widely-used model exchange format in systems biology (). Models encoded in SBML are flat, i.e. their species do not have internal structure, which limits their utility for rule-based modeling. BioNetGen 2.2 includes an SBML-to-BNGL translator, called Atomizer (also available as a web tool at ratom izer.appspot.com), that can extract implicit molecular structure from flat species (). A full report on Atomizer and its application to the BioModels database () is currently in preparation. However,reported that an early version of the tool could recover implicit structure for about 60% of species in models within the database that contain 20 species. Thus, Atomizer makes available a large set of pre-existing models in a rule-based format, facilitating their visualization () and extension ().
Additional featuresBioNetGen 2.2 also introduces a number of additional features to those described above, including a null symbol ('0') that can act as a source or a sink in rules and new actions for performing parameter scans, generating MATLAB Executable (MEX) files, exporting to formats readable by third-party simulators (e.g. MCell (), and outputting graphical visualizations at different scales (). We have also developed parameter estimation tool called ptempest (available at http://github.com/RuleWorld/ ptempest) that combines Bayesian Monte Carlo methods() with parallel tempering (Earl and Deem,BNGL models may be constructed and edited in RuleBender as well as translated from an SBML model using Atomizer (either with the BioNetGen readFile action or the web application at ratomizer.appspot.com). Models can then be simulated in three ways: (1) with a built-in population-based network simulator (ODE, SSA, PLA) after explicit network generation; (2) as a hybrid particle/population (HPP) model in NFsim after partial network expansion ('lumping' species must be provided ()); (3) with NFsim directly. In all cases, output trajectories are passed back to RuleBender for display. BioNetGen also has a number of built-in methods for exporting to third-party formats, such as SBML and Matlab. (ODE: ordinary differential equations; SSA: stochastic simulation algorithm; PLA: partitioned-leaping algorithm; GML: Graph Modeling Language.)2005) to accelerate sampling. Many new simulation options have also been added, e.g. to allow simulation arguments to be loaded from file and to terminate a simulation if a user-defined logical condition is met. A comprehensive listing of all new actions and arguments added in BioNetGen 2.2 is provided in the Supplementary Information (see also http://bionetgen.org/index.php/BNG_Actions_ Args).
ConclusionBioNetGen is an active, open-source project that highly encourages contributions from interested members of the modeling community. Contact information, as well as numerous links to online documentation, is provided in the Supplementary Information. Ongoing development efforts include interfacing with spatial simulators (), free-energy-based modeling (), and improved support for community standards (e.g. SBML-multi, SED-ML). Recent independent efforts that leverage the BioNetGen framework include a standard for annotation of rule-based models () specified in BNGL or Kappa (), another widely-used rule-based modeling language and BioNetFit (), a parameter estimation tool for models simulated using either BioNetGen or NFsim.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
