RegaDB is a free and open source data management and analysis environment for infectious diseases. RegaDB allows clinicians to store, manage and analyse patient data, including viral genetic sequences. Moreover, RegaDB provides researchers with a mechanism to collect data in a uniform format and offers them a canvas to make newly developed bioinformatics tools available to clinicians and virolo-gists through a user friendly interface. Availability and implementation: Source code, binaries and documentation are available on http://rega.kuleuven.be/cev/regadb. RegaDB is written in the Java programming language, using a web-service-oriented architecture.
INTRODUCTIONAdvances in infectious diseases research require efficient collaboration and exchange of clinical and virological data.Researchers need access to large amounts of data to test hypotheses or extract valuable information through data mining (). For this purpose, RegaDB was developed as a free and open source data management and analysis environment for infectious diseases (). RegaDB runs on Windows, Linux or Mac OS X. The system can be installed within a hospital or institute so that the data stays within the clinical environment. RegaDB follows the idea of an integrated environment for bioinformatics analysis, such as the Genetic Data Environment (), ViroLab () and Geneious (). The difference is that RegaDB uses a relational database, and can be locally or remotely accessed. This allows RegaDB to be used for clinical management and/or research in one locality or for longterm data-sharing collaborations between different institutes.
DATABASE STRUCTURE AND TOOLSRegaDB's database enforces the data abstraction paradigm (). This approach ensures flexibility, as the database can be conveniently extended as needed without upgrading its schema in most of the cases (). All abstract data entities are connected to a central patient entity, including *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com attributes, tests, events, therapies and viral isolates. Attributes annotate a patient with information, which is typically of a clinical or epidemiological nature, e.g. the gender or transmission risk group. RegaDB implements tests as values that are obtained at a given moment in time, i.e. there is only one date associated with it. The results can be in vivo or in vitro measurements, appointments, as well as computational results obtained from a web service. General tests are used to store data extracted from patient samples, e.g. cell counts and viral loads. Tests can also be linked to viral isolates, e.g. typing and subtyping results, to drugs, e.g. therapeutic drug monitoring, or to a combination of an isolate and a drug, e.g. phenotypic and genotypic resistance interpretations. Events cover a specific time interval in the patient's history, i.e. have a start and end date, e.g. AIDS-defining illnesses or pregnancy. The default list of attributes, tests and events available in the system can be extended via the user interface. In this way, RegaDB can be tailored to the user's needs or research interests. Attributes, tests and events are annotated with a data type (numbers, strings, nominal values, etc.), which allows the user interface and data access layer to maintain data integrity. The therapy entity allows users to store the medication history of a patient. A single therapy consists of a start date, a stop date and a combination of drugs, i.e. a regimen, which the users can select from a list of both generic and commercial drug names. When the therapy has a stop date, the clinician can indicate a reason for ending or switching the treatment, e.g. resistance, side effects or adherence issues. A viral isolate contains one or more nucleotide sequences, allowing multiple sequences extracted from one viral genome to be grouped together. Once an isolate is added to RegaDB, the corresponding pathogen is determined by invoking a web service that implements a BLAST search procedure (). When RegaDB supports the pathogen, the appropriate reference sequence is loaded and used to perform a codoncorrect alignment with frame-shift detection and correction. The alignment procedure finds the protein reading frames encoded by the sequences that make up the isolate. This information, together with all detected point mutations, insertions and deletions, is stored in the database. The alignment web service implements the NeedlemanWunsch algorithm in C () to analyse large sequences efficiently. Depending on the pathogen determination returned by the web service, the viral isolate is directed to a typing web service () and/or resistance interpretation web service ().shows detailed information on reference sequences and bioinformatics tools available for the supported pathogens. RegaDB supports the use of bioinformatics tools published on the web as web services. All data can be viewed and edited through a web-based interface. Key parameters of a patient's clinical history are visualized in a patient chart as a time-line annotated with viral loads, CD4 counts, regimens and viral isolate time points. RegaDB can export patient details into a report document by replacing variables in a user-designed RTF template. Several tools are already available or are being developed, some of which by the users. Drug resistance interpretation can be performed according to several algorithms. For HIV, various versions of the Stanford algorithms (HIVdb,), the Rega algorithms () and the ANRS algorithms () are implemented. For each algorithm, a cumulative overview is available, whereby resistance detected in a patient is taken forward to the last sample. Evolution of a virus isolate is tabulated as amino acid changes compared with the previous isolate from the same patient. Another tool allows plotting a phylogenetic tree constructed from a set of sequences with a pre-defined similarity to a query sequence. To ensure the quality of the sequence database, a tool was developed that can be used to flag potential contaminations, errors in sampling or data entry, super infection or transmission chains, by detecting unusual intra-or inter-patient evolutionary distances. Attributes are synchronized with a central repository to ensure compatibility between different RegaDB instances. The central repository contains a collection of standardized data fields and corresponding values such as demographic information (country of origin, transmission risk group, etc.), test results (viral load, cell count, etc.) and drug names (both generic and commercial). In addition, this repository also provides access to the latest versions of drug resistance algorithms. Compatibility functionalities allow the system to be updated, with minimal effort, as new content becomes available.
OPPORTUNITIES FOR RESEARCHERSWhen the development of RegaDB started, several custom-made databases were available that allowed users to enter ambiguous representations of data, for example, different representations for the same medical compound. However, to facilitate efficient data exchange and to make the execution of aggregate queries possible, it is important that data are available in a structured format. By providing support for explicit data types and enforcing these data types through the user interface, RegaDB circumvents many difficulties that might complicate the exchange of data. RegaDB allows data to be exported in XML format from local data sources (hospitals, institutes), and these exports can be combined in a research database. Data from other databases can be imported via a generic import tool. RegaDB also provides a programming interface,which can be used to develop custom import programs to support more complicated data sources. A procedure to import data encoded in the HICDEP (hicdep.org) format directly into RegaDB is currently under development. A research database will generally be accessed via the Internet; therefore, authentication is an important security aspect. RegaDB supports password-based authentication by default. The authentication module abstraction allows for a straightforward implementation of alternative authentication back-ends (OpenId, Kerberos, etc.), which makes it possible for RegaDB to connect to existing user management systems. The application will only allow registered users to access the system. Once granted access to the system, a user is only able to access patient information that belongs to a dataset connected to the user's profile. The owner of the dataset can configure the access of users to this dataset, and revoke the access after a certain analysis or assignment is finished. Researchers can query RegaDB using the visual query tool, which allows users to define complex queries guided by a user interface. Query definitions can be saved and re-run every time an update of the data becomes available. Work is in progress to support the use of predefined SQL-based queries via the user interface. Query results can be exported to a CSV and/or FASTA file. It is possible to set-up an analysis workflow by configuring a query to execute a python post processing script. If the script generates statistical data in a graphical format, this is visualized in the query user interface after the query has been executed. When researchers make their tools available as web services, they can be easily integrated in RegaDB, lowering the threshold for clinicians and virologists to use such tools. RegaDB has been used in several collaborations including the Virolab EC project (virolab.org). Data from several European hospitals were stored in one RegaDB instance, resulting in a combined dataset of 48000 sequences. During the last phase of the project, we were able to combine our efforts with another EC project, EUResist (euresist.org), resulting in a combined database of 455 000 sequences. Another example of the utility of RegaDB is the collaborative database used within the Southern African Treatment and Resistance Network (SATuRN). This network has 24 member institutions working in Southern Africa, the region at the epicentre of the HIV epidemic. Currently there are 410 institutions using the SATuRN RegaDB for patient data management, data curation and research. Under SATuRN, 47000 genotypes with treatment and monitoring data have been collected. Using the built-in customized report and query functionality, data of specific attributes are selected, analysed and used to answer specific clinical and research questions (). In addition, members of the SATuRN project recently published a book () containing a series of case studies used for training. More than 1450 physicians and nurses have been trained through conferences, workshops and online web-tutorials.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
P.Libin et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
AVAILABILITY AND USAGE RegaDB is a software application that can be downloaded from the Internet and installed in a health care or research institute. Documentation, source files and binaries are available on http://rega.kuleuven.be/cev/regadb. Because of its modular and flexible design, RegaDB can be used in many different contexts and settings, from managing patient data in a clinical environment to setting up large-scale research collaborations. Currently, all RegaDB instances are private instances that can only be accessed by a restricted user base. Some of these instances are accessible on the Internet; others are only accessible from within the institute's intranet. The current version of the software is already used for storing genetic data of HIV-1, HIV-2, HTLV (Araujo et al., 2012) and HCV isolates and related patient and clinical information.
