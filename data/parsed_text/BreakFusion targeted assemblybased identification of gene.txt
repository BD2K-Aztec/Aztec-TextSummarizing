Despite recent progress, computational tools that identify gene fusions from next-generation whole transcriptome sequencing data are often limited in accuracy and scalability. Here, we present a software package, BreakFusion that combines the strength of reference alignment followed by read-pair analysis and de novo assembly to achieve a good balance in sensitivity, specificity and computational efficiency. Availability: http://bioinformatics.mdanderson.org/main/BreakFusion
INTRODUCTIONDespite recent progress, bioinformatics tools that analyze RNA-seq data are often limited in accuracy and scalability. Alignment-based tools () typically predict such large numbers of candidates that further examination of the data is impractical. Furthermore, many findings are artifacts derived from a large number of erroneous short reads produced by the next-generation sequencing (NGS) instruments or are read misalignments produced by the sequence aligners. Assembly-based approaches (Martin and) can potentially achieve higher accuracy because they leverage dependency among reads and are less sensitive to errors in individual reads. With sufficient coverage, longer and higher quality sequences can be assembled from short reads, resulting in improved specificity. However, existing assembly-based approaches () potentially lack sensitivity to rare events such as gene fusions because they are designed to reconstruct entire transcriptomes, rather than focus on novel sequences. We reason that a targeted transcriptome assembly strategy that focuses on assembling novel junction sequences can potentially achieve a better balance in sensitivity, specificity and computational efficiency. * To whom correspondence should be addressed.
METHODSHere we present an NGS Bioinformatics pipeline, BreakFusion that implements a targeted assembly approach for novel transcriptomic sequence discovery. BreakFusion consists of five steps, as illustrated in. The input is one or a set of whole transcriptome BAM files that contains mapped pairedend RNA-seq reads. The mapping can be performed using a set of algorithms such as BWA and TopHat, preferably including known splice junctions in the references to achieve good alignment. Step 1 identifies splicing breakpoints using a read-pair algorithm such as BreakDancer () or any splice mapping algorithm such as TopHat-Fusion (). Step 2 locally assembles short reads that are anchored around each breakpoint using TIGRA and produces a set of splice junction contigs that are supported by both mapped and one-end-anchored reads (). TIGRA is a de Bruijn graph-based assembler that is specially designed to construct all possible allelic sequences at loci of heterogeneous origin. It is sufficiently sensitive to identify low abundance alleles as long as their constituent kmers are observed at least twice in the reads. Step 3 aligns the junction sequences to the genome using BLAT (). Step 4 summarizes BLAT alignments into a single chimeric score that quantifies the likelihood of an
K.Chen et al.assembled junction sequence containing bona fide breakpoints relative to the genome. Step 5 annotates the breakpoints using UCSC databases and filters the breakpoints by mainly two factors: (i) the chimeric scores computed in Step 4, and (ii) the self-chain alignment annotation, which indicates whether the breakpoints are caused by misalignment in duplicated regions. Most steps in the BreakFusion pipeline are performed by previously published and well-attested algorithms. The chimeric scoring system in Step 4 is novel to this work. By default, BLAT does not produce a single hit for transcripts that span two chromosomes or distances >750 000 bp. Instead, it reports individual alignments for each of the sub-segments, with no direct indication of the existence of the chimeric structure and the level of confidence associated with it. To overcome such limitation, we first remove hits that are not unique (i.e. map to multiple regions). We then chain the remaining alignments into longer ones if they can form 1-monotonic maps (). We compute scores for chained alignment using the same BLAT formula that is used for each constituent alignment. We identify the best and the second best alignment after chaining, and compute a chimeric score using the following equation:,Where q * is the alignment score of the best chained alignment, q the second best, and q 0 is the length of the query sequence. This equation produces scores between 0 and 1.0. The score becomes high when the best alignment well explains the entire query sequence (q * approaches q 0 ) and the second best alignment is appreciably worse (q q * ). The constant 10 makes the scores sensitive to differences at the 10-bp scale.
RESULTSTo test BreakFusion's performance, we compared it with TopHatFusion and defuse () using four publicly available RNA-seq datasets: a prostate cancer cell line (NCIH660) and a matched lymphoblastoid cell line (GM12878) (), a breast cancer cell line (MCF-7) () and a chronic myelogenous leukemia cell line (K-562) (). BreakFusion achieved better sensitivity and specificity tradeoff in these tests (Supplementary Data). It also used substantially less CPU time. We further applied BreakFusion to analyze RNA-seq data for 155 acute myeloid leukemia (AML) samples as part of The Cancer Genome Atlas (TCGA) project. This dataset was also analyzed by the Genome Sciences Centre at the BC Cancer Agency (BCCA) using Tran-Abyss (), which resulted in 67 instances of experimentally validated fusions. BreakFusion was able to rediscover all these fusions and additionally predicted eight new instances of fusions, which were subsequently confirmed by the BCCA group (Supplementary Data).
DISCUSSIONTo the best of our knowledge, BreakFusion is the first approach that performs targeted assembly on RNA-seq data for fusion identification. The results of our experiments indicate that BreakFusion has achieved sensitivity and specificity comparable or better than other tools, and is clearly more computationally efficient. This, in our view, represents a methodology improvement that will benefit many projects that utilize NGS RNA sequencing data. Besides fusion discovery, in principle, BreakFusion can be applied to identify novel alternative splicing events. The component programs of BreakFusion are efficiently implemented in C++ and perl. It finished analyzing 155 TCGA AML BAM files in <2 h using 155 CPUs with 4 GB RAM each. BreakFusion is freely available for academic use at http:// bioinformatics.mdanderson.org/main/BreakFusion.
The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
