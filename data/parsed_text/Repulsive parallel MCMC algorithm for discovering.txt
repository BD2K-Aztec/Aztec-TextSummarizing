Motivation: The motif discovery problem consists of finding recurring patterns of short strings in a set of nucleotide sequences. This classical problem is receiving renewed attention as most early motif discovery methods lack the ability to handle large data of recent genome-wide ChIP studies. New ChIP-tailored methods focus on reducing computation time and pay little regard to the accuracy of motif detection. Unlike such methods, our method focuses on increasing the detection accuracy while maintaining the computation efficiency at an acceptable level. The major advantage of our method is that it can mine diverse multiple motifs undetectable by current methods. Results: The repulsive parallel Markov chain Monte Carlo (RPMCMC) algorithm that we propose is a parallel version of the widely used Gibbs motif sampler. RPMCMC is run on parallel interacting motif samplers. A repulsive force is generated when different motifs produced by different sam-plers near each other. Thus, different samplers explore different motifs. In this way, we can detect much more diverse motifs than conventional methods can. Through application to 228 transcription factor ChIP-seq datasets of the ENCODE project, we show that the RPMCMC algorithm can find many reliable cofactor interacting motifs that existing methods are unable to discover. Availability and implementation: A Cþþ implementation of RPMCMC and discovered cofactor motifs for the 228 ENCODE ChIP-seq datasets are available from
IntroductionThe motif discovery problem has been receiving renewed attention since recent experimental technologies, such as ChIP-seq, posed new challenges. The problem is to identify recurring patterns of conserved short strings that appear in a large fraction of nucleotide sequences.A genome-wide ChIP study produces thousands or more DNA fragments consisting of several hundred base pairs, which cover the binding sites of a transcription factor (TF). By discovering motifs in the given sequences, which are associated with known TF-binding motifs in a database, e.g. JASPAR (
1561This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.(), we can predict not only the regions bound by the primary TF but also the cofactors that modulate the TF activity (). Early methods of de novo motif discovery can be classified into either a model-based [MEME (), AlignACE (), ANN-Spec ()] or a word-count approach. These methods were designed on the assumption that the input sequences of $10 3 base pairs would range in size from 10 2 to 10 3. Hence, they do not scale to the size of ChIP-seq data and their fundamental methodologies have undergone reconstruction. However, most ChIP-tailored algorithms emphasize computational efficiency, and they sacrifice accuracy of motif detection because they use heuristics to speed up their computation time. The model-based methods employ either the EM algorithm () or Gibbs sampling (). The main computational load arises in the process of calculating the posterior probabilities over all fixed-length subsequences at every iteration. STEME (), a ChIP-tailored version of MEME, uses a branch-and-bound technique, so that negligible oligomers with significantly low probabilities are effectively removed. The word-count methods, regardless of old or new, rely on essentially the same strategy. All possible oligomers are counted with exact or the fuzzy matching for input sequences. Then, overrepresented oligomers are determined against background sequences. Similar motifs are merged to generate output motifs. To reduce the computational load in the counting operation, DREME () and CisFinder () adopt similar strategies. Starting from ' 100 oligomers with no wildcards, each oligomer is either left or removed recursively by adding a wildcard and by assessing its significance. Such methods run the risk of missing important motifs in earlier steps of the recursion. Hegma () is the fastest of current algorithms. A highly specific strategy based on Gray codes () is employed to avoid fuzzy matching so as to speed up the merging of similar motifs. However, this novel idea results in a degradation of the detection accuracy as will be shown later. The aim of this study is to derive a new algorithm that achieves high detection accuracy while maintaining the computational efficiency at an acceptable level. In particular, the proposed method is designed to detect many diverse motifs that previous methods are unable to discover. The proposed repulsive parallel MCMC (RPMCMC) algorithm is a parallel version of the widely used Gibbs motif sampler. One critical drawback of the standard Gibbs sampling, as with the EM algorithm, arises from the following fact: the posterior distribution is highly multimodal because many diverse motifs are present in given sequences. Once the generated Markov chain is absorbed to a locally high probability region, it is difficult to escape from that region within a finite time. This problem has received little attention in previous studies. MEME adopts a serial implementation of the EM algorithm that repeats the search with different initial conditions (). To reduce the possibility of becoming trapped in the same local optima, low prior probabilities are assigned to already-discovered motif sites in consecutive serial runs. However, such iterative methods take too long to be used for large ChIP data. RPMCMC is run on parallel interacting Gibbs samplers. A repulsive force comes into play when the trajectories of different chains near each other. Therefore, different chains are facilitated to explore different regions. Compared with the original method using a single chain, this all-at-once interacting parallel run can detect much more diverse motifs. In addition, the proposed method has other unique characteristics, for instance automated control of variable-length motifs, and the fast-clustering algorithm for many generated motifs in the summarization step. We implemented the RPMCMC algorithm with C, which is available from the Supplementary Website. The method was comprehensively tested on synthetic promoter sequences and 228 TF ChIP-seq datasets of the ENCODE project. In the synthetic promoter analysis, RPMCMC found around 1.5 times as many embedded motifs as existing methods did. For the ChIP-seq datasets, the RPMCMC algorithm reported 444 reliable cofactors in total, 219 of which were not discovered by either of the recently published ChIP-tailored algorithms: DREME and Hegma. On the Supplementary Website, we provide all the discovered cofactor motifs which were associated with annotated motifs in JASPAR.
Methods
ModelWe use the ZOOPS model () that allows zero or one motif occurrence per sequence. Assume that we are given a set of n sequences, S   fs  1 ;. .. ; s  n g, where sequence s  i is of length L i (i  1;. .. ; n). The reverse complement of the given sequence set is denoted by S   fs  1 ;. .. ; s  n g. Our model uses the set of n concatenated sequences, S  fs 1 ;. .. ; s n g, where s i  s  i ; s  i  (i  1;. .. ; n). The motif presence indicator z i takes the value 1 or 0 according to the presence or absence of a motif in sequence s i. In a sequence s i with z i  1, a K-mer motif is positioned at the start site u i 2 f1;. .. ; L i  K  1; L i  1;. .. ; 2L i  K  1}. The kth element of the motif follows the position-specific multinomial distribution with h k  h k;a ; h k;c ; h k;g ; h k;t  T , which represents the nucleotide preference of the kth element to A, C, G, T. Thus, we have H  h 1 ;. .. ; h K , a position probability matrix (PPM). We treat the motif length K as an unknown parameter. The background sequences are assumed to follow independent multinomial trials with the background probability denoted by h 0  h 0;a ; h 0;c ; h 0;g ; h 0;t  T. Given an input S, the objective is to estimate the PPM H with the unknown motif length K and the background probability h 0 where the latent variables comprise U  fu 1 ;. .. ; u n g and Z  fz 1 ;. .. ; z n g. The likelihood is then pSjU; Z; K; H; hwhere s i;j denotes the types of bases at the jth position in s i , and I is the indicator function. The first component of the right-hand side in the first line is the probability of all letters in the n input sequences, which is calculated under the background multinomial distribution. The second component is the likelihood ratio that assesses overrepresentation of the K-mer segmented sequences against the background. As the priors on the multinomial parameters, we use thethe concentration parameters fixed at set values. The prior on H is conditioned by the motif length K. The equal probabilities are assigned to any K with a range between the predetermined minimum and maximum motif lengths, K min and K max. To complete the joint posterior of all the unknown parameters, we prescribe the priors on U and Z as follows:pu i  ujK  1 2L i  K  1 for i  1;. .. ; n; pz i  1jK  c K for i  1;. .. ; n:The start site u i of a motif occurs with equal probability in all the possible positions in sequence s i. The motif presence indicator z i follows the binomial distribution with the success probability c K for each i (0 c 1). Note that although a specific type of modeling is presented here, our current program allows for a certain amount of flexibility in the model specification. For instance a user can choose a higher-order Markov background model up to third order (da) and a position specific prior for the motif start sites ().
Multiple motifs and local trapLet x denote all the unknowns, U; Z; K; H and h 0. To obtain an estimate approximately with the posterior pxjS, we can employ a Gibbs sampling method. However, the Gibbs motif sampler has a serious drawback in that inherent presence of a great many different motifs causes a complex energy landscape of the posterior distribution. In particular, once the trajectory of a Markov chain comes into a locally high-probability region which corresponds to one of the existing motifs, it is difficult to effect a transfer into another region within a finite runtime. The EM algorithm might exhibit the same defects. As an illustration, we show a result of the simple Gibbs motif sampling. The dataset consists of 10 3-bp-long synthetic promoter sequences of 300 human genes. The Gibbs sampling was repeated 20 times under different initial conditions. As shown in, all the chains were trapped at similar AT-rich motifs for a long duration. Exceedingly high probabilities might be concentrated on the AT-rich segments and all the chains were absorbed to those domains of the posterior distribution. This is a typical scenario.also shows the result of RPMCMC, which was run with 20 interacting parallel Gibbs samplers as described below. By performing just an allat-once parallel run, RPMCMC could capture much more diverse motifs than the independent Gibbs sampling could.
RPMCMC algorithmThe RPMCMC algorithm is derived by creating an augmented system p A x 1 ;. .. ; x M jb, which consists of M exact copies p i x  pxjS (i  1;. .. ; M) of the posterior distribution and the repulsive force function wx 1 ;. .. ; x M :Each x i is called a replica. The repulsive force function w imposes a stronger penalty on closer replicas. The parameter b controls the force severity, i.e. a greater b produces a stronger repulsion and vice versa. Drawing samples of x 1 ;. .. ; x M simultaneously from Equation (2), the M sample paths tend to move toward different regions. Furthermore, a replica trapped in a locally high probability state can be pushed to other regions by the repulsive force derived from approaching replicas (). It is important to see that the use of a non-zero force severity brings bias to the samples from p A with respect to the posterior distribution. With b  0, which removes the repulsion from p A , an unbiased sample set can be obtained. The repulsive force function is defined as a function of PPMs, wx 1 ;. .. ; x M  wH 1 ;. .. ; H M . Let DH i ; H j  be an increasing function of the dissimilarity between H i and H j. With this, the repulsion is modeled byDH i ; H j :Replica i interacts with its nearest neighbor j  , such that j   arg min j:j<i DH i ; H j . The dissimilarity D is measured bywhere A  fk; hjk  1;. .. ; max1; K j  K i  1; h  1;. .. ; max1; K i  K j  1g and K   minfK i ; K j g. In general, K i and K j , the column sizes of H i and H j , are different. The distance of the PPMs is assessed after associating a smaller-sized PPM with the same-sized submatrix of the other, H i;k:kK  and H j;h:hK  and by choosing the smallest Frobenius norm in all possible alignments k; h 2 A. The second term is a gap penalty for the difference of motif lengths where c > 0.Repulsive parallel MCMC algorithm for motif discoveryTo obtain an estimate from the augmented posterior, Gibbs sampling is combined with several techniques such as the reversiblejump MCMC method () and the slice sampler (). The full details of the RPMCMC procedure are described in Supplementary Method S1. The proposed method generates Markov chains of the M replicas in parallel. Then, different chains move toward different regions of the state space due to the repulsion. We can discover a much wider variety of motifs with an all-at-once interacting parallel simulation than with the independent method. Conventional Gibbs sampling with M different initial seeds (as shown in the previous subsection) can be derived by setting the zero force severity, b  0, to RPMCMC. Suppose that we are given a sample set of size N the jth sample of the ith replica. Obviously, the repulsive force leads to biased samples with respect to the target p A x 1 ;. .. ; x M j0 in Equation (2) at the zero force severity. To correct this bias, the importance sampling is used, which assigns a weight to each sample asThe ratio between the target (zero force) and the biased distribution (b > 0) becomes the inverse of the repulsive force function. Note that the M replicas x j i (i  1;. .. ; M) in the jth ensemble share the same weight. As shown in Supplementary Method S1, our current implementation does not parallelize the process of updating the M Markov chains. We use multi-core processors only for counting the nucleotide frequencies when renewing the motif start sites.
Post-processing: clustering and rankingRPMCMC produces many redundant outputs with slight variations. We reduce the redundancy by grouping the outputs into g clusters, C 1 ;. .. ; C g , based on the dissimilarity of the sampled PPMs. The procedure is as follows (seeiii. Set k  1 and repeat (a)-(d) until no samples are left:(a) Initiate the kth cluster C k  fx 1 g by a singleton of the sample that is ranked first in g. Let l k  x 1 be the cluster representative.(b) Collect all samples satisfying the condition DH 1 ; H i  k where H i denotes the PPM of x i. These samples are integrated into cluster C k ; C k  fx i jDH 1 ; H i  k; i  1;. .. ; pg.(c) Discard the collected samples in C k from the ordered sequence; g g n C k. Let p be the length of g and rearrange g according to the likelihood values. (d) If g is empty, terminate the computation. Otherwise, let k k  1 and go back to step (a).The method operates with a single input parameter k that controls the number g of clusters. Samples within D k are assigned to the cluster representative l k , which is the one to achieve the highest likelihood within the kth cluster members. Denote the p  M  N samples and their importance weights byWith the g reduced samples fl 1 ;. .. ; l g g, we define an approximated posterior distribution byThis is a mixture of the g probability mass functions Ix  l k  at l k. Mixing rate w  k is the sum of the importance weights associated with the corresponding cluster C k. PPMs and the motif start sites in fl 1 ;. .. ; l g g are of primary interest for motif discovery. We generate a ranked list of the reduced discovered motifs, which are ordered according to the weights w  k .
Performance evaluationWe report the performance of several motif discovery algorithms on two types of data: (i) promoter sequences into which strings generated from PPMs in the JASPAR CORE database are planted and (ii) 228 TF ChIP-seq datasets of the ENCODE project. We evaluate the performance for each type of data as follows:(i) Given the nucleotide positions of known and predicted motifs, recallthe abbreviations SN and PPV according to convention). For given J known motifs, we define slightly modified SN and PPV for the evaluation of multiple output motifs. Let p j be the output that achieves the most overlapping predicted sites with the jth known motif among the g outputs (if there are two or more outputs having the same number of overlapped nucleotides, the one with the higher rank given by a motif finder is chosen). Then, the recall and the precision are computed asSN j  # of nucleotides in motif j overlapped by output p j # of nucleotides in motif j ; PPV j  # of nucleotides in motif j overlapped by output p j # of nucleotides in output p j :A low SN statistic indicates the lack of ability to discover planted multiple motifs and a low PPV statistic can be a signal). For a given predicted PPM, TOMTOM outputs the matching scores to all annotated TFBSs (the name of TFs) in JASPAR with the statistical significances (E-values). For each algorithm, a diversity of the discovered motifs is evaluated with the number of known motifs in JASPAR CORE that are matched significantly to the produced PPMs with the acceptable level of significance at E-value less than 0.05. In addition, we use the log-likelihood ratio (LLR) to evaluate K-mer binding sites of a predicted motif:where f r;k (r 2 fa; c; g; tg; k 2 f1;. .. ; Kg) is the relative frequency of nucleotides at each position in a predicted site, b  b a ; b c ; b g ; b t  T is the relative frequency of nucleotides of the background. The output consists of n 0 motif subsequences. A higher LLR indicates a better likeliness of the K-mer instances to be a motif in terms of a combined characterization on the degree of overrepresentation relative to the background and the total information content.
Results and discussion
Synthetic promoter sequenceThe performance of RPMCMC was tested on synthetic datasets against two ChIP-tailored algorithms, DREME and Hegma, and a classical algorithm, Weeder. The datasets were derived from nonredundant sets of randomly selected n 2 f300; 600; 1200; 2500; 5000g promoter sequences obtained from UCSC.hg19 with two different kinds; one composed of fixed-length sequences of 1000 bp and the other of variable-length sequences varied between 200 and 2000 bp. Oligomers generated by randomly chosen 10 JASPAR CORE PPM collections were planted into randomly selected start sites, so that each sequence has eight motifs on average. For each data size n, we prepared 20 different sequence sets. With this ground truth, we measured the change in recall and precision. All parameters of RPMCMC and the specified Weeder options are listed in. For DREME and Hegma, we employed the default parameters. The parameters of RPMCMC were empirically chosen.(a) summarizes the SN and PPV values as a function of n for RPMCMC, Hegma and Weeder. DREME was removed from this figure because there was no way of calculating SN and PPV due to the lack of outputs on motif sites in the distributed program. The numbers of outputs from RPMCMC, Hegma and Weeder were 85.7, 214.76 and 13.3 on average, respectively. It can be seen that RPMCMC outperformed the other methods. For the fixed-length datasets, RPMCMC delivered SN values around 1.7 times higher than those of the other two methods. The PPVs of RPMCMC were around 1.5 times higher than those of Hegma. As shown in(b), the results on the variable-length datasets were similar to those on the fixed-length datasets except that the performance of Hegma was significantly degraded. We analyzed the cause of the observed low SN and PPV statistics for Hegma and Weeder, as illustrated with the results on the fixedlength datasets. It was found that Hegma has a strong tendency to divide planted regions of a motif into a few different predicted motifs. Such incorrectly fragmented outputs acted to increase PPV slightly but resulted in the observed low SN. A distinctive characteristic of Weeder is the fairly low PPV, whereas several comparative studies reported Weeder to be one of the best performing algorithms among early motif finders (). A region predicted by Weeder tends to include not only a planted motif region but also many background regions. RPMCMC could achieve much higher SN and PPV than the others could.Hegma and DREME were executed using the default settings.. Performance comparison among RPMCMC, Hegma and Weeder on synthetic datasets: (a) fixed-length sequence sets and (b) variable-length sequence sets. Motifs were generated according to the JASPAR CORE PPM collection and were inserted randomly into a set of promoter sequences. SN (left) and PPV (right) values of each method are plotted against the varying sequence sizes, n 2 f300; 600; 1200; 2500; 5000g(a) gives the computation time for each method. RPMCMC was implemented in C. We used the C programs for DREME, Hegma and Weeder, which are available on the authors' websites. All the tests were conducted on Intel V R Xeon Phi TM coprocessors with 61-core CPUs and 48 GB of main memory. In terms of computation efficiency, Hegma outperformed the others and RPMCMC was comparable to DREME. In particular, the computation times of RPMCMC and DREME were about a 10000th those of Hegma. RPMCMC would sustain an acceptable level of computation time, and furthermore, it might be possible to render the algorithm more efficient. The bottleneck in RPMCMC is in the process of calculating the posterior probabilities of the motif start sites u i (see details in Supplementary Method S1): with a given PPM,1 times calculations were necessary to perform in every iteration over all possible K-mer consecutive subsequences in S. This process can fully be parallelized into independent processing elements. Alternatively, we could use a branch-and-bound technique as in STEME that effectively prunes subsequences with negligibly low probabilities. We remark on the difficulty in detecting the burn-in time for RPMCMC. An initial portion of the Markov chain samples should be discarded because the chain approaches its stationary distribution () following a sufficient burn-in period.shows the process of evolving the likelihood during a RPMCMC run. The series of the likelihood values remained instable, which indicates a fairly slow mixing of the Markov chain because the target distribution was inherently multimodal and the parallel interacting chains switched their target local modes successively. In general, it is difficult to deal with a diagnostic of burn-in periods that looks for multimodality of the posterior distribution. At the current moment, we do not have a specific idea other than an obvious approach of giving as long as possible for a trial move.
ENCODE ChIP-seq datasetsUsing RPMCMC with the default parameters given in, we predicted the cofactor motifs of the primary TF for each of the 228 datasets of ChIP-seq experiments in the ENCODE project (). FASTA files were produced by clipping the sequences of UCSC.hg19 at the locations recorded in SYDH TFBS narrowPeak files (available from NCBI's Gene Expression Omnibus using the accession number GSE31477). We removed datasets that had only a few sequences after removing fragments with lengths less than 200 or more than 500 from the obtained FASTA files. Also, we removed datasets which have more than one percent of sequences including blacklist regions reported on https://sites.google.com/site/anshulkundaje/projects/blacklists. In this way, we obtained the 228 datasets from the total of 359 datasets. The numbers of the input sequences ranged from 205 to 49 211. RPMCMC produced 51149 output motifs for each dataset. A discovered motif, for instance fU k ; H k g in l k , was regarded as being significantly enriched if it appeared in 5% or more of the input sequences, i.e. P n i1 z i =n!0:05. At the acceptable level of significance on the TOMTOM's E-values 0:05, approximately 15 significantly enriched outputs on average could have correspondence to one of the experimentally validated TFBSs in JASPAR CORE. In Supplementary Data S1, we provide the lists of de novo cofactor motifs for all TF-ChIP datasets with the results of JASPAR annotations. In the experiments, Hegma produced a far greater number of outputs (1081 outputs on average over all datasets) than RPMCMC (110 outputs) and DREME (49 outputs). The outputs of Hegma possibly included many redundant motifs. Removing motifs with P n i1 z i =n < 0:05 from the total outputs, the average numbers of outputs of Hegma, RPMCMC and DREME dropped to 24, 110 and 33, respectively. The computation times of each algorithm for 10 selected datasets including the smallest and the largest dataset are shown in(b). Compared with the experiment with the synthetic datasets, the computation times of RPMCMC were a little inferior to those of DREME for the ChIP-seq datasets. RPMCMC would still sustain an acceptable level of computation time. As discussed in the previous subsection, the current implementation of the RPMCMC algorithm is yet to be optimized for speed. As shown in(a), the numbers of known motifs significantly matched to the outputs of RPMCMC (E-values 0.05) were larger than those of Hegma and DREME for 74% of the 228 datasets. Although RPMCMC produced the largest numbers of outputs among the three methods, the LLR values of the discovered motifs of RPMCMC were much higher than those of the others as in(b). This indicates that RPMCMC has a great potential to mine many reliable diverse motifs that are undetected by the existing methods.shows 15 cofactors that were predicted by RPMCMC on a ChIP dataset (wgEncodeSydhTfbsHepg2Nrf1IggrabPk) in which the binding sites of NRF1 were studied in HepG2. The binding sites of RPN4 and USF1 were detected only by RPMCMC. It was reported that both RPN4 and NRF1 are involved in the same proteasome activity (),and the interaction of USF1 and Nrf1 is involved in the transcriptional regulation of FMP1 gene ().summarizes the detection ability to discover diverse motifs based on a Venn diagram of all matching motifs produced from the analyses of the 228 datasets. The outputs of RPMCMC contained almost all of the outputs of DREME and Hegma, and, notably, 219 annotated cofactors were uniquely discovered by RPMCMC.
Concluding remarksIn the motif discovery problem, the direct use of a Gibbs sampling method revealed an inability to find latent diverse motifs even in a fairly small number of input sequences. In the application for only 300 input sequences, all simulations with different initializations became trapped in the AT-rich motifs, which are of little significance in practice. This highlighted a critical drawback of the Gibbs sampling methods. The same is true for the EM algorithm. Because biological sequences generally contain rather diverse conserved patterns, which are sometimes biologically meaningless, the posterior distribution exhibits a very complex landscape as it includes many locally high probability regions. Our view is that solving this problem is the essence of improving the accuracy of motif discovery. Motivated by this, we presented a new motif discovery method called RPMCMC, which is a parallel variant of the widely used Gibbs motif samplers. The rather simple idea is to run the Gibbs motif samplers in parallel by making use of the repulsive force on different samplers. With all-at-once sampling, we could discover diverse motifs by which the parallel samplers divide their responsibility in the overall search region. As another contribution, we provided a list of predicted cofactor motifs that were overrepresented in the 228 ENCODE ChIP-seq datasets. RPMCMC can potentially mine promising annotated motifs which other word-count methods fail to find. To narrow down things to truly functional cofactor sets, it is necessary to conduct further validation experiments.is the ChIPed TF and the rest are the predicted cofactors. All motifs, which could be annotated at E-value 0.05 according to JASPAR, are shown with the E-values of TOMTOM (second column) and the ranking by RPMCMC (third column). The last two columns indicate the presence (P) or absence (A) of the motif in the outputs of Hegma and DREME, respectively.
H.Ikebata and R.Yoshida at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
