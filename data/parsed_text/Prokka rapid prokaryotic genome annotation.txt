The multiplex capability and high yield of current day DNA-sequencing instruments has made bacterial whole genome sequen-cing a routine affair. The subsequent de novo assembly of reads into contigs has been well addressed. The final step of annotating all relevant genomic features on those contigs can be achieved slowly using existing web-and email-based systems, but these are not applicable for sensitive data or integrating into computational pipelines. Here we introduce Prokka, a command line software tool to fully annotate a draft bacterial genome in about 10 min on a typical desktop computer. It produces standards-compliant output files for further analysis or viewing in genome browsers. Availability and implementation: Prokka is implemented in Perl and is freely available under an open source GPLv2 license from http://
INTRODUCTIONGenome annotation is the process of identifying and labeling all the relevant features on a genome sequence (). At minimum, this should include coordinates of predicted coding regions and their putative products, but it is desirable to go beyond this to non-coding RNAs, signal peptides and so on. There are various online annotation servers (). The NCBI provides a Prokaryotic Genomes Automatic Annotation Pipeline service via email, with a turn-around time measured in days. RAST is a web server for annotating bacterial and archaeal genomes that provides annotation results in under a day (), and xBASE2 does similar in a few hours (). These classes of tools are valuable, but they are not useful where throughput or privacy is critical. Here we present Prokka, a command line software tool that can be installed on any Unix system. Prokka coordinates a suite of existing software tools to achieve a rich and reliable annotation of genomic bacterial sequences. Where possible, it will exploit multiple processing cores, and a typical bacterial genome can be annotated in $10 min on a quad core desktop computer. It is well suited to iterative models of sequence analysis and integration into genomic software pipelines.
DESCRIPTION
InputProkka expects preassembled genomic DNA sequences in FASTA format. Finished sequences without gaps are the ideal input, but it is expected that the typical input will be a set of scaffold sequences produced by de novo assembly software. This sequence file is the only mandatory parameter to the software.
AnnotationProkka relies on external feature prediction tools to identify the coordinates of genomic features within contigs. These tools are listed in, and all of them, except for Prodigal, provide coordinates and appropriate labels to describe the feature. Proteins coding genes are annotated in two stages. Prodigal identifies the coordinates of candidate genes, but does not describe the putative gene product. The traditional way to predict what a gene codes for is to compare it with a large database of known sequences, usually at a protein sequence level, and transfer the annotation of the best significant match. Prokka uses this method, but in a hierarchical manner, starting with a smaller trustworthy database, moving to mediumsized but domain-specific databases, and finally to curated models of protein families. By default, an e-value threshold of 10 6 is used with the following series of included databases:(1) An optional user-provided set of annotated proteins. These are expected to be trustworthy curated datasets and will be used as the primary source of annotation. They are searched using BLAST blastp ().(2) All bacterial proteins in UniProt () that have real protein or transcript evidence and are not a fragment. This is $16 000 proteins, and typically covers 450% of the core genes in most genomes. BLAST is used for the search.(3) All proteins from finished bacterial genomes in RefSeq for a specified genus. This captures domain-specific naming, and the databases vary in size and quality, depending on the popularity of the genus. BLAST is used for this and is optional.(4) A series of hidden Markov model profile databases, including Pfam () and TIGRFAMs (). This is performed using hmmscan from the HMMER 3.1 package (Eddy, 2011).(5) If no matches can be found, label as 'hypothetical protein'.
OutputProkka produces 10 files in the specified output directory, all with a common prefix. These are described in.
RESULTSProkka was designed to be both accurate and fast. To assess accuracy, we compared the annotations of Prokka, RAST and xBase2 for the highly curated Escherichia coli K-12 genome. All methods were told it was an E.coli genome.shows that Prokka produced an overall better annotation than both RAST and xBase2. This result could vary for less well-studied or draft genomes. Prokka uses parallel processing to decrease running time on multicore computers. The most time-consuming steps are BLAST and hmmscan, which both support multiple CPUs natively. However, Prokka is more efficient if it runs multiple single CPU threads on subsets of the data, which it achieves using GNU parallel (). Experiments on our 64-core AMD Opteron server on single genomes show linear speedup with up to eight cores and sublinear gain thereafter. However, for much larger bacterial meta-genome datasets, linear speedup is observed for many more CPUs. To annotate the E.coli K-12 genome on a typical quad-core desktop computer takes about 6 min.The bold denotes the best performing tool (column) for that attribute (row). The italics are ''subsets'' of the ''Total CDS'' section.) Ribosomal RNA genes (rRNA) Aragorn () Transfer RNA genes SignalP () Signal leader peptides Infernal () Non-coding RNA
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Prokka at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
