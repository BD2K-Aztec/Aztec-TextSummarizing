Motivation: Advances in high-resolution microscopy have recently made possible the analysis of gene expression at the level of individual cells. The fixed lineage of cells in the adult worm Caenorhabditis elegans makes this organism an ideal model for studying complex biological processes like development and aging. However, annotating individual cells in images of adult C.elegans typically requires expertise and significant manual effort. Automation of this task is therefore critical to enabling high-resolution studies of a large number of genes. Results: In this article, we describe an automated method for annotating a subset of 154 cells (including various muscle, intestinal and hypodermal cells) in high-resolution images of adult C.elegans. We formulate the task of labeling cells within an image as a combinatorial optimization problem, where the goal is to minimize a scoring function that compares cells in a test input image with cells from a training atlas of manually annotated worms according to various spatial and morphological characteristics. We propose an approach for solving this problem based on reduction to minimum-cost maximum-flow and apply a cross-entropyâ€“based learning algorithm to tune the weights of our scoring function. We achieve 84% median accuracy across a set of 154 cell labels in this highly variable system. These results demonstrate the feasibility of the automatic annotation of microscopy-based images in adult C.elegans. Contact:
INTRODUCTIONComprehensive gene expression profiling using high-resolution images from in situ hybridization or fluorescent reporter experiments has become feasible owing to advances in imaging technology and the growing availability of genomic resources. Image-based gene expression analysis is especially promising for the study of Caenorhabditis elegans, as the fixed developmental lineage of all 959 cells in the adult worm permits, at least in principle, direct comparison of expression values of reporter genes in analogous cells from different individuals. In practice, however, the process of identifying the cells in an image of an adult worm is usually performed manually, which is extremely tedious and time-consuming. Owing to the significant expertise required for accurate cell identification, most in situ analyses of gene expression in adult C.elegans to date have been limited to much lower regional resolution. A crucial step in making high-resolution global gene expression analysis possible in the worm is to develop computational approaches that can extract expression data from images, thereby allowing high-throughput conversion of unstructured image data into well-structured gene expression tables suitable for computational analysis. Previous methods for single-cell gene expression analysis in model organisms have largely relied on time-series information and region markers to map the locations of individual cells (). In C.elegans, however, tracking cell lineages is extremely difficult after the embryonic stage owing to the amount of time required for monitoring the development of each individual worm and the large morphological changes that take place during development. Therefore, techniques that allow mapping of single cells without the assistance of time series information are needed. For worms in the first larval stage (L1) following embryonic development, the absolute and relative spatial locations of individual cells are highly constrained. Based on this insight, a marker-guided spatially constrained bipartite matching algorithm was previously developed for labeling cells in 3D images of L1 worms (). This method was shown to achieve high accuracy (86%) for annotating 357 out of the 558 cells present in the L1 developmental stage (). For adult C.elegans, however, the cell labeling task is substantially more difficult. In addition to a near doubling of the number of somatic cells from 558 to 959, thousands of germ line cells are also present in the adult worm resulting in 2500 3500 total cells. The additional germ line cells occupy locations near somatic cells of interest throughout the trunk of the worm, which poses a substantial difficulty for annotation approaches that rely on location-based features alone. Moreover, the number of somatic cells is variable in the adult worm unlike worms at the L1 stage, further decreasing the effectiveness of spatial cues for cell identification. Methods have been proposed that combine the segmentation of cells from the 3D images and their label annotation into a single step for the L1 worm () to improve the overall accuracy on the set of 82 muscle cells. This method requires cell-specific markers to be consistently expressed in a subset of cells and again relies on an invariable cell lineage. *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.comMore concretely, although the adult C.elegans is post-mitotic, meaning no additional somatic cell divisions take place once development is complete, not every individual produces precisely the same number of cells. In our data, we have observed a high degree of variability in a set of four intestinal cells, which may each undergo one additional division to give rise to two daughter cells. To accurately assign labels to the cells in an individual, it is crucial to recognize whether the parent intestinal cell or the two daughter cells are present. In this article, we formulate the problem of labeling cells in 3D images of adult C.elegans as a combinatorial optimization problem. Our method builds on prior work by using a rich scoring function that incorporates additional features beyond spatial location, such as cell size, intensity of a muscle-marker gene and neighborhood density. We extend our formulation to accommodate the cell number variation that arises owing to post-embryonic cell division. Finally, we show how to solve the resulting optimization problem efficiently via reduction to minimum-cost maximum-flow, and describe a straightforward cross-entropybased algorithm for fitting parameters of the model. We test the method on a set of 25 manually curated images of day 1 adult worms. Using our algorithm, we achieve 84% median accuracy on a subset of 154 cells in the adult worm, demonstrating the feasibility of automated methods for this task.
METHODS
Overview of methodIn this section, we present methods for automatic annotation of adult worms. Images in the adult were obtained using an experimental protocol similar to the approach described in previous work that performed automated single-cell annotation to obtain high-resolution gene expression data in the larval worm (). In these images, single cells are visualized through a combination of 4 0 ,6-diamidino-2-phenylindole (DAPI) staining of DNA in all cells (shown in the blue channel), and green fluorescent protein (GFP) expression in a subset of nuclei (shown in the green channel). These two complementary approaches enable detection of all cells within a worm, and identification of specific marker cells to guide cell labeling.shows a sample image of a worm where the 3D images have been projected along the z-axis. Previous work () attempted to solve the annotation task for worms in the first larval stage (L1) using a marker-guided twostage bipartite matching algorithm. In this approach, unlabeled cells in an input worm image were matched with annotated cells from a reference atlas on the basis of cell location. This hierarchical strategy focuses on a small subset of GFP-marker expressing cells before considering all cells in the L1 worm. It includes a heuristics approach that through an iterative graph pruning scheme imposes relative spatial constraints on cell labelings. Because of the highly stereotyped spatial arrangement of cells within worm images (), location-based features alone were sufficient to obtain good accuracy for cellular annotation at this early stage of development. As discussed in the preceding section, however, adult worms pose a substantially greater challenge for cellular annotation than L1 worms. To achieve reasonable accuracy in adult worms, which have an order-ofmagnitude more cells in total, we propose an approach that incorporates additional features into a cost function that, when used to solve the annotation task, increases accuracy compared with using location alone. We first formalize the task of label assignment as a combinatorial optimization problem, then introduce the set of features used in the cost function. We show how the optimization problem can be solved using a minimum-cost maximum-flow algorithm, and propose simple extensions that allow for the explicit incorporation of additional, variable, cell division events during late development. We finally describe the parameter estimation process used to assign weights for these features.
Formulation of cell lineage annotation as a combinatorial optimization problemSuppose that a 3D input image contains p cells, x  x 1 , x 2 ,. .. , x p , each of whose locations and boundaries have already been extracted in a preprocessing step. Let y  y 1 , y 2 ,. .. , y p  denote the corresponding labels that we wish to predict for each cell, where y i 2 Y for some set of candidate labels Y  f' 0 , ' 1 ,. .. , ' q g. Here, we assume that ' 0 is the label used to denote cells that have no specified annotation. We refer to this label as the dud label. ' 1 , ' 2 ,. .. , ' q correspond to the q different types of cells identified by an expert human annotator for images in our training set; in our work, for example, ' 1 through ' 107 represent different types of muscle cells found in adult worms, including 95 body wall muscles, ' 108 through ' 116 represent different types of hypodermal cells and ' 117 through ' 142 are 26 different intestinal cells. Finally, ' 143 through ' 154 are a set of intestinal cells that participate in variable cell division, which we will address later. The task of determining the appropriate label for each cell can be posed as a combinatorial optimization problem in which(i) Each cell x i is assigned exactly one label from Y, (ii) Each label ' j (for j 6  0) is assigned to exactly one cell and (iii) The dud label ' 0 may be assigned to multiple cells (e.g. all germ line cells in the training data are given the label ' 0 ). Let a ij  2 f0, 1g pq1 be a matrix whose entries a ij are set to 1 whenever cell x i is assigned label ' j , and 0 otherwise. Similarly, let c ij  2 R pq1 be a matrix of costs for each possible assignment of cell to label. Formally, the labeling task can be written as the following integer programming problem:,. .. , q a ij 2 f0, 1g 1where the constraints ensure that all cells are assigned exactly one label, and vice versa.. This image of a day 1 adult hermaphrodite contains DAPI-stained nuclei, visible in blue, and the GFP body wall muscle reporter in a subset of cells in green. The 3D image is projected along the z-axis to create this 2D image. In the figure, the heterogeneity of the worm cell shapes is easily visible, including the elongated shape of the green muscle cells, the large number of germ line cells (white arrowhead) and the large intestinal cells (red arrowhead) i19Automated cellular annotation of adult C.elegans
Defining cost matricesThe choice of costs c ij  is the key factor in determining the quality of the predicted labelings from our bipartite matching algorithm. In this section, we describe an approach for constructing cost matrices that takes into account multiple aspects of compatibility between a cell x i and a putative label ' j :(i) Cell location: A 3D vector indicating the location of a cell x i in worm-coordinate space with each dimension standardized to have zero mean and unit variance.(ii) Cell size: A scalar value indicating the size of a cell x i as measured by the number of voxels contained in the cell object.(iii) GFP expression levels: A scalar value indicating and mean green channel voxel values in the cell object, standardized within each worm to have zero mean and unit variance across all cells.(iv) DAPI intensity: Two scalar values indicating the mean and the standard deviation of the blue channel voxel intensities in the cell object, standardized within each worm to have zero mean and unit variance across all cells.(v) Neighborhood: Two scalar values indicating the number of cells within a certain distance of the cell's center (either a 10 voxel or 25 voxel radius).(vi) Cell shape: A set of scalar values representing the percent of variance captured along each axis from the principal components analysis (PCA) of the voxel locations contained in the cell. This roughly represents the elongation along a set of axes for the cell. In addition, the value of the x-coefficient for the first eigenvector is included. All of the above features are those typically used when an expert human annotator is presented with a new adult worm to label. Consider a single aspect of compatibility between a cell x i and a putative label ' j. Here, we focus specifically on cell location (though the construction of cost matrices for other aspects of compatibility is done in the same way). We begin by assuming that we have access to a training set S of worm images, each of which have been fully annotated by a human expert. Our goal is to define a cost matrix c ij  such that c ij reflects the extent to which the location of a cell x i in an input image is compatible with the location of cells that were annotated with label ' j in the training set S. Let hx i i location denote the 3D vector of coordinates for a given cell x i in standardized worm-coordinate space. Each dimension is standardized to have zero mean and unit variance. One simple choice of cost is given by the squared Mahalanobis distance,where j is a 3D vector giving the average location of training cells with label ' j , and AE j is the sample covariance matrix of these locations. The Mahalanobis distance can be thought of as a variation on a weighted Euclidean distance measure that accounts for correlation between coordinates in different dimensions.where w  w location , w size ,. .. , w shape  is a vector of (log) weights.
Formulation of cell lineage annotation as a minimum-cost flow(i) s, x i : an edge from the source node to a node representing the i th cell in the input worm (ii) x i , ' j : an edge from the i th cell node in the input worm to the j th label node (iii) ' j , t: an edge from each label node to the sinkThere are p total edges of the first type, pq  1 total edges of the second type and q  1 total edges of the third type for each input worm. With each edge a, b associate a lower bound, L ab , an upper bound U ab and a cost C ab. These constraints and costs are defined differently for each type of edge:and C xi, 'j  c ij as defined in the section describing the formulation of the combinatorial optimization, 8i, j where the first two constraints ensure that all cells and non-dud labels are matched exactly once, the third constraint ensures that dud labels are provided to exactly p  q cells, and the last constraint sets the costs for matching particular cells with particular labels. The minimum-cost maximum-flow problem is stated as follows:where u represents the signed supply value for each node, defined as u  p if u  s p if u  t 0 otherwise:For any solution to the minimum-cost maximum-flow problem stated above, the edges with f xi, 'j  1 represent the annotations of cell x i with label ' j. The computational advantage of a minimum-cost maximum-flow formulation can be more clearly seen using a slightly modified but equivalent formulation of the problem above in which the ' 0 node is omitted from the graph, the costs of all ' j , t edges (for j40) are adjusted by subtracting C '0, t and the supply values are adjusted accordingly to achieve a target flow of q (rather than p). When solving the latter formulation, at most q augmentations are required to find the optimal solution using the simple minimum-cost maximum-flow algorithm suggested by Edmonds and Karp (), giving an asymptotic runtime of Opqq  log p. This is a substantial improvement over the Op 3  Hungarian algorithm for weighted perfect matching, as q ( p in our setting. In our experiments, we opted for the more straightforward formulation described here (which we extend in later sections) and used the Network Simplex function in the Lemon Library (Kiray and KovacsKovacs, 2010;) for optimization. As expected, this gave a substantial practical speed-up compared to a highly efficient implementation of the Hungarian algorithm for bipartite matching.
Annotation with variable cell divisionsAlthough the cell lineage for adult worms is known and largely fixed, some exceptions exist. In particular, we observed in our data that the four posterior intestinal cells (two ventral and two dorsal) can each undergo an additional cell division. As an example, let's assume ' j is the j th cell in the C.elegans atlas () and is determined to be present in all adult cells. However, the data indicate that ' j divides and gives rise to two additional cells, an anterior and posterior daughter cell. We will refer to these sets of cells, which undergo variable cell division as the set of labels at the indices P  f143, 146, 149, 152g. For each of the parent cells j 2 P, let Daughterj  fj  1, j  2g denote the set of daughter cells produced when j divides. Biologically, either a parent cell is present, or it has divided and given rise to the two daughter cells. In particular, a matching should never simultaneously label both a parent cell and any daughter cell; similarly, a matching that labels one of the daughter cells should also label its sister cell. These types of constraints cannot be modeled using the standard bipartite matching algorithm. The minimum-cost flow formulation can capture some of these constraints resulting from the variability in cell divisions in the annotation process by adding nodes and edges to the graph constructed in the previous section. For each variably dividing parent cell j 2 P, create two decision nodes, d 1 j and d 2 j , and construct edges as follows:Any previous edge directly connecting ' j , ' j1 or ' j2 to the sink node t (for any j 2 P) should be deleted. Finally, the amount of flow from the dud label l 0 to the sink t is reduced as a result of flow redirected to the decision nodes.where r is the number of parent cells that can variably divide; here r  4.The decision nodes are used to impose mutual exclusion constraints. For example, d 1 j ensures that exactly one of the two labels, either the parent ' j or the anterior daughter ' j1 , will be present in the final annotation. Similarly, d 2 j is used to determine whether the posterior daughter ' j2 will be annotated. Ideally, the method achieves a solution in which the pair of daughter cells ' j1 , ' j2  or only a parent cell ' j  is used by routing a unit of flow through the dud, ' 0. However, this construction imposes no restriction on both daughter cells being labeled simultaneously, nor does it prevent the parent being labeled alongside the posterior daughter. For this reason a heuristic post-processing step is needed after the two assignments are performed independently (Note, a graph construction exists that does account for these additional constraints. However, given the current formulation of costs, a solution cannot be obtained that properly scores these relationships. A modification to the cost formulation should be explored in future work.) In particular, if the posterior daughter ' j2 is labeled, then ensure that the anterior daughter ' j1 is also labeled (reassigning from the parent ' j to the anterior daughter ' j1 as needed). Similarly, if the posterior daughter ' j2 is unlabeled, this implies that the parent cell has not divided, and so ensures it is labeled (reassigning from the anterior daughter ' j1 to parent ' j as needed).presents a representation of the structure of the network.
Estimating parameter weights for improved matching resultsThis section focuses on the method for learning the appropriate weights used in Equation (4). Once determined, using the weights in the optimal assignment in the matching problem will yield an annotation of the p cells in an input worm. Define Yx as the set of all possible matchings for an input worm x, and define y 0 2 Yx as the solution that minimizes the network flow problem for a given set of weights w  w location , w size ,. .. , w shape . The goal is to learn the appropriate weights w for combining the cost matrices as defined in Equation (4) such that for each worm x 2 S the solution y 0 is close to the true labeling, y. Let Q(y) denote the number of cells that have been assigned a label other than ' 0 in y (i.e. the number of cells named by the expert annotator,. The network consists of a source node (s), a sink node (t), a set of nodes for each of the p total input cells, x 1 , x 2 ,. .. , x p , a dud label node ' 0 and q unique labels of which a subset participating in variable cell divisions. The label ' j represents a parent and ' j1 and ' j2 its daughters as described in the text. d 1 j and d 2 j represent the decision nodes for that cell divisions. The source node, s, pushes p units of flow into the network. All blue edges have a lower and upper bound of 1. The black edges all have lower bound of 0 and an upper bound of 1. Finally, the red edge from the dud label node, ' 0 , to the sink node, t, has a lower and upper bound equal to p  q  r where r is the number of parent cells that may divide i21Automated cellular annotation of adult C.elegans Qy  jfy i jy i 6  l 0 gj). Also, define Ry, y 0  to be the number of cells with the same label in y and y 0 , other than l 0 (i.e. Ry, y 0   jfy i jy i  y 0 i ^ y i 6  l 0 gj). Define the learning objective as the average percentage of cells that have the correct annotation for any given weight w. hX , Y, w  1 N X x, y2X , Y Ry, y 0  Qy 5 where N is the number of training worms. A supervised learning technique must be chosen that estimates a set of weights w for the cost function such that for the resulting predictions the difference between the predicted labels y 0 and the true labels y is globally minimized.). Some approaches may be efficient computationally, such as max-margin structured estimation and need to be explored (). Here, we take a sampling approach described below. Start with a distribution over the space of weights (i.e. R n ), where n is the number of features used in the matching problem in 1 and randomly sample from this a number of times (e.g. 100) to obtain a set of weight vectors, fw1,. .. , w100g. For each sampled weight vector, w, solve the network flow problem modeling variable cell division for each training worm, and compute the average per-worm accuracy in annotation given by Equation (5). Then take the top fraction of performing weights (the so called elite set), and use them to estimate a new distribution from which to sample the next set of weights. This is repeated until convergence as defined by a plateau in the objective function. For sampling, each of the dimensions of the weight vectors are drawn independently. In particular, each w i is sampled from a separate distribution N  i , 2 i . After each iteration, the mean and standard deviation of the w i s for the top % of samples scored are used to estimate each weight's i and i in the next iteration of sampling. The algorithm is run until convergence. Intuitively this means that the matching problem is solved on the worms using a set of sampled weights. As the space of possible weights is searched, the evaluation of the performance of the sample at each step allows the algorithm to identify a distribution for weights that show good performance on the training. In essence, it is sampling the set of top performers, and removing the poor-performing set from the population. A schematic is shown in.
RESULTS AND DISCUSSIONA set of 25 day 1 adult hermaphrodites were imaged using fluorescent confocal microscopy, producing a series of 3D image stacks. These images were processed similarly to the approaches used in the first larval stage (). Each worm was stained with DAPI, making all nuclei visible in the blue channel. In addition, the worms contained muscle-specific GFP markers, making a subset of body wall muscle cells visible in the green channel as shown in. The cells were automatically segmented using a modified version of a gradient-based approach described in other work (), which was adapted and parallelized to improve performance on the larger adult worms. The segmentation was manually corrected, and from the set of 25 expert-curated worms, we extracted features of the cells, described in full detail in Section 2.3. In short, the orientation of the worm was determined manually (head, tail, ventral). We then extracted many features of the cells including location, DAPI and GFP intensity, shape (e.g. size and elongation) and neighborhood density. Each worm was manually annotated with 142 labels consisting of a set of intestinal, muscle and hypodermal cells. In addition, each worm was also annotated with a set of labels for cells that undergo variable division, consisting of four intestinal cells that could each divide and give rise to two daughter cells, accounting for 12 unique additional labels. Therefore, each worm was annotated with a subset of the 154 total labels. These particular cells were targeted by the expert annotator to study the biological process of aging. The muscle and intestinal tissues degenerate most during aging and are therefore cells of interest. The hypodermal cells were also included as a set that were readily recognized by the expert annotator.
Performance evaluation of an untrained matching approach using 5-fold cross-validationWe first present the performance of automatically annotating cells by combining different sets of features into a scoring function where these features are linearly combined.summarizes the results of combining the indicated set of features with equal weight in a cost function for assigning a given label to a cell. These costs are used to solve the minimum-cost labeling of all cells using the set of available labels. This assignment problem. This schematic of the sampling approach depicts the method used to learn optimal weights for the label assignment problem. At the top, the two toy matching examples (A and B) show different performances of model fits at sampled weights (C). The 'Model' shows the available cell labels. The 'Subject' is a training example with its true labels indicated, 1 through 10. The edges represent the final matching computed using the sampled weights. In the top (yellow) example, the solution labels only six cells correctly. In the lower red model, seven labels are correctly assigned. We use a red shade to represent higher accuracy in this schematic. To learn the weights for the assignment problem, the method proceeds as follows: 1. Randomly sample many weights for the features (2 features shown here) from the given distribution and solve the matching problem on the training sets, computing the average accuracy of the annotation at those weights (D). 2. Identify the top-scoring samples (represented by red) and use their weights to recompute a new distribution for the next iteration (shown in E). Repeat until convergence i22and cost functions are described in full in Section 2. The table reports average accuracy as computed using Equation (5), the percentage of uniquely labeled cells in a test worm receiving the correct annotations. In each model, as only a subset of cells in a worm is assigned a unique label (at most 150), there is a large number of unlabeled cells. We present two models, one in which we ignore the unlabeled cells in the scoring of an assignment, and another in which the unlabeled cells are scored. For each combination of features, the table shows a model where unlabeled cells incur no cost in using the cost matrix described in the Equation (4) c k i0  0 8i, k, the i th cell receiving the label of dud (a label given to cells without a unique annotation, e.g. germ line cells) and the k th feature. For those models in which the dud cells were scored, the cost is computed from the estimated 0 and 0 as formulated in Equation (4). In, these models are denoted by the inclusion of the symbol  in the 'Dud cells scored' column. When dud cells are not scored, the column contains the symbol . In all experiments in, w i  0 8i. As the result with a cost, c i0  0 8i should always result in the use of the model with no cell division taking place, in experiments where dud label nodes are unscored, the bipartite matching formulation is used in which all 154 cells are assigned. For  models, the minimum-cost maximum flow is solved using the LEMON open source graph template library () (The LEMON library uses integral cost values to solve the network flow resulting in a decrease in precision. It is noted that experiments were run to permit precision to five decimal places and had little effect on the results.) In, the first two rows represent the model using location alone. When the cost of unlabeled cells is not included (loc-), the model achieves an average accuracy of 36% per worm across the 5-fold cross-validation experiment. Including a cost for unlabeled cells (loc), results in an increase in accuracy to 41% per worm. These location-based models achieve the lowest accuracy across all models shown in. Each subsequent model includes the feature of location in addition to other morphological features (see Section 2.3 for full detail). Incorporating two features of a cell, gfp intensity and size, results in a large increase in accuracy per worm to 67% (model gs-in), while scoring the unlabeled cells in the model shows further improvement to 71% (model gs in). However, the highest mean accuracy score belongs to the model including a large set of features full at 73%. In the subsequent section, this set of features was used to train a more complete model in which the weights for combining features in the scoring function are learned using the sampling approach described in Section 2.6.
Performance evaluation using trained feature weightsUsing the set of 25 worms, we assessed the ability to improve accuracy of the annotation by learning feature weights for the cost function defined in Equation (4). Applying the sampling technique (Section 2.6), we report results on a 5-fold cross-validation experiment using the features from the full model. The initial distribution for each weight is set as N 0, 4. Each iteration performs 100 independent samplings, and uses the  10 top-scoring samples to compute the distribution of the weights for the subsequent iteration. In the first iteration of training, solving the label assignment problem using the LEMON Library () took on average 1 second (with an inter-quartile range of 0.69 to 1.29 s). Each model was trained for over 30 iterations, at which point all models converged (the point where training accuracy no longer increases). The model taken from the 30 th iteration of each cross-validation run is used for testing on the held-out set of worms. Results are shown in. As reported above, solving the matching problem using location alone resulted in the mean accuracy of only 41%, even when estimating the and of the locations of unlabeled cells. Improvements were observed by linearly combining location with additional features in the cost function, but further improvements in accuracy can be achieved by training the cost model to weight the features differently. Learning these weights led to an increase from the untrained per-worm mean accuracy of 73% to a per-worm mean accuracy of 77% on the worm model full. In addition to reporting a per-worm accuracy, a per-label accuracy is provided. This is the mean and median accuracies achieved on each label when it was present in a worm.shows the histogram of accuracies on a per-cell basis. In this histogram, the distribution of per-cell accuracies when performing annotation using a model that uses location alone is clearly shifted to the left. The fully trained model with learned feature weightsNote: In all cases features were equally weighted. The symbol  in the column 'Dud cells scored' indicates the and 2 were estimated for unlabeled cells. These unlabeled cells were given a score of 0 otherwise. The features used are described in detail in Section 2.3. The per-worm accuracy is computed for each worm using Equation (5). The median, mean and variance are reported across all 25 worms.
i23Automated cellular annotation of adult C
.elegansshows the strongest shift to the right. This demonstrates that the improvement in accuracy is not only on a per-worm basis, but also observed in a general improvement of individual cell label assignments. These accuracies are at a median of 35% for the model using location alone, and 84% (with a mean of 77%) for the trained model. In addition, five cells are given the correct label 100% of the time they are present in a worm. An additional 35 labels are correctly assigned in the 90th percentile.
Accuracy of cell division identification using network-flow formulationUsing the results of the cross-validated trained models described, we evaluated the accuracy of identifying cell divisions when they occur in the four intestinal cells. Among the 25 worms, 100 intestinal cells (4 per worm) are able to undergo additional cell divisions. We observed 54 events where one of these intestinal cells underwent the further division. Only 3 of the 25 worms had no additional cell divisions in all 4 of these intestinal cells.summarizes the results for each intestinal cell. The four intestinal cells that are capable of dividing and giving rise to two daughter cells are the last two ventral cells in the intestine, Ventral9 and Ventral10, and the last two dorsal intestinal cells, Dorsal9 and Dorsal10. The posterior-most cells of this tissue in both the dorsal and ventral hemispheres are named Dorsal10 and Ventral10. The intestines just anterior to these two (Dorsal9 and Ventral 9) divide most frequently at 14 times each in the total of 25 worms. Overall, the state of these cells is accurate 80% of the time. The dorsal cells receive high accuracies at 88 and 80%. The most challenging cell to predict is the ventral intestinal cell number 9 (Ventral9), which achieved 72% accuracy. It is important to note that the identification of a division is not necessarily indicative of the correct annotation. That is, although the two daughter labels are assigned within the worm, they are not necessarily assigned to the correct cells. However, use of these labels still serves an important purpose in understanding variability in the worm's development. In addition, identifying when cell divisions have not occurred prevents mis-annotation of the label to another cell when the actual cell is not present.
DISCUSSIONCreating automated techniques to annotate individual cells based on their unique cell labels in the organism C.elegans makes single-cell studies possible for non-experts and provides assistance for experts to perform analyses more rapidly. The manual curation of the automatically segmented cells can be performed in a few hours, for which the 154 cells can be rapidly annotated at high accuracy. In contrast, manual segmentation and annotation of the 154 cells in 3D for a well-trained biologist takes on the order of 2 days (X.Liu, personal communications). To truly enable widespread research of single cells in images, high-fidelity labeling of cells must be possible. This work demonstrates the potential of automatic techniques to succeed in the adult organism. In C.elegans, existing approaches creating digital atlases in the developing embryo () and larvae (L1) () proved to be poorly suited for the challenges of the adult worm as described earlier. In particular, the previousIn black, we show the accuracy using an untrained model considering location alone. The gray histogram gives the per-cell accuracy counts of the untrained model incorporating additional features. In white, we show the model with weights learned for these set of features and estimated means and variance for all cell labels, including 'other' cellsNote: The model included the scoring of unlabeled cells. The per-worm accuracy is computed for each worm using Equation (5). The table reports both the per-worm and the per-cell label accuracies, including their median, mean and variance in separate columns across the 25 test worms.the use of the same approach. Instead, we created a more complex model in which we learned the weights for a richer set of features, including cell characteristics of location and morphology. What is more, the bipartite matching approach used in the L1 was prohibitively slow for training a full adult model given the number of cells. As a result, learning feature weights required a new formulation using network flow, enabling the successful training of a more complex cost function. We believe this work demonstrates the utility of using such a rich model to generate these high-confidence labels. The improvements in accuracy given in the results section provide evidence of the benefit of including morphological features in atlasbased modeling of C.elegans. Future work might consider incorporating meta-features, such as posterior probabilities of a classifier that identifies tissue types, into the pipeline. Such an approach can mimic the behavior of the expert annotator who generally first identifies the tissue type of a cell (e.g. intestine) then assigns it the lineage-specific label, selecting from those available within its tissue type. Alternatively, incorporating such classifier probabilities directly into a cost function may result in a more flexible model. However, for the set of cells labeled in this work, the most salient features of the tissue were modeled directly in the scoring function (e.g. size for intestinal cells). In the future, training data will include cells from additional tissue types. At this time, inclusion of tissue classifiers might prove valuable, particularly in the case of neurons. These classifiers might distinguish small cells from over-segmented cell fragments, for example. A confounding factor in the annotation process is the variability in the number of cells. For example, we identified a set of intestinal cells where we observed variable cell divisions. That is, at times they underwent an additional cell division, resulting in the presence of two daughter cells rather than the single parent identified in the 959 known somatic cells. Such variability cannot be properly represented by a traditional bipartite matching approach. This article presents a solution that through the construction of a special network structure for solving the annotation problem enables the selection of either the parent or the two daughters explicitly. Although achieving good accuracy, the current construction requires a post-processing step to identify the presence of a second intestinal-like cell. Future work might include developing a method that does not rely on the identification of a single additional cell in the division, but rather identifies either one large parent cell, or simultaneously both daughter cells. We also observed an anterior intestinal cell, Ventral3, that divided just once in the 25 worms used in this work. This was not modeled owing to the infrequency of the cell division. However, this observation indicates that there is likely further variability that has not yet been observed. With increasing amounts of data, additional variability can be modeled explicitly to further improve cell annotation. What is more, it may be possible to model the co-occurrence of these cell divisions. Some weak evidence exists in this dataset indicating that two intestinal cells might be correlated in their division patterns. However, the relatively small amount of data makes it difficult to obtain statistical significance, and therefore a model that takes into consideration the co-occurring cell divisions is left for future work. Finally, extending the annotator to include labels for more of the total 959 known cells will be most valuable. In addition to creating a more complete model of the worm, it will also improve overall annotation accuracy. We believe this work has provided evidence for such potential gains in the fidelity of automated cell labeling through the inclusion of more cell labels. In this work, we achieved an improvement in accuracy by modeling the cells that did not receive a unique cell lineage label, which we call the dud label. Yet, even the models including the duds could be further extended. There is significant variability within the set of unlabeled cells as it comprises many eggs, sperm cells, neurons, hypodermal cells and pharyngeal cells just to name a few. It is possible to create a larger set of dud labels with more homogeneous features representing the different subclasses within the unlabeled cells (e.g. the oocytes in the germ line). Therefore, the groups of duds can be mapped to their correct subtype. In summary, we believe future work must focus on extending the annotation process by using more labels or by identifying additional subgroups to further improve accuracy. With more data, richer models can be built to account for cell division variability and inclusion of additional features. The ultimate goal is a larger model that labels a large proportion of all cells that are uniquely and reproducibly identifiable in the adult worm. This work represents the first step toward such a goal and provides a rich modeling approach capable of scaling with such extensions.
CONCLUSIONIn this article, we present a method capable of annotating a set of single cells in images of adult C.elegans at a median accuracy of 84%. The work develops a novel framework for producing labels for 154 cells that is able to handle the additional challenges present in the adult worm that previous methods (created for earlier stages in the worm's development) are not able to handle. These challenges include the increase in the number of cells, and variability in cell location and cell divisions. We address these challenges through training a rich model that incorporates morphological and spatial features, constructing a special network structure and explicitly modeling cells that receive nonunique labels. By reducing the computational complexity in using a minimum-cost maximum-flow algorithm, we make feasible a cross-entropybased learning algorithm to tune the weights of the features in our scoring function and ultimately train a more accurate model that is capable of handling the variable cell divisions. As a result, we demonstrate that the inclusion of additional features and the reformulation of the traditional approach to the label assignment make possible the training of a richer model to improve accuracy. Furthermore, we also demonstrate that inclusion of more cells, in addition to more features, leads to gains in accuracy for all cell label assignments.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
One approach to solving the combinatorial optimization problem in one is a straightforward application of maximum weight bipartite matching (a.k.a., linear assignment) that was used in (Long et al., 2008). In this approach, one constructs a bipartite graph containing p nodes in each partition. The left partition contains a single node for each input cell. The right partition contains a single node for each non-null label ' 1 ,. .. , ' q and p  q nodes for the null label ' 0. The cost for matching the ith node in the left partition with the jth node in the right partition is set to c ij , and the minimum cost matching can be found in Op 3  time using the Hungarian algorithm. Another alternative is to reduce 1 to an instance of the transportation problem, which eliminates the need to explicitly enumerate nodes with null labels. For general transportation tasks, the algorithm of Kleinschmidt and Schannath (Kleinschmidt and Schannath, 1995) takes Opq log pp  log q time, which is an improvement over the Op 3  afforded by the Hungarian algorithm. Here, we take an even more general approach that also avoids creating these same duplicate nodes by reduction to minimum-cost flow. We show that a simple algorithm for minimum cost flow achieves Opqq  log p time as a consequence of the structure of our problem. The flexibility of the minimum-cost flow approach allows us to further extend the algorithm to handle the special case of cells that undergo variable cell division. Construct a directed graph G  V, E containing p nodes (denoted x 1 ,. .. , x p ) representing cells in the input worm, q  1 nodes representing the possible labels for these cells (denoted ' 0 ,. .. , ' q and which include the dud label) and two additional nodes s and t representing the sink and source for the graph. The edges of the graph consist of the following:
