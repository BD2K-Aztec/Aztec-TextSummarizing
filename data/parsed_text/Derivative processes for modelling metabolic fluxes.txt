Motivation: One of the challenging questions in modelling biological systems is to characterize the functional forms of the processes that control and orchestrate molecular and cellular phenotypes. Recently proposed methods for the analysis of metabolic pathways, for example, dynamic flux estimation, can only provide estimates of the underlying fluxes at discrete time points but fail to capture the complete temporal behaviour. To describe the dynamic variation of the fluxes, we additionally require the assumption of specific functional forms that can capture the temporal behaviour. However, it also remains unclear how to address the noise which might be present in experimentally measured metabolite concentrations. Results: Here we propose a novel approach to modelling metabolic fluxes: derivative processes that are based on multiple-output Gaussian processes (MGPs), which are a flexible non-parametric Bayesian modelling technique. The main advantages that follow from MGPs approach include the natural non-parametric representation of the fluxes and ability to impute the missing data in between the measurements. Our derivative process approach allows us to model changes in metabolite derivative concentrations and to characterize the temporal behaviour of metabolic fluxes from time course data. Because the derivative of a Gaussian process is itself a Gaussian process, we can readily link metabolite concentrations to metabolic fluxes and vice versa. Here we discuss how this can be implemented in an MGP framework and illustrate its application to simple models, including nitrogen metabolism in Escherichia coli.
INTRODUCTIONIt is generally impossible to simultaneously measure the abundance of all the molecular entities making up biological systems. In gene expression assays, for example, we typically measure messenger RNA expression, but not the activity of transcription factors and/or the occupancy of transcription-factor binding sites. Similarly, in metabolomic analyses (), key metabolites can be measured using, e.g. mass spectrometry or nuclear magnetic resonance quantification, but it is rarely possible to comprehensively quantify the metabolites even within a single pathway. Typically, more interesting than metabolite and enzyme abundance are the fluxes through biochemical reactions and metabolic networks (). Fluxes,   1 ,. .. , m  T , correspond to the rates at which molecules, x  x 1 ,. .. , x n  T , are turned over by the m reactions; regulation of fluxes in light of changes in environmental and physiological conditions is also intimately linked to cellular physiology. Although the fluxes are of central concern, they are hard to measure directly. Estimates for intracellular fluxes can be obtained by tracking products from isotope-labeled ( 13 C and 15 N metabolic flux analysis) metabolites through the metabolic network (). However, such an approach is restricted to a metabolically steady-state analysis and is not appropriate for capturing dynamical flux variations. Instead, theoretical analysis has often progressed by assuming stationarity of the metabolic processes, which in turn allows for characterizing the sets of steady-state fluxes under a set of suitable assumptions (). Flux-balance analysis is the most popular example of this strategy, but it becomes questionable once the steady-state assumption can no longer be upheld. Furthermore, as more data on enzyme abundance become available, we should attempt to include such information and the impact on metabolic processes (). Here we provide a new framework that allows us to model metabolic fluxes and their dynamics, and which deals with the missing data problem in metabolic analysis in a flexible and consistent manner. Gaussian processes (GP) belong to the armoury of nonparametric Bayesian methods and have been widely used to describe dynamical processes () and to infer hidden states, e.g. transcription-factor activities (). In applications to metabolic modelling, parametric approaches can offer potentially incorrect representations of the underlying fluxes (). The strengths of GP models arise from their non-parametric nature, which enables us to put priors directly on a function rather than on the parameters of a parametric function. With a multiple-output GPs (MGPs), single GP framework can be extended to handle many outputs, enabling us to learn the unknown relationships between metabolic species. In turn, MGPs can be used to infill the sparsely sampled data (). This means that by using MGPs, it is possible to impute the missing data in between the metabolic measurements more efficiently. Here we develop a more general framework that uses so-called derivative GPs (), which allow us to link *To whom correspondence should be addressed.  The Author 2014. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited. metabolite abundance, x (or concentrations) and fluxes. This in turn enables us to also treat time course data on metabolites and monitor the changes that occur in fluxes, e.g. over the course of physiological responses, such as to changes in the environment ().
METHODS
GP regressionGaussian process regression (GPR) can be applied to recover an underlying dynamical process from noisy observations. A GP defines a prior distribution over all possible functions, and to specify a GP, we need expressions for the mean and covariance function that describe the behaviour of the system output over time (). Below we review the standard GPR methodology. In a typical regression problem, we connect inputs x and outputs z via functions, z  fx, where x  x 1 ,. .. , x n  and z  z 1 ,. .. , z n  are continuous n-dimensional real-valued vectors. The observed values of the dependent variable, z, can be related to the independent variables, fx through,where is a noise term, which is here assumed to be independent and identically distributed according to a Gaussian distribution, $ N 0, 2 . In GPR, we place a GP () prior over the functions fx, f $ GP, meaning that at any finite number of input points x 1 ,. .. , x n the values fx i  have a multivariate Gaussian distribution with zero mean and covariance function, K, fx 1 ,. .. , fx n    T $ N 0, Kx, x 0    :Different functional forms can be chosen for the covariance function (), either to simplify computations or to reflect constrains imposed by the data. A flexible and generic choice is to set the covariance function towhere  2 g , l represent a set of unknown hyper-parameters, and x p and x q are inputs. Thus, y  y 1 ,. .. , y n   T has a multivariate normal distribution with zero mean and covariance matrix C  K  2 I, with I the identity matrix. The unknown set of hyper-parameters, , can be estimated from the data by evaluating the following log-likelihood function, L   1 2 log jCj  1 2 y T C 1 y  n 2 log 2, 1 using either a maximum likelihood approach or by sampling from the posterior distribution with Markov chain Monte Carlo methods (). For any finite number of input (test) points, x ? 1 ,. .. , x ? r , we define the joint prior probability distribution y, fx ? 1 ,. .. , fx ? r  T $ N 0,With the GP prior, it is possible to evaluate the posterior distribution over the functions; the values of f evaluated at inputs x ? 1 ,. .. , x ? r   and conditioned on the observations y are jointly distributed as (), fx ? 1 ,. .. , fx ? r  T jy $ N m p , K p , 2Although Equation (2) defines an appropriate GP posterior, which allows us to make predictions about a single variable y, it remains unclear how to deal with several variables simultaneously: if outputs are correlated then the standard GPR framework may fail in providing an adequate description.
Multipleoutput GPsBoyle and Frean (2004) introduced MGPs, where a set of dependent GPs is constructed via multiple-input multiple-output linear filters. This perspective can capture the dependencies between several variables by solving a convolution integral and specifying a suitable covariance function, which in turn includes the cross and auto correlations among related variables. Our construction of derivative processes below builds on MGPs. Dealing with linear filters is central to signal processing where such filters describe a physical systems that can generate an output signal in response to a given input signal (). Linear filters are characterized by their kernel function (an impulse response) h(t), and the output z(t) can be expressed via convolution integral,where the symbol '' denotes the convolution operator. To transmit the signal that has the mathematical properties of a GP, the kernel function, h(t) must be absolutely integrable, i.e.Then if the input X(t) is specified to be a Gaussian white noise process, the output process, Z(t), will also be a GP. Specifying a stable linear time-invariant filter with M white noise processes as inputs, X 1 t,. .. , X M t, K outputs, Z 1 t,. .. , Z K t and M  K impulse responses results in a dependent GP model (). A multiple-input multiple-output filter can thus be defined aswhere h mk t are kernel functions and Z k t is the kth output. As discussed previously, the observed variables might differ from expected variables owing to the measurement noise, and we thus considerwhere W k t is a Gaussian white noise process with variance 2 k. Multiple-input multiple-output filters are able to capture the relationships between several variables Y k t; in the model, these kind of dependencies are build in via shared input noise sources that enable the specification of valid covariance functions. For the sake of simplicity, let the impulse response be a Gaussian kernel, h mk t  v mk expf 1 2 t mk  2 A mk g. Then evaluating the convolution integral leads to the following covariance function,intermediate matrices C ij permits the definition of a positive definite symmetric covariance matrix C between K variables,Here N  P K i1 N i is total number of observations, and N i the number of observations of variable i. Having defined the covariance matrix, we can use the log-likelihood, which has the form (1) for the inference of the hyper-parameters  fv mk , mk , A mk g. Again, following Bayesian framework, we can use the results from the GPR section to evaluate the joint predictive distribution (2) for all outputs. Alternatively, for a particular variable i, predictions can be made using the appropriate marginal distribution, which is Gaussian, with mean m i t 0  and variance var i t 0 ,, Nj :
Derivative processesFor a GP that is derived through a linear filter, Yt  ht Xt  Wt, where X(t) is a white noise GP, h(t) is a kernel function and W(t) is an additive noise, it is easy to formulate the expression of a derivative process. Taking a derivative of Y with respect to t, it is possible to obtain a new process U that is also a GP (),Thus, it is possible to construct the derivative process by convolving a white noise GP X(t) with a derivative kernel function g(t). This definition enables us to consider derivative processes and the corresponding original processes as a collection of dependent GPs. This is true because the derivative processes and the original processes are derived from exactly the same input, X(t). To construct a dependent model for several related variables , it is necessary to define a suitable covariance structure, which in principal arises from the initial covariance function (4). For example, for a set of four dependent outputs (two original and two derivative processes), the following equations can be applied to compute the covariances (where the ~ C ij matrices contain the correlations between functions Z 1 and Z 2 evaluated at a finite set of test points t 1 ,. .. , t r ; g DC ij the correlationsevaluated at the same test points; and finally, DDC ij consists of auto/ cross-correlations between derivative variables U 1 and U 2. The matrices R, L and H are building components of the overall covariance matrix K, which is symmetric and positive definite,At a finite number of input points t 1 ,. .. , t r , the matrix K allows us to place a joint prior over observations Y, functions Z and derivatives U,enables us to make joint predictions for the original and derivative processes simultaneously. Alternatively, if there is no need to sample from the posterior process, we can use marginal Gaussian distributions to make predictions for individual output. The marginal distributions for output i and its derivative process at any input point t ? ,where m Yi is the mean of the original process, m Ui the mean of the derivative process, var Yi the variance of the original process and var Ui the variance of the derivative process, and furthermore
APPLICATIONS AND RESULTSTo demonstrate the performance of derivative processes, we consider two simulation examplesa system of two oscillating signals and a simple model of linear metabolic pathwaybefore turning to a more complicated metabolic process and, finally, some real metabolic network data. The derivative processes can be used to address the flux estimation problem from time course data. Here GPs describe the dynamics of metabolites, and the corresponding derivative processes capture the functional forms of the associated fluxes. Below, all examples were implemented using the free statistical computing platform R www.rproject.org.
Oscillating signalsA simple oscillating signal can be expressed as zt  A sin!t  , where A is the amplitude, !  2f the angular frequency and the phase angle. This is a particularly useful example because it is easy to evaluate the performance of derivative processes, as the derivative signals have a known analytic form. We consider a simple system that consists of two oscillating signals, z 1 t and z 2 t,with t 2 0, 4. To model real experimental measurements, we add random noise to the simulated trajectories, Y 1 t  z 1 t  1 , Y 1 t  z 2 t  2 , where i $ N 0, 0:1 2 ; we have observations of both signals at regular time intervals,and D 2  ft 2, j , Y 2, j g N2 j1  10. To build a single model that captures the relationship between the two signals, we apply the dependent GP framework (3) (K  2) on a combined dataset D  fD 1 , D 2 g; each signal can be expressed as a superposition of three GPstwo of which are constructed via convolution between a noise source and a Gaussian kernel, and the third one is an additive noise. We set parameters A i of each Gaussian kernel to be expf i  and noise levels to 1  exp 1 , 2  exp 2 , leading to a set of hyper-parameters,. .. , 4. To build the model the following priors are chosen: v i , f i $ 1, 2 2 , j $ N 2, 2 2  and j $ N 0:5, 1 2 , j  1, 2; the maximum a posteriori (MAP) estimate ^ is determined using a multistarting NelderMead optimization algorithm (). Dependent GP posteriors (6) allow us to make joint predictions about both signals and their derivative processes at any finite number of input points, and the resulting posterior processes are summarized in. From these posterior processes, it can be seen that the mean behaviour of our model agrees with trajectories of underlying noiseless signals, and to make predictions about derivative processes, it is enough to consider only samples from the original sinusoidal trajectories.
Linear pathwayNext we consider a linear metabolic pathway with two regulatory signals (see Goel et al.To apply the derivative process approach, we simulate the ODE model with the following parameter values V max , K m , K i   18:6819, 9:7821, 0:5992 and initial conditions x 2 0  1, x 3 0  1. In this model, the concentration of x 1 is assumed to be constant and equal to 2. The dataset consists of selected points from simulated trajectories with added Gaussian noise N 0, 0:05 2 . Again we combine the 'noisy' measurements, and fit the dependent GP model to make predictions about the original trajectories and their derivatives.
Branched pathwayWe now turn to an example of metabolic pathway that was originally proposed by Voit (2013) (see Example of actual characterization);illustrates a schematic representation of a branched pathway with two regulatory responses, where x 3 inhibits the conversions of x 1 into x 2 , and x 2 positively regulates reaction v 4. The following ODE model describes the dynamics of the metabolites that are involved in this pathway,where x 1 , x 2 , x 3 denote the metabolites. For a given pathway (), the change in metabolite concentration can be described by the differences between incoming and outgoing fluxes. For this reason, we are able to obtain the following expressions for fluxesThese expressions define a system of linear equations that is underdetermined, as we have more fluxes to estimate than available equations, and it cannot be solved using standard Gaussian elimination techniques. For this reason, additional information is required to uniquely determine fluxes v 1 and v 4. In this example, we will focus only on estimation of fluxes v 2 and v 3 from available data rather than try to address a uniqueness problem of v 1 and v 4. The above ODE model enables us to generate simulated time course data using the initial conditions x 1 0  4, x 2 0  1 and x 3 0  2. Next, we apply the dependent GP framework (the measurements of metabolites x 2 and x 3 with added random Gaussian noise N 0, 0:01 2  (we chose a low noise level so that predictions with derivative processes could be easily compared with the original fluxes in the example in Voit (2013). For a set of model,. .. , 4 we use the following priors,, 2 and $ N 0:5, 1 2 , and calculate the MAP estimate ^ as before.
Escherichia coli nitrogen assimilationFinally, we apply our technique to the experimental data from E. coli, where we have measurements of the abundance of several key metabolites involved in nitrogen assimilation. Nitrogen is one of the key chemical elements that acts as a nutrient for the cells; ammonium is a preferred source of nitrogen for E. coli growth (). In E. coli, ammonium can be absorbed via two pathways: glutamate dehydrogenase (GDH) that operates during cell growth in ammonium-rich environments, and glutamine synthetase-glutamate synthase (GS-GOGAT) that operates during cell growth in lowammonium conditions (van). Here, we are focussing on experimental conditions, where after a period of nitrogen starvation, the bacterial cultures are spiked with ammonium ();shows experimentally obtained measurements for-ketoglutarade (KG), glutamate (GLU) and glutamine (GLN) metabolites over the time after ammonium spike; red dots correspond to a wild-type (WT) E. coli metabolic measurements, and in squaresisogenic glnG deletion (glnG) measurements. Below we focus on the pathway summarized in, which includes both GDH and GSGOGAT. For modelling purposes, we assume that fluxes v 3 and v 4 can be summarized by the overall flux v 3 that describes the flow from GLU to GLN, as there is not enough information to discriminate between them. From the pathway, we can construct a system of linear equations that describe the dependencies between fluxes and metabolites,We fit a dependent GP model (3) (K  3) to the WT data and then to glnG data (collected from a strain where glnG is absent). In the model, KG is expressed as a sum of three GPs: the first GP describes KG, the second expresses the relationship between KG and GLU and the third one describes additive noise; GLN is modelled similarly. However, GLU is modelled as the sum of four GPs, where the first three describe GLU; the dependence between GLU and KG; the dependence between GLU and GLN; and the fourth is an additive noise. Choosing kernel functions to be Gaussian h k t  v k expf 1 2 t 2 A k g, we obtain the MAP estimate for all hyper-parameters (17 in total). The predictions with posterior process (7) are summarized in, where solid blue lines describe predictions with dependent GP models for WT E. coli, and green lines for glnG. Using the relationship (11), we can estimate fluxes v 1 , v 2 and v 3 (). To evaluate our predictions, we can compare flux v 3 and GS protein levels in WT and glnG E. coli (see Supplementary). In E. coli, glnG encodes the transcription factor, NtrC (nitrogen regulator) that controls GS expression levels, and in its active form, GS catalyses glutamine synthesis (van HeeswijkTime(min)). Experimentally, it was observed that in glnG case protein, GS levels were significantly lower compared with the GS levels in WT E. coli (see Supplementaryand D). Because there is less enzyme available to catalyse the reaction in glnG, the flux v 3 in the mutant will be noticeably reduced compared with the WT flux v 3 (see Supplementaryand B).
DISCUSSION AND CONCLUSIONSFlux estimation has become central to many analyses into the metabolic processes and mechanisms. Typically, the estimates for a set of fluxes are obtained in a point-wise manner at discrete time points. It is clear that this fails to capture the temporal behaviour of the fluxes and additional consideration of parametric models is compulsory to fully explain the fluxes; further, this approach is susceptible to noise that is present in experimentally measured metabolite data. Here we have addressed these problems and proposed a novel non-parametric Bayesian approach to modelling metabolic fluxes. This is based on MGPs that enable the construction of derivative processes. Because the derivative processes and original processes share the same input source, we can complement the dependent GP model and make joint predictions about original and derivative processes at any finite number of input points. Such derivative processes can be applied to characterize the temporal behaviour of metabolic fluxes from time course datawithout having to make reference, e.g. transcriptomic data, to explain temporal variationand here we have demonstrated the applicability on simple models and a real-world example. GPs, including our approach, propagate uncertainty in line with the assumed covariance structures. This can lead to large confidence intervals, especially if the dependencies among different observations are not considered explicitly. With increasing number of metabolic species within the pathway, the derivative process approach might become computationally costly due to the inference of a large number of hyper-parameters and a matrix inversion step; however, this limitation potentially might be addressed by considering a sparse approximation for the full covariance matrix of all metabolic species (). These can in principle deal with genome-level data.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
& ' , 4 where S  A mi A mi  A mj  1 A mj and d  t a  t b is the temporal separation between two input points, (see Boyle and Frean (2004) appendix for derivation and generalization to multidimensions). Constructing 1893 Derivative processes for modelling metabolic fluxes at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
J.Z  urauskiene _ et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
