Motivation: Most RNA-seq data analysis software packages are not designed to handle the complexities involved in properly apportioning short sequencing reads to highly repetitive regions of the genome. These regions are often occupied by transposable elements (TEs), which make up between 20 and 80% of eukaryotic genomes. They can contribute a substantial portion of transcrip-tomic and genomic sequence reads, but are typically ignored in most analyses. Results: Here, we present a method and software package for including both gene-and TE-associated ambiguously mapped reads in differential expression analysis. Our method shows improved recovery of TE transcripts over other published expression analysis methods, in both synthetic data and qPCR/ NanoString-validated published datasets. Availability and implementation: The source code, associated GTF files for TE annotation, and testing data are freely available at
IntroductionTransposable elements are mobile DNA elements that constitute a large fraction of most eukaryotic genomes. These parasitic genetic elements propagate by multiplying within the genomes of host cells and can be passed from generation to generation through the germline lineage. Although the majority of TE copies are non-functional, a subset has retained the ability to transcribe and mobilize (). Although retrotransposons require an RNA intermediate to transpose, both DNA and RNA transposons are transcribed from the genome, and they can accumulate in conditions such as cancer (), neurodegenerative diseases (), as well as during embryogenesis (), neural development () and aging (). However, TE-associated reads are often discarded in sequencing data analyses because of the uncertainty in attributing ambiguously mapped reads to these regions, despite some previous attempts to integrate them in downstream analyses (). Here, we present a program called TEtranscripts that allows users to analyze both gene-and TE-associated reads concurrently in one simplified workflow.
Input dataThe input data for TEtranscripts consists of alignment files in either the SAM or BAM format (), and two annotation files in the General Transfer Format (GTF) (http://mblab.wustl.edu/GTF22.html) for genes and TEs, respectively. For the purposes of this article, we will use the terms, unique-reads and multi-reads, to designate the reads that have a unique alignment in the genome or map to multiple loci with equal quality, respectively. The utilization of multi-reads for TE quantification is critical, as a read originating from a TE could align to multiple instances (insertions) of that element in the genome. Many aligners support multi-reads alignments, and provide limits for the maximum number of multiple alignments per reads to output, e.g. bowtie-m (). To optimally set this parameter, we recommend a saturation analysis on the multi-read alignments as described in the Supplementary Materials (Supplementary). TEtranscripts also supports strand-specific read counting, and applies it to both genes and TEs. GTF files of transposable element annotations were generated from the RepeatMasker (, http://www.repeatmasker.org) tables obtained from the UCSC genome database (), or from annotations provided by the maize MIPS () and MTEC databases (http://maizetedb.org/$maize/). The annotation tables were parsed to filter out low complexity and simple repeats, rRNA, scRNA, snRNA, srpRNA and tRNA. Each TE insertion in the table was given a unique identifier. The genomic location, element name, as well as family and class information were also extracted from the table and included in the GTF file. TEtranscripts can also utilize custom TE annotations, such as those generated from de novo TE insertion analysis, as long as they conform to the format described earlier and are consistent with the genome sequencing files used for the alignment.
MethodsTEtranscripts estimates both gene and TE transcript abundances in RNA-seq data and conducts differential expression analysis on the resultant count tables. The general workflow of TEtranscripts is given in. Read assignment and statistical modeling is discussed in detail in this section.
Index genomic featuresTo quickly find all genes/TEs that overlap with any given read alignment, TEtranscripts builds two independent index structures on gene and TE annotations, respectively. The gene/TE index structure consists of a hash table with reference sequence names and a list of interval trees as key-value pairs. For each chromosome, there is an interval tree generated based on gene/TE insertions annotated on that chromosome. It allows the SAM/BAM read alignment to be rapidly matched with the genome intervals in GTF annotations, especially when there are a large number of TE insertions.
Read assignmentThe next step involves distributing the mapped reads among the annotated genes and TEs that overlap those genomic alignments. Unique-reads, which represent most gene-associated reads, but only a subset of TE-associated reads, are comparatively simple to distribute. For a multi-read, the task is more difficult. TEtranscripts takes advantage of the sequence similarities at the different levels of the hierarchy of TEs in order to optimally distribute reads amongst closely related TE sequences. Based on the definitions and nomenclature provided by RepBase (), TE 'insertions' (loci within the genome) are grouped into 'elements', which are subfamilies of TEs that are highly related at the sequence level and relatively distinct from other elements. For example, Repbase and RepeatMasker report 16 293 insertions for the L1Md_A element in the mouse reference genome (mm9), all of which are more similar to each other than they are to other elements of the L1 family (such as L1Md_T). By estimating combined abundances for all insertions of an element, we obtain more reliable and reproducible results than analyses that attempt to pin down the exact genomic instance of the TE being transcribed. Thus, TEtranscripts performs estimation of expression abundances on the element level by default, which is the recommended setting. TEtranscripts parses the alignment file only once, processing genes and TEs at the same time. Given a uniquely mappable read, the algorithm first searches for overlapping gene exons; if it is a multi-read, overlap with TEs will be first computed. For TE-associated reads, the user can choose whether to count only unique-reads or all reads, i.e. uniq mode and multi mode. Under multi mode, it is important to assign weight to the contribution of the ambiguously mapped reads at each mapped locus, so that no double counting of reads occurs. Given all available alignments of a read, every alignment is assigned a weight of 1=n, where n is the number of alignments. Therefore, the total contribution of a multi-read to the library size is the same as a unique-read. This is important in maintaining the library size for each sample (calculated based on the total number of mapped reads), as it is heavily utilized for normalization when comparing between multiple libraries.
TE transcript estimationAfter the read assignment step, an expectation-maximization (EM) algorithm is used to determine the maximum-likelihood estimates of multi-reads assignments to all TE transcripts. The unique-reads are not used as a prior for the initial abundance estimates in the EM procedure to reduce potential bias to certain TEs. Specifically, active TEs, which tend to be younger elements, have accumulated far fewer polymorphisms than older TEs, and thus have far fewer reads mapping uniquely to these elements. Using uniquely mapped TE reads in the optimization step will bias read assignment away from the youngest TE sub-families and toward the older related TE subfamilies with higher uniquely mappable content.
Expectation maximizationThe EM algorithm alternates between computing the fractional distribution of each multi-read to each mapped TE instance (E-step) and estimating the relative abundances of all TE transcripts (Mstep), until the estimated relative abundances converge. The initialReads mapping to TEs are assigned in two different modes: uniq (reads mapping uniquely in the genome), and multi (reads mapping to multiple insertions of TEs). In the multi mode, an iterative algorithm is used to optimally distribute ambiguously mapped reads estimation of relative abundance on multi-reads, q, of each TE transcript, t, is computed by Equation (1).T is the set of all TE transcripts; F t is the set of multi-reads assigned to t; ~ l ~ t denotes the effective length of transcript t, ~ l ~ t  l t  m  1, where m is the fragment length and l t is the length of transcript t. The fragment length is calculated from the paired-end alignment input file, or provided as a parameter by the user for single-end samples. The E-step computes the fraction of each multi-read allocated to each TE transcript. Suppose that a multi-read f maps to a set of TE transcripts T i. According to the initial assignment, the fraction of f attributed to any TE transcript t in T i , a 0 f ; t, is the relative abundance of t over the sum of relative abundance of all TE transcripts in. This allocation will then be used in the M-step of the algorithm to compute the relative abundance of each TE transcript. As described in Equations (2) and (3), these two steps will run alternatively for a specified number of iterations, k, until the program converges or as set by the user.After the EM procedure, the estimated relative abundance of each TE transcript from the multi-reads is integrated with the unique-read counts to compute the total relative abundance. The element level abundances are then computed by summing up all instances of each TE subfamily.
Differential analysisFollowing the generation of a count table for gene and TE transcripts, the differential expression analysis closely follows the DESeq package () for modeling the counts data with a negative binomial distribution and computing adjusted P-values. In addition to the standard transcript abundance normalization approach used by the DESeq package, TEtranscripts offers two additional options, reads per mapped million (RPM) and Quantile normalization. All other procedures exactly follow the DESeq method. TEtranscripts runs the DESeq method with a default set of general parameters. When there are no (or very few) replicates, we use the blind method for variance estimation and fit-only for SharingMode. Otherwise, we use pooled or per-condition methods and maximum SharingMode, as suggested by the DESeq package. In all scenarios, we use the parametric fitting model (fitType). The R code used for differential expression analysis is generated as part of the output to allow users to further customize the DESeq parameters and re-calculate differential expression statistics.
ImplementationTEtranscripts is written in Python. The SQUAREM () procedure is used during EM iterations to improve the convergence speed. TEtranscripts is available as an open-source program under a standard GPLv3 open source license and has been developed and tested on Linux and Macintosh OSX. The software package and associated TE GTF files can be found at http://hammelllab.labsites.cshl.edu/software. The TE GTF files currently include chimpanzee (panTro4), fly (dm3), maize (Zea mays RefGen v2), mouse (mm9 and mm10), rat (rn5 and rn6) and human (hg18, hg19/GRCh37, and hg38/GRCh38).
ResultsTo examine the accuracy and performance of TEtranscripts, we compared it with HTSeq-count version 0.5.4p3 (), Cufflinks version v2.1.1 () and RepEnrich () on both synthetic and real data. HTSeq-count was chosen as a standard method that counts only uniquely mapped reads and is nearly identical to the uniq mode in TEtranscripts. Cufflinks was chosen as a popular method for gene abundance estimation that works from pre-mapped BAM files and includes options to handle multi-reads, but is not specifically designed for TEs. To the best of our knowledge, only one other published method has been designed for TE expression analysis from RNA-seq data, RepEnrich, but this method does not work with premapped BAM files. There is a recently published pipeline set piPipes () to study piRNAs and TE-derived RNAs. Because it uses HTSeq-count and Cufflinks for quantification and Cuffdiff for differential analysis, we did not include comparisons to piPipes separately. For all comparisons, TE abundance measurements were given at the resolution of the element level (e.g. L1Md_A). For the synthetic datasets, accuracy was quantified as the proportion of abundances accurately recovered by each method for each TE element. For published datasets, accuracy was determined by agreement between the quantitative validation measurements (e.g. Q-PCR, NanoString) and the expression estimations computed by each software package.
TE recovery in synthetic dataSimulated datasets were used to investigate the TE abundance recovery rate by each approach, paying particular attention to the recovery of TEs known to be active in the mouse genome, obtained from a study by. FluxSimulator v1.2.1 () was used to generate multiple RNA-seq datasets from the mouse genome (mm9), consisting of 76 bp single-end reads from transcripts that include both annotated genes and TEs (see Supplementary Table S1 for parameters used). Each dataset consisted of 24 million reads in total, with 17% of all transcripts derived from TEs of varying abundances. STAR () was used to map the simulated reads with maximum multiple alignments of no more than 100, using the variables  winAnchorMultimapNmax 100 and outFilterMultimapNmax 100. Based on these parameters, we found that 87% of the reads were mapped onto the mouse genome, while TE reads had an average mappability of 70%. Furthermore, roughly half of the TE reads generated were uniquely mappable, comparable to what is observed in published transcriptome datasets. The simulated TE reads had a smaller mappability rate than gene-associated reads largely due to reads aligning to more than 100 genomic locations. The aligned read files were then used as input for the four abundance estimation approaches used in this study: HTSeq-count, Cufflinks, RepEnrich, and TEtranscipts. HTSeq-count was run in intersection-nonempty mode, and using a GTF file that contains TEtranscriptsboth TE and gene annotations for abundance estimation. Because HTSeq-count considers only uniquely mapped reads, any multimapped TE reads will be discarded by this approach. Cufflinks was run with the settings of rescue method for multi-reads (u), which takes into account both unique-reads and multi-reads, and uniformly divide each multi-read to all the positions initially. When multi-read correction is enabled, Cufflinks will reassign each multimapped read probabilistically based on the initial abundance estimations, with the uniquely mapping reads used to inform the likely distribution of the multi-reads (). To run RepEnrich, we built the peseudogenome of TEs using the RepeatMasker file on mm9 as described in the RepEnrich tutorial. Unique-reads and multi-reads were derived based on the STAR output. TEtranscripts was run in multi mode with EM optimization invoked. The accuracy of each method in estimating abundances of TE expression was computed and displayed as the frequencies of the rate of recovered abundances (; Supplementary). In general, TEtransctripts outperforms HTSeq-count, Cufflinks and RepEnrich in terms of abundance recovery rate, both for nonfunctional and active TEs. The overall average recovery rate for TEtranscripts was 88.84%, with 53.74% for HTSeq-count, 43.72% for Cufflinks and 59.8% for RepEnrich. The fraction of TEs for which the estimated abundance is within 15% of the true abundance was: 41.7% for TEtranscripts, 14.4% for HTSeq-count, 9.3% for RepEnrich and 16.8% for Cufflinks. In this dataset, 14.5% of the detected TEs are active TEs, and all three approaches were able to capture some of them. TEtranscripts was able to recover >80% of the reads for 77% of the active TEs; HTSeq-count was not able to recover >80% of the reads for any of the active elements; Cufflinks recovered at least 80% of the reads for 8% of the active TEs; RepEnrich recovered >80% of reads for 75% of the active TEs, but over-counted 57.69% of the active TEs. The fraction of active TEs for which the estimated abundance is within 15% of the true abundance was: 61.5% for TEtranscripts, 0% for HTSeq-count, 23.1% for RepEnrich, and 3.8% for Cufflinks. TEtranscripts and RepEnrich over-counted some TEs, which is displayed as the 15% of elements whose abundances were estimated to be >100% of their actual values at the far right of. Please refer to Supplementaryfor recovery rates with and without the EM optimization option in TEtranscripts.shows the abundances of active TEs estimated by each software package as compared with the ground truth (denoted with red dots). In most cases, TEtranscripts (green dots) is within 90% of the actual value, while the other two methods, HTSeq-count and Cufflinks, frequently under-estimate the abundance of TE transcripts for young, active TEs. RepEnrich (purple dots) shows more variations, nearly 30% under-estimation and 40% over-estimation. HTSeq-count (light blue dots) was expected to underestimate the counts, since the discarded multi-reads often constitute nearly 50% of the TE-associated reads. Surprisingly, Cufflinks also under-estimates the abundances for many active TEs, despite incorporating multireads in its analysis. Both under-and over-estimating the TE transcript abundances will affect both the ability to accurately calculate fold changes between samples and the power with which to calculate P-values for any associated changes. Please refer to Supplementaryfor the distribution of abundance recovery rates on active TEs of four approaches. In the next section, we assess the ability of these methods to return accurate fold changes and significant P-values for TEs known to have altered expression in published datasets that used a quantitative validation of their RNA-seq data.
TE recovery in published dataTo determine the usefulness of our algorithm on experimentally generated results, we tested TEtranscripts on previously published RNA-seq datasets of Drosophila and mouse transcriptomes. We then compared TEtranscripts to other approaches, such as HTSeqcount, Cufflinks and RepEnrich, each combined with DESeq. We applied DESeq for differential expression analysis on the outputs of the three approaches to directly compare the effects of quantification on P-value estimation. Both HTSeq-count and RepEnrich output raw counts that can be input tomapped (FPKM) value of each isoform, and then summarized them on genes or transposable elements. Although the Cufflinks package includes its own differential expression analysis software, Cuffdiff, it required at least 550 GB of memory to run on these datasets, and performed no better in terms of fold change estimation or P-value concordance than the results displayed below (Supplementary
Drosophila melanogaster transcriptomeThe Drosophila dataset comes from a study bythat observed the de-repression of transposable elements upon alteration of DmGTSF1, which works with the Piwi-associated silencing complex (piRISC) to silence TEs in the Drosophila ovary. This dataset was chosen because they assessed TE expression levels with RNA-seq, followed by validation through Q-PCR. This will allow us to compare the estimated fold changes from the four approaches, HTSeq-count, Cufflinks, RepEnrich, and TEtranscripts, with their Q-PCR results. We obtained the raw FASTQ data from Gene Expression Omnibus (accession no. GSE47006) and mapped with STAR, as described earlier, onto the D. melanogaster genome (dm3). Although TEtranscripts, HTSeq-count and Cufflinks were able to perform quantification directly from the BAM alignment output, RepEnrich requires independent alignment and TE quantification. We built a pseudogenome for dm3 TEs using the RepeatMasker open-4.0.5 release file () download from the following link: http:// www.repeatmasker.org/species/dm.html.shows the TE expression changes between Piwi knockdown and wild type. The log2 fold change (log2FC) calculated by TEtranscripts in multi mode closely resembles the Q-PCR results in most of the TEs interrogated. HTSeq-count performs well on most elements, but not as well as TEtranscripts on others (e.g. mdg1). Cufflinks reports similar values to HTSeq-count for most TEs, but performs better than TEtranscripts and HTSeq-count on the roo element. Surprisingly, RepEnrich deviates substantially from the qPCR validation results, and DESeq identified no differentially expressed TEs.
Mouse transcriptomeIn order to evaluate the utility of TEtranscripts on a mammalian genome with higher TE content, we selected a recently published study in mouse from. In this study, they provided NanoString quantification of several TEs, comparing a previously published RNA-seq dataset (GEO accession number GSE30352) (), to their microarray-based tool, TE-array. We performed similar analyses as described in the previous section, except that we map the reads to the mouse genome (mm10) and mouse TE pseudogenome (for RepEnrich).shows the comparison between TEtranscripts with multi mode and other quantification approaches. Similar to the results on Drosophila data, TEtranscripts outperforms HTSeq-count on many TEs (e.g. L1 M m, ERBV4, MMVL30 and ERVB2). Cufflinks (in multi-reads rescue mode) performs comparably with TEtranscripts on some TEs, but often fails to return abundance counts on others (as indicated by 'NA' in the plot). RepEnrich again deviates from the expected values (nanoString), and fails to identify any differentially expressed TEs from its quantification results.
TEtranscripts quantification in other published studiesFinally, the methodology utilized in TEtranscripts has also been applied in studying transposable elements mis-regulation in TDP43-mediated neurodenerative disorders () and the roles of Piwi in the piRNA pathway and transposon repression (). In both studies, we were able to demonstrate significant differential expression of TEs that was consistent with the biological phenotypes and with the set of TEs altered in independent experiments for those studies.
Running time and memory usageWe tested the running time and memory usage of TEtranscripts on simulated RNA-seq data. A variety of library sizes ranging from 20 to 100 M reads were generated based on the mouse genome (mm9), with each sample having 10% of the reads coming from TEs. Although TEtranscripts takes additional time and memory to distribute reads between the millions of TE instances in the genome as compared with other gene expression analysis packages, it is still relatively efficient, with a typical memory requirement of 8 GB and run times on the order of 12.5 h for datasets with 20100 million reads per sample (). All the experiments were run on a server with 128 GB memory and Xeon E5-2665 processors running atTEtranscripts
GHz (16 cores). The running time was measured using the built-in bash date command.
DiscussionTranscripts derived from TEs form a small but important subset of all transcriptomic datasets. Often thought of as junk transcripts with little importance for biological phenotypes, TEs can play a large and unexpected role in important processes such as stem cell identity and reprogramming (), and in human diseases (). Although TE-derived transcripts should be included as part of standard expression analyses, there have previously been few tools that allow the easy inclusion of TE-associated reads. TEtranscripts allows users to simultaneously analyze geneand TE-derived transcripts in a simple expression analysis framework that works with aligned (BAM) files and annotation files (GTF). Using simulated reads as well as published datasets that include independent validations, we have shown that TEtranscripts outperforms all other published methods in abundance estimation, and concordance between statistical significance estimation and validated alterations in expression. In simulated datasets, we show that TEtranscripts performs particularly well at estimating the abundance of young TEs, which are more likely to be mobile and active in cells. In published datasets for both fly and mouse genomes, we show that alterations in TE expression estimated from RNA-seq data by TEtranscripts show better overall concordance with external validation data. TEtranscripts particularly outperforms other methods for complex mammalian genomes, such as the mouse, which has many more insertions per TE than flies, and a larger diversity in TE families. As with all approaches that quantify RNA expression from alignment data, TEtranscripts is highly dependent on the quality of the genomic alignment and annotation data (for genes and transposable elements). This is especially problematic when working with strains or cultivars whose DNA sequences and transposable element content have diverged significantly from the 'reference' genome and annotations. TEtranscripts mitigates this limitation by providing flexibility in the input files provided by the user. Our software is agnostic to the genomic aligner and mapping parameters used to generate the input alignment files, as long as it complies with the SAM/BAM format. This enables users to optimize genome alignment parameters according to the characteristics of their experimental system before analysis with TEtranscripts. TEtranscripts can also utilize user-defined annotations for both gene and transposable elements during quantification. Although we have provided transposable element annotation files for a few common genomes, our software will process any TE annotations in the GTF format described earlier. These could include TE annotations that have been manually curated for a specific strain, or those identified by bioinformatics tools searching for de-novo transposable elements. This will allow users to provide the best annotation data suitable for their experiment, and maximizes the quality of analysis produced by TEtranscripts.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Y.Jin et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Fig. 6. Running time and memory usage. RepEnrich has a pre-requisite preparation step of building the pseudogenome of transposable elements, which was not included in this plot
