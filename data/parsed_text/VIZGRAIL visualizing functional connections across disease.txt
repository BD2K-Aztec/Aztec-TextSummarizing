Motivation: As disease loci are rapidly discovered, an emerging challenge is to identify common pathways and biological functionality across loci. Such pathways might point to potential disease mechanisms. One strategy is to look for functionally related or interacting genes across genetic loci. Previously, we defined a statistical strategy, Gene Relationships Across Implicated Loci (GRAIL), to identify whether pair-wise gene relationships defined using PubMed text similarity are enriched across loci. Here, we have implemented VIZ-GRAIL, a software tool to display those relationships and to depict the underlying biological patterns. Results: Our tool can seamlessly interact with the GRAIL web site to obtain the results of analyses and create easy to read visual displays. To most clearly display results, VIZ-GRAIL arranges genes and genetic loci to minimize intersecting pair-wise gene connections. VIZ-GRAIL can be easily applied to other types of functional connections, beyond those from GRAIL. This method should help investigators appreciate the presence of potentially important common functions across loci. Availability: The GRAIL algorithm is implemented online at
INTRODUCTIONAs genome-wide association studies rapidly identify genetic loci for a broad range of phenotypes, investigators are critically focused on identifying key pathways and biological processes suggested by genetic findings (). We have separately described a computational strategy, Gene Relationships Across Implicated Loci (or GRAIL), that uses statistical text-mining strategy to rapidly identify genes across multiple loci that are similar to each other, and to then assess if that degree of similarity is more than might be expected by chance (). The approach depends on pairs of related genes using 525 000 PubMed article abstracts identified using word similarity metrics. GRAIL has now been applied to prioritize SNPs for replication or to demonstrate common function among genes near associated SNPs across a wide range of phenotypes including height (), rheumatoid arthritis (), Crohn's disease). the figure (see Supplementary Material). Briefly, we define an objective function that calculates the total burden of intersections, weighing intersections between thicker connections more heavily. Then we iteratively chose random loci with at least one gene with an intersecting connection, and then we try manipulating the arrangement by either (i) moving the locus to each of the different positions in the circle, (ii) swapping the locus with every other locus in the circle or (iii) inverting different segments of the circle starting from that locus and ending at other positions. At each iteration, we chose the manipulation that most reduces the total number of intersecting connections and update the arrangement iteratively. Once the loci have been arranged, then genes within each of the loci are permuted to reduce the number of total intersections.
S.Raychaudhuri
EXAMPLESWe present examples of VIZ-GRAIL runs in. The files used to create this figures are provided in the Supplementary Material.and B presents an illustrative example. In this case, there is a single optimal solution without any intersecting connections. In, the regions and genes are plotted without arranging to minimize intersectionsthe display looks jumbled and it is difficult to see any clear patterns. VIZ-GRAIL is able to find the optimal arrangement in 184 iterations run on a personal laptop in <1 h (); the connections between genes and loci are much more clear. As a realistic example, we plot the literature-based similarity across 34 known rheumatoid arthritis (RA) risk loci, implicating a total of 132 genes (). After using VIZ-GRAIL to arrange genes and loci to minimize intersections, related genes are clearly seen, for example the genes involved in the IL2 pathway (IL2, IL2RA and IL2RB), as well as the CD28-CTLA4 pathway.
(Franke et al., 2010) and cancer (Beroukhim et al., 2010). While the GRAIL statistical approach calculates the statistical significance of the number and strength of functional similarity across loci, it does not concisely illustrate functional similarities in an intuitive fashion that reveals the underlying biology. Our goal was to produce a visualization that allowed users to see more clearly the underlying genes and biological functionality driving the GRAIL statistical scores. 2 IMPLEMENTATION In order to make the GRAIL algorithm accessible online, we have implemented it at http://www.broadinstitute.org/mpg/grail/ grail.php. The online interface is implemented with a PHP script. Users enter genetic loci, typically as a list of SNPs or coordinates of genomic segments, and select a gene similarity metric. Those inputs are then passed onto backend software implemented in Perl and MATLAB, operating on an LSF cluster farm, and the user is emailed when the job is completed with links to the online results page. Gene similarity metrics can be based on word vector similarity of PubMed text of abstracts referencing genes (Raychaudhuri, 2006), of gene expression vector similarity in a gene expression database (Su et al., 2004) or similarity in gene ontology terms (Ashburner et al., 2000). The infrastructure is flexible and can allow for defining alternative similarity metrics in the future. In order to effectively display results, we implemented the VIZGRAIL software in Perl that interacts with the GRAIL online site to download the results of user-defined analyses jobs, and to construct high-quality display graphics of interactions between genes across phenotypically associated loci. The different loci are arranged in a circle, similar to Circos genome plots (Krzywinski et al., 2009). Genetic loci are arranged around an outer circle, while genes within them are grouped together in an inner circle. Lines are drawn between functionally similar genes that are within different loci. The VIZ-GRAIL program determines the thickness of lines between two genes to be proportional to the relative similarity of the two genes, and inversely proportional to the number of genes within the loci that the genes are derived from, in order to account for the possibility of spurious connections (see Supplementary Material). Critical to displaying connections between loci clearly is the particular arrangement of the loci and genes around the circle. Often lines connect specific subsets of loci together. If those subsets are not carefully arranged around the circle, then many intersecting connections obscure biologic intuition. Therefore, as a key part of our software we have implemented an optimization procedure that minimizes the total burden of intersecting connections in  The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from [15:32 12/5/2011 Bioinformatics-btr185.tex] Page: 1590 15891590
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
