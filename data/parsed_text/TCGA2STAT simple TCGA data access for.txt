Motivation: Massive amounts of high-throughput genomics data profiled from tumor samples were made publicly available by the Cancer Genome Atlas (TCGA). Results: We have developed an open source software package, TCGA2STAT, to obtain the TCGA data, wrangle it, and pre-process it into a format ready for multivariate and integrated statistical analysis in the R environment. In a user-friendly format with one single function call, our package downloads and fully processes the desired TCGA data to be seamlessly integrated into a computational analysis pipeline. No further technical or biological knowledge is needed to utilize our software , thus making TCGA data easily accessible to data scientists without specific domain knowledge. Availability and implementation: TCGA2STAT is available from the https://cran.r-project.org/web/ packages/TCGA2STAT/index.html.
IntroductionOver the last decade, The Cancer Genome Atlas (TCGA) consortium has measured large-scale genomics and clinical profiles of cancer patients so that scientists can study tumor genomes and decipher the genetic underpinnings of cancer. The TCGA data can be downloaded from web portals or via web services, such as the TCGA data portal (https://tcga-data.nci.nih.gov/tcga/), cBio (), canEvolve (), or Broad Institute GDAC Firehose (http://gdac.broadinstitute.org/). However, manual download of this massive data is time consuming and web service calls like the firehose_get function require additional program installation and technical setup. Most importantly, these two approaches cannot be easily integrated into a framework for statistical analysis. Many extra steps and technical knowledge of molecular platform data formats are needed to wrangle and pre-process the data before it can be statistically analyzed. Further, this process must be repeated when new data versions or additional samples become available, hindering efforts at version-control and reproducible research. Others have provided software to obtain the TCGA data. cBio, for example, provides an R and Matlab package but was not designed to be used for genome-scale data analysis. It requires input of a list of genes from users and thus limits the exploratory use of the data. Another R package, RTCGAToolbox downloads TCGA data from Firehose (), but the downloaded data is not preprocessed into data formats conducive for multivariate statistical analysis. Further, linking and merging functions necessary for integrated statistical analyses such as sample matching across multiple platforms and merging clinical and molecular data are not available in this package. Because of these problems, use of the TCGA data can be limited to those with domain expertise, rendering the data inaccessible for general data scientists. In response, we have developed an R packageTCGA2STAT that makes the TCGA data in the open access data tier easily accessible to all by downloading, wrangling and pre-processing the data into a data matrix or list of matrices ready for multivariate or integrated statistical analyses. The package imports both molecular profiles and clinical data of more than thirty cancer types profiled with more than eleven high-throughput genomics platforms, including microarray, sequencing, methylation array, SNP array and array-CGH (See a full list in vignette). The imported molecular profiles and clinical data are automatically combined into a matrix for easy supervised analysis. Further, we provide functions for linking and merging samples from different molecular platforms that are necessary for integrated analysis. Most importantly, our package has one simple interface to perform all of these functions. The ease of obtaining this big biological data will encourage computational scientist to mine the TCGA data which in turn will bring new insights and breakthroughs in cancer research.
ImplementationThe TCGA2STAT package is developed under the R statistical computing environment and is compatible with version 3.0 or later. The package uses HTTP calls to the Firehose site and parses necessary information to download the data. This is achieved via functions implemented through the XML package (). The data imported is the latest version of all version-stamped standardized data sets hosted and maintained by Firehose, and usage of the data imported via this package constitutes an agreement with the TCGA data usage policy. For some platforms, statistical analysis of data obtained directly from Firehose can be challenging without further data pre-processing. For example, mutation data in MAF files have patients repeated in multiple rows as multiple mutations are found, and the number of mutations differs across patients; this makes formatting mutation data into a data matrix difficult. Hence, TCGA2STAT filters mutation data based on status and variant classification and then aggregates the filtered data at the gene level. This yields a gene-by-sample data matrix with a value of one in cell (i,j) if a mutation is found in gene i and patient j, and zero otherwise. TCGA2STAT also wrangles and preprocesses data from other platforms such as CGH array and SNP array data into a gene by patient data matrix. Details of all wrangling and preprocessing steps are described in the package vignette (Supplementary Data).
Functions and examplesThe TCGA2STAT package includes one major function and three additional utility functions: @BULLET getTCGA. This is the main function of the package which obtains data from Firehose and processes the data into a matrix that can be used directly for statistical analysis in R. Only two inputs are required: the cancer type desired and the data platform or molecular profiling type desired. Our package supports over thirty different cancer types and eleven different data platforms. For example, getTCGA(disease " OV " , data.type " RNASeq2 " ) will obtain the RNASeq2 level III RSEM data from TCGA ovarian cancer patients. With the same function, the user can specify the specific types of data for each platform, such as counts instead of RPKM for RNASeq data. Also, users can choose to download the molecular profiles along with clinical data or filter the data by particular clinical covariates. @BULLET SampleSplit. This function can be used to split the data imported via getTCGA into groups of samples profiled from the primary tumor, recurrent tumor, or normal/control groups. @BULLET OMICSBind. For integrated statistical analysis of patients from two or more data platforms, this function can be used to merge the genomic data sets into coupled matrices with the same patient order. @BULLET TumorNormalMatch. This function matches molecular profiles of the samples from primary tumor and normal/control groups in the same order, thus giving a data matrix ready for pair-wise statistical analyses.These functions can be seamlessly integrated into R scripts for any statistical analysis of high-throughput genomics data. As an example shown in code snippets below, we use the TCGA2STAT package to download RNASeq2 and methylation data from lung squamous cell carcinoma (LUSC) patients (Part I), combine them for integrated analyses (Part II), and then use the combined R object for a simple canonical correlation analysis (Part III). The results are shown in. A comprehensive walk-through of this example and code snippets for drawing the results inare given in the package vignette.# Part I: Download NGS expression and methylation data for LUSC methyl <-getTCGA(disease " LUSC " , data.type " Methylation " ) rnaseq2 <-getTCGA(disease " LUSC " , data.type " RNASeq2 " , clinicalTRUE) met.var <-apply(methyl$dat, met.var > quantile(met.var, 0.99, na.rmT) &!is.na(met.var)) rnaseq2.var <-apply(log10(1rnaseq2$ dat), 1,var)rnaseq2.var > quantile(rnaseq2.var, 0.99, na.rmT) &!is.na(rnaseq2.var))# Part II: Merge the two data types for integrated analysis met.rnaseq2 <-OMICSBind(dat1  rnaseq.data, dat2 met.data). Results of regularized canonical correlation analysis on gene and methylation expressions of TCGA LUSC patients. We show the canonical loadings of the first two dimensions on genes (A) and methylation regions (B). By projecting onto the canonical loadings, the LUSC patients can be separated into two groups (C) with distinct survival outcomes (D) TCGA2STAT# Part III: Perform CCA on merged data, X and Y lusc.cc <-rcc(t(met.rnaseq2$X), t(met.rnaseq2$Y), 0.75025, 0.5005)
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Y.-W.Wan et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
