Visualizing and summarizing data from genomic studies continues to be a challenge. Here, we introduce the GenVisR package to addresses this challenge by providing highly customiz-able, publication-quality graphics focused on cohort level genome analyses. GenVisR provides a rapid and easy-to-use suite of genomic visualization tools, while maintaining a high degree of flexibility by leveraging the abilities of ggplot2 and Bioconductor.
IntroductionThe continued development of massively parallel sequencing technologies has led to an exponential growth in the amount of genomic data produced (). This growth has in turn enabled scientists to investigate increasingly large, cohort-level genomic datasets. Generating intuitive visualizations is a critical component in recognizing patterns and investigating underlying biological properties in cohorts under study. A significant bottleneck exists, however, between data generation and subsequent visualization and interpretation (). Additionally, generating publication-quality figures for effective communication of these data typically requires ad hoc methods such as manual creation or extensive graphic manipulation with third party software. This process is both time intensive and difficult to automate/reproduce. Further, the absence of software supporting multiple species can make this process even more demanding. Here, we present GenVisR, a Bioconductor package to address these issues. GenVisR provides a user-friendly, flexible and comprehensive suite of tools for visualizing complex genomic data in three categories (small variants, copy number alterations and data quality) for multiple species of interest.
Visualization of small variantsThe identification of small variants (SNVs and indels) within a genomic context is of paramount importance for the elucidation of the genetic basis of disease. Numerous tools and resources have been created to identify variants in sequencing data (). Conversely, few tools exist to visually display and summarize these variants across sample cohorts. Given a gene of interest, it is often useful to view variant occurrences in the context of the translated protein product (). A variety of options exist to achieve this; however tools that offer both automation and flexibility to perform this task are lacking (Supplementary) (). The function lolliplot was developed to allow for precise control over visualization options (). This includes the ability to choose Ensembl annotation databases for V C The Author 2016. Published by Oxford University Press.
1This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.protein domain displays and to plot multiple tracks of mutations above and below the protein representation. Another common objective of genomic studies is to identify variant recurrence across multiple genes within a cohort. The GenVisR function waterfall was developed to calculate and rapidly illustrate the mutational burden of variants on both a gene and sample level, and further differentiates between variant types () (). Mutually exclusive genomic events at the variant level are emphasized in this visualization by arranging samples in a hierarchical fashion such that samples with mutations in the most recurrently mutated genes are ranked first. Finally, it is often informative to investigate the rate of transition and transversion mutations observed across a set of cases. For example, lung tumors originating from patients with a history of tobacco smoke exposure display a pattern of enrichment for C to A or G to T transversions (). The function TvTi (transversion/ transition) was developed to improve recognition of these types of patterns within a cohort.
A
Visualization of copy number alterationsCopy number alterations occurring within the genome are implicated in a variety of diseases (). The function GenCov illustrates amplifications and deletions across one or more samples in a genomic region of interest (). A key feature of GenCov is the effective use of plot space, especially for large regions of interest, via the differential compression of various features (introns, exons, UTR) within the region of interest. For a broader view the function cnView plots copy number calls, and the corresponding ideogram, for an individual sample at the chromosome level. The function cnSpec displays amplifications and deletions on a still larger scale via copy number segments calls. This information is displayed as a heat map arranged in a grid indexed by chromosomes and samples. Alternatively, cnFreq displays the frequency of samples within a cohort that are observed to have copy number gains or losses at specific genomic loci. In addition to copy number changes, loss of heterozygosity (LOH) often plays an important role in genomic diseases. For example, in acute myeloid leukemia copy neutral LOH has been associated with shorter complete remission and worse overall survival (). The function lohSpec displays LOH regions observed within a cohort () by plotting a sliding window mean difference in variant allele fractions for tumor and normal germline variants.
Visualization of data qualityIn genomic studies, the quality of sequencing data is of critical importance to the proper interpretation of observed variations. Therefore, we provide a suite of functions focused on data quality assessment and visualization. The first of these, covBars, provides a framework for displaying the sequencing coverage achieved for targeted bases in a study (). A second function, compIdent, aids in the identification of mix-ups among samples that are thought to originate from the same individual (). This is achieved by displaying the variant allele fraction of SNPs in relation to each sample. By default, 24 biallelic 'identity SNPs' () are used to determine sample identity.
Example usageGenVisR was developed with the navenave R user in mind. Functions are well documented and have reasonable defaults set for optional parameters. To illustrate, creatingwas as simple as executing the waterfall function call on a standard MAF (version 2.4) file containing variant mutation data and choosing which genes to plot:The MAF file format originally developed for The Cancer Genome Atlas project (Cancer Genome Atlas Research) is the default file format accepted by waterfall. This format was chosen based on its simplicity and accessibility. A number of resources exist to convert VCF files common to most variant callers to MAF format. In the interest of maintaining flexibility, the waterfall and other GenVisR functions are able to accept alternative file types as input.
ConclusionGenVisR provides features and functions for many popular genomic visualizations not otherwise available in a single convenient package (). By leveraging the abilities of ggplot2 () it confers a level of customizability not previously possible. Virtually any aspect of a plot can be changed simply by adding an additional layer onto the graphical object. Thus, GenVisR allows for publication quality figures with a minimal amount of required input and data manipulation while maintaining a high degree of flexibility and customizability.
Bioinformatics, 2016, 13 doi: 10.1093/bioinformatics/btw325 Advance Access Publication Date: 10 June 2016 Applications Note Bioinformatics Advance Access published June 22, 2016 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
