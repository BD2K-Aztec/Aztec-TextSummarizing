Motivation: Small non-coding RNAs (sRNAs) have major roles in the post-transcriptional regulation in prokaryotes. The experimental validation of a relatively small number of sRNAs in few species requires developing computational algorithms capable of robustly encoding the available knowledge and using this knowledge to predict sRNAs within and across species. Results: We present a novel methodology designed to identify bacterial sRNAs by incorporating the knowledge encoded by different sRNA prediction methods and optimally aggregating them as potential pre-dictors. Because some of these methods emphasize specificity, whereas others emphasize sensitivity while detecting sRNAs, their optimal aggregation constitutes trade-off solutions between these two contradictory objectives that enhance their individual merits. Many non-redundant optimal aggregations uncovered by using multiobjec-tive optimization techniques are then combined into a multiclassifier, which ensures robustness during detection and prediction even in gen-omes with distinct nucleotide composition. By training with sRNAs in Salmonella enterica Typhimurium, we were able to successfully predict sRNAs in Sinorhizobium meliloti, as well as in multiple and poorly annotated species. The proposed methodology, like a meta-analysis approach , may begin to lay a possible foundation for developing robust predictive methods across a wide spectrum of genomic variability. Availability and implementation: Scripts created for the experimentation are available at
INTRODUCTIONSmall non-coding RNAs (sRNAs) have major roles in the bacterial post-transcriptional regulation, affecting important cellular processes such as cell division () and response to environmental stimuli (), among others. Experimental methods, including nextgeneration sequencing technologies, are critical for the functional characterization of sRNAs (). However, the experimental verification of a relatively small number of sRNAs, primarily in Escherichia coli K12 () and Salmonella enterica serovar Typhimurium LT2 (SLT2) (), is not sufficient to help detect them in the large list of available sequenced genomes. Therefore, there is a requirement of developing computational algorithms capable of robustly encoding the knowledge of known sRNAs available in certain genomes and using this knowledge to predict sRNAs in other species (). The computational identification of non-coding RNAs (ncRNAs), which includes sRNAs, (ribosomal RNAs) rRNAs and transfer RNAs (tRNAs), is constrained by their diversity in terms of structures, sequences and functions (). Structures of ncRNAs are often scored based on thermodynamic stability, conservation and/or covariance of sequence alignments. Sequences of ncRNAs are primarily analyzed by using two strategies: ab initio, which scrutinizes a single-query sequence [e.g. zMFold (), vsFold (and comparative [e.g. QRNA (), Alifoldz (), dynalign (), MSARi () and RNAz2 (, where the query sequence is investigated by its similarity to other aligned sequences. The latter strategy requires methods for accessing databases, as well as heuristics to efficiently evaluate similarity among sequences. Both strategies require classifiers [e.g. support vector machines () or customized hidden Markov models ()] to predict new ncRNAs based on the acquired knowledge in the training phase. Remarkably, most of the training sets currently used to predict sRNAs are composed of positive examples of rRNAs and tRNAs, which are easier to identify than sRNAs because of their longer sequences and well-defined structure. Although several methods have been developed and represent a step forward in the computational detection of sRNAs, their success is limited because of (i) the excessive emphasis on specificity, which generates a high number of false-negative predictions by targeting few well-known sRNA families corresponding only to a small percentage of the available sRNAs, (ii) the use of genomic features (e.g. motifs of terminators, RNA polymerase) that are only conserved in closely related organisms [e.g. E.coli and Salmonella (the emphasis on sensitivity to detect novel findings by thermodynamical approaches, where several examples shown in bacterial genomes harbor well-defined secondary structures and high thermodynamical stability () but do not correspond to true sRNA sequences () (i.e. predicted false-positive findings). Combining pairs of these methods partially overcome these limitations (del). For example, we previously combined QRNA and RNAz to identify sRNAs in Sinorhizobium meliloti; however, the significant reduction in the number of false-positive findings leads to very low sensitivity (del). The performance of a classifier or prediction method may be improved when combining different methods and thus suggests a path to improve bacterial sRNA prediction through metaanalyses of results from existing tools. Therefore, here we propose a new methodology (), which performs optimal aggregations of existing methodstermed basic methodsto predict sRNAs by using machine learning and optimization techniques. This strategy minimizes the false-positive rate during detection and prediction and, simultaneously, maximizes the number of sRNA identified, independently of the evaluated genome. We trained our methodology using the SLT2 genome, which is the Gammaproteobacteria model organism harboring the highest number of experimentally validated sRNAs. The resulting strategy was later successfully applied to predict sRNAs in S.meliloti, a distant Alphaproteobacteria of a great agricultural importance, that has not been used in the training set and has numerous annotated sRNAs (). Finally, the strategy was tested in a multispecies dataset (). The performance achieved by our methodology when compared with that of the basic or pairwise combinations of methods demonstrated that the proposed methodology is accurate and robust to detect sRNAs even in distantly related species. Note that our approach does not invalidate methods developed de novo but complements them by providing an efficient way of combining their most reliable features and thus extracts the maximum benefits from each method. Our approach might bring some light into the development of robust predictive methods across a wide spectrum of genomic variability.
METHODS
Selection of basic methods for predicting sRNAsWe selected different methods developed to identify sRNAs as inputs. These include zMFold (), vsFold (), QRNA (), Alifoldz (), dynalign (), MSARi () and RNAz2 () (see Supplementary Material for specific description and parameters). They exhibit different characteristics in terms of their subjacent algorithms (i.e. covering all three main approaches to RNA prediction: thermodynamic stability, conservation and covariance of sequence alignments), implementation strategy and subjacent training sets (Supplementary).
Creation of positive and negative training datasetsTo train our methodology, we created a dataset with both positive and negative examples of sRNAs in the bacterial genome of SLT2 (Supplementary). This organism was selected as a model organism because it harbors a large number of verified sRNAs. The SLT2 dataset of positive examples includes 193 experimentally verified sRNAs (Supplementary). A total of 52 sRNAs were identified by RNA-seq experiments, whereas the others were identified by traditional experimental approaches () or registered in specialized databases such as RFAM (RFAM version 10.0;). To simulate real prediction conditions, we added the 120 nt upstream and downstream of each sequence in the dataset. Some of the basic methods selected for this study (Supplementary) use a comparative strategy and therefore need similar sequences in other species. Our positive dataset includes pairwise or multiple alignment of sequences. These methods are highly dependent on the similarity between the sequences constituting the input alignments. The most informative alignments are composed of sequences sharing between 60 and 85% of similarity (). To achieve these standards, we selected sequences from E.coli K12, Klebsiella pneumonia, Xylella fastidiosa and Yersinia pestis KIM (genome sequences and annotations were downloaded from the NCBI ftp server, ftp://ftp.ncbi.nih.gov/genomes/ Bacteria). Pairwise alignments were performed by using NCBI-BLAST () (http://blast.ncbi.nlm.nih.gov/), with a word size of 8, and default parameters. Alignments with an E-value40.00001 and a length550 nt were discarded. Multiple alignments were based on previously calculated pairwise alignments by using T-COFFEE (). This algorithm uses the pairwise alignments to build up a library of alignment information that guides the progressive multiple alignments. This progressive strategy provides a dramatic improvement in accuracy with a modest sacrifice in speed when compared with other multiple alignment alternatives (). To estimate false-positive predictions, we generated a dataset of negative examples by shuffling the individual, pairwise and multiple-aligned sequences in the positive dataset. Individual sequences were shuffled using the program shuffleseq (), which is included in the emboss package. This script takes an input sequence and randomly shuffles the order of its base without affecting the composition. Aligned. Prediction of sRNAs by using machine learning and optimization techniques through the optimal aggregation of existing methods termed basic methods sequences were randomly shuffled using the shuffle-pair.pl method (). This method preserves the properties of the original sequences or alignments (e.g. overall guanine-cytosine (GC) content, % identity, distributions of identities, mismatches and gaps), while destroys correlated base-pairing patterns in a conserved RNA structure. An alternative approach is to consider genome regions without annotated sRNAs as negative examples (). However, absence of knowledge does not imply knowledge of absence, and there are many examples in our previous work in transcriptional regulation where non-meaningful genomic regions resulted in truly functional genomic regions (). Therefore, we believe that a synthetic negative dataset based on shuffling of the positive dataset sequences secures the disruption of secondary structures implicated in sRNAs and thus may produce less uncertainty about negative examples and better estimation of specificity. However, the use of non-annotated sequences as negative dataset would be a better choice if a more conservative estimate of the precision is envisaged.
Aggregations of basic methodsThe aggregation of methods is performed by systematically applying the union [ and intersection \ operations (Supplementary) to sets of predictions performed by basic or previous aggregations of methods (). These aggregations are reminiscent of logic expressions representing combined predictions. The union operation (method A [ method B ) reports the largest subsequences predicted or covered by any of the operands (Supplementary). The intersection operation (method A \ method B ) reports a sequence embracing only those nucleotides predicted by both operands (Supplementary).
Evaluation of methods: sensitivity and specificityThe evaluation of results from basic or aggregation of methods was carried out in a similar fashion. A query sequence in either the positive or the negative dataset is considered to be predicted by a method if (i) the predicted sequence is included in the query sequence, (ii) the query sequence is included in the predicted sequence or (iii) at least 70% of the nucleotides in the query sequence are covered by the predicted sequence. True-positive predictions (TP) are defined as the number of sequences in the positive dataset predicted by a method; true-negative predictions (TN) correspond to the number of sequences in the negative dataset that are not predicted by a method; false-positive predictions (FP) correspond to the number of sequences in the negative dataset that are predicted by a method; and false-negative predictions (FN) is the number of sequences in the positive dataset that are not predicted by a method. Sensitivity is defined as the proportion of sequences in the positive dataset that are predicted by a method, whereas specificity [Sp;] corresponds to the proportion of sequences in the negative dataset that were not predicted by a method.
Sn= TP TP+FN 1Sp= TN TN+FP 2
Identification of optimal aggregation of methodsTo optimally aggregate methods and their corresponding predictions of sRNAs, we implemented an efficient multiobjective evolutionary algorithm relying on the NSGA-II algorithm (see Supplementary Material). Optimal aggregations are defined as those that maximize two objectives: Sp and Sn. To prevent data overfitting and bloat (), we applied the following constrains to select specific aggregations of methods: (i) if two aggregation of methods have the same Sp and Sn, the one with the lower number of basic methods is preferred, and (ii) a basic method might only appear one time in each aggregation of methods.
Basic methods identify sRNAs with disparate sensitivity and specificityWe applied seven basic methods including zMFold, vsFold, QRNA, Alifoldz, dynalign, MSARi and RNAz2 (Supplementary Table S1) to identify sRNAs. These methods constitute the state-of-the-art in the field and implement diverse methodologies that embrace the most relevant features that characterize sRNAs. The performance of the basic methods was estimated according to their Sp and Sn by scoring the sequences/ alignments from the positive and negative SLT2 training datasets. The obtained results reveal that these methods tend to favor either Sp or Sn, but not both of them simultaneously (). For example, RNAz2 (Sp 0.98, Sn 0.27) exhibits high Sp but low Sn, whereas zMFold (Sp 0.49, Sn 0.90) does the opposite. QRNA achieves the best trade-off between both Sp and Sn. We found that most of the sRNAs are predicted by more than two basic methods (Supplementary). A large group of sRNAs is predicted by just one method (55 sequences) but with low Sp, whereas only a small group of sequences is not predicted by any of the methods (8 sequences; Supplementary). These differences in terms of Sp and Sn exhibited by the basic methodstrained mainly with S.enterica Thyphimurium and E.coliraise the question if their combination could be successfully applicable to other genomes.
The proposed strategy identifies optimal aggregations of basic methods that predict sRNAsThe basic methods showed different and sometimes opposing Sp and Sn values when predicting sRNAs (). This may be due to their specific methodological approaches that tend to emphasize particular features that characterize sRNAs but not others. To address this problem, we incorporated and combined the particular skills of each basic predictor and eliminated their contradictory information. To combine the most promising characteristics of basic methods, we run all basic methods over the training dataset (i.e. SLT2 dataset) and searched for optimal aggregations of these methods. The aggregations are performed by combining basic methods using the union [ and the intersection \ operations () on their predictions at the nucleotide level (Supplementary). These typical mathematical set operations have their parallel logic operations (i.e. OR and AND), which consecutive application allows defining any possible logic expression. The potential aggregation of methods (here 420 000) creates a large space of potential hypotheses, which can be represented as a lattice (Supplementary). Each aggregation in the lattice can be considered as a new prediction method. The union of methods increases Sn and decreases Sp, whereas the intersection does the opposite, as expected. Then, the combination of union and intersection operations in the same aggregation may increase Sp and Sn simultaneously. However, the aggregation of all methods does not necessarily ensure more accurate predictions (). For instance, two methods may have contradictory predictive strategies, or even more, the simple summation of them can lead to overfitting (). Moreover, the computational complexity of performing an exhaustive search of all logical expressions (i.e. Boolean satisfiability problem) is of complexity NP-complete (). Therefore, a careful optimization strategy is required to integrate the basic methods in an appropriate fashion. To address the computational complexity described above, our methodology applies a heuristic approach consisting in the generation of optimal aggregations by using multiobjective optimization techniques; particularly, we used the genetic algorithm NSGA-II (Supplementary Material) that simultaneously search for trade-off solutions between two objectives (i.e. Sp and Sn). Because there are two possibly contradictory objectives to be optimized simultaneously, there is no single optimal solution but rather a family of optimal results (). These results are organized as a Pareto optimal front (Supplementary). This front includes all non-dominated solutions (), where one solution is said to dominate another solution when it is better than the other in all objectives being considered (e.g. both sensitivity and specificity).
Optimal aggregationsof basic methods enhance their specificity and sensitivity for identifying sRNAs We identified 26 different optimal aggregations based on the SLT2 dataset that correspond to non-dominated solutions (and Supplementary). For example, both aggregations AGR_14 (Sp 0.79, Sn 0.66) and AGR_26 (Sp 0.33, Sn 0.98) are in the Pareto front of optimal solutions because the first has better Sp values but worst Sn values than the second. Of all these aggregations, the ones with the best possible trade-offs among the selected objectives normally lie on the 'knee' of the Pareto front () (Supplementary). All 26 aggregations dominate the basic methods based on the Sp and Sn objectives, and thus none of the latter solutions are in the optimal Pareto front (SupplementaryOur strategy assembles all optimal aggregations of methods in a multiclassifier, which is a decision-making method that considers all of these solutions in a cooperative strategy toward identifying sRNAs (see Section 2). Here, the cooperation policy was implemented as a simple majority voting approach of all nondominated aggregations, which guarantees robust predictions (Supplementary). First, we tested the performance of the multiclassifier with respect to the SLT2 training dataset, obtaining 0.78 and 0.67 averaged scores of Sp and Sn, respectively (). To account for the sample variability, we performed a 10-fold cross-validation on the same SLT2 training dataset (Supplementaryand Supplementary Tables S4S7), obtaining 0.81 and 0.61 averaged scores of Sp and Sn, respectively. Remarkably, the average of the nine partitions used as training sets along the 10-folds exhibited 0.83 and 0.62 averaged scores of Sp and Sn, respectively. The similar training and test across the cross-validation process exhibits the robustness and stability characteristics of the multiclassifier implemented in our methodology. At least four classes of aggregations identify distinct subsets of sRNAs (Supplementary). One class of aggregations recognizes most of the sRNAs with high Sn but relatively low Sp scores (; AGR_21 to AGR_26). In contrast, another class of aggregations recognizes only a single subset of sRNAs with high Sp but low Sn (; AGR_1 to AGR_9). Most of the other aggregations recognize a large subset of sRNAs (). Notably, the majority voting strategy implemented in our methodology allows preserving the trade-offs between these classes in the prediction process, which is consistent with the criteria used for the selection of aggregations in the Pareto front. Other approaches like predicting by the Maximum Sn or Sp may provide better but less robust results. Then, we tested the performance of the multiclassifier on another dataset of sRNA examples that were not included in the previous SLT2 training set. As in the case of the SLT2 dataset, we compiled a new dataset 81 experimentally validated sRNAs in the well-studied but phylogenetically distant bacterium S.meliloti (see Section 2; Supplementary). The multiclassifier based on 26 aggregations obtained 0.72 and 0.58 scores of Sp and Sn, respectively (), whereas the best basic method for this dataset (zMfold) showed 0.44 and 0.67 scores of Sp and Sn, respectively (). Because the Sp and Sn scores obtained by our methodology are not significantly different from those obtained with the SLT2 training dataset, the obtained results confirm that the proposed strategy is sufficiently robust to make accurate predictions even under different nucleotide composition of the target genome. We also compared the performance of our methodology with that of the SIPHT method (), which is widelyused by the scientific community. This method uses the QRNA basic method combined with other computational tools that identify and annotate sequence-based motifs of transcription factor binding sites and rho-independent terminators. Because the SIPHT method uses genomic features for its predictions of sRNAs, our database of negative examples cannot be used for comparison purposes because the motifs of these features are likely to be destroyed in shuffled sequences (see Section 2). Therefore, the Sp score cannot be fairly estimated. Consequently, we compared our methodology with SIPHT in terms of Sn. The predictions of SIPHT for SLT2 and S.meliloti were obtained from (http://newbio.cs.wisc.edu/sRNA/). We predict sRNAs with 0.67 and 0.57 averaged scores of Sn in SLT2 and in S.meliloti, respectively. In comparison, SIPHT predicts the sRNAs contained in our SLT2 and in S.meliloti databases of positive examples with 0.46 and 0.33 scores of Sn, respectively. We also tested the predictive power of our approach with another dataset composed of sRNAs derived from 14 different genomes () (see Section 2), which also were not contained in the training set. We significantly overcame the basic methods used by () in all genomes independently of their GC content, except for Burkholderia and Chlamydia (). The best performing individual methods in () obtained 0.27, 0.20, 0.40 and 0.49 of Sn in the different datasets, while our methodology obtained an average of 0.70 Sn across all datasets (Supplementary). Remarkably, these values were similar in SLT2 and S.meliloti.
DISCUSSIONThe use of next-generation technologies, such as RNA-seq, demonstrated that the number and diversity of sRNAs is greater than was originally expected (). Therefore, there is increased interest in identifying sRNAs and deciphering their role in regulatory systems within a particular species or across multiple species. These experimental methods are critical for functional characterization of sRNAs (); however, their applicability still has been constrained to a relatively small number of sRNAs as well as genomes. Consequently, computational prediction of sRNAs is required to develop new hypothesis that allows focusing the experimental verification on particular targets, to provide clues about the molecular mechanisms governing gene regulation. Different strategies have been implemented using distinct computational methods to predict sRNAs (); however, most of them exhibit similar limitations. Essentially, there is a trend in these computational methods to favor either Sp or Sn, but not both, in their predictions () and that, in turn, generates either a high number of false-positive predictions or false-negative predictions. This is true even if some methods combine in one predictor different sRNA features and/or genomic information (). In this work, we presented a new methodology, which identifies bacterial sRNAs by simultaneously minimizing the false-positive predictions (Sp) and maximizing the number of recognized sRNAs (Sn). This method isable to predict sRNAs in different genomes, even when there is a lack of reliable annotations, because it does not rely on additional genomic features. Several characteristics distinguish our methodology from other methods. The proposed approach uses the distinctive features of different methodstermed basic methodsinstead of developing a new method de novo, and combines them in a manner that resolves the problem of contradictory knowledge and thus improving their predictive power. To do that, our methodology combines the predictions of the basic methods by using typical set theory operations such as the union and/or intersection. Likewise in logic expressions, the systematic application of these operations produces chained and disparate aggregations of methods. Because not all aggregations may perform better than an individual method (del), and large aggregations including all methods may also produce overfitting, our methodology selects optimal aggregations as a trade-off between Sp and Sn by using multiobjective optimization heuristic techniques. Particularly, we used the genetic algorithms NSGA-II. The efficient heuristics used by our methodology avoids intractable processing times, which are common in combinatorial optimization (De). This process results in non-redundant optimal aggregations, where the balance between the two contradictory objectives also prevents overfitting (). This approach substantially improves both Sp and Sn over that of previous single aggregation of two predefined methods (). We applied our methodology to a dataset of experimentally validated sRNAs in SLT2. The results are significantly better than those results from the basic methods alone (Tables 1 and 2) in training or test datasets (Supplementaryand Supplementary Tables S4S7). Remarkably, the Sp and Sn scores are similar between both training and test sets, and even within the training test fold partitions performed in the crossvalidation. These results strongly suggest that the method is robust for predicting sRNAs despite the possible sample variability. To effectively confirm these findings, we tested the predictive power of the method in two datasets that were not used in the training process: the S.meliloti and the multispecies datasets. Despite the different nucleotide composition of these genomes (see GC content; Supplementary), our methodology obtained good Sp and Sn scores. Finally, our proposed method obtained better Sn scores than SIPHT (), a widely used method that uses specific genomic information about binding sites and terminators (). Unlike our method that uses general characteristics of sRNAs, SIPHT uses particular genomic features. Therefore, the database of negative examples based on shuffled sequences cannot be fairly used to estimate comparable Sps for both methods. It would be interesting to derive negative examples acceptable to both methods to better compare their power. In sum, our approach has demonstrated to encode a successful and robust methodology to predict sRNAs even in poorly annotated genomes. Moreover, we have shown that appropriately combining results from existing methods in a meta-analysis-like approach may significantly improve their accuracy and facilitates the generation of new predictors by simply using different training datasets and/or aggregating new basic methods.
ACKNOWLEDGEMENT
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
J.Arnedo et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
.6 Combination of aggregations of methods in a simple majority voting multiclassifier We combined the optimal aggregations of methods by using a majority voting strategy (Supplementary Fig. S4). This strategy was selected because of its simplicity, high level of accuracy and robustness (Belaid and Anigbogu, 1994; Lam and Suen, 1997; Rahman et al., 2002). The voting procedure is implemented as follows: given n independent experts having the same probability of being correct (in our case, aggregations of methods), and that each of these experts produces a decision regarding the identity of an unknown observation, then the observation is assigned to the class that achieves the highest levels of consensus. To avoid possible sampling biases, we performed 10-fold cross-validation in the training set composed of 193 SLT2 positive sequences. This positive dataset was randomly partitioned into 10 subsets of 20 sequences each. In each round of cross-validation, one set was retained as the validation data for testing the model, and 173 sequences in the remaining 9 subsets are used as training data. The cross-validation process was then repeated 10 times (Supplementary Fig. S5). The Sp and Sn were averaged over the 10fold cross-validations and reported. The same procedure was carried out for the negative dataset. 2.7 Testing the multiclassifier performance by predicting sRNAs in S.meliloti and in a multispecies dataset To test our method with sRNAs that have not been included in our original training set, we created a new dataset of experimentally validated sRNAs similar to that developed for SLT2 but from the phylogenetically distant Alphaproteobacteria S.meliloti (Supplementary Table S3). This dataset is composed of 81 sRNAs obtained by deep-sequencing techniques (Schl  uuter et al., 2010) and other individually validated sequences (del Val et al., 2007; Ulv e et al., 2007; Venkova-Canova et al., 2004). Pairwise and multiple alignments were obtained analogously to those from SLT2 using BLAST and T-COFFEE (Altschul et al., 1990; Notredame et al., 2000), respectively. The performance of our method was also evaluated with a wide variety of organisms by using a multispecies dataset (Lu et al., 2011), which was previously used in predicting sRNAs. This dataset is composed of 776 putative sRNAs from 14 different genomes including Helicobacter pylori, Staphylococcus aureus, Bacillus subtilis, Listeria monocytogenes, Chlamydia trachomatis, Shewanella oneidensis, Xenorhabdus nematophila, Vibrio cholerae, E.coli, SLT2, Pseudomonas aeruginosa, Caulobacter crescentus, Burkholderia cenocepacia and Streptomyces coelicolor A3. The sRNAs in this dataset were obtained by experimental validation (Huang et al., 2009; Sittka et al., 2008), genome-tiling microarray experiments (Toledo-Arana et al., 2009) and RNA-seq experiments (Albrecht et al., 2010; Liu et al., 2009; Lu et al., 2011; Sharma et al., 2010; Sittka et al., 2008; Yoder-Himes et al., 2009). 3 RESULTS We applied the basic methods (Supplementary Table S1) and the proposed methodology (Fig. 1) to identify sRNAs in the positive and negative SLT2 datasets of sRNAs (see Section 2). Then, we predicted sRNAs in a new dataset of experimentally validated sRNAs (del Val et al., 2007; Venkova-Canova et al., 2004; Ulv e et al., 2007) from S.meliloti, as well as in a multispecies dataset (Lu et al., 2011) (see Section 2).
Identification of bacterial small non-coding RNAs at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
