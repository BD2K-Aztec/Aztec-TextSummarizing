Motivation: Network marker selection on genome-scale networks plays an important role in the understanding of biological mechanisms and disease pathologies. Recently, a Bayesian nonparamet-ric mixture model has been developed and successfully applied for selecting genes and gene sub-networks. Hence, extending this method to a unified approach for network-based feature selection on general large-scale networks and creating an easy-to-use software package is on demand. Results: We extended the method and developed an R package, the Bayesian network feature finder (BANFF), providing a package of posterior inference, model comparison and graphical illustration of model fitting. The model was extended to a more general form, and a parallel computing algorithm for the Markov chain Monte Carlo-based posterior inference and an expectation maximization-based algorithm for posterior approximation were added. Based on simulation studies , we demonstrate the use of BANFF on analyzing gene expression on a proteinâ€“protein interaction network.
IntroductionFeature selection over genome-scale networks has become a very important research question motivated by the needs of incorporating existing knowledge in the analysis of big data in a broad range of biological and biomedical applications. Commonly used genomescale networks include proteinprotein interaction (PPI) network (), transcriptional regulatory network (), signal transduction network (), metabolomic network (), etc. Jointly analyzing high-throughput data with the networks can yield robust network markers, i.e. sub-networks critically related to the disease and deeper insights into disease mechanisms. A Bayesian nonparametric mixture model () has been successfully applied to select genes and gene sub-networks under the large-scale simultaneous hypothesis testing framework (). This method provides a general framework and can be applied to a wide range of biomedical applications. However, its model is relatively restrictive and the computation is not efficient enough on large-scale networks containing tens of thousands of nodes. For improving and implementing this method, we develop an computational time compared to the R code provided by (). BANFF is very user-friendly with a well-written document for illustration of the software. It provides a full package of R functions for data preprocessing, efficient Bayesian model fitting with diagnostics, quantitatively and graphically summarizing posterior samples of parameters, along with tutorial examples for the analysis of simulated data and real data.
Methods
Data and modelsIn the large scale simultaneous hypothesis test framework, a collection of P-values or test statistics for many different null hypotheses are considered for the selection of significant features. Our purpose is to incorporate the existing biological network for better feature selection. Suppose we consider n hypothesis tests on n features respectively, where each one tests the association between the feature and the outcome of interest, or certain behavior of the feature. Denote by p i, the P-value and by r i the test statistic for null hypothesis i, for i  1,.. .,n. When only P-values are available, we can transform it to the test statistic by r i  / 1 p i , where / 1  is the standard normal quantile function. Hence, BANFF takes P-values p  p 1 ;. .. ; p n  T as one of the input data and automatically converts it to r  r 1 ;. .. ; r n  T for statistical inference. In addition to r, the network connection information is required, denoted C  C i;j . Using r and C as input data, BANFF implements the NETwork enhanced Dirichlet process mixture model (NET-DPM) developed byto select 'relevant features' under a Bayesian inference framework. Denote by z i a selection indicator, where z i  1 indicates feature i is selected, and z i  0 otherwise. The NET-DPM model makes a common assumption that relevant features are characterized by more extreme test statistics compared to unchanged ones, and it incorporates the network information to improve selection accuracy because it is normally believed that the relevant features tend to be clustered on the network. Specifically, the NET-DPM model assumes that r i follows a normal distribution with mean l i and variance r 2 i. The distribution of parameters l i ; r 2 i  given the selection indicator z i  k is defined by random probability measure G k , for k  0, 1. The random measure G k follows a Dirichlet process with base measure G 0k and scalar precision s k. A weighted Ising prior is assigned to z  z 1 ;. .. ; z n  T to incorporate the network information. The probability mass function is given by pzjp; q; C / expthe sparsity of z. Parameter q  q 0 ; q 1  with q k > 0 for k  0, 1 characterizes the smoothness of z over the network. The method relies on a known network. The selection of the network is outside of the scope of this method. We refer the reader to some reviews of existing biological network databases ().
Algorithms and implementationsThe standard MCMC algorithm () has been developed for the NET-DPM model. Please see the algorithm NET-DPM-1 in Section 2.2 and Appendix B1 offor details. BANFF has implemented and optimized this algorithm in R function Networks.STD(). A common issue of all MCMC algorithms is that they are computationally intensive, and thus Networks.STD() is fast only for a small scale problem but can be slow for analyzing large data sets. To migrate this problem, BANFF takes a two-step approximation ap
ConclusionIn summary, BANFF implements a Bayesian nonparametric approach for large-scale multiple hypothesis testing over the network, motivated by the need for network marker selection on genome-scalenetworks. Compared to the existing software, BANFF achieves a high feature selection accuracy, controls the false discovery rate very well, and is computationally efficient for large scale network. It has a broad range of applications in biomedical sciences.
FundingThis work was partially supported by National Institutes of Health (Grants 1R01MH105561-02 and U19 AI090023). Conflict of Interest: none declared.
R package: Bayes network feature finder (BANFF), which provides an efficient implementation of the hierarchical ordered density clustering (HODC), the standard Markov chain Monte Carlo (MCMC) algorithm, the fast computing algorithm based on finite Gaussian mixture approximation, an expectation maximization (EM) algorithm for the posterior mode estimation and the automatic parallel computing implementations of all algorithms. The computational efficiency has been greatly improved (up to 67% reduction in V C The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1 Bioinformatics, 2016, 13 doi: 10.1093/bioinformatics/btw522 Advance Access Publication Date: 8 August 2016 Applications Note Bioinformatics Advance Access published August 27, 2016 at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
proach for posterior inference on z: the first step approximates the marginal posterior distribution of r i using a finite Gaussian mixture model, for which both DPM density fitting and the EM algorithm are implemented. Each of them can be combined with the HODC algorithm to generate the approximation to the two posterior marginal distributions of 'selected features' and 'unselected features', respectively; The second step simulates the posterior distribution of z given the approximated marginal posterior distributions using the Gibbs sampling. BANFF integrates those algorithms into one R function Networks.Fast(). A parallel computing procedure is implemented when applying DPM density fitting for approximating the marginal posterior distribution: simultaneously obtaining a certain posterior samples of the parameters of the marginal density of r. It greatly reduced the computational time compared to that without parallel computing. BANFF can automatically select the hyperparameters p and q by optimizing the Bayesian factor, which are implemented in functions Network.STD() and Network.Fast(). Please refer to A guide for BANFF in the Supplementary Materials for more details on the usages and example for the aforementioned R functions. 3 Examples: simulations and applications To show the performance of BANFF, we performed a simulation study on a 1000-node scale-free gene network. Table 1 summarizes the selection accuracy and computational time for different algorithms that are implemented in BANFF. We refer to the standard MCMC algorithm as NET-STD, which is implemented in function Network.STD(); and refer to the EM algorithm and the DPM model fitting as NET-EMFast and NET-DPM-Fast, respectively, which are implemented by function Network.Fast(). We use the DPM model fitting or the EM algorithm combined with the HODC algorithm, referred as DPMSTD or EM-STD accordingly for comparison, both of which do not consider the network information. Apparently, BANFF substantially improves the selection accuracy and computational efficiency. To demonstrate the utility of BANFF on high-throughput biological data, we conducted the analysis of a human breast cancer dataset, GSE18864, together with the PPI network obtained from the HINT database. The results were biologically meaningful and shed new lights on the data. In addition, BANFF can be applied for imaging data analyses where the spatial structure of the image is considered as a network. For details of these studies, please see A guide for BANFF in the Supplementary Materials.
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
