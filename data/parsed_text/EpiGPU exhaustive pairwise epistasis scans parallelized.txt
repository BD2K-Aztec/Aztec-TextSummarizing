Motivation: Hundreds of genome-wide association studies have been performed over the last decade, but as single nucleotide polymorphism (SNP) chip density has increased so has the computational burden to search for epistasis [for n SNPs the computational time resource is O(n(n-1)/2)]. While the theoretical contribution of epistasis toward phenotypes of medical and economic importance is widely discussed, empirical evidence is conspicuously absent because its analysis is often computationally prohibitive. To facilitate resolution in this field, tools must be made available that can render the search for epistasis universally viable in terms of hardware availability, cost and computational time. Results: By partitioning the 2D search grid across the multicore architecture of a modern consumer graphics processing unit (GPU), we report a 92× increase in the speed of an exhaustive pairwise epistasis scan for a quantitative phenotype, and we expect the speed to increase as graphics cards continue to improve. To achieve a comparable computational improvement without a graphics card would require a large compute-cluster, an option that is often financially non-viable. The implementation presented uses OpenCL—an open-source library designed to run on any commercially available GPU and on any operating system. Availability: The software is free, open-source, platform-independent and GPU-vendor independent. It can be downloaded from http://sourceforge.net/projects/epigpu/.
INTRODUCTIONThe importance of epistasis (genegene interactions) in complex trait analysis is largely unknown, and computational difficulties have rendered this topic difficult to explore. Yet, efforts to identify the genetic factors that underlie traits of economic or medical importance have accelerated over the last decade. Indeed, in the first half of 2010 alone genome-wide association studies (GWASs) for 165 traits were published (http://www.genome.gov/gwastudies/, last accessed date October 12, 2010). Despite the scale of these studies, the proportion of genetic variance explained has been disappointing, and so has emerged the enigma of the missing heritability (). But even with the availability of these data, the search * To whom correspondence should be addressed.for epistasis has been largely neglected (). Phenotypic variance can be partitioned into several components:However, in the context of linkage mapping or GWAS, heritability estimates are generally limited to the narrow-sense, thus reducing the search to only independent additive genetic effects (). In human and animal genetics in particular, estimation of genetic variance beyond the scope of purely additive effects (i.e. broad-sense heritability) is intractable in most cases, and so the overall contribution of epistasis remains unknown. There has been a lively debate for several years concerning the importance of the broad-sense heritability in complex traits, and in particular the contribution of epistasis (), but there is still an absence of empirical results. Epistasis is a recurring candidate for explaining the missing heritability, but in fact most epistatic patterns are unlikely to be detectable through marginal effects alone (). On the contrary, if epistasis was found to be prevalent in complex traits the major implication would be that significant genetic control exists beyond the extant estimates of narrow-sense heritability. Should it be the case that the phenotypic effect of one locus depends on the genotype at another locus, the impact upon such endeavours as personalized medicine, disease risk prediction, animal breeding and evolutionary genetics could be significant. Several obstacles exist that make epistatic searches difficult. When searching for independent additive effects, each SNP is tested for association with the phenotype; but in order to most powerfully identify epistatic effects, the search must be increased to two dimensions (), testing each SNP against all other SNPs. For example, a 300k SNP chip would require 300 000299 999/2  4.510 10 independent tests, which is a massive computational undertaking. Currently, the cheapest way to run this type of analysis, using a desktop computer, could take weeks. However, the parallel decomposition of this problem is relatively straightforward, and the mainstream availability of multicore GPUs has paved the way for an efficient and inexpensive alternative. We provide software that dramatically reduces the computational time of an exhaustive search for two-locus epistasis on large-scale SNP data for continuous traits. We evaluate the performance of the software running on several types of GPUs against optimized software that runs serially on desktop computers, and against parallelized versions for multicore CPUs and large compute clusters.
Accelerated epistasis scans
METHODS
Statistical testsThe program performs an exhaustive scan for pairwise interactions, such that each SNP is tested against all other SNPs for statistical association with the phenotype. Two different tests can be performed using the software, either treating the pairwise genotype classes as factor effects or parameterizing the class means to exclude any marginal effects thus testing for only interaction terms. There are nine possible genotypes resulting from combining a pair of SNPs. By treating the genotype classes as a fixed effect, an 8 d.f. F-test can be performed that tests the following hypotheses:where  is the phenotype mean and  x ij is the pairwise genotype class mean for genotype i at locus A and genotype j at locus B. This type of statistical test does not parameterize for specific types of epistasis, rather it tests for the joint genetic effect at two loci, this having been demonstrated to be statistically more efficient when searching for a wide range of epistatic patterns (). The software is, however, capable of reducing the test to 4 d.f., parameterizing for interaction terms only (). This is achieved by removing the marginal additive and dominance effects from each locus, testing the following hypotheses:where  x i ( x j ) is the marginal class mean for genotype i (j) at locus A (B). For efficiency, the program does not fit additional factors or covariates during analysis, instead it requires the normalized residual from the phenotype adjusted for other parameters to be used as the response variable, as in the GRAMMAR method for example (). As in other implementations for specific epistatic parameterizations (), the interaction parameterization assumes independence between SNPs for computational efficiency. Missing genotype values are ignored in the analysis, such that the denominator degrees of freedom is representative of the number of observed genotypes. The program is also capable of performing permutations, a potentially important function for generating thresholds ().
OpenCL and general purpose graphics processingBecause the analysis problem can be managed with the single instruction multiple data (SIMD) model, the massively multicore architecture of consumer level graphics cards offers a viable option for searching for epistasis. While other architectures exist that may also be potentially viable, such as Cell or FPGA, we have focused on GPUs because of their commercial accessibility and increasing availability on HPC clusters. Over the last few years, GPU devices have become programmable for non-graphics oriented applications through the CUDA API, but this has been restricted to Nvidia hardware only. OpenCL is a more recent API that is designed to be vendor independent, thus allowing software to run on any modern graphics card, including ATI/AMD (http://www.khronos.org/opencl/). We have opted to use OpenCL for its cross-vendor capability. While most graphics cards have hundreds of cores, performance does not necessarily scale proportionally, and not all algorithms will benefit from GPU parallelization (e.g.). The main performance limiting factor is the I/O bandwidth between processing cores and video memory. The computational kernel that runs on the GPU cores restructures the regression algorithm, making efficient use of the video memory hierarchies and this was necessary for achieving significant speed improvements. Several steps were necessary to limit the kernel I/O operations, including converting naive sum of squares algorithms to on-line algorithms (), storing frequently accessed genotype class means in local memory, vectorizing phenotype reads and delivery of genotypes to the kernel in bitpacked form. The program uses a command line interface, and allows the analysis to be stopped and resumed by the user. The scale of the search space is such that storing all results would be impossible. Instead, only results that exceed a user-defined threshold are saved.
Performance testingExhaustive pairwise scans for epistasis were performed on a dataset comprising 300 000 SNPs, evenly spaced across 20 chromosomes, with 1% missing values and 1000 individuals, for association with a random normally distributed phenotype. Analyses were performed using the full 8 d.f. test, although the speed with the 4 d.f. test is almost identical. Other parameters, such as the 'iteration size' were chosen as recommended in the software documentation. All timings reported refer to user time. epiGPU is adapted from a CPU version that performs the same analysis, episcan (Hemani,G. and Wei,W. 2010, unpublished data, software). As with epiGPU, the CPU version is written in C, and compiled using GCC version 4.3.4 with-O2 optimization. To test the efficiency of episcan, we compared its performance against the FastEpistasis module in PLINK (). On an Intel i7 970 3.2 GHz processor (using a single core), episcan performs 128 201 tests per second, which is over 3.5x faster than FastEpistasis (36 180 tests per second as reported in). In addition to running serially, episcan can also parallelize across multicore CPUs. It uses the OpenMP API, and when hyperthreading is enabled it achieves near linear speed improvements with the number of processing cores. For multinode compute clusters, an extended version of the software called epiMPI was used (Hemani,G. 2010, unpublished data, software). It geometrically parallelizes the search space using the OpenMPI API (), also achieving almost linear scaling with the number of nodes. All CPU implementations use single precision floating point operations. When compared with double precision the speed was identical, as were F value calculations to five decimal places. The GPU version also uses single precision, and maintained precision to four decimal places. Open source code is available for both CPU implementations at https://sourceforge.net/projects/epigpu/files/misc/.
RESULTSWe produced software that geometrically parallelizes exhaustive searches for pairwise epistatic associations with quantitative traits. We performed large-scale analyses, typical of those that would be expected based on GWASs already published, on several different software and hardware systems. Our tests show that against the baseline system (serial code running on a modern CPU) graphics cards can perform the same analysis almost two orders of magnitude faster and at minimal expense (), such that an analysis that would take over 4 days could be performed in just over an hour by using software utilizing a graphics card. It is demonstrable that to achieve comparable speeds using CPU cores would require a large compute cluster, for which the cost to acquire and administer could be prohibitively expensive.The use of graphics cards as a tool for scientific research is a rapidly emerging industry that has manifested staggering improvements in performance over the last few years. However it is still in its infancy, and as reflected in, the level of manual optimization required by developers to harness this power is considerable. Furthermore, while a very heterogeneous array of devices can be used for OpenCL applications, differences in their architectures inevitably results in different responses to optimization strategies.shows that without careful optimization, even the most recent GPUs will appear to offer little to no advantage over CPU implementations.
Page: 1464 14621465
G.Hemani et al.
CONCLUSIONQuantitative genetics has long been occupied with the theoretical contribution of genetic variants to complex traits. The last decade has seen a global effort to start investigating this empirically on a large scale, yet epistasis remains largely unexplored. Computing exhaustive pairwise epistatic scans is an important step in making tractable the understanding of non-additive genetic effects in complex traits. We show that this can be achieved efficiently by using consumer level graphics cards, an established technology that is cheap and widely available. In its current implementation, epiGPU is limited to performing linear regression on quantitative traits, but the parallel decomposition framework is sufficiently generic to allow its extension to other pairwise statistical analyses relatively easily, such as chi-square testing for casecontrol data. Another central problem with epistasis scans is the heavy multiple testing penalty incurred by stringent significance thresholds. Computationally straightforward methods such as the Bonferroni correction are likely to penalize for an overestimated number of independent tests, and this is particularly problematic with epistasis where the dimensionality of the search is increased. However, with the growing availability of GPU clusters (), it is now becoming feasible to perform 2D genome-wide permutation analyses to generate more accurate estimates of family-wise false discovery rates (), a potentially critical step toward understanding the contribution of epistasis toward complex traits.
The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
