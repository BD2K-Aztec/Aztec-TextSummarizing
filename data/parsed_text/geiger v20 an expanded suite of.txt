Phylogenetic comparative methods are essential for addressing evolutionary hypotheses with interspecific data. The scale and scope of such data have increased dramatically in the past few years. Many existing approaches are either computationally infeasible or inappropriate for data of this size. To address both of these problems , we present geiger v2.0, a complete overhaul of the popular R package geiger. We have reimplemented existing methods with more efficient algorithms and have developed several new approaches for accomodating heterogeneous models and data types. Availability and implementation: This R package is available on the CRAN repository http://cran.r-project.org/web/packages/geiger/. All source code is also available on github http://github.com/mwpen-nell/geiger-v2. geiger v2.0 depends on the ape package. Contact:
INTRODUCTIONIn the past few decades, phylogenetic trees have become a key component of evolutionary research. This development has been fueled by the increased availability of robust time-calibrated phylogenies for many groups, in addition to an expanding number of statistical techniques for inferring patterns and processes from comparative data (reviewed in). Among the many R packages developed for phylogenetic and comparative data (e.g.,), geiger () has been a primary utility for making macroevolutionary inferences from phylogenetic trees. However, in the 6 years since the initial release of geiger, the data available for comparative biology have changed substantially. For some groups, we now have phylogenies and corresponding trait data with thousands (and even tens of thousands) of species (e.g.). geiger v2.0 is a complete overhaul of the previous release (), designed to scale up comparative methods to large datasets. To do so, we have taken two complementary tacks. The first is to improve algorithms and implementations to increase computational efficiency of existing methods. The second is to expand the suite of statistical approaches to allow for heterogeneity in both models and data types across the phylogeny. In this applications note, we briefly describe the methods now in geiger, with a particular focus on novel implementations and algorithms. Most of these methods have been previously published elsewhere in some form, and we refer readers to the relevant publications for full explanations (for an overview of the main features of the package, see Appendix 1 in Supplementary Material). the function fitDiscrete. We have rewritten this function for geiger v2.0, again using an alternative, more efficient algorithm for calculating the likelihood of observing trait values under a model (). In the new version of fitDiscrete, the computational time required for the likelihood calculation scales approximately linearly with the number of character states, whereas the previous version scaled superlinearly (see Appendix 2 in Supplementary Material for details). This improvement allows for more complex models to be efficiently fit to large phylogenies.
Bayesian methods for fitting models of character evolutionA major addition to geiger is the implementation of several Bayesian methods for fitting models of trait evolution to comparative data. These include the Accomodating Uncertainty in Trait Evolution Using R (AUTEUR) approach of, which uses reversible jump Markov chain Monte Carlo machinery () to move across multirate models of various complexities. The implementation of this method in geiger v2.0 improves on the original by allowing model partitions to be constrained a priori and alternate models to be compared (). Additionally, geiger now includes the following: a method for fitting models to phylogenies including unresolved clades using). These types of approaches, which allow for greater complexity both in models and data, will be essential to make robust evolutionary inferences from large comparative datasets.
Inferring shifts in the rate of lineage diversificationAlfaro et al. (2009) developed an approach, Modeling Evolutionary Diversification Using Stepwise-AIC (MEDUSA), to detect shifts in diversification rates from molecular phylogenies using a stepwise-Akaike Information Criteria (AIC) algorithm. A single-rate birthdeath model is fit to the entire tree, and then the tree is partitioned into two rate classes, breaking the tree at all possible nodes. The partition that improves the fit of the model is then fixed and the process is repeated, breaking the tree into three partitions and so on, until a stopping criterion is reached. MEDUSA can be applied to both fully bifurcating and unresolved trees. For this release of geiger, the MEDUSA algorithm has been improved in a number of ways. First, it has been recoded so that it is now orders of magnitude faster and scales well to large trees; this version of MEDUSA has already been applied to a phylogeny of all 9,993 extant bird species (). Second, we used simulations to develop a threshold-AIC value as a stopping criterion (see Appendix 3 in Supplementary Material for details) to correct for multiple comparisonsthe larger the phylogeny, the greater the threshold for accepting a new partition to the model [a similar approach was developed byfor studying variation in rates of phenotypic evolution]. Last, we have developed tools for summarizing MEDUSA analyses across a distribution of trees, such as from a Bayesian posterior or from non-parametric bootstrapping, so that uncertainty in both topology and branch lengths can be accomodated.
CONCLUSIONIn this note we provide a broad overview of the methods now available in geiger. We have not discussed some methods implemented in geiger (e.g. 'Congruification' for time-scaling large trees;) and many of the nuances of the methods described here have been left out. We refer readers to associated publications and the package documentation for more information. It is an exciting time for macroevolutionary research. We now have access to datasets of unparalleled size and a wide variety of new statistical approaches with which to analyze them. We hope that the software presented here will help researchers address some fundamental and long-standing questions in macroevolution.
METHODS 2.1 Fitting simple models of character evolution using maximum likelihood Fitting and comparing models of trait evolution can provide insight into many macroevolutionary questions (Pennell and Harmon, 2013). The two 'workhorse' functions in geiger for fitting models of trait evolution using maximum likelihood, fitContinuous and fitDiscrete, have both been completely reimplemented. The previous version of fitContinuous calculated the likelihood of a set of continuous characters (e.g. body size) having evolved under a model using a variancecovariance (vcv) matrix approach. This involves inverting the vcv matrix, which is extremely computationally intensive, making the method infeasible for large trees. FitzJohn (2012) demonstrated that using a 'pruning'-based algorithm (Felsenstein, 1973) allows for much more efficient likelihood calculations. This algorithm is used in the diversitree package (FitzJohn, 2012). [For related algorithms, see Freckleton (2012) and the phylolm package (Ho and Ane,Ane, 2014)]. The approach has now been extended to all the models in fitContinuous. In addition to improving the efficiency of the algorithm, we have improved numerical optimization procedures and implemented a novel method to simultaneuously estimate model parameters and an additional term to account for measurement error. For the case of modeling discrete characters, the most commonly used models are the Mk models (Pagel, 1994), which can be fit to data with *To whom correspondence should be addressed. y The authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.
The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
geiger v2.0 at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
M.W.Pennell et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
