Motivation: Identification of functionally equivalent genes in different species is essential to understand the evolution of biological pathways and processes. At the same time, identification of strings of conserved orthologous genes helps identify complex genomic rearrangements across different organisms. Such an insight is particularly useful, for example, in the transfer of experimental results between different experimental systems such as Drosophila and mammals. Results: Here, we describe the Encapsulated Gene-by-gene Matching (EGM) approach, a method that employs a graph matching strategy to identify gene orthologs and conserved gene segments. Given a pair of genomes, EGM constructs a global gene match for all genes taking into account gene context and family information. The Hungarian method for identifying the maximum weight matching in bipartite graphs is employed, where the resulting matching reveals one-to-one correspondences between nodes (genes) in a manner that maximizes the gene similarity and context. Conclusion: We tested our approach by performing several comparisons including a detailed Human versus Mouse genome mapping. We find that the algorithm is robust and sensitive in detecting orthologs and conserved gene segments. EGM can sensitively detect rearrangements within large and small chromosomal segments. The EGM tool is fully automated and easy to use compared to other more complex methods that also require extensive manual intervention and input. Availability: The EGM software, Supplementary information and other tools are available online from http://vbc.
INTRODUCTIONInferring orthology relationships and identifying conserved gene segments are essential tasks in genome comparison. Identification of matching genes and their contiguous strings provide a perspective * To whom correspondence should be addressed. on how genomes are related, how they function and how the species evolve. Segments of conserved homologous genes across species are termed as conserved synteny (). A core task in identifying conserved synteny is the assignment of putative orthologous genes. The presence of several homologous genes across the species makes this a complex task. However, global genome properties used in comparative studies have shown that strings of genes are well preserved, especially in closely related organisms (). Further, genes with evolutionary relationship tend to conserve their genomic context, especially in closely related species (). Therefore, gene context and neighborhood provides important information for assigning the best orthologs. Commonly, methods used to identify orthologs and synteny between a pair of genomes work by identifying homologous genes, followed by their expansion to build larger collinear blocks of similar genes (). These techniques can be grouped into two categories from an algorithmic perspective (): (i) the first category is similar to an 'alignment' of molecular sequences. Semi-automated techniques have been used to align genome sequences mainly when information regarding the conserved regions is known, such as, in the comparison of Mycoplasma genitalium and M.pneumonioae species presented in. Often, these semi-automated techniques work by initially identifying conserved regions using all-againstall gene comparisons. Manual identification of conserved regions is challenging, especially when larger genomes with complex rearrangements are involved (). These regions are then separated and aligned using standard tools such as BLAST (). In addition, automated methods to determine conserved regions based on the comparison of fixed length segments (string of genes) have been developed, such as those used to compare the genomes of Caenorhabditis briggsae and C.elegans in. However, they cannot be efficiently applied in the case of large sequences (The second classification of techniques can be categorized as 'matching' of corresponding homologous genes. Unlike alignments, where the precedence of the nodes (genes) is maintained, matching-based techniques work
Encapsulated gene-by-gene matchingby identifying small segments of highly similar genes that are grouped to produce a comparative map containing gene matches. Tools such as BLAST are often used, as in, for obtaining all-versus-all comparisons between genes to calculate initial gene correspondences without direct knowledge of their genomic positions and context. More sophisticated approaches include those that either group together traditional molecular alignments (), or conserved gene segments include: Pash (), MUMmer (), ABWGAT (), ADHoRe (), FISH (), CHSMiner (), DAGchainer () and ABS (). Approaches modeled on the bipartite graph-matching problem have also been developed for comparing genomes: AuberGene (), MSOAR () and others like; Sankoff, (1999);for some of the important earlier and more recent works and applications. More recently, statistical and machine learning strategies have also been successfully employed to improve the accuracy in ortholog mapping, such as OSfinder (). However, there is an increasing recognition of the importance of detecting conserved gene context and gene neighbors in a global fashion as this can provide valuable information for inferring function and evolutionary relationships (). In this work, we report a fully automated method Encapsulated Gene-by-gene Matching (EGM) that automatically identifies gene orthologs and homologous non-linear strings of genes between a pair of genomes. The approach is able to reveal conserved gene segments or syntenic regions, best gene orthologs, evolutionary rearrangements and presents the results in a general comparative map. EGM relies on the sequence similarity, gene context and orientation information to identify the best one-to-one gene matches or putative orthologs. This is useful when comparing evolutionary conservation of the gene order in addition to examining the genome construction in terms of protein families to help understand and predict gene function (). We use the notations described by, where genomes are represented as set of sequences in which individual proteins are represented by their corresponding family identifiers. To resolve gene correspondence between a pair of genomes, an analogy is drawn between the genematching problem and the Linear Assignment problem. Essentially, the task of identifying gene orthologs is transformed to a graph assignment problem where the goal is to match genes between species such that the sum total similarity score of all matched genes is maximized. For this purpose, a matched segment lengthdependent edge-weighting scheme is used to calculate matching in a weighted bipartite graph. The Hungarian method (for the graph assignment is employed to identify the best one-toone orthologs that maximizes conserved synteny, while filtering spurious matches. We performed several experiments to evaluate the performance of EGM and compared with other popular methods. Our results clearly show that EGM is effective in identifying best one-to-one gene matches (orthologous pairs) in a straightforward manner.. The input is two FASTA formatted files containing protein sequences in their chromosomal order. Initially, all possible gene-by-gene associations are identified (step 1). This information is then used to calculate PHAMs or clusters of proteins within the two species (step 2). Each protein in the two species is then relabeled using a cluster identifier to give the encapsulated form of the genomes (step 3). Next the problem of identifying the best bijective match for each gene is solved using the Hungarian method (step 4). The result is a one-to-one gene map between the two genomes; clearly showing homologous conserved gene segments, their context, as well as their complex evolutionary rearrangement events.
METHODS
EGM overviewWe describe here the EGM algorithm that addresses the whole genome genematching problem. (For overview see.) The pipeline first constructs a similarity matrix showing amino acid sequence similarity for all protein pairs within and across the two species. Next, to add the notion of protein families, we construct clusters of similar proteins across the two species. We relabel each protein sequence in the genome data using an encapsulation method, characterizing each genome as a sequence of cluster identifiers. The comparison between two encapsulated genomes is modeled as a bipartite graph with weighted edges. Each node in the graph is a protein sequence (represented by its encapsulated cluster label). There is an edge between two nodes (one from each genome) when the corresponding sequences are similar. An ad-hoc edge weight matrix is computed, where the edge weights are reinforced when contiguous stretches of nodes in the two genomes share a strong sequence similarity. The encapsulated genomes are then used to form a weighted bipartite graph, using the weights derived from the similarity matrix. Thus, the problem of matching genes between a pair of genomes can now be transformed to a linear assignment problem, i.e. finding maximum weight matching in a bipartite graph, where the goal is to find the best matching for every vertex (protein). Below, we explain in detail the construction of the algorithm.
Detecting gene familiesLet X and Y be two genomes. Here, each genome is essentially a set of protein sequences of the form X ={p 1 , p 2 , p 3 , , p m } and Y = {q 1 , q 2 , q 3 , , q n }, where the two genomes contain m and n proteins, respectively. The order of the proteins is identical to that identified in their respective chromosomes. We then construct a matrix M = (M ij ), 1  i  m, 1 i  n that represents the amino acid sequence similarity between every pair of proteins. In EGM, the similarity between two proteins is based on the alignments returned by). Two proteins are considered similar only ifthe proportion of the alignment coverage on the two protein sequences and its sequence identity is above a user-prescribed threshold t (such as 50%). Where more than one alignment is returned, EGM considers the alignment with the highest identity for scoring purposes. Formally, if l 1 and l 2 are lengths of two protein sequences and k 1 and k 2 are the number of amino acids in their alignment, then k 1 /l 1  t and k 2 /l 2  t. BLASTp is used to generate a list of alignments with a threshold on expect-value (e < 0.0001) along with their sequence identity and the corresponding protein sequence start and end points. Note that for any two proteins with no sequence similarity, their corresponding score is initialized to 0. As a result of this step, we build the matrix of similarities M, where any M ij is the similarity between p i  X and q j  Y. Next, we group together all similar proteins into clusters or pseudo-protein families, adding the notion of families to such data. We term these as Putative Homology fAMilies (PHAMs). The single-linkage clustering algorithm (Van) is used here to form the PHAMs. The measure of similarity acts as a primary filter to eliminate ambiguous edges: further, the associative linkages between proteins increasing the possibility of detecting distant protein family relationships (). Individual PHAMs are identifiable by a label, in our case by an integer. Note here that using stringent thresholds on sequence identity and alignment coverage will result in a high number of clusters (the majority being single member clusters) when comparing distant species. However, in the case of related species, the result will be fewer but more cohesive clusters. Therefore, these thresholds provide a degree of flexibility required for different kinds of analyses.
Genome encapsulationA simple encoding method rewrites the genome in an abstract form, where essentially the building blocks for the genomes are transformed from individual proteins to protein families (PHAMs). The resulting encapsulated genomes X and Y are now strings of integers, where an integer at any index i is the PHAM label for the protein at the genomic index i. Here, the encapsulated genomes are advantageous as information relating to individual genes and their linkages to other genes across the two species is readily available, while reducing the dimensionality of data. This further helps to visualize gene context and homologous genes across the comparative map. Next, given the encapsulated genomes and the similarity matrix M, we can formulate the problem of finding the best one-to-one matches for each gene between the species as a maximum weight-matching problem in a bipartite graph.
Maximum weight matching in bipartite graphDefine a weighted bipartite graph,where V is the vertex set containing two disjoint sets of nodes representing the PHAM labels in X and Y , and E is a set of all possible (mn) edges between every node x  X and y  Y. Let W = (w ij ),1  i  m,1  j  n define matrix of edge weights corresponding to the edges in E. A matching in a bipartite graph is a set of edges such that no two edges share a same node (here a node is a protein). A matching, therefore, results in a set of one-to-one matches between the nodes in the bipartition.
Building edge weightsIn graph matching the similarity matrix M is unsuitable for the direct use as the weight matrix W. This is because unlike alignments (which is equivalent to an order-preserving bipartite matching), the general bipartite graph matching ignores the order of nodes in the two disjoint vertex sets. In an alignment, by the virtue of the strict precedence of nodes, contiguously matched blocks or fragments accumulate a significant score/weight even though the weights on the matched edge are independent of one another. However, this is not the case with a general bipartite graph matching. Therefore, using the similarity matrix M directly as the weight matrix W for E would lead to several spurious nodenode correspondences that are possibly non-orthologous and may not form homologous segments between the two genomes. Further, as mentioned earlier, gene strings (or synteny) tend to be conserved, especially is closely related species. As evolutionary distance between two species increases, large-scale gene order shuffling (due to rearrangements) is observed more frequently than in closely related species. Therefore, to prevent spurious correspondences, we construct W in a way that favors matches in a contiguous conserved block of nodes over singleton nodes. The procedure to compute edge weights in W is as follows: initialize all the edge weights in W to zero. Given the two encapsulated genomes X and Y , we find all pairs of maximal substrings (or fragments), which match exactly between the two encapsulated genomes. We observe that finding sets of contiguous fragments is a common practice in comparative genomics to identify homologous regions (usually adjacent nucleotides), for example, in BLASTZ (), PipMaker () and BLAT (). A hashing technique is applied to efficiently identify such fragments. A hash table is constructed containing positions for all substrings of constant length k (e.g. k = 3) for the encapsulated genome X. To account for inversions, the hash table includes all substrings in the reverse direction of X. Given the hash index of k-mers from X , we now search Y by sliding across it with a window of size k. This results in a set of matched substrings of length k between the two genomes. We call such substrings anchors. We note here that finding fragments using this hashing technique is very efficient: constructing a hash table (for a constant substring length k) takes linear time O(m), where m is the length of the first encapsulated genome X. Searching against the hash table takes constant time (per search), which is proportional to O(n). Once the anchors are determined, we extend each identified anchor in both forward and reverse directions to get a set F of exactly matched maximal substrings. For each matched maximal fragments in F, of the form (x i ,...,x i+l1 ) matched with (y j ,...,y j+l1 ), we compute  = M ij +...+M i+l1,j+l1 , where any M ij is the similarity score between the proteins p i and q j derived from M. For each matched edge {(x i ,y j ),...,(x i+l1 ,y j+l1 )}, the edge weight corresponding to it {w ij ,...,w i+l1 , j+l1 } is set to . Note that to prevent overlapping fragments to be weighted multiple times, edge weight w ij is modified only when  is greater than the existing value of w ij. Using the above procedure, we derive edge weights in W , which will be used to extract gene correspondences between the two species.
Correspondence extractionGiven the bipartite graph G and the weigh matrix W , we extract the set of correspondences using the maximumweight bipartite graph-matching formulation.initially proposed the Hungarian method for identifying the maximum weight matching in bipartite graphs. We implement the primal-dual linear programming algorithm described by, which solves the problem on a graph with 2|V | nodes in O(|V 3 |) time. Briefly, the Hungarian method relies on iteratively discovering an augmenting path with respect to a current matching C, which is initially empty. A path P of edges {u 1 ,u 2 ,u 3 ,...,u k }is considered augmenting for a set C if and only if u i  C when i is even and u i /  C when i is odd, and the sum of weights of all odd-numbered edges in P is greater than the sum of weights of all even-numbered edges in P. When an augmenting path is found, the matching C is replaced by the set of odd-numbered edges in P. The program terminates when no new augmenting path can be found, in which case C gives the maximum weight matching.illustrates an example of the augmentation step. See Papadimitriou and Steiglitz (1998) for full details of the algorithm.
EvaluationEvaluation of comparative genomics algorithms is a non-trivial task (). Furthermore, direct comparison between tools is difficult due to the variability in output formats. In this article, we will objectively illustrate an estimate of accuracy for the matching produced by EGM, specifically mapping of the Human and Mouse genomes,
Encapsulated gene-by-gene matchingwhich has been a subject to extensive studies (). We also demonstrate the results of Human, Mouse, Rat and Zebrafish comparisons using the DAGchainer, ADHoRe and OSfinder tools. Additionally, we calculate the average pairwise similarities between all orthologous pairs, as reported by BLAST. We further conduct a comparison between all four methods against the EnsEMBL compara () set of orthologs to estimate precision.The older set of matchings in C is now replaced with the set of new edges in the alternating path (shown in black). This process (and d) is iterated until C can no longer be augmented, giving a maximal matching for the bipartite graph.
RESULTSWe applied EGM to automatically map homologous gene strings between the Human (), Mouse (), Rat () and Zebrafish (http://www.sanger.ac .uk/Projects/D_rerio/) genomes. The datasets of protein sequences were obtained from the Integr8 database (). These sets were sorted according to their encoding gene reference positions (available as gene cross reference data). Proteins without reference positions were omitted from the genome datasets. Details of the dataset and tools are available online from http:
Detecting orthologsAn application of EGM is to identify the best putative gene orthologs in the process of gene mapping. To evaluate the performance of EGM, we compare the orthologs detected by DAGchainer, ADHoRe and OSfinder. (See Supplementary Methods for these comparisons.)shows the comparisons between the four methods in terms of the number of orthologs identified for each comparison and their average pairwise sequence identity as a measure of accuracy. DAGchainer and ADHoRe often identify matches that belong to more than one variation of the same segment, while EGM calculates the best one-to-one match. Therefore, DAGchainer and ADHoRe results were filtered to include a single match for each gene. See Supplementary Methods for additional details. EGM consistently identifies the highest number of matches in all comparisons, covering a larger proportion of the gene sets. DAGchainer identifies the least number of matching gene pairs (except Mouse/Zebrafish) and the difference was more apparent in the comparisons involving evolutionarily distant Zebrafish genome. Pairwise identity between the matched protein sequences was calculated and matches identified by EGM were found to have the highest identity. In the Human/Mouse, Human/Rat and Mouse/Rat comparisons, all four methods performed well, EGM at 82%
K.Mahmood et al.average sequence identity, ADHoRe (80%), DAGchainer (81%) and OSfinder (53%), were able to identify highly similar matches. Expectedly, when comparing more diverged Zebrafish genome in the Human/Zebrafish, Mouse/Zebrafish and Rat/Zebrafish comparisons, the average sequence identity between the matched pairs is lower. Again, as with the gene match count, the difference in match similarity is more significant for the Zebrafish comparisons. EGM matches on average have a 415% higher sequence identity than the other tools. Further, on average, EGM identifies orthologs for a significantly larger fraction of the species among all comparisons (see Supplementary File 1). We have also performed a detailed comparison between all four methods and the EnsEMBL compara orthologs datasets, where the fraction of common orthologs was determined. Considering the overlapping orthologs as true positives, we calculated the precision (the fraction of true positives and the total number of reported positives) for each method. For the Human/Mouse, Human/Rat and the Mouse/Rat comparison, DAGchainer (81%), ADHoRe (78%) and EGM (80%) show high precision. However, EGM identifies on average 30% more true positives. The advantage of EGM is more apparent in the comparison of the evolutionarily distant Zebrafish genome. In all of these three comparisons, EGM maintained a significantly higher precision along with the number of true positives. OSfinder performed least favorably in this criterion. (See Supplementary Methods and Supplementary File 2). Computational efficiency was also assessed. DAGchainer and OSfinder have faster runtime but trades-off for sensitivity. DAGchainer and OSfinder took on average 7075 min for each comparison. While, EGM took on average 78 min and performs 10 times faster than ADHoRe (average 860 min). For example, EGM takes 3 h (complete automated pipeline: pre-processing and correspondence extraction) versus ADHoRe's 19.5 h to perform the Human/Mouse comparison. All comparisons were performed under same conditions on a single 1 GHz processor.
Application of EGM in detecting conserved gene segments: Human and Mouse comparisonWe applied EGM to detect conserved homologous segments and putative orthologs in the Human and Mouse genomes containing 21 461 and 23 203 protein-coding genes. PHAMs were formed using thresholds of 50% on the pairwise sequence identity and alignment overlap. This results in the formation of 13 747 PHAMs. (Summary analysis is available online as Supplementary File 3, available online from the EGM website.) The encapsulated genomes are then formulated, resulting in a string of 21 461 and 23 203 integers for Human and Mouse, respectively. The initial formation of the bipartite graph G formed 391 179 edges, mostly resulting from tandem duplications (grey dots). Next, gene matching between the two genomes was performed using EGM with seed fragment size set at k = 3. The output map is represented as a dot plot in(black dots). It is clear from the dot plot that majority of the ambiguous matchings are filtered and only those that reinforce conserved homologous regions across evolutionary rearrangements are mapped (16 214 gene matches).gene segments contain on average 11 and 19 genes, respectively. The longest Human segment contains 178 genes, while the longest Mouse segment is 135 genes long. The chromosomal distribution of these segments is illustrated in. Furthermore, as many of these segments are only separated by small rearrangements, combining these we obtain 393 gene clusters (Supplementary File 4, available online from the EGM website).(a) when comparison is performed between the Human/Mouse as a whole and (b) from the chromosome-by-chromosome level matchings. By chromosome-by-chromosome matching, we mean that n 1  n 2 different EGM runs were performed for each pair of chromosomes in two genomes (containing n 1 and n 2 chromosomes, respectively). The significant overlap of the matching genes in the conserved segments suggests that EGM is both sensitive and accurate for large-scale comparisons. Tools are also available from the EGM website that can be used to derive such data. individual chromosome level (chromosome-wise). Chromosomewise maps were produced by running EGM between each pair of Human and Mouse chromosomes. (see Supplementary File 5, available online from the EGM website.) Next, the whole Human/Mouse genome-wise gene matches were split at the chromosome level. The overlap of the two sets of matchings (genome-and chromosome-wise) is calculated and the results are summarized as an Oxford grid () in. The overlap indicates, for example, at the genome level 486 orthologs are detected between the X chromosomes of the two species, while the mapping of the individual X chromosomes reveals 500 orthologs. Similarly, 851 orthologs were detected at the genome-wise comparison between Human chromosome 17 and Mouse chromosome 11, again showing a significant overlap with 874 orthologs detected in the chromosome-wise comparison. (See intersection dot plot in) Conversely, the comparison between the Human chromosome 1 and Mouse chromosome 2 results in 301 matches. However, in the genome-wise comparison, there are only 26 overlapping genes, with the rest finding better matches. Supplementary files 6 and 7 provide Oxford grids and dot plots for the Human versus Rat and Human versus Zebrafish comparisons, respectively, produced from the EGM results.
Encapsulated gene-by-gene matching
ImplementationEGM is implemented as a fully automated, standalone application and works similar to a simple molecular alignment program. It takes as input two genomes (FASTA formatted protein sequences) and produces a gene-by-gene matching along with a dot plot. A series of helpful tools are also provided that assist in setting up the inputs as well as the analysis of the results. We also make available the complete chromosome-wise map for the Human and Mouse genomes produced by EGM (available online). Users can choose the chromosomes of interest to analyze the maps.representing the accuracy of EGM in mapping large-scale genomes with complex evolutionary rearrangement events. The dot plot represents the combination of gene matches identified by EGM comparisons at a chromosome level (red dots) and at a genome level (grey dots, essentially magnified from). The intersection of the two datasets is shown in dark dots. This plot clearly shows that EGM is sensitive and robust in identifying complex genome rearrangements and accurate gene matching at various data scales.
DISCUSSIONEGM presents a further step towards fully automating the complex process of gene-by-gene matching. EGM is a powerful tool capable of identifying the best one-to-one gene correspondences between a pair of genomes that leads to the identification of conserved homologous segments, a crucial step in the identification of syntenic regions. We have shown the EGM tool to be a useful method that integrates several pieces of information through the pipeline to produce a global comparative map. A series of complex genome comparison, including a Human and Mouse comparison, wereperformed using EGM. The results clearly show its effectiveness in providing a detailed comparison. The results include information about the putative gene orthologs, protein families, their context and organization on the genomes. Our experiments show that EGM is able to sensitively identify conserved gene segments and reveal complex evolutionary rearrangement events in large-scale (specieslevel) and small-scale (chromosome-level) data. The combination of data provided by EGM comparison is a useful tool in the prediction of protein function. With respect to conserved gene segments, encapsulated genomes allow easier detection of identical cluster labels rather than individual proteins. Encapsulation also makes it easy to comprehend gene context and topology information, especially in highly conserved regions; we believe this has a potential to help researchers explain their functional significance and possible interactions. Comparison with DAGchainer, ADHoRe and OSfinder revealed EGM's ability to consistently detect more orthologs while maintaining high similarity. DAGchainer works by utilizing the diagonal properties from the anchors, and similar to the findings of, the precision to identify accurate orthologs diminishes when comparing distant species (such as the comparisons involving the Zebrafish) as non-orthologous anchors significantly outnumber the orthologous anchors in the input; therefore, resulting in fewer gene matches in smaller syntenic regions. ADHoRe, a quality-based method, determines orthologous segments by iteratively increasing the inter-segmental distance threshold for sets of anchors that fit diagonal linear regressions. The quality of these diagonals is assessed by the goodness of their fit. Overall, DAGchainer, ADHoRe and OSfinder performed well in the comparisons between the Human, Mouse and Rat genomes, but to a lesser degree in comparisons involving more distantly related organisms such as the Zebrafish genome. However, from a point of view of the methodology, a practical limitation with DAGchainer and ADHoRe is their reliance on quality parameter scoring schemes that are not well characterized and difficult to ascertain when little is known about the genomes being compared. Further, DAGchainer and ADHoRe gene matches reveal many-to-many relationships, and in many cases this leads to many variations of the same conserved segments being reported (). The EnsEMBL compara database tool curates multi-species comparative data. We utilized these Compara-curated orthologs to evaluate the precision of the four methods mentioned here. EGM showed high precision in detecting true positive orthologs for species at varying evolutionary distances. Identification of best one-to-one gene matches between a pair of genomes is a pivotal step in characterizing unknown proteins, as such relationships help identify genes with common ancestors (). In the case of EGM, the identification of best orthologs relies on sequence similarity and conservation of genome context and not on any quality-based measure or threshold. The use of similarity scores in detecting functional orthologs remains a preferred method used in several studies, and was found to perform significantly well in comparison to other more sophisticated techniques (). Further, as mentioned earlier, one-to-one orthologs are important in several studies ranging from proteinprotein interactions in multiple species to identification of biological pathways. However, as thousands of new proteins are sequenced from increasingly complex genomes, the task of assigning orthologs is becoming more complex. In addition, the presence of large protein families (paralogs), evolutionary processes such as speciation and gene duplications or both are not uncommon (). Therefore, it is a non-trivial, yet important task, to identify co-orthologs, as opposed to only the 'best' orthologs, and homologous segments to paint a more comprehensive evolutionary picture. As future directions, we are pursuing to evolve our EGM approach to perform this task. Deploying an iterative strategy, where at every iteration, a new set of matching can be reported, while eliminating the possibility of identifying the previously reported matching. We believe, collectively from all iterations we can extract sets of co-orthologs and syntenic regions. A bottleneck that remains in most of the current methods is the reliance on external tools (such as BLAST) to assign initial similarity relationships. This is often time consuming and involves manual processing. We believe that alignment-free methods () can be employed to significantly accelerate this task with reasonable sensitivity. We are also pursuing this as a future direction. Similarly, visualizing comparative maps remains complicated. Much of these data are generated as long text files unrolling complex information. Recently, resources such as the Synteny Database () along with other web technologies such as HTML5, have demonstrated their usefulness to simplify the visualization. Development of efficient visualization tools can greatly improve the analysis of such data.
CONCLUSIONGene similarity, gene context and order are a common theme when searching for functionally related genes and overall conservation of proteins. Analyzing these properties often requires manual intervention (). We believe that EGM with its modular approach is able to help automate these tasks. We have found EGM to be a powerful method that identifies gene matching at the one-to-one level. The EGM tool is a simple to use and fully automated. Our results indicate that EGM has a great potential in its competitive performance in comparison with other popular approaches based on comparisons between several species. The resulting comparative maps have also shown EGM to be sensitive in detecting complex rearrangement events. In addition, the output produced by EGM clearly depicts how individual genes match across a pair of genomes, their genomic context and protein family information. EGM is able to perform two major integrated tasks: (i) finding the best ortholog for each gene and (ii) identifying homologous segments shared between the compared species.
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
