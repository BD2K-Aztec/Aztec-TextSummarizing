Motivation: Recent advancements in molecular methods have made it possible to capture physical contacts between multiple chromatin fragments. The resulting association matrices provide a noisy estimate for average spatial proximity that can be used to gain insights into the genome organization inside the nucleus. However, extracting topological information from these data is challenging and their integration across resolutions is still poorly addressed. Recent findings suggest that a hierarchical approach could be advantageous for addressing these challenges. Results: We present an algorithmic framework, which is based on hierarchical block matrices (HBMs), for topological analysis and integration of chromosome conformation capture (3C) data. We first describe chromoHBM, an algorithm that compresses high-throughput 3C (HiT-3C) data into topological features that are efficiently summarized with an HBM representation. We suggest that instead of directly combining HiT-3C datasets across resolutions, which is a difficult task, we can integrate their HBM representations, and describe chromoHBM-3C, an algorithm which merges HBMs. Since three-dimensional (3D) reconstruction can also benefit from topological information , we further present chromoHBM-3D, an algorithm which exploits the HBM representation in order to gradually introduce topological constraints to the reconstruction process. We evaluate our approach in light of previous image microscopy findings and epigenetic data, and show that it can relate multiple spatial scales and provide a more complete view of the 3D genome architecture. Availability and implementation: The presented algorithms are available from: https://github.com/
IntroductionHiT-3C techniques provide a means for studying the genome architecture at a range of resolutions. As oppose to light microscopy, 3C gives a population-based measure that relies on spatial proximity but does not directly convey a spatial context (). All 3C derivatives consist of cross-linking nuclei, followed by chromatin digestion and re-ligation. Quantifying the number of ligation events between two chromatin fragments gives their 'contact frequency' in the examined population of nuclei, providing a pairwise estimator for their distance. HiT-3C methods (most notably, the Hi-C method) detect contacts between groups of loci, per chromosome or genome-wide, which are typically summarized in a non-negative matrix called a 'contact map'. Analyzing contact maps can reveal different scales of topological organization. At a 1 Megabase (Mb) resolution, chromatin compartments and sub-compartments were identified with principal component analysis (PCA) () and clustering () further suggested that at shorter length scales (40100 kilobases (kb)), a genomic bin can be assigned with a state which represents its preference to interact with other bins along the sequence (directionality index): upstream, downstream or none. Using hidden Markov models (HMM) the researchers have shown that the genome can be segmented into regions of bins with the same state, leading to the definition of Topologically Associated Domains (TADs, 'upstream' or 'downstream' regions) and their boundaries ('none' regions). Dynamic programming () and change point detection () were also employed for identifying transitions in contact frequency enrichment which induce a topological genome segmentation. Owing to the definition of TADs, their position and boundaries can change considerably depending on the sequencing depth and the bin size used (). For example, studying HiT-3C contact maps at different resolutions revealed that previously identified large TADs can be divided into subTADs (). This hierarchical organization suggests the need for methods that could go beyond the TAD-based segmentation and capture topologies at different length scales. Hierarchical topologies derived from contact maps can further provide a spatial context for studying point-wise and relational properties (e.g., histone modifications and gene coexpression, respectively). This can in turn uncover associations between spatial organization (structure) and genomic features (function) that could not have been discovered when considering only the proximity of the sequence. Such evidence synthesis requires an approach which can relate datasets at different resolutions and link genetic and epigenetic features to the spatial scale at which they work. Physics and statistical mechanics have provided valuable lessons about the genome organization. By modelling the chromatin fibre as a polymeric chain of beads, researchers have applied polymer physics to study the expected genome topology and dynamics. In particular, the distance and probability of contact of between beads (loci), given their distance on the sequence, were a subject for much research (). Measurements obtained with fluorescence in-situ hybridization (FISH) and HiT-3C experiments were used to motivate and validate hypotheses concerning these properties, respectively, and, together with general characteristics of polymer chain behaviour were used to propose different models of chromatin organization (). The increasing volume of HiT-3C data calls for the development of algorithms and data structures that can summarize, compress and integrate datasets while considering issues of time and space complexity. Such a computational approach can complement physics simulations and provide the necessary framework for large scale studies of the 3D genome architecture and its function. In this paper, we present a HBM-based algorithmic framework for topological analysis and integration of HiT-3C data. We first introduce the HBM representation for contact maps and give the necessary definitions (Section 2.1). Next, we describe chromoHBM, an algorithm which compresses a contact map into a HBM by iteratively detecting dense modules (communities) of interacting chromatin segments (Section 2.2). We then focus on the application of HBMs for 3C data integration. We explain the difficulties involved in directly combining HiT-3C datasets and propose to merge their HBM representations instead, using the chromoHBM3C algorithm (Section 2.3). We also note that spatial inference can benefit from incorporating topological knowledge and describe chromoHBM-3D, an algorithm which takes a 3D reconstruction method and iteratively guides it by means of HBM traversal (Section 2.4). In order to evaluate our approach, we study Hi-C datasets and show that HBMs highlight key topologies and that the merged HBM representation can capture multiple scales of spatial organization that could not have been detected by separately analyzing each dataset. For the sake of space, robustness and running time evaluation is given in the supplementary (suppl.) information (). Additional results of related or exploratory analysis are also available on request.
Methods
From contact maps to HBMs: an introduction for bioinformaticians3C experiments measure the frequency of ligation events between chromatin fragments in a population of nuclei. For a given pair of genomic bins, each spanning one or more chromatin fragments, we define their contact frequency as follows:DEFINITION 1 (contact frequency):Let a genomic bin be a vector of consecutive chromatin fragments. Let a  a 1 ; a 2 ; :::; a k  be a genomic bin with k fragments and b  b 1 ; b 2 ; :::; b l  a genomic bin with l fragments. The contact frequency between a and b is then:We can further summarize these data with a matrix whose entries give the pairwise contact frequencies between two vectors of genomic bins. This leads to the following definition: DEFINITION 2 (contact map):Let p  p 1 ; p 2 ; :::; p m  be a vector of m consecutive genomic bins and q  q 1 ; q 2 ; :::; q n  a vector of n consecutive genomic bins. The contact map of p and q is a m  n matrix A, with A i;j  f pi;qj , where f pi;qj is the contact frequency between bins p i and q j , for 1 i m; 1 j n.When all the genomic bins in p and q are from the same chromosome, we call A a cis contact map. Otherwise, A is a trans contact map. From Definition 1 we also get that A is a non-negative matrix and that if p and q are identical then it is also symmetric. In practice, contact frequencies are biased measures of ligation events (). Consequently, contact maps need to be corrected before any subsequent analysis. In addition, even in the bias-free case, their exact spatial interpretation is not straightforward. For example, we have recently found that contact frequencies and distances measured with FISH are correlated only for short range distances (). Thus, de-noised contact maps should also be filtered in order to discard artefacts and data that are not spatially meaningful. Here, we concentrate on the topological analysis and data integration of cis chromosomal contact maps and assume that they are de-noised and filtered (an evaluation of the effect of filtering is described in the suppl. information). Since we are interested in recovering the topology of chromosomes from their contact maps, the concept of networks immediately comes to mind. In fact, cis contact maps were previously modelled as adjacency matrices of weighted undirected graphs (). This leads to the definition of a contact network: DEFINITION 3 (contact network):Let p  p 1 ; p 2 ; :::; p m  be a vector of m genomic bins, from the same chromosome. The contact network of p is a weighted undirected graph NV; E; w where: @BULLET V  fp 1 ; p 2 ; :::; p m g is a set of nodes, @BULLET E  ffp i ; p j gjf pi;pj > 0g is a set edges, where f pi;pj is the contact frequency between the nodes (bins) p i and p j , for 1 i; j m, and @BULLET w : E ! R  is a weight function which assigns each edge with the contact frequency between its elements: wfp i ; p j g  f pi;pj and R  is the set of strictly positive real numbers.It follows that A, the contact map of p (a symmetric cis contact map), is the m  m adjacency matrix of N:A i;j  wfp i ; p j g f pi;pj > 0; 0 otherwise (Based on Definition 3 and Equation 1 we can derive a contact map from a contact network and vice versa. The network representation of a contact map (i.e., its contact network) provides an intuitive starting point for analyzing its topology. Recently, several studies have demonstrated that both the fine structure and long range scaling behaviour of Hi-C data is consistent with a fractal globule model of genome folding (). From a modelling point of view, the packing of the crumpled globule is formed by iteratively folding the polymer (chromosome) chain such that folds at one scale are grouped together in the next scale, ultimately forming a 'fold of folds' (). The resulting structure can be described with a hierarchical block Parisi matrix that is consistent with characteristics observed in Hi-C data (). Parisi matrices consist of a growing block, placed along the diagonal, which is itself a Parisi matrix of a smaller size. This class of matrices is a sub-class of hierarchical matrices which can be used to represent large-scale and dense matrices with logarithmic-linear complexity (). Similarly to Parisi matrices, HBMs can capture self-similar hierarchical structures but in these data structures an entry in the matrix takes the lowest level in the hierarchy. More formally, we define an HBM as follows:DEFINITION 4 (hierarchical block matrix (HBM)):Let N be an undirected graph NV; E; w, with V a set of m nodes, E a set of edges between them and w a function which assigns each edge with a weight. If w is defined as w : E ! f1g then we say that N is unweighted, otherwise N is a weighted graph. Let C be the set of clusters in N, C  fc l g k l1 where c l V and k ! 1. We denote B(1) to be a m  m matrix, with: B1 i;j  1 i; j 2 c; c 2 C; c V;
otherwise( Let N 1 V 1 ; E 1 ; w 1  be an undirected graph whose nodes are the clusters in N and C 1  fc 1;l g k1 l1 is the set of the clusters in N 1 , with c 1;l V and k 1 ! 1. Note that each cluster in C 1 is a union of sets (clusters in C) that contain nodes in V. Using a recursive definition, we denote N s to be an undirected graph whose nodes are the clusters in N s1 and B(s) to be a m  m matrix, with:Bs i;j  1 i; j 2 c; c 2 C s1 ; c V;
otherwise(where C s1  fc s1;l g ks1 l1 is the set of clusters in N s1 with c s1;l V and k s1 ! 1, for s ! 2. Note that if Bs i;j  1 than for all s 0 > s; Bs 0  i;j  1 as well. The hierarchical block matrix (HBM) of N is a non-negative symmetric m  m matrix, H, with: H i;j  min s fsjBs i;j  1g, for s ! 1. If the underlying topology of a chromosome is hierarchical then we expect its contact network to consist of communities (clusters) that will form mega-communities and so forth. This is in keeping with the general definition of communities as dense sub-graphs of a sparser graph (). The resulting hierarchy can then be described with an HBM; given a contact map A and its contact network N, we can compute H from N using Definition 4Hierarchical block matricesby iteratively detecting and merging communities in N until all communities are merged into one or cannot be merged any further.illustrates this idea. H can be further summarized with a hierarchical tree (or a dendogram), which describes the merges of communities at each level in a succinct way (). Taking a data-driven perspective, H also allows us to first incorporate local information and gradually include more global constraints, which is desirable when considering contact frequencies (). In the next sections we describe three HBM-based algorithms: chromoHBM, chromoHBM-3C and chromoHBM-3D. The implementation of these algorithms is available at: http://www.cl.cam.ac. uk/ys388/hbm/. Details of data preparation (datasets used and subsequent pre-processing) and performance evaluation are given in the suppl. information (see also).
chromoHBM: compressing contact maps into topological featuresThe chromoHBM algorithm (Algorithm 1) derives the HBM representation of a (de-noised and filtered) cis contact map. It takes a m  m symmetric cis-contact map A and returns its HBM H. chromoHBM starts by initializing H to be a m  m matrix (Algorithm 1, line 3) and then removes self-interactions from A (by setting its diagonal to zero) and creates Adj, a copy of A (Algorithm 1, lines 45). Next, H is iteratively populated. At each iteration, s, chromoHBM calls detectCommunities which returns the communities in N, the network whose adjacency matrix is defined by Adj. It then updates Adj to be a m s  m s matrix, with m s the number of identified communities. Adj i;j is set to be a normalized sum of the contact frequencies between the bins in A that are elements in the i th and j th communities in N, respectively:where c r is the r th community in N and jc r j is its size, for 1 r m s and i j. Finally, chromoHBM updates H to record the communities detected at the current iteration (level) s by setting H k;l to s if the bins k and l in A are assigned to the same community for the first time, for 1 k; l m (Algorithm 1, lines 2630). The iterative process halts when a single community has been identified (all communities were merged) or when it is not possible to merge any of the communities detected at the previous level (Algorithm 1, while-loop condition, line 10). At this point, s is maxH  1 and H may include entries that have not been set (if some communities could not have been merged). chromoHBM updates such entries to take the value of s in order to represent the global community formed by all the communities in the network (Algorithm 1, lines 3337). The time complexity of the s th iteration in chromoHBM is given by:where T(g, m) is the time complexity of g with an input of size m. The first term in Equation 3 gives the time complexity of detectCommunities which depends on the size of Adj at iteration s, Adj s. This method is intentionally left unspecified since we expect that the underlying hierarchy will consistently emerge regardless of the implementation used (an evaluation of the robustness of HBMs generated with chromoHBM, when using different detection methods, is described in the suppl. information). The second term describes the number of operations required to update Adj and H, which depends on m s , the number of communities detected at iteration s and on jc r j, the size of community c r , for 1 r m s. Since the final update of H takes another Om 2  operations (Algorithm 1, lines 3337), the total time complexity of the algorithm is given by:The space complexity of chromoHBM is Om 2  since we store Adj and H in memory. This requirement could be relaxed by implementing H as a hierarchical tree.
chromoHBM-3C: merging HBMs with different bin sizesHigh-throughput 3C techniques generate contact maps at various resolutions and bin sizes. To date, however, there are no methods for putting together contact maps that differ in their binning,: for i 1 to m  1 do 34: for j i  1 to m do 35: if H i;j is NULL then " first update 36: H i;j s 37: H j;i H i;j 38: return H resolution or protocol. We focus on the integration of cis symmetric contact maps and define the problem of HiT-3C data integration as follows:DEFINITION 5 (3C data integration): Let x  x b ; x e  be a genomic range starting at position x b and ending at position x e on a given genomic sequence. A y-binning of x divides it into xex b 1 y genomic bins of length y, where y is a natural number. Let u  u 1 ; u 2 ; :::; u m  and v  v 1 ; v 2 ; :::; v k  be two vectors of genomic bins, generated by a r and a r/n binning of x, respectively. For simplicity, we will assume that n and xex b 1 r are natural numbers. Since r n is also a natural number (by the definition of binning), we get that k  nm. Let A and B be the contact maps of u and v, respectively; the problem of integrating A and B is to create a new k  k contact map which faithfully represents the information in A and in B.Several factors make the 3C data integration problem particularly challenging. First, differences in resolution and in the molecular protocol can lead to a considerable variation in the contact frequency range, which in turn makes it difficult to combine (and compare) contact maps. Other variations in the experimental setting can also contribute to this effect. In addition, merging contact maps with different bin sizes require data processing, such as expansion or normalization of contact frequencies, which is not straightforward to perform and may lead to data distortion. Since we are ultimately interested in putting together the underlying topologies that are captured by contact maps, the HBM representation offers an attractive surrogate. Thus, instead of directly combining two contact maps, which is a difficult task, we can merge their HBMs and generate a unified representation of their topologies. We follow the definition of the 3C data integration problem (Definition 5) and denote H A to be the m  m HBM of A and H B to be the k  k HBM of B. Since k  nm, we can expand H A to be a k  k matrix, ^ H A , with:for 1 i; j k and 1 p; q m. We define a 'merging matrix', M, given by:where M i;j takes the 'average level' between the levels at which i and j were first assigned to the same community. Given M, we can compute the 'merged HBM', H A;B which integrates A and B by merging the topologies of H A and H B. Let s  fs i g lM i1 be the set of levels (unique values) in M, sorted in an increasing order, where l M is the total number of levels in M. H A;B i;j is given by:H A;B i;j  gM i;j where g is a function which takes the value of a level in M and returns its index in s:The computation of H A;B mimics a bottom-up traversal of M, where new levels are added in order to accommodate for the, possibly different, topologies of H A and H B (note that when H A  H B then also H A;B  H B ).illustrates the steps involved in merging two HBMs, using a toy example. The chromoHBM-3C algorithm (Algorithm 2) takes a m  m HBM H A and a k  k HBM H B where k  nm and n is a natural number. It follows the steps described above and returns H A;B , the merged HBM of H A and H B. First, it generates ^ H A , the expanded version of H A , according to Equation 5 (Algorithm 2, lines 611). Second, it creates the merging matrix, M, by taking the 'average' of ^ H A and H B. Lastly, chromoHBM-3C traverses the levels of M, from the lowest to the highest, and updates H A;B according to Equation 7 (Algorithm 2, lines 1621). For each level s l in M, chromoHBM-3C iterates through the entries of M and updates the entry H A;B i;j to be l if M i;j equals s l. At the end of the traversal H contains the number of levels required to merge the topologies in H A and H B. The expansion and merge steps take Ok 2  operations each and the bottom-up traversal requires another Ol M k 2  operations (where l M is the number of levels in M). We also create and update matrices of size k 2. Hence, the total time and space complexities of the algorithm are Ol M k 2  and Ok 2 , respectively.
chromoHBM-3D: guiding 3D positioning with HBMsCurrent methods for 3D positioning typically use available constraints (contact frequencies) all together. If chromosomes are hierarchically organized, then reconstructing their configuration could benefit from a bottom-up approach, which starts by positioning the smaller, more local domains, and gradually proceeds by placing them relative to each other (instead of inferring all the positions at once). Since HBMs capture and relate multiple levels of topological features, they provide a natural means for implementing such an approach. The chromoHBM-3D algorithm (Algorithm 3) takes five arguments as input: @BULLET A, a m  m contact map, @BULLET H, the HBM of A, @BULLET f, a 3D reconstruction method which takes a contact map and returns its 3D positioning, @BULLET t, a function which converts distances into contact frequencies (for example, using the inverse function), and @BULLET arg, a list of any additional arguments for f.. Merging HBMs with different bin sizes. Two HBMs, H 1 and H 2 are generated from contact maps with a different binning, where a bin in H 1 corresponds to two bins in H 2. In Step 1, we expand H 1 so that the binning of the two HBMs will match (Equation 5). The average between the expanded HBM, H 0 1 , and H 2 gives the merging matrix M (Step 2, Equation 6). Finally, at Step 3, we compute the merged HBM, H, using M. Each entry in H takes the index of the level value in the matching entry in M, which can be computed with the function g (Equations 78)Given this input, chromoHBM-3D performs a bottom-up traversal of H and returns the 3D positioning of A. It first creates a m  m distance matrix, D, that will be updated during the traversal. For each level l, for each community c k 2 c (for c, the set of communities detected at level l), chromoHBM-3D calls f with the contact map of c k , A c k , given by A ck i;j  A i;j for all i; j 2 c k. Note that small communities are skipped since they do not provide enough spatial constraints (Algorithm 3, line 9, where jc k j is the size of c k ). Given Y, the 3D configuration reconstructed with f, chromoHBM-3D updates D i;j to take the Euclidean distance between i and j in Y, for i; j 2 c k. This update is carried only for entries that have not been updated at previous iterations (based on 'more local' constraints). At the end of the iterative procedure, chromoHBM-3D transforms D into a 'contact map' A 0 , using t, and calls f with A 0. The resulting 3D configuration is a 'refined' 3D positioning of A based on the information in H. The running time of chromoHBM-3D depends on the number of levels and communities in H and on the time complexity of f. Let l H be the number of levels in H, m l , the number of communities at level l, and T(f, n), the time complexity of f with an input of size n. The time complexity of chromoHBM-3D is given by:The first and second terms in Equation 9 give the number of operations required to derive A 0 from D and the time complexity of reconstructing Y from A 0 , respectively (Algorithm 3, lines 1822). The time complexity of the bottom-up traversal is given by the third term (nested sums). For each level l, we call f with the contact map of the community c k which takes Tf ; jc k j operations. Updating D requires additional jc k j 2 operations.The space complexity of chromoHBM-3D depends on the memory requirements of f but has a lower-bound of Om 2  (the size of the distance matrix D).
ResultsLet A and B be two contact maps, H A and H B their HBMs, respectively, and H A;B the merged HBM of H A and H B , we would like to test: @BULLET Is H A;B 'consistent'? If H A;B is consistent then its topology should be in agreement with the separate topologies of H A and H B as well as with previous findings. @BULLET Is H A;B 'powerful'? If H A;B is powerful then it should add new information, which is not available when independently analyzing H A and H B. Also, there should be a clear motivation for not directly comparing A and B (for example, large variation in contact frequency distribution and range). Further evaluation of the robustness, consistency and performance (running time) of chromoHBM, chromoHBM-3C and chromoHBM3D is described in the suppl. information (see). In order to evaluate how 'consistent' and 'powerful' separate and merged HBMs are, we study two contact maps and their HBMs, which considerably differ in their binning: a 500 and a 25 kb contact maps generated from human fibroblasts nuclei for chromosome 1 (). We first compare the corrected (de-noised) contact maps. We find that the 25 kb contact map is sparser and that the distributions of the two contact maps are significantly different (onesided t-test (significant differences are observed also when considering non-parametric tests such as the Kolmogorov-Smirnov test), P-value" we assume that n is a natural number 5: ^ H A matrixk; k " expand H A 6: for i 1 to k do 7: p  i n  8: for j i to k do 9: q  j n  10:). The 500 kb contact frequencies range between 0 and 101 500 with a mean of 427.10 and a median of 31.57, while the distribution of the 25 kb contact frequencies is more (rightly) skewed; the 25 kb contact frequencies range between 0 and 6221 and have a mean of 1.074 and a zero median. In order to allow for a more direct comparison, we standardize the two contact maps and compute the expanded version of the 500 kb contact map, using Equation 5. Testing for agreement between the two standardized contact maps (which now match in their dimensions) yields a low Pearson correlation value (r  0.15). Put together, the notable variations between the 500 and 25 kb contact maps, make it difficult to integrate them and motivate the use of their HBM representation for this purpose. We next apply chromoHBM in order to generate the HBM for each of the contact maps, using the Infomap algorithm () for detecting communities. This algorithm, which is recognized as a leading approach for community detection in undirected weighted graphs (), aims at finding an optimal compression of the information flow in a graph, using random walks as a proxy for the amount of information transferred between nodes. Its key idea, inspired by Information Theory, is that finding a compression that can closely recover the information flow in a graph is equivalent to detecting its topological modules or communities (which dictate the dynamics of the system). In the suppl. information we further show that chromoHBM recovers similar HBMs, independently of the detection method used (robustness evaluation, see). Given their HBMs, we apply chromoHBM-3C to compute the merged HBM representation of the two contact maps. For description purposes, we use H 500 , H 25 and H merged to denote the 500 kb, 25 kb and the merged HBMs, respectively.shows H 500 (enlarged for visual clarity), H 25 and H merged. We notice that some topological patterns that appear in H 500 are missing from H 25 and vice versa. Small communities that are detected at the first level of H 25 , are missing or merged in H 500. At the second level, the two HBMs detect mega communities that roughly correspond or overlap. These communities are further combined into two large clusters (in blue) at the third level of H 500. This level of hierarchical organization is completely absent from H 25. At the last level (level 5 and level 4 for H 500 and H 25 , respectively), bins which correspond to regions with a poor mappability (and thus poorly covered) are merged with the others to form the global community. From a signal processing point of view (according to the Heisenberg uncertainty principle), the observed trade-off, between H 500 and H 25 , is expected. Smaller bins can better detect small scale topologies but miss large scale features (good knowledge of frequency but poor knowledge of position). In contrast, larger bins capture large scale organization on the expense of finer details (good knowledge of position but poor knowledge of frequency). H merged () accommodates for the distinct scales that are captured by H 25 and H 500 , and provides a multi-scale view of the organization of chromosome 1. Its first level matches the first level of H 25 (a small scale topology) while its fifth level roughly corresponds to the third level of H 500 (a large scale topology). At intermediate levels, overlapping features detected by both HBMs are combined together, forming a unified view of the separate hierarchies. In order to further evaluate the consistency of H merged , we study active and repressed domains in chromosome 1. These domains belong to a group of regions which appear throughout the genome, termed 'ridges' and 'anti-ridges', which show distinct functional and structural characteristics. Ridge domains are rich with genes and active regulatory elements, and are highly transcribed and expressed ('active') (). They possess an 'open' chromatin topology which further correlates with their high expression level. In contrast, anti-ridge domains are gene poor, lowly transcribed and expressed and present a 'close' and packed topology ('repressed').shows the HBMs of chromosome 1, at positions 1.50  10 8 to 1.54  10 8 (green frame, upper panel) and 1.73  10 8 to 1.76  10 8 (red frame, lower panel), which correspond to a ridge and an anti-ridge domain, respectively. For these specific regions, differences in density were also confirmed with FISH (distances within the ridge domain shown to be larger than distances within the antiridge domain) (). In line with the trend observed when analyzing the entire chromosome, H 25 captures finer topological details compared to H 500. At the first level, the ridge domain of H 25 consists of four communities, which roughly correspond to two communities in H 500. In a similar way, the two communities detected in the anti-ridge domain in H 25 form a single community in H 500. When considering H merged , we find that the anti-ridge domain presents a flatter hierarchy compared to the ridge domain (two levels versus three levels, respectively) with a smaller number of larger communities. This is in agreement with the characteristics of anti-ridge domains, which are more dense than ridgeThe merged HBM of the HBMs in (a) and (b), generated with chromoHBM-3C. This track was retrieved from the UCSC Genome Browser website (domains. For the ridge domain, the first and third level of H merged closely correspond to the first and second level of H 25 , respectively. The second level of H merged , reveals, however, an additional scale that is missing from H 25 and H 500 ; the last and first two communities (along the diagonal), which are detected at the first level, form one mega community while the other two communities are merged into a second mega community. This topology recapitulates the picks of a regulatory mark (shown as a vertical track next to H merged in), which is associated with a high transcription activity (the H3K27Ac histone mark). The first mega community corresponds to H3K27Ac picks while the second matches a flat profile. This partition, which is missing from the separate HBMs, further illustrates the advantage of a merged view of multiple scales.
Y.Shavit et al. at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at University of California, Los Angeles on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Outlook Since the introduction of the 3C technique in 2002 (Dekker et al., 2002), various high-throughput derivatives have been developed. Given the latest enhancements in resolution (kb and sub-kb) (Hsieh et al., 2015; Rao et al., 2014; Sexton et al., 2012) and signal-tonoise ratio (Kalhor et al., 2012a,b), as well as the on-going reduction in sequencing costs, HiT-3C techniques are expected to become even more widely used for studying the 3D genome organization. Recent single-cell protocols (Nagano et al., 2013, 2015) also hold the promise to extend the conventional population-based analysis to the single cell level. Integrating these noisy, big and high-dimensional data across resolutions, sub-populations and with other Omics, pose challenges that are not yet addressed. The HBM representation summarizes the topological features of chromosomal contact maps. This summary is useful not only for gaining biological insights into genome topology, but importantly as a data structure that can facilitate data integration. Putting together HiT-3C HBMs can be performed across resolutions (as demonstrated above) but also across sub-populations. If we consider n contact maps of n sub-populations, their HBMs give a means to compare the topologies which characterize each sub-population and allow to create an ensemble which captures the variance in the global population. This can be achieved using a simple voting algorithm, where each HBM 'votes' for the communities which comprise it. In this way, one can identify the communities which dominate the population. In addition, simple HBM statistics (e.g., mean and variance) can give insights about the importance of the relative positioning of genes and domains. Beyond the challenge of integrating different 3C datasets, a key problem is how to relate Omics and 3C information (i.e., at what resolution?). Merged HBMs allow to identify the spatial scales and topologies which are relevant for a given Omic of interest and to better link structure and function (see Section 3). The algorithmic framework presented in this paper can be used as a foundation for analyzing multi-omic data, while considering both their sequence and 3D contexts. Since analysis can be carried independently for each scale, HBMs also lend themselves to parallel computations which is advantageous for big data. Finally, HBMs could complement genome Google-like browsers, which are now starting to emerge (He et al., 2013), since they link information at different resolutions.
