Pan-genome analyses have shed light on the dynamics and evolution of bacterial genome from the point of population. The explosive growth of bacterial genome sequence also brought an extremely big challenge to pan-genome profile analysis. We developed a tool, named PanGP, to complete pan-genome profile analysis for large-scale strains efficiently. PanGP has integrated two sampling algorithms, totally random (TR) and distance guide (DG). The DG algorithm drew sample strain combinations on the basis of genome diversity of bacterial population. The performance of these two algorithms have been evaluated on four bacteria populations with strain numbers varying from 30 to 200, and the DG algorithm exhibited overwhelming advantage on accuracy and stability than the TR algorithm. Availability: PanGP was developed with a user-friendly graphic interface and it was available at http://PanGP.
INTRODUCTIONSince the conception 'pan-genome' was introduced in 2005 (), pan-genome had shed light on the genomic diversity and evolution of bacterial genome. To make pangenome analyses more expediently, several software tools were designed. Panseq could identify single nucleotide polymorphism on core genome and strain's specific region (), and PGAP was designed to perform five analytic functions with only one command (). At the same time, a series of mathematic models had been proposed to characterize pangenome profile of bacteria, such as the Streptococcus agalactiae pan-genome model (), the Haemophilus influenzae pan-genome model (), heaps law model () and infinitely many genes model (). All current models could well depict the pan-genome profile of a launch of bacteria with their time complexity O(n2 n ), where n is the strain number. In this article, we developed two sampling algorithms to efficiently perform pan-genome profile analysis for larger scale genomes. These two algorithms were integrated in the software with a graphic interface, PanGP.
METHODS
Test datasetGene clusters from seven bacterial populations were used to test the performance of sampling algorithms; the detailed strain list and gene clustering method were introduced in Supplementary Material.
Sampling algorithmTo analyse the pan-genome profile of N strains, the pan-genome size and core genome size of n strains (1 n N) would be calculated. If a population has N strains, there are C n N combinations. When C n N grows to a large number, two sampling algorithms, totally random (TR) and distance guide (DG), would be available to sample s (s: sample size) combinations consisted of n strains. For the TR algorithm: when C n N 4s  r (r: sample repeat times), randomly sample s non-redundant combinations from the total C n N combinations. The average pan-genome size and core genome size of these s non-redundant combinations were record as G pan n and G core n. For the DG algorithm: when C n N 4s  r, sample s  k (k: amplification coefficient, which could be modified to control sample size for evaluating the genome diversity of the total combinations) non-redundant combinations from the total C n N combinations. Calculate the Dev_geneCluster value of these s  k combinations, sort all the s  k combinations by their Dev_geneCluster value and sample s combinations from end to end with the same interval. The average pan-genome size and core genome size of these s combinations were record as G pan n and G core n. The above sample process would repeat r times for both TR and DG algorithms, and their average value (G pan n and G core n) would be taken as the pan-genome size and core genome size of n strains, respectively.
Genome diversity characterizing models in the DG algorithmIn the DG algorithm, genome diversity was taken as a criterion to sample a certain number of strain combinations. To figure out a suitable model to characterize genome diversity, three models were proposed. In the following models, G(n) represents a combination consisted of n strains. i and j represent the ith and jth strain in G(n). In the population with N strains, there are C n N G(n) combinations. Model A: Genome diversity was characterized by the discrepancy of evolutionary distance on phylogenetic tree. Branch length (B ij ) and node depth (D ij ) between the ith and jth strain on phylogenetic tree were calculated respectively (Calculating method for B ij and D ij were *To whom correspondence should be addressed.  The Author 2014. Published by Oxford University Press. This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com introduced in Supplementaryin Supplementary Material). The average branch length (B avg n) or node depth (D avg n) of every strain pair in a given combination G(n) represented genome diversity of the combination G(n) and were calculated using the following formulas, respectively.In model A, six methods were provided, which were introduced in Supplementary Material. Model B: Genome diversity was characterized by the difference of each strain's gene number. For each combination G(n), the total gene number of all strains (marked as Sum_geneNum) and the variance of gene numbers among those strains (marked as Dev_geneNum) were calculated by two different formulas, shown as follows.Note: V Sum geneNum n   means the Sum_geneNum value; V Dev geneNum n   means the Dev_geneNum value; g i is the gene number of the ith strain. Model C: Genome diversity was characterized by the discrepancy among gene clusters. For each combination G(n), the average number of the different gene clusters between two strains (marked as Dev_geneCluster) was calculated to represent genome diversity in a given combination G(n). The value of Dev_geneCluster (V Dev geneCluster n) is calculated by the following formula.Note: C ij is the number of different gene clusters between the ith and jth strains.
Evaluate the performance of sampling algorithmTo evaluate the accuracy of sampling algorithm, the pan-genome size and core genome size of n (1 n N) strains were calculated by TR and DG algorithms. Real data were calculated without sampling; amplification coefficient k was set to 4; and the simulation were carried out with the sample size set to 300, 500, 800, 1000, 2000, 3000, 5000, 8000 and 10 000. For each population, the simulation for two sampling algorithms was repeated 100 times respectively. The accuracy for every simulation result was measured by root mean square
Nonlinear fitting for the pan-genome profileWhen the pan-genome size and core genome size of n strains (1 n N) were available, a series of mathematics models (Supplementary Material) were used to depict pan-genome size, core genome size and new gene size. Chinese Academy of Sciences grant (KSZD-EW-TZ-009-02 to J.X). Conflict of Interest: none declared.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
RESULTS The performance of sampling algorithms. It was found in Supplementary Fig. S1 that genome diversity, characterized by Dev_geneCluster method in Model C, exhibited strong correlation to pan-genome size, and difference in gene cluster number may primarily affect pan-genome size. Hence, we take Dev_geneCluster as the method to characterize genome diversity in the DG algorithm. The performance of two sampling algorithms was estimated from three aspectsaccuracy, stability and time cost. Seen from Supplementary Figs S2S4, the result from the DG algorithm was closer to the real data and more stable than the TR result with the same sample size. For the same species, population size almost did not affect the accuracy and stability of the two sampling algorithms. When the sample size was set to 500, the error proportion in the total gene clusters, either between the DG result and the real data or between any two sample results from the DG algorithm, were 50.1% in all test populations. Regarding time cost, the DG algorithm took slightly more time than the TR algorithm with the same sample size (Supplementary Table S1). When sample size was set to 500, the analysis for 50 genomes could be finished within 3 min. Application for PanGP. Among pan-genome analysis tools, PGAP, a comprehensive pan-genome analysis pipeline with five modules, could only deal with small-scale genomes in the pan-genome profile analysis module, while PanGP was a highly efficient tool for large-scale bacterial pan-genome profile analysis with sampling algorithms. Besides TR and DG algorithms, another one named traverse all algorithm (TA algorithm) was also provided in PanGP. When TA algorithm was selected, the pangenome profile would be analysed without sampling. PanGP required orthologs information as the input data, which could be generated by series of software, such as PGAP (Zhao et al., 2012), OrthoMCL (Li et al., 2003) and PanOCT (Fouts et al., 2012), with the format introduced in the online manual. When sampling finished, the pan-genome profile would be present as curves images (shown as Supplementary Fig. S5). The curves images could be revised and exported via the user-friendly graphic interface, and non-linear fitting with three mathematic models was also available for pan-genome size, core genome size and new gene size. More usages about PanGP were provided in the online manual. Funding: The National Basic Research and Development Program (973 Program; 2010CB126604 to J.X.); National Programs for High Technology Research and Development (863 Program; 2012AA020409), the Ministry of Science and Technology of People's Republic of China; Key Program of
Y.Zhao et al. at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
