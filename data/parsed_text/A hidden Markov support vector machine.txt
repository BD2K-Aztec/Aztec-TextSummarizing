Motivation: RNA expression signals detected by high-density genomic tiling microarrays contain comprehensive transcriptomic information of the target organism. Current methods for determining the RNA transcription units are still computation intense and lack the discriminative power. This article describes an efficient and accurate methodology to reveal complicated transcriptional architecture, including small regulatory RNAs, in microbial transcriptome profiles. Results: Normalized microarray data were first subject to support vector regression to estimate the profile tendency by reducing noise interruption. A hybrid supervised machine learning algorithm, hidden Markov support vector machines, was then used to classify the underlying state of each probe to 'expression' or 'silence' with the assumption that the consecutive state sequence was a heterogeneous Markov chain. For model construction, we introduced a profile geometry learning method to construct the feature vectors, which considered both intensity profiles and changes of intensities over the probe spacing. Also, a robust strategy was used to dynamically evaluate and select the training set based only on prior computer gene annotation. The algorithm performed better than other methods in accuracy on simulated data, especially for small expressed regions with lower (<1) SNR (signal-to-noise ratio), hence more sensitive for detecting small RNAs. Availability and implementation: Detail implementation steps of the algorithm and the complete result of the transcriptome analysis for a microbial genome Porphyromonas gingivalis W83 can be viewed at
INTRODUCTIONCurrent microarray manufacturing technology can synthesize millions of oligonucleotide probes in situ on a single microscopic glass slide. This great capacity of probes allows the design of genomic tiling microarrays containing probes covering both sense and antisense strands with a great frequency for most microbial genomes (; * To whom correspondence should be addressed.) as well as many eukaryotic genomes (). These high-density genomic tiling arrays can be used to detect the expression for all RNA species including protein coding RNAs and non-coding RNAs (ncRNAs). Although becoming popular, the data analysis for expression data obtained from the high-density tiling microarrays remains to be challenging. A fundamental task is how to precisely identify expression from noisy background. One common approach has been to segment the probe signals along the genomic coordinates. The assumption of this approach is that intensities within a transcript distribute as Gaussian noise. Thus, the breakpoints detected by the abrupt changes between two adjacent segments may represent the boundaries of the RNA transcripts. A segmentation algorithm () was developed to model the signal distribution that fitted Gaussian noise. Finding an optimal set of breakpoint locations that minimized the sum of squared residuals was accomplished by the dynamic programming algorithm with a fixed number of segments. However, it is not robust to estimate the total number of segments. Also, long computation time O(n 2 S) was required, where S is the number of segments and n is the genome size. For this,attempted to simplify the complexity of the algorithm with fixed maximum length l of segment and reduced the computation time to O(nlS). The determination of expression status for each segment relied, however, on a fixed cutoff value (), which may overlook RNA with low expression level. A supervised learning algorithm using Hidden Markov Models (HMMs) has been introduced to directly distinguish transcribed and non-transcribed regions (). This approach successfully incorporated validated biological knowledge into the model, instead of only considering the signal distribution that might be biased by noises or system errors. By given a training set, HMMs constructs a probabilistic model that connects the hidden states to the observables as well as to the adjacent states. Viterbi algorithm is then used to compute the most likely hidden state sequence. However, higher order HMMs are known to be a better model to describe the dependency between neighbors than typical first-order HMMs, although it has not been applied widely due to the complexity and computational demands. In addition, several limitations of the conventional HMMs havePage: 1424 14231430
W.-H.Yu et al.been noted, such as that it typically trains a conditional probabilistic model rather than a discriminative hyperplane, and it lacks the power of processing highly dimensional feature vectors which represent the observed input sequence (). A different classification algorithm, support vector machines (SVMs) () providing a discriminative model, has been commonly used in various biological applications, such as the classification of the normal and cancer tissues from microarray expression data (). SVMs are capable of finding a linear discriminative hyperplane for classification in a high-dimensional feature space, projected from the input object space by either linear or non-linear mapping via the kernel functions. However, the classification of individual object only estimates from the corresponding feature vectors. This approach is inappropriate for interpreting the transcriptome data directly because conditional dependency of the neighbors along the sequence needs to be considered as well. To take advantage of both learning algorithms, we implemented a novel discriminative algorithm 'hidden Markov support vector machines' (HM-SVMs). HM-SVMs combines HMMs and SVMs () and retains the Markov chain dependency structure between the hidden states as well as the efficiency of dynamic programming by Viterbi algorithm. Additional important components inherited from SVMs are also retained. The discriminative hyperplane is learned by kernel functions and determined by the maximum-margin principle with soft margin violation adjustment. At the same time, HM-SVMs show the capability to handle high-dimensional feature vectors and overlapping features. As a result, the input data of the HM-SVMs for feature vector construction can be readily extended through incorporating multiple experimental validated data.implemented a similar SVM discriminative technique to analyze Arabidopsis thaliana tiling data. They modeled the exon intron expression mechanism specific to the eukaryotes, which may not be suitable to the operon expression mechanism of the prokaryotes. In addition, recent tiling array probe design methods generate probe sets with unequal probe spacing (), therefore a probabilistic model that considers both intensity profile and change of intensity across the probe location will be more adequate for describing the transcriptome profile detected with such probe design. In this study, we constructed a heterogeneous HMM model with profile geometry learning to include both intensity profile and positional changes. Together with normalization and dynamic training data screening, we present a comprehensive and robust methodology for predicting the occurrence of the transcription units across the genomic sequence on both strands from the tiling array expression data. We used this new method to study the architecture and dynamics of transcription activity of a model organism, Porphyromonas gingivalis W83, which is an important periodontal pathogen.
MATERIALS AND METHODS
Experimental dataMicroarrays used in this study were fabricated by Roche NimbleGen, Inc. (Madison, WI, USA) and each contained 385 000 unique 50mer sequences covering both sense and antisense strands of the entire genome of P.gingivalis W83 at a frequency of ca. one probe per 12 bases in average. Probe sequences were designed by using a dynamic genomic tiling array probe design pipeline (). The probe set can be downloaded from http://bioinformatics.forsyth.org/mtd. Total RNA and genomic DNA were extracted from P.gingivalis W83 grown on TSA sheep blood agar plates containing Hemin and Vitamin K (BAPHK) for 2 days in an anaerobic chamber at 37 @BULLET C (), and were labeled with Label IT Array Cy3 Labeling Kits (Mirus Bio LLC, Madison, WI, USA). Microarray hybridizations were performed at 42 @BULLET C for 16 h in the chamber with the Long Oligo hybridization buffer [80 mM TrisHCl, pH 7.0, 8 mM ethylenediaminetetraacetic acid (EDTA), 25% formamide, 5 SSC (75mM Trisodium Citrate, 750mM Sodium Chloride), 0.1% sodium dodecyl sulfate, 0.7 mg/ml salmon sperm DNA]. Post-hybridization procedures including array washing and signal acquisition were done according to Nimblegen's manufacturer protocol. Three biological replicates for both RNA and DNA samples were used for data analysis.
Data normalizationRaw microarray intensities were adjusted with data from DNA reference arrays using the Bioconductor package 'tilingArray' under R statistical programming environment (). A variety of factors affect the range of hybridization signals including different thermodynamic properties imposed by probe sequences (), biases in labeling efficiency and the abundance of target sequences. The abundance of target molecule y ij can be modeled as,where y ij is the observed intensity of i-th probe on the j-th array, B i is the unspecific background fluorescence and A i is the proportional factor specific to the abundance of y ij. The unknown parameters A i and B i were estimated directly or indirectly from the corresponding genomic DNA reference intensities. Non-specific background for B i was estimated from 80% of the probes with lowest intensities in the intergenic regions of the genome. The probe intensities with repeated sequences in the genome were regressed to the level equivalent to that of a single copy of the sequence. Between-array normalization () included in the tilingArray package was used for adjusting systematic signal variations among the arrays and base 2 logarithm of probe intensities were scaled.
Signal noise reduction by support vector regression normalizationWe applied SVMs () to intensity regression implemented by the 'kernlab' package in R (). The SVMs is a kernel-based machine learning algorithm. It maps the input data x into a high-dimensional feature space H defined by a kernel function and then searches for a hyperplane, i.e. a linear relation f (x), among the data points in the feature space:where (x) is projection : x  H by the corresponding feature vector x  R n ; w is the weight vector perpendicular to the hyperplane and weighting the corresponding dimension, and b  R. The SVMs were developed to solve pattern classification (support vector classification) and regression problem [support vector regression (SVR)]. The SVR has been extensively implemented in studying financial time series prediction ().
The modelIn this study, the model was learned by giving the input data, which in our case was the hybridization measurements {(x 1 ,
HM-SVMsOnly the data points larger than the threshold of  from the predicted linear function f (x) were subjected to the penalty. The complete optimization of SVR minimizes sum of the loss function and regularization item below:where m is the number of total probes on the genome; C is the trade-off value, and  i and  * i are the corresponding positive and negative errors at the i-th probes, respectively. The epsilon tube around the decision line of f (x) was created by the loss function. Therefore, only the data points outside the tube area had impact on the final decision line and the degree of influence was determined by the distance to the decision line.
RNA transcripts identification by HM-SVMsHM-SVMs was used to decode transcribed (expressed) and non-transcribed (silent) regions from the complicated probe intensity profiles. This hybrid algorithm allowed labeling the hidden state of sequential data based on the model learned from a training dataset integrating with prior knowledge.
The modelTo refine the problem, the transcriptome data D from hybridization measurements consisting of probes x = (x 1 , x 2 , , x m ,) are associated with the unknown hidden state sequence e = (e 1 , e 2 ,...,e m ) generated by an unknown model M. The feature vector V  {x, where x i is i-th probe on the genome and v is one of n features, was constructed from D to characterize every probe. In order to predict the unknown state e over the sequence (i.e. expressed or silent states), we constructed a learning model M representing a true model M. The constraint data X {(x i , e i )} D, in which the hidden state sequence e constraint has been characterized by prior knowledge, were selected as a training dataset for algorithm modeling. A w-parameterized discriminative function F: X  E  R was generated by maximizing Fover the response variable e constraint  E for a specific input X :The optimized function conjugated the pair of observation and hidden state sequences by a mapping , which extracted the features from observation/hidden state sequence pairs (x, e):Suggested by the concept of HMM, the hidden state of probe intensity along the genome was considered as a Markov chain. Two types of the features that jointed inputoutput mapping were derived from the emission and transition matrices. The emission matrix combined attributes of the observation vectors with a specific hidden state. The transition matrix described the neighbor hidden states which depended on each other along the sequence. Therefore, the function F was rewritten as following:) represents combination of hidden states and observation in which  y (x i ) maps observation vector associated with the observation r from the i-th point in the sequence. In our case,  y (x i ) denotes the observed intensity y  R at i-th probe in the sequence. Andshows an indicator function for the hidden state  located at the i-thdisplays the dependencies of states ,   K at the (i1)-th and i-th positions, where K denotes all possible states. In our case, K is either expressed or silent state. The equation mentioned above corresponds to first-order models, and higher order models can be generalized as well. F(X ,e constraint ;w) accumulates all extracted features along the sequence of length T. The maximum separation margin defined by the kernel function from the training data points in the feature space, which minimized errors of misclassification, was used to construct the discriminative function F. As described before, to solve possible non-separable data points,  slack variables and error cost C controlling the trade off were introduced to create a soft margin to allow margin violations. More detail HM-SVMs optimization combining the loss function with regularization item was described in. As a result, the hidden state sequence e was estimated by the function F, giving a complete test data with associated feature vector.
Extraction of feature vectorWe introduced a profile geometry learning method to construct feature vectors. In order to depict the profile terrain shaped by probe intensity and position, the feature vectors were composed of two terms including elevation and change of slopes. Given a search window (the range of the flanking regions of the current probe j)) which represents the probe j, its feature vector can be written asthe Z-score converted from the probe intensity under the assumption of the probe signals distributed by Gaussian. Therefore, Z-score normalizes the signals and presents the elevation of the terrain. f () i,i+1 shows the score of jumping from probe x i to x i+1 as below:where y and x showed the probe intensity and position. The first factor is the slope between probe x i , x i+1 ; the second was a weight which compared O(y) x (the observed y difference at the distance of x i and x i+1 ) to E(y) x (the expected y difference at the same distance). E(y) x can be estimated by averaging y calculated from all probe distances. Note that the probes were not equally distributed on genomic sequence. E(y) x is considered as signal noise due to distance change of the probe. Therefore, f () i,i+1 presents the change of the slope between two probes on the profile terrain. The feature vector V was composed of an nm matrix, where the row m represents total probes with n features. In contrast to the conventional HMM, the observed atomic data point was transformed to the numerical feature vector for SVM pattern recognition.
Hidden state assignmentIn order to combine the observation of sequence Y represented by the feature vector V with the hidden state sequence e, each probe was assigned with one of following labels: expressed or silent state. The assigning criteria were initially based on the NCBI genome annotation data, which serves as a good starting systematic biological knowledge. The sequences were preliminarily labeled as expressed or silent state corresponding to coding and non-coding regions, respectively.
The training set selectionTo select the training set X , we used a comprehensive and objective scheme to determine subregions from the array data only based on genome annotation data. It has been known that >90% of open reading frames (ORFs) were expressed in Escherichia coli (). Under this assumption, first type of the subregions, which were restricted to the ORF, tRNA and rRNA regions identified by the annotation, was used as training data for learning the expressed state. For learning the silent states, second type of the subregions located at intergenic regions was extracted and 300 bp of the DNA sequence was trimmed from both 5 and 3 ends. The trimming was to remove potential ncRNA signals from the untranslated regions (UTRs) both upstream and downstream of ORFs. According to these criteria, 955 regions were selected. Different experimental conditions may influence the selection of the training set. Therefore, leaveone-out cross-validation was used to evaluate each member of the training set for different conditions. Those with accuracy predicted by cross validation lower than 0.9 were considered non-informative or misinformative, and were removed.
The post-processingIn the output, every probe was tagged with either expressed or silent state. Therefore, the boundaries of the segmentsPage: 1426 14231430
W.-H.Yu et al.were defined as the junctions between two regions of different states. In addition, to remove possible false segments, labels of segments consisting fewer than four probes were averted to the same states as the neighbors. In other words, we ignored the small RNA transcripts covered by fewer than four probes (ca. 50 bp in size). The source code of SVMhmm V3.10 written in C was downloaded from http://www.cs.cornell.edu/People/tj/svm_light/svm_hmm.html (). The HM-SVMs algorithm was directly implemented in R and the input file for model learning and classification was formatted as described by the program. The results of transcriptome profile, algorithm classification and detail program scripts can be accessed on the website at http://bioinformatics.forsyth.org/mtd.
Strand-specific reverse transcription polymerase chain reactionFor standard reverse transcriptionpolymerase chain reaction (RTPCR), the false positive PCR artifact was detected in the absence of added RT primer due to self-priming of RNA or non-specific small DNA or RNA contaminants in the RNA extraction, which acted as the primers for RT reaction. To avoid the artifacts, a DNA tag non-homologous to P.gingivalis W83 genomic sequence was added to the 5 end of the synthesized RTprimer for reverse transcription. After cDNA was synthesized, regular PCR was performed with the tag and a gene-specific oligo as the primer pair (). Reverse transcription was initiated with 2 g RNA and 20 pmol tagged primer. The procedures of RTPCR followed Invitrogen SuperScript II's manual.
RESULTS AND DISCUSSION
Data normalization and regressionTo monitor the signal adjustments during different stages of data processing, we plotted the probe intensities along the genomic coordinate. Raw signal intensities were first adjusted using genomic DNA hybridization data as the reference.shows the genomic DNA intensities on a region of genome. The probe intensities with repeated sequences which may mislead abundance of RNA molecules were regressed to a single copy level. Theoretically, every DNA signal based on single copy number should be of the same level. However, the result showed a much fluctuated intensity profile on the plot because of various factors. One major factor was oligonucleotide composition (), which directly affects the affinity between targets and probes. Another involved the labeling efficiency of the probe. In our study, the genomic DNA was labeled by covalently attaching fluorescent dye to a heteroatom on guanine residues, thus the efficiency of labeling depended on the nucleic acid composition of the probe. The fluctuated DNA hybridization profile was used to adjust the expression profiles so that the bias due to sequence composition can be eliminated.shows the signal intensities adjusted by DNA reference signals and between-array normalization. Compared to, which plotted original RNA hybridization measurements on a base 2 logarithmic scale, the fluctuation of adjusted intensities was notably reduced within the expressed regions (), but was amplified in the background regions. This can be confirmed by quantitative comparison of standard deviation of RNA raw data and normalization data in. Also, the background noise inshows a symmetric and stochastic distribution not similar to. Our explanation is that background intensities are mainly contributed by non-specific noises without perfectly matched RNA target binding. Thus, the background regions are not the suitable targets for the DNA normalization method. Despite of this caveat, two major advantages gained still justified the use of normalization with DNA signals. First, the difference between the positive and the background signals was enhanced, which increased the sensitivity for detecting low level of expressionand (e) the corresponding ORFs. The gray areas were selected as the positive signals for further quantitative evaluation of data processing performance as shown in. The green areas were visually determined as background noise and its quantitative evaluation can be seen insignals.shows the difference of mean intensities between positive and background regions prior to and after normalization. Second, the normalized intensities within a transcript expressed a much condensed level and thus better represented the pattern profile of a RNA transcript. For this reason, SVR was applied to predict the local tendency from the scattered data distribution and eliminated the outliers. Inand, the noises presented by the standard deviations were significantly reduced in all regions after SVR adjustment. The moderation of SD mainly contributed to the improvement of signal-to-noise ratio (SNR), since the difference of positive and background signals did not change after normalization and SVR. To maintain the local tendency of the distribution, we empirically set the parameter  to 5  10 4 , which could fit our highly non-linear data model and reduce the cross-validation error. The smaller the  was, the much smoother the distribution became. But more informative intensities were lost and cross-validation error increased. Our major goal was to more accurately differentiate the transcript units (expressed signals) from the background (silent regions). The combination of DNA normalization and SVR enhanced the separation of positive signals from background noises.c compares the histograms of raw, normalized and SVR transformed intensities. For raw intensities, the majority of transcribed signals are located at levels just above the dominant background noises in accordance with a power-law distribution (). The mixed distribution obscured the recognition of the transcribed regions by the following algorithm. After adjustment by normalization and SVR, the data transformed to a bimodal-like distribution composed of a mixture of two Gaussian distributions. The lower dominant peak comprised the background signals and the right small one represented the transcript signals (). The much-separated distributions between transcript and background signals improved the performance of the machine learning algorithm described next.
Performance measurement on simulated dataTo compare the performance of our HM-SVMs and other methods, the synthetic dataset with four different sizes (10, 20, 30 and 40 K data points) simulating probe intensity distribution along the genomic coordination were constructed. Data points were randomlygenerated with Gaussian noise by fixing mean and SD (noise). Two hidden states (positive and background) were pre-assigned and the level of positive signals was controlled by SNR. To optimize the algorithm, several parameters were systematically explored in order to minimize misclassification rate on the simulated dataset, which included the cost of constraints violation C, precision value epsilon  and the search window size s. Increasing the value of C expanded the cost of misclassified points and forced to create a more accurate model. The value of C was set as 170 in this study.Smaller precision value  enhanced the prediction accuracy, but the computing time and memory usage increased. In this study  was set at 0.5. The search window in size S was set at 5. Furthermore, we tested both directions of reading the sequential data points, HMSVMs generated exactly the same classification with simulated data. On four different sizes of simulated data, we measured performance of our HM-SVMs and two other methodsthe segmentation method byand HMM-based method by. Since the level of SNR and the size of segment may influence the performance, we challenged the algorithms with various combinations of the two parameters. When the data represent gene expression level, the level of SNR corresponds to the amount of RNA. The size of segment suggests the length of RNA transcript. Some small regulatory RNAs may be found in small segments and operons consisting multiple cotranscribed genes may correspond to large segments. To access the performance of the three algorithms, accuracy and Youden's index (the difference of sensitivity and false positive rate) were calculated with different SNRs and segment sizes (). At low SNR (<1.5), our algorithm outperformed other two methods in different segment sizes. The accuracy of our algorithm was equal or higher than that of other algorithms under all conditions. The accuracy decreased with lower SNR and larger segment size. This may be due to that some data points in segments with larger size and low SNR were classified as background. Comparison of Youden's index, our algorithm showed a better power to discriminate true positive and true negative. However, when SNR was lower (<0.5), all algorithms showed poor Youden's indices, suggesting more false positive predictions. Overall, compared to the other two methods, our HM-SVMs showed higher discriminative power for classifying the underline states under all test conditions.We found a large number of transcripts containing potential novel ORFs in not yet annotated regions (). Several cis-encoded antisense RNAs () opposite to the location of the sense transcripts were also identified in many regions (). Small ncRNAs which may be responsible for regulation of its antisense gene expression were also observed (). The 5 and 3 UTR regions of the transcripts () may provide useful resource for studying post-transcriptional regulation. Furthermore, large transcription units were frequently found to contain several ORFs () and are the typical operons transcribed from the same promoters in bacterial cells.
Page: 1428 14231430
W.-H.Yu et al.
Benchmark comparisonThe HM-SVMs algorithm used in this study is highly efficient in terms of computational time. The analysis of the single strand of P.gingivalis genomic tiling array expression profile (ca. 200 K data points) required less than 1 min of computation time and consumed only 120 Mb system memory on a single core 2.3 MHz Intel-based computer. For the same analysis on the same computer platform, the segmentation algorithm published bytook more than 16 h [parameters: maximum segment length l = 2500 (25 kbp) and maximum segment numberand the method implementing HMM framework () took more than 6 h (with the parameter hidden state K set at 100). Clearly, the HM-SVMs based algorithm reported here is much more efficient compared to other algorithms used for transcriptome profile analysis.
Predicted transcripts validated by RTPCRTo validate the novel transcripts and transcriptional architectures by the HM-SVMs algorithm, a total of 36 regions predicted by HMSVMs as either expression or silence were subjected to experimental verification by RTPCR. Of 15 selected expressed regions by HM-SVMs, 13 showed positive RTPCR signals, indicating the presence of RNA. Of 21 selected silent regions, 18 showed no sign of RTPCR product, thus confirming the lack of RNA in these regions. By calculating hypergeometric distribution probability of classification from both experiment and computer, it suggested that the prediction of the algorithm significantly matched the results of the experiment (P-value <0.05). Moreover 7 of total 15 predicted expressed regions confirmed by RTPCR are novel RNAs that have never been described before. Of three regions which were predicted as silent but showed positive RTPCR signals, the intensities in these regions were very close to the background noises (SNR  0.01) and thus the expression patterns were masked or disrupted by the background. Localized and better background correction algorithm may be needed in order to increase the accuracy for the prediction of the low intensity area.
CONCLUSIONSA comprehensive method combining multiple innovative algorithms was devised and used for transcriptome profile analysis. This method starts with raw data normalization using DNA reference array to Page: 1430 14231430
W.-H.Yu et al.estimate probe-specific scaling and background parameters and to adjust probe intensity accordingly. SVR algorithm, a regression model preserving the local tendency of the profile, was then used to minimize the noises caused by the stochastic measurement error. Normalized and smoothed profile data were then subjected to expression status prediction using heterogeneous HM-SVMs, which incorporates profile geometry learning and transforms the hybridization signals into the high-dimensional feature vector for the discriminative model training. Viterbi algorithm was then used to decode the most likely underlying sequential states, considering the dependencies on the neighboring states. The performance was evaluated with the simulated data and our HM-SVM outperformed two other algorithms designed for similar purpose. The HM-SVMs algorithm has the flexibility of combining different types of validated biological information in learning the feature vector for constructing the predicting function. We believe this method will be a great addition to the current methods available for transcriptome profile analysis. Furthermore, this method can also be applied to the analysis of other types of time serial data, such as CGH, ChIP-on-chip and RNA-sequencing data for predicting hidden states of the data points.
The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 1423 at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
at :: on August 31, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
.3 Identification of transcription units by HM-SVMs We applied this algorithm to the analysis of the transcriptome profile for P.gingivalis W83. The selected training data for model learning consisted of pairs of input and output objects. The input was the feature vector, based on the distribution of probe intensity expression level described above, and the output was desired hidden states (expressed or silent) retrieved from NCBI genome annotation data. Additionally, any other system-wide experimental data can also be incorporated into the feature vector to enhance the discriminating ability of SVMs. The strategy of training set selection described in the methods was to extract the most informative regions by removing those that may be undergoing post-transcriptional modifications or transcription regulations. The probes in the selected regions were tagged with confident hidden states and were used in the learning of the discriminative function F. In addition, we included leave-oneout cross-validation to evaluate each member of the training set, and the one with non-informative or misinformative was eliminated. This annotation-based selecting strategy was objective but may include false labeling, which can be alleviated by implementing a soft margin created by the error cost C and the slack variable  in the discriminative function F. The distributions of probe intensities associated with both expressed and silent states from HM-SVMs results were plotted in Figure 2d. Degrees of separation of these two distributions showed that HM-SVMs were able to recognize the patterns from both states and to discriminate them correctly. Notably, there was an overlap between the two distributions, suggesting that the decision of classification was determined by corresponding feature vector, which was highly related to local tendency (subsequent dependency), instead of by a simple cutoff. Therefore, the algorithm could recognize the complex pattern of the expression profile and make a decision on the expression state intelligently. Examples of transcription profile analysis using HM-SVMs were shown in Figure 4. The figure shows that the algorithm was able to correctly distinguish the expressed transcripts from background noises consistent to the annotated genes and intergenic regions, respectively. Several types of RNA transcripts were classified by comparing the HM-SVMs results with the genome annotation. Examples of different types of RNAs were shown in Figure 4.
