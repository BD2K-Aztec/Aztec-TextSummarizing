The do_x3dna package has been developed to analyze the structural fluctuations of DNA or RNA during molecular dynamics simulations. It extends the capability of the 3DNA package to GROMACS MD trajectories and includes new methods to calculate the global-helical axis of DNA and bending fluctuations during simulations. The package also includes a Python module dnaMD to perform and visualize statistical analyses of complex data obtained from the trajectories. Availability and Implementation: The source code of the do_x3dna is available at https://github. com/rjdkmr/do_x3dna under GNU GPLv3 license. A detailed documentation, including tutorials and required input data, are freely available at http://rjdkmr.github.io/do_x3dna/.
IntroductionInteractions of double helical nucleic acids, namely dsDNA and dsRNA, with proteins are essential for several biological processes including DNA replication (), transcription (), translocation () or packaging (). To understand the functional mechanism of these processes, structural properties of nucleic acids have been probed using both experimental and computational studies. In particular, molecular dynamics (MD) simulations have been widely applied to study the roles of nucleic acids in biological process at atomic resolution (). In this context, several structural descriptors () frequently need to be calculated from the MD simulations. GROMACS (), a widely used open-source MD simulation software package, does not offer tools to calculate such structural descriptors of the dsDNA or dsRNA. Presently, two software tools, 3DNA () and Curves  (), are available to calculate these descriptors of nucleic acids using a PDB input file. These two packages have been extended for use with MD trajectory files in either PDB or AMBER format. However, these packages cannot be used directly with binary format trajectories (trr/xtc) and topology-parameter (tpr) files generated by GROMACS. Therefore, we have developed the do_x3dna package, which directly takes GROMACS input files, calculates structural descriptors frame wise using the 3DNA package, and generates output files in text format. These files can be further used for statistical analyses. However, these output files potentially contain large amounts of data, particularly as microseconds simulations are becoming routine. Consequently, analyses of raw data obtained from do_x3dna can be challenging. To address this problem, we additionally developed the Python module dnaMD, which contains several methods to extract and analyze raw data that were previously calculated using the do_x3dna.
ImplementationThe do_x3dna package consists of two parts: (i) the do_x3dna tool and (ii) the dnaMD Python module (). The do_x3dna tool is written in'analyze' to calculate structural descriptors for each frame, which are on the fly dumped as a PDB file from the trajectory. The do_x3dna tool requires a topology-parameter (tpr), a trajectory (trr/ xtc) file and optionally an atomic index (ndx) file as input. The user interface of this program is similar to other GROMACS tools. Additionally, the option for structure alignment is provided to fit each snapshot on the starting structure. Currently, do_x3dna can be used to calculate structural descriptors such as base-pair parameters (shear, stretch, stagger, buckle, propeller and opening), base-step parameters (shift, slide, rise, tilt, roll and twist) or helical parameters (X-displacement, Y-displacement, helical rise, inclination, tip and helical twist). The option to calculate their average values over time is provided. In addition, major and minor grooves of the double helix, backbone (a, b, c, d, e and n) and sugar dihedral angles of both strands, helical radii of both strands and positions of local helical axes can be calculated. Moreover, it generates hydrogen bond map for each base-pair as a function of time. The dnaMD module uses the external Python modules NumPy (van der) and SciPy (http://www.scipy.org/). A detailed documentation of dnaMD is provided at this website http:// rjdkmr.github.io/do_x3dna/apidoc.html. dnaMD implements a DNA class containing several variables and methods in an object oriented approach. An instance of this class can be initialized with the number of base-pairs present in the dsDNA. Subsequently, the data can be stored in this object variable by reading input files using implemented methods. Subsequently, the data can be analyzed using methods such as time_vs_parameter, parameter_distribution, get_ mean_error, dev_bps_vs_parameter, generate_smooth_axis, calculate_curvature_tangent, etc. (see details in the above website). Additionally, this module calculates global helical axis by fitting a smooth curve on coordinates of local helical axis using cubic spline interpolation (). Several tutorials including necessary input files are provided online at http://rjdkmr.github.io/do_x3dna/tutorial.html, which describe how to use the dnaMD module for analyses.
DiscussionThe current implementation was tested with simulation trajectories of a dsDNA, which was either unbound or bound to the protein channel of Phi29 bacteriophage in MD simulations. Subsets of these tests are available online as tutorials at above described website. The tutorials exemplify the use of dnaMD to characterize the impact of protein binding on the dsDNA structure. The do_x3dna package extends the efficient and straightforward application of the existing 3DNA package to MD simulations. Note that the Curves package contains a program 'CANAL', which was specifically developed for analyzing data obtained from MD simulations. However, this package uses AMBER trajectory and topology files, and generates limited results in text format output files. do_x3dna can be used directly for GROMACS, and also for NAMD () or AMBER () trajectories after converting them into trr/xtc or PDB format. A PDB file can be used instead of a GROMACS tpr file. A major advantage of using the do_x3dna is the availability of the Python module dnaMD, which provides ample flexibility in direct analyses of large and complex raw data. The dnaMD module can be used in a Python script in combination with other mathematical modules such as NumPy or Scipy, to perform rapid mathematical and statistical calculations. The obtained results can be visualized by using the Matplotlib module as shown inand D () as described in the tutorials. Moreover, the dnaMD module offers an additional feature over other available tools, namely analysis of helical axis bending by calculating either its curvature () or tangent angles using Frenet-Serret formula (). Overall, the do_x3dna package offers an efficient and flexible implementation to quantify and analyze several structural descriptors of dsDNA or dsRNA during MD simulations.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
Conclusion The do_x3dna package allows one to study biological processes that are mediated by nucleic acids through explicit solvent atomistic MD simulations. The application range of the dnaMD module could be further extended by features, such as to calculate the elastic property of the dsDNA.
R.Kumar and H.Grubm ller at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
