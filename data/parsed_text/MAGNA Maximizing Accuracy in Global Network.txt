Motivation: Biological network alignment aims to identify similar regions between networks of different species. Existing methods compute node similarities to rapidly identify from possible alignments the high-scoring alignments with respect to the overall node similarity. But, the accuracy of the alignments is then evaluated with some other measure that is different than the node similarity used to construct the alignments. Typically, one measures the amount of conserved edges. Thus, the existing methods align similar nodes between networks hoping to conserve many edges (after the alignment is constructed!). Results: Instead, we introduce MAGNA to directly 'optimize' edge conservation while the alignment is constructed, without decreasing the quality of node mapping. MAGNA uses a genetic algorithm and our novel function for 'crossover' of two 'parent' alignments into a superior 'child' alignment to simulate a 'population' of alignments that 'evolves' over time; the 'fittest' alignments survive and proceed to the next 'generation', until the alignment accuracy cannot be optimized further. While we optimize our new and superior measure of the amount of conserved edges, MAGNA can optimize any alignment accuracy measure, including a combined measure of both node and edge conservation. In systematic evaluations against state-of-the-art methods (IsoRank, MI-GRAAL and GHOST), on both synthetic networks and real-world biological data, MAGNA outperforms all of the existing methods, in terms of both node and edge conservation as well as both topological and biological alignment accuracy.
INTRODUCTION
Motivation and backgroundSequence alignment has led to breakthroughs in our understanding of how cells work. However, genes (i.e. their protein products) interact with one another to carry out cellular processes. And this is exactly what proteinprotein interaction (PPI) networks model. (While we focus on PPI networks, our ideas are applicable to any network type.) Network alignment (NA) can find regions of similarities between PPI networks of different species that are a likely consequence of evolutionary relationships between the networks. Unlike sequence alignment that ignores genes' interactions, NA can capture complex cellular events that result from the collective behavior of the genes. As such, NA could further our biological understanding. As recent biotechnological advances continue to yield more PPI data (), alignment of PPI networks of different species continues to gain importance (). This is because NA could guide the transfer of biological knowledge across species between conserved (aligned) network regions (). This is important, as many proteins remain functionally uncharacterized even for well studied species. Traditionally, the acrossspecies transfer of biological knowledge has relied on sequence alignment. However, as PPI networks and sequences can capture complementary functional slices of the cell, implying that PPI networks can uncover function that cannot be uncovered from sequences by current methods, restricting alignment to sequences may limit the knowledge transfer (). Complexity theory dictates that network (or graph) comparison is computationally hard. The underlying problem is that of subgraph isomorphism, which asks whether one graph (the source) appears as an exact subgraph of another graph (the target). Answering this is NP-complete (). Also, simply answering this is not enough when comparing PPI networks, as one PPI network is rarely an exact subnetwork of another because of biological variation (). It is more desirable to answer how similar two networks are and in what regions they share similarity. NA can do this. NA seeks to 'fit' the source into the target in the 'best possible way' even if the source is not an exact subgraph of the target. An alignment is a mapping between nodes of the source and nodes of the target that is expected to conserve structure (or topology) between the networks. [Methods exist that can align more than two networks (), but we focus on pairwise NA.] As NA is computationally hard, heuristics must be sought. NA can be local (LNA) or global (GNA). Initial NA solutions aimed to match local network regions (). That is, in LNA, subnetworks, rather than entire networks, are aligned (). But, aligned regions can overlap, leading to 'ambiguous' many-to-many mappings. Thus, GNA was proposed (*To whom correspondence should be addressed). In contrast to LNA, GNA compares entire networks, typically by aligning every node in the source to exactly one unique node in the target. We focus on GNA, but our ideas are also applicable to LNA. Traditionally, GNA has relied on biological information external to network topology, e.g. sequence similarity (). To extract the most from each source of biological information, it would be good to know how much of new biological knowledge can be uncovered solely from topology before integrating it with other sources of biological information (). Only after methods for topological GNA are developed that result in alignments of good topological and biological quality, it would be beneficial to integrate them with other biological data to further improve the quality. Thus, we focus on topological GNA, but additional biological data can easily be added. Existing GNA methods, of which the more prominent ones (and which we consider) are outlined below, typically use a twostep approach: (i) score the similarity of pairs of nodes from different networks, and (ii) feed these scores into an alignment strategy to identify high-scoring alignments from all possible alignments. IsoRank () scores nodes from two networks by a PageRank-based spectral graph theoretic principle: two nodes are a good match if their neighbors are good matches. Biological scores can be added to these topological scores to get final node scores. An alignment is then constructed by greedily matching the high-scoring node pairs. IsoRank has evolved into IsoRankN to allow for multiple GNA (), but this is out of the scope of our study. The GRAAL family of algorithms (), developed in parallel with the IsoRank family, use graphlet (or small induced subgraph) counts to compute mathematically rigorous topological node similarity scores (). Intuitively, two nodes are a good match if their extended network neighborhoods are topologically similar with respect to the graphlet counts. Also, MI-GRAAL (), the latest family member, can automatically add other (biological) node similarity scores into final scores. It is the alignment strategies of the GRAAL family members that are different. MI-GRAAL combines strategies of the other members, thus outperforming each of them. More recent GHOST () uses 'spectral signatures' to score node pairs topologically, while also allowing for inclusion of biological scores. GHOST's alignment strategy is seed-and-extend, like MI-GRAAL's, except that the two solve a quadratic versus a linear assignment problem, respectively.
Our approach and contributionsExisting GNA methods construct alignments by scoring all node pairs with respect to the nodes' similarities and by rapidly identifying high-scoring alignments from all possible alignments. Here, high-scoring alignments are typically those that 'maximize' (greedily or optimally) the node similarity score totaled over all mapped nodes (). However, the accuracy (or quality) of the alignments is then evaluated with respect to some other measure of an inexact fit of two networks, which is different than the node scoring function that is used to construct the alignments in the first place. Typically, one measures the amount of conserved edges (). Thus, the existing methods align similar nodes between networks with the goal (or hope!) of conserving many edges under the alignment (after the alignment is constructed!). Instead, we introduce MAGNA, a framework for directly 'maximizing' (optimizing) accuracy in GNA with respect to the amount of conserved edges while the alignment is constructed (without decreasing the quality of node mapping). Optimizing the amount of conserved edges would require finding a global optimum over the search space consisting of all possible node mappings. Owing to the large size of the space, exhaustive search is computationally intractable. But, approximate optimization techniques exist, such as genetic algorithms (). Hence, we adapt the idea of genetic algorithms to the problem of GNA to develop MAGNA as a conceptually novel GNA framework. To our knowledge, genetic algorithms have not been used for PPI GNA thus far. MAGNA simulates a 'population' of alignments that 'evolves' over time (the initial population can consist of random alignments or of alignments produced by existing methods). Then, the 'fittest' candidates (those that conserve the most edges) survive and proceed to the next generation. This is repeated until the algorithm converges so that the amount of conserved edges cannot be optimized further. Much of what defines any genetic algorithm is the crossover function, which 'combines' two candidates (i.e. alignments) into a new one. And because genetic algorithms have not been used for GNA thus far, we had to devise a novel function for crossover of two parent alignments into a child alignment that reflects each parent. The crossover function is our major contribution, because it allows MAGNA not only to combine alignments of any existing method to improve them but also to produce from scratch its own superior alignments. It is not obvious how to measure the quality of an alignment (Milenkovict al., 2010b), i.e. which measure to optimize as the 'fitness' function within the genetic algorithm. Clearly, a good alignment should maximize the amount of conserved edges. Many measures have been proposed to quantify this, all of which are heuristics and thus correctly reflect the actual alignment quality in some cases but fail to do so in other cases. Therefore, we introduce a new (still heuristic) alignment quality measure that takes the best from each existing measure. While we optimize with MAGNA this new measure as well as the existing measures, importantly, MAGNA can optimize any measure of alignment quality, topological or biological (or both) and of node or edge conservation (or both). We evaluate MAGNA against IsoRank, MI-GRAAL and GHOST by aligning: (i) a high-confidence yeast PPI network with its noisy counterparts, where the true node mapping is known, and (ii) real-world PPI networks of different species, where the true node mapping is unknown. Within each of these popular evaluation tests (), we perform multiple subtests to allow for a systematic method comparison. Importantly, in all (sub)tests, MAGNA improves both node and edge conservation, as well as both topological and biological alignment quality, of all of the existing methods.
METHODS
Alignment crossover functionHere, we define our novel 'crossover function', which is at the heart of MAGNA. The function should take two 'parent' alignments and produce a 'child' alignment that is intended to reflect both parents. Let G 1 V 1 ; E 1  and G 2 V 2 ; E 2  be two networks with V i and E i as the sets of nodes and edges, respectively. Let m=jV 1 j and n=jV 2 j. Without loss of generality, suppose jV 1 j jV 2 j. An alignment of G 1 to G 2 is a total injective function f : V 1 ! V 2 ; every element of V 1 is matched uniquely with an element of V 2. If jV 1 j=jV 2 j, and if f is injective, then in fact f is bijective. Let V 1 =fx 1 ;. .. ; x m g and V 2 =fy 1 ;. .. ; y n g. Let n=f1;. .. ; ng be the set of natural numbers from 1 to n. A permutation is a bijection : n ! n. Then, with the assumption that m = n, and given a fixed number labeling of nodes as above, we can represent any alignment f with a corresponding permutation that maps node labels to node labels. Even though it is rare that jV 1 j=jV 2 j, we can easily force this to be true by adding dummy, zero-degree nodes z i to V 1 , as: V 1 =V 1 [ fz m+1 ;. .. ; z n g. Thus, we will simply assume that jV 1 j=jV 2 j, without explicitly referring to V 1. Therefore, any alignment can be represented as a permutation, which is critical to our crossover function. (Henceforth, we use 'permutation' and 'alignment' interchangeably.) Let S n denote the set of all permutations. Notice that jS n j=n!, which is large. In theory, to find an alignment of maximum quality (with respect to a given criterion), we could 'simply' enumerate all permutations and evaluate the quality of each one. However, this is impractical because of the large size of S n , so we require a clever search heuristic. We design such a heuristic as follows. First, we create a graph with S n as the set of nodes in which two permutations (alignments) are connected by an edge if the alignments are 'adjacent' (see below for the definition). Second, as intuitively the alignment quality is continuous in alignment 'adjacency' (in the sense that two 'adjacent' alignments should be of similar quality, or in other words, a small perturbation of an alignment is not expected to greatly affect its quality), we exploit the topology of this graph to define a function for crossover of two alignments. Namely, we define the child alignment as the alignment that is 'in the middle' between two given parent alignments in this graph, as such, child is expected to inherit approximately half of each of its parents. Given two permutations and , we now formally define what it means for and to be adjacent. A transposition of a permutation is a new permutation that fixes every element of the original permutation, except two elements, which are swapped. Then, two permutations are adjacent if they differ by a transposition; that is, and are adjacent if there is a transposition such that =. We create graph  n with the set of nodes S n and the set of edges E n , where an edge between and is in E n if and only if and are adjacent. Then, we define , the crossover of any two permutations and from S n , as a permutation, which is the midpoint on a shortest path from to in  n (see below for details). This definition captures what we desire from a crossover function: it can be shown that for randomly selected permutations and , j \  j=n ! 1=2 and j \  j=n ! 1=2 as n ! 1. That is, is expected to share approximately half of its aligned pairs with , and likewise with. A proof of the above statement relies on the fact that the expected number of cycles in a permutation is log n. We do not discuss this further, as it would require more basics of abstract algebra, which is beyond the scope of this article; see Dummit and Foote (2006); Knuth (1997) for details. We now define our crossover function in more detail. Suppose ; 2 S n , and let = 1. We take Knuth's canonical cycle decomposition =c 1. .. c k. Then, for each i, we cyclically shift c i =x 1. .. x h  by a random index to get a cycle y 1. .. y h . We obtain a new cycle ^ c i by dropping the second half of the shifted cycle. That is, ^ c i =y 1. .. y h=2 . Finally, we define the crossover of and as =  ^ c 1. .. ^ c k. Knuth's canonical decomposition and the cycle decomposition algorithm are both well known (). For the crossover function's pseudocode, see Supplementary Section S1.
MAGNA: genetic algorithm-based GNA frameworkA genetic algorithm mimics the evolutionary process, guided by the 'survival of the fittest' principle (B ack, 1996). It begins with an initial 'population' of 'members'. Members 'crossover' with one another to produce new members. The 'child' resulting from a crossover should resemble both of its 'parents'. Crossing over different pairs of members at a given 'generation' yields new members, which comprise the new generation of members. The probability of a member being chosen to crossover with another member is determined by its 'fitness', so that fitter members are more likely to crossover. To prevent the size of the population from growing without bound, the size is kept constant across all generations, with only the fittest members surviving from one generation to the next. To ensure that the maximum fitness of the population is non-decreasing, with each generation, a designated 'elite' class of the fittest members is automatically passed to the next generation. As the algorithm progresses, newer generations are produced, with fitness (hopefully) increasing, until a stopping criterion is reached. To specify a genetic algorithm, we need to specify all of the above parameters. In MAGNA, members of a population are alignments. We use different types of initial populations: (i) all random alignments, (ii) random alignments mixed with an IsoRank's alignment, (iii) random alignments mixed with a MI-GRAAL's alignment and (iv) random alignments mixed with a GHOST's alignment. Because we focus on topological NAs (Section 1.1), we produce all alignments by using only topological information in the existing methods' node scoring function. For each type of initial population, we test populations of different sizes: 200, 500, 1000, 2500, 5000, 10 000 and 15 000. (It is because the population sizes are large that we cannot form an initial population consisting only of alignments produced by an existing method. Instead, we fill in the remaining part of the existing method's population with random alignments.) The mathematics from Section 2.1 gives us a suitable crossover function for producing a child alignment that resembles both of its parents. Our fitness function is the measure of alignment quality we choose to optimize: edge correctness (EC), induced conserved structure (ICS) or symmetric substructure score (S 3 , Section 2.3), but it can be any measure. In every generation, we keep the best half of the population from the previous generation, and we fill the remaining half of the population with alignments produced by crossovers. We select pairs of alignments to be crossed as follows. At a given generation of population size p, we have pOur implementation of the alignment crossover function takes OjVj time. MAGNA's bottleneck tends to be the computation of alignment quality F. If the measure of F is EC, ICS or S 3 , then for an alignment, it takes OjEjlog jEj time to compute F. Finally, sorting each generation of size p takes Oplog p time, though this is typically negligible compared with the computation of F. If MAGNA is run for N generations, the overall time complexity of MAGNA is ONpjVj+ pjEjlog jEj+plog p. MAGNA is embarrassingly parallelizable, which can lead to a drastic speedup.
New alignment quality measureTo motivate our new measure of alignment quality, the S 3 , we first present drawbacks of the existing EC and ICS measures.). Because EC is defined with respect to the source but not the target network, it fails to penalize alignments mapping sparser network regions to denser ones (). ICS of f is the ratio of the number of edges conserved by f to the number of edges in the subnetwork of G 2 induced on the nodes in G 2 that are aligned to the nodes in G 1 : ICSf= jfE 1 j jEG 2 fV 1 j (). Because ICS is defined with respect to the target but not the source network, it fails to penalize alignments mapping denser network regions to sparser ones (). Therefore, we define Sis the number of unique edges in this composite graph. Thus, S 3 of an alignment is 100% if and only if f is a perfect embedding. As such, S 3 penalizes both alignments that map denser network regions to sparser ones and alignments that map sparser network regions to denser ones ().
RESULTS AND DISCUSSION3The effect of population size We find that, in general, larger population size is always preferred, independent of the initial population type, maximum number of generations and optimization measure (Supplementary Section S2 and Supplementary). Henceforth, we continue with the largest population size of 15 000.The effect of the maximum number of generations We find that, in general, the larger the population size, the larger number of generations is preferred, which is $2000 for random initial population, independent on the optimization measure, and $400 1200 for IsoRank, MI-GRAAL or GHOST initial population, depending on the optimization measure (Supplementary Section S2 and Supplementary). In general, GHOST initial population 'converges' faster than MI-GRAAL and IsoRank populations. Because of MAGNA's design, the alignment quality never drops from one generation to the following one. Hence, even with IsoRank, MI-GRAAL and GHOST populations, theThe alignment between networks G and H has EC of 4=5=0:8, ICS of 4=5=0:8 but S 3 of 4=6=0:67. EC rewards for aligning four edges in G to four edges in H and penalizes for misaligning an edge in G to a non-edge in H, but it fails to penalize for misaligning a non-edge in G to an edge in H. ICS rewards for aligning four edges in G to four edges in H and penalizes for misaligning an edge in H (between the aligned nodes) to a non-edge in G, but it fails to penalize for misaligning an edge in G to a non-edge in H. S 3 also rewards for aligning four edges in G to four edges in H, but unlike EC or ICS, S 3 penalizes for misaligning both an edge in G to a non-edge in H and a non-edge in G to an edge in H results are never worse at the 2000th generation compared with the 4001200th generation. Thus, we continue with the maximum number of generations of 2000. It is encouraging that some methods can converge fast, indicating that MAGNA can produce high-quality alignments quickly.The effect of the optimization measure To compare our S 3 with existing EC and ICS, we continue by optimizing all three measures.
MAGNAevaluation and comparison with existing methods For each of the six noise levels, four initial population types (each of size 15 000), and three optimization measures, we obtain with MAGNA one final alignment, i.e. the best alignment (with respect to the given optimization measure) at the 2,000 th generation. In addition, we study the original alignments produced by the existing methods. Then, we compare these original alignments to those produced by MAGNA to see whether MAGNA improves the alignment quality of the existing alignments. Note that independent on which of the three alignment quality measures (EC, ICS or S 3 ) we optimize, the question remains on how to best evaluate the correctness of the resulting final alignment. Certainly, we could use any of the three alignment quality measures for this purpose. However, because the true node mapping is known when aligning the high-confidence yeast PPI network to its noisy counterparts, we can actually evaluate each method more fairly by counting the number of correctly aligned node pairs (or 'node correctness'). When we do this, we find that MAGNA improves all of the original alignments (i.e. all of the existing methods), across all levels of noise, and for each of the three optimization measures (and B). In general, the higher the noise level, the larger our improvements on the existing methods (The effect of the initial population type GHOST's original alignments are overall slightly superior to or comparable with MIGRAAL's original alignments, depending on the noise level and the optimization measure, both are superior to IsoRank's original alignments, and all three are superior to random original alignments (and B). These results are consistent to those in the literature (). Thus, one might expect that MAGNA's improved alignments of GHOST would be of better quality than MAGNA's improved alignments of MI-GRAAL, that both would be of higher quality than MAGNA's improved alignments of IsoRank and that all three would be of higher quality than MAGNA's improved alignments of random alignments. Interestingly, we find that this is not always the caseand B): there are surprising effects of the choice of the initial population type. For example, our improved alignments of MI-GRAAL are sometimes better than our improved alignments of GHOST. Or, even more interestingly, for larger noise levels, it is the random population that results in the best alignments; that is, we improve more when starting from completely random alignments than we do when starting from the original alignments of IsoRank, MI-GRAAL or GHOST (and B). The above results suggest that MAGNA is capable of not only improving alignments generated by the existing methods but also generating from completely random alignments its own new superior alignments, especially for higher noise levels. Implications are as follows. First, because current PPI networks are likely noisier than those used in this section (), our results suggest that one might be able to improve on the current best PPI NAs [of different species, when the actual node mapping is unknown (Section 3.2)] simply by using MAGNA on completely random alignments of the networks. Second, recall that random initial population converges the slowest of all populations, if at all. And recall that we stop MAGNA after 2000 iterations, as all initial populations but random one converge even before that. Because of this, and because random population is superior for larger noise levels, it is possible that for such levels, the alignment quality could be improved even further by running MAGNA longer, as dictated by the available computing resources. The effect of the optimization measure No single optimization measure (out of EC, ICS and S 3 ) is always superior with respect to the node correctness as the alignment quality measure; the results depend on the choice of MAGNA's parameters. Over all noise levels, random initial population prefers (in the sense that it results in the highest node correctness for) EC and S 3 equally, IsoRank initial population prefers ICS, MI-GRAAL's initial population prefers S 3 and GHOST initial population prefers EC (and B). Hence, S 3 , as well as EC, seem to be preferred overall in this context. We even further study the effect of the three optimization measures by computing Pearson correlation between the 'node correctness' on one hand and EC, ICS or S 3 on the other, across all alignments from. A higher and more statistically significant correlation would indicate that the given optimization measure is capable of uncovering more correct alignments. The node correctness correlates most significantly with our new S 3 measure, suggesting its superiority over the existing measures (). Additional results for noisy high-confidence yeast alignments Thus far, we have evaluated alignment quality with respect to the node correctness. All results are qualitatively similar with respect to additional criteria (Supplementary Figs S2 and S3).
An alternative evaluation teston networks with known node mapping: random edge rewiring In addition to noisy low-confidence alignments, we also validate MAGNA by aligning (using the same parameters as in Section 3.1.3) the original yeast network with the same network augmented by randomly rewiring 0, 5, 10, 15, 20 or 25% of its edges. We refer to the corresponding alignments as 'noisy rewired yeast alignments'. To account for non-deterministic nature of the rewiring, for each noise level, we produce 10 rewired instances and we average alignment quality over the 10 alignments. Again, because the networks being aligned are defined on the same set of nodes and differ only in the number of edges, we know the correct node mapping. However, now it is not necessarily the case that the original is an exact subgraph of a noisy network. In this test, MAGNA is even more superior than above (and D; Supplementary Figs S4 and S5). Importantly, when MAGNA is run on random initial population, it is superior compared with when it is run on IsoRank, MI-GRAAL or GHOST population. That is, MAGNA generates superior alignments from scratch.
MAGNA on networks without known node mapping
Data descriptionNext, we align PPI networks of different species: a yeast S.cerevisiae PPI network with 2390 proteins and 16 127 PPIs () and a human PPI network with 9141 proteins and 41 456 PPIs (). We choose these species for the following reasons. Owing to its ease of genetic manipulation, yeast has been one of the best studied species. Interactomes for other species remain largely incomplete. Although the human PPI network is also still incomplete, studying this network is important for understanding complex diseases. And because the analyzed human network combines PPIs from many sources, it is of good coverage (). Also, the same networks have already been analyzed with the existing methods, which makes the method evaluation systematic. We adopt two additional tests: we align PPI networks of (i) Campylobacter jejuni and Escherichia coli and (ii) Mesorhizobium loti and Synechocystis sp. PCC6803. We choose these species because their alignments were also evaluated in MI-GRAAL () and GHOST () studies, and because: (i) C.jejuni and E.coli are currently the most complete bacterial PPI networks, which are relevant for studying disease, and (ii) Mesorhizobium and Synechocystis networks were produced by the same lab and experimental method, thus offering consistency. All data for these species come from the MI-GRAAL study. Below, we first discuss yeasthuman. Then, in Section 3.2.5, we discuss C.jejuniE-coli and MesorhizobiumSynechocystis.pairs, thus assigning a single semantic similarity score to each alignment. Just as topologically, among the existing methods, GHOST is superior biologically, followed by MI-GRAAL, IsoRank and random alignments, respectively (and Supplementary Figs S7S9). Before we discuss MAGNA's biological quality, we note that while MAGNA is guaranteed to never decrease topological quality with respect to a given optimization measure, nothing prevents MAGNA's biological quality to decrease while optimizing its topological quality. Hence, it would be encouraging if MAGNA improved or at least conserved biological quality of the existing methods. Indeed, MAGNA almost never decreases and, in many cases, it actually improves biological quality of the existing methods (and Supplementary Figs S7S9), while at the same time, it improves their topological quality. Unlike for the existing methods, when optimizing topological quality of random alignments, MAGNA always improves the alignments' biological quality, and the improved alignments often outperform the existing methods, which again indicates MAGNA's superiority. In terms of the effect of the optimization measure (Supplementary Figs S8 and S9), just like with respect to topological quality, ICS is a poor optimization measure with respect to biological quality as well, while unlike with respect to topological quality, EC is now slightly superior optimization measure compared with S 3. Adding other biological information (e.g. sequence similarity) into node scores before constructing alignments, or optimizing topological and biological quality, could further improve MAGNA.
MAGNA parameters3.2.5 MAGNA's results for C.jejuniE.coli and Mesorhizobium Synechocystis alignments Thus far, we have discussed results for yeast-human. Generally, when aligning C.jejuniE.coli or MesorhizobiumSynechocystis network pairs, alignment quality trends are qualitatively the same as for yeast-human. That is, MAGNA still outperforms (and importantly, to even a greater extent compared with yeast-human) all methods with respect to all measures. For topological results, seeand C and Supplementaryand S14. For biological results, seeand C and Supplementary Figs S11S13 and S15. Importantly, unlike for yeast-human, when MAGNA optimizes EC or S 3 on GHOST initial population for C.jejuniE.coli or MesorhizobiumSynechocystis, it now actually improves the original GHOST alignment. Also, now running MAGNA on random initial population actually outperforms running MAGNA on GHOST initial population. This again demonstrates that MAGNA can not only improve upon existing alignments but also produce its own superior alignments from scratch. In terms of the effect of the optimization measure (Supplementary Figs S10S15), just as for yeasthuman, ICS is typically a poor optimization measure, both in terms of topological and biological alignment quality (this is more pronounced for C.jejuniE.coli than for Mesorhizobium Synechocystis). Optimizing EC drastically improves topological quality of random alignments and IsoRank, and it also (marginally) improves topological quality of MI-GRAAL and GHOST. Just as for yeasthuman, optimizing S 3 is even better, as it is almost always superior to optimizing EC for each topological measure (except EC, as expected). In terms of biological quality, optimizing EC and S 3 yields somewhat similar resultsin some cases, EC is better, and in others, S 3 is better; however, as unlike EC, S 3 is never the worst optimization measure (for MesorhizobiumSynechocystis), this may indicate that S 3 is better.MesorhizobiumSynechocystis networks, in terms of: (i) the percentage of aligned pairs in which the two proteins share at least k GO terms (k = 1, 2) and (ii) GO semantic similarity, when considering all GO terms. Results are similar for biological process GO terms only (Supplementary Figs S7 and S11). Panel (A) considers GO data obtained by an experimental evidence code (EXP) and all GO data of any evidence code (ALL). No such distinction is made in panels (B) and (C), as the data do not support it. Unlike GO data from panels (A) and (B), GO data from panel (C) do not allow for computing semantic similarities. Comparison is shown between MAGNA's best alignment and the original alignments of the existing methods. For details, see Supplementary Figs S7S15
Bottom lineIn summary, we have demonstrated superiority of MAGNA over the existing methods with respect to topological alignment quality. Also, over all alignments of real networks and all biological alignment quality analyses (Supplementary Figs S8, S9, S12, S13 and S15), in majority (70%) of cases, MAGNA's optimization of topological quality of the existing methods (including random alignments) actually improves the existing methods' biological quality as well, with respect to at least one of the optimization measures. And even when MAGNA does not improve biological alignment quality of some existing method by optimizing topological quality of the same method, MAGNA always improves (or at least preserves) biological quality of that method by optimizing topological quality of some other existing method, which further confirms MAGNA's superiority. In terms of which measure of alignment quality to optimize within MAGNA, over all alignments of real networks, because optimizing S 3 is always superior to optimizing EC with respect to topological results, whereas the two are comparable with respect to biological results (with perhaps slight superiority of S 3 ), S 3 seems to be the best optimization measure.
Running time analysisTo illustrate MAGNA's running time and compare it against the existing methods' running times, we focus on MAGNA's alignments of the three pairs of real-world PPI networks when S 3 is optimized on random initial population. We find that MAGNA is typically superior to all existing methods, sometimes even at a lower computational cost, especially compared with GHOST (). Specifically, in all pairs of species except yeasthuman, MAGNA outperforms from completely random alignments all of IsoRank, MIGRAAL and GHOST, at a higher (yet still reasonable) computational cost compared with IsoRank and MI-GRAAL but at a lower computational cost compared with GHOST (). For yeasthuman, MAGNA still outperforms IsoRank and MIGRAAL (again, at a higher computational cost) (). Even though MAGNA does not outperform GHOST for these two species when run on random initial population, GHOST's running time is drastically higher than any of the other methods' times (); further, MAGNA does improve on GHOST when run on a non-random initial population (). All running times were measured on a 64-core 2.3 GHz AMD Opteron 6378 server with 128 GB of RAM. For a fair comparison, MAGNA as well as each of the existing methods was run serially using a single core.
at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
V.Saraph and T.MilenkovictMilenkovic Milenkovict :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
crossover possibilities. This is too large a number to consider all of them. Thus, to select crossover pairs, we use roulette wheel selection, a popular selection strategy (B ack, 1996), which chooses members with probability in linear proportion to the members' fitness. We let MAGNA run for many generations, from 0 to 2000 in increments of 200. The fittest alignment from the last generation is reported as the final alignment. For MAGNA's pseudocode, see Supplementary Section S1.
MAGNA at :: on August 30, 2016 http://bioinformatics.oxfordjournals.org/ Downloaded from
.2.4 MAGNA's biological quality and comparison with existing methods In this study, we focus on topological NAs (Section 1.1). Yet, nothing prevents us to measure biological quality of the alignments. We do so by counting the percentage of aligned node pairs in which the two proteins perform the same biological function, i.e. Gene Ontology (GO) terms (Ashburner et al., 2000). We also measure biological alignment quality with respect to GO semantic similarity: (i) we use the Lin method within IT-GOM (Mazandu and Mulder, 2013) to compute semantic similarity of two GO terms, (ii) we use the Average measure to compute similarity between two aligned proteins by averaging semantic similarities across all of the proteins' associated GO term pairs and (iii) we average the resulting similarities over all aligned protein Fig. 3. Topological alignment quality for (A) yeasthuman, (B) C.jejuni E.coli and (C) MesorhizobiumSynechocystis PPI networks. Each panel shows, for each of the four alignment quality measures (shown on x-axis), comparison of results between MAGNA's best alignment (over all initial population types and optimization measures) and the original alignments of the existing methods. For details, see Supplementary Figs S6, S10 and S14
CONCLUDING REMARKS We present a conceptually novel framework for 'optimizing' GNA with respect to any alignment quality measure, which outperforms the existing state-of-the-art methods. Given the tremendous amounts of biological network data that are being produced, network alignment will only continue to gain importance, as it can be used to transfer biological knowledge from well-characterized species to poorly characterized ones between aligned network regions. Also, analogous to sequence alignment, network alignment can be used to infer species phylogeny based on similarities of their biological networks. Thus, it could lead to new discoveries about the principles of life, evolution, disease and therapeutics.
