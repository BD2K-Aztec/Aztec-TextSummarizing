Current next generation sequencing technologies often generate duplicated or near-duplicated reads that (depending on the application scenario) do not provide any interesting biological information but can increase memory requirements and computational time of downstream analysis. In this work we present ParDRe, a de novo parallel tool to remove duplicated and near-duplicated reads through the clustering of Single-End or Paired-End sequences from fasta or fastq files. It uses a novel bitwise approach to compare the suffixes of DNA strings and employs hybrid MPI/multithreading to reduce runtime on multicore systems. We show that ParDRe is up to 27.29 times faster than Fulcrum (a representative state-of-the-art tool) on a platform with two 8-core Sandy-Bridge processors. Availability and implementation: Source code in C þþ and MPI running on Linux systems as well as a reference manual are available at https://sourceforge.net/projects/pardre/
IntroductionThe progress of Next Generation Sequencing (NGS) technologies has led to large datasets that are used in a wide range of bioinformatics applications. Preprocessing of NGS datasets is often required to either reduce their sizes or improve data quality. One such preprocessing step is the removal of duplicated and near-duplicated reads (). There are two approaches to remove these type of reads: mapping-based and de novo strategies. The first approach initially maps the reads to a reference genome and discards those reads that are aligned to the same position (). Unfortunately, it requires a complete genome as reference, which is not always available. The de novo approach only needs the NGS input data and has gained attention in recent years. Examples of de novo tools include FastUniq () (not able to remove near-duplicated reads), Fulcrum () (parallelized for multicore and distributed systems with MapReduce) and G-CNV () (parallelized for CUDA-enabled GPUs). In this paper we describe ParDRe a fast de novo tool to remove duplicated and near-duplicated reads with support for both SingleEnd and Paired-End datasets. ParDRe uses a novel bitwise approach to compare DNA strings and exploits the computational power of current multicore CPUs by employing both multithreading and Message Passing Interface (MPI). Mutithreading support is part of all compilers that follow the C 11 standard while there exist many MPI open public compilers.