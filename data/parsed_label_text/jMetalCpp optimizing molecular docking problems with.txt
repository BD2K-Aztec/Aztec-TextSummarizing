Motivation: Molecular docking is a method for structure-based drug design and structural molecular biology, which attempts to predict the position and orientation of a small molecule (ligand) in relation to a protein (receptor) to produce a stable complex with a minimum binding energy. One of the most widely used software packages for this purpose is AutoDock, which incorporates three metaheuristic techniques. We propose the integration of AutoDock with jMetalCpp, an optimization framework, thereby providing both single-and multi-objective algorithms that can be used to effectively solve docking problems. Results: The resulting combination of AutoDock þ jMetalCpp allows users of the former to easily use the metaheuristics provided by the latter. In this way, biologists have at their disposal a richer set of optimization techniques than those already provided in AutoDock. Moreover, designers of metaheuristic techniques can use molecular docking for case studies, which can lead to more efficient algorithms oriented to solving the target problems. Availability and implementation: jMetalCpp software adapted to AutoDock is freely available as a Cþþ source code at
INTRODUCTIONThe development of techniques such as high-throughput protein purification, X-ray crystallography and nuclear magnetic resonance spectroscopy have contributed in the discovery of many structural details of proteinprotein and ligandprotein complexes. Such advances in association with the completion of the human genome sequencing have allowed the identification of many therapeutic drug targets (). In this context, molecular docking is a method of structure-based drug design that has been in development since the early 1980s. This approach is based on two well-defined steps: (i) determining the position and orientation of the ligand within the target receptor and (ii) assessing the affinity between the two structures by analyzing the binding energy scores and selecting those ligandprotein conformations with minimum binding energies. For the past two decades, there has been an attempt to improve docking molecular techniques. Therefore, many researchers in this field have focused on improving the quality of the docking results. This depends on the energy scoring function for evaluating the results obtained and an optimization algorithm to detect the best state characterized by a minimum of binding energy. Furthermore, another challenge is to develop software solutions, the scoring functions of which allow the rotation around torsional degrees of freedom of the flexible ligands and side chains of receptors. An example of these software packages is AutoDock (), a C toolbox, which has become the most cited and one of the most used software packages in molecular modeling studies, and also an efficient tool for virtual drug screening, which has been applied in real cases that involve flexibility (). The release of AutoDock 4.2 provides three optimization algorithms: a simulated annealing and two genetic algorithms (GAs), one of which, referred to as the Lamarckian GA, incorporates a local search. These algorithms are metaheuristic techniques, which are high-level techniques that rule a set of underlying simpler methods (typically, heuristics) designed to find optimal or nearoptimal solutions to a given optimization problem (). As mentioned, one important research area is to find appropriate search methods capable of producing the most accurate solutions to the docking problems. In this context, this article proposes a software platform oriented to provide a set of metaheuristic techniques allowing molecular docking problems to be optimized. Our approach has been to integrate AutoDock with jMetal, an object-oriented framework for multi-objective optimization with metaheuristics (), which has become one of the most popular software tools in the field. By multi-objective optimization, we refer to solving problems that have two or more conflicting objectives that have to be maximized or minimized at the same time. If an optimization problem is composed of a unique objective function, we say that it is a single-objective problem. The underlying idea is to run the algorithms in jMetalCpp and to use the scoring function of AutoDock 4.2. The original jMetal software is written in Java script, so we have built a C implementation from scratch called jMetalCpp (http://jmetalcpp.sourceforge.net), the idea being to achieve a clean and efficient integration with AutoDock 4.2. By doing this, the resulting platform can benefit, on the one hand, the biologists interested in applying other algorithms than those provided by AutoDock to solve their target problems. On the *To whom correspondence should be addressed.  The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com other hand, researchers in metaheuristics frequently search for real-world problems to assess the performance of new algorithms, so our solution could lead to the appearance of more efficient techniques for solving molecular docking problems. To the best of our knowledge, this platform is the first to integrate a set of single-and multi-objective metaheuristics to solve docking problems.
DISCUSSIONThe use of the jMetalCpp framework provides several advantages for those researchers in drug discovery who are interested in improving the docking results with metaheuristics that are different from the searching methods provided by AutoDock 4.2. To demonstrate the benefits of our proposal, we evaluated a set of single-objective metaheuristics implemented in jMetalCpp on a first standard benchmark provided byand a second benchmark that involves flexibility in side chains of arg-8 residue of human immunodeficiency virus-protease receptors (). In this article, we have demonstrated that it is possible to improve upon the results obtained by the AutoDock algorithms in some scenarios (). Furthermore, jMetalCpp can be considered a useful tool for advanced users (or developers) with little C knowledge, who can implement new metaheuristic techniques that can be integrated into this framework with relative ease. Consequently, these techniques can be quickly integrated inside AutoDock. The Web site of jMetalCpp provides user instructions on how to install and run the jMetalCpp framework. For future work, additional developments and improvements to be implemented in jMetalCpp are being planned, such as the integration of new single-(e.g. CMA-ES) and multi-objective metaheuristic techniques (e.g. SMS-EMOA). We are also considering integrating the AutoDock Vina docking function (), a recently developed energy function, the use of which is spreading throughout the AutoDock user community.