Motivation: Omics Pipe (http://sulab.scripps.edu/omicspipe) is a computational framework that automates multi-omics data analysis pipelines on high performance compute clusters and in the cloud. It supports best practice published pipelines for RNA-seq, miRNA-seq, Exome-seq, Whole-Genome sequencing, ChIP-seq analyses and automatic processing of data from The Cancer Genome Atlas (TCGA). Omics Pipe provides researchers with a tool for reproducible, open source and extensible next generation sequencing analysis. The goal of Omics Pipe is to democratize next-generation sequencing analysis by dramatically increasing the accessibility and reproducibil-ity of best practice computational pipelines, which will enable researchers to generate biologically meaningful and interpretable results. Results: Using Omics Pipe, we analyzed 100 TCGA breast invasive carcinoma paired tumor-normal datasets based on the latest UCSC hg19 RefSeq annotation. Omics Pipe automatically downloaded and processed the desired TCGA samples on a high throughput compute cluster to produce a results report for each sample. We aggregated the individual sample results and compared them to the analysis in the original publications. This comparison revealed high overlap between the analyses , as well as novel findings due to the use of updated annotations and methods. Availability and implementation: Source code for Omics Pipe is freely available on the web (https://bitbucket.org/sulab/omics_pipe). Omics Pipe is distributed as a standalone Python package for installation (https://pypi.python.org/pypi/omics_pipe) and as an Amazon Machine Image in Amazon Web Services Elastic Compute Cloud that contains all necessary third-party software dependencies and databases (https://pythonhosted.org/omics_pipe/AWS_installation.html).
IntroductionNext-generation sequencing (NGS) has presented researchers with the opportunity to collect large amounts of sequencing data (), which has accelerated the pace of genomic research with applications to personalized medicine and diagnostics (). These technologies have resulted in the development of a large number of computational tools and analysis pipelines, necessitating the creation of best practices and reproducible integrative analysis). Several automated pipelines have been developed to tie together individual software tools such as bcbio-nextgen (https://github.com/chapmanb/bcbio-nextgen), Galaxy () and others (). In addition, several groups have published step-by-step directions for well-established best practices in NGS analysis. Examples include the Broad Institute's best practices for variant calling using the Genome Analysis Toolkit (GATK) () and ENCODE's standardized data-processing guidelines (ENCODE Project). Despite the establishment of best practices and analysis pipelines, there exists a need for a platform that provides researchers with an analysis tool that can be easily understood and reproduced by other researchers in a variety of computational environments (). Galaxy, a widely known platform for performing reproducible computational analyses, has been designed to make computational analyses accessible to non-programmers (). It allows the user to pipeline together various software tools pre-wrapped by Galaxy without the need to learn the implementation details of any single tool in a web-based interface. Other biologist-oriented NGS software tools include Unipro UGENE NGS pipelines () and the workflow management system Taverna (). While these tools are extremely useful for biologists and other non-programmers, more advanced users may have a need for a tool that supports programmatic access to the individual tools, is easily extensible and is reproducible. Several tools exist to allow developers to pipeline together functions, such as Bpipe (), Snakemake () and Ruffus (), although developers are still required to develop their own pipelines using these frameworks. A complete analysis pipeline, Bcbio-nextgen (https://github.com/chapmanb/bcbio-nextgen), is designed for bioinformaticians to implement high throughput optimized NGS analysis pipelines and requires familiarity with command-line programming. The focus of bcbio-nextgen is on variant calling using a variety of software tools that have been performance optimized for use in bcbio-nextgen. This makes bcbio-nextgen a powerful tool for implementing variant calling pipelines; however, customizing and extending a bcbio-nextgen pipeline requires extensive programming knowledge. In addition, there are several other pipelining tools, although many focus only on a single NGS platform, require computational expertise, require commercial licenses and/or are poorly documented, necessitating the need for an open-source computational tool that provides researchers with a reproducible framework to democratize NGS analyses (). To address this need, we developed Omics Pipe (http://sulab. scripps.edu/omicspipe), an open-source, modular computational platform that provides a community-curated framework for automating best practice multi-omics data analysis pipelines with built-in version control for reproducibility (). It currently supports several best practice NGS pipelines (). A non-programmer with basic unix command-line programming experience can easily execute the supported pipelines within Omics Pipe, although the target users for Omics Pipe are computational biologists and bioinformaticians that require full programmatic access to the individual software tools and parameters. The Omics Pipe framework is modular, which allows researchers to easily and efficiently add new analysis tools with scripts in the form of Python modules that can then be used to assemble a. Schematic diagram of Omics Pipe demonstrating the parallel execution of pipelined tasks and samples. Omics Pipe requires a parameter file in YAML format, and can be run on a local compute cluster or in the cloud. Each run of Omics Pipe is logged with the version and run information for reproducibility. Pre-built best practice pipelines and the third party software tools supported by Omics Pipe. Users can easily create custom pipelines from the existing modules and they can create new modules supporting additional third party software tools
DiscussionOmics Pipe is an automated and reproducible community-based framework that can be used to efficiently analyze newly generated data, to reanalyze publically available data, and to serve as a framework for community-curated NGS analysis pipelines. It currently supports several best practice pipelines for RNA-seq, WES, WGS and ChIP-seq. This list of pipelines will continue to be updated, and we invite the broader community to participate in the development of Omics Pipe through our open source code repository. Pull requests for new components and new pipelines will be promptly reviewed. Future development of Omics Pipe will include hosting community-curated pipelines and modules. In addition, the built-in version control system allows for the reproducibility of analyses performed within the Omics Pipe framework, which is important as new versions of software tools and annotations are released. It can be easily extended as new tools become available, and it can be implemented on a local machine, a computer cluster or the cloud. The goal of Omics Pipe is to democratize NGS analysis by dramatically increasing the accessibility and reproducibility of best practice computational pipelines, which will enable researchers to generate biologically meaningful and interpretable results.