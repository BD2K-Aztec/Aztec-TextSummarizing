Visualizing read alignments is the most effective way to validate candidate structural variants (SVs) with existing data. We present svviz, a sequencing read visualizer for SVs that sorts and displays only reads relevant to a candidate SV. svviz works by searching input bam(s) for potentially relevant reads, realigning them against the inferred sequence of the putative variant allele as well as the reference allele and identifying reads that match one allele better than the other. Separate views of the two alleles are then displayed in a scrollable web browser view, enabling a more intuitive visualization of each allele, compared with the single reference genome-based view common to most current read browsers. The browser view facilitates examining the evidence for or against a putative variant, estimating zygosity, visualizing affected genomic annotations and manual refinement of breakpoints. svviz supports data from most modern sequencing platforms. Availability and implementation: svviz is implemented in python and freely available from http:// svviz.github.io/.
IntroductionThe human eye has an unparalleled ability to identify patterns from visual representations of data. Although the identification of mutations from high-throughput sequencing has been largely automated, visual inspection of putative variants using tools such as the integrative genomics viewer (IGV;) remains an important step in ensuring the quality and relevance of these variant calls. However, existing read visualizing tools such as IGV are largely constrained by a reference-genome-centric display model. Hence, point mutations can be represented easily as mismatched bases within sequencing data but more complex structural variants (SVs) including insertions, deletions, translocations and inversions are more difficult to parse visually against the linear reference genome sequence. Newer tools are able to represent short indels within sequencing data but do not help in representing larger SVs (). Support for SVs can be displayed within IGV by highlighting reads with certain characteristics, including read-pairs mapping to distant regions of the genome or in unexpected orientations, or truncated alignments. However, it is difficult to identify from these highlighted, discordantly mapping reads whether they all agree with a putative variant, and if so, which variant. Furthermore, IGV relies on the quality and completeness of the alignments provided in input BAM files, which are produced en masse against a huge reference genome and hence may not optimally represent read support for a given variant. Finally, most existing viewers (a notable exception being TargetSeqView;) show all read data in the vicinity of a putative SV, making it difficult to discriminate reads supporting the SV, reads supporting the reference allele and reads that are not relevant to an SV. To overcome these limitations, we present svviz, a read visualizer for SVs that sorts and displays only reads relevant to thePublished by Oxford University Press 2015. This work is written by US Government employees and is in the public domain in the US. current SV. As with IGV, svviz only visualizes variants and does not identify them. svviz runs locally on a standard OS X or Linux desktop machine and requires as input read data, a reference genome and SVs. The flexible approach employed by svviz means it can display arbitrary SV types such as translocations, deletions and insertions, inversions and mobile-element insertions. Visualizations are rendered in scalable vector graphics (SVG), an open web standard graphics format, and shown in a locally hosted interactive web browser viewer or exported in publication-ready form. svviz supports read data in BAM format from any sequencing platform, including short-read [Illumina (] single-and paired-end as well as mate-pair or longer read [Pacific Biosciences (), Oxford Nanopore or Illumina's synthetic long-reads] sequencing technologies. In batch mode, multiple SVs can be provided as input in the standard variant call format (VCF), producing summary statistics and PDF or SVG visualizations for hundreds or thousands of SVs with a single command. Annotations such as gene models or repeats can be shown relative to each allele.