Motivation: The concept of Minimal Cut Sets (MCSs) is used in metabolic network modeling to describe minimal groups of reactions or genes whose simultaneous deletion eliminates the capability of the network to perform a specific task. Previous work showed that MCSs where closely related to Elementary Flux Modes (EFMs) in a particular dual problem, opening up the possibility to use the tools developed for computing EFMs to compute MCSs. Until recently, however, there existed no method to compute an EFM with some specific characteristic, meaning that, in the case of MCSs, the only strategy to obtain them was to enumerate them using, for example, the standard K-shortest EFMs algorithm. Results: In this work, we adapt the recently developed theory to compute EFMs satisfying several constraints to the calculation of MCSs involving a specific reaction knockout. Importantly, we emphasize that not all the EFMs in the dual problem correspond to real MCSs, and propose a new formulation capable of correctly identifying the MCS wanted. Furthermore, this formulation brings interesting insights about the relationship between the primal and the dual problem of the MCS computation. Availability and implementation: A Matlab-Cplex implementation of the proposed algorithm is available as a supplementary material.
IntroductionThe concept of Minimal Cut Sets was introduced in Klamt andand refined in. MCSs were defined as a minimal set of reactions whose removal would render the functioning of a given objective reaction impossible. Their relationship with Elementary Flux Modes and the dualization of the main problem was mentioned in Klamt (2006) and formally exploited in. With this theoretical breakthrough, it became possible to calculate MCSs using algorithms designed to calculate EFMs. For example, the K-shortest EFM enumeration algorithm () was used to enumerate MCSs in von Kamp and Klamt (2014). Efficient calculation of EFMs has been an active area of research in the last years (;). Most of the algorithms have focused the attention on calculating as many EFMs as possible. However, one may only be interested in some EFMs that fulfill some constraints. While, in theory, a valid approach would be to calculate all the EFMs and then filter them according to the desired criteria, in practice it is currently impossible in large networks, as the number of EFMs grows exponentially with network size. It is this question that was addressed in a recent paper by, where a Mixed Integer Linear Programming (MILP) formulation was introduced to directly calculate EFMs satisfying a desired set of constraints. For example, an EFM containing several reactions of interest can be now directly calculated.For the metabolic modeling community, it will be very valuable to directly calculate MCSs of certain characteristics. For instance, a MCS involving a specific reaction knock-out can be used to determine if it is possible to couple growth with the synthesis of a specific product (). In fact, strain design for the optimization of chemical production, such as biofuels (), is one of the main applications of MCSs. It is not necessary to solve a MCS problem to know if the production of a chemical is coupled to growth but, in case it is not, a MCS suggests the modifications necessary to make the coupling a reality. Another possible application of MCSs in the field of human health involves finding a complementary target to an already druggable reaction. Here, MCSs would be viewed as synthetic lethals for treating cancer or other diseases (). In this work, we adapt the formulation in Pey and Planes (2014) to achieve this goal. In the process, we stress that not all the EFMs in the dual problem correspond to correct MCSs of the original network, which implies that not all the algorithms designed for the calculation of EFMs can be directly applied to the calculation of MCSs without careful consideration. The modifications made to the algorithm in Pey and Planes (2014) are mathematically justified and bring interesting insights between the primal and the dual problem of the MCS computation.