CGHnormaliter is a package for normalization of array comparative genomic hybridization (aCGH) data. It uses an iterative procedure that effectively eliminates the influence of imbalanced copy numbers. This leads to a more reliable assessment of copy number alterations (CNAs). CGHnormaliter is integrated in the Bioconductor environment allowing a smooth link to visualization tools and further data analysis.
INTRODUCTIONArray comparative genomic hybridization (aCGH) is a popular experimental technique for detection of copy number alterations (CNAs) at high resolution. Its principal application areas are cancer research and clinical genetics. Recently, in Britain the first baby was born with the help of aCGH to screen eggs for a normal number of chromosomes, after the mother had undergone 13 failed attempts at IVF and three miscarriages (BBC News, 2009, http://news.bbc.co.uk/2/hi/health/8232146.stm). Since resolutions of (oligonucleotide) aCGH chips increase constantly and already reach up to 1 M probes, experiments yield massive amounts of data. Normalization is an important first step in the analysis of these data and aims at minimizing the effect of the experimental bias (e.g. dye bias) in the measurements. Usually standard methods originating from the gene expression data area, such as global-median and LOWESS () normalization, are employed for this purpose. However, ashave convincingly shown, application of these standard techniques to aCGH data with many CNAs lead to an improper centralization and hence to inaccurate downstream analyses. In the recent past, a few aCGH normalization methods for twodye aCGH data have been designed that deal with this issue. Their common approach is filtering of CNAs from the data to calculate a more appropriate median value or LOWESS regression curve for the whole dataset. As a result, after normalization, the log 2 intensity ratios of the non-CNAs (normals) will generally be closer to zero and hence better reflect the biological reality. S-Lowess
DESCRIPTIONThe main function of the package is CGHnormaliter, which performs the actual normalization of an aCGH dataset. Below, we briefly describe its use and that of additional functions. Comprehensive instructions are available in the vignette and manual pages accompanying the package. Input: the required input is either a data.frame or the file name of a tab-separated text file. The first four columns shouldbars. Segments are designated gain or loss if their probabilities exceed 0.5. G-banding and FISH analyses revealed gains in eight chromosomes] which are largely confirmed using CGHnormaliter. describe the clone and its position on the genome: (i) clone ID, (ii) chromosome number, (iii) start position and (iv) end position. The next columns hold the actual data. For each sample in the experiment, there must be two adjacent columns with the reference and test intensities, respectively. Three additional parameters are available to control the normalization: nchrom (default: 24) sets the number of chromosomes to be normalized, while max_iterations (default: 5) sets the maximum number of iterations and stop_threshold (default: 0.01) sets the threshold value for the mean difference between the LOWESS regression curves from two consecutive iterations. The iteration is terminated if this difference is below this value for all samples. Output: the output of CGHnormaliter is a cghCall container. Its fields can be accessed via several functions. The normalized, segmented and called data can be retrieved using the respective functions copynumber, segmented and calls. The normalized data can be plotted using the plot function (Section 3). Finally, the package provides the function CGHnormaliter.write.table to save the normalized data into a tab-delimited plain text file.
DISCUSSIONWe have developed a Bioconductor package CGHnormaliter to accurately normalize aCGH data. The algorithm effectively eliminates the 'overnormalizing' effect of CNAs as well as largescale copy number variations (LCVs) by temporarily excluding them. Additionally, results are enhanced by iterative refinement and by employing a state-of-the-art calling method to identify these CNAs. The calling results are provided to the user as a bonus. CGHnormaliter can easily be combined with other Bioconductor or R packages to form a workflow. Moreover, the standard format of the results allows for straightforward downstream analysis of the normalized data.