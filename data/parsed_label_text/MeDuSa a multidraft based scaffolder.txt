Motivation: Completing the genome sequence of an organism is an important task in comparative, functional and structural genomics. However, this remains a challenging issue from both a computational and an experimental viewpoint. Genome scaffolding (i.e. the process of ordering and orientating contigs) of de novo assemblies usually represents the first step in most genome finishing pipelines. Results: In this article we present MEDUSA (Multi-Draft based Scaffolder), an algorithm for genome scaffolding. MEDUSA exploits information obtained from a set of (draft or closed) genomes from related organisms to determine the correct order and orientation of the contigs. MEDUSA formalizes the scaffolding problem by means of a combinatorial optimization formulation on graphs and implements an efficient constant factor approximation algorithm to solve it. In contrast to currently used scaffolders, it does not require either prior knowledge on the microrganisms dataset under analysis (e.g. their phylogenetic relationships) or the availability of paired end read libraries. This makes usability and running time two additional important features of our method. Moreover, benchmarks and tests on real bacterial datasets showed that MEDUSA is highly accurate and, in most cases, outperforms traditional scaffolders. The possibility to use MEDUSA on eukaryotic data-sets has also been evaluated, leading to interesting results. Availability and implementation: MEDUSA web server:
IntroductionThe de novo assembly of short-read sequencing data usually leads to a fragmented set of genomic sequences (contigs). Ordering and orientating such contigs (scaffolding) represents the first, non-trivial step towards genome finishing and usually requires extensive processing and manual editing of large blocks of sequence (). The preferred approach to genome scaffolding is currently based on assembling the sequenced reads into contigs and then using paired-end information to join them into scaffolds. Most of the software based on such approach have several preparatory steps in which read and contig libraries are first converted to a specific format, then mapped against each other by means of an external aligner [e.g. BWA, () or BOWTIE, (and finally used to possibly join contigs together. At the end of this pipeline, a scaffolding graph is usually constructed and a plethora of different methods can be used to analyse the graph and produce the resulting scaffold structure. Currently available methods/software include SOPRA (), SCARPA (), MIP (), Opera (), GRASS () and SSPACE (). A recent survey () analyses and benchmarks most of these recent and sophisticated scaffolding software. The authors showed that, in general, they are not satisfying either in terms of usability or in terms of the quality of the solution, leading to the conclusion that there is still scope for improvements in this area. An alternative approach for scaffolding genomes relies on the use of a complete (closed) reference genome to guide the ordering and the orientating of the contigs. Many available methods exist for mapping (and then scaffolding) the generated draft contigs (). This approach is also used in some specific contexts, such as for ancient DNA fragments reconstruction (), where read information is not available or reliable. These software differ in terms of their overall strategy and implementation but, in general, (i) they allow for only a single reference genome (); (ii) when multiple genomes are allowed, generally these have to be closed and (iii) a reference phylogeny accounting for the evolutionary relationships among the selected taxa is to be provided to guide a multi-reference genomesbased scaffolding (). None of the aforementioned approaches is capable of ignoring all of these constraints that, taken together, represent important practical limitations. Indeed, with the exception of model organisms, reliable closed reference genomes are not always available. Moreover, especially in the case of bacteria, genomic rearrangements among closely related organisms may introduce important structural differences, hampering the scaffolding procedure based on a single genome as reference. Finally, the requirement of a reliable phylogenetic reconstruction can pose a significant challenge, since it is not always straightforward for some bacterial taxa for which the large genetic variability in gene content inside a same species can lead to different phylogenies depending on which molecular marker and/or approach is used. To overcome the difficulties that characterize currently available methods, we developed MEDUSA (Multi-Draft based Scaffolder), an algorithm for scaffolding draft genomes by ordering and orientating a set of de novo obtained contigs and thus speeding up genome finishing. Unlike most of the other software, MEDUSA: (i) formalizes the scaffolding problem by means of a combinatorial optimization formulation on graphs and implements an efficient constant factor approximation algorithm to solve it; (ii) allows for multiple reference genomes to be used during scaffolding; (iii) does not require prior knowledge on the evolutionary relationships (i.e. a phylogenetic tree) among the reference set of organisms and (iv) can handle both draft and complete reference genomes. This latter point is of great importance in practice since, in current public databases, the availability of draft genomes greatly exceeds that of completely sequenced ones (). Moreover, since retrieving the additional information needed by the aforementioned scaffolders can be a challenging task, an algorithm that does not rely on such prior knowledge is of great interest and allows the inclusion of a larger set of genomes for the scaffolding process. The strategy of MEDUSA is based on the intuition that a set of genomes related to the target one can be used for assigning a relative position to each contig, and that this kind of information is easily available in practice. Specifically, those contigs mapping on adjacent regions in these other genomes are considered to be neighbours in the resulting scaffold. MEDUSA formalizes such scaffolding problem as a path cover problem in a graph and solves it with ad hoc optimization techniques. The underlying algorithm has been implemented both in the form of a command line software and a web server. Testing MEDUSA on bacterial and eukaryotic datasets revealed that our software performs very well in comparison to others currently available and answers some of the implicit requests pointed out byin their review, i.e. usability and accuracy of the obtained results.