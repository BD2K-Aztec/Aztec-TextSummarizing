Modern biotechnical research is becoming increasingly reliant on computational structural modeling programs to develop novel solutions to scientific questions. Rosetta is one such protein modeling suite that has already demonstrated wide applicability to a number of diverse research projects. Unfortunately, Rosetta is largely a command-line-driven software package which restricts its use among non-computational researchers. Some graphical interfaces for Rosetta exist, but typically are not as sophisticated as commercial software. Here, we present InteractiveROSETTA, a graphical interface for the PyRosetta framework that presents easy-to-use controls for several of the most widely used Rosetta protocols alongside a sophisticated selection system utilizing PyMOL as a visualizer. InteractiveROSETTA is also capable of interacting with remote Rosetta servers, facilitating sophisticated protocols that are not accessible in PyRosetta or which require greater computational resources. Availability and implementation: InteractiveROSETTA is freely available at https://github.com/ schenc3/InteractiveROSETTA/releases and relies upon a separate download of PyRosetta which is available at http://www.pyrosetta.org after obtaining a license (free for academic use).
IntroductionComputational molecular modeling has exhibited significant advances over the past several years, leading to its more widespread use in academic and commercial research for novel structural engineering applications. One significant software package is the Rosetta protein modeling suite (), which provides access to a wide array of structural modeling tools which have been successfully used for protein engineering, including protein design (), structure prediction (), loop modeling () and protein docking (), among other tools. Unfortunately, the main Rosetta software package has a command-line interface, intended for use on Unix operating systems, which limits its usability mainly to researchers with extensive C and Unix operating system experience. One significant improvement in Rosetta accessibility was the development of the PyRosetta package (), which provides Python bindings to several of the main Rosetta protocols and permits the user to design their own customized protocols using these bindings in Python scripts. Later, visualization capabilities were added to PyRosetta by synchronizing Rosetta " pose " structures with the PyMOL Molecular Visualization System (www.pymol.org) via the so-called " PyMOL movers " () However, a central graphical interface that provides access to PyRosetta for researchers who are uncomfortable with Python scripting is still a major concern. Two notable graphical interfaces exist for PyRosetta: FoldIT and the PyRosetta Toolkit. FoldIT provides an easy-to-use visualization and selection system, but there only exist a couple of basic Rosetta protocols such as minimization and basic protein design (). The PyRosetta Toolkit provides a graphical interface designed with Python's standard Tkinter GUI library (Adolf), but a sophisticated visualization system is still missing. Recently,RosettaDiagrams (www.rosettadiagrams.org) provides a userfriendly interface for RosettaScripts (). Rosie (Rosetta Online Server that Includes Everyone) provides access to computational resources for big Rosetta jobs (). We have developed a novel Rosetta GUI called 'InteractiveROSETTA'. InteractiveROSETTA provides several userfriendly controls for interacting with many of the common PyRosetta protocols, including superimposition, energy minimization, fixed backbone protein design, kinematic closure (KIC) loop modeling, proteinprotein docking, point mutations and parameterization tools for unrecognized PDB types. InteractiveROSETTA does not require a familiarity with the structure and organization of Rosetta and provides easy access to its structural modeling applications.