Counting all the k-mers (substrings of length k) in DNA/RNA sequencing reads is the preliminary step of many bioinformatics applications. However, state of the art k-mer counting methods require that a large data structure resides in memory. Such structure typically grows with the number of distinct k-mers to count. We present a new streaming algorithm for k-mer counting, called DSK (disk streaming of k-mers), which only requires a fixed user-defined amount of memory and disk space. This approach realizes a memory, time and disk trade-off. The multi-set of all k-mers present in the reads is partitioned, and partitions are saved to disk. Then, each partition is separately loaded in memory in a temporary hash table. The k-mer counts are returned by traversing each hash table. Low-abundance k-mers are optionally filtered. DSK is the first approach that is able to count all the 27-mers of a human genome dataset using only 4.0 GB of memory and moderate disk space (160 GB), in 17.9 h. DSK can replace a popular k-mer counting software (Jellyfish) on small-memory servers. Availability: http://minia.
INTRODUCTIONDetermining the abundance of each distinct k-mer in a set of sequencing reads is a conceptually simple yet fundamental task. It is used in many bioinformatics applications related to sequencing, e.g. genome and transcriptome assembly, variants detection and read error correction. For de novo assembly, one is often interested in counting k-mers to discard those with low abundance, which likely stem from sequencing errors. State of the art methods for k-mer counting rely on hash tables (Jellyfish; MarcaisMarcais and) and/or Bloom filters (BFCounter;). These structures need to reside in memory for random access. Sequencing errors induce erroneous k-mers, in a volume typically greater or comparable with that of correct k-mers. Hence, counting k-mers for a human dataset with either a single hash table or a Bloom filter is a task that requires tens of gigabytes of memory. In Section 2, we describe a fixed-memory and fixed-disk space streaming algorithm, DSK (disk streaming of k-mers), and its worst-case complexity is analysed in function of the desired memory and disk usage. In Section 3, DSK is used to count all the 27-mers of a whole-genome human dataset. The trade-off between memory and disk space is analysed on two smaller datasets. We conclude with a discussion of the advantages of DSK over related methods.