We describe BiopLib, a mature C programming library for manipulating protein structure , and BiopTools, a set of command-line tools which exploit BiopLib. The library also provides a small number of functions for handling protein sequence and general purpose programming and mathematics. BiopLib transparently handles PDBML (XML) format and standard PDB files. BiopTools provides facilities ranging from renumbering atoms and residues to calculation of solvent accessibility. Availability and implementation: BiopLib and BiopTools are implemented in standard ANSI C. The core of the BiopLib library is a reliable PDB parser that handles alternate occupancies and deals with compressed PDB files and PDBML files automatically.
IntroductionHandling PDB files is central to almost all research in structural bioinformatics and structural biology. Various reusable programming libraries have been developed for bioinformatics, but most libraries available for scripting languages focus on sequence. Both BioPerl (www.bioperl.org) and BioPython (www.biopython.org) provide modules for handling PDB structures which implement a PDB parser and data structure, but provide almost no routines for manipulating or analysing the data. A BioPython Google Summer of Code in 2010 added some more PDB handling code (biopython.org/wiki/GSOC2010_Joao), but this is not in the main distribution version. BioRuby (www.bioruby.org) provides a data structure for PDB data and a number of functions for finding records, but little for analysis. BioJava (www.biojava.org) has a structure module, which handles input and output of standard PDB and mmCIF files, structural alignment using CE and FATCAT algorithms and access to CATH and SCOP. A number of C libraries are available and well-maintained including Protein Library (PL, protlib.uchicago.edu, part of the Open Protein Simulator, a protein folding simulator), Victor (), OpenStructure () and BALL (). The latter two also provide Python bindings. While C is favoured by some, C remains one of the most popular languages for computationally demanding tasks. Many major projectsboth within computational biology (e.g. EMBOSS (