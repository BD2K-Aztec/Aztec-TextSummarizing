Motivation: Although peak finding in next-generation sequencing (NGS) datasets has been addressed extensively, there is no consensus on how to analyze and process biological replicates. Furthermore, most peak finders do not focus on accurate determination of enrichment site widths and are not widely applicable to different types of datasets. Results: We developed JAMM (Joint Analysis of NGS replicates via Mixture Model clustering): a peak finder that can integrate information from biological replicates, determine enrichment site widths accurately and resolve neighboring narrow peaks. JAMM is a universal peak finder that is applicable to different types of datasets. We show that JAMM is among the best performing peak finders in terms of site detection accuracy and in terms of accurate determination of enrichment sites widths. In addition, JAMMs replicate integration improves peak spatial resolution, sorting and peak finding accuracy. Availability and implementation: JAMM is available for free and can run on Linux machines through the command line
INTRODUCTIONA common task in Genomics research is detecting enriched sites after alignment of next-generation sequencing (NGS) reads, which involves separating the genome into regions of high enrichment (i.e. peaks or clusters or binding sites) and regions of low enrichment (). Most peak and cluster finding programs are developed with a specific experimental protocol or dataset type in mind (). Therefore, it is usually difficult to apply the same analysis pipeline uniformly across all datasets in a given project. Recently, there were attempts to develop universal peak finders by defining the problem as that of classical signal detection (). The main advantage of this approach is that it allows for uniform data analysis via theoretically proven optimal signal detection. However, it does not take into account that enrichment sites are often not expected to have the same shape or signal properties, even if in the same dataset. For example, DNase-I hypersensitive regions are expected to have different widths and signal-to-noise ratios (SNR;). Therefore, there is a need for an approach that would not only focus on optimal detection of enrichment sites but would also be able to adapt to enrichment sites with different signal properties and to define their boundaries accurately (). Furthermore, while others focus on integration of multiple datasets to define co-occurrence or differential enrichment, there is no consensus on biological replicates integration to find accurate consensus peaks. One common approach is to determine enriched sites on each replicate separately, and then combine the results via union or intersection (). Another common approach is to pool aligned reads from all replicates available and then detect enriched sites on the pooled alignments [seefor an example]. Taking the intersect or union of separately detected sites mandates rescoring the peaks and leads to inaccurate enriched sites' widths. Pooling alignments before site detection obscures the differential spatial and intensity information in the replicates. As biological replicate experiments are not expected to be exactly reproducible, there is a need to develop a method for replicate integration that takes advantage of the differential information in the individual replicates to find accurate consensus peaks. In this article, we introduce JAMM (Joint Analysis of NGS replicates via Mixture Model clustering): a universal peak finder that can integrate information from multiple replicates to find consensus peaks, determine accurate peak widths and resolve neighboring narrow peaks. We demonstrate JAMM using ChIP-Seq (), including transcription factor ChIP-Seq, punctate histone modification ChIP-Seq and broad histone modification ChIP-Seq as well as DNase-Seq (). We compare several programs that focus on different aspects of the peak finding problem (). MACS () models read counts using a local Poisson distribution, PeakRanger () focuses on detecting neighboring narrow peaks at high resolution, PeakZilla () is designed for uniform punctate transcription factor binding sites, BCP () develops explicit formulas to model read counts, CCAT () detects broad enrichment patterns with low SNR and DFilter () is a universal peak finder based on optimal signal detection. We demonstrate that JAMM is widely applicable to different types of datasets, can define accurate peak boundaries and that JAMM's replicate integration improves peak finding resolution and accuracy. *To whom correspondence should be addressed.
DISCUSSIONA desirable property in universal peak finders is detecting, and correctly determining the widths of, enrichment sites with different signal properties. JAMM fits a Gaussian mixture model for every local enriched window separately and only fixes the structure of the covariance matrix (see Section 2 and Supplementary Text). Therefore, JAMM can accurately determine widths of enrichment sites that have different signal properties, even if in the same dataset. Some peak finders start with learning an expected peak shape (), making it more difficult to detect enrichment sites with varying widths or to assign their boundaries accurately. Other peak finders adapt specialized subroutines for refining peak widths after peak finding is complete (). In some cases, this approach may be able to assign accurate peak boundaries. But when the original peak represents several closely spaced sites, this approach may result in choosing one site and missing the others (see Supplementaryinfor an example). We showed that JAMM's local clustering also avoids this caveat and can correctly resolve neighboring punctate sites, similar to programs specifically designed with this task in mind like PeakRanger (). JAMM is a universal peak finder that can analyze different types of datasets with little change, if any, to the underlying method. This demonstrates that finding enriched sites in readdensitybased NGS datasets is essentially the same task regardless of the sites' signal properties. Therefore, we propose that more attention could be directed toward developing universal peak finding solutions, refining preprocessing of read counts to correct for different biases () and toward developing solutions for biological replicates integration (). Pooling reads from biological replicates before peak finding is part of the ENCODE consortium recommended guidelines (). However, when peaks are called on pooled replicates, the differential intensities and differential spatial coverage of the replicates are obscured. JAMM addresses replicate integration by looking at biological replicates as not being exactly reproducible and attempts to model their variability using information about their covariance in local enriched windows. Using various accuracy benchmarks, we demonstrated that this approach results in better peak finding accuracy over read pooling. For peak scoring on replicates, JAMM uses the geometric average of the replicates peak signal. We demonstrated that this approach improves peak sorting. Additionally, we also show that peak finding on the geometric mean of separately normalized replicate signal profiles can improve peak finding accuracy over read pooling similarly to JAMM-I (see JAMMG in Supplementary Text Section 1.2 and Supplementary). Geometric averaging of normalized signal profiles can potentially be implemented as a preprocessing step irrespective of the specific peak finding method. Therefore, although it may not be an optimal solution with increasing replicates variability, it is a plausible approach that other peak finders could easily implement for biological replicates analysis, without requiring a multivariate clustering framework. Accuracy benchmarks are independent of read count densities, as opposed to peaks per cluster () and peak width accuracy (). However, motif content benchmarks do not represent a definite gold standard because of our incomplete understanding of proteinDNA interactions and potential biases in the benchmarking methods (). We attempted to remedy this by using two different motifscanning algorithms and by including a manually curated set of peak calls as an additional benchmark (). But manual curation may also be biased because the manually curated set represents only a small fraction of the peaks present in a dataset (345 peaks for MAX, 235 for NRSF and 198 for SRF), and because some peak finders (like PeakZilla) use peak detection methods similar to curation criteria (). Many peak finders ignore being able to report a larger number of peaks and/or ignore providing appropriate peak scores (), both required criteria for assessing replicate reproducibility via IDR analysis (). Appropriate peak scores would have few or no ties and represent the confidence in the peak accurately based on its read density and how it compares with background or biological control. JAMM can typically determine a large number of peaks, and it also provides robust peak scores with few score ties if any. This, in addition to its accurate peak width determination, makes JAMM potentially more applicable for different types of downstream analyses that rely on ranked peak lists. Although a multivariate clustering framework can potentially be used for differential peak finding, JAMM can not find differential peaks across multiple conditions in its current implementation. Also, JAMM does not take into account mappability, GC content and Copy Number Variations (CNVs). CNVs are especially relevant for cancer cell lines (), while GC content bias is a known problem in high-throughput sequencing libraries, probably due to PCR amplification (). We could not detect CNV bias in JAMM's peak calls in regions of loss when compared with a peak finder that corrects for CNVs (), but we noticed a possible increase in the proportion of peaks called by JAMM in regions of gain (see Supplementary). Explicit implementation of GC content bias and CNV correction could improve peak finding accuracy (), and we plan to incorporate appropriate correction subroutines in the near future. Finally, JAMM is typically slower than other peak finders with less complicated models, taking $67 h on average to analyze a typical human ENCODE ChIP-Seq dataset when run using a single processor.