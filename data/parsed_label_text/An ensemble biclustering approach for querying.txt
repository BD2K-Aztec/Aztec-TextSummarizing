Motivation: Query-based biclustering techniques allow interrogating a gene expression compendium with a given gene or gene list. They do so by searching for genes in the compendium that have a profile close to the average expression profile of the genes in this query-list. As it can often not be guaranteed that the genes in a long query-list will all be mutually coexpressed, it is advisable to use each gene separately as a query. This approach, however, leaves the user with a tedious post-processing of partially redundant biclustering results. The fact that for each query-gene multiple parameter settings need to be tested in order to detect the most optimal bicluster size adds to the redundancy problem. Results: To aid with this post-processing, we developed an ensemble approach to be used in combination with query-based biclustering. The method relies on a specifically designed consensus matrix in which the biclustering outcomes for multiple query-genes and for different possible parameter settings are merged in a statistically robust way. Clustering of this matrix results in distinct, non-redundant consensus biclusters that maximally reflect the information contained within the original query-based biclustering results. The usefulness of the developed approach is illustrated on a biological case study in Escherichia coli. Availability and implementation: Compiled Matlab code is available from
INTRODUCTIONWith the large body of publicly available gene expression data, compendia are being compiled that assess gene expression in a plethora of conditions. Comparing one's own experimental data with these large scale gene expression compendia allows own findings to be viewed in a more global cellular context, and inconsistencies between public data and own experiments to be pinpointed. Query-based search approaches such as * To whom correspondence should be addressed. prioritization-based methods () and query-based biclustering techniques () have been developed to query a gene expression compendium for genes that are coexpressed with a given gene or gene list (the query). These approaches generally combine gene with condition selection to identify genes that are coexpressed with the query in a subset of the compendium conditions. Query-based methods usually work well when the query-list contains one gene only or a set of genes that are mutually tightly coexpressed, since they query the expression compendium with the average expression profile of the query-set. However, when querylists are compiled from the output of experimental assays this list will often contain genes with diverse expression profiles. For instance, a query-list derived from a ChIP-chip experiment might partition into different coexpressed groups depending on which other trancription factors (TFs) the ChIP-assayed TF is interacting with. Hence, when faced with a query-set that is heterogeneous in its expression, the query-profile will be deteriorated, and query-based methods will fail to output meaningful clustering results. Running query-based methods on each gene from the query-list separately circumvents this problem, but will inevitably result in at least partially redundant bicluster solutions as mutually coexpressed genes within the query will output similar biclusters. A second issue when using query-based biclustering relates to the definition of a threshold on the minimal level by which the bicluster genes should be coexpressed with the query-gene. Indeed, it is often not a priori known how tightly a set of genes should be coexpressed to be biologically meaningful. In addition, this level of coexpression might depend on the biological process the querygenes are involved in (some processes are more tightly coexpressed than others). To allow for a maximum flexibility, some query-based biclustering methods offer the possibility to use a resolution sweep in which a whole range of possible threshold values is scanned. The most relevant solutions can then be selected a posteriori, either based on the intuition of the user or by using other ad hoc defined selection criteria (such as functional over-representation). The combined effect of having to run query-based biclustering on each of the genes from the query-list separately with the fact that for each of these single runs also an optional parameter sweep can be performed will result in a whole set of highly redundant biclustering results. In this work, we developed an ensemble approach to merge such multiple query-based biclustering results into a few non-redundantStep 1: genes from an input-list are each taken separately as a query for QDB (). For each query-gene QDB results in a gene score and condition score matrix (G and C refer respectively to the gene and condition dimension of the matrices), containing for each value of the resolution parameter (indicated with Res) a score that reflects to what extent the respective gene or condition belongs to the bicluster. Shades of grey are representative for the magnitude of the gene scores and condition scores. Step 2: constructing the consensus matrix proceeds in two steps in which first for each query a gene-specific consensus matrix is constructed from its gene score matrix. This gene-specific consensus matrix summarizes for each query-gene the biclustering-solution obtained at different values of the resolution parameter. In the second step, the gene-specific consensus matrices for all genes in the query-list are merged into a single consensus matrix, representing the frequency of co-occurrence (again indicated by shades of grey) of two genes in the different biclustering solutions that contain at least one of the genes of the pair. Step 3: next, by applying graph clustering, the consensus matrix is partitioned into consensus clusters. Step 4: eventually, consensus biclusters can be obtained by retrieving for each consensus cluster the corresponding conditions from the original QDB-solutions. consensus biclusters. The usefulness of the developed approach is illustrated on a biological case study.
DISCUSSIONIn this article, we developed an ensemble approach to be used in combination with query-based biclustering methods for the