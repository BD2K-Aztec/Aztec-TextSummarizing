Motivation: During the past years, next-generation sequencing has become a key technology for many applications in the biomedical sciences. Throughput continues to increase and new protocols provide longer reads than currently available. In almost all applications, read mapping is a first step. Hence, it is crucial to have algorithms and implementations that perform fast, with high sensitivity, and are able to deal with long reads and a large absolute number of insertions and deletions. Results: RazerS is a read mapping program with adjustable sensitivity based on counting q-grams. In this work, we propose the successor RazerS 3, which now supports shared-memory parallelism, an additional seed-based filter with adjustable sensitivity, a much faster, banded version of the Myers bit-vector algorithm for verification, memory-saving measures and support for the SAM output format. This leads to a much improved performance for mapping reads, in particular, long reads with many errors. We extensively compare RazerS 3 with other popular read mappers and show that its results are often superior to them in terms of sensitivity while exhibiting practical and often competitive run times. In addition, RazerS 3 works without a pre-computed index. Availability and Implementation: Source code and binaries are freely available for download at http://www.seqan.de/projects/razers. RazerS 3 is implemented in Cþþ and OpenMP under a GPL license using the SeqAn library and supports Linux, Mac OS X and Windows.
INTRODUCTIONNext-generation sequencing allows researches to produce billions of base pairs (bp) within days in the form of reads of length 100 bp and more. It has become an invaluable technology for a multitude of applications, e.g. the detection of single-nucleotide polymorphisms (SNPs) and large structural genome variations, targeted or de novo genome or transcriptome assembly, isoform prediction and quantification, identification of transcription factor binding sites or methylation patterns. In many of these applications, mapping sequenced reads to their potential genomic origin is the first fundamental step for subsequent analyses. A variety of tools have been designed specifically for the purpose of mapping short reads. In a recent publication,give a survey and categorize the existing tools into approaches using a q-gram index for a seed-and-extend strategy (e.g.) or recursively descending a suffix tree () or prefix tree () of the reference genome. Recursive approaches are usually designed for the fast search of one or a few locations where reads map with low error rates. These search algorithms are mostly based on heuristics and optimized for speed instead of enumerating all possible locations. Conversely, approaches based on the seed-and-extend strategy allow such an (often approximate) enumeration. The first class of approaches aims at directly finding the 'best' location for mapping a read (best-mappers), whereas the second class aims at enumerating a comprehensive set of locations (all-mappers). RazerS () is an all-mapper that uses q-gram counting for read mapping with controllable sensitivity. This means it can guarantee to find all locations a read maps to in a reference sequence. At the same time, it works with practicable performance. Since the original publication in 2009, sequencing technology has advanced to produce longer reads. The increasing length leads to a larger absolute number of errors to be considered, a problem that is aggravated by new technologies that have a higher error rate (e.g. PacBio). Older read mappers have difficulties mapping long reads with high number of errors with a high sensitivity. In this article, we address this problem and propose a new read mapper RazerS 3, which is able to map reads of arbitrary length with a large number of insertions and deletion (indel) errors. Our novel contributions are as follows: (1) The use of OpenMP to provide a shared-memory parallelization with dynamic load balancing. (2) In addition to the q-gram counting filter used in RazerS, we implemented a pigeonhole-based filter with controllable sensitivity, since it proved to be superior for low error rates. (3) An implementation of a banded version of Myers' bit-vector algorithm, which we use for the verification, similar to Hyyro( Hyyro(2003), which is up to four times faster than the previous, unbanded version. These algorithmic improvements lead to a running time that is an order of magnitude faster than RazerS while keeping the guarantee for full sensitivity. Various extensive benchmarks show higher sensitivity when compared with other approaches, especially best-mappers. Furthermore, the running time is superior to the considered all-mappers and competitive or superior to best-mappers on medium-sized genomes. On large genomes, the running time is still practical and only about three times slower than that of BWA while being more sensitive. RazerS 3 does not rely on a pre-computed index like the tree-based tools and is in this respect more flexible.
DISCUSSIONWe presented a read mapping program that is faster than (or at least competitive to) existing, popular tools while guaranteeing full sensitivity following a sensible and formal definition for both Hamming and edit distance. Furthermore, it allows the user to lower the sensitivity in a controlled fashion to further lower the running time. Third, RazerS 3 can deal with reads of arbitrary length and large error rates. We showed that RazerS 3 has a superior performance in the presence of sequence variations. Together with some other recent publications, our work shows that the use of the BWT together with more or less exhaustive backtracking strategies has its limitations if the number of absolute indel errors is large. In addition, the above strategies do not need a pre-computed index. The banded edit distance verification algorithm presented here should also be considered as a fast algorithmic ingredient for future read mappers. Finally, our tool is able to fully leverage the in-core parallelism of modern processors. RazerS 3 was implemented using SeqAn (Doring) and is publicly available at http://www.seqan.de/projects/razers.