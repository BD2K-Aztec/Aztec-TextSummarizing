Motivation: Currently, more than 40 sequence tandem repeat detectors are published, providing heterogeneous, partly complementary, partly conflicting results. Results: We present TRAL, a tandem repeat annotation library that allows running and parsing of various detection outputs, clustering of redundant or overlapping annotations, several statistical frameworks for filtering false positive annotations, and importantly a tandem repeat annotation and refinement module based on circular profile hidden Markov models (cpHMMs). Using TRAL, we evaluated the performance of a multi-step tandem repeat annotation workflow on 547 085 sequences in UniProtKB/Swiss-Prot. The researcher can use these results to predict run-times for specific datasets, and to choose annotation complexity accordingly. Availability and implementation: TRAL is an open-source Python 3 library and is available, together with documentation and tutorials via http://www.vital-it.ch/software/tral.
IntroductionTandem repeats (TRs) are sequence features, where motifs, or TR units, are found right next to each other, often as imperfect repetitions (). Currently, more than 40 TR detector (TRD) programs exist, each focusing on different TR types and using different methodologies. We have shown that currently available TRDs do not provide exhaustive detections, and combining TRs from several TRDs is essential for reliable TR annotation (). Therefore, a researcher interested in TRs needs to handle all of the following tasks: (i) Executing and parsing results of several TRDs, despite no commonly accepted file format; (ii) Validating TR predictions and clustering redundant or overlapping results; (iii) Filtering out false positive TR predictions in a robust statistical framework; (iv) Annotating known TRs homogenously across homologous sequences, and discerning variation among the TRs (). Each of these tasks is implemented in TRALan open source Python 3 TR annotation library. TRAL is highly modularized, such that a researcher can use the implemented methods or customize them by adding other TRDs, overlap criteria, statistical tests or model-based annotation methods. The software is designed to run efficiently and user-friendly on single machines as well as on large computing clusters. For a variety of workflows, scripts and tutorials are available online.