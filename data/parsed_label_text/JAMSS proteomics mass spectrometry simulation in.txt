Countless proteomics data processing algorithms have been proposed, yet few have been critically evaluated due to lack of labeled data (data with known identities and quantities). Although labeling techniques exist, they are limited in terms of confidence and accuracy. In silico simulators have recently been used to create complex data with known identities and quantities. We propose Java Mass Spectrometry Simulator (JAMSS): a fast, self-contained in silico simulator capable of generating simulated MS and LC-MS runs while providing meta information on the provenance of each generated signal. JAMSS improves upon previous in silico simulators in terms of its ease to install, minimal parameters, graphical user interface, multithreading capability, retention time shift model and reproducibility.
IntroductionProteomics studies require the prediction of the quantity and identity of proteins in sample. The accuracy of the determination relies wholly on the accuracy of the data processing pipeline modules that systematically extract and process the components of the sample output file (). Despite the criticality of data processing accuracy, few published algorithms have quantitative comparisons against other algorithms using labeled datadata where the correct protein quantity and identity are known (). Common strategies for labeling data are limited in terms of confidence and accuracy. For example, MS/MS identifications are biased towards the approximately 16% most intense signals, and have an approximately 50% false-positive rate (), leading to evaluative results that are not representative of the dataset, particularly among the more biologically significant but less-abundant peptides. Hand-labeled datasets exist (), but due to the complexity of labeling by hand usually consist of small segments of data within an intensity threshold. Using existing tools, hand labeling consists of many subjective decisions, and creating a set of replicates would take years. Construction of in silico datasets is an attractive alternative to labeling, as these datasets automatically include labels. In silico simulation consists of emulating the physiochemical processes involved in the mass spectrometry analysis of a sample in order to produce an mzML (or equivalent) output file similar to what would be generated in a real run but without any material or instrument time cost. Although more research is needed before an exact replicate of a real sample run can be simulated, the overall characteristics of the output data in terms of density, noise, signal shape, etc., are similar enough to be valuable as labeled data for LC-MS data processing algorithmic evaluation. LC-MS simulation is still in its infancy. LC-MSsim, an incorporated module of OpenMS, was the first simulator to produce fullfeatured MS simulated data (, and the ability to extract simulation parameters from existing mzML files using machine learning (). There remains much to be done in MS simulation. Existing simulators do not provide the molecular provenance of output signals necessary for generating ground truth data for quantitative MS data processing algorithm evaluation. They have involved installation processes, requiring installation of their parent libraries and a sometimes onerous degree of dependency management. They are also both command-line programs with very little documentation. Neither program is multithreaded. Both programs feature many parameters, some of which significantly alter the simulation outcome in unclear ways. Although Mspire-simulator produces run-to-run variation (unlike MSSimulator), it does not vary the RT of eluents across runs and cannot produce a clone of a previous run when fed the same input and parameters. Although Mspire-simulator's isotope trace generation features more realistic variance in m/z and intensity than MSSimulator, it is many times slower and has no bound on RAM requirements. Both programs seem limited in regards to PTMs: Mspire-simulator renders all PTMs as static (even variable ones) and MSSimulator seems to as well. MSSimulator produces the same isotope trace shape (scaled for intensity) for every peptide, meaning its utility for generating datasets for evaluating data processing algorithms is limited. This article describes the Java Mass Spectrometry Simulator (JAMSS), a novel simulator designed to address each of the abovementioned drawbacks of current simulation software.