Motivation: High-throughput biological research requires simultaneous visualization as well as analysis of genomic data, e.g. read alignments , variant calls and genomic annotations. Traditionally, such integrative analysis required desktop applications operating on locally stored data. Many current terabyte-size datasets generated by large public consortia projects, however, are already only feasibly stored at specialist genome analysis centers. As even small laboratories can afford very large datasets, local storage and analysis are becoming increasingly limiting, and it is likely that most such datasets will soon be stored remotely, e.g. in the cloud. These developments will require web-based tools that enable users to access, analyze and view vast remotely stored data with a level of sophistication and interactivity that approximates desktop applications. As rapidly dropping cost enables researchers to collect data intended to answer questions in very specialized contexts, developers must also provide software libraries that empower users to implement customized data analyses and data views for their particular application. Such specialized, yet lightweight, applications would empower scientists to better answer specific biological questions than possible with general-purpose genome brow-sers currently available. Results: Using recent advances in core web technologies (HTML5), we developed Scribl, a flexible genomic visualization library specifically targeting coordinate-based data such as genomic features, DNA sequence and genetic variants. Scribl simplifies the development of sophisticated web-based graphical tools that approach the dynamism and interactivity of desktop applications. Availability and implementation: Software is freely available online at
INTRODUCTIONIncreasingly, multi-faceted and complex high-throughput biological data require sophisticated analysis and visualization of genomic datasets that are typically very large (often in the many terabytes). Traditionally, because of these multi-fold requirements, sophisticated genomic analyses required desktop applications operating on locally stored datasets (). As genomic datasets have grown in size, it is less and less realistic to import large genomic datasets onto local storage, and especially smaller users without large IT infrastructure must rely on datasets stored remotely at specialized data analysis and archival centers, e.g. NCBI (http://www.ncbi.nlm.nih.gov), and large international consortium projects, e.g. the 1000 Genomes Project (http://www.1000Genomes.org). Although some desktop solutions such as the Integrative Genomics Viewer () offer access to remote data, new development increasingly centers on web applications to access such data. Prime examples of web tools accessing remote data are genome browser applications (). Owing to traditional limitations of web technologies, these applications use server-side image generation, requiring the server to render and transmit each new image. Interactivity is thus severely limited by the speed of the network, and the instant feedback seen in desktop applications is never achieved. Although genome browsers provide users with excellent facilities to add their own datasets, they offer very little flexibility to incorporate custom analyses or views. Simply put, the needs of many specialized applications are not met with currently available 'stock' genome browser programs. The recent release of updated core web technologies, including JavaScript, CSS and HTML, popularly referred to as HTML5, enables development of more sophisticated web applications. These new technologies support client-side image generation, where only data, rather than the image file, are transferred to the client. Indeed, several applications have already taken advantage of client-side graphics (). However, developing such applications from scratch is still a significant undertaking. Software libraries, e.g. BioPerl, BioJava and Biopython (), can simplify this development by reducing duplicative efforts and increasing accessibility to non-expert programmers. More relevantly, the iCanPlot library provides HTML5 image generation for visualizing statistical data. Our goal here was to develop a library specifically designed for customizable client-side visualization of coordinate-based genomic data in web applications. We are building on top of the HTML5 Canvas element, which has been used for other clientside graphic libraries (). Here we report Scribl, an HTML5 Canvas genomics graphic library, to enable bioinformaticians to write dynamic, interactive and powerful client-side *To whom correspondence should be addressed.  The Author 2012. Published by Oxford University Press. For Permissions, please email: journals.permissions@oup.com graphical web visualizations, and to merge the power of desktop applications with the inherently collaborative nature and accessibility of the web.