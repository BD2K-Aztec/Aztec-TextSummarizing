Bioinformatics, 32(7), 2016, 1048—1056

doi: 10.1093/bioinformatics/btv716

Advance Access Publication Date: 7 December 2015
Original Paper

 

 

Genetics and population analysis

Sampling ARG of multiple populations under
complex configurations of subdivision and
admixture

Anna Paola (Iarrieri,1 Filippo Utro2 and Laxmi Parida2'*

1Dipartimento Di lnformatica Sistemistica E Comunicazione, Universita Degli Studi Di Milano-Bicocca, Viale Sarca
336, Milano, Italy and 2Computational Genomics, IBM T. J. Watson Research, Yorktown Heights, NY 10598, USA

*To whom correspondence should be addressed.
Associate Editor: Alfonso Valencia

Received on 14August 2015; revised on 3 November 2015; accepted on 28 November 2015

Abstract

Motivation: Simulating complex evolution scenarios of multiple populations is an important task
for answering many basic questions relating to population genomics. Apart from the population
samples, the underlying Ancestral Recombinations Graph (ARG) is an additional important means
in hypothesis checking and reconstruction studies. Furthermore, complex simulations require a
plethora of interdependent parameters making even the scenario—specification highly non—trivial.
Results: We present an algorithm SimRA that simulates generic multiple population evolution
model with admixture. It is based on random graphs that improve dramatically in time and space
requirements of the classical algorithm of single populations.

Using the underlying random graphs model, we also derive closed forms of expected values of the
ARG characteristics i.e., height of the graph, number of recombinations, number of mutations and
population diversity in terms of its defining parameters. This is crucial in aiding the user to specify
meaningful parameters for the complex scenario simulations, not through trial—and—error based on
raw compute power but intelligent parameter estimation. To the best of our knowledge this is the
first time closed form expressions have been computed for the ARG properties. We show that the
expected values closely match the empirical values through simulations.

Finally, we demonstrate that SimRA produces the ARG in compact forms without compromising
any accuracy. We demonstrate the compactness and accuracy through extensive experiments.
Availability and implementation: SimRA (Simulation based on Random graph Algorithms)
source, executable, user manual and sample input—output sets are available for downloading at:
https://github.com/ComputationalGenomics/SimRA

Contact: parida@us.ibm.com

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 lntroductlon studies). In literature, most admixture models are based on rather

simplistic hypothesis of their possible inter—evolution history. One of
the bottlenecks has been the sheer size of the monolithic common his—

We address the task of modeling and simulating complex scenarios
of related multiple populations with subdivision and admixture.

91oz ‘Og JSanV 110 seleﬁuv soc] ‘BtHJOJtIBQ 30 AJtSJQAtuf] 112 ﬁle'smumofquixo"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

These scenarios can be used to study the effect on the genetic profiles
of extant populations as well as for testing complex hypotheses. The
aim of simulations is to not only capture the resulting populations
but also the relevant evolutionary history (for possible reconstruction

tory of multi—populations, each of realistic size. Under these condi—
tions simulators of even simple scenarios of just three populations
often do not terminate in reasonable time in spite of meaningful par—
ameter settings (sometimes up to 10—12 hours, for instance with

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1048

Sampling ARG of multiple populations with SimRA

1049

 

      
 

    
 
   
  
  
 

 

,A

a?
Y4.»
1 )2.
.29

 
 
 

 

AV.
{'4
m.
VII
1,"!
4/
9A

7
5

  
 
  
  
  
 
     
 
  
  
 

£02:
v0
0".

   

   
 
 
 

'.
‘4 >4  b1
-o~ -..-<-  o-
" two‘oao {do 05‘.

'4'.
to
VA
v4!

x2

,\
as;
22“}
A9191

 
  
   

 

.4.
“45 M

   

‘3
,\
A.
01"»

.7
:A\
o ‘.
YA

. 2%)
QMYA
m
A“
 39‘.
I 

'V'
,\
.A
9:
Q.
‘8:

Q

s
I

 
 

. A,
’9‘.
Y;

3)
!A
.A
W
‘3'


  
   
 

9
«r

\
A

:1

9X93

«WA
Q.

A.‘
\V
‘1’

V,»
5.9
Y!
’Y
93.1

AV
V
.3
V

   

v
.3

1
o

     
   

Q
\
y:
A},
‘12:
V

 

 

 

 

 

Fig. 1. (a) shows the complete genealogical (pedigree) graph of a Wright Fisher population of 8 at each generation. Every individual has exactly two parents.
(b) shows the substructure of (a) based on tracking some chromosomal segment from four extant samples, marked in dark purple. The bold edges mark the flow
of the genetic segments of interest to the four extant units. (0) shows the relevant part by removing the extraneous parts of the network of (b). Note that a forward
simulator (moving in time from past to present) may have to simulate the network in (a) or (b), whereas the network in (c) is adequate for a backward simulator
(moving in time from present to past). In fact a backward simulator may only construct the network in (d) where every node has either multiple descendants or
multiple ascendants (termed the ARG). For visual clarity, the time scale has been adjusted. (e) The possible flow of 3 non-mixing segments in the ARG is shown
in three distinct colors, green, red and blue (from left to right on the chromosomal segment). The dashed edges imply that these do not affect any of the four ex-

tant samples, due to a recombination node in their path

COSI (Schaffner et (11., 2005)). We observed a similar abort—and—re—
run requirement in our experiments even with the classical algorithm
(called Hudson in the paper).

We present a framework for modeling complex evolutionary
scenarios and an algorithm named SimRA that is both time and
space efficient enough to be practical. SimRA makes it possible to
run hundreds of experiments in very short time (in minutes) enabling
a very effective means of carrying out complex studies, such as in
Parida et al. (2015). We demonstrate that the algorithm does not
compromise the accuracy of the resulting simulations, all the while
being very compact in its description.

1.1 Background
ARG is a directed acyclic graph (DAG) that captures the common
evolutionary history of extant samples (Griffiths and Marjoram,
1997). SimRA is based on backward simulation of the ARG.
Backward simulations begin in the present and move in time
through the past generations and are usually more efficient than for—
ward simulations due to the elimination of many (obvious) redun—
dant paths in the evolution process. The big picture showing the
relationship between a complete genealogical network and an ARG
highlighting the backward trace of history is illustrated in Figure 1.
Complex simulation of scenarios results in complex interplay of
parameters. For instance, what should be the sample size m of a
population such that the expected number of active lineages in t gen—
erations is more than one. We present analytic forms of the expected
ARG characteristics of a population in terms of the input param—
eters. These derivations use the graph—theoretic results of the ran—
dom graph model presented in Parida (2010b). To the best of our
knowledge, this is the first time that such closed forms of the ARG
characteristics estimates have been computed. The estimated ex—
pected values can be effectively utilized by the user to design

' Y \ X X
," I ‘I 
j; :3 1‘) g A c D B
(i) scaffold P' (ii) ARG P

Fig. 2. An example with four populations A, B, C, D. (i) shows the scaffold P’.
(ii) shows a corresponding ARG P. Note that in general the structure of P’ is
not apparent from Pand the ARG Psimply looks like the ARG in Figure 1. See
text for more details

appropriate input regimens, removing time consuming trial and
error iterations (see case study in Supplementary Section 55).

2 Modeling multiple populations

We model the relationship between m populations by a DAG P’
with m leaf nodes, and call it a scaffold. An example is shown in
Figure 2 (i). The progress of time is assumed to be from top to bot—
tom and the m leaf nodes are annotated with the population labels.
Further, each edge e in P’ has three characteristics: the incubation
length len(e), the number of lineages at the bottom of the edge, Me)
and the number of lineages at the top of the edge, Me). The length is
a time parameter defined in generations. Note that two parameters,
an effective population size and a recombination rate, determine the
number of lineages Me) for a fixed pair of values of 1;,(e) and len(e).
We assume that the scaffold P’ is binary (i.e., each internal node in
P’ has exactly two ascendants or two descendants, but not both).
For each internal node, the junction constraints are defined as

9103 ‘Og JSanV uo salaﬁuv soc] ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /310'slcumofp1q1xo"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

1050

A. P. Carrieri et aI.

 

   

(i) Merge (ii) Split

Fig. 3. The two types of nodes in a scaffold P’: Merge and split nodes are
marked by the horizontal dashed lines at time t. The tiny black disc nodes and
the thin black edges are part of the underlying ARG P

follows (see also Figure 3). A node v in P’ that has two incoming
edges e1 and e2 and an outgoing edge e3 (termed a split node) the fol—
lowing relationship holds: lt(e3) S l),(e1) + l),(e2), i.e., the lineages
at v is the union of the lineages of the two incoming edges. Similarly
if node v has two outgoing edges e1 and e2 with one incoming edge
e3 (termed a merge node), then l),(e3) S lt(e1) + lt(e2), i.e., the lin—
eages at v is the union of the lineages of the two outgoing edges.
Each edge e of P’ represents the evolution of a Wright Fisher popula—
tion captured in a DAG say Pg. The union of each of these DAGs by
appropriately gluing the ends of the edges corresponding to the
nodes of P’ gives the ARG P that can be written as: P : UEEPIPE.
Such a P is shown in Figure 2 (ii) where the leaf nodes correspond to
extant units of each population of P’.

Figure 4 shows an example of parameters that define the scaffold
P’. Additionally a recombination rate (r) and effective population
size for each edge, ultimately decides the topology of the resulting
ARG. Further, the mutation rates and the short tandem repeats
(STR) details define the polymorphism in the samples of the individ—
uals of the populations.

Consider the scaffold specified in Figure 4. Each edge is simulated
as a single population (Section 3) and assume that the effective popula—
tions size N9, is specified for each edge e,-. For instance, the edge e1
labeled with population D is simulated with 12 extant samples, i.e.,
l),(e1) : 12, len(e1) : t1. The resulting surviving lineages lt(e1) is split
in the ratio 1:1 as shown in Figure 3. Similarly, the edge e2 is labeled
with population C with 18 extant samples, l),(e2) : 18, len(e2) : t2.
The resulting surviving lineages lt(e2) is split in the ratio 1:1. Next,
lt(e1) / 2 lineages are simulated until a time depth of t3 on edge e3 to
give lt(e3) lineages. Population B is simulated with 14 extant samples
on edge e4 until a time depth of t3, i.e., l), (e4) : 14, len(e4) : t4. The
lt(e3) lineages are combined with lt(e4) lineages. This node in the scaf—
fold is a merge node as shown in Figure 3 and the population is simu—
lated to a time depth of t6 (i.e., for time t6 — t3). Similarly all the edges
are simulated until a total time depth of t7.

3 ARG network sampling algorithm

We now address the problem of simulating each edge of the scaffold
P’ which can also be viewed as the ARG sampling of a single popula—
tion. This is a well—studied problem as discussed in (Hein et al.,
2004; Hudson, 2002). In the remainder of the paper, we refer to this
classical backward algorithm, based on Kingman coalescence, as
Hudson (Kingman, 1982). The reader is directed to (Hein et al.,
2004; Hudson, 2002) and citations therein for a comprehensive de—
scription of Hudson. However, we found that even Hudson algo—
rithm was not efficient enough to admit complex scaffold
simulations: it was too time consuming and in many instances failed
to terminate in reasonable time, forcing to abort and re—run. A single
scaffold requires multiple runs (corresponding to each edge) thus
making the algorithm prohibitively expensive. Here we present our
algorithm for simulating a single (neutral) population.

 

A(10)

 

Fig. 4. Specifying the family of 4 populations, A, B, C and D with sample sizes
10,14,18 and 12 respectively. The horizontal dashed lines correspond to time
to : 0 < t1 < t2 <  < t7. At times t1 and t2 the surviving lineages are split in
the ratio 1:1 along the diverging lines of the scaffold at the split nodes

3.1 Overview of the approach

The algorithm is based on Kingman coalescence and is along the
lines discussed in (Hein et al., 2004) and is very similar to the
Hudson algorithm. Again, to keep the discussion self—contained we
give the complete description here, along with the changes specific
to SimRA in the text of the description below. The algorithm works
back—in—time starting from the present (time 0), moving back into
the past. Further, the ARG is incrementally constructed by identify—
ing the event nodes in the graph. An event node either has multiple
incoming or multiple outgoing edges. For example a chain node is
not an event node. An important assumption, that considerably sim—
plifies the algorithm, is made: The probability of multiple events in
the same epoch (generation) is extremely low, hence the algorithm
assumes there is at most one event per generation. The design of the
overall algorithm is affected by this and at each step the algorithm
simply seeks the closest generation from the current where an event
node occurs.

3.1.1 The closest event node from the current state in the ARG

In the interest of brevity, some basic definitions are presented in
Supplementary Section S1 and use here. Let L lineages be active at
time T. Let tgzal denote the time to the coalescence of lineages la and
lb. Let tfcmb denote the time to the closest (to T) recombination event
of lineage I. Eq. 23 (in Supplementary) shows that each of the )
coalescent events, generically written as tgzal, can be approximated
by an exponential distribution with parameter A : 1. Recall the fol—
lowing observation from (Parida, 2010b):

OBSERVATION 1. (Ancestor Without Ancestry Paradox) The edges
(and nodes) of an ARG must he annotated with the chromosomal
segment that flows through the edge.

Based on the above observation, Eq. 26 (in Supplementary) can
be approximated by an exponential distribution with parameter r;
where r; : Nr) and r) is the recombination rate of the segment ﬂow—
ing through lineage I. These approximations to the exponential dis—
tributions are based on two assumptions (Wright Fisher
population): the population at each generation is N and a unit picks
its parent randomly from the previous generation (non—overlapping
generations and panmictic mating population). Also, note that the
factor of N in 1’, is due to the approximation of the distributions,
and not due to the underlying population evolution model. The task
is to find t, the time to the closest event node in the past. This event
could either be a coalescent event (merging of two lineages) or a

9103 ‘Og JSanV uo salaﬁuv soc} ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /310'S[BIIJDO[pJOJXO"SOIJBHIJOJIIIOICI/ﬂdnq 11101} papeolumoq

Sampling ARG of multiple populations with SimRA

1051

 

recombination event (splitting of a lineage). Since all the events are
independent, then we seek overall minimum. Thus

. . - rcmb
t : m1n m1n1£a<bSL(tgzaI) 7mln1£lSL(tl 
W

r—H
:Exp(1+1+---+1+1ﬁ+r§+~~+HL> (1)
a—z

using Property 1 (Supplementary Section S1). The overbraces cap—
ture the ( coalescent events and the underbraces capture the L re—
combination events. t computes the time to the closest event back in
time from the current time T, but, is the closest event coalescent or
recombination? The answer to this comes from Property 2
(Supplementary Section S1). The event is a coalescent event with

probability
( )
2

— (2)
L 1
( 2 ) + 2!: 1’1
and a recombination at lineage 1 S k S Lwith probability
I
L (3]

(§)+Xl:ri

In the implementation of the algorithm, both Eqs. 2 and 3 are
used in a single draw of a random number. Imagine a unit interval
[0, 1] is broken up into 1 + L sub intervals of lengths in the follow—
ing ratio 2 21/1 21/2 :  : 1’, : :11. Thus a random number drawn
from the interval [0,1] belongs to one of these 1 + L sub—intervals
and is appropriately interpreted: the first interval implies
coalescent event and lath (k > 1) interval implies a recombination
at the lineage lk_1. Since the events are random, t is estimated first
and then the lineages are picked at random from the L active
lineages.

3.1.2 Genetic material ﬂowing through the ARG

The chromosomal segment whose evolution history is captured by
the ARG is represented as the real interval [0, 1], without loss of gen—
erality. Every node in the ARG is annotated with union of one or
more sub—intervals of [0,1]. Thus genetic material, I, carried by a
node is: I : {[21,u1], [22mg], . . . , [[S,u5]}, where0 g 21< u1< [2
< u; <  < [S < us 3 1. The closed intervals [Zhui] E I are termed
solid and the open intervals (u,-,Z,-+1) are termed gaps where
1 g i < i+ 1 S s. The length (len) of I is defined as the total span of
I, irrespective of the gaps, while density (den) of I is defined as the
total span of the solid intervals only. The definitions are summarized
as (see also Fig. 3):

solid(I) : [21,u1] U [22mg] U  U [Aug],
gaps(I) 2 (141,52) U (142,23) U  U (M5_1,[S),
(

len I) :us —£1,

vi

(1611(1) : M," — ii,

._t

[x,y] C solid(I) <:> [x,y] C [2,,ui], forsome 1 g i g s.

The union operation on segments, 1,, U I), : Iaub, has the natural
interpretation:

[2, u] E Iaub <:> [2, u] C solid(Ia) OR [Lu] C solid (1),). (4)

The splitting ofI atx ([1 g x 3 us) into 1,, and I), is defined as:
L, : I}, : I,whenx 2Z1 orx : us,
Ia I{Izhullilzziuzlw-wIzjixl}.
13111)“ 1b : {Ixiuili Manual], - - - , Izsiusl},
Ia :{[Zl,u1],[22,u2],...,[Zj,uj]},
1b :{Izl+17uj+1li"-1[[51MSI}:

}when£,- < x < Mi,

}whenu,- S x 3 4+1.

3.2 On the uniqueness of GMRCA

A founding ancestor of the extant units is termed GMRCA (grand
most recent common ancestor). Let 9 denote the set of all (infinite)
graphs, with nodes partitioned into distinct levels, or generations,
with N nodes at each level, and each node having no more than two
parents. For each X E Q, and any subset V of the nodes at level 0,
there is an induced subgraph of X, namely the ARG induced by V
and we call this the ARG associated with X.

Following Parida (2010a) we introduce a probability measure on
Q as follows. For X E Q and h > 0, we denote by X), the truncation
of X to depth h, i.e., X1, is the finite induced graph from X on the set
of vertices of level 3 h. Similarly, for a subset E C Q, and h > 0, we
denote E), : {Xh]X E  We say that E is ﬁnitely determined if
there exists some ho, such that X E E <:> Xho E Em, and in this
case we denote u(E) : IEZOI. The family, .73, of finitely determined
subsets E E 29 clearly forrhs a field, and thus by the Caratheodory
extension theorem (see for example Varadhan (2001), Theorem 1.1,
pp. 4), u can be uniquely extended to the a—field generated 8 by this
family. We denote this measure also by u and consider 9 as a prob—
ability space with measure )1.

Let Eunq C Q be the set of graphs X E 9, such that the ARG asso—
ciated to X has a unique GMRCA. The following theorem (whose
proof is presented in the Supplementary due to space constraints) fol—
lows from the definition of the measure )1. It assures us that almost
every ARG has a unique GMRCA. In fact, in over ten thousand simu—
lations, of which about three thousand are reported in this paper,
SimRA terminated in every instance with a unique GMRCA.

Theorem 1. The subset Eunq is measurable and u(E““q) : 1.

Corollary 1. The measure of the space ofall ARGs with no unique
GMR CA is zero.

3.3 Algorithm to generate the topology

INPUT: Due to historical reasons, the unit of recombination rate is
specified in centiMorgans per megabase per generation and the mu—
tation rate is specified in number of mutations per base pair per gen—
eration (X10_8). The input parameters and some typical parameter
values for a human chromosomal segment are given below.

 

 

 

 

 

 

 

user-speciﬁed units in hip example
Parameters units for algorithm values
9 seqment length Kb x1031”, 75 x 103
V STRlocations 7 — [0.3, 0.7] X g
m extant units 7 — 100 X 1
N population size 7 7 10 x 103
I ' I
. . { x (0‘01 = 10’s) _
1' recombination cM/Mb/gen WS— o.1 X 10 8
Morgan/bp/gen
,1 SN? mutation muL/bp/gen X 10‘8 x 1 muvbp/gen 1.5 x 10—8
,15" STR mutation muL/locus/gen x 10‘4 x 1 mul/locu/gen 6.9 x 10—4

 

ASSUMPTION: Not more than one event, coalescent or recom—
bination, occurs at a generation. Also, no back mutations, i.e., a
position undergoes no more than one mutation in the entire ARG.
The mutation rate and recombination rate are uniform over the seg—
ment being simulated.

OUTPUT: ARG; L is the number of GMRCAs.

91oz ‘Og JSanV uo salaﬁuv soc} ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /310'S[BIIJDO[pJOJXO"SOIJBHIJOJIIIOICI/ﬂdnq 11101} papeolumoq

1052

A. P. Carrieri et aI.

 

 

Algorithm

 

1. Initialization.
a. The genetic material, I,,, of each of the m leaf nodes, 11,
is set to L, : {[0, 
b. The number of live lineages L is initialized to m.
c. For lineage I, incident on leaf node v, the recombination
rate (based on Eq. 26 in Supplementary Section S1) is:

r)’ : Nr)where r) : grlen(I,,). (6)

Since, len (Iv) : 1 for the leaf nodes, for each I, r)’ : or
where

or : Ngr. (7)
d. Time T is set to 0 and iteration i to 1.

2. Loop. Iterate until L is one (or T crosses a pre—deﬁned
threshold). Iteration i is deﬁned as follows.
a. Compute the recombination rate r)’ of each lineage I
(the outgoing edge on node 11) using Eqs. 6 and 7 as
r)’ : or X len(I,,). Then compute the time t,- to the next
event using the exponential distribution (Eq. 1):

L L
ti—Exp((2)+Zrl>- (8)
[:1

In other words, draw a random number from the
above exponential distribution.

b. Based on Eqs. 2 and 3, if coalescent event, then pick
two lineages, la and l), (with genetic material I, and
I), respectively) at random and coalesce them to one
and update the genetic material of this new node
and lineage I, UI), (as deﬁned in Eq. 4). Update L to
L — 1.

c. If recombination at lineage [2, then randomly pick a
point x on the segment being carried by lineage [2, split—
ting the lineage into two, as deﬁned in Eq. 5. Update
the genetic material of the two lineages based on this
splitting point. Update L to L + 1.

d. T is updated as T + t,- and iteration as i + 1.

 

3.4 Painting ARG edges with SNP & STR mutations

Each time t of Step 2(a) can be scaled to generation as j : Nt. Let
time t be associated with an incoming edge on node 11. At this stage,
each edge is annotated with the mutation events, which is appropri—
ately reﬂected in I”, the segment carried by node v.

3.4.1 SNP mutations
Since number of generations is N t and the span of the segment 1,, has
been normalized in the initialization step, let

p : uNtandn : gden(I,,). (9)

Each edge of the ARG, incoming on node v, is annotated with
number of mutations based on Eq. 9 as follows. X, the random
draw from a Poisson distribution with parameter np:

X : Poisson (10)

Then the X mutations are placed at random in segment 1,,
(excluding the gaps, see Fig. 5).

 

 

 

 

 

 

 

 

 

O
t-I__

(a) Using den(I) in Eq 9. (b) Using 1en(I) in Eq 9.

Fig. 5. The top line represents a chromosomal segment [carried by an edge
in both (a) and (b): gaps(l) are shown as dashed lines and solid(I) as solid
segments. [is mapped to a normalized line segment, say [0,1], shown in the
bottom in both (a) and (b). In (a) the gaps are skipped, and the lengths of each
element in solid(I) is proportionally represented in [0,1]. Thus any element in
[0,1] can be mapped back to a unique location in solid(I). In (b) the gaps are
not skipped, and the lengths of each element in solid(I) and in gaps(l), is pro-
portionally represented in [0,1]. Any element only in the solid section in [0,1]
can be mapped back to a unique location in solid(I); any other element maps
to a gap in I

3.4.2 STR mutations

Note that the number and positions of the STR loci are fixed by the
input specification. For each STR locus, [2, carried by I”, we compute
the following. The number of STR mutations at locus k on each
edge of the ARG, incoming on node v, is X,,, the random draw from

a Poisson distribution with parameter Ntus”:

X)a : Poisson (Ntum). (11)

Let p1 be the probability of the mutation that increases the num—
ber of copies (by 1 in one generation) and p_ be the probability of
the mutation that decreases the number of copies (by 1 in one gener—
ation). Then, X)“, the number of times the STR mutation results in
an increase in the number of copies of the repeat follows a binomial
distribution, hence is the random draw from a binomial distribution
with parameter X12 and p1 Xk+ : Binomial (Xk,p+). Thus the re—
mainder, i.e., X)a — Xk+ must be the number of events that result in
decrease of the number of copies. Thus A)z the net change in the num—
ber of copies at locus k is: A)a : Xk+ — (X)a — Xh) : 2Xk+ — Xk. If
unspecified, we use the default value of p1 : 1

2, assuming
7 C 1
17+ — P— — :-

4 Four quantitative hallmarks of ARG

The ARG is a random object defined by parameters, m, the extant
sample size; N, the population size; g, the length of the genomic seg—
ment whose common history is being tracked; r the recombination
rate; )1, SNP mutation rate. In fact, other polymorphisms, such as
STR, can be incorporated just as the SNP mutations are. Note that
the unique founding ancestor, GMRCA, is attained in an ARG with
probability 1 (see Section 3.2). We consider the following four quan—
tities as the hallmark of the random object ARG with parameters m,
N, g, r, )1:

Depth of the ARG (H).
Number of non—mixing segments in the sample population (Z).
Number of polymorphic sites in the sample population (Y).

:P‘P‘Pt‘

Diversity in the sample population (D).

5 Closed-form approximations of the expected
hallmark values

We derive approximations of the expected hallmark values as
closed—form functions of the ARG parameters. We did not find ana—
lytic or closed—forms of the expected values for the general scenario
in literature, except some very specialized cases such as depth of

9103 ‘Og JSanV uo salaﬁuv soc} ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /310'S[BIIJDO[pJOJXO"SOIJBHIJOJIIIOICI/ﬂdnq 11101} papeolumoq

Sampling ARG of multiple populations with SimRA

1053

 

GMRCA in the absence of recombinations (Hein et al., 2004). Our
derivations are based on the theorems and observations in Parida
(20103).

In fact, we found that if we required a single population only to
study the hallmark expected values, but not the sample population,
then the closed form approximations were tight enough to make the
actual simulation redundant.

Overview of the derivations. We use two notions: depth of a
node and girth of an edge. An edge length, as well as depth of a
node, is defined to be in time units. The unit of time is measured in
generations. The depth of each node is measured from the leafnodes
and the depth of a leafnode is defined to be 0. The girth of an edge is
defined to be the product of the edge length and the size of the gen—
omic segment the edge transmits.

1. The ARG network is decomposed into overlapping trees (see
Thm 2; also Figs 6 and 7 and Fig. 11 in Supplementary).

2. For each tree, we compute the depth of each node and the girth
of each edge, using Kingman coalescence. The depth of a tree is
simply the depth of its root node. The girth of the tree is the sum
of the girth of each edge of the tree.

3. The depth and girth of each tree are used for approximating the
ARG hallmark values. However, the interdependence of the

trees makes these computations non—trivial.

 

(a) (b)

Fig. 6. The horizontal lines denote the time at which an event (coalescence or
recombination) occurs. (a) An example of an ARG. (b) depicts the flow of the
3 non-mixing segments shown in three distinct colors: green, red and blue
(from left to right on the chromosomal segment)

5.1 Mathematical details
To keep this section self—contained, we recall the following basic
identities. Let 0 < m’ < m.

m 1 1 1 1
.2 (i—1_T):W_m’ ‘12)

 

 

 

1:m’+1
m 1 1 1
:1 —  —zl 1
;i_1 +2+ +m_1 ogm, (3)
m m
~ I,
 i_1~logm—logm —logW. (14)
1:m’+1

Consider a tree with m leafnodes. Using Kingman coalesence, all
the non—leaf nodes of the tree can be written in increasing depth
(from the leafnodes) as v1, v2,..., vm_1, with the active lineages
decreasing by one at each node. Let t,- denote the depth of v,- from
v,-_1 where depth of v0 is defined to be 0. Then the tree truncated at
a depth that has m’ active lineages, is written as Tmﬁml. Let HT“, be
the depth of this tree. Then using Property 3 (Supplementary Section
S1), linearity of expectations, and the above identities we get:

mm M): Em) 1E(t.-)— Em) #
1:1+m’ 1:1 m’ (2)

 

m 1 1 1 1
1.:Hm, 1—1 1 m m

Let g the length of the genomic segment carried by each edge in
the tree and the girth of the tree be uItTm, . Then

m

tum“) : Z zIE(t,-)g
i:1+m’

—meI(+5—2meI 

1:11")! 2 i:1+m’

(16)

m
ngIOgW. (17)

The complete tree with a single root node is written as TmJ and

m

1E(HT,,..):2(1 1). (18>

Emmi) = lglogm- (19)

 

4 1 2

1 2

(a) 71 03) 7‘2

1 2

(c) 73 (d) 7"

Fig. 7. The four trees embedded in the ARG network of Figure 6 (as captured in Eq. 20). The three marginal trees, T1 to 73 correspond to the three non-mixing

segments shown in green, red and blue

9103 ‘01; JSanV uo salaﬁuv soc} ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /310'S[BHJnOprOJXO"SOIJBHIJOJIIIOICI/ﬂdnq 11101} papeolumoq

1054

A. P. Carrieri et aI.

 

We recall the following from Parida (2010a) relating population
genetics entities with graph entities like least common ancestor
(LCA). A non—mixing genetic segment does not have any recombin—
ation event in the common history of the m samples.

THEOREM 2 Let g be an ARG with some K 2 1 non-mixing
segments. Then K marginal trees are embedded in g and the
GMR CA of g is the LCA of the K LCAs of the K marginal trees.

Figure 6 gives a simple illustration on an ARG on four samples
with three non—mixing segments. An alternative view of the theorem
is as follows: Let T(l, h) denote a tree defined on I leafnodes
each carrying the segment of length h. Then for some partition of
genome segment g into K non—overlapping segments, where
g=g1Ug2 U  UgK,

K
g z(kL:J1’Z’1g(m,gk)>U T’(K,g)7 (20]

where the roots of the 71’s are the leaves of 7’. Two examples illus—
trate the embedded trees, one in Figure 7 and the other, due to space
constraints, in the Supplementary in Figure S11. In the former the
number of nodes in T’ is of the order of K while the latter has the
smallest possible size of just one node. In both, 71—73 are the mar—
ginal trees of usual shape and size.

N=1K N=5K N=10K

I111)“
111

 N=1K ,  N=5K ,  N=1OK

g=25K >3:   2: 
° 50 so 120 50 so

240 50 80 120 20 120
m

10‘
25
2
.5
.
r15
50 80 120 20
m

 

 

2%
SI:
SI:
3:
II;
t

 

 

ll

20 50 so 120
m m

(i) ARG height H

 

 

 

 

 

 

 

 

 

 

m

 

g=75K >.

 

 

 

 

 

 

 

50m 80 120
(iii) Number of mutations Y

20 50 an 120
m

 

Corollary 2. If H1 is the maximum of the depths of T),(m,g),)and
H2 is the depth of T’(K,g)and H is the depth of the GMRCA of the
Q, then

H:H1+H2. (21)

Corollary 3. The girth of ARG g is the sum of the girth of each
le(m7gk) and 

5.2 Summary of closed—form formulations
Due to space constraints, the derivations have been presented in
Supplementary Section S2 and only the results are summarized here.

Let
1
H1:2(1 ——),
m

u:Nrg,/l:oiH1+1,y:2u—/)’,

1 12—8 1—
jr—[2:/—I'/—°’(l)))7‘,vhenr>07

K :(H1+ H2)N1’g+ 1.

N=1 K N=5K N=10K

 

Sim RA
Hudson 15

a

2.5

g=25K N 2

n
20 50 50 1:0 20 50 80 120 20 50 80 120

 

 

 

 

 

 

 

   111 fit“

80 120 20 50 80 120

m m
(ii) Number of recombinations Z

 

N=1 K N=5K N=1OK

1111111 1131

80 120

  “II III
20 somso 120 20 50 80 120

 

43:0me
:1-

 

 

 

 

 

 

 

 

 

 

20 50 so 120
m

(iv) Diversity of population D

Fig. 8. The closed form expected values are compared against empirical values for different parameter values of m, g and N. The recombination rate used is
r: 0.1 X 10’8 Morgan/bp/generation, )1 : 1.5 X 10’8 mutations/bp/generation, and m’ : 1. For the results with m’ > 1, see Figure S12 in the Supplementary.
Note that the mutation rate affects only (iii) and (iv). Each experiment was run 100 times, using both SimRA and Hudson. The box-and-whisker diagram summar-
izes the result for each. On each box, the central mark is the median, the circle is the mean, the edges of the box are the 25th and 75th percentiles, the whiskers
extend to the most extreme data points not considered outliers, and outliers are plotted individually. In each, the green diamond is the expected value as com-
puted by the closed form, while the hollow circles are the observed empirical values by SimRA and Hudson. Notice that not only do the two algorithms give simi-

lar values; the closed form is also a tight approximation

9103 ‘01; JSanV uo sajaﬁuv soc} ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /310'S[BHJnOprOJXO'SOIJBLUJOJIIIOICI”K1111] moi) papeolumoq

Sampling ARG of multiple populations with SimRA

 

Then the four (expected) hallmark values are:

 z H1 + H2,
]E(Z) z K — 1,

]E(Y) z 2)1gN(logm + logK),

m
1
]E(D) z 2gNuZ i—Z.
i:2

Expected Height of Truncated ARG. H1, or and [i values are as
above and m’ is the number of surviving lineages of the truncated
ARG. Then

V :2“_mlﬁt

7 vi 12 — 806m’(m’ - I?)

I

H2 , whenr > 0,

201m

 z H1 + H2.

6 Comparison study

For a comprehensive survey of sampling algorithms and simulators
the reader is directed to (Hoban et al., 2012), which discusses both
backward and forward simulators.

Many simulators in literature address the issue of redundancy in
the simulations and they can also be classified on the basis of the ex—
tent of non—redundancy (see Parida, 2012, for instance).

The underlying mathematics of a backward simulator is non—
trivial and the classical Hudson algorithm captures the essence of
backward simulations.

SimRA simulates multiple populations under admixture and sub—
division, while other simulators incorporate other demographic
models, making it difficult for a nose—to—nose comparison. However,
the core engine of SimRA can be compared with the Hudson algo—
rithm, which forms the basis in all backward simulators. Hence in
the comparative study here, we use only the single population of
SimRA and the classical Hudson algorithm using exactly the same
input parameters. Furthermore, to keep the comparisons agnostic to
other possible extraneous factors, we use identical implementation
for the common parts of SimRA and Hudson.

6.1 Differences from Hudson algorithm

Recall that Hudson algorithm uses a single scaled recombination
rate Nr, while SimRA uses the L segmented versions
r] : Nr), 1 : 1, .., L. This is reﬂected in Eqs. 1—3. Eq. 1 suggests that
in our algorithm, to account for recombination event, time t takes
into account not just the number of active lineages but also the size
of the segments carried by each of them (r) : grlen(I,,) of Eq. 6).
Note that 21/ len(I,,) 9E 1 at each iteration making the two computa—
tions distinct; hence distinct algorithms. Thus if pc is the probability
of coalescence (Eq. 2), then the probability of recombination is 1
—pc with equal probability over all the lineages in Hudson algo—
rithm. But SimRA uses Eq. 3 to pick a lineage for the recombination
event. Thus Eq. 3 has no counterpart in the classical Hudson algo—
rithm. The accuracy of the two algorithms are comparable while
SimRA outperforms Hudson in time, space and non—redundancy fac—
tor, as seen below. We performed extensive comparative analysis be—
tween the two algorithms SimRA and Hudson, to measure various
outcomes. In particular, we carried out hundred runs for each par—
ameter set up, for both the algorithms.

 

 

1055
Time Memory
50 5000
SimRA
5,, Hudson m
40 4000
ll)
‘0
f:
8 30 2 soon
0.)
(I)
20 mu
.0 icon
0
am 19000
Moon
300
12000
g 250
g I>10000
8 200 x
g) 3000
2 150 so“  i
100 we"

 

 

 

 

 

so awn
0.01 X10" 0.05X10" 0.1X1D" 0.3x10" 0.01 X10" 0.05X10" 0.1x10* 0.3x (0*

r r

Fig. 9. The box-and-whisker diagrams of the time and memory performance
of SimRA and Hudson computed for 100 runs with N : 10K, 9 : 150K, )1 21.5
><10’8 and different value of recombination rates (shown in the x-axis) and
for each parameter setting both the algorithms were run 100 times. The red
line demarcates the time and space requirement for Hudson for the rightmost
value of r. While all values of rthe time and space requirement of SimRA is
better than that of Hudson. In particular for large rSimRA is nearly two orders
of magnitude better than Hudson

6.2 Accuracy measures

We demonstrate the accuracy of the SimRA algorithm by comparing
the four hallmark values to the ones computed by Hudson. The re—
sults are shown in Figure 8. Notice that the SimRA and the Hudson
estimates are very close to each other, over 100 runs for each config—
uration. We use the same set—up to compare the closed form ex—
pected values of the last section to the observed empirical values.
Again, note the tightness of the approximations. In addition, Figure
12 in the Supplementary shows the expected height of truncated
ARG compared against the observed values using both SimRA and
Hudson, with similar accuracy.

6.3 Time and space performance

Figure 9 shows the results of the comparative time and space per—
formances. SimRA shows consistently superior performance in both
time and space, and, the difference is particularly accentuated with
increasing values of recombination rate r. For higher values of r, the
time and space requirement is nearly two orders of magnitude higher
for Hudson.

In particular, for the study summarized in Figure 10, the Hudson
algorithm had to be aborted and re—run several times and it took
over six months just to complete, while SimRA was done with the
four hundred runs in less than half a day.

6.4 Non—redundant ARGs of SimRA

How redundant is the ARG network sampled by an algorithm? If
we assume that all the marginal trees and the resulting samples are
the essential content of a simulation, then it is meaningful to ask
what portion of the ARG resulting from a simulation has no contri—
bution to the essential content. This is formally studied as the min—
imal descriptor in Parida et al. (2011) and other details pertaining to

9103 ‘01; JSanV uo sajaﬁuv soc} ‘Btuiomizg JO AJtSJQAtuf] 112 /310'S[BHJnOprOJXO'SOIJBLUJOJIIIOICI”K1111] 111011 papeolumoq

1056

A. P. Carrieri et al.

 

 

 

 

 

 

1 I I . | I I
.
0.93- -
0.96- f I  _
0.94— ; —
H— _
0.92— — — —
0.9— _ —
0.88— - s'mRA _
- Hudson
. . . .
0'” 0.01 x1019 0.05 x10" r 0.1 not 0.3 X103

Fig. 10. The box-and-whisker diagrams of the compaction factor f, for differ-
ent values of r. The other parameter values are the same as used in Figure 9
and for each parameter setting both the algorithms were run 100 times. ARGs
produced by SimRA are consistently more compact (or less redundant) than
that of Hudson

the execution of the experiments are presented in Supplementary
Section S4.

Let the compaction factor f be defined as the ratio of the number
of nodes in the minimal descriptor to the number of nodes in the ori—
ginal ARG as in (Utro et al., 2013). Thus the closer the value of fto
1, the less redundant is the ARG and thus more compact. Figure 10
shows that the ARGs produced by SimRA are systematically more
compact than the ones produced by the Hudson algorithm. This is
particularly accentuated for higher values of r.

7 Conclusion

The design of the SimRA algorithm was inﬂuenced by the implica—
tions of the Ancestor Without Ancestry Paradox, which also paved
the way for computing the closed forms of the expected values of
the ARG characteristics. To the best of our knowledge this is the
first time analytic formulae have been given for an ARG.

Such closed—forms, apart from mathematical completeness, also
serve multiple practical purposes.

Ironically, it obviates single population simulations in many situ—
ations where the interest is only in the characteristic estimates. In
others it provides a framework for evaluating correctness of the
ARG sampling algorithms. Also, for complex scenarios such as the
ones with population scaffold architectures it aids in parameter spe—
cification (this is illustrated in Supplementary Section S5).

Through extensive comparison studies, we demonstrated that
the ARGs produced by SimRA are more compact, more efficient in

time and space, without compromising accuracy. Currently we are
looking into extending SimRA to incorporate other demographic
models including selection.

Acknowledgments

We are thankful to Saugata Basu for his insights on measure theory. We are
also grateful to Daniel Platt for many useful discussions, particularly on STR
variations in populations. Part of the SimRA implementation was carried out
by APC when she was visiting IBM Watson Research Center.

Conﬂict of Interest: none declared.

References

Grifﬁths,R.C. and Marjoram,P. (1997) An ancestral recombinations graph.
In: Donnelly,P. and Tavare,S. (eds.) Progress in Population Genetics and
Human Evolution. IMA Vols in Mathematics and Its Applications, Springer,
New York, USA, 87, pp. 25 7—270.

Hein,J. et al. (2004) Gene Genealogies, Variation and Evolution: A Primer in
Coalescent Theory. Oxford University Press, USA.

Hoban,S. et al. (2012) Computer simulations: tools for population and evolu-
tionary genetics. Nat. Rev. Genet., 13, 110—122.

Hudson,R. (2002) Generating samples under a WrightFisher neutral model of
genetic variation. Bioinformatics, 18, 337—338.

Kingman,J. (1982) On the genealogy of large populations. ]. Appl. Probab.,
19, 27—43.

Parida,L. (2010a) Ancestral recombinations graph: a reconstructability perspec—
tive using random—graphs framework. ]. Comput. Biol., 17, 1345—1350.

Parida,L. (2010b). Graph model of coalescence with recombinations. In:
Heath,L. and Ramakrishnan,N. (eds.) Problem Solving Handbook in
Computational Biology and Bioinformatics, pp. 85—100.

Parida,L. (2012). Non—redundant representation of ancestral recombinations
graphs. In: Anisimova,M. (ed.) Evolutionary Genomics: Statistical and
Computational Methods: Volume 2.

Parida,L. et al. (2011) A minimal descriptor of an ancestral recombinations
graph. BMC Bioinformatics, 12, S6

Parida,L. et al. (2015) Topological signatures for population admixture.
RECOMB LNBI, 9029, 261—275.

Schaffner,S. et al. (2005) Calibrating a coalescent simulation of human gen-
ome sequence variation. Gen. Res., 15, 15 76—15 83.

Utro,F. et al. (2013) Sum of parts is greater than the whole: inference of com-
mon genetic history of populations. BMC Genomics, 14, 510

Varadhan,S.R.S. (2001). Probability Theory, Volume 7 of Courant Lecture
Notes in Mathematics. New York University, Courant Institute of
Mathematical Sciences/American Mathematical Society: New York/
Providence, RI, USA.

9103 ‘01; isanV uo sajaﬁuv soc} ‘BtHJOJtIBQ JO AirsmAtun 112 /310'S[BHJnOprOJXO'SOlJBLUJOJIIlOlq”K1111] 111011 papeolumoq

