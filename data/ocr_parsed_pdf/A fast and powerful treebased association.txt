BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Node 0 

['51053192

CIR

p-vu | uu

I _ Hf]  I [II "

 

/3.10'S[Bum0[p10}x0'SOpBLUJOJuyqu”:duq

Tree-based association test for complex joint effects

 

Table 1. The 2 X 2 contingency table for the samples in the leaf node Ak,
cross-tabulated by the outcome y and the binary variable

 

 

j} = 0  = 1 Total
k k k
y = o nag) nap n59
(le (lg) (k)
y = 1 "10 "11 "1
Total mg”) mg“) n“)

 

Table 2. The 2 X k contingency table for all subjects, cross-tabulated by
the outcome y and the set of binary variables F1, . . . ,FA. deﬁned by the
leaf nodes of the tree TA.

 

 

F121 F221  szl Total
k k k
y = 0 n31) n32) . . . ngk) no
A k k
y = n31) n32) ... ngk) n1
Total mg") mg” . . . mg") n

 

of leaf nodes reaches a pre-speciﬁed value K0. To make the procedure
more robust, a leaf node that is eligible for splitting has to contain at least
N0 subjects. We set K0 2 5 and N0 = 50 in the simulation studies and
real data application. Issues involved in choosing values for K0 and N0
will be examined in Section 4.

By growing the tree with the partitioning algorithm described earlier,
we can obtain a sequence of K0 — l nested tree models T2, . . . , TKU, with
TA. having k leaf nodes. Each tree model in the sequence provides an
estimate for the latent genetic risk groups. For a given tree model Tk,
we deﬁne a set of binary variables F1, ..., FA. indicating a subject’s assign-
ment to one of the k leaf nodes of Tk, with F]- : l, j = l, . . . ,k, if the
subject falls in the j—th leaf, and F]- : 0 otherwise. We model the associ-
ation between gene and disease as:

k7]
logitP(y=1|F1,...,Fk,1)=a+zﬁja (4)
j:1

The departure from the null hypothesis H0 : [31- = 0,j = 1,. . . , k — 1, can
be measured by the score test statistic. Table 2 provides notation for the
frequency distribution for samples in each leaf node in Tk. We show in
Supplementary Materials that the score test statistic based on (4) can be
represented as:

k
1 , , 2
—(n(") — mWn—l) , k = 2,. . . ,KO (5)
J:

k 1'
lmjm 1 1 n

 2 i

"0"]
Because the building of the tree model is ‘supervised’ by the outcome, the
deﬁnition of F1, . . . , FA. is partially driven by the outcome. As a result, 33’")
no longer has an asymptotic chi-squared distribution. Instead, the empir-
ical signiﬁcance level of 33“, 2 5 k 5 K0, denoted by pg”, can be evalu-
ated through a permutation procedure that generates null datasets by
randomly shufﬂing the outcome among subjects, while keeping their
genotypes unchanged. Let the number of permutation steps be M. For
the m-th permuted dataset, the same tree growing algorithm is applied,
and the score test statistics (35?, . . . ,sSf”) deﬁned in (5) are obtained for

the sequence of the K0 — l nested tree models. We can estimate the em-
pirical signiﬁcance level of 33") by:

A! .
Z 105:) Z 53“)
FEMZMM—H, k:2,...,K0 (6)

Because we have K0 — 1 candidate risk models for assessing the diseasei
gene association, each having empirical P-value pf)“, k = 2, . . . , K0, a nat-
ural choice for the ﬁnal test statistic is To = min{pgk); k = 2, . . . , K0}. We
identify the tree model with the smallest empirical P-value 173") as the
optimal tree model representing the gene’s effect. In principle, the
P-value of T0 could be estimated by a computationally intensive two-
layer permutation procedure. The inner layer is required for getting the
empirical P-value [i.e. 175)") in (6)] for the tree models ﬁtted from the
observed and permuted datasets, and the outer layer is required for get-
ting the empirical null distribution of T0. Instead, we adopt the minP
algorithm proposed by Ge et a]. (2003), where only a single-layer permu-
tation procedure is needed. We describe Ge’s algorithm in more detail in
Supplementary Materials.

2.3 Accelerating the growth of the tree by Boolean
operations

As mentioned in the Introduction, testing procedures based on the tree
model can be computationally intensive, as the evaluation of the P-value
requires a permutation procedure. Even though the computational
burden is reduced considerably by the use of closed-form formula for
the evaluation of splitting rules (2) and the score test statistics (5), as
well as Ge’s algorithm, it is still not practical to use the proposed pro-
cedure as a gene-based test to screen >20 000 genes, some of which have
P-values< 1.0 X 10*. The main bottleneck is to build the contingency
table shown in Table l, which is required for the evaluation of every
candidate-splitting rule in the tree-model-building process on observed
and permuted datasets. For any given pair (Abﬁ), 0(nJ) if-else oper-
ations on y and f are required to obtain Table 1. Thus, about 0(nJK0) if-
else operations are performed during the growth of a tree with K0 leaf
nodes. The computational overhead for calculating the score statistics in
(5) is negligible, as Table 2 can be obtained from Table 1 directly. When
the permutation procedure is used with M iterations, the total number of
the if-else operations scales up to the order of 0(nJK0A/I), whereas M can
be as large as 108 to estimate the P-value for genome-wide signiﬁcance
reliably.

To make our proposed test computationally feasible for large-scale
genome-wide gene-based analysis, we adopt the BOolean Operation
(BOO) method, which was originally proposed by Wan et a]. (2010) for
detecting SNPiSNP interaction at the genome-wide scale, to accelerate
the calculation of contingency table, e.g. Table l. The BOO method is a
memory- and CPU-efﬁcient strategy for constructing tens of millions of
contingency tables swiftly. To be more speciﬁc, we illustrate the use of the
B00 algorithm in our setting. For the binary outcome y, instead of
storing it as a vector with n standard integers (a standard integer
would be represented by 64 binary digits in a 64-bit computing system),
we encode 64 binary outcomes (say )1] , . . . , y64) into one 64-bit integer w
according to the following rule:

64
w = Z 2644);,»
[:1

Thus, the binary outcome y can be stored as a length- [rt/64] vector yb
consisting of 64-bit integers. We also need to maintain a binary vector
6A., with its i-th entry indicating whether the i-th subject falls in the k-th
leaf node. Similar representation can be applied to 6A. and each of the
dichotomized genotypes j}, l 5 j 5 J. Hence, 6A. and are converted to
length-[M64] vectors 6}: and f3.” as well. We can obtain a length- [rt/64]
vector v2]. = yb&6,'f&fj'?, where & represents the CPU-efﬁcient logical

 

2173

ﬁm'spzumofpiojxo'sopeuuqurorq/ﬁdnq

H.Zhang et al.

 

Table 3. The 2 X 2 contingency table for the subjects in the leaf node A)‘.
with X) = 1, cross-tabulated by the outcome y and the binary variable

 

 

j} = 0  = 1 Total
1' 1' kl
1:0 (1” (.11 (9
(kill (kill (’1’!)
y = "10 "11 "1
Total n15)ij mgkﬂ) no")

 

AND operation in an element-wise manner. The numbers in Table 1 can
be obtained by counting and summing over the ‘1’ bits in each of the
entries of vfj. Supplementary Figure S1 illustrates an example showing
how the B00 method works when the total sample size is 64. The tree-
based testing procedure incorporating the B00 method is roughly 60-
fold faster than the one using the standard if-else operations. More dis-
cussion of the computing time will be given in Supplementary Materials.

2.4 Adjusting covariates

In this section, we extend the proposed testing procedure by allowing the
adjustment of covariates. To make the B00 method applicable in this
situation, we need to extend the statistics in (2) and (5) accordingly, so
that they are closed-form functions of subject frequencies under various
restrictions. We assume that the adjusted covariates can be discretized
and represented by a multilevel categorical variable. For example, if we
wanted to adjust two covariates with two and three levels, respectively, we
would adjust these two covariates jointly as a categorical variable with six
levels. Equivalently, both main and interactive effects from the two ad-
justed covariates are adjusted. Under such a strategy, we can represent all
adjusted covariates as a factor encoded by a set of dummy variables
x = (X1,...,XL).

For any candidate leaf node A)‘. to be split, the samples in A)‘. can be
summarized as L 2 X 2 contingency tables (Table 3 shows the l—th table,
for those samples with X) = 1). We extend (2) to allowing the adjustment
of x by use of the CochraniManteliHaenszel test statistic (Mantel, 1963;
Mantel and Haenszel, 1959). Deﬁne the test statistic:

2
L . . (kl)
(k1!) (kﬂl'h
(121("11 ‘ml "(1.1)
k) =
[( J = —
(Is/WI!)

Z "13"!" (All) "0 1
[:1

"10 ("(1:11)

The best split isagain chosen as (1cm, 101,3) 2 argmax(,.‘..ﬂ [(17). . .

We also modify the score stat1st1cs so 1n (5) for test1ng the association
between the gene and the disease condition by assuming the following risk
model:

L:1 1:1
logit P01: 1|X1,---,XL,F1,---,FA») =OZ+ZV1X1+Zﬁij (8)
1:1 1:1

For any subtree T1. with k leaves, k = 2,...,K0, the samples can be
summarized as L 2 X k contingency tables (Table 4 shows the l—th table
for those samples with X) = 1). To test the null hypothesis H0 : [31- = 0,

j = 1, . . . , k — 1, we can derive the score test statistic under the risk model
(8) as:
k ,
13> : UkalUk (9)
where
Uk 2 (“k1, - - - 5111214)], Vk = (lefz)(k:1)><(k:1)

Table 4. The 2 X k contingency table for subjects with X) = 1, cross-
tabulated by the outcome y and the binary variables F1, . . . ,F)‘. deﬁned
by the leaf nodes of the tree T).

 

 

F121 F221  H21 Total
_ (“1 (“1 (M (l)
y _ 0 r101 r102 . . . HM n0
_ (“1 (“1 (M (l)
y_l r111 r112  n”, r11
Total mg“) mg“) . . . mg") n")

 

L (l)
_ (kl) (kilnl ~_
ind—2011]. —mj W), j—l,...,k—l

[:1

(l) l)

L (
_ _ _ (kl) (kl) "0 "1
v1”, _ — E mjl m —
1:1

,2 (M3, 1:11:12 5 k— 1

 

XL: W) (1) (kl) "111)"?

v1]: m- (n —m-) 3, j=l,...,k—l

1:1 I J ("(0)

The signiﬁcance of this extended tree-based multilocus test can be eval-
uated by a permutation procedure in which we randomly shufﬂe the
outcome y within each stratum deﬁned by the dummy covariate x,
while keeping the genotypes and x the same within each subject. The
steps for estimating the P-value remain the same. With minor modiﬁca-
tion, the B00 method described earlier can be applied. For example,
instead of applying the CPU-efﬁcient logical AND operations on yb, 6}:
and ff, we apply them on )1", 6'1  and X53, with x? being the vector of
64-bit integers converted from the vector of X).

3 RESULTS

3.1 Application to a GWA study of ESCC

We demonstrated the application of our TREe—based
Association Test (TREAT) as a gene—based test by applying it
on a GWA study of ESCC. We focused on 1942 cases and 2111
controls taken from the Shanxi Upper Gastrointestinal Cancer
Genetics Project and the Linxian Nutrition Intervention Trials
(Abnet et al., 2010). Both studies were conducted in the Taihang
mountain area in China. The analysis was conducted on 22 193
genes or annotated regions extracted by the software GLU
(http://code.google.com/p/glu—genetics/). We set the threshold
for genome—wide signiﬁcance at 2.3 x 10’6 (8 0.05/22 193) ac—
cording to the Bonferroni correction adjusting for all 22 193 tests.
With the 1000 Genomes data (version 3) as the reference (1000
Genomes Project Consortium 61 al., 2012), we used the software
IMPUTE2 (Howie et al., 2009) to impute the missing genotypes.
Besides TREAT, we also applied several other multilocus tests,
such as the Min—P test (Seaman and Muller—Myhsok, 2005), the
Adaptive Joint test (AdaJoint) (Zhang et al., 2013), the Adaptive
Rank Truncated Product test (ARTP) (Yu et al., 2009), the SNP
set association test (SKAT) (Wu et al., 2010) and its variation
(SKAT—O) (Lee et al., 2012).

All tests considered here were adjusted for study, sex and an
indicator for whether a subject was younger than 40 years. Those
covariates were chosen because of their significant marginal

 

2174

ﬁm'spzumofpiojxo'sopauuqurorq/ﬁdnq

.7

151063192
151063192
151063192

 

/810'SIBumoprOJxo'sopBLuJOJuioiq”:duq

H.Zhang et al.

 

Table 6. The empirical type I errors at the levels of 0.05 and 0.001

Table 8. Power comparisons under the risk model (11)

 

Level TREAT Min-p ARTP AdaJoint SKAT

Setting TREAT Min-p ARTP AdaJoint SKAT

 

.05 .047 .046 .045 .052 .047
.001 .0007 .0009 .0007 .0012 .0011

 

Table 7. Power comparisons under the risk model (10)

 

Level TREAT Min-p ARTP AdaJoint SKAT

 

.05 .855 .756 .749 .728 .690
.001 .483 .237 .229 .233 .116

 

the levels of 0.05 and 0.001 is summarized in Table 7. It is obvi—
ous that TREAT has a clear power advantage over other tests
under this scenario.

Next, we conducted simulations by generating genotypes under
various LD structures. Instead of relying on observed joint geno—
type distribution in an existing study, we simulated genotypes at
multiple SNPs in a study population according to the algorithm in
the study by Wang and Elston (2007). We considered a gene with
20 SNPs, and a study with 2000 cases and 2000 controls. We
generated vectors of continuous variables U = (U 1, . . . , U20)
under a multivariate normal distribution with mean zero and
the covariance matrix 2 = (oi/)Zoﬂo, where 0,, = ,0'H'. We then
generated genotypes at the i—th SNP by discretizing U ,~ into three
levels corresponding to genotypes 0, 1 and 2, so that the resultant
SNP had a minor allele frequency of 0.4. The correlation among
genotypes of the 20 SNPs was controlled by ,0. In the simulation,
we considered ,0 = 0, 0.5 and 0.9 to represent a low, median and
high LD relationship among SNPs, respectively. We used this
procedure to generate genotypes for controls, and we used the
weighted sampling procedure to generate genotypes for cases ac—
cording to the assumed risk model.

We designated the 10th and 11th SNPs as the risk SNPs, and
we deﬁned the two following indicator variables to represent the
way that the two risk SNPs affect the outcome:

I _ 1, ifG10=10r2andG11=00r1
l _ 0, otherwise,

and

I_ 1,1fG102101'231’1dG1122
2 _ 0, otherwise.

The risk model was deﬁned as
logit Pr(y = 1 | 010,011) =o1+13111 +0212 (11)

This model can be represented as a tree model with three leaf
nodes. Table 8 compares the power of all considered tests under

131 = 0, 132 =log(1-5)

p : .0 .644 .481 .450 .456 .359
p : .5 .936 .783 .790 .736 .674
p : .9 .991 .927 .946 .882 .872
131 = —108(1-2), 132 =108(1-2)

p : .0 .568 .314 .320 .340 .283
p : .5 .691 .233 .257 .354 .137
p : .9 .812 .195 .166 .212 .122

 

Table 9. Power comparisons under the risk model (12)

 

Setting TREAT Min-p ARTP AdaJoint SKAT

 

p = 0 .338 .201 .243 .251 .202
p = 5 .732 .633 .650 .544 .541
p = 9 .960 .887 .900 .866 .886

 

various scenarios, which were speciﬁed by ,0, 61 and ﬁg. The
power was evaluated at the level 0.05 based on 1000 replicated
datasets simulated under each scenario. It is evident from Table 8
that TREAT is the most powerful under model (11). The Min—P,
ARTP and AdaJoint tests performed similarly to each other and
showed some advantage over SKAT.

The risk models considered in Table 8 are essentially tree
models. We then conducted simulation under the following
two—locus epistasis risk model:

logit PTO} =1 | G10, G11): 0! + 511(G10 = 2) + 521(G11 = 2)
+ VI(G10 = G11: 2)
(12)

with 61 2 ﬁg 2 y = 0.15. Power results based on 1000 replicates
are summarized in Table 9. Again, TREAT outperformed all
other tests under the risk model (12).

Finally, we compared the performance of all considered tests
under traditional linear additive models (on the logit scale) with
one, two or three disease risk SNPs. The results are summarized
in Supplementary Table S2. As TREAT is not designed to detect
additive effects, it is not a surprise to see that TREAT has a less
favorable performance compared with other tests, such as
ARTP, AdaJoint and SKAT, which aim at the linear additive
risk model. In practice, we recommend the use of TREAT in
conjunction with one of the tests that target detection of additive
joint effects.

3.3 Computing time

Here, we provide a summary of computing time when applying
TREAT on a gene with 5, 10, 20, 50 and 100 SNPs in a study
consisting of 2000 cases and 2000 controls. We assume that the
adjusted covariates are treated as a 5—level categorical variable.

 

2176

ﬁm'spzumofpiojxo'sopauuqurorq/ﬁdnq

Tree-based association test for complex joint effects

 

We set K0 2 5 and N0 = 50 and used 105 replicates of permuta—
tion when applying TREAT. In Supplementary Table S3, we
report the averaged running time over 100 experiments for
each scenario on a Linux machine with a 2.8—GHz Xeon CPU.
It appears that it is practical to run TREAT as a routine test, as
the computing time is reasonable.

4 DISCUSSION

The linear regression model, such as the logistic regression
model, has been the dominant tool for assessing the joint effect
of multiple predictors. The following three factors contribute to
its popularity. First, the linear regression is convenient to use, as
the asymptotic distributions have been established for derived
test statistics. Second, it is generally accepted that the linear
model is usually adequate for depicting the joint effect. Third,
there are not many alternative options available. There is clearly
a demand for more robust testing procedures, especially in situ—
ations when the cumulative effect from multiple predictors is
non—additive. Here, we have proposed a general testing proced—
ure based on the tree—structure model. Leveraging a computa—
tionally efﬁcient tree—building algorithm, the procedure has
limited requirements for CPU time and memory. For a gene
with 20 SNPs in a study of 2000 cases and 2000 controls, it
takes 45s to run the procedure with 105 permutation steps on
a Linux machine with a 2.8—GHz Xeon CPU. We have demon—
strated the power advantage for the proposed procedure in the
setting of gene—based association analysis through real and simu—
lated datasets.

The proposed testing procedure is general and can be used for
testing the association between a set of risk factors and a binary
outcome. It can adjust the covariates’ effects by treating them as
a categorical variable with multiple levels. It has two major
tuning parameters that have to be set by the user: the maximum
tree sizes K0 (the number of leaf nodes) and the minimum sample
size N0 required for each leaf node to be split. In practice, the
maximum tree size depends on the sample size of the study, the
number of risk factors and the prior knowledge on the complex—
ity of the underlying risk model. For the purpose of hypothesis
testing, we favor a relatively small tree size, as we want to limit
the number of considered candidate risk models, which are sub—
trees of the full tree with the maximum number of leaf nodes, to
control multiple—comparison effects. On the other hand, the max—
imum tree size has to be large enough to allow the searching
space to be sufﬁciently broad to cover a model that adequately
approximates the true risk model. In the setting of gene—based
analysis, we recommend choosing K0 in the range of 5 to 10,
under the assumption that the number of true disease—associated
loci within a gene tends to be relatively small. The choice of the
minimum sample size N0 required in each leaf node is driven
mainly by the total sample size. Because each leaf node repre—
sents a candidate risk group, we suggest N0 3 50 for robust
testing results.

The computational burden associated with the tree—structure
model is one major barrier to its use for hypothesis testing. We
overcame this obstacle by combining several strategies to speed
up the proposed procedure, including the derivation of closed—
form formulas for evaluating splitting rules and score test statis—
tics f or assessing the joint effect summarized by the tree—structure

model, the use of Ge’s one—layer permutation algorithm (Ge
et 0]., 2003) for the evaluation of the P—value and the adaptation
of the B00 method (Wan et 0]., 2010) for swift scanning over
candidate splitting rules. We demonstrated that it is feasible to
apply the proposed procedure as a multilocus association test in
large—scale gene—based association studies with >20 000 candidate
genes or annotated regions. The tree—building algorithm can be
accelerated further by noticing that the evaluation of splitting
rules at each given tree node is parallelizable. We are currently
working on a GPU (graphic processing unit) implementation to
take advantage of the parallelizability (Greene et 0]., 2010; Yung
et 0]., 2011).

We developed a general testing procedure based on the tree—
structure model and presented a fast algorithm for building the
tree—structure model by adopting the computationally efﬁcient
Boolean operator for swift evaluation of the splitting rule. This
procedure has broad applications, and it is a valuable tool that
can be run routinely in conjunction with other tests that target an
additive joint effect. We have created an R package implement—
ing the procedure (http://www.hanzhang.name/softwares/treat).

ACKNOWLEDGEMENT

We thank the anonymous referees for their helpful comments.
This study used the high—performance computational capabilities
of the Biowulf Linux cluster at the National Institutes of Health,
Bethesda, MD. (http://biowulf.nih.gov).

Funding: The work of H.Z., P.R.T. and K.Y. was supported by
the Intramural Program of the National Institutes of Health, the
National Cancer Institute and the Division of Cancer
Epidemiology and Genetics.

Conﬂict of Interest: none declared.

REFERENCES

Abnet,C.C. et al. (2010) A shared susceptibility locus in PLCEI at qu23 for gastric
adenocarcinoma and esophageal squamous cell carcinoma. Nat Genet, 42,
76¢767.

Abnet,C.C. et al. (2012) Genotypic variants at 2q33 and risk of esophageal squa—
mous cell carcinoma in china: a meta—analysis of genome—wide association stu—
dies. Hum. Mol. Genet, 21, 213272141.

Agresti,A. (2007) An introduction to categorical data analysis. In: Wiley Series in
Probability and Mathematical Statistics. Vol. 423, 2 edn. John Wiley & Sons,
Hoboken, NJ.

Breiman,L. et al. (1984) Classiﬁcation and Regression Trees. Wadsworth & Brooks,
Monterey, CA.

Chen,J. et al. (2007) A partially linear tree—based regression model for assessing
complex joint gene—gene and gene—environment effects. Genet. Epidemiol, 31,
2387251.

Ge,Y. et al. (2003) Resampling—based multiple testing for microarray data analysis.
Test, 12, 1:77.

Greene,C.S. et al. (2010) Multifactor dimensionality reduction for graphics process—
ing units enables genome—wide testing of epistasis in sporadic als. Bioinformaties,
26, 694$95.

Howie,B.N. et al. (2009) A ﬂexible and accurate genotype imputation method for
the next generation of genome—wide association studies. PLoS Genet, 5,
e1000529.

Lee,S. et al. (2012) Optimal tests for rare variant effects in sequencing association
studies. Biostatistics, 13, 7627775.

Mantel,N. (1963) Chi—square tests with one degree of freedom; extensions of mantel—
haenszel procedure. J. Am. Stat. Assoc, 58, 69(%700.

 

2177

ﬁio'spzumofpiojxo'sopeuuqurorq/ﬁdnq

H.Zhang et al.

 

Mantel,N. and Haenszel,W. (1959) Statistical aspects of the analysis of data from
retrospective studies of disease. J. Natl Cancer Inst, 22, 7197748.

Seaman,S.R. and Muller—Myhsok,B. (2005) Rapid simulation of P values for prod—
uct methods and multiple—testing adjustment in association studies. Am. J. Hum.
Genet, 76, 3994108.

Wan,X. et al. (2010) BOOST: a fast approach to detecting gene—gene interactions in
genome—wide case—control studies. Am. J. Hum. Genet, 87, 3257340.

Wang,T. and Elston,R.C. (2007) Improved power by use of a weighted score test for
linkage disequilibrium mapping. Am. J. Hum. Genet, 80, 3537360.

Wu,M.C. et al. (2010) Powerful SNP—set analysis for case—control genome—wide
association studies. Am. J. Hum. Genet, 86, 9297942.

Yu,K. et al. (2009) Pathway analysis by adaptive combination of P—values. Genet.
Epidemiol, 33, 70(F709.

Yu,K. et al. (2007) Two—sample comparison based on prediction error, with
applications to candidate gene association studies. Ann. Hum. Genet, 71,
1077118.

Yung,L.S. et al. (2011) GBOOST: a GPU—based tool for detecting gentL
gene interactions in genothwide case control studies. Bioiiy’ormatics, 27,
1309:1310.

Zhang,H. et al. (2014) A fast multilocus test with adaptive SNP selection for
large—scale genetic association studies. Eur. J. Hum. Genet, 22, 69(r702.

Zhang,H. and Singer,B. (1999) Recursive Partitioning in the Health Sciences.
Springer Verlag, New York.

1000 Genomes Project Consortium et al. (2012) An integrated map of genetic vari—
ation from 1,092 human genomes. Nature, 491, 56—65.

 

2178

/810'sleumoprOJxo'sopBuiJOJuioiq”:duq

