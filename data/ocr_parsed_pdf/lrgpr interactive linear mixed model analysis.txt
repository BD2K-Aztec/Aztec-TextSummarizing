BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Irgpr

 

Table 1. Speed comparison of lrgpr with widely used programs for two simulated datasets

 

samples, markers plink +10 PC’sl EMMAX2 GEMMA3 FaST-LMM4 GRAMMAR-gamma5 mmscore5 GWFGLS6 lrgpr7

 

221m11s 25m22s 6m 3s 147m 53s 206m
1542m 8s NA8 NA9 NA9 3287m 6s

17m 47s
198m 39s

103m1s
207m 10s

45 m 49 s
332m 34s

5K, 500K
10K,1M

 

Analysis was run with default settings on an 8 core Intel® Xeon® E5—2687W @ 3.10GHz with 64Gb RAM using R 3.1.0 compiled with the Intel® Math Kernel Library.
Overhead for ﬁle conversion is not included.

lv1.07 2Mu1tithreaded version from 2/10/2012 3v0.92 4v2.06.20130802 5GenABEL v1.8.0 “MixABEL v0.0.9.1 with DatABEL v0.1.6 7v0.1.0 xRequires more than 64Gb of
memory 9Dataset exceeds hardware—independent size limit that GenABEL can load.

0 Data—adaptive construction of the genetic similarity matrix
for the linear mixed model with criterion.lrgpr()
and cv. lrgpr ( )

o Scalable linear mixed model regression for millions of hy—
pothesis tests using lrgprApply ()

0 Ability to define arbitrary interaction models and perform
composite hypothesis tests with glmApply(), lrgpr()
and lrgprApply( )

4 APPLICATION

The main contribution of the lrgpr software is its ﬂexibility and
integration into the R environment while being scalable to large
datasets. This framework facilitates integration of existing ana—
lyses in R and rapid prototyping of novel methods. To illustrate
its efficiency and scalability, we applied lrgpr to two simulated
datasets of 5000 samples with 500 000 markers and 10 000 sam—
ples with 1 million markers. Although lrgpr is more ﬂexible than
other software, we ran the full—rank linear mixed model reusing
variance component estimates from the null model to make a fair
comparison between methods. All programs were run with de—
fault parameters using the same genetic similarity matrix. The
runtimes required to ﬁt a linear mixed model on this dataset are
shown for lrgpr and six widely used programs, in addition to
plink, which ﬁts a fixed—effects linear model (Table 1).
[Running GEMMA and FaST—LMM with the same grid
search for estimating variance components as lrgpr uses increases
the runtime (Supplementary Table S1).] The runtimes indicate
that lrgpr, despite its ﬂexible and user—friendly interface, is com—
petitive with existing software.

5 DISCUSSION

As most analysis of GWAS datasets have been performed under
the ‘one size ﬁts all’ paradigm, there is great potential for a cus—
tom exploratory reanalysis to examine novel aspects of existing
datasets to further elucidate the molecular mechanisms of com—
plex traits. Moreover, Yang et a]. (2014) emphasizes that the
optimal analysis depends on the population stratification, kin—
ship, sample size, genetic architecture, disease prevalence and
study design of each dataset. The lrgpr package allows an
analyst to apply multiple variations of existing methods to cus—
tomize an analysis based on the empirical properties of a speciﬁc
dataset.

This description of the lrgpr software is necessarily brief, and
we provide a detailed tutorial illustrating the functionality of the
software on the package’s Web site.

ACKNOWLEDGEMENTS

The authors thank Roman Kosoy, Sushila Shenoy, Sarah Brooks,
Cris Van Hout and Monica Ramstetter for feedback on the soft—
ware, and Michael Kane for help with the bigmemory R package.

Funding: This work was supported by a fellowship from the
Cornell Center for Comparative and Population Genomics,
NSF grants IOS1026555 and DEB0922432 (Cornell University),
and NIH grants R01AG046170 and R01MH095034, and a grant
from The Leona M. and Harry B. Helmsley Charitable Trust
(Icahn School of Medicine at Mount Sinai). This work was sup—
ported in part through the computational resources and staff
expertise provided by Cornell University and the Department of
Scientiﬁc Computing at the Icahn School of Medicine at Mount
Sinai.

Conﬂict of interest: none declared.

REFERENCES

F0x,J. (2008) Applied Regression Analysis and Generalized Linear Models. 2nd edn.
Sage, London.

Hoffman,G.E. (2013) Correcting for population structure and kinship using the
linear mixed model: theory and extensions. PLoS One, 8, e75707.

Kane,M.J. et a]. (2013) Scalable strategies for computing with massive data. J. Stat
Softnt, 55.

Kang,H.M. et a]. (2010) Variance component model to account for sample structure
in genome—wide association studies. Nat Genet, 42, 3487354.

Lippert,C. et a]. (2011) FaST linear mixed models for genome—wide association
studies. Nut Methods, 8, 8337835.

Listgarten,J. et a]. (2012) Improved linear mixed models for genome—wide associ—
ation studies. Nut Methods, 9, 5257526.

Listgarten,J. et a]. (2013) A powerful and efﬁcient set test for genetic markers that
handles confounders. Bioinformutics, 29, 152(r1533.

Long,Q. et a]. (2013) JAWAMixS: an out—of—core HDFS—based java implementation
of whole—genome association studies using mixed models. Bioinformutics, 29,
122(k1222.

Price,A.L. et a]. (2010) New approaches to population stratiﬁcation in genome—wide
association studies. Nat Rev. Genet, 11, 459463.

R Core Team. (2013) R: a language and environment for statistical computing. R
Foundation for Statistical Computing. Vienna, Austria.

Svishcheva,G.R. et a]. (2012) Rapid variance components—based method for whole—
genome association analysis. Nat Genet, 44, ll6frll70.

Yang]. et a]. (2014) Advantages and pitfalls in the application of mixed—model
association methods. Nat Genet, 46, 10(%106.

Zhou,X. and Stephens,M. (2012) Genome—wide efﬁcient mixed—model analysis for
association studies. Nat Genet, 44, 8214524.

 

3135

ﬁm'spzumol‘pmﬂo'sopeuuopuotq/ﬁdnq

