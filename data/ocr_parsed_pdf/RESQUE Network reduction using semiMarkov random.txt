ORIGINAL PAPER

Vol. 28 no. 16 2012, pages 2129—2136
doi:10. 1 093/bioinformatics/bt3341

 

Systems biology

Advance Access publication June 23, 2012

RESQUE: Network reduction using semi-Markov random walk
scores for efficient querying of biological networks

Sayed Mohammad Ebrahim Sahraeian and Byung-Jun Yoon*
Department of Electrical and Computer Engineering, Texas A&M University, College Station, TX 77843—3128, USA

Associate Editor: Mario Albrecht

 

ABSTRACT

Motivation: Recent technological advances in measuring molecular
interactions have resulted in an increasing number of large-scale
biological networks. Translation of these enormous network data
into meaningful biological insights requires efficient computational
techniques that can unearth the biological information that is
encoded in the networks. One such example is network querying,
which aims to identify similar subnetwork regions in a large target
network that are similar to a given query network. Network querying
tools can be used to identify novel biological pathways that
are homologous to known pathways, thereby enabling knowledge
transfer across different organisms.

Results: In this article, we introduce an efficient algorithm for
querying large-scale biological networks, called RESQUE. The
proposed algorithm adopts a semi-Markov random walk (SMRW)
model to probabilistically estimate the correspondence scores
between nodes that belong to different networks. The target network
is iteratively reduced based on the estimated correspondence
scores, which are also iteratively re-estimated to improve accuracy
until the best matching subnetwork emerges. We demonstrate that
the proposed network querying scheme is computationally efficient,
can handle any network query with an arbitrary topology and yields
accurate querying results.

Availability: The source code of RESQUE is freely available at
http://www.ece.tamu.edu/~bjyoon/RESQUE/

Contact: bjyoon@ece.tamu.edu

Supplementary Information: Supplementary data are available at
Bioinformatics online.

Received on December 9, 2011; revised on June 7, 2012; accepted
on June 8,2012

1 INTRODUCTION

Biological functions in cells are carried out through complicated
interactions among various cellular constituents. For instance,
protein—protein interactions (PPI) lie at the core of various
transcriptional, signaling and metabolic processes in cells (Zhang,
2009). Quantitative genome-scale description of such interactions
by graphical representation of biological networks can facilitate the
study of the cell as an integrated system (Barabasi and Oltvai, 2004;
Cusick et (11., 2005) and help us better understand the structure and
dynamics of diverse biological mechanisms. Recent technological
advances have enabled high-throughput global measurement of
protein—protein interactions (Ge, 2000; Ho et (11., 2002; UetZ

 

*To whom correspondence should be addressed.

et (11., 2000), resulting in large-scale PPI networks. Furthermore,
many text-mining tools have been developed to search the vast
amount of biomedical research literature to collect known molecular
interactions that have been reported before (Huang et (11., 2008). As a
result, genome-scale biological networks are available for a number
of model organisms, and biological network databases are still in
rapid expansion. In order to translate these large-scale network data
into meaningful biological insights, we need efﬁcient computational
techniques that can be used to unearth the important information that
is buried in these networks.

As comparative methods have played crucial roles in the analysis
of biological sequences, comparative network analysis can also
serve as an effective way of analyzing the available network data
(Sharan and Ideker, 2006; Yoon et (11., 2012). One such example
is network querying. ‘Network querying’ aims to identify similar
subnetwork regions in a large biological network (referred as the
‘target network’) that are similar to a given query network. This
technique can be used to search for novel potential pathways in
a given biological network that are similar to known biological
pathways, thereby enabling ‘knowledge transfer’ across different
organisms, from well-studied ones to others that have been studied
less. To obtain biologically meaningful results, the network querying
algorithm needs to incorporate the similarity between the individual
nodes (i.e. biomolecules in the networks)—in terms of their
composition, structure or function—as well as the similarity between
their interactions patterns (i.e. topological similarity). However,
the optimal network querying problem has been shown to be NP-
Complete by reduction to the graph isomorphism problem (Dost
et (11., 2008), and until now, various approaches have been proposed
to make this problem computationally feasible (Ay et (11., 2011; Blin
et (11., 2010a,b; Bruckner et (11., 2010; Dost et (11., 2008; Durand
et (11., 2006; Ferro et (11., 2007; Ferraro et (11., 2011; Fionda et (11.,
2008; Gulsoy and Kahveci, 2011; Kelley et (11., 2004; Liao et (11.,
2009; Mongiovi et (11., 2010; Pinter et (11., 2005; Qian et (11., 2009;
Sahraeian and Yoon, 2011a; Shlomi et (11., 2006; Singh et (11.,
2008; Tian et (11., 2007; Wernicke and Rasche, 2007; Yang and Sze,
2007).

PathBLAST (Kelley et (11., 2004) is one of the pioneering network
querying schemes that identify conserved linear pathways in a pair of
networks using a greedy ‘seed-and-extend’ approach. Due to the high
computational burden, this algorithm is restricted to relatively short
pathways. To reduce computational complexity, QPath (Shlomi
et (11., 2006) and QNet (Dost et (11., 2008) adopted a color-coding-
based approach. QPath (Shlomi et (11., 2006) is restricted to querying
linear paths, while QNet (Dost et (11., 2008) allows searching for trees
and bounded tree-width graphs. Another recent algorithm, called
PADAl (Blin et (11., 2010b), also used the color-coding scheme and

 

© The Author 2012. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 2129

112 ﬁlo's[Bumo[pJOJXO'sorwurJOJurorqﬂ:duq 11101} papBOIII/lAOG

9103 ‘Og anﬁnv uo ::

S.M.E.Sahraeian and B.-J.Yoon

 

    

Query Network (GQ) Target Network(g)

Fig. 1. (A) Simultaneous random walk on the query network QQ and the
target network g. (B) This is equivalent to a random walk on the product
graph 9X = 99 X 9

dynamic programming for network querying. Yang and Sze (2007)
proposed two algorithms called PathMatCh, which searches for
the longest weighted path, and GraphMatCh, which enumerates all
possible solutions to ﬁnd the highest scoring subgraphs in a directed
acyclic graph. Qian et (11. (2009) proposed a hidden Markov model
(HMM)-based scheme for querying linear paths. SIGMA (Mongiovi
et (11., 2010) and RINQ (Gulsoy and Kahveci, 2011) consider the
problem of efﬁcient querying in biological network databases using
indexing schemes. Ferraro et (11. (2011) proposed an asymmetric
approach that uses a master-slave scheme to extract, via the Viterbi
algorithm, matching subgraphs in the master network. Another
recent algorithm, called Torque (Bruckner et (11., 2010), proposed
a topology-free querying scheme that looks for a connected set of
matching proteins in the target network that are sequence-similar
to proteins in the query network, where the underlying motivation
for taking a topology-free approach was the incompleteness of the
currently available protein interaction data. Another algorithm called
GraMoFoNe (Blin et (11., 2010a) also adopted this topology-free
approach, based on a color-coded motif matching scheme.

Currently, most network querying algorithms cannot handle
queries with general network structures. Many algorithms either
restrict the query to have a relatively simple structure (e.g. linear path
or tree) (Blin et (11., 2010b; Dost et (11., 2008; Kelley et (11., 2004; Qian
et (11., 2009; Shlomi et (11., 2006) or simply view it as a collection
of nodes by ignoring the underlying topology (Blin et (11., 2010a;
Bruckner et (11., 2010). Furthermore, many algorithms strongly rely
on sequence similarity to identify homologous node pairs, where
candidate pairs are typically identiﬁed by thresholding the similarity
scores (e.g. BLAST score) (Blin et (11., 2010a; Bruckner et (11.,
2010; Ferraro et (11., 2011; Kelley et (11., 2004). Besides, many
network querying algorithms still suffer from high computational
cost, which often increases exponentially with the query size,
rendering them impractical for large queries (Fionda and Palopoli,
2011).

In this article, we propose a novel network querying algorithm,
called RESQUE (Eduction-based scheme using Semi-Markov
scores for network QUErying) that can effectively address the
shortcomings of existing algorithms. For fast and accurate network
querying, the proposed algorithm takes an efﬁcient reduction-based
approach, where the target network is iteratively reduced based
on the so-called node correspondence scores that are computed
using a semi-Markov random walk (SMRW) model. The node
correspondence score provides a probabilistic similarity measure

 

between nodes that belong to different networks (i.e. query and
target networks), which can be efﬁciently computed using a Closed-
form formula. At each iteration, the estimated scores are used
to remove the nodes in the target network that have minimal
correspondence to the nodes in the query network, thereby shrinking
the search space. The node correspondence scores are then re-
estimated based on the reduced network and the aforementioned
reduction process is repeated until the best matching subnetwork
emerges. Based on real as well as synthetic examples, we
demonstrate that RESQUE outperforms state-of—the-art network
querying techniques, in terms of both computational efﬁciency and
querying accuracy.

2 MATERIALS AND METHODS

Suppose we have a target PPI network, represented by an undirected weighted
graph g=(V,8,w), where V is the set of N nodes that correspond to the
proteins in the network, 8 is the set of m edges that represent the protein
interactions and w is a weight function 142:8 —> R, representing the strength
or reliability of an interaction. Let QQ 2 (V9 , SQ , WQ) be the query network
with a set VQ of N Q nodes, edge set {IQ and interaction reliability WQ. In
case the interaction reliability data are unavailable, we may simply assign
uniform reliability score to all edges. For a pair of proteins (qi,v]-), where
qieVQ and VjEV, the node similarity is denoted as h(qi,v]-). Typically,
sequence similarity scores are used to measure this node similarity, although
we may also use other measures based on structural or functional similarity
between the proteins. The overall goal of network querying is to identify the
subnetwork in the target network g that is maximally similar to the given
query network QQ.

2.1 Estimation of probabilistic node correspondence
scores through SMRW

The network querying problem can be Viewed as a mapping problem, in
which we assign each query node (1,» 6 V9 to one or more target nodes v]- e 1),
based on their overall biological similarity. This biological similarity should
be measured by integrating the node similarity between the matching proteins
themselves as well as the similarity between their interaction patterns with
other neighboring proteins. SMRW model can provide an effective means of
obtaining such integrated similarity scores (Sahraeian and Yoon, 2011a,b).
Markov random walk is a process that takes successive random steps
(on a graph or a path) according to the Markov assumption. In an ordinary
Markov random walk, the random walker always spends a ﬁxed amount
of time at a given position before making the next move. On the other
hand, in a SMRW, the walker may spend a random amount of time between
each transition. Herein, we consider a ‘simultaneous’ SMRW on both query
and target networks, as shown in Figure 1A. The position of the walker is
given by a pair of nodes (qi,v]-), where q, EVQ and Vj EV. At each time
step, the walker takes simultaneous random steps on both networks, by
moving to one of the neighboring nodes in each network, where a neighbor
with a higher interaction reliability score is more likely to be selected. As
illustrated in Figure 1B, this simultaneous random walk on two graphs QQ
and g is equivalent to arandom walk on their product graph QX = (12X , 8X)
(Vishwanathan et (11., 2010). In this product graph QX, every node in VX
corresponds to a node pair x: ((1,, vi), and an edge exists between two node
pairs x=(qi,v]-) and y=(qk,vl) if and only if the edges ($419689 and
(VJ-yr) e 8 are present in the original networks. As shown in Vishwanathan
et a1. (2010), the transition probability matrix of the underlying Markov chain
for the random walk on QX can be computed as AX =AQ®A. where
(8 denotes the Kronecker product, and AQ=[aQ(i,k)] and A=[a(j,1)]
are the transition probability matrices for the random walks on QQ and
g, respectively. The transition probability a(j,1) measures the normalized
contribution from the neighboring node v, to the node v]- based on the

 

2130

112 ﬁlo's[BumoIpJOJXO'sorwurJOJurorq”:duq uteri papBorumoq

9103 ‘Og isnﬁnv uo ::

RESQUE: Efficient Querying of Biological Networks

 

interaction reliability w(v]-,vl) as follows:
W07. V1)

610.11): —,
Zvl/ GNU/f) WW1" v”)

where N(v]-) is the set of neighbors of node v]: The transition probability
aQ(i,k) is also deﬁned in a similar way.

We model the SMRW on QX such that 11(x), the expected amount of time
that the random walker spends at a node pair x=(qi,v]-), is proportional to
the node similarity h(qi,v]-). Using this model, we can measure the ‘global
correspondence score’ between (1,» and v]- based on the long-run proportion of
time that the random walker stays at the node pair x =(qi,v]-). According to
this model, both higher interaction similarity as well as higher node similarity
will increase the long-run proportion of time that the random walker stays
simultaneously at q, and vi, making it a good measure for assessing the global
similarity between nodes in different networks. As shown in Sahraeian and
Yoon (2011a,b), the global correspondence score described above can be
computed as follows:

Mi, ,1.) = M

z,ch 71X (Jr/mod)
_ ”Q(Qi)”(vj)h(91vvj) (1)

2,73, 21:1ngrqﬂwrvjamqm)

where 71X is the steady-state distribution of the Markov random walk on QX ,
whose transition probability matrix is AX. According to a property of the
product graph (Vishwanathan et (11., 2010), we have 71X = 719 (8 7r, where 719
and 7'! are the steady-state distributions of the random walks on QQ and g,
respectively. We can compute the distributions 719 and 7'! by, respectively,
ﬁnding the eigenvectors of the transition matrices Ag and A with unit
eigenvalue. For graphs that consist of multiple disconnected subgraphs, we
ﬁnd the steady-state distributions for each connected subgraph separately.
Besides, we also add a self-transition edge to every isolated node in g and
QQ. We can conveniently rewrite (1) as

_ P o H
_ trace(PHT) ’

where S, H, and P are N Q X N -dimensional matrices such that S[i , j] =
.r(qi,v]-), H[i,j] =h(qi,vj-) and P[1,j]=JTQ(qi)JT(Vj) and 0 denotes the
Hadamard (or element-wise) product.

As we have discussed, the SMRW model provides us with a
computationally efﬁcient method for computing probabilistic node
correspondence scores that sensibly integrate node similarities and
topological similarities. The estimated scores are used for iterative network
reduction, which will be described in the next subsection. It is worth noting
that a similar random walk-based scheme was recently proposed by Singh
et (11. (2008) in the context of global network alignment, which served as the
basis of two popular network alignment algorithms called IsoRank (Singh
et (11., 2008) and IsoRankN (Liao et (11., 2009). In this approach, the similarity
between nodes in two different PPI networks is measured by solving a matrix
equation, where the resulting similarity scores can be Viewed as the stationary
probabilities of a ‘random walk with restart’ on the product graph (Yoon et (11.,
2012). The transitions in this random walk are governed by the transition
probability matrix AX while the restart probability is governed by the node
similarity score matrix H. One practical limitation of this scheme is the high
computational complexity for computing the stationary probabilities, which
requires us to ﬁnd the eigenvector of a huge N X -dimensional square matrix,
where N X is the number of nodes in the product graph QX. On the other hand,
the SMRW scheme decouples the problem of ﬁnding stationary probabilities
of the random walk on the product graph QX into two subproblems, each of
which requires the computation of the stationary probabilities of the random
walk on a single graph, as shown in (1) and (2). This remarkably reduces
the overall cost for computing the global node correspondence scores. For
instance, for a query complex with N Q nodes and mg edges, and the target
network with N nodes and m edges, the time complexity of the random
walk scheme proposed in Singh et (11. (2008) is 0(m-mQ), while that of

(2)

the proposed SMRW scheme is O(m+mQ +z), where z is the number of
non-zero elements in H (which corresponds to the number of potential
homologues across the two networks). H is a N Q X N matrix, but in practice,
it is highly sparse, hence z << NNQ. The difference between the two schemes,
in terms of complexity, will become more prominent for larger networks.

2.2 Iterative network reduction

To search for the best matching subnetwork region in the target network,
we take a reduction-based approach, in which we shrink the search space
through iterative network reduction. In this scheme, we repeatedly reduce
the size of the target network by discarding the nodes with the lowest afﬁnity
to the query nodes, which is reﬂected in the global node correspondence
scores measured by the SMRW model. In each iteration, we update the
correspondence scores based on the reduced target network to re-estimate
the afﬁnity between nodes across the two networks. The main motivation
underlying this iterative ‘reduction and re-estimation’ technique is that the
estimated node correspondence scores in the S matrix tend to be less reliable
when there exist a large number of irrelevant nodes in the target network.
To tackle this problem, we iteratively ﬁlter out the least relevant nodes
in the target network and re-estimate the correspondence scores so that
the reliability of the estimated scores is successively reﬁned through the
iterations. In general, the proposed technique improves the reliability of the
estimated node correspondence scores and leads to more accurate querying
results, as will be discussed in this subsection and also demonstrated based
on actual querying experiments in Section 3.

Before performing the iterative network reduction, we discard any
potential non-homologous nodes from the target network, such that v]- e V and
all its edges are removed iqui 6 VQ :S[i,j] < T, where T is a given threshold.
We denote the remaining network as g’ . This pruning step can reduce false-
positive errors and improve the overall speed of the querying algorithm.
At the beginning of the reduction process, we let go) =g’ to be the initial
network. Then, in the kth iteration, we update g<k-1>=(v<k-1>,8<k-1>) to
g“) =(V(k),8 (10) as follows. First of all, we re-estimate the correspondence
scores S(k)using (2) based on the network g<k-1>. Next, we select the node
vd EV(k_l) in g<k-1> with the lowest correspondence score to the query
network as described in the following. Let (1* be the (unknown) optimal
mapping between the query network QQ and the best-matching subnetwork
in the target Q. We deﬁne the minimal correspondence node vd as

(1' = argminP(v]- e (1*) = argminP(E|qi 6 V9 , (1,» ~ v]- e (1*)
f f

=argmin<1— H [1 —P(q, ~v,- am)

1 qiEVg

:argmin<1— H [1 —S(k)[i~jll).

J qiEVg

where we View the correspondence score S(k)[i , j] (estimated in the current
iteration k) as an estimator of P(qi~v]- ed“), which is the posterior
probability that the query node (1,» will be mapped to the target node v]-
in the optimal mapping (1*. According to (3), vd will be the node that is
least likely to be included in the best matching subnetwork region. Thus,
we discard vd and its edges from g<k-1> to obtain g“), unless vd is the
only homologous node (in the current target network) for some query node
(1,». More precisely, if there exists a qieVQ such that S(k)[i,d]>0 and
S(k)[i,j]=0 for all j7éa', we keep vd in the network and check the next
candidate node. This reduces the risk of discarding a true match with a
relatively low correspondence score. After the node removal at each iteration,
we also discard all isolated nodes V0 2 {vdi ,vd1 ---}, unless the isolated node
is the only homologous node of a query node. The set V0 can be easily
identiﬁed, as it simply consists of nodes in VU‘TI) whose only neighbor is
vd. Following this reduction step, we recompute the correspondence scores
S(k+l) based on the reduced network, to be used in the next iteration. We
repeat the network reduction and score re-estimation process until we have

 

2131

112 ﬁlo's[Bruno[pJOJXO'sorwurJOJHrorqﬂ:duq uror} pap1201umoq

9103 ‘0g1sn8nv uo ::

S.M.E.Sahraeian and B.-J.Yoon

 

|V(k)| 52NQ. Figure S1 (see Supplementary Data) illustrates the network
reduction process. In this example, the original target network gm) undergoes
two reduction cycles until the matching subnetwork g9) is identiﬁed.

As mentioned earlier, the proposed network reduction scheme can improve
the accuracy of the estimated node correspondence scores and thereby
enhance the expected accuracy of the ﬁnal querying result. To deﬁne the
querying accuracy, letA represent the space of all possible mappings between
the query and the target networks, where a mapping (1 uniquely maps the
query nodes V9 to a subnetwork region in the target network. As before, let
(1* EA be the true (unknown) mapping between QQ and Q. We can deﬁne the
‘accuracy’ of a mapping (1 (obtained as a result of network querying) with
respect to the true mapping (1* as follows:

1
accuracy((1,(1*)=N— Z 1{qi~v]-Ea*},

qi~v1Ea

where qi~v]- indicates the alignment between (1,» EVQ and Vj EV, and 1{-}
is the indicator function whose value is 1 if the argument is true, and 0
otherwise. In practice, the true mapping (1* is unknown. Therefore, instead
of assessing the accuracy deﬁned above, we estimate the ‘expected accuracy’
as follows:

1
E,,»«[accuracy((1,(1*)]=E Z Ea*[1{qi~vj-E(1*}]

11,- ~12; Eu

1
2E  P(qi~v]-Ea*), (3)
q,~V,Ea

where P(qi ~vj- E(1*) is the posterior probability of that (1,» will be mapped
to Vj in the true mapping (1*. Based on this setting, the goal of network
querying would be to ﬁnd the optimal mapping (1 EA that has the maximum
expected accuracy. Note that the concept of maximum expected accuracy was
previously adopted by a number of multiple sequence alignment algorithms
(Do at (11., 2005; Sahraeian and Yoon, 2010), where it has been shown to be
an effective framework for predicting accurate alignments.

Now, let us consider a bipartite graph with the set of nodes VQ UV and
a set of weighted edges that link all node pairs (qi,v]-), where q, E V9 and
Vj E V. Suppose that the weight of an edge that connects the node pair ((1,, vi)
is assigned as (em = P(qi ~ Vj E (1*). Under this setting, the problem ofﬁnding
the maximum expected accuracy mapping can be translated into a maximum
weight bipartite matching (MWM) problem. For each query node (1,», let us
denote its (unknown) true matching node in the target network as v,»* (i.e. (1,» ~
v11 E(1*). Consider an optimization problem where the goal is to minimize
the objective function f(S)=X::.V:Ql S[i,i*], constrained on the constant L1
norm of S (i.e. “Slll :1). As the global node correspondence score S[i,j]
can serve as a good estimate of the posterior probability P(qi ~vj- E(1*). the
objective function f (S) is proportional to the expected accuracy deﬁned in (3).
Therefore, the maximum weighted matching on the bipartite graph with edge
weights (em = S*[i,j], where S* = argmaxf(S), will lead us to the maximum

expected accuracy solution for the querying problem. Note that the MWM
problem can be efﬁciently solved in polynomial time, using the well-known
Hungarian algorithm (Kuhn, 1955). As shown in the Supplementary Data, the
proposed network reduction scheme improves f(S) at each iteration, which
demonstrates that the iterative reductionire-estimation process can improve
the reliability of the node correspondence scores and thereby lead to more
accurate querying results.

2.3 Identiﬁcation of the best matching subnetwork

After the network reduction process, we are left with a reduced target
network go") with a relatively small size (with no more than 2N Q nodes).
The remaining step is to detect the subnetwork of g<°°> that consists of
the nodes that best match the query nodes. To identify the best matching
subnetwork, we propose two different strategies, where each strategy has its
own advantages. In both strategies, we consider a bipartite graph g; with
the node set VQ UV(°°) and a set of weighted edges between (1,» E V9 and

Vj E V(°°), whose weight is assigned as (aw =S(°°)[i,j]. In the ﬁrst strategy,
we seek the maximum expected accuracy querying result. As discussed in
the previous section, this is found by maximizing the objective function
f (S(°°)) =  S(°°)[i, 1*]. As mentioned earlier, this corresponds to ﬁnding
the maximum weighted matching of the bipartite graph g5, which can be
solved using the Hungarian algorithm (Kuhn, 1955). One disadvantage of
this approach is that it does not guarantee that the querying result will
be a connected subgraph of the target network. However, considering the
incompleteness of the current PPI data, this strategy may be still desirable
if we care more about maximizing the expected accuracy of the querying
result rather than retrieving a connected subnetwork. We refer to this
network querying scheme as RESQUE-M (for Maximum expected accuracy
matching). In the second strategy, we search for the largest connected
component go in the reduced target network g<°°> and report this network go
as the ﬁnal querying result. Since all remaining nodes in the reduced network
g<°°> have high correspondence to the query nodes, go is guaranteed to be
highly similar to the query network QQ. We refer to this second network
querying scheme as RESQUE-C (for largest Connected component). In case
the target network contains two duplicated copies of the query network,
both copies will be present in the reduced target network g<°°> at the end
of the iterative reduction process, with high probability. RESQUE-C will
return both copies in the ﬁnal result, assuming they are connected. On the
other hand, RESQUE-M will generally report only the node with a higher
correspondence score, for each pair of duplicated nodes.

2.4 Materials

We assess the performance of RESQUE based on the PPI networks of
Drosophila melanogaster, Homo sapiens, and Saccharomyces cerevisiae,
which are the three largest PPI networks that are currently available. We
obtained the PPI data from IsoBase (Park et (11., 2011), a recently published
database of functionally related proteins across PPI networks. IsoBase
consists of several PPI networks that belong to different species, along with
the homology scores between all pairs of proteins across species (measured
in terms of the BLAST bit-value similarity between the protein sequences).
The PPI networks in IsoBase have been constructed by integrating the PPI
data from three different public databases: DIP (Salwinski et (11., 2004),
BioGRID (Stark et (11., 2011), and HPRD (Keshava Prasad et (11., 2009).
Currently, the D. melanogaster PPI network in IsoBase contains 14098
proteins and 26 726 interactions, the H. sapiens network contains 22 369
proteins and 43 757 interactions, and the Saccharomyces cerevisiae network
includes 6659 proteins and 38 109 interactions. The query networks were
obtained by taking protein complexes of size 4725 in the D. melanogaster,
H. sapiens, and S. cerevisiae networks, as in Bruckner et (11. (2010), and
projecting each complex to the corresponding PPI network to ﬁnd its induced
subnetwork.

3 RESULTS

To investigate the performance of the proposed network querying
algorithm, we conducted a set of querying experiments based on
real PPI datasets as well as a number of simulated examples.

3.1 Querying performance on real PPI datasets

We ﬁrst evaluated the performance of RESQUE by performing
queries in the PPI networks of D. melanogaster, H. sapiens, and
Saccharomyces cerevisiae. We compared RESQUE against two
state-of—the-art network querying algorithms: Torque (Bruckner
e1 (11., 2010) and IsoRankN (Liao e1 (11., 2009). Torque adopts a
topology-free approach, in which it searches for a connected set
of proteins (in the target network) that are homologous to the
query proteins, without taking the topology of the query network
into account. We Chose to compare RESQUE with Torque, as

 

2132

112 ﬁlo's[Bruno[pJOJXO'sorwurJOJHrorqﬂ:duq urorj pap1201umoq

9103 ‘0g1sn8nv uo ::

RESQUE: Efficient Querying of Biological Networks

 

 

I MH: RESQUE-C I FC: RESQUE-C SP: RESQUE-C I MH: RESQUE-M Z FC: RESQUE-M SP: RESQUE-M
R MH: IsoRankN s FC: IsoRankN SP: IsoRankN K MH: Torque P31 FC: Torque SP: Torque
so 300 100
90
50 250 so 7
40 v 200 7 70
on V 4
>04 7 yv 60 o
30 7 "3‘ ‘ 150  50 :1
a: We a: 1
V ’3’: MN “’4 4O ’4
20 “.4 19.9, 100 ‘94 94
an as W; >% w a
>94 99 V 90.4 04 20 V 04
w 9% w so .< n . V o.
“3‘ {’3’} § , o: ’24 10 a v 3
o . L Lt: A  o . L‘ﬁ A L [A 0 A L {(31 of
dme/hsa dme/sce hsa/dme hsa/sce sce/dme sce/hsa

Fig. 3. Performance of different querying algorithms. For each query/target pair, we report the number of MH, the number of functionally coherent hits (FC)
and the number of speciﬁc hits (SP). (dme: D. melanogaster, hsa: H. sapiens and sce: S. cerevisiae)

400 l hi I
Feasi ecomp exes
 ii 
g E  a HIIS:RBQUE-M
300 g t a g MH:RE§QUE-M
’ N I N E Hits:lscRankN
250 l D I D MH:lsoRankN
a: r: . -.
’ ~ ‘ ~ L4 HIIs.Torque
200 g t g g MH.Torque
N N a
150 a N a N 3 V N
l N i N 5‘ N F N
¢~ 1N3 7N [N
100 g N v 3 N 3 5 N 9 N
. 131 111 11 as
so 5 N V N l N a g N a g N g N a
m N m m 1: m
0 11% at: 1:: 1:: 1:. 1:1
«@1650 66314;, vgoldwe Opal scalbioa 59%“60

Fig. 2. Performance of different querying algorithms. For each query/target
pair, we report the number of feasible hits the number of hits, and the number
of MH. (dme: D. melanogaster, hsa: H. sapiens and sce: S. cerevisiae)

Torque has been shown (Bruckner e1 (11., 2010) to outperform other
existing algorithms, such as QNet (Dost e1 (11., 2008). IsoRankN is a
popular multiple network alignment algorithm, which uses spectral
graph theory to evaluate the overall similarity between nodes across
different networks and uses a spectral Clustering scheme to ﬁnd
the best mapping between nodes. Although IsoRankN was mainly
developed for network alignment, it can also be used for network
querying (which can be viewed as a special case of network
alignment). As the SMRW model adopted by RESQUE bears
conceptual similarity to the spectral graph theory-based approach
used in IsoRankN, we decided to compare the querying performance
of the two algorithms.

Note that both RESQUE-C and Torque always report a set
of connected nodes as the query result. However, RESQUE-M
and IsoRankN report the set of best matching nodes that do not
necessarily induce a connected subgraph in the target network. For
a fair and meaningful comparison among the different querying
schemes, we deﬁne meaningful hits (MH) as the total number

hits that include a connected subgraph with at least NQ/2 nodes.
Considering that the goal of network querying is to identify the target
subnetwork that is most similar to the query, in terms of similarity
between the constituent nodes as well as the network topology, it
would make more sense to count such MH rather than counting
all hits regardless of their size and topology (e.g. connectivity).
Figure 2 shows the number of feasible hits (i.e. the total number
of query complexes of size 4—25 that were used in our querying
experiments), the number of hits and the number of MH, for all pairs
of query and target species. As we see from this result, almost all hits
returned by RESQUE-C and Torque are strongly connected, while
IsoRankN and RESQUE-M yield a larger number of hits that are
loosely connected. Figure 2 also shows that, on average, RESQUE-
C can identify MH for 51% query complexes, while RESQUE-M
returns MH for 39% complexes and both IsoRankN and Torque
for 35% complexes. Also note that Torque typically has a smaller
number of hits, as it can handle only a pre-speciﬁed number of indels
(i.e. insertions/deletions).

To evaluate the accuracy of the querying algorithms, we measured
the ‘functional coherence’ and ‘speciﬁcity’ of the querying results,
as in Bruckner e1 (11. (2010). Functional coherence measures the
relative number of hits with signiﬁcant functional coherence, which
is assessed based on the Gene Ontology (GO) (Ashburner e1 (11.,
2000) annotation. We used the GO TermFinder (Boyle e1 (11., 2004)
to compute the false discovery rate (FDR) corrected P-value of
the ﬁinctional coherence of the proteins in the retrieved target
subnetwork. The speciﬁcity is computed based on the relative
number of hits that signiﬁcantly overlap with a known protein
complex. We used a similar statistical procedure as in Bruckner
e1 (11. (2010) to measure the signiﬁcance of the overlap. Figure 3
shows the performance of the respective querying algorithms for
different pairs of query and target species, in terms of the number
of MH, the number of FC and the number of speciﬁc hits (SP). As
we can observe, all four algorithms have similar levels of speciﬁcity
(SP/MH > 0.8) and functional coherence (FC/MH > 0.9). However,
the results Clearly show that RESQUE-C yields the largest FC and
SP. Considering the high functional coherence of the hits reported
by RESQUE, the MH that do not overlap with known protein
complexes may correspond to novel complexes. RESQUE-C and

 

2133

112 ﬁlo's[Bruno[pJOJXO'sorwurJOJHrorqﬂ:duq uIOJJ pap1201umoq

9103 ‘0g1sn8nv uo ::

S.M.E.Sahraeian and B.-J.Yoon

 

RESQUE-C RESQUE-M

 

Denstty
Denstty

 

 

0 l 2 3 4 5 6 0 l 2 3 4 5 6
Time (seconds) Time (seconds)

IsoRankN TORQUE

 

Denstty
Denstty

 

 

0 20 40 60 80 100 0 50 100 150 200 250 300
Time (seconds) Time (seconds)

Fig. 4. Distribution of the amount of computational time that is needed by
different network querying algorithms to complete a network query

RESQUE-M, respectively reported 100 and 58 novel MH with
no overlap with known complexes, whereas IsoRank and Torque
reported 26 and 57 novel hits, respectively.

We also carried out a similar performance comparison between
RESQUE and a preliminary implementation of the reduction-
based network querying algorithm presented in Sahraeian and
Yoon (2011a), whose results can be found in the Supplementary
Section S2.

3.2 Computational complexity

The proposed network querying scheme is highly efﬁcient and has
only a polynomial computational complexity in terms of the size
of both networks. As shown in the Supplementary Section S3,
the computational complexity is 0(mN +zN +N3Q) for RESQUE-C

and 0(mN+zN+NZQlog(NQ)) for RESQUE-M, where N9 is the
number of query nodes, N is the number of nodes and m is the
number of edges in the target network and z is the number of
homologues across the two networks (i.e. number of non-zero
elements in similarity matrix H). In practice, H is highly sparse,
thus z<<NNQ. Considering that the computational complexity of
many existing network querying algorithms increases exponentially
with the size of the query network, RESQUE can provide a practical
solution for searching networks with large queries. Figure 4 shows
the distribution of the computational time needed by the respective
network querying algorithms for performing the queries described
in Section 3.1. As we can see in Figure 4, both RESQUE-C and
RESQUE-M need only a few seconds to complete a network query.
In contrast, IsoRankN often needs tens of seconds to complete a
single query and Torque also needs tens to hundreds of seconds for
many queries. In fact, for some large protein complexes, it took
even longer than an hour for Torque to obtain the querying result
(see Supplementary Figure S5).

3.3 Querying performance on simulated data

In order to evaluate the robustness of the proposed network querying
scheme to changes in the node similarity scores as well as the

 

 

 

 

 

 

 

 

 

 

100; _ . . , . , . . _ . _ _ _ _ _ _ _ _ _ __
No indels ________________________________ __
95— ““““““ ,g
90_ indel rate (V) = 10% "'"~r
$3 85- V — 4 7 ‘ ' ‘ ' ' ‘ ‘ ' ‘ ' ' ' ' ‘ ‘ ‘ ' ~ A ~ r . , g j 7 — 7‘
g; indel rate (V) = 20% ""'~ -1
«S 80:.- _ _ E _ _ _ _ _ _ _ _ __

5.. - — r _ , _ ' - ' ' — — ' ' ‘ - - - —-

5 ‘ ‘ ' - A — . . , _ V ' ‘ ‘ - —_

U _ . _ , _ . _ . _ . _ . _ , _ , g V _ -_

o T ' ‘ ' ~.
<1 75- “N-
65 _ I 7 I _ I F ‘ _ I F ' ‘ ‘ ~,
---RESQUE-M ~~~~~ ,3
--‘- IsoRankN
600 0.1 02 03 0.4 05

Sequence level perturbation: (r

Fig. 5. Performance on simulated data. The querying accuracy is measured
in terms of the average percentage of correctly predicted node matches, at
four different indel rates and different sequence perturbation levels

topology of the query network, we conducted further querying
experiments based on simulated examples. In these experiments,
we randomly extracted 100 connected subnetworks with general
topology from the S. cerevisiae PPI network, where the size of
each subnetwork ranged between 5 and 20. We applied two different
types of perturbations to each query network. First, we considered
a topological perturbation, where 11% of the query nodes were
randomly deleted and inserted. Second, we perturbed the BLAST
bit-value similarity scores by scaling the original similarity score by
a random number drawn from a Gaussian distribution with mean
[1:1 and variance (72.

Figure 5 shows the querying accuracy of different algorithms,
for four different indel rates (11:0, 10,20 and 30%) and various
sequence perturbation levels (UE[0,0.5]). As we can observe,
RESQUE is highly robust against changes in the node similarity
scores. Furthermore, Figure 5 also shows that RESQUE is
robust to topological changes that involve node deletions and
insertions. The results clearly demonstrate the effectiveness of the
SMRW model and the reduction-based approach in identifying
the true matching nodes across networks. In all cases, RESQUE
outperformed IsoRankN, in terms of both accuracy and robustness.
For comparison, we also performed similar experiments using
Torque (results not shown). These experiments showed that Torque
is almost invariant to changes in sequences similarity scores, which
is expected as Torque uses the similarity score just to determine
the presence (or absence) of homology between proteins. However,
Torque typically showed lower accuracy compared with RESQUE
and IsoRank, which was 88.8% for v=0%, 79.13% for v: 10%,
72.26% for v=20% and 60.75% for v=30%.

3.4 Example querying results for known pathways and
molecular complexes

Herein, we present several querying examples for known signaling
pathways and molecular complexes. Figure 6A illustrates the result
of querying the Mitogen-activated protein kinase (MAPK) signaling
pathway of S. cerevisiae (obtained from the KEGG database

 

2134

112 ﬁlo's[Bruno[pJOJXO'sorwurJOJHrorqﬂ:duq urorj papeo1umoq

9103 ‘0g1sn8nv uo ::

RESQUE: Efficient Querying of Biological Networks

 

 

Query (S. cerevisiae) Target (H. sapiens)

 

Query (D. melanogaster)

Target (S. cerevisiae)

 

Query (S. cerevisiae) Target (H. sapiens)

Fig. 6. Querying examples. (A) Querying the MAPK signaling pathway of S. cerevisiae in H. sapiens. Matching nodes are connected by dashed lines. (B)
Querying the proteasome complex of H. sapiens in S. cerevisiae. (C) Querying the prefoldin complex of S. cerevisiae in D. melanogaster. (D) Querying the
transcription factor TFIID complex of D. melanogaster in S. cerevisiae. (E) Querying the RNA polymerase complex of S. cerevisiae in H. sapiens

(Kanehisa and Goto, 2000)) in the PPI network of H. sapiens. The
querying result is in good agreement with the MAPK signaling
pathway of H. sapiens, and the identiﬁed subnetwork shows high
ﬁinctional coherence (P-value of 1.91 X10_11), measured based
on GO annotations. The next example in Figure 6B represents
the result of querying the proteasome complex of H. sapiens
in the S. cerevisiae PPI network. The querying result closely
matches the proteasome core complex in S. cerevisiae with high
GO enrichment (P-value of 3.65 X 10T42). The next three examples
shown in Figures 6C—E are three instances where RESQUE could
successﬁilly predict the matching subnetwork, whereas Torque was
not able to ﬁnd a hit for the given query. Figure 6C illustrates the
result of querying the prefoldin complex of S. cerevisiae in the
D. melanogaster PPI network. The matching proteins reported by
RESQUE belong to the same complex in D. melanogaster with
high GO enrichment (P-value of 2.87 X 10TH). Next, Figure 6D
shows the querying result of the transcription factor TFIID complex
of D. melanogaster in the S. cerevisiae PPI network. RESQUE
was able to identify the matching TFIID proteins with high GO
enrichment with a P-value of 1.41 X10_15. Finally, Figure 6E
illustrates the result of querying the RNA polymerase complex
of S. cerevisiae in the PPI network of H. sapiens, where the
retrieved subnetwork closely matched the query network and
contained proteins that are functionally coherent (P-value of 8.30 X
10T29). These examples clearly show that RESQUE can efﬁciently
search biological networks based on queries that have general
topology, effectively handle node insertions and deletions and yield
biologically signiﬁcant results. In Supplementary Tables Sl—S6 we

also report a list of novel querying results obtained by RESQUE-C
for queries for which IsoRankN and Tourque failed to identify MH.

4 CONCLUSION

In this article, we proposed RESQUE, a novel network
querying algorithm that can efﬁciently query biological pathways
and molecular complexes in large-scale biological networks.
The algorithm uses a SMRW model to estimate probabilistic
correspondence scores between nodes across different networks,
which are used to identify the best match to the given query
according to the maximum expected accuracy principle. RESQUE
adopts an iterative network reduction and score re-estimation
technique to improve the expected accuracy of the ﬁnal querying
result. As discussed in this article, RESQUE does not restrict the
topology of the query network, and it can handle paths, trees and
loopy graphs. The algorithm supports both connected and partially
connected query networks. In the extreme case, RESQUE can also be
used with a query pathway (or complex) with an unknown topology,
in which case we can simply treat the query as a collection of isolated
nodes. In this case, the steady-state distribution of the random walk
on the query network, JTQ, will be uniform over all the query nodes.
Furthermore, RESQUE can effectively deal with node insertions
and deletions at arbitrary locations. Despite its generality, RESQUE
has very low computational complexity, which allows us to use the
algorithm for querying large pathways/complexes in genome-scale
networks. Experimental results based on real and synthetic examples

 

2135

112 ﬁlo's[Bruno[pJOJXO'sorwurJOJHrorqﬂ:duq urorj pap1201umoq

9103 ‘0g1sn8nv uo ::

S.M.E.Sahraeian and B.-J.Yoon

 

show that RESQUE outperforms other popular algorithms, in terms
of speed, accuracy and robustness.

Although we have not explored the application of RESQUE to
directed networks, it is worth noting that such extension would be
relatively straightforward. In fact, in order to incorporate the edge
directions when estimating the node correspondence scores, we only
have to require the SMRW to follow these directions during the
random walk (i.e. by choosing the next node among the neighbors
that are connected through outgoing edges).

ACKNOWLEDGMENTS

The authors thank the authors of Bruckner et (11. (2010) for providing
the source code of Torque and the data ﬁles used in their article.

Funding: This work was supported in part by the National Science
Foundation, through NSF Award CCF-1149544.

Conﬂict of Interest: none declared.

REFERENCES

Ashburner,M. et al. (2000) Gene ontology: tool for the uniﬁcation of biology. the gene
ontology consortium. Nat. Genet, 25, 25729.

Ay,F. et al. (2011) SubMAP: aligning metabolic pathways with subnetwork mappings.
J. Comput. Biol., 18, 2197235.

Barabasi,A.L. and Oltvai,Z.N. (2004) Network biology: understanding the cell’s
functional organization. Nat. Rev. Genet, 5, 1017113.

B1in,G. et al. (2010a) GraMoFoNe: a Cytoscape plugin for querying motifs without
topology in ProteinEProtein Interactions networks. In: Al-Mubaid, H. (ed)
2nd International Conference on Bioinformatics and Computational Biology
(BICoB’IO), International Society for Computers and their Applications (ISCA),
Honolulu, Etats-Unis, pp. 3843.

B1in,G. et al. (2010b) Querying graphs in proteiniprotein interactions networks
using feedback vertex set. IEEE/ACM Trans. Comput. Biol. Bioinform., 7,
6287635.

Boyle,E.I. et al. (2004) GO::TermFinderEopen source software for accessing Gene
Ontology information and ﬁnding signiﬁcantly enriched Gene Ontology terms
associated with a list of genes. Bioinformatics, 20, 371a3715.

Bruckner,S. et al. (2010) Topology-free querying of protein interaction networks.
J. Comput. Biol., 17, 2377252.

Cusick,M.E. etal. (2005) Interactome: gateway into systems biology. Hum. Mol. Genet,
14 Spec No. 2, R1717R181.

Dost,B. et al. (2008) QNet: Atool for querying protein interaction networks. J. Comput.
Biol., 15, 9137925.

Do,C.B. et al. (2005) ProbCons: Probabilistic consistency-based multiple sequence
alignment. Genome Res, 15, 33a340.

Durand,P. et al. (2006) GenoLink: a graph-based querying and browsing system for
investigating the function of genes and proteins. BMC Bioinformatics, 7, 21.

Ferro,A. et al. (2007) NetMatch: a Cytoscape plugin for searching biological networks.
Bioinformatics, 23, 91 @91 2.

Ferraro,N. et al. (2011) Asymmetric comparison and querying of biological networks.
IEEHACM Trans. Comput. Biol. Bioinform., 8, 873889.

Fionda,V. et al. (2008) Proteiniprotein interaction network querying by a ‘focus and
zoom’ approach. In: Elloumi, M., Kung, J., Linial, M., Murphy, R.F., Schneider,
K. and Toma, C. (eds) Bioinformatics Research and Development, vol. 13 of
Communications in Computer and Information Science, Springer Berlin Heidelberg,
pp. 317346.

Fionda,V. and Palopoli,L. (2011) Biological network querying techniques: analysis and
comparison. J. Comput. Biol., 18, 5957625.

Ge,H. (2000) UPA, a universal protein array system for quantitative detection of protein7
protein, proteinEDNA, proteinERNA and protein-ligand interactions. Nucleic Acids
Res, 28, e3.

Gulsoy,G and Kahveci,T. (2011) RINQ: Reference-based Indexing for Network
Queries. Bioinformatics, 27, i1497i158.

Ho,Y. et al. (2002) Systematic identiﬁcation of protein complexes in Saccltaromyces
cerevisiae by mass spectrometry. Nature, 415, 1807183.

Huang,M. et al. (2008) Mining physical proteiniprotein interactions from the literature.
Genome Biol., 9(Suppl 2), $12.

Kanehisa,M. and Goto,S. (2000) KEGG: kyoto encyclopedia of genes and genomes.
Nucleic Acids Res, 28, 27730.

Kelley,B.P. et al. (2004) PathBLAST: a tool for alignment of protein interaction
networks. Nucleic Acids Res, 32, W837W88.

Keshava Prasad,T.S. et al. (2009) Human Protein Reference Databas672009 update.
Nucleic Acids Res, 37, D7677D772.

Kuhn,H.W. (1955) The Hungarian method for the assignment problem. Naval Res. Log.
Quar, 2, 83797.

Liao,C.S. et al. (2009) IsoRankN: spectral methods for global alignment of multiple
protein networks. Bioinformatics, 25, i2537i258.

Mongiovi,M. et al. (2010) SIGMA: a set-cover—based inexact graph matching algorithm.
J. Bioinform. Comput. Biol., 8, 1997218.

Park,D. et al. (2011) IsoBase: a database of functionally related proteins across PPI
networks. Nucleic Acids Res, 39, 2957300.

Pinter,R. et al. (2005) Alignment of metabolic pathways. Bioinformatics, 21, 34017
3408.

Qian,X. et al. (2009) Querying pathways in protein interaction networks based on hidden
Markov models. J. Comput. Biol., 16, 1457157.

Sahraeian,S.M. and Yoon,B.J. (2010) PicXAA' greedy probabilistic construction of
maximum expected accuracy alignment of multiple sequences. Nucleic Acids Res,
38, 49174928.

Sahraeian,S. and Yoon,B.-J. (2011a) Fast network querying algorithm for searching
large-scale biological networks. In: Acoustics, Speech and Signal Processing
(ICASSP), 20] I IEEE International Conference on, pp. 6008 76011.

Sahraeian,S. and Yoon,B.J. (2011b) A novel low-complexity hmm similarity measure.
Signal Processing Letters, IEEE, 18, 87790.

Salwinski,L. et al. (2004) The database of interacting proteins: 2004 update. Nucleic
Acids Res, 32, D449ED451.

Sharan,R. and Ideker,T. (2006) Modeling cellular machinery through biological network
comparison. Nat. Biotechnol., 24, 427433.

Shlomi,T. et al. (2006) QPath: a method for querying pathways in a proteiniprotein
interaction network. BM C Bioinformatics, 7.

Singh,R. et al. (2008) Global alignment of multiple protein interaction networks with
application to functional orthology detection. Proc. Natl. Acad. Sci. USA, 105,
12763712768.

Stark,C. et al. (2011) The BioGRID Interaction Database: 2011 update. Nucleic Acids
Res, 39, 6987704.

Tian,Y. et al. (2007) SAGA: a subgraph matching tool for biological graphs.
Bioinformatics, 23, 2327239.

Uetz,P. et al. (2000) A comprehensive analysis of proteiniprotein interactions in
Saccltaromyces cerevisiae. Nature, 403, 623$27.

Vishwanathan,S. et al. (2010) Graph Kernels. J. Machine Learn. Res, 11, 120171242.

Wemicke,S. and Rasche,F. (2007) Simple and fast alignment of metabolic pathways by
exploiting local diversity. Bioinformatics, 23, 197871985.

Yang,Q. and Sze,S. (2007) Path matching and graph matching in biological networks.
J. Comput. Biol., 14, 56767.

Yoon,B.J. et al. (2012) Comparative analysis of biological networks: hidden markov
model and markov chain-based approach. Signal Process. Mag., IEEE, 29,
22734.

Zhang,A. (2009) Protein Interaction Networks: Computational Analysis 1st edn,
Cambridge University Press, New York, NY, USA.

 

2136

112 ﬁlo's[BrunoprOJXO'sorwurJOJHrorq”:duq urorj papeo1umoq

9103 ‘0g1sn8nv uo ::

