Vol. 28 E005 2012, pages i409—i415
doi:10. 1 093/bioinformatics/bt3386

 

Inferring duplications, losses, transfers and incomplete
lineage sorting with nonbinary species trees
Maureen Stolzer1’*, Han Lail, Minli Xu2, Deepa Sathaye3, Benjamin Vernot4 and

Dannie Durandla3

1Department of Biological Sciences, 2Lane Center for Computational Biology, 3Department of Computer Science,
Carnegie Mellon University, Pittsburgh, PA 15213, USA and 4Department of Genome Sciences, University of

Washington, Seattle, WA 98195, USA

 

ABSTRACT

Motivation: Gene duplication (D), transfer (T), loss (L) and incomplete
lineage sorting (l) are crucial to the evolution of gene families and
the emergence of novel functions.The history of these events can
be inferred via comparison of gene and species trees, a process
called reconciliation, yet current reconciliation algorithms model only
a subset of these evolutionary processes.

Results: We present an algorithm to reconcile a binary gene tree
with a nonbinary species tree under a DTLI parsimony criterion. This
is the first reconciliation algorithm to capture all four evolutionary
processes driving tree incongruence and the first to reconcile non-
binary species trees with a transfer model. Our algorithm infers all
optimal solutions and reports complete, temporally feasible event
histories, giving the gene and species lineages in which each event
occurred. It is fixed-parameter tractable, with polytime complexity
when the maximum species outdegree is fixed. Application of our
algorithms to prokaryotic and eukaryotic data show that use of an
incomplete event model has substantial impact on the events inferred
and resulting biological conclusions.

Availability: Our algorithms have been implemented in NOTUNG,
a freely available phylogenetic reconciliation software package,
available at http://www.cs.cmu.edu/~durand/Notung.

Contact: mstolzer@andrew.cmu.edu

1 INTRODUCTION

The phylogeny of a gene family evolving by vertical descent
will agree with the associated species tree. Gene duplication,
gene loss, horizontal gene transfer (HGT) or incomplete lineage
sorting (ILS) can result in a gene tree that differs from the
species tree (Maddison, 1997). The history of such events can be
inferred through topological comparison of gene and species trees,
a process called ‘reconciliation’. Reconciliation encompasses two
related problems: event inference and tree inference. Given rooted
gene and species trees, a mapping from extant genes to extant
species, and an event model, the goal of ‘event inference’ is to
infer the association between ancestral genes and species and the
optimal event history with respect to a combinatorial or probabilistic
optimization criterion. A complete solution must include the speciﬁc
events and the gene and species lineages in which those events
occurred. Given a set of gene trees, ‘tree inference’ seeks the species
tree that optimizes the combined events resulting from reconciliation
with each gene tree in the input set.

Here, we address the event inference problem for a model
that captures all four evolutionary processes contributing to gene
tree incongruence. Whole genome sequencing data are revealing

 

*To whom correspondence should be addressed.

an ever growing number of cases where all four processes are
active (e.g., Andersson, 2009; Serres et al., 2009; Zhaxybayeva and
Doolittle, 2011), leading to calls for algorithms that model multiple
evolutionary processes (Degnan and Rosenberg, 2009; Edwards,
2009). Algorithms lacking a model of incongruence due to ILS
will overestimate the number of duplications and/or transfers. For
example, a recent analysis, based on a model that did not consider
ILS, reported an inexplicable but dramatic increase in duplications in
recently sequenced mammalian genomes (Milinkovitch et al., 2010).
For large-scale analysis of multigenome phylogenetic datasets,
reconciliation algorithms that allow ILS to be distinguished from
other sources of incongruence are essential.

1.1 Related work

Gene tree incongruence has been considered from two perspectives.
Multispecies coalescent models focus on ILS as a source of
incongruence (reviewed in Degnan and Rosenberg, 2009). The basic
assumption underlying this work is that gene tree incongruence
arises from ILS due to genetic drift, although some methods also
take hybridization and/or recombination into account (reviewed in
Degnan and Rosenberg 2009; Edwards 2009). The multispecies
coalescent explicitly relates the probability of an incongruent gene
tree to the time between species divergences and the effective
size of the ancestral population. In the context of tree inference,
these parameters can be inferred from a collection of gene trees.
Event inference, however, requires prior estimates of population
parameters because only one tree is under consideration.

In contrast, reconciliation focuses on incongruence that arises
from processes that change the number of loci in a gene family;
i.e. duplication, loss and transfer. Most event inference algorithms
consider either gene duplication or HGT (Doyon et al., 2011;
Nakhleh, 2010; Nakhleh et al., 2009), but not both. Exact algorithms
with exponential time complexity have been presented for the
duplication-transfer (DT) (Toﬁgh et al., 2011) and duplication-
transfer-loss (DTL) models (David and Alm, 2011), under a
parsimony criterion. Event inference with transfers is NP-complete
(Hallett et al., 2004), but can be solved in polynomial time under
a restricted model where only transfers between contemporaneous
species are considered. This model (reviewed in Doyon et al., 2011;
Huson and Scornavacca, 2011) requires estimates of speciation
times, which are frequently not known. In addition, algorithms for
this restricted model may fail to recognize transfers if they involve
a taxon missing from the dataset (Huson and Scornavacca, 2011;
Nakhleh, 2010).

Reconciliation implicitly assumes that inter-speciation times are
sufﬁciently long that genetic drift and incomplete lineage sorting
may be safely excluded from consideration. This assumption breaks
down when the species tree contains polytomies or very short

 

© The Author(s) 2012. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0), which
permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /3.Io's[Bumo[pJOJXO'sorJBHJJOJurorqH:duq 11101} popcolumoq

91oz ‘Og anﬁnv uo ::

M.Stolzer et al.

 

branches. In these situations, allelic variation can survive multiple
speciation events, leading to gene trees with branching patterns that
differ from the species tree. Such cases are increasingly common due
to increased sequencing of closely related species. Methods that do
not consider ILS will incorrectly interpret incongruence arising from
ILS as evidence of duplication or transfer.

To avoid this problem, algorithms that can distinguish between
ILS and other events are needed. In fact, one parsimony criterion
that considers ILS has been proposed: minimization of the number
of extra gene lineages on a species branch due to Deep Coalescence
(MDC) has been used as a criterion for tree inference (Maddison,
1997; Maddison and Knowles, 2006; Maddison and Maddison,
2011; Page, 1998; Than and Nakhleh, 2009). However, the MDC
criterion assumes ‘all’ incongruence is due to ILS. MDC is not
a suitable basis for event inference because it cannot distinguish
between extra lineages arising from ILS and those arising from
duplication or transfer (Zhang, 2011). Two approaches to the event
inference problem combine ILS with gene duplication and loss in
a single model (DLI). In earlier work, we presented the ﬁrst event
inference algorithm for the DLI model under a parsimony criterion
(Vernot et al., 2008). An event inference algorithm for a DLI model
based on the multispecies coalescent relates the probability of ILS
to branch lengths and population sizes explicitly (Rasmussen and
Kellis, 2012). These models have different strengths. The model
based on the coalescent captures more detail, but is limited to the
small number of datasets for which estimates of ancestral population
sizes and speciation times are available. To our knowledge, no
reconciliation algorithms that consider ILS and transfer are in
existence.

1.2 Our contributions

We present the ﬁrst reconciliation algorithm for a DTLI event model
that captures all four major causes of gene tree incongruence. Our
algorithm is also the ﬁrst to allow transfers in reconciliation with a
non-binary species tree. Our algorithm is based on a simple, elegant
model that recognizes ILS as a source of incongruence, but avoids
the computational overhead of a ﬁill coalescent model and does not
require estimates of ancestral population sizes and speciation times.

Our parsimony-based algorithm reconciles a binary gene tree with
a non-binary species tree and distinguishes between incongruence
that could only arise through duplication or HGT and incongruence
that can be more parsimoniously explained by ILS. Our algorithm
places no restriction on speciation times and reports all optimal
reconciliations that are temporally feasible. For a ﬁxed k*, the time
complexity of our algorithm is 0(hSIVGIIVSIZ) time, where k* is
the out-degree of the largest polytomy in the species tree, hs is
the height of the species tree and |VG| and |VS| are the number of
vertices in the gene and species trees, respectively. Given a binary
species tree, our algorithm infers histories under the DTL model.

Both the DTL and DTLI algorithms have been implemented in
Java and integrated in NOTUNG, a freely available software package
for phylogenetic reconciliation. Our software offers a unique and
comprehensive combination of functions: it includes losses in the
optimization criterion, does not require estimates of speciation
times and reports all optimal event histories. Reported solutions are
complete, temporally feasible event histories, giving the gene and
species lineages in which each event occurred.

To demonstrate the advantages of a ﬁill-DTLI model on real
data, we applied our algorithm to two phylogenetic datasets that
have been used in previous analyses of HGT and phylogenetic

incongruence (Delsuc et al., 2005; Rokas et al., 2003; Zhaxybayeva
et al., 2009). First, if no incongruent trees have patterns that could
be most parsimoniously explained as ILS, then models with and
without ILS should give same results. In fact, we observed just
the opposite. The models that did not correct for ILS substantially
overestimated duplications and transfers. A recent study using a
quartet decomposition approach reported several highways of gene
transfer between speciﬁc pairs of cyanobacterial species (Bansal
et al., 2011). We observed the same highways using the DTL
algorithm. Only one of these highways remained when using the
DTLI algorithm. Second, because many published algorithms do
not include losses in the optimization criterion (e. g., Berglund et al.,
2006; Ma et al., 2000; Toﬁgh et al., 2011; Zmasek and Eddy, 2001),
we compared models with losses (DTLI, DTL) and without losses
(DTI, DT). Explicit inclusion of losses in the optimization function
resulted in substantial changes to the inferred ratio of duplications to
transfers, suggesting that the practice of post hoc inference of losses
should be revisited.

Finally, when the event model includes transfers, the minimum
cost event history is not, in general, unique. All algorithms cited
above report only one of possibly many optimal solutions. We
applied our algorithm to assess the extent to which multiple optimal
solutions occur. We discovered that multiple optimal solutions are
a frequent occurrence, especially in datasets where transfer is the
dominant process. In the analysis reported here, 20% of 1128
cyanobacterial trees had multiple optimal solutions with inconsistent
event histories. In other words, for one in ﬁve trees, the arbitrary
selection of a single optimal solution could lead to conclusions
that might not be supported by other optimal solutions. The results
presented here are exciting and important, as they demonstrate that
degeneracy and the applied event model have substantial impact
on the histories inferred and, hence, on the resulting biological
conclusions.

1.3 Notation

Given a tree, Ti=(V,-,E,-), L(T,-) designates the leaf set of Ti, and
,0,- designates its root. We use g6 VG and SE V3 to represent genes
and species, respectively. Ti(v) is the subtree of T,- rooted at V6 Vi.
C (v) and P(v) denote the children and the parent of v, respectively,
with cjeC(v) denoting the jth child of v. We adopt the notation
that if (u,v)eE,-, P(v)=u. Given nodes u,ve Vi, if u is on the path
from v to ,0, then u is an ancestor of v, designated ugiv, and v is a
descendant of u, designated v3,- u. If v 9f,- u and 14%, v, u and v are
‘incomparable’, designated ugly.

2 ALGORITHMS

Here, we propose a reconciliation model based on DTL parsimony
that distinguishes between regions of the species tree where ILS
is likely, and those where only gene duplication and transfer need
be considered. These differences are speciﬁed using a non-binary
species tree: at binary nodes, we assume that ILS is so rare that
incongruence is always evidence of gene duplication or transfer. At
polytomies, ILS is considered, and gene duplication and transfer
are invoked only if topological disagreement cannot be explained
by ILS. This model can be invoked for both non-binary species
trees and for binary species trees with short branches where ILS is
suspected: even when the binary branching order of the species tree
is known, the user can collapse edges in the species tree to indicate in
which lineages ILS should be considered as an alternate hypothesis.

 

i410

112 /3.Io's[BumoIpJOJXO'sorJBHJJOJurorq”:duq 11101} popcolumoq

91oz ‘Og anﬁnv uo ::

Nonbinary species trees

 

 

3

 

Fig. 1. Reconciliation of binary gene trees with a non-binary species tree under our DTLI model. (A) A binary gene tree that is consistent with a binary
resolution of the species tree. The divergences at X] and x2 are consistent with ILS. (B) A gene tree that does not correspond to any binary resolution of the
species tree. Node y; is not consistent with deep coalescence: the embedding requires two descendants of y; on the branch from a to f , a Violation of model
constraints. This can only be explained by persistent polymorphism (light and dark dots) on a long branch. DTLI reconciliation of the gene tree in (B) with
the non-binary Ts results in two optimal solutions for suitable choices of 6, A and r: (C) one duplication followed by three losses and (D) one transfer and
a loss. Duplications are represented by a Filled boxes, speciations by open circles, transfers by open boxes and arrows, and losses by dashed lines and ﬁlled
half-circles. Each dot represents an allele of a single individual, with the dot’s color indicting the type of allele. Rows represent generations of individuals

A key aspect of our model is that even when ILS is allowed, it
is not possible to explain all incongruence in terms of ILS, even in
a uniquely labeled gene tree. Let g be a node in TGand let SE VS
be the associated node in the species tree. We wish to determine
whether the divergence at g is consistent with a co-divergence at
s or whether it can only be explained by events that give rise to a
new locus; i.e. duplication and transfer. If the branch point at g arose
through a co-divergence with s, then each species lineage descending
from s should inherit at most one descendant of g. The presence of
more than one descendant of g indicates that the divergence at g
must be due to acquisition of an additional locus by duplication or
transfer. An operational test for detecting more than one descendant
on a branch results from the observation that any branching pattern
that is consistent with a binary resolution of the polytomy can be
explained by lineage sorting.

For example, the gene tree in Figure 1a represents a valid, binary
resolution of the species tree, consistent with ILS. The embedding of
the gene tree in the species tree shows that each species tree lineage
inherits exactly one descendant of x1 and at most one descendant
of x2. Both x1 and x2 can be interpreted as deep coalescences.
In contrast, there is no binary resolution of the species tree that
corresponds to the gene tree in Figure 1b. The embedding of this
gene tree requires two descendants of y; in the lineage from e
to f, a violation of model constraints. The only way to explain
two descendants of y; on the branch from e to f is by inferring
a duplication (Fig. 1c) or a transfer (Fig. 1d).

Before introducing our algorithm, we discuss the meaning of
a polytomy in our model. A species polytomy can be considered
from two perspectives: a ‘hard’ polytomy represents simultaneous
divergence of three or more populations. A ‘soft’ polytomy
represents a binary branching process in which the branching order
is unknown. Our model assumes that a polytomy represents rapid or
simultaneous species divergence. However, it also admits a useﬁil
interpretation for soft polytomies. A soft polytomy can be viewed
as a set of hypotheses, namely the set of binary resolutions of the
polytomy. Our model offers a conservative stance: events are only
inferred when the topology of the gene tree does not correspond
to any of these hypotheses. Note that in some cases, the hard and
soft polytomy models are closely linked: the branching order of
species that arose through multiple speciations in rapid successions
(Ebersberger et al., 2007; Pollard et al., 2006) is often difﬁcult to
resolve.

2.1 The DTLI algorithm

In our DTLI model, divergence in a gene tree arises through one of
four events: duplication (D), transfer (’7'), speciation (S) and deep
coalescence (C). The score of a reconciliation under this model is
the weighted sum of the number of duplications (ND), losses (N 5),
and transfers (NT):

n=6~ND+A-N£+I-NT, (1)

where 6, A and 1', respectively, are the costs of duplication, loss and
transfer. Speciation and deep coalescence represent co-divergence
with binary nodes and polytomies, respectively, in the species tree
and have zero cost. We refer to the cost of event 6 E {D, 7', S,C} as
K(€).

A rooted, binary gene tree TG; a rooted, arbitrary species tree
TS; a mapping ML :L(VG) —> L(VS) from contemporary genes to the
species from which they were sampled and a set of permitted events
are given as input. The reconciliation of T0 with TS results in an
annotated tree, RG3 =(VG,EG), in which every internal node, g, is
annotated with the species SE VS that contained gene g, designated
M (g), and the event that caused the divergence at g, designated 8 (g).
In addition, every geVG\{,0G} is annotated with £(g), the genes
lost on the edge from P(g) to g. Each loss is labeled with the species
in which the loss occurred. We say (u,v)eEG is a transfer edge if
804) = 7' and M(u)§SM(v) and deﬁne A(RGS) C EG to be the set of
transfer edges in RG3. If (u, v) EA(RGS), a transfer occurred from
donor species d =M (u) to recipient species r=M(v).

Here, we present the DTLI event inference problem under the
constraint that a deep coalescent is inferred at g if each lineage
descending from M (g) inherits at most one descendant of g:

The DTLI event inference problem

Input: Arooted non-binary species tree, TS; a rooted, binary

gene tree, TG; the leaf mapping, ML.

Output: All reconciliation histories RG3 that minimize It

and satisfy the model constraints.
Algorithms for the DTLI event model must address several issues
that do not arise when only a subset of the events is considered: (1)
there may be more than one combination of duplications, transfers
and losses that gives rise to the same pattern of tree incongruence (i.e.
there may be more than one optimal solution, RG3). (2) The value
of M (g) is not uniquely determined by the children of g and multiple
possible values of M (g) must be considered because transfers cause

 

i411

112 /3.Io's[BumoIpJOJXO'sorJBHJJOJurorq”:duq 11101} papeolumoq

91oz ‘0g1sn8nv uo ::

M.Stolzer et al.

 

genes to jump to distant locations in the species tree. (3) An optimal
reconciliation at the root may entail a suboptimal reconciliation at
an internal node, g. Inferring a more costly event at g may change
the values of M (-) in nodes ancestral to g such that the overall score
is reduced. Therefore, the values of M (g) and 8 (g) required for an
optimal solution cannot be determined using only local information,
and more than one optimal solution may result.

To accommodate these requirements, it is necessary to enumerate
all possible assignments of M (g) and 8 (g), for each node g e VG. At
each g, the associated information is stored in two tables, [Cg and
Hg. For each candidate assignments 6 VS, the score that minimizes
the cost of reconciling TG(g) with Ts(s), is stored in ICg[s]. The
associated events and other information needed to reconstruct the
history at g are stored in Hg[s].

Optimal reconciliations are calculated by a two-pass algorithm.
The ﬁrst pass (Algorithm 2.1 .1) is a dynamic program that populates
each [Cg and Hg in a post-order traversal of TG .’It returns the optimal
reconciliation score, the values of M (pg) and W(pg) corresponding
to that score and the number of optimal histories. The second pass
(Supplementary Algorithm S101) is a traceback algorithm that
reads information from each [Cg to construct an optimal solution.
Each optimal history is generated by traversing, in pre-order of
T0, each unique path that leads to the optimal label(s) in ICpG.
Appropriate values of M (g) and 8(g) at each node g are selected
from ICg. Each candidate optimal history is then tested for temporal
feasibility, as described in the next section. Only those histories that
are temporally feasible are reported.

A key calculation in the dynamic program of firstPass is
determination of the possible events at g for a given candidate
species assignment, M (g) =s. These events, in turn, depend on
M(c1)= s1 and M(c2) = s2, where c1,c2 e C(g). The basis for
determining candidate events that are consistent with s, s1 and s2 is
the following observation: if a duplication occurred at g, then the
species that inherit the descendants of c1 and the species that inherit
the descendants of c2 will not be disjoint.

We deﬁne a test, based on this observation, for distinguishing
duplication from other events:

6 =D if 1V(c1)ﬂ1V(c2) 72m, (2)

where [V (g) is the set of species that vertically inherit descendants
of P(g). If 1V(c1) and 1V(c2) are disjoint, than one of the other
three events (S,C or’T) must have occurred. These events can
be distinguished from one another using 1V(g), M(g) and M(c1)
and M(c2), as seen in costCalc in Algorithm 2.1.1. Note that
Equation (2) is different from the stande least common ancestor
(lca) test; however, when M(g)=s is binary, the descendants of s
are partitioned into two sets, the left and right descendants of s, if
there is no duplication. Therefore, Equation 2 is equivalent to lca
reconciliation (Vernot et al., 2008).

Because 1V only consists of elements that were vertically inherited,
we must exclude transfer edges in the calculation. For this purpose,
we deﬁne

R(g)= {h€L(TG(g))|E|Z 3(P(Z).Z) €A(RGs)/\hEGZ <Gg}.

the set of leaves of TG (g) that were acquired through HGT. Formally,
we deﬁne N : VG —> V;— to be a mapping from VG to sets of nodes

in VS, where V;— is the powerset of VS. [V (g) is the set of children
of M (P(g)) such that [V (g) = {M (g)} if M (P(g)) 6 L(Ts); Otherwise,
N (g):

{Xlxe C(M(P(g)))3 3y €L(g)\73(g).x 2511400}- (3)

One more piece of machinery is needed: to determine [V (g),
we must know the children of M (P(g)), but we do not have that
information until we visit P(g). Therefore, we deﬁne a similar set
mapping, W: VG —> V;, to aid in the calculation of 1V. W(g) is the
set of children of M(g) that vertically inherit a descendant of g.
Formally, if M(g) EL(TS), W(g) = {M(g)}; otherwise, W(g) =

{XIXEC(M(g))33y€L(g)\R(g).xisM0)}- (4)

Algorithm 2.1.1 traverses TG in post-order calling calcCost
at each geVg. The challenge in the DTLI model is to determine
the sets of species that inherit the descendants of c1 and c2 when
M(g) = sis a polytomy; i.e. how to calculate ﬁ(c1) and 1V(c2). When
s is binary, the descendants of s are easily partitioned into two sets;
when s is a polytomy, all possible ways to partition the descendants
must be considered. Each child of g can be retained in any subset
of the children of s, ranging from size 1 to |C(s)| — 1. Our DTLI
algorithm addresses this by considering all ways of partitioning C (s)
into two non-empty subsets.

At each internal node g, the algorithm assesses all possible
values for M (g) and W(g) by looping through all (s1,s2)e VS >< V3
and all (W1,W2)EC(s1)+ >< C(s2)+. Considering all power sets
corresponds to considering all the ways to partition C (s1) and C (s2).
The optimal event and child mapping under s and W is determined
by minimizing the cost of the candidate solution at g:

K(e)+lcc,[s1][VV1]+ICc.[s2][vT/2]+A-(n£(c1>+n£(c2>). (5)

where n£(c,-), the number of losses on edge (g,c,-), is calculated
using the loss heuristic in (Vernot et al., 2008). Note that for each
s, the local cost and history tables are also indexed by all possible
values of W, which are in C (s)+.

2.2 Temporal infeasibility

Because the donor and recipient species of any transfer must have co-
existed, each transfer implies a temporal constraint. A reconciliation
is temporally feasible if an ordering of species exists that satisﬁes the
constraints of all inferred transfers. Because reconciliations inferred
by Algorithm 2.1.1 are not guaranteed to be feasible, each candidate
optimal solution is tested for feasibility post hoc.

To determine whether a reconciliation RG3 is temporally feasible,
we construct a directed timing graph G; =(Vt,Et) that encodes all
temporal constraints on species in T3. Only species that are the
donor, d, or recipient, r, of a transfer edge in A(RGS) must be
considered. Thus, the vertex set is deﬁned as V; = {V6 V3 |E|(g,h) E
A(TG)3v=M(g)Vv=M(h)}.

The edges in E; represent three types of temporal constraints:

1. If species Si is an ancestor of species sj in T3, then sl- predates
Sjl for every (Si,Sj) in V; x V), add (st-J!) to E; if S) 33 Sj.

2. Let (g, h) and (g’,h’) be transfers in A(RGS), such that g 3G g’.
Then d =M (g) and r =M (h) must have occurred no later than
both d’=M(g’) and r’=M(h’). We add (P(d),d’), (P(d),r’),
(P(r),d’) and (P(r),r’) to E).

3. Given a transfer (g, h) e A(RGS), species M(g) and M(h) must
be contemporaneous. Furthermore, any species that predates
M (g) must also predate M (h) and vice versa. For every
(si,sj) e V; x V), add (si,sj) to E; if Elsk e V; such that Si 33 sk
and sk and sj are the donor and recipient, or vice versa, of
some transfer (g,h) e A(RGS).

 

i412

112 /3.Io's[BumoIpJOJXO'sorJBHJJOJurorq”:duq 11101} papeolumoq

91oz ‘0g1sn8nv uo ::

Nonbinary species trees

 

 

Algorithm 2.1.1 DTLI reconciliation

 

Input: T0; T5; ML
Output: [€3,713 VgEVG; JT

firstPass(TG,Ts.ML) {
1 for each geVG\L(VG) in postorder {

2 for each (s1,s2)EVs><Vs {

3 for each (W1,W2)EC(s1)+><C(s2)+ {
4 costCalc(g,s1,s2,W1,W2)

5 }

6 }

7 }

8 JT egg/SHOE [s]}

9 (s*,W*)<— argAmin {ICpG[s][W]}

seVS,WeC(s)+
1 0 }

costCalc(g,s1,s2,W1,W2) {

11 // consider M(g)=lca(s1,s2), W(g)=N1UN2

12 N1 <—climb(lca(s1,s2),I/l71); N2 <—climb(lca(s1,s2),W2)
13 if (Ninﬁzyén) { e<—D } // Duplication
14 else if (slgssz) { é<—8 } // Speciation
15 else { e<—C } // Deep coalescence
16 table(g,lca(.s1,.s2),(1V1Uﬁz),e,s1,.s2,W1,W2,1V1,1V2)

17 if (slgszv(s1=s2/\W1ﬂW2=M)) { // Transfer

18 // consider HGT s1 to s2, M(g)=s1, 17175217171
19 table(g,.s1,W1,T,.s1,s2,W1,W2,W1,W2)

20 // consider HGT s2 to s1, M(g)=s2, 17175217172
21 table(g,s2,Wz,T,s1,s2,W1,W2,W1,W2)

22 }

23 }

climb(s,W) {

24 select XEW at random
25 if (x=s\/P(x)=s) { return W }
26 while (P(x)7és) {

27 x<—P(x); N<—{x}
28 }

29 return [)7

30 }

table(g,s,075,6,“,s2,W1,W2,§1,1/\72) { A
31 Cost<—K(€)+Kcllfil[Wil+ICc2[sleWzl+K-(n£(€1)+”£(02))
32 if cost<ICg[s][Ws] {

33 Icg[s][ﬁA/s]<— cost A A A A

34 Hg[s][Ws]<—(€,.Y1,S2,W1;AW2,N1,N2)

35 } else if cost=ICA§[s]A[AWsA]A {A A
36 enqueue (e,s1,s2,W1,W2,N1,N2) to Hg[s][Ws]
37 }

38 }

 

We test each candidate optimal history for temporal feasibility
by verifying that the associated timing graph G; is acyclic, using
a modiﬁed topological sorting algorithm in ®(|Vt|+ |Et|) (Cormen
et al., 1990). Temporally infeasible histories are not reported. Note
that it is not the case that if one optimal history is infeasible, all
optimal histories are infeasible. Finding the optimal, temporally
feasible reconciliation is NP-complete (Toﬁgh et al., 2011); we
leave the problem of obtaining an optimal, feasible solution when
all candidate solutions have infeasible timing constraints for future
work.

2.3 Complexity and running time

Our algorithm is ﬁxed-parameter tractable with polynomial
complexity when the size of the largest polytomy, k*, is ﬁxed. In
practical data analyses, k* is likely to be small. Recent genome-
scale analyses of ILS have focused on species trees with k*=3
(Ebersberger et al., 2007; Pollard et al., 2006). In general, event
inference will not yield informative results when the species tree is
highly unresolved.

THEOREM 2.1. Given a binary gene tree TG and a non-binary species
tree TS, firs tPass takes 0(| VGI(| VSI + nk2k )2(hg +k*)) time.

PROOF. firstPass visits each geVG in post order. At each
g, costCalc is called once for every (s1,s2)eVS><VS and
(W1,W2)EC(s1)+ >< C(s2)+, resulting in a total of 0(IVGI(| User/S
C(s)+|)2) calls to costCalc. Because |C(s)+|=2lc(5)l is 0(1)
when s is binary, IUSEVS C(s)+| is bounded above by |VS| —nk+
nk2k* and the number of calls to costCalc is 0(|V(;|(|VS|+
nk2k*)2). We precalculate lca(s1,s2) and test whether slgsz, for
all species pairs, in 0(|VS|2) time. Therefore, the complexity of
costCalc is dominated by the calculations of IV for l and r,
1V(l)U1V(r) and 1V(l)ﬂlV(r). These values can be computed in
0(hg), 0(log(k*)) and 0(k*) time, respectively. Thus, each call
to costCalc has complexity 0(hg+k*). Once the post-order
traversal is completed, we extract the minimum score in ICpG,
and all values of M (,oG) and W(,oG) corresponding to that score.
Since IICpG|=|U56VS C(s)+|, a linear search accomplishes this in
0(|VS| +nk2kl) time. Thus, the total complexity is 0(|VG|(|VS|+
nk2k*)2(hs +k*)). D

THEOREM 2.2. secondPass returns each optimal reconciliation
in 0(IVGI(hs +k*)>.

PROOF. secondPass starts from the M(,oG) and W(,oG) found
in firstPass. It then constructs an optimal solution by visiting
each subsequent g 6 V0, assigning mappings and events by looking
up values in Hg in constant time. Losses are inferred in 0(k* +hs)
time (see Vernot et al., 2008). Thus, the complexity for returning
each optimal history is 0(|VG|(hS +k*)). Cl

When TS is binary, firstPass is completed in 0(hs | VGI | VS |2)
time, and secondPass reports each optimal solution in 0(hs | VG |)
time.

Our NOTUNG implementation is efﬁcient in practice. We measured
the time required to reconcile 1128 cyanobacterial gene trees with
a species tree of size |VS| £21 for all the parameter settings given
in Table 1. To assess the effect of polytomy size, we also collapsed
edges in the species tree to create a polytomy ranging in size from
2 to 6. The maximum average running time observed on a single
AMD Opteron 2.3 ghz, 64-bit processor was ~0.05s. per solution.

3 EMPIRICAL RESULTS

To assess the importance of a four-event model, we implemented our
DTLI algorithm in NOTUNG2.7 and applied it to two phylogenetic
datasets in which ILS, HGT and hybridization have been studied
(Bansal et al., 201 1; Yu et al., 2011). Because a number of algorithms
and software packages do not include losses in the optimization
criterion, we sought to assess the impact of this modeling choice.
Therefore, we also implemented and applied models excluding
losses in the optimization criterion (DT and DTI) models. Except

 

i413

112 /3.Io's[BumoIpJOJXO'sorJBHJJOJurorq”:duq wort pepcolumoq

9103 ‘0g1sn8nv uo ::

M.Stolzer et al.

 

"2 I: Crmosphaera
Synechocystis

a
n "5*: Anabaena

 

 

 

 

 

 

 

 

 

x1 . —' Trichodesmium
"2° ,m  - Pruchiorocoocusz (MED)
n15   Prochlorococcus 1 (OCMP)
[—- Prochlorocoocus 3 (MIT)
3.3: jag—EIT- Synechocoocus
_ - Thermosynashonoocus
El Gloeobacter
Bansal etal. D'T'l..f_t=2.5) DTLI(1=2.S}

Fig. 2. Predicted transfer highways using the DTL and DTLI models with
8 = 3, r 22.5 and A :2. Predicted highways with transfer counts exceeding
1.5 standard deviations above the mean are shown, with the total number of
transfers labeled. Highways predicted by Bansal at al. (2011) are shown as
dashed lines

Table 1. Event counts for the cyanobacteria dataset, with 8 = 3 and A :2

 

 

Model 1' n0 nT nL nc Infeasible Degenerate
DT 2 .5 7 1798 1560 O 84 6
DT 6 1648 191 6096 O O O
DT 10 2066 O 7520 O O O
DTI 2.5 6 1521 1468 559 3 67
DTI 6 1425 133 5133 595 O O
DTI 10 1691 O 5921 636 O O
DTL 2.5 O 2121 781 O 42 13
DTL 6 73 1740 1516 O 82 5O
DTL 10 1324 480 4797 O 83 40
DTLI 2.5 O 1783 895 409 92 16
DTLI 6 82 1458 1456 542 90 109
DTLI 10 1122 405 4093 602 4 53

 

Event counts from 314 gene trees. Temporally infeasible or conﬂicting degenerate
solutions in any model were removed. The number of trees not considered for each
model and setting is given in the last two columns, respectively.

where stated, the trends reported here were observed consistently in
both datasets.

The datasets analyzed contain 1128 cyanobacterial gene trees
sampled from 11 species (Figs 2 and Supplementary Fig. S1), and
106 yeast gene trees sampled from 15 species (Supplementary Fig.
S2), respectively. Each gene tree has at most one gene copy per
species. To assess the impact of our ILS model, for each dataset
we compared the performance of our algorithm on a binary and a
non-binary species tree. The non-binary species tree was created by
removing one edge resulting in a single polytomy of size 3. In each
case, the selected edge was short and associated with substantial
gene tree incongruence. Each polytomy was chosen as a reﬂection
of an area of the species tree where ILS may be occurring. In both
cases, the selected edge was one that is reportedly difﬁcult to resolve
(Bansal et al., 2011; Schirrmeister et al., 2011; Yu et al., 2011).

We reconciled each tree using each of the four models (DT,
DTI, DTL and DTLI), with ‘L' e{2.5,6, 10}, 6:3 and A=2 (when
considered). We tabulated (1) the number of events of each type,
(2) the gene and (3) species lineages in which they occurred, (4) the

donor and recipient of each transfer and (5) the number of temporally
infeasible reconciliations (Table 1 for cyanobacteria; Supplementary
Table S1 for yeast). Trees that had no temporally feasible solution
for at least one set of parameter values were eliminated from analysis
under all models and values of 1'. For each setting, gene trees were
rooted with NOTUNG’s rooting optimization algorithm using event
parsimony. If a tree had multiple optimal solutions (one or more
optimal roots or reconciliations for a speciﬁed root), it was only
retained if all solutions yielded the same counts for each event.

Our observations highlight the extent to which model choice
and degeneracy affect biological inferences. Approximately 10%
of trees were removed because they are potentially misleading due
to temporal infeasibility. Hallett et al. (2004) reported no temporal
infeasibility for the application of their DT algorithm to a simulated
dataset. Our results suggest that infeasible cases can be more
prevalent in real data.

In addition, ~20% of trees had conﬂicting optimal solutions,
suggesting that inferences based on a single, randomly selected
optimal solution could lead to conclusions that are not, in fact,
supported by the data. This result highlights the importance of taking
multiple solutions into account when performing tree reconciliation.

When the models with and without ILS are compared,
we observed a substantial decrease in the combined number
of duplications and transfers, ranging from 15% to 18% in
cyanobacteria and 11% to 14% in yeast. We also observed
considerable decreases in the number of losses, as high as 20% in
the case of DT versus DTI. These differences indicate the extent to
which ignoring ILS can lead to overestimation of other events.

Recently, great interest has been focused on ‘highways’ of HGT
(pairs of species with very active genetic exchange, relative to HGT
in other species) [i.e. (Bansal et al., 2011; Beiko et al., 2005)]. We
considered evidence of HGT highways in our cyanobacterial data,
where a highway is an outlier in the total number of transfers, in
both directions, between a pair of species. With the DTL model,
we observe trafﬁc (Fig. 2, red lines) similar to the HGT highways
reported by Bansal et al. (2011) (dotted lines), for the same
dataset. However, when events were inferred with the DTLI model,
the elevated transfer rates in the Gloeobacter group disappeared,
resulting a single highway (blue line). These results demonstrate
that use of a complete event model is crucial for accurate inference.

In general, including losses in the optimization criterion resulted
in (1) a dramatic decrease in the number of losses and (2) a change
in the ratio of the number of duplications to transfers. This likely
occurs because duplications and losses are coupled. When losses are
included in the optimization, their cost may prevent the model from
over-inferring duplications. This suggests that for any application
where accurate reconstruction of event histories matters, including
losses in the optimization criterion is crucial.

4 DISCUSSION

This work presents the ﬁrst reconciliation algorithm for the event
inference problem under a model that captures the four major
evolutionary processes driving tree incongruence: duplication, loss,
transfer and ILS. Our algorithm reconciles a binary gene tree with a
non-binary species tree and is, to our knowledge, the ﬁrst algorithm
to allow non-binary species trees with a transfer model. Our
algorithm outputs detailed event histories, describing the speciﬁc
events inferred and the lineages in which they occurred.

When restricted to binary species trees, our algorithm reduces to
an event inference algorithm for the DTL model that can infer all

 

i414

112 /3.Io's[BumoIpJOJXO'sorwuiJOJurorq”:duq uroii pepcolumoq

9103 ‘Og isnﬁnv uo ::

Nonbinary species trees

 

optimal solutions and does not require estimates of speciation times
or otherwise restrict transfers to a limited set of species pairs.

Algorithms that capture duplication, transfer and ILS in a
single, integrated model are of increasing importance (Degnan and
Rosenberg, 2009). New sequencing technologies are leading to
rapid growth of whole genome datasets, in which there is evidence
for both HGT and ILS. Our empirical analyses of two different
datasets, representing both prokaryotic and eukaryotic data, indicate
that use of a complete event model has substantial impact on the
events inferred and, hence, the resulting biological conclusions. For
example, it is possible that apparent HGT highways could be, at
least in part, mis-interpretations of deep coalescence.

Our model is a compromise between current reconciliation
models, which ignore ILS everywhere, and coalescent models
that explicitly relate the probability of incongruence to the length
and population size associated with every branch. Our model
is more expressive than the former and more efﬁcient and
more widely applicable than the latter. A great strength of the
multispecies coalescent is that it explicitly relates the probability
of incongruence to effective population size and the time between
species divergences. Estimates of these population parameters are
only available for a limited set of well-studied species. However,
given a sufﬁciently large set of gene families, population parameters
can be inferred directly from the data, but this is computationally
demanding. For example, species tree inference from a set of 106
genes in 8 yeast species required 800h using Bayesian estimation
on a coalescent model, whereas a parsimony method inferred the
identical tree in only a ‘fraction of a second’ (Than and Nakhleh,
2009).

A parsimony model, on the other hand, does not take branch
lengths into account, resulting in a potential reduction in accuracy.
Future simulation studies are planned to characterize the accuracy
of this approach. The beneﬁts of this simpler model are that it can
be applied to any set of taxa, not just species for which population
parameters can be estimated, and it is not sensitive to overﬁtting.
Because it is fast and general, it is highly suitable for processing
large, genome-scale datasets.

The work presented here could proﬁtably be generalized in several
ways, including a model of transfers in which multiple genes
are transferred in a single event; inference methods for datasets
involving extinct or missing species; and ILS models that deviate
from the assumption of a uniform gene tree distribution and take
branch lengths and population size into account for datasets where
such information is available. Another important area for ﬁiture work
is the selection of event costs and investigation of the robustness of
results with respect to small changes in the costs used. Note that the
problem of how to weight events also arises in coalescent models.
For example, the coalescent-based DLI inference algorithm requires
the user to supply duplication and transfer rates.

ACKNOWLEDGEMENT

We thank H. Philippe for making his yeast trees available to us.
Funding: National Science Foundation (BDIO641313); Pittsburgh
Supercomputing Center, Biomedical Computing Initiative and

Computational Facilities Access (MCB000010P) and a David and
Lucille Packard Foundation fellowship.

Conﬂict of Interest: none declared.

REFERENCES

Andersson,]. (2009) Horizontal gene transfer between microbial eukaryotes. Methods
Mol. Biol., 532, 473487.

Bansal,M. et al. (2011) Detecting highways of horizontal gene transfer. J. Comput.
Biol., 18, 108771114.

Beiko,R. et al. (2005) Highways of gene sharing in prokaryotes. Proc. Natl Acad. Sci.
USA, 102, 14332714337.

Berglund,A. et al. (2006) Optimal gene trees from sequences and species trees using a
soft interpretation of parsimony. J. Mol. Evol., 63, 24w250.

Cormen,T. et al. (1990) Introduction to Algorithms. MIT Press/McGraw-Hill,
Cambridge, Mass.

David,L. and A1m,E. (2011) Rapid evolutionary innovation during an Archaean genetic
expansion. Nature, 469, 93796.

Degnan,J. and Rosenberg,N. (2009) Gene tree discordance, phylogenetic inference and
the multispecies coalescent. Trends Ecol. Evol., 24, 3327340.

Delsuc,F. et al. (2005) Phylogenomics and the reconstruction of the tree of life. Nat.
Rev. Genet., 6, 3617375.

Doyon,J. et al. (2011) Models, algorithms and programs for phylogeny reconciliation.
Brief Bioinform., 12, 392400.

Ebersberger,l. et al. (2007) Mapping human genetic ancestry. Mol. Biol. Evol., 24,
226672276.

Edwards,S. (2009) Is a new and general theory of molecular systematics emerging?
Evolution, 63, 1719.

Hallett,M. et al. (2004) Simultaneous identiﬁcation of duplications and lateral transfers.
In: REC OMB 2004: Proceedings of the Eigth International Conference on Research
in Computational Biology, pp. 3477356, New York, NY, USA, 2004. San Diego,
California, USA, ACM Press.

Huson,D.H. and Scornavacca,C. (2011) A survey of combinatorial methods for
phylogenetic networks. Genome Biol. Evol., 3, 23735.

Ma,B. et al. (2000) From gene trees to species trees. SIAM J. Comput., 30, 7297752.

Maddison,W. (1997) Gene trees in species trees. Syst. Biol., 46, 5237536.

Maddison,W. and Knowles,L. (2006) Inferring phylogeny despite incomplete lineage
sorting. Syst. Biol., 55, 21730.

Maddison,W. and Maddison,D. (2011) Mesquite: A modular system for evolutionary
analysis, version 2.75. http://mesquiteproject.org, accessed June 10, 2012.

Milinkovitch,M. et al. (2010) 2x genomesaiepth does matter. Genome Biol., 11, R16.

Nakhleh,L. (2010) Evolutionary phylogenetic networks: models and issues. In Heath,
L. and Ramakrishnan, N. (eds). The Problem Solving Handbook for Computational
Biology and Bioinformatics, pp. 1257158. Springer.

Nakhleh,L. et al. (2009) Gene trees, species trees, and species networks. In Guerra, R.
and Goldstein, D. (eds). Meta-analysis and Combining Information in Genetics and
Genomics, pp. 2757293. CRC Press, Boca Raton, FL.

Page,R. (1998) GeneTree: comparing gene and species phylogenies using reconciled
trees. Bioinformatics, 14, 819720.

Pollard,D. et al. (2006) Widespread discordance of gene trees with species tree in
Drosophila: evidence for incomplete lineage sorting. PLoS Genet., 2, e173.

Rasmussen,M. and Kellis,M. (2012) Uniﬁed modeling of gene duplication, loss, and
coalescence using a locus tree. Genome Res., 4, 7557765.

Rokas,A. et al. (2003) Genome-scale approaches to resolving incongruence in molecular
phylogenies. Nature, 425, 7987804.

Schirrmeister,B. et al. (2011) The origin of multicellularity in cyanobacteria. BMC Evol.
Biol., 11,45.

Serres,M.H. et al. (2009) Evolution by leaps: gene duplication in bacteria. Biol. Direct.,
4, 46.

Than,C. and Nakhleh,L. (2009) Species tree inference by minimizing deep coalescences.
PLoS Comput. Biol., 5, 61000501.

Toﬁgh,A. et al. (2011) Simultaneous identiﬁcation of duplications and lateral gene
transfers. TCBB, 8, 5177535.

Vernot,B. et al. (2008) Reconciliation with non-binary species trees. J. Comput. Biol.,
15, 98171006.

Yu,Y. et al. (2011) Coalescent histories on phylogenetic networks and detection of
hybridization despite incomplete lineage sorting. Syst. Biol., 60, 1387149.

Zhang,L. (2011) From gene trees to species trees ii: Species tree inference by
minimizing deep coalescence events. IEEE/ACM Trans. Comput. Biol. Bioinform.,
6, 168571691.

Zhaxybayeva, O. and Doolittle, W. (2011) Lateral gene transfer. Curr Biol., 21,
R2427R246.

Zhaxybayeva,0. et al. (2009) Intertwined evolutionary histories of marine
Synechococcus and Prochlorococcus marinus. Genome Biol. Evol., 1, 3257339.
Zmasek,C. and Eddy,S. (2001) A simple algorithm to infer gene duplication and

speciation events on a gene tree. Bioinformatics, 17, 82178.

 

i415

112 /3.Io's[BumoIpJOJXO'sorwuiJOJurorqp:duq uroii pepeo1umoq

9103 ‘0g1sn8nv uo ::

