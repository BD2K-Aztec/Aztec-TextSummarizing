BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

M.Petukh et al.

 

Time of calculations: Total time that is required to perform all
calculations to predict the ion positions.

2.3 Web server architecture

The design of the BION server can be described by two basic parts, the
ﬁrst of which is the client or user interface, and the second of which is
the process that occurs on the server or back end. The client interface
is implemented using HTML (http://www.w3.org/TR/htmlS/) and
Java Script (http: / /www.ecma-international.org/ publications / standard s/
Ecma-262.htm). It is here that a user will ﬁll out various parameters
for a job to be submitted to the server, as well as receive the results of
the speciﬁed job. The back end request handling is implemented using
Python (http://python.org/). Later in the text we describe each part of the
processes in detail.

Client interface. This is where the user speciﬁes all necessary informa-
tion to complete a server job. The most important piece of information
the user must supply is a PDB ﬁle. A user may choose either to upload
a PDB ﬁle from their local ﬁle system, or they may enter the name of a
PDB ﬁle located in the RCSB PDB, which will then be downloaded by
the server. The next job parameter is the type of ion that will be predicted,
and it is selected using a simple drop down menu. The ﬁnal parameter,
which is not necessary for the user to change, is the number of binding
sites that will be predicted and will be appended to the PDB ﬁle.

Back end. The server end or back end is where the information speci-
ﬁed by the user is processed. Both the request handling method and the
calculation method are implemented in Python.

Results. If all user input was valid, then the results of their speciﬁed job
are returned to them. The basic output from the server includes a sum-
mary of the job and a ﬁxed version of the user’s submitted PDB ﬁle with
calculated ion binding sites appended. If the user requested the results to
be e-mailed, then this information will be sent to them in an e-mail to
which the ﬁxed PDB ﬁle is attached. From the actual client interface, the
user will have access to all of this returned information, as well as a Jmol
(http://www.jmol.org/) visualization of the protein, which also depicts
potential binding sites for the ion (Supplementary Fig. S1).

3 RESULTS AND DISCUSSION

The BION web server is based on the BION program that allows
predicting the position of non—specific bound ions on the surface
of protein. The key properties of the server, the accuracy and the
time, are analyzed. We benchmarked the results against the data—
base of proteins with experimentally determined surface ions
(for detailed description of dataset pruning for each type of
ions see Petukh, et al., 2012). The following types of ions were
tested: CA, CL, FE, K, NA, MG, MN and ZN (the list of PDB
ﬁles is available at the front page of the server).

3.1 Test of BION accuracy

For each type of ion, we constructed ROC curve by varying the
Rank, which essentially means by varying the number of predic—
tions (Supplementary Fig. S2). In ~50% of the cases for all

tested types of ions, there is a prediction within 10 A away
from the experimental ion’s position, which is found within the
first 10 ranked points. In addition, enrichment curves are shown
in Supplementary Figure S3.

3.2 Total time of calculations

One of the most important parameter of any server performance
is how quick the user receives the results. According to the
Supplementary Figure S4, the average time is ~10 min.

3.3 Conclusions

The BION web server is a simple to use tool that uses new al—
gorithm for prediction of non—speciﬁc bound surface ions based
on electrostatic properties of the protein.

ACKNOWLEDGEMENT

The authors thank Chuan Li and Lin Li for the help in the
development.

Funding: National Institutes of Health (R01 GM093937).

Conﬂict of Interest: none declared.

REFERENCES

Babor,M. et al. (2008) Prediction of transition metal—binding sites from apo protein
structures. Proteins, 70, 2087217.

Bhattacharya,P.K. (2005) Metal Ions in Biochemistry. Alpha Science International,
Ltd, Oxford, UK.

Dudev,T. et al. (2003) First—second shell interactions in metal binding sites in pro—
teins: a PDB survey and DFT/CDM calculations. J. Am. Chem. Soc., 125,
316873180.

Georgescu,R.E. et al. (2002) Combining conformational ﬂexibility and continuum
electrostatics for calculating pK(a)s in proteins. Biophys. J., 83, 173171748.
Katz,A.K. et al. (1996) Calcium ion coordination: a comparison with that of

beryllium, magnesium, and zinc. J. Am. Chem. Soc., 118, 57525763.

Levy,R. et al. (2009) Prediction of 3D metal binding sites from translated gene
sequences based on remote—homology templates. Proteins, 76, 3657374.

Li,L. et al. (2012) DelPhi: a comprehensive suite for DelPhi software and associated
resources. BMC Biophys., 5, 9.

McAinsh,M.R. et al. (1997) Calcium ions as second messengers in guard cell signal
transduction. Physiol. Plant., 100, 14.

Muller,P. et al. (2003) Is the bond—valence method able to identify metal atoms in
protein structures? Aeta Crystallogr. D, 59, 32737.

Petukh,M. et al. (2012) Predicting nonspeciﬁc ion binding using DelPhi. Biophys. J.,
102, 288572893.

Wang]. et al. (2004) Development and testing of a general amber force ﬁeld.
J. Compat. Chem., 25, 115771174.

Williams,R.J.P. (1970) Tilden lecture. The biochemistry of sodium, potassium,
magnesium, and calcium. Q. Rev. Chem. Soc., 24, 3317365.

Xiang,J.Z. and H0nig,B. (2002) JACKAL: A Protein Struetare Modeling Package.
Columbia University and Howard Hughes Medical Institute, New York.

 

806

ﬁm'spzumol‘pmﬂo'sopeuuopuorq/ﬁdnq

