ORIGINAL PAPER

Vol. 26 no. 11 2010, pages 1409—1415
doi: 1 0. 1 093/bioinformatics/btq159

 

Phylogenetics

Advance Access publication April 16, 2010

HIV classification using the coalescent theory

Ingo Bulla1’*, Anne—Kathrin Schultzl, Fabian Schreiberl, Ming Zhang2, Thomas Leitner2,
Bette Korber2’3, Burkhard Morgenstern1 and Mario Stanke1
1Abteilung Bioinformatik, Institutf r Mikrobiologie und Genetik, Georg—August—Universit t G ttingen,

Goldschmidtstrasse 1, 37077 G ttingen, Germany, 2Theoretical Division, Los Alamos National Laboratory,
Los Alamos, NM 87545 and 3The Santa Fe Institute, Santa Fe, NM 87501, USA

Associate Editor: Martin Bishop

 

ABSTRACT

Motivation: Existing coalescent models and phylogenetic tools
based on them are not designed for studying the genealogy of
sequences like those of HIV, since in HIV recombinants with multiple
cross-over points between the parental strains frequently arise.
Hence, ambiguous cases in the classification of HIV sequences
into subtypes and circulating recombinant forms (CRFs) have
been treated with ad hoc methods in lack of tools based
on a comprehensive coalescent model accounting for complex
recombination patterns.

Results: We developed the program ARGUS that scores
classifications of sequences into subtypes and recombinant
forms. It reconstructs ancestral recombination graphs (ARGs) that
reflect the genealogy of the input sequences given a classification
hypothesis. An ARG with maximal probability is approximated
using a Markov chain Monte Carlo approach. ARGUS was able
to distinguish the correct classification with a low error rate from
plausible alternative classifications in simulation studies with
realistic parameters. We applied our algorithm to decide between
two recently debated alternatives in the classification of CRF02 of
HIV-1 and find that CRF02 is indeed a recombinant of Subtypes A
and G.

Availability: ARGUS is implemented in C++ and the source code is
available at http://gobics.de/software

Contact: ibulla@uni-goettingen.de

Supplementary Information: Supplementary data are available at
Bioinformatics online.

Received on September 16, 2009; revised on April 5, 2010; accepted
on April 9,2010

1 INTRODUCTION

A coalescent model incorporating recombination was ﬁrst introduced
by Hudson (1983). In the presence of recombination, the genealogy
of a set of sequences can be represented as a so-called
ancestral recombination graph (ARG) rather than a tree (Grifﬁths
and Marjoram, 1997). In human immunodeﬁciency virus (HIV)
recombination is frequent and recombinant forms of the virus
that spread are called circulating recombinant forms (CRFs). In
current nomenclature, sequences of the epidemiologically most

 

*To whom correspondence should be addressed.

relevant clade, HIV-l Group M, are classiﬁed into 9 subtypes
and 43 CRFs [see Los Alamos National Lab (LANL)-database;
http://www.hiv.lanl.gov]. The CRFs have (usually multiple)
recombination breakpoints between unrecombined segments of the
‘pure’ parental subtypes.

Algorithms for subtype classiﬁcation and breakpoint detection of
HIV-1 sequences are based on the classiﬁcation system of HIV-1
(Robertson et (11., 2000). Hence, their quality highly depend on this
system. But due to the evolution of HIV-1 nomenclature, developed
in real time in conjunction with emerging knowledge of the global
diversity of the virus, the current nomenclature has anomalies. E.g.
the phylogenetic distance between Subtypes B and D is relatively
small compared to that of other pairs of subtypes. In fact, it is more
like the distance of a pair of subsubtypes (Robertson et (11., 2000).

Furthermore, several questions about the current classiﬁcation
system of sequences are unanswered or debated: There are 8
complete and over 400 partial HIV-l Group M genomes in the
LANL-database, which are ‘undeﬁned’, i.e. belong neither to a
subtype nor to a CRF (this is due to many reasons, e.g. parental
sequences have not been identiﬁed yet). Additionally, in the
nomenclature system CRF02 is considered to be a recombinant of
subtype A and G, but recently some evidence has been presented
in the literature suggesting that CRF02 would actually be better
described as a subtype and subtype G as a recombinant (Abecasis
et (11., 2007; Lemey et (11., 2009). A few years ago it was also debated
whether CRF01 is in fact a pure subtype (Anderson et (11., 2000).

Moreover, assignments in the database are reﬂected on diverse
classiﬁcation strategies employed by different investigators in
the primary literature. Therefore, it is desirable to have tools
for classifying the HIV sequence set systematically based on
a comprehensive coalescent model accounting for complex
recombination patterns.

While the problem of recombination has been well documented
in HIV-1, recombination also occurs in the other lentiviruses.
Moreover, intra-segmental recombination has been reported from a
large variety of other viruses, e.g. coronaviruses, ﬂaviviruses,
alphaviruses, rotaviruses, inﬂuenzaviruses, hantaviruses,
arenaviruses and avian oncoviruses (Bergmann et (11., 1992;
Charrel et (11., 2001; Hahn et (11., 1988; Jarvis and Kirkegaard,
1992; Lai, 1992; Leitner, 2002; Orlich et (11., 1994; Shaikh et (11.,
1978; Sibold et (11., 1999; Worobey et (11., 1999). Furthermore,
recombination plays also a role in other species, such as bacteria
(Feil and Spratt, 2001; Goss et (11., 2005). Thus, it is possible that
many virus systems would beneﬁt from a systematic classiﬁcation
that explicitly includes recombination (Foley and Fauquet, 2008).

 

© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 1409

112 /3.Io's[sumoIpJOJXO'sotwuiJOJutotq”:duq 11101} papeolumoq

9103 ‘{g anﬁnv 110::

I.Bulla et al.

 

Our work addresses the simpler subproblem to score
classiﬁcations of given input sequences of some virus species.
‘Classiﬁcation’ here denotes a partitioning of the input sequences
into several subtypes and, if applicable, CRFs. To score a
classiﬁcation, we reconstruct ARGs of the input sequences under
restrictions determined by the classiﬁcation (see Fig. 2 for an
example or Supplementary Fig. 12 for a colored version). These
restrictions are imposed in order to ensure that the reconstructed
ARGs do not contradict the classiﬁcation under consideration. Then,
we ﬁnd the ARG with maximal likelihood by means of Markov chain
Monte Carlo (MCMC) methods. The likelihood of the most likely
ARG is interpreted as a score for the classiﬁcation.

Finally, we apply ARGUS, the implementation of our algorithm,
to decide between the two main hypotheses regarding CRF02.

Although up to now ~50 tools for classiﬁcation of HIV-1
genomes, identiﬁcation of recombinants and precise breakpoint
detection have been developed—e.g. Recombinant Identiﬁcation
Program (RIP) (http://www.hiv.lanl.gov/content/sequence/RIP/RIP.
html), REGA HIV-1 Subtyping Tool (referring to the Rega Institute
for Medical Research) (de Oliveira et (11., 2005) and Recco (Maydt
and Lengauer, 2006)—, to our knowledge, our particular problem
ﬁts only roughly into the scope of one algorithm (VisRD, described
in Lemey et (11., 2009). A comparison with respect to performance
and scope between our algorithm and VisRD is carried out in
Section 3.3.

Moreover, the software package Lamarc (Kuhner et (11., 2000)
allows for sampling ARGs, but it assumes that recombination events
only involve one breakpoint. However, HIV recombinants usually
have more than one breakpoint. Moreover, Lamarc does not perform
an explicit breakpoint detection, but tries to ﬁnd them by chance.
Although this approach is suitable for most situations, it will not
lead to satisfying results in case of highly recombining viruses with
multiple breakpoints.

Up to now, researchers confronted with the task to classify
genome sequence data strongly affected by recombination with
multiple crossovers normally segmented the aligned genomes in
recombination-free parts [Simplot (Lole et (11., 1999) is a widespread
tool for this task] and analyzed these parts with traditional
phylogenetic tools. The information stemming from different parts
of the genome had to be assembled by ad hoc methods (Abecasis
et (11., 2007; Bailes et (11., 2003; Lukashev et (11., 2005).

2 METHODS

A classiﬁcation is a partition of the input sequences {.v1,...,s,,} into disjoint
sets P1,...,P,,,p and R1,...,R,,,,. where each set P, contains the sequences
belonging to the i-th (pure) subtype and each set R, contains the ones
belonging to the i-th CRF. An example of a classiﬁcation is given in the
upper part of Figure 1 (see Supplementary Fig. 11). The algorithm takes the
input sequences and a hypothesis classiﬁcation and scores the classiﬁcation
by constructing a likely ARG for the sequences under this classiﬁcation.

Notice that CRFS (in our notation) are allowed to be composed of less
than three epidemiologically independent sequences Violating the deﬁnition
of a CRF (Robertson 21111.. 2000). Nevertheless. we will use the word ‘CRF’
as this is the most typical application.

2.1 Preparing step

All input sequences are aligned and only positions composed entirely of non-
gaps are further considered. Then. the breakpoints of the input sequences
designated as recombinants are identiﬁed and the subtypes of the resulting

A A A B C C CRFI CRFI CRFZ
_ _ _ |:| |:I |:I ESSEX]

applyijMM to CRFs

___|:ll:ll:II:-:II:-:II:-

Fig. 1. Example of a classiﬁcation of nine sequences into three subtypes
(AiC) and two CRFs (CRFl. CRF2). At the bottom the recombinants have
been segmented and the segments assigned a subtype by ijMM.

segments are classiﬁed by jumping proﬁle hidden Markov model (ij-IIVIM).
introduced by Schultz et a1. (2006) and Zhang et a1. (2006). An example
of this step is shown in the lower part of Figure 1. We use ijMM for
breakpoint detection since we need a fully automatically working tool.

ijMM is a probabilistic generalization of the jumping-alignment
approach introduced by Spang et a1. (2002). Given a partition of the
aligned input sequence family into known sequence subtypes (in our case
P1,...,P,,,p). this model can jump between states corresponding to these
different subtypes. depending on which subtype is locally most similar
to a query sequence. Jumps between different subtypes are indicative of
intersubtype recombinations.

More strictly. assume the subtypes occurring in the considered
classiﬁcation are denoted by S1,...,S,,,p and the length of an alleged
recombinant sequence is 6. Then. ijMM provides a mapping f :Ng —>
{S1 , . . . , Smp}. i.e.f assigns a subtype to each position of the query sequence.
This mapping will also be called the segmentation of the query sequence.

For each CRF. a single segmentation is calculated by applying ijMM
to one of the sequences of the CRF. See Supplementary Section 3.1 for
additional details.

2.2 Coalescent model

The non-recombinant coalescent genealogy was introduced by Kingman
(1982a. b) and extended to the recombinant case by Hudson (1983). Apart
from Hudson’s back-in-time algorithm. the spatial algorithm of Wiuf and
Hein (1999) allows for constructing the coalescent with the recombination
process. We apply a formulation of the recombinant genealogy similar to
the one introduced in Kuhner et a1. (2000). Like Kuhner et a1. (2000).
we discard lineages not contributing at least one site to the sample and
we discard recombination events that do not separate at least two sites
contributing to the sample. The difference of our formulation consists in
allowing for multiple breakpoints. I.e.. the probability of a recombination
event taking place is the same as in Hudson (1990) and Kuhner et a1.
(2000). but multiple breakpoints can occur due to the recombination event.
Adapting the framework of Hudson (1990) and Kuhner et a1. (2000) to our
setting is a simpliﬁcation. but justiﬁed by the fact that the affected quantities
play a very minor role in our algorithm. Using ijMM with a sufﬁciently
low jump probability to predict the breakpoints prevents the recombination
events from yielding too many breakpoints. which would lead to strongly
fragmented sequences. As customary (Hein et (11.. 2005; Wakeley. 2008). we
call a recombinant genealogy an ARG.

The likelihood of an ARG G is the product of the probability of the
(sequence) data D with respect to the ARG. P(D|G). and the probability of
the ARG given the evolution parameters. P(G|® , r). Here. 8 =2Np. and r:
C / 11. where N is the effective population size. C the per-site recombination
rate and p. the per-site neutral mutation rate. See Supplementary Section 3.2
for additional details.

2.3 Restrictions to the genealogy

We approximate the most likely ARG G of the input HIV sequences.
where we impose restrictions to the approximating ARG G according to
the classiﬁcation to be scored. The score of the classiﬁcation is then given
by P(D|G). In detail. the restrictions are given in the following (see Fig. 2
and Supplementary Fig. 12 for the symbols).

 

1410

112 /3.Io's[sumoIpJOJXO'sotwuiJOJutotq”:duq moi; papeolumoq

9103 ‘{g isnﬁnv 110::

HIV classification using the coalescent theory

 

  

/\

X X X
———

A A A

CRF1 CRF1

XEl:lI|

I:-XEI:EIX

1:” L/

/x\
X X
l:|l:|

CRF2 B C C

Fig. 2. A legal ARG corresponding to the classiﬁcation given in Figure 1. At the bottom. the nine input (tip) sequences with their classiﬁcation are shown.
The tip sequences are deﬁned to be generated at time zero. Looking from bottom to top (i.e. into the past). two nodes coalescing to one (parental) node.

represent the event of these two nodes ﬁnding their most recent common ancestor. A node splitting into two parental nodes represents a recombination event.
Single-color boxes show the subtype of the node. Horizontally segmented boxes show for a recombinant sequence the parental subtypes of each segment.

Diagonally shaded boxes show the different subtypes the node belongs to. White parts in boxes indicate positions not contributing to the tip sequences and.
hence. of which we do not keep track. For recombination events. they also illustrate the positions of the recombination breakpoints. For further details. see

Section 2.3.

In the lower part of the ARG. sequences of subtypes that are composed
of more than one sequence or are present in the genome of a CRF are only
allowed to coalesce and only with sequences of the same subtype. Sequences
of multi-sequence CRFS (light gray ‘X’ in Fig. 2 and orange ‘X’ in the
Supplementary Fig. 12) are only allowed to coalesce and only with sequences
of the same CRF. Sequences from different subtypes can only coalesce if they
are the only sequence of their subtype left ((black ‘*’ in Fig. 2. brown ‘*’
in the Supplementary Fig. 12)). Furthermore. coalescing sequences of the
same subtype (black ‘X’ in both ﬁgures) generate a sequence belonging to
the same subtype as their children.

The last (or only) sequence of a CRF (gray ‘ X” in Fig. 2. purple ‘ X ’in the
Supplementary Fig. 12) is obliged to recombine. Breakpoints (multiple) have
to be chosen such that the parental subtypes get separated and recombination
events have to take place until all parental subtypes are separated. The ﬁnal
sequences generated by this process only contain one subtype. This subtype
is interpreted as the subtype of these (ﬁnal) sequences. They are allowed to
coalesce with other sequences of the same subtype. No sequence of their
subtype is allowed to coalesce with a sequence of another subtype before
having coalesced with these sequences.

This set of restriction rules (a more formal description is given in
Supplementary Section 1) is imposed in order to enforce ARGs. which are
plausible under the condition that the underlying classiﬁcation is areasonable
one. This would not be the case. e.g. if Subtype A sequences coalesced with
Subtype C sequences before coalescing within their respective subtype or
the two CRF1 sequences recombined independently of each other without
coalescing ﬁrst.

These rules imply the assumption that intra-subtype recombinations and
the recombinations occurring before the subtypes were formed are negligible.
The negligence of the ﬁrst type of recombination simply means that we
do not aim to obtain a classiﬁcation resolving ﬁner than the level of
subtypes. Neglecting the second type can be justiﬁed by the HIV subtypes
being separated by founder effects (Rambaut et (11.. 2004). Since alternative

methods are restricted by far stronger assumptions. we refrain from analyzing
our simpliﬁcations in more detail.

2.4 MCMC

After having constructed an initial ARG. the likelihood of the ARG is
iteratively maximized using MCMC methods. More precisely. in a ﬁrst step
an initial ARG G1 is sampled from the conditional coalescent distribution.
Thereafter. by modifying the ARG slightly and accepting or rejecting these
modiﬁcations based on how they affect the likelihood of the ARG. a Markov
chain {Gi}ieN is generated. If no signiﬁcant improvement of the likelihood
seems achievable any more. the chain is stopped at the current chain position
n and the probability of the data D given the most likely ARG
ax P(DlGi) (1)
i:l,...,r1
is interpreted as a score for the classiﬁcation (see Supplementary Section 3.3
for details). We stop the MCMC algorithm at step n > M if
maxizl,...,nP(DlGi)P(Gil®v KR)

maXi:1,...,n—MP(DlGi)P(Gi|@~ KR)
with M: 1000 and (3: 10‘8 (chosen by rule of thumb). Here. P(G|®, r,R)
denotes the probability of the ARG G given the parameters 8 and r. and
restricted to our rules R. Due to the small inﬂuence of this quantity. we
used P(G|®, r) instead of P(G|® , r,R) for the sake of simplicity where
appropriate. Normally. the MCMC algorithm is carried out several times
for different initial ARGs. Details about the MCMC algorithm are explained
in the Supplementary Material (Section 2). The parameter 8 was estimated
with Lamarc 2.1.3 (Kuhner. 2006).

<1+8

2.5 Extension to unknown subtypes

In the genome of several CRFs. segments are commonly classiﬁed to
belong to an unknown subtype. To address classiﬁcation problems involving

 

1411

112 /3.Io's[sumoIpJOJXO'sotwuiJOJutotq”:duq moi; papeolumoq

9103 ‘{g isnﬁnv 110::

I.Bulla et al.

 

unknown subtypes. we have to adapt our algorithm appropriately as described
in Supplementary Section 3.6.

3 RESULTS
Test settings: to test ARGUS, three different settings are tested:

Tl a representative selection of 40 HIV-1 Group M sequences
from Subtypes A to K (presented in Supplementary
Section 5.1)

T2 a classiﬁcation involving all features offered by ARGUS
except unknown subtypes

T3 two classiﬁcations corresponding to the situations that
0 CRF02 is a CRF and G a subtype or

0 CRF02 is a subtype and G a CRF,

The ﬁrst test setting is intended to show the ability of
ARGUS to construct a phylogenetic tree (without recombination).
This is a subproblem also arising when reconstructing an ARG
and, hence, must be accomplishable by ARGUS. The second
setting demonstrates the ability of ARGUS to differentiate
between similar classiﬁcations of real-world complexity. We refrain
from incorporating unknown subtypes, since this would prohibit
performing the test fully automatically. Finally, the last setting shows
the applicability of ARGUS to the task of further analyzing subtype
G and CRF02, to determine whether they are more likely to be
recombinants or ancestral subtypes; this question was raised by
earlier analysis in Abecasis et a1. (2007) and Lemey et a1. (2009).

Parameter estimation: the model uses two different mutation rates
since increasing their number does not improve the results, whereas
a constant mutation rate performs considerably worse (data not
shown). The per-site recombination rate C is set to 10_4 (Zhuang
et a1., 2002). The parameter 8 is estimated by applying Lamarc
2.1.3 to 10 randomly chosen HIV-1 Group M sequences, classiﬁed
as pure subtypes in the LANL HIV sequence database. Disabling
recombination and growth, Lamarc yields 8: 1.25. The gamma
distribution parameter of the General Time-Reversible (GTR) model
is estimated to be (1:0.416 by Findmodel. The length of the
simulated sequences is 8500 bp, which is approximately the length
of the HIV-1 Group M sequences used in the application in Section
3.2 (after removal of gap-affected positions).

3.1 Simulation studies

3.1.] T2—with recombination This test setting is composed of
two parts, for each we choose an original classiﬁcation and a
number of alternative classiﬁcations for testing. Then, we perform
the following steps for each part:

(1) Simulate an ARG according to the original classiﬁcation;

(2) Simulate the mutation process on the ARG (from the root
downwards), thereby obtain simulated tip sequences;

(3) Score both the original as well as one or more plausible
alternative classiﬁcations using the simulated tip sequences.

When the original classiﬁcation scores higher than the test
classiﬁcations, this indicates that ARGUS works for the analyzed
setting.

‘ _&\\\\\\\\\\VI§VA&\\\\\\\V ,

Au,   H  J 02 
—.'. Imlscm  W/l/l/l/A &\\\\\\\\\\\\\\V QG
2x 1‘ . 2x ." 2x 2x 2x ,-

x

A G H J   H
— |:| |:| 7////////A mm ‘7 C02
2X 2x 2x 2x  2x x

Fig. 3. Classiﬁcations used in Section 3.2 for deciding whether Subtype
G or CRF02 (:02) is a pure subtype or a recombinant form. respectively.
The white segment in the lower segmentation of CRF02. indicates a part
of the genome designated to stem from an unknown subtype. Above the
classiﬁcations. the segmentation of the alleged CRFs is shown magniﬁed.

The details are given in Supplementary Section 5.2. In short, we
obtain the following results:

0 In the ﬁrst part, we compare nine classiﬁcations (including
the original classiﬁcation), in the second one 6. In both parts,
15 sequences are to be classiﬁed.

0 Simulating nine ARGs and the mutation process ﬁve times per
ARG (in both parts), our algorithms succeeds to rate the original
classiﬁcation highest in 43, respectively, 44 out of 45 cases.

3.1.2 T3—simu1ati0n 0f CRF02 case In Section 3.2, we will
apply ARGUS to the question whether Subtype G is actually a
pure subtype and CRF02 is a recombinant form (like assumed in
Robertson et a1., 2000) or G is a recombinant form and CRF02
is a pure subtype (like claimed in Abecasis et a1., 2007). The
classiﬁcation systems that best describe the genealogical situation
assumed in Robertson et a1. (2000) and Abecasis et a1. (2007),
respectively, are given in Figure 3 (see Supplementary Fig. 13).
We choose to use two sequences per subtype and CRF, respectively,
since at the time of the beginning of our project, only two full-length
sequences of Subtype I were available and ijMM occasionally
experience difﬁculties in case of varying number of sequences per
subtype or CRF, respectively.

To verify whether ARGUS can theoretically distinguish between
these two concrete classiﬁcations, we ﬁrst simulate the data and
apply the same testing method as in Section 3.1.1. This simulation
test is in preparation to the application using the real sequences in
Section 3.2. More precisely, our test is composed of two parts: in the
ﬁrst one, C02 is the original classiﬁcation, whereas in the second
one C.G is the original classiﬁcation. For both parts C.02 as well
as C.G are used as test classiﬁcations. We generate 10 ARGs and
simulate 5 sets of tip sequences for each ARG (for both parts).

When C02 is scored in the ﬁrst part, the position of the segment
belonging to the unknown subtype has to be provided manually. Of
course, this implies that ARGUS is provided with a part of the true
classiﬁcation instead of having to estimate it, which facilitates its
task. Nevertheless, the introduced bias is most likely small as the
unknown region is only short.

To characterize the ARGs with respect to how feasible the task
is to decide which classiﬁcation is the original one, we introduce
two simple measures, explained in Figure 4 (separating and noise
distance).

The results are shown in Figures 5 and 6. Apparently our
theoretical considerations about the explanatory power of the ratio
of separating and noise distance is supported by these testing
results: In the ﬁrst part (C.02 being the original classiﬁcation),

 

1412

112 /3.Io's[Bumo[p.IOJxosotwuiJOJutotq”:duq wort papeolumoq

9103 ‘{g isnﬁnv 110::

HIV classification using the coalescent theory

 

l:l
separating
1 X\l:l /2< l:l
noise /:I:I X /X l:|:\
X \X X
l:l l:l:l l:l

Fig. 4. ARG illustrating the ‘separating distance” and the ‘noise distance”.
To be able to detect the recombination event. the nodes labeled 1 and 2 have
to be sufﬁciently different. That is. the ‘separating distance” needs to be large
enough. Contrariwise. the larger the ‘noise distance”. the less precisely the
sequences of Nodes 1 and 2 can be reconstructed from the tip sequences.
That is. the ‘noise distance” should be small. The deﬁnition of the separating
and noise distance is given in Supplementary Section 4. For details about
the symbolism used in the ARG. see Figure 2.

 

 

0.0

Score difference in 1000
.

 

 

| | | | | | | | | |
(0.52, 0.49) (0.72, 0.35) (1.37, 0.65) (0.99, 0.33) (1.26, 0.33)

(0.84, 0.67) (0.84, 0.41) (0.91, 0.42) (1.88, 0.51) (1.15, 0.26)

 

(separating distance, noise distance)

Fig. 5. Results for the test setting preparing for the application with
C02 being the original classiﬁcation. On the vertical axis. log(P(D|GT)—
logP(D|G0))-10_3 is given. with GT the most likely ARG for the test
classiﬁcation CG and G0 the most likely reconstructed ARG for the original
classiﬁcation C.02. On the horizontal axis. the separating and noise distance
is given for each of the 10 generated ARGs. The ARGs are sorted by their
ratio of separating to noise distance (increasing from left to right). All points
on a vertical represent tests conducted for the same ARG with different tip
sequence data (for clarity. points with very similar y-Values were shifted
slightly horizontally). In case ijMM was not able to detect the CRF in
C.G (i.e. the alleged CRF was diagnosed to belong to a pure subtype). the
test results are omitted. For the MCMC algorithm. 20 different initial ARGs
were used.

ARGUS fails for 1 out of 10 simulated ARGs to always (i.e. for all
simulated tip sequences sets) score the original classiﬁcation highest
(applying ARGUS to C.G, for 4 ARGs ijMM does not predict
any recombination in Subtype G for any simulated tip sequences
set). The ARG yielding misclassiﬁcations is the one with the lowest
distance ratio. For this ARG, ARGUS fails for four tip sequences
sets with the wrong classiﬁcation scoring at most 26 points better
than the original one.

In the second part (C.G being the original classiﬁcation), ARGUS
also fails for 1 out of 10 simulated ARGs to always score the
original classiﬁcation highest. The ARG yielding misclassiﬁcations
is the one with the second lowest distance ratio, with the ones with
the lowest and the ﬁfth lowest ratio being quite close to failing.
For the second ARG, ARGUS fails for four tip sequences sets with
the wrong classiﬁcation scoring at most 11 points better than the
original one. For both parts, ijMM always succeeds in detecting
breakpoints in the alleged CRF of the original classiﬁcation.

 

u.

 

0.0
—o.2 - .

g- 
—o.4 -

—0.6 -

—0.8 ' '

Score difference in 1000

—1.0 T -

 

 

.
o
o
|

—1.2 —

 

| | |
(0.77, 0.48) (1.2, 0.67) (1.91, 0.6) (1.72, 0.48) (0.92, 0.2)

(0.61, 0.36) (0.77, 0.27) (0.91, 0.28) (1.5, 0.33) (1.76, 0.32)

(separating distance, noise distance)

Fig. 6. Results for the test setting preparing for the application with
C.G being the original classiﬁcation. On the vertical axis. (logP(D|GT)—
logP(D|G0))- 10‘3 is given. with GT and G0. respectively. the most likely
(reconstructed) ARG for C02 and CG. respectively. For more details (with
the role of CG and C02 switched). see Figure 5.

It should be stated that for the setting presented in Section 3.1.1,
no signiﬁcant relation between separating and noise distance and
the reliability of ARGUS was observable (data not shown). Due
to the simplicity of these distance measures and their obvious
shortcomings, it has to be expected that they fail their purpose for
some settings.

3.2 Empirical data

To decide which classiﬁcation from Figure 3 describes the real
situation better, we randomly choose two full-length sequences from
Subtype A, G, H and J and from CRF02. Applying ARGUS to them
(performing 30 runs of the MCMC algorithm for each classiﬁcation),
yields a maximum score of —33513 for C02 and —33 714 for
C.G. During the tests in Section 3.1.2, we saw that—even under
worse circumstances—the difference between the score of the wrong
classiﬁcation and the score of the right one never exceeded 26
(in case of a misclassiﬁcation). Since the score of C02 is higher
than the one of CG by more than 200, ARGUS indicates that the
classiﬁcation currently in use is the preferable one. We, therefore,
conclude that the sequences of CRF02 are indeed recombinants of
the Subtypes A and G rather than the sequences of Subtype G being
recombinants of the ‘Subtypes’ H, J and CRF02.

Since P(D|G)= niP(Dl-|G) where Di is the tip sequence data at
position i, we can easily analyze which part of the genome supports
which classiﬁcation better. To this end, we plot logP(Dl-|G)—
logP(Dl-|G’) with G and G’ the most likely reconstructed ARGs
of the two considered classiﬁcations (Fig. 7). Moreover, ARGUS
provides the option to visualize the most likely ARG found by the
MCMC algorithm using Graphviz (http://www.graphviz.org). For
C.02, this visualization is shown in Supplementary Figure 10 in a
processed form.

Abecasis et a1. (2007) applied monophyly rules to determine
whether G or CRF02 is a subtype. They obtained conclusive results
for the region corresponding to positions 4393—4802 in HXB2,
favoring CRF02 to be a subtype. This region corresponds to positions
3494—3928 in our analysis. Figure 7 shows that our results do
not support this conclusion. One has to keep in mind that our
method strongly differs from the one used by Abecasis et a1. (2007).
Moreover, on the one hand, Abecasis” method makes use only of a
small part of the available information and applies a model of low

 

1413

112 /3.Io's[sumo[p.IOJxosonBuiJOJutotq”:duq wort papeolumoq

9103 ‘{g isnﬁnv 110::

I.Bulla et al.

 

 

0.10
I

MA(200) of Do)
000 005
I
SE:

 

 

 

—005
I
s s
C
3 ;

 

I
2000 4000 6000 8000
Position

Fig. 7. Moving average of D(i):=logP(Di|G)—logP(Di|G’) with an
averaging period of 200 positions. Here. G and G’ are the most likely
reconstructed ARGS of the classiﬁcations C02 and CG. respectively. (see
Fig. 3 for the classiﬁcations). At position i. the average of position 1' until
[+199 is given.

complexity. On the other hand, our method is only able to test two
alternative classiﬁcations ﬁtting into the framework of ARGUS. In
particular, the genome of CRFs is not allowed to be composed of
other CRFs but only subtypes and no recombination events near to
the root of the ARG are allowed. Both simplifying assumptions are
violated in the real evolutionary history of HIV-1.

3.3 Comparison

We restrict our comparison to the version 3.0 of VisRD since, to
our knowledge, VisRD is the only software tool that is suitable to
address the task carried out by ARGUS. For the comparison, we
use the ﬁrst ﬁve ARGs generated according to classiﬁcation Cl.l
in Section 3.1.1. Due to the fact that VisRD has to be operated
interactively, we restrict ourselves to a smaller test setting than the
ones used in Section 3.1. For each ARG, we simulate three sets of
tip sequences with a genome length of 8500 bp, using the simpler
Jukes—Cantor model since VisRD does not allow for a GTR model.
We apply the taxon ranking analysis of VisRD to these 15 sets of
simulated tip sequences (with default windows and step size and—
using Random Shufﬂing—default number of generated replicate
datasets per set). VisRD ﬁnds no recombination at all. Moreover,
the sequence triple VisRD determines to be the most likely to be a
recombinant is not one of the two recombinant triplets for 11 out of
15 sets of simulated tip sequences.

3.4 Running time

For the test settings discussed in Section 3.1.1 and 3.1.2 of the article,
the running time (on a Dell PowerEdge 2650 2, 80GHz/512 KB
Xeon) of the MCMC algorithm lies between 6.9 and 394 min with
a mean of 45 min and quartiles of 26, 37 and 55 min. The running
time moderately depends on the data: considering all tested pairs
of original and test classiﬁcations separately, the minimal mean of
the running time is 28 min, the maximal 61 min. See Supplementary
Section 3.5 for ﬁirther details on the running time of ARGUS.

The running time of ijMM is described in Schultz et a1. (2006).

4 DISCUSSION

We presented ARGUS, a classiﬁcation tool for recombining viruses,
particularly HIV. Up to now, researchers intending to classify
sequences of strongly recombining viruses had to analyze the

sequences separately by segmenting their genome in recombination-
free parts and applying traditional phylogenetic tools to them. The
information stemming from different parts of the genome had to be
assembled by ad hoc methods (if even possible at all). Here, ARGUS
offers an alternative by applying sophisticated coalescent theory and
MCMC-based methods and incorporating much larger parts of the
available information in an integrated and model-based way.

The recently developed version 3.0 of VisRD does not perform
well on the datasets analyzed in this article. Nevertheless, one has
to keep in mind that the approach used by VisRD is in principle
not adequate for a small number of sequence groups. In fact our test
setting is the smallest possible for which the taxon ranking of VisRD
can be applied. Since applying ARGUS on a very large number of
sequence groups is prohibitive with respect to running time (at least
in the current implementation), we can conclude that the scopes of
VisRD and ARGUS are roughly exclusive.

Moreover, the application range of ARGUS is limited in
two directions: ﬁrst, ARGUS is not designed to rank different
classiﬁcations not containing any recombinants. This is due to
the fact that the two classiﬁcations assigning the same subtype to
all sequences and assigning a different subtype to each sequence,
respectively, achieve the highest likelihood among all CRF-free
classiﬁcations by deﬁnition. Second, when applying ARGUS
one has to keep in mind that there might be very plausible
classiﬁcations that do not ﬁt into the framework of ARGUS,
i.e. classiﬁcations incorporating intra-subtype recombination and
recombination events in the early history of the ARG.

In this study, we ﬁrst veriﬁed in different test settings that ARGUS
possesses the ability to reliably identify the most appropriate
classiﬁcation in most investigated cases. Due to the character of the
test method, we can conclude that for input sequences stemming
from (sub-)species well separated by founder effects—such as
HIV-l—ARGUS classiﬁes correctly with very high probability.
Afterwards, we applied ARGUS to real-world HIV-1 Group M data
in order to address the intensively debated question whether CRF02
is truly a CRF or rather the alleged Subtype G is one. Our results
show that the former classiﬁcation explains the data better.

The fact that we had to run the MCMC algorithm with up to 50
initial ARGs to achieve satisfying results, shows that the MCMC
algorithm is not often able to ﬁnd the global maximum directly,
very probably due to getting trapped in a local maximum. We plan
to overcome this problem by applying Metropolis-coupled MCMC
(MC3) methods (Altekar et a1., 2004).

A standard task after sequencing a new HIV genome is subtyping
as performed by ijMM and other tools: The genome is segmented
into regions that are each related to one known pure subtype of
HIV. A ﬁiture application of ARGUS will be to vote between the
results of several subtyping tools in case they disagree on the correct
classiﬁcation of the query sequence (easily carried out by replacing
the recombination prediction of ijMM by the ones of the other
subtyping tools). This application is a special case for the model in
which two or more classiﬁcations are compared that differ only in the
recombination pattern of one sequence, the other sequences all being
pure subtypes. While ARGUS does not search for a recombination
pattern itself, its comprehensive model is well suited to compare
such patterns.

In the near future, we plan to incorporate additional rules (such
as intra-subtype recombination and recombination near to the root)
into ARGUS and allow for growth of the population and temporally

 

1414

112 /3.Io's112an0IpJOJXO'sotwuiJOJutotq”:duq mot} papeo1umoq

9103 ‘1gisn8nv 110::

HIV classification using the coalescent theory

 

spaced sequence data. In the long run, we will generalize our
approach and perform an unconstrained search of the space of ARGs
without requiring prior classiﬁcation of the input sequences into
subtypes and recombinant forms.

We would like to encourage users to contact us for assistance in
assessing running time and suitability of ARGUS for their purposes.

F unding: Deutsche Forschungsgemeinschaft (STA 1009/5-1 to B.M.
and MS); National Institutes of Health-Department of Energy
interagency agreement (Y1-AI-8309 to BK. and TL.)

Conﬂict of Interest: none declared.

REFERENCES

Abecasis,A.B. et al. (2007) Recombination confounds the early evolutionary history
of human immunodeﬁciency virus type 1: subtype G is a circulating recombinant
form. J. Virol., 81, 854378551.

Altekar,G. et al. (2004) Parallel Metropolis coupled Markov chain Monte Carlo for
Bayesian phylogenetic inference. Bioinformatics, 20, 407415.

Anderson,J.P. et al. (2000) Testing the hypothesis of a recombinant origin of human
immunodeﬁciency virus type 1 subtype E. J. Virol., 74, 10752710765.

Bailes,E. et al. (2003) Hybrid origin of SIV in chimpanzees. Science, 300, 1713.

Bergmann,M. et al. (1992) Transfection-mediated recombination of inﬂuenza A virus.
J. Virol., 66, 757G7580.

Charrel,R.N. et al. (2001) The Whitewater Arroyo virus: natural evidence for
genetic recombination among Tacaribe serocomplex viruses (family Arenaviridae).
Virology, 283, 1617166.

de Oliveira,T. et al. (2005) An automated genotyping system for analysis of HIV-1 and
other microbial sequences. Bioinformatics, 21, 379773800.

Feil,E.J. and Spratt,B.G (2001) Recombination and the population structures of bacterial
pathogens. Annu. Rev. Microbiol, 55, 5617590.

Foley,B. and Fauquet,C. (2008) We’re not as confused as we may think we are:
HIV nomenclature and classiﬁcation in comparison to the nomenclature and
classiﬁcation of other viruses and bacteria. 15th International HIV Dynamics &
Evolution meeting, Santa Fe, NM.

Goss,E.M. et al. (2005) Genetic diversity, recombination and cryptic clades in
Pseudomonas viridiﬂava infecting natural populations of Arabidopsis thaliana.
Genetics, 169, 21735.

Grifﬁths,R.C. and Marjoram,P. (1997) An ancestral recombination graph. In Donnelly,P.
and Tavaré,S. (eds) Progress in Population Genetics and Human Evolution.
Springer, New York, pp. 2577270.

Hahn,C.S. et al. (1988) Western equine encephalitis virus is a recombinant virus.
Proc. Natl Acad. Sci. USA, 85, 599776001.

Hein,J . et al. (2005) Gene Genealogies, Variation and Evolution: A Primer in C oalescent
Theory. Oxford University Press, USA.

Hudson,R.R. (1983) Properties of a neutral allele model with intragenic recombination.
Theor Popul. Biol., 23, 1837201.

Hudson, R. R. (1990) Gene genealogies and the coalescent process. In Futuyama,J.A.D.
(ed.) Oxford Surveys in Evolutionary Biology. Vol. 7, Oxford University Press,
Oxford, pp. 144.

Jarvis,T.C. and Kirkegaard,K. (1992) Poliovirus RNA recombination: mechanistic
studies in the absence of selection. Virology, 11, 313573145.

Kingman,J.F.C. (1982a) The coalescent. Stoch. Proc. Appl., 13, 2357248.

Kingman,J.F.C. (1982b) On the genealogy of large populations. J. Appl. Probab, 19A,
2743.

Kuhner,M.K. (2006) LAMARC 2.0: maximum likelihood and Bayesian estimation of
population parameters. Bioinformatics, 22, 7687770.

Kuhner,M.K. et al. (2000) Maximum likelihood estimation of recombination rates from
population data. Genetics, 156, 139371401.

Lai,M.M. (1992) RNA recombination in animal and plant viruses. Microbiol. Mol. Biol.
Rev., 56, 61479.

Leitner,T. (2002) The molecular epidemiology of human viruses. Kluwer Academic
publishers, Norwell, MA.

Lemey,P. et al. (2009) Identifying recombinants in human and primate
immunodeﬁciency virus sequence alignments using quartet scanning. BMC
Bioinformatics, 10, 126.

Lole,K.S. et al. (1999) Full-length human immunodeﬁciency virus type 1 genomes
from subtype C-infected seroconverters in India, with evidence of intersubtype
recombination. J. Virology, 73, 1527160.

Lukashev,A.N. et al. (2005) Recombination in circulating Human enterovirus B:
independent evolution of structural and non-structural genome regions. J. Gen.
Virol., 86, 328143290.

Maydt,J. and Lengauer,T. (2006) Recco: recombination analysis using cost
optimization. Bioinformatics, 22, 106471071.

Orlich,M. et al. (1994) Nonhomologous recombination between the hemagglutinin gene
and the nucleoprotein gene of an inﬂuenza virus. Virology, 204, 462465.

Rambaut,A. et al. (2004) The causes and consequences of HIV evolution. Nat. Rev.
Genet, 5, 5241.

Robertson,D.L. et al. (2000) HIV-1 nomenclature proposal. Science, 288, 55757.

Schultz,A.-K. et al. (2006) A jumping proﬁle hidden Markov model and applications
to recombination sites in HIV and HCV genomes. BMC Bioinformatics, 7, 265.

Shaikh,R. et al. (1978) Recombinant avian oncoviruses I. Alterations in the precursor
to the internal structural proteins. Virology, 87, 3267338.

Sibold,C. et al. (1999) Recombination in Tula hantavirus evolution: analysis of genetic
lineages from Slovakia. J. Virol., 73, 667475.

Spang,R. et al. (2002) A novel approach to remote homology detection: jumping
alignments. J. Comput. Biol., 9, 7477760.

Wakeley,J. (2008) Coalescent Theory: An Introduction. Roberts & Company Publishers,
USA

Wiuf,C. and Hein,J. (1999) Recombination as a point process along sequences.
Theor. Popul. Biol., 55, 2487259.

Worobey,M. et al. (1999) Widespread intra-serotype recombination in natural
populations of dengue virus. Proc. NatlAcad. Sci. USA, 96, 735277357.

Zhang,M. et al. (2006) ijMM at GOBICS: a web server to detect genomic
recombinations in HIV-1. Nucleic Acids Res., 34, W4637W465.

Zhuang,J. et al. (2002) Human immunodeﬁciency virus type 1 recombination: rate,
ﬁdelity, and putative hot spots. J. Virol., 76, 11273711282.

 

1415

112 /3.IO'S[1211anprOJXO'SOIJBLUJOJIIIOIq”K1111] 111011 papeo1umoq

9103 ‘1gisn8nv 110::

