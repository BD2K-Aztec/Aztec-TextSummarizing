Bioinformatics, 31(13), 2015, 2131—2140

doi: 10.1093/bioinformatics/btv124

Advance Access Publication Date: 26 February 2015
Original Paper

 

Gene expression

SimSeq: a nonparametric approach to
simulation of RNA-sequence datasets

Sam Benidt* and Dan Nettleton

Department of Statistics, Iowa State University, Ames, IA 50011-1210, USA

*To whom correspondence should be addressed.
Associate Editor: Janet Kelso

Received on August 21, 2014; revised on February 4, 2015; accepted on February 23, 2015

Abstract

Motivation: RNA sequencing analysis methods are often derived by relying on hypothetical paramet—
ric models for read counts that are not likely to be precisely satisfied in practice. Methods are often
tested by analyzing data that have been simulated according to the assumed model. This testing strat—
egy can result in an overly optimistic view of the performance of an RNA—seq analysis method.
Results: We develop a data—based simulation algorithm for RNA—seq data. The vector of read
counts simulated for a given experimental unit has a joint distribution that closely matches the dis—
tribution of a source RNA—seq dataset provided by the user. We conduct simulation experiments
based on the negative binomial distribution and our proposed nonparametric simulation algo—
rithm. We compare performance between the two simulation experiments over a small subset of
statistical methods for RNA—seq analysis available in the literature. We use as a benchmark the
ability of a method to control the false discovery rate. Not surprisingly, methods based on paramet—
ric modeling assumptions seem to perform better with respect to false discovery rate control when
data are simulated from parametric models rather than using our more realistic nonparametric
simulation strategy.

Availability and implementation: The nonparametric simulation algorithm developed in this article
is implemented in the R package SimSeq, which is freely available under the GNU General Public
License (version 2 or later) from the Comprehensive R Archive Network (http://cran.rproject.org/).
Contact: sgbenidt@gmail.com

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

1 Introduction

Over the past decade, new high—throughput next—generation
sequencing technology has become readily available for gene expres—
sion profiling of RNA samples. The new next—generation sequencing
technology has unseated the previous dominance of microarray
technology, offering low sequencing costs, more detailed sequencing
information and a wider range of signal detection.

A main focus in the statistical analysis of an RNA—seq dataset is
the detection of differential expression. A gene is considered to be
differentially expressed (DE) across a set of conditions if the
mean gene expression level (as measured by RNA—seq read count)
differs among any of the conditions. Otherwise, we say the gene is
equivalently expressed (EE) or is a null gene. For the sake of

exposition, we assume that the statistical analysis under discussion
is on the gene level, though our comments could apply equally well
to count datasets involving other genomic features for which counts
can be reliably obtained.

1.1 Benchmarks for simulation experiments

Many researchers design simulation experiments to study the effi—
cacy of their proposed methods over a range of differing situations.
In the case of RNA—seq data, such studies frequently rely on simulat—
ing counts from a known parametric distribution such as negative
binomial (NB), with parameters guided by a real RNA—seq dataset.
However, datasets simulated in this manner do not necessarily
match the complex structure of the RNA—seq datasets they attempt
to emulate. In this article, we propose a nonparametric simulation

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2131

112 /310'S[BIIJHO[pJOJXO'SOTIBLUJOJIITOTCIHK1111] 11101} popcolumoq

91oz ‘Og anﬁnv 110 ::

2132

S.Benidt and D.Nettleton

 

algorithm for the construction of an RNA—seq dataset with two in—
dependent treatment groups. The simulated dataset closely matches
the complex structure of real RNA—seq data. We refer to this data—
based simulation procedure as the SimSeq algorithm.

Data—based simulation procedures have been used to simulate
gene expression experiments. A data—based simulation procedure in—
volves subsampling from a large source dataset in such a way that
the underlying truth of the dataset is known, e.g. the null hypothesis
of no difference in population mean expression is satisfied. Gadbury
et al. (2008) proposed a simulation procedure for constructing
plasmode microarray datasets from a high dimensional microarray
dataset. Nettleton et al. (2008) developed a different data—based
simulation method for microarray data to validate a proposed multi—
response permutation procedure for gene set testing. Liang and
Nettleton (2010) made use of this same simulation strategy to evalu—
ate a hidden Markov model for microarray data. Robinson and
Storey (2014) used a resampling method based on the binomial dis—
tribution to determine optimal sequencing depth in an RNA—seq
experiment. Love et al. (2014) used a data—based simulation proced—
ure to support their DESqu methodology for RNA—seq data ana—
lysis. Griebel et al. (2012) developed an RNA—seq simulation
procedure that mimics the data generating process. Reeb and Steibel
(2013) developed another plasmode simulation algorithm for RNA—
seq datasets. Although the concept of data—based simulation in gene
expression experiments is not new, the novelty of our proposed
method lies in the specific implementation of our nonparametric
simulation algorithm for RNA—seq data.

We conduct two simulation studies, one using a standard para—
metric simulation approach based on NB distributions and the other
using our proposed nonparametric simulation algorithm. We do so
for a small subset of statistical methods in the literature: DESqu
(Anders and Huber, 2010; Love et (11., 2014), edgeR (McCarthy
et (11., 2012; Robinson and Smyth, 2007, 2008; Robinson et (11.,
2010), QuasiSeq (Lund et (11., 2012), Voom (Law et (11., 2014) and
SAMseq (Li and Tibshirani, 2013). Unlike most simulation studies,
the main focus of our work is a comparison of simulation methods
rather than a comparison of the analysis methods. We are unaware
of other RNA—seq simulation studies that conduct a side—by—side
comparison of a data—based simulation procedure and a parametric
simulation procedure.

We use the average false discovery proportion (FDP) compared
with nominal false discovery rate (FDR) as a benchmark of perform—
ance for a given statistical method. FDP is defined to be zero when—
ever no null hypotheses are rejected and is otherwise the number of
false positives (type I errors) divided by the number of rejected null
hypotheses. The FDR introduced by Benjamini and Hochberg
(1995) is the expected value of FDP. Thus, a comparison of average
FDP to nominal FDR allows us to empirically evaluate how well an
analysis method controls FDR for a given simulation method.

In our simulation experiments, we find that average FDP is typic—
ally lower under the standard parametric simulations. Thus, simula—
tion studies based on parametric simulations may give a misleading
view of the effectiveness of a proposed statistical method for RNA—seq
data analysis. We believe that using the nonparametric SimSeq algo—
rithm gives a more accurate picture of the performance of a given
method to detect differential expression while controlling FDR.

2 Preliminaries

2.1 Notation
Let Ybe a matrix of RNA—seq read count data, and let ygit be a single
read count in Y, where g : 1,  ,G indexes genes, 1': 1,  ,Nt

indexes experimental units within each treatment group and t : 1, 2
indexes the two treatment groups. Let g E {1, 2, . . . , G} be the
index set of all genes in Y. As explained in more detail in Section 3,
we assume that both N1 and N2 are relatively large. We refer to Y as
the source dataset and assume the entries of Y are arranged as

follows:
y111 y121 -- - y1N11 y112 y122 - - - 3’1sz
y211 y221 - - - y2N11 y212 y222 - - - 3’2sz

Y :
yG11 yG21 - - - yGN11 yG12 yczz - - - yGsz

2.2 Choice of normalization factors

In modeling the read counts within a given gene and treatment
group, we cannot assume that the data are identically distributed
due to differing levels of sequencing between the experimental units.
Therefore, we model the mean gene expression level within a given
gene g and treatment group t as having a common mean lg, that is
altered by an experimental unit—specific multiplicative normalization
factor cit, so that

EO’git) : 48151?

forgeg;i:1,  ,Ntandt:1,2.

There have been many methods proposed for calculation of
the multiplicative normalization factors. Bullard et al. (2010) sug—
gested taking the 0.75 quantile of all counts within an experimen—
tal unit, excluding genes with all zero counts across the entire
dataset. Anders and Huber (2010) proposed the following: within
each experimental unit 1' in treatment t, compute the ratio of the
count of gene g divided by the geometric mean of all counts for
gene g and then take the median of the computed values over the
set of all genes, skipping genes with a geometric mean of zero.
Robinson and Oshlack (2010) proposed the trimmed mean of M
values (TMM), which uses a weighted trimmed mean of log ex—
pression ratios. Of the three methods listed, the TMM method
offers the lowest coefficient of variation in expression (Dillies
et (11., 2013).

2.3 Subsampling distributions

We make use of the following result in the SimSeq algorithm to
simulate DE genes. For a given gene g E g, let yg-l : (Ygllr  r
ygN11) and ygg :(yg12,  ,ygsz). Suppose we wish to sub—
sample y: 2 (ya,  at.) from ya and y::<y:1,  mi.) from
yg.2 where n 3min {N1,N2}. Then the conditional distribution of
y’f given yg.1 and the conditional distribution of )1; given ygg are
known exactly and are different provided that yg.1 is not a per—
mutation of ygg.

3 The SimSeq algorithm

SimSeq simulates a matrix of RNA—seq read counts by subsampling
columns from a large source RNA—seq dataset and then swapping in—
dividual read counts within genes adjusted by a correction factor to
create differential expression. The SimSeq algorithm takes the fol—
lowing as a set of inputs: a source RNA—seq dataset Ywith two inde—
pendent treatment groups as described in Section 2.1; a vector 1: of
computed normalization factors with one element for each column
of the source dataset; the number of EB genes G0 and DE genes G1
in the simulated matrix where G0 + G1£G and the number of

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Idllq 11101} pQPBOIII/lAOG

9103 ‘Og anﬁnv 110 ::

ShnSeq

2133

 

columns 71 in each of the two treatment groups in the simulated ma—
trix where ngmin {N1, (N2/2j} where  is the ﬂoor function.
The SimSeq algorithm outputs a matrix of RNA—seq read counts
with G0 EE genes and G1 DE genes with 71 columns in each of two
independent treatment groups. Recall from Section 2.1 that 9 is the
index set of all genes in Y. The following algorithm describes the
simulation procedure:

1. For each g E 9, calculate a P value from a test of differential ex—
pression using the Wilcoxon Rank Sum test.

2. Given the set of calculated P values, calculate the local fdr for
each gene (Strimmer, 2008a, b) using the fdrtool package.

3. A vector of probability sampling weights w is computed as one
minus the local fdr for each gene g scaled to sum to unity.

4. Randomly select G1 genes to be DE from 9 without replacement
according to the vector of probability sampling weights w and
denote this set 91.

5. Randomly select G0 genes to be EE from 9\91 without replace—
ment according to equal weights and denote this set 90. Let 9*
E 90 U 91 be the set of all EE genes and DE genes chosen in steps
1 and 2.

6. Randomly select one column y without replacement from the
ﬁrst treatment group of Y. Subset y down to the set of genes 9* to
create the column x1. Assign x1 to simulated treatment group 1.

7. Randomly select one column without replacement from each
treatment group in Y and denote these two columns as Y1 and
Y2. Let c1 and 62 be their corresponding multiplicative normal—
ization factors from c.

8. Subset the two columns Y1 and Y2 to the set of genes 9*.

9. Create the column x2 in the following way. For each gene g E 9*
let

ylg ifg 6 go
x2 I . 7
g jy2g*C1/Cz+0.5j lng 91

where  is the ﬂoor function, so that y2g >r< 61/62 is rounded to the
nearest integer. Let x2 be the vector whose entries are {x2g : g E 9*
Assign x2 to simulated treatment group 2. (Note that (21/62 is a cor—
rection factor to allow the read counts in x2 to have a consistent nor—
malization factor.)

10. Repeat steps 6—9 a total of n times with columns sampled with—
out replacement across each iteration.

We have then assembled a matrix of RNA—seq counts with G1 DE
genes and G0 EE genes with respect to the finite population of the
sampled data in the source dataset for each gene. There is no guar—
antee that a gene that is DE in the simulated dataset with respect to
this finite population is DE in a (hypothetical) population from
which the source dataset is a sample. However, this distinction is
not important for simulation purposes because we are sampling
from the finite population defined by the source dataset in which
differential expression is guaranteed (see Section 2.3).

A slight modification to the algorithm allows us to work with
source datasets with a paired treatment design. We now require that
271 g min {N1, N2}. In step 1, we use the Wilcoxon Signed Rank test
instead of the Wilcoxon Rank Sum test. We modify step 6, so that a
pair of columns stemming from one experimental unit is selected
without replacement, and we let column 1 of the pair be y. Then in
step 7, a pair columns stemming from another experimental unit is
selected without replacement, and we let column 1 in the pair be Y1
and column 2 of the pair be Y2. Then proceed as normal in steps
8 and 9. An illustration of this algorithm for paired data is given
in Figure 1.

In the algorithm, a vector of probability sampling weights w is
provided that allows the user to control the distribution of effect
sizes for the DE genes. As described in the algorithm above, one
minus the local fdr for each gene g E 9 is used to define the vector of
probability sampling weights w. One minus local fdr provides an
estimate of the conditional probability of differential expression,
given the P value in the context of the collection of observed P val—
ues for all genes. With this choice for w, genes exhibiting the most
evidence for differential expression in the source dataset are more
likely to be included in 91 than other genes. However, all genes with
local fdr less than one have some chance for inclusion in 91. This
strategy avoids problems with selection bias that could occur if only
the genes most DE in the source dataset were used to define 91.
However, users are free to use other choices for w to control the
extent of differential expression in their simulations. For example,
users could assign zero weight to genes exhibiting fold changes
below a specified minimal threshold if desired.

A straightforward extension allows for three or more independ—
ent treatment groups to be simulated from a source dataset with
only two treatment groups by repeated callings of the SimSeq algo—
rithm on the same set of genes. A more detailed description along
with example source code to simulate three treatment groups is pro—
vided in the Supplementary Materials.

One benefit of simulating an RNA—seq dataset using this algo—
rithm is that our method of simulation preserves much of the ori—
ginal complex gene dependence structure of the source dataset. This
is in contrast to parametric simulation algorithms that simulate data
independently for each gene. The algorithm also allows for extreme
values to be sampled from the source dataset that may not show up
under a parametric simulation procedure. A straightforward gener—
alization of the algorithm allows for three or more independent
treatment groups. One drawback to this method is that simulation
of more complicated designs, such as designs depending on covari—
ates, is not available. The SimSeq package implements the algorithm
for simulating two independent treatment groups, which is the type
of design most often studied in practice.

We suggest using source datasets with sufficiently large sample
sizes in each treatment group relative to the desired sample sizes in
each of the simulated treatment groups. Suppose a sample size of n
is desired in each of the simulated treatment groups. For a paired
source dataset, 271 pairs of columns are used in the simulation algo—
rithm, so that a minimum sample size of 271 in each treatment group
is required in the source dataset to run the algorithm. However, a
greater number of data columns in each group are recommended to
ensure that simulated datasets are sufficiently different from each
other. A minimum sample size of 471 in each treatment group seems
to be adequately conservative for values of n 2 5. If we were to hold
the same set of genes constant for each simulated matrix, there

20 10
would be at least (10) < 5 > : 46 558512 possible simulation

datasets based on this rule using a source dataset with paired data.
For smaller sample sizes in each simulated treatment group, a sam—
ple size of 871 for n : 3 or n : 4 and 1671 for n : 2 is recommended to
increase the number of possible simulation datasets.

4 Preservation of source data characteristics

We assessed the ability of the SimSeq algorithm to preserve charac—
teristics of the Kidney Renal Clear Cell Carcinoma (KIRC) RNA—seq
dataset from The Cancer Genome Atlas project (The Cancer
Genome Atlas Research Network, 2013). We simulated two

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Idllq 11101} pQPBOIII/lAOG

9103 ‘Og anﬁnv 110 ::

2134

S.Benidt and D.Nettleton

 

Source Dataset with Paired Design

vector of read
counts for /
treatment group 1
vector of read
counts for
treatment group 2

I
Nt pairs of data vedtors corresponding
to Nt subjects

 

 

 

 

 

Discard Treatment 2 Data Vectors for n
Subjects in Group 1

1 1| | | |

Treatment 1 and 2
data for n subjects

Treatmeht 1 data
for n subjects

l

Randomly Select and Partition 2n
Subjects into Two Equal Groups

 

I I

Data vectors for n I
subjects in group 2

Data vectors for 12
subjects in group 1

Combine Treatment 1 and Treatment 2
Data for n Subjects in Group 2

Data vectors for n Data vect'ors for n
subjects in group 1 subjects in group 2

 

Fig. 1. Illustration of the SimSeq algorithm for a source RNA-sequence dataset with a paired treatment design. A simulated dataset with n samples in each of two

independent treatment groups is created

hundred SimSeq and NB datasets with 4000 EE genes and 1000 DE
genes each with a sample size of 10 in each treatment group (see
Section 5.3 for full details of the simulation algorithm).

Kernel density estimates of the empirical distribution of sample
average, sample variance and log base 2 fold change across genes
are presented in Figure 2. On average, the estimated empirical distri—
bution of the sample average, the sample variance and the log base 2
fold change across the set of simulated RNA—seq datasets matches
that of the original source dataset. The estimated empirical distribu—
tions of the log base 2 fold change exhibit more variation than the
estimated empirical distributions of the sample average and sample
variance.

Figure 3 plots histograms of Spearman’s rank correlation for a
fixed pair of genes involved in epithelial cell differentiation across
200 SimSeq simulated datasets and across 200 NB simulated data—
sets. For each simulated dataset, the computed value of Spearman’s
rank correlation in the fixed gene pair was based on the set of nor—
malized read counts [using TMM normalization (Robinson and
Oshlack, 2010)]within each gene. The empirical distribution of
Spearman’s rank correlation for the NB simulated datasets is cen—
tered at zero, whereas the empirical distribution is centered around
the Spearman’s rank correlation value of 0.817 in the KIRC dataset.
Figure 4 shows scatterplots of Spearman’s rank correlation for 28
genes involved in epithelial cell differentiation [GO:0030855
(Ashburner et (11., 2000)] for one SimSeq simulated dataset versus
the KIRC dataset and one NB simulated dataset versus the KIRC
dataset. There is a strong positive linear trend for the SimSeq simu—
lated data, whereas no trend is apparent for the NB simulated data.

Figure 5 gives a smoothed kernel density estimate of the mean—
variance relationship for the KIRC dataset, one NB simulated data—
set and one SimSeq simulated dataset. The plot indicates that the
mean—variance relationship of both of the simulated datasets

matches that of the source dataset. Figure 6 gives a MA plot of the
log base 2 fold change versus the log base 2 concentration [log
counts per million or log CPM (Robinson et (11., 2010)] for the
KIRC dataset, one NB simulated dataset and one SimSeq simulated
dataset. The empirical distribution of the log base 2 fold change of
both simulated datasets exhibits variability similar to that of the
source dataset.

5 Simulation study

We performed a parametric simulation study based on the NB
model and compared results with a nonparametric simulation study
using SimSeq. Rather than studying the entire corpus of statistical
methods available for RNA—seq data, we instead elected to focus on
several popular methods: DESqu (Anders and Huber, 2010; Love
et (11., 2014), edgeR (McCarthy et (11., 2012; Robinson and Smyth,
2007, 2008; Robinson et (11., 2010), QuasiSeq (Lund et (11., 2012),
Voom (Law et (11., 2014) and SAMseq (Li and Tibshirani, 2013). We
used the Wald test from the DESqu package (Anders and Huber,
2010; Love et (11., 2014), the GLM likelihood ratio test from the
edgeR package, the NegBinQLSpline method from the QuasiSeq
package, the voom method from the limma package and the
SAMseq method from the samr package. The following package ver—
sions were used: DESqu version 1.6.3, edgeR version 3.8.5,
QuasiSeq version 1.0—4, limma version 3.22.1 and samr version 2.0.
All default values of functions were used, except for the case of
DESqu, which we explain in further detail in Section 5.1.

5.1 Gene filtering criteria
A common practice in RNA—seq analysis is to exclude genes with
average expression less than a particular threshold. Genes with low

112 /310's1cu1n0[p101x0"sotJBurJOJutotq/ﬁduq 111011 pep1201umoq

9103 ‘0g15n8nv uo ::

 

 

 

 

 

 

 

SimSeq 2135
A B
0.100 -
.1 -

0 5 0.075 -
3‘ 3‘ 3‘
8010' 20.050- 8
an an an
O D D

0.05 - 0.025 -

0.00 - 0.000 -

 

 

 

 

 

 

 

 

 

o-

0 5 1'0 15
Log Base 2 of Mean Expression

10
Log Base 2 of Sample Variance

20 30 —I2 0 2
Log Base 2 Fold Change

Fig. 2. Kernel density estimates of the empirical distribution of sample test statistics for each gene for 200 SimSeq simulated RNA-seq datasets. The dotted line

gives the estimate for the source dataset, the black line gives the average kernel density estimate over all simulations and the dashed lines give pointwise 0.025

and 0.975 quantiles of the kernel density estimates. The Gaussian kernel was used and the bandwidth was selected by Silverman's rule of thumb. (A) The esti-

mates for the log base 2 of mean expression level, (B) the estimates for the log base 2 of the sample variance and (C) the estimates for the log base 2 fold change

 

 

 

 

 

 

 

 

 

 

 

 

 

 

A B
60 -
20 -
40 -
E E
:r :r
o o
u u
10 -
20 -
0 - 0 -
71.0 70.5 0.0 0.5 1.0 71.0 70.5 0.0 0. 1.0

5
Spearman Rank Correlation Spearman Rank Correlation

Fig. 3. Distribution of Spearman's rank correlation for a fixed pair of genes
involved in epithelial cell differentiation [GO:0030855 (Ashburner er al., 2000)]
over (A) 200 SimSeq simulated datasets and (B) 200 NB simulated datasets.
For each simulated dataset, the computed value of Spearman's rank correl-
ation in the fixed gene pair was based on the set of normalized read counts
[using TMM normalization (Robinson and Oshlack, 2010)] within each gene.
Spearman's rank correlation in the KIRC dataset was 0.817

expression values tend to show little evidence of differential expres—
sion. By removing low count genes from the analysis, q values
(Storey, 2002) for the remaining genes may decrease, allowing for
more genes to be declared DE for a given multiple decision testing
rule. Removing low count genes may also reduce the computational
expense of subsequent analysis.

By default, DESqu applies two sets of filtering criteria (Love
at 111., 2014). The first set of criteria is known as automatic inde—
pendent filtering. DESqu chooses a threshold for removal based on
the value that will maximize the number of genes declared DE using
a decision rule of estimated FDR (via Benjamini and Hochberg,
1995) less than 0.1. Because of computational stability of certain
methods and to ensure comparability between the methods, we
turned off the automatic independent gene filtering of the DESqu
method and instead, applied a filtering rule where a given gene is
included only if it has an average read count of at least 10 and at
least two nonzero reads.

 

9
or
.9
or
r

.9
c
r

9
c

Spearman Rank Correlation, SimSeq
r
p
or

Spearman Rank Correlation, Negative Binomial
.5
or
.

   

 

 

 

-1.0-

 

 

.5 0.0 0.5 .5 0.0 0.5
Spearman Rank Correlation, KIRC Spearman Rank Correlation, KIRC

Fig. 4. Scatterplot of Spearman's rank correlation for 28 genes involved in
epithelial cell differentiation [GO:0030855 (Ashburner er al., 2000)] for (A) one
SimSeq simulated dataset versus the KIRC dataset and (B) one NB simulated
dataset versus the KIRC dataset. Each point represents the Spearman's rank
correlation between a pair of genes based on the set of normalized read
counts [using TMM normalization (Robinson and Oshlack, 2010)] within each
gene. The triangular point highlights the fixed gene pair used in Figure 3

The second set of criteria DESqu uses is based on a Cook’s dis—
tance metric to ﬂag outliers in the data. When sample size is between
three and six, DESqu automatically removes genes with counts
ﬂagged as outliers, whereas for sample sizes of seven or more,
DESqu replaces counts ﬂagged as outliers with a trimmed mean
over all samples in a given gene and treatment state, scaled by a nor—
malization factor. We ran each simulation experiment twice, once
with no Cook’s distance filtering and once with the DESqu Cook’s
distance filtering rule prior to further analysis by each of the four
methods.

5.2 Description of source dataset

We based our simulation experiments on the KIRC RNA—seq dataset
from The Cancer Genome Atlas project (The Cancer Genome Atlas
Research Network, 2013). The data were sequenced using the
Illumina HiSeq 2000 RNA Sequencing Version 2 analysis platform

112 /310's1cu1n0[p101x0"sotJBurJOJutotq/ﬁduq 111011 pap1201umoq

9103 ‘0g15n8nv uo ::

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

2136 S.Benidt and D. Nettleton
A B C

an _ ID _ '0 _
§ “’ :3“: § ‘“  § ‘°
9 to _ 9 m 1 g m _
:1) N a; N a, N
E. o E- D a c:
g N — g N ~ g N —
5”. to _ 33 Lo _ 5’.) m _
o ‘- o ‘- o -
m N N
a.) ‘9 - a.) E — a: S -
m m a:
to no to 
In an — m In ~ '11 In — -,;’
on or or v“
o o ‘. o
.—l D .. ._l o .. . _J o _

I I I I I I I I I I I I
0 5 10 15 0 5 10 15 0 5 10 15

Log Base 2 of Mean Expression

Log Base 2 of Mean Expression

Log Base 2 of Mean Expression

Fig. 5. Mean-variance plots for (A) the KIRC dataset, (B) one SimSeq simulated dataset and (C) one NB simulated dataset. Each panel gives a smoothed kernel

density estimate of the mean-variance relationship

A

 

 

 

Log Fold Change : Trt 2-Trt 1

 

 

 

 

 

 

 

Log Fold Change : Trt 2-Trt 1

 

 

 

-10

|
O 5 1O 15 0
Average logCPM

Log Fold Change : Tumor-Non-Tumor

Average logCPM

 

 

|
5 1O 15 O 5 1O 15
Average logCPM

Fig. 6. MA plots for (A) the KIRC dataset, (B) one SimSeq simulated dataset and (C) one NB simulated dataset

and the estimated raw count for each gene was computed using
RSEM software (Li and Dewey, 2011). The data are available
for download from The Cancer Genome Atlas: https://tcga—data.
nci.nih.gov/tcga/. The version of the KIRC dataset used was
unc.edu_KIRC.IlluminaHiSeq_RNASqu2.Level_3. 1 .5 .0.

The KIRC dataset includes 72 pairs of matched columns with
two samples from each individual affected with KIRC: one from a
tumorous region of the body and one from a non—tumorous region.
The dataset also contains additional columns of RNA—seq data from
KIRC tumor and unmatched non—tumor samples. There was also
one matched sample with a tumor type coded as an additional new
primary type as opposed to the primary solid tumor type. For simpli—
city of design, we subsetted the data down to the paired data and
omitted the additional new primary tumor type for a total of 72
pairs of matched columns of data over 20 531 genes.

5.3 Simulation experiments

In all our simulation experiments, 200 RNA—seq datasets were simu—
lated to contain 5000 total genes with 4000 EE genes and 1000 DE
genes. Genes in the simulated RNA—seq dataset that did not have an
average read count of at least 10 and at least 2 nonzero reads were
removed from the simulated matrix, and additional simulated genes
were added, so that gene counts remained constant at 4000 EE genes

and 1000 DE genes. We studied three different choices for the sam—
ple size within each treatment group: n : 5, n : 10 and n : 20. We
ran each set of simulations twice, once using DESqu’s Cook’s dis—
tance filtering and once without the filtering criteria.

5 .3. 1 Nonparametric simulation

We shaped the KIRC dataset into the form of the source dataset
described in Section 2.1 and denote this dataset as Y. Let c be the vec—
tor of multiplicative normalization factors, which were computed by
applying the TMM method to Y using the calcNormFactors function
from the edgeR package. Let 9 be the set of all genes in Y.

For each simulated matrix of counts, the 1000 DE genes were se—
lected by the default weighting scheme discussed in Section 3 and de—
tailed as follows. Let i : 1, . . . ,72 index pairs of columns in Y, and
let 6,1 and 6,2 be the normalization factors for tumor and non—tumor
columns for pair I, respectively. Then for each gene g E 9, let ygﬂ
and ygi2 be the tumor and non—tumor counts for pair 1', respectively,
and let

- 1 - 1
dg, :log(M) —log(ﬂ) fori: 1,  ,72.

511 512

Apply a Wilcoxon Signed Rank test on the differences,
dg1, . . . ,dg72, to obtain a P value for testing the null hypothesis of

112 /310's1cu1n0[p101x0"sotJBurJOJutotq/ﬁduq 111011 pap1201umoq

9103 ‘0g15n8nv uo ::

 

 

 

 

 

 

SimSeq 2137
no differential expression for each gene g E 9. Given this set of EdgeR Quays“ SAMseq Voom
P values, the local fdr is computed by the fdrtool package 015.
(Strimmer, 2008a, b). We then take one minus the local fdr for each 0_10_ ‘ ' m
gene to determine the weight vector w. We then applied the SimSeq 0_05_ g
algorithm for paired data (as described in Section 3) to obtain each 000_ §
simulated dataset. _0 05 _ 
5.3.2 NB simulation 0_15_
We simulated counts from an NB distribution with parameters 0_10_
Simulation

suggested by the KIRC dataset. For each g E 9 we modeled ygit as
NB(ug,-t,cogt) for i: 1,  ,Nt and t:1, 2, where E(yg,-,) : ugh
: ’Igtcit and VarO’gz’t) : Mgr: + wgtﬂﬁrr
We estimated lg, based on the method of moments estimator
18, I 
Z-Ci

1 t

. Because we seek to simulate NB data with respect to

two independent treatment groups, we estimated dispersions for
each gene and treatment group in the following manner. For each
gene g E 9, let c0g1 be the tagwise estimate from the edgeR package
using only the tumor treatment group data, rather than the paired
data in the source dataset. Similarly, let 60g2 be the tagwise estimate
using only the non—tumor treatment group data.

To reduce Monte Carlo variability between the nonparametric
and parametric simulation procedures, we based the NB simulations
on the same set of randomly selected EE and DE genes and the same
set of randomly selected columns used in the nonparametric simula—
tion algorithm. For a given simulated matrix, let 90 be the set of
EE genes and 91 be the set of DE genes as randomly selected
in its corresponding nonparametric simulated matrix and let
9* I 90 U91. Letc’fl, 
tumor treatment columns used to simulate the treatment group 1
data and 631, 

,c’fn be the normalization factors from the

,cﬁn be the normalization factors from the tumor
columns used to simulate the treatment group 2 data in the nonpara—
metric simulation algorithm.
We simulate the matrix X with entries xgit where g E 9* , i : 1,
. ,n and t: 1, 2 as follows. For each gene g E 9*, we simulate xgit
frorn NB(2;tc:-‘t, 60;) where A; : 2g1 and a); : cbgl ifg E 90 and A;
: 2g, and a); : cbgt ifg E 91.

6 Simulation results

For each simulated matrix, the set of P values for each test of
differential expression was converted to q values (Storey, 2002) in a
manner equivalent to using the approach of Benjamini and
Hochberg (1995) for FDR control. The estimated FDR is c for
the multiple testing decision rule that rejects the null for the gth gene
if and only if its q value is no larger than cutoff c 6 (0,1). The
FDP at each cutoff was calculated as the number of type 1 errors
divided by the total number of genes declared DE. The average
FDP across replicate simulation runs provides empirical approxima—
tion of the true FDR for the q—value—based multiple testing decision
rule.

6.1 Results without Cook’s filtering applied

Figure 7 shows average FDP minus q—value cutoff plotted against its
corresponding q—value cutoff for each simulation algorithm (SimSeq
or NB) and analysis method without using Cook’s distance in gene
filtering. For the majority of statistical methods studied, the average
FDP minus the target FDR level was greater for SimSeq than for the
NB simulations. Using the voom method, average FDP minus the
target FDR level was slightly lower for SimSeq than for the NB
simulations at a sample size of 5 and showed little difference at a

SimSeq
NegBin

01 :ers ejdLues

 

 

(Average FDP) — (Q—Value Cutoff)

 

0.15-
0.10- g;
3
0.05- E
(.0.
0.00— r r . r — — — g
‘ 7 N
-0.05- D

 

 

 

 

 

 

 

 

 

 

 

 

000
005
010
0.00'
005—
010'

Q—value Cutoff

Fig. 7. Plot of average FDP minus q—value cutoff for simulations without
Cook's distance filtering. The dashed golden line at 0 represents an average
FDP that is exactly equal to its q—value cutoff, so that a method that achieves
this parity is neither liberal nor conservative with respect to FDR control. The
solid lines indicate approximate 95% pointwise confidence intervals for mean
FDP minus q—value cutoff

sample size of 10. Under the SAMseq method, which is a nonpara—
metric method, there was little difference in terms of average FDP
between the simulation methods at a sample size of 10. When sam—
ple size was increased to 20, the same trend as when sample size
equaled 10 occurred.

Figure 8 contains boxplots of the 0.05 quantile of P values from
null genes grouped by simulation type. Ideally, P values from null
genes would be uniformly distributed on the interval (0, 1), so the
0.05 quantile of the null P values would be 0.05. For all of the para—
metric methods based on the NB distribution, the median 0.05
quantile of P values from null genes was lower than 0.05 under the
SimSeq simulations. Furthermore, for the parametric analysis meth—
ods based on the NB distribution, the median 0.05 quantile of P
values from null genes was lower when SimSeq was used to simulate
data than when data were simulated according to NB distributions.
In contrast, the median 0.05 quantile of P values from null genes
was higher under the SimSeq simulations for the SAMseq and voom
methods. This effect is consistent with average FDP minus the target
FDR level being greater under the SimSeq simulations for parametric
methods based on the NB distributions as smaller P values from null
genes will tend to increase the proportion of type 1 errors given a
multiple testing decision rule.

6.2 Results using Cook’s filtering

Figure 9 presents average FDP minus q—value cutoff plotted against
its corresponding q—value cutoff for each simulation algorithm and
analysis method with Cook’s distance filtering. At a sample size of
5, there were few differences in terms of FDR control between the
two simulation procedures. When sample size was increased to the
levels of 10 and 20, differences in FDR control between NB and
SimSeq simulations were again apparent for the parametric analysis

112 /310's1cu1nofp101x0"sotJBurJOJutotq/ﬁduq 111011 pap1201umoq

9103 ‘0g15n8nv uo ::

2138

S.Benidt and D.Nettleton

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

DESqu EdgeR QuasiSeq SAMseq Voom
0.15 — 0
g
0.10 —
a 3
I 11>
<22
_ I;
m 005 $ :1: _1_ _1_ 51
g o
(I)
D)
= 0.00 —
a 0 15 -
E - : :
é a)
n)
V]
g 0.10- ; : 2 *3
E I 0 3,
> n»
I
o. _ —I— 1v.
3 0.05 _'_ -I- —|— + 8
2
2:
g 0.00 -
a 0.15 —
8
o' 0
0.10 — ,3
11>
<22
0.05— + $ + + + + I“?
N
O
0.00 —
. . . . . . . . . .
c' c' c' c' c'
a: a: a: a: a:
VJ m VJ m VJ 0: VJ 0: VJ m
E 2 E 2 E 2 E z E 2

Simulation

Fig. 8. Boxplots of the 0.05 quantile of P values from null genes grouped by
simulation type for simulations without Cook's distance filtering applied

 

DES.qu EdgeR QuasiSeq SAMseq Voom

 

0.10-

0.05-

000- _ _ _ _ _ _

 

g :ens ejdLues

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

E
B
3
0
$0.10-
; “a” 3' 11'
Imualon
é005_  g
V ...._ 7. OT SimSeq
1000- ___  ___ __ge
o. ‘ N ‘~. 9! NegBin
E—oos- 3
II)
DJ
E
>
$
0.10-
8’
0.05-  g
 a7
’7‘. (I)
000- ___ _ f ___ __g.
—0.05— E '8
... ... ... ... ...
BLOC BLOC BLOC lOD BLOC
Davqovoov Du—Qou—
Doc: Doc: Dc: Doc:

o
. . . D.

o o o o

Q-value Cutoff

Fig. 9. Plot of average FDP minus q—value cutoff for simulations with Cook's
distance filtering. The dashed golden line at 0 represents an average FDP that
is exactly equal to its q—value cutoff, so that a method that achieves this parity
is neither liberal nor conservative with respect to FDR control. The solid lines
indicate approximate 95% pointwise confidence intervals for mean FDP
minus q—value cutoff

methods based on the NB distribution, although the differences
tended to be somewhat reduced compared with the differences seen
(in Fig. 7) without Cook’s distance filtering. Boxplots of the 0.05
quantile of P values from null genes (not shown) are similar to those
in Figure 8 for the analysis without Cook’s distance filtering.

6.3 Simulating from a more homogeneous source
dataset

We repeated the simulation experiments described in Section 5.3
with a sample size of three using a dataset from Bottomly et a1.
(2011) as the source RNA—seq dataset. The Bottomly et al. dataset
contains two genotypes of genetically identical mice with sample
sizes of 10 and 11 in the two genotype groups, which is in contrast
to the KIRC dataset that involves subjects from heterogeneous
human populations. Plots of average FDP minus target FDR level
with and without Cook’s distance filtering are provided in Figures 1
and 2 of the Supplementary Files. In general, the differences in the
point estimates of average FDP minus target FDR level between the
SimSeq simulations and the NB simulations were smaller than
observed in the results from the KIRC dataset analysis. This suggests
that the NB assumption for gene—specific marginal read count distri—
butions may be more reasonable for data from genetically identical
experimental units than it is for more heterogeneous experimental
units. Although the point estimates of the discrepancy between aver—
age FDP and target FDR were similar between the SimSeq and NB
simulations, variation in FDP remained much higher for SimSeq
simulation than NB simulation despite the greater homogeneity in
experimental units.

7 Discussion

The principal differences between the SimSeq algorithm for simulat—
ing RNA—seq data and the NB simulations are that the SimSeq algo—
rithm makes no parametric distributional assumptions and preserves
the complex gene dependence structure of the original dataset. In
contrast, the NB method simulates data for each gene independently
according to marginal NB distributions. Thus, we should expect
methods that are more robust to varying distributional assumptions
to behave more similarly between the two simulation methods.
Conversely, methods that are less robust to departures from the
parametric distributional assumptions on which they are based
should perform worse when applied to the SimSeq simulated data.
Under the SAMseq and Voom methods, which are not based on NB
assumptions, there is little difference between the two simulation
types in terms of average FDP. In contrast, we see substantial differ—
ences in FDR control properties across simulation types for the other
analysis methods that rely on NB assumptions.

The difference in the results between the two simulation
approaches in terms of FDR control is important to point out. Some
methods that appeared to control FDR or were slightly liberal with
respect to FDR control under the NB simulations failed to control
FDR under the SimSeq simulations. Further, the ranking of each of
the methods in terms of FDR control sometimes differed depending
on whether NB or the SimSeq simulation was used.

It is also worth discussing the liberalness of the DESqu and
edgeR methods in general. Although other simulation studies have
already indicated that both of these methods exhibit liberalness in
FDR control (Burden et 41]., 2014; Soneson and Delorenzi, 2013),
our simulation study shows even greater discrepancies between
nominal and actual FDR control when these methods are applied to
datasets simulated by SimSeq from the heterogeneous KIRC dataset.
When we repeated the simulation study using the Bottomly et al.
dataset as the source dataset (for which the NB assumption may be
more reasonable), the liberalness of the two methods decreased, al—
though both methods still remained liberal.

Using the additional Cook’s distance filtering criteria as imple—
mented in the DESqu package reduced the difference in average

112 /310's112u1n0[p101x0"sotJBurJOJutotq/ﬁduq 111011 pap1201umoq

9103 ‘0g15n8nv uo ::

ShnSeq

2139

 

FDP between the nonparametric and parametric simulation proced—
ures. The nonparametric SimSeq algorithm is capable of sampling
extreme values that lie in the source dataset that are unlikely to be
generated by a parametric simulation algorithm. The presence
of such extreme values in SimSeq—generated data (that are not
subjected to Cook’s distance filtering) may partly explain the high
average FDP values for the fully parametric analysis methods.
Differences in FDR control across simulation strategies that remain
after Cook’s distance filtering show the effect of gene dependence
and departures of empirical data from NB distributions that cannot
be easily corrected by outlier removal.

One of the most striking features of Figures 2—4 (and
Supplementary Figs. S1 and S2) is the larger variation in simulation
results for SimSeq compared with the NB simulation method. This
larger variation is a consequence of the realistic dependence from
gene to gene in data simulated by SimSeq. Dependence among genes
leads to dependence among P values within each analysis. This de—
pendence among P values leads to greater variation in quantities
computed from P values, such as estimates of FDR and sample
quantiles of the P values from null genes. Results from NB simula—
tions with independent genes may lead researchers to underestimate
the uncertainty in simulation—based estimates of FDR. SimSeq cre—
ates a less optimistic but more accurate picture of the uncertainty
that can be expected when analysis methods are applied to real
RNA—seq data.

We also compared the performance of the four statistical meth—
ods using partial area under the receiver operating characteristic
curve (PAUROCC). PAUROCC indicates how well an analysis
method rank orders genes from most significant to least significant.
The specific value of PAUROCC utilized was calculated as the area
under the receiver operating characteristic curve for specificity val—
ues 20.95. These specificity values correspond to type I error rates
no larger than 0.05. PAUROCC was neither systematically higher
nor systematically lower under the NB simulations over the class of
statistical analysis methods studied.

A factor to consider when using the SimSeq package is the choice
of the source dataset. The source datasets used in this article were
the KIRC dataset from the Cancer Genome Atlas project and the
Bottomly et al. dataset. For the KIRC dataset, the samples stem
from a heterogeneous population crossing diverse factors such as
race, gender, age and ethnicity. This is in contrast to the Bottomly
et al. dataset that contains homogeneous samples with genetically
identical mice. The simulation experiments of Section 6 indicate that
there are larger differences in average FDP minus target FDR level
between the SimSeq simulations and the NB simulations for our
source datasets based on a heterogeneous population than for the
source dataset based on a more homogeneous population. To inves—
tigate the performance of analysis methods on relatively homoge—
neous observational or experimental units, more homogeneous
source datasets should be used. As more large RNA—seq datasets be—
come publicly available, the number and variety of source dataset
options will increase.

In conclusion, important performance benchmarks such as aver—
age FDP relative to nominal FDR can change drastically between
the two simulation procedures depending on the statistical method
used. The SimSeq algorithm simulates RNA—seq data that closely
matches the marginal distributions and complex dependence struc—
ture of real RNA—seq data. Simulation studies using this method
more accurately reflect average FDPs likely to be obtained in prac—
tice. Simulation experiments that rely on parametric models may
paint an overly optimistic picture for the efficacy of a given method.
As such, in evaluating current and future statistical methodologies in

gene expression analysis, we recommend using the SimSeq algorithm
because it more closely matches the complex structure of RNA—seq
data.

Funding

This work was supported by the National Science Foundation [grant
numbers IOS0922746, IOS1339348 and DMS1313224] and by the
National Institute of General Medical Science (NIGMS) of the
National Institutes of Health and the joint National Science
Foundation/NIGMS Mathematical Biology Program [grant number
R01 GM10945 8].

Conflict of interest: none declared.

References

Anders,S. and Huber,W. (2010) Differential expression analysis for sequence
count data. Genome Biol., 11, R106.

Ashburner,M. et al. (2000) Gene ontology: tool for the uniﬁcation of biology.
Nat. Genet., 25, 25—29.

Benjamini,Y. and Hochberg,Y. (1995) Controlling the false discovery rate: a
practical and powerful approach to multiple testing. I. R. Stat. Soc. B, 57,
289—300.

Bottomly,D. et al. (2011) Evaluating gene expression in c57bl/6j and dba/2j
mouse striatum using rna-seq and microarrays. PLoS One, 6, e17820.

Bullard,J. et al. (2010) Evaluation of statistical methods for normalization and dif—
ferential expression in mRNA-Seq experiments. BMC Bioinformatics, 11, 94.

Burden,C. et al. (2014) Error estimates for the analysis of differential expres-
sion from RNA—seq count data. Peer]. 2, e576.

Dillies,M.-A. et al. (2013) A comprehensive evaluation of normalization meth—
ods for Illumina high—throughput RNA sequencing data analysis. Brief.
Bioinform., 14, 671—683.

Gadbury,G.L. et al. (2008) Evaluating statistical methods using plasmode data
sets in the age of massive public databases: an illustration using false discov—
ery rates. PLoS Genet., 4, e1000098.

Griebel,T. et al. (2012) Modelling and simulating generic RNA-Seq experi-
ments with the ﬂux simulator. Nucleic Acids Res., 40, 10073—10083.

Law,C.W. et al. (2014) Voom: precision weights unlock linear model analysis
tools for RNA—seq read counts. Genome Biol., 15, R29.

Li,B. and Dewey,C. (2011) RSEM: accurate transcript quantiﬁcation from
RNA-Seq data with or without a reference genome. BMC Bioinformatics,
12, 323.

Li,J. and Tibshirani,R. (2013) Finding consistent patterns: a nonparametric
approach for identifying differential expression in RNA-Seq data. Stat.
Methods Med. Res., 22, 519—536.

Liang,K. and Nettleton,D. (2010) A hidden Markov model approach to testing
multiple hypotheses on a tree—transformed gene ontology graph. ]. Am. Stat.
Assoc., 105, 1444—1454.

Love,M.I. et al. (2014) Moderated estimation of fold change and dispersion
for RNA-Seq data with DESeq2. Genome Biol., 15, 550.

Lund,S. et al. (2012) Detecting differential expression in RNA—sequence data
using quasi—likelihood with shrunken dispersion estimates. Stat. Appl.
Genet. Mol. Biol., 11, 8.

McCarthy,D.J. et al. (2012) Differential expression analysis of multifactor
RNA—Seq experiments with respect to biological variation. Nucleic Acids
Res., 40, 4288—4297.

Nettleton,D. et al. (2008) Identiﬁcation of differentially expressed gene cate-
gories in microarray studies using nonparametric multivariate analysis.
Bioinformatics, 24, 192—201.

Reeb,P.D. and Steibel,J.P. (2013) Evaluating statistical analysis models for
RNA sequencing experiments. Front. Genet., 4, 178.

Robinson,D.G. and Storey,J.D. (2014) subSeq: Determining appropriate
sequencing depth through efﬁcient read subsampling. Bioinformatics, 30,
3424—3426.

Robinson,M.D. and Oshlack,A. (2010) A scaling normalization method for
differential expression analysis of RNA—seq data. Genome Biol., 11, R25.

112 /310's1cu1nofp101x0'sopBHJJOJutotq/ﬁduq 111011 pap1201umoq

9103 ‘0g anﬁnv uo ::

2140

S.Benidt and D.Nettleton

 

Robinson,M.D. and Smyth,G.K. (2007) Moderated statistical tests for assess-
ing differences in tag abundance. Bioinformatics, 23, 2881—2887.

Robinson,M.D. and Smyth,G.K. (2008) Small-sample estimation of negative
binomial dispersion, with applications to SAGE data. Biostatistics, 9,
321—332.

Robinson,M.D. et al. (2010) edgeR: a Bioconductor package for differential
expression analysis of digital gene expression data. Bioinformatics, 26,
139—140.

Soneson,C. and Delorenzi,M. (2013) A comparison of methods for differential
expression analysis of RNA—seq data. BMC Bioinformatics, 14, 91.

Storey,I.D. (2002) A direct approach to false discovery rates. I. R. Stat. Soc. B,
64, 479—498.

Strimmer,K. (2008a) fdrtool: a versatile R package for estimating
local and tail area-based false discovery rates. Bioinformatics, 24,
1461—1462.

Strimmer,K. (2008b) A uniﬁed approach to false discovery rate estimation.
BMC Bioinformatics, 9, 303.

The Cancer Genome Atlas Research Network (2013) Comprehensive
molecular characterization of clear cell renal cell carcinoma. Nature, 499,
43—49.

112 /310'S[BIIJDOIPJOJXO"SOIJBHIJOJIIIOICI/ﬂdnq 111011 pap1201umoq

9103 ‘0g anﬁnv uo ::

