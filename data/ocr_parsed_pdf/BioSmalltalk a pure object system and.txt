BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

H.F.Morales and G.Giovambattista

 

outFileStream :2 BioObject newFullFileNamed: 'out.txt'.
msa :2 BioAlignment new.
(BioNCBIBlastReader newFromXML: 'BS617—Alignment.xml')
selectedNodes: #(‘Hit_id' 'Hsp_align—1en' ‘Hsp_hseq')0
hitNodesDo: [ : hitNode |
hitNode hspsDo: [ : hspNode |
hspNode selectHspAlign = 240 ifTrue: [
msa addSequence: (BioSequence
newNamed: hitNode selectAccessionNumber
sequence: hspNode selectHspHSeq) ]]].
msa asFasta outputTo: outFileStream.
outFileStream close.

Fig. 1. A downloaded NCBI BLAST XML result is ﬁltered with align-
ments matching 240 nucleotide bases. Alignment object is built from se-
quences and exported as FASTA in a ﬁle

Table 1. Microbenchmark results

 

 

Environment LOC Average execution Peak memory
time (msec) usage (Mbytes)
BioPerl 23 11.496 88.035
Biopython 18 9. 595 47.443
BioSmalltalk 11 8.073 45.717

 

Note: LOC, lines of code.

(Gamma et al. 1995) is used to wrap the complex hierarchy of
speciﬁc parsers. The developer guide provides further informa—
tion on new engines, testing process and other subsystems.
Maintainability was recognized as an unfilled gap in bioinfor—
matics software development (Umarji and Seaman, 2008). An
advantage of BioSmalltalk is relying on a development style
that promotes highly factored reusable code (Boehm, 1986)
using browsers and inspectors in a targeted navigation manner
(Bergel et al., 2007; Bunge, 2009), applying automated code
refactorings directly through menu options (Opdyke, 1992).
This style replaces taking care of boilerplate code, static or primi—
tive—type coercion casting, checking class or function scopes and
maintaining directory trees, conﬁguration files or compiler ﬂags.
The software was tested on Windows, Linux and Mac OS X
platforms under Squeak and Pharo Smalltalk (Black et al. 2009).

3 RESULTS

We delivered an interactive programming system using a fully
reﬂective language for bioinformatics development. We believe
that our platform is suitable for a bioinformatics evolution to
human—centered long—running software. Of interest for future re—
search is building a user—base and solid automated build process.
We are open to collaboration in any of the areas in which
BioSmalltalk project can evolve.

Funding: This work is supported by The National Scientiﬁc
Research Council in Argentina (CONICET), (PIP 2010—2012 N
379).

Conﬂict of Interest: none declared.

REFERENCES

Bergel,A. et al. (2007) Meta—driven browsers. In Advances in Smalltalk, Proceedings
of 14th International Smalltalk Conference. Springer, pp. 134456.

Black,A. et al. (2009) Pltaro by Example. Square Bracket Associates, Kehrsatz,
Switzerland.

Boehm,B.W. (1986) Understanding and controlling software costs. 10th IFIP World
Congress. Dublin, pp. 7037714.

Bunge,P. (2009) Scripting Browsers with Glamour. PhD Thesis, Master’s Thesis,
University of Bern, Bern, Switzerland.

Cock,P.J. et al. (2009) Biopython: freely available python tools for computational
molecular biology and bioinformatics. Bioinformatics, 25, 142271423.

Diemand,A.V. and Scheib,H. (2004) MolTalk: a programming library for protein
structures and structure analysis. BMC Bioiiy’ormatics, 5, 39.

Excofﬁer,L.G. et al. (2005) Arlequin ver. 3.0: an integrated software package for
population genetics data analysis. Evol. Bioinform. Online, 1, 47750.

Felsenstein,J. (1989) PHYLIPiphylogeny inference package (Version 3.69).
(Hadmtkm,5,l64il66

Fichman,R. and Kemerer,C. (1992) Object—oriented and conventional analysis and
design methodologies. IEEE Computer, 25, 22729.

Finn,R.D. et al. (2011) HMMER web server: interactive sequence similarity search—
ing. Nucleic Acids Res., 39, 29737.

Gamma,E. et al. (1995) Design patterns: elements of reusable object—oriented soft—
ware. Addison—Wesley Longman Publishing Co., Inc., Boston, MA, USA.
Goldberg,A. and Robson,D. (1983) Smalltalk—80: The Language. Addison—Wesley,

Reading, MA.

Hirschfeld,R. and Lammel,R. (2005) Reﬂective designs. IEEE J. Softw., 152, 38751.

Holland,R.C. et al. (2008) BioJava: an open—source framework for bioinformatics.
Bannﬂwnunks,24,209672091

Kay,A. (1969) The Reactive Engine. PhD Thesis, Electrical Engineering and
Computer Science University of Utah.

Kolling,M. (1999) The problem of teaching object—oriented programming, Part 1:
Languages. J. Object—Oriented Program., 11, 8715.

Maes,P. (1977) Concepts and experiments in computational reﬂection. In 00PSLA
'87 Proceedings, pp. 1477155, ACM, New York, NY, USA.

Opdyke,W.F. (1992) Refactoring Object—Oriented Frameworks. PhD thesis,
University of Illinois, IL, USA.

Renggli,L. et al. (2010) Practical dynamic grammars for dynamic languages. In 4th
Workshop on Dynamic Languages and Applications. Springer, Malaga, Spain.

Schuler,G.D. et al. (1996) Entrez: molecular biology database and retrieval system.
Methods Enzymol, 266, 1417162.

Stajich,J.E. et al. (2002) The Bioperl toolkit: perl modules for the life sciences.
Genome Res., 12, 161171618.

Thompson,J.D. et al. (1994) CLUSTAL W: improving the sensitivity of progressive
multiple sequence alignment through sequence weighting. Niwleic Acids Res., 22,
46734680.

Umarji,M. and Seaman,C. (2008) Informing design of a search tool for bioinfor—
matics. Retrieved from http://cs.ua.edu/~SECSEOS/Papers/Medhapdf (30 July
2013, date last accessed).

Wishart,D.S. (1997) A platform—independent graphical user interface for SEQSEE
and XALIGN. Comput. Appl. Biosci., 13, 5617562.

 

2356

ﬁlO'SIIZLImOprOJXO'SODBIUJOJLIIOICV/idnq

