BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Python framework

 

case, the parser would raise a characteristic exception upon
which the client can switch to an ATOM—based parsing mode.

We compared the performance of RegularStructureParser
with PDB I/O modules from alternative libraries: Biopython,
PyCogent (Cielik et al., 2011) and the C++ based Open
Structure (Biasini et al., 2010). As expected, OpenStructure was
the fastest and parsed 4000 PDB entries with 0.09 s per structure.
CSB is positioned between Biopython (0.19s) and PyCogent
(0.43 s) with 0.32s per structure, which suggests that the
SEQRES mapping feature comes with an acceptable perform—
ance overhead.

Our library also hosts a collection of statistical models in the
csb.statistics namespace. Among these models are standard uni—
and multivariate probability distributions such as the Normal
and the Gamma distribution and also more exotic distributions
such as the multivariate normal inverse Gaussian distribution
used to model multivariate heavy—tailed data. Several estimators
based on maximum likelihood and Gibbs sampling are imple—
mented. Moreover, we provide a general framework for Markov
chain Monte Carlo simulation and implementation of standard
schemes such as random walk Metropolis Hastings, Hamiltonian
Monte Carlo (Duane et al., 1987) and replica—exchange
Monte Carlo (Swendsen and Wang, 1986). Methods to analyze
Monte Carlo output are also provided such as, for example, a
non—parametric histogram reweighting scheme for the estimation
of free energy differences (Habeck, 2012).

3 CSB APPLICATIONS

CSB comes with a simple framework for writing console appli—
cations (csb.apps). These applications could be seen as short
protocols built on top of the core library and consuming its
APIs. Each release is bundled with a number of pre—installed,
open—source applications. For example, csb.apps.hhﬂag provides
HHfrag, a CSB application for building dynamic fragment
libraries (Kalev and Habeck, 2011). BFit is another app, which
performs robust superposition of protein structures (Mechelke
and Habeck, 2010). Every release package also contains
EMBD, an application for sharpening of cryo—electron micros—
copy maps (Hirsch et al., 2011) using non—negative deconvolu—
tion and Promix, an application implementing Gaussian mixture
models for identifying rigid domains in structure ensembles
(Hirsch and Habeck, 2008).

4 DEVELOPMENT

One of the key design goals of CSB is providing clean, extensible,
object—oriented APIs with accompanying API documentation.
This project puts a strong emphasis on quality, achieved through
systematic use of abstraction, strong encapsulation, separation of
responsibilities and refactoring with classic design patterns.

Our development team has adopted a continuous integration
model. The reliability of the production code is controlled by
CSB’s built—in high—coverage unit test framework. Stable builds
will be gradually released to the public domain, and nightly
builds can be obtained upon request. Portability is also a
design goal, so CSB works without modification on every
major platform (Windows, Linux and Mac) and any modern
Python interpreter (version 2.6 or higher, including Python 3).

Funding: Contract research ‘Methoden in den Lebenswis—
senschaften’ of the Baden—Wurttemberg Stiftung, by Deutsche
Forschungsgemeinschaft (DFG) grant HA 5918/ 1—1 and by the
Max Planck Society.

Conﬂict of Interest: none declared.

REFERENCES

Biasini,M. et al. (2010) OpenStructure: a ﬂexible software framework for compum—
tional structural biology. Bioinﬁ)rmatics, 26, 262(r2628.

Cielik,M. et al. (2011) Abstractions, algorithms and data structures for structural
bioinfomiatics in PyCogent. J. Appl. Crystallogr, 44 (Pt 2), 424428.

Cock,P.J. et al. (2009) Biopython: freely available Python tools for computational
molecular biology and bioinfomiatics. Bioinformatics, 25, 142271423.

Duane,S. et al. (1987) Hybrid Monte Carlo. Phys. Lett. B, 195, 2lfr222.

Frickey,T. and Lupas,A. (2004) CLANS: a Java application for visualizing protein
families based on pairwise similarity. Bioinformatics, 20, 370273704.

Habeck,M. (2012) Evaluation of marginal likelihoods using the density of states.
In Lawrence,N. and Girolami,M. (eds) Proceedings of the Fifteenth
International Conference on Artificial Intelligence and Statistics (AISTATS)
2012. Vol. 22, La Palma, Canary Islands. JMLR:W&CP 22.

Hirsch,M. and Habeck,M. (2008) Mixture models for protein structure ensembles.
Bioinformatics, 24, 2l8¢2192.

Hirsch,M. et al. (2011) A blind deconvolution approach for improving the reso—
lution of cryo—EM density maps. J. Compat. Biol, 18, 3357346.

Kalev,I. and Habeck,M. (2011) HHfrag: HMM—based fragment detection using
HHpred. Bioinformatics, 27, 311(F3ll6.

Mechelke,M. and Habeck,M. (2010) Robust probabilistic superposition and com—
parison of protein structures. BMC Bioinformatics, 11, 363.

Soding,J. (2005) Protein homology detection by HMMiHMM comparison.
Bioinformatics, 21, 9517960.

Swendsen,R.H. and Wang,J.—S. (1986) Replica Monte Carlo simulation of spin
glasses. Phys. Rev. Lett., 57, 260772609.

 

2997

ﬁre'spzumofpmﬂo'sopeuuopuorq/ﬁdnq

