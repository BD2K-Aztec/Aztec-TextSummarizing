BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

T.J. Wheeler and S.R. Eddy

 

the target sequence with a fast ungapped Viterbi alignment using
a reduced—precision, 16—way vector—parallel approach (Farrar,
2007). Windows around high—scoring ungapped alignments are
subjected to a full—gapped Viterbi alignment to the model.
Candidate alignments passing this filter then endure the full
rigor of a Forward/ Backward alignment to the query, including
application of a context—dependent null model to account for
composition bias shared by the query and target. For more de—
tails on the full acceleration pipeline, see Eddy and Wheeler
(2013).

Performance. In Figure 1 we consider the performance of
nhmmer on a benchmark called Rmark3 that has been used
previously to test the RNA homology search tool Infernal
(Nawrocki et al., 2009). The benchmark consists of 106 families
from Rfam that could be divided into two groups such that no
sequence in one group is >60% identical to any sequence in the
other group [Rfam 10.0, Gardner et a]. (2011)]. One group was
used as the query alignment for the family, and sequences from
the other group (780 sequences in total) were embedded in 10 Mb
of sequence simulated using a 15—state HMM trained on genomic
sequence from a variety of organisms. A positive was defined as
an embedded sequence with >50% length covered by a query
from the same family; a negative was deﬁned as any hit that
mostly covers simulated sequence. For more details on construc—
tion of the benchmark, see Nawrocki and Eddy (2007).

In this benchmark, we begin with an alignment of multiple
members of a DNA sequence family and aim to find more
instances of the family in the target sequence database. The
standard methods for this homology search problem (e.g. using
blastn) involve searching the target database with a single query
sequence, either (i) producing a consensus sequence to represent
the sequence family, then using the consensus as query to search
the database, or (ii) using the family pairwise (fpw) search
method, in which each individual sequence from the family align—
ment is used as a query, the hit lists are merged, and overlapping
hits are adjudicated by recording the hit with the best E—value
(Grundy, 1998). Using both of these single—sequence query
approaches on Rmark3, nhmmer achieves better sensitivity
than blastn.

These single—sequence query methods do not, however, take
full advantage of the information contained within the query
alignment. In nhmmer, a profile HMM is built from the align—
ment, and represents the residue and indel distributions for each
position, modeling the conservation patterns of the family in a
way that is not possible with single—sequence queries. The bene—
ﬁts of proﬁle search are two—fold: (i) search power is much
greater than even with fpw, and (ii) search speed is roughly
equivalent to that of searching with a single consensus sequence,
as only one search is performed for the entire family, rather than
one for each sequence in the query alignment as in fpw.

In addition to being more sensitive than blastn, nhmmer rep—
resents a nearly 100—fold increase in speed over previous imple—
mentations of DNA homology search with profile HMMs. For
example, using the seed alignment for Dfam entry DF0000789
(a 338 position—long DNA transposon) to search against the
human genome with a single thread took nhmmer 12min to
complete, whereas HMMER 1.8.5 completed in 782min and
SAM 3.5 (Hughey and Krogh, 1995; Karplus et al., 1998)
required 844 min.

 

0.8
|

\

 
 
 
   
 

0.4

  

 

 

Sensitivity (fraction of true positives)

 

— nhmmer profile 1.2 min
g — — nhmmer fpw 67.7 min
— nhmmer consensus 1.7 min
— blastn fpw 4.6 min
g _ — blastn consensus 0.4 min
| | | | | | |

0.001 0.005 0.010 0.050 0.100 0.500 1.000

False positives per Mb per search

Fig. 1. Benchmark of search sensitivity and speciﬁcity. Searches were
performed against the Rmark3 benchmark either by constructing a
single proﬁle HMM from the query alignment (nhmmer proﬁle), con-
structing a consensus sequence from the query alignment (consensus), or
by using family pairwise search (fpw). The aborted lines for two nhmmer
variants indicate that the list of all hits found by each search variant was
exhausted before reaching 1 false positive per Mb per search. The
nhmmer parameters were default, except setting the E—value threshold,
‘-E 100’ for proﬁle and consensus variants, to extend the hit list. Higher
E—values have no effect, as further hits (true and false) are ﬁltered by the
default acceleration heuristics. Many parameters were tested for NCBI
blastn 2228+, with the best-performing variant shown here (‘-word_size
7 -penalty -3 -reward 2 -gapopen 4 -gapextend 2’). For each combination
of program and method, hits for all families were collected and ranked by
E—value, and true and false hits were deﬁned as described in the text. The
Y-axis is the fraction of 780 true positives detected with an E—value suf-
ﬁcient to achieve the false-positive rate speciﬁed on the X-axis. Runtime
was collected on a single thread on a 2.66 GHz Intel Gainestown (X5550)
processor. The benchmark can be downloaded from http://selabjanelia.
org/publicationshtml

Other applications. HMMER3.1’s nhmmer has recently been
adopted as a search engine within the TE annotation tool,
RepeatMasker 4.0 (Smit and Hubley, 2013), where in conjunc—
tion with Dfam, it supports a substantial boost in sensitivity in
human DNA repeat annotation with better speed than the
previous most sensitive method (Wheeler et al., 2013). The core
pipeline of nhmmer has also been incorporated as an acceleration
filter for the RNA homology search tool Infernal, where it sup—
ports fast ﬁltering with negligible loss in Infernal sensitivity
(E.Nawrocki and S.R.Eddy, unpublished data). We anticipate
that nhmmer will similarly beneﬁt other domains of DNA
sequence comparison that depend on discriminative detection
of remote homologs.

ACKNOWLEDGEMENTS

We thank Michael Farrar, Rob Finn, Tom Jones and Elena
Rivas for their important input during nhmmer development
and testing, and Goran Ceric and his team for Janelia Farm’s
high—performance computing resources. Eric Nawrocki provided
Rmark3 and contributed numerous improvements to the source
code.

Funding: HMMER development is supported by the Howard
Hughes Medical Institute.

 

2488

ﬁm'spzumot‘pmﬂo'sopeuuopnotq/ﬁdnq

nhmmer

 

Conﬂict of Interest: none declared.

REFERENCES

Altschul,S.F. et a]. (1990) Basic local alignment search tool. J. Mol Biol, 215,
4037410.

Camacho,C. et a]. (2009) BLAST+: architecture and applications. BMC
Bioinﬁ)rmatics, 10, 421.

Durbin,R. et al. (1998) Biological Sequence Analysis: Probabilistic Models of
Proteins and Nucleic Acids. Cambridge, UK, Cambridge University Press.

Eddy,S.R. (2008) A probabilistic model of local sequence alignment that simpliﬁes
statistical signiﬁcance estimation. PLoS Comput. Biol, 4, e1000069.

Eddy,S.R. (2009) A new generation of homology search tools based on probabilistic
inference. Genome Inform, 23, 2057211.

Eddy,S.R. (2011) Accelerated proﬁle HMM searches. PLoS Comput. Biol, 7,
e1002195.

Eddy,S.R. and Wheeler,T.J. (2013) The HMMER3.I user's guide. http://hmmer.
janelia.org/ (1 July 2013, date last accessed).

Farrar,M. (2007) Striped Smith—Waterman speeds database searches six times over
other SIMD implementations. Bioinformatics, 23, 1567161.

Gardner,P.P. et a]. (2011) Rfam: Wikipedia, clans and the “decimal” release.
Nucleic Acids Res, 39, Dl4liDl45.

Grundy,W.N. (1998) Family—based homology detection via pairwise sequence com—
parison. In Proceedings of the Second Annual International Conference on
Computational Molecular Biology (RECOMB 98), pp. 94499.

Hughey,R. and Krogh,A. (1995) SAM: sequence alignment and modeling software
system. In: Technical report UCSC—CRL—95—07. University of California at
Santa Cruz.

Karplus,K. et a]. (1998) Hidden Markov models for detecting remote protein homo—
logies. Bioinformatics, l4, 84(r856.

Kent,W.J. (2002) BLATithe BLAST—like alignment tool. Genome Res, 12,
656—664.

Krogh,A. et a]. (1994) Hidden Markov models in computational biology: applica—
tions to protein modeling. J. Mol Biol, 235, 150171531.

Kurtz,S. et a]. (2004) Versatile and open software for comparing large genomes.
Genome Biol, 5, R12.

Langmead,B. et a]. (2009) Ultrafast and memory—efﬁcient alignment of short DNA
sequences to the human genome. Genome Biol, 10, R25.

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with Burrowsi
Wheeler transform. Bioinformatics, 25, 175441760.

Nawrocki,E.P. and Eddy,S.R. (2007) Query—dependent banding (QDB) for faster
RNA similarity searches. PLoS Comput. Biol, 3, e56.

Nawrocki,E.P. et a]. (2009) Infernal 1.0: Inference of RNA alignments.
Bioiiﬁ’ormatics, 25, 133571337.

Schwartz,S. et a]. (2003) Humanimouse alignments with BLASTZ. Genome Res,
13, 1037107.

Smit,A.F.A. and Hubley,R. (2013) RepeatMasker. http://repeatmasker.org/ (1 July
2013, date last accessed).

Smith,T.F. and Waterman,M.S. (1981) Identiﬁcation of common molecular subse—
quences. J. Mol Biol, 147, 1957197.

Wheeler,T.J. et a]. (2013) Dfam: a database of repetitive DNA based on proﬁle
hidden Markov models. Nucleic Acids Res, 41, D7(%D82.

 

2489

ﬁm'spzumot‘pmﬂo'sopeuuowtotq/ﬁdnq

