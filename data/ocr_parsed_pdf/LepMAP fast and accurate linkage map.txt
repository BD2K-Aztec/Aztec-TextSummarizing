BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Lep-MAP

 

CARTHAGENE (de Givry et al., 2005), MSTMAP (Wu et al.,
2008) and AntMap (Iwata and Ninomiya, 2006). Previous studies
have paid some attention to achiasmatic meiosis while construct—
ing linkage maps (Baxter et al., 2011; Beldade et al., 2009;
Yamamoto et al., 2006; Yasukochi, 1998), by considering mater—
nal and paternal informative crosses separately. In LM, we use
achiasmatic meiosis fully to infer haplotypes from full—sib crosses.
Haplotype information allows one to place more markers more
accurately both into and within chromosomes. Furthermore, the
previous analyses involve much time—consuming manual work.
For instance, in Beldade et a]. (2009) the LOD score limit param—
eter is chosen visually comparing results and by simulations. Such
manual inspection is possible only with datasets of modest size.
The tools described in this article are fully or mostly automated.

A model for genotyping error is a critical part of any compu—
tational tool using next—generation sequencing data, which con—
tain a high frequency of errors. Ignoring genotyping errors is
likely to generate an expanded (too long) genetic map and hin—
ders the determination of the correct marker order (Cartwright
et al., 2007; Lincoln and Lander, 1992). Much research has been
conducted on correcting genotyping errors in the marker order—
ing phase (Cartwright et al., 2007; de Givry et a[., 2005; Jansen
et al., 2001; van Os et al., 2005b; Wu et al., 2008). LM uses
achiasmatic meiosis to correct for genotyping errors, even with—
out knowledge of the marker order within chromosomes. The
ordering phase of LM uses full likelihood to model errors, and
we show that LM outperforms other tools on simulated data in
the absence of achiasmatic meiosis.

Ordering markers with data on multiple families is more
difficult than with data on a single family, as each marker is
informative only for a subset of families. Some marker pairs
are not mutually informative at all and hence their genetic dis—
tance cannot be calculated directly (in two—point fashion).
However, the distance of mutually non—informative markers
can be assessed by inspecting the nearby markers of the
marker pair in question. The framework of Lander and Green
(1987) to compute order likelihood takes into account nearby
markers and allows the detection of genotyping errors (Lincoln
and Lander, 1992). This framework is based on dynamic pro—
gramming to enumerate all inheritance vectors, describing how
individuals’ alleles were inherited from their grandparents.
Owing to the exponential time and space complexities of this
approach, it can only be applied to small families. LM uses
haplotypes directly as partial inheritance vectors to achieve fast
linear time algorithm for the likelihood evaluation.

MSTMAP (Wu et al., 2008) orders markers based on approxi—
mate solutions of the NP—complete (Garey and Johnson, 1979)
traveling salesman problem. The solution is found with an efﬁ—
cient algorithm by traversing the minimal spanning tree of a
graph. The nodes of this graph are the markers and the edge
weights are the recombination distances between the correspond—
ing markers. To construct this graph, distances between all pairs
of markers are required. Unfortunately, such distances can not
be obtained in our full—sib study setting. Our solution combines
maximum likelihood and approximate traveling salesman prob—
lem solutions efficiently. We imitate spanning tree construction
to find a feasible initial marker order. Missing and inaccurate
distances are refined based on nearby markers in the partial so—
lution (similar to multipoint linkage analysis). After the initial

order has been established, local changes are applied to it to
maximize the likelihood of the ﬁnal order.

In this article, we compare the performance of LM against
MSTMAP (Wu et al., 2008), R/qtl (Broman et al., 2003) and
AntMap (Iwata and Ninomiya, 2006). These latter tools were
included as they require minimal user interaction and thereby
make the analysis of hundreds of datasets possible. Analyzing
hundreds of datasets by visual inspection would be too time—
consuming and subjective. Well—known software for such inter—
active linkage mapping is CRI—MAP (Lander and Green, 1987),
allowing arbitrary pedigree structure and thus also full—sib
families. Many other software were previously compared in
Wu et a]. (2008) and hence are not included in our experiments.

2 METHODS

A typical workﬂow of LM is illustrated in Figure 1. The main modules of
LM are SeparateChromosomes, used to assign markers into linkage
groups (LGs), and OrderMarkers, which orders the markers within
each LG. Additional modules include JoinSingles, ScaffoldHMM and
EstimateLODLimit. JoinSingles assigns singular markers to existing
LGs, whereas ScaffoldHMM uses scaffold positions of markers in link-
age map construction. EstimateLODLimit automates the choice of LOD
score (Morton, 1955) limit by computing its empirical distribution. The
sex-speciﬁc LOD score used here is deﬁned in the Supplement. The
algorithmic details of LM are described in the following subsections.

2.1 Notation

Let the input data consist of genotypes of individuals in k families, or
crosses, over n SNP markers. Each family has two parents (P generation)
and their offspring (F 1 generation). Without loss of generality, we assume
that each family consists of exactly m offspring.

We denote the two homozygous genotypes as 0 and 1, heterozygous
genotype as 2 and missing genotype as —1. A marker is maternally (pa-
ternally) informative in a family if the mother (father) of this family is
heterozygous. The haplotypes (alleles inherited together from one parent)
of each offspring can be partially deduced from the genotypes of the
offspring and its parents (trios). We denote these haplotype alleles as 0
or 1 and missing or unknown haplotype as —1. We deﬁne maternal (pa-
ternal) segregation pattern for a marker and a family as a string of
maternal (paternal) haplotype alleles at that marker.

2.2 Separate chromosomes and join singles: the marker
assignment modules

The module SeparateChromosomes assigns markers into LGs as follows:

(1) Filtering and haplotype deduction. Probable errors and inconsisten-
cies are ﬁltered out from the data, and partial haplotypes are
deduced from genotype trios (see Section 2.2.1).

(2) The following steps are repeated until the LG assignment of mar-
kers converges:

(a) All marker pairs that have a LOD score 2 L are joined
together to form LGs.

(b) Completing the haplotypes. Achiasmatic meiosis is used to cor-
rect and impute genotypes (see Section 2.2.2).

Several LOD scores L = L1,L2,  can be provided in descending
order for each LM run. If the maximum LOD score obtained with
some marker is lower than the ﬁrst limit, the next limit is used instead.
This option is useful when there are several families, and the maximum
LOD score may differ based on how many families are informative on

 

3129

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

Fxlimzuelfﬂﬂjmil

s‘epunuer‘hrmn(mum

 

/3.IO'S[BIIm0[p.IOJXO'SOIJBIIIJOJIIIOIq/ﬂdnq

Lep-MAP

 

recombination events (and haplotype errors) are detected by differences
(Hamming errors) in these vectors. More precisely, while reading the
markers in the ﬁxed order, a change in an individual’s value from 1 to
0 or from 0 to 1 indicates recombination. The number of these changes
(Or—>1 or 1»—>0) is denoted as COUNT, and a solution with a small
COUNT is desired.

LM computes the likelihood of marker order by using a standard
hidden Markov model (HMM). This model has states 0 and 1 for each
marker, and transitions are allowed only between states of adjacent mar-
kers. A transition from state 0 to 1 or from 1 to 0 between markers j and
j + 1 is made with probability given by the corresponding recombination
fraction r). Each state s e {0, 1} emits either 3 with probability 1 — ej or
1 — s with probability 8/, and thus 8/ gives the haplotype error probability
for marker j. The HMM is learned with the Baum7Welch expectation-
maximization (EM) algorithm (Durbin et al., 1998) from the partial in-
heritance vectors. In this manner, the likelihood computation is efﬁcient
(linear time), compared with solutions in which the actual inheritance
vectors are enumerated [e.g. Lander and Green (1987)].

It is also possible to use ﬁxed values for both or one of r) and e). If both
are ﬁxed, there is no need for the EM-algorithm and likelihood compu-
tation becomes faster. Moreover, ﬁxing error parameters to some small
value would make the likelihood non-invariant to end point symmetries
(swapping of the two last or the two ﬁrst markers) as described in
Cartwright et a]. (2007). There is also an option to deal with these sym-
metries by specifying a penalty parameter at to use ‘likelihood - oz-
COUNT’ as the optimization score.

LM chooses the phases of the segregation patterns to obtain partial
inheritance vectors by minimizing COUNT. If there are no missing
haplotypes, the inheritance vectors can be obtained simply by inspecting
patterns of adjacent informative markers. However, with an excessive
number of missing values, the corresponding decision problem can be
shown to be NP-complete (proof omitted).

Typically, however, the mapping minimizing COUNT is easy to ﬁnd.
LM ﬁnds suitable mapping by ﬁrst inspecting only segregation patterns
of adjacent informative markers. Next it analyzes whether the mapping
can be improved by complementing partial inheritance vectors obtained
so far. This mapping corresponds to the two-way pseudo-test cross, dis-
cussed in van Os et al. (2005b). LM does the mapping independently for
each order to be evaluated, which allows the mapping to vary as the
optimal order is being searched for.

2.5 The ScaffoldHMM module

The module ScaffoldHMM uses marker positions on genome scaffolds to
assign markers into LGs. This option is helpful with datasets containing
so few offspring that only maternally informative markers can be sepa-
rated into chromosomes (achiasmatic meiosis), whereas paternally in-
formative markers can be separated into LGs that cannot be assigned
to chromosomes. The proposed framework is suitable for other tasks as
well, e.g. to combine linkage maps constructed from different datasets
and to ﬁnd probable scaffolding, mapping and linkage map errors. The
input to ScaffoldHMM consists of two linkage maps (or one map twice)
with scaffold mappings, and the module calculates the most probable LG
(of the ﬁrst map) and the log-odds of this assignment for each marker and
scaffold.

ScaffoldHMM uses HMMs to model mapped markers in scaffolds.
Let K be the number of LGs (chromosomes) in the first (input) map.
Every scaffold deﬁnes a topology for one HMM, which has K states for
each mapped marker in the scaffold. The K states of each marker cor-
respond to the K LGs of the ﬁrst map. There are two types of emission
distributions in the model. First one emits LG name (number) from a
state that corresponds to the ﬁrst map. If there are no errors in the ﬁrst
map, state k should always emit name k in this distribution. The second
distribution emits LG name of the second map. If there is one-to-one
mapping f between the LGs of the input maps, state k should always emit

name ﬂk) in this distribution. The transition parameters corresponding to
scaffold errors are fixed based on empirical distance distribution of
detected scaffold errors in the ﬁrst map.

Maximum likelihood emission parameters are learned simultaneously
for all HMMs using Baum7Welch algorithm. Posterior decoding (Durbin
et al., 1998) is used to compute the probability of each marker being in
certain LG k, i.e. the LG name of this mapped marker is emitted from the
state k. This approach takes simultaneously into account all scaffolds and
LGs to ﬁnd the most probable LG (chromosome) assignment.

2.6 Asymptotic running times and memory space

The asymptotic running time of marker assignment and the estimation of
LOD score limit signiﬁcance is 0(mkn2). Thus, it scales quadratically on
the number of SNPs n, as each marker pair has to be tested, and linearly
on the number of individuals km. The marker ordering phase has asymp-
totic running time of 0(mkN3) for one LG with N SNPs. Here the local
search procedure to ﬁnd the maximum likelihood solution dominates the
running time as there are 0(N2) local changes to be evaluated. Thus, the
marker ordering scales cubically on the number of SNPs and linearly on
the number of individuals. LM reduces the latter running time by auto-
matically discarding every marker that is equal to or less informative than
some other marker not yet discarded. To further reduce the runtime, it is
possible to combine markers with near identical inheritance patterns (up
to missing values). However, only 0(mnk) space is used, and therefore
LM can be applied even to large datasets. ScaffoldHMM has 0(nK2)
time and 0(nK) space complexity, where K is the number of LGs in
the ﬁrst linkage map given as input.

2.7 Implementation details of LM

The input ﬁles of LM are required in pre-makeped LINKAGE (Lathrop
et al., 1984) format, and only unphased full-sib families with at most four
alleles per marker are allowed. Only paternal haplotypes are used in
marker ordering due to the assumption of achiasmatic recombination.
To study species without achiasmatic recombination, each individual
can be coded as two paternally informative individuals to achieve sex-
averaged recombination fractions.

Data from other types of crosses can be analyzed as independent full-
sibs. The simulated F2 backcross data in Section 3.3 was analyzed in this
manner with LM. Loss of information in this case can be reduced by
adding artificial individuals giving the phase of data and/or by coding the
SNP values with three or four alleles based on the information given by
the cross. In some species, such as the common fruit ﬂy (Drosophila
melanogmter), only females exhibit recombination, in which case one
may use LM by swapping the sexes in the input data. Any type of
cross from which one can separate parents and their offspring can be
analyzed with LM.

3 RESULTS

3.1 The Glanville fritillary butterﬂy data

We constructed a linkage map for the Glanville fritillary butter—
ﬂy (M. cinxia) with data for four different families. The parents of
each family originated from populations from Finland (female)
and Spain (male).

Altogether 106 individuals of three families and 4989 SNPs
were genotyped with Roche NimbleGen (F. Hoffmann—La
Roche Ltd, Switzerland) SNP—chip platform by the manufac—
turer. In these data, 3941 and 2630 SNPs were maternally and
paternally informative, respectively, in one or more families.

The fourth family was genotyped with SOLiD3 / 5500 sequen—
cing platforms (Life Technologies Ltd, UK) to produce a denser

 

3131

ﬁm'spzumofpmjxo'sopeuuopnorq/ﬁdnq

P.Rastas et al.

 

SNP dataset. Sequencing was based on SOLiD RAD tag
libraries (Miller et al., 2007), constructed with a newly developed
in—house protocol. This dataset consists of sequencing data for 12
offspring and their parents. The raw reads have been mapped
with BWA (Li and Durbin, 2009) and SAMtools (Li et al., 2009)
to the draft reference genome (Lehtonen et al., in preparation)
(109 M mapped reads). SNPs and genotypes have been called
using LM (see the Supplement). The number of SNPs was
93 767, of which 43 431 and 62172 were maternally and pater—
nally informative, respectively. All genotype data are provided as
raw signals/counts as well as called genotypes with LM, along
with the mapping information of the corresponding SNPs to our
draft reference genome.

The chromosome assignment for the NimbleGen data was
constructed with SeparateChromosomes using LOD score limit
L=4.4 [obtained by EstimateLODLimit, 5% significance, con—
sidering only maternal information (61 = 0.5) and LGs with
three or more markers]. Additional markers were added to
these LGs with J oinSingles with L = 6 and all informative mar—
kers. A map with 32 LGs and 2928 SNPs was obtained, including
one LG with markers following Z chromosomal inheritance, i.e.
female offspring are homozygotes of one of the father’s alleles.
The smallest LG with three markers segregated according to the
sex, and hence we concluded that it consists of pseudo—autosomal
regions, homologous regions between the Z and W chromo—
somes. The pseudo—autosomal LG was merged with the other
sex LG, giving 31 LGs with sizes between 29 and 165 markers.
The actual number of chromosomes of the Glanville fritillary is
31 (2n: 62) (Federley, 1938).

In the NimbleGen data, the order of markers was obtained by
ﬁrst running OrderMarkers on each chromosome without error
modeling. Next, markers with distances of over 20 cM were
removed from the ends of each chromosome (total number of
markers removed was 42) as likely errors. LM was then rerun on
the remaining markers both without and with genotype error
modeling (07:01), which resulted in linkage maps of 1704 cM
and 1466 cM, respectively.

For the RAD tag data, the maternal map was constructed
using SeparateChromosomes with L: 3.2, joining markers
with identical maternal segregation patterns. By discarding
small LGs, 32 LGs remained. Using JoinSingles with L=2.3,
we obtained a map with 19896 markers. Finally, we merged
the two sex LGs. Because of achiasmatic recombination, this
map assigns markers only to chromosomes (not within).

Similarly, a paternal map was constructed by grouping pater—
nally informative markers with identical inheritance patterns.
This map had 20 822 SNPs and 423 LGs with two or more
markers in each LG. The maternal and paternal maps were
combined using ScaffoldHMM based on information on
marker positions within reference genome scaffolds. By manually
inspecting paternal LGs assigned to each chromosome, each
chromosome was split into #10 ‘bins’ of paternal LGs. The
order of these bins was established during the manual process.
Based on the number of the bins (228), the genetic length is
estimated to be 1642 cM. More information on the manual pro—
cess is given in the Supplement. The combined map was used in
genome assembly validation (Lehtonen et al., in preparation).

The number of common SNPs in the NimbleGen and RAD
tag—based maps is 23. Nonetheless, ScaffoldHMM was able to

join the two maps. Chromosome by chromosome comparison of
these two maps can be found in the Supplement.

3.2 The squinting bush brown butterﬂy data

The publicly available data on the squinting bush brown butter—
fly (Bicyclus anynana) (Beldade et al., 2009) was used to test LM.
The data consist of 533 SNPs from 12 families, from which 22
offspring and the parents were genotyped per family.

EstimateLODLimit (5% signiﬁcance) was used to find
the limit L = L1,L2 = 6.6, 4.8, which was used in
SeparateChromosomes. We thereby obtained a solution with
29 chromosomes, of which 28 matched uniquely the 28
(2n: 56) chromosomes reported in Beldade et a]. (2009). This
solution assigned 19 markers to these 28 chromosomes that were
not assigned to any chromosome in Beldade et a]. (2009), where—
as the result in Beldade et a]. (2009) included only two markers
not assigned to any chromosome by LM.

For curiosity, another map was constructed by considering
only maternal information (by setting 61 = 0.5). When recom—
bination parameter 62 was set to 0.001, 28 chromosomes match—
ing uniquely to those reported in Beldade et a]. (2009) were found
(LOD score limits L=L1,L2 = 5.0, 4.3, 5% signiﬁcance).
Adding single markers to the initial LGs using also paternal in—
formation with an LOD score limit 5.6, we obtained a map with
19 additional markers compared with 5 in Beldade et a]. (2009).

Finally, we ordered the markers within chromosomes. The
LM solution orders 70% more markers than reported in
Beldade et a]. (2009), obtained with CRI—MAP (Lander and
Green, 1987). By comparing the results for the subset of markers
ordered in Beldade et a]. (2009), the likelihoods (computed
by LM) of the order found by LM were at least 10—fold better
on 10 chromosomes compared with the likelihood of the order
given in Beldade et a]. (2009). The Supplement shows one
example of different orders, obtained by LM and reported in
Beldade et a]. (2009), where the difference is in the position of
SNP C2817P666. We have contacted the authors of Beldade
et a]. (2009), and they conﬁrmed that based on their new (un—
published) data, the LM position for SNP C2817P666 is correct.
These results were obtained automatically by LM, without any
manual work and using only a few minutes of computing time.

3.3 Simulated data

We simulated F2 backcross data containing 100 SNPs and 100
individuals in the same fashion as in Wu et a]. (2008). The dis—
tance of adjacent SNPs was on average 1 cM, whereas the rate of
genotype errors y and missing genotypes n varied as in Wu et a].
(2008). For each y and n, we generated 30 datasets and ran LM,
MSTMAP (Wu et al., 2008) and R/qtl (Broman et al., 2003).
AntMap has only a graphical user interface, and thus it needed
manual work for each dataset. Therefore, AntMap (Iwata and
Ninomiya, 2006) was applied only to 15 dataset for some y and
n. LM was run with recombination and error parameters fixed
(LM) and by learning these parameters (LM—full) from the data.
We measured the runtime for each software on a typical desktop
computer (Intel Core 2 Duo CPU, 3.16 GHz). The accuracy was
measured by computing the number of erroneous marker pairs
of the obtained results (unnormalized version of Kendall’s ‘L' stat—
istic, a solution with higher accuracy has less erroneous marker

 

3132

ﬁm'spzumofpmjxo'sopeuuopnorq/ﬁdnq

Lep-MAP

 

Table 1. Comparison of the performance of LM, MSTMAP (Wu et al., 2008), AntMap (Iwata and Ninomiya, 2006) and R/qtl (Broman et al., 2003)

 

 

 

 

 

y :7 LM LM-full MSTMAP AntMap R/qtl
E Time E Time E Time E Time E Time

0.00 0.00 0.70 6 0.57 10 1.13 1 0.67 17 210.43 322
0.00 0.01 29.30 16 32.00 36 31.50 1 7 7 1826.43 633
0.00 0.05 65.07 18 67.63 42 68.63 1 7 7 2087.63 1080
0.00 0.10 117.83 18 115.73 42 134.17 1 7 7 1887.23 1415
0.00 0.15 184.33 18 181.17 42 212.07 2 7 7 1618.03 1835
0.01 0.00 8.47 8 7.97 16 15.03 1 7 7 129.5 465
0.05 0.00 34.03 16 42.23 36 58.47 1 7 7 564.13 525
0.10 0.00 38.50 18 48.57 36 59.90 1 7 7 434.20 528
0.15 0.00 37.27 18 51.20 36 63.17 2 7 7 572.30 559
0.01 0.01 31.33 18 33.03 40 34.13 1 55.07 18 713.47 875
0.05 0.05 63.20 18 72.13 42 77.90 1 711.8 18 747.7 1694
0.10 0.10 159.57 18 146.77 42 155.87 1 7 7 1108.73 2083
0.15 0.15 235.67 18 236.37 42 326.77 2 7 7 1285.57 2317
Multifamily

0.75* 0.00 616.70 1055 679.13 6580 12633.5 331 7 7 7 7
10k

0.00 0.00 4.23 410 2.90 2040 44.43 295 7 7 7 7

0.01* 0.01 1.73 409 1.77 641 7.13 73448 7 7 7 7

 

Note: Each number is averaged over 30 (15 in AntMap) independent runs. Column E reports the average number of erroneous marker pairs among a subset of markers that
can be differentiated based on the data. The running time is in seconds; parameters y and 17 give the rates of missing values and genotyping errors, respectively. Best results for
each row are shown in boldface. (* = identical markers with missing values are combined with the option missingClusteringLimit in LM to reduce runtime.)

pairs). The error rates and the running times are reported in
Table 1.

Second, we simulated 30 F2 backcross datasets with 200 indi—
viduals and 1000 SNPs. The distance of adjacent markers was on
average 0.1 cM and the data were error—free. The individuals
were organized into groups of size 20, and each group was set
to be missing with probability 0.75, independently for each
marker (similar to multifamily full—sib data). The results are
reported in Table 1 as ‘multifamily’.

Third, we simulated 30 F2 backcross datasets with 200 indi—
viduals and 10000 SNPs over 100 cM without errors and with a
moderate rate of errors and missing data (0.01). These results are
denoted as ‘10k’ in Table 1. We were able to run only LM and
MSTMAP on datasets with 3 1000 SNPs (R/qtl ran out of
memory, AntMap gave an error message). With 100 000 SNPs
we were able to run only LM (data not shown, MSTMAP ran out
of memory).

LM outperformed the other methods in accuracy, and it was
the second fastest following MSTMAP on small datasets (others
but ‘10k’) but fastest with large numbers of SNPs when noise and
missing data were introduced. LM was about as fast as AntMap,
but the accuracy of AntMap decreased dramatically as soon
noise and missing values were included. Note that the result of
LM is not the same on each run as its algorithms are rando—
mized. We have noticed that running LM several times
and picking the result with the highest likelihood (or lowest
COUNT) improves the quality of results. However, for
Table 1 LM was run only once.

The difference in accuracy between LM and LM—full is not
large; hence in practice it might be a good idea to use ﬁxed error
and recombination parameters to achieve a faster runtime for

LM. In fact, for small error rates the performance with ﬁxed
parameters seems to be even better, probably because of the
fact that LM—full becomes attracted more easily to some locally
optimal order. Moreover, the choice of the actual ﬁxed recom—
bination (and error) values was not critical, as values 2—fold
higher and lower to the simulated ones worked equally well.

The marker spacing for the simulated F2 data was uniform
with adjacent markers being either 1, 0.1 or 0.01 cM apart. When
the data were simulated, each individual had a constant prob—
ability to recombine between adjacent markers. Thus, the actual
distance between markers (based on the data) was distributed
according to a binomial distribution. Highest variation (8 1)
was in the datasets with 100 individuals, where most datasets
contained adjacent markers with distance of at least 4 cM.

We evaluated different methods also on datasets with greater
distance variation. This was achieved by grouping 100 individ—
uals randomly into 10 groups of 10 individuals for each marker,
and assuming that all individual in a group recombined with
probability 0.02, producing datasets with an average length of
200 cM. The results for these data were not signiﬁcantly different
from the ones in Table 1 (data not shown). Assuming ﬁxed re—
combination and error parameters, LM performs about as well
as if these parameters were learned from the data.

Finally, we simulated 30 datasets with achiasmatic meiosis to
evaluate how much the linkage map accuracy could be improved
by using achiasmatic meiosis (to complete haplotypes) in LM.
Each dataset consisted of four full—sib families with 20 individ—
uals in each, 30 simulated chromosomes, each having 100 SNPs
and 100 cM paternal length. The rate of missing genotypes and
genotype errors were both 0.01 and the minimum allele fre—
quency for the parents was 0.5.

 

3133

ﬁm'spzumofpmjxo'sopeuuopnorq/ﬁdnq

P.Rastas et al.

 

The chromosome assignment was studied by
SeperateChromosomes on a single family with LOD score limit
5.6 and considering only maternal haplotypes. A single run of
J oinSingles with LOD score limit 5.6 was performed considering
all families and both parental haplotypes with and without
haplotype completion. With haplotype completion, we could
assign on average 2503 markers to chromosomes, compared
with 2460 without completion.

Next the marker ordering was studied by running
OrderMarkers on the known chromosome assignments. The aver—
age numbers of incorrect marker pairs were 312 (6.8% of all
pairs) and 485 (10.5%) with and without haplotype completion,
respectively. Thus, we could assign 1.7% more markers into
chromosomes and order these markers with 35% lower error rate.

3.4 Discussion of results

We have shown with real and simulated data that LM outper—
forms other methods compared in this study in accuracy and is
generally fast. Moreover, LM is versatile and it can be applied to
a wide range of different types of datasets. For instance, it would
have been difﬁcult and time—consuming to construct linkage
maps for the Glanville fritillary data, described in Section 3.1,
without LM and its ScaffoldHMM module. For the purposes of
genome assembly validation or reﬁnement, relative low map
resolution is sufﬁcient (in our case data were obtained from 12
offspring), but the mapped markers must span the entire
genome. In particular, most scaffolds should have two or more
markers to detect chimeric scaffolds.

The experiments using simulated and real data suggest that
LM can use achiasmatic meiosis efﬁciently to achieve signiﬁcant
improvement in linkage map accuracy.

4 CONCLUSION

We have described a novel tool, Lep—MAP, which can be used to
construct accurate linkage maps for large SNP datasets with high
rates of noise and missing values, commonly generated by next—
generation sequencing. Lep—MAP outperformed other methods
compared in this study in accuracy on real and simulated data. It
is light—weight in computation burden and highly automated,
allowing fast and objective linkage map construction.

ACKNOWLEDGEMENTS

The authors thank Panu Somervuo and Leena Salmela for the
Glaville fritillary genome assembly. Suvi Ikonen, Annukka
Ruokolainen and Suvi Saarnio are thanked for rearing the but—
terﬂies and preparing samples for genotyping. Finally, they
thank Toby Fountain, Craig Anderson, Mikko Sillanpaa and
the anonymous reviewers for usede comments.

Funding: National Research Council of Finland (250444 and
256453) and the European Research Council (232826) (to I.H.).

Conﬂict of Interest: none declared.

REFERENCES

Baxter,S. et al. (2011) Linkage mapping and comparative genomics using next—gen—
eration RAD sequencing of a non—model organism. PLoS One, 6, e19315.
Beldade,P. et al. (2009) A gene—based linkage map for Bichlus anynana butterﬂies
allows for a comprehensive analysis of synteny with the lepidopteran reference

genome. PLoS Genet., 5, e1000366.

Broman,K. et al. (2003) R/qtl: QTL mapping in experimental crosses.
Bioinformatics, 19, 8897890.

Cartwright,D. et al. (2007) Genetic mapping in the presence of genotyping errors.
Genetics, 176, 252172527.

Cheema,J. and Dicks,J. (2009) Compumtional approaches and software tools for
genetic linkage map estimation in plants. Brief. Bioinform., 10, 595%08.

de Givry,S. et al. (2005) Carthagene: multipopulation integrated genetic and radi—
ation hybrid mapping. Bioinformatics, 21, 170371704.

Doerge,R. (2002) Mapping and analysis of quantitative trait loci in experimental
populations. Nat. Rev. Genet., 3, 43752.

Durbin,R. et al. (1998) Biological Sequence Analysis: Probabilistic Models of
Proteins and Nucleic Acids. Cambridge University Press, Cambridge.

Ehrlich,P. and Hanski,I. (2004) On the Wings of Checkerspots: A Model System for
Population Biology. Oxford University Press, New York.

Federley,H. (1938) Chromosomenzahlen ﬁnnlandischer Lepidopteren. I.
Rhopalocera. Hereditas, XXIV, 3977164.

Garey,M. and Johnson,D. (1979) Computers and Intractability: A Guide to the
Theory of NP—Completeness, W.H. Freeman & Co., NY, USA.

Hamming,R. (1950) Error detecting and error correcting codes. Bell Syst. Tech. J.,
29, 1477160.

Iwata,H. and Ninomiya,S. (2006) Antmap: constructing genetic linkage maps using
an ant colony optimization algorithm. Breed. Sci., 56, 3717377.

Jansen,J. et al. (2001) Constructing dense genetic linkage maps. Theor. Appl. Genet.,
102, 111371122.

Kirkpatrick,S. et al. (1983) Optimization by simulated annealing. Science, 220,
6717680.

Laird,N. and Lange,C. (2008) Family—based methods for linkage and association
analysis. In: Genetic Dissection of Complex Traits, volume 60 of Advances in
Genetics. Academic Press, pp. 2197252.

Lander,E. and Green,P. (1987) Construction of multilocus genetic linkage maps in
humans. Proc. Natl Acad. Sci. USA, 84, 236%2367.

Lathrop,G. et al. (1984) Strategies for multilocus linkage analysis in humans. Proc.
Natl Acad. Sci. USA, 81, 344373446.

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with Burrows—
Wheeler transform. Bioinformatics, 25, 175471760.

Li,H. et al. (2009) The sequence alignment/map format and SAMtools.
Bioinformatics, 25, 207872079.

Lincoln,S. and Lander,E. (1992) Systematic detection of errors in genetic linkage
data. Genomics, 14, 604—610.

Miller,M. et al. (2007) Rapid and cost—effective polymorphism identiﬁcation and
genotyping using restriction site associated DNA (RAD) markers. Genome Res.,
17, 24(7248.

Morton,N. (1955) Sequential tests for the detection of linkage. Am. J. Hum. Gen., 7,
2777318.

Stam,P. (1993) Construction of integrated genetic linkage maps by means of a new
computer package: join map. Plant J., 3, 7397744.

Van Ooijen,J. (2011) Multipoint maximum likelihood mapping in a full—sib family
of an outbreeding species. Genet. Res., 93, 3437349.

van Os,H. et al. (2005a) Record: a novel method for ordering loci on a genetic
linkage map. Theor. Appl. Genet., 112, 30—40.

van Os,H. et al. (2005b) Smooth: a statistical method for successful removal of
genotyping errors from high—density genetic linkage data. Theor. Appl. Genet.,
112, 1877194.

Wu,Y. et al. (2008) Efﬁcient and accurate construction of genetic linkage maps from
the minimum spanning tree of a graph. PLoS Genet., 4, e1000212.

Yamamoto,K. et al. (2006) Construction of a single nucleotide polymorphism link—
age map for the silkworm, Bombe mori, based on bacterial artiﬁcial chromo—
some end sequences. Genetics, 173, 1517161.

Yasukochi,Y. (1998) A dense genetic map of the silkworm, Bombe mori,
covering all chromosomes based on 1018 molecular markers. Genetics, 150,
151371525.

 

3134

ﬁm'spzumofpmjxo'sopnuuopnorq/pdnq

