BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

g ’

 
      

   

22

Hmuns Hmmﬁ DNA mum Vacuum
Metmatmx mummm

    

/810'SIBum0[pJOJXO'sopEquJuyqu”:duq

an?kgowsmomammowoxmoa‘ocgawbmﬁ

 

restricted ahgnmem
unrestricted ahgnmem

 

 

B.-S.Seah et al.

 

Intuitively, a region-to-region alignment shows the functional conser-
vation between the regions of both networks in a coarse-grained manner.
Given such a region-to-region alignment, any detailed protein-to-protein
alignment between these networks must ensure that it is consistent with
the aligned functional subgraph regions (from region-to-region align-
ment). In other words, a protein-to-protein alignment should be guided
by these region-to-region alignments. We shall now formalize concepts to
let region-to-region alignment serve as constraint to protein-to-protein
alignment.

A subalignment subm is said to be hard constrained to a pair of
function-constrained subgraphs (KM 6 5,», K‘. 6 5]) iff V; g V5 and  g
Vf (recall that V5 and Vf are the vertices of subgraphs K“ and K,
respectively). In this case, we refer to the pair of subgraphs as a hard
constraint. Thus, the subalignment is strictly restricted within the sub-
graph regions specified by the hard constraint (KM, K,). The subalignment
in Figure 2(a) is hard constrained to (K3, K4), while subalignment in
Figure 2(b) is not.

Observe that it is computationally challenging to identify an alignment
that satisfies a large number of (conﬂicting) hard constraints. Therefore,
we introduce the notion of probabilistic constraints on subalignments.
A soft constraint on a subalignment subm is a pair of function-constrained
subgraphs (KM, Kv) such that VX e Vl‘I, P(subm(X) e Vf) : p and
VX e  P(subm’1(X) 6 V5) 2 p. We refer to the subalignment as
being soft constrained to the (Ku, Kv) pair. A soft constraint on a
subalignment restricts the alignment to the region specified by (KM, Kv)
probabilistically. We shall later define a score that is associated with the
probability parameter p. Suppose the subalignment in Figure 2(b) is a
subalignment that is soft constrained by (K3, K4). For every protein in
X e {1, 2, 3}, it has probability of at least p to being mapped to a protein
in {b, c, d} (i.e. VX e V‘ZY,P(subm(X) e Vf) 2p). At the same time, for
every protein in X e {b, c, d}, it has probability of at least p to being
mapped to a protein in {1, 2, 3} (i.e. VX e V“; P(subm’1(X) 6 V5) 2 p).

A subgraphisubgraph pair (or soft constraint) is a pair of subgraphs
f= (KM, K‘) K" e S,» and K‘. e  such that there exists a
subalignment subm of m that is soft constrained to f with probability
P(f). This subgraph pair models a single region-to-region pairing. Let
f = {f1,f2, . . . ,fK} be the set of all subgraphisubgraph pairs, with each
fk e f given a certainty score s(f,‘.) (x P(ﬁ) Here, s(fk) reﬂects the likeli-
hood that subgraph K“ is aligned to subgraph K, and is associated with
the network subalignment score between K“ and K, in terms of both se-
quence and topological conservation.

It is reasonable to remove the top levels of GO terms as they are likely
to contribute little to the alignment. However, choosing the number of
top levels to prune is not a trivial task, as the speciﬁcity of the terms does
not uniformly increase with level (e.g. some terms at level 3 may be more
specific than others). Instead of a hard cutoff, DualAligner implicitly
weighs the effects of GO terms via subalignment scores s(/). It relies on
computing subalignment scores between GO term-associated subgraphs
to determine its significance in functional conservation. Consider, for
example, subalignment between GO term subgraphs associated with
‘Biological Process to Cellular Component’ and ‘Golgi vesicle transport
to vacuolar transport’. It is likely that the former subgraph pairs yield a
poor subalignment score s(f) compared with the latter, which is likely to
have higher percentage of conserved interactions and sequences. Because
the alignment contribution of the subgraphs is weighted by s(/),
DualAligner only weakly consider the effect of the former pair and
strongly consider the latter. Thus, it can effectively discard the contribu-
tion of non-specific terms in a data-driven manner.

We propose, with simplifying assumptions, a constraint mixture model,
where the overall distribution is modeled by a weighted superposition of
distributions under each constraint fk e f. The mixing weight for a soft

constraint fk is given by P(ﬁ.) = i026), that is, the probability that con-
fl

 

straint fk is restricting a subalignment of m. The probability of X 6 V1
assigned to y 6 V2 under the constraint mixture model is as

follows: P(le)=ZﬂVP(y|X,ﬁ)P(fk). The conditional independence as-

sumption is made such that conditioned on fk, the matches are independ-
ent. P(le,ﬁ.) is the probability that X 6 V1 is aligned to y 6 V2 given
that fk constrains alignment of this pair of protein. Let subm,-/~ be a sub-
alignment that is soft constrained to f = (K,, K/). Let submg.m be the best
one-to-one alignment obtained. submg.W can be attained using any exist-
ing network alignment algorithms. Suppose an alignment generates a
scoring function o(X, y) for each pair of aligned proteins. Then, we let

the certainty score off be s(f,‘.) = X; “(Mold + o(X, subm(X)). Under this

formulation, we note that P(le,ﬁ.) = 0 in most matches compared with
sequence similarity matrix.

DEFINITION 2 (Function-constrained Network Alignment Problem). Given
two PPI networks G,- and G) and a region-to-region alignment I'm, let Am be
a protein-to-protein alignment function that aligns G,- to G) constrained by
soft constraints in I'm. Let P(ylei,f;‘.)=o(X,», yj)  =(Ki,  6 rm and
(Xi, yj) e sume-W; P(ylel», = 0  otherwise. The function-constrained
network alignment problem is then defined as the problem of identifying
the alignment function Am that maXimizes:

P(Am(x)|x) = H 2 P(Am(XZJIXimIE’w

X; fl;

2.4 The DualAligner algorithm

We now present the DualAligner algorithm that identifies an align-
ment that maximizes P(Am(x)|x) via the aforementioned dual alignment
strategy. The reader may refer to Supplementary Material S1 .4 for formal
description of the algorithm. DualAligner is composed of the follow-
ing three phases.

Phase 1: Functional subgraph construction and ranking. Given two PPI
networks G, and GZ, the first phase of DualAligner identifies and
constructs the set of functional subgraphs SI and 52. It exhaustively
identifies for each GO term the induced subgraph of G, and GZ sharing
that term. Note that an induced subgraph of a GO term may contain
multiple connected components. Our partitioning strategy transforms
each connected component in the subgraph to a function-constrained
subgraph of the GO term. For instance, if the induced subgraph of a
GO term contains five connected components, then five function-
constrained subgraphs of that term will be formed. Following that,
pairs of subgraphisubgraph are constructed as soft constraints, and the
certainty score s(f) is computed using the subalignment algorithm (dis-
cussed below). We introduce a pruning parameter [ES to remove near-
duplicate functional subgraphs. While computing functional subgraphs,
only non-redundant subgraphs are added to the set of functional sub-
graphs. In this study, we set [BS = 0.9 (remove subgraphs that share >90%
of vertices). The user-deﬁned parameter k is introduced to select only the
top- k constraints for consideration in the next phase. These top- k con-
straints are selected based on their s(f) scores.

Phase 2: Region-to-region alignment. In the second phase, the soft con-
straint pairs are ranked by their certainty scores and subalignment is
performed. Given a pair of subgraphisubgraph constraint f = (K,, K,),
a subalignment constrained by (K,, K/) is an injective mapping of vertices
from Vl!‘ to Vf. Here, we propose a subalignment algorithm to achieve
this. A pair of protein u e Vf, v e Vf is scored using the following scor-
ing function: s(u, v) = b(u, v) + Am(u, v). The function b(X,-, yf) measures
the sequence similarity score for aligning protein u to v and is deﬁned as
b(Xi, yj) = (l + e”""”(”~"/))’1, where bscr(X,-, y,~) is the BLAST bit-score be-
tween the two proteins. The function a(u, v) measures the topological
score for aligning protein u to v and is defined as follows:

o(u, v)= |NE ﬂ ME|
NE: {(X. y) : X e N(u),y 6 NW}
ME: {(Am(X), Am’1(y)) : Am(X) e N(X), Am’1(y) e N(v) e E2}

 

2622

ﬁm'spzumol‘pmﬂo'sopeuuoonIq/ﬁdnq

DualAligner

 

where Am is function mapping currently aligned proteins and N(X) are
the neighbors of protein X. The parameter A, weighs the effect of sequence
similarity versus structural similarity.

The subalignment method performs a greedy seed and extension
strategy similar to several existing network alignment techniques such
as MI—GRAAL, Graeml in. First, the best scoring pair of proteins (X, y)
in Vl!‘ and Vf is identiﬁed as seed and added to alignment. Using this
seed, an extension is performed by identifying the neighborhood of the
seed, i.e. the vertices in Vl!‘ and Vf, which are adjacent to X and y,
respectively. The pairs of proteins in this neighborhood sets are ranked
according to their scoring function scores and added to the alignment.
These steps are then repeated until the alignment is complete.

Observe that the pairwise subalignment step can be computationally
expensive when subalignment is performed for every pair. Therefore, we
introduce a pruning parameter y, to remove highly redundant functional
subgraphisubgraph constraints. After ranking each constraint f by their
conﬁdence score s(f), we greedily perform subalignment on the highest
scoring constraint and update the conditional probabilities. Following
that, we prune the remaining sets of constraints to remove near dupli-
cates, such that any remaining constraint whose overlap ratio with f
is greater or equal to y, is removed, i.e. given (K,, K,), we remove

 

 

K K
{(K1,K2) e S: Wfﬂm Wzﬂy/ ‘ > yx} from the set S. This is re-

inI 7 VA" Mi *
peated until S is empty.

Phase 3: Expanded protein-to-protein alignment. In the ﬁnal phase, we
extend the coverage of proteiniprotein alignment beyond richly anno-
tated regions. Phases 1 and 2 of the alignment align only proteins that
have GO annotations. Thus, unannotated proteins could not be aligned
yet. This phase enables alignment of such proteins by using Phase 2
aligned proteins as seeds, and then identiﬁes all remaining unaligned
proteins and ranks them pairwise by their scoring function o(u, v) score
with reference to the seeds. Following that, each ranked pair, starting
from the highest scoring pair, is added to the alignment. Finally, the
remaining unaligned proteins are aligned based on the topological con-
servation with respect to the seeds.

The worst-case time complexity of DualAligner is 0(a(| V|) + |S|2
|V|3) (Supplementary Material Sl.5).

3 RESULTS

The DualAligner algorithm is implemented in Scala. We now
present the experiments conducted to study the performance of
DualAligner and report some of the results here (additional
results are in Supplementary Material $16). The experiments
were conducted on a 1.66 GHz Intel Core 2 Duo T5450 machine
with 3 GB memory. We align the PPI networks of the global
human, ﬂy and yeast (Table 1). We use GO annotations that
are part of the IntAct species dataset. No other annotations
were used.

Table 1. Datasets

 

 

Dataset Number Number Source
of nodes of edges
Homo sapiens 9131 34 362 IntAct
(Kerrien et al., 2007)
Saccharomyces cerevisiae 4768 40 457 IntAct
Drosophila melanogaster 31 14 6472 IntAct

 

Evaluation criteria. We use several criteria to evaluate the per—
formance of DualAligner. We deﬁne the coverage of an align—
ment m between two networks G1 and G2, denoted as cov(m), as
the fraction of protein pairs aligned by an alignment method.
That is, cov(m)= |m|/min(|V1|, |V2|), where |m| is the number of
protein pairs aligned in m. Observe that cov(m) = 1 if the align—
ment m is a one—to—one mapping of V1 to V2.

To measure the structural similarity of an alignment m
between two networks G1 and G2 with cov(m) g 1, we propose
a modiﬁed version of the edge correctness (EC) measure
(Kuchaiev and Przulj, 2011; Zaslavskiy et al., 2009). Given G1,

G2 and alignment m, the EC measure is defined as

= ElSETﬂEZSET
EC IEZSETI where

ElSET= {(X,y) : (X,y) e E1}
E2SET= {(Am’l(X), Am’l(y)) : (X,y) e E2}

Observe that EC indicates the fraction of correctly aligned edges
among the proteins that are aligned (E2SET is restricted by
domain of Am). Unlike the standard EC measure that is only
useful for full coverage alignment, this modiﬁed measure can be
used for not only global alignment results but also local align—
ments (i.e. alignments with cov(m)< 1.0).

To measure the sequence similarity of an alignment m between
G1 and G2, we propose the average normalized bit—score measure
as follows:

bi tscr(X, y)
1/2 (1)

ANBS G ,G 7 = 71 —
( 1 2 m)  Z (bitscroc,x)bllSCl'0/7y))i

(X, y)e m

Observe that it is simply the average normalized BLAST bit—
score of the paired proteins in m. A high ANBS score implies
that sequence homologs are well matched, whereas low score
implies that sequence homologs are not being matched. We do
not report the variance of the ANBS scores because it does not
indicate alignment quality (even in an optimal alignment, the
ABNS variance can be high). Lastly, to measure the biological
function quality of an alignment m, we use a modiﬁed functional
coherence measure (Singh et al., 2008) that incorporates the
speciﬁcity of the GO terms:

FC(G1, G2, m) = |m|7l Z maxspeczﬁcity(Ax ﬂ Av) (2)

(X ,y) em

where Ax and A). are the GO terms associated with proteins X and
y, respectively, and maxspeczﬁcity(-) measures the most speciﬁc
GO term shared by X and y:

|{ve V: A,6A,}|

I VI (3)

maxspeclﬁcity(X) = max 1 —
AieX

Identiﬁcation of conserved regions through region-to-region
alignment. We ﬁrst demonstrate the importance of region—
to—region alignment for network alignment. Recall that in a
region—to—region alignment, pairs of subgraphs from both net—
works indicate conservation at a broader granularity. That is,
the subgraph as whole is deemed to be functionally conserved
with allowance for protein and topological differences. Here, we
evaluate several high—scoring region—to—region alignments. A few
of these conserved subgraphs are depicted in Figure 3 (see also

 

 

2623

ﬁlO'SIBHmOprOJXO'SOplZIIJJOJLIIOIQ/ﬂdnq

53x\Ewogmoizmnnw.oxmoagoﬁsiwbwﬁ

 

 

 

DualAligner

 

on all measures. It achieves the best score in FC except
PINALOG. Nevertheless, we urge caution in interpreting the qual—
ity of the protein—to—protein alignments. The global ﬂy network
is highly incomplete and has large gaps in interaction data
(Table 1). This could also explain the low coverage of
PINALOG, which rely on topology—based clustering to align the
networks. The rapid drop in EC and bit—score similarities at
higher coverage is indicative of this issue. In this case, a broad
region—to—region alignment would be more suitable than inferring
detailed protein—to—protein alignment out of the incomplete inter—
action data.

Finally, compared with other methods, DualAligner is able
to assign confidence scores to matched protein pairs that correl—
ate with alignment quality (by EC, bit—score and functional co—
herence measures). This is demonstrated by its ability to allow
users to control the trade—off between alignment coverage and
quality. Overall, DualAligner is competitive with all protein—
to—protein methods while being able to perform region—to—region
alignment that is consistent with existing knowledge. Note that
the ﬂy network is sparsely connected with few GO annotations in
comparison with the human network. Hence, the sequence hom—
ology of proteins may be crucial here for better alignment.
Consequently, PISwap is advantageous here, as it relies on
sequence—based Hungarian matching.

A unique advantage of DualAligner is its ability to have
functionally interpretable subgraph—to—subgraph alignments.
Methods that are based on clustering (e.g. PINALOG and

ANBS

DualAligner _._
ﬂ Ml-GRAAL +
IsoRankN —-—

(a) 0.5 EC ('3) 0.4

DualAligner _._
_.._

  
 
   

Ml-GRAAL
0‘7 IsoRankN + 0‘35
IsoRank —a—
05 Natalie --+-
PINALOG
Shih2012 .
0.5 P|swap ._.....-.

  

PINALDG --
ShihZDlz -- -
PISwap - --

 

   

EC

0.4

Average normalized bilascore
c
N

 

0.3
0.2 0.1
C
0.1 0.05 I
0 0 a u
0 0.2 0.4 0.0 0.8 1 0 0.2 0.4 0.6 0.5 1
Coverage Coverage
(c) 1 Functional Coherence
0.9
8 I
a
a.
2 0,3
8 I '
E X
g 0-7 DualAligner _._ II
t: M- —«—
E IsoRankN +
IsoRank —a—
06 Natalie ---.--
PINALOG 
Shih2012 o
PISwap v......_.
0.5
0 0.2 0.4 0.6 0.0 1

Coverage

Fig. 5. Performance of DualAligner (ﬂy versus yeast). (a) EC, (b)
ANBS, (c) Functional Coherence

Table 2. Running times (in seconds)

ShihZOlZ) may not yield functionally interpretable subgraph—
to—subgraph alignment. DualAligner is especially advanta—
geous when there is no clear one—to—one protein alignment
between the subgraphs. In that case, functional interpretation
of alignment between regions can be useful. On both alignments,
DualAligner is able to achieve almost complete coverage.
Thus, despite not considering isolated proteins, a signiﬁcant
portion of the networks can be aligned.

Effect of As. The parameter A, controls the effect of sequence
similarity versus topology similarity in the scoring model.
We study the effect of A, on the alignments by varying A, from
0 to 400. Figure 6 depicts the results showing its effect on EC and
ANBS scores. As A, increases, the EC value improves while
ANBS decreases. Thus, A, allows a trade—off between sequence
similarity and topology similarity. At low values of A,, more
emphasis in preserving high average bit—score alignment is
observed. The greater the value A,, the greater is the effect of
topology similarity. This effect, however, converges to a steady
state at subsequently higher values.

Running times. Table 2 reports the running times of
DualAligner compared with other methods. Observe that
DualAligner outperforms the tested approaches except
PISwap. Although IsoRankN is designed to scale to multiple
networks, IsoRank signiﬁcantly outperforms IsoRankN in
alignment of a pair of global PPI networks. However, the run—
ning times of IsoRank increase much more rapidly with the size
of the networks. In comparison, DualAligner scales better
with the size of the networks. The Natalie method is designed
to terminate after 3600 s.

4 SUMMARY

We propose DualAligner, a network alignment algorithm
that performs a dual alignment strategy, in which both region—
to—region alignment (i.e. whole subgraph of one network is
aligned to subgraph of another) and protein—to—protein align—
ment (i.e. individual proteins in networks are aligned to one
another) are performed to achieve superior—quality network
alignment. Speciﬁcally, global alignment is achieved in

(a)  EC (b) ANBS

EC ---r--- brl-score —o—

EC
a a
2 a
.3
Average normalized hllascare
.0 .0 .0
2 a a:

i 0 50 100 150 200 D 50 100 150 200
Parameter lambda Parameter lambda

Fig. 6. Effect of A, showing its role in controlling the trade-off between
topology and sequence conservation. (a) EC, (b) ANBS

 

 

Networks IsoRankN IsoRank MI-GRAAL DualAligner Natalie PISwap
Human PPliYeast PPI 23 911 3950 38 849 1831 3600 803
Fly PPliYeast PPI 5725 1050 31 472 1192 3600 441

 

 

2625

ﬁm'spzumol‘pmﬂo'soplzuuowrorq/ﬁdnq

B.-S.Seah et al.

 

DualAligner via the background information provided by a
combination of GO annotation information and protein inter—
action data. We empirically demonstrate that our proposed ap—
proach outperforms state—of—the—art global network alignment
techniques and demonstrates its ability to rank regions of align—
ment by their alignment quality.

Conﬂicts of Interest: none declared.

REFERENCES

Chindelevitch,L. et a]. (2013) Optimizing a global alignment of protein interaction
networks. Bioinformatics, 29, 276572773.

Flannick,J. et a]. (2006) Graemlin: general and robust alignment of multiple large
interaction networks. Genome Res, 16, 116%1181.

Huang,H. and Bader,J.S. (2009) Precision and recall estimates for two—hybrid
screens. Bioinformatics, 25, 3727378.

Kalaev,M. et a]. (2008) NetworkBLAST: comparative analysis of protein networks.
Bioinformatics, 24, 59¢596.

Kalaev,M. et a]. (2009) Fast and accurate alignment of multiple protein networks.
J. Comput. Biol, 16, 9897999.

Kelley,B.P. et a]. (2004) PathBLAST: a tool for alignment of protein interaction
networks. Nucleic Acids Res, 32, W837W88.

Kerrien,S. et a]. (2007) IntActﬁpen source resource for molecular interaction data.
Nucleic Acids“ Res, 35, D5617D565.

Klau,G.W. (2009) A new graph—based method for pairwise global network align—
ment. BMC Bioinformatics, 10 (Suppl. 1), SS9.

Koyutijrk,M. et a]. (2006) Pairwise alignment of protein interaction networks.
J. Comput. Biol, 13, 1827199.

Kuchaiev,O. and Przulj,N. (2011) Integrative network alignment reveals large
regions of global network similarity in yeast and human. Bioinformatics, 27,
139071396.

Liao,C.S. et a]. (2009) IsoRankN: spectral methods for global alignment of multiple
protein networks. Bioily’ormatics, 25, i2537i258.

Pache,R.A. and Aloy,P. (2012) A novel framework for the comparative analysis of
biological networks. PloS One, 7, e31220.

Phan,H.T.T. and Sternberg,M.J.E. (2012) PINALOG: a novel approach to align
protein interaction networksiimplications for complex detection and function
prediction. Bioily’ormatics, 28, 123971245.

Sharan,R. and Ideker,T. (2006) Modeling cellular machinery through biological
network comparison. Nat. Biotechnol, 24, 4274133.

Shih,Y.K. and Parthasarathy,S. (2012) Scalable global alignment for multiple bio—
logical networks. BMC Bioinformatics, 13 (Suppl. 3), SI].

Singh,R. et a]. (2008) Global alignment of multiple protein interaction networks
with application to functional orthology detection. Proc. Natl Acad. Sci. USA,
105, 12763712768.

Ungar,D. et a]. (2002) Characterization of a mammalian Golgi—localized protein
complex, COG, that is required for normal Golgi morphology and function.
J. Cell Biol., 157, 405415.

Zaslavskiy,M. et a]. (2009) Global alignment of protein—protein interaction net—
works by graph matching methods. Bioinformatics, 25, i2597i267.

 

2626

ﬁle'sreumol‘pmJXO'soplzuuopnorq/ﬁdnq

