BIOINFORMA TICS

55,2kgowsmoddmmowoio~&o:~=£¢o~m\

T.Schnattinger et al.

 

the probability of the bases at positions i and j to form a base
pair. More precisely, Pi,- is the sum of probabilities of all second—
ary structures that have a base pair between the nucleotides at
positions i and j.

To our knowledge, Sankoff s algorithm (Sankoff, 1985) was
the ﬁrst to solve the alignment and folding of RNA simultan—
eously. In its pairwise version, it has a time and space complexity
of 0(n6) and 0(n4), respectively, and as a consequence, it is often
considered too expensive for a practical application. A simpliﬁed
and more efﬁcient variant of the Sankoff algorithm is Foldalign
(Gorodkin et al., 1997; Havgaard et al., 2007), which uses a re—
stricted energy model to reduce the time and space complexity,
where Dynalign (Mathews, 2005; Mathews and Turner, 2002)
features the full energy model, but it reduces the number of rea—
sonable alignments by limiting the range of positions of matching
nucleotides. Recently, Backofen et a]. (2011) even presented an
exact and efﬁcient algorithm that uses sparsiﬁcation to signiﬁ—
cantly enhance the runtime behaviour. Another popular imple—
mentation is LocARNA (Will et al., 2007), which is based on the
work of Hofacker et a]. (2004), and it incorporates structural
information into the alignment process in the form of pre—calcu—
lated base pair probabilities. It finds an optimal sequence—struc—
ture alignment that maximizes an objective function, which is a
weighted sum of a sequence alignment score and the sum of base
pair probabilities of a consensus secondary structure. All these
alignment methods depend on ﬁxed weighting parameters for
their sequence and their structure objectives, which have to be
estimated or optimized. Depending on the type of RNA or the
degree of structure conservation, a fixed weighting can lead to
undesirable sequence—structure alignments. A change of these
parameters can have a great inﬂuence on which consensus struc—
ture is considered as optimal.

We treat the sequence alignment and the consensus structure
calculation as separate objectives, and we solve both problems
simultaneously with a new multi—objective dynamic program—
ming algorithm (Deb, 2001; Laux, 2005; Pareto, 1971). The
result is not one single solution that is optimal in some sense,
but a set of Pareto—optimal solutions. This technique has been
applied successfully in different ﬁelds like the multi—objective
routing problem (Sniedovich, 1988) or the knapsack problem
with multiple criteria (Henig, 1983; Klamroth and Wiecek,
2000). In the bioinformatics area, Roytberg et a]. (1999) con—
struct a set of Pareto—optimal alignments of biological sequences
by treating the number of gaps and the scores for (mis)matches
as separate objectives. Taneda (2010) gives an evolutionary algo—
rithm for pairwise RNA sequence alignment that incorporates
RNA structure information to approximate a set of Pareto—
optimal solutions. Although it also uses the theory of dominating
vectors, it only calculates a rough approximation of the set of
Pareto—optimal alignments. Apart from that, it depends on many
parameters that inﬂuence the quality of approximation, as well
as the runtime behaviour. We now present an algorithm that
calculates the exact set of Pareto—optimal solutions.

2 METHODS

When the weighting between two conﬂicting objectives is not known, the
weighting parameters have to be estimated or optimized in some way.

After that the weighting parameters represent one ﬁxed trade-off between
the objectives, which also biases all subsequent solutions.

2.1 Multi-objective optimization

If more than one objective is to be optimized, the scoring can be treated
as a vector-valued function, where the dimension is the number of ob-
jectives. Two different objectives can be conﬂicting, and in general, there
is no solution that maximizes all objective functions. As there is no ‘op-
timal solution’ in a vector-valued context, the deﬁnition of optimality
needs to be generalized.

DEFINITION l (Dominating vector). Let X 2 (X1, . . . ,Xd) 5 [RV1 and
y = (Jinn-Jay) 6 Rd. We say X dominates y iin 2 y,» for all 1 5 i: d
and Xj>yj for at least one 1 51' S d_

DEFINITION 2 (Pareto-optimality). Let M C R“, X e M. X is Pareto-
optimal in M  there is no other element y e M that dominates X.

Now the problem of multi-objective optimization is the calculation of
the largest subset of all possible solutions where every element is Pareto-
optimal. This subset can contain multiple elements and is also known as
the non-dominated set or the ﬁrst Pareto-front (Laux, 2005). The task of
ﬁnding the Pareto-optimal elements of a given ﬁnite set is called the
maximal vector problem and has several solutions that are efﬁcient in
practice. As a special case, the computation of the Pareto-front of a set of
2D vectors takes linear time (Godfrey et al., 2007).

First, we show that every solution, which can be found by a mono-
objective optimization, which maximizes a weighted sum of the object-
ives, is also Pareto-optimal.

THEOREM 1. Let M C [Rd be some solution set, and let be a family of
objective functions. A solution m e M that maXimizes

Z wif,»(m) "a max (1)

z

for any given weights wi >0 is also Pareto-optimal.

PROOF. Let m e M be optimal in respect of (1). Assume m is not
Pareto-optimal; therefore, there must exist an y e M that dominates m,
i.e. Vi : f,»(y) : f,»(m) and Elj : ﬁg») >j}(m). Without loss of generality be
f1 (y) >f1 (m). It follows that Z wifiQI) > Z wif,»(m), which contradicts the

fact that m maximizes (1).

This result implies that our method is a generalization of any mono-
objective method (compare Ehrgott, 2000). The set of supported solutions
(i.e. there exist weighting parameters at,» for which the solution is optimal)
lies on the convex hull of the Pareto set. Restriction on these solutions
may lead to non-favourable decisions (Klamroth and Wiecek, 2000). On
the other hand, the elements from the Pareto-front represent every pos-
sible trade-off between the different objectives: one cannot get better in
one without getting worse in another objective.

2.2 A multi-objective dynamic programming algorithm

The secondary structure of functional RNAs is often more conserved
than their sequence; therefore, it makes sense to use the secondary struc-
ture as another criterion to obtain good alignments. A sequence-structure
alignment of two RNA sequences A and B consists of a sequence align-
ment R and a compatible consensus secondary structure S, which means
that both sequences can fold into the same structure S. More precisely,
(j,l) e R means that the nucleotides A) and B, are matched together.
(i,j; k, l) e S means (i, k) e R and (j, l) e R are matched nucleotides,
and additionally, A,- is base paired with A), and Bk is base paired with
B]. We formulate two separate objectives that assign a score to a se-
quence-structure alignment. The ﬁrst one in Equation (2) is the well-
known objective function for sequence alignment algorithms: the sum

 

1 608

ﬁm'spzumofpmjxo'sopnuuqquIq/ﬁdnq

Structural RNA alignment by multi-objective optimization

 

of penalties for the gaps in the alignment and of scores for (nus-)matched
unpaired nucleotides.

MRS) = y-Ngup + 2 «Allan (2)

(i.k)eR

WWI-mi
The gap penalty y should be negative, where the scoring function a for
aligned nucleotides should satisfy a(a, a) z 0 and 0(a, b) 5 0 for a 75 Z).
Note that Equation (2) is a weighted sum itself. To be completely inde-
pendent of weighting parameters, we could introduce a third objective
function, but this would again result in a higher runtime complexity. The
second objective function in Equation (3) is the sum of base pair scores

for all aligned base pairs in the consensus secondary structure S.

13,.(R,S) = Z w; +\Ilf; (3)

(games

The score ‘11; for the base pair (Ai,AJ-) is deﬁned analogously to
Hofacker et al. (2004), and it is proportional to the logarithm of the
respective entry in the base pair probability matrix Pf} (McCaskill, 1990).

A 10g(P;4' /I7min)a if P14 2 I’min

wij = { 0, othjerwise. (4)
In the ﬁrst version of our algorithm (Schnattinger et al., 2012), we used
the recursive deﬁnition of Hofacker et al. (2004) for the prototypical
implementation. In a more sophisticated algorithm by Will et al.
(2007), the runtime and memory requirements were greatly improved.
Therefore, we adapt this new formulation to ﬁt the multi-objective prob-
lem deﬁnition. Let now Sid-1A.~ 1 be the set of Pareto-optimal scoring vectors

of alignments of the two subsequences A[i + l..j] and B[k + l..l].

Si. 1'sz = Pareto-maX of :
{S + )7 I S E SLJ'Lli/{JIU

s+ 1733 e Si.j:k.lil U

{s +3(Aj,B1) : s e S,;,-,1.A._1,1}U (5)
s + d :
U S E Sink/{#71,
[7"] d E Dh.j:q.l
Di.j:k.l = {S + 613,- + 615.115 E Siljilzkjil} (6)
with the initializations

5mm = {170—10}, for l>k (7)
Si.j:k.k = {170— 1.)}, for j>i (8)
Si.i:k.k = {a} (9)

Equation (5) takes the Pareto-optimal solutions from all candidate
solutions, which originate from the union of four major sets. Each one
results from reducing the problem of ﬁnding Pareto-optimal sequence-
structure alignments of two sequences to smaller subproblems. The ﬁrst
one takes all elements of Sid-41M and adds a gap penalty )7 to them. This
stands for the insertion of a gap into the sequence B directly after position
I, which is matched with A). Analogously, the second set describes the
scoring vectors of all alignments that have B, matched to a gap in A after
position j. As Sid-,1;ij is the set of alignments of the subsequences
A[i+ l..j — l] and B[k + l..l — l], the third set of Equation (5) contains
all Pareto-optimal solutions to the alignment of A[i + l..j] and B[k + l..l],
which have A / matched (or mismatched) to B,. The scoring of aligning
these two nucleotides is done by the function 3. The fourth part is the
union of all candidate solutions, which have a base pair (h J) in A and (q,l)
in B. As a result, a solution vector is the sum of the solution vectors of
two partial problems: the alignment of the subsequences A[i + l..h — l]
and B[k + l..q — l], and of the subsequences A[h..j] and B[q..l] with the
base pair (h, j; q,l) as an additional condition. Therefore, Equation (6)

deﬁnes DLJ-ijl to be the set of Pareto-optimal solution vectors of the
alignments of the subsequences A[i..j] and B[k..l] with the condition
that A,- is matched to Bk, Aj is matched to B,, and these enclosing nu-
cleotides are base paired. Obviously, it is required that both RNAs can
have base pairs at these positions; hence, Pf} > 0 and PE > 0. Note that we
do not need the Pareto-max operator here, as Sid-,1): [,1 does not contain
dominated solutions. Finally, Equations (779) specify the trivial base
cases of the recursion.

We want to compute both scoring functions for every solution; hence,
each element in the matrices S and D is a vector with two components:
the sequence score and the structure score of this solution. Therefore, we
implement a 2D scoring function with the ﬁrst component containing the
sequence score fml and the second component containing the structure
score fW Thus, )7 and 17(l) are the vector-valued gap penalties for the
insertion of a gap of length l and l, which in our case is deﬁned by
17(l) := (y - l,0). The insertion of a gap into an existing intermediate so-
lution should increase its sequence score by y and leave the structure
score untouched, which means that )7 can simply be added to the scoring
vector of the intermediate solution. Analogously, the scoring function for
two aligned nucleotides a and b is 3(a,b) := (a(a,b),0). On the other
hand, the vector-valued structure score is  := (0, \Ilg), leaving the
sequence score unchanged when added to the scoring vector of an inter-
mediate solution.

The number of Pareto-optimal solutions to the sequence-structure
alignment problem can be large. To maintain practicability, it is crucial
to optimize the runtime and memory requirements of this algorithm. For
example, S does not have to be calculated for every combination of i and
k, as only those parts of the matrix are needed with either (i, k) = (0, 0) or
A,- and Bk are positions where a base pair can start. The set of Pareto-
optimal scoring vectors of global alignments of A and B is S0~ W10~ ‘3‘. The
dynamic programming matrix contains the Pareto-optimal scoring vec-
tors for the solutions but not the sequence-structure alignments them-
selves. To get the desired alignments, a backtracing procedure is used in a
second phase of the algorithm, which works as follows. For every scoring
vector a, Equations (5) and (6) are used to ﬁgure out how this solution
was calculated by simulating all steps that may have led to a. This is
repeated recursively until one of the base cases from Equations (779) is
encountered.

2.3 Proof

The recursive formulation of the dynamic programming algorithm is
similar to the typical mono-objective formulation, except for the elements
being vectors instead of numbers. To show the correctness of a
dynamic programming algorithm, the problem must satisfy Bellman’s
principle of optimality (Bellman, 1957). Henig (1985) showed that the
principle of optimality holds for multi-criteria decision problems if the
monotonicity criterion is fulﬁlled. This means that if a,b e Sid-1M are
solutions to the same subproblem and a dominates b, and the same
‘decision’ ﬂa) and ﬂb) is applied to them, their dominance
property must be preserved; hence, f(a) must also dominate ﬂb). We
will show the correctness of our algorithm by showing that (i) for each
subproblem (i, j, k, I), all Pareto-optimal solutions are generated and
(ii) Bellman’s principle of optimality holds; hence, no Pareto-optimal
solution is lost by applying the Pareto-max operator during the
algorithm.

THEOREM 2. Equations ( 5 ) and ( 6 ), together with the initializations of
Equations (779) compute the set of Pareto-optimal sequence-structure
alignments.

PROOF. Suppose that all smaller subproblems have already been cal-
culated. Without the Pareto-max operator, Equations (579) produce the
set of all possible sequence-structure alignments of A and B. The Pareto-
set thereof is the desired result. We will now show that the removal of
dominated solutions from the sets during the algorithm does not prevent

 

1 609

ﬁm'spzumofpmjxo'sopnuuqquIq/ﬁdnq

T.Schnattinger et al.

 

any Pareto-optimal solution to be computed in a future step. Therefore,
we ﬁrst show that a dominated intermediate solution can not be part of a
Pareto-optimal solution. This argument covers the ﬁrst three cases of
Equation (5). Without loss of generality, we consider the ﬁrst case,
cases two and three follow analogously.

First case. Let X, y e Sig/4).] be two scoring vectors of the form
X 2 (X1, . . . , X4) and y = (yl, . . . ,yd), with X dominating y, that is
X,- 2y,- for l 5 i 5 d and X,->y,- for at least one 1 51': d.
Furthermore, let )7 2 (V1,. . . , yd) be the d—dimensional gap
penalty score. Let now be X = X + )7 2 (X1 + V1,..., X); + yd)
and )7 = y + )7 = (yl + V1,...,yd+ yd). It is clear
that I?) = X,‘ + V; 2 y; + y; = )7;  IS  S d and
X,- = X,- + 14>”- + y,- = )7,- for at least one 1 Sj 5 d, which immediately
implies that X dominates )7; hence, the monotonicity criterion holds. As a
consequence, no Pareto-optimal solution is lost in the computation of
Sig/1A1], if dominated scoring vectors are eliminated in their partial solu-
tions in the ﬁrst three cases.

Last case. For any ﬁxed 11 and q be v, w e S,-.,,,1;k.q,1, v 2 (v1, . . . , m)
and w = (wl , . . . , wd) with v dominating w, and
X, y e Dhjj-qug, X 2 (X1, . . . , X4) and y = 071,. . . ,yd) with X dominating
y. Then the scoring vectors (v+X), (v+ y), (w+X) and (w + y) are
among the generated solutions for Sig/1A1]. From the fact that v dominates
w, it follows that (v + X) dominates (w + X), and (v + y) dominates
(w + y), as shown earlier in the text. Also X dominates y; thus, (v + X)
dominates (v + y) and (w + X) dominates (w + y). After the application
of the Pareto-max operator, from these four produced solutions, only
(v + X) e Sig/1A..) survives in the set, and v and X were the non-dominated
vectors. Therefore like aforementioned, by removing dominated solutions
from intermediate results, no Pareto-optimal solutions are lost.

2.4 Implementation

The runtime and space requirements depend not only on the length of the
input RNA sequences A and B, as it would be the case in the mono-
objective algorithm, but also on the number K of Pareto-optimal solu-
tions. This number depends on the sequence and structure conservation
of the RNAs. If, for example, A (or B) does not have any secondary
structure (i.e. PA = 0), then the fourth case of Equation (5) always evalu-
ates to the empty set. This means that for every (i,_]', k, I), there will be no
solution with a positive structure score. As a result, the number of Pareto-
optimal solutions will be K: 1. In the other extreme, A and B have many
suboptimal secondary structures; therefore, PA and PB have many non-
zero entries. This will result in many sequence-structure alignments with
different structure scores, and most likely in many non-dominated, hence,
Pareto-optimal solutions.

We want to determine this number K (as a function of the sequence
length) experimentally for the given 2D objective function. Therefore, we
randomly chose 11000 pairs of RNAs up to length 350 from the Rfam
database (Gardner et al., 2011), with each pair being from the same RNA
family and differing no more in length than 10 nt. For each pair, we ran
our algorithm and computed the size of the largest set of Pareto-optimal
solutions among all intermediate solutions Sig/1A1]. The experiment
showed that the average quotient of the number of Pareto-optimal solu-
tions and the mean sequence length of the input sequences is l, and we
conclude that K must be in 0(n). See Fig. 2 for a graphical result of this
experiment.

The algorithm consists of two major parts. First, the set of Pareto-
optimal scoring vectors SOM‘ZOJB‘ is calculated using the recursion of
Equations (59). The runtime complexity of a dynamic programming
algorithm is the size of the table, which in our case is 0(n4), times
the runtime it takes to compute one entry. We saw earlier that the
Pareto-max operator for 2D data has a runtime proportional to the
number of candidate elements. Assuming that the largest set Sig/1A..) has

K elements, it becomes clear that the ﬁrst three cases of Equation (5)
produce at most three K elements. Will et al. (2007) showed that, on
average, the number of combinations (h,q) in the fourth case is constant.
The elements in this fourth set are the sums of each combination of
Pareto-optimal solutions of two smaller subproblems; hence, its size is
in the order of K2 in the worst case. This gives an overall runtime of
0(n4 - K2). In practice, the runtime can be strongly improved by restrict-
ing the alignments in the following way. If we demand from each aligned
pair (A,-, BA.) that the two nucleotides must be at most M positions apart,
i.e. |i — kl 5 M, and furthermore that for matched base pairs (i,_i; k, l) the
span of the two involved base pairs |(j — i) — (l — k)| 5 M differs by no
more than M, then the runtime can be reduced by another factor n2 to
0(n2 - K2) for ﬁxed M (Hofacker et al., 2004). Notice, however, that
M has to be at least the length difference of A and B.

For ﬁxed i and k, the calculation of Sig/1A..) depends only on entries of
the form Sig/[1A, p and on entries from D. Therefore, after every iteration of
i and k, the matrix S can be discarded, and only D has to be stored. This
reduces the space complexity signiﬁcantly from 0(n4) to 0(n2) in the
mono-objective case (Will et al., 2007). Therefore, in phase one of the
multi-objective algorithm, we need 0(n2 - K) space to store S and D and
another 0(K2) for the calculation of the current matrix entry.

In the second phase of the algorithm, for every solution s e S0~ MW~ ‘3‘,
a backtracing procedure is executed that recovers the actual alignment
and the consensus secondary structure from its solution vector s and the
dynamic programming matrices S and D. In the mono-objective algo-
rithms, the backtracing walks once n steps through the matrix towards
the optimal solution, and every step takes constant time. Even though
some entries of the matrix have to be recalculated, the time and space
consumption for this phase is negligible. In our case, we have to be more
careful because larger parts of the matrix may have to be recalculated. As
we expect a larger number of Pareto-optimal solutions, some maybe
similar to each other, many entries will have to be recalculated multiple
times. For this reason, we implemented the following hybrid approach.
As described, we discard the intermediate solutions in the ﬁrst part of the
algorithm after every iteration of i and k. In the backtracing step, how-
ever, we memoize all recalculated entries and thus avoid redundant
calculations.

This gives us a good time-space trade-off in practice, as we can see in
Figure 3 showing the memory consumption of the three approaches, as
well as their runtime by an example of two ykoK leader RNA

 

pareto set size
300
I

 

 

 

 

50 100 150 200 250 300 350
sequence length

Fig. 2. The size of the set of Pareto-optimal solutions as a function of the
mean sequence length. Each of the 11000 grey dots is the size of
the largest set of Pareto-optimal solutions of all subproblems Sig/1A..) of
one experiment. The black line is an interpolation using the locally
weighted regression and smoothing scatter plots (lowess) method of
(Cleveland, 1979)

 

1610

ﬁm'spzumofpmjxo'sopnuuqquIq/ﬁdnq

an?kgogmomammowoio~&o:3m7.omm\

solution 1

sequence EDDIE

2
n
m

m
n.
5

l4. |._|D.|_.|i.
me a.» mm om mm om m _.

Boom 115525

 

 

T.Schnattinger et al.

 

structures of the sequence-structure alignments to the reference,
we use the Matthews correlation coefficient (MCC) for structures
(Havgaard et al., 2007; Matthews, 1975).

15Ah‘*17hh

MCC:
\/(Pi + P/‘XPI + Nt')(Ni + P/)(Ni + 

(10)

 

 

Here, P, is the number of predicted base pairs that are also
annotated in the reference alignment, Pfis the number of falsely

sequence A sequence B

 

structure of solution 1

 

structure of solution 2

 

 

Fig. 5. Secondary structures for the two highlighted solutions of Figure 4.
The first row contains the two RNA sequences folded into the structure
suggested by Solution 1. The second row contains the more stable struc—
ture featuring a fourth stem at the cost of more gaps, as suggested by
Solution 2

 

 

 

 

 

 

 

 

O
(a)? 7 --—/'-_=-:--..L—_-—-::é
, ——r'=':.'-T+-r’=”" ""“'q 
// l" 7 7 A ’ .-
/ ’m" I . . ~ ' ' ' '
//— _ , ,- 'I I.
A 0Q _ "I .l I'
E O .l r'
21 _f +
(D  ' I
g / l
3 w. _ .l .'
)— 0
g / .’
a ,’ 1'
a / :
E a 7 ‘l ,’ —— MODP
"’ o / ,' — — LocARNA
,' ,’  PMcomp
' ,’ --- Cofolga2mo
,’ - - - Clustal Omega
N I
o‘ — ,'
I I I I
20 40 60 80

sequence identity

predicted base pairs, N) is the number of annotated base pairs
that are not predicted and N, is the number of positions that are
unpaired in the prediction and the reference alignment. An MCC
value of 71 means that the predicted and the reference secondary
structure have no base pair in common, where an MCC value of
1 indicates a perfectly accurate prediction. For the sequence
alignment tools C lustal Omega and CafolgaZmo, a direct compu-
tation of the MCC is not possible, as they do not calculate sec-
ondary structures. We used RNAalifolrl to calculate a consensus
secondary structure for their solutions.

In Figure 6a, we observe that the sequence alignment tool
Clustal Omega aligns similar sequences pretty well, but it fails
when the sequence identity is <50 %. The decreased performance
of PMcomp surprises and could be explained by the fact that the
weighting parameters in the objective function are not optimal
for the dataset used here. LocARNA, which has a more sophis-
ticated scoring for the sequence alignment part, shows an
increased performance. Both multi-objective algorithms
CafolgaZmo and M ODP perform comparably well when the se-
quence similarity is >40%, but our method achieves good results
for dissimilar sequences. As for the MCC score in Figure 6b,
which shows the ability of the different methods to predict the
reference secondary structure, we see again the expected
decreased performance of the purely sequence-based Clustal
Omega for RNAs with low sequence similarity. The MCC
score of LocARNA and PMcomp both decline as the sequence
similarity grows, which could be a consequence of having fixed
weighting parameters: if a solution has a high sequence score, the
structure score becomes less relevant. Although both multi-
objective methods outperform the mono-objective methods,
CafolgaZmo seems to behave slightly better for sequence pairs
with similarity from 30 to 70%. On the borders, however, our
approach achieves the higher MCC scores. The evolutionary al-
gorithm CafolgaZmo does not explore the solution space com-
pletely and possibly misses good solutions, whereas we are able
to compute all Pareto-optimal solutions.

 

 

 

 

 

 

 

 

(b) 3 7
F'—-‘

A /' F _ ‘ .’-—.

8 -_—_—_.'_"T—’~ — , \\;‘\ {47“ ‘\

~21 /' i X ‘5'! ’I— _ ‘T‘k

e /— , - - - ". ,: ~.\\:-——
 Ln_ _  _ . . . . - - ‘ ' ' " />’ [I “ ~\ \‘

._ O ‘. ‘ ,
ﬁ 1. i . _.‘ 5r.
0 .1 NS
2  ‘~
.9 ’

6 ,'

E l’

5 o ,’

0 o' _ ,—’

g  —— MODP

g y," - - LocARNA

g 4’  PMcomp

E --- Cofolga2mo

--- Clustal Omega
Ln.
CI, _
I I I I
20 40 60 80

sequence identity

Fig. 6. Sum—of—pairs score (a) and Matthews correlation coefficient (b) as functions of the sequence identity for dataset 2 ofthe BRAliBase ll benchmark
for RNA alignment tools (interpolated using local weighted regression). We compare our method with the tools LocARNA and PMcomp for RNA
sequence—structure alignment and the sequence alignment programs ('o/olgaZmo and ('lustal Omega, as described in the text

 

1612

/3.IO'S[EIIm0[p.IOJXO'SOIJEIIIJOJIIIOIq/ﬂduq

Structural RNA alignment by multi-objective optimization

 

4 DISCUSSION

We introduced a novel method for the construction of pairwise
RNA sequence—structure alignments that is inspired by the
Sankoff algorithm. To overcome the dependence on fixed
weighting parameters for the sequence and structure components
in our objective function, we use separate scoring functions for
sequence and structure and search for solutions that optimize
both objectives. The result is a set of Pareto—optimal solutions
from which the human expert is able to choose. This is clearly an
advantage to single—objective methods that compute one single
solution that is optimal in some sense on which the user has no
inﬂuence. With the BRAliBase II benchmark dataset, we show
the effectiveness of our new method compared with well—
established tools. Although a hypothetical method that generates
all possible solutions would win all benchmarks, albeit being
computationally infeasible, all used methods compute in reason—
able time. Compared with the evolutionary algorithm of
CofolgaZmo, our approach has two major features. First, al—
though an evolutionary algorithm is a heuristic method for
which statements about the quality of its solutions and the cover—
age of the solution space are difﬁcult, multi—objective dynamic
programming is guaranteed to ﬁnd all Pareto—optimal solutions
to a given problem. Second, we do not only have the ability to
produce good sequence alignments but also give all Pareto—opti—
mal solutions to the consensus folding problem of the two RNA
sequences. On a practical side, the number of solutions can be
limited by clipping the objectives or by using Harrington’s (1965)
desirability functions, while being able to guarantee ﬁnding all
solutions in this range. As comparative folding can outperform
single—sequenceibased methods (W esthof et al., 1996), this might
be a useful tool for the analysis of novel RNA families. It may
even help ﬁnding new alternative stable secondary structures for
some families of RNA.

All in all, we are able to give a new perspective on the interplay
between primary sequence and secondary structure of RNA mol—
ecules. These results will also trigger investigations on the poten—
tial of multi—objective optimization for the automatic learning of
weighting parameters for the established single—objective tools on
the basis of published sequence—structure alignments.

ACKNOWLEDGEMENT

The authors thank the anonymous reviewers for their very help—
ful comments that led to signiﬁcant improvement of this article.

Funding: German Research Foundation (DFG, Scho 302/8—2 to
US); Federal Ministry of Education and Research (BMBF,
Gerontosys II, Forschungskern SyStaR, project ID 0315894A
to H.A.K.).

Conﬂict of Interest: None declared.

REFERENCES

Backofen,R. et al. (2011) Sparse RNA folding: time and space efﬁcient algorithms.
J. Discrete Algorithms, 9, 12731.

Behrouzi,R. et al. (2012) Cooperative tertiary interaction network guides RNA
folding. Cell, 149, 3487357.

Bellman,R.E. (1957) Dynamic Programming. Princeton University Press, New York.

Cleveland,W.S. (1979) Robust locally weighted regression and smoothing scatter—
plots. J. Am. Stat. Assoc., 74, 8297836.

Deb,K. (2001) Multi—Objective Optimization Using Evolutionary Algorithms. John
Wiley & Sons, Inc, New York, NY.

Doudna,J.A. and Cech,T.R. (2002) The chemical repertoire of natural ribozymes.
Nature, 418, 2227228.

Dowell,R. and Eddy,S. (2006) Efﬁcient pairwise RNA structure prediction and
alignment using sequence alignment constraints. BMC Bioinformatics, 7, 400.

Ehrgott,M. (2000) Multicriteria optimization. Lecture Notes in Economics and
Mathematical Systems. Vol. 491, Springer—Verlag, Berlin.

Gardner,P.P. et al. (2005) A benchmark of multiple sequence alignment programs
upon structural RNAs. Ntwleic Acids Res., 33, 243372439.

Gardner,P.P. et al. (2011) Rfam: Wikipedia, clans and the ‘decimal’ release. Nucleic
Acids Res., 39, Dl4liDl45.

Godfrey,P. et al. (2007) Algorithms and analyses for maximal vector computation.
VLDB J., 16, 5728.

Gorodkin,J. et al. (1997) Finding the most signiﬁcant common sequence and struc—
ture motifs in a set of RNA sequences. Nucleic Acids Res., 25, 372473732.

Harrington,J. (1965) The desirability function. Ind. Qua]. Control, 21, 494498.

Havgaard,J.H. et al. (2007) Fast pairwise structural RNA alignments by pruning of
the dynamical programming matrix. PLoS Comput. Biol, 3, e193.

Henig,M.I. (1983) Vector—valued dynamic programming. SIAM J. Control 0ptimiz.,
21, 490499.

Henig,M.I. (1985) The principle of optimality in dynamic programming with returns
in partially ordered sets. Math. Oper. Res., 10, 462470.

Hofacker,I.L. et al. (1994) Fast folding and comparison of RNA secondary struc—
tures. Monatsh. Chem., 125, 1677188.

Hofacker,I.L. et al. (2004) Alignment of RNA base pairing probability matrices.
Bioiry’ormatics, 20, 222272227.

Klamroth,K. and Wiecek,M.M. (2000) Dynamic programming approaches to the
multiple criteria knapsack problem. Naval Res. Logist., 47, 57776.

Larkin,M.A. et al. (2007) Clustal W and Clustal X version 2.0. Bioinformatics, 23,
294772948.

Latchman,D. (2005) Gene Regulation: A Eukaryotic Perspective. Taylor & Francis,
NewYork.

Laux,H. (2005) Entscheidwigstheorie. 6th edn. Springer—Verlag, Berlin, Germany.

Mathews,D.H. (2005) Predicting a set of minimal free energy RNA secondary
structures common to two sequences. Bioinformatics, 21, 224C223.

Mathews,D.H. and Turner,D.H. (2002) Dynalign: an algorithm for ﬁnding the
secondary structure common to two RNA sequences. J. Mol Biol, 317,
1917203.

Matthews,B. (1975) Comparison of the predicted and observed secondary structure
of t4 phage lysozyme. Biochim. Biophys. Acta, 405, 442451.

McCaskill,J.S. (1990) The equilibrium partition function and base pair binding
probabilities for RNA secondary structure. Biopolymers, 29, 110?]119.

Pareto,V. (1971) Manual of Political Economy. Kelley Publishers, New York, USA.

Roytberg,M. et al. (1999) Pareto—optimal alignment of biological sequences.
Biophysics, 44, 5657577.

Sankoff,D. (1985) Simultaneous solution of the RNA folding, alignment and pro—
tosequence problems. SIAM J. Appl. Mat/1., 45, 81(k825.

Schnattinger,T. et al. (2012) Pareto—optimal RNA sequence—structure alignments. In
91h International Workshop on Computational Systems Biology 2012 ( WCSB
2012 ), Ulm, Germany, pp 83486.

Sievers,F. et al. (2011) Fast, scalable generation of high—quality protein multiple
sequence alignments using clustal omega. Mol Syst. Biol, 7, 539.

Sniedovich,M. (1988) A multi—objective routing problem revisited. Eng. 0ptimiz.,
13, 997108.

Taneda,A. (2010) Multi—objective pairwise RNA sequence alignment.
Bioiry’ormatics, 26, 238372390.

Thompson,J.D. et al. (1999) A comprehensive comparison of multiple sequence
alignment programs. Nucleic Acids Res., 27, 268272690.

Tinoco,I. and Bustamante,C. (1999) How RNA folds. J. Mol Biol, 293, 2717281.

Westhof,E. et al. (1996) DNA and RNA structure prediction. In: Bishop,M. and
Rawlings,C. (eds) DNAiProtein Sequence Analysis. IRL Press, Oxford,
pp. 2557278.

Will,S. et al. (2007) Inferring noncoding RNA families and classes by means of
genome—scale structure—based clustering. PLoS Comput. Biol, 3, e65.

Zuker,M. and Sankoff,D. (1984) RNA secondary structures and their prediction.
Bull Math. Biol, 46, 591421.

Zuker,M. and Stiegler,P. (1981) Optimal computer folding of large RNA sequences
using thermodynamics and auxiliary information. Nucleic Acids Res., 9,
1337148.

 

1613

ﬁre'spzumot‘pmjxo'sopnuuquroIq/pdnq

