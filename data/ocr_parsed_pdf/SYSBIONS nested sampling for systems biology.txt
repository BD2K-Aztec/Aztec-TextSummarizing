BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Nested sampling for systems biology

 

Table 1. Input options

 

 

Variable Tag Input Default
Number of live points nLive **integer 1000
Number of iterations maxlter **integer on, 10000
Tolerance to] decimal off, 0.001
*Parameters constant **value none
uniform ** bounds none
Sampling method rejection none off
rw none off
ellipsoid expansion factor on, 2
Restart from ﬁle Restart ﬁle paths _restart_points.txt,
_restart_input.txt
Write restart write_restart ﬁle path root _restart
Points to leap nLeap **integer 1
Adaptive leaping adaptive none off
CUDA cuda **nLeap, off, none,

**max. threads none

 

*required; **required if tag given.

manual. The user supplies a likelihood function, either by editing a tem-
plate ﬁle or using an SBML ﬁle. An executable is then made that receives
input from the command line. When the program is run, live points are
generated and their likelihoods evaluated according to the function sup-
plied by the user. On completion, it returns the calculated evidence with
standard deviation, samples from the posterior, trajectories generated by
points from the posterior and ﬁles from which the algorithm can be
restarted.

3.1 Algorithm options

Options available to the user are listed in Table l. The only required input
is the parameter set (all other variables have default values). Parameters
may be constant or inferred subject to a uniform prior distribution, for
which lower and upper bounds must be supplied. The algorithm can be
terminated either by specifying the number of iterations, or by monitoring
the rate at which the evidence accumulates: the loop terminates at iter-
ation m if Em Wm/ZT:1 E,»W,»<tol.

3.2 Sampling methods

We include three sampling methods for step 3d of the algorithm: rejec-
tion, for perfectly sampling from the prior, and random walk (following
Sivia and Skilling, 2006) and ellipsoidal (following Feroz et al., 2009) for
reﬁned sampling with reduced computational cost.

Rejection: The rejection method samples from the prior as initially
deﬁned, accepting the point if its likelihood value is within the constraint
and rejecting otherwise. This method remains true to the requirement that
samples are taken from the prior subject to the likelihood constraint, but
its efﬁciency is poor: as the lowest likelihood increases, the acceptance
rate becomes prohibitively small.

Random walk: The random-walk method duplicates a point randomly
chosen from the current live-point population and walks it 20 steps, ac-
cepting the new point at each step if its likelihood is within the constraint.
The steps are scaled according to the covariance among the present popu-
lation, and scaled further to converge to an acceptance rate of 0.5 (Sivia
and Skilling, 2006).

Ellipsoidal: The ellipsoidal method (Mukherjee et al., 2006) creates an
ellipsoid surrounding the current population of live points, expanded
by some user-supplied factor. The new point is sampled from within

the ellipsoid. This increases the acceptance rate but risks excluding
areas of prior mass that lie inside the current likelihood constraint.

3.3 Output

A summary ﬁle of input and output information is created, documenting
the number of live points, number of iterations, tolerance, sampling
method and parameter ranges, followed by the evidence with standard
deviation, the prior-to-posterior information gain and the means of
all parameters and their standard deviations. Posterior distributions
of the parameters can be plotted individually as histograms and in
pair-wise scatter plots using the data stored in the posterior ﬁle.
Finally, a ﬁle of trajectories is created that can be compared against
the input data.

Restart ﬁles are created, documenting input parameters that must per-
sist upon restart (such as the number of live points) and listing all points,
live and discarded. These ﬁles can be used to restart the program from
where it completed. It is also possible to specify the path to where the
restart files are written.

4 SUMMARY

We present SYSBIONS, a computational tool for model selec—
tion and parameter inference using nested sampling. Using a
data—based likelihood function, our package calculates the evi—
dence of a model and the corresponding posterior parameter
distribution.

ACKNOWLEDGEMENT

We gratefully acknowledge the help and support of the
Theoretical Systems Biology Group at Imperial College London.

Funding: This work was supported through a BBSRC PhD stu—
dentship to R]. and an HFSP grant [RGP006l/20ll] to PK.
and M.P.H.S.

Conﬂict of interest: none declared.

REFERENCES

Aitken,S. and Akman,O.E. (2013) Nested sampling for parameter inference in
systems biology: application to an exemplar circadian model. BMC S_yst.
Biol, 7, 72.

Burkoff,N.S. et al. (2012) Exploring the energy landscapes of protein folding simu—
lations with Bayesian compumtion. Biophys. J., 102, 8787886.

Burnham,K.P. and Anderson,D.R. (2002) Model Selection and Maltimodel
Inference: A Practical Information—Theoretic Approach. Springer, New York.
Dybowski,R. et al. (2013) Nested sampling for Bayesian model comparison in the

context of Salmonella disease dynamics. PLoS One, 8, e823l7.

Feroz,F. et al. (2009) MultiNest: an efﬁcient and robust Bayesian inference tool for
cosmology and particle physics. Mon. Not. R. Astron. Soc., 398, 160171614.
Kirk,P. et al. (2013) Model selection in systems and synthetic biology. Curr. Opin.

Biotecli., 21, 145.

Liepe,J. et al. (2010) ABC—SysBioiapproximate Bayesian computation in Python
with GPU support. Bioinformatics, 26, 179771799.

Mukherjee,P. et al. (2006) A nested sampling algorithm for cosmological model
selection. Astrophys. J., 638, L517L54.

Pullen,N. and Morris,R.J. (2014) Bayesian model comparison and parameter infer—
ence in systems biology using nested sampling. PLoS One, 9, e884l9.

Rodriguez,N. et al. (2007) SBMLeditor: effective creation of models in the Systems
Biology Markup Language (SBML). BMC Bioinformatics, 8, 79.

Sivia,D. and Skilling,]. (2006) Data Analysis: A Bayesian Tutorial. Oxford
University Press, Oxford.

Skilling,]. (2006) Nested sampling for general Bayesian computation. Bayesian
Anal., 1, 8337860.

 

605

ﬁle'spzumol‘pmJXO'sopeuuopuotq/ﬁdnq

