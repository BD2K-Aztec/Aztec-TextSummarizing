BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

an?kgowsmomammowoxmoa‘ocgawbmﬁ

ImEoEum 363% 12.623 >mmm3_u_<

1 2
e e
W D.

V.
t t
o 0
.l .l
P P
a a
H H

References

 

Leveraging multi-SNP reads from sequencing data

 

Read 1 Read 2

Haplotype

Fig. 2. A graphical model for haplotype assembly. In this example, two
reads and four heterozygous SNPs are considered. Read 1 covers the
SNPs 1, 2 and 3. Read 2 covers SNPs 2, 3 and 4. The variables
11 e {1, — 1} stands for the haplotype. The variable r e {1, — 1} stands
for whether the read is from haplotype h or the complementary Ii

Because the homozygous site does not affect the haplotype phasing, we
only consider heterozygous sites. Therefore, the objective is to ﬁnd a
sequence of haplotype and its complementary {[1, li} where
h = —/1_ e {—1, 1}L, to minimize the total number of ﬂipped loci within
reads, such that every read can be perfectly assigned to one of the haplo-
types. Another necessary variable for the model is the read origin indi-
cator if,- e {—1, 1}. If if,- = 1, the jth read is assumed to have been
generated from haplotype h, and if if,- = —1, the jth read is from the
complementary haplotype Ii. We assume the read generation process is
as follows. First, we randomly pick one of the haplotypes (/1, li) with equal
probability, and then sample the read starting position from one of the
L possible positions in the genome. If we consider the read generation
processing is error free, then we have xi,- = li,-ij,-. However, if the read
generation process is error-prone and 8 indicates the rate of sequencing
error then with probability 1 — a, we have xi,- = —/1,-ij,-, and with probabil-
ity a, we have xi,- = —/1,-ij,-. An illustrative example is given in Figure 2.

We can formalize the connection between the haplotypes and read
origin variables into the following probabilistic distribution. For each
possible values of the haplotypes and read origin variables, we can cal-
culate its probability as follows:

P(R,H: X)

2
2%CXP M Haﬁz/(lininbrgi Vii/(hia'fi) ( )
where
ln(l — a) 11,-=ij,-
ln 8 h,- 75 if,-
ln 8 h,- = if,-
ln(l — a) h,- 75 if).

grid/11"?» = {
"rt/(his '7) = {

and the variables R = (if,- g], H = (11,-):1 and X = (xi/)5,- are vectors and
matrix composed of scalar variables r, h and x. The variable Z is a nor-
malization constant to ensure ZR~ H P(R, H; X) = 1. The functions 6 and
)7 specify edge potentials that favor h and r to be of equal values and
opposite values, respectively. The model parameter )1, controls the ‘heat’
of the probabilistic model. Generally speaking, the probability distribu-
tion is smoother when p, is small and sharper when p, is large.

LEMMA 1. The maximum a posteriori (MAP ) assignment of ( 2 ) corres-
ponds to the MEC haplotype for any 6 <0.5.

PROOF. We can prove by constructing the MEC haplotype from MAP
assignment. Let H* and R* denote the MAP assignment of our probabil-
istic model, and the corresponding probability calculated from (2) will be

P(H" , R*; X) = % exp(n(n ln(1 — a) + m In 8))

where n is the number of edges getting potential ln(1 — e) and m is the
number of edges getting potential ln 6 based on the conﬁguration H* and
R*. As ln(1 — £)> lnefor e<0.5 and the number of edges is ﬁxed, this
MAP assignment H* and R* is actually minimizing the number of edges

getting potential ln 6. We can use this haplotype H* and ﬂip every read bit
corresponding to the edge getting potential In a. The resulting MEC score
for H* will be m, which is minimized.

Suppose that there exists another haplotype H’ with MEC score
m’<m. It suggests that we can ﬂip only m’ read bit then all the reads
will be perfectly assigned to one of the haplotypes. We keep those assign-
ments into the variable R’. Thus, we should have

P(H’, R’; X) = % exp(p.((n + m — m’) ln(l — a) + m’ In 8)).

By deﬁnition, m’<m; thus, P(H’,R’; X)>P(H*,R*; X), which contra-
dicts the fact that H* and R* is the MAP assignment maximizing the
conﬁguration probability. By this contradiction, we can conclude that
there does not exist H’ and R’ with MEC score m’<m.

2.3 Haplotype phasing with sequencing data and reference

Current haplotype assembly methods mainly focus on de novo assembly,
which uses short reads as the only information source. This is partially
owing to the complexity of extending the method to the scenario of
assembly using reference. On the other hand, current haplotype phasing
methods only use the reference panel and genotype likelihood in each
SNP but ignore the multi-SNP information in the reads. We aim to use
both the reference panel and sequencing data to perform haplotype phas-
ing as shown in Figure 1. Formally, suppose that we are only considering
L biallelic SNPs, M reads and N reference haplotypes. Each read is rep-
resented by X,- = {—1, 1, 0}L, where 0 stands for unobserved SNP in jth
read. The objective is to ﬁnd two haplotypes, H = {111,112}, where
111,112 6 {—1, 1}L. We want to find the two haplotypes with small
number of inconsistent loci with reads, as well as more consistent with
reference haplotypes. We use another set of variables, S = {s1,s2}, where
s1,s2 e {1, 2, ...,N}L, to stand for the assignment of each loci to refer-
ence haplotypes. We also need a set of variables R = {r1,r2, ...,rM},
where r,- e {—1, 1} stands for the haplotype that each read originates
from. An illustrative example of the graph structure is given in Figure 3.

Similar to the previous section, we can formalize the connection
between the three variables H, R and S into the following probabilistic
distribution. For each possible values of H, R and S, we can calculate its
probability as follows:

1
P(H,R,S:X)=§exp M' Z 9(11},—Ij,-)+ 2 27(11}, —Iii)

URI/=1 ii3XI/=*1
L L71
+ Z §(/1},s}) + Z r(s},s}+1, i)
[:1 [:1
+ Z 001?, ij,-) + Z r1032, ij,-)

inn/:1 inn/:71

L Lil
+Zs(h§,s§)+Zr(s§,s§+1,i))]
i2] i2]

where we have four edge potential functions. The functions 6 and n are
deﬁned similarly as in (2) except that there would be no penalty if the read
is assigned by r to the other haplotype.

ln(l — a) if,- = 1,11,- :1
0(11,-,ij,-) = lna if,- = 1,11,- : —l ,
0 'T/ = —
lne ij,-=l,/1,-=l
n(/1,-,ij,-) = ln(l — a) if,- = 1,11,- : —l.
0 if,- = —l

The edge potential function E speciﬁes the ‘haplotype copying’, which
is motivated that the predicted haplotype is a mosaic of reference

 

2247

/810'S[Bumo_fp10}xo"soiiemJOJuioiW/zdnq

a 0 ﬂ @

:39\Ewowsmoaﬁmowoxmoagoﬁsambwﬁ

Leveraging multi-SNP reads from sequencing data

 

where

mm = exp( 2 em, r» + 2 WW) + saws).
j:Xi/:1 jiXiF’l

The step (ii), sampling for the haplotype reference panel variables S for
ﬁxed read origin R and haplotype H is challenging. The difﬁculty comes
from the dependency between the variables s,- and slur], and the large
number of possible values for each s,-. Note that unlike the binary vari-
ables h and r, the variable s,» 6 {1,2, ...,N}, where N is the number of
reference haplotypes. Thus, straightforward Gibbs sampler would be in-
efﬁcient in this case. To tackle this computational challenge, we resort to
the following Markov chain sampling procedure (Liu, 2008). The joint
distribution over all variables in S can be written as follows:

1 Lil
P(SIH) = Eexp<¢0(31)+ 2 as. w) (9)
[:1

where

¢0(S1) = §(h1,S1)
¢i(Si,Si+1) = T(Si,Si+1, i) + §(hi+1,Si+1)-

Sampling directly from P(SlH) is still tedious. However, we can convert
the P(SlH) to multiplication series of probability functions as follows:
P(s1|s2,H)P(s2|s3,H) - sP(sL,1|sL, H)P(sL, H). Then sampling from
P(sL) and sampling backward using those conditional probabilities
becomes trivial. We can use dynamic programming to convert the
P(SlH) distribution to the alternative form. We deﬁne

V102) = Zexp ($0 (s) a (s, s»)

sES
and
View = Z Vela) expm mm» for i = 2, ---,L.
yeS

Thus, we can compute the normalization factor Z 2 End VL,1(sL)
efﬁciently using dynamic programming, and then we can compute the
marginal probability P(sL,H) = (VL,1(sL))/Z. Moreover, we can back-
ward compute P(s,»|s,»+1, H) similarly. Note that a naive implementation
of this step would result in a complexity of quadratic in the number of
reference haplotypes. We take advantage of the symmetry in the haplo-
type coping model to reuse computation to achieve runtime linear in the
number of reference haplotypes.

An outline of the sampling algorithm for haplotype phasing with
sequencing data and a reference panel is given in Algorithm 2. As default,
we use 10000 rounds of sampling.

 

Algorithm 2 Sampling Algorithm for Haplotype Phasing

 

1: Randomly initialize haplotype H

2: For ﬁxed haplotype H, sample read origin R using sampling ratio
91' in (6)-

3: For ﬁxed haplotype H sample haplotype reference S following
Markov chain sampling procedure described after (9).

4: For ﬁxed read origin R, and haplotype reference S, sample
haplotype H using sampling ratio 8,» in (7).

5: Repeat steps 2, 3 and 4 for sufﬁcient rounds until equilibrium.

6: Collect samples by repeating steps 2, 3 and 4. Output samples with
highest probability.

 

3 EXPERIMENTAL RESULTS

3.1 Datasets and experimental settings

We performed simulation experiments using HapMap Phase II
data (International HapMap Consortium, 2005) and 1000

Genomes data (Durbin, R. et al., 2010). For our simulations,
we used the 60 parental individuals of CEU populations from
HapMap Phase II as well as 60 individuals randomly chosen
from the European populations for 1000 Genomes data.
Although our method is scalable to the entire genome, for the
purpose of demonstration, we use only chromosome 22 as rep—
resentative of the rest of the genome, as it is the shortest chromo—
some. Because we are performing many simulations, we restrict
our results to the 35 421 SNPs in chromosome 22 of the HapMap
data, and the first 30000 SNPs in chromosome 22 of 1000
Genomes data, which span ~3 Mb. The datasets are publicly
available at http://mathgen.stats.ox.ac.uk/impute/ and http://
hapmap.ncbi.nlm.nih.gov/.

We evaluate our method using a leave—one—out procedure. In
each round, we infer the haplotype for one individual using
simulated sequencing data and the haplotypes of the other 59
individuals as reference panel. This procedure is repeated 60
times and all the evaluation metrics are averaged. The reads
are simulated uniformly across chromosome 22 for a given
coverage. The read length in each end of a pair—end read is
ﬁxed but the gap between the two ends follow a normal distri—
bution with ﬁxed mean and standard deviation. Errors are in—
serted in the read at a rate 8.

We evaluate our method HARSH using the standard metric
for genotyping and phasing accuracy: genotyping error rate and
switching error rate. The genotyping error rate is the proportion
of wrongly predicted genotypes, and the switching error is the
proportion of switches in the inferred haplotypes to recover the
correct phase in an individual. The total error rate is the sum of
genotyping error rate and switching error rate. We also use per—
centage improvement when comparing two methods. The per—
centage improvement is computed as the error rate difference
between two methods normalized by the error rate of baseline
method. For example, suppose that HARSH has error rate x and
baseline method has error rate y, the improvement of HARSH
over the baseline method would be (y — x)/ y.

We fixed the parameters a = l, a) = 0.002 and e = 0.01 for all
our experiments. From our experience, the performance of the
proposed method is not sensitive to parameter tuning. Using a
from 1 to 10 and a) from 0.001 to 0.005 does not affect the
performance signiﬁcantly. The sequencing error e = 0.01 is
standard sequencing error rate.

All experiments are performed in a cluster machine where each
node has 8716 cores 3.0GHz CPU and 1716 GB memory. Jobs
are submitted in a parallel manner but each job uses only one
node.

3.2 HapMap simulations

We use HapMap dataset to evaluate our method HARSH. We
compare our method with three other state—of—the—art methods:
the HMM at the core of the IMPUTE method (Howie et al.,
2009), BEAGLE (Browning and Browning, 2009) and Hap—
SeqX (He and Eskin, 2013). Because IMPUTE does not support
haplotype phasing for uncovered SNPs, for a fair comparison,
we re—implemented the basic HMM model of the IMPUTE v1.0,
which uses the pre—deﬁned genetic map information for transi—
tion probability. We will refer to our implementation of the
HMM model in IMPUTE method as IMPUTE*. In our

 

2249

ﬁm'spzumol‘pmjxo'sopnuuqurorq/ﬁdnq

-Assembly

 

/310'SIBan0prOJx0"soneuiJOJuioiqﬂ:duq

an?kgogmomammowoio~&o:3m7.omm\

 

BEAGLE
MF’UTE”
ARSH

 

W.-Y.Yang et aI.

 

Table 3. Genotyping and switching errors (%) for varying read lengths
on HapMap dataset

 

Read length 1000 bp 2000 bp 3000 bp 4000 bp

 

Genotyping error

BEAGLE 0.59 0.67 0.74 0.79

IMPUTE* 0.56 0.70 0.77 0.85

HARSH 0.28 0.37 0.40 0.48
Switching error

BEAGLE 1.05 1.10 1.07 1.07

IMPUTE* 0.90 0.93 0.94 0.94

HARSH 0.62 0.57 0.49 0.48

 

Note: Coverage is ﬁxed to be 4><.

 

 

(a) 0.08 (b) 0.025 ‘1
M. I I 1
0'06 002 -
E E
I“ 0.05 m
g “g 0.015
t 0.04 :
uJ LLI
0.03 0.01
0.02
01010 10 20 30 40 0'00 0 100 200 300 400 500
Coverage Read Length

Fig. 7. Performance of IMPUTE* and HARSH for varying coverage
and read length on 1000 genomes. (a) Varying coverage for ﬁxed read
length 1000 bp. (b) Varying read length for ﬁxed coverage 4X

4 CONCLUSION AND DISCUSSIONS

Haplotype phasing plays an important role in a wide variety of
genetic applications. Although it is possible to determine haplo—
types using laboratory—based experimental techniques, these
approaches are expensive and time—consuming. Recently,
Kitzman et a]. (2011) were able to generate the complete
phased sequence of a Gujarati individual using a Fosmid library.
Unfortunately, this method is not easily scalable to phasing more
than one individual. Thus, the need for a practical computational
method for haplotype phasing remains.

We have presented HARSH, an efﬁcient method that com—
bines multi—SNP read information with reference panels of
haplotypes for improved genotype and haplotype inference in
sequencing data. Unlike previous phasing methods that use
read counts at each SNP as input, our method takes into account
the information from reads spanning multiple SNPs. HARSH is
able to efficiently ﬁnd the likely haplotypes in terms of the mar—
ginal probability over the genotype data. Using simulations from
HapMap and 1000 Genomes data, we show that our method
achieves superior accuracy than existing approaches with
decreased computational requirements. In addition, we evaluate
our method as function of coverage and read length, showing
that our method continues to improve as read length and cover—
age increases.

Funding: National Science Foundation (0513612, 0731455,
0729049, 0916676, 1065276 and 1320589 to W.Y., F.H., Z,W.
and BE); National Institutes of Health (K25—HL080079,
U01-DA024417, P01-HL30568 and POl-HL28481 to W.Y.,

 Z,W. and BE; R03-CA162200 and R01-GM053275 to
BB).

Conﬂict of Interest: none declared.

REFERENCES

Aguiar,D. and Istrail,S. (2012) HapCompass: a fast cycle basis algorithm for accur—
ate haplotype assembly of sequence data. J. Comput. Biol, 19, 5777590.

Bansal,V. and Bafna,V. (2008) HapCUT: an efﬁcient and accurate algorithm for the
haplotype assembly problem. Bioinﬁ)rmatics, 24, i1537i159.

Bansal,V. et a]. (2008) An MCMC algorithm for haplotype assembly from whole—
genome sequence data. Genome Res., 18, 133(r1346.

Browning,B.L. and Browning,S.R. (2009) A uniﬁed approach to genotype imput—
ation and haplotype—phase inference for large data sets of trios and unrelated
individuals. Am. J. Hum. Genet., 84, 21W223.

Duitama,J. et a]. (2010) Refhap: a reliable and fast algorithm for single individual
haplotyping. In: Proceedings of the First ACM International Conference on
Bioinﬁ)rmatics and Computational Biology. ACM, New York, NY, pp. 160169.

Duitama,J. et a]. (2012) Fosmid—based whole genome haplotyping of a hapmap trio
child: evaluation of single individual haplotyping techniques. Nucleic Acids Res.,
40, 204172053.

Durbin,R. et a]. (2010) A map of human genome variation from population—scale
sequencing. Nature, 467, 106171073.

Fearnhead,P. and Donnelly,P. (2001) Estimating recombination rates from popu—
lation genetic data. Genetics, 159, 129971318.

Geman,S. and Geman,D. (1984) Stochastic relaxation, gibbs distributions, and the
bayesian restoration of images. IEEE Trans. Pattern Anal. Mach. Intell, 6,
7217741.

He,D. and Eskin,E. (2013) Hap—seqX: expedite algorithm for haplotype phasing
with imputation using sequence data. Gene, 518, 276.

He,D. et a]. (2010) Optimal algorithms for haplotype assembly from whole—genome
sequence data. Bioinﬁ)rmatics, 26, i1837i190.

He,D. et a]. (2012) Hap—seq: an optimal algorithm for haplotype phasing with im—
putation using sequencing data. In: Proceedings of the 16th Annual International
Conference on Research in Computational Molecular Biology ( REC 0M B ).
Springer, New York, NY, pp. 6478.

Howie,B. et a]. (2011) Genotype imputation with thousands of genomes. G3
(Bethesda), 1, 4577470.

Howie,B.N. et a]. (2009) A ﬂexible and accurate genotype imputation method for the
next generation of genome—wide association studies. PLoS Genet., 5, e1000529.

Hugot,J.P. et a]. (2001) Association of nod2 leucine—rich repeat variants with sus—
ceptibility to crohn‘s disease. Nature, 411, 599$03.

International HapMap Consortium. (2005) A haplotype map of the human
genome. Nature, 437, 129971320.

Kang,H.M. et a]. (2010) EMINIM: an adaptive and memory—efﬁcient algorithm for
genotype imputation. J. Comput. Biol, 17, 5477560.

Kitzman,J.O. et a]. (2011) Haplotype—resolved genome sequencing of a gujarati
indian individual. Nat. Biotechnol, 29, 59%3.

Lazzeroni,L.C. (2001) A chronology of fine—scale gene mapping by linkage disequi—
librium. Stat. Methods Med. Res, 10, 57776.

Li,N. and Stephens,M. (2003) Modeling linkage disequilibrium and identifying re—
combination hotspots using single—nucleotide polymorphism data. Genetics, 165,
21372233.

Li,Y. et a]. (2010) MaCH: using sequence and genotype data to estimate haplotypes
and unobserved genotypes. Genet. Epidemiol, 34, 81(r834.

Liu,J.S. (2008) Monte Carlo Strategies in Scientific Computing. Springer, New York,
NY.

Long,Q. et a]. (2009) HI: haplotype improver using paired—end short reads.
Bioinﬂnmatics, 25, 243672437.

Myers,S.R. and Grifﬁths,R.C. (2003) Bounds on the minimum number of recom—
bination events in a sample history. Genetics, 163, 3757394.

Pasaniuc,B. et a]. (2012) Extremely low-coverage sequencing and imputation in—
creases power for genome—wide association studies. Nat. Genet., 44, 631%35.

Rioux,J.D. et a]. (2001) Genetic variation in the 5q31 cytokine gene cluster confers
susceptibility to Crohn disease. Nat. Genet., 29, 2237228.

Sabeti,P.C. et a]. (2002) Detecting recent positive selection in the human genome
from haplotype structure. Nature, 419, 8324337.

Xie,M. et a]. (2012) A fast and accurate algorithm for single individual haplotyping.
BMC Syst. Biol, 6 (Suppl 2), SS.

 

2252

/310'S[BHJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq

