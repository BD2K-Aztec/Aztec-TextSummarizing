BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

I k
Annotation In
FASTAtormat

.
Re-annotatlon In
FASTAformat

Reconciled
annotation in
FASTA format

Updated ‘
alignments in
BAM format

 

 

k
Alignments in
BAM format
R d ' FAS ‘
Find differences ea $0218“ 
between annotations Q

L A ll. _ ‘
. . uxr iary
Ambiguity graph parameters Abundances

\
New transcripts
in FASTA format

Identify renamed
transcripts

Map reads to added
transcripts

 

Update ambiguity
graph

      
 

Find affected
components and
partition into smaller
blocks if too large

‘
Updated
ambiguity graph

 
       

Extract alignments to
components

\
i \
Componen K
alignments in
BAM format

Compute
abundances from
the alignments for

each component

 

V
4

Updated k Updated K
auxiliary parameter abundance
estimates estimates

Update abundances

\V/

4“

 

/810'SIBum0[pJOJXO'sopELuJOJutotq”:duq

an?kgogmoeammowoxm0e&o:_.=m_w.oem\

 

Component Size

A.Roberts et al.

 

by an addition. For each difference between annotations, the
nature of the edit is recorded.

The set of reads are then aligned to the added transcripts,
and the ambiguity graph is updated with new nodes representing
these transcripts and edges induced by the new alignments.
The transcripts and alignments associated with independent
components of the ambiguity graph containing added
and deleted transcripts are extracted. The abundances for all
transcripts in these components are then re—quantiﬁed separ—
ately using the updated annotation. Finally, the new annotation,
alignments, abundances (for all transcripts) and ambiguity graph
are output to be used with the next re—annotation update. Below
is a more formal description that explains in detail the steps.
Proofs of correctness follow trivially from the factorization
of the standard likelihood function used in RNA—Seq, and are
omitted.

We require two ﬁelds from the output of an RNA—Seq quan—
tification program after it has been used to estimate abundances
for a set of transcripts T: the estimates ,57 and the ‘ambiguity
graph’ (defined in Section 2.1) of T, which we denote by
G = (T ,E). We assume that T / consists of T with the addition
of a set of transcripts A and the deletion of a set of transcripts D
so that T / = (T U A)\D. Finally, we will need the stored align—
ments from f to T, which we denote by LfHT = {f—> {III e T
and f aligns to t}}.

To simplify the presentation, we explain separately the case
of adding transcripts (T / = T U A) and the case of deletion
(T / = T \ D). Additions and deletions can be handled in two
stages or in a single, combined pass (details omitted). For simpli—
city, we restrict the exposition to the case of addition/deletion of a
single transcript in the description below.

Given a set of transcripts T, let t/ be a transcript with t/¢ T.
The updating of estimates when t/ is added to the annotation is
performed as follows:

(1) Align the reads in f to t/ and denote the subset of reads
of f that align to t/ by 7-” g 7-". Denote the alignments of
f/ as Lfgnl.

(2) Extract the read alignments for the reads in 7-” from L f4)?”
and denote as Lf/gT = {f—> Lf4)T(f) for all f6 77}.
In addition, denote by S = Ufef, LfsTU) the set of tran—
scripts in T that appear in LfrnT.

(3) Create the updated ambiguity graph
G/ = (TU t/,EU {{t/,v} for all v e 8}).

(4) Let B: {t:f is in the same component as t’, I75 ﬂ}.
Extract the alignments in Lfny that consist of a read
mapping to a transcript in B as Lfng = {f—> LfnTU)
for allfe flLfsﬂf) Q B}.

(5) Merge the alignments to create Lfsgw = Lfsg U Lfsy.

(6) Perform quantiﬁcation on the set of transcripts BU t/
using the alignments LanW. This produces a set of
estimates {5;},63U,,.

(7) Compute 5g 2 Z 5?. Set 5,7, 2 5% x ,5; for all t e B U tC

teB

Deletion is performed via a similar procedure. Let t/ be a

transcript with t/ e T.

(1) Let B be the component in G that contains t’.

(2) Extract the alignments from Lfny that contain reads
mapping to transcripts in B, denoted by Lfng =
{f—> LfnTU) for allfe flLfnﬂf) g B}.

(3) Remove the alignments of reads to t/ from Lfng as
Lfngw = {f—> Lf4,B(f)\t/ for allfe f}.

(4) Perform quantification on the set of transcripts B\t / using
the alignment file Lfngw. This produces a set of estimates
{ﬁiheavh

(5) Compute 5g 2 2,63  Set  = ,5; x ,5; for allt e B\t/.

(6) Create the updated ambiguity graph G’ = (T \t/, IA{{t’, v}
for all v e 8}).

Note that in the rare case when there is a change in the total
number of aligned fragments after the addition or deletion of a
target, an additional step is required to renormalize the relative
abundances between components. This step is trivial and fast,
and the details are omitted.

2.3 Improving performance by approximating the
affected set

There is another issue that can hurt performance in practice: the
affected component B can be large (Fig. 2 and Supplementary
Fig. S1). In typical RNA—Seq experiments, as much as one—fifth
of all transcripts can lie in a single component of the ambiguity
graph (Roberts and Pachter, 2013). This component typically
consists of large gene families and multiple isoform genes that
share common sequence. To improve performance, it is therefore
desirable to restrict the re—quantification to a smaller subset with—
out sacrificing important information in the form of fragment
alignments. We do this by partitioning a weighted generalization
of the ambiguity graph, obtained by the addition of edge weights
representing the number of ambiguous alignments between each
pair of transcripts. For a given mapping Lfny and induced
ambiguity graph G, we let the weight between two transcripts u, v
be w({u, v}) = 21-6; 1({u, v} g Lfny(f)). Given these weights,
we wish to partition around t/ such that the total weight of
edges crossing the partition cut is small compared with the
weight of edges inside the block. Moreover, it is desirable that
the block containing t/ is small.

Many sophisticated objective functions and algorithms exist
for partitioning graphs (Bichot and Siarry, 2011). A detailed
exploration of the applications of these methods to our problem
is outside the scope of this article. Instead, to demonstrate the
feasibility of a partitioning scheme for improving the perform—
ance of our method with large components, we chose to use the
greedy approach outlined below, which is motivated by the
objective of removing edges that correspond to the ‘least inform—
ative’ alignments.

First, we deﬁne the density of a block S, (1(5), as the total weight
of edges incident to a node in the block and a node outside of the
block divided by the total weight of edges incident to the nodes in
the block. Intuitively, this is the ratio of edges crossing the cut to
all of the edges incident to nodes in the block. Formally,

Z w(u,v)
ueS,veS
d(S)_ Z w(u,v)+ Z w(u,v)‘
“es‘veg ueS,veS

 

1 634

ﬁm'sreumol‘prqxo'soptzuuopuotq/ﬁdnq

Updating RNA-Seq analyses after re-annotation

 

Our objective is to ﬁnd, for a given transcript t’, a block S that
contains t such that d(S)<6 for a given threshold 0<6 g 1.
We do so using the following greedy update.

(1) Begin with S = {t’}.

(2) Iteratively add node 14 = argmaxueTw({t/,u}) to S until
d(S)<6.

It is easy to show that for any valid 6, this algorithm will
terminate. As we show below in Section 2.4, the method is
empirically both fast and accurate.

2.4 Accuracy of partitioning approximation

To validate the performance of our greedy partitioning algo—
rithm, we randomly selected with replacement 250 transcripts
from the largest partition (3898 transcripts) in the RefSeq anno—
tation and simulated their addition at some earlier date. We used
the set of reads produced for (Trapnell et al., 2010), which con—
sisted of RNA—Seq performed on C212, a mouse moblast cell
line. Each selected transcript was removed from the FASTA,
alignment ﬁle and ambiguity graph, and was then re—added
using a single step of our algorithm. We show the results of
this update using 20 different values of 6 in Supplementary
Figure S2. There is a clear tradeoff between the accuracy of
the approximation and the size of the resulting block selected
by different values of 6. We note that for 6<0. 1, the correlation
is already reasonably close to the accuracy of the eXpress algo—
rithm demonstrated in (Roberts and Pachter, 2013).

2.5 Application to RefSeq incremental update

To demonstrate the effectiveness of our approach, we applied it to
the same large C2C12 RNA—Seq dataset as used above. These data
were first analyzed in 2010, but since then the mouse RefSeq an—
notation has been updated numerous times. Speciﬁcally, as a
proof—of—concept, we applied ReXpress (our implementation of
the methods above) to 34 days of the RefSeq incremental update
(RIU), which is a daily update of the RefSeq annotation database
(see Methods, Fig. 3a).

Using 24 free cores, 644 min were required for the initial
Bowtie2 alignment, 505 min for 20 repetitions of abundance
estimation with eXpress and 11min for building the ambiguity
graph. Across the entire month of RefSeq updates, a size 3910
component was affected seven times, while components of size 15
or less were affected 37 times.

Each subsequent update required, on average, 55min to
complete our re—annotation pipeline. This is compared with the
~644 + 505 = 1 149 min that would be required for alignment and
abundance estimation from scratch with Bowtie2 and eXpress
after each re—annotation.

The abundance estimates for the final time point had a
Spearman rank correlation of R2 = 0.994 with those calculated
from scratch (Supplementary Fig. S3). The small discrepancy is
due to the fact that the online EM method in eXpress approxi—
mates the maximum likelihood solution, and therefore is not
expected to be exact.

Because some of the transcripts added and deleted over the
time period affected the large components in the ambiguity
graph, we also ran the analysis using the greedy partitioning
scheme described above (6 = 0.1). While the speed of the updates

was greatly improved by the partitioning by reducing the size
of the (approximate) affected components (Fig. 3b), the results
were nearly identical (Supplementary Fig. S4).

3 METHODS
3.1 Datasets

The annotations used for mouse were based on RefSeq. The RefSeq
database is updated incrementally every night at 3:30 EST. All updates
over the 34-day period between November 9 and December 13, 2012 were
used for this analysis. The RNA-Seq data used was based on (Trapnell
et al., 2010). We restricted ourselves to analysis of the 60 hour time point,
for which 60 million reads were available.

3.2 Read mapping

Reads were mapped with Bowtie2 version 2.1.0 (Langmead and Salzberg,
2012) using the parameters -k 1000, irdg 6,5, irfg 6,5, escore-min
L,-0.6,-0.4, ino-discordant and ino-mixed. With these options, 47% of
the reads were mapped concordantly.

3.3 Abundance estimation

Abundances were estimated with eXpress version 1.3.0 (Roberts and
Pachter, 2013), initially using no optional parameters and then the
iaux-param-ﬁle for re-estimation using previously computed auxiliary
parameters after editing of the annotation. A forgetting factor of 0.85
(the default) was used for the full dataset and 0.75 used for the smaller
update datasets.

3.4 Software

The methods have been implemented in a software program called
ReXpress. ReXpress is a Python script that takes as input an annotation
and its update, reads, their alignments to the initial annotation, abun-
dance estimates and the ambiguity graph. It outputs updated versions of
all of the input (Fig. 1 for exact ﬁles input and output). ReXpress makes
heavy use of pySAM (pySAM, 2012; Li et al., 2009) and is based on
Bowtie2 and eXpress for quantiﬁcation (Roberts and Pachter, 2013),
although many alignment and quantiﬁcation tools can be substituted.

4 CONCLUSION

Despite the difﬁculties in storing, processing and distribution of
high—throughput sequence data (Sboner et al., 2011), repositories
such as the Gene Expression Omnibus have led to an explosion
in publicly available genome—wide expression data. However, nu—
merous technical challenges that arise in re—using data have lim—
ited the utility of publicly archived RNA—Seq reads (Rung and
Brazma, 2013).

Our results show that it is possible to efﬁciently update RNA—
Seq abundance estimates on re—annotation, thus removing a
major obstacle to re—using publicly available data. This should
prove to be particularly useful in newly sequenced organisms
whose annotations are not stable and undergo periodic revision,
and also in human cancer transcriptomics where structural alter—
ations can be tumor speciﬁc (Asmann et al., 2012; Yorukoglu
et al., 2012). We also believe that ReXpress will be particularly
useful for sequencing centers providing analysis services. Instead
of producing one—time output, it should now be possible to refresh
analyses as annotations improve, without expensive hardware or
compute time needed as user bases and datasets grow.

 

1 635

ﬁm'spzumol‘pmjxo'soptzuuopuotq/ﬁdnq

|:l Transcripts Deleted
|:l Transcripts Added

l:| Bowtie2 Mapping Time

l:| Ambiguity Graph Build Time

l:| Ambiguity Graph Update Time

l:| eXpress Run Time

:l Alignment Extraction Time Without Partitioning
:l Alignment Extraction Time With Partitioning

 

/310'SIBan0prOJx0"sotJBuiJOJutotqﬂ:duq

Updating RNA-Seq analyses after re-annotation

 

provides an online algorithm in both the reads and the targets in
any setting where probabilistic assignment of multi—mapping
reads is a bottleneck in analysis of high—throughput sequencing
data.

ACKNOWLEDGEMENTS
We thank Isabelle Stanton for her advice on graph partitioning.

Funding: AR was partly funded by an NSF graduate fellowship.
AR and LP were partially funded by NIH R01 HG006129.

Conﬂict of Interest: none declared.

REFERENCES

Asmann,Y.W. et a]. (2012) Detection of redundant fusion transcripts as bio—
markers or disease—speciﬁc therapeutic targets in breast cancer. Cancer Res.,
72, 192171928.

Bichot,C.E. and Siarry,P. (eds) (2011) Graph Partitioning. Wiley, Hoboken, NJ,
USA.

Graveley,B.R. et a]. (2010) The developmental transcriptome of Drosophila mela—
nogaster. Nature, 471, 4734179.

Langmead,B. and Salzberg,S.L. (2012) Fast gapped—read alignment with Bowtie2.
Nat. Methods, 9, 3577359.

Li,B. and Dewey,C. (2011) RSEM: accurate transcript quantiﬁcation from RNA—
Seq data with or without a reference genome. BMC Bioinformatics, 12, 323.

Li,H. et a]. (2009) The Sequence Alignment/Map format and SAMtools.
Bioinﬁ)rmatics, 25, 207872079.

Li,W. et a]. (2011) IsoLasso: a LASSO regression approach to RNA—Seq based
transcriptome assembly. J. Comput. Biol., 18, 169371707.

Li,W. and Jiang,T. (2012) Transcriptome assembly and isoform expression level
estimation from biased RNA—Seq reads. Bioinformatics, 28, 2914e2921.

Mezlini,A.M. et a]. (2013) iReckon: simultaneous isoform discovery and abun—
dance estimation from RNA—seq data. Genome Res, 23, 5197529.

Ouzouonis,C.A. and Karp,P.D. (2002) The past, present and future of genome—wide
re—annotation. Genome Biol., 3, c0mment2001.lwomment2001.6.

Pachter,L. (2011) Models for Transcript Quantification from RNA—Seq.
arXiv:1104.3889.

Pruitt,K.D. et a]. (2012) NCBI Reference Sequences (RefSeq): current status,
new features and genome annotation policy. Ntwleic Acids Res., 40,
D13(%D135.

pySAM (2012) http://c0de.g00gle.c0m/p/pysam/ (December 2012, date last
accessed).

R0berts,A. and Pachter,L. (2013) Streaming fragment assignment for real—time ana—
lysis of sequencing experiments. Nat. Methods, 10, 71773.

Rung,J. and Brazma,A. (2013) Reuse of public genome—wide gene expression data.
Nat. Rev. Genet, 14, 8%99.

Sboner,A. et a]. (2011) The real cost of sequencing: higher than you think! Genome
Biol., 12, 125.

Schultheiss,S.J. et a]. (2011) Oqtans: a Galaxy—integrated workﬂow for quantitative
transcriptome analysis from NGS Data. BMC Bioinformatics, 12, A7.

Trapnell,C. et a]. (2010) Transcript assembly and quantiﬁcation by RNA—Seq
reveals unannotated transcripts and isoform switching during cell differenti—
ation. Nat. Biotechnol., 28, 5117515.

Trapnell,C. et a]. (2012) Differential gene and transcript expression analysis
of RNA—seq experiments with TopHat and Cufﬂinks. Nat. Protoc., 7,
5627578.

Trapnell,C. et a]. (2013) Differential analysis of gene regulation at transcript
resolution with RNA—seq. Nat. Biotechnol., 31, 4&53.

Yorukoglu,D. et a]. (2012) Dissect: detection and characterization of
novel structural alterations in transcribed sequences. Bioiiy’ormatics, 28,
i17$i187.

 

1 637

ﬁm'spzumol‘pmjxo'sopnuuopuotq/ﬁdnq

