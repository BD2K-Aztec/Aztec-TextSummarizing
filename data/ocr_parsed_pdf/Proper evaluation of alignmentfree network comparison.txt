Biolnformatics, 31(16), 2015, 2697—2704
doi:10.1093/bioinformatics/btv170

Advance Access Publication Date: 24 March 2015
Original Paper

 

Systems biology

Proper evaluation of alignment-free network
comparison methods

émer Nebil YaverogluI, leana Milenkovié2 and Natasa Pr2u|j3'*

1California Institute for Telecommunications and Information Technology (Calit2), University of California, Irvine,
CA 92697, USA, 2Department of Computer Science and Engineering, University of Notre Dame, IN 46556, USA and
3Department of Computing, Imperial College London, London SW7 2AZ, UK

*To whom correspondence should be addressed.
Associate Editor: Igor Jurisica

Received on February 3, 2015; revised on March 7, 2015; accepted on March 18, 2015

Abstract

Motivation: Network comparison is a computationally intractable problem with important applica—
tions in systems biology and other domains. A key challenge is to properly quantify similarity
between wiring patterns of two networks in an alignment—free fashion. Also, alignment—based
methods exist that aim to identify an actual node mapping between networks and as such serve a
different purpose. Various alignment—free methods that use different global network properties
(e.g. degree distribution) have been proposed. Methods based on small local subgraphs called
graphlets perform the best in the alignment—free network comparison task, due to high level of
topological detail that graphlets can capture. Among different graphlet—based methods, Graphlet
Correlation Distance (GCD) was shown to be the most accurate for comparing networks. Recently,
a new graphlet—based method called NetDis was proposed, which was claimed to be superior.
We argue against this, as the performance of NetDis was not properly evaluated to position it
correctly among the other alignment—free methods.

Results: We evaluate the performance of available alignment—free network comparison methods,
including GCD and NetDis. We do this by measuring accuracy of each method (in a systematic
precision—recall framework) in terms of how well the method can group (cluster) topologically simi—
lar networks. By testing this on both synthetic and real—world networks from different domains, we
show that GCD remains the most accurate, noise—tolerant and computationally efficient alignment—
free method. That is, we show that NetDis does not outperform the other methods, as originally
claimed, while it is also computationally more expensive. Furthermore, since NetDis is dependent
on the choice of a network null model (unlike the other graphlet—based methods), we show that its
performance is highly sensitive to the choice ofthis parameter. Finally, we find that its performance
is notindependent on network sizes and densities, as originally claimed.

Contact: natasha@imperial.ac.uk

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction 2002) interactions. The information encoded in the wiring patterns

(i.e. topology, or structure) of biological networks complements the
Networks I“ graphs) are Widely used for representing different types information obtained from protein sequence and structure (Pevzner
0f relational data in the cells SUCh as Pmtein—meein (Prasad W “In and Shamir, 2011). Because of this, graph-theoretic analyses of hiolo-
2009; Stark 9t 11L, 2006): genetic (Tong 9t “In 2004), HIEIRI’OIIC gical networks can advance our understanding offundamentalcellular

(Okuda et (11., 2008) and gene regulatory (Hu et (11., 2007; Lee et (11., functioning.

(C7 The Author 2015. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/Iicenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

 

/310‘slcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

2698

O. N. Yaveroglu et al.

 

When analysing biological networks, one needs to compare
them. For example, evolutionary insights can be gained by identify-
ing topological similarities between networks of different species
(Singh et al., 2008). The difficulty is that network comparison is
computationally intractable (Cook, 1971), so heuristic approaches
that produce approximate solutions are the only feasible way to
compare networks.

Depending on the purpose of the network comparison, relevant
approaches can be split into two major sub-categories: (i) alignment-
based network comparison and (ii) alignment-free network
comparison. Alignment-based methods aim to find a mapping be-
tween the nodes of two (or more) networks that preserves many edges
and a large subgraph between the networks. These methods are useful
for identifying the evolutionary conserved parts of biological net-
works, and they enable the transfer of functional annotations between
aligned network regions across species (Faisal et al., 2014; Ibragimov
et al., 2013, 2014; Kelley et al., 2003; Kuchaiev and Priqu, 2011;
Liao et al., 2009; Neyshabur et al., 2013; Saraph and Milenkovic,
2014) and the identification of structural similarities between proteins
(Malod—Dognin and Priulj, 2014; Zhang and Skolnick, 2005). On the
other hand, alignment-free network comparison methods aim to
quantify the overall topological similarity between networks,
irrespective of node mappings between the networks, and without
intending to identify any conserved edges or subgraphs.
These methods have applications in evaluating the fit of a random net-
work model to a real-world network (Hayes et al., 2013; Priqu,
2007; Priqu et al., 2004; Rito et al., 2010), tracking the dynamics of
time-series networks (Garlaschelli and Loffredo, 2005; Kossinets and
Watts, 2006; Yaveroglu et al., 2014) or grouping (clustering) of
networks based on their topological similarities (Milo et al., 2004).
The clustering can be used to reconstruct phylogenetic relationships
of species based on similarities of their networks (Ali et al., 2014).
Alignment-free network comparison methods are typically
computationally less expensive than alignment-based methods,
and again, they do not produce a node mapping between the
compared networks, but a score that quantifies the overall similarity
between the two networks. As such, alignment-free and
alignment-based network comparison methods have different pur-
poses. Thus, comparing the approaches across the two groups might
be misleading.

Of alignment-free network comparison methods, earlier
approaches use network properties such as degree distribution, clus-
tering coefficient, diameter (Estrada, 2011; Newman, 2010) and
graph spectra (Thorne and Stumpf, 2012; Wilson and Zhu, 2008)
for quantifying the overall similarity between two networks.
Currently, the best alignment-free network comparison method is
based on graphlets, small subgraphs of large networks (Priqu et al.,
2004), called Graphlet Correlation Distance (GCD; Yaveroglu
et al., 2014). GCD was systematically compared both with graphlet-
based and non-graphlet-based alignment-free predecessors, and it
was shown to be the most accurate in clustering topologically simi-
lar networks, the most noise-tolerant and the most computationally
efficient. Subsequently, another graphlet-based alignment-free
method called NetDis was proposed (Ali et al., 2014). Although the
suggested methodology of NetDis is interesting (Section 2.1), the
claimed superior performance of NetDis over the existing state-of-
the-art network comparison methods is questionable. This is be-
cause the performance of NetDis was not systematically evaluated,
so its claimed superiority might be inaccurate. For example, NetDis
was not compared against GCD. Also, its comparison against an
alignment-based method, based on which almost all conclusions of
its superiority were drawn, is inappropriate, as argued above.

Further potential fallacies with the NetDis method itself exist, such
as its dependence on the choice of a network null model, which was
not taken into account in the original NetDis study (Ali et al.,
2014). Thus, here we systematically and fairly evaluate the perform-
ance of NetDis in comparison to other alignment-free network com-
parison methods, and address all issues present in the paper by Ali
et al. (2014).

2 Materials and Methods

2.1 Alignment—free network comparison methods
Alignment-free network comparison involves quantifying the overall
topological similarity between two networks. As the exact solution
is computationally intractable, approximate solutions have been
devised for this purpose. Such approximate solutions are conven-
tionally called network distance or network similarity measures.

2.2 Network distance measures based on global
network properties:

The overall similarity between two networks can be quantified in a
simple fashion by comparing the networks’ global properties, such
as the degree distribution, clustering coefficient or diameter
(Newman, 2010). The most sophisticated of these network proper-
ties are based on graph spectra (Thorne and Stumpf, 2012; Wilson
and Zhu, 2008). Although network comparison methods based on
global properties are computationally efficient, they usually capture
limited aspects of complex wirings of real-world networks. For this
reason, it is no surprise that they perform poorly in grouping topo-
logically similar networks together and separating dissimilar net-
works (Yaveroglu et al., 2014). Hence, local network properties
have been proposed, which can capture the topology of complex
networks in more detail.

2.3 Network distance measures based on local

network properties

Graphlets are small, connected, non-isomorphic, induced subgraphs
of a network (Priqu et al., 2004). Each graphlet contains ‘symmet—
rical node groups’ known as automorphism orbits (Fig. 1; Priqu,
2007). Graphlets can be used to derive detailed descriptors of net-
work topology at network, node and edge level (Milenkovic and
Priulj, 2008; Solava et al., 2012; Yaveroglu et al., 2014). By using
graphlets in different ways, four different alignment-free network
comparison measures are defined:

2—node 3-node graphlets 4-node graphlets
graphlet 1 3 4 10 13 14
5 6 9
9

“I
G0 G1 G2 G3 6,, GS G6 G7 G8
S-node graphlets

15 18 22 25 32 34 35 41 43 45
16
17 20 23 26 4s
21 28 33 38 42 44 47
19 2 27 31 35 39 45

G9 G10 G11 G12 G13 G14 G15 616 G17 G18 G19

ﬁfﬁéﬁ-‘QXQ  @ﬁg

G20 G21 G22 G23 G24 G25 G26 G27 G28 G29

 

 

 

 

 

 

 

 

Fig. 1. The thirty 2- to 5-node graphlets and their 73 automorphism orbits
(Priulj, 2007)

/3.IO'S[EIIm0[p.IOJXO'SOpEIIIJOﬂIlOlq/ﬂduq

Proper evaluation of alignment—free methods

2699

 

1. Relative graphlet frequency distance (RGFD): The topology of a
network can be described by the number of times that each
graphlet appears in the network. RGFD is a non—parametric
method that uses the graphlet frequency statistics of 3— to 5—node
graphlets to quantify the overall difference between two net—
works (Priulj et al., 2004). Given the 29—dimensional graphlet
frequency vectors of two networks, RGFD first normalizes these
vectors based on the total number of graphlets that appear in the
networks, and then, it computes the sum of absolute differ—
ences between the normalized graphlet frequencies. The result—
ing score indicates the topological difference between the two
networks.

2. Graphlet degree distribution agreement (GDDA): Graphlets are
also used to define detailed descriptors of the wiring around a
node in a network. Namely, the ith graphlet degree of a node is
the number of graphlets that the node touches at orbit i.
The graphlet degree vector (GDV) of a node is the 73—
dimensional vector containing graphlet degrees for the 73
automorphism orbits shown in Figure 1 (Milenkovié and
Priulj, 2008). Considering GDVs of all nodes in a given net—
work, the degree distribution can be extended into 73 graphlet
degree distributions (GDD), where each GDD corresponds to
the graphlet degrees of one of the 73 orbits. Given two net—
works, the non—parametric GDDA method compares these 73
GDDs and quantiﬁes the overall topological similarity between
the two networks as an average over all 73 comparisons (Priulj,
2007). GDDA scores are scaled between 0 and 1, and higher
scores indicate better topological similarity.

3. Graphlet correlation distance (GCD): Graphlets are Lego—like
pieces that assemble with each other at different orientations to
build large networks. Exploiting this observation, the complex
structure of any network can be summarized into an n X n
graphlet correlation matrix, where n is the number of considered
graphlet orbits (Yaveroglu et al., 2014). Each cell of this matrix
quantiﬁes the level of dependency between two graphlet orbits
in the network. For a given network, the cell values are com—
puted by Spearman’s correlation between the corresponding
graphlet degrees over all nodes in the network. Then, GCD com—
putes the Euclidean distance between graphlet correlation matri—
ces of two networks (Yaveroglu et al., 2014). As RGFD and
GDDA, GCD is non—parametric and it does not require any net—
work null model for the computation. Different GCD versions
exist depending on the orbits that are used for constructing the
matrices: (i) GCD-73 accounts for the complete set of 73 orbits
from all 2— to 5—node graphlets and (ii) GCD-11 accounts for 11
non—redundant orbits of 2— to 4—node graphlets (i.e. orbits 0, 1,
2, 4, 5, 6, 7, 8, 9, 10, 11). In our experiments, we choose to use
GCD—11 and GCD—73 rather than other GCD versions because
GCD—11 is shown to perform the best in grouping topologically
similar networks (Yaveroglu et al., 2014) and because GCD—73
considers all the orbits of typically used 2— to 5—node graphlets.

4. NetDis: This most recent graphlet—based alignment—free network
comparison method (Ali et al., 2014) first obtains ego—networks
of radius two (i.e. subgraphs induced on the nodes that are in
the first and second neighbourhood of a given node) for each
node in a given network and computes the number of graphlets
in each of the resulting ego—networks. Then, NetDis compares
these graphlet counts with the graphlet counts from the same
density ego—networks of a ‘gold—standard network” (i.e. network
null model). It then represents the structure of the given network
with a vector containing the sum of the ‘centred’ graphlet counts
of all ego—networks, where the centring is performed by

computing the difference between the observed and expected
(obtained from the gold—standard network) graphlet counts of
the ego—networks. Finally, NetDis computes the distance be—
tween two given networks by comparing their vectors of centred
graphlet counts. Similar to GCD, NetDis has different versions
depending on the size of the graphlets that are used. The current
implementation considers 3— or 4—node graphlets, corresponding
to NetDis-3 and NetDis-4, respectively. Unlike the three other
graphlet—based measures described above, NetDis is parametric,
requiring a gold—standard network, which is its major disadvan—
tage, as we show below.

2.4 Method evaluation and comparison

We systematically evaluate the performance of the network distance
measures by computing how well they can cluster topologically simi—
lar networks generated from the same graph family. We do this by
mimicking the established evaluation approach from Yaveroglu et al.
(2014). That is, We first generate networks from seven graph fami—
lies: Erdés—Renyi model (ER; Erdos and Rényi, 1961), ER degree dis—
tribution preserving model (ERDD; Newman, 2010), scale—free
preferential attachment model (SFBA; Barabési and Albert, 1999),
scale—free gene duplication and divergence model (SFGD; Vazquez
et al., 2002), geometric random graph model (GEO; Penrose, 2003),
geometric model with gene duplication (GEOGD; Priqu et al., 2010)
and stickiness—index based model (STICKY; Priqu and Higham,
2006). The generated networks contain 1000 and 2000 nodes, and
they have edge densities of 0.5% and 1%. We choose these specific
values because the selected sizes and densities are in stable regions of
the graph families (Hayes et al., 2013). To account for randomness
in the network generators, we create 10 networks for each network
size, edge density and graph family combination, producing a total
of2 (network size) X 2 (edge density) X 7 (graph families) X 10 (net—
work instances) : 280 networks. For graph families that require a
predefined degree distribution, we use networks generated from the
preferential attachment (SF) model.

Given the resulting set of 280 networks, we evaluate the network
clustering performance of a given network distance measure using a
systematic area under precision—recall curve (AUPR) framework.
That is, a given network pair is in the True evaluation set if the two
networks are generated from the same graph family and in the False
set otherwise. For a given distance threshold e, a network pair is
considered as a Positive sample if the distance between the two net—
works is S e and as a Negative sample otherwise. Then, given a set
of network pairs, the Precision—Recall curve is obtained by varying
the distance threshold e and computing the precision and recall for
each e value:

P . . True Positives (1)

recision : +7
True Posrtives + False posmves

Recall : w (2)

True Positives + False Negatives '

AUPR summarizes the quality of the classification illustrated
with the precision—recall curve into a single value, with the max—
imum of 1. AUPR can be interpreted as the probability of obtaining
a True sample when it is randomly drawn from the Positive sample
set at any e threshold. In other words, AUPR represents the average
precision of the given network distance measure. Thus, measures
achieving higher AUPR scores have better performance, i.e. they
more correctly cluster similar networks generated from the same

[310'sp2umofp105xo'sopeuHOJIItotq/ﬁdnq

2700

O. N. Yaveroglu et al.

 

graph family and separate dissimilar networks generated from dif—
ferent graph families.

To test the effect of network sizes and densities on the perform—
ance of a network distance measure, we compute AUPR scores in
two different ways: (i) we only consider distances between network
pairs that are of the same sizes and densities and (ii) we consider dis—
tances between all network pairs, comparing networks of different
sizes and densities. While the first approach fairly tests how well a
network comparison method distinguishes between different graph
families without the bias of the network sizes and densities, the se—
cond approach should be taken with more caution, as any observed
difference between networks could be due not to the actual differ—
ences in network topologies but differences in network sizes and
densities. A good network distance measure should be able to easily
identify networks generated from the same graph family when the
networks with same sizes and densities are considered. An ideal net—
work distance measure should also be able to identify networks gen—
erated from the same graph family even if their sizes and densities
are different. However, this is a more challenging task for network
distance measures. In both scenarios, we expect a good network dis—
tance measure to produce high AUPR scores.

To compare noise—tolerance performance of different network
distance measures, we repeat the above experiments by rewiring the
edges of the 280 synthetic networks at different rewiring rates;
namely, we rewire 10%,20%, . . . ,90% of edges in each of the net—
works. More specifically, for a network that has IE) edges, a 76%
noisy network” is generated as follows: at each step, three nodes, a,
b, c, are chosen randomly with the condition that there is an edge
(a, b), but there is no edge (a, c). Edge (a, b) is removed from the net—
work and edge (a, c) is added into the network. This process is re—
peated  >< k)/100 times. Once all of the 280 networks are
randomly rewired as described, we compute AUPR scores of the
new set of rewired networks. To understand the effect of randomiza—
tion, we repeat the rewiring and evaluation process 30 times at each
rewiring rate la. In all these experiments, a successful network dis—
tance measure is expected to produce high average AUPR scores
over the 30 random runs at each threshold.

3 Results and Discussion

We systematically compare the performance of all network distance
measures (Section 2) to correctly position NetDis among other align—
ment—free network comparison methods. We answer the following
questions that the original NetDis study failed to address. What is
the effect of the choice of the gold—standard network (Section 3.1)
and of network sizes and densities (Section 3.2) on the performance
of NetDis? We compare the accuracy (Section 3.3) and computa—
tional running time efficiency (Section 3.4) of NetDis to those of
competing methods. Finally, we argue that the biological application
of NetDis to phylogeny reconstruction, as designed and carried out
in the original study of Ali et al. (2014), is scientifically inaccurate
(Section 3.5).

3.1 NetDis is highly sensitive to the choice of
gold—standard network

NetDis requires a gold—standard network to normalize graphlet
counts in the ego—networks of the compared networks (Section 2.1).
However, for almost all network comparison tasks, there is no prior
information on the structure of the compared networks, and conse—
quently, a well—fitting network null model for these networks is un—
known. Note that one of the purposes of network comparison is to
produce this information as its output rather than using it as input.

The fact that NetDis assumes a specific gold—standard network as its
input and that the same gold—standard network is used for normaliz—
ing the graphlet counts of both of the compared networks (which
might belong to different network null models and thus require
different gold—standard networks) raises serious concerns about the
accuracy of NetDis”s results, as using different gold—standard net—
works can lead to very different results (Artzy-Randrup et al.,
2004). For this reason, NetDis becomes impractical, as its network
clustering performance is highly dependent on the chosen gold—
standard network.

To test the effect of the gold—standard network on the results
of NetDis, we evaluate its performance by using different gold—
standard networks corresponding to different network null models.
Namely, we generate gold—standard networks with 5000 nodes and
20 000 edges [as suggested in the original NetDis paper (Ali et al.,
2014)] from each of the following seven graph families: ER, ERDD,
SFBA, SFGD, GEO, GEOGD and STICKY (Section 2.2). We find
that the AUPR scores of NetDis vary for different gold—standard net—
works with a minimum AUPR difference of 0.25 (Fig. 2A), which
means that the network clustering performance of NetDis is highly
sensitive to the chosen gold—standard network (Fig. 2). Therefore,
the choice on the gold—standard network can have a huge impact on
the quality of the network distances obtained by NetDis.

If NetDis was robust to the choice of gold—standard network, it
should yield qualitatively the same results for all tests performed
using a particular network null model as the gold—standard (Section
2.2). However, this is not the case. In particular, when NetDis uses
the same network null model as the gold—standard, the results of its
clustering of synthetic networks of the same sizes and densities are
not qualitatively the same as the results of clustering of synthetic
networks of different sizes and densities. Namely, when clustering
synthetic networks of different sizes and densities, NetDis returns
the highest AUPR scores when using SFGD network null model as
the gold—standard (Fig. 2A and C). This is true for both NetDis—3
and NetDis—4. However, when clustering synthetic networks of the
same sizes and densities, NetDis returns the highest AUPR scores
when using ERDD or ER network null model as the gold—standard,
depending on NetDis version (Fig. 2B and D). Hence, for the same
NetDis version, different network null models produce qualitatively
the same (the best) results in the two evaluation tests; the evaluation
tests differ only in whether the compared input networks are all of
the same sizes and densities or not. In other words, the same net—
work null model gives qualitatively different results in the two
evaluation tests. This demonstrates that NetDis is highly sensitive to
the choice of a gold—standard network.

3.2 NetDis is affected by network sizes and densities

We argue that Ali et al. (2014) made an incorrect statement that
‘NetDis can correctly separate different random network model
types independent of network size and density.” Our results do not
support this. When networks of the same sizes and densities are
compared, the highest achieved AUPR score is 0.79 with NetDis—3
(Fig. 2B) and 0.9 with NetDis—4 (Fig. 2D). However, when networks
of different sizes and densities are also included into the computa—
tion, the highest achieved AUPR score is 0.52 for NetDis—3 and 0.59
for NetDis—4. Thus, the performance of NetDis is not independent
of the network sizes and densities.

3.3 GCD is more accurate than NetDis
Also, Ali et al. (2014) did not systematically evaluate the perform—
ance of NetDis to position it correctly among other network

ﬁm'spzumol‘pmyo'sopcuuowtotq/ﬁdnq

NetDis-ER-3
NetDiseERDDS
NetDis-SF-S
NetDISFSFGDS
NetDis-G EO-3
NetDiseG EOGDJ
NetDis-STICKY-3

NetDis-ER-4
NetDierRDDA
NetDis-SF-4
NetDierFGDA
NetDis-GEO-4
NetDierEOGDA
I—I NetDis-STICKY-4

7M

Kuchaim and Pi‘iuli, 2011

Patio
and Kiugsford, 2012 Nowhabur el al., 2013
Ne) shabur el al., 2013
hdtttcrial
Ymcroglu el al., 2014
Fig. 2

Ymcroglu cl Lll. (2014)

 

Fig. 4

Supplcntcutar} l\4t1tcrial

NetDis-ER-S
NetDlseERDDS
NetDis-SF-B
NetDISFSFGDS
NetDis—GEO-S
NetDlsGEOGDS
NetDis-STICKY-S

NetDis-ER-4
NetDierRDDA
NetDis-SF-4
NetDierFGD4
NetDis—GEO-4
NetDierEOGDA
I—I NetDis-STICKY-4

Fig. 3

Fig. 2

Supplcntcutar)

/310'SIBanoprOJxo"sotJBuiJOJutotqﬂ:duq

lloécuu~ and Deinsar, 2014

el al., 2014

 

GCDrl 1
GCD’73
NetDis-SFGD-3
NetDis-SFGD-4
Clust. Coef.

}(‘D-1 1 (AUPR: 0.763)
(AUPR:

FGD-4 (AUPR.

(AUPR
(AUPR: 0 <24)
.4 26)

Fig. 3

Yin croqu

Fig. .

Fig.

Fig.

 

J)

L11

L11

/310'SIBanoprOJxo"sotJBuiJOJutotqﬂ:duq

 

Suppletncutar) hdtitcrial

Ali cl til. (2014)

Ali cl til. (2014)

o o NetDis
° 0 GCD-11

0 0 GCD-73

 

/310'SIBanoprOJxo"sotJBuiJOJutotqﬂ:duq

2704

O. N. Yaveroglu et al.

 

Malod-Dognin,N. and Priulj,N. (2014) GR-align: fast and ﬂexible align-
ment of protein 3D structures using graphlet degree similarity.
Bioinformatics, 30, 125 9—1265.

Milenkovic,T. and Priulj,N. (2008) Uncovering biological network function
Via graphlet degree signatures. Cancer Inform, 6, 25 7—273.

Milo,R. et al. (2004) Superfamilies of evolved and designed networks. Science,
303,1538—1542.

Newman,M. (2010) Networks: An Introduction. Oxford University Press,
Oxford, U.K.

Neyshabur,B. et al. (2013) NETAL: a new graph-based method for global align-
ment of protein—protein interaction networks. Bioinformatics, 29, 165 4—1 662.
Okuda,S. et al. (2008) KEGG atlas mapping for global analysis of metabolic

pathways. Nucleic Acids Res., 36(Suppl. 2), W423—W426.

Patro,R. and Kingsford,C. (2012) Global network alignment using multiscale
spectral signatures. Bioinformatics, 28, 3105—3114.

Penrose,M. (2003) Random Geometric Graphs. V0. 5. Oxford University
Press, Oxford.

Pevzner,P. and Shamir,R. (2011) Bioinformatics for Biologists. Cambridge
University Press, Cambridge, U.K.

Prasad,T.K. et al. (2009) Human protein reference database 2009 update.
Nucleic Acids Res., 37(Suppl. 1), D767—D772.

Priulj,N. (2007) Biological network comparison using graphlet degree distri-
bution. Bioinformatics, 23, e177—e183.

Priulj,N. and Higham,D.]. (2006) Modelling protein—protein interaction
networks Via a stickiness index. R. Soc. Interface, 3, 711—716.

Priulj,N. et al. (2004) Modeling interactome: scale-free or geometric?
Bioinformatics, 20, 3508—3515.

Priulj,N. et al. (2010) Geometric evolutionary dynamics of protein interaction
networks. In: Paciﬁc Symposium on Biocomputing, Vol. 2009, pp.
178—189. World Scientiﬁc, The Big Island of Hawaii, Hawaii, USA.

Rito,T. et al. (2010) How threshold behaviour affects the use of subgraphs for
network comparison. Bioinformatics, 26, i611—i617.

Saraph,V. and Milenkovic,T. (2014) MAGNA: maximizing accuracy in global
network alignment. Bioinformatics, 30, 2931—2940.

Singh,R. et al. (2008) Global alignment of multiple protein interaction net-
works with application to functional orthology detection. Proc. Natl. Acad.
Sci. USA., 105,12763—12768.

Solava,R. et al. (2012) Graphlet-based edge clustering reveals pathogen-
interacting proteins. Bioinformatics, 18, i480—i486.

Stark,C. et al. (2006) Biogrid: a general repository for interaction datasets.
Nucleic Acids Res., 34(Suppl 1), D535—D539.

Th0rne,T. and Stumpf,M.P. (2012) Graph spectral analysis of protein inter-
action network evolution.], R. Soc. Interface. 9, 2653—2666.

Tong,A.H.Y. et al. (2004) Global mapping of the yeast genetic interaction
network. Science, 303, 808—813.

Vézquez,A. et al. (2002) Modeling of protein interaction networks. Complexus,
1, 38—44.

Wilson,R.C. and Zhu,P. (2008) A study of graph spectra for comparing graphs
and trees. Pattern Recognit., 41, 2833—2841.

Yaveroglu,O.N. et al. (2014) Revealing the hidden language of complex net-
works. Sci. Rep., 4, 1—9.

Zhang,Y. and Skolnick,]. (2005) Tm-align: a protein structure
alignment algorithm based on the tm-score. Nucleic Acids Res., 33,
2302—2309.

ﬁm'spzumol‘pmyo'sopcuuowtotq/ﬁdnq

