BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

C.Clark and J.Kalita

 

desire to identify several potential orthologs per input protein,
whereas global alignment is more helpful for identifying larger
conserved networks that are indicative of a common ancestor.
Global alignments can also be somewhat easier to interpret, as
the produced mapping is one to one. Because pairwise global
aligners have been much more popular in the recent literature,
and because it is unclear how to compare a global algorithm with
a local algorithm, or a pairwise aligner to a multiple aligner, we
evaluate pairwise global aligners only.

We present the problem of network alignment, overview the
various approaches that have been proposed to solve the prob—
lem and evaluate the quality of the alignments produced by a
wide range of different alignment algorithms from the ﬁrst gen—
eration of global alignment tools to the most recently published
techniques. Given the rapid pace at which new techniques are
being published, many of these algorithms have never been dir—
ectly compared with one another. Therefore, we include exten—
sive comparisons and benchmarks in this article. We make use of
a recently developed framework for testing alignment algorithms
with synthetic PPI network data (Sahraeian and Yoon, 2012) as
well as a real—world PPI dataset (Park et al., 2011). We ﬁnd great
differences in the quality of the alignments produced by existing
alignment programs.

2 METHODS

2.1 Pairwise alignment

Of the many proposed methods for analyzing biological networks, global
network alignment is one of the most ambitious. We are given two graphs
61 =(V1,E1) and G2=(V2, E2), whose vertices represent proteins, and
the presence of the edge (u, v) in E1 (E2) indicates that the two proteins
represented by u and v interact in 61 (G2). Most aligners assume, without
loss of generality, that |V1|<|V2|.

The problem of pairwise alignment is to ﬁnd a one-to-one function
f: V1 —> V2 that maps each node in V1 to the node in V2 that it best
matches [as a shorthand to make several equations more readable, we will
treat f as a function on edges as well. In this case, ﬂ(u, v)) is simply a more
readable shorthand for (f(u),f(v))]. It must be noted that some algorithms
produce a partial function, abstaining from mapping nodes that cannot
be matched well.

Most aligners decompose the process of producing a matching into
two steps. First, for each pair of nodes in V1 >< V2, we compute their
similarity by examining the local topology of the graph around those two
nodes and by their sequence similarity, as measured by BLAST bit scores
or E-values. Second, taking the similarities between these nodes as
weighted edges in a bipartite graph with two sets of nodes V1, V2, we
solve the maximum-weight bipartite matching problem to generate a
mapping from V1 to V2. The pairwise alignment software available differs
primarily in how they handle these two steps, with most innovation being
focused on the ﬁrst step of estimating the topological similarity of two
nodes. This process is just a general schematic that applies to many
aligners. Some, such as NATALIE 2.0, do not follow the two-step pro-
cess and instead optimize a relaxed version of the problem directly.

We must stress that all existing aligners only approximately solve this
problem, and they generally introduce approximations in two ways. First,
they introduce a relaxed problem deﬁnition. Second, they use a heuristic
algorithm to approximately solve the relaxed problem. For instance,
GRAAL frames the problem as matching nodes to one another in such
a way as to maximize their graphlet signature similarity (a measure of
how many small subgraphs of various shapes are in both nodes’ respect-
ive neighborhoods), in the hopes that maximizing this metric between all

aligned pairs of nodes will produce a biologically informative alignment
(Kuchaiev et al., 2010). Then, a greedy matching heuristic is used that
aligns the most similar pair of nodes ﬁrst and then works outward,
aligning their neighborhoods. When evaluating this algorithm, it is not
clear how much of its performance is attributable to the metric of graph-
let signature similarity, and how much is due to using a matching algo-
rithm that prefers to map neighbors to neighbors. All we can do is
evaluate how well the heuristic solution to the relaxed problem solves
our original problem. If a given aligner performs poorly, it could be that
the relaxed problem is a good choice, but that choice is hamstrung by a
poorly designed heuristic to solve it. Without being able to swap out the
parts of these aligners, however, all we can do is evaluate their ﬁnal
results.

2.2 Topological similarity versus domain-specific similar-
ity measures

Broadly speaking, there are two ways to estimate the similarity of two
nodes. One may assess the shape of the network around that node
through a variety of metrics such as degree, eccentricity, betweenness
or the more recently developed graphlet degree (Priulj, 2007). Then,
nodes that appear to be in topologically similar regions of their respective
networks are considered likely matches. Sequence similarity information
is also useful, and BLAST bit scores or E-values have been popular
measures of node similarity. In most alignment algorithms, both topo-
logical information and sequence similarity information are needed,
although there are a few notable exceptions described below.

Both topological similarity techniques and sequence similarity have
advantages and disadvantages. It has been argued that overreliance on
topological similarity can be misleading, as actual complexes may appear
disconnected in current noisy incomplete datasets, and so sequence simi-
larity information is essential to produce the best alignment possible
(Huang et al., 2012). Sequence similarity scores also have their problems,
however, as the actual level of sequence similarity between two proteins
that serve a similar function can vary (Chindelevitch et al., 2013).
Furthermore, it has been found that some aligners that rely heavily on
sequence similarity tend to only produce good alignments between net-
works from more closely related species (Patro and Kingsford, 2012).

After an aligner has computed the similarity of each pair of nodes, it
must map them together. This is the maximum-weight bipartite matching
problem: for each node in G] , we assign one node in G2, such that no two
nodes in 61 are assigned to the same node in G2. A simple strategy for
this matching is the Hungarian algorithm, a standard algorithm that
produces an optimal mapping (Chindelevitch et al., 2013; et al., 2010).
However, because the similarity scores between nodes that we use are
themselves only approximate, the 0(n3) time complexity of the
Hungarian algorithm is generally not worth the time, and most aligners
favor faster greedy matching algorithms. Many aligners, such as
GRAAL, MI-GRAAL and GHOST, use variants on a ‘seed-and-extend’
method, where the best matching pair of nodes are aligned ﬁrst, and then
nodes neighboring that pair are matched (Chindelevitch et al., 2013;
Kuchaiev and Przulj, 2011; Kuchaiev et al., 2010; Patro and Kingsford,
2012). Additionally, several aligners, such as IsoRank and NATALIE
2.0, restrict their alignment to consider only pairs where the bit score
or E-value satisﬁes a user-speciﬁed threshold. In these cases, the
number of pairings that must be considered is restricted to be 0( V1),
and algorithms with better time complexity can be used (El-Kebir
et al., 2011; Singh et al., 2008).

2.3 Test data

To perform our evaluation of existing alignment algorithms, we make use
of the NAPAbench synthetic PPI network data, which was created spe-
ciﬁcally for benchmarking network alignment algorithms (Sahraeian and
Yoon, 2012). These benchmark data are made using state-of-the-art

 

2352

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

Comparing network alignment algorithms

 

algorithms for simulating the evolution of PPI networks and can con-
struct arbitrary phylogenetic trees with PPI networks of customizable
sizes. With these synthetic data, the exact topology and orthology of
the two networks are known. Because real orthology and PPI network
data are constantly improving in terms of both completeness and accur-
acy, benchmarking on a perfect dataset gives us a good idea of the upper
bound of each alignment algorithm’s performance, rendering our evalu-
ation independent of the quality of biological data available at the time it
is published. Furthermore, with the known true alignment available as
ground truth, we are able to get a much better idea of an alignment’s
quality. NAPAbench has previously only been used to benchmark several
older pairwise alignment algorithms and some more recent multiple align-
ment algorithms (Sahraeian and Yoon, 2013). Here, we use it to test more
and newer pairwise algorithms.

Because of the number of algorithms benchmarked, and the high
time requirements of some, we use a subset of the standard
NAPAbench dataset, consisting of nine pairwise alignment problems.
This includes three problems from each of the three PPI network
evolution models used to generate the synthetic network data. These
are the duplication with random mutation model (Pastor-Satorras
et al., 2003), the duplicationimutationwomplementation model
(Vazquez et al., 2002) and a crystal growth (CG) model that has recently
been proposed by Kim and Marcotte (2008). For speciﬁcs on the sizes of
the networks used in these alignments, see the Supplementary
Information File.

Additionally, we use experimentally derived PPI network data from
IsoBase (Park et al., 2011), supplemented with sequence similarity and
Gene Ontology (GO) annotation data from the Supplementary
Information File of Aladag and Erten (2013). The IsoBase dataset is
popular for evaluating alignment algorithms, so we make use of it to
further ease comparison with alignment algorithms that may be published
in the future. It is important to test alignment algorithms on real datasets,
as such data are noisy and incomplete. How well an alignment algorithm
handles the spurious and missing edges that occur in real data is an
important part of understanding its performance. However, we do not
know the true alignment between empirically derived PPI networks, so
performance metrics for alignment on real datasets are inherently less
informative.

2.4 Evaluating alignment quality

Several methods for evaluating the quality of an alignment algorithm’s
output have been proposed. When evaluating with real biological data,
the true alignment between two PPI networks is unknown, so one cannot
simply report the percentage of nodes mapped to their true orthologs, as
we do with synthetic data. For pairwise alignment algorithms, the metric
of edge correctness (EC), proposed by Kuchaiev et al. (2010), reports
the percentage of edges in G1 that are conserved under the produced
mapping to G2:

: l/(El)ﬂE2|

EC
lEll

X 100% (1)
where f is the mapping produced by the alignment algorithm. EC is sug-
gestive of a good alignment, but because it is always possible that two
biologically unrelated edges have been mapped to each other, even 100%
EC is not conclusive evidence of a correct alignment.

Although EC is an intuitive measure of alignment quality, a more
nuanced alternative that has been proposed recently (Patro and
Kingsford, 2012) is the induced conserved structure (ICS) score. This
extends EC with a further intuition: if some region of G2 is dense, then
a sparse region of G1 could be mapped to it in many different ways. We
would rather align a sparse region of G1 to a sparse region of G2 to
increase our conﬁdence that the alignment is not merely a coincidence.
The ICS score penalizes alignments that map to denser subgraphs of G2.
Let G[V] denote the induced subgraph of G on the vertices V. Then, the

ICS score of an alignment f from G1 to G2 is as follows (Patro and
Kingsford, 2012):
1C5: V(E1)ﬂE2|I (2)
IEGzlf(Vl)l|

An additional beneﬁt of the ICS score is it equals 1 if and only if f is an
isomorphism, whereas the same is not true for EC score. This gives us a
more intuitive understanding of the upper bound of an ICS score. We
report ICS scores for alignments in this article and additionally provide
EC scores in the Supplementary Information File.

Another popular metric of alignment correctness is the size of the
largest connected component shared by the two graphs that is found
by the alignment. This largest connected shared component (LCSC) is
the largest connected subgraph of G1 that was found to also exist in G2. A
larger LCSC implies that we have found a larger amount of shared struc-
ture between the two PPI networks. Although it has been noted that
current network data are woefully incomplete (Huang et al., 2012), our
results below show there appears to be some relationship between larger
LCSC and the number of correctly mapped nodes.

Given the limitations of the above topological measures of alignment
quality, measures of agreement derived from biological information are
also popular. All the literature on PPI network alignment makes use of
gene orthology annotations from the GO database (Ashburner et al.,
2000) to evaluate the accuracy of their alignments, by comparing the
similarity of GO annotations between aligned proteins. Because most
network alignment papers so far present entirely novel methods, most
of the emphasis on evaluating the biological quality of an alignment has
been focused on verifying that the alignment is plausible, by checking
whether aligned nodes are biologically similar in terms of the GO. Much
less work has been done so far on deciding which annotations seen in one
protein should be predicted as being present in the protein to which it has
been aligned. A given protein is mapped to any number of GO terms, and
even true orthologs may not have the same set of GO terms, both because
of incompleteness of the GO data as well as divergence of protein func-
tion. Thus, following Aladag and Erten (2013), we deﬁne GO consistency
(GOC) as

: |G0(u) ﬂ G0(v)|

GOC("’ V) |G0(u) U G0(v)|

(3)
for an aligned pair of nodes u 6 V1 and v 6 V2, where G0(u) denotes the
GO terms associated with the protein a that are distance 5 from the root
of the GO hierarchy. Limiting the set of terms in this way prevents
inﬂated scores from counting both more- and less-speciﬁc GO terms.
Because network aligners often use sequence similarity to create an align-
ment, we also experiment with restricting this score to only use GO terms
with experimental evidence codes, which excludes GO terms that have
been assigned on the basis of sequence similarity. We then report the sum
of the GOC over all alignment pairs for each alignment produced. For
NAPAbench’s synthetic benchmark data, where true functional orthol-
ogy is known, evaluation is much easierialignments will simply be eval-
uated by the percentage of aligned pairs that have been aligned to true
orthologs.

2.5 Alignment algorithms evaluated

Our primary focus in this article is to evaluate and compare the many
alignment programs that have cropped up in the past few years. There are
many algorithms that have been published since 2011 that have never
been directly compared with one another. Many of these recently pub-
lished network alignment papers use only the older IsoRank (Singh et al.,
2008) or GRAAL (Kuchaiev et al., 2010) for a baseline, or are addition-
ally compared with MI-GRAAL (Kuchaiev and Przulj, 2011). Because
IsoRank and GRAAL were among the ﬁrst biological network aligners
created, it is unsurprising that more recent algorithms perform better.
Furthermore, differences in evaluation datasets used make it difﬁcult to

 

2353

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

C.Clark and J.Kalita

 

even compare algorithms transitively based on their performance relative
to these older algorithms. The goal of this article is to provide direct
comparisons of these algorithms so as to better inform practitioners
who might want to use such alignment software in their own work.

A number of criteria determined the selection of algorithms to include.
First, given how many new algorithms have been presented in the past
few years, more recent algorithms are favored. Furthermore, we tend to
favor algorithms that are presented as toolsithose that are accompanied
with publicly available software that can be used relatively easily, typic-
ally providing a command line interface. Given these restrictions, as well
as time restrictions and difﬁculties with getting some programs to run at
all, we have omitted several tools that could be competitive with the ones
discussed here (Bayati et al., 2013; Chindelevitch et al., 2013; Huang
et al., 2012; Khan et al., 2012; Kollias et al., 2013; Kpodjedo et al.,
2014; Milenkovic et al., 2010; Phan et al., 2012; Tian and Samatova,
2013; Todor et al., 2013).

Given its historical importance, we include the pairwise algorithm
IsoRank (Singh et al., 2008). Although virtually every alignment algo-
rithm published since is claimed to perform better, IsoRank was the first
and most widely cited algorithm used for global network alignment, and
it remains a popular baseline for measuring the performance of new al-
gorithms. With IsoRank, topological similarity between two nodes is
deﬁned recursivelyitwo nodes are similar if their neighbors are similar.
This intuition is formalized as an eigenvalue problem, and the similarity
score matrix is iteratively reﬁned using the power method for computing
an eigenvalue. This is combined with sequence data to ﬁnd a mapping
using a seed-and-extend algorithm.

GRAAL (Kuchaiev et al., 2010) is the original algorithm in the
GRAAL series. It is notable for being the ﬁrst algorithm to use topo-
logical data exclusively to construct an alignment. GRAAL determines
topological similarity by counting ‘graphlets’ismall induced subgraphs.
For each node in the input networks, GRAAL computes how many times
the node occurs in each graphlet. These counts are used to construct a
graphlet degree signature, and the distance between the graphlet degree
signature of two nodes is used as a measure of topological similarity
between the nodes of the networks being aligned. A heuristic matching
algorithm is used that ﬁrst aligns the two nodes that are most similar,
then works outward to align their neighbors, until all nodes in V1 have
been aligned. As MI-GRAAL is recommended by GRAAL’s authors as
a superior solution, this algorithm is included largely because of its his-
torical impact on the network alignment literature.

MI-GRAAL (Kuchaiev and Przulj, 2011), from the family of GRAAL
algorithms, combines several different measures of topological similarity
along with sequence similarity. The user can decide which topological
measures to use in a given alignment. In our benchmarks here, we use
the combination of topological similarity measures that is reported to
work best: graphlet degree signature distance, degree difference and clus-
tering coefﬁcient difference. When considering whether to align a given
pair of nodes, each of these similarity measures is treated as a separate
vote for or against aligning the two nodes. MI-GRAAL then uses a seed-
and-extend approach to greedily build up an alignment by using the
Hungarian algorithm on successive neighborhoods of already-aligned
nodes. Notably, MI-GRAAL was one of the ﬁrst aligners for which se-
quence similarity data were optional, and even when using only topo-
logical information, MI-GRAAL is reportedly able to ﬁnd alignments
accurate enough to reconstruct phylogenetic trees from given PPI net-
works (Kuchaiev and Przulj, 2011).

C-GRAAL (Memisevic and Przulj, 2012) is a more recent algorithm in
the GRAAL family. It differs from MI-GRAAL in that it uses only
graphlet degree signature and sequence similarity to construct its align-
ments, and it uses a different heuristic matching algorithm. The matching
algorithm works by conducting repeated seed-and-extend iterations that
ﬁrst align the most similar pair and then aligns neighbors of already-
matched nodes. When no more unmatched neighbors exist, it ﬁnds a

new seed from the most similar pair that is still unaligned and repeats
the process, until all nodes are aligned. This neighbors-based approach
helps to maximize the EC of the alignments produced. It is reported that
C-GRAAL obtains lower EC scores than MI-GRAAL but performs
better with respect to conserved functional orthology between aligned
nodes and ﬁnds larger connected shared components (Memisevic and
Przulj, 2012).

NATALIE 2.0 is a pairwise aligner that uses both topological and
sequence similarity information for alignment (El-Kebir et al., 2011).
Unlike most aligners, which proceed in a two-stage fashion as described
in Section 2.1, NATALIE 2.0 formalizes the alignment problem as a
Lagrangian relaxation approach to solving an adaptation of an integer
linear programming problem, which attempts to optimize topological and
sequence similarity of aligned nodes. NATALIE also differs from the
other aligners here in that it frames the problem as ﬁnding a partial
function f: V1 —> V2, which allows NATALIE to leave some nodes
unaligned. We found that NATALIE puts this difference to good use,
abstaining from aligning nodes for which it cannot ﬁnd a good alignment.
NATALIE also restricts its alignment by incorporating a user-
conﬁgurable cut-off for sequence similarity, below which it will not con-
sider mapping two nodes together. This improves the execution speed
considerably by allowing the use of the successive shortest paths variant
of the Hungarian algorithm, which has better time complexity than the
standard version. This program is one of the few available for several
operating systems (see our Supplementary Information File for a table of
supported operating systems).

GHOST (Patro and Kingsford, 2012) calculates spectral signatures
from the Laplacian of the subgraphs around each node of the input
graphs. These signatures can be saved for each graph and reused in fur-
ther alignment runs, which helps to save computation time. The similarity
between two nodes is then deﬁned as the distance between the spectral
signatures of the nodes. Because these are matrix operations, parallel
algorithms are used to decrease GHOST’s running time. For the match-
ing stage, GHOST uses a seed-and-extend approach, where the most
similar pair of nodes is aligned as the ﬁrst seed, and then the neighbor-
hood around these nodes is mapped by solving the spectral relaxation of a
quadratic assignment problem, which assigns a match conﬁdence to each
pair in the neighborhood. The highest conﬁdence match found is aligned
and used as the seed for the next iteration. On real-world PPI networks, it
is reported that GHOST ﬁnds a larger connected common subgraph than
MI-GRAAL and does signiﬁcantly better at matching nodes with shared
GO annotations (Patro and Kingsford, 2012).

SPINAL (Aladag and Erten, 2013) is a rather recent pairwise align-
ment algorithm that claims much better performance in terms of memory
usage, speed and accuracy over MI-GRAAL. It uses a two-pass matching
algorithm consisting of ‘coarse-grained’ and ‘ﬁne-grained’ steps. The
coarse-grained step iteratively improves a matrix P of estimated match
conﬁdence for each pair of nodes by taking into account the conﬁdence
of matching their neighbors that was computed in the previous iteration.
After P has converged, the ﬁne-grained stage begins, which uses a seed-
and-extend algorithm to construct the alignment. Additionally, on each
iteration of the seed-and-extend process, local search is performed to
increase the number of conserved interactions directly. The authors
report signiﬁcantly better performance than MI-GRAAL in both runtime
and alignment quality. Furthermore, SPINAL has two distinctive modes,
1 and 2, with Mode 1 performing the coarse-grained phase and then
simply performing a maximum-weight bipartite matching, whereas
Mode 2 performs both the coarse- and ﬁne-grained stages. Because nei-
ther mode is singled out as the optimal mode for the program, and they
produce different results, we test both.

NETAL (Neyshabur et al., 2013) is another recent pairwise algorithm
that boasts great improvements in execution speed over older algorithms
such as MI-GRAAL. Its performance on noisy data is reportedly im-
proved over MI-GRAAL as well, aligning nearly three times as many

 

2354

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

an?kgogmomammowoio~&o:3m7.omm\

HOST

W
m Natalie .J]

1:! IsoRank

RAAI.

m
L
m
m
m

|:| (‘-(

- SPINAL modt‘ I
All: SPINAL mode ll

VIA Pl‘l.~\l.()(

 

an?kgogmomammowoio~&o:3m7.omm\

HOST

E3 (
m Natal» 2.0
CI IsoRank

Natalit‘lﬁ
|:| IsoRank

DRAAL
RAM.

|:I CVCR.\\L
E1231 I\‘lI-GR—\-\I

a,

E (
PINAL mode 11
SPINAL mode II

- SPINAL mode I
S
- SPINAL mode I

 

 

 

NETAL
PINALOG
SPINAL model
SPINAL mode II

7 I]\ L moch
SPINAL mode II

E GRAAL
I:I CrCRAAL
13TH MI-GRAAL

E GRAAL
I:I r-GRAAI.
EEE MIrGRAAL

E‘E GHOST
m Natalie L0
I:| [MlRallk

GHOST
. dlalie 2.0
IsoRank

PI) \LOC
SPINAL model
SPINAL mode II

NETAL
PINALOG
SPINAL model
SPINAL mode II

E GRAAL
I:I CVGRAAL
EEH Ml-GRAAL

GRAAL
CVGRAAL
Ml-GRAAL

m GHOST
NatalieZJ)
I:| IsoRank

. GHOST
A Natalie 2.0
X IsoRank

 

/310's112u1n0fp10}x0"soiwuiJOJuioiqﬂ:duq

NETAL
PINALOG
SPINAL mode I
SPINAL made 11

* GRAAL
. (IVGKKAL
+ It‘ll-GRAAL

. GHOST
A Natalie 2.0
X IsoRank

L mode I
[VAL mode [I

O
A

 

/310's112u1n0fp10}x0"soiwuiJOJuioiqﬂ:duq

Comparing network alignment algorithms

 

NETAL does not currently use sequence similarity in construct—
ing alignments, its uses are more limited, but it can produce
much higher ICS scores and larger connected components than
other aligners on a given dataset, which may be useful in under—
standing the relative performance of other aligners. We cannot
recommend GRAAL and IsoRank, as they are bested by many
aligners on both GOC and ICS scores. This is understandable,
given that most of these other aligners were benchmarked against
GRAAL and IsoRank when they were being designed.

We have also found a number of issues that future investiga—
tors of network alignment must focus on. First and foremost,
code and documentation quality must be improved for a tool to
see widespread use. Many of these programs crash often, are
poorly documented or run slowly. Sensitivity to noise is also
an issue. Given the drastic differences in aligner performance
between the noise—free synthetic data and the noisy real—world
data, it is clear that future alignment algorithms must become
even more robust to such difﬁculties. Last of all, we have seen
that many aligners perform well at yielding either good topo—
logical or good biological matches, but few do both well. This
must become a higher priority in aligner design.

ACKNOWLEDGEMENTS

We would like to thank Gunnar Klau and Mohammed El—Kebir
for their assistance with NATALIE, Robert Patro for his help
with GHOST, Shahriar Arab for sending us the NETAL source
and Rohit Singh for sending us the original pairwise IsoRank
binary. We also thank four anonymous reviewers for helpful
comments and suggestions.

Funding: The Biofrontiers Center at the University of Colorado,
Colorado Springs.

Conﬂict of Interest: none declared.

REFERENCES

Aladag,A.E. and Erten,C. (2013) SPINAL: scalable protein interaction network
alignment. Bioinformatics, 29, 9177924.

Altschul,S.F. et al. (1990) Basic local alignment search tool. J. Mol. Biol., 215,
4037410.

Ashburner,M. et al. (2000) Gene Ontology: tool for the uniﬁcation of biology. The
gene ontology consortium. Nat. Genet, 25, 25729.

Atias,N. and Sharan,R. (2012) Comparative analysis of protein networks: hard
problems, practical solutions. Commun. ACM, 55, 88797.

Bayati,M. et al. (2013) Message—passing algorithms for sparse network alignment.
ACM Trans. Know]. Discov. Data, 7, 3.

Berg,J. and Lassig,M. (2004) Local graph alignment and motif search in biological
networks. Proc. Natl Acad. Sci. USA, 101, 14689714694.

Chindelevitch,L. et al. (2013) Optimizing a global alignment of protein interaction
networks. Bioinformatics, 29, 276572773.
Cook,S.A. (1971) The complexity of theorem—proving procedures. In: Proceedings of
the Third Annual ACM Symposium on Theory of Computing. pp. 1517158.
El—Kebir,M. et al. (2011) Lagrangian relaxation applied to sparse global network
alignment. In: Pattern Recognition in Bioinﬁ)rmatics, Vol. 7036 of Lecture Notes
in Computer Science. Springer, Berlin, Heidelberg, pp. 2257236.

Flannick,J. et al. (2006) Graemlin: general and robust alignment of multiple large
interaction networks. Genome Res., 16, 116971181.

Flannick,J. et al. (2008) Automatic parameter learning for multiple network align—
ment. In: Proc. Int. Conf. Research in Computational Molecular Biology.
pp. 21¢231.

Huang,Q. et al. (2012) CNetA: network alignment by combining biological and
topological features. In: 2012 IEEE 6th International Conference on Systems
Biology (ISB). pp. 22(k225.

Kalaev,M. et al. (2008) NetworkBLAST: comparative analysis of protein networks.
Bioinformatics, 24, 59¢596.

Kalaev,M. et al. (2009) Fast and accurate alignment of multiple protein networks.
J. Comp. Biol., 16, 9897999.

Kelley,B.P. et al. (2004) PathBLAST: a tool for alignment of protein interaction
networks. Nucleic Acids Res., 32, W837W88.

Khan,A.M. et al. (2012) A multithreaded algorithm for network alignment via
approximate matching. In: 2012 International Conference for High
Performance Computing, Networking, Storage and Analysis. pp. 1711.

Kim,W.K. and Marcotte,E.M. (2008) Age—dependent evolution of the yeast protein
interaction network suggests a limited role of gene duplication and divergence.
PLoS Comput. Biol., 4, e1000232.

Kollias,G. et al. (2013) A fast approach to global alignment of protein—protein
interaction networks. BMC Res. Notes, 6, 35.

Koyutiirk,M. et al. (2006) Pairwise alignment of protein interaction networks.
J. Comp. Biol., 13, 1827199.

Kpodjedo,S. et al. (2014) Using local similarity measures to efﬁciently address ap—
proximate graph matching. Discrete Appl. Math, 164, 1617177.

Kuchaiev,O. and Przulj,N. (2011) Integrative network alignment reveals large re—
gions of global network similarity in yeast and human. Bioinformatics, 27,
139(F1396.

Kuchaiev,O. et al. (2010) Topological network alignment uncovers biological func—
tion and phylogeny. J. R. Soc. Interface, 7, 134171354.

Liang,Z. et al. (2006) Comparison of protein interaction networks reveals species
conservation and divergence. BMC Bioinformatics, 7, 457.

Liao,C.—S. et al. (2009) IsoRankN: spectral methods for global alignment of mul—
tiple protein networks. Bioinformatics, 25, i2537i258.

Memisevic',V. and Przulj,N. (2012) C—GRAAL: common—neighbors—based global
GRAph ALignment of biological networks. Integr. Biol., 4, 73¢743.

Milenkovic,T. et al. (2010) Optimal network alignment with graphlet degree vectors.
Cancer Inform., 9, 121.

Neyshabur,B. et al. (2013) NETAL: a new graph—based method for global align—
ment of proteiniprotein interaction networks. Bioinformatics, 29, 165¢1662.

Park,D. et al. (2011) IsoBase: a database of functionally related proteins across PPI
networks. Nucleic Acids Res., 39 (Suppl. 1), D2957D300.

Pastor—Satorras,R. et al. (2003) Evolving protein interaction networks through gene
duplication. J. Theor. Biol., 222, 1997210.

Patro,R. and Kingsford,C. (2012) Global network alignment using multiscale spec—
tral signatures. Bioinformatics, 28, 310573114.

Phan,H.T. et al. (2012) Aligning protein—protein interaction networks using random
neural networks. In: 2012 IEEE International Conference on Bioinformatics and
Biomedicine. pp. 1%.

Phan,H.T. and Sternberg,M.J. (2012) PINALOG: a novel approach to align protein
interaction networksiimplications for complex detection and function predic—
tion. Bioinformatics, 28, 123971245.

Priulj,N. (2007) Biological network comparison using graphlet degree distribution.
Bioinformatics, 23, e1777e183.

Sahraeian,S.M.E. and Yoon,B.—J. (2012) A network synthesis model for generating
protein interaction network families. PLoS One, 7, e41474.

Sahraeian,S.M.E. and Yoon,B.—J. (2013) SMETANA: accurate and scalable algo—
rithm for probabilistic alignment of large—scale biological networks. PLoS One,
8, e67995.

Sharan,R. et al. (2005) Conserved patterns of protein interaction in multiple species.
Proc. Natl Acad. Sci. USA, 102, 19744979.

Shih,Y.—K. and Parthasarathy,S. (2012) Scalable global alignment for multiple bio—
logical networks. BMC Bioinformatics, 13 (Suppl. 3), SI].

Singh,R. et al. (2008) Global alignment of multiple protein interaction networks
with application to functional orthology detection. Proc. Natl Acad. Sci. U SA,
105 (35), 12763712768.

Tian,W. and Samatova,N.F. (2013) Global alignment of pairwise protein inter—
action networks for maximal common conserved patterns. Int. J. Genomics,
2013, 670623.

Todor,A. et al. (2013) Probabilistic biological network alignment. IEEE/ACM
Trans. Comput. Biol. Bioinformatics, 10, 1097121.

Vazquez,A. et al. (2002) Modeling of protein interaction networks. Complexus, l,
3844.

 

2359

ﬁlO'SIBHmOprOJXO'SOQBILLIOJLIIOICV/idnq

