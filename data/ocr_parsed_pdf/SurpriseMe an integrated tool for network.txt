BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

R.Aldecoa and I.Marin

 

names of two connected nodes, separated by a tab or space character.
From this text ﬁle, the software automatically generates the required
input formats and runs the algorithms (either all or a subset chosen by
the user). Finally, the algorithm that generates the maximum S value is
established. For Infomap, RN and RNSC, the unique partitions gener-
ated are evaluated, while for RB, CPM, UVCluster and SCluster, which
provide several alternative partitions, the ones with the highest S value
are considered.

SurpriseMe also compares the solutions of each algorithm, using either
the Variation of Information (VI) (Meila, 2007) or the [1 — NMI] value,
where NMI stands for Normalized Mutual Information (Danon et al.,
2005). In both cases, the greater the value, the more two partitions are
different (see Aldecoa and Marin, 2012, 2013a, b). The program also
estimates the distances to two additional solutions called One (all units
of the network are in one community) and Singles (each node belongs to
a different community). The distances to these two solutions provide
further clues of the behavior of the algorithms (Aldecoa and Marin,
2013b). All distances are saved into two distance matrix ﬁles (for VI
and for 1 — NMI) that can be directly imported into MEGA5 (Tamura
et al., 2011), a popular free software that allows easily visualizing the
hierarchical relationships among the different solutions (see Aldecoa
and Marin, 2013b).

2.2 Performance

The algorithms involved are substantially complex. With n being the
number of nodes and m the number of links, here we provide their com-
putational complexities (time/space): for CPM and RB, O(n log n)/
O(n+m); for Infomap, O(m)/O(n+m); for RN, O(mAl.3)/O(nA2); for
RNSC, O(nA2)/O(n+m); for UVCLUSTER, O(nA2 log n)/O(nA2); and
for SCLUSTER, O(n log n)/O(nA2). Therefore, the current version of
SurpriseMe is most useful for networks of small to medium size, typically
up to 10000 nodes. We found that very small networks [e.g., those in a
typical Girvan and Newman’s benchmark (2002), with 128 nodes] are
analyzed almost instantaneously. We also tested the software in two
more complex standard benchmarks. The ﬁrst had networks with a
Relaxed Caveman (RC) conf1guration (Watts, 1999) with 10% rewiring,
meaning that well-deﬁned communities are present (see Aldecoa and
Marin, 2013a). The second was a set of Erdos-Renyi (ER) random
graphs (Erdos and Renyi, 1959), essentially without community structure.
This last benchmark provides an estimate of the maximum time and
resources required. In both cases, we found that networks with up to
10000 nodes are analyzed by the seven algorithms in less than an hour
using a conventional desktop PC, consuming less than 1 GB of memory.
However, larger networks require more powerful hardware. With all the
programs, a RC network of 50 000 nodes requires about 140 h of analysis
and 60 GB of memory. In those cases, it may be advisable to switch off
the most time- and resource-consuming programs (RN, SCluster and
UVCluster), given that the four remnant programs generally provide
very good solutions and are complementary (i.e., they work optimally
in different network structures; Aldecoa and Marin 2013a, b). Thus, their
combination will still generate either very high or maximum S values. The
resources required for a network of 50 000 nodes are then reduced to 40
min and 14 GB of memory (RC structure) or 8 h and 39 GB of memory
(ER conf1guration). For a RC network of 100 000 nodes, we have deter-
mined that the four fastest algorithms take 3 h and 30 GB of memory in
RC networks and 21 h and 66 GB of memory in ER networks.

3 SUMMARY

Only few researchers have the time and skills to select, download,
compile and run multiple community detection algorithms.

SurpriseMe allows very simply running a set of state—of—the—art
algorithms and determining the one that generates the best
Surprise value, i.e. the best partition of the network. It also pro—
vides the user with distance matrices (with VI, 1 — NMI values)
that help to compare the solutions of the algorithms. Simple to
use, it only needs as input a file containing the network to ana—
lyze. The well—established power of this type of analysis, together
with the simplicity of its use, makes SurpriseMe an excellent tool
for characterizing the community structure of complex networks.

Funding: Study supported by grant BFU2011—30063 (Spanish
government).

Conﬂict of Interest: none declared.

REFERENCES

Aldecoa,R. and Marin,I. (2010) Jerarca: Efficient analysis of complex networks
using hierarchical clustering. PLoS One, 5, e11585.

Aldecoa,R. and Marin,I. (2011) Deciphering network community structure by sur—
prise. PLoS One, 6, e24195.

Aldecoa,R. and Marin,I. (201 2) Closed benchmarks for network community structure
characterization. Phys. Rev. E Stat. N onlin. Soft Matter Phys., 85 (2 Pt. 2), 026109.

Aldecoa,R. and Marin,I. (2013a) Surprise maximization reveals the community
structure of complex networks. Sci. Rep., 3, 1060.

Aldecoa,R. and Marin,I. (2013b) Exploring the limits of community detection stra—
tegies in complex networks. Sci. Rep., 3, 2216.

Arnau,V. et al. (2005) Iterative cluster analysis of protein interaction data.
Bioinformatics, 21, 364~378.

Barabasi,A.L. and Oltvai,Z.N. (2004) Network biology: understanding the cell’s
functional organization. Nat. Rev. Genet, 5, 1017113.

Bascompte,J. et al. (2006) Asymmetric coevolutionary networks facilitate biodiver—
sity maintenance. Science, 312, 4314133.

Bullmore,E. and Sporns,O. (2009) Complex brain networks: graph theoretical ana—
lysis of structural and functional systems. Nat. Rev. Neurosci., 10, 1867198.

Costanzo,M. et al. (2010) The genetic landscape of a cell. Science, 327, 4254131.

Danon,L. et al. (2005) Comparing community structure identification. J. Stat.
Mech., P09008.

Erdos,P. and Renyi,A. (1959)On random graphs I. Pub]. Math. Debrecen, 6, 29(k297.

Girvan,M. and Newman,M.E.J. (2002) Community structure in social and biolo—
gical networks. Proc. Natl Acad. Sci. USA, 99, 782177826.

King,A. et al. (2004) Protein complex prediction via cost—based clustering.
Bioinformatics, 20, 301373020.

Meila,M. (2007) Comparing clusterings — an information based dismnce.
J. Multivariate Anal., 98, 8737895.

Newman,M.E.J. and Girvan,M. (2004) Finding and evaluating community struc—
ture in networks. Phys. Rev. E, 69, 026113.

Reichardt,J. and Bornholdt,S. (2006) Statistical mechanics of community detection.
Phys. Rev. E Stat. Nonlin. Soft Matter Phys., 74, 016110.

Ronhovde,P. and Nussinov,Z. (2010) Local resolution—limit—free Potts model for
community detection. Phys. Rev. E. Stat. Nonlin. Soft Matter Phys., 81, 046114.

Rosvall,M. and Bergstrom,C.T. (2008) Maps of random walks on complex net—
works reveal community structure. Proc. Natl Acad. Sci. USA, 105, 111871123.

Schaub,M. et al. (2012) Markov dynamics as a zooming lens for multiscale com—
munity detection: non clique—like communities and the field—of—view limit. PLoS
One, 7, e32210.

Schwikowski,B. et al. (2000) A network of protein—protein interactions in yeast. Nat.
Biotechnol, 18, 125771261.

Tamura,K. et al. (2011) MEGAS: molecular evolutionary genetics analysis using
maximum likelihood, evolutionary distance, and maximum parsimony methods.
Mol. Biol. Evol., 28, 273172739.

Traag,V.A. et al. (2011) Narrow scope for resolution—limit—free community detec—
tion. Phys. Rev. E. Stat. Nonlin. Soft Matter Phys., 84, 016114.

Watts,D.J. (1999) Small Worlds: The Dynamics 0f Networks Between Order And
Randomness. Princeton University Press, Princeton.

 

ﬁm'spzumol‘pmﬂo'sopeuuopuorq/ﬁdnq

