APPLICATIONS NOTE V°" 33.7%.iié‘iliﬁéiiiigﬁfég

 

Sequence analysis

Advance Access publication August 27, 2014

RVboost: RNA-seq variants prioritization using a boosting method

Chen Wang“, Jaime l. Davila1 '1, Saurabh Baheti‘, Aditya V. Bhagwate‘, Xue Wang2,
Jean-Pierre A. Kocher‘, Susan L. Slager‘, Andrew L. FeldmanS, Anne J. Novak4,

James R. Cerhan5, E. Aubrey Thompson6 and Yan W. Asmann2'*

1Division of Biomedical Statistics and Informatics, Mayo Clinic, 200 First Street SW, Rochester MN 55905, 2Department
of Health Sciences Research, Mayo Clinic, 4500 San Pablo Road South, Jacksonville FL 32224, 3Department of
Laboratory Medicine and Pathology, 4Division of Hematology, Department of Internal Medicine, 5Division of
Epidemiology, Department of Health Sciences Research, Mayo Clinic, 200 First Street SW, Rochester MN 55905 and
6Department of Cancer Biology, Mayo Clinic, 4500 San Pablo Road South, Jacksonville FL 32224, USA

Associate Editor: Inanc Birol

 

ABSTRACT

Motivation: RNA-seq has become the method of choice to quantify
genes and exons, discover novel transcripts and detect fusion genes.
However, reliable variant identification from RNA-seq data remains
challenging because of the complexities of the transcriptome, the
challenges of accurately mapping exon boundary spanning reads
and the bias introduced during the sequencing library preparation.
Method: We developed RVboost, a novel method specific for RNA
variant prioritization. RVboost uses several attributes unique in the
process of RNA library preparation, sequencing and RNA-seq data
analyses. It uses a boosting method to train a model of ‘good quality’
variants using common variants from HapMap, and prioritizes and
calls the RNA variants based on the trained model. We packaged
RVboost in a comprehensive workflow, which integrates tools of vari-
ant calling, annotation and filtering.

Results: RVboost consistently outperforms the variant quality score
recalibration from the Genome Analysis Tool Kit and the RNA-seq
variant-calling pipeline SNPiR in 12 RNA-seq samples using ground-
truth variants from paired exome sequencing data. Several RNA-
seq—specific attributes were identified as critical to differentiate true
and false variants, including the distance of the variant positions to
exon boundaries, and the percent of the reads supporting the variant
in the first six base pairs. The latter identifies false variants introduced
by the random hexamer priming during the library construction.
Availability and implementation: The RVboost package is imple-
mented to readily run in Mac or Linux environments. The software
and user manual are available at http://bioinformaticstoolsmayo.
edu/research/rvboost/.

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on May 30, 2014; revised on August 11, 2014; accepted on
August 20, 2014

1 INTRODUCTION

RNA-seq has become popular with the decreasing cost and its
potential to quantify exon/transcript levels over a large dynamic

 

*To whom correspondence should be addressed.
7‘The authors wish it to be known that, in their opinion, the ﬁrst two
authors should be regarded as Joint First Authors.

range, discover novel transcripts, identify various splicing
mechanisms and detect fusion genes (Costa et al., 2013)
(Asmann et al., 2011). However, while the variant identification
from DNA sequencing is becoming a routine practice, the vari-
ant detection from RNA-seq remains challenging because of the
complexity of the transcriptome, the ambiguities in mapping
exon boundary spanning reads and the artifacts introduced in
RNA-seq library protocols (Piskol et al., 2013a). Because
expressed genetic variants have more immediate impact on the
protein function compared with the DNA variants, we were
motivated to develop a reliable RNA-seq variant prioritization
method.

In general, variant detection from massive parallel sequencing
data involves two steps. First is variant calling, which outputs
all positions with any evidence of alternative alleles compared
with reference. An essential next step is variant prioritization and
filtering to obtain reliable variants of high conﬁdence. For DNA
sequencing data, the most widely used variant prioritization
method is a mixture model-based classiﬁer, variant quality
score recalibration (VQSR), within the Genome Analysis
Toolkit (GATK) (DePristo et al., 2011). VQSR integrates
multiple attributes/annotations of the variants, all of which
are based on features of sequencing, including the depth of
coverage, strand bias, mapping qualities and variant position
bias toward the end of the reads. VQSR uses variants reported
in HapMap as the training source to calculate a ﬁltering
criterion, and then predicts true ‘novel’ variants. Another
method SNPiR proposes a series of arbitrary hard thresholds
to filter and reduce the number of false variants (Piskol et al.,
2013b).

After careful examination of the RNA-seq variant detection
process, we proposed to include RNA-speciﬁc attributes/anno-
tations for the variant prioritization model in addition to the
features included in GATK. Furthermore, we observed that
the Gaussian mixture model and the parameter selection used
in VQSR are not ideal for modeling these features and proposed
to use a boosting method that uses generalized linear models as
its base learners. This method, called the RNA Variant Boosting
(RVboost), is a ranking machine to (a) train a model based on
common variants in HapMap and (b) rank the variants
accordingly.

 

© The Author 2014. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/4.0/), which permits non—commercial re—use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial
re—use, please contact journals.permissions@oup.com

112 /310's112u1n0fp10}x0"sotwurJOJutotq/ﬁduq 11101} popcorumoq

9103 ‘Og anBnV uo ::

RVboost

 

We implemented a comprehensive workflow using the frame-
work of GATK that incorporates RVboost to facilitate reliable
RNA-seq variant prioritization (Fig. 1). This workﬂow outputs
called variants with detailed annotations in both the standard
variant calling format (V CF) and the tab-delimited text format.
We have shown that RVboost outperforms VQSR in 12 RNA-
seq samples with paired exome sequencing data. We also intro-
duced a key concept of ‘train-set quantile score’, or the train-Q
score, to help users determine their preferred precision/recall
trade-off.

2 FEATURES

2.1 Attributes selection

After testing, six attributes were included in RVboost. We kept
three attributes from GATK’s Uniﬁed Genotyper, which are rou-
tinely used in VQSR: (i) Quality score over depth, (quality by
depth, QD); (ii) Positional bias (ReadPosRankSum); and (iii)
Fisher’s exact test-based Strand bias (FS). In addition, we added
three novel attributes that are speciﬁc and unique for RNA-seq: (i)
the percent of variant-supporting reads with variant positions in
the ﬁrst six bases of the reads (PctExtPos). This is to model the
false variants introduced during the random hexamer priming of
the cDNA synthesis step during the RNA-seq library protocol.
The mismatches allowed between the hexamer primers and the
RNA templates resulted in substantial amount of false variants
(Fig. l of the Supplementary Material); (ii) distance to the exoni
intron boundary (DJ); and (iii) the uniqueness of the read map-
ping in the genome and transcriptome (ED). More details are
available in Supplementary Section 1.1.

2.2 Input, output and major modules

RVboost takes an aligned RNA-seq BAM file [e.g. the BAM ﬁle
generated by TopHat (Trapnell et al., 2009)] and processes it
through three major components (Fig. l): (i) Uniﬁed
Genotyper from GATK for raw variant calling in the target
region and generation of the annotations including all GATK
classic annotations and the three novel attributes described
above in Section 2.1; (ii) annotation of each variant with

 

  
  
  

 

VIII-III tailing &
Initial annotation

O : inpurﬂfe
D .' Outputﬂle

  
   
     
   
      
  
 

Raw varian“ with
parllal lanai-[Ion

Additla nil in notations

Anna late-d

can...“ visuallzatlon

1
.i‘ ’k

Common ulrlants _ r 

[e.g. HAPMAP]

 

Nov 2! variants

  

   

IV I: nos! In min 3

/ 5."..er Tub:- or

ﬂ "lama with-um

 

Fig. 1. The overall workﬂow of RVboost

additional attributes, including all functional annotations from
Sanff (Cingolani et al., 2012), and whether the variant position
is a known RNA-editing site according to a RNA-editing data-
base (Ramaswami and Li, 2014); (iii) Variant prioritization and
ranking using RVboost. This module includes two components:
a novel boosting method to train the variant classifying model
using high-conﬁdence variants (e.g. common variants in
HapMap as GATK recommended); and ranking of the likely
true variants using a confidence score (details in the method
section below). The output is a VCF file of all variants, with
full annotations. Users can also generate a text ﬁle with selected
attributes.

2.3 Description of the variant prioritization methods

With the selection of six attributes, we formulated the variant
prioritization as a ranking problem where only likely true vari-
ants (e.g. common variants from HapMap) are used for model
training. We describe it as a mathematical process to ﬁnd a good
F(.), which outputs ranking score y from data X with minimum
error defined by a loss function L(.):

Fopt(X) = argFg-in   

where elements of y is l or 0 to indicate likely true or false variants,
respectively, X is a variant by attribute matrix used to rank true
variants and ‘arg min’ stands for the argument of the minimum
error of the loss function. Different from mixture model-based
VQSR, in which the construction of F(.) requires explicitly
the number of Gaussian kernels and the percent of worst variants
that are used as negative sets, we proposed to use a more
ﬂexible boosting method to rank variants. Boosting methods
construct such a function F(X) by additive combinations of
M ‘base’ learners h(X) (e. g. linear regression models)
F (X) = 211:1 ﬂmh(X; 6m), with corresponding combination
coefﬁcients ﬂm and parameters 6m of m-th learner (Friedman,
2001; Biihlmann and Hothorn, 2007). By leveraging implemented
boosting methods in R package ‘gbm’, we chose three boosting
options for which response variable values range from 0 to l:
‘adaboost’ with AdaBoost exponential loss function, ‘bernoulli’
with logistic regression loss function, and ‘huberized’ with mod-
iﬁed Huber loss function (Ridgeway, 2005). It is often found that
these three distribution options lead to similar performance and
converge well before 20 000 iterations. Hence, we chose AdaBoost
model and 20 000 iterations as default settings for RVboost.

2.4 Expected recall rate and train-set quantile score

After training, the user needs to choose a prioritization score as
the threshold to call ‘true variants’. In practice, it is often difﬁcult
to interpret a prioritization score derived from a complex
computational model and its implications for precision/recall
trade-off. To address this problem, we explicitly deﬁned a mono-
tonic transformation independent of ranking methods, which
depends on training set of likely true variants

train-Q[]] = eCDF train-set (SCOV @111) (2)

where score[]] is score generated by method from high to low
indicating the likelihood of the j—th variant to be a true variant.

 

3415

112 /310's112u1n0fp10}x0"sotJBurJOJutotq/ﬁduq 11101} popcorumoq

9103 ‘Og isanV uo ::

C. Wang et al.

 

eCDEmin_se,(-) is the empirical cumulative density function learnt
from the training dataset.

The train-Q score is intuitive to users, as it directly uses the
expected recall rate from the provided training dataset. For
example, a cutoff of the train-Q scores of 20% means that
using this cutoff, 80% of the variants within the training set
will be retained, i.e. we have a 80% expected recall. Through
our comparison studies, we suggest a moderate expected recall
rate, e.g. 90 or 95%, instead of an aggressive 99%, which is the
recommended default by VQSR.

2.5 Comparison studies

We compared speciﬁcity and sensitivity of RVboost to VQSR
(GATK version 1.6.9) and SNPiR (Piskol et al., 2013b), using
the concordance between RNA and DNA variants from eight
follicular lymphoma tumor samples and four replicates of
MCF—7 cell lines (details described in Supplementary Material
1.4). To make unbiased comparisons, we evaluated the recall/
precision on a subset of novel variants that (i) are not in the
positive training set and (ii) have at least 10-fold coverage in
both RNA-seq and exome-seq. We regarded the genotype calls
from exome-seq as the ground truth and computed precision/
recall accordingly, under the assumption that RNA-editing
sites are a small percentage of RNA-seq variants (Piskol et al.,
2013a).

Overall, RVboost consistently outperforms both VQSR and
SNPiR in all the tested samples in terms of AUC (Area Under
the Curve) of precision/recall curves, and demonstrates superior
precision in low train-Q score cutoffs, or equivalently, with high
expected recall rates (details in Supplementary Material 2.2). We
also investigated the contribution of individual attribute to dis-
tinguish true versus false variants, suggesting that the percent of
reads supporting the variants in the ﬁrst six base pairs and QD
are the most informative features (details in Supplementary
Material 2.3).

3 CONCLUSIONS

We developed RVboost, a software package designed to reliably
prioritize and call variants from RNA-seq data. The output of

our workﬂow provides comprehensive annotations to facilitate
biological understanding. Variant prioritization is based on a
proposed boosting method, which not only outperforms two
other methods (SNPiR and VQSR) in overall performance, but
also provides great ﬂexibility to users for adjusting of the preci-
sion/recall trade-off, and it is superior to ad hoc hard-threshold
approaches, such as SNPiR. The major modules are wrapped as
a comprehensive package.

Funding: Support for this work was provided by gift from
Everett and Jane Hauck to the Center for Individualized
Medicine at Mayo Clinic Jacksonville Florida, funds from
the 26.2 with Donna Foundation and the proceeds of the
National Marathon to Fight Breast Cancer and NIH P50
CA097274.

Conﬂict of interest: none declared.

REFERENCES

Asmann,Y.W. et a]. (2011) A novel bioinformatics pipeline for identiﬁcation and
characterization of fusion transcripts in breast cancer and normal cell lines.
Nucle’w Acids Res, 39, e100.

Buhlmann,P. and Hothorn,T. (2007) Boosting algorithms: regularization, prediction
and model ﬁtting. Stat. Sci., 22, 4777505.

Cingolani,P. et a]. (2012) A program for annotating and predicting the effects of
single nucleotide polymorphisms, Sanff: SNPs in the genome of Drosophila
melanogaster strain w1118; iso—2; iso—3. Fly (Austin), 6, 8&92.

Costa,V. et a]. (2013) RNA—Seq and human complex diseases: recent accomplish—
ments and future perspectives. Eur. J. Hum. Genet, 21, 1347142.

DePristo,M.A. et a]. (2011) A framework for variation discovery and
genotyping using next—generation DNA sequencing data. Nat Genet, 43,
4917498.

Friedman,J. (2001) Greedy function approximation: a gradient boosting machine.
Ann. Stat, 29, 118971232.

Piskol,R. et al. (2013a) Lack of evidence for existence of noncanonical RNA editing.
Nat Biotechnol., 31, 19720.

Piskol,R. et al. (2013b) Reliable identiﬁcation of genomic variants from RNA—seq
data. Am. J. Hum. Genet, 93, 641$51.

Ramaswami,G. and Li,J.B. (2014) RADAR: a rigorously annotated database of
A—to—I RNA editing. Nucleic Acids Res, 42, D1097D113.

Ridgeway,G. (2005) Generalized Boosted Models: A guide to the gbm package. In:
R CRANpackage.

Trapne11,C. et a]. (2009) TopHat: discovering splice junctions with RNA—Seq.
Bioinformatics, 25, 110571111.

 

3416

112 /310'S[BIIJHOIPJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 111011 pep1201um0q

9103 ‘0g isanV uo ::

