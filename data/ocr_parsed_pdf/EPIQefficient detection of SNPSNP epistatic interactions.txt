BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Y.Arkin et al.

 

for casewontrol studies can be applied on quantitative traits
after dichotomizing the phenotype (as in Bhattacharya et al.,
2011); however, the resulting statistical test is different than the
original, thus a loss of power is inevitable and would be difﬁcult
to quantify.

In this study, we present EPIQ (EPIstasis detection for quan—
titative GWAS)7an efﬁcient algorithm for detecting pairs of
SNP loci that have an epistatic effect on quantitative phenotypes.
EPIQ achieves a substantial runtime speedup by avoiding the
need to exhaustively test all SNP pairs: it applies a carefully
chosen transformation that maps each genotyped SNP to a
vector in a Euclidean space. This transformation has the prop—
erty that SNP pairs with an epistatic effect are converted
to vector pairs with a large inner product. A random projections
method is subsequently applied to efﬁciently recover these
SNPs. A novelty of our method is that each SNP is projected
to two different points, for a more efﬁcient detection of
interacting SNPs. We show on simulated data that in just >3h
our algorithm was able to process a dataset that would take
days or weeks using state of the art software, and present the re—
sults of running EPIQ on data from the Ludwigshafen risk and
cardiovascular health (LURIC, Winkelmann et a]. 2001) study.

2 METHODS

2.1 Outline

EPIQ is designed to efﬁciently discover SNPs that have a signiﬁcant
epistatic effect over a quantitative phenotype, without exhaustively test-
ing all pairs of SNPs in a dataset. This goal is achieved in two steps: a
ﬁltering stage—generating a list of candidate SNP pairs, and a validation
stageiﬁtting a linear regression model to these pairs. By shortening the
list of pairs to be tested during the ﬁltering stage, running time for the
linear regression step is reduced substantially. Filtering is performed by
assigning a score to each SNP; this score is stochastically generated so
that for each pair of SNPs, the expected value for the product of their
scores is proportional to the generalized likelihood ratio (GLR) test stat-
istic of their interaction. This means epistatic pairs are expected to have a
high score product. By performing multiple iterations and collecting pairs
that pass a given threshold, we assure with high probability that if an
interacting pair exists, it is included in the candidates list and will be
reported during validation stage. To do so we present a new test-statistic
1'2 which is roughly proportional to the GLR test score, and apply a
random projection algorithm that discovers pairs with exceptionally
high 1'2 scores.

2.2 Model description

2.2.] M ode] input EPIQ receives as input a vector y e R", represent-
ing the phenotypic values of all n individuals in the cohort, and a matrix
anm e {0,1}"X'" representing the cohort at m polymorphic loci. The
algorithm is adjusted for binary SNPs; therefore genotypes should be
converted to a binary representation according to the expected type of
interaction. For example, converting AA to 0 and aA, aa to 1 states a
dominant model of interactions. The phenotype vector y is centered
so that it has zero mean and SD of l. x e {0, 1}" denotes the column
vector of allelic values measured for all n samples at a certain locus. X,-
is the allele value of this locus for person number i and y,- is the
phenotype value of person number i. We denote p=Pr[X,»=l], and
estimate it with the maximum likelihood estimator 13 =mean(x).
Denote x2 =(Xj, xg, . .. X2 T

I ’1
/_ / / / T
yxx 7(le1X1,y2X2X2,...,y,,X,,X") .

, xxl =(X1X’1,X2X’2, . . . ,X"X;)T and

2.2.2 Linear mode] When testing for an epistatic interaction between
a pair of SNPs, the linear model can be deﬁned as follows (Cordell, 2009):

yi=oz0+alxi+azxg+a3xixg+ei (la)
e,»~N(0, :72) (1b)
H0:oz3=0,H1:oz3;£0 

Since tests for interaction are usually performed after testing for a main
effect for each of the SNPs, it is reasonable to zero the main effects from
the model. By altering the model so that a1 = a2 = 0 and 010, a; are
replaced with [30, [31 respectively, a new, simpler model is obtained:

yi=50 +51XiXi+€i (2a)
e,»~N(0, :72) (2b)
H0:ﬁ1=0,H1:/31;£0 (2c)

In this case, using ordinary least squares (OLS), the GLR tests statistic is:

2 (Vi — [30 — g1 X2902
21nGLR=—nln i— (3)

20.» —y)2

Where y = mean(y). This simplification allows us to deﬁne an alternative
test statistic, r2, which is an approximation of the GLR test statistic and
can be very useful for our ﬁltering stage. Disregarding the main effect can
in fact lead to false positive results, but these will only be a fraction of the
total number of SNP pairs and will all be discarded during the validation
stage, where pairs are tested against the full linear model (Equation 1).

To achieve simplicity and efﬁciency, the model does not include cov-
ariatesithe residuals from the phenotype adjusted for other parameters
should be used as the response variable. Population stratiﬁcation can be
addressed by applying an adjustment method such as EIGENSTRAT
(Price et al., 2006) and using the first axes of variation as covariates
while adjusting the phenotype. The model assumes linkage equilibrium
between SNPs, an assumption that does not hold for GWAS, where
proximal SNPs are in LD. As a result, the distribution of the 1'2 score
for proximal SNPs deviates from what is expected under the null assump-
tion, which results in an excess of pairs passing the ﬁltering stage. This
problem can be addressed by dismissing proximal pairs during the ﬁlter-
ing stage, and exhaustively testing them later during post-processing time.
As the number of proximal pairs in LD is 0(m), the cost of this correction
is minor.

2.3 GLR test and the new test-statistic r2

In the following section we introduce our new test statistic r2 and show
that for large sample sizes, 21n GLR % r2. The new tests statistic is pre-
sented not as a means to achieve more power, rather as a means for
reducing runtime by serving as a proxy to the GLR test statistic: we
show in the next section how random projections methods can efﬁciently
detect pairs with a high 1'2 score, as a ﬁltering stage for detecting statis-
tically signiﬁcant interactions.

Since y is standardized, the denominator of Equation (3) equals n.

Replacing [30,31 in Equation (3) with their OLS estimators

 

y — 31W,  respectively, it is easy to verify that:
x-x’ ixx’

2 (y. — [30 — 312x92 = 20.» — “Lyme — my (4a)

— xx’

—2
yxx’
= n (l — ﬂ) (4b)
xx — xx

 

 

 

 

i20

ﬁm'spzumofpmjxo'sopeuuopnorq/ﬁdnq

an?kgogmomammowoio~&o:3m7.omm\

 

55,2kgogmoddmmowoio~&o:~=£¢o~m\

 

EPIQ

 

of the interaction term. Since EPIQ was run with the parameter
success rate set to 80%, we compared its runtime against testing
80% of the pairs in the exhaustive search algorithms. As seen in
Table 1, EPIQ shows a great improvement in runtime, compared
with the exhaustive tools.

We ran EPIQ using different inputs in order to test how the
program scales with changes in the number of SNPs, cohort size
or requested power. As seen in Figure 3a, EPIQ scales linearly
with the number of SNP pairs in the dataset. Figure 3b shows
that gaining more power becomes increasingly time consuming
when approaching 100% power, as can be expected in stochastic
algorithms of this sort. However, one can achieve 95% power in
a matter of hours. Scaling in the number of samples is above
linear as well: while testing 5 x 1011 pairs takes 3.2h for 1000
individuals, it takes 7 times longer for 3000 samples, and 30 times
longer for 5000 samples. Nevertheless, for moderate cohort sizes
EPIQ remains an efﬁcient choice. (All benchmark tests were per—
formed on the Ubuntu Linux server with 2.5 GHz processor.)

3.2 Power analysis

To evaluate the power of our algorithm, we compared it against
two commonly used baseline methods suggested by Marchini
et a]. (2005). First is a simple exhaustive all—pairs test, where all
SNP pairs are tested for interaction. Although this method is not
feasible for large datasets, the power achieved by an all—pairs test
is of relevance, as this is the upper bound for the power of our
algorithm. The second baseline we compared against is a method
in which the top K marginal predictors are identified, and then
tested for all pairwise iterations between them. When choosing

K = v 2m, for example, the number of tests performed
is  z m. We refer to this method as the ‘two—step’ algorithm.

In all our tests we apply the conservative Bonferroni correction,
in order to address the issue of multiple hypothesis. Since EPIQ
implicitly evaluates all SNP pairs, the number of tests for a mul—

tiple testing correction is  as in the all—pairs algorithm. For

each test the program generated a quantitative phenotype ac—
cording to the linear model described earlier,
y,=ﬂ0+ﬂlx,~x;+e,~, where x, x/ are two SNPs that were ran—
domly chosen as the interacting pair. The phenotype was later
standardized so that y =0, stdev(y) = 1.

We compared EPIQ against the two methods, using different
MAFs for the interacting SNPs and success rate equal to 80%
(Fig. 4a4:). Note that although the requested success rate was
80%, the actual power of EPIQ (shown in dark blue) is consist—
ently >80% of the power achieved by the all—pairs algorithm
(light blue), as this parameter states the minimal relative
power. Another conclusion drawn from these figures is that in
some cases there is a substantial difference in power between the
all—pairs test and the two—stage test (green), in favor of the all—
pairs test. The opposite is true for large MAFs, as in this case the
marginal effect is easy to detect, and the multiple testing correc—
tion is less stringent for a two—stage approach (data not shown).
Similar results were described by Evans et a]. (2006), which
showed that for various models of interaction, an exhaustive
all—pairs search is more powerful compared with the two—step
strategy, despite the harsher multiple testing correction [0(m2)
compared to 0(m)]. In these cases, using EPIQ can yield a sub—
stantial improvement in power.

3.2.] Comparison with PLINK In order to further investigate
the power achieved by EPIQ, we carried 50 experiments compar—
ing our method with the linear regression performed by PLINK
and FastEpistasis, using the 50 distinct models of interaction
from Li and Reich (2000), which were adapted for quantitative
traits. These models assume that there are two phenotypic means
in the population: 0 and 1, and each model of interaction deter—
mines a different partitioning of the population to either mean.

(a) (b)15 o

1 O

3 O
O

10% 20% 30% 40% 50% 60% 70% 80% 90%

0 1 2 3 4 5
Number of pairs X 10" Success rate

Runtime vs number of SN P pairs Runtime vs power

Fig. 3. Runtime of EPIQ for different settings: (a) runtime for various
numbers of SNP pairs, n = 1000; EPIQ scales linearly with the number of
pairs. (b) Runtime of EPIQ for different power thresholds; nearly 100%
power can be achieved in a matter of hours (n = 1000, m = 106)

Table 1. Runtime of the C + + implementation of EPIQ, compared with other programs available

 

 

Tool Computational method Statistical test Cores Runtime
PLINK (Purcell et al., 2007)a Exhaustive search OLS 1 ~10 years
FastEpistasis (Schiipbach et al., 2010)b Exhaustive search OLS 8 381 h
EpiGPU (Hemani et al., 2011)b Exhaustive search F—test 7 9.3790 hc
EpiGPUHSIC (Hemani et al., 2011)b Exhaustive search HSIC 7 194h
EPIQ (Kam-Thong et al., 2011)b Random projections OLS on binary SNPs 8 3.2h

 

EPIQ was run with the parameter success rate set to 80%, therefore runtime is compared against testing 80% of the pairs in the exhaustive search algorithms (n : 1000,

m : 106).

"Times were extrapolated according to a test of 1000 SNPs performed on the same 2.5 GHz processor, scaling linearly with the number of SNP pairs.

bTimes were extrapolated according to self—reported performance.
CRuntime varies with the chosen GPU.

 

i23

ﬁre'spzumofpmJXO'sopnuuowrorq/ﬁdnq

55,2kgogmoddmmowoio~&o:~=£¢o~m\

 

 

 

EPIQ

 

coding of the genotypes can be performed differently than
described, to match other underlying models of interaction.
EPIQ can also be used in conjunction with methods such as
the genome—wide rapid association testing (GRAT) (Kostem
and Eskin, 2013), which utilize LD between SNPs for choosing
a subset of proxy SNPs, thus reducing the number of tests and
further improving runtime. Moreover, the runtime reported re—
lates to the current code implementation of the algorithm.
Different implementations, such as GPU—based code, are likely
to achieve even better results. With the decrease in runtime, per—
mutation tests for signiﬁcance become a feasible option, resulting
in increased power compared with stringent methods for multiple
hypothesis correction.

ACKNOWLEDGEMENTS

The collections and methods for the POPRES are described by
Nelson et a]. (2008). The genotype dataset was obtained from the
LURIC study. The datasets used for the analyses described in
this article were obtained from dbGaP at http://www.ncbi.nlm.
nih.gov/projects/gap/cgi—bin/study.cgi?study_id = phs000145.v4.
p2 through dbGaP accession number phs000145.v4.p2.

Funding: This study was supported in part by a Fellowship from
the Edmond J. Safra Center for Bioinformatics at Tel—Aviv
University. E.H. and Y.A. were supported by the Israel
Science Foundation grant no. 1425/13. E.H. was also partially
supported by National Science Foundation grant III—1217615.
The LURIC study was supported by the 6th Framework
Program (integrated project Bloodomics, grant LSHM—CT—
2004—503485), by the 7th Framework Program (integrated pro—
ject AtheroRemo, grant agreement number 201668 and
RiskyCAD, grant agreement number 305739) of the European
Union and by the INTERREG IV Oberrhein Program (Project
A28, Genetic mechanisms of cardiovascular diseases) with sup—
port from the European Regional Development Fund (ERDF)
and the Wissenschaftsoffensive TMO. E.H. is a Faculty Fellow
of the Edmond J. Safra Center for Bioinformatics at Tel Aviv
University.

Conﬂict of Interest: none declared.

REFERENCES

Abecasis,G.R. et ul. (2012) An integrated map of genetic variation from 1,092
human genomes. Nature, 491, 56%5.

Bhattacharya,K. et ul. (2011) Rapid testing of gene—gene interactions in genome—
wide association studies of binary and quantimtive phenotypes. Genet.
Epidemiol, 35, 8004508.

Brinza,D. et ul. (2010) RAPID detection of gene—gene interactions in genome—wide
association studies. Bioinformatics, 26, 285672862.

Cordell,H.J. (2009) Detecting gene—gene interactions that underlie human diseases.
Nat. Rev. Genet., 10, 3924104.

Evans,D.M. et ul. (2006) Two—stage two—locus models in genome—wide association.
PLoS Genet., 2, e157.

Gretton,A. et ul. (2005) Measuring statistical dependence with Hilbert—Schmidt
norms. In: Algorithmic Learning Theory. Springer, Singapore, pp. 6%77.

Hemani,G. et ul. (2011) EpiGPU: exhaustive pairwise epistasis scans parallelized on
consumer level graphics cards. Bioinformatics, 27, 146271465.

Hindorff,L.A. et ul. (2009) Potential etiologic and functional implications of
genome—wide association loci for human diseases and traits. Proc. Natl Acml.
Sci. USA, 106, 936279367.

Hu,X. et ul. (2010) SHEsisEpi, a GPU—enhanced genome—wide SNP—SNP inter—
action scanning algorithm, efﬁciently reveals the risk genetic epistasis in bipolar
disorder. Cell Res., 20, 8544557.

Kam—Thong,T. et ul. (2011) Epistasis detection on quantitative phenotypes by ex—
haustive enumeration using GPUs. Bioinformatics, 27, 12144221.

Kostem,E. and Eskin,E. (2013) Efﬁciently identifying signiﬁcant associations in
genome—wide association studies. J. Comput. Biol, 20, 8177830.

Li,W. and Reich,J. (2000) A complete enumeration and classiﬁcation of two—locus
disease models. Hum. Hered., 50, 3347349.

Liu,Y. et ul. (2011) Genome—wide interaction—based association analysis identiﬁed
multiple new susceptibility loci for common diseases. PLoS Genet., 7, e1001338.

Maher,B. (2008) Personal genomes: the case of the missing heritability. Nut, 456,
18721.

Marchini,J. et ul. (2005) Genome—wide strategies for detecting multiple loci that
inﬂuence complex diseases. Nut. genet., 37, 4134117.

Nelson,M.R. et ul. (2008) The Population Reference Sample, POPRES: a resource
for population, disease, and pharmacological genetics research. Am. J. Hum.
Genet., 83, 3477358.

Prabhu,S. and Pe’er,I. (2012) Ultrafast genome—wide scan for SNP—SNP interactions
in common complex disease. Genome Res., 22, 223(k2240.

Price,A.L. et ul. (2006) Principal components analysis corrects for stratiﬁcation in
genome—wide association studies. Nat. Genet., 38, 90¢909.

Purcell,S. et ul. (2007) PLINK: a tool set for whole—genome association and popu—
lation—based linkage analyses. Am. J. Hum. Genet., 81, 5597575.

Schiipbach,T. et ul. (2010) FastEpistasis: a high performance computing solution
for quantitative trait epistasis. Bioinformatics, 26, 146871469.

Wan,X. et ul. (2010) BOOST: a fast approach to detecting gene—gene interactions in
genome—wide case—control studies. Am. J. Hum. Genet., 87, 3257340.

Winkelmann,B.R. et ul. (2001) Rationale and design of the LURIC studyia re—
source for functional genomics, pharmacogenomics and long—term prognosis
of cardiovascular disease. Phurnmcogenomics, 2 (Suppl. 1), 517873.

Yung,L.S. et ul. (2011) GBOOST: a GPU—based tool for detecting gene—gene inter—
actions in genome—wide case control studies. Bioinformatics, 27, 130971310.
Zhang,X. et ul. (2010) TEAM: efﬁcient two—locus epistasis tests in human genome—

wide association study. Bioinformatics, 26, 12174227.

 

i25

ﬁre'spzumofpmjxo'sopnuuowrorq/ﬁdnq

