BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Data-based filtering for HTS experiments

 

value to filter genes in this way does not account for the overall
sequencing depth or variability of a given experiment. One ex—
ception to these ad hoc filters is the work of Ramskold et a].
(2009), in which a comparison between expression levels of
exonic and intergenic regions was used to find a threshold for
detectable expression above background in various human and
mouse tissues, where expression was estimated as Reads Per
Kilobase per Million mapped reads (RPKM) (Mortazavi et al.,
2008). The threshold of 0.3 RPKM identiﬁed in this work has in
turn been applied to several other studies (e.g. Canovas et al.,
2010; Labaj et al., 2011; Sam et al., 2011). However, to our
knowledge, although filters for read counts are routinely used
in practice, little attention has been paid to the choice of the type
of filter or threshold used or its impact on the downstream
analysis.

In this article, we propose a novel data—based procedure to
choose an appropriate ﬁltering threshold based on the calcula—
tion of a similarity index among biological replicates for read
counts arising from replicated high—throughput transcriptome
sequencing data. This technique provides an intuitive data—
driven way to ﬁlter RNA—seq data and to effectively remove
genes with low constant expression levels. Our proposed ﬁltering
threshold may be useful in a variety of applications for RNA—seq
data, including differential expression analyses, clustering and
co—expression analyses, and network inference.

2 METHODS
2.1 Types of ﬁlters used for RNA-seq data

Data ﬁlters are routinely used in practice for differential analyses of
RNA-seq data. Most such ﬁlters are applied to data that have been
normalized in some way, rather than directly to the raw counts, to ac-
count for systematic inter-sample biases typical of RNA-seq data, e.g.
differences in library size (Anders and Huber, 2010; Robinson and
Oshlack, 2010) or GC content (Hansen et al., 2012; Risso et al., 2011).
In particular, the Trimmed M-Means library size normalization
(Robinson and Oshlack, 2010) and the normalization included in the
DESeq Bioconductor package (Anders and Huber, 2010) have been
found to be robust methods to correct for library size biases, even in
the presence of widely different library compositions (Dillies et al., 2012).

We consider two broad categories of ﬁlters for RNA-seq data based on
the ﬁltering criterion used: mean-based ﬁlters and maximum-based ﬁlters.
We note that although variance-based ﬁlters are routinely used for micro-
array data (Bourgon et al., 2010), they have not been applied to RNA-seq
data; this is likely due to the small number of replicates available in most
RNA-seq datasets (and thus, the difﬁculty in obtaining accurate estimates
of per-gene variances) and the fact that the variance is assumed to be a
function of the mean under a negative binomial model.

2.1.] M edit—based fil ters In mean-based ﬁlters, genes with mean nor-
malized counts across all samples less than or equal to a pre-speciﬁed
cutoff are ﬁltered from the analysis. Some authors (Sultan et al., 2008)
have also proposed ﬁltering genes with a total read count less than or
equal to a given thresholds; we note that this is equivalent to mean-based
ﬁlters for threshold 3 divided by the number of samples.

In addition to normalized counts, we also consider mean-based ﬁlters
for the RPKM (Mortazavi et al., 2008) measure, which was initially
proposed to simultaneously normalize RNA-seq data for biases due to
library size and gene length. However, we note that it has been shown
that counts, rather than RPKM values, are preferable for the differential
analysis of RNA-seq data (Oshlack and Wakeﬁeld, 2009). For this

reason, after ﬁltering genes with a RPKM mean ﬁlter, raw counts are
used for the subsequent differential analysis. A comparison of differential
analysis methods developed for counts and RPKM values is beyond the
scope of this work.

2.1.2 Maximum—based ﬁlters In maximum-based ﬁlters, genes
with maximum normalized counts across all samples less than or equal
to a pre-speciﬁed threshold are ﬁltered from the analysis. As aforemen-
tioned, in addition to normalized counts, we also consider maximum-
based ﬁlters for RPKM values, which we refer to as a RPKM maximum
ﬁlter.

A generalization of the maximum-based ﬁlter has also been proposed
in the edgeR analysis pipeline (Robinson et al., 2010) based on counts
per million (CPM), calculated as the raw counts divided by the library
sizes and multiplied by one million. Genes with a CPM value less than a
given cutoff (e.g. 1 or 100) in more samples (ignoring condition labels)
than the size of the smallest group are subsequently ﬁltered from the
analysis. To distinguish this approach from the other maximum-based
ﬁlters, we refer to this strategy as a CPM ﬁlter.

We note that maximum-based ﬁlters are not independent ﬁlters as
described by Bourgon et a]. (2010); in particular, for extremely large
ﬁltering thresholds, maximum-based ﬁlters do not guarantee control of
the Type I error rate if P-values are computed using the pre-ﬁlter null
distribution. For the threshold values typically used in practice (e. g. based
on a quantile, or the data-based threshold proposed later in the text), this
is usually not a concern (see Supplementary Fig. S28). Although it may be
difﬁcult to verify that conditional and unconditional P-value distributions
coincide for real data, it may be useful to examine histograms of each
(e.g. as shown in Fig. 3).

2.2 A data-based threshold for maximum-based ﬁlters

For each of the ﬁlter types previously deﬁned, a biologically pertinent
cutoff (or alternatively, number of genes to be ﬁltered) must be chosen; in
practice, arbitrary thresholds are routinely used with little or no discus-
sion of their impact on the downstream analysis. To address this issue, we
propose a data-based choice for the threshold to be used in maximum-
based ﬁlters. The main idea underlying this choice is to identify the
threshold that maximizes the ﬁltering similarity among replicates, i.e.
one where most genes tend to either have normalized counts less than
or equal to the cutoff in all samples (i.e. filtered genes) or greater than the
cutoff in all samples (i.e. non-ﬁltered genes).

To deﬁne this ﬁltering similarity, we begin with some notation. Let yg/
represent the observed normalized read count (e.g. after scaling raw
counts by library size) for gene g in sample j, and let C(j) represent the
experimental condition of sample j, with g e {1, . . . , G} and
j e {1, . . . ,1}. Typically, in the context of differential analyses, the
number of conditions is equal to 2. We denote the full vector of read
counts in a given sample as yj. We now wish to deﬁne a similarity index
between a pair of replicates within the same condition
{(yj,yj,) : 6(1) 2 C(j’)} after binarizing the data for a ﬁxed cutoff s (1 if
ygl- >3 and 0 otherwise). We note that a variety of similarity indices have
been proposed since the early 1900s; however, in a comparison among
a set of similarity indices (see the Supplementary Materials), we
found the Jaccard index (Jaccard, 1901) to be simple, natural and
easy to interpret for the analysis of HTS data. This index is deﬁned as
follows:

J.er yj") = (1)

a
a+b+c
where a, b and c are deﬁned in Table 1. We note that Jx(yj, yi) takes on
values from 0 (dissimilar) to 1 (similar). Because multiple replicates and/
or conditions are typically available in HTS experiments, we extend the
deﬁnition of the pairwise Jaccard index in Equation (1) to a global

 

2147

ﬁre'spzumofpmﬂo'sopeuuopuorq/ﬁdnq

A.Rau et al.

 

Table 1. Deﬁnition of the constants used to calculate the Jaccard simi-
larity index for a pair of samples j and j’ and a given threshold 3

 

 

Sample j
Normalized Normalized
counts >3 counts 5 3
Sample j’
Normalized counts >3 a 1;
Normalized counts 5 3 c d

 

Note: The constant a represents the number of genes with normalized counts greater
than 3 in both samples j and j / and so on.

Jaccard index by averaging the indices calculated over all pairs in each
condition:

my) = meant/«yr y,» :j<j’ and CO) = 60)}. (2)

Using the global J accard index deﬁned in Equation (2) as a measure of
similarity, we now wish to identify the cutoff 3‘ for normalized counts
that corresponds to the greatest similarity possible among replicates, i.e.
the value of 3 corresponding to the maximum value of the global J accard
index:

3‘ = argmaXXny). (3)

In practice, for the calculation of the data-based global ﬁltering threshold
in Equation (3), we calculate the value of the global Jaccard index in
Equation (2) for a ﬁxed set of threshold values and ﬁt a loess curve
(Cleveland, 1979) through the set of points; the value of 3‘ is subsequently
set to be the maximum of these ﬁtted values.

Once the data-driven ﬁlter threshold for normalized counts 3‘ has been
identiﬁed, the subsequent steps to be taken may change for different
applications. To perform an analysis of differential expression between
two experimental conditions, we propose using this threshold 3‘ in a
maximum-based ﬁlter, as deﬁned in Section 2.1.2; in the following, we
refer to this technique as the Jaccardfilter.

2.3 The Bioconductor package HTSFilter

The proposed ﬁltering method is implemented in the HTSFilter pack-
age, currently available as part of the Bioconductor project (Gentleman
et al., 2004) within the statistical environment R (R Development Core
Team, 2009). The HTSFilter package is compatible with a variety of
data classes and analysis pipelines, including matrix and data. frame
objects, the S4 class CountDataSet in the DESeq pipeline (Anders and
Huber, 2010) and the S3 class DGEList in the edgeR pipeline (Robinson
et al., 2010). A package vignette describes the use of the HTSFilter
package within each of these pipelines.

3 RESULTS

In the following, we apply the normalization approach proposed
by Anders and Huber (2010) for mean— and maximum—based
ﬁlters, although other types of normalization may be appropriate
for some data. For gene—by—gene comparisons between two con—
ditions, we illustrate the use of the proposed ﬁlter in conjunction
with the model proposed in the DESeq Bioconductor package
(version 1.8.3), which has been developed to model count data
with a small number of replicates in the presence of

overdispersion (Anders and Huber, 2010); P—values are adjusted
for multiple testing using the BenjaminiiHochberg procedure
(Benjamini and Hochberg, 1995) to control the false—discovery
rate. We note that the ﬁltering method proposed here may also
be used in conjunction with other popular methods, e.g. edgeR
(Robinson et al., 2010). See the Supplementary Materials for
additional discussion of the normalization and statistical testing
methods used in this work.

In practice, there may be some question about the appropriate
point in the analysis pipeline to apply data ﬁlters: Should nor—
malized data ﬁrst be ﬁltered, then normalization factors re—esti—
mated and the model ﬁt (i.e. mean and dispersion parameters
estimated)? Should normalization factors and model parameters
be estimated based on the full data, and the data filtered only at
the end of the analysis pipeline? The difference between the two
options is non—trivial, particularly as the differential analysis
approaches implemented in the DESeq and edgeR packages
both borrow information across genes (whether all or only
those passing the filter) to obtain per—gene parameter estimates.
In this work, we present results based on the application of ﬁlters
applied as late in the pipeline as possible, i.e. after library size and
dispersion parameter estimation; a more detailed discussion of
this issue is included in the Supplementary Materials.

3.1 Description of data

We applied our proposed Jaccard index filter, in addition to the
alternative ﬁlter types described earlier in the text, on the follow—
ing data:

0 Sex-speciﬁc expression of liver cells in human. Sultan et a].
(2008) obtained high—throughput transcriptome sequencing
data from a human embryonic kidney and a B cell line, with
two biological replicates each. The raw read counts and
phenotype tables were obtained from the ReCount online
resource (Frazee et al., 2011).

0 Differential striatal expression between inbred mouse strains.
Bottomly et a]. (2011) performed RNA—seq experiments for
10 biological replicates of the C57BL/6J inbred mouse strain
and 11 for the DBA/2J strain, and the results were com—
pared with those arising from two different microarray plat—
forms. The raw read counts and phenotype tables were
obtained from the ReCount online resource (Frazee et al.,
2011).

o MiTF repression in a human melanoma cell line. Strub et a].
(2011) obtained HTS data to compare gene expression in
a melanoma cell line expressing the Microphtalmia
Transcription Factor to one in which small interfering
RNAs were used to repress Microphtalmia Transcription
Factor, with three biological replicates in each group. The
raw read counts and phenotype tables are available in the
Supplementary Materials of Dillies et a]. (2012).

0 Simulated data. To investigate the effect of the various
filtering methods on downstream results, we developed a
simulation framework as described in Section 3.3.

For the three real datasets (described in further detail in
Supplementary Table S1), gene annotations for Mus musculus
(NCBIM37) and Homo sapiens (GRCh37.p7) were obtained

 

2148

ﬁre'spzumofpmJXO'sopeuuquroiq/ﬁdnq

Data-based filtering for HTS experiments

 

from Ensembl version 67 (Bimey et al., 2004) using the Biomart
tool (Kasprzyk et al., 2004), and the length of each gene in base
pairs was calculated. In the Bottomly, Sultan and Strub data,
~4, 2 and 5% of the genes, respectively, had been retired from
Ensembl; for these genes, RPKM—based ﬁlters were not used.
Readers wishing to examine the complete analyses in detail
may ﬁnd a Sweave document containing commented R code
for the analyses of each of the datasets in the Supplementary
Materials.

3.2 Comparison of filters on real data

For the three real datasets, differential analyses were performed
using a negative binomial model (Anders and Huber, 2010) for
unﬁltered data and after ﬁltering the data using the techniques
described earlier in the text. For the Jaccard index ﬁlter, the
global Jaccard index in Equation (2) was calculated for a range
of threshold values 3, yielding a largely unimodal distribution of
values for all datasets considered (Fig. 1 and Supplementary Figs
S11 and S18). We also note that the data—driven threshold values
3* identified for the Bottomly, Sultan and Strub data were not
equal; in the case of the Bottomly data, the threshold for normal—
ized counts was found to be 14.7, whereas this threshold was
found to be 11.5 for the Sultan data and 103.5 for the Strub
data. These differences in ﬁltering threshold among experiments
are due to both sequencing depth and variability within the data;
in particular, experiments with greater sequencing depth will tend
to have higher ﬁltering thresholds, and those with greater vari—
ability will tend to have lower filtering thresholds. Among the
data considered in our study, the Strub data have the highest
sequencing depth (1.5 x 108) coupled with low intra—condition
variability (minimum correlation among replicates equal to
0.98), and they also have the highest threshold considered here.
On the other hand, the Sultan data have a much lower sequen—
cing depth (1.8 x 106) and thus have a much lower threshold.
For each dataset, the Jaccard ﬁlter was applied with the cor—
responding data—based threshold calculated earlier in the text.
For the alternative mean— and maximum—based ﬁlters for nor—
malized counts and RPKM values, cutoffs were chosen based on
the 15% quantile of the respective criterion. For the CPM filter,
as suggested in the edgeR pipeline Robinson et a]. (2010), genes
with a CPM value <1 in more samples than the size of the
smallest group are subsequently ﬁltered from the analysis.
Among the filters considered, it may immediately be seen in
Figure 2 that in the Strub data, with the exception of the CPM
and Jaccard filters, most of the ﬁlters considered here appear to
be ineffective as they are largely unable to ﬁlter genes with low
levels of expression and small log—fold changes; a similar phe—
nomenon may be observed in the Bottomly and Sultan data
(Supplementary Figs S7 and S14). Although these techniques
are thus unlikely to (incorrectly) ﬁlter truly DE genes, the
number of statistical tests is not markedly reduced, and as such
the power to detect differential expression will remain largely
unchanged as compared with the unﬁltered data. With the ex—
ception of the RPKM—based ﬁlters, all are able, to some extent,
to identify and remove genes contributing to a peak of raw
P—values close to one (Fig. 3 and Supplementary Figs S13 and
S20), a phenomenon due to the discretization of P—values for
small counts; indeed, histograms of raw P—values following the

 

Global Jaccard index
0,905 0 910 0,915 0.920 0,925
I I I

0.900
I

 

 

 

 

 

0,895

1 2 5 1 0 20 50 100 200

Threshold
5 = 14.7

Fig. 1. Global Jaccard index for the Bottomly data calculated for a var-
iety of threshold values for normalized counts, with a loess curve (solid
line) superposed and data-driven threshold value (dotted line) equal to
3‘ = 14.7

application of most ﬁlters appear to be roughly uniformly dis—
tributed under the null hypothesis. In addition, we note that the
proposed Jaccard filter is able to more effectively remove genes
with moderate log base means and small log fold changes (see
Fig. 2). Similar conclusions may be drawn from the volcano plots
shown in Supplementary Figures S8, S15 and S22.

It is also of interest to consider the effect of each filter on the
number of DE genes identiﬁed at various levels of expression; in
Figure 4 and Supplementary Figures S5 and S12, we note that in
all datasets, the Jaccard filter leads to more discoveries at all but
weak levels of expression (i.e. mean expression <10), with this
difference being particularly marked for moderate levels of ex—
pression (i.e. mean expression greater than 50). We note that a
large number of the missed discoveries for the Jaccard ﬁlter at
low levels of expression correspond to genes with zero read
counts in one condition and a small number of read counts in
the other; for example, in the Sultan data, 50.3% of the 449
discoveries among genes with mean normalized read counts
<10 had zero read counts in one of the two conditions.
Among the other filter types, the CPM ﬁlter appears to come
closest to the Jaccard filter, with the remaining ﬁlters performing
similarly.

In considering the overlap of genes ﬁltered using each method
(Supplementary Figs S9, S16 and S23), it is clear that a large
number of genes may be filtered, regardless of the technique
used. However, the Jaccard index is better able to filter a large
number of weakly expressed genes in all three of the datasets
considered here, leading to a more moderate correction for mul—
tiple testing; the direct consequence of this is a larger number of
discoveries at moderate—to—high levels of expression. To deter—
mine whether this advantage is due to the ﬁltering type (i.e. max—
imum) or the threshold used for each (i.e. using the 15% quantile
or the data—based threshold identified by the global Jaccard
index), we consider a set of simulation studies in the next section.

3.3 Simulated data

Data were simulated using a negative binomial model, with par—
ameters chosen based on the Bottomly, Sultan and Strub

 

2149

ﬁle'spzumol‘pmJXO'sopeuuquroiq/ﬁdnq

55,2kgogmoddmmowoxwoagoﬁsambmﬁ

 

. a ‘1

 

 

.
I 3
o
. u .
.. t. .
.o n
o
.
.
.o

 

c

55,2kgogmoddmmowoxwoa‘oﬁsambmﬁ

n
x a
a e
M M
M M
K K
P P
R R

Filter type

 

 

rpkm.mean

rpkm.max

mean

max

cpm

A.Rau et al.

 

ﬁltering genes with a total or mean normalized read count less
than a speciﬁed threshold. However, despite its impact on the
downstream analyses, no clear recommendations have yet been
provided concerning the choice of ﬁltering technique.

Among the ﬁlter types considered here, we have found that
ﬁlters using the maximum normalized count appear to be best
able to correctly ﬁlter genes with low levels of expression and
little evidence of differential expression. In addition, we have
proposed a method to calculate a data—driven and non—pre—
ﬁxed ﬁltering threshold value for normalized counts from repli—
cated RNA—seq data, based on the global Jaccard similarity
index. In particular, our proposed ﬁltering technique was
found to remove from the analysis a large number of genes
with little or no chance of showing evidence of differential
expression, and therefore to increase detection power at moder—
ate—to—high levels of expression through a moderation of the
correction for multiple testing. As such, we recommend that
genes with a normalized count value less than this data—driven
threshold in all samples be filtered from subsequent differential
analyses. We emphasize that the data—driven threshold value
may vary greatly among RNA—seq experiments owing to differ—
ences in sequencing depth and intra—condition variability (see
Supplementary Fig. S31 for the data—based thresholds calculated
on three additional RNA—seq datasets); as such, the threshold
value must be recalculated for each dataset of interest.

The impact of the proposed ﬁltering method has been inves—
tigated here in the context of differential analyses. We anticipate
that it will also be useful in a variety of other applications, e.g.
detecting genes that are specifically expressed in one condition or
ubiquitously expressed across several conditions, which is often a
crucial biological question. In addition, we anticipate that such
ﬁltering will be useful, for example, in co—expression or network
reconstruction analyses to remove genes with low constant levels
of expression. Finally, we note that although this ﬁlter was pre—
sented here for the analysis of RNA—seq data, it can readily be
applied to other types of replicated HTS data, such as CHIP—seq
data.

ACKNOWLEDGEMENTS

The authors thank the three anyonymous reviewers for their
valuable comments and suggestions that helped to considerably
improve the quality of the manuscript.

Funding: This work was supported by the French National
Research Agency (Agence nationale de la recherche) [ANR—09—
GENM—006, Biocart project].

Conﬂict of Interest: none declared.

REFERENCES

Anders,S. and Huber,W. (2010) Differential expression analysis for sequence count
data. Genome Biol., 11, 1728.

Auer,P.L. and Doerge,R.W. (201 1) A two—stage Poisson model for testing RNA—seq
data. Stat. Appl. Genet. Mol. Biol., 10, 1726.

Benjamini,Y. and Hochberg,Y. (199 5) Controlling the false discovery rate: a practical
and powerful approach to multiple testing. J. R. Stat. Soc. Ser. B, 57, 2897300.

Bimey,E. et a]. (2004) An overview of ensembl. Genome Re3., 14, 9257928.

Bottomly,D. et a]. (2011) Evaluating gene expression in C57BL/GJ and DBA/2J
mouse striatum using RNA—seq and microarrays. PLoS One, 6, e17820.

Bourgon,R. et a]. (2010) Independent ﬁltering increases detection power for high—
throughput experiments. PNAS, 107, 95469551.

Canovas,A. et a]. (2010) SNP discovery in the bovine milk transcriptome using
RNA—seq technology. Mamm. Genome, 21, 5927598.

Cleveland,W.S. (1979) Robust locally weighted regression and smoothing scatter—
plots. J. Am. Stat. A3'3'oc., 74, 8297836.

Dillies,M.A. et a]. (2012) A comprehensive evaluation of normalization methods for
Illumina high—throughput RNA sequencing data analysis. Brief. Bioinformatic3,
[Epub ahead of print, September 17, 2012].

Frazee,A.C. et a]. (2011) ReCount: a multi—experiment resource of analysis—ready
RNA—seq gene count datasets. BM C Bioinformatic3, 12, 449.

Gentleman,R.C. et a]. (2004) Bioconductor: open software development for comp—
tuational biology and bioinfomiatics. Genome Biol., 5, 2004.

Hansen,K.D. et a]. (2012) Removing technical variability in RNA—seq data using
conditional quantile normalization. Bio3tati3tic3, 13, 20¢216.

Jaccard,P. (1901) Etude comparative de la distribution florale dans une portion des
Alpes et des Jura. Bull. Soc. Vaadoi3e Sci. Nat., 37, 5477549.

Kasprzyk,D. et a]. (2004) EnsMart: a generic system for fast and flexible access to
biological data. Genome Re3., 14, 1607169.

Labaj,P.P. et a]. (2011) RNA—seq precision in quantitative expression proﬁling.
Bioiiﬁ’ormaticA‘, 27, i3837i381.

Mortazavi,A. et a]. (2008) Mapping and quantifying mammalian transcriptomes by
RNA—Seq. Nat. Met/iod3, 5, 621$28.

Oshlack,A. et a]. (2010) From RNA—seq reads to differential expression results.
Genome Biol., 11, 220.

Oshlack,A. and Wakeﬁeld,M.J. (2009) Transcript length bias in RNA—seq data
confounds systems biology. Biol. Direct, 4, 14.

R Development Core Team. (2009) R: a Language and Environment for Stati3tical
Computing. R Foundation for Statistical Computing, Vienna, Austria. http://
www.R—project.org (16 July 2013, date last accessed).

Ramskold,D. et a]. (2009) An abundance of ubiquitously expressed genes revealed
by tissue transcriptome sequence data. PLoS Compat. Biol., 5, e1000598.

Risso,D. et a]. (2011) GC—content nomialization for RNA—seq data. BMC
Bioiiﬁ’ormaticA‘, 12, 480.

Robinson,M.D. et a]. (2010) edgeR: a bioconductor package for differential
expression analysis of digital gene expression data. Bioinformatic3, 26, 13%140.

Robinson,M.D. and Oshlack,A. (2010) A scaling normalization method for differ—
ential expression analysis of RNA—seq data. Genome Biol., 11, R25.

Sam,L.T. et a]. (2011) A comparison of single molecule and ampliﬁcation based
sequencing of cancer transcriptomes. PLoS One, 6, e17305.

Strub,T. et a]. (2011) Essential role of microphthalmia transcription factor for DNA
eplication, mitosis and genomic stability in melanoma. Oncogene, 30,
231972332.

Sultan,M. et a]. (2008) A global View of gene activity and alternative splicing by
deep sequencing of the human transcriptome. Science, 15, 95(r960.

Wang,L. et a]. (2010) DEGseq: an R package for idenetifying differentially
expressed genes from RNA—seq data. Bioinﬁ)rmatic3, 26, 1367138.

Wickham,H. (2009) ggplot2: Elegant Grapliic3 for Data Analy3i3. Springer, New
York.

 

2152

ﬁle'spzumol‘pmﬂo'sopeuuquroiq/ﬁdnq

