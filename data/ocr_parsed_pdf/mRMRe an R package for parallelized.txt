BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

N.De Jay et al.

 

Table 1. Run-time performances in seconds of mRMRe and
sideChannelAttac/r packages using the CGP dataset

 

 

Package Full MIM mRMR mRMRe.e mRMRe.b
mRMRe 80 23 36 863
sideChannelAttack 158 212 NA NA

 

Note: Benchmarks were performed on a Dell PowerEdge R815 using 8 CPU cores
(out of 48, from 4 X lZ—core, 2.2GHz AMD Opteron) and 12 GB of RAM.

The set of selected features, denoted by S, is then initialized with Xi.
Next, another feature is added to S by choosing the feature having the
highest relevance with the output variable and the lowest redundancy
with the previously selected features, thus maximizing the score q at
step j

q,- = my) 1152 1mm (2)

“ES
This step is repeated until the desired solution length has been attainted.
We have implemented this approach for continuous/ survival and discrete
variables, also referred to as F-test Correlation Difference (FCD) and
Mutual Information Difference (MID) schemes in Table 1 of
(Ding and Peng, 2005), respectively.

Although mRMR is a fast and greedy heuristic, it is not guaranteed to
ﬁnd a global optimal solution should one exist. Alternative feature sub-
sets of equivalent or better quality than the one identiﬁed may exist.
Moreover, the features selected by a single mRMR run are unlikely to
adequately account for the diversity of the biological processes associated
with the phenotype under study.

To alleviate these problems we implemented two ensemble approaches
to generate multiple mRMR solutions in parallel; these two techniques
are referred to as exhaustive and bootstrap ensemble mRMR. The ex-
haustive variant extends the classical mRMR heuristic by initializing
multiple feature selection procedures with the k>1 most relevant fea-
tures. Subsequently, k mRMR solutions are produced in parallel, in
which the ﬁrst selected feature is guaranteed to be different. The pseudo-
code describing the algorithm implementing the exhaustive ensemble
mRMR feature selection is provided in Algorithm 1 in Supplementary
Material.

The bootstrap variant resamples (with replacement) the original data-
set to generate k bootstraps, and classical mRMR feature selection is
performed in parallel for each of the bootstrapped datasets, thus gener-
ating k mRMR solutions. The pseudocode describing the algorithm im-
plementing the bootstrap ensemble mRMR feature selection is provided
in Algorithm 2 in Supplementary Material.

A considerable share of the computational complexity of existing
mRMR packages is due to inefﬁcient computation of the MIM. These,
such as minet (Meyer et al., 2008) and sideChannelAttac/r (Lerman et al.,
2011), compute the MIM completely before performing the mRMR
feature selection. However, only a small portion of the MIM is generally
required to compute mRMR scores (Equations 1 and 2) during the
feature selection process. We accelerated our mRMR implementation
by computing the MI score between features in a lazy-evaluation
manner, computing them only when needed. This signiﬁcantly reduces
the run-time complexity of mRMR and is a critical point for controlling
the computational time of the ensemble variants.

3 CASE STU DY

In this case study, we assess the beneﬁts of using the exhaustive
and bootstrap ensemble mRMR feature selection methods
(referred to as mRMRe.e and mRMRe.b, respectively) by analyz—
ing two recently published pharmacogenomic datasets generated

within the Cancer Genome Project [CGP; (Garnett et al., 2012)]
and the Cancer Cell Lines Encyclopedia [CCLE; (Barretina et al.,
2012)]. In these large datasets of cancer cell lines, the authors
measured sensitivity (IC50) to Irinotecan (Camptothecin), a
therapeutic drug mainly used in colon cancer. This metric was
used to discriminate between resistant and sensitive cell lines.
Similar to Papillon—Cavanagh et a]. (2013), we used CGP as a
training set, whereas CCLE was split in two validation sets:
CCLE COMMON contains cell lines common to both CGP
and CCLE (471), whereas CCLE NEW contains cell lines
absent in CGP (565).

We then implemented ﬁve feature selection methods: (i)
SINGLEGENE and (ii) RANK consist in ranking the features
by correlation with drug sensitivity so as to, respectively, select
the first and the top 11 features; (iii) mRMR is used to select the
most relevant, less redundant set of 11 features associated to drug
sensitivity; (iv) mRMRe.e and (v) mRMRe.b perform multiple
mRMR feature selections in parallel to identify 200 mRMR
solutions using the exhaustive and bootstrap approach, respect—
ively. Feature selection was followed by linear regression model
fitting using the selected features to predict drug sensitivity. For
mRMRe methods, drug sensitivity is predicted by averaging pre—
dictions of the 200 multivariate models corresponding to each
mRMR solution.

To strike a balance between model complexity, considered
here as the number of selected features (solution length), and
prediction performance, we performed 100 resamplings of the
training set and estimated the concordance index (Harrell
et al., 1996) of the resulting predictive model with respect to
feature selection method and solution length (Fig. 1A). As the
concordance index is a generalization of the area under the
receiver—operating characteristic curve, high—performing models
are associated with index values close to 1, and random models
are expected to yield index values close to 0.5. We observed that
mRMRe methods yielded higher performance (Wilcoxon signed
rank test P <0.001, see Supplementary Table S1), especially for
small (3 5) solution lengths. As expected, the gain in perform—
ance rapidly diminished with increasing solution length
(Supplementary Fig. S1). We consequently selected 15 as the
solution length, exhibiting the most balance between model com—
plexity and performance (Fig. 1B). In addition, we computed the
variance of the concordance index over multiple resamplings
(Fig. 1B and Supplementary Fig. S2) and observed that the clas—
sical and ensemble mRMR variants produced lower variance
when compared with RANK or SINGLEGENE. Variance was
much lower for ensemble mRMR techniques when compared
with classical mRMR techniques for small (3 5) solution lengths.
However, no difference was observed for larger solution lengths
(Supplementary Fig. S2).

In addition to performance assessment diversity (Tsymbal
et al., 2005) and stability (Guzman—Martinez and Alaiz—
Rodriguez, 2011; Kuncheva, 2007) of the mRMRe, feature
selection techniques implemented were investigated
(Supplementary Fig. S3). Although RANK and mRMR select
30 different genes during each resampling of the training set, the
mRMRe techniques identify multiple, possibly diverse, mRMR
solutions in parallel. In fact, we observed that, on average,
mRMRe.e selects 210 distinct features shared between the 200
distinct mRMR solutions (Supplementary Fig. 83A), whereas

 

2366

ﬁm'spzumofpmﬂo'sopeuuopuorq/ﬁdnq

55,2\Ewogmoddmmowoio~&o:~=£¢o~m\

xmuE mocmEoucoo

x09: moszoEoo

 

 

xqu 8:350:00 S32

 

N.De Jay et al.

 

Kittler,J. et al. (1998) On combining classiﬁers. IEEE Trans. Pattern Anal. Mach.
Intell., 20, 2267238.

Kuncheva,L.I. (2007) A stability index for feature selection. In: AIAP'07:
Proceedings of the 25th conference on Proceedings of the 25th IAS TED
International Multi—Conference. pp. 3907395, Anaheim, CA, USA.

Lerman,L. et al. (2011) Side channel attack: an approach based on machine learn—
ing. In: COSADE 2011, second International Workshop on Consecutive Side—
Channel Analysis and Secure Design. Center for Advanced Security Research
Darmsmdt, Darmstadt, Germany.

Meyer,P.F. et al. (2008) minet: a R/Bioconductor package for inferring large
transcriptional networks using mutual information. BMC Bioinﬁ)rmatics, 9,
461.

Papillon—Cavanagh,S. et al. (2013) Comparison and validation of genomic pre—
dictors for anticancer drug sensitivity. J. Am. Med. Inform. Assoc., 20, 5977602.

Tsymbal,A. et al. (2005) Diversity in search strategies for ensemble feature selection.
Inf. Fusion, 6, 83798.

 

2368

/3.IO'S[BIIInOfp.IOJXO"SOIJBLUJOJIIIOIq/ﬂdnq

