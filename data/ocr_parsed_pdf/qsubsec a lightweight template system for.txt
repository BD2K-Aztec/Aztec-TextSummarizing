Advance Access Publication Date: 3 December 2015

Bioinformatics, 3218), 2016, 1267—1268
doi: 10.1093/bi0informatics/btv698

Applications Note

 

 

Data and text mining

qsubsec: a lightweight template system for
defining sun grid engine workflows

Alastair P. Droop*

MRC Medical Bioinformatics Centre, University of Leeds, Clarendon Way, Leeds LSZ 9NL, UK

*To whom correspondence should be addressed.
Associate Editor: Jonathan Wren

Received on 10 September 2015; revised on 2 November 2015; accepted on 23 November 2015

Abstract

Summary: The Sun Grid Engine (SGE) high—performance computing batch queueing system is
commonly used in bioinformatics analysis. Creating re—usable scripts for the SGE is a common
challenge. The qsubsec template language and interpreter described here allow researchers to eas—
ily create generic template definitions that encapsulate a particular computational job, effectively
separating the process logic from the specific run details. At submission time, the generic template
is filled in with specific values. This system provides an intermediate level between simple script—

ing and complete workflow management tools.

Availability and implementation: Osubsec is open—source and is available at https://github.com/

alastair—droop/qsubsec.
Contact: a.p.droop@leeds.ac.uk

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

High-performance computing (HPC) is fast becoming an essential part
of all but the smallest bioinformatics analyses. Increasingly, shared
HPC resources are available for research use. Although a great asset
to bioinformatics, these systems are usually shared across multiple dis-
ciplines and are utilized by multiple simultaneous users. Such multi-
user, multi-application systems require scheduling software to ensure
fair use of the resources between multiple users and to make sure that
the resources are optimally utilized. These schedulers demand re-
searchers submit their analyses in a specific format with suitable meta-
data on memory and time limits. The Sun Grid Engine (SGE: https://
arc.liv.ac.uk/trac/SGE) is a popular version of such a system.

To make full use of the available HPC, researchers must adapt
their analysis scripts to work with the associated scheduling systems.
Frequently, this involves breaking down large or time consuming
analyses into smaller steps to make better use of resource limitations
imposed by the HPC, or to parallelise independent tasks. Ordered
collections of individual computational steps constitute a protocol
or workflow.

Workflow management software, for example Taverna
Workbench (Wolstencroft et (11., 2013), Pegasus (Deelman et (11., 2015)
and Galaxy (Giardine et (11., 2005), aims to simplify the creation,

(63 The Author 2015. Published by Oxford University Press.

management and execution of workﬂows. These systems attempt to be
complete data management and integration tools. As such, they allow
users to search online data repositories, download relevant data and
provide sets of common analysis tools (Deelman et (11., 2009). These
systems ultimately attempt to simplify common bioinformatics ana-
lyses but there can be several major hurdles: installation and mainten-
ance are not trivial, workﬂow definitions often require knowledge of
languages such as CWL lhttps://github.com/common-workﬂow-lan
guage/common-workﬂow-language) or SCUFL (Oinn et (11., 2004),
and the user is conceptually removed from the running code.
Furthermore, the multi-application nature of HPC often precludes in-
stallation of complex domain-specific software suites; in these cases, a
full workﬂow management suite might well not be available.

In many cases, these complex management suites are unnecessary,
and a simpler framework for defining a workflow element is required.
I here describe qsubsec, a Python-based mini-language that separates
the core logic of a computational task from the specific data for a sin-
gle instance without the overhead of a workﬂow management system.
This enables users to easily write SGE job scripts in a generic form
that is processed at submission time into a specific computational
task. This greatly simplifies the process of defining and maintaining
computational pipelines on general-purpose HPC systems.

1267

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/Iicenses/by/4.0/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

/310‘sreumo[p10}xo‘sopeuHOJIItotq/ﬁdnq

Supplcrncntar) l\4atcrial

Li and Dui‘bin, 2009

Figure 1

 

Figure 1

/310'SIBano[pJOJxo"sotJBuiJOJutotqﬂ:dnq

