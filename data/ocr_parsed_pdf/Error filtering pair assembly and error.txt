Bioinformatics, 31 (21 ), 2015, 3476—3482
doi:10.1093/bioinformatics/btv401

Advance Access Publication Date: 2 July 2015
Original Paper

 

Sequence analysis

Error filtering, pair assembly and error
correction for next-generation sequencing reads
Robert C. Edgar1'* and Henrik Flyvbjerg2

1'I'Iburon, CA 94920, USA and 2Department of Micro- and Nanotechnology, Technical University of Denmark, DK-
2800 Lyngby, Denmark

*To whom correspondence should be addressed.
Associate Editor: Inanc Birol

Received on March 26,2015; revised on May 28, 2015; accepted on June 27,2015

Abstract

Motivation: Next—generation sequencing produces vast amounts of data with errors that are diffi—
cult to distinguish from true biological variation when coverage is low.

Results: We demonstrate large reductions in error frequencies, especially for high—error—rate
reads, by three independent means: (i) filtering reads according to their expected number of
errors, (ii) assembling overlapping read pairs and (iii) for amplicon reads, by exploiting unique
sequence abundances to perform error correction. We also show that most published paired
read assemblers calculate incorrect posterior quality scores.

Availability and implementation: These methods are implemented in the USEARCH package.
Binaries are freely available at http://drive5.com/usearch.

 

Contact: robe rt@d rive5.com

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Next-generation sequencing (NGS) machines produce reads of
lengths tens to thousands of bases. In an NGS read, the base call at
position i is assigned an estimated error probability p, represented as
an integer-rounded Phred (quality) score Q,:—10 log“) pl. Typical
base call error rates for current machines range from 0.1 to 10%
(Glenn, 2011). When coverage is high, error detection and correc-
tion can be achieved by aligning reads to each other (dc nor/o assem-
bly) or to a closely related well-known sequence (reference-based
assembly). When coverage is low or a complete set of reference se-
quences is not available, sequencing error is difficult to distinguish
from true biological variation. Errors can be reduced by quality fil-
tering, i.e. by discarding or truncating reads with low-quality base
calls, by merging overlapping paired-end reads and, in the case of
amplicon reads, by clustering.

Quality filtering is often used in data analysis of next-generation
reads but is rarely regarded as a method in its own right which
should be designed and validated as a separate step. Published meth-
ods for quality filtering typically use ad-laoc criteria such as impos-
ing a maximum on the number of bases with less than a given Q
score (Bokulich et (11., 2013). That article focuses on filtering but

does not attempt to measure error rates. Other articles describing
analysis pipelines for amplicon reads (e.g. Kozich et (11., 2013;
Schloss et (11., 2011) report the mean error rate but do not consider
the tail of the error distribution, which we believe to be important
due to the spurious clusters and consequent inflated estimates of di-
versity (spurious ‘rare biosphere’) obtained when the tail is not ad-
equately controlled (Huse et (11., 2010).

When paired-end reads overlap, an improved prediction of the
sequence in the overlapping region can be obtained by aligning the
forward and reverse read. Previously published paired-read mergers
include SHERA (Rodrigue et (11., 2010), FLASH (MagoE and
Salzberg, 2011), PANDAseq (Masella et (11., 2012), COPE (Liu
et (11., 2012) and PEAR (Zhang et (11., 2014). Of these, only
PANDAseq included quality filtering in addition to merging.

Error correction methods for amplicon pyrosequencing reads in-
clude PyroNoise (Quince et (11., 2009), AmpliconNoise (Quince
et (11., 2011) and an unnamed method (Reeder and Knight, 2010)
that uses a greedy algorithm based on an abundance sort. These
methods all require flowgrams and therefore cannot be applied to
other technologies such as Illumina. Single-linkage pre-clustering
(Huse et (11., 2010) and the pre-clustering method of (Kozich et 111.,

(C7 The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 3476

/310‘srcumo[p10}xo‘sopcuHOJHtotq/ﬁdnq

Error filtering, pair assembly and error correction for N68 reads

3477

 

2013) also use abundance differences between closely related se—
quences to correct errors.

In this work, we use the expected number of errors in a read as a
measure of quality for filtering and show that this method is effect—
ive at reducing error rates, especially in the tail of the distribution.
We show how to calculate the posterior quality scores when read
pairs are merged and demonstrate that most previous merging meth—
ods calculate incorrect scores. We also describe and validate
UNOISE, a new amplicon error—correction method which can be
applied to any type of NGS read.

2 Methods
2.1 Quality filtering

Filtering is commonly used in amplicon sequencing applications
such as marker gene metagenomics (Edgar, 2013) and immune sys—
tem repertoire analysis (Jiang et al., 2013) where it is generally not
possible to identify reads derived from the same template sequence,
ruling out error detection and correction by assembling contigs as
typically done in genome sequencing.

2.2 Expected errors

For a given read, the expected number of errors (E) is defined to be
the mean number of errors that would be observed in a very large
collection of sequences where the error rate at each position is given
by its quality score, assuming that errors at different positions occur
independently. We prove below that E is the sum of error
probabilities:

E:Zp,:ZlO’Q‘/1°. (1)

E is a real rather than integer value and may be less than 1. We will
also show that the most probable number of errors is well approxi—
mated by floor(E), i.e. the largest integer S E.

A natural approach to quality filtering is to impose a maximum
value Emax on the expected number of errors so that reads with
high E (low quality) are discarded. Motivated by the goal of sup—
pressing reads with larger numbers of errors, we could also con—
sider setting a threshold on the probability P+(k)171.. . 17,) that a
read of length L has at least k errors. For example, 97% is a com—
monly used identity threshold in marker gene sequencing (Huse
et al., 2010), and we might therefore wish to discard reads which
have a relatively high probability of having 23% errors. It turns
out (proof below) that a P+ filter is equivalent to an Emax filter to
a good approximation.

The threshold Emax : 1 is a natural choice as the most probable
number of errors is zero when E < 1, and we therefore used
Emax : 1 for the tests reported here.

2.3 Proofs

For an informal, intuitive proof that E is the sum of error probabil—
ities, consider a large collection of M reads, all having the same set
of Q scores. Let K, be the total number of errors found at position i.
Then by definition 17,: K, /M and hence K,: M 17,. The total number
of errors K in all positions is:

K : ZiKi : 2iMPi

and in the limit of very large M the expected number of errors (E) is,
by definition, the mean over the collection:

E : K/M : (1/M)Z(MP,)= Zn. (2)

For a more formal analysis, we obtain the probability of exactly
k errors by summing over all possible ways of distributing k errors
into L positions, i.e. over all combinations of k positions selected
from L. The probability of a given combination occurring is the
product of the probabilities for each position, i.e. 17, for an error or
(1 — 17,) for a correct call. This gives the so—called Poisson binomial
distribution (Wang, 1993):

Brois(/€;P1....PL) I

1 1 L
E Z-~ 5ith.HPf/<1—z>z>1"“-
11 1:1

k1:0k2:0 kL:0 ‘ :

Here, k, is zero or one, giving the number of errors at position i.
The Kronecker delta

6/2. L 12,

1:1

is zero unless k equals the sum of [6,, in which case it is one.

By summing over the possible number of errors, which ranges
from 0 to L, and rearranging the sums in Equation (3), we again
find that the expected number of errors is the sum of error
probabilities:

L
(k) I ZkBPois(/€;P1 PL)

(4)

We consider the regime E < L to cover all cases of practical
interest. A theorem due to Le Cam (1960) states that in this limit the
Poisson binomial distribution is well approximated by the simpler
and more familiar Poisson distribution with parameter E:

. ‘E’: L
Brod/311717  PL) —> POM/CE) : [kg for  —> 0- (5)

The Poisson distribution satisfies the following relation:

Pois(k;E) : E (6)
Pois(k — 1;E) 16'

It follows from Equation (6) that as long as k < E, Pois(k; E) in—
creases with k, and it decreases with k for k >E. Thus, Pois(k; E)
has its maximal value as function of k at floor(E) (i.e. the largest
integer g E), and floor(E) is therefore the most probable number of
errors when E <<L. It follows from Equation (5) that when E < L,
the probability Bpoiss(k) that k errors occur is a function only of E
and k, and P+(k) : Z ,2 k P(/) is therefore also a function of E and
k. A filter which applies a threshold to P+(k) is therefore equivalent
to an Emax filter. The equivalent value of Emax can be calculated
from k and the threshold value of P+ using Equation (5 ).

2.4 Posterior error probability for a merged base call
The most probable correct base call and posterior error probability
for an aligned pair of bases is calculated as follows. Define 17,, and 173,

ﬁm'spzumol‘pmyo'sopcuuqurotq/ﬁdnq

Su pplcmcntar} Equations 58—5 1 2

Supplcrncntar) Equation S21

Supplcrncntar) Equation 526

So pplcmcntar} Equation 528

So pplcmcntar} Equation S29

Equation (10)

Fig. 51
Fig. 52
Fig. 53
Fig. 55
Fig. 57
Equation

2011

2010

Fig. 2

M i s rn ate 'n.

Fig. 1 Supplcrncntar) Equation S22

llaas (7/ LIL,

Kozich (7/ LIL, 2013

Edgar, 2013

Edgar, 2013

Edgar (7/ LIL, 2011

Merged read

Equation (9)

Ed gar,
3'3

 

Equation (8)

/310'S[BHJDO[pJOJXO'SOpBLUJOJulolq/ﬂdnq

Edgar, 2010

(laporaso (7/ LIL, 2010

Supplementar)

 

l\4aterial

Edgar, 2013

Edgar, 2010 Kozich (7/ LIL, 2013

Tables 1 2

Figure 3

Supplementar) Fig. 5 10

Table 1

Kozich (7/ LIL (2013)

Bokulich (7/ LIL, 2013
Edgar (7/ LIL, 2011 Flgul‘c 3

Re\eillaud a L21. (2014) Supplcmcnmn Fig. 52

/310'S[BHJDO[pJOJXO'SOpBLUJOJulolq/ﬂdnq

3480

R. C.Edgar and H. Flyvbjerg

 

Table 1. Summary of results on the test datasets

 

 

Dataset Method Err. rate (%) Reads >3% errs.
MOCK1 (Fwd) Raw reads 1.2 737 660 79 481
QIIME/F 0.99 737 134 70 319
USEARCH/F 0.22 392 917 2687
UNOISE 0.092 611 176 1042
MOCK1 Merged 2.4 737 660 196 035
QIIME/MF 2.0 737 102 165 642
PANDAseq 1.9 717 064 157 797
USEARCH/MF 0.23 186 695 562
UNOISE 0.046 354 220 491
MOCK2 (Fwd) Raw reads 0.54 7 420 628 237 274
QIIME/F 0.33 7 033 106 73 228
USEARCH/F 0.19 2 912 861 401
UNOISE 0.009 6 565 970 251
MOCK2 Merged 0.35 7 420 628 144 584
PANDAseq 0.34 7 393 489 138 297
QIIME/MF 0.33 7 352 181 126 909
USEARCH/MF 0.19 6 736 514 1609
UNOISE 0.016 7017279 1226
PHIX (Fwd) Raw reads 0.25 1 201 502 8179
QIIME/F 0.68 1 201 435 8179
USEARCH/MF 0.20 1 044 123 3945
PHIX Merged 0.22 1 094 091 4681
QIIME/MF 0.22 1 094 091 4681
PANDAseq 0.22 1 139 895 4375
USEARCH/MF 0.17 983 832 550

 

Fwd indicates forward reads only. Method is one of raw reads (no process-
ing), UNOISE, QIIME/F (QIIME quality ﬁltering only), merged (merge by
USEARCH only, no ﬁltering), USEARCH/F (USEARCH ﬁltering by
Emax = 1), USEARCH/MF (USEARCH merge and ﬁltering by Emax = 1),
PANDAseq (merging and ﬁltering with default parameters) and QIIME/MF
(QIIME quality ﬁltering of reads merged by USEARCH). Reads is the number
of reads after any merging and/or ﬁltering. Err. rate is the number of measured
errors divided by the total number of bases and >3% errs. gives the number
of reads With at least 3% measured errors. UNOISE assumes amplicon data,
so is not applicable to PHIX.

5 0 bp overlaps having exactly one mismatch. The sets were gener—
ated such that all pair—wise combinations of Q occur with both
matches and mismatches. The merged reads from each program
were used to construct tables giving the posterior Q for all possible
combinations of forward Q, reverse Q and agreement (match or
mismatch). Of the tested programs, only SHERA correctly calcu—
lated the posterior Q scores in the aligned region. It was readily ap—
parent from the tables that FLASH and PEAR use simple heuristics:
FLASH takes the maximum Q score at a position with a match and
the difference QmaX—Qmin at a position with a mismatch, while
PEAR uses the sum of the Q scores at a position with a match and
the minimum at a position with a mismatch. We were unable to de—
duce the rules used by COPE, noting that source code is not pro—
vided, contrary to the paper’s statement that the software is open
source. However, it is clear from the reverse—engineered tables that
the posterior Q scores generated by COPE are sometimes badly
wrong (Supplementary Table 51).

3.7 PANDAseq false—positive merges

We noticed that PANDAseq sometimes merged read pairs that did
not overlap, i.e. generated false—positives merges. To investigate this
systematically, we generated simulated read pairs containing unre—
lated random sequences with all Q scores set to 20 (pcorrect: 0.99).

Table 2. Results of merging, filtering, discarding singletons and
denoising on the MOCKZ dataset

 

 

 

Pairs? Filter Ab. Den. Reads Uniques OTUs
Fwd only (No) 1 n 7420628 1414383 378 537
Y 7420628 439597 52 452
2 n 6158319 152086 203
Y 6 158 319 5055 66
Em: 1 1 n 2912 861 147539 110
Y 2912861 141 35
2 n 2803435 38113 29
Y 2803 435 51 18
Merged (N0) 1 n 7371 922 888 089 177 972
Y 7371 922 278 196 5939
2 N 6592326 108493 110
Y 6592 326 1688 42
Emu: 1 1 N 6728314 410712 75
Y 6728 314 22 443 39
2 N 6407439 89837 534
Y 6407439 619 159

 

Reads that were predicted to be chimeric by UCHIIVIE were discarded prior
to this analysis (because chimera detection is a specialized task, and chimeras ac-
count for a large majority of the unique amplicon sequences, obscuring the
underlying biological diversity). The reads contain 21 species, plus a few con-
taminants (Edgar, 2013). A17. is minimum abundance (1 = all reads, 2 = single-
tons discarded), Den. is n (no denoising) or Y (UNOISE), Reads is the number
of reads after processing, Uniques is number of unique read sequences after pro-
cessing and OTUs is the number of clusters at 97% identity (made by running
UCLUST on the unique sequences sorted by decreasing abundance).

PANDAseq merged 74% of these pairs with implied overlap lengths
ranging from 2 to 26 bases. The other tested mergers generated no
false positives on this dataset.

3.8 PANDAseq quality filtering

PANDAseq implements quality filtering by setting a min—
imum value for the geometric mean (t) of the posterior probabilities
17,c°"ect: 1 — 17, that the base calls are correct. The default value of
the threshold is t: 0.6, corresponding to 17 : 0.4 or Q : 4. The m0—
tivation for this measure of quality is not stated by the authors and
was not clear to us, and we also noted that a threshold of 17 : 0.4
would allow many errors in low—quality reads. We therefore asked
whether using a more stringent t threshold could achieve
comparable filtering performance to EmaX: 1. To answer this,
we tuned t to retain as close as possible to the same number of
reads as USEARCH with EmaX: 1. On all three datasets,
PANDAseq with the tuned threshold produced fewer reads with
zero and one errors and more reads with two or more errors than
USEARCH, showing that Emax is a superior measure of quality
(Supplementary Fig. S3).

4 Discussion

We introduced the expected number of errors as measure of read qual—
ity. We showed that imposing a maximum value on expected errors is
an effective quality filter. We showed that most current paired read
mergers do not correctly calculate the posterior quality scores and
that PANDAseq will align unrelated random pairs, potentially causing
a high rate of false—positive merges in biological data.

We suggest that measurements of Q score accuracy and the correl—
ation of E with the true error rate should be a standard step in any

ﬁm'spzumol‘pmyo'sopeuuqurotq/ﬁdnq

Fora-ward reads. before altering Head of distribution after processing

3:

3

'33333

233333

t-lumljner of read:

133333

-.i_Ired e rror‘

933

33333

M

U

Excted errors.

EJLJNOISE IUSEARCHII‘UIF EQIIME Panclaseq

Reverse reads before fiitering (d)

b

H umber of read .-

.ured error

a:

5030

M e

13 13
Expected errors. Error-5 per read

 

3482

R. C.Edgar and H. Flyvbjerg

 

Kozich,].]. et al. (2013) Development of a dual-index sequencing strat-
egy and curation pipeline for analyzing amplicon sequence data on the
MiSeq illumina sequencing platform. 1417171. Environ. Microbiol., 79,
5 112—5 120.

Le Cam,L. (1960) An approximation theorem for the Poisson binomial distri-
bution. Paciﬁc]. Math., 10, 1181—1197.

Liu,B. et al. (2012) COPE: An accurate k—mer-based pair-end reads connection
tool to facilitate genome assembly. Bioinformatics, 28, 2870—2874.

Magoc,T. and Salzberg,S.L. (2011) FLASH: fast length adjustment of short
reads to improve genome assemblies. Bioinformatics, 27, 295 7—2963.

Masella,A.P. et al. (2012) PANDAseq: paired-end assembler for illumina se-
quences. BMC Bioinformatics, 13, 31.

Quince,C. et al. (2009) Accurate determination of microbial diversity from
454 pyrosequencing data. Nat. Methods, 6, 639—641.

Quince,C. et al. (2011) Removing noise from pyrosequenced amplicons. BMC
Bioinformatics, 12, 38.

Reeder,]. and Knight,R. (2010) Rapidly denoising pyrosequencing amplicon
reads by exploiting rank-abundance distributions. Nat. Methods, 7, 668—669.

Reveillaud,]. et al. (2014) Host-speciﬁcity among abundant and rare taxa in
the sponge microbiome. ISME ]., 8, 1198—1209.

Rodrigue,S. et al. (2010) Unlocking short read sequencing for metagenomics.
PLoS One, 5.

Schloss,P.D. et al. (2011) Reducing the effects of PCR ampliﬁcation and
sequencing artifacts on 165 rRNA-based studies. PLoS One, 6, e27310.

Wang,Y.H. (1993) On the number of successes in independent trials. Stat.
Sin., 3, 295—312.

Zhang,]. et al. (2014) PEAR: a fast and accurate Illumina paired-end read mer-
ger. Bioinformatics, 30, 614—620.

/310'S[BHmOprOJXO'SOtJBLUJOJIItth”Zduq

