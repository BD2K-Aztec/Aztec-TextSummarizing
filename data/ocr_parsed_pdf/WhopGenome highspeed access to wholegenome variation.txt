BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

U. Wittelsbiirger et al.

 

Table 1. Comparison overview

 

 

WhopGenome Seinner VariantAnnotation

Average timea

100 000 single SNPs 0 min 32 s 15 min 34 s 1 h 56 min 12 s

Matrix of 1000 0min 6 s 0 min 29 s 1 min 27 s
Average lines/seconda

100 000 single SNPs 3126.66 107.02 14.34

Matrix of 1000 16677.23 3460.28 1144.00
Estimated time for entire fileb

Reading single SNPs 15min 47 s 7 h 48 min 18 s 57 h 21 min 53 s

Matrix of 1000 2 min 58 s 14 min 16 s 43 min 9 s
Pre-ﬁltering Y N N
Result formatsc R,V,M,L Y,Y,Y,N Y,N,N,Y N,N,Y,Y
Read via HTTP/FTP Y N Y
Create indices Y Yd Ne

 

Timings ran on an Intel Core—i7 3.5GHz, 16GB RAM, Linux kernel 3.11 using R 3.0.1.
A minimal stand—alone C + + program takes 54.9 s to read the entire reference ﬁle, indicating an average rate of 53 952 lines / s as

the performance baseline.
A11 timings rounded to nearest full second.
"Average over ﬁve runs.

bEstimate using factor of 29.62182 : 2962182 total lines in ﬁle / 100000 in measurement.

CSupported result formats: Raw string, Vector, SNP Matrix, List.

dSeinner can create indices only on compressed ﬁles; WhopGenome can compress, too.

6Not specifically for VCF ﬁles.

To link genomic variation to pedigree data, WhopGenome
includes support for .PED files (a simple text—based table
format used, e.g. by PLINK). Users can load these data into a
matrix, modify it, save it back and locate individuals with certain
family relationships. This is mainly useful for selecting samples
or correlating them with phenotypes, populations or other
information.

When reading from VCF files with WhopGenome, a typical
workﬂow would be as follows. The function VCF_open() creates
a handle to the VCF file. This handle is required to select samples
(individuals), genomic regions and ﬁltering steps, as well as for
reading data.

Users can choose to get their results in a variety of R data
types. Besides reading each data field independently, it is also
possible to read only information on single—nucleotide poly—
morphisms (SNPs) and store the data ﬁelds for each SNP in a
vector. Especially useful for sliding window analyses are the
matrix variants, which can return SNP genotypes in four differ—
ent representations, either numeric or textual. To maximize speed
gains, we wrote a dedicated read function for each result format.
If speciﬁc areas of research would beneﬁt from additional data
representations in R, we will implement these in future versions
of WhopGenome.

After setting a region by specifying a chromosome (or contig)
and start and end positions, the next read call will return data for
the ﬁrst variant within that region. Active preﬁlters exclude lines
depending on a list of user—deﬁned rules. Rules are speciﬁed with
simple function calls in R, but are run in compiled C4—t—.

Each rule tests a speciﬁc property, either the value of a column
(e.g. QUAL column’s phred score) or the value of a key—value
pair in a column (e. g. INFO column’s allele frequency key). The
tests can compare numerical values to reference values or against

ranges, or test for the presence of a key (e.g. H2 in INFO
indicates that a variation is found in HapMap2).

The .PED file support for pedigrees, Gene Ontology queries,
UCSC Genome Browser database queries and Bioconductor
genome annotation is implemented in R. All time—critical code
is written in C/C+ +. To avoid losing time by allocating
memory, many read functions expect an R variable as a param—
eter in which to store the results. This improves speed dramatic—
ally especially if the data are read into matrices.

3 EVALUATION

We compared WhopGenome in terms of speed, features and ease
of use with two other R packages that make use of Tabix:
Seinner and VariantAnnotation (Table 1). We did not make
a comparison with Rplinkseq, as Rplinkseq could not be
compiled without manual code changes and because using
Rplinkseq requires extensive manual interaction with the exter—
nal PLINK software (Purcell et al., 2007).

As reference ﬁle, we chose the 1000 Genomes Project’s
chromosome 1 consensus VCF ﬁle, describing >2.9 million
variants in 1094 individuals, stored in 49 GB of text, compressed
down to 1.4 GB. Seinner requires additional annotation in the
VCF ﬁles, which is not present in the 1000 Genomes Project files.
We thus ran all benchmarks on the same, preprocessed ﬁle for
better comparability (to preprocess the input ﬁle for Seinner,
we needed to uncompress the original file and install additional
software).

Although all three packages rely on the Tabix library, their
usage and feature sets differ substantially. For both benchmark
types, VariantAnnotation was slowest, whereas WhopGenome
was the fastest. All programs provide matrix representations of

 

414

ﬁm'spzumol‘pmﬂo'sopeuuopuorq/ﬁdnq

WhopGenome

 

genotypes, but only WhopGenome offers four alternative geno—
type codings in matrix form. Also, its preﬁltering capabilities
have no direct equivalent in the other packages. With regards
to the learning curve, we consider our solution to be easier to
understand than VariantAnnotation, while Seinner’s limited
feature set makes its usage somewhat simpler, but also much
less powerful.

The VCF functionality of WhopGenome has been successfully
used by the population genomics software PopGenome (Pfeifer
et al., 2014), which implements a broad range of population
genetics analyses for individual loci, sliding windows and
genomic feature sets such as exons.

Besides its ability to efﬁciently read VCF and other
Tabix—indexed files, WhopGenome can also index and access
FASTA—formatted sequence files efﬁciently. With its auxiliary
feature set covering pedigree, genome annotation and fast prefil—
tering, we expect WhopGenome to substantially accelerate the
development and application of genomic and population
genomic analyses in R.

ACKNOWLEDGEMENTS

WhopGenome makes use of Tabix and FaIdx by Heng Li, of
BGZF written by Bob Handsaker and modiﬁed by Heng Li and
of zlib by Jean—loup Gailly and Mark Adler.

Funding: This work was supported by the German Research
Foundation [DFG grants EXC 1028 and CRC 680 to M.J.L.].

Conﬂict of interest: none declared.

REFERENCES

1000 Genome Project Data Processing Subgroup. (2009) The sequence alignment/
map format and samtools. Bioinformatiux', 25, 207872079.

1000 Genomes Project Analysis Group. (2011) The variant ca.ll format and vcftools.
Bioinformatiax‘, 27, 215G258.

Carbon,S. et a]. (2009) Amigo: online access to ontology and annotation data.
Bioinformatiax‘, 25, 2887289.

Gentleman,R.C. et a]. (2004) Bioconductor: open software development for com—
putational biology and bioinformatics. Genome Biol., 5, R80.

Kent,W.J. et a]. (2002) The human genome browser at UCSC. Genome Rex, l2,
99(r1006.

Li,H. (2011) Tabix: fast retrieval of sequence features from generic tab—delimited
ﬁles. Bioinﬂnmatics, 27, 7187719.

Obenchain,V. et a]. (2014) Variantannotation: a bioconductor package
for exploration and annotation of genetic variants. Bioinformatiux', 30,
207G2078.

Pfeifer,B. et a]. (2014) Popgenome: an efﬁcient swiss army knife for population
genomic analyses in R. Mol. Biol. Evol., 31, 192971936.

Purcell,S. et a]. (2007) Plink: a tool set for whole—genome association and popula—
tion—based linkage analyses. Am. J. Hum. Genet., 81, 559575.

R Core Team. (2013) R: A Language and Environment for Statistical Computing.
R Foundation for Statistical Computing, Vienna, Austria.

 

415

ﬁm'spzumol‘pmﬂo'sopeuuopuotq/ﬁdnq

