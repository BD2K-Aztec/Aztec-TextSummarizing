ORIGINAL PAPER

Vol. 27 no. 14 2011, pages 1915-1921
doi:10. 1 093/bioinformatics/btr303

 

Sequence analysis

Advance Access publication May 17, 2011

Sensitive and fast mapping of di-base encoded reads
Farhad Hormozdiarilal, Faraz HachZ’T, S. Cenk Sahinalp2, Evan E. Eichler1

and Can Alkanla*

1Department of Genome Sciences, Howard Hughes Medical Institute, University of Washington, Seattle,
WA 98195—5065, USA and 2School of Computing Science, Simon Fraser University, Burnaby, BC, V5A 186, Canada

Associate Editor: Alex Bateman

 

ABSTRACT

Motivation: Discovering variation among high-throughput
sequenced genomes relies on efficient and effective mapping
of sequence reads. The speed, sensitivity and accuracy of read
mapping are crucial to determining the full spectrum of single
nucleotide variants (SNVs) as well as structural variants (SVs) in the
donor genomes analyzed.

Results: We present drFAST, a read mapper designed for di-base
encoded ‘color-space’ sequences generated with the AB SOLiD
platform. drFAST is specially designed for better delineation of
structural variants, including segmental duplications, and is able to
return all possible map locations and underlying sequence variation
of short reads within a user-specified distance threshold. We show
that drFAST is more sensitive in comparison to all commonly used
aligners such as Bowtie, BFAST and SHRiMP. drFAST is also faster
than both BFAST and SHRiMP and achieves a mapping speed
comparable to Bowtie.

Availability: The source code for drFAST is available at
http://drfast.sourceforge.net

Contact: calkan@u.washington.edu

Received on March 2, 2011; revised on April 30, 2011; accepted on
May 11, 2011

1 INTRODUCTION

Genomic variation between individuals or across species ranges
from single nucleotide polymorphisms (SNPs) and structural
variation to larger chromosomal rearrangements (Alkan et (11., 201 1).
Thanks to the improvements in sequencing technologies, large-scale
genome variation studies such as the 1000 Genomes Project (1000
Genomes Project Consortium, 2010; Mills et (11., 2011) have made it
possible to better characterize normal human genomic variation and
disease (Lupski et (11., 2010; Ng et (11., 2010; Vissers et (11., 2010).
The development of high-throughput sequencing (HTS)
technologies has changed the landscape of genome research. The
ﬁrst commercially available HTS technology was from Roche/454
Life Sciences (Margulies et (11., 2005) and was used to sequence the
genome of James Watson (Wheeler et (11., 2008). It was followed by
other ‘second generation’ sequencing platforms that generate orders
of magnitude more data for a fraction of the cost, such as Illumina
Genome Analyzer (Bentley et (11., 2008) and AB SOLiD (McKernan

 

*To whom correspondence should be addressed.
lThe authors wish it to be known that, in their opinion, the ﬁrst two authors
should be regarded as joint First Authors.

et (11., 2009). Third-generation sequencing platforms are now under
development, and HeliScope (Pushkarev et (11., 2009) and PacBio
RS (Eid et (11., 2009) were recently made available; however, for
the time being, they produce reads with higher error rates.

Analysis of genomic variation using sequencing starts with
mapping the randomly sheared and ideally uniformly sampled
DNA fragments from the genome. Different properties and error
models of sequence reads generated by these technologies require
the development of specialized read mapping algorithms for
each platform for accurate read alignment and characterization
of genomic variants. This becomes more complicated for short
reads: due to repeats and duplications in genomes, they can map to
multiple locations with equal sequence identity. Leveraging the high
sequence coverage and randomly selecting one ‘best’ location when
a read cannot be unambiguously placed has proven to be effective in
discovering SNPs and small indels in relatively non-complex areas
of the genome (Li et (11., 2008a, 2009). However, structural variation
detection sensitivity is shown to beneﬁt from tracking all map
locations of the reads including suboptimal alignments (Hormozdiari
et (11., 2009; Lee et (11., 2009; Mills et (11., 201 1), and characterization
of segmental duplications is extremely resistant against mapping the
reads uniquely (Alkan et (11., 2009; Sudmant et (11., 2010).

Read mappers can be broadly classiﬁed into two categories
according to the method used to index the reference genome
using either hash tables or sufﬁx arrays [compressed through the
Ferragina—Manzini index (Ferragina et (11., 2000) with the use of
the Burrows-Wheeler Transform (Burrows et (11., 1994)]. Hash-
based aligners such as MAQ (Li et (11., 2008a), SHRiMP (Rumble
et (11., 2009), mrFAST (Alkan et (11., 2009), mrsFAST (Hach et (11.,
2010) and BFAST (Homer et (11., 2009) have poorer performance
in comparison to sufﬁx array-based aligners [e.g. BWA (Li et (11.,
2009), Bowtie (Langmead et (11., 2009)] when dealing with short
reads; however, their relative performance increases considerably
and surpasses the sufﬁx array-based aligners when the read length
and thus the number of errors (mismatches or indels) that need to
be tolerated increase.

In this article, we describe a hash-based read mapping algorithm
named ‘di-base read fast alignment search tool’ (drFAST) designed
for the di-base encoded color-space reads generated with the SOLiD
platform. The main advantage of di-base encoding is increased base
call accuracy due to each base being represented by two ‘colors’.
This helps in differentiating base calling errors (color-space errors)
from real sequence variance, thereby increasing the reliability of
detected genomic variants. We show that mapping speed of drFAST
is higher than other SOLiD-enabled hash-based read mappers,
BFAST (Homer et (11., 2009) and SHRiMP (Rumble et (11., 2009),

 

© The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 1915

112 /3.Io's[Bumo[pJOJXO'sorwurJOJurorqﬂ:dnq urorr papeolumoq

91oz ‘Og anﬁnv uo ::

EHormozdiari et al.

 

A

mum-m human."

A@T©T©G@@ @ '6 (9" 
A©T©T©G®p g9 ® (D C

G A

Madln taint-space

nudinlmqux.

Fig. 1. Translating the read from color-space to letter-space may result in a
new sequence different from the original read if there exists a color-space
error.

and comparable to sufﬁx array-based aligner Bowtie (Langmead
et (11., 2009). In addition, drFAST was able to map more reads than
all the tools we benchmarked. Furthermore, drFAS T achieves 100%
sensitivity if the maximum allowed edit distance is less than L/ k,
where L is the sequence length and k is the length of the k-mers
stored in the hash table (k is set to 12 by default). Coupled with
its ability to store all map locations within a user-speciﬁed distance
threshold and its paired-end (PE) mapping capabilities, drFAST can
be used to characterize segmental duplications (Alkan et (11., 2009;
Sudmant et (11., 2010) and increase sensitivity of structural variation
discovery using VariationHunter (Horrnozdiari et (11., 2009, 2010).

2 METHODS

For each read sequenced from a donor genome, a mapping algorithm aims
to ﬁnd locations in a ‘reference genome’ where the read can be aligned
exactly or within a small number of errors in the form of substitutions or
insertions/deletions (indels). drFAST is a read mapper designed for color-
space reads generated with the SOLiD platform, and ﬁnds ‘all’ possible
map locations for each read of length r in the reference genome within a
user-speciﬁed e mismatches.

drFAS T is a seed-and-extend type algorithm and it builds an index of the
reference genome by creating a collision-free hash table for all subsequences
of length k (k-mers) of the reference genome. To map the reads, it ﬁrst
partitions each read to (2+ 1) k-mers and searches for each of these k-mers
in the hash table. For each hit in the hash table, it then tests if the remainder
of the read can be ‘extended’ by aligning to the reference genome starting at
the determined hit location.

How exactly this is done is described below.

2.1 Genome transformation

The sequence data produced with the SOLiD platform are in color-space
format (S: {0, 1,2,3}*), where the reference genome sequence is in letter-
space (i.e. R: {A, C, G, T}*). Each color encodes two adjacent base pairs in
the read, and each base pair is represented by two colors. Transformation
of reads from color-space to letter-space before mapping may result in
generating incorrect reads where base call errors exist, as depicted in Figure 1.
To avoid such incorrect decoding of reads, we translate the reference genome
to color-space and use this transformed genome to create the index.

2.2 Indexing the reference genome

drFAST creates a collision-free hash table for all k-mers in the reference
genome. Each entry of this index is a 2-tuple r=(s,L), where s is a k-
mer from the genome (k: 12 by default) and L is a list of all positions
of the genome starting with this subsequence. The index is maintained in
lexicographically sorted order with respect to their subsequences. For a
reference genome of length n, the upper bound for the size of its index
is 0(n); but due to the repetitive nature of genome sequences, the index size
is smaller in practice.

2.3 Indexing the reads

drFAST partitions each read of length r into 2+ 1 non-overlapping blocks of
length k where e is the user-speciﬁed maximum Hamming distance allowed
for mapping. In the case where k: Lr/(e+1)j, the pigeon hole principle
guarantees that at least one of these blocks maps to the reference genome
with no errors. Similar to the indexing described in Section 2.2, drFAST
creates an index of blocks computed from all reads in 2-tuples 1', =(s,L,),
where L, denotes the list of reads that include the k-mer s.

2.4 Searching

drFAST compares the reference genome index keys with read index keys to
ﬁnd the locations in the reference genome where a read can be mapped with at
most 2 errors. For each partition of the read, drFASTﬁrst ﬁnds the locations of
the reference genome with the identical subsequence (same keys). It then tries
to extend the location through sequence alignment of the reads to the genome,
and reports those locations where the Hamming distance of the alignment
is at most 2. A simple loop scans both indices (both are lexicographically
sorted); if the keys of the indices are the same (same subsequence) for entries
1' = (s, L) in the reference and 1', = (s, L,) in the read index. Then all entries in
L are candidate map locations for each read entry in L,, and thus the entire list
L should be compared with L, (extending step).

Similar to mrsFAST (Hach et (11., 2010), drFAS T performs ‘all-to-all’ list
comparison using a recursive divide-and-conquer strategy that guarantees
cache obliviousness; i.e. asymptotically minimizing the number of costly
cache misses (Frigo et (11., 1999).

2.5 Extending

The ﬁnal step is to verify if each read can be aligned to candidate map
locations within the user-speciﬁed error threshold 2. drFAS T aims to align the
color-space read (Sc) to the letter-space sequence (S1). The aligning process
can be considered as ﬁnding a letter-space read S j that aligns to S1, and highly
similar to Sc if transformed to color-space:

argmaxsl/ (Sim(Sl,S,’)+Sim(Sc, CCG(S;))) (1)

where CC G is the function that transforms the letter-space to color-space
as deﬁned by the SOLiD technology, and Sim is the similarity function.

Maximizing the similarity between two sequences is equivalent to
minimizing their distance. We use Hamming distance (i.e. the number of
mismatches) as the distance measure between two sequences.

argminsl/ (Diff(S,, 3;) +Diff(Sc, CCG(S,’))) (2)
To address the problem, drFAST introduces two efﬁcient methods.

2.5.] Method 1: dynamic programming Let Z: {A,C,G, T}, and (7,0’ 6
Z, and let Score(i,:r) indicate the optimal alignment of two subsequences
Sl[1..i] and Sc[1..i] (from the ﬁrst to the i-th character) while a is the last
character of S We then deﬁne

Score(i,0')=(i(S,[i],J)-l—minui(Score(i—1,a/)+ti(Sc[i],CCG(a/J))) (3)

where (1(a, b)=1 if a 751), and (1(a, b): 0 otherwise.
The detailed version of Equation (3) is as follows:

Score(i—l,/A/)+ti(Sc[i],/ oi)
Score(i—1,/C/)+(i(Sc[il./l/)
Score(i—l,/G/)-l—ti(Sc[ 112/)
Score(i—l,/T/)+(i(Sc [11,/3)

Score(i, ’A’)=d(Sl[i],’A’)+min

l

Score(i—1,/A/)+(i(Sc[i],/l/)
Score(i—1,/c/)+zi(s,r [i],/ 0/)
Score(i—1,/G/)+(i(Sc[il./3/)
Score(i—l,/T/)+(i(Sc [11,/26

Score(i, ’C’)=d(Sl[i],’C’)+min

Score(i—l,/A/)+ti(Sc[i ,/2/)
Score(i—l,/C/)+ti(Sc[i 13/)
Score(i—l,/G/)+zi(Sc[i JO)
Score(i—l,/T/)+ti(Sc[i ,/l/)

Score(i, ’G’)=d(Sl[i],’G’)+min

 

l
l
l
l

 

1916

112 /3.Io's[Bumo[pJOJXO'sorwurJOJurorqﬂ:dnq urorr papeolumoq

91oz ‘Og anﬁnv uo ::

drFAST

 

A I] 2 2 2 0—11 3 3 1
c 2 2 2 2 /2 1\ 3 1/3
G 1 2 2/0/ 2 2 \2/3 3
T 1 Pic—,0 2 2 2 1 3 3

®©©®®©©@

Fig. 2. The dynamic programming table generated to align ATTGAATCA
and 30121321 (0 = blue, 1 = green, 2 = yellow, 3 = red). The arrows represent
the best alignment between the two sequences.

Score(i—l,/A/)+d(Sc i],/3/)
Score(i—l,/C/)+d(Sc 11,/2‘)
Score(i—i,/<3/)+zl(s,r ],/1/)
Score(i—l,/T/)+d(Sc i],/O/)

The minimum value of Score(lSll,’A’), Score(lSll,’C’), Score(lSll,‘G‘)
and Score(lSll,’T’) is the Score of the best translation of Sc to S;.

Figure 2 shows an example of aligning a letter-space and a color-space
sequence using the dynamic programming described in Equation (3). The
minimum value in the last column represents the score of the best alignment.
Using the backtracking pointer, we can then recover the best alignment
sequence.

Score(i, ‘T‘) =d(Sl[i],‘T‘)+min g

l

[
[
[
[

REMARK 1. The dynamic programming formulation in Equation (3) willﬁnd
the optimal solution to the objective function in Equation (2) if the costs of
mismatches and read errors are equal to one.

REMARK 2. Dynamic programming described in (3) can be modiﬁed to
handle any cost function for mismatches and read errors.

Note that the Equation (3) uses Hamming distance but it can be easily
generalized for edit distance to allow indels.

Score(i— 1 ,j— 1 ,a/)-l—d(S,: [i], CGG(aa‘))-l—d(S,[i],a)
Score(i , j , a) = min Score(i— 1 ,j,a/)+d(s, [11,0)
Score(i,j— 1 ,0")+tl(Sc [i]. CGG(aa/))

2.5.2 Method 11: transformation-based detection The second method is
based on the theoretical design aspect of color-space reads (McKernan et al.,
2009). A string of colors c1c2c3 . . .ck can also be treated as transformations.
For example, C 102 can be written as f2(fo(fl (C ))) where the transformation of
the colors is applied one after the other. This speciﬁc transformation converts
C to G, acting as color 3 (C 102=C3=G). For any other base pair, color
string 102 will behave exactly as color 3.

The set of color operations is isomorphic to the ‘Klein Four Group’
(Armstrong, 1988; McKernan et al., 2009). The Klein Four Group is the
symmetry group of a rectangle, which has four elements: identity, vertical
reﬂection, horizontal reﬂection and a 180° rotation. In other words, given
the four bases in the corners of a rectangle, each color operation has a one-
to-one correspondence with one of the Klein Group elements (Table 1). The
Klein Four Group is closed under its elements meaning that if a b are two
elements of this group ae9b and b69a (ae9b means a followed by b) is also
an element of the this group. It also has associative, identity, reverse and
commutative properties. This means that any sequence of color operations
can be considered as one color operation.

We use this property of the color-space reads to detect mismatches. Let
two sets of color operations of the same length exist (c 1 ...ck and r1 ...rk) with
different starting color (c 1 75 r2). For both sets, if any two consecutive colors
are replaced with their equivalent (closure property) starting from left-hand
side, you will end up with one at the end. If the last color matches with no
intermediate matching colors then these two operations show a mismatch
of length k— 1. To illustrate this, consider two color operations 313 and
100. For simplicity, we also consider a leading base C. After applying the
color operations, strings GTA and AAA will be generated, respectively. It

Table 1. Applying color transformation ‘3’ (left) is the same as applying
180° rotation (right)

 

 

A C T G
G T C A

 

 

 

 

 

 

 

 

 

 

Table 2. Addition table code for strings of colors

 

 

69 0 1 2 3
0 0 1 2 3
1 1 0 3 2
2 2 3 0 1
3 3 2 1 0

 

can be seen that the last base pair generated using both operations is A and
intermediary base pairs are not matching. These two sets of operations have
the same transformation. Thus although they generate different sets of base
pairs in middle, the ﬁnal ‘product’ is the same character.

THEOREM 1. Let c = c1c2c3ck be a k-color substring of a read aligned with
the corresponding color-space reference r = r1 r2 r3 rk. Then c encodes an
isolated (k— 1)-base change if and only if the base position preceding c is
not a variant, and the following two equations hold under the ColorAddition
(Table 2):

k k
2c.- =21-
j:1 j:1
For all ifrom 1 to k— 1:

i i
E 01752 ’1
1:1 j:1

We use Theorem 1 as the basis of our validation function (i.e. extending
step). If there is a color mismatch between the read and the reference
genome, we consider the next e+1 colors to test if there exists any same
color transformation of size at most e+ 1 between the read and the genome.
Considering a window of limited length, this sometimes may cause incorrect
classiﬁcation of a long stretch of mismatches as two independent read error
calls. We reﬁne such calls at the ﬁnal step.

3 ADDITIONAL FEATURES

Parallelization: an embarrassingly parallel wrapper for drFAST
can be easily written to split the reads into smaller ‘chunks’ (~1—5
million reads per ﬁle) and align on cluster nodes. This approach is
the best practice because:

(i) drFAST requires < 700 MB to load the genome and its index
and only a total of ~ 1.3 GB of memory to map 1 million reads
to the genome.

(ii) Mapping of each read is independent from mapping the others
(except in the case of PE sequences where both ends need to
be processed in the same chunk).

PE mapping: SOLiD, like most other HTS technologies, can
generate PE sequences. A pair of PE sequences are generated
from the preﬁx and sufﬁx of the same sheared DNA fragment,
thus they can be used to increase mapping accuracy and discover
structural variation (Alkan et al., 2011; Mills et al., 2011). Current

 

1917

112 )310's[Bumo[pJOJXO'sorwurJOJurorqﬂ:dnq urorr papeolumoq

91oz ‘Og anﬁnv uo ::

EHormozdiari et al.

 

implementation of drFAST supports tracking the PE information,
enabling direct use of VariationHunter for structural variation
(Hormozdiari et al., 2009) and transposon insertion (Hormozdiari
et al., 2010) discovery, as well as NovelSeq (Hajirasouliha et al.,
2010) for characterization of novel sequence insertions.

4 RESULTS

To measure the performance of drFAST, we compared its two
variants to popular color-space read mappers currently available.

Benchmarked soﬁware:

0 drFAST-DP (Dynamic programming variant) (version 0.0.0.2);
0 drFAST-CT (Color transformation variant) (version 0.0.0.0);

0 BFAST (Homer et al., 2009) (version 0.6.4);

0 Bowtie (Langmead et al., 2009) (version 0.12.0);

0 SHRiMP (Rumble et al., 2009) (version 2.0.1);

0 SOCS (Ondov et al., 2008) (version 2.0.3);

0 Mapreads (McKernan et al., 2009) (version 2.4.1); and

0 PerM (Chen et al., 2009) (version 0.3.3);

Parameters: we used the following parameter settings for these
mappers:

0 drFAST: e=2,3 (error threshold for different runs).
0 BFAST: parameters recommended in the BFAST manual.

0 Bowtie: n,v = 2,3 (error threshold for different runs); -a (for
reporting all); -S (output in SAM format); -C (color-space
mapping).

0 SHRiMP: -m 1 (score 1 for match); -i -1 (score -1 for mismatch)
-x -1 (score -1 for color-space error); -U (ungapped alignment)
-0 10000 (maximum number of alignments for a read); -N 1
(number of threads); -h 96% (396% alignment identity).

0 SOCS: -x 0 (number of bases to trim); -s 2 (mismatch
sensitivity); -t 4 (mismatch tolerance); -m 0 (maximum number
of alignments for a read, 0 indicates to report all); -T 1 (number
of threads); -1 yes (consider the lower case bases in genome).

0 Mapreads: S = 0 (color-space mapping); M = 2 (number of
mismatches allowed); A = 2 (count adjacent mismatches as
one mismatch); Z = 10000 (maximum number of alignment
for a read).

0 PerM: —seed S20 (full sensitivity for two SNPs); -v 4 (number
of mismatches).

We used the same parameters (for reporting ‘all’ mapping
locations) when available to ensure a fair comparison.

Note that BWA and MAQ are not considered here since they
ignore the ﬁrst two characters of SOLiD reads.

Data, reference genome and computing power: we used both
simulated and real datasets for comparisons. We simulated three
sets, each with 4 million reads of length 50bp sampled randomly
from chromosome 1 of human reference genome (NCBI build 35)
as follows:

0 Set 1: we transformed the reads to color-space with no color
errors and no mismatches.

Table 3. Performance results of all tested color-space read aligners on
simulated data with error threshold of two mismatches

 

 

 

 

Dataset Mapper Time Map Reads
(min) locations mapped (%)
drFAST-DP 65 138715908 100
drFAST-CT 40 137483484 100
Set 1 BFAST 88 8803840 96.1
Bowtie V = 2 17 25581176 99.4
Bowtie n = 2 67 168307651 99.4
SHRiMP 414 13961155 99.8
SOCS 45 13357519 100
Mapreads 50 55 569 848 100
PerM 17 14441796 96.2
drFAST-DP 42 37652313 100
drFAST-CT 26 36458468 100
Set 2 BFAST 101 8098581 98.0
Bowtie V = 2 13 9738234 60.8
Bowtie n = 2 31 57550920 61.9
SHRiMP 519 11977512 99.8
SOCS 90 12909860 100
Mapreads 31 21749155 100
PerM 15 12679070 98
drFAST-DP 47 76588622 100
drFAST-CT 32 75 970911 100
Set 3 BFAST 105 8982132 97.4
Bowtie V = 2 16 11030554 49.4
Bowtie n = 2 43 70508 835 51.66
SHRiMP 472 11859215 99.8
SOCS 96 9780960 100
Mapreads 37 29799473 100
PerM 15 13140561 97.5

 

In the case of PerM, we allowed for mapping with up to four mismatches as
recommended by its developers, yet its sensitivity failed to reach 100%. Reads are
simulated from human reference genome build 35 (chromosome 1). Set 1: no errors;
Set 2: color errors; Set 3: substitutions. Values in bold show alignments with 100%
sensitivity, higher value implies more sensitivity in the reported alignment.

0 Set 2: reads are transformed with two color errors. To achieve
this, we transformed the reads to color-space and then changed
the color of two arbitrarily selected non-consecutive positions.
Note that if two color errors are consecutive, this might make
it impossible to distinguish a read error from a SNP.

0 Set 3: generated with no color errors but one SNP.

In addition, we randomly selected 1 million (50bp long) reads
from publicly available color-space reads generated from the
genomes of NA18507 (McKernan et al., 2009) (SRX004555),
NA10847 (SRX008164) and NA12156. We used the human
reference genome (NCBI build 35, unmasked) as the reference
genome in all our experiments. The benchmarking results we report
are performed on a server with 64 bit Intel Xeon processor and 8 GB
of RAM.

Time, accuracy and sensitivity results: we give the comparison
results for all the mappers above with respect to the proportion
of the reads that have at least one map location on the
reference genome (sensitivity), total number of map locations found
(comprehensiveness) and time needed to map the reads.

 

1918

112 )310's[Bumo[pJOJXO'sorwurJOJurorqﬂ:dnq urori papeolumoq

91oz ‘Og isanV uo ::

drFAST

 

Table 4. Performance comparison on simulated datasets between drFAST-
DP, drFAST-CT and Bowtie where error threshold is set to three mismatches

Table 5. Number of mapping locations reported by mrsFAST for the same
set of simulated reads in letter-space

 

 

 

 

 

 

Dataset Mapper Time Map Reads Dataset Mapper Time Map Reads
(min) locations mapped (%) (min) locations mapped (%)
drFAST-DP 88 364601231 100 Set 1 mrsFAST 20 135 450 193 100
Set 1 drFAST-CT 75 363472241 100
Bowtie V=3 60 56407732 99-4 Set 3 mrsFAST 20 75 115 629 100
Bowtie n=3 101 252735117 99.4
drFAST-DP 42 118053 818 100
Set 2 drFAST_CT 45 113349 741 100 locations than mrsFAST, where the sensitivities of both aligners
Bowtie V=3 45 23365 015 99_4 are 100%. The reason drFAS T can ﬁnd more mapping locations
Bowtie n=3 50 111931387 99.4 for SOLiD reads compared with the corresponding Illumina reads
is because drFAST could map a read like T0000 to two different
drFAST-DP 47 215274860 100 positions with base pair contents TTTT, and also CCCC when one
Sat 3 drFAST'CT 50 215261940 100 color error is ‘corrected’. This is not the case with letter-space reads
BOWtie V=3 48 28321746 99'4 generated by a platform like Illumina Genome Analyzer. Although
Bowtie n=3 75 137015425 99.4

 

Values in bold show alignments with 100% sensitivity, higher value implies more
sensitivity in the reported alignment.

Table 3 shows the results on simulated datasets with error
threshold of 2 (color errors and mismatches), except in the
case of PerM where we allowed up to four mismatches due to
recommendations of its developers. drFAS T maps all the reads from
simulated datasets back to the reference genome very efﬁciently.
The closest competitor to drFAST appears to be Bowtie, which is, in
general, slower than drFAST-CT and is not 100% sensitive. Although
Bowtie with a parameter setting of v = 2 seems to map each read to
more locations than drFAST, when no substitutions are present (Set
1), or a single color error is added (Set 2), this is simply due to Bowtie
not being stringent on the number of errors it permits disregarding
the parameter setting; we noticed that there are mapping locations
with more than ﬁve color errors.

When the reads involve a nucleotide substitution (Set 3), the
number of mapping locations are lower than that of drFAST. What
is more interesting is the number of reads that can be mapped to
the reference genome. It seems like Bowtie can map at most 61.9%
of the reads even when they include a single color error (Set 2), in
contrast, drFAST (both variants) map 100% of the reads. When the
errors are in the form of nucleotide substitutions, the proportion of
reads mapped by Bowtie drops to 51.66%.

Since Bowtie was the closest competitor to drFAS T, we performed
another experiment on the same datasets by increasing the error
threshold to 3 (Table 4). Interestingly for this setting, the proportion
of reads mapped by Bowtie is 99.4%, almost matching the 100%
mapping sensitivity of drFAST. However, both in terms of time and
the number of map locations, drFAS T (both variants) perform better
than Bowtie, especially when errors (Set 2 for color errors and Set
3 for nucleotide errors) are present.

As all three sets are generated from chromosome 1 with at most
two errors added, a sensitive mapper should be able to map all
reads to chromosome 1 when the error threshold is set to 2. In
order to experimentally check the accuracy of all locations found
by drFAST, we simulated the corresponding Illumina reads (letter-
space) and aligned to chromosome 1 using mrsFAST. As seen in
Table 5 for Sets 1 and 3, drFAST ﬁnds slightly more mapping

it would not be correct to arbitrarily select one ‘version’ above the
other, or returning both alignments as possibilities, we propose to
correct such artifacts by incorporating the base pair quality values.
This problem will arise only in polyN regions, and thus, we propose
to disable error correction of polyN reads where the base quality
value of the ﬁrst base is sufﬁciently high (i.e. q > 30).

BFAST and SHRiMP results are not presented for the three real
datasets (Table 6) due to: (i) in our experiments, BFAST terminated
with error in indexing step; (ii) SHRiMP requires 16GB of main
memory for alignment. Furthermore, both programs are slower than
drFAST or Bowtie. As a result, we compared drFAST with Bowtie,
SOCS, Mapreads and PerM with an error threshold of 2 (Table 6)
and we compared drFAST with Bowtie (closest competitor) with
an error threshold of 3 (Table 7). In ﬁve out of the six cases,
drFAST maps signiﬁcantly more reads, and to substantially more
locations, in comparable time. The performance of the two programs
are comparable only for NA18507 for n = 2, in terms of mapped
reads; however, drFAST-CT is slightly faster on this dataset.

We also compared the amount of memory used by each program
when mapping 1 million reads to the human reference genome
assembly (Table 8).

One important issue to note is that the drFAS T aligner is aimed at
SV/CNV inference and it does not return mapping quality values,
which are still essential for accurate SNP detection. However,
drFAST also returns ‘best’ map locations for PE and mate pair reads
in addition to all possible discordant conﬁgurations where ‘best’ is
deﬁned as the mapping with the lowest Hamming distance and with
span size closest to the library average. Future releases of drFAST
will have the capability of returning mapping quality for these best
map locations, which will effectively increase the appeal of drFAS T,
and users will be able to use it for both structural variation discovery
through multimapping PE and mate pair reads, and SNP discovery.
Until this feature is available in drFAST, one may need to run other
aligners in parallel to discover SNPs.

5 CONCLUSION

This is an exciting time for genomics research. The amount of
available (1000 Genomes Project Consortium, 2010) and anticipated
(Genome 10K Community of Scientists, 2009) sequence data
now arms us to expand our understanding human variation,

 

1919

112 )310's[BumoIpJOJXO'sorwurJOJurorq”:dnq urori papeolumoq

91oz ‘Og isanV uo ::

EHormozdiari et al.

 

Table 6. Performance comparison on real datasets between drFAST-DP,
drFAST-CT, Bowtie, SOCS and PerM on 1 million randomly selected reads
from three different sequencing experiments

 

Table 8. Memory required by each software to map 1 million 35 base reads
to human reference genome. The memory requirement increases with the
number of reads and/or the read length; this increase is typically linear with
the increase in the number of base pairs in the dataset

 

 

Dataset Mapper Time (min) Map Reads
locations mapped (%) Mapper Memory usage (GB)
drFAST-DP 114 189276027 36.8 drFAST-DP 1.3
drFAST-CT 54 149362540 35.6 drFAST-CT 1.3
NA18507 Bowtie V=2 21 64092233 27.8 BFAST Z 10
Bowtie n = 2 63 202948323 35.2 Bowtie 4.5
SOCS 320 21081941 35.3 SHRiMP 16
Mapreads 80 17032680 37.3 SOCS 25a
PerM 76 10068 062 35 .3 PerM 2
Mapread 2 8b

 

drFAST-DP 200
drFAST-CT 100
NA10847 Bowtie V = 2 84
Bowtie n = 2 91

667928813 47.1
512599230 45.9
280928112 38.0
270996634 36.0

SOCS 420 53668622 44.8
Mapreads 140 39589079 48.5
PerM 100 20699 652 44.8

 

drFAST-DP 136
drFAST-CT 91
NA12156 Bowtie V=2 99
Bowtie n = 2 99

491158791 33.5
440317111 32.5
329916108 25.0
318621596 23.7

SOCS 400 38246530 31.2
Mapreads 110 22182469 35.1
PerM 140 10798496 31.2

 

We set the error threshold to 2 bp for all aligners, except PerM, where we set the threshold
to four as per the PerM developers suggested. We then removed the alignments with
more than 2bp mismatches for comparison purposes.

Table 7. Performance comparison on real datasets between drFAST-DP,
drFAST-CT and Bowtie on 1 million randomly selected reads from three
different sequencing experiments. We set the error threshold to 3 bp

 

Dataset Mapper Time Map Reads
(min) locations mapped (%)

 

drFAST-DP 154 309994599 41.5

 

 

NA18507 drFAST-CT 61 302237779 40.5
Bowtie V=3 63 145473 423 37.1
Bowtie n=3 78 290357005 36.35
drFAST-DP 300 1121281408 52.1

NA10847 drFAST-CT 141 1092259727 51.6
Bowtie V=3 182 565114739 47.8
Bowtie n=3 76 270885 799 35.8
drFAST-DP 310 655648 865 42.4

NA12156 drFAST-CT 120 639667174 39.5

Bowtie V=3 187
Bowtie n=3 98

585191747 34.6
318527434 23.6

 

disease susceptibility and genome evolution. Although there are
inherent accuracy and bias problems associated with different
sequencing platforms (Smith et al., 2008), we can also leverage the
different ‘strengths’ of these technologies to increase conﬁdence and

 

3We set the memory usage of SOCS to 5 GB.
bWe set the memory usage of Mapreads to 8 GB.

comprehensiveness of SNP (Nothnagel et al., 2011) and structural
variation (Mills et al., 2011) discovery.

For species where a reference genome is available as in human,
mapping sequence reads to this reference assembly is the ﬁrst step
in genome analysis. Sensitivity and accuracy, as well as the speed of
read alignment, are crucial for precise characterization of genomic
variants. To this end, many mapping algorithms were developed
(Alkan et al., 2009; Hach et al., 2010; Homer et al., 2009; Li
et al., 2008a, b, 2009; Rumble et al., 2009) focusing mainly on the
Illumina Genome Analyzer data, and very little effort was devoted
to analyze color-space reads generated with the SOLiD platform
(Homer et al., 2009; McKernan et al., 2009; Rumble et al., 2009).
The main limitation of the SOLiD-aware read aligners is that they
were not optimized for structural variation detection [except for
SHRiMP (Rumble et al., 2009), which is more powerful in mapping
to more complex areas of the genome], and they are unusable
for segmental duplication analysis due to their unique mapping
approach (Alkan et al., 2009). On the other hand, by tracking all
possible map locations and underlying sequence variation, drFAST
provides an opportunity to better access and increase ‘mappability’
in repeat and duplication-rich areas of the genome that are known
to harbor much structural variation (Kidd et al., 2008). Although
the sensitivity of drFAST is higher than the other aligners, we also
demonstrate speed enhancements of both dynamic programming
and color transformation versions. Through its readiness to be
integrated to VariationHunter (Hormozdiari et al., 2009) for more
sensitive SV discovery, to NovelSeq (Hajirasouliha et al., 2010) to
characterize novel sequence insertions, and usability for segmental
variation detection (Alkan et al., 2009). drFAST is an important
step forward for recovering additional genetic variation from di-base
encoded color-space sequencing.

ACKNOWLEDGEMENTS
 is a Howard Hughes Medical Institute Investigator.

Funding: Natural Sciences and Engineering Research Council of
Canada (NSERC to S.C.S. in parts); Bioinforrnatics for Combating
Infectious Diseases (BCID to S.C.S. in parts); Michael Smith
Foundation for Health Research grants (to S.C.S. in parts); US
National Institutes of Health (grants HG004120 and HG005209 to
BEE.)

 

1 920

112 )310's[BumoIpJOJXO'sorwurJOJurorq”:dnq urori papeolumoq

91oz ‘Og isanV uo ::

drFAST

 

Conﬂict of Interest:  is an SAB member of the Paciﬁc
Biosciences.

REFERENCES

A1kan,C. et al. (2009) Personalized copy number and segmental duplication maps using
next-generation sequencing. Nat Genet, 41, 106171067.

A1kan,C. et al. (2011) Genome structural variation discovery and genotyping. Nat Rev.
Genet, 12, 3637376.

Armstrong,M. (1988) Groups and Symmetry. Springer, New York, p. 53.

Bentley,D.R. et al. (2008) Accurate whole human genome sequencing using reversible
terminator chemistry. Nature, 456, 53759.

Burrows,M. et al. (1994) Ablock sorting lossless data compression algorithm. Digital
Equipment Corporation Technical Report 124.

Chen,Y. et al. (2009) PerM: efﬁcient mapping of short sequencing reads with periodic
full sensitive spaced seeds. Bioinformatics, 25, 251L2521.

Eid,J. et al.(2009) Real-time DNA sequencing from single polymerase molecules.
Science, 323, 1337138.

Ferragina,P. et al. (2000) Opportunistic data structures with applications. In Proceedings
of the 41 st Annual Symposium on Foundations of Computer Science ( F OCS 2000),
IEEE Computer Society Press, pp. 39W398.

Frigo,M. et al. (1999) Cache-oblivious algorithms. In 40th Annual Symposium on
Foundations of Computer Science. IEEE Computer Society, New York, NY,
pp. 2857297.

Genome 10K Community of Scientists (2009) Genome 10K: a proposal to obtain whole-
genome sequence for 10 000 vertebrate species. J. Hered, 100, 659$74.

1000 Genomes Project Consortium (2010) A map of human genome variation from
population-scale sequencing. Nature, 467, 106171073.

Hach,F. et al. (2010) mrsFAST: a cache-oblivious algorithm for short-read mapping.
Nat Methods, 7, 5767577.

Hajirasouliha,l. et al. (2010) Detection and characterization of novel sequence insertions
using paired-end next-generation sequencing. Bioinformatics, 26, 127771283.
Homer,N. et al (2009) BFAST: an alignment tool for large scale genome resequencing.

PLoS One, 4, 12.

Hormozdiari,F. et al. (2009) Combinatorial algorithms for structural variation detection
in high-throughput sequenced genomes. Genome Res, 19, 127w1278.

Hormozdiari,F. et al. (2010) Next— generation VariationHunter: combinatorial algorithms
for transposon insertion discovery. Bioinformatics, 26, 35a357.

Kidd,J.M. et al. (2008) Mapping and sequencing of structural variation from eight
human genomes. Nature, 453, 56$4.

Langmead,B. et al. (2009) Ultrafast and memory-efﬁcient alignment of short DNA
sequences to the human genome. Genome Biol., 10, R25.

Lee,S. et al. (2009) MoDIL: detecting small indels from clone-end sequencing with
mixtures of distributions. Nat Methods, 6, 473474.

Li,H. et al. (2008a) Mapping short DNA sequencing reads and calling variants using
mapping quality scores. Genome Res, 18, 185171858.

Li,R. et al. (2008b) SOAP: short oligonucleotide alignment program. Bioinformatics,
24, 7137714.

Li,H. et al. (2009) Fast and accurate short read alignment with Burrows-Wheeler
transform. Bioinformatics, 25, 175471760.

Lupski,J. et al. (2010) Whole- genome sequencing in a patient with Charcot-Marie-Tooth
neuropathy. N. Engl. J. Med, 362, 118171191.

Margulies,M. et al. (2005) Genome sequencing in microfabricated high-density picolitre
reactors. Nature, 437, 37G380.

McKeman,K.J. et al. (2009) Sequence and structural variation in a human genome
uncovered by short-read, massively parallel ligation sequencing using two-base
encoding. Genome Res, 19, 152771541.

Mills,R.E. et al. (2011) Mapping copy number variation by population-scale genome
sequencing. Nature, 470, 59$5.

Ng,S.B. et al. (2010) Exome sequencing identiﬁes 111112 mutations as a cause of Kabuki
syndrome. Nat Genet, 42, 7907793.

Nothnagel,M. et al. (2011) Technology-speciﬁc error signatures in the 1000 Genomes
Project data. Hum. Genet [Epub ahead of print, doi: 10.1007/s00439-011-0971-3,
23 February 2011].

Ondov,B.D. et al. (2008) Efﬁcient mapping of Applied Biosystems SOLiD sequence
data to a reference genome for functional genomic applications. Bioinformatics, 24,
277672777.

Pushkarev,D. et al. (2009) Single-molecule sequencing of an individual human genome.
Nat Biotechnol., 27, 8477850.

Rumble,S.M. et al. (2009) SHRiMP: accurate mapping of short color-space reads. PLoS
Comput. Biol., 5, 11.

Smith,D.R. et al. (2008) Rapid whole-genome mutational proﬁling using next-
generation sequencing technologies. Genome Res, 18, 163871642.

Sudmant,P.H. et al. (2010) Diversity of human copy number variation and multicopy
genes. Science, 330, 641$46.

Vissers,L.E. et al. (2010) A de novo paradigm for mental retardation. Nat Genet, 42,
110971112.

Wheeler,D.A. et al. (2008) The complete genome of an individual by massively parallel
DNA sequencing. Nature, 452, 8727876.

 

1921

112 )310's[BumoIpJOJXO'sorwurJOJurorq”:dnq urori popcorn/hog

91oz ‘Og isanV uo ::

