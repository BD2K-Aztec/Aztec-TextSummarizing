Bioinformatics, 32(13), 2016, 2067—2068

doi: 10.1093/bioinformatics/btw102

Advance Access Publication Date: 26 February 2016
Applications Note

 

Systems biology

NMRPro: an integrated web component for
interactive processing and visualization

of NMR spectra

Ahmed Mohamed*, Canh Hao Nguyen and Hiroshi Mamitsuka

Bioinformatics Center, Institute for Chemical Research, Kyoto University, Kyoto, Japan

*To whom correspondence should be addressed.
Associate Editor: Jonathan Wren

Received on October 5, 2015; revised on February 8, 2016; accepted on February 18, 2016

Abstract

 

Summary: The popularity of using NMR spectroscopy in metabolomics and natural products has
driven the development of an array of NMR spectral analysis tools and databases. Particularly, web
applications are well used recently because they are platform—independent and easy to extend
through reusable web components. Currently available web applications provide the analysis of
NMR spectra. However, they still lack the necessary processing and interactive visualization func—
tionalities. To overcome these limitations, we present NMRPro, a web component that can be eas—
ily incorporated into current web applications, enabling easy—to—use online interactive processing
and visualization. NMRPro integrates server—side processing with client—side interactive visualiza—
tion through three parts: a python package to efficiently process large NMR datasets on the server—
side, a Django App managing server—client interaction, and SpecdranS for client—side interactive
visualization.

Availability and implementation: Demo and installation instructions are available at http://mamitsu

kalab.org/tools/nmrpro/
Contact: mohamed@kuicr.kyoto—u.ac.jp

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Nuclear magnetic resonance (NMR) spectroscopy is indispensible
for structure identification of chemical compounds, becoming a cru—
cial part of metabolomics and natural products studies. Web appli—
cations are attractive environments for analysis and storage of NMR
spectra because (i) web is a platform—independent highly interactive
environment and (ii) existing web applications can be easily ex—
tended through integrating ‘web components’, such as JavaScript
libraries and web services, to provide additional functionalities.
Online processing and interactive visualization of spectra are neces—
sary functionalities for all NMR web applications (Mohamed et (11.,
2015). However, web applications for NMR analysis such as
MetaboAnalyst (Xia et (11., 2012), MetaboHunter (Tulpan et (11., 2011)
and COLMAR (Zhang and Briischweiler, 2007) require NMR spectra
to be processed ofﬂine beforehand. Also, interactive investigation of

NMR spectra in databases such as HMDB (Wishart et (11., 2013) re—
quires raw spectra to be downloaded and visualized ofﬂine.

Although processing and interactive visualization of NMR spec—
tra are needed for web applications, web components providing these
functionalities are still lacking. In fact, previously used Java applet
components, such as JSpecView (Lancashire, 2007) and Nemo, suffer
from security concerns and require installation of additional soft—
ware. Also, although the recently developed jsNMR (Vosegaard,
2015) and SpeckTackle (Beisken et (11., 2015) offer JavaScript—based
visualization, they have very limited processing functionalities.

The development of web components for processing NMR spec—
tra is hampered by three challenges caused by the large size of NMR
spectra: (i) processing of large datasets is computationally intensive,
requiring server—side integration. (ii) A compressed spectral format,
required for efficient transfer across the Web, is lacking. (iii)
Visualization of large number of spectral data points presents a

©The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 2067

9103 ‘Og JSanV 110 seleﬁuv soc] ‘BtHJOJtIBQ 30 AJtSJQAtuf] 112 /3.10'speum0fp1q1x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

2068

A.Mohamed et al.

 

computational load on users’ computers. Automatic reduction of
data points is needed.

We present NMRPro, an open—source easy—to—integrate web
component for processing and visualization of NMR data, which is
highly extensible to include new functionalities according to the
needs of each application. NMRPro consists of three integrated
parts, (i) Python package with extensible functionality plugins for
server—side spectral processing, (ii) Django App for spectral com—
pression and managing communication between server— and client—
sides and (iii) SpecdraWJS, a JavaScript library for visualization of
1D and 2D NMR datasets. Advantages over existing tools are sum—
marized in the supplement (Tables 51 and S2).

2 Component architecture

The general application architecture (Fig. 1) consists of three main
subcomponents, NMRPro python package, Django—NMRPro App
and SpecdraWJS. Below, we discuss the role of each subcomponent.

2.1 Python package

NMRPro python package consists of two main parts: (i) core part,
providing four classes for programmatic representation of NMR
spectra, which keep necessary information about the spectra and
processing history and (ii) plugins, which provide functions neces—
sary for automatic spectral processing (Fig. 1). Each plugin also con—
tains a GUI information entry, which is displayed in the web
browser on the client—side, allowing the user to customize processing
parameters. The plugin architecture allows extensibility of the

 I . —al....  ii.- 

1 Python Package - 3 Speohwds
formats Si send them

Fw- , _
Classes for representing NMR Spectra: 
- NMﬁSnecKrumID « NMRSpectrumZD i """3"a':t“'°'\r
to client-side
I capture user
I “an “ESE and sand
‘ them to the server
Extract GUI Info. from '
»| Display plugin GUI as
I menu options

2 Bianca App

Convert“ NMR spectra
to compressed

 
   
  

   
   
   

 
    
        
 
     
   
 

 
 

  
   

0 NMRDetaset I NMHSampleset

  

Provide processing fu nctionafities:
- Reading different ﬁle formats

o Zero Filling - Apodlzation
- Fourier transform a Phase correction
0 Baseline correcdon

. - Peak picking

       
 
 

   

plugins 8: sencl ta
client-side

Fig. 1. Component architecture of NMRPro

 

   

 

 

 

 

 

w . . . .
- = a , H...  .. -_...,.
g sEiéEEEeEiEEEEm v: i  sagas! Elm
 I u .. »_—:  ., -  ~ \ '
i 1.7%“? f‘“ | | ’1 l m
i .3...
§
§ {DI
E ' son
5 40“
i
i l ' I and
= ))_,_Ll..-_.u- u..._' l_L — e
‘D I 9 F 9 E lﬂwll J 2 | D |
—_
9 I! 7 I! II I.‘ I 15 1 55 2 I—
a f"
_..
E Lu
_ L
E . m
_ —- ' ---I- _ P}
8 u"
g '1:- m
a .- -._-...._.. i—n
ph
‘5 Lee
I I I I 5 I I I I I I ll’
41 u u t. .n a. u i u s, ,. u u
wan-mm“ m

 

Fig. 2. SpecdranS visualization. (a) 1D NMR dataset. (b) 2D NMR spectrum

subcomponent by installing new plugins on the server—side, and the
GUI is updated automatically to match installed plugins.

2.2 Django App

Django framework enables the development software packages,
‘Apps’, that can be directly integrated into existing web applications,
interfacing between python processing functionalities and client—side
visualization. Django App controls the interaction between the ser—
ver and client—side by managing three roles: (i) efficient transfer of
spectral to client—side, using a scaled down and compressed format
that can be read in the web browser, utilizing PNG image compres—
sion (see supplement, Fig. 51). (ii) Storage and retrieval of user spec—
tra for processing on the server—side. (iii) Aggregation of server—side
plugins and sending their GUI information to the client—side.

2.3 SpecdranS
SpecDraWJS is a platform—independent JavaScript library for visualiza—
tion of 1D and 2D NMR spectra (Fig. 2). SpecdraWJS can be used in
four different configurations, static View, interactive view, full client—side
and connected modes, with functionalities ranging from static visualiza—
tion to full interactive processing (see supplement, Table S1 for details).
To enable visualization of NMR datasets, SpecdraWJS improves
visualization performance by implementing two approaches: (i)
Reducing the number of points in an NMR spectra using topology—
preserving line simplification algorithm. NMR spectra are reduced
to the number of rendered pixels in the browser without affecting
the perceived spectral shape. (ii) Parallel programming using newly
introduced web—worker technology.

3 Conclusion

We present NMRPro, an extensible web component that can be eas—
ily integrated in current web applications and databases, providing
NMR processing and visualization functionalities. Future work is to
extend NMRPro by implementing new plugins to add further func—
tionalities such as covariance NMR and multivariate analysis for
wider application in metabolomics and natural products.

Fu ndi ng
MEXT KAKENHI 24300054

Conﬂict of Interest: none declared.

References

Beisken,S. et al. (2015) SpeckTackle: JavaScript charts for spectroscopy.
]. Cheminﬁ, 7, 17.

Lancashire,R.J. (2007) The JSpecView Project: an Open Source Java viewer and
converter for JCAMP—DX, and XML spectral data ﬁles. Chem. Central ]., 1, 31.

Mohamed,A. et al. (2015) Current status and prospects of computational re—
sources for natural product dereplication: a review. Brieﬁ Bioinﬁ,
doi:10.1093/bib/bbv042.

Tulpan,D. et al. (2011) MetaboHunter: an automatic approach for identiﬁcation of
metabolites ﬁom 1H—NMR spectra of complex mixtures. BMC Bioinﬁ, 12, 400.

Vosegaard,T. (2015) jsNMR: an embedded platform-independent NMR spec—
trum viewer. Magn. Reson. Chem., 53, 285—290.

Wishart,D.S. et al. (2013) HMDB 3.0 — the human metabolome database in
2013. Nucleic Acids Res., 41, D801—D807.

Xia,J. et al. (2012) MetaboAnalyst 2.0—a comprehensive server for metabolo—
mic data analysis. Nucleic Acids Res., 40, W127—W133.

Zhang,F. and Briischweiler,R. (2007) Robust deconvolution of complex mixtures
by covariance TOCSY spectroscopy. Angew. Chem. Int. Ed., 46, 2639—2642.

9103 ‘Og isanV 110 seleﬁuv soc] ‘BtHJOJtIBQ 30 AJtSJQAtuf] 112 /3.IO'S[BIIJI’IO[pJOJXO"SOIJBHIJOJIIIOIq/ﬂdnq 11101} pepcolumoq

