Advance Access Publication Date: 18 December 2015

Bioinformatics, 3218), 2016, 1265—1266
doi: 10.1093/bioinformatics/btv742

Applications Note

 

 

Systems biology

FluxModeCalculator: an efficient tool for
large-scale flux mode computation

Jan Bert van Klinken1'2* and Ko Willems van Dijk1'2'3

1Department of Human Genetics, 2Einthoven Laboratory for Experimental Vascular Medicine and 3Department of

Medicine, Division of Endocrinology, LUMC, Leiden, The Netherlands

*To whom correspondence should be addressed.
Associate Editor: Jonathan Wren

Received on 21 July 2015; revised on 11 December 2015; accepted on 14 December 2015

Abstract

Summary: Elementary flux mode (EFM) analysis is a powerful technique for determining the meta—
bolic capacities and robustness of stoichiometric networks. Recently, several improvements have
been made to the algorithm for enumerating the EFMs, making the study of large models possible.
However, currently these tools require high performance workstations to perform large—scale EFM
computations, thus limiting their applicability. We developed a more time and memory efficient im—
plementation ofthe algorithm for EFM enumeration in MATLAB, called FluxModeCalculator, which
enables large—scale EFM computation on ordinary desktop computers.

Availability and implementation: FluxModeCalculator is open source and freely available under
the terms ofthe GNU General Public License v3.0 at http://www.lumc.nl/jan—bert—van—klinken

Contact: j.b.van7klinken@lumc.nl

Supplementary information: Supplementary data are available at Bioinformatics online.

 

Due to recent advances in genomic, transcriptomic and metabolomic
technologies, it has become possible to reconstruct detailed metabolic
maps of a wide range of organisms and tissue types. Elementary Flux
Mode analysis is a powerful method for investigating the metabolic
capacities of these networks, listing the complete set of physiological
states that are feasible given mass balance and thermodynamic con-
straints. EFMs are defined as the minimal reaction sets that are able
to operate at steady state (Schuster and Hilgetag, 1994) and provide a
natural and unbiased definition of a metabolic pathway. EFM ana-
lysis has been applied for several different purposes, such as designing
knockout strategies for bacteria (Trinh et (11., 2008), analyzing net-
work robustness to perturbations (Stelling et (11., 2002), determining
substrate cycles (Gebauer et (11., 2012), and investigating network
flexibility in optimal growth states (Kelk et (11., 2012).

Formally, EFM analysis corresponds to enumerating the extreme
rays of the polyhedral cone that is formed by the intersection of the
right null space of the stoichiometric matrix and the positive orthant

N-v:0 (1)

V20 (2)

where V represents the flux vector and N the m by n stoichiometric
matrix, with N” the stoichiometric coeffcient of the ith compound
in the jth reaction. Equation (1) represents the set of constraints
imposed by the steady state assumption—Le. internal metabolites

 

are neither produced nor consumed and (2) represents the
thermodynamic constraint that the flux through irreversible
reactions is either positive or zero. Importantly, in EFM analysis
N represents the expanded stoichiometric matrix, where reversible
reactions are split into two irreversible reactions in both
directions.

Traditionally flux mode enumeration has been hampered by the
computational complexity of the double description method
(Motzkin et (11., 1953), which is the principal algorithm for calculat-
ing the extreme rays of a polyhedral cone. Consequently, this
method has only been applied to relatively small metabolic net-
works. Due to recent advances in the implementation of the double
description method, flux mode calculation has also been made pos-
sible in larger models (Jevremovié and Boley, 2012; Terzer and
Stelling, 2008). However, these tools are only able to perform large-
scale flux mode computation on high performance workstations and
clusters, which limits their usability. We developed a more efficient

(C7 The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1265

/310‘srcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

1266

J.B. van Klinken and K. Willems van Dijk

 

implementation, called FluxModeCalculator, that enables large—
scale EFM computation on ordinary desktop computers.

FluxModeCalculator includes the main improvements that have
been previously made to the double description method, such as net—
work compression, storing solved inequalities as bit patterns
(Gagneur and Klamt, 2004), and using bit pattern trees for the com—
binatorial adjacency test and for candidate pruning (Terzer and
Stelling, 2008). We further optimized the memory and time effi—
ciency of the algorithm by vectorising the bit pattern tree and storing
intermediate solutions on the hard drive. As a result, our implemen—
tation only requires #fluxmodes - (4 T31—Z#reaction51 + 10) bytes of
free memory to complete an iteration, plus ~1 GB for swapping
data between the memory and hard drive. In addition, our imple—
mentation uses the OpenMP API to optimally exploit processor
architectures with multiple cores. For details, see the Supplementary
text.

A feature that we added to our tool is to check at the end of each
iteration whether the resulting flux modes still fit in the memory; if
this is no longer the case then the algorithm will terminate and re—
turn the intermediate solution. This allows the user to inspect the
intermediate flux modes that satisfy all except the final constraints
for gaining insight into the complexity of the model and detect the
presence of hub metabolites or reactions. In addition, we combined
this feature with the demand—based network subdivision strategy
proposed by Hunt et al. (2014) to automatically subdivide the net—
work for the remaining constraints and calculate the flux modes for
the corresponding subnetworks.

We compared the performance of FluxModeCalculator with
that of existing tools on a set of stoichiometric matrices of varying
size (Supplementary text). We found that our implementation is sev—
eral orders of magnitude faster than metatool (von Kamp and
Schuster, 2006), and 11 times faster than efmtool (Terzer and
Stelling, 2008) on the largest model that efmtool could manage on
our system (68M EFMs). In contrast, the largest set of EFMs that
could be calculated with FluxModeCalculator in a single run was 10
times larger (679M EFMs). For smaller models the difference in per—
formance was less pronounced; for instance, for models with 106
EFMs the reduction in computation time of FluxModeCalculator
with respect to efmtool was between 4— and 6—fold.

To further validate our tool, we applied it to a set of metabolic
models for which the EFMs had been calculated previously.
Importantly, for the largest three models high performance worksta—
tions had to be used, whereas we were able to replicate these results
on an ordinary desktop computer (see Table 1). Specifically,
FluxModeCalculator required only 4 GB of free memory to calculate
the 271M EFMs in the core metabolism of E. coli, whereas Gerstl
et al. (2015) reported that efmtool needed 90 GB of free memory to
perform the same computation.

Table 1. Metabolic models used in the validation study

 

 

Model Reactions/ EFMS Computation Required
metabolites time memory

S.cerez/isiaea 78/62 1 5 15 315 29.0 1 GB

Scerez/isiaea 83/63 68 868 602 43:44.9 2 GB

E. colib 95/72
P.tricornutumC 3 1 8/3 35

271 494 722 17:12:45.7 4GB
1 935 026 864 94:54:58.7 14 GB

 

“Jevremovié and Boley (2012).

I’Orth et a1. (2009).

CHunt et a1. (2014). Computations were performed on a computer with an
Intel 3.30 GHZ i3 processor and 16 GB RAM.

For the final model it was not possible to determine the full set
of EFMs with 14 GB of free memory, and FluxModeCalculator fin—
ished yielding 656M intermediate flux modes, leaving 2 reactions
unconstrained. Subsequently, the model was subdivided iteratively
using the demand—based network splitting approach, starting with
the 2 remaining reactions. The total computation time was less
than 4 days, in comparison to less than a month on a cluster with
50 nodes (Hunt et al., 2014). Importantly, since we found 297 313
more EFMs than Hunt and coworkers, we validated our results
by checking all EFMs for consistency and uniqueness and con—
firmed that no inconsistent or duplicate EFMs were present.
Consequently, the set of EFMs computed by Hunt is incomplete,
which is most probably due to numerical errors using floating
point arithmetic.

In conclusion, we have developed FluxModeCalculator, a new
tool for performing flux mode analysis in stoichiometric models.
FluxModeCalculator is more efficient than existing tools and en—
ables EFM computation in models with up to an order of magnitude
more EFMS.

Funding

This work was supported by grants from the Netherlands Consortium for
Systems Biology (NCSB), the Center of Medical Systems Biology (CMSB),
the European Network for Genetic and Genomic Epidemiology
(ENGAGE), the Biobanking and Biomolecular Resources Research
Infrastructure (BBMRI) 2.0 and CardioVascular Research Netherlands
(CVON-ENERGISE).

Conﬂict of Interest: none declared.

References

Gagneur,]. and Klamt,S. (2004) Computation of elementary modes: a unifying
framework and the new binary approach. BMC Bioinformatics, 5, 175.

Gebauer,]. et al. (2012) Detecting and investigating substrate cycles in a gen-
ome-scale human metabolic network. FEBS]., 279, 3192—3202.

Gerstl,M. et al. (2015) Metabolomics integrated elementary ﬂux mode ana-
lysis in large metabolic networks. Sci. Rep, 5, 8930

Hunt,K. et al. (2014) Complete enumeration of elementary ﬂux modes
through scalable demand—based subnetwork deﬁnition. Bioinformatics, 30,
15 6 9—15 78.

Jevremovic,D. and Boley,D. (2012). Parallel computation of elementary
flux modes in metabolic networks using global arrays. In: The 6th
Conference on Partitioned Global Address Space Programming Models,
Santa Barbara, CA.

Kelk,S. et al. (2012) Optimal ﬂux spaces of genome-scale stoichiometric mod—
els are determined by a few subnetworks. Sci. Rep., 2, 5801—5807.

MotZkin,T.S. et al. (1953). The double description method. In: Kuhn,H.W.
and Tucker,A.W. (eds.) Contributions to the Theory of Games II, volume 8
ofAnn. ofMath. Stud., Princeton University Press, Princeton, pp. 51—73.

Orth,]. et al. (2009). Reconstruction and use of microbial metabolic networks:
The core escherichia coli metabolic model as an educational guide. In:
Karp,P. (ed.) EcoSal—Escherichia Coli and Salmonella: Cellular and
Molecular Biology, ASM Press, Washington, DC, pp. 56—99.

Schuster,S. and Hilgetag,C. (1994) On elementary flux modes in biochemical
reaction systems at steady state. ]. Biol. Syst., 2, 165—182.

Stelling,]. et al. (2002) Metabolic network structure determines key aspects of
functionality and regulation. Nature, 420, 190—193.

Terzer,M. and Stelling,]. (2008) Large-scale computation of elementary flux
modes with bit pattern trees. Bioinformatics, 24, 2229—2235.

Trinh,C. et al. (2008) Minimal Escherichia coli cell for the most efﬁcient pro—
duction of ethanol from hexoses and pentoses. Appl. Environ. Microhiol.,
74, 3634—3643.

von Kamp,A. and Schuster,S. (2006) Metatool 5.0: fast and ﬂexible elemen-
tary modes analysis. Bioinformatics, 22, 1930—1931.

[310'sp2umofp105xo'sopeuHOJIItotq/ﬁdnq

