Bioinformatics, 32(12), 2016, 1917—1919

doi: 10.1093/bioinformatics/btiA/087

Advance Access Publication Date: 15 February 2016
Applications Note

 

 

Bioimage informatics

KiT: a MATLAB package for kinetochore tracking

Jonathan W. Armond1'2'*, Elina Vladimirou1, Andrew D. McAinsh1 and

Nigel J. Burroughs2

1Division of Biomedical Cell Biology, Mechanochemical Cell Biology Building, Warwick Medical School and
2WanNick Systems Biology Centre and Mathematics Institute, University of Warwick, Coventry, CV4 7AL, UK

*To whom correspondence should be addressed.
Associate Editor: Robert Murphy

Received on October 22, 2015; revised on January 19, 2016; accepted on February 6, 2016

Abstract

Summary: During mitosis, chromosomes are attached to the mitotic spindle via large protein
complexes called kinetochores. The motion of kinetochores throughout mitosis is intricate and
automated quantitative tracking of their motion has already revealed many surprising facets of
their behaviour. Here, we present 'KiT’ (Kinetochore Tracking)—an easy—to—use, open—source soft—
ware package for tracking kinetochores from live—cell fluorescent movies. KiT supports 2D, 3D and
multi—colour movies, quantification of fluorescence, integrated deconvolution, parallel execution

and multiple algorithms for particle localization.

Availability and implementation: KiT is free, open—source software implemented in MATLAB and
runs on all MATLAB supported platforms. KiT can be downloaded as a package from http://www.
mechanochemistry.org/mcainsh/software.php. The source repository is available at https://bitbucket.

org/jarmond/kit and under continuing development.

Supplementary information: Supplementary data are available at Bioinformatics online.

Contact: jonathan.armond@warwick.ac.uk

 

1 Introduction

The process of mitosis involves the attachment of chromosomes to a
protein scaffold, called the mitotic spindle, via large protein com—
plexes called kinetochores (McIntosh et (11., 2012). Throughout mi—
tosis, the kinetochores, and hence the chromosomes, execute a
highly complex stochastic motion culminating in the segregation of
the genetic material to the two daughter cells. Automated quantita—
tive tracking of ﬂuorescently labelled kinetochores is revealing sur—
prising details of their behaviour and makes the analysis of large
datasets consisting of hundreds or thousands of cells feasible
(Armond et (11., 201Sa,b; Burroughs et (11., 2015; Jaqaman et (11.,
2010; Kitajima et (11., 2011; Vladimirou et (11., 2013). We have de—
veloped a MATLAB package—Kinetochore Tracking (KiT)—for
tracking the motion of kinetochores, facilitating the quantitative
analysis of chromosome motion Fig. 1A—C. Although KiT is primar—
ily developed with tracking of kinetochores in mind, it is also useful
as a tool for tracking other ﬂuorescently—marked particles in cells,
e.g. centrosomes, motors etc., provided they have an approximately
Gaussian shape and are not extended objects. For example, the

©The Author 2016. Published by Oxford University Press.

centrosomes can also be tracked when ﬂuorescently marked (e.g.
Burroughs et (11., 2015).

2 Features

KiT evolved from earlier software for particle tracking (u—Track;
Jaqaman et (11., 2008), kinetochore tracking (MaKi; Jaqaman et (11.,
2010) and kinetochore track analysis (CupL; Vladimirou et (11.,
2013) and incorporates numerous enhancements and major new fea—
tures. Movies are loaded through the Bioformats package (Linkert
et (11., 2010), which is automatically downloaded, enabling compati—
bility with a vast range of microscopy data formats.

2.1 Graphical User Interface

KiT includes a user—friendly GUI (Graphical User Interface) for se—
lecting ROIs (Regions Of Interest; to select cells and exclude spuri—
ous background ﬂuorescence), parameter configuration and
execution of KiT. Tracking may be executed from within the GUI or
later. The GUI allows selection of particle detection algorithms per

1917

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /310'slcu1nolp103xo"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnv uo ::

1918

J. W.Armond et aI.

 

 

 

 

 

 

 

 

 

0
3" Wm}

Fig. 1. (A) Still 2 max-projection from metaphase cell movie with kinetochores
marked by EGFP-CENP-A (Enhanced Green Fluorescent Protein-CENtromere
Protein A), with (B) particles marked by crosses or (C) tracks formed up to this
frame marked by lines. Scale bar 3pm. (D) An example metaphase kineto-
chore track from cell in (A). (E) An example metaphase to anaphase transition
track from a different cell. (F) Metaphase plate view of kinetochore trajectories
from cell in (A)

channel and modification of the most commonly used options. KiT
also includes a GUI for post—tracking processing, enabling basic
diagnostics and track quantification, such as kinetochore speeds and
autocorrelation. The GUI collates data from each tracked ROI and
saves a .mat file for later user—specific processing.

2.2 Multi—channel tracking

Often the correlative dynamics of multiple proteins is of interest. To
facilitate this, KiT allows independent tracking of objects in differ—
ent channels. To allow correlation between the dynamics of multiple
channel data, a coordinate system is derived from a single selected
channel and the other channels are transformed into this system. An
option is also provided to supply an experimentally determined
point—spread function (PSF), which is then used to perform deconvo—
lution via the MATLAB function deconvlucy.

2.3 Fluorescence quantification

In addition to multi—channel tracking, ﬂuorescent intensity is meas—
ured within a customizable mask over the tracked object in all chan—
nels. For example, we have quantified EB3—EGFP levels at
kinetochores which were tracked by mCherry—CENP—A (Armond
et (11., 2015b).

2.4 Modular detection algorithms
The signal—to—noise ratio of live—cell imaging data can vary widely.
To accommodate this, we introduced a modular system for choosing
particle detection algorithms. In the primary stage, particle locations
are initially detected using: (a) unimodal histogram thresholding
(Rosin, 2001), (b) multiscale wavelet product thresholding (Olivo—
Marin, 2002) or (c) point—cloud similarity adaptive thresholding.
Algorithm (c) is a novel method for setting a global threshold based
on maintaining stability in the number and location of particles (see
Supplementary Materials). Algorithm (a) is the fastest but least ro—
bust to background ﬂuorescence (e.g. bimodal histograms), while
(b) is slower and requires more fine—tuning but is capable of exclud—
ing more false positives in noisy images. Algorithm (c) offers a bal—
ance between speed and sensitivity (see Supplementary Figure S1).
After initial detection, an optional stage of location refinement is
available using either: (d) calculation of the centroid of the particle
(Jaqaman et (11., 2010), or (e) fitting a mixture model of 3D
Gaussian functions to the spot locations (Thomann et (11., 2002)
within regions of potentially overlapping PSFs, in order to allow the

discrimination of sub—resolution particles. Algorithm (e) is signifi—
cantly slower than (d), thus we allow the independent selection of
initial particle detection and refinement for those applications where
subpixel—resolution is not required.

2.5 Coordinate systems

Cells and the mitotic spindle itself are prone to translation and rota—
tion. We have found that different reference frames for defining a
coordinate system are useful in different circumstances. KiT pro—
vides three options: (i) metaphase plate, where the kinetochores are
aligned such that variation along two principal axes is much larger
than along a third (Jaqaman et (11., 2010), (ii) image moments, simi—
lar to (i) except we use the eigenvectors of the image covariance ma—
trix instead of particle locations, which is useful for 2D movies
(Armond et (11., 2015b), (iii) translation correction only.

2.6 Parallel execution

On a 2.9 GHz MacBook Pro, tracking of a 150 frame movie takes
~5 min per ROI using refinement algorithm (d), and around 30 min
using (e). The total analysis time of large datasets may be reduced by
invoking the parallel execution option, which uses the batch pro—
cessing facility of the MATLAB Parallel Computing Toolbox to
schedule each ROI to run in parallel on a multi—core machine.

3 Usage

No installation is necessary; the source directory may optionally be
added to the MATLAB path. The process of tracking in a single ROI is
termed a job, and the tracking of a whole set of ROIs is termed a job—
set. To setup a jobset the following command is used: jobset : kitGUI.
This results in the GUI display where the user can select the movies to
be analyzed, select ROIs from each movie, specify the tracking require—
ments and customize various options. After choosing a jobset name
and completing the tracking setup, the jobset description file is saved to
disk. The tracking is started from within the GUI or with the com—
mand: kitRun]obs(jobset). For each ROI, a file is generated containing
the kinetochore tracks and other data. Simple analysis can be per—
formed on the data (see examples in Fig. 1D—F), e.g. plotting kineto—
chore tracks or computing the autocorrelation, with the command:
kitAnalysis(jobset). This opens a GUI with buttons for each analysis
plot. An option is provided to save a .mat file containing collated data
from across all ROIs for external processing.

4 Conclusion

We have developed KiT, a software tool which enables user—friendly
and efficient particle tracking and basic analysis of kinetochores and
other objects. We hope that it will lower the entry barrier for quanti—
tative tracking analysis of live—cell imaging data by cell biology
laboratories.

Acknowledgements

We thank Edward Harry and Chris Smith for contributions to the code.

Funding

This work was supported by the Biotechnology and Biological Sciences
Research Council [BB/1021353/1 to A.D.M. and N.J.B.] and in part by a
Wellcome Trust Senior Investigator Award [106151/Z/14/Z to A.D.M.].

Conﬂict of Interest: none declared.

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Idllq 11101} pQPBOIII/lAOG

9103 ‘Og anﬁnv uo ::

KiT: MATLAB kinetochore tracking

1919

 

References

Armond,I.W. et al. (2015a) Inferring the forces controlling metaphase kineto—
chore oscillations by reverse engineering system dynamics. PLoS Comput.
Biol., 11, e1004607.

ArmondJ.W. et al. (2015b) Probing microtubule polymerisation state at single
kinetochores during metaphase chromosome motion. I. Cell Sci, 3, 1991—2001.

Burroughs,N.I. et al. (2015) Super-resolution kinetochore tracking reveals the
mechanisms of human sister kinetochore directional switching. Elife, 4,
piize09500. doi: 10.7554/eLife.09500.

Iaqaman,K. et al. (2008) Robust single particle tracking in live cell time—lapse
sequences. Nat. Methods, 5, 695—702.

Iaqaman,K. et al. (2010) Kinetochore alignment within the metaphase plate is
regulated by centromere stiffness and microtubule depolymerases. I. Cell
Biol., 188, 665—679.

Kitajima,T.S. et al. (2011) Complete kinetochore tracking reveals error-prone
homologous chromosome biorientation in mammalian oocytes. Cell, 146,
568—581.

Linkert,M. et al. (2010) Metadata matters: access to image data in the real
world]. Cell Biol., 189, 777—782.

McIntosh,I.R. et al. (2012) Biophysics of mitosis. Q. Rev. Biophys., 45,
147—207.

Olivo-Marin,I.C. (2002) Extraction of spots in biological images using multi—
scale products. Pattern Recognit., 35, 1989—1996.

Rosin,P.L. (2001) Unimodal thresholding. Pattern Recognit., 34, 2083—2096.

Thomann,D. et al. (2002) Automatic ﬂuorescent tag detection in 3D with
super—resolution: Application to the analysis of chromosome movement.
I. Microsc., 208, 49—64.

Vladimirou,E. et al. (2013) Nonautonomous movement of chromosomes in
mitosis. Dev. Cell, 27, 60—71.

112 /310'S[BHJnOprOJXO"SOIJBHIJOJIIIOICI/ﬂdnq 11101} pQPBOIII/lAOG

9103 ‘Og anﬁnv uo ::

