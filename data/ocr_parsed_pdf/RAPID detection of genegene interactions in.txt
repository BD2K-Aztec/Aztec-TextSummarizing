ORIGINAL PAPER

Vol. 26 no. 22 2010, pages 2856-2862
doi: 1 0. 1093/bioinformatics/btq529

 

Genetics and population analysis

Advance Access publication September 24, 2010

RAPID detection of gene—gene interactions in genome-wide

association studies

Dumitru Brinzal, Matthew SchultzZ, Glenn Tesler3 and Vineet Bafna4’*

1Life Technologies, Foster City, CA, 2Graduate Bioinformatics Program, 3Department of Mathematics and
4Department of Computer Science and Engineering, Institute for Genomic Medicine, University of California, San

Diego, CA, USA

Associate Editor: Jeffrey Barrett

 

ABSTRACT

Motivation: In complex disorders, independently evolving locus
pairs might interact to confer disease susceptibility, with only a
modest effect at each locus. With genome-wide association studies
on large cohorts, testing all pairs for interaction confers a heavy
computational burden, and a loss of power due to large Bonferroni-
like corrections. Correspondingly, limiting the tests to pairs that show
marginal effect at either locus, also has reduced power. Here, we
describe an algorithm that discovers interacting locus pairs without
explicitly testing all pairs, or requiring a marginal effect at each
locus. The central idea is a mathematical transformation that maps
‘statistical correlation between locus pairs’ to ‘distance between two
points in a Euclidean space’. This enables the use of geometric
properties to identify proximal points (correlated locus pairs), without
testing each pair explicitly. For large datasets (~106 SNPs), this
reduces the number of tests from 1012 to 106, significantly reducing
the computational burden, without loss of power. The speed of
the test allows for correction using permutation-based tests. The
algorithm is encoded in a tool called RAPID (RApid Pair lDentification)
for identifying paired interactions in case—control GWAS.

Results: We validated RAPID with extensive tests on simulated
and real datasets. On simulated models of interaction, RAPID
easily identified pairs with small marginal effects. On the
benchmark disease, datasets from The Wellcome Trust Case
Control Consortium, RAPID ran in about 1 CPU-hour per dataset,
and identified many significant interactions. In many cases, the
interacting loci were known to be important for the disease, but were
not individually associated in the genome-wide scan.

Availability: http://bix.ucsd.edu/projects/rapid

Contact: vbafna@cs.ucsd.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on July 12, 2010; revised on September 3, 2010; accepted
on September 12, 2010

1 INTRODUCTION

Recent technological developments in sequencing and genotyping
have made it feasible to conduct genome-wide scans of large
population cohorts to ﬁnd genetic markers for common diseases (The
Wellcome Trust Case Control Consortium, 2007). Nevertheless,
signiﬁcant Challenges remain. Many genome-wide association

 

*To whom correspondence should be addressed.

studies (GWASs) seek to associate each marker with the disease
phenotype. As multiple hypotheses are generated, individual
associations must have large effect to show up as signiﬁcant.
In complex disorders, many independently evolving loci might
interact to confer disease susceptibility, with only a modest effect at
each locus. Here, we focus on detecting such interactions.

Detecting k-locus interactions in GWAS on large populations
is computationally and statistically Challenging, even when k=2.
A test involving all pairs of m markers, with a case—control
population of 11 individuals, involves 0(nm2) computations. For
GWAS, it is not atypical to have n~103, m~106 making
these computations, especially with permutation-based tests
of signiﬁcance, intractable. A straightforward (Bonferroni-like)
correction for the multiple tests would result in signiﬁcant loss of
sensitivity.

Therefore, many strategies for two-locus interaction testing are
based on a two-stage, ﬁltering approach. In the ﬁrst stage (the ﬁlter
stage), the objective is to discard the vast majority of locus pairs,
while retaining the truly interacting pairs. If the ﬁltering stage is
fast and efﬁcient (only a small fraction of all pairs are retained),
then computationally intensive tests of association can be performed
on the few remaining candidate pairs in a second, scoring, stage.
For a ﬁltering algorithm to be effective, it must have (a) speed, in
that the number of computations scale linearly with the size of the
data; (b) sensitivity/power (truly interacting pairs are retained); and,
(C) eﬁciency (most pairs are discarded). Fast and efﬁcient ﬁlters
allow non-parametric permutation tests to be employed to assess
signiﬁcance. With the advent of deep sequencing, the number of
variants considered will grow far beyond 106 markers, and designs
of ﬁlters will be critical to GWAS analysis of interactions.

While many approaches to detecting interactions have been
proposed (see Cordell, 2009, for an excellent review), the design of
ﬁlters has not been investigated explicitly. A recent approach, both
pragmatic and effective for ﬁltering, is based on the assumption
that interacting pairs of loci should also show a marginal effect at
each locus (Marchini et al., 2005). Here, the ﬁltering stage consists
of single marker tests at each locus. The scoring stage is then
limited to pairs in which either one, or both loci, are individually
associated. In either strategy, the ﬁlter speed is high, as single-marker
analysis scales linearly with the number of loci and individuals.
Empirical results show that only a small fraction of the loci show
a marginal effect, leading to high efﬁciency. However, as Marchini
et al. point out, there is some loss of power in employing these
ﬁlters, particularly in interaction models where the marginal effects
of the individual loci are small. Figure la provides a cartoon

 

2856 © The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org

112 /3.Io's[Bumo[p.IOJXO'sorquJOJurorq”:duq 11101} papBOIHAAOG

9103 ‘{g anﬁnv 110::

Gene—gene interactions in GWAS

 

 

 

 

 

 

 

 

 

 

 

 

 

A x y B m x 2 loci
‘0 . .TACch'I-Accm . . . . . . . . . .GACTGATT. .
a) — . — . .
g ..TACTcmcch. .GACTAATT.. o 5 o 87 o 5
u ..TACTcmcch.... ....GACTAATT” o_5 o_29 _o_5
C ..TACTCCTACCT'I'. . . . ... .GACTGATT..
0.5 0.29 -0.5
t_n . .TACTCCBACCTA . . . . . . . . . .GACTGATT. .
9 ..TACTCCTACCTT.... ....GACTMTT” ‘0-5 0-29 0-5
‘E ..TACTCCTACCTT. . . . ... .GACTAATT” V V V
8 . .TACTCCBACCT'I' . . . . . . . . . .GACTGATT. . X Z Y
c
M -41 .
I K
r 1 1W

 

 

 

 

 

 

Ampliﬁcation Pairs

Random Projections

Fig. 1. Overview of RAPID. (a) A cartoon example of two-locus interaction
with no marginal effects. Each of the variants is a coding SNP that changes
the conformation of the encoded protein in a compensating manner. While
neither of the two loci are individually associated, the allelic combinations
A. . .A and T. . .G, mediate a disease phenotype, whereas control individuals
have the combinations T...A or A...G. (bid) An overview of the Rapid
approach. Each variant locus x is transformed to a unit vector vx, and
projected onto a random vector r. (c) The length of the projection is given
by v, -r. projections of interacting locus pairs x, y fall into the same bin with
higher probability, relative to non-interacting pairs x,z. (d) Pairs that fall in
the same bin K consecutive times in one of L trials are selected.

illustration of such confounding interactions. Here, compensating
mutations in coding SNPs (T and G, or A and A) allow the encoded
proteins to interact, but individual mutations destroy the lock and
key mechanism. Therefore, the locus pair (x, y) will show strong
association, but there is no marginal effect at either locus. We tackle
this case.

In this article, we describe a ﬁltering strategy, RAPID (RApid Pair
IDentiﬁcation). Under certain assumptions, the algorithm provides
explicit guarantees on speed, efﬁciency and sensitivity. To formalize
the argument, we parametrize the total computation for n individuals
and m markers. Let input parameter 8 denote the desired false
negative rate of detecting interactions. RAPID performs at most
1'1 2m1‘07 tests, and allows no more than 122m1‘07ln(1/e) pairs
by chance, while capturing a fraction 1—8 of the truly interacting
pairs. The surviving pairs can be tested for interaction using a
total of 0(nm1‘07 ln( 1 /e)) computations. This can be compared with
the time of 0(nm2) when no ﬁltering is employed. For GWAS,
where m 2 106, this results in several orders of magnitude speed up.
Additionally, increasing desired sensitivity 1 —e incurs only modest
increases in running time. Extensive power simulations demonstrate
the power of our approach.

We also used RAPID to reanalyze data from The Wellcome Trust
Case Control Consortium (WTCCC) dataset, a benchmark GWAS.
The ﬁltering using RAPID on either dataset only took about 45 min
on a 1.8 GHz, 16 GB RAM computer and identiﬁed many signiﬁcant
interactions.

2 THE DESIGN OF RAPID

Three key ideas underlie the design of RAPID. The ﬁrst is a
mapping of allelic values at loci to a Euclidean metric so that
statistical correlation between two loci corresponds to distance in

the Euclidean space. The second is the use of a randomized protocol
called Locality Sensitive Hashing (LSH). LSH has been used
successfully to cluster and query high-dimensional datasets (Indyk
and Motwani, 1998). Its use in the context of ﬁltering for interacting
loci is novel and illustrated below. The ﬁnal idea is a standard one
of amplifying a probability bias through repeated trials.

Statistical correlation and the Euclidean metric: we describe a
transformation that maps every locus to a point in a Euclidean Space.
For exposition purposes, consider haploid data with n individuals,
and m biallelic loci. Each locus x can be described by a vector
xe{0, 1}" of allelic values. Likewise, the case—control status of
the individuals can also be expressed by a vector d e {0, 1}". The
null hypothesis of no association of a pair of loci x, y against d
can be tested using a X2 test on a 2 X2 X2 contingency table (or
3 X 3 X 2 for genotype data). Speciﬁcally, the goal is to identify all
locus pairs x, y such that X2 is high. While other, more powerful,
tests of association have been proposed, the X2 test is sufﬁcient
for the ﬁltering stage. By choosing appropriate thresholds, we can
recover all candidate paired interactions, and leave the advanced
tests of association for the scoring stage. We note that if x, y,d jointly
associate, then at least one of the following projected associations
must hold (Supplementary Section S1).

0 Marginal association between x and d, described by the statistic
Xx,d ’
0 Marginal association between y and d, described by x; d.

0 Association between x, and y, when the individuals are drawn
only from cases. xg y is high for cases.

0 Association between x, and y, for control individuals. xg y is
high for controls.

Each of these conditions can be tested independently. The ﬁrst two
describe marginal associations that can be tested directly (0(m)
tests). The latter two conditions have also been proposed in the
context of interactions (Yang et al., 1999), but require testing every
pair of loci (0(m2) tests in principle). These case-only (or control-
only) tests are the focus of our article. Much of the discussion
below is therefore limited to a population consisting entirely of
n case (or control) individuals. We use the following geometric
transformations. Let PX denote the fraction of individuals in the
population with allele ‘1’ at locus x. For a6 {0, 1}, deﬁne

a—Px
ﬁ./Px(1—Px>’

Deﬁne a vector vx = [vx(x1)vx(x2)  vx(x,,)]. This maps the allelic
values at locus x for all n individuals onto a unit vector vx (a point on
the unit hypersphere) in SR". For two loci x, y, the vectors vx, vy are
both on the unit hypersphere. Inverting the alleles at y (changing all
0’s to 1’s and vice-versa) does not change the correlation between
the loci, but replaces vy by —vy. We fold these two cases together
by deﬁning the distance between loci x, y as

Vx (a) =

 

 

 

 

dist(vx,vy)=min(Hvx—vy vx+vy

7

We can show (Supplementary Section S2) that for a pair of loci x, y,

distrvx,vy)=,i2—2,/X3,y/n. (1)

 

2857

112 /3.Io's[BumoIpJOJXO'sonuIJOJquIq”:duq wort papeolumoq

9103 ‘{g anﬁnv 110::

D.Brinza et al.

 

Thus, we can transform the statistical problem of identifying
interacting locus pairs {(x, y) : xi), 3 t} (where t is a threshold) into a
geometric problem of computing proximal vectors: identify all locus
pairs (x,y) such that

dist(vx,vy)§6=‘/2—2\/t/—n. (2)

The transformations for genotypes are more complex and will be
described in Section 3. By itself, the metric connection offers no
help for ﬁltering. We have m vectors in SR", and potentially, each
pair must be compared with identify the proximal pairs. Here, we
apply the second idea.

LSH: to identify locus pairs (x, y) for which dist(vx, vy) f 6, we
choose a random unit vector r, and project each of the points onto r
(Fig. 1C). The operation is fast (0(nm) steps) as each locus is treated
independently. We choose an appropriate value of B (Section 3) and
add each locus x to a bin numbered

H - IMI
ASH(x, r, B) _
B

The bin size B is chosen to ensure that if dist(vx, vy) <6, then loci
x, y fall in the same bin with high probability (denoted by f1). On the
other hand, if x, y are non-interacting (dist(vx, vy) is large), they fall
into the same bin with a much lower probability (denoted by f2 <f1).
The choices of 6 and B determine possible values of f1 and f2. For
example, we show that for 6:01, it is possible to construct hash
functions where f1 = 0.95, and at least 50% of all pairs are discarded
(f; 30.5). The efﬁciency of 50% is insufﬁcient as we still have to
test  pairs in the second stage, and have already lost 5% of the
true interactions. The ﬁnal idea is to amplify the bias f1 /f2.

Ampliﬁcation of bias: let l—e denote the desired power (the
fraction of true interacting pairs that are retained for a second-stage
scoring). Parameters L,K are computed automatically by RAPID
(as described below).

We run the hashing procedure LK times, and select only those
pairs that fall in the same bin all K times, in at least one of the L
iterations. We will show (Section 3) that using

_ lnm
_1n(1/f2)’

RAPID will output a high fraction (1 —e) of all interacting pairs, but

ln(lif 1) We
ln(lifz) ’
make the reasonable assumption that the number of truly interacting

pairs is small. Therefore, the number of pairs output by RAPID is also
approximately m6 ln( 1 /e).

We show (Section 3) that the running time for RAPID is bounded
by 0(nmcln(l/e)) steps. Further, any second-stage scoring step to
identify the truly interacting pairs is also bounded by 0(nmc ln( 1 /e))
steps (0(n) steps for each pair). Substituting f1 =0.95, f2 :05, this
gives a run time of 0(nm1‘07ln(l /e)) steps for ﬁltering and second-
stage scoring. Clearly, for large m, we get a substantial speed-up in
running time over the naive 0(nm2) computations while maintaining
the desired sensitivity.

 

L=f1‘K1n(1/s) (3)

at most mcln(l /e) non-interacting pairs, where c: 1+

 

3 MATERIALS AND METHODS

RAPID overview: the input of RAPID includes a SNP genotype
matrix (limited to cases, or to controls), and two parameters 6,8.

The output is a ﬁltered list of paired loci x, y with dist(vx,vy) 36
[Equation (2)], or a high value of xiyﬁd.

The overall algorithm is described below, with details in
subsequent sections. It is applied to cases only, and to controls only,
and the results are merged. We map genotypes at each locus to
vectors in SR". Next, we compute the bin size B for hashing, as well
as parameters L,K. Pairs that map to the same bin all K times in at
least one of L iterations and pass an optional second stage ﬁltering
are returned. While we employ a simple second stage ﬁltering in
our tests, we expect that RAPID will be used in conjunction with
sophisticated tests.

procedure GETINTERACTINGPAIRS(McaseS , Mcontmls , 6, a)
Set P1 = RAPID(McaseS , 6, a)
Set P2 = RAPID(MCOmIOlS , 6, 8)
Output SECONDSTAGEFILTERING(P1U132)

procedure RAPID(M , 6, a)
1. Set M’ = COMPUTEHAPLOIDVECTORS(M)
2. Set (fl ,f2,B, L,K) = COMPUTEBINSIZE(6, e,m, n)
3. Repeat L times
3.1. Repeat K times
3.1.1. Choose a unit random vector r 6 SR"
3.1.2. For each vx EM’
3.1.2.1 Add vx to the bin HASH(vx,r,B)
3.2. For all pairs vx, vy that fall in the same bin all K times,
3.2.1. Add (x,y) to List
4. Return List

Computing haploid vectors: The metric property of statistical
correlations for the haploid case can be extended to genotypes, but
the transformations are more complex. We transform the genotype
vectors to haploid vectors. Consider a single locus with major allele
denoted by a and minor allele denoted by A. Let nag, naA, nAA
denote the counts of the three genotypes. A 3 X 3 contingency table
describes the interaction of the two locations.

A natural decomposition is to decompose the locus into 2naa + n,1 A
‘a’ alleles, and 2nAA +naA ‘A’ alleles. Note that this transformation
is silent on deciding the phasing of heterozygotes for pairs. In
checking interactions between two loci, the heterozygotes were
phased either randomly, or identically. Neither of these choices
works, as subtle interaction effects of minor variants are removed.
See Supplementary Figure S2 for comparisons. Instead, we map
each genotype locus x onto two haploid loci X0,X1. In the ﬁrst,
heterozygous individuals are counted as ‘a’ (major allele), and in
the second, they are counted as ‘A’ (minor allele). Speciﬁcally,

X H _ 0 if x[i] = ‘aa’ or x[i] = ‘aA’
0 l _ 1 otherwise
_ _ 0 if x[i] = ‘aa’
X1m— { 1 otherwise

We show empirically (Supplementary Section S3) that for any
pair x, y of loci, if x, y are interacting (xi), is high), then one of the
four values xiii/f is high as well. The overall algorithm remains
unchanged, except that all loci are transformed into biallelic loci at
the beginning. At the end, a pair x, y is accepted only if at least one
of its four haploid pairs Xi,  is accepted.

 

2858

112 /3.Io's[BumoIpJOJXO'souBuIJOJHIoIq”:duq mot} popBo1umoq

9103 ‘1g15n8nv 110::

Gene—gene interactions in GWAS

 

Bin Size computation and LSH: bin size B and parameters
L,K are used to balance a trade-off between speed, sensitivity and
efﬁciency, and form the heart of the argument. For each SNP x, the
procedure HASH(vx,r, B) maps vx to

lei

Let f1 denote the probability that two interacting pairs fall in the same
bin, and let f2 denote the probability that two non-interacting pairs
fall in the same bin. We must choose bin size B so that interacting
loci (dist(vx, vy) f 6) fall in the same bin with higher probability than
non-interacting pairs. Note that

Hvx—vyH2=1+1—2vx-vy=2—2vx-vy

If x, y are non-interacting, then expected value E(vx - 11y): 0 and
E(Hvx —vy H)=\/2. The separation between 6 and x/2 allows us to
choose an appropriate bin size B. Consider z = (u — v) - r for a random
vectorr 6 fit" on the unit hypersphere (|| r|| = 1). Observe that E(z) = 0
and

V _ 2 2_ . .2 .2 _Hu—VH2
arc) —E(z )—E(z) —EIZ(u. — v.) r. l— —

l

The distribution of (u—v)-r can be approximated by
N(0, llu—vll/ﬂ) (Supplementary Section S5). Let (DIM, denote
the c.d.f of a N(/t,o) distributed variable. If x,y are interacting,
then

f1=Pr(l(Vx—Vy)‘rl <3) (4)
=<I>0ﬂ/ﬁ(B)—<I>0ﬂ/ﬁ(—B)=1—2<I>0ﬂ/ﬁ(—B)

If x, y are non-interacting then

f; =Pr(l(vx —vy)-rl <B)=1—2<I>01m(—B). (5)

Discrete examples of f1,f2,B based on different values of 6 are
shown in Supplementary Table S1 for illustration.

Selecting parameters L,K for two-stage LSH: the probability
that two interacting pairs x, y (respectively, two non-interacting
pairs) fall in the same bin each time in K random hashings is f1K
(respectively, f2K ). Finally, we repeat the super-trials L times. A pair
(x, y) survives if it falls in the same bin all K times, in at least one
of L iterations. Therefore, a fraction LflK of the interacting pairs
are selected, while only a fraction Lf2K of non-correlated pairs are
selected. The run time of this over all m markers is KLmn steps
(since it takes n steps to compute each individual hash).

Various constraints are used to determine the optimum values of
L,K. The probability that a truly interacting pair fails in each of the
L super-trials is bounded by

(1_f1K)L Se—fIKL

By choosing L=f1TKln(l/e), we ensure that eTflKL f a, giving us
the desired sensitivity of l —8. Next, we consider the total running
time. The ﬁltering time is LKmn steps. Assuming that the majority of
the pairs are non-interacting, the total number of pairs that survive
the ﬁltering is given by
(lilszK

Each surviving pair must be tested for interaction via a statistical test,
which is typically 0(n) computations. Therefore, the total number

of computational steps (ﬁltering and testing) is bounded by
LKmn+ (31)sz’< n (6)

To balance the two stages, we choose K = 131%,") so that

10(2)

ln(1/f1)
'"(1/f2’n1n(1/e)

 

mLK_mf2K11~11+
(2) f2 n—(2>(f—1) nn< /s>~§m

and

 

In 1
my were: 1_m,,1,,(1/,)_
f 1 ln(l/fz)

The bin size B is now determined by choosing B that minimizes
the run time (6) subject to the speciﬁed sensitivity 1 —8. Note that
f1,f2 are given in terms of B by Equations (4) and (5), and K ,L
are determined by Equation (3). The minimization is computed
numerically and occurs in the vicinity of BB26/Jn. Altogether,
L,K,f1,f2,B are computed in terms of inputs n,m,6,e.

LKmn =

3.1 Second stage ﬁltering
Each pair output by RAPID is considered in turn. Denote as xgxz, the

XZ-statistic (df :8) on the 9 X 2 contingency table connecting the
possible genotypes at a locus pair x,y. For all pairs, we compute a
xgxz statistic, correlating the two locus genotypes against the case—

control phenotypes. Note that the xgxz table gives a more relevant
statistic, but the X3X3X2 1s eas1er to decompose for ﬁlter1ng. The

xgxz can be decomposed (Lancaster, 1969) as

2 _ 2 2 2
X9 X2 _ Xx,d + Xy.d + X(xy)sd

where the ﬁrst two terms (each with df :2) represent the
marginal contributions at locus x and y, and the third term
xgxy),d is approximately X2 distributed with df :4, representing the
interaction component. In second-stage ﬁltering, we compute xgxz
and xgxy),d statistics. All pairs that match a user-deﬁned cut-off on
the two statistics are considered. Note that in the haplotype case,
the connection between the parameter 6 and the desired X2 cut-off
is explicit, but not in the genotype case. In practice, we usually take
a small value of 6. With small 6 values, the most signiﬁcant pairs
have high sensitivity, and the sensitivity reduces for less signiﬁcant
interactions.

As a ﬁnal step in ﬁltering, we eliminate pairs that are too close,
or are unreliable. Speciﬁcally, for the WTCCC study, the human
Gap track table was downloaded from the UCSC genome browser.
All SNPs within a distance 1 Mb from intervals marked in the gap
table as centromeric, telomeric, heterochromatin or short arm, are
discarded, and all SNP pairs on the same chromosome within a
distance 1 Mb of each other are discarded. The second stage ﬁltering
is not optimal, and possibly discards truly interacting pairs. We only
use these ﬁnal steps to identify interesting examples of interacting
pairs. We expect that RAPID ﬁltering will be used in combination
with a user-speciﬁed second stage of scoring.

3.2 Simulated datasets

To test speed versus power, we took a collection of 50K SNPs
from the WTCCC dataset and exhaustively computed all pairs with
6 f 0.4, and 6 30.1, respectively. These served as positive controls

 

2859

112 /3.Io's[BumoIpJOJXO'souBuIJOJHIoIq”:duq mot} popBo1umoq

9103 ‘1g15n8nv 110::

D.Brinza et al.

 

in testing RAPID with parameter 6:01, and 6:04, respectively.
For different choices of 8, RAPID automatically computes parameters
L,K,B. Let TP (respectively, FN) denote the number of pairs from
the positive set that were ﬁltered (respectively, discarded) by RAPID.
Sensitivity was empirically computed as TP/(TP+FN). Speed-up
was measured by the ratio of the number of steps in the naive
computation to the number of steps in RAPID

I’ll’i’l2

LKmn + (31)Lf2Kn

To test speed versus data-size, we duplicated the WTCCC SNPs and
appropriate number of times to create datasets of size up to 100M
SNPs. Both speed-up, and actual runtimes were plotted against the
threshold 6, after ﬁxing 8=0.05.

To compare RAPID against other ﬁltering approaches, we
simulated two datasets according to two general epistatic models
that have been proposed earlier (Marchini et al., 2005). See
Supplementary Section S4 for details. In Model 1, the odds of disease
increase multiplicatively with genotype both within and between
loci. Model 2 (corresponding to Model 3 from Marchini et al.),
has threshold effects so that the odds of disease increase only if
both loci have at least one disease-associated allele, but additional
minor alleles do not further increase the odds. Marginal effects for
each locus (independent of the other) should be present in Model 1,
but less so for Model 2. For each model, we simulated genotypes
at two interacting loci in n=2000 cases and n=2000 controls. The
distribution of genotypes was governed by the following parameters:
marginal odds for major alleles and minor allele-speciﬁc effects
described by parameter f3. Empirical values of these parameters are
difﬁcult to obtain. Instead, we followed the calculations of Marchini
et al. to derive them using A, where 1+)» is the heterozygous odds
ratio at a single locus, disease prevalence PD = 0.01, and minor allele
frequencies 71' = 71A = 773.

For each choice of parameters A e{0.2,0.5, 1.0} and Tie
{0.05,0.l,0.2,0.5}, and derived values of a and f3, we simulated
1000 interacting pairs, by sampling genotypes values according
to probabilities induced by the model parameters. Signiﬁcance of
search results was corrected using m = 300 000 SNPs.

3.3 WTCCC case—control dataset

We tested the performance of RAPID on a published dataset: the
WTCCC consortium dataset (~2000 individuals in six diseases
[Hypertension (HT), Bipolar Disorder (BD), Crohn’s disease (CD),
Coronary Artery Disease (CAD) and Type 1 and 2 Diabetes (TlD,
T2D)], against ~3000 shared controls, genotyped at ~500 000 loci.
A total of 469 557 SNPs and individuals that passed the WTCCC
quality controls were used.

4 RESULTS

RAPID has two key parameters, 6 and 8. The user decides the
minimum strength of interactions (measured by the X2 statistic),
and uses it to specify a bound on the Euclidean distance 6 between
the transformed vectors [Equation (1)]. The parameter 8 describes
the acceptable type II error rate among the pairs that satisfy the 6
threshold. The parameters L,K also inﬂuence speed and sensitivity,
but can be computed given n,m, 6,8, as described in Equation (3).

   

SensitivltyISpeed-Up of Saudi» Ru ntima
Fillenng Algorithm ? .
1 "15:02 ' ‘33” B
3 LE=EI :I I = * y
$0995.  E n“ és E.
E: ' II 9. .1 s
E ' Sun a I g g;
.- 099 I II 5 3 g
g I . g I:
g ' 1': 2 
5 u 555 1 I i g
m . 1 EL.
I -. Top mm 1’
n . ‘5
095 -. _   G
11} 100 100i] 11 El! 07 U5 El: DI
a DC: - D Illmcsl res u c I135 0
(J5 dU' Ib'ITh hid (ITh hid

Fig. 2. Speed Speed sensitivity trade-offs in RAPID. The trade-offs are
computed as a function of user-deﬁned parameters 6, 8. (a) Speed-up versus
sensitivity trade-offs are measured on a dataset of 50000 WTCCC control
SNPs. Different thresholds 6 are chosen to ﬁlter the top 1000 (6 5 0.1),
10000 (650.4) of SNP pairs, respectively. 86 {0.05,0.1,0.2,0.3,0.4,0.5}.
(b and c) Runtime versus 6. Strongly interacting pairs (6 5 0.5) can be
identiﬁed on large datasets (1M SNPS, 3000 genotypes) with 95% sensitivity
in a few hours on a commodity PC. All experiments were run on a 1.8 GHz,
16GB RAM, Linux machine. Axes have logarithmic scale.

We tested the speed versus sensitivity of RAPID on the WTCCC
control dataset of 3000 individuals, using a different choice of 6, 8.
For each choice of 6, deﬁne the false negatives (FN) as the number
of pairs that exceed the threshold 6, but were rejected by RAPID.
True positives (TP) is the number of pairs exceeding the threshold
that were accepted. Likewise, for each choice of 6,8, we deﬁne
speed up as the drop in number of computations, compared with
the naive approach (0(nm2) computations). Figure 2a describes the
speed versus sensitivity [TP/(TP + FN)] trade-off for 6 = 0.1 and 0.4.
For low values of 6, we can show 2—3 orders of magnitude speed
up without sacriﬁcing sensitivity. We next explored the speed-up,
and actual runtimes for increasingly large datasets (Fig. 2b—c), and
different thresholds after ﬁxing the 8 = 0.05 (or 5%). Even for large
datasets (1M SNPs and 3000 genotypes), strongly interacting pairs
can be identiﬁed with 95% sensitivity in a few hours on a commodity
PC. In practice, we work with low 6 values for large datasets as only
the most signiﬁcant interactions are required.

We compared RAPID against two strategies widely used to measure
interactions (Evans et al., 2006; Marchini et al., 2005). Strategy I can
be thought of as a ﬁltering strategy. Only a subset of the possible
pairs are tested, those in which one of the SNPs (Strategy Ia), or
both (Strategy Ib) show a marginal effect. In Strategy II, all pairs of
SNPs are tested for interaction. On the face of it, Strategy II should
demonstrate the highest power. However, Evans et al. argue that as
the scoring stage is limited to the ﬁltered pairs, the correction factor
is based on the number of pairs being considered at the scoring
stage. To ensure an overall type I error of at most a, the signiﬁcance
level of the test for each pair is set to (It/1'2 where 1'2 is the number
of ﬁltered pairs. For Strategy I, 1'; :m, but for the ﬁIll interaction
model, 1;:  Due to the larger number of tests in Strategy II,
Strategy I often outperforms Strategy II (Fig. 3).

As RAPID is only a ﬁltering strategy, it cannot be directly
compared. Here, we took only the top 1'2 =(31)Lf2K pairs output by
RAPID, and used a second-stage xgxz P-value with df = 8 (Section 3)
to compute Type I error a. We set the signiﬁcance level for each test
to a/(('£1)Lf2K). We note that with the speed-ups obtained, we can
also use non-parametric, permutation tests of signiﬁcance.

We tested the approach on two different models of disease
interaction (Section 3). In Model 1, the odds of disease increase

 

2860

112 /3.Io's[BumoIpJOJXO'souBuIJOJHIoIq”:duq 111011 popBo1umoq

9103 ‘1g15n8nv 110::

Gene—gene interactions in GWAS

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Model1 )»=0.2 )»=0.5 )»=1.0
0. _ 0- 0.
as as as
3 '9. _ 3 m._[ 3 m- Marchini
o O o O o o
n. / n. / n. 0 :gigilla
o_ A/4 o__ o_ o Strat lb
0 | | | | O | | | | O |
0.05 0.50 0.05 0.50 0.50
Minor allele frequency Minor allele frequency Minor allele frequency
Model 2 )»=0.2 )»=0.5 )»=1.0
0. _ 0.- 0.
as as as f
0. “*T‘\ cz_ 0. _
O | | | | O | | | | O | | | |
0.05 0.50 0.05 0.50 0.05 0.50

Minor allele frequency Minor allele frequency Minor allele frequency

Fig. 3. Power of RAPID. Power comparison of strategies used in
GWASs. Interacting loci are simulated (300K SNPs with 2000 cases and
2000 controls) according to two general epistatic models, ﬁrst described
by Marchini et al. In the ﬁrst model, the case odds increase multiplicatively
upon addition of minor alleles at either loci. In the second (threshold) model,
the odds increase only if both locus have at least one minor allele, and
do not improve with addition of minor alleles. The model parameters in
both cases are derived numerically using the single locus heterozygous odds
ratio 1+)» 0» e {0.2, 0.5, 1.0}), and disease incidence PD 2 0.01. Model 1 (top
panels) shows marginal effects, as do models with higher values of )» (= 1).
RAPID outperforms other methods, and shows a clear improvement when the
marginal effects are low.

multiplicatively with genotype both within and between loci.
Model 2 (corresponding to Model 3 from Marchini et al.), has
threshold effects so that the odds of disease increase only if both
loci have at least one disease-associated allele, but additional minor
alleles do not further increase the odds. For each model, we
simulated genotypes at two interacting loci in n=2000 cases and
n=2000 controls. The distribution of genotypes was governed by
the parameter )», where 1+)» is the heterozygote odds ratio. For
each choice of parameters, we simulated 1000 pairs, and corrected
using m: 300 000 SNPs. Figure 3 shows power of each strategy for
different simulation parameters. Low values of )» present the higher
challenge, as association exists with low marginal effects.

In all tests, the performance of RAPID shows greatly improved
power over previous approaches. Our analysis reveals that many
signiﬁcant pairs do not show individual effects and might be missed
by Strategy I, but are identiﬁed by RAPID without the overhead of
multiple tests.

4.1 Results on the WTCCC data

We analyzed six WTCCC datasets with RAPID, using stringent
parameters 6:01, 8:005 for speed, and to detect the most
signiﬁcant interactions ﬁrst. The search time for each data set was
about 75 min, with a total of ~10M pairs output prior to second-
stage ﬁltering. For second-stage ﬁltering, we ﬁltered out proximal
pairs (Section 3), and only kept pairs whose xgxz P-value was

10_7 or better, and there was a signiﬁcant interaction component
(the xiv) d P £0.01). This resulted in a total of 34 hits across all

datasets (Supplementary Table S2). A select subset of pairs with a
stronger interaction component is shown in Table 1.

BD: we ﬁnd a single pair [rs13126272 (chr4), rs1918942 (chr12)]
with interaction above the threshold—the xgxz P-value is 8.9 X

Table 1. Signiﬁcant gene+gene interactions in the WTCCC dataset

 

 

SNPA SNP B ngz xfxym
P-value P-value
BD
rsl3126272 (chr4) rsl918942 (chr12) 8.88e—22 6.28e—3
CAD
rs4970605 (chr1) r511216700 (chr11) 1.42e— 17 6902—3
rsl2061996 (chr1) rs2658728 (chr12) 1.07e—8 3.79e—3
rs2369810(chr1) rs2164411 (chr2) 4.352—13 6.6le—3
rs2164411 (chr2) rsl684835 (chr5) 1.27e—12 7.552—3
rs2164411 (chr2) rsl7139253 (chr5) 6.97e—14 9.312—4
rs2164411 (chr2) rs7840975 (chr8) 2.042— 13 4112—3
rs2164411 (chr2) rsl7369334 (chr10) 4.06e—13 7.112—3
rs2164411 (chr2) rs906467 (chr20) 1.252— 12 6102—3
rs9875049 (chr3) rs2658728 (chr12) 2.35e—9 8.11e—3
rsl828416 (chr4) rs2658728 (chr12) 2.40e—9 3.32e—3
HT
rsl7146413 (chr11) rsl2590471 (chr14) 4.52e—9 5.892—5
T1D
rs7576174 (chr2) rsl2661352 (chr6) 2.83e—15 3.22e—3
rs6546693 (chr2) rs3130564 (chr6) 2462— 19 4052—3
rs935497 (chr3) rs9268858 (chr6) 2.142—41 6.62e—3
rs244545 (chr5) rs2596571 (chr6) 2.77e—34 6.002—3
rs6888673 (chr5) rs2523742 (chr6) 1.89e—11 3.53e—3
rsl2661352 (chr6) rs9320240 (chr6) 8.66e—15 8.686—3
rsl2661352 (chr6) rs4359308 (chr13) 1.72e—15 8.05e—4
rsl2661352 (chr6) rsl7413237 (chr13) 5.42e— 14 6.3 le—3
rsl2661352 (chr6) rsl7263755 (chr18) 1.23e—14 6.18e—3
rsl2661352 (chr6) rs4818677 (chr21) 7.18e—16 1.68e—3
rsl2661352 (chr6) rs6518154 (chr21) 2762— 15 3642—3
T2D
rs2164411 (chr2) rs884289 (chr10) 6672— 13 5.712—3

 

10T22. The SNP rs13126272 is proximal to the solute carrier
protein ANTl. Mutations in the ANT1 gene mediate the BD
phenotype (Siciliano et al., 2003). The SNP rs1918942 is proximal
to contactin (CNTNl), a neural adhesion gene that is implicated
in neurological disorders including BD (O’Dushlaine et al., 2010).
In the WTCCC dataset, the two SNPs show a strong interaction
(P-value 6.3 X 10T3).

CAD: among the interactions observed, many involve SNP
rs2164411 (chr 2) in the gene DNMT3a, involved in DNA
methylation. Altered global DNA methylation has been observed
in CAD and other cardiovascular diseases (Movassagh et al., 2010;
Sharma et al., 2008).

T] D: we observe a number of interactions connected to T1D. Many
variants, including rsl2661352 (HLA-DQB2), rs9268858 (HLA-
DRA), rs2523742, rs244545 (HLA-B) involve genes on the 6p21
HLA locus which is a known susceptibility locus for T1D (Undlien
and Thorsby, 2001). Consider the interaction between rs935497
and rs9268858. rs934597 lies in the PPMlL gene which has been
implicated in diabetes in mouse knockouts (Chen et al., 2008).
It adds a signiﬁcant interaction term to rs9268858 (X2 P-value
6.6 X 10‘3), which lies in the HLA-DR region. Likewise, consider

 

2861

112 /3.Io's[BumoIpJOJXO'souBuIJOJHIoIq”:duq quii popco1umoq

9103 ‘1g15n8nv 110::

D.Brinza et al.

 

the interaction of rs244545 and rs2596571. The variant rs244545
lies in a gene desert, but upstream of the TF islet-1. Islet-1 is
known to activate insulin gene expression, and is also implicated in
pancreatic islet cell development. Mutations in ISL-1 are associated
with maturity-onset diabetes of the young (Barat-Houari et al.,
2002).

H T: HT is a complex disorder with high heritability, but few loci
have been conﬁrmed in GWASs. The SNP rs12590471 associates
weakly (P-value 6.08><10T6). However, the xgxz statistic with

SNP rs17146413 has P-value 4.52 ><10_9. The SNP rs17146413
lies in EHD 1, involved in endocytosis of IGF-1 receptor (Rotem-
Yehudar et al., 2001). Circulating IGF-1 levels are known to mediate
HT (Galderisi et al., 2001).

5 DSCUSSON

The chief contribution of RAPID is a methodological one. We make a
dent in the seemingly intractable problem of identifying pairs of loci
that interactively associate with the phenotype, while not showing
any marginal effects. On the one hand, the algorithm is naive,
especially from a statistician’s perspective. It only uses XZ-like tests,
when many, more sophisticated tests are possible. This is done with
a purpose. First, RAPID is designed to be complementary to the array
of tools being developed for interactions. It is meant to be used as a
ﬁltering tool, to identify a small number of candidate pairs on which
any statistic can be applied. Indeed, there are many different models
by which loci can interact. RAPID starts with the lowest common
denominator, on the idea that any form of interactions implies
a departure from the XZ-values. The combination of RAPID with
multiple second-stage scoring strategies, can help capture different
interactions.

Second, our method exposes an interesting relationship between
X2 and the Euclidean metric, which has not (to our knowledge) been
previously explored. This geometrization of statistical correlations
should open new algorithmic approaches for identifying multiple-
locus interactions. The extension of the metric properties to the
genotype case is signiﬁcantly harder than haplotypes, and raises
open questions about multi-allelic loci. In some of our own work,
we are considering more accurate projections of the genotypes, and
have extended it to multi-allelic loci as well (Tesler,G., submitted
for publication).

Here, we only handle the pairwise interaction case. While we can
work out a formal technique for multiple loci, there is a pragmatic
way in which we can simply consider chains (or, dense, connected
components of interacting locus pairs). The results on the WTCCC
dataset, while interesting in themselves, are only presented as an
exemplar of how RAPID can be used. We plan to collaborate with
other groups and domain experts on speciﬁc association studies.

We conclude with a remark on the advent of inexpensive next
generation sequencing. Clearly, we will see an explosion in the
number of sites m (including rare variations), as well as the sizes of
the cohorts n. Empirical false discovery rate (FDR) calculations help
reduce the multiple testing problem. However, the application of
these tests demands computational efﬁciency, providing additional
motivation for algorithmic developments in genetics.

Funding: National Science Foundation IGERT training grant DGE-
0504645 (to MS); NSF grant DMS-0718810 (to GT); NSF grant
IIS-081090 (to V.B.).

Conﬂict of Interest: none declared.

REFERENCES

Barat-Houari,M. et al. (2002) Positional candidate gene analysis of Lim domain
homeobox gene (Isl-1) on chromosome 5q11-q13 in a French morbidly obese
population suggests indication for association with type 2 diabetes. Diabetes, 51,
164W1643.

Chen,Y. etal. (2008) Variations in DNAelucidate molecular networks that cause disease.
Nature, 452, 429435.

Cordell,H.J. (2009) Genome-wide association studies: Detecting gene-gene interactions
that underlie human diseases. Nat. Rey. Genet, 10, 392404.

Evans,D. et al. (2006) Two-stage two-locus models in genome-wide association. PLoS
Genet, 2, 6157.

Galderisi,M. et al. (2001) Inverse association between free insulin-like growth factor-
1 and isovolumic relaxation in arterial systemic hypertension. Hypertension, 38,
8407845.

Indyk,P. and Motwani,R. (1998) Approximate nearest neighbors: towards removing the
curse of dimensionality. In STOC ’98: Proceedings of the Thirtieth Annual ACM
Symposium on Theory of Computing. ACM, New York, NY, USA, pp. 604413.

Lancaster,I-I.O. (1969) The Chi-squared Distribution. John Wiley & Sons, Inc., New
York, NY, pp. 26w270.

Marchini,J. et al. (2005) Genome-wide strategies for detecting multiple loci that
inﬂuence complex diseases. Nat. Genet, 37, 413417.

Movassagh,M. et al. (2010) Differential DNA methylation correlates with differential
expression of angiogenic factors in human heart failure. PLoS ONE, 5, 68564.
O’Dushlaine,C. et al. (2010) Molecular pathways involved in neuronal cell adhesion
and membrane scaffolding contribute to schizophrenia and bipolar disorder
susceptibility. Mol. Psychiatry [Epub ahead of print; doi:10.1038/mp.2010.7; 16

February 2010].

Rotem-Yehudar,R. et al. (2001) Association of insulin-like growth factor 1 receptor
with EHDl and SNAP29. J. Biol. Chem., 276, 33054+33060.

Sharma,P. et al. (2008) Detection of altered global DNA methylation in coronary artery
disease patients. DNA Cell Biol, 27, 3577365.

Siciliano,G et al. (2003) Autosomal dominant external ophthalmoplegia and bipolar
affective disorder associated with a mutation in the ANT 1 gene. Neuromuscul.
Disord., 13, 162465.

The Wellcome Trust Case Control Consortium (2007) Genome-wide association study
of 14,000 cases Of seven common diseases and 3,000 shared controls. Nature, 447,
661478.

Undlien,D.E. and Thorsby,E. (2001) HLA associations in type 1 diabetes: merging
genetics and immunology. Trends Immunol, 22, 467469.

Yang,Q. etal. (1999) Case-only design to measure gene-gene interaction. Epidemiology,
10, 1677170.

 

2862

112 /3.Io's[BumoIpJOJXO'SOIquJOJHIoIq”:duq quii papeo1umoq

9103 ‘1g15n8nv 110::

