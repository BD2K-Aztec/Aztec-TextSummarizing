ORIGINAL PAPER

Vol. 30 no. 20 2014, pages 2931-2940
doi:1 0. 1093/bioinfonnatics/btu409

 

Systems biology

Advance Access publication July 10, 2014

MAGNA: Maximizing Accuracy in Global Network Alignment

Vikram Seraph“2 and Tijana Milenkovicl'3'4'*

1Department of Computer Science and Engineering, University of Notre Dame, IN 46556, 2Department of Computer
Science, Brown University, RI 02912, 3ECK Institute for Global Health, University of Notre Dame, IN 46556 and
4Interdisciplinary Center for Network Science and Applications (iCeNSA), University of Notre Dame, IN 46556, USA

Associate Editor: Igor Jurisica

 

ABSTRACT

Motivation: Biological network alignment aims to identify similar re-
gions between networks of different species. Existing methods com-
pute node similarities to rapidly identify from possible alignments the
high-scoring alignments with respect to the overall node similarity. But,
the accuracy of the alignments is then evaluated with some other meas-
ure that is different than the node similarity used to construct the align-
ments. Typically, one measures the amount of conserved edges. Thus,
the existing methods align similar nodes between networks hoping to
conserve many edges (after the alignment is constructed!).

Results: Instead, we introduce MAGNA to directly ‘optimize’ edge
conservation while the alignment is constructed, without decreasing
the quality of node mapping. MAGNA uses a genetic algorithm and our
novel function for ‘crossover’ of two ‘parent’ alignments into a superior
‘child’ alignment to simulate a ‘population’ of alignments that ‘evolves’
over time; the ‘fittest’ alignments survive and proceed to the next
‘generation’, until the alignment accuracy cannot be optimized further.
While we optimize our new and superior measure of the amount of
conserved edges, MAGNA can optimize any alignment accuracy
measure, including a combined measure of both node and edge con-
servation. In systematic evaluations against state-of-the-art methods
(IsoRank, MI-GRAAL and GHOST), on both synthetic networks and
real-world biological data, MAGNA outperforms all of the existing
methods, in terms of both node and edge conservation as well as
both topological and biological alignment accuracy.

Availability: Software: http://nd.edu/~cone/MAGNA

Contact: tmilenko@nd.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on January 27, 2014; revised on May 13, 2014; accepted on
June 23, 2014

1 INTRODUCTION
1.1 Motivation and background

Sequence alignment has led to breakthroughs in our understand-
ing of how cells work. However, genes (i.e. their protein prod-
ucts) interact with one another to carry out cellular processes.
And this is exactly what proteirkprotein interaction (PPI) net-
works model. (While we focus on PPI networks, our ideas are
applicable to any network type.) Network alignment (NA) can
ﬁnd regions of similarities between PPI networks of different

 

*To whom correspondence should be addressed.

species that are a likely consequence of evolutionary relation-
ships between the networks. Unlike sequence alignment that ig-
nores genes’ interactions, NA can capture complex cellular
events that result from the collective behavior of the genes. As
such, NA could further our biological understanding.

As recent biotechnological advances continue to yield more
PPI data (Breitkreutz et al., 2008; Hulovatyy et al., 2014), align-
ment of PPI networks of different species continues to gain im-
portance (Sharan and Ideker, 2006). This is because NA could
guide the transfer of biological knowledge across species between
conserved (aligned) network regions (Sharan and Ideker, 2006).
This is important, as many proteins remain functionally unchar-
acterized even for well studied species. Traditionally, the across-
species transfer of biological knowledge has relied on sequence
alignment. However, as PPI networks and sequences can capture
complementary functional slices of the cell, implying that PPI
networks can uncover function that cannot be uncovered from
sequences by current methods, restricting alignment to sequences
may limit the knowledge transfer (Faisal and Milenkovic, 2014;
Memisevic et al., 2010).

Complexity theory dictates that network (or graph) compari-
son is computationally hard. The underlying problem is that of
subgraph isomorphism, which asks whether one graph (the
source) appears as an exact subgraph of another graph (the
target). Answering this is NP—complete (Cook, 1971). Also,
simply answering this is not enough when comparing PPI net-
works, as one PPI network is rarely an exact subnetwork of
another because of biological variation (Kuchaiev et al., 2010).
It is more desirable to answer how similar two networks are and
in what regions they share similarity. NA can do this.

NA seeks to ‘ﬁt’ the source into the target in the ‘best possible
way’ even if the source is not an exact subgraph of the target. An
alignment is a mapping between nodes of the source and nodes
of the target that is expected to conserve structure (or topology)
between the networks. [Methods exist that can align more than
two networks (Flannick et al., 2008; Liao et al., 2009), but we
focus on pairwise NA.] As NA is computationally hard, heuris-
tics must be sought.

NA can be local (LNA) or global (GNA). Initial NA solutions
aimed to match local network regions (Berg and Lassig, 2004,
2006; Flannick et al., 2006; Kelley et al., 2004; Koyuturk et al.,
2006; Liang et al., 2006; Sharan et al., 2005). That is, in LNA,
subnetworks, rather than entire networks, are aligned (Ciriello
et al., 2012; Mina and Guzzi, 2014). But, aligned regions can
overlap, leading to ‘ambiguous’ many-to-many mappings.
Thus, GNA was proposed (Faisal et al., 2014; Flannick et al.,

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com 2931

112 /310'slcu1nofp103x0"sotJBuiJOJutotq/ﬁduq 11101} pQPBOIII/IAOG

91oz ‘Og isnﬁnV uo ::

V.Saraph and T.Milenkovié

 

2008; Klau, 2009; Kuchaiev and Przulj, 2011; Kuchaiev et al.,
2010; Liao et al., 2009; Milenkovic et al., 2010b, 2013;
Narayanan et al., 2011; Neyshabur et al., 2013; Patro and
Kingsford, 2012; Singh et al., 2007, 2008; Zaslavskiy et al.,
2009). In contrast to LNA, GNA compares entire networks,
typically by aligning every node in the source to exactly one
unique node in the target. We focus on GNA, but our ideas
are also applicable to LNA.

Traditionally, GNA has relied on biological information ex-
ternal to network topology, e. g. sequence similarity (Sharan and
Ideker, 2006). To extract the most from each source of biological
information, it would be good to know how much of new bio-
logical knowledge can be uncovered solely from topology before
integrating it with other sources of biological information
(Kuchaiev and Przulj, 2011; Milenkovic et al., 2010b;
Neyshabur et al., 2013; Patro and Kingsford, 2012). Only after
methods for topological GNA are developed that result in align-
ments of good topological and biological quality, it would be
beneﬁcial to integrate them with other biological data to further
improve the quality. Thus, we focus on topological GNA, but
additional biological data can easily be added.

Existing GNA methods, of which the more prominent ones
(and which we consider) are outlined below, typically use a two-
step approach: (i) score the similarity of pairs of nodes from
different networks, and (ii) feed these scores into an alignment
strategy to identify high-scoring alignments from all possible
alignments.

IsoRank (Singh et al., 2007) scores nodes from two networks
by a PageRank-based spectral graph theoretic principle: two
nodes are a good match if their neighbors are good matches.
Biological scores can be added to these topological scores to
get final node scores. An alignment is then constructed by greed-
ily matching the high-scoring node pairs. IsoRank has evolved
into IsoRankN to allow for multiple GNA (Liao et al., 2009), but
this is out of the scope of our study.

The GRAAL family of algorithms (Kuchaiev and Przulj, 2011;
Kuchaiev et al., 2010; Memisevic and Przulj, 2012; Milenkovic
et al., 2010b), developed in parallel with the IsoRank family, use
graphlet (or small induced subgraph) counts to compute math-
ematically rigorous topological node similarity scores
(Milenkovic and Przulj, 2008; Milenkovic et al., 2010a; Solava
et al., 2012). Intuitively, two nodes are a good match if their
extended network neighborhoods are topologically similar with
respect to the graphlet counts. Also, MI—GRAAL (Kuchaiev and
Przulj, 2011), the latest family member, can automatically add
other (biological) node similarity scores into ﬁnal scores. It is the
alignment strategies of the GRAAL family members that are
different. MI—GRAAL combines strategies of the other mem-
bers, thus outperforming each of them.

More recent GHOST (Patro and Kingsford, 2012) uses ‘spectral
signatures’ to score node pairs topologically, while also allowing
for inclusion of biological scores. GHOST’s alignment strategy is
seed-and-extend, like MI-GRAAL’s, except that the two solve a
quadratic versus a linear assignment problem, respectively.

1.2 Our approach and contributions

Existing GNA methods construct alignments by scoring all
node pairs with respect to the nodes’ similarities and by

rapidly identifying high-scoring alignments from all possible
alignments. Here, high-scoring alignments are typically those
that ‘maximize’ (greedily or optimally) the node similarity
score totaled over all mapped nodes (Chindelevitch et al.,
2013; Kuchaiev and Przulj, 2011; Kuchaiev et al., 2010;
Milenkovic et al., 2010b; Patro and Kingsford, 2012; Singh
et al., 2007). However, the accuracy (or quality) of the align-
ments is then evaluated with respect to some other measure
of an inexact fit of two networks, which is different than
the node scoring function that is used to construct the align-
ments in the first place. Typically, one measures the amount
of conserved edges (Kuchaiev and Przulj, 2011; Patro and
Kingsford, 2012). Thus, the existing methods align similar
nodes between networks with the goal (or hope!) of conserving
many edges under the alignment (after the alignment is
constructedl). Instead, we introduce MAGNA, a framework
for directly ‘maximizing’ (optimizing) accuracy in GNA with
respect to the amount of conserved edges while the alignment
is constructed (without decreasing the quality of node
mapping).

Optimizing the amount of conserved edges would require find-
ing a global optimum over the search space consisting of all
possible node mappings. Owing to the large size of the space,
exhaustive search is computationally intractable. But, approxi-
mate optimization techniques exist, such as genetic algorithms
(Cross et al., 2000). Hence, we adapt the idea of genetic algo-
rithms to the problem of GNA to develop MAGNA as a con-
ceptually novel GNA framework. To our knowledge, genetic
algorithms have not been used for PPI GNA thus far.
MAGNA simulates a ‘population’ of alignments that ‘evolves’
over time (the initial population can consist of random align-
ments or of alignments produced by existing methods). Then,
the ‘ﬁttest’ candidates (those that conserve the most edges) sur-
vive and proceed to the next generation. This is repeated until the
algorithm converges so that the amount of conserved edges
cannot be optimized further.

Much of what deﬁnes any genetic algorithm is the crossover
function, which ‘combines’ two candidates (i.e. alignments) into
a new one. And because genetic algorithms have not been used
for GNA thus far, we had to devise a novel function for cross-
over of two parent alignments into a child alignment that reﬂects
each parent. The crossover function is our major contribution,
because it allows MAGNA not only to combine alignments of
any existing method to improve them but also to produce from
scratch its own superior alignments.

It is not obvious how to measure the quality of an alignment
(Milenkovic et al., 2010b), i.e. which measure to optimize as the
‘ﬁtness’ function within the genetic algorithm. Clearly, a good
alignment should maximize the amount of conserved edges.
Many measures have been proposed to quantify this, all of
which are heuristics and thus correctly reﬂect the actual align-
ment quality in some cases but fail to do so in other cases.
Therefore, we introduce a new (still heuristic) alignment quality
measure that takes the best from each existing measure. While we
optimize with MAGNA this new measure as well as the existing
measures, importantly, MAGNA can optimize any measure of
alignment quality, topological or biological (or both) and of
node or edge conservation (or both).

 

2932

112 /310'slcu1nofp103x0"sotJBuiJOJutotq/ﬁduq 11101} popcorn/nag

91oz ‘Og isnﬁnV uo ::

MAGNA

 

We evaluate MAGNA against IsoRank, MI-GRAAL and
GHOST by aligning: (i) a high-conﬁdence yeast PPI network
with its noisy counterparts, where the true node mapping is
known, and (ii) real-world PPI networks of different species,
where the true node mapping is unknown. Within each of
these popular evaluation tests (Kuchaiev and Przulj, 2011;
Kuchaiev et al., 2010; Patro and Kingsford, 2012), we perform
multiple subtests to allow for a systematic method comparison.
Importantly, in all (sub)tests, MAGNA improves both node and
edge conservation, as well as both topological and biological
alignment quality, of all of the existing methods.

2 METHODS

2.1 Alignment crossover function

Here, we deﬁne our novel ‘crossover function’, which is at the heart of
MAGNA. The function should take two ‘parent’ alignments and produce
a ‘child’ alignment that is intended to reﬂect both parents.

Let G1(V1, E1) and G2(V2, E2) be two networks with V,- and E,- as the
sets of nodes and edges, respectively. Let m = |V1| and n = |V2|. Without
loss of generality, suppose |V1| 5 |V2|. An alignment of G1 to G2 is a total
injective function f : V1 —> V2; every element of V1 is matched uniquely
with an element of V2. If |V1| = |V2|, and if f is injective, then in fact f is
bijective.

Let V1={x1,...,xm} and V2={y1,...,y,,}. Let [n]={l,...,n} be the
set of natural numbers from 1 to n. A permutation is a bijection
a : [n] —> [n]. Then, with the assumption that m = n, and given a ﬁxed
number labeling of nodes as above, we can represent any alignment f with
a corresponding permutation a that maps node labels to node labels.
Even though it is rare that |V1|= |V2|, we can easily force this to be
true by adding dummy, zero-degree nodes 2,- to V1, as:
71: V1U{zm+1,...,z,,}. Thus, we will simply assume that |V1|= |V2|,
without explicitly referring to V1. Therefore, any alignment can be rep-
resented as a permutation, which is critical to our crossover function.
(Henceforth, we use ‘permutation’ and ‘alignment’ interchangeably.)

Let S” denote the set of all permutations. Notice that |S,,| = nl, which is
large. In theory, to ﬁnd an alignment of maximum quality (with respect
to a given criterion), we could ‘simply’ enumerate all permutations and
evaluate the quality of each one. However, this is impractical because of
the large size of S”, so we require a clever search heuristic. We design such
a heuristic as follows. First, we create a graph with S” as the set of nodes
in which two permutations (alignments) are connected by an edge if the
alignments are ‘adjacent’ (see below for the deﬁnition). Second, as intui-
tively the alignment quality is continuous in alignment ‘adjacency’ (in the
sense that two ‘adjacent’ alignments should be of similar quality, or in
other words, a small perturbation of an alignment is not expected to
greatly affect its quality), we exploit the topology of this graph to
deﬁne a function for crossover of two alignments. Namely, we deﬁne
the child alignment as the alignment that is ‘in the middle’ between two
given parent alignments in this graph, as such, child is expected to inherit
approximately half of each of its parents.

Given two permutations a and r, we now formally deﬁne what it
means for a and r to be adjacent. A transposition of a permutation is a
new permutation that ﬁxes every element of the original permutation,
except two elements, which are swapped. Then, two permutations are
adjacent if they differ by a transposition; that is, a and r are adjacent if
there is a transposition i) such that a = v o r. We create graph 1",, with the
set of nodes S” and the set of edges E”, where an edge between a and r is
in E” if and only if a and r are adjacent. Then, we deﬁne 0 ® 1:, the
crossover of any two permutations a and r from S”, as a permutation,
which is the midpoint on a shortest path from a to r in 1",, (see below for
details). This deﬁnition captures what we desire from a crossover

 

function: it can be shown that for randomly selected permutations a
and r, |oﬂ(o®r)|/n —> 1/2 and |rﬂ(o®r)|/n —> 1/2 as n —> 00.
That is, 08) r is expected to share approximately half of its aligned
pairs with a, and likewise with r. A proof of the above statement relies
on the fact that the expected number of cycles in a permutation is
@(log (n)). We do not discuss this further, as it would require more
basics of abstract algebra, which is beyond the scope of this article; see
Dummit and Foote (2006); Knuth (1997) for details.

We now deﬁne our crossover function in more detail. Suppose
a, r e S", and let u = 01*. We take Knuth’s canonical cycle decompos-
ition v=c1 . . .ck. Then, for each i, we cyclically shift c,-=(x1 . . .xh) by a
random index to get a cycle (yl . . . yh). We obtain a new cycle 8,- by
dropping the second half of the shifted cycle. That is, 5,-=(yl . . . yh/z).
Finally, we deﬁne the crossover of a and r as 0 ® 1: = a > 81 . . . ck. Knuth’s
canonical decomposition and the cycle decomposition algorithm are both
well known (Dummit and Foote, 2006; Knuth, 1997). For the crossover
function’s pseudocode, see Supplementary Section S].

2.2 MAGNA: genetic algorithm-based GNA framework

A genetic algorithm mimics the evolutionary process, guided by the ‘sur-
vival of the ﬁttest’ principle (Back, 1996). It begins with an initial ‘popu-
lation’ of ‘members’. Members ‘crossover’ with one another to produce
new members. The ‘child’ resulting from a crossover should resemble
both of its ‘parents’. Crossing over different pairs of members at a
given ‘generation’ yields new members, which comprise the new gener-
ation of members. The probability of a member being chosen to crossover
with another member is determined by its ‘ﬁtness’, so that ﬁtter members
are more likely to crossover. To prevent the size of the population from
growing without bound, the size is kept constant across all generations,
with only the ﬁttest members surviving from one generation to the next.
To ensure that the maximum ﬁtness of the population is non-decreasing,
with each generation, a designated ‘elite’ class of the ﬁttest members is
automatically passed to the next generation. As the algorithm progresses,
newer generations are produced, with ﬁtness (hopefully) increasing, until
a stopping criterion is reached. To specify a genetic algorithm, we need to
specify all of the above parameters.

In MAGNA, members of a population are alignments. We use differ-
ent types of initial populations: (i) all random alignments, (ii) random
alignments mixed with an IsoRank’s alignment, (iii) random alignments
mixed with a MI-GRAAL’s alignment and (iv) random alignments mixed
with a GHOST’s alignment. Because we focus on topological NAs
(Section 1.1), we produce all alignments by using only topological infor-
mation in the existing methods’ node scoring function. For each type of
initial population, we test populations of different sizes: 200, 500, 1000,
2500, 5000, 10 000 and 15000. (It is because the population sizes are large
that we cannot form an initial population consisting only of alignments
produced by an existing method. Instead, we ﬁll in the remaining part of
the existing method’s population with random alignments.) The mathem-
atics from Section 2.1 gives us a suitable crossover function for producing
a child alignment that resembles both of its parents. Our ﬁtness function
is the measure of alignment quality we choose to optimize: edge correct-
ness (EC), induced conserved structure (ICS) or symmetric substructure
score (S3, Section 2.3), but it can be any measure. In every generation, we
keep the best half of the population from the previous generation, and we
ﬁll the remaining half of the population with alignments produced by
crossovers. We select pairs of alignments to be crossed as follows. At a
given generation of population size p, we have crossover possibilities.
This is too large a number to consider all of thezm. Thus, to select cross-
over pairs, we use roulette wheel selection, a popular selection strategy
(Back, 1996), which chooses members with probability in linear propor-
tion to the members’ ﬁtness. We let MAGNA run for many generations,
from 0 to 2000 in increments of 200. The ﬁttest alignment from the last
generation is reported as the final alignment. For MAGNA’s pseudo-
code, see Supplementary Section Sl.

 

2933

112 /3.10'spzumofp1q1x0"sotJBuiJOJutotq/ﬁduq 11101} popcorn/nag

91oz ‘Og isnﬁnV uo ::

V.Saraph and T.Milenkovié

 

Fig. 1. Illustration of S3. The alignment between networks G and H has
EC of 4/5=0.8, ICS of 4/5=0.8 but S3 of 4/6=0.67. EC rewards for
aligning four edges in G to four edges in H and penalizes for misaligning
an edge in G to a non-edge in H, but it fails to penalize for misaligning a
non-edge in G to an edge in H. ICS rewards for aligning four edges in G
to four edges in H and penalizes for misaligning an edge in H (between
the aligned nodes) to a non-edge in G, but it fails to penalize for mis-
aligning an edge in G to a non-edge in H. S3 also rewards for aligning four
edges in G to four edges in H, but unlike EC or ICS, S3 penalizes for
misaligning both an edge in G to a non-edge in H and a non-edge in G to
an edge in H

Our implementation of the alignment crossover function takes O(| V|)
time. MAGNA’s bottleneck tends to be the computation of alignment
quality F. If the measure of F is EC, ICS or S3, then for an alignment, it
takes O(|E|log (|E|)) time to compute F. Finally, sorting each generation
of size p takes 0(plog (p)) time, though this is typically negligible com-
pared with the computation of F. If MAGNA is run for N gener-
ations, the overall time complexity of MAGNA is O(N(p| V| -l-
p|E|log (|E|) +plog (p))). MAGNA is embarrassingly parallelizable,
which can lead to a drastic speedup.

2.3 New alignment quality measure

To motivate our new measure of alignment quality, the S3, we first pre-
sent drawbacks of the existing EC and ICS measures.

Let f: V1 —> V2 be an alignment between two networks G1(V1, E1)
and G2(V2, E2). If X g V2, let G2[zﬁ be the induced subnetwork of G2
with node set X. Also, if H is a subnetwork of G2, let E(H) be its edge
set. Let f(E1)={(f(u),f(v)) e E2 : (u, v) e E1}, and let f(V1)=
{f(v) 6 V2 : v 6 V1}.

EC of f is the ratio of the number of edges conserved by f to the
mEm (Kuchaiev

IE1|
et al., 2010). Because EC is deﬁned with respect to the source but not
the target network, it fails to penalize alignments mapping sparser net-
work regions to denser ones (Fig. 1).

ICS of f is the ratio of the number of edges conserved by f to the
number of edges in the subnetwork of G2 induced on the nodes in G2

. . _ _ WEDI
that are aligned to the nodes 1n G1. ICS(f) |E(G2U(V1)Dl
Kingsford, 2012). Because ICS is deﬁned with respect to the target but
not the source network, it fails to penalize alignments mapping denser
network regions to sparser ones (Fig. 1).

Therefore, we deﬁne S3 with respect to both the source network and
If(E1)|
IE1|+|E(G2U(V1)1)I — WEDI
between EC, ICS and S3 is the denominator. Intuitively, if G1 and
G2[f(V1)] are overlaid into a composite graph, then the denominator of
S3 is the number of unique edges in this composite graph. Thus, S3 of an
alignment is 100% if and only if f is a perfect embedding. As such, S3
penalizes both alignments that map denser network regions to sparser
ones and alignments that map sparser network regions to denser ones

(Fig. 1).

 

number of edges in the source network: EC(f)=

(Patro and

the target network: S3(f)= . The difference

3 RESULTS AND DISCUSSION
3.1 MAGNA on networks with known node mapping

3.1.] Data description We ﬁrst aim to validate MAGNA by
analyzing the largest connected component of the high-conﬁdence
yeast Saccharomyces cerevisiae PPI network (Collins et al., 2007)
with 1004 proteins and 8323 PPIs. We align this network with the
same network augmented with lower-conﬁdence PPIs from the
same study (Collins et al., 2007). We analyze different noise
levels, by adding 0, 5, 10, 15, 20 and 25% of lower-conﬁdence
PPIs; we add higher-scoring lower-conﬁdence PPIs ﬁrst. Clearly,
the original network is an exact subgraph of each noisy network.
We refer to the resulting alignments as ‘noisy low-conﬁdence yeast
alignments’. Because the aligned networks are deﬁned on the same
set of nodes and differ only in the number of edges, we know the
correct node mapping.

3.1.2 MAGNA parameters MAGNA’s parameters areithe
type of initial population, population size, maximum number
of generations (i.e. genetic algorithm iterations) and ﬁtness func-
tion (i.e. alignment quality measure; Sections 2.2 and 2.3). We
evaluate MAGNA comprehensively, by varying values of each
parameter.

We use four population types: random, IsoRank, MI-
GRAAL and GHOST. The random population aims to produce
a high-quality alignment from scratch (by relying only on our
new alignment crossover function), while the other population
types try to improve on the existing methods. We test seven
population sizes from 200 to 15000. We vary the maximum
number of generations up to 2000, in increments of 200. We
optimize three alignment quality measures: EC, ICS and S3.
See Sections 2.2 and 2.3 for details.

Each combination of initial population type, population size,
maximum number of generations and optimization function re-
sults in one ﬁnal (best) alignment. This comprehensive testing
has resulted in the total of 5544 final alignments.

The eﬂect of the initial population type Because we aim to com-
pare MAGNA against IsoRank, MI-GRAAL and GHOST (and
also random alignments), we consider all four initial population

types.

The eﬂect of population size We ﬁnd that, in general, larger
population size is always preferred, independent of the initial
population type, maximum number of generations and optimiza-
tion measure (Supplementary Section S2 and Supplementary
Fig. S1). Henceforth, we continue with the largest population
size of 15 000.

The ejﬁct of the maximum number of generations We ﬁnd that,
in general, the larger the population size, the larger number of
generations is preferred, which is ~2000 for random initial popu-
lation, independent on the optimization measure, and ~4007
1200 for IsoRank, MI—GRAAL or GHOST initial population,
depending on the optimization measure (Supplementary Section
S2 and Supplementary Fig. S1). In general, GHOST initial popu-
lation ‘converges’ faster than MI-GRAAL and IsoRank popu-
lations. Because of MAGNA’s design, the alignment quality
never drops from one generation to the following one. Hence,
even with IsoRank, MI-GRAAL and GHOST populations, the

 

2934

112 /3.10'spzumofp1q1x0"sotJBuiJOJutotq/ﬁduq 11101} popcorn/nag

91oz ‘Og isnﬁnV uo ::

MAGNA

 

Anna E,
neon—5%
g -105
=300—15n4.
—20%.
E70044“:
3600
3
£500
E400
3
300
E
3200
3100
anHHHHHHHHHHHHHH
eaaaaaaeeweesae
Random isuRank MI-GRML GHOST

Number of correctly allgnad nodes O
a a a a g g "é

ca

 

Randurn IsoRmk MI‘GRAAL GHOST

Initial Populatlon [Optlmizlng Measure)

3
c:

 

lﬁanaam
I IsoRank
lMI-GRMIL

 

8
o

E
c:

lG-OST
IMAGNA

 

3
c:

 

8
c:

 

S
c:

 

 

Number 01' correctly aligned nodes DJ
3 IS 8
O D O

a
o

 

o

0% 5% 10% 1 5% 20% 25%
NOISE IEVEI

 

U

800
nRandam

 

 

 

 

 

 

 

Number of correctly allg nod nodes

 

 

Nola level

Fig. 2. Correctness of noisy (A and B) low-conﬁdence and (C and D) rewired yeast alignments (for noise of 0725%), in terms of the node correctness.
Panels (A) and (C) show results for alignments produced by four existing algorithms (Random, IsoRank, MI-GRAAL and GHOST) as well as by
running MAGNA on populations containing the existing method’s alignments. We use four different populations, corresponding to the four methods.
For each population, we show results for an original alignment produced by the existing algorithm (0), as well as for MAGNA’s alignments produced
when optimizing EC, ICS or S3. All results are for population size of 15000 and 2000 generations. For alignment correctness with respect to additional
criteria, see Supplementary Figs S2783. Panels (B) and (D) show, for each noise level, comparison of results from panels (A) and (C) between MAGNA’s
best alignment (over all initial populations and optimization measures) and the original alignments of the existing methods. (Original random alignments

have low scores and might not be visible.)

results are never worse at the 2000th generation compared with
the 40(Ll200th generation. Thus, we continue with the max-
imum number of generations of 2000. It is encouraging that
some methods can converge fast, indicating that MAGNA can
produce high-quality alignments quickly.

The eﬂect of the optimization measure To compare our S3 with
existing EC and ICS, we continue by optimizing all three
measures.

3.1.3 MAGNA evaluation and comparison with existing
methods For each of the six noise levels, four initial population
types (each of size 15000), and three optimization measures, we
obtain with MAGNA one final alignment, i.e. the best alignment
(with respect to the given optimization measure) at the 2,000‘11
generation. In addition, we study the original alignments pro-
duced by the existing methods. Then, we compare these original
alignments to those produced by MAGNA to see whether
MAGNA improves the alignment quality of the existing align-
ments. Note that independent on which of the three alignment
quality measures (EC, ICS or S3) we optimize, the question re-
mains on how to best evaluate the correctness of the resulting
ﬁnal alignment. Certainly, we could use any of the three align-
ment quality measures for this purpose. However, because the

true node mapping is known when aligning the high-confidence
yeast PPI network to its noisy counterparts, we can actually
evaluate each method more fairly by counting the number of
correctly aligned node pairs (or ‘node correctness’).

When we do this, we find that MAGNA improves all of the
original alignments (i.e. all of the existing methods), across all
levels of noise, and for each of the three optimization measures
(Fig. 2A and B). In general, the higher the noise level, the larger
our improvements on the existing methods (Fig. 2A).

The eﬂect of the initial population type GHOST’s original align-
ments are overall slightly superior to or comparable with MI-
GRAAL’s original alignments, depending on the noise level and
the optimization measure, both are superior to IsoRank’s ori-
ginal alignments, and all three are superior to random original
alignments (Fig. 2A and B). These results are consistent to those
in the literature (Kuchaiev and Przulj, 2011; Kuchaiev et al.,
2010; Patro and Kingsford, 2012). Thus, one might expect that
MAGNA’s improved alignments of GHOST would be of better
quality than MAGNA’s improved alignments of MI—GRAAL,
that both would be of higher quality than MAGNA’s improved
alignments of IsoRank and that all three would be of higher
quality than MAGNA’s improved alignments of random align-
ments. Interestingly, we find that this is not always the case

 

2935

112 /3.10'spzumofp1q1x0"sotJBuiJOJutotq/ﬁduq 11101} popcorn/nag

91oz ‘Og isnﬁnV uo ::

V.Saraph and T.Milenkovié

 

(Fig. 2A and B): there are surprising effects of the choice of the
initial population type. For example, our improved alignments of
MI—GRAAL are sometimes better than our improved alignments
of GHOST. Or, even more interestingly, for larger noise levels, it
is the random population that results in the best alignments; that
is, we improve more when starting from completely random
alignments than we do when starting from the
original alignments of IsoRank, MI-GRAAL or GHOST
(Fig. 2A and B).

The above results suggest that MAGNA is capable of not only
improving alignments generated by the existing methods but also
generating from completely random alignments its own new su-
perior alignments, especially for higher noise levels. Implications
are as follows. First, because current PPI networks are likely
noisier than those used in this section (V enkatesan et al.,
2009), our results suggest that one might be able to improve
on the current best PPI NAs [of different species, when the
actual node mapping is unknown (Section 3.2)] simply by
using MAGNA on completely random alignments of the net-
works. Second, recall that random initial population converges
the slowest of all populations, if at all. And recall that we stop
MAGNA after 2000 iterations, as all initial populations but
random one converge even before that. Because of this, and be-
cause random population is superior for larger noise levels, it is
possible that for such levels, the alignment quality could be im-
proved even further by running MAGNA longer, as dictated by
the available computing resources.

The eﬁ’ect of the optimization measure No single optimization
measure (out of EC, ICS and S3) is always superior with respect
to the node correctness as the alignment quality measure; the
results depend on the choice of MAGNA’s parameters. Over
all noise levels, random initial population prefers (in the sense
that it results in the highest node correctness for) EC and S3
equally, IsoRank initial population prefers ICS, MI—GRAAL’s
initial population prefers S3 and GHOST initial population pre-
fers EC (Fig. 2A and B). Hence, S3, as well as EC, seem to be
preferred overall in this context. We even further study the effect
of the three optimization measures by computing Pearson cor-
relation between the ‘node correctness’ on one hand and EC, ICS
or S3 on the other, across all alignments from Fig. 2A. A higher
and more statistically significant correlation would indicate that
the given optimization measure is capable of uncovering more
correct alignments. The node correctness correlates most signiﬁ-
cantly with our new S3 measure, suggesting its superiority over
the existing measures (Table 1).

Additional results for noisy high-conﬁdence yeast
alignments Thus far, we have evaluated alignment quality

Table 1. Correlations of the node correctness with EC, ICS, and S3

 

 

Measure Correlation P-value

EC 0.7538 3.9 x 10*19
ICS 0.8339 2.7 x 10*26
53 0.8980 1.4 x 10*35

 

with respect to the node correctness. All results are qualitatively
similar with respect to additional criteria (Supplementary Figs S2
and S3).

3.1.4 An alternative evaluation test on networks with known node
mapping: random edge rewiring In addition to noisy low-confi-
dence alignments, we also validate MAGNA by aligning (using
the same parameters as in Section 3.1.3) the original yeast net-
work with the same network augmented by randomly rewiring 0,
5, 10, 15, 20 or 25% of its edges. We refer to the corresponding
alignments as ‘noisy rewired yeast alignments’. To account for
non-deterministic nature of the rewiring, for each noise level, we
produce 10 rewired instances and we average alignment quality
over the 10 alignments. Again, because the networks being
aligned are deﬁned on the same set of nodes and differ only in
the number of edges, we know the correct node mapping.
However, now it is not necessarily the case that the original is
an exact subgraph of a noisy network.

In this test, MAGNA is even more superior than above
(Fig. 2C and D; Supplementary Figs S4 and S5). Importantly,
when MAGNA is run on random initial population, it is super-
ior compared with when it is run on IsoRank, MI-GRAAL or
GHOST population. That is, MAGNA generates superior align-
ments from scratch.

3.2 MAGNA on networks without known node mapping

3.2.] Data description Next, we align PPI networks of different
species: a yeast S .cerevisiae PPI network with 2390 proteins and
16 127 PPIs (Collins et al., 2007) and a human PPI network with
9141 proteins and 41456 PPIs (Radivojac et al., 2008). We
choose these species for the following reasons. Owing to its
ease of genetic manipulation, yeast has been one of the best
studied species. Interactomes for other species remain largely
incomplete. Although the human PPI network is also still incom-
plete, studying this network is important for understanding
complex diseases. And because the analyzed human network
combines PPIs from many sources, it is of good coverage
(Milenkovic et al., 2010b; Radivojac et al., 2008). Also, the
same networks have already been analyzed with the existing
methods, which makes the method evaluation systematic.

We adopt two additional tests: we align PPI networks of (i)
Campylobacterjejuni and Escherichia coli and (ii) Mesorhizobium
loti and Synechocystis sp. PCC6803. We choose these species
because their alignments were also evaluated in MI-GRAAL
(Kuchaiev and Przulj, 2011) and GHOST (Patro and
Kingsford, 2012) studies, and because: (i) C.jejuni and E.coli
are currently the most complete bacterial PPI networks, which
are relevant for studying disease, and (ii) Mesorhizobium and
Synechocystis networks were produced by the same lab and ex-
perimental method, thus offering consistency. All data for these
species come from the MI—GRAAL study.

Below, we ﬁrst discuss yeastihuman. Then, in Section 3.2.5, we
discuss C.jejunFE-coli and MesorhizobiwniSynechocystis.

3.2.2 MAGNA parameters We use the same parameters as in
Section 3.1.3. For each of the three pairs of networks, all com-
binations of the parameters result in 12 MAGNA’s final align-
ments, plus four original alignments produced by the existing
methods.

 

2936

112 /310'slzumofp1q1x0"sotizuiJOJutotq/ﬁduq 11101} popcorn/nag

91oz ‘Og isnﬁnV uo ::

MAGNA

 

3.2.3 MAGNA’s topological quality and comparison with existing
methods Because we do not know the true node mapping, we
instead evaluate the alignment quality with respect to the three
optimization measures (EC, ICS and S3), as well as with respect
to an independent measureithe size of the largest common con-
nected subgraph (LCCS). We measure LCCS for the following
reason. EC, ICS and S3 all measure the amount of conserved
edges. However, of two alignments that conserve similar
amounts of edges, one could expose large and topologically com-
plex regions of network similarity, while the other could fail to
do so. Thus, in addition to counting aligned edges, it is important
that the aligned edges cluster together to form large and dense
connected subgraphs (Milenkovic et al., 2010b). To this end,
common connected subgraph is deﬁned as a connected subgraph
(not necessarily induced) that appears in both networks
(Kuchaiev and Przulj, 2011; Kuchaiev et al., 2010; Milenkovic
et al., 2010b). For formal details, see Supplementary Section S3.

Importantly, in general, MAGNA again outperforms all exist-
ing methods with respect to all alignment quality measures
(Fig. 3A; Supplementary Fig. S6). However, there are differences
in results depending whether we optimize EC, ICS or S3 (see
below). Clearly, optimizing EC, ICS or S3 is the best way to
obtain alignments with high EC, ICS or S3, respectively. But it
would be encouraging if optimizing one measure would also re-
sult in alignments of high quality with respect to other measures
(including LCCS).

Indeed, when optimizing EC or S3, MAGNA is able to im-
prove random, IsoRank, MI-GRAAL and GHOST alignments
across all four measures (Fig. 3A and Supplementary Fig. S6).
The only exception is EC of GHOST, which MAGNA does not
improve. Interestingly, while optimizing S3 results in lower EC
for MAGNA than for GHOST, MAGNA has higher S3, ICS
and LCCS. Thus, even though some of the conserved edges are
‘compromised’ by running MAGNA on the GHOST popula-
tion, MAGNA’s alignment may be of better topological quality
than GHOST’s after all; MAGNA seems to remove only ‘irrele-
vant’ (isolated) conserved edges from the GHOST’s alignment,
which decreases EC, while it adds ‘relevant’ edges (those in dense
and complex conserved network regions), as indicated by im-
proved LCCS.

Optimizing ICS results in unusual behavior. Regardless of the
initial population, MAGNA’s ICS is ~100% (Supplementary
Fig. S6). But the corresponding alignments have low EC and
S3. This suggests that ICS may not be a meaningful optimization
measure after all. S3 always outperforms EC with respect to all
alignment quality measures, including LCCS, with the exception
of EC (as expected). Thus, overall, S3 is the best optimization
measure.

It has been shown on the same data that the existing methods’
alignment quality is statistically signiﬁcant (Kuchaiev and Przulj,
2011; Kuchaiev et al., 2010; Milenkovic et al., 2010b; Patro and
Kingsford, 2012). As MAGNA improves on their quality,
clearly, the quality of MAGNA’s alignments is also statistically
significant.

3.2.4 MAGNA’S biological quality and comparison with existing
methods In this study, we focus on topological NAs (Section
1.1). Yet, nothing prevents us to measure biological quality of the
alignments. We do so by counting the percentage of aligned node

A 70%

60% lMI-GRAAL

50%

40%

3TH:
20%
10%

0%

EC ICS 3’ LCCS

]

LCCS

Topologlcal dig nrnent qualltyI
I I
6)
§ —.

nRanoom
IlsoRanK
IMI-GRAAL
50% IGHOST

P.’.'."‘.‘§.N:‘.‘
40%
30%
20%
10%
0%
EC Ice 5!

Measure

Topological alignment quallty

C 70%

I Random
I IsoRank
50% . Nil-GRAAL

IGHOST

I MAGNA
5016
40%
30%
20%
10%
0%

EC ICS 5‘

LCCS

Topological allg nment qualityI

Fig. 3. Topological alignment quality for (A) yeastihuman, (B) C.jejunii
E.coli and (C) MesorhizobiuWSynechocy.stis PPI networks. Each panel
shows, for each of the four alignment quality measures (shown on x-axis),
comparison of results between MAGNA’s best alignment (over all initial
population types and optimization measures) and the original alignments
of the existing methods. For details, see Supplementary Figs S6, 810
and 814

pairs in which the two proteins perform the same biological func-
tion, i.e. Gene Ontology (GO) terms (Ashburner et al., 2000). We
also measure biological alignment quality with respect to GO
semantic similarity: (i) we use the Lin method within IT-GOM
(Mazandu and Mulder, 2013) to compute semantic similarity of
two GO terms, (ii) we use the Average measure to compute simi-
larity between two aligned proteins by averaging semantic simi-
larities across all of the proteins’ associated GO term pairs and
(iii) we average the resulting similarities over all aligned protein

 

2937

112 /310'slzumofp1q1x0"sotizuiJOJutotq/ﬁduq 11101} popcorn/nag

91oz ‘Og isnﬁnV uo ::

V.Saraph and T.Milenkovié

 

pairs, thus assigning a single semantic similarity score to each
alignment.

Just as topologically, among the existing methods, GHOST is
superior biologically, followed by MI—GRAAL, IsoRank and
random alignments, respectively (Fig. 4A and Supplementary
Figs S77S9). Before we discuss MAGNA’s biological quality,
we note that while MAGNA is guaranteed to never decrease
topological quality with respect to a given optimization measure,
nothing prevents MAGNA’s biological quality to decrease while
optimizing its topological quality. Hence, it would be encoura-
ging if MAGNA improved or at least conserved biological qual-
ity of the existing methods. Indeed, MAGNA almost never
decreases and, in many cases, it actually improves biological
quality of the existing methods (Fig. 4A and Supplementary
Figs S77S9), while at the same time, it improves their topological
quality. Unlike for the existing methods, when optimizing topo-
logical quality of random alignments, MAGNA always improves
the alignments’ biological quality, and the improved alignments
often outperform the existing methods, which again indicates
MAGNA’s superiority.

In terms of the effect of the optimization measure
(Supplementary Figs S8 and S9), just like with respect to topo-
logical quality, ICS is a poor optimization measure with respect
to biological quality as well, while unlike with respect to topo-
logical quality, EC is now slightly superior optimization measure
compared with S3.

Adding other biological information (e. g. sequence similarity)
into node scores before constructing alignments, or optimizing
topological and biological quality, could further improve
MAGNA.

3.2.5 MAGNA’s results for C.jejuniiE.coli and Mesorhizobiumi
Synechocystis alignments Thus far, we have discussed results
for yeast-human. Generally, when aligning C.jejuniiEcoli or
MesorhizobiurmSynechocystis network pairs, alignment quality
trends are qualitatively the same as for yeast-human. That is,
MAGNA still outperforms (and importantly, to even a greater
extent compared with yeast-human) all methods with respect to
all measures. For topological results, see Fig. 3B and C and
Supplementary Fig. S10 and S14. For biological results, see
Fig. 4B and C and Supplementary Figs SlliSl3 and S15.
Importantly, unlike for yeast-human, when MAGNA optimizes
EC or S3 on GHOST initial population for C.jejuniiEcoli
or MesorhizobiumiSynechocystis, it now actually improves the
original GHOST alignment. Also, now running MAGNA on
random initial population actually outperforms running
MAGNA on GHOST initial population. This again demon-
strates that MAGNA can not only improve upon existing
alignments but also produce its own superior alignments from
scratch.

In terms of the effect of the optimization measure
(Supplementary Figs S107Sl5), just as for yeastihuman, ICS
is typically a poor optimization measure, both in terms of
topological and biological alignment quality (this is more
pronounced for C.jejuniiEcoli than for Mesorhizobiumi
Synechocystis). Optimizing EC drastically improves topological
quality of random alignments and IsoRank, and it also (margin-
ally) improves topological quality of MI-GRAAL and GHOST.
Just as for yeastihuman, optimizing S3 is even better, as it is

50%

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

A IRGMM
E IlsaRank
T:
3
u-
E
II
E
I:
E
E
E
2
E
2
m
“It at nodes marina al least k GO Ierrns GO semantic
similarity
Type of GO analysis
40%
B lRandan
a. 35% -
E
u. 30% -
E
E 25%
E.
— 'If:
E 20
n_".i 15% -
E
_a 10%
I!
5% -
0% -
‘M'n m‘nodes sharing at least k GO larrns GO semantic similarin
type of GO analysis
0 8% [Random
5 IMIGRML
3 nor-roar
U‘
E IMAGNA
. —
E
K
E
E
'5
2
3
2
Di
“3% of nodes 511le at least I: GO terms

 

type or G0 mama

Fig. 4. Biological alignment quality for (A) yeastihuman, (B) C .jejun'h
E.coli and (C) MesorhizobiuWSynechocy.sti.s networks, in terms of: (i) the
percentage of aligned pairs in which the two proteins share at least k GO
terms (k = 1, 2) and (ii) GO semantic similarity, when considering all GO
terms. Results are similar for biological process GO terms only
(Supplementary Figs S7 and SI 1). Panel (A) considers GO data obtained
by an experimental evidence code (EXP) and all GO data of any evidence
code (ALL). No such distinction is made in panels (B) and (C), as the
data do not support it. Unlike GO data from panels (A) and (B), GO
data from panel (C) do not allow for computing semantic similarities.
Comparison is shown between MAGNA’s best alignment and the ori-
ginal alignments of the existing methods. For details, see Supplementary
Figs 877815

almost always superior to optimizing EC for each topological
measure (except EC, as expected). In terms of biological quality,
optimizing EC and S3 yields somewhat similar resultsiin some
cases, EC is better, and in others, S3 is better; however, as unlike
EC, S3 is never the worst optimization measure (for
MesorhizobiumiSynechocystis), this may indicate that S3 is
better.

 

2938

112 /310'S[BHmO[pJOJXO'SOIJBLUJOJIIIOICI”Idllq 11101} popcorn/nag

91oz ‘Og isnﬁnV uo ::

MAGNA

 

   

0.3
3K
0.25 ‘
I
0.2 . 0014051-
A
"w ms - ‘ _ oMAGNA
A Y‘H
0.1
I GE
0.05 ,. M43
D .—
100 1000 10000 100000 1000000

Running lime In seconds (log)

Fig. 5. Running times (x-axis) and S3 scores (y-axis) of MAGNA (when
S3 is optimized on random initial population) and of the existing methods
(IsoRank, MI-GRAAL and GHOST), when aligning yeastihuman
(YPH), C .jejuniiEcoli (CPE) or Me.sorhizobiuWSynechocystis (MPS)
networks

3.2.6 Bottom line In summary, we have demonstrated superior-
ity of MAGNA over the existing methods with respect to
topological alignment quality. Also, over all alignments of real
networks and all biological alignment quality analyses
(Supplementary Figs S8, S9, S12, S13 and S15), in majority
(70%) of cases, MAGNA’s optimization of topological quality
of the existing methods (including random alignments) actually
improves the existing methods’ biological quality as well, with
respect to at least one of the optimization measures. And even
when MAGNA does not improve biological alignment quality of
some existing method by optimizing topological quality of the
same method, MAGNA always improves (or at least preserves)
biological quality of that method by optimizing topological qual-
ity of some other existing method, which further conﬁrms
MAGNA’s superiority. In terms of which measure of alignment
quality to optimize within MAGNA, over all alignments of real
networks, because optimizing S3 is always superior to optimizing
EC with respect to topological results, whereas the two are com-
parable with respect to biological results (with perhaps slight
superiority of S3), S3 seems to be the best optimization measure.

3.2.7 Running time analysis To illustrate MAGNA’s running
time and compare it against the existing methods’ running
times, we focus on MAGNA’s alignments of the three pairs of
real-world PPI networks when S3 is optimized on random initial
population. We find that MAGNA is typically superior to all
existing methods, sometimes even at a lower computational cost,
especially compared with GHOST (Fig. 5). Speciﬁcally, in all
pairs of species except yeastihuman, MAGNA outperforms
from completely random alignments all of IsoRank, MI-
GRAAL and GHOST, at a higher (yet still reasonable) compu-
tational cost compared with IsoRank and MI-GRAAL but at a
lower computational cost compared with GHOST (Fig. 5). For
yeastihuman, MAGNA still outperforms IsoRank and MI-
GRAAL (again, at a higher computational cost) (Fig. 5). Even
though MAGNA does not outperform GHOST for these two
species when run on random initial population, GHOST’s run-
ning time is drastically higher than any of the other methods’
times (Fig. 5); further, MAGNA does improve on GHOST when
run on a non-random initial population (Fig. 3A). All running
times were measured on a 64-core 2.3 GHz AMD Opteron 6378
server with 128 GB of RAM. For a fair comparison, MAGNA
as well as each of the existing methods was run serially using a
single core.

4 CONCLUDING REMARKS

We present a conceptually novel framework for ‘optimizing’
GNA with respect to any alignment quality measure, which out-
performs the existing state-of-the-art methods. Given the tremen-
dous amounts of biological network data that are being
produced, network alignment will only continue to gain import-
ance, as it can be used to transfer biological knowledge from
well-characterized species to poorly characterized ones between
aligned network regions. Also, analogous to sequence alignment,
network alignment can be used to infer species phylogeny based
on similarities of their biological networks. Thus, it could lead to
new discoveries about the principles of life, evolution, disease
and therapeutics.

ACKNOWLEDGEMENTS

The authors thank Dr H. Bunke for suggestions on MAGNA
parameters, Drs R. Patro and C. Kingsford for assistance with
GHOST and Drs O. Kuchaiev and N. Przulj for the data from
MI—GRAAL study.

Funding: National Science Foundation (NSF) CCF—l3 19469 and
NSF EAGER CCF-l243295 grants.

Conflict of Interest: none declared.

REFERENCES

Ashbumer,M. et al. (2000) Gene ontology: tool for the uniﬁcation of biology. Nat.
Genet, 25, 2&29.

Back,T. (1996) Evolutionary Algorithms in Theory and Practice: Evolution Strategies,
Evolutionary Programming, Genetic Algorithms. Oxford University Press,
Oxford, UK.

Berg]. and Lassig,M. (2004) Local graph alignment and motif search in biological
networks. Proc. Natl Acad Sci. USA, 101, 14689714694.

Berg]. and Lassig,M. (2006) Cross—species analysis of biological networks by
Bayesian alignment. Proc. Natl Acad. Sci. USA, 103, 10967710972.

Breitkreutz,B.J. et al. (2008) The BioGRID Interaction Database: 2008 update.
Nucleic Acids Res., 36, D6377D640.

Chindelevitch,L. et al. (2013) Optimizing a global alignment of protein interaction
networks. Bioinformatics, 29, 276572773.

Collins,S. et al. (2007) Toward a comprehensive atlas of the phyisical interactome of
saccharomyces cerevisiae. Mol. Cell Proteomics, 6, 4394150.

Cook,S. (1971) The complexity of theorem—proving procedures. In: Proceedings of
the 3rd Annual ACM Symposium on Theory of Computing. ACM Press, Shaker
Heights, OH, pp. 1517158.

Ciriello,G. et al. (2012) AlignNemo: A Local Network Alignment Method to
Integrate Homology and Topology. PLoS ONE, 7, e38107-l-.

Cross,A. et al. (2000) Convergence of a hill—climbing genetic algorithm for graph
matching. Pattern Recognit., 33, 186371880.

Dummit,D. and Foote,R. (2006) Abstract Algebra. John Wiley and Sons,
Hoboken, NJ.

Faisal,F., Zhao,H. and Milenkovic,T. (2014) Global Network Alignment in The
Context of Aging. Computational Biology and Bioinformatics, IEEE/ACM
Transactions on, PP, 1.

Faisal,F.E. and Milenkovic,T. (2014) Dynamic networks reveal key players in
aging. Bioinformatics, 30, 172171729.

Flannick,J. et al. (2006) Graemlin general and robust alignment of multiple large
interaction networks. Genome Res., 16, 116%1181.

Flannick,J. et al. (2008) Automatic parameter learning for multiple network align—
ment. In: RECOMB. pp. 2147231.

Hulovatyy,Y., Solava,R.W. and Milenkovic,T. (2014) Revealing Missing Parts of
the Interactome via Link Prediction. PLoS ONE, 9, e90073.

Kelley,B.P. et al. (2004) PathBLAST: a tool for alignment of protein interaction
networks. Nucleic Acids Res., 32, 83788.

 

2939

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”K1111] 11101} popcorn/100g

91oz ‘Og isnﬁnV uo ::

V.Saraph and T.Milenkovié

 

Klau,G. (2009) A new graph—based method for pairwise global network alignment.
BMC Bioinformatics, 10, S59.

Knuth,D. (1997) Art of Computer Programming, Volume I: Funthzmental
Algorithms. 3rd edn. Addison—Wesley Professional, Reading, MA.

Koyuturk,M. et al. (2006) Pairwise alignment of protein interaction networks.
J. Comput. Biol., 13, 1827199.

Kuchaiev,O. et al. (2010) Topological network alignment uncovers biological func—
tion and phylogeny. J. R. Soc. Interface, 7, 134171354.

Kuchaiev,O. and Przulj,N. (201 1) Integrative network alignment reveals large regions
of global network similarity in yeast and human. Bioinformatics, 27, 13931396.

Liang,Z. et al. (2006) NetAlign: a web—based tool for comparison of protein inter—
action networks. Bioinformatics, 22, 217572177.

Liao,C. et al. (2009) Isorankn: spectral methods for global alignment of multiple
protein networks. Bioinformatics, 25, i2537i258.

Mazandu,G.K. and Mulder,N.J. (2013) DaGO—fun: tool for gene ontology—
based functional analysis using term information content measures. BMC
Bioinformatics, 14, 284.

MemisevicN. and Przulj,N. (2012) C—GRAAL: common—neighbors—based global
graph alignment of biological networks. Integr. Biol, 4, 7344743.

MemisevicN. et al. (2010) Complementarity of network and sequence information
in homologous proteins. J. Integr. Bioinformatics, 7, 135.

Milenkovic,T. et al. (2010a) Systems—level cancer gene identiﬁcation from protein
interaction network topology applied to melanogenesis—related interaction net—
works. J. R. Soc. Interface, 7, 423437.

Milenkovic,T. et al. (2010b) Optimal network alignment with graphlet degree vec—
tors. Cancer Inform., 9, 1217137.

Milenkovic,T. and Przulj,N. (2008) Uncovering biological network function via
graphlet degree signatures. Cancer Inform, 6, 2577273.

Milenkovic,T. et al. (2013) Global network alignment in the context of aging. In:
Proceedings of the International Conference on Bioinformatics, Computational
Biology and Biomedical Informatics. BCB’13, pp. 23723. ACM, New York, NY.

Mina,M. and Guzzi,P.H. (2014) Improving the robustness of local network align—
ment: design and extensive assessment of a Markov Clustering—based approach.
IEEE/ACM Transactions on Computational Biology and Bioinformatics, 99, 1.

Narayanan,A. et al. (2011) Link prediction by de—anonymization: How we won the
Kaggle social network challenge. In: Proceedings of the 2011 International
Joint Conference on Neural Networks (IJCNN). IEEE, San Jose, CA,
pp. 182571834.

Neyshabur,B. et al. (2013) Netal: a new graph—based method for global alignment of
protein protein interaction networks. Bioinformatics, 29, 165441662.

Patro,R. and Kingsford,C. (2012) Global network alignment using multiscale spec—
tral signatures. Bioinformatics, 28, 310573114.

Radivojac,P. et al. (2008) An integrated approach to inferring gene—disease associ—
ations in humans. Proteins, 72, 10331037.

Sharan,R. and Ideker,T. (2006) Modeling cellular machinery through biological
network comparison. Nat. Biotechnol, 24, 427433.

Sharan,R. et al. (2005) Conserved patterns of protein interaction in multiple species.
Proc. Natl Acad. Sci. USA, 102, 1974w1979.

Singh,R. et al. (2007) Pairwise global alignment of protein interaction networks by
matching neighborhood topology. In: Research in Computational Molecular
Biology. Springer, Berlin, Heidelberg, pp. 1(r31.

Singh,R. et al. (2008) Global alignment of multiple protein interaction networks.
Proc. Pac. Symp. Biocomput., 13, 3037314.

Solava,R. et al. (2012) Graphlet—based edge clustering reveals pathogen—interacting
proteins. Bioinformatics, 18, i4807i486.

Venkatesan,K. et al. (2009) An empirical framework for binary interactome map—
ping. Nat. Methods, 6, 83r90.

Zaslavskiy,M. et al. (2009) Global alignment of protein—protein interaction net—
works by graph matching methods. Bioinformatics, 25, i2597i267.

 

2940

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”K1111] 11101} popcorn/100g

91oz ‘Og isnﬁnV uo ::

