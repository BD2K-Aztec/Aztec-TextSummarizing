BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

E.L6pez-Camacho et al.

 

other hand, researchers in metaheuristics frequently search for
real—world problems to assess the performance of new algo—
rithms, so our solution could lead to the appearance of more
efﬁcient techniques for solving molecular docking problems.

To the best of our knowledge, this platform is the first to
integrate a set of single— and multi—objective metaheuristics to
solve docking problems.

2 METHODS

Although the original jMetal Java-based framework, jMetalep, incorp-
orates a set of multi-objective algorithms, it also includes a number of
single-objective techniques that have been assessed using a set of bench-
marking problems. The ﬁrst group of algorithms includes particle swarm
optimization (PSO) (Kennedy and Eberhart, 1995), a number of variants
of GAs (steady-state, generational and cellular) and a differential
evolution solver (DE) (Storn and Price, 1997). As for multi-objective
metaheuristics, jMetalep provides classic techniques such as Non-
dominated Sorting Genetic Algorithm-II (Deb et al., 2002) and more
recent state-of-the-art algorithms such as the speed-constrained multi-
objective PSO (Nebro et al., 2009) and Multiobjective Evolutionary
Algorithm Based on Decomposition (MOEA/D) (Zhang and Li, 2007).

To solve the molecular docking problem, our purpose has been to
carry out a clean integration of AutoDock 4.2 and jMetalep with
certain goals in mind: the resulting software should be easy-to-use by
AutoDock users, and it should be efﬁcient (Supplementary Fig. S1).
The execution parameters of a given experiment are conﬁgured using a
docking parameter ﬁle, which contains the settings of the algorithm to be
executed. If a jMetalep metaheuristic has been selected, then jMetalep
takes control. As metaheuristics are iterative algorithms that work with
sets of tentative solutions that are modiﬁed according to a number of
operators (e.g. in the case of GAs the operators are selection, crossover
and mutation), whenever a new solution has to be evaluated, it is sent
back to AutoDock to apply its scoring function. If the running algorithm
is single-objective, AutoDock returns the total free binding energy; in the
case of a multi-objective technique, we adopt the approach of Janson
et al. (2008) and two values are returned: the intermolecular energy
Emm that describes the binding afﬁnity of the ligandireceptor conform-
ation, and the intramolecular energy Elm“ that characterizes the ligand
deformation. Once the algorithm iterations have ﬁnished, the best
solution (or solutions in the case of selecting a multi-objective technique)
is returned to the AutoDock code, so the docking log ﬁle is created,
containing the results obtained.

In this way, we achieve the ﬁrst of the aforementioned goals, making
the software easily usable. The second goal, efﬁciency, is achieved because
of the use of multi-threading. AutoDock and jMetalep run in their own
thread inside the same process, communication between them is carried
out through shared memory and there is a negligible overhead when they
synchronize.

3 DISCUSSION

The use of the jMetalep framework provides several advan—
tages for those researchers in drug discovery who are interested
in improving the docking results with metaheuristics that are
different from the searching methods provided by AutoDock
4.2. To demonstrate the benefits of our proposal, we evaluated
a set of single—objective metaheuristics implemented in
jMetalep on a ﬁrst standard benchmark provided by Morris

et a]. (1998) and a second benchmark that involves ﬂexibility
in side chains of arg—8 residue of human immunodeﬁciency
virus—protease receptors (Morris et al., 2009). In this article, we
have demonstrated that it is possible to improve upon the results
obtained by the AutoDock algorithms in some scenarios (Lopez—
Camacho et al., 2013).

Furthermore, jMetalep can be considered a useful tool for
advanced users (or developers) with little C++ knowledge, who
can implement new metaheuristic techniques that can be inte—
grated into this framework with relative ease. Consequently,
these techniques can be quickly integrated inside AutoDock.
The Web site of jMetalep provides user instructions on how
to install and run the jMetalep framework.

For future work, additional developments and improvements to
be implemented in jMetalep are being planned, such as the inte—
gration of new single— (e. g. CMA—ES) and multi—objective meta—
heuristic techniques (e. g. SMS—EMOA). We are also considering
integrating the AutoDock Vina docking function (Trott and
Olson, 2010), a recently developed energy function, the use of
which is spreading throughout the AutoDock user community.

Funding: The Project Grant (TIN2011—25840) (Ministerio de
Ciencia e Innovacion del Gobierno de Espaﬁa) and (Pll—TIC—
7529) (Consejeria de Economia, Innovacion, Ciencia y Empleo
de la Junta de Andalucia) have supported this work.

Conﬂict of interest: none declared.

REFERENCES

Blum,C. and Roli,A. (2003) Metaheuristics in combinatorial optimization: overview
and conceptual comparison. ACM Comput. Surv., 35, 2687308.

Cosconati,S. et al. (2010) Virtual screening with AutoDock: theory and practice.
Expert Opin. Drug Di.\'cov., 5, 597$07.

Deb,K. et al. (2002) A fast and elitist multiobjective genetic algorithm: NSGA—II.
IEEE Tram“. Evol. Comput., 6, 1827197.

Durillo,J.J. and Nebro,A.J. (2011) jMetal: a Java framework for multi—objective
optimization. Adv. Eng. Softw., 42, 7607771.

Janson,S. et al. (2008) Molecular docking with multi—objective particle swarm
optimization. Appl. Soft Comput., 8, 666$75.

Kennedy,J. and Eberhart,R. (1995) Particle swarm optimization. In: IEEE IJCNN.
Vol. 4, IEEE, Perth, WA, Australia, pp. 194271948.

Lopez-Camacho,E. et al. (2013) Solving molecular flexible docking problems with
metaheuristics — a comparative study. Appl. Soft Comput.

Meng,X.Y.Y. et al. (2011) Molecular docking: a powerful approach for structure—
based drug discovery. Curr. Comput. Aided Drug De.\'., 7, l4fr157.

Morris,G.M. et al. (1998) Automated docking using a Lamarckian genetic
algorithm and an empirical binding free energy function. J. Comput. Cltem.,
19, 163971662.

Morris,G.M. et al. (2009) AutoDock4 and autoDockTools4: automated docking
with selective receptor flexibility. J. Comput. Cltem., 30, 278572791.

Nebro,A. et al. (2009) SMPSO: a new PSO—based metaheuristic for multi—objective
optimization. In: Computational Intelligence in M iulti-criteria Decision—Making,
2009. mcdm'09. IEEE Symposium. pp. 6&73.

Storn,R. and Price,K. (1997) Differential evolution — a simple and efficient heuristic
for global optimization over continuous spaces. J. Global 0ptim., 11, 3417359.

Trott,O. and Olson,A.J. (2010) AutoDock Vina: improving the speed and
accuracy of docking with a new scoring function, efﬁcient optimization, and
multithreading. J. Comput. Chem, 31, 4554161.

Zhang,Q. and Li,H. (2007) MOEA/D: a multiobjective evolutionary algorithm
based on decomposition. IEEE Tram“. Evol. Comput., 11, 7127731.

 

ﬁm'spzumofpmﬂo'sopeuuowrorq/pdnq

