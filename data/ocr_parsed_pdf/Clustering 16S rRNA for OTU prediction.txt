ORIGINAL PAPER

Vol. 27 no. 5 2011, pages 611-618
doi: 1 0. 1 093/bioinformatics/btq725

 

Sequence analysis

Advance Access publication January 13, 2011

Clustering 16$ rRNA for OTU prediction: a method of

unsupervised Bayesian clustering

Xiaolin Haol, Rui .Jiang12 and Ting Chenlai‘

1Molecular and Computational Biology Program, Department of Biology, University of Southern California, University
Park, Los Angeles, CA 90089, USA and ZMOE Key Laboratory of Bioinformatics and Bioinformatics Division,
TNLIST/Department of Automation, Tsinghua University, Beijing, 100084, China

Associate Editor: Ivo Hofacker

 

ABSTRACT

Motivation: With the advancements of next-generation sequencing
technology, it is now possible to study samples directly obtained
from the environment. Particularly, 16S rRNA gene sequences have
been frequently used to profile the diversity of organisms in a sample.
However, such studies are still taxed to determine both the number
of operational taxonomic units (OTUs) and their relative abundance
in a sample.

Results: To address these challenges, we propose an unsupervised
Bayesian clustering method termed Clustering 16S rRNA for OTU
Prediction (CROP). CROP can find clusters based on the natural
organization of data without setting a hard cut-off threshold (3%/5%)
as required by hierarchical clustering methods. By applying our
method to several datasets, we demonstrate that CROP is robust
against sequencing errors and that it produces more accurate results
than conventional hierarchical clustering methods.

Availability and Implementation: Source code freely available
at the following URL: http://code.google.com/p/crop-tingchenlab/,
implemented in C++ and supported on Linux and MS Windows.
Contact: tingchen@usc.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on July 6, 2010; revised on November 8, 2010; accepted
on December 23, 2010

1 INTRODUCTION

In recent years, the development of next-generation sequencing
technology has made it possible to directly sequence a huge amount
of high-quality DNA/RNA fragments extracted from environmental
samples in an acceptable time period (Eisen, 2007; Rothberg and
Leamon, 2008). Meanwhile, analytical tools have been developed,
including multiple sequence alignments (DeSantis et (11., 2006;
Katoh et (11., 2005), pairwise alignments (global/local) (Needleman
and Wunsch, 1970) and Clustering (Schloss and Handelsman, 2005;
Schloss et (11., 2009; Sun et (11., 2009), by which we are able to
address the fundamental problems in Metagenomics, in particular,
the distribution, abundance and co-occurrence of microorganisms
in given environmental samples. Recent studies have shown that
such information may indicate environmental Changes or disease
conditions (Grice et (11., 2009; Marco, 2010).

 

*To whom correspondence should be addressed.

l6S rRNA gene sequences are widely used to infer the
phylogenetic relationship between organisms. That is, by comparing
two 165 rRNA gene sequences, biologists can determine whether
they belong to the same genus using a conventional threshold of
5% dissimilarity, or the same species using a conventional threshold
of 3% dissimilarity, although the validity of using these thresholds
has not been proven. By combining sequence comparison with
hierarchical Clustering methods, programs such as DOTUR (Schloss
and Handelsman, 2005) and its current version mothur (Schloss
et (11 ., 2009), and ESPRIT (Sun et (11., 2009) can partition l6S rRNA
sequence data into Clusters. Then, by using a predeﬁned dissimilarity
threshold, these methods can, in turn, report sequence Clusters
satisfying certain criteria (complete/average/single-linkage). In
hierarchical Clustering, the complete linkage and the average linkage
methods are more widely used than the single linkage method
(Quince et (11., 2009).

However, a common problem with these Clustering methods is the
sensitivity of the results to the dissimilarity threshold such that even
a slight Change can result in very different Clusters. Furthermore, the
inevitable sequencing errors, as well as the unknown structure of
microorganisms underlying an environmental sample, make it very
difﬁcult to ﬁnd the optimal threshold for hierarchical Clustering.
For these reasons, the otherwise simple Choice of 5 and 3%
thresholds becomes problematic (Huse et (11., 2010; Marco, 2010)
and may result in the overestimation of operational taxonomic
units (OTUs). Quince et (11. (2009) showed that hierarchical
Clustering methods overestimated the number of OTUs in a given
sample when sequencing errors occurred, potentially leading to
faulty conclusions. Sun et (11. (2009) also explained that distance
calculated from multiple alignment was, in general, larger than those
calculated from pairwise alignments and thus might also result in
overestimation of the number of OTUs.

In addition to the aforementioned reasons, Schloss listed and
analyzed many other factors that may result in overestimation of
hierarchical Clustering (Schloss, 2010). Many groups have taken
steps to address these problems. For example, mothur included
a single linkage preclustering module to merge similar sequences
before Clustering (Schloss et (11., 2009), and PyroNoise (Quince
et (11 ., 2009) was developed to remove sequencing errors to alleviate
the overestimation of the number of OTUs.

The large size of datasets currently being produced by the next-
generation sequencing machines accounts for still another Challenge
in Clustering l6S rRNA sequences. In the process of hierarchical
Clustering, it is necessary to calculate a distance matrix by comparing

 

© The Author(s) 2011. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/2.5), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 ﬁlo's[BumoIpJOJXO'sorwurJOJurorq”:duq 11101} popeolumoq

910E ‘OE JSHBHV 110 ::

X.Hao et al.

 

all pairs of sequences in order to ﬁnd the proper Clusters to merge
(Johnson, 1967). As a result, the computational complexity is at
least quadratic, 0(N2), in terms of the number of sequences (N).
Thus, for large-scale datasets, traditional hierarchical Clustering
methods quickly arrive at a bottleneck in terms of computational
time and memory usage. Although ESPRIT (Sun et (11., 2009) has
improved these factors by using an approximated k-mer distance
to reduce the burden of calculating pairwise alignments and by
parallelizing the pairwise alignment process on a computer Cluster
and Clustering sequences on-the-ﬂy, its algorithm can only support
complete linkage instead of average linkage Clustering.

In this paper, we therefore propose an unsupervised Bayesian
Clustering method termed Clustering 16S rRNA for OTU Prediction
(CROP), which speciﬁcally addresses the problems of OTU
overestimation, computational efﬁciency and memory requirement.
This Bayesian method, if modeled properly, can infer the optimal
Clustering results without setting a simple equal dissimilarity
threshold for every Cluster. Previously, similar ideas which use
probability models for Clustering have been applied to Classify
protein subgroups. Proponents of this approach (Brown, 2008;
Marttinen et (11., 2006) considered every column of a multiple
alignment to be a sample from an underlying multinomial
distribution, therefore, the product of the probability mass ﬁinction
of all columns could form a likelihood ﬁinction. However, because
the sequences of 16S rRNA genes are usually much longer than
the protein domains, this model is computationally impractical for
long sequences and large datasets. Another probabilistic approach
called Markov Clustering (Enright et (11., 2002) used random walk
and matrix transformations on a given distance matrix to form
Clusters to detect protein families. However, this approach currently
cannot be applied directly to 16S rRNA sequence Clustering, since
the Clustering results at different similarity levels are desirable as
they correspond to different phylogenetic levels. Thus, applying a
probabilistic approach to the Clustering of 16S rRNA sequences
requires the identiﬁcation of parameter subspaces in which the
optimal Clustering results correspond to the partitions of the dataset
at the desired phylogenetic level. Markov Clustering only has an
inﬂation parameter to tune. The direct relationship between the
inﬂation parameter and similarity levels is hard to establish.

To address above-mentioned problems, we use the Gaussian
mixture model to describe the data (Section 2). The key concept
of our method replaces the mean value of a Gaussian distribution
and instead uses a ‘Center’ sequence to Characterize a speciﬁc
Cluster. Thus, if we consider the sequences as data points in a
high-dimensional space and we calculate the pairwise distances
as the distance between two data points, then the probability
that a sequence belongs to a Cluster becomes a ﬁinction of the
distance between the sequence and the center. The nature of
Gaussian distributions can handle sequencing errors as well as
sequence variations. However, by restricting the parameter space
of the standard deviations of the Gaussian distributions, we could
limit our probabilistic search to the parameter subspace in which
the Clustering results reﬂect the desired partitions of the datasets
and, hence, the accurate number of underlying OTUs (Section
2). Based on this model, we can deﬁne the likelihood of the
data and use a Markov Chain Monte Carlo (MCMC) approach
to sample from the posterior distribution of the parameters to
obtain the optimal Clustering. The optimal result, which maximizes
the posterior probability, will give all the quantities of interest,

including the number of Clusters, their relative abundance levels
and the sequences in each Cluster. Richardson and Green (1997)
and Stephens (2000) have proposed MCMC methods to study the
mixture model with an unknown number of components. In this
application, we used a Markov birth—death process to build the
Markov Chain with appropriate stationary distribution, as proposed
by Stephens (2000). That is, in each step, a new Cluster would
be created, or an existing one would be deleted, according to
which operation is more likely to increase the posterior probability.
To enhance computational efﬁciency, we further introduced a
hierarchical approach by splitting the data into small blocks, running
Bayesian Clustering on each block independently, and then later
merging these Clustering results. We also introduced several criteria
to reduce the burden of calculating Gaussian density functions,
thereby accelerating the MCMC process (Section 2).

2 METHODS

2.1 Gaussian mixture model

We apply a Gaussian mixture model to 16$ rRNA sequence data in which
sequences x=(x) ,  ,xN) are assumed to be independently drawn from a
mixture density with k clusters, where k is an unknown parameter,

k
p(xlk.n.u.a2>=Zaﬂmmft

i:l

where 11:01),  ,uk) and (72 2(012,  ,0?) are parameters for the centers
and the variances, respectively, )1) and (71.2 are speciﬁc to cluster 1, and 7: =
(7r),  ,JTk) are the non-negative mixture proportions which sum up to 1.
We introduce the missing data z =(z) ,  ,zN) in which z) speciﬁes a
mixture cluster to the observation of x). Suppose that each z) is a realization of
a discrete random variable Z) and that all Zis (i = 1,. . .,N) are independent and
identically distributed with the following probability mass function (pmf),

p<zi=jlmm2>=n1

Conditional on the latent variable Z=(Z) ,  ,ZN) the data {x), ...,xN} are
assumed to be independently observed from the density:

17(X1IZ) =j. 71. 11. 02) 217(16): M).cIJ-2)=f(xnu).aj2).

In our studies, we consider the situation in which the density f (x);)1j, (71-2) is
a modiﬁed univariate Gaussian probability density function (pdf) with )1j as
the center of the cluster and (71-2 as the variance:

a
D‘Umif)
2112

e 7 ,

 

f(X1:M)-.U,-2)=
2
2710].

where D(x), )1!) denotes the distance between the sequence x) and the center
of the j—th cluster )1]: We follow common approaches to assume a hierarchical
model for the priors (with standard conjugacy):

JTIk ~Dirichlet(y,  y),

2
(7,» ~ Inverse — Gamma(oz, )3),

where )1) is chosen randomly from x) ,  ,xN without replacement. The ﬁnal
form of the prior probability is

P(k.nyuwa2layﬁyy)=P(kla./31 V)P(71|k1 V)P(02|k1€¥1 WWW/€101,131?)
and that of the posterior probability is

P(k,rr, )1, azlx)o<P(x|k, 7r, )1, (72)P(k|o(, )3, y)P(J'r, )1, azlcx, )3, y).

 

612

112 ﬁlo's[BumoIpJOJXO'soiwuiJOJurorq”:duq 11101} popeolumoq

91oz ‘Og anﬁnv uo ::

Clustering 16$ rRNA for OTU prediction

 

2.2 The birth—death process

To compute the parameters (TI, )1, (72) which maximize P(JT, )1, azlx), we
apply the MCMC method to construct an ergodic Markov Chain with the
posterior distribution P(JT, )1, ((2 lx) as its stationary distribution. We design
a Markov birthAieath process as follows.

When the process is at a certain step 1,», and the number of existing clusters
is k, the next step may be a ‘birth’ with a probability PB/(PB+PD), or a
‘death’ with a probability PD /(PB +PD), where PB and PD are the probability
of a ‘birth’ and a ‘death’, respectively. P3 is given as a constant in our study,
and PD is deﬁned as:

k
PD=Zd1,
1:1

where (1,» is the probability for a cluster to ‘die’. The way to compute (1,» is
shown in a later section.

Births: the (k+l)-th cluster is born with a new center 01,1.) randomly
chosen from x), ...,xN and “1,1175”, (i=1,...,k). The choice of Mk1.) is
based on the density:

1
f(x1;ll«11f7)2)i

where ()1,, (7,2) are the parameters of the cluster to which x,» is currently being
assigned. Hence, p11,“ is preferred over those x,’s which are far away from
the center of the cluster to which they currently belong. For other parameters
of the new cluster, the priors are given as follows:

P(Mk+1=X1)<X

7111.) ~ Beta(y, ky),
(713+ 1 ~ Inverse — Gamma(o(, )3).
Then the existing parameters need to be updated (1' = l,  ,k) by:
711=JT1(1 —JTk+1)-
Deaths: an existing cluster dies independently of others with a probability
L_,» P(NC=k— 1)

X—,

11:1D
’ B L P(NC=k)

 

where L_,» indicates the likelihood without the i-th cluster and L indicates
the likelihood with the i-th cluster:

N k
L=Hzﬂ1ﬂxjiu1ﬂfl

j:1 1:1

N k
L—1=H Z Nifo‘ﬁllivgizl
1:1 1:1,1:1
Let N, be the number of clusters. We use the Poisson distribution as its prior
to simplify the form of (1,», as suggested by Stephens (2000):

NC ~P01'ss0n(Pg).

Then we have a simpliﬁed form for the death probability (1,» for each cluster:

 

L_.
(1,»:—’.
L
We update fr,- 021,  ,i— l,1'+l,  ,k) to reﬂectthe death effect ofthe i-th
cluster
7,1: 711'
J l—JT)‘

For more details about the birthAieath process, refer to (Stephens, 2000).

2.3 MCMC sampling

We update the parameters for the hierarchical mixture model in each step:
(1) Update z by
_ 020,11.)

. 771' 20.2
P(z1=11...>=—e w

/2
‘71

 

(2) Update 7'! by
JTI... ~Dirichlet (y+n) , ...,y+nk),

where (n nk) are the numbers of data points belonging to individual
mixture clusters. In other words, for j = l, 

N
n,- :Zi(z,:j).
1:1
(3) Update (72 using the general approach as follows:
2 D2(X)'1M1)

1):]

2 n,» J
a,» ~Inverse—Gamma 01+ 3,13+ 2

Richardson and Stephens suggested another hierarchical level over )3

k —1
ﬁ~l" g+kcx, (1141-20372) ,

1:1

where g and h are hyperparameters. However, as Richardson and

Green (1997) mentioned, when applying the mixture model to the

Bayesian classiﬁcation, such update procedure would result in some

clusters with a large variance, and its heavy tail would have a negative

inﬂuence on the clustering result. This is because most methods

assume that variances of clusters are similar to one another. Also, as

mentioned before, restricting the variances is fundamental to obtain

clustering results at different phylogenetic levels.

In our method, we nested (72 by upper bound U and lower bound

L. That is to say, if (71.2 <L or (71.2 > U , we would restart the updating

procedure of (71.2 as indicated below:

(7,2 ~Inverse — Gamma(o(, )3’),
where )3’ is a given constant satisfying
)8’ L+ U
E Z T'
(4) Update 11:

Since 11 is a vector of sequences chosen from data instead of a
common numerical vector, we sample the center for each cluster in
the following way.

For the j—th cluster, there are nj sequences. Each nj sequence is a
potential candidate to be the center of this cluster. Let these sequences be
X,- ={xj1 ,  ,xjnj}. The likelihood of this cluster is deﬁned as

"I
2
Law: Hf(x)1;)1).a, 1

1:1
where )1j is the center of the cluster, (7-2 is the variance, and f is the Gaussian
probability density function. Thus, for two candidate centers )1j and )1}, we
have

71f 2

P ’- x-»; {,0-
P(MJ/_|nj’xj’gj_2) — (Mj)il;llf( ]l M] J)

P(u)1n).x,-.a,?>

 

r1) ’

P011) Ulanqu

I:
which suggests a brute force method to sample the center sequence. Assume
that
P011) =P(M,’-) for 21114-619.

and then for each xj,» EX}, let 6,» denote the probability of choosing xj,» as the
new center of this cluster

"1'
, 2
510<1_If(le,xj1,tf,- )-
[:1
So we can deﬁne
,,,
1
l_lf(leixj11fT,-2)
1:1
51: —, ,
"I "I

Z l_lf(leixj1ﬂ,-2)
1:11:1

and then sample a new center for each cluster.

 

613

112 /3.10's[BumoIpJOJXO'soiwuiJOJurorq”:duq moi; popeolumoq

91oz ‘Og anﬁnv uo ::

X.Hao et al.

 

2.4 Prior setting

Based on the priors suggested by Richardson and Green (1997) and Stephens
(2000), with some minor modiﬁcations, we set

100
y=l 01:2 g=0.2 mfg 103:1,
where R = Max:Min is the range of the data.

L and U , as the lower and upper bounds for variances, are determined
by the different levels of accuracy to be achieved. For the dissimilarity
threshold at roughly 3%, we suggest setting L: l and U 2225 (mentioned
as clustering at ~ 3% in later sections) so that the standard deviations of the
Gaussian distributions in the mixture model will range from 1 to 1.5. For
the threshold at 5%, we suggest setting L=2.25 and U=6.25 (mentioned
as clustering at ~5% in later sections) so that the standard deviations of
Gaussian distributions in the mixture model will range from 1.5 to 2.5.
It is the nature of Gaussian distribution that 95% of its density falls into
the interval [)1—20, )1+2(I]. As such, the choice of U s, as noted above,
Virtually guarantees that at least 95% of the sequences in a given cluster
will be <3% (if U=2.25) or 5% (if U=6.25) dissimilar from the center
sequence in the cluster. At the same time, the choice of Ls, as noted above,
helps to maintain the assumption that all Gaussian distributions in a mixture
model will have similar variances. Under these circumstances, the settings
suggested above for both Ls and Us should give results comparable with
those of conventional hierarchical clustering methods that used 3 and 5%
dissimilarity cutoffs, respectively. Although our approach is still associated
with previously mentioned controversial 3 and 5% thresholds, it produces
clusters with different standard deviations and its probabilistic nature ﬁts
better with real data. The settings of Ls and U s, as noted above, were used
for all downstream analysis. Users can deﬁne their own Ls and Us in CROP.

2.5 Pairwise alignment and distance

The Needleman:Wunsch algorithm (Needleman and Wunsch, 1970) was
used for pairwise alignment. However, we do not perform the dynamic
programming on the whole matrix, only on a band near the diagonal with a
width of 5% of the sequence length at each side. By doing this, we mainly
focus on those sequence pairs with >90% similarity. The Quickdist algorithm
(Sogin et (11., 2006), which considers consecutive gaps in an alignment as
one gap, is used to calculate the pairwise distance from the alignment results.
Every distance is calculated as a percentage number in our approach. That
is to say, a distance of 5.2 indicates 5.2% dissimilarity.

2.6 Computation

The most time-consuming part of Bayesian clustering is the pairwise
alignment. The second most time-consuming part of the process involves
updating centers, which is 0(N2/k) (where N is the number of sequences and
k is the number of clusters), whereas calculating the Gaussian probability
density functions for all iterations and sequences is also a costive step. In
order to improve the computational efﬁciency of Bayesian clustering, we
introduce three operations, as noted below:

(1) When the calculated dissimilarity D(x,», xi) between two sequences
x,» and X) is > 15%, we set the Gaussian probability density function
involving this distance to be 0. That is to say, we consider

 

 

1 _ 02(1),”)
6 2u2 : O
V 27102

 DOC), Xj) Z 

If the standard deviation of a cluster is 0'0) and in next iteration, the
updated value (70+)) satisﬁes 0.900) 5001.)) 5 1.10“), then for this
cluster, we consider

(2

V

_02(x.1o _02(x.m
a a

l l
e

/ 2 = / 2
27mm 27100“)

where )1 is the center of this cluster and x is a sequence in this cluster.

206,) 2 200+“ ’

 

(3) Update all cluster centers if the current iteration gives birth to a new
cluster; otherwise, we do not update centers. In addition, we do not
update cluster centers for those clusters consisting of fewer than ﬁve
sequences.

The ﬁrst and second operations dramatically reduce the computational
time for calculating the Gaussian pdfs, while the third operation avoids
unnecessary updating of cluster centers. In practice, these operations do not
compromise the accuracy of the results.

3 RESULTS

3.1 CROP work ﬂow

Figure 1 shows a ﬂowchart of CROP. First, the dataset is randomly
split into b10Cks of 100—1000 sequences each. Generally, a smaller
b10Ck size is preferred for longer sequences, such as ﬁill-length 16S
rRNA gene sequences, while a larger b10Ck size is preferred for
shorter sequences, such as one single hyper-variable region. Then, an
independent Bayesian Clustering is applied to each b10Ck. A distance
matrix is generated for each b10Ck using the pairwise alignment
algorithm. We run 20*(b10Ck size) iterations of MCMC, considering
the ﬁrst 10*(b10Ck size) iterations as bum-in. From all the iterations
after bum-in, we Choose the one with the largest posterior probability
and report it as our Clustering result for this b10Ck.

At the next level of the hierarchical approach, every Cluster in
each b10Ck is treated as one sequence with the center sequence
as the representative, and all these center sequences are pooled
and further split into b10Cks. However, a slightly different distance
matrix is computed for each b10Ck. The matrix is a ‘Center sequences
against Clusters’ matrix, in whiCh the (1,1) entry indiCates the
distanCe between the i-th Center sequenCe and the j—th Cluster. We
CalCulate this distanCe by the average distanCe between the i-th Center
sequenCe and C randomly Chosen sequenCes from the j—th Cluster

Dalam 4
v
Spllt
:1 v lr
Bloall Block! .. 3100‘“
v v v
Bayesian Bayesian Bayesian
:luslering Clusheﬂng Clushering
I II I II t II 11 r V
cm": mum  Dininﬂd- 12mm cmrz . chm. cum». cum .. clmm.
'
Marga

I

Ml+Ma1...1Mu Sequences
t

Terrrmalion Condition Saiisﬁed? w No

Yes

v
Damian
Clusterlng
f

Final
Resull

Fig. 1. CROP workﬂow.

 

614

112 )310's[BumoipJOJXO'soiwuiJOJurorq”:duq moi) popeolumoq

91oz ‘Og anﬁnv uo ::

Clustering 16$ rRNA for OTU prediction

 

(C :20 is set for Clusters with >20 sequenCes):

1 C
D11=EZDUI
[:1

Finally, using this distance matrix, we apply a weighted Bayesian
Clustering on these Clusters suCh that the weight is proportional to
the size of the Cluster, and this process will Continue until one of the
Conditions noted below is satisﬁed.

(1) The number of the Clusters is >90% of the number of
sequenCes. (This means most sequences are forming a Cluster
by themselves. Thus, split and merge pr0Cess will not be able
to reduce the dimension of the data efﬁCiently any more.)

(2) The number of the Clusters is smaller than a predetermined
threshold.

(3) The process has been running for N times, where N is a
predetermined threshold.

After the previous process, we will run one more round of Bayesian
Clustering on all the remaining Clusters, and this result will Constitute
the ﬁnal report. However, as a probabilistiC approaCh, CROP may
get slightly different results in different runs. Thus, in later seCtions,
10 runs were performed for all experiments, and the result with the
highest posterior probability was Chosen if not speCiﬁed.

3.2 Estimating the number of OTUs

We ﬁrst validated our method using a dataset deSCribed by Huse
e1 (11. (2007), whiCh consisted of arnpliCons of V6 regions from
43 16S rRNA templates whiCh were at least 3% different from
eaCh other. The sequenCed reads were ﬁirther Categorized into two
datasets. The ﬁrst one (A) Contained only those reads that were
within 3% of one of the 43 templates, and the seCond dataset (B)
Contained all the reads. These two datasets consisted of 191387
and 202 340 reads, respeCtively. To obtain the ground truth, we ran
hierarchical Clustering (using ESPRIT) on 43 template sequenCes.
Then we Compared CROP, ESPRIT and mothur (with and without
the single linkage preClustering) using datasets (A) and (B) to obtain
the number of OTUs. Default parameters were used for ESPRIT and
mothur. For mothur, we used the same pairwise alignment program
as implemented in ESPRIT to calculate a phylip format distanCe
matrix and then speCiﬁed the average linkage in Clustering.

We ran the three programs on dataset (A) and the results were
Compared in Figure 2A. CROP identiﬁed 43 Clusters when Clustering
at ~3% (by using varianCe interval [1, 2.25], if unspeCiﬁed).
In 10 runs, CROP averaged 43.5:l:0.5 Clusters, among whiCh
the result with 43 Clusters gave the largest posterior probability.
When Clustering at ~5% (by using variance interval [2.25,6.25],
if unspeCiﬁed), CROP produCed 42 Clusters. In 10 runs, CROP
averaged 43 :l:0.8 Clusters, among whiCh the result with 42 Clusters
gave the largest posterior probability. Both results were in exaCt
agreement with the ground truth.

To judge the aCCuracy of the prediCted Clusters, we Compared
Cluster Center sequences with the template sequences and assigned
the Cluster Center with its most similar template sequence. We found
that eaCh template sequenCes, both at 3 and 5% thresholds, was
uniquely assigned by a Cluster Center in ~3 and ~5% results,
respeCtively, indicating 100% accuracy.

    
   
   
   
   
   

 

A _._ ngmT B —-—:5P RIT
To ' 240 - -
—— “(J-.11" _r-‘O|I‘Illi
65 _ -- Val-..qomlusle.)  Mulllull'PreulusEEI:
--._-cﬂm,\.,5w 190 _ --O--CROP[-5.\:
3 so . —'Ir--'Z.'RUP-:-.'J%jl 3 -----CﬁoP[-339:
'5 —r1m1.m T-un- 5 Gram: Trulh
E 55 - S 140 -
°‘ 0
E E
g 50 ‘ g
90 -
45 -
_____ a
an —.—. an i
0.02 [H.H 0.05 U.02

 

Dissimilarity Dissimilarity

Fig. 2. Comparison of the number of OTUs predicted by CROP, ESPRIT and
mothur (with and without single linkage preclustering) using two sequencing
datasets generated from 43 16S rRNA templates (by Huse et (11., 2007).
Dataset (A) contains reads that are within 3% of the templates, and Dataset
(B) contains all the raw reads.

Then, we ran the three programs on the dataset (B). CROP
identiﬁed 65 Clusters when Clustering at ~3%. In 10 runs, CROP
averaged 67.7:l:2.4 Clusters. When Clustering at ~5%, the number
of Clusters deCreased to 45, and averaged 45:l:1 in 10 runs. We
also mapped the resulting Center sequences to their nearest template
sequences to aCCess the aCCuracy of the results. In the ~5% result,
43 out of 45 Cluster Centers were < 5% dissimilar from their nearest
template sequenCes, while the remaining 2 Cluster Centers were
> 10% dissimilar from their nearest templates. These two Clusters
were quite small, Containing <10 sequences. Similar observations
were found for the ~ 3% results where 43 out of 65 Cluster Centers
were < 3% dissimilar from their nearest template sequences and eaCh
of the 43 template sequenCes is uniquely mapped by one of these 43
Cluster Centers, while the remaining 22 Cluster Centers were >7%
from their nearest template sequences and all of them are small (with
<10 sequenCes).

In Comparison, CROP outperformed both ESPRIT and mothur,
both of whiCh overestimated the number of OTUs. As expeCted,
mothur did a better job than ESPRIT when using the average
linkage algorithm and the single linkage preClustering signiﬁCantly
improved the performance of the hierarchical Clustering. However,
in general, CROP is still more robust in dealing with sequenCing
errors and produces more aCCurate Clustering results.

3.3 Validation results using a dataset of 90 artiﬁcial
bacteria clones

We also obtained Quince’s dataset (Quince et (11., 2009) that
consisted of 34 308 reads (12360 unique reads) sequenCed from
V5 and V6 regions of 90 different Clones of baCteria. This
dataset Contains very similar speCies (<3% differenCe) and thus
is appropriate for testing CROP’s effectiveness on distinguishing
Closely related speCies. We applied CROP to this dataset using
various intervals for the standard deviations of the Gaussian
distributions. In addition to ~3 and ~5%, interval [0205] was,
for example, used to compare with the 1% dissimilarity threshold
in hierarchical Clustering, and interval [0.5,1] was, for example,
used to compare with the 2% dissimilarity threshold in hierarChical
Clustering. The results were compared with the ground truth, as
well as with those obtained from mothur (SChloss et (11., 2009)

 

615

112 )310's[BumoipJOJXO'soiwuiJOJurorq”:duq moi) popeolumoq

91oz ‘Og anﬁnv uo ::

X.Hao et al.

 

1000 -

100 -

Number of OTUs

 

 

 

0 002 0.04 0.05 0.03 0.1

Dissimilarity

 

 

+ Ground Truth
— — — MOTHUR [Preclusterl  PyroNoise+MOTHUR
----- -- CROP 2.54 [8961 - ' - ' - CROP 1.5-2 5 [5%)
— — - CROP 1-‘I 5 [392.1 — - - — CROP (1.5—112%}

-- - -- - CROP 0.2-0 5(1‘13]

MOTH U R [Average]

—0— CROP Assu mptian

 

 

 

Fig. 3. Comparison of the number of OTUs found by CROP, PyroNoise
(plus mothur) and mothur, in which the results for CROP are shown both as
a straight dashed line indicating the number of OTUs when using different
parameters and as an approximated average lineage-through-time curve
(CROP Assumption).

with and without the single linkage preclustering (only unique
reads used), and PyroNoise (Quince e1 (11., 2009) followed by
mothur. (The dataset was preprocessed with PyroNoise in order
to reduce the noise in original data to improve the performance
of hierarchical Clustering in this Case.) The input for mothur is
the distance matrix we calculated using the pairwise alignment
instead of the default multiple alignment. We Chose the average
linkage over the complete linkage in mothur, as the average
linkage had been shown to produce better results by Quince et (11.
(2009).

As shown in Figure 3, mothur (preclustering) and PyroNoise (plus
mothur) overestimated the number of OTUs. By mapping the Cluster
Center sequences in CROP’s result to the Clusters in the result of
PyroNoise’s (plus mothur), we found that CROP achieved a result
similar to that of PyroNoise’s (plus mothur) at the regions with 3 2%
dissimilarity in terms of the number of Clusters and Cluster contents
detected. However, as the threshold decreased, especially at f 1%
dissimilarity regions, CROP did overestimate the number of OTUs
because the sequencing error rate was around 1%. The single linkage
preclustering slightly improved the performance of the hierarchical
Clustering. Although the improvement was not as signiﬁcant as the
previous case, it did reduce the number of sequences to be Clustered
from 12 360 to 5370, and thus could be still helpful in dealing with
large datasets. In general, CROP achieved a performance similar
to that of PyroNoise (plus mothur) at 5 and 3% and did so using
signiﬁcantly less computational time and without modeling the
sequencing errors. PyroNoise alone used more than 1 day on Cluster
computers with 128 CPUs to process these datasets as reported by
the study, while CROP completed the work within 3 h using a single
CPU.

 

A Axillary Vault B Other Act! nobactarlales
100% 100%
80% 80%
50% 60%
40% 40%
20% 20%
- -
0% 0%
CROP RDP CROP RDP
Classiﬁer Classifier
' Omar IS‘EPWIWSSPP' uNecemloueceee IMtlmyoee
-L-¢bcba:ilales aluminum
lFlevoDacherielee I Bacheriodeles “WW ' Emma“
.Gammapmmmnena - Belaprolennacm .mes .wlmamia
alphavrmmclun'a lCUerubac-Dona WP
.Prnpmmc‘aﬁa m 0mm . . IMymclenurll I Undasall‘ea

 

 

 

 

 

 

Fig. 4. The clustering results (by CROP) of the human microbial sequencing
data at the AV skin location: (A) ~5% results and the ground truth and (B)
more detailed results inside the ‘Other Actinobacteria’.

3.4 Estimating abundance levels of clusters using the
human skin microbiome dataset

In this application, we applied CROP to the human skin microbiome
data by Grice et (11. (2009). We ﬁrst Chose a skin site, the axillary
vault (AV) of patient HV5 consisting of 1130 nearly full-length
16S rRNA sequences. Then we used the ribosomal database project
(RDP) Classiﬁer (Cole et (11., 2009) to infer the taxonomy for each
sequence. These results were considered to be the ground truth in
this experiment. According to this ground truth, we found that the
original result (Grice et (11., 2009) underestimated the abundance
of the genus Propionibacteria. Then we applied CROP to Cluster
this dataset at ~5%. To compare our Clustering results with the
ground truth, we assigned genera to each Cluster by searching the
center sequence in the RDP database. CROP identiﬁed 34 Clusters.
Figure 4A shows that our results are very similar to the ground
truth and that among the 33 detected genera in the ground truth,
32 are uniquely mapped by 32 Clusters in our results. The only
difference between our results and the ground truth occurs in
the Class Actinobacteria, where four sequences belonging to the
genus Williamsia are assigned to the genus Mycobacterium and
Corynebacterium (Fig. 4B). All three of these genera are in the
same suborder Corynebacterineae. In comparison, mothur (using the
average linkage) produces 47 Clusters, overestimating the number
of genera by 43%.

3.5 Comparing different microbial communities using
the human skin microbiome dataset

Finally, we applied CROP to three human skin microbiome
datasets: sebaceous (including glabella, alar crease, external auditory
canal, occiput, manubirum and back), moist (including nare,
AV, antecubital fossa, interdigital web space, inguinal crease,
gluteal crease, popliteal fossa, plantar heel and umbilicus) and
dry (including volar forearm, hypothenar palm and buttock).
After Clustering, every Cluster center was searched against the
RDP database to determine the taxonomy of this Cluster. The
results are shown in Supplementary Figure 1. Betaproteobacteria
is shown to dominate the dry locations, while Corynebacteria and

 

616

112 )310's[BumoipJOJXO'sorwuiJOJurorq”:duq uteri papeolumoq

9103 ‘Og anﬁnv uo ::

Clustering 16$ rRNA for OTU prediction

 

   
    
    
  
   

ﬂIll‘nII
I  .....
emu-“alluring we:
omwl
............m
be:-
...e
mm m...
magnum...
mam-cum
.Mbmllmhe
gum“...
Huh-mm
Diana: "99‘
umlml
m 1......

 

:WMMer
wlw

awuisonam
oacnﬂiSlham
maria-unth
muhﬂl‘ Mil {Ilan

walnut Mﬂiunm

 

nominal «have new

umanalaaamrlr

Fig. 5. The Theta index values and the phylogenetic tree constructed based
on these values. (A) Phylogenetic tree of 18 human skin locations with
their environmental conditions annotated in brackets. (B) Theta index values
shown as a heatmap.

Propionibacteria, both belonging to Actinobacteria, are shown to
dominate the moist and sebaceous locations, respectively.

To study the species similarity and difference between different
skin locations, while also to validate CROP at species level using real
environmental data, we merged all sequences, Clustered them using
CROP at ~ 3%, and computed the J accard index value and the Theta
index value (Grice et (11., 2009) to see if we got consistent species-
level result with previous studies. The J accard index value measures
the sample membership by the proportion of shared OTUs between
the two samples. The Theta index value measures the sample
structure by taking OTU abundance levels into consideration.
Basically, the similarity of the two samples tends to increase as
both Jaccard and Theta index values increase. These results show
that the Jaccard index values of the two skin locations with the
same environmental conditions (dry, moist or sebaceous) were
not signiﬁcantly different from those with different environmental
conditions (P=0.53, two-sided t-test); however, the Theta index
values did show signiﬁcant differences (P = 2.33 X 10_25 , two-sided
t-test). These results suggest that the environmental conditions might
not signiﬁcantly affect the composition of the bacterial communities
located on the human skin, but they could instead affect the relative
abundance levels. The pairwise Theta index values between skin
locations are shown in Figure 5B. Using these pairwise Theta
index values as a distance measure, we Clustered these 18 skin
locations using hierarchical Clustering (Fig. 5A). The ﬁgure shows
that skin locations are not Clustered together strictly following their
environmental conditions. For example, the antecubital fossa and
the interdigital web space, both moist, are more similar to the volar
forearm and the hypothenar palm, both dry, than to each other.
Thus, it appears most likely that a spatial relationship dominates the
environmental conditions in these cases, as all four skin locations
are found on the human forearms. It might therefore be concluded
that environments and locations on the human body co-determine
the human microbiome distribution, a theory which agrees with what
was found in another human skin microbiome study (Costello et (11 .,
2009).

Rarefaction curves for each of the three types of skin locations
are drawn in Figure 6, showing that the sebaceous locations are less
diverse than the moist or dry locations with respect to the number of
OTUs. These conclusions are consistent with a previous study (Grice

13

Dry localians B

Moist locations

Num her of OTU:
Nulll her of DTUs

   

:IJLIE- lam: tam 1120313 23:00 D luaw zLuzt- SHED: dUJIJU 3:131:- 13.12130

Numberqf Sequences Number :11 Sequences

0

Se baceous locations

 

 

Average linkage 3%
-- --Averaga linkage 5%

- ‘ -CROP -'.'i%

Nilll'l bar of (“Us

vvvvv n CROP ~55).

 

 

 

 

10503

Number of sequences

Fig. 6. The rarefaction curves for all three human skin types.

et (11., 2009). Results from mothur (with preclustering, pairwise
alignment and the average linkage) are also shown in Figure 6 for
comparison. Hierarchical Clustering still overestimates the number
of OTUs.

4 DISCUSSION

CROP provides a Clustering tool that automatically determines
the best Clustering result for 16S rRNA sequences at different
phylogenetic levels. Yet, at the same time, it is able to manage large
datasets and to overcome sequencing errors. Our study shows that
CROP gives accurate Clustering results, both in terms of the number
of Clusters and their abundance levels, for various types of 16S rRNA
datasets. In contrast, the standard hierarchical Clustering strategy,
even with the preclustering process and the average linkage method,
still frequently overestimates the number of OTUs in the presence of
sequencing errors, resulting in an underestimation of the abundance
level of the underlying OTUs. In addition, we demonstrate by
using the human skin dataset that the results produced by CROP
can provide compelling biological insights into different microbial
communities.

ACKNOWLEDGEMENTS

We appreciate the editor and three reviewers for their comments and
suggestions to revise this article.

Funding: National Institutes of Health; Center of Excellence in
Genomic Sciences (CEGS) 2P50 HG002790-06; National Science
Foundation of China (60805010).

Conﬂict of Interest: none declared.

REFERENCES

Brown,D.P. (2008) Efﬁcient functional clustering of protein sequences using the
Dirichlet process. Bioinformatics, 2A, 1765:1771.

 

617

112 )310's[BumoipJOJXO'sorwuiJOJurorq”:duq uteri papeolumoq

9103 ‘Og isnﬁnv uo ::

X.Hao et al.

 

C016,] .R. et ul (2009) The ribosomal database project: improved alignments and new
tools for rRNA analysis. Nucleic Acids Res, 37, D14l:l45.

Costello,E.K. et ul (2009) Bacterial community variation in human body habitats across
space and time. Science, 326, 1694:1697.

DeSantis,T.Z. Jr et ul (2006) NAST: a multiple sequence alignment server for
comparative analysis of 16S rRNA genes. Nucleic Acids Res, 34, W394:W399.

Eisen,J.A. (2007) Environmental shotgun sequencing: its potential and challenges for
studying the hidden world of microbes. PLoS Biol, 5, e82.

Enright,A.J. et ul (2002) An efﬁcient algorithm for large-scale detection of protein
families. Nucleic Acids Res, 30, 1575:1584.

Grice,E.A. et ul. (2009) Topographical and temporal diversity of the human skin
microbiome. Science, 324, ll9&1192.

Huse,S.M. et ul (2007) Accuracy and quality of massively parallel DNA
pyrosequencing. Genome Biol, 8, R143.

Huse,S.M. et ul (2010) Ironing out the wrinkles in the rare biosphere through improved
OTU clustering. Environ. Microbiol, 12, 1889:1898.

Johnson,S.C. (1967) Hierarchical clustering schemes. Psychometriku, 32, 241:254.

Katoh,K. et ul (2005) MAFFT version 5: improvement in accuracy of multiple sequence
alignment. Nucleic Acids Res, 33, 511518.

Marc0,D. (ed) (2010) Metugenomics: Theory, Methods and Applications. Caister
Academic Press, Norwich.

Marttinen,P. et ul (2006) Bayesian search of functionally divergent protein subgroups
and their function speciﬁc residues. Bioinformutics, 22, 246C2474.

Needleman,S.B. and Wunsch,C.D. (1970) A general method applicable to the search for
similarities in the amino acid sequence of two proteins. J. Mol Biol, 48, 443453.

Quince,C. et ul (2009) Accurate determination of microbial diversity from 454
pyrosequencing data. Nut. Methods, 6, 639$41.

Richardson,S. and Green,P.J. (1997) On Bayesian analysis of mixtures with an unknown
number of components. J.R. Stut.Soc. Ser B (Methodol), S9, 731:792.

Rothberg,J.M. and Leamon,].H. (2008) The development and impact of 454 sequencing.
Nat. Biotechnol, 26, 1117:1124.

Schloss,PD. (2010) The effects of alignment quality, distance calculation method,
sequence ﬁltering, and region on the analysis of 16S rRNA gene-based studies.
PLoS Comput. Biol, 6, 61000844.

Schloss,PD. and Handelsman,]. (2005) Introducing DOTUR, a computer program for
deﬁning operational taxonomic units and estimating species richness. Appl Environ.
Microbiol, 71, 1501:1506.

Schloss,PD. et ul (2009) Introducing mothur: open-source, platform-independent,
community-supported software for describing and comparing microbial
communities. Appl Environ. Microbiol, 75, 7537:7541.

Sogin,M.L. et ul (2006) Microbial diversity in the deep sea and the underexplored “rare
biosphere”. Proc. NutlAcad. Sci. USA, 103, 12115:12120.

Stephens,M. (2000) Bayesian analysis of mixture models with an unknown number of
components - an alternative to reversible jump methods. Ann. Stat, 28, 4&74.
Sun,Y. et ul (2009) ESPRIT: estimating species richness using large collections of 16S

rRNA pyrosequences. Nucleic Acids Res, 37: 676.

 

618

112 )310's[BumoprOJXO'sorwuiJOJurorq”:duq uIOJJ popeo1umoq

9103 0:; isnﬁnv uo ::

