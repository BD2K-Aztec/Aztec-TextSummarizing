Bioinformatics, 32112), 2016, 1788—1796

doi: 10.1093/bioinformatics/btw053

Advance Access Publication Date: 1 February 2016
Original Paper

 

 

Sequence analysis

Sprites: detection of deletions from sequencing
data by re-aligning split reads

Zhen Zhangm, Jianxin Wan91'*, Junwei Lu01, Xiaoiun Din91,
Jiancheng Zhon91, Jun Wang3, Fang-Xiang Wu4 and Yi Pan5

1School of Information Science and Engineering, Central South University, Changsha, 410083, China, 2College of
Information and Communication Engineering, Hunan Institute of Science and Technology, Yueyang, 414006, China,
3Department of Molecular Physiology & Biophysics, Baylor College of Medicine, Houston, TX 77030, USA,
4Department of Mechanical Engineering and Division of Biomedical Engineering, University of Saskatchewan,
Saskatoon, SK S7N 5A9, Canada and 5Department of Computer Science, Georgia State University, Atlanta, GA
30302-4110, USA

*To whom correspondence should be addressed.
Associate Editor: Inanc Birol

Received on September 5, 2015; revised on January 25,2016; accepted on January 25,2016

Abstract

Motivation: Advances of next generation sequencing technologies and availability of short read
data enable the detection of structural variations (SVs). Deletions, an important type of SVs, have
been suggested in association with genetic diseases. There are three types of deletions: blunt dele—
tions, deletions with microhomologies and deletions with microsinsertions. The last two types are
very common in the human genome, but they pose difficulty for the detection. Furthermore, find—
ing deletions from sequencing data remains challenging. It is highly appealing to develop sensitive
and accurate methods to detect deletions from sequencing data, especially deletions with microho—
mology and deletions with microinsertion.

Results: We present a novel method called Sprites (SPlit Read re—allgnment To dEtect Structural
variants) which finds deletions from sequencing data. It aligns a whole soft—clipping read rather
than its clipped part to the target sequence, a segment of the reference which is determined by
spanning reads, in order to find the longest prefix or suffix ofthe read that has a match in the target
sequence. This alignment aims to solve the problem of deletions with microhomologies and dele—
tions with microinsertions. Using both simulated and real data we show that Sprites performs bet—
ter on detecting deletions compared with other current methods in terms of F—score.

Availability and implementation: Sprites is open source software and freely available at https://
github.com/zhangzhen/sprites.

Contact: jxwang@mail.csu.edu.cn

Supplementary data: Supplementary data are available at Bioinformatics online.

 

1 IntrOducuon are prevalent in human populations and are associated with human

Structural variation (SV) was originally defined as insertions, dele- diseases: complex traits and eVOIUtion (Baker: 2012)- Thus: ﬁnding
tions and inversions larger than lk bp in size (Feuk et (11., 2006), and 5V5 is an important mSk- Recent advances in high tthghPUt
now has been extended to include much smaller variants (6g. sequencing make it possible to reveal more variants than ever before.
those >50 bp in length) (Alkan et a1" 2011) and more types of val-i. Many efforts have been made to detect variants from high through-
ants, such as translocation and tandem duplication. These variants Pl1t sequencing data- For examples the 1000 Genomes Pmlect

(C7 The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1788

/310‘srcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

Sprites

1789

 

Consortium has released SV data of 1092 individuals from 14 popu—
lations (Consortium et al., 2012). Some methods are specially de—
signed for detecting a specific type of SVs: SVSeq (Zhang and Wu,
2011) for deletion and MindTheGap (Rjzk et al., 2014) for inser—
tion. A deletion indicates a DNA segment missing in an individual
genome, also known as a donor/sample genome, compared with the
reference genome. Eighty percent of genetic disorders in the disease
database, Database Chromosomal Imbalance and Phenotype in
Humans using Ensembl Resources (DECIPHER), are caused by dele—
tions (Weischenfeldt et al., 2013). Deletions are such an important
type of SVs that almost every SV discovery tool has developed a
module to find deletions. We focus on the discovery of deletions in
this article.

Read pairs are the most common form of current sequencing
data. DNA libraries are generally constructed by shearing a genome
into fragments, cloning and size—selecting the fragments. A library is
a collection of fragments with a roughly equal size. The length of a
fragment excluding adapters at two ends is commonly referred to as
the insert size. The insert size varies from fragment—to—fragment. The
exact value of insert size for each fragment cannot be determined
but its approximate value can be estimated by sampling. The normal
range of insert sizes is specified through the library mean and stand—
ard deviation (Luo et al., 2015a, b). Two reads of a read pair are
generated by sequencing two ends of a fragment. Before calling vari—
ants are performed, these read pairs need to be mapped to a refer—
ence genome using read mappers such as BWA (Li and Durbin,
2009) and Bowtie2 (Langmead and Salzberg, 2012). If two reads of
a read pair are successfully mapped, its insert size is then given as
the distance between two corresponding locations on the reference
genome. An anomalous insert size indicates a value beyond the nor—
mal range. The corresponding read pairs are called discordant read
pairs.

Analyzing discordant read pairs to reveal variants, such as read
pair method, is one of the most common approaches. Many tools
adopt such approach, such as BreakDancer (Chen et al., 2009),
PEMer (Korbel et al., 2009), VariationHunter (Hormozdiari et al.,
2009, 2010), and GASV (Sindi et al., 2009). Although read pair
methods can improve the resolution of calling with high—coverage
data, they uncover variants by giving only inexact positions of
breakpoints. The read depth method is another approach that gives
approximate breakpoints. Read depth refers to the number of reads
mapped to a particular part of the genome and can indicate how
many copies of a region are present, but it cannot indicate where the
copies occur (Baker, 2012). SegSeq (Chiang et al., 2009), EWT
(Yoon et al., 2009) and CNVnator (Abyzov et al., 2011) are some
examples of algorithms that apply this approach.

Assembly and split read methods are two types of approaches
that are able to detect variants with base—pair breakpoint resolution.
Assembly methods exploit aberrations from the reference genome to
identify locations where variants might be, and then assemble reads
just for that area (Baker, 2012). Comparing the assembled contigs
to the area on the reference genome can detect variants with exact
breakpoints. However, assembly methods have limitations.
Although only local assembly is performed, all reads of the library
are processed in order to construct the k—mer spectrum that is
required for assembly. The step requires a large amount of time and
memory to run. It also tends not to deal well with heterozygous vari—
ants, which occur on only one of a pair of homologous chromo—
somes (Baker, 2012).

Split reads refer to those that cover breakpoints of variants
whether they are single—end or paired—end. Split read methods, as
their name implies, derive variants from these split reads. Read

aligners can help identify split reads. Given a pair of reads (7,. 7;), if
r, is mapped and r;- is either unmapped or soft—clipped at the 5’— or
3’—end, 1”,- may be a split read. In some cases it may not be a split read
due to either sequencing error or mapping error. There are two ways
to use split reads to detect variants: via split read mapping and via
soft—clipped mapping. Split read mapping focuses on unmapped
reads. An unmapped read was first broken up into two parts. Then,
these two parts are respectively mapped to the reference sequence,
which results in the breakpoint of the corresponding variant being
pinpointed. Examples of split read mapping—based methods include
Pindel (Ye et al., 2009), AGE (Abyzov and Gerstein, 2011), SVSeq
(Zhang and Wu, 2011), PRISM (Jiang et al., 2012) and DELLY
(Rausch et al., 2012). Soft—clipped mapping focuses on reads with
the 5’— or 3’—end soft—clipped. These reads are also called soft—clip—
ping reads. One breakpoint of the variant is specified by the map—
ping location where soft—clipping occurs. The other breakpoint is
determined by aligning the soft—clipped segment of the read to the
reference sequence. ClipCrop (Suzuki et al., 2011), CREST (Wang
et al., 2011), SVSeq2 (Zhang et al., 2012) and Socrates (Schroder
et al., 2014) are representatives of soft—clipped mapped—based meth—
ods. Split read methods have a few disadvantages, such as time and
memory inefficiency, and both high false positive and false negative
rates. Some of them do not perform well on low—coverage data.

Three deletion types are observed in the human genome: (1)
blunt deletions: nothing special happened at the breakpoints, (2) de—
letions with microhomologies: two small identical sequences at dele—
tion breakpoints, and (3) deletions with microinsertions: deletion
breakpoints having a small untemplated sequence inserted. Conrad
et al. (2010) studied the breakpoints of 315 deletions and found that
70% of breakpoints have 1—30 bp of microhomology, 33% of
breakpoints contain 1—369 bp of inserted sequence, and 10% of
breakpoints have both simultaneously. Only a few breakpoints
(~7%) have blunt ends. The presence of microhomology and micro—
insertion creates problems for re—aligning the clipped part.
Microhomology in a soft—clipping read causes the clipped part to be
too short for the alignment. The alignment algorithm returns mul—
tiple hits for the clipped part. Finding the correct one among these
hits is challenging. Microinsertion in the clipped part causes the
alignment to fail because inserted sequence cannot match the refer—
ence. However, split read mapping can deal with microhomology
and microinsertion. Pindel uses the pattern growth approach to re—
port deletions with microinsertions. AGE aligns the 5 ’ and 3’ ends of
two given sequences simultaneously and creates a jumping gap to
address their presence. Delly follows the AGE approach and makes
changes to AGE. Despite the availability of these tools, methods
with high accuracy are required for the detection of deletions with
microhomologies and microinsertions.

In this article, we present a new method called Sprites (SPlit
Read re—alIgnment To dEtect Structural variants) for detecting dele—
tions from sequencing data. Sprites can solve the problem that
microhomologies and microinsertions cause. It re—aligns the whole
read rather than the clipped part to the target sequence, a segment
of the reference, in order to find the longest prefix or suffix of the
read that has a match in the target sequence. In the case of microho—
mology, the length of the sequence to be matched is extended to the
length of clipped part plus the length of microhomology. The longest
mapped prefix or suffix of the read can usually cover microhomol—
ogy. Thus, the deletion call is easy to determine. In the case of
microinsertion, the longest matched prefix or suffix of the read can
avoid the impact of microinsertion on the detection. The compari—
son of the re—alignments of the soft—clipped segment and the whole
read is illustrated in Figure 1. Sprites uses alignments produced by

/310‘srcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

-_

Langmcad

and Salzbcrg, 2012

Li, 2013

Zhang (71 Lil. (2012)

Li and Dui‘bin, 2009

/310's112u1n0[p10}x0"sotwuuoqutotqﬂ:duq

Figure 2

Zhang (71 Lil. (2012)

Zhang (71 Lil. (2012)

m-gpr :muaruxo

 

——

/310's112u1n0[p10}x0"sotwuuoqutotqﬂ:duq

1792

Z.Zhang et al.

 

III, the start of If and the end of If. The first call is kept in D. If any
subsequent calls overlap it, they are removed from D. The second
call in D is dealt with in the same way. This process continues until
the last call is done. The resulting call set D is output to a file in the
BEDPE format, which is used to specify genomic regions, at the end.

3 Results

We compared Sprites with the four most commonly used SV detec—
tion tools, i.e. Pindel, SVSeq2, Delly and LUMPY (Layer et al.,
2014). Pindel is the first tool that relies on the concept of splitting
reads to detect variants. Besides deletions, it is able to call other
types of variants, such as insertions and inversions. SVSeq2 is a tool
that specializes in finding deletion calls. Deletions are called by re—
aligning the soft—clipped sequence of reads, which is similar to our
tool. It focuses on analyzing low—coverage data. The latest version of
SVSeq2 can only process one chromosome at a time. When working
on whole genome data, we first ran SVSeq2 for each chromosome
(or contig) of the human reference genome and then concatenated
the results of individual chromosomes to obtain the final results.
LUMPY is a probabilistic—based approach for SV discovery, which
integrates multiple SV detection signals, such as read pairs, split
reads, thereby achieving a substantial improvement in detection as
compared with other popular SV tools such as BreakDancer,
GASVPro (Sindi et al., 2012).

Homozygous variants are commonly used for the detection evalu—
ation. However, heterozygous variants are prevalent variants which
are often less deleterious but more frequent among genetic disorders
compared with homozygous variants. Moreover, the detection of het—
erozygous variants plays a substantial role in the tumor study because
that real samples tend to be a mixture of abnormal and normal gen—
omes and tumor samples usually to have more heterogeneous variants
than homozygous ones (Weischenfeldt et al., 2013). However, detect—
ing heterozygous variants is problematic. So we use heterozygous
variants for the evaluation besides homozygous variants.

Ryan Layer, the author of Lumpy, provided us with two artificial
genomes: one genome with 2500 randomly generated deletions of
size 100 bp to 10 kbp, the other genome with 5516 non—randomly
generated deletions. The 5516 deletions were publicly released by
the 1000 Genomes Project. SVSim (https://github.com/
GregoryFaust/SVsim), an SV simulator, was used to generate these
genomes by introducing these deletions into the b37 version of
human reference, also known as GRCh37 version. The FASTA file
of the b37 version can be found at ftp://ftp.1000genomes.ebi.ac.uk/
vol1/ftp/technical/reference/. The location of these simulated dele—
tions in these genomes was recorded in two BEDPE files. We used
the first genome for homozygous deletion detection and the second
genome for heterozygous deletion detection.

The first genome was intended for homozygous deletion detec—
tion. We used wgsim (https://github.com/lh3/wgsim), a read simula—
tor, to sequence this genome with 2><, 5><, 10><, 20>< and 50><
haploid coverage, respectively, to generate paired—end reads of
length 150 bp. The insert size of paired—end reads was centered at
500 hp with the standard deviation equal to 50 bp. Generated reads
contained sequencing errors (the overall error rate of 0.5%).

The second genome was intended for heterozygous deletion de—
tection. In order to generate heterozygous deletions, a normal gen—
ome and an abnormal genome were required. We used the b37
version of the human reference genome as the normal genome and
the genome with 5516 deletions as the abnormal genome. Paired—
end reads were generated by using wgsim to sequence the two

genomes with 0.05, 0.1, 0.2 and 0.5 SV allele frequencies at 10><,
20>< and 40><, respectively. For example, we generated reads with
0.05 SV allele frequency at 10>< coverage like this: we used wgsim to
sequence the normal genome at 9.5 X haploid coverage and sequence
the abnormal genome at 0.5 X haploid coverage, then the two sets of
reads were combined to form pair—end reads with 0.05 SV allele fre—
quency at 10>< coverage. Reads for heterozygous deletions have the
same properties with reads for homozygous deletions.

Whether reads are for homozygous deletions or for heterozygous
deletions, they need to be mapped to the reference for use with de—
tection tools. BWA ALN was used to map reads. Then, alignment
files were sorted and indexed by SAMtools (Li et al., 2009).
LUMPY required as input two BAM files: a file that was the original
BAM file and a file that represented split read alignment. The split
read alignment file was generated as follows: split reads were first
extracted from the original BAM file using a custom script provided
along with the Lumpy program; these split reads were then re—
aligned by YAHA (Faust and Hall, 2012).

Furthermore, we used the data of the NA12878 individual
released by the Illumina Platinum Genomes project and the data of
the five other individuals (NA19311, NA19312, NA19313,
NA19316 and NA19317) provided by the 1000 genomes project, as
the real data for the evaluation.

Sprites uses two micro—intervals to represent the two breakpoints
of a deletion. Micro—intervals reflect the fact that microhomologies
and microinsertions occur at deletion breakpoints. LUMPY also
uses two intervals to represent breakpoints. However, for each dele—
tion SVseq2 and Pindel predicted, two breakpoints were converted
to two breakpoint intervals with a length 100 bp. For each known
deletion, the same conversion was performed. Since Delly provides
the confidence interval of deletion breakpoints, we used them as
breakpoint intervals and no conversion was performed.

A deletion call is represented by two breakpoint intervals A and
B. A known deletion is represented by two breakpoint intervals A’
and B’. The deletion calls overlaps the known deletion if and only if
A overlaps A’ and B overlaps B’. BEDTools (Quinlan and Hall,
2010) was used for checking such overlaps. A call is a true positive
(TP) if the call overlaps a known deletion, otherwise it is a false
positive (FP). False negatives (FN) refer to the known deletions that
SV detection tools failed to report. A comprehensive measure, called
F—score, is mainly used to evaluate the methods. The F—score is
defined as the harmonic mean of the sensitivity and the precision
(1 — FDR). The sensitivity is defined as  while the false discov—
ery rate (FDR) is defined as 

3.1 Evaluation on the strategy of re—aligning the whole
read

We designed a dedicated experiment to show Sprites’s improvement
in the detection of deletions with microhomology and microinser—
tion. One hundred thirty—two validated deletions, which consists of
10 blunt deletions (7.6%), 96 deletions with microhomology
(72.7%) and 26 deletions with microinsertion (19.7%), were intro—
duced to the chromosome 15 of the Hg18 reference. These 132 dele—
tions reported by Mills et al. (2011) are from 45 individuals of the
CEU population on the chromosome 15, and the frequencies of
lengths of these deletions share the same trend with the frequencies
of lengths of deletions found by the 1000 Genomes Project.
Furthermore, the frequencies of three deletion types roughly match
the frequencies of three deletion types (Conrad et al., 2010) found.
Simulated paired—end reads (101 X 2 bp) were then generated by
wgsim at the error rate 0.005 and at the coverage of 5. The mean

ﬁm'spzumol‘pmﬂo'sopcuuowtotq/ﬁdnq

1.0
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0.0

Table 1

Supplementary Table S1

Figure 3

 

2x 5x

2

0

X

VI Sprites

SVseq2

Lumpy

Pindel

Z] Delly

 

Supplementary Tables S2 and S3

Figure 4

Supplementary Table S3

Table 2

Abyzov er al., 2015

/310'S[BHm0[pJOJXO'SOIJBIIIJOJIIIOIq/ﬂdnq

 

 

 

      

0.0 — -

,9 _ _ _ “““““““““““““ "; :2 :
0,8 """""""""""""""" ‘ : " ; """"""" " ' ' " """"" '  "" '1‘ 
0-7  t ___________________ __ _  — i : |718prites
0-6   t f __________ __ — _ _ _  t : stswz
 —__'_ ' —_ _ _ :: t '_ Lumpy
0-4  : t i _________ _, _ _ _ : : i : Pindel
0-3  :i —: t: I ____ - — ._ _ _ ‘i i : |Z|Delly
0.2 — — — — —— — - - —
0,  “: _' I : ;: ": : " ' ‘ : _' :

|::I: II ' _' ;: II " _‘ _' __‘ : _' _'

0 0 O 5 0.1 0.5

.05 0.1 0.2 .5 .0 0.05 0.1 0.2 0.5

Table 4

Table 3

/310'S[BHm0[pJOJXO'SOIJBIIIJOJIIIOIq/ﬂdnq

Sprites

1795

 

Table 3. Comparison of results on five individuals

 

 

 

 

Q1 NA19311 NA19312 NA19313 NA19316 NA19317

S FDR F—score S FDR F—score S FDR F—score S FDR F—score S FDR F—score
Sprites 19.9 39.7 29.9 11.6 58.8 18.1 9.9 67.3 15.2 6.1 31.2 11.2 5.5 58.3 9.7
SVseq2 19.9 27.1 31.3 11.6 56.2 18.3 8.8 77.1 12.7 6.1 35.3 11.1 6.1 64.3 10.4
Lumpy 8.8 59.0 14.5 3.3 88.3 5.1 2.2 94.0 3.2 0 90 0 0.6 84.6 1.2
Pindel 5.5 23.1 10.3 5.5 33.3 10.2 2.8 70.6 5.1 6.6 25.0 12.1 5.5 44.4 10.0
Delly 20.4 82.4 18.9 14.9 84.7 15.1 16.6 87.8 14.1 3.9 95.4 4.2 3.9 93.5 4.9

 

S is sensitivity and FDR is false discovery rate. We estimated that the coverages of NA19311, NA19312, NA19313, NA19316 and NA1917 are 4.6><, 5.4><,

5.5><, 6.2x and 6.2x, respectively.

Table 4. Comparison of five tools on the speed and memory usage

 

 

Tool Run time Peak memory usage (kb)
Sprites 45.2 s 23552

SVseq2 1 min 33 5 12138640

Lumpy 1 min 8 s 290800

Pindel 38 min 185 15188048

Delly 1 min 25 5 1158384

 

genome studies, because such methods are applicable to these types
of data.

Acknowledgements

We are grateful to Ryan Layer for his generously providing simulated data
and giving advice. We would also like to thank Jeffrey Duerr for taking the
time and effort to help us revise the paper.

Funding

This work was supported by the National Natural Science Foundation of
China under Grant Nos. 61232001, 61379108 and 61370172.

Conﬂict ofInterest: none declared.

References

Abyzov,A. and Gerstein,M. (2011) Age: deﬁning breakpoints of genomic
structural variants at single-nucleotide resolution, through optimal align-
ments with gap excision. Bioinformatics, 27, 595—603.

Abyzov,A. et al. (2011) Cnvnator: an approach to discover, genotype, and
characterize typical and atypical cnvs from family and population genome
sequencing. Genome Res., 21, 974—984.

Abyzov,A. et al. (2015) Analysis of deletion breakpoints from 1,092 humans
reveals details of mutation mechanisms. Nat. Commun., 6, 7256.

A1kan,C. et al. (2011) Genome structural variation discovery and genotyping.
Nat. Rev. Genet., 12, 363—376.

Baker,M. (2012) Structural variation: the genome’s hidden architecture. Nat.
Methods, 9, 133—137.

Chen,K. et al. (2009) Breakdancer: an algorithm for high-resolution mapping
of genomic structural variation. Nat. Methods, 6, 677—681.

Chiang,D.Y. et al. (2009) High-resolution mapping of copy-number alter-
ations with massively parallel sequencing. Nat. Methods, 6, 99—103.

Conrad,D.F. et al. (2010) Mutation spectrum revealed by breakpoint sequenc—
ing of human germline cnvs. Nat. Genet., 42, 385—391.

Consortium,G.P. et al. (2012) An integrated map of genetic variation from
1,092 human genomes. Nature, 491, 56—65.

Faust,G.G. and Hall,I.M. (2012) Yaha: fast and ﬂexible long—read
alignment with optimal breakpoint detection. Bioinformatics, 28,
2417—2424.

Feuk,L. et al. (2006) Structural variation in the human genome. Nat. Rev.
Genet., 7, 85—97.

Hormozdiari,F. et al. (2009) Combinatorial algorithms for structural variation
detection in high-throughput sequenced genomes. Genome Res., 19,
1270—1278.

Hormozdiari,F. et al. (2010) Next-generation variationhunter: combinatorial
algorithms for transposon insertion discovery. Bioinformatics, 26,
i35 0—i35 7.

Jiang,Y. et al. (2012) Prism: pair-read informed split-read mapping for base-
pair level detection of insertion, deletion and structural variants.
Bioinformatics, 28, 2576—2583.

Korbel,].O. et al. (2009) Pemer: a computational framework with simulation-
based error models for inferring genomic structural variants from massive
paired-end sequencing data. Genome 3701., 10, R23.

Langmead,B. and Salzberg,S.L. (2012) Fast gapped-read alignment with bow-
tie 2. Nat. Methods, 9, 357—359.

Layer,R.M. et al. (2014) Lumpy: a probabilistic framework for structural vari-
ant discovery. Genome Biol., 15, R84.

Li,H. (2013) Aligning sequence reads, clone sequences and assembly contigs
with BWA-MEM. ArXiU e-Prints

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with bur—
rows-wheeler transform. Bioinformatics, 25, 1754—1760.

Li,H. et al. (2009) The sequence alignment/map format and samtools.
Bioinformatics, 25, 2078—2079.

Luo,]. et al. (2015a) Epga: de novo assembly using the distributions of reads
and insert size. Bioinformatics, 31, 825—833.

Luo,]. et al. (2015b) Epga2: memory-efﬁcient de novo assembler.
Bioinformatics, 3 1, 3988—3990.

Mills,R.E. et al. (2011) Mapping copy number variation by population-scale
genome sequencing. Nature, 470, 59—65.

Quinlan,A.R. and Hall,I.M. (2010) Bedtools: a ﬂexible suite of utilities for
comparing genomic features. Bioinformatics, 26, 841—842.

Rausch,T. et al. (2012) Delly: structural variant discovery by integrated
paired-end and split—read analysis. Bioinformatics, 28, i333—i339.

Rizk,G. et al. (2014) Mindthegap: integrated detection and assembly of short
and long insertions. Bioinformatics, 30, 3451—3457.

Schroder, J. et al. (2014) Socrates: identiﬁcation of genomic rearrangements in
tumour genomes by re-aligning soft clipped reads. Bioinformatics 30,
1064—1072.

Sindi,S. et al. (2009) A geometric approach for classiﬁcation and comparison
of structural variants. Bioinformatics, 25, i222—i230.

Sindi,S.S. et al. (2012) An integrative probabilistic model for identiﬁcation of
structural variation in sequencing data. Genome Biol., 13, R22.

Suzuki,S. et al. (2011) Clipcrop: a tool for detecting structural variations with
single-base resolution using soft-clipping information. BMC
Bioinformatics, 12(Suppl 14), S7.

ﬁm'sreumoi‘piqxo'sopeuuowtotq/ﬁdnq

1796

Z.Zhang et al.

 

Wang,]. et al. (2011) Crest maps somatic structural variation in cancer gen-
omes with base-pair resolution. Nat. Methods, 8, 652—654.

Weischenfeldt,]. et al. (2013) Phenotypic impact of genomic structural
variation: insights from and for human disease. Nat. Rev. Genet., 14,
125—138.

Ye,K. et al. (2009) Pindel: a pattern growth approach to detect break points of
large deletions and medium sized insertions from paired-end short reads.
Bioinformatics, 25, 2865—2871.

Yoon,S. et al. (2009) Sensitive and accurate detection of copy number variants
using read depth of coverage. Genome Res., 19, 1586—1592.

Zhang,]. et al. (2012) An improved approach for accurate and efﬁcient calling
of structural variations with low-coverage sequence data. BMC
Bioinformatics, 13(Supp16), S6.

Zhang,]. and Wu,Y. (2011) Svseq: an approach for detecting exact break—
points of deletions with low-coverage sequence data. Bioinformatics, 27,
3228—3234.

/310'S[BHmOprOJXO'SOIJBLUJOJIIIOIq/ﬂdnq

