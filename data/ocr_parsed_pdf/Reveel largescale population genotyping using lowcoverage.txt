Bioinformatics, 32(1 1), 2016, 1686—1696

doi: 10.1093/bioinformatics/btv530

Advance Access Publication Date: 9 September 2015
Original Paper

 

 

Genetic and population analysis

Reveel: large-scale population genotyping using
low-coverage sequencing data

Lin Huang, Bo Wang, Ruitang Chen, Sivan Bercovici and
Serafim Batzoglou*

Department of Computer Science, Stanford University, CA 94305, USA

*To whom correspondence should be addressed.
Associate Editor: Gunnar Ratsch

Received on April 8, 2015; revised on August 24, 2015; accepted on September 1, 2015

Abstract

Motivation: Population low—coverage whole—genome sequencing is rapidly emerging as a promin—
ent approach for discovering genomic variation and genotyping a cohort. This approach combines
substantially lower cost than full—coverage sequencing with whole—genome discovery of low—allele
frequency variants, to an extent that is not possible with array genotyping or exome sequencing.
However, a challenging computational problem arises of jointly discovering variants and genotyp—
ing the entire cohort. Variant discovery and genotyping are relatively straightforward tasks on a
single individual that has been sequenced at high coverage, because the inference decomposes
into the independent genotyping of each genomic position for which a sufficient number of
confidently mapped reads are available. However, in low—coverage population sequencing, the
joint inference requires leveraging the complex linkage disequilibrium (LD) patterns in the cohort
to compensate for sparse and missing data in each individual. The potentially massive computa—
tion time for such inference, as well as the missing data that confound low—frequency allele discov—
ery, need to be overcome for this approach to become practical.

Results: Here, we present Reveel, a novel method for single nucleotide variant calling and genotyp—
ing of large cohorts that have been sequenced at low coverage. Reveel introduces a novel tech—
nique for leveraging LD that deviates from previous Markov—based models, and which is aimed at
computational efficiency as well as accuracy in capturing LD patterns present in rare haplotypes.
We evaluate Reveel’s performance through extensive simulations as well as real data from the
1000 Genomes Project, and show that it achieves higher accuracy in low—frequency allele discovery
and substantially lower computation cost than previous state—of—the—art methods.

Availability and implementation: http://reveel.stanford.edu/.

Contact: serafim@cs.stanford.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1lntroductlon 2009; The Wellcome Trust Case Control Consortium, 2007).

Identification of genomic variation in human DNA sequences is a Beyond human, association of genomic variations with traits has
key first step in associating alleles with human traits and diseases many applications, such as in the quality breeding of plants and live—
(The 1000 Genomes Project Consortium, 2012). Genome—Wide asso— stock (Feuillet et (11., 2011; Huang and Han, 2014; The Bovine
ciation studies (GWAS) have successfully linked genetic variation HapMap Consortium, 2009). Despite their success in linking vari—
across thousands of genotyped individuals and hundreds of traits ation with traits, GWAS performed on genotypes have so far failed
(Feero and Guttmacher, 2010; Franke et (11., 2010; Hindorff et (11., to explain a large portion of the heritability of common traits and

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1585

9103 ‘Org JSanV 110 seleﬁuv soc] ‘BtHJOJtIBQ 30 AJtSJQAtuf] 112 /310'slcu1n0[p103x0"sotwurJOJutotq/ﬁduq 11101} pQPBOIHMOG

Reveel: large—scale population genotyping

1687

 

diseases such as diabetes, schizophrenia and heart disease (Billings
and Florez, 2010; Cirulli and Goldstein, 2010; Manolio et (11., 2009;
Visscher et (11., 2012). Genotype—based GWAS have only examined
common single—nucleotide polymorphisms (SNPs), and one promis—
ing avenue for finding the ‘missing heritability’ is the association of
rare variants with common traits (Gibson, 2012; Lee et (11., 2014,
Zuk et (11., 2014), also known as the ‘common disease rare variant’
hypothesis. Many recent efforts have focused on discovering such
rare variants in large cohorts through sequencing rather than geno—
typing (Tennessen et (11., 2012).

Algorithms that call SNPs on a single target genome require the
sample to be sequenced at a high coverage (>30><) to confidently
differentiate alternate alleles from sequencing errors (Bentley et (11.,
2008; DePristo et (11., 2011; Li et (11., 2009; McKenna et (11., 2010).
High—coverage sequencing, however, is expensive when applied to
large cohorts. Recently, low—coverage sequencing of large cohorts
has been proposed as more cost—efficient and informative than
sequencing fewer individuals at high coverage (Li et (11., 2011).
Many on—going projects have adopted this low—coverage strategy,
including the UK10K project (http://www.uk10k.org), the 1000
Genomes Project (The 1000 Genomes Project Consortium, 2010),
the Cohorts for Heart and Aging Research in Genomic
Epidemiology (CHARGE) Project (CHARGE Consortium, 2009)
and multiple participating cohorts in the Haplotype Reference
Consortium (http://www.haplotype—reference—consortium.org).
Each project sequences thousands of individuals at a relatively low
coverage. For example, the 1000 Genomes Project sequenced 2535
whole genomes at depth 4—6><; the CHARGE Project sequenced
NS 000 whole genomes at depth 7>< .

To leverage the wealth of genomic data that such large—scale
population sequencing projects are providing, computational meth—
ods that perform accurate and efficient detection and genotyping of
rare SNPs in a population are urgently needed. The corresponding
computational problem is considerably more challenging than sin—
gle—sample genotyping from deep sequencing data: to overcome the
noise and missing data inherent in low—coverage sequencing, variant
detection and genotyping require the joint estimation of all geno—
types of all individuals simultaneously and need to infer and leverage
the linkage disequilibrium (LD) present in the sequenced cohort. As
a result, computation time can become prohibitive and accuracy is
harder to achieve for rare alleles.

A number of existing computational methods can be applied to
population genotyping. Although not designed for analyzing low—
coverage sequencing data, SAMtools (Li et (11., 2009), GATK
Unified Genotyper (DePristo et (11., 2011; McKenna et (11., 2010)
and Beagle (Browning and Browning, 2009) can perform population
genotyping (The 1000 Genomes Project Consortium, 2012). In par—
ticular, applying GATK Unified Genotyper to 62 CEU samples from
the 1000 Genomes Project pilot phase collectively, followed by
Beagle, leads to reasonably accurate genotyping for common poly—
morphisms (Nielsen et (11., 2012). QCALL (Le and Durbin, 2011)
employs a dynamic programming algorithm to estimate, for every
position of the genome, the posterior probability of presence of an
alternate allele in the cohort. The QCALL algorithm then constructs
a set of possible ancestral recombination graphs from samples to es—
timate the SNP posterior probability for each site in each sample
from these graphs. The glfMultiples+Thunder pipeline employs a
hidden Markov model (HMM) that leverages LD information
across a population to genotype likely polymorphic sites, and is cur—
rently considered the state of the art for accurate genotyping of
populations using sequencing data (Li et (11., 2011). In the underly—
ing HMM, each hidden state is a pair of reference haplotypes, which

are most closely related to the sample being considered, and obser—
vations are genotype likelihoods. To apply this HMM on a
sequenced cohort, the sequenced individuals are used as references.
SNPTools (Wang et (11., 2013) estimates genotyping likelihoods at
putative polymorphic sites using a BAM—specific binomial mixture
model, in which the parameters are empirically estimated using an
expectation—maximization (EM) algorithm. With the resulting geno—
typing likelihoods, SNPTools utilizes a HMM approach based on
the statistical LD pattern model proposed in (Li and Stephens, 2003)
to infer genotypes and haplotypes. This method restricts the number
of parental haplotypes to reduce the computation overhead.

Despite their considerable success, existing genotyping methods
are not ideally suited for application to large cohorts (5000—
1 000 000 individuals) because of their prohibitive computation
time, as well as their reduced accuracy when calling low—frequency
genomic variants, which are hard to differentiate from sequencing
errors. In particular, the HMM model underlying Thunder links
polymorphic sites to surrounding mosaics, modeling these links
using a first—order Markovian model. However, the presence of low
frequency (0.5—5%) and rare (<0.5% frequency) variants hierarch—
ically breaks the common haplotypes into many uncommon or rare
haplotypes, reducing the fit to a model with an underlying
Markovian assumption. Additionally, given a cohort of size n, the
HMM requires 0(n2) hidden states, which results in prohibitively
high computational overhead as 71 increases. The SNP detection dy—
namic programming algorithm of QCALL, on the other hand, is
more computationally efficient because it does not account for the
non—random associations between loci, but its accuracy is reduced
for the same reason.

Here, we present Reveel, a novel method for large—scale SNP dis—
covery and genotype imputation using low—coverage sequencing
data sets. Reveel leverages the underlying complex LD structure by
employing a simplified model that scales linearly with the number of
individuals in a cohort for a given number of imputed SNPs, while
producing highly accurate genotype calls for both high— and low—
frequency SNPs. We evaluate the performance of Reveel on simu—
lated data, as well as real data and demonstrate that Reveel achieves
significant improvements in both efficiency and accuracy over previ—
ous state—of—the—art population—scale genotyping methods, making
Reveel a practical approach for large—scale population genotyping.

2 Methods

The input to Reveel is a cohort of n sequenced individuals, for which
read counts are available supporting each of the four possible nu—
cleotides Z : (2X)1X4 at every site in each sample. To genotype the
individuals, Reveel performs the following four steps: (i)
Polymorphic site discovery. A set of m putative polymorphic sites
are identified across the genome. (ii) Initialization of genotypes
G : (giﬁi) for every sample 1' and putative polymorphic site / identi—
fied in step 1. (iii) Calculation of a rank three tensor P : (1),-M), rep—
resenting the probability of individual 1' having genotype g in
position / given the current assignment G. (iv) Calculation of new as—
signment G’ that maximizes the current entries of P; steps 3 and 4
are performed iteratively until convergence. (v) Final refinement of
the genotypes G.

2.1 Polymorphic site discovery

Knowing the set of observed reads supporting each of the four
possible nucleotides Z : (2X)1X4 at a site in a sample, we can com—
pute the probability that allele XE {A,C,G,T} is present by

9103 ‘Org JSanV 110 seleﬁuv soc] ‘BtHJOJtIBQ 30 AJtSJQAtuf] 112 /3.10'speum0fp1q1x0"sotwurJOJutotq/ﬁduq 11101} pQPBOIIIAAOG

1 688

L.Huang et al.

 

marginalizing over possible genotypes given the read counts
Z: PX : ZY Pr{g : {X, Y})£}, where the genotype g : {X, Y} is an
unordered pair of alleles. The probability of genotype g given read
counts can be computed as

Pr{€lg}Pr{g}

“{g‘e} zgmrmgsmgs ‘1)
To compute the genotype probability, we first calculate the geno—
type likelihood, i.e. the probability of observing Z when the genotype
is g : {X , Y}. The genotype can take one of 10 possible assign—
ments. The likelihood of a homozygous genotype can be written as a
binomial probability mass function fhimmialwx; El, 1 — 8), in which
8 is the sequencing base error rate. Reveel takes 8 as an input param—
eter, but is robust to differences between the input 8 and the real
sequencing error rate (see Results). The likelihood of a heterozygous
genotype can be expressed as follows, in which the indicator function

1cmdmon equals to 1 if the condition is true; otherwise it equals to 0.

, 2‘
Pr{€g}—(,A [T ,C ,6 

[Z
[zE{[4,[Tq[Cr[G}

(2)

The polymorphic prior probability of a heterozygous genotype is as—
signed according to mutation type, as in previous work (Li et al.,
2011): ifX and Y are transition mutations (A <—> G or C <—> T), then
the prior is set to 2/ 3; if X and Y are transversion mutations
(A or G <—> C or T), then the prior is set to 1/6. The prior probabil—
ity of a homozygous genotype is set to 1 / 3, the mean value of poly—
morphic prior probabilities.

We distinguish loci that contain true variations from those that
arose from sequencing errors, as follows. Given a target locus and a
candidate allele X, we define scorex representing the strength of the
evidence for the existence of allele X at the target locus, using
the summation of a monotonically increasing function over all the
samples:

scoreX: Z 17(PX) (3)

samples

We define the allele with the highest score as the reference allele.
The allele with the second highest score is a putative alternate allele.
We distinguish sites that exhibit alternate alleles from those that exhibit
only sequencing errors using a threshold scored, (by default, 0.5 ).

The function 17 was trained using simulated annealing on simu—
lated data sets in the design stage (different from the data sets used
in the experiments), maximizing the overall recall under the per—
fect precision constraint. The function 17(z) : a - z/(1 + a — z) with
a sole parameter a : 5 X 10‘6 fit the training data well, and was
built in the tool and applied in all our experiments. During train—
ing of this function, score”, was set to 1 because our initial experi—
ments showed that for large data sets (thousands of samples)
threshold 1 gives near—perfect precision. However, to increase sen—
sitivity during application of Reveel, we set the default threshold
to the lower value of 0.5 and allow users to change it in command
line.

The motivation behind 17 and Equation (3) is to capture strong
evidence for the existence of allele X even if such strong evidence ap—
pear only once in the cohort. In the meantime, multiple weak evi—
dences that are likely to be induced by sequencing errors only boost
scorex to a limited extent.

A

maximization

initials“. .. /—\
'4

probability of genotype Pm}

 

I genotypes 5"”) I

V

summa rization

 

  
  

mm

0 liker polymorphic site
I the SNP being genotyped
O k-"nearest" neighbors

 

Fig. 1. An overview of Reveel. (A) Reveel infers the genotypes using a summar-
ization—maximization iterative method. In each iteration we first apply the sum-
marization step to every SNP and we then apply the maximization to every SNP.
The summarization step calculates the genotype probabilities using the current
estimation of genotypes and observed reads in the context of linkage disequilib-
rium. The maximization finds the genotypes that maximizing the genotype prob-
abilities obtained in the summarization step. These genotypes are then used to
refine the genotype probabilities in the next summarization step. We iterate
these two steps until convergence. (B) The underlying network of Reveel is com-
posed of a set of likely polymorphic sites and the linkage disequilibrium among
them. For every polymorphic site, we pick its k—‘nearest' neighbor sites in terms
of linkage disequilibrium to facilitate genotype calling at the target site

2.2 Genotype—calling algorithm

Given m candidate polymorphic sites that were identified in the pre—
vious step, we determine the genotypes of 71 samples simultaneously
across the m sites. Let G be a n X m matrix, in which g3,- : {0, 1, 2}
represents the genotype of sample 1' at marker / being homozygous
reference, heterozygous, homozygous alternate, respectively. Let P
be a n X m X 3 rank three tensor, where 1),-7,3), represents the prob—
ability of g,,,- : 17. We formulate the overall framework of our algo—
rithm as a fixed—point model

P : f(P)reads) (4)

The function f (z) does not have a closed—form expression; instead,
we estimate P by using an iterative algorithm that alternates between
two steps: summarization and maximization. Given the genotype ma—
trix G, in the summarization step, we estimate P in the context of LD
and observed reads. In the maximization step, we update G with the
genotypes associated with the largest probabilities within P. We itera—
tively apply these two steps until convergence (Fig. 1A).

PU) : Pr{G(i)jLD, reads} (5)

Ga”) <— argmame (6)

In each iteration, we first apply summarization on all markers
and then apply maximization on all markers. Using the subscript
target to represent the marker being evaluated in a sample and
tar—get to represent all other makers in the same sample, we rewrite
the above equations as:

FEZEEW : Pr{g§2,get : Iqjg%get, reads} (7)
gig}; ‘— arg mix pigrgeth (8)

The main challenge lies in the summarization step, where the LD
information needs to be leveraged in a computationally efficient

9103 05 JSanV uo seraﬁuv soc] ‘BIIIJOJIIBD JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pep1201um0q

Reveel: large—scale population genotyping

1689

 

way that leads to high accuracy in estimating the conditional proba—
bilities. Here, we introduce a technique that leverages the most
informative markers in terms of LD. For each marker, we find its k—
nearest neighbor markers in terms of LD, as defined in the next sec—
tion (Fig. 1B). Equation (7) is replaced by:

12:21...) 2 Frail... 2 beg... reads} <9>

The observed reads provide two forms of evidence: the read
counts supporting alleles at the target marker (denoted as rmget) and
the allele frequencies at the evaluated marker across samples (denoted
as 0). To utilize the read counts, we rewrite the conditional probabil—
ity in Equation (9) using the chain rule to yield Equation (10).

1252.,” o< Prematiglilgﬂ 2 lo} - Paglia. 2 higth} (10>

The calculation of the first term is straightforward. To calculate
the second term, we use the probability of genotypes in the i—th iter—
ation as follows. For each sample /, we calculate the probability that
this sample has genotype [7 at the target locus and genotypes gjaillIN at
the neighbor loci. We use subscript (target, /) to represent the
marker on the same locus as the target but in sample /, distinguished
from the target SNP being evaluated. Similarly, we use subscript
(kNN,/') to represent the k—nearest neighbors in sample /. With these
notations, the above probability can be expressed Pr{gE:)rgen/- :
173$;le : ggm}. Summing this probability over all the samples
yields the expected sample count C), with genotype [7 at the target
SNP and gjglN at the neighbors; summing over all the samples and
all the possible 17’s yields the expected count C having gjglN at the
neighbors. We use the ratio C), / C as the new conditional probability
Pr{g£:i)rget :  ‘

In practice, because the sample size is usually limited to hundreds
or thousands, the conditional probability assessment could be biased
(Friedman et al., 1997), which can significantly affect the perform—
ance. To reduce bias, we use Laplace smoothing (Hansen et al.,
2005). In summary, the second term is given by the following ex—

pression, in which we set t : 1 if AF 2 1% and t : 0.01 otherwise.

i i ZjPr{gE;)rget,/' : htglaIIlINf :  + t
Pr{g£a)rg8t : hlgjth z (i) (i), (i)
217* ZjPI-{gtargetj : h*7gkNN,/' : gkNN} + 3t
(1 1)

 

Although Laplace smoothing is used, if the initial C(O) is biased
towards the homozygous reference on certain markers, then
Pr{gg,),get : 1 or Zlggm} tends to be a very small number. Thus,
the results after convergence are also likely to be biased. To address
this issue, we leverage the other signal given by the reads, that is,
the alternate allele frequency over samples, and rewrite
Equation (10) as:

pgrgeth [x Pr{rtafgﬂlgg)rget :  ' Pr{g£:)rget :   

Once again, we face the problem of assessing the conditional
probability in the second term, but this time we obtain knowledge
from an additional source. Let piNN be Pr{gg),get : 17) gjgm}, and let
pg be Pr{gg,),get : 1710}. The probabilities evaluated from different
sources are combined using a noisy—MAX gate (Zagorecki and
Druzdzel, 2013). The expressions are as follows.

Pr{g£:lg..2hig§:;m.0}2 Z psNN-pﬁ (13>

Vu,1/:max{u,1/}:I7

In contrast to the estimate provided by Equation (11), which is
biased towards homozygous reference, this estimate is biased

towards homozygous alternate. We use each of the above two esti—
mates alternatingly in the iterations of our summarization—maxi—
mization algorithm.

2.3 Nearest neighbor calculation
To define the k nearest neighbors of a locus, we introduce three
metrics to approximate the LD between two loci. As this evalu—
ation is performed on every pair of candidate polymorphic sites,
we need metrics with low computational overhead. Commonly
used metrics such as the correlation coefficient require the estima—
tion of genotypes based on the observed reads; this estimation in—
volves a considerable computational cost. The main benefit of the
metrics we present here is that they can be directly applied on the
read counts.

Let S,- be a set of samples that have at least one read at locus i
supporting alternate alleles. The first metric is defined as the Jaccard
index of two sets

lSzﬂS/l
lSiUSI'l

 

sim1(i,/') : (14)

This metric utilizes the presence of reads that support alternate
alleles. As a second, more informative metric, we apply the Jaccard
index on multisets, accounting for repeated elements. Set  is
defined as the collection of r3, copies of t’s, where r3, is the number
of reads at locus i of sample t supporting alternate alleles. The se—
cond metric is thus

 

. . . lSIﬂSI-l min r- ,r-
51m2(17/), 1 I 7 2t {Lt lit}

_ ,_22222222 U
(st-us) Ztmaxmm} ‘ )

Finally, we define the third metric that produces a more rapidly
increasing score as both samples exhibit more reads that support al—
ternate alleles:

i Ztmin{rirt7 77¢}?
Ztmax‘lritr 77¢}?

We apply the summarization—maximization algorithm separ—
ately, leading to tensors P,- for i: 1, 2 and 3. Then, we combine
the three tensors by using the average probability at each marker
(also called the mean combination rule (Kittler et al., 1998; Xu
et al., 1992)):

sim3(i,/') (16)

PzEm] an
The combined genotype matrix is given by
G<—argmaxP (18)

We conduct three rounds of genotyping; in each round we pick
or re—pick k—nearest neighbors and then apply 10 iterations of
summarization—maximization inference, using the output genotypes
of the previous round as initial genotypes. In the first round, the k
nearest neighbors of each locus are selected using the above similar—
ity metrics. In the second round, we estimate the LD between pairs
of loci and re—pick k nearest neighbors accordingly. Because the link—
age phase is unknown, we use a composite LD estimator A as pro—
posed previously (Schaid, 2004):

1
A I ZPaabb + paaBb + PAabb + 217141138 — ZPaPh (19)

where A and B represent the major alleles of two loci, a and b
represent the minor alleles. In the third round, we re—pick k nearest

9103 05 JSanV uo seraﬁuv soc] ‘BIIIJOJIIBD JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pep1201um0q

1690

L.Huang et al.

 

neighbors using a time—efficient approximation of A . Equation (19)
is approximated as a function of sim1 (i, j):

1 1
A z ESiml  +17an ' (pa +1717 —EPan _ 2) (20)

The estimation of A using Equation (19) costs 0(m2n)
computation time, which is more computationally expensive
than using Equation (20), which costs 0(m2). Therefore we provide
users with a Reveel—lite option, which utilizes Equation (20) in both
round two and round three. This way the running time can be
reduced by almost half, with minimal reduction in accuracy (see
Results).

Instead of read counts that support each of the four possible nu—
cleotides at every site in each sample, our tool can also take geno—
type likelihoods (GLs) as input. When genotype likelihoods are
provided, we restore read counts from GLs to calculate sim1, simz,
sim3; we directly use GLs in the genotype inference, that is, we sub—
stitute Pr{r,.,g.,(g12,g,t : 17} in Equation (10) with GLs.

The inter—marker LD at most extends to a few hundred kilobases
(kb) (Reich et al., 2001; Schaffner et al., 2005). To compute nearest
neighbors efficiently, we tile the genome with a set of non—overlap—
ping blocks. The k—nearest neighbor markers are selected from the
block to which the target marker belongs. We found that block sizes
of 500 kb to 1 Mb result in high accuracy and practical running
time. Our default block size is 1 Mb.

Parameter [2 has a great inﬂuence on the quality of the approxi—
mation in Equation (11). Let Q1702) - ZI- Pr{gE:)rgen/- : h,gj:1)\IN1/.:
gjglN} and Q02) - 2,, Q1702). An overly large k can result in very
small Q02) and therefore low—quality conditional probability tables.
Assuming LD, Q02) can be roughly estimated as
n . [(1 — maf)2]A . 12 . maf- (1 — W013 . [Wursz where A, B, c are
the counts of 0, 1, 2 in the genotype pattern g,:NN and
A + B + C : k. In other words, given a fixed sample size n, Q02) ex—
ponentially shrinks with the increment of [2. Based on our experi—
ments, we recommend the following settings: 71 S 75, k : 2;
75 < n S 250, k : 3; n > 250, k : 4. As cohorts become considerably
larger than 1KGP in the future, we expect that larger values for [2
will yield better performance.

Finally, the conditional probability computed with different val—
ues for k conveys LD on different levels. To balance the impact of
the selection of k, we rewrite Equation (10) as

. . k . .
1752,33,), [X Pr{rtargetlgg)rget :  ' 2 [wk‘ ' Pr{gg)rget : 
k*:1

(21)

where the weight ij can be 1/k" or 2k*/(k + [22). In our experi—
ments, we use Equation (21) with My : 1/k".

2.4 Initial genotypes

Given a low—coverage sequencing data set, we observe only a few (if
any) reads at a target site. Thus, using these reads to estimate gESZE, is
not a good initial guess. Instead, we use the reads at the k nearest loci
to amplify the low—coverage data. More formally, let r,- and f,- be the
number of reads at locus i supporting alternate and reference alleles.
Instead of using marge, and ﬁnger, we use Rtarget : rmgﬂ+ ZrkNN and
RF,ngt : ﬁnger + kaNN for the initial guess, which is equivalent to
amplifying the depth of the target site. We assign

giggget ‘— arg mgx Pr‘lgl Rtargetr R target} (22)

2.5 Final refinement

The method described in the previous sections achieves sufficiently
high performance with a very limited number of neighbor SNPs. To
further improve the genotyping accuracy at common SNPs, the
Reveel package provides an optional final refinement step, which
applies a phasing method to the common and low frequency SNPs
(allele frequencies 21%). Since previous publications have proposed
high—quality phasing algorithms (Browning and Browning, 2009;
DePristo et al., 2011; McKenna et al., 2010), we use BEAGLE
(Browning and Browning, 2009) for this step. We feed the genotype
likelihoods of high—frequency SNPs into BEAGLE, and then merge
the phased dosage into our outputs.

3 Results

3.1 Performance on simulated data based on 1KGP

3. 1.1 Experimental setup

We created a simulated data set, 1kgp-sim, which mimicked the fea—
tures of the 1000 Genomes Project (1KGP) dataset (The 1000
Genomes Project Consortium, 2010), including high variability of
sequencing depth among loci and individuals. 1kgp-sim included
2535 samples; each corresponded to a sample in the 1KGP data set.
To create these samples, we simulated variants in 10 000 haplotypes
for a 1—Mbp region using COSI with parameters from the best—
fitting model (Schaffner, 2005). A 1—Mbp region on chromosome 20
(43 000 000—44 000 000) of the human genome build GRCh37 was
used as a reference genome. Combining these variants with the refer—
ence genome resulted in 10 000 chromosomes. A simulated sample
was a composition of two randomly selected simulated chromo—
somes. Then, for each sample, we downloaded the BAM files from
the 1KGP database to obtain the mapping position and length of
each real read, and we generated a simulated read with the same
position and length, and with sequencing base errors injected into a
haplotype of the simulated sample; the sequencing base error rate
was set to 0.1% (Lou et al., 2013; Robasky et al., 2014). We further
examined the performance of Reveel under a wide range of sequenc—
ing base error rates: 0.0001—1% (see ‘Performance as a function of
sequencing error rate’ in Section 3.1.4). The base qualities of the
simulated reads were copied from the downloaded bam files.
Finally, the simulated reads were mapped to the reference genome
by BWA (Li and Durbin, 2009). The resulting bam files (as opposite
to the barn files downloaded from the 1KGP) were used in this set of
experiments. The mapped depth was 7.4><. We generated three add—
itional data sets, 1kgp-sim-n100, 1kgp-sim-n5 00 and 1kgp-sim-
711000, from 1kgp-sim by using randomly selected 100, 500 and
1000 individuals, respectively.

3.1.2 Comparison against other methods
We compared the SNP—calling performance of Reveel with that of
three state—of—the—art methods: SNPTools’ pileup—rvarisite com—
mands (v1.0), GATK Unified Genotyper (v3.3) and glfMultiples.
While GATK HaplotypeCaller was a more recent tool, in practice
Unified Genotyper was recommended for analyzing data sets with
more than 100 samples for performance reasons (Van der Auwera
et al., 2013). Our experiments confirm that Unified Genotyper is
dramatically faster with similar accuracy to HaplotypeCaller
(Supplementary Table S1). We therefore compared Reveel to GATK
Unified Genotyper.

We benchmarked the genotyping performance of Reveel against
three state—of—the—art pipelines: (i) SNPTools+Beagle, in which
SNPTools’ bamodel—rpoprob commands (v1.0) estimated genotype

9103 05 JSanV uo seraﬁuv 50'] ‘BIIIJOJIIBD JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pep1201um0q

Reveel: large—scale population genotyping

1691

 

Table 1. Genotyping accuracy and running time

 

Method 1kgp-sim-n100 (c—site # 4291)

1 kgp-sim-n5 00 (c—site # 701 6)

1 kgp-sim-nl 000 (c—site # 85 90)

 

site# acc(%) c—acc(%) Time (min) site# acc(%) c—acc(%) Time (min) site# acc(%) c—acc(%) Time (min)

 

Reveel 4393 99.7719 99.7749 2.0 7607 99.9246 99.9249 16 9927 99.9512 99.9697 52
Reveel + Beagle 4393 99.8288 99.8399 2.9 7607 99.9454 99.9567 24 9927 99.9670 99.9809 81
Reveel—lite 4393 99.7398 99.7488 1.6 7607 99.9107 99.9105 9 9927 99.9388 99.9568 26
SNPTools+Beagle 4571 99.7213 99.7252 8.2 7597 99.9150 99.9205 217 9399 99.9437 99.9595 1089
GATK + Beagle 4434 99.6786 99.6802 13.4 7524 99.8911 99.8912 388 9745 99.9258 99.9435 1806

glfMultiples+Thunder 4549 99.6747 99.6909 307.0

7700 99.9224 99.9216 2736 8886 99.9397 99.9375 6120

 

We evaluated the genotype-calling performance of Reveel and three state—of—the-art methods: glfMultiples followed by Thunder, GATK Uniﬁed Genotyper
applied to all the samples collectively followed by Beagle, and SNPTools followed by Beagle. For each method, we measured the genotyping accuracy at the
polymorphic sites discovered by the corresponding SNP discovery tool (acc). The site # columns show the number of the sites that the various SNP discovery
tools called. We also measured the genotyping accuracy at the polymorphic sites discovered by all four methods (c—acc). These sites are referred to as consensus

sites (c—site).

likelihoods at polymorphic sites and then Beagle 4 (r1399) inferred
genotypes. SNPTools+Beagle was used as a baseline of our per—
formance evaluation. (ii) GATK + Beagle, in which Beagle 4 (r1399)
used the genotype likelihoods generated by GATK Unified
Genotyper (v3.3) to infer genotypes. (iii) glfMultiples +Thunder, in
which the computationally demanding yet accurate genotyping
method Thunder is applied to the output of glfMultiples. Unless
otherwise specified, we used the default parameters for previous
methods.

3.1.3 SNP discovery

First, we measured the ability of Reveel, SNPTools, GATK and
glfMultiples, to identify sites in the genome that are polymorphic in
the samples. Reveel exhibited near—perfect performance in discover—
ing common SNPs (Supplementary Fig. S1). Then, we compared the
performance of Reveel in detecting rare and low frequency SNPs to
the performance of various methods (Supplementary Fig. S2). SNPs
were divided into three bins according to their allele frequencies
(AF): <0.1%, 0.1—0.2% and 0.2—0.5%. For each bin, we report the
recall of each method, as the fraction of SNPs that were identified
among all SNPs in the bin. We report precision as the fraction of
identified loci that showed more than one allele in the simulated
10 000 haplotypes out of all reported loci.

As shown in Supplementary Figure S2, Reveel outperformed the
other methods in discovering SNPs with AF <0.1% for all data sets
and SNPs with AF ranging between 0.1 and 0.2% for the n : 100,
500 and 1000 cases. On SNPs with AF 0.2—0.5%, Reveel showed
similar recall with GATK for the n : 500, 1000 and 2535 cases, and
higher recall for the n : 100 case; SNPTools showed slightly higher
recall with Reveel for the 7122535 case. In a large cohort, a SNP
with AF 0.2—0.5% is very likely to be captured by multiple reads in
a few samples; hence, state—of—the—art callers such as SNPTools and
GATK are capable of discovering SNPs of moderate AF.

3.1.4 Genotyping

Genotyping accuracy. We measured the genotyping accuracy of
each method, defined as the percentage of inferred genotypes that
are correct. Table 1 demonstrates Reveel’s genotyping accuracy
measured with default parameters, compared with
SNPTools+Beagle, GATK+Beagle and glfMultiples+Thunder.
Three genotyping modes of Reveel were examined: the default
Reveel system, Reveel followed by Beagle, and Reveel—lite. Each
method was applied on the variants discovered by its own pipeline.

The performance was measured at the consensus sites, which were
detected by all four SNP discovery tools. As the CPU overhead of
Thunder was considerably high when Thunder was applied to Nagp-
sim (expected 14.7 days), we did not report the comparison for this
data set. We also compared the genotyping performance of Reveel
and the lightweight pipeline SNPTools + Beagle on all four datasets
(Supplementary Table S2). In this set of experiments, we tuned
Reveel’s threshold score”, to achieve a 100% precision level in SNP
discovery, and then infer genotypes at the variants discovered by
Reveel. For comparison, we used SNPTools (bamodel—rpoprob) to
estimate genotype likelihoods at the same call set, and then applied
Beagle 4 for genotype inference.

Genotype calling using Reveel, and Reveel + Beagle, achieved su—
perior accuracy over the other methods in all the experiments.
Reveel—lite also outperformed the other methods for the 712100
case; for the n :5 00 case its genotyping accuracy was higher than
GATK + Beagle but lower than SNPTools + Beagle and
glfMultiples + Thunder; for the n : 1000 case its genotyping accur—
acy was comparable to SNPTools + Beagle and higher than the other
two methods. The ratio between the measured genotyping error rate
at consensus sites of Reveel + Beagle and those of three state—of—the—
art methods ranged between 0.31 and 0.58. As the sample size
increased from 100 to 1000, the genotyping error rate of
Reveel+Beagle measured at the consensus sites (the Reveel—called
sites) dramatically reduced by a factor of 8.4 (5.2). When the sample
size increased to thousands, Reveel approached perfect performance.
In our experiments, Reveel w/o Beagle (Reveel+Beagle) achieved
99.9703% (99.9803%) genotyping accuracy on the 1kgp-sim data
set with 2535 samples. These results indicate that Reveel will be—
come increasingly powerful as cohort sizes increase in the future.

The summarization—maximization iterative algorithm of Reveel
converges rapidly: with 7121000, 99.67% of the loci converged
after 10 iterations when alternating between Equations (11) and
(13) in the iterative algorithm, and 99.75% of the loci converged
when only Equation (1 1) was applied.

In all these experiments, we ran Beagle 3.3.2 for 20 iterations as
the final refinement of Reveel +Beagle. In preliminary studies, we
also tried running Beagle 4 for 5 burn—in iterations and 15 iterations
of genotype phase estimation. We found the pipeline with Beagle 4
provided slightly higher genotyping accuracy with moderately lon—
ger running time (data not shown).

Computation time. We compared the running time of Reveel to the
other three population genotyping methods on a 2.67GHz Intel

9103 05 isanV uo seraﬁuv soc} ‘BIIIJOJIIBD JO [(1151910qu 112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Zduq 11101} pep1201um0q

1692

L.Huang et al.

 

      

genotyping accuracy [56)

 

 

 

 

 

a I —o— Reveel
 1 + Reveel+beagie
33. 99.6ﬂ/ 2+- Reveel—lite
E 2a.- gHMuluple5+thu rider 
r» 99.5 —-n--gatk+beagle "
—4— SNPTmlS+beagle Ii
99 4 ' ' 99.75 *

 

 

2.1% .1—.2%.2—.5% 5-94: 1—2% 2—5% 35%
A

c.1912 .1—.2%.2—.5% 1—2% 2—5‘11: 35%

992134; .1—.2%.2—.5% 1—2% 26% 35%

Fig. 2. Genotyping performance as a function of allele frequencies. The figures from left to right show the performance for the n : 100, 500, 1000 cases, respect-
ively. The polymorphic sites were categorized according to their population minor allele frequencies, which were computed as the percentage of minor alleles in
10000 simulated haplotypes. We compared the performance of Reveel and the other methods at the sites in each category

Xeon X5550 processor, as shown in Table 1 and Supplementary
Table S2. The numbers shown in these tables are the computational
overhead of SNP discovery and genotyping, unless otherwise specified.
Reveel—lite, Reveel, Reveel + Beagle were more than 192, 118, 76
times faster than glfMultiples+Thunder respectively, and signifi—
cantly faster than SNPTools + Beagle and GATK + Beagle especially
when the sample size was greater than 100.

More importantly, Reveel scales well to larger datasets. Out of
three genotyping modes, Reveel—lite has the best scalability. The pro—
cess of finding k—nearest neighbors for m polymorphic sites across n
individuals has a time complexity of O(nm2), which we further re—
duce by restricting the calculation to blocks of size<1Mbp; the time
complexity of the iterative algorithm is 

Although Reveel + Beagle and SNPTools + Beagle utilized
Beagle, Reveel+Beagle was considerably faster than SNPTools+
Beagle and that the ratio between Reveel + Beagle’s and
SNPTools + Beagle’s running times increased from 3 X to 13 X as the
sample size increased from 100 to 1000. The reason is as follows. In
the Reveel+Beagle pipeline, Beagle was only applied to common
and low—frequency SNPs (AF 2 1%), which were a fraction of dis—
covered polymorphic sites. For the n : 100, 500, 1000, 2535 cases,
the fractions were 67.9, 40.8, 31.3, 22.1, respectively. Moreover,
increasing the sample size from 100 to 500 increased the number of
common SNPs by a small factor (3.8%). Further increasing the sam—
ple size to 1000 did not increase the number of common SNPs. As a
result, the computational overhead of Beagle in the Reveel + Beagle
pipeline scaled well with cohort size. In contrast, SNPTools + Beagle
applied Beagle on all the detected polymorphic sites, regardless of
their allele frequencies. The site count significantly increased with
the sample size.

We note that the other methods report haplotype phasing infor—
mation because genotyping calls are computed by finding the best
haplotype pairs for each individual. Reveel finds genotypes directly,
and does not report phasing information, which is outside the scope
of this work.

Performance on uncommon SNPs. We grouped SNPs according to
their AFs and compared the performance of tools on each group
(Fig. 2). Reveel+Beagle exhibits higher accuracy than the other
methods in almost every group. The only exception is for the
n : 500 case Thunder shows slightly higher genotyping accuracy on
SNPs with AF>5%. We further investigated the n:500 case by
categorizing SNPs into three types: homozygous reference, heterozy—
gous and homozygous alternate (Supplementary Fig. S3).
Reveel+Beagle achieved very low genotyping error rate at
homozygous reference SNPs across the AF spectrum; at heterozy—
gous SNPs Reveel + Beagle, SNPTools + Beagle and GATK + Beagle

outperformed glfMultiples +Thunder; at homozygous alternate
SNPs Reveel+Beagle demonstrated low genotyping error rate on
most SNPs except for SNPs with AF>5%. Because the reported
genotyping accuracy was dominated by the large number of homo—
zygous reference sites, we also measured the performance of tools
on calling alternate alleles on each group (Supplementary Table S3).
Again, Reveel exhibited better performance than the other
three methods for most cases. We also grouped SNPs in 1kgp-sim-
n1000 according to whether they are homozygous reference (hom—
ref), heterozygous (het), or homozygous alternate (hom—alt) and
reported accuracy in each class (Supplementary Table S4). It has
been previously suggested that high genotyping accuracy at sites
with low AF can be achieved by simply assigning homozygous refer—
ence (also known as a ‘straw—man’ approach) (Li et al., 2011).
Supplementary Table S4 shows that Reveel rarely calls alternate al—
leles as reference.

Performance as a function of sequencing error rate. Reveal is robust
to sequencing reads’ base error rate (Supplementary Table S5). In
addition to 1kgp-sim, we created five simulated data sets in which
the injected sequencing base error rates were 1, 0.5, 0.2, 0.05,
0.0001 %, as the reported sequencing base call accuracy of leading
NGS technologies ranges from 99.9 to 99.9999% (Robasky et al.,
2014). As shown in the table, the performance of 0.5, 0.2, 0.05 and
0.0001% cases remains on the same level as the 0.1% case. In the
1% case, the genotyping error rate is 0.035%, which is still a very
low number.

Reveel does not require users to input an accurate sequencing
error rate. In the previous examples we set the input sequencing base
error rate 8 of Reveel as 0.1% regardless of the true value. Unless
the input 8 for 8 underestimated 8 by a factor of 10, the parameter
setting in our experiments did not reduce the performance by a non—
negligible extent. When logo 83 — 1, an accurate estimate of base
error rate slightly boosted the genotyping performance. For instance,
we also tried to set this value to be 1 % for the 1 % case, the genotyp—
ing accuracy increased to 99.9698%.

Performance as a function of sequencing coverage. We uniformly
downsampled the simulated data sets to sequencing coverage
2—7.4>< to examine the robustness of Reveel with respect to coverage
(Supplementary Table S6). As the sequencing coverage decreased
from 7.4>< to 4>< we observed a slight decline in genotyping accur—
acy. The rate of decline increased when we pushed the coverage to
2><, but even in this extreme case Reveel achieved 99.7109% geno—
typing accuracy for the n : 1000 case. This demonstrates the applic—
ability of Reveel to large data sets with very shallow sequencing
depth.

9103 05 isanV uo seraﬁuv 50’] 0211110311123 JO [(1151910qu 112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Zduq 11101} pep1201um0q

Reveel: large—scale population genotyping

1693

 

We also varied the parameter k to investigate the optimal k for
different levels of sequencing coverage. No clear connection between
[2 and sequencing coverage was observed (Supplementary Table S6).

3.2 Performance on 1KGP samples

We applied Reveel to the low—coverage sequencing data from the
1000 Genomes Project Phase 3. This data set includes 2535 samples
from 26 populations (Supplementary Table S7). We restricted our
analysis to a 5—Mbp region on chromosome 20 (43 000 000—
48000000), which we call 1kgp-real. Reveel was applied to call
SNPs and genotypes from each population separately. The block
size was set to 500 kb; the threshold score”, was set to its default
value 0.5. As a post—processing step, we merged SNPs detected in
each population, and we reported genotypes of each sample meas—
ured at the merged set 81;. The genotype of a sample from popula—
tion 17 at a SNP that belongs to 8U but not Sp was treated as a
homozygous major within population 17.

For comparison, we applied SNPTools + Beagle, GATK + Beagle
and glfMultiples+Thunder to the same data set 1kgp-real. Similar
to the application of Reveel, we merged the SNP sets called from
all 26 populations and evaluated the genotyping accuracy at the
union SNP set using the HapMap 3 benchmarks. Whenever no tool
reported a locus as a SNP, for GATK+Beagle and
glfMultiples+Thunder, we assumed all the samples were homozy—
gous reference at this locus, where the reference allele came from the
reference genome. As SNPTools did not report sites at which all the
samples in the studied cohort have homozygous alternates as SNPs,
we added these sites into the variant list before the list was fed into
SNPTools (bamodel—rpoprob) for estimating genotype likelihoods.

3.2.1 SNP discovery

Reveel discovered 163 024 likely polymorphic sites in 26 popula—
tions from the 1KGP Phase 3. The African populations contributed
36 703 putative SNPs, while the other populations showed lower di—
versity (Table 2). The 1KGP Phase 1 called variants from 1092 sam—
ples and reported 68208 SNPs in the analyzed region; our method
identified 94.63% of those SNPs. The transition to transversion
ratio (Ts/TV) for the variants overlapping with the 1KGP Phase 1
was 2.58. The putative SNPs were primarily rare variants
(Supplementary Fig. S4): more than 95% of the putative SNPs were
with allele frequencies 31%; only 1.5% of putative SNPs had allele
frequencies >5%. Their Ts/Tv ratio was 2.10.

We conducted a set of experiments to benchmark each method’s
false positive rates of variant discovery (Supplementary Table S8
and S9). In the first experiment, across all the samples sequenced by
both 1KGP Phase 3 and complete genomes (CG) data set in the

Table 2. The SNPs discovered in populations

 

 

Population Number of Discovered SNPs reported Putative
ancestry populations SNPs in Phase 1 SNPs
East Asian 5 45 931 24 056 21 875
South Asian 5 52 431 20 593 31 838
African 7 80 236 43 533 36 703
European 5 46 006 27 164 18 842
Americas 4 48 875 33 734 15 141

 

We applied Reveel to each population from the 1000 Genomes Project sep—
arately, and then collected the SNPs discovered from the populations with the
same ancestry. Our tool revealed a large number of putative SNPs from the
South Asian populations and the African populations.

1000 Genomes Project, we defined as gold standard positives as all
the positions where CG data find non—reference alleles, and defined
as test outcome positives as all the positions where the tested
method finds non—reference alleles, where each locus occurrence in
each individual is counted separately. We evaluated the false posi—
tive rate and the sensitivity of each method without applying any fil—
ters that aim to distinguish true polymorphisms from errors
(Supplementary Table S8). Reveel achieved similar sensitivity level
as other methods and much lower false positive rate. We also com—
pared Reveel with the integrated call set reported by the 1KGP
Phase 3 (ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/
supporting/input_callsets). The integrated call set was generated by
integrating variant calls made by many tools, and multiple filters
(such as SVM in the GotCloud package, AtlasZ in the
SNPTools +Atla52 pipeline) were applied during the generation; as
expected, the integrated call set outperformed each individual
method. The same experiment was repeated using the trios in 1KGP
Pilot 2 as the benchmark.

In the second experiment, when we calculated the false positive
rate and sensitivity, each locus was counted once, regardless of how
many individuals it was detected to be in. More precisely, we
defined gold standard positives as across the studied cohort the pos—
itions where CG data find at least one non—reference alleles; test out—
come positives as across the studied cohort the positions where
genotyping method finds at least one non—reference alleles. The com—
parison of various methods shown in Supplementary Table S9A is
consistent with the first experiment. Again, this experiment was re—
peated on two 1KGP Pilot 2 trios that were sequenced at high cover—
age (Coverage ~ 40>< ); for these trios, we treat the genotyping calls
as gold standard and measure the methods’ ability to genotype the
1KGP individual from the low—coverage sequencing data alone
(Supplementary Table S9B).

Interestingly, Reveel discovered 1676 triallelic sites and 13 sites
having all four nucleotides across all 1KGP individuals. We manu—
ally examined these 13 sites in Supplementary Table S10. Among
them, three sites (chr20:45227442, 45341056, 47122443) were re—
ported as quadallelic in the integrated call set of the 1KGP Phase 3;
three sites (chr20:45227444, 46166386, 46316306) were reported
as quadallelic by a SNP discovery pipeline adopted by the 1KGP
Phase 3; one site (chr20:43132939) was reported as a triallelic site
by two adopted SNP discovery pipelines, which aggregately dis—
covered all four nucleotides. Out of the remaining six sites, one site
(chr20:45440123) was reported as a triallelic site in the integrated
call set; one site (chr20:47131459) was reported as a biallelic site in
the integrated call set. The other four sites (chr20:44229327,
47131663, 47132131, 47552368) were not reported in the inte—
grated call set. Loci chr20:44229327 and 47131663 appeared to
have complex variants, as reported using Freebayes and recalibrated
by GATK. 1KGP Phase 3 did not have consistent variant calls at
these loci. Loci chr20: 47132131 and 47552368 were detected as
SNPs using Freebayes but no other pipelines. Supplementary Table
S10 describes all 13 sites.

We compared the SNPs discovered by Reveel and glfMultiples
from 99 CEU samples and 109 YRI samples of the 1kgp-real data
set. The SNPs detected by only one method were compared to the
SNPs reported in the CEU and YRI trios from the 1000 Genomes
Project Pilot 2, because these trios are sequenced at high depth (42 X
on average) and their genotype calls are likely to be of high accuracy
(The 1000 Genomes Project Consortium, 2010, Xu et al., 2012) and
consequently any putative SNPs detected by either method that are
also called in these trios have strong evidence of being true. As
shown in Supplementary Table S11, both methods discovered

9103 05 isanV uo seraﬁuv 50’] 0211110311123 JO [(1151910qu 112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Zduq 11101} pep1201um0q

1694

L.Huang et al.

 

22518 SNPs in the CEU trio and 36 141 SNPs in the YRI trio. In
addition, each method identified a number of SNPs not found by the
other method. Of those, glfMultiples identified more than three
times as many as Reveel. The vast majority (~99%) of SNPs identi—
fied by only one method were not identified by the deep trio
sequencing, and that proportion was slightly higher for glfMultiples,
which was consistent with Reveel having a lower false positive rate
than glfMultiples.

The Venn diagram Supplementary Figure S5 shows the overlaps
of the SNP call sets obtained using Reveel and the other three
methods.

3.2.2 Genotyping accuracy

HapMap 3 benchmark. We evaluated performance on the genotype
calls using the genotypes reported in the HapMap Phase III panel
(Altshuler et al., 2010) as benchmarks. Out of 26 populations in the
1kgp-real data set, HapMap 3 studied nine populations: ASW, CEU,
CHB, GIH, JPT, LWK, MXL, TSI and YRI. The number of the com—
mon samples between HapMap 3 and 1KGP in these populations
were 50, 90, 94, 93, 97, 90, 56, 96 and 103,
respectively. Reveel + Beagle achieved high accuracy on most popu—
lations (Fig. 3). Performance on the ASW and MXL was lower, per—
haps due to the fact that there are only 66 and 67 samples for these
populations, respectively.

Figure 3 shows that Thunder and Reveel + Beagle perform simi—
larly, whereas in simulations Reveel + Beagle outperforms Thunder.
One possible explanation for the discrepancy is that the SNPs re—
ported by HapMap 3 are primarily common SNPs (Supplementary
Table S12), in which the two methods have similar performance in
simulations. SNPTools+Beagle and GATK+Beagle had compar—
able performance with Thunder in simulations, but they did not per—
form equally well as Thunder on real data.

Complete Genomics benchmark. We also measured performance
using the genotypes called from the Complete Genomics data set in
the 1000 Genomes Project. Of the 427 samples in the CG data set,
287 samples were also in the 1kgp-real data set, including 63 CEU,
62 CH5, 3 KHV, 10 LWK, 62 PEL, 32 PJL, 3 PUR and 52 YRI sam—
ples. Since the CG variants were called from high—coverage sequenc—
ing data, this benchmark contains variants with any allele
frequencies.

We evaluated accuracy at heterozygous sites and homozygous
non—reference sites for each method. Specifically, for every sample

YRI’ assets hoe-r. 412m - pans -

tar—996 410m I @291. - om -
MIL—991599 0.059: | .0th - {335% -
DAM—51.39% new I new - tram -
MDT—99.? 41.02% | {1.156 I 411785 -
(em—99.51 {H -0."i"l& I 41.3% -
CHB_ 99.53 |o.or2|x. 4mm | 0.11% '
CEU—99. on I 411% I 432389 -
new 99m «mm | 313% - 043% -

955% 9916 995% “2059

Fig. 3. Genotyping accuracy evaluated using HapMap3 benchmark.
Genotyping accuracy was evaluated using the genotypes of 50 ASW, 90 CEU,
94 CHB, 93 GIH, 97 JPT, 90 LWK, 56 MXL, 96 TSI, and 103 YRI samples re-
ported by HapMap 3 as the benchmark. The blue bars represent the genotyp-
ing accuracy of Reveel + Beagle. For the other three methods, the bars show
the difference from Reveel+Beagle: orange indicates lower accuracy than
Reveel + Beagle; green indicates higher accuracy than Reveel + Beagle

we focused on the sites where the CG data reported heterozygous or
homozygous non—reference and calculated the percentage of cor—
rectly called sites. Figure 4 shows the boxplots of performances for
each population. Reveel + Beagle demonstrated higher accuracy
than the other methods in the vast majority of the cases, except that
glfMultiples + Thunder had higher accuracy than Reveel + Beagle in
the YRI case.

Supplementary Figure S6 demonstrates that using read counts
and using genotype likelihoods as inputs result in almost identical
genotyping accuracy on the 1KGP data set.

Reveel exhibited substantially lower running times than other
methods on the 1KGP data (Supplementary Table S13).

3.2.3 Discordance of alleles between HapMap3 and 1KGP

We also observed a few sites where alleles between HapMap3 and
1KGP are discordant (Supplementary Table S14). Four sites where
alleles called by HapMap3 and 1KGP (type 1) were discovered by
Reveel and verified by GATK + Beagle, and matched the report of a
previous publication (Qin et al., 2013). Three alleles where the allele
frequencies are considerably different between the genotypes re—
ported by HapMap3 and the genotypes reported by 1KGP (type 2),
were also found by both Reveel and GATK + Beagle, and these were
not reported (Qin et al., 2013). For example, at locus chr20:
446978 87 HapMap3 reported the vast majority of haplotypes hav—
ing G (99.53%) and only a small portion having T (0.47%), while
Reveel inferred 2.19% G and 97.81% T from 1KGP. At locus
chr20:47590564 HapMap3 reported 99.82% C and 0.18% T, while
1KGP exhibited 9.25% C and 90.75% T. At chr20:48661748 al—
though both data sets supported the major allele being A and the
minor allele being G, the minor allele frequency reported by
HapMap3 was 44.99% and that obtained from 1KGP was only
9.01%. Finally, three loci that were reported as SNPs in HapMap3
and not in 1KGP (type 3), were also reported as constant by both
GATK + Beagle and Reveel. When we evaluated the genotyping ac—
curacy of tools, we excluded all the above loci.

4 Discussion

A rare genetic variant that originated from a recent mutation event
tags many of the other genetic variants surrounding it, as these were
present at that time, including variants at long genetic distance from
it; rare variants present an extremely high LD, yielding long rare
haplotypes. The nearest—neighbor concept in Reveel uniquely lever—
ages this observation: common SNPs tend to have nearest neighbors
that are proximal in genetic distance, while rare SNPs tend to have
nearest neighbors that are much more distant (Supplementary Fig.
S7, Supplementary Fig. S8A); moreover, the allele frequencies of tar—
get SNPs and their nearest neighbors are in almost perfect linear cor—
relation (Supplementary Fig. S8B).

HMM—based methods face a tradeoff between either explicitly
modeling each rare haplotype, which leads to computational over—
head due to the large number of parameters, or compressing the
state space which leads to the loss of long—distance rare—haplotype
LD information. In particular, previous state—of—the—art methods,
such as MaCH and Thunder, apply a first—order Markovian model
between two subsequent haplotypic positions. While such models
have been demonstrated to work well for genotyping common vari—
ants, they face a challenge in modeling rare variants. On the lower
side of the rare SNPs spectrum (3 0.1%), the incorporation of LD
information in previous methods did not improve the genotyping ac—
curacy in the 1000 Genomes Project Phase 1; rather, the resulting

9103 05 isanV uo seraﬁuv 50’] 0211110311123 JO [(1151910qu 112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pep1201um0q

Reveel: large—scale population genotyping

 

GELI CH5

ID
2..
3

T T 2
"- T

95 T 96

g E E g a T T T 2 'r' ..
gas 395- I
a. J. J‘ J. A a a.
E94 E“
=
ﬁes gee i J—

r
92 gr.)- I l J.
J.

91 9r- J-

Fi RL "Fri-a g'l'r" 'Ei'ia' 315' “ii Hr. ESE 133:5"53'

PEL PJL

9? - -— T 2 ,_ sari

I I I _ _
9G I 96| T ‘ T —
H H
essrrilu  SE
894 J- J— J- J‘ i_ 894! J- ‘L
E E
393 1693

 

to
m
to
11’

 

E
E

n RL are giT S§B 645 n FIL are gv’T S;B 645

1695

KHVI LWK
 9?r
95% E a E a as” ,
e95: e95 E
594: €94 : 1 8
gear 893 i. J- i |
92: 92 I l l

J. J.

 

‘3
‘3

' "n+3 elf" 553'" (if

:r:
:u
i—
2:?
+.-
mi
'9.
—il
a»!
+5
B5:
c:-
+
m
:r:
:u
.—

F'UH YFII

'@

a
1.4”

96 96. _
H H ‘1' T T _|_
E 95 E 95' I I
a. a.
 9+ a 9+ . . 2
z. z.
u u I r
a 93- a 93- I I I r
I J- '
92- 92 J_ : J.
91 91 J-
H FtL n+3 g+T 5.5 CnB H FlL n+3 g+T 5.5 CnB

Fig. 4. Genotyping accuracy evaluated at heterozygous sites and homozygous non-reference sites of Complete Genomics benchmark. For every sample, we eval-
uated three Reveel genotyping modes (R: Reveel, RL: Reveel-lite, R + B: Reveel + Beagle) and three other methods (9 +T: glfMultiples +Thunder, S + B:
SNPTools+ Beagle, G+ B: GATK+ Beagle) at the sites where the sample is heterozygous or homozygous non-reference and reported the percentages of cor-
rectly inferred sites. The evaluations were performed on the same set of sites. The samples from a population were aggregated into a subfigure. In the boxplots,
the central marks are the median, the red lines are the mean, the edges of the box are the 25th and 75th percentiles, and the whiskers span 9th to 91st percentiles

genotyping accuracy was modestly lower than when not using LD
information (The 1000 Genomes Project Consortium, 2012). The
explanation underlying this phenomenon may be as follows.
Although rare haplotypes share common variants, they usually con—
tain distinct rare variants that can serve as a signature. Leveraging
those correlations within a simple Markovian model is impractical:
every rare haplotype needs to be encoded in the model, captured as
a distinct sequence of states in the HMM. The HMMs underlying
currently available methods tend to eliminate rare alleles as noise,
which contributes to biases towards homozygous reference.
Conversely, to infer genotypes, our approach aims to identify the
most informative sites in a way that is less sensitive to their genetic
distance. The strategy is different from previous models that impli—
citly weaken the association between remote sites. By focusing on
the most informative markers based on their LD, our method pro—
vides considerable improvement in the genotype calling of rare
variants.

High AF SNPs are caused by one or more mutation events that
occurred in the distant past; after many generations of recombin—
ation, the LD between high AF sites could become very complex.
Therefore, perfect LD between a high AF site and a set of surround—
ing sites may not exist. In this particular case, genotype phasing on
common variants is a useful complementary method to our geno—
type—calling algorithm. We incorporate a post—processing step into
Reveel in the Reveel + Beagle pipeline: after imputing the genotypes
and genotype probabilities at likely polymorphic sites, we pick SNPs
with AF>1% and feed their genotype probabilities into Beagle
(Browning and Browning, 2009) for phasing. Finally the output dos—
ages of Beagle are merged with the genotypes at rare SNPs.

An important feature of our algorithm at high AF sites is provid—
ing high—quality genotype probabilities. To demonstrate this point,
we conducted an experiment for comparison, labeled as Reveel-
gatk-beagle. In this experiment, we forced GATK to make calls
across the sites identified by our algorithm with AF> 1%. Then,
Beagle was trained on the outputs of GATK, producing dosages at
these sites. Finally, we merged the outputs of Beagle and the geno—
types called by our algorithm at rare SNPs for evaluation. The only
difference between this approach and our Reveel + Beagle pipeline is

which tool was used to created genotype probabilities. The compari—
son shown in Supplementary Figure S9 clearly illustrates that
Reveel + Beagle outperforming Reveel-gatk-beagle.

The running time of Reveel scales linearly with the number of in—
dividuals n and linearly with the number of polymorphic sites m in
our algorithms, expect that the process of estimating LD between
every pair of polymorphic sites requires m2 computations. As we re—
strict the LD estimation within windows of size 500 kb—1 Mb (see
Section 2), m is usually within the range of a few thousands depend—
ing on the size of the studied cohort, which results in practical run—
ning times in our experiments.

Reveel has been demonstrated to be robust to high variability of
sequencing depth across loci and individuals. The 1000 Genomes
Project Phase 3 data set used in our experiments has non—uniform
sequencing coverage: the mapped coverage of 2535 samples in the
studied region ranges from 2.13 to 35.3, with mean value 6.99 and
standard deviation 2.56. The average coverage of these loci across the
cohort ranges from 0.0197 to 20.7, with standard deviation 1.19.

In summary, Reveel is a highly accurate and efficient tool for sin—
gle nucleotide variation calling and genotyping of large cohorts of
low—coverage sequenced individuals. In future work, similar tech—
niques may be applied to leverage a population’s LD to provide
rapid and accurate genotyping of other types of variation, such as in—
sertions, deletions and structural variants.

Acknowledgements

We thank our labmates, especially Yuling Liu, for discussions on this project,
and Robyn Brinks Lockwood for improving the writing of the manuscript.

Funding

This work was supported in part by a grant from the Stanford-KAUST alli-
ance for academic excellence. L.H. was supported in part by a Stanford
Graduate Fellowship.

Conﬂict of Interest: S. Batzoglou is a co-founder of DNAnexus, and a member
of the scientiﬁc board of 23andMe and Eve Biomedical. S. Bercovici is Chief
Technology Ofﬁcer of Lifecode, Inc.

9103 05 isnﬁnv uo seraﬁuv 50’] 0211110311123 JO [(1151910qu 112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pep1201um0q

1696

L.Huang et al.

 

References

Altshuler,D.M. et al. (2010) Integrating common and rare genetic variation in
diverse human populations. Nature, 467, 5 2—5 8.

Bentley,D.R. et al. (2008) Accurate whole human genome sequencing using re—
versible terminator chemistry. Nature, 456, 53—5 9.

Billings,L.K. and Florez,].C. (2010) The genetics of type 2 diabetes: what have
we learned from GWAS? Ann. N. Y. Acad. Sci., 1212, 5 9—77.

Browning,B.L. and Browning,S.R. (2009) A uniﬁed approach to genotype im—
putation and haplotype phase inference for large data sets of trios and unre-
lated individuals. Am. I. Hum. Genet., 84, 210—223.

CHARGE Consortium. (2009) Cohorts for Heart and Aging Research in
Genomic Epidemiology (CHARGE) Consortium: Design of prospective
meta—analyses of genome—wide association studies from ﬁve cohorts. Circ.
Cardiovasc. Genet., 2, 73—80.

Cirulli,E.T. and Goldstein,D.B. (2010) Uncovering the roles of rare variants in
common disease through whole—genome sequencing. Nat. Rev. Genet., 11,
415—425.

DePristo,M.A. et al. (2011) A framework for variation discovery and geno—
typing using next-generation dna sequencing data. Nat. Genet., 43, 491—
498.

Feero,W.G. and Guttmacher,A.E. (2010) Genome wide association studies
and assessment of the risk of disease. N. Engl. I. Med., 363, 166—176.

Feuillet,C. et al. (2011) Crop genome sequencing: lessons and rationales.
Trends Plant Sci., 16, 77—88.

Franke,A. et al. (2010) Genome—wide meta—analysis increases to 71 the
number of conﬁrmed crohn’s disease susceptibility loci. Nat. Genet., 42,
1 1 18—1 125.

Friedman,N. et al. (1997) Bayesian network classiﬁers. Mach. Learn, 29,
131—163.

Gibson,G. (2012) Rare and common variants: twenty arguments. Nat. Rev.
Genet., 13,135—145.

Hansen,G.A. et al. (2005) Mesh Enhancement: Selected Elliptic Methods,
Foundations and Applications. Imperial College Press, London, UK.

Hindorff,L.A. et al. (2009) Potential etiologic and functional implications of
genome-wide association loci for human diseases and traits. PNAS, 106,
9362—9367.

Huang,X. and Han,B. (2014) Natural variations and genome—wide association
studies in crop plants. Annu. Rev. Plant Biol., 65, 531—55 1.

Kittler,I. et al. (1998) On combining classiﬁers. IEEE Trans. Pattern Anal.
Mach. Intell., 20, 226—239.

Le,S.Q. and Durbin,R. (2011) SNP detection and genotyping from low—
coverage sequencing data on multiple diploid samples. Genome Res., 21,
952—960.

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with
Burrows-Wheeler Transform. Bioinformatics, 25, 175 4—1 760.

Lee,S. et al. (2014) Rare—variant association analysis: study designs and statis-
tical tests. Am.I. Hum. Genet., 95, 5—23.

Li,H. et al. (2009) The sequence alignment/map format and samtools.
Bioinformatics, 25, 2078—2079.

Li,Y. et al. (2011) Low-coverage sequencing: implications for design of com—
plex trait association studies. Genome Res., 21, 940—95 1.

Li,N. and Stephens,M. (2003) Modeling linkage disequilibrium and identify—
ing recombination hotspots using single—nucleotide polymorphism data.
Genetics, 165, 2213—2233.

Lou,D.I. et al. (2013) High—throughput DNA sequencing errors are reduced by
orders of magnitude using circle sequencing. PNAS, 110, 19872—19877.

Manolio,T.A. et al. (2009) Finding the missing heritability of complex dis-
eases. Nature, 461, 747—753.

McKenna,A. et al. (2010) The genome analysis toolkit: a mapreduce frame-
work for analyzing next—generation dna sequencing data. Genome Res., 20,
1297—1303.

Nielsen,R. et al. (2012) Genotype and snp calling from next—generation
sequencing data. Nat. Rev. Genet., 12, 443—451.

Qin,P. et al. (2013) A panel of ancestry informative markers to estimate and
correct potential effects of population stratiﬁcation in Han Chinese. Eur. I.
Hum. Genet., 22, 248C—253.

Reich,D.E. et al. (2001) Linkage disequilibrium in the human genome.
Nature, 411, 199—204.

Robasky,K. et al. (2014) The role of replicates for error mitigation in next—gen-
eration sequencing. Nat. Rev. Genet., 15, 5 6—62.

Schaffner,S.F. et al. (2005) Calibrating a coalescent simulation of human gen—
ome sequence variation. Genome Res., 15, 15 76—15 83.

Schaid,D.I. (2004) Linkage disequilibrium testing when linkage phase is un—
known. Genetics, 166, 505—512.

Tennessen,I.A. et al. (2012) Evolution and functional impact of rare coding
variation from deep sequencing of human exomes. Science, 337, 64—69.

The 1000 Genomes Project Consortium. (2010) A map of human genome vari—
ation from population—scale sequencing. Nature, 467, 1061—1073.

The 1000 Genomes Project Consortium. (2012) An integrated map of genetic
variation from 1 092 human genomes. Nature, 491, 5 6—65 .

The Bovine HapMap Consortium. (2009) Genome-wide survey of snp vari—
ation uncovers the genetic structure of cattle breeds. Science, 324, 528—532.

The Wellcome Trust Case Control Consortium. (2007) Genome-wide associ—
ation study of 14 000 cases of seven common diseases and 3 000 shared con—
trols. Nature, 447, 661—678.

Van der Auwera,G.A. et al. (2013) From FastQ data to high-conﬁdence vari—
ant calls: the genome analysis toolkit best practices pipeline. Curr. Protoc.
Bioinformat, 43, 11.10.1—11.10.33.

Visscher,P.M. et al. (2012) Five years of GWAS discovery. Am. I. Hum.
Genet., 90, 7—24.

Xu,F. et al. (2012) A fast and accurate SNP detection algorithm for next—gen-
eration sequencing data. Nat. Commun.

Xu,L. et al. (1992) Methods of combining multiple classiﬁers and their appli—
cations to handwriting recognition. IEEE Trans. Syst Man Cybern. Syst.,
22, 418—435.

Wang,Y. et al. (2013) An integrative variant analysis pipeline for accurate
genotype/haplotype inference in population NGS data. Genome Res., 23,
833—842.

Zagorecki,A. and Druzdzel,M.I. (2013) Knowledge engineering for bayesian
networks: how common are noisy—max distributions in practice? IEEE
Trans. Syst. Man Cybernet. Syst., 43, 186—195.

Zuk,O. et al. (2014) Searching for missing heritability: designing rare variant
association studies. PNAS, 111, E455—E464.

9103 05 isnﬁnv uo seraﬁuv 50’] 0211110311123 JO [(1151910qu 112 /310's1eu1n0[p10}x0"sorreurJOJutotq/ﬁduq 11101} pep1201um0q

