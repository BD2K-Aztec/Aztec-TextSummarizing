BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

L.Roguski and S.Deorowicz

 

Table 1. Compression results

 

Compressor Illumina dataset

ABI Solid dataset

LS454/IonTorrent dataset

 

Fast comp. mode Best comp. mode

Fast comp. mode

Best comp. mode Fast comp. mode Best comp. mode

 

Ratio c-sp d-sp ratio c-sp d-sp Ratio c-sp

d-sp ratio c-sp d-sp Ratio c-sp d-sp ratio c-sp d-sp

 

pigz 3.04 48 127 3.11 27 127 3.30 74
pbzip2 3.81 50 141 3.81 48 142 4.10 39
Quip 5.09 20 16 4.12 11 12 7 7
FQZcomp 4.87 49 36 5.52 9 9 5.40 50
DSRC 1 4.19 31 40 4.60 14 38 4.87 26
SquB 2.39 205 169 7 7 7 7 7

DSRC2 4.25 279 379 4.95 60 55 5.02 246

128 3.39 54 114 2.85 43 123 2.91 19 120
156 4.10 39 148 3.52 58 141 3.52 58 135

7 4.28 18 13 4.29 4 4
38 5.63 24 22 4.32 42 32 4.87 7 6
39 4.94 21 40 3.93 40 40 4.09 18 40
7 7 7 1.90 137 150 7 7 7

359 5.27 71 71 3.94 342 433 4.35 52 45

 

Note: Ratio is expressed as the original ﬁle size divided by the compressed ﬁle size. Columns ‘c—sp' and'd—sp' denote compression and decompression speeds (in MB/s),
respectively. The programs were run for the maximal number of threads they allow, but not >8. Empty cells mean lack of support such type of ﬁles. The best results are in

bold. comp. denotes compression.

700 
600 

500 

400 

200  «PC-best"

 5 V 1 I ,5 E “.3server;best..E .... ..

Speed [MB/s]

 

 

0 2 4 6 8 10 12 14 16 18 20
No. of compressing threads

F'g. 1. Scalability of DSRC 2 for SRR065390_1 ﬁle in the lossless mode

with context being the position in the read, or the order-1 Huffman coder
of the run-length-encoded quality stream. In the second method, the
quality values are compressed arithmetically with context lengths up to 6.

3 RESULTS

To evaluate the proposed compressor, we collected datasets for
three different technologies: Illumina (ﬁxed—length reads, base
space), ABI SOLiD (ﬁxed—length reads, color space), LS454/
IonTorrent (variable—length reads, base space). Majority of ex—
periments were performed on a four 8—core AMD Opteron TM
6136 2.4 GHz CPUs server with RAID—5 disk matrix containing 6
HDDs. In one test, we also used the PC machine containing
4—core (with hyperthreading) i7 4770 3.4 GHz CPU and SSD disk.

For the comparison, we used two popular universal tools, pigz
(parallel gzip) and p—bzip2 (parallel bzip2), and the best existing
FASTQ compressors, Quip (Jones et al., 2012), FQZcomp
(Bonﬁeld and Mahoney, 2013), SquB (Howison, 2013) and
DSRC 1 (Deorowicz and Grabowski, 2011). The compressors
were run in two modes: the best ratio and fast compression,
not necessarily the fastest possible, but with a ‘reasonable’
ratio (Table 1). DSRC 2 consumes <400 MB of main memory
in the fast mode and <65 GB in best mode. These values are
much higher than of gzip (<10 MB in parallel variant), but we
think they are still acceptable.

In the lossless mode, the best ratios were obtained by
FQZcomp, but its low speed makes it rather impractical. The
compression ratio of DSRC 2 is ~1(LIS% smaller, but its speed

is an order of magnitude (or more) higher. In the fast mode, the
speed of DSRC 2 is sometimes I/O—limited, while the compres—
sion ratio is still much better than of the de facto standards gzip/
bzip2. What is important is that DSRC 2 is similarly fast in both
compression and decompression. This allows the application in
storage of the intermediary results in the processing pipelines,
potentially with total improvement of the complete processing
speed because of I/O transfer reduction.

The relative results for the Illumina’s quality—reduced data are
presented in Table 1 of the Supplementary File Sl. Figure 1
shows how DSRC 2 speed scales up for growing number of
threads.

4 CONCLUSION

We propose a specialized FASTQ compressor, DSRC 2, for in—
dustry—oriented and research purposes. Its compression ratios are
much better than that of the widely used gzip program and only
moderately worse than the best existing (in terms of ratio)
FASTQ compressors. DSRC 2 is, however, usually a few times
faster than all the competitors. We believe our software, contain—
ing command—line (de)compressor and libraries for popular pro—
gramming languages, could replace gzip in real pipelines and
repositories.

ACKNOWLEDGEMENT

The authors thank Szymon Grabowski for his helpful comments
after reading the preliminary versions of the article.

Funding: This work was partially supported by the European
Union from the European Social Fund within the
INTERKADRA project UDAPOKL-04.01.01-00—014/10—00
and by the Polish National Science Centre under the project
DEC—2012/05/B/ST6/03148. The work was performed using the
infrastructure supported by POIG.02.03.01—24—099/ 13 grant:
‘GeCONiI7Upper Silesian Center for Computational Science
and Engineering’.

Conﬂict of interest: none declared.

 

2214

ﬁm'spzumol‘pmjxo'sopeuuopumq/ﬁdnq

DSRC 2

 

REFERENCES

Ba11,M.P. et a]. (2012) A public resource facilitating clinical use of genomes. Proc.
Natl Acad. Sci. USA, 109, 1192&11927.

B0nﬁeld,J. and Mahoney,M. (2013) Compression of FASTQ and SAM format
sequencing data. PLoS One, 8, e59190.

Deorowicz,S. and Grabowski,S. (2011) Compression of DNA sequence reads in
FASTQ format. Bioinformaticx, 27, 86(7862.

Deorowicz,S. and Grabowski,S. (2013) Data compression for sequencing data.
Algorithms Mol. Biol., 8, 25.

Howison,M. (2013) High—throughput compression of FASTQ data with SquB.
IEEE/ACM Trans. Compat. Biol. Bioinform., 10, 2137218.

J0nes,D.C. et a]. (2012) Compression of next—generation sequencing reads aided by
highly efﬁcient de novo assembly. Nucleic Acitlx' Rex, 40, e171.

R0berts,J. (2013) Million veterans sequenced. Nat. Biotechnol., 31, 470.

Salomon,D. and Motta,G. (2010) Handbook of Data Comprexsion. Springer,
London.

 

2215

/810'spzum0fp10}xo"sotJBuIJOJutotqﬂ:duq

