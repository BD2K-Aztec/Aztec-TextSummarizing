ORIGINAL PAPER

Vol. 27 no. 21 2011, pages 2994-3001
doi:10. 1093/bioinformatics/btr510

 

Structural bioinformatics

Advance Access publication September 8, 2011

Finding stable local optimal RNA secondary structures

Yuan Li and Shaojie Zhang*

Department of Electrical Engineering and Computer Science, University of Central Florida, Orlando, FL 32816, USA

Associate Editor: Anna Tramontano

 

ABSTRACT

Motivation: Many RNAs, such as riboswitches, can fold into multiple
alternate structures and perform different biological functions. These
biologically functional structures usually have low free energies in
their local energy landscapes and are very stable such that they
cannot easily jump out of the current states and fold into other
stable conformations. The conformational space of feasible RNA
secondary structures is prohibitively large, and accurate prediction
of functional structure conformations is challenging. Because the
stability of an RNA secondary structure is determined predominantly
by energetically favorable helical regions (stacks), we propose to
use configurations of putative stacks to represent RNA secondary
structures. By considering a reduced conformational space of
local optimal stack configurations instead of all feasible RNA
structures, we first present an algorithm for enumerating all possible
local optimal stack configurations. In addition, we present a fast
heuristic algorithm for approximating energy barriers encountered
during folding pathways between each pair of local optimal stack
configurations and finding all the stable local optimal structures.
Results: Benchmark tests have been conducted on several RNA
riboswitches, whose alternate secondary structures have been
experimentally verified. The benchmark results show that our
method can successfully predict the native ‘on’ and ‘off’ secondary
structures, and better rank them compared with other state-of-art
approaches.

Availability: The software is freely available and can be downloaded
at http://genome.ucf.edu/RNASLOpt.

Contact: shzhang@eecs.ucf.edu

Supplementary Information: Supplementary data are available at
Bioinformatics online.

Received on May 30, 2011; revised on August 14, 2011; accepted
on September 4, 2011

1 INTRODUCTION

RNA molecules play important roles in many biological
activities. The structures of RNAs are key to understanding
their ﬁmctionalities. The native secondary structures of RNA
molecules are usually the minimum free energy (MFE) structures.
However, many regulatory RNAs may form multiple alternate
metastable structures, each of which, performs a different function
(Baumstark et al., 1997; Schultes and Bartel, 2000). For example,
the cis-regulatory RNAs (called as riboswitches) are widely present
at the non-coding regions of mRNAs in bacteria, and regulate
both transcriptional and translational expression of their cognate

 

*To whom correspondence should be addressed.

metabolic genes and thus comprise a metabolite-sensing system.
Riboswitches can selectively bind with small metabolites and form
alternative structure conformations, in order to exert control over
translation initiation or formation of a transcription terminator (or
an anti-terminator) helix and thus turn ‘off’ (or ‘on’) the gene
transcription (Mandal and Breaker, 2004; Wakeman et (11., 2007).

Alternate structure conformations of RNA riboswitches can
be experimentally veriﬁed using in-line probing (Mandal and
Breaker, 2004), X-ray crystallography (Batey et (11., 2004) or
Nuclear Magnetic Resonance (NMR) spectroscopy (Noeske et al.,
2005). However, these methods are usually time consuming and
expensive. Computational approaches for accurately predicting
alternate conformations are in need. The alternate functional
structures are usually also energetically favored and are stable
in their local energy landscapes. The conformational transitions
between any pair of alternate structures may involve high-energy
barriers, such that RNAs can easily become kinetically trapped
by these structures. Accurate predictions of alternate structures of
an RNA molecule should be conducted by exploiting the energy
landscape and the folding dynamics of the RNA, in combination
with the binding of the target metabolites. The ideal approach is
to construct an exact energy landscape on all possible suboptimal
secondary structures, then analyze every possible local optimal
structures as well as all possible folding pathways in the landscape,
and ﬁnally determine the most signiﬁcant structures. In the
following, we will brieﬂy review existing methods for enumerating
suboptimal structures and predicting alternate structures for RNA
molecules.

Zuker (1989) devised the ﬁrst algorithm, mfold, for predicting
the MFE structure and multiple suboptimal structures. For a
given sequence, it generates, for each admissible base pair, the
energetically best structure containing that base pair. For a sequence
of length n, mfold produces at most n(n — 1) / 2 suboptimal structures,
which are a very small fraction of all the candidate suboptimal
structures, and may miss some of the ﬁmctional structures. In
addition, mfold uses a ﬁlter based on the base pair metric to remove
structures that are similar to one another. The ﬁlter is based on base
pair difference, while it might be better to infer stability of structures
in the context of energy landscape and remove unstable structures.

Wuchty et a1. (1999) proposed the ﬁrst exact solution,
RNAsubopt, for predicting all possible suboptimal structures
between the MFE and an arbitrary upper limit using a mathematical
model proposed by Waterman and Byers (1985) based on the Turner
energy model (Freier et al., 1986; He et al., 1991; Jaeger et al., 1989;
Turner et al., 1988). Parisien and Major (2008) devised MC-Fold,
a similar solution to the same problem that takes into account
both non-canonical base pairings and pseudoknotted structures.
In addition, Flamm et a1. (2002) presented BARRIERS, an
algorithm for constructing the exact energy landscape on all possible

 

2994 © The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com

112 /3.to's[BumoIpJOJXO'sotwurJOJutotq”:duq uron papeolumoq

9103 ‘Og anﬁnv uo ::

RNASLOpt

 

suboptimal structures produced by RNAsubopt. BARRIERS is
able to distinguish all the local optimal structures and can build
a barrier tree representing the energy landscape. However, the
number of feasible structures grows quickly with the length of the
RNA sequence and the energy range, and RNAsubopt enumerates
enormous solutions for even a short sequence with a small energy
range. For example, the free energies of the native ‘off’ and ‘on’
structures of the 110 nt long adenine riboswitch of ydhL from
B. subtilis are —32.3 and — 14.8 (kcal/mol), respectively. The number
of feasible structures grows quickly as free energy increases (which
is shown in Supplementary Figure S1), and the number of structures
with free energies between the two native structures exceeds 109.
Therefore, it is very difﬁcult and time consuming to ﬁnd a few
alternate structures from an enormous collection of candidates.
Applications of these algorithms are generally limited to very short
RNA sequences with a small energy range.

The conformational space of feasible structures not only is
prohibitively large, but also renders redundant information, because
many structures in the space are similar to one other. Thus,
researchers have also proposed alternative approaches, which
investigate reduced conformational spaces instead of the space
of feasible suboptimal structures. Pipas and McMahon (1975)
presented an algorithm that can construct the best k structures
composed of compatible stacks (i.e. sharing no base in common and
forming no pseudoknot). Nakaya et (11. (1996) used a search tree for
generating suboptimal structures by selecting a subset of stacking
regions that can coexist, from the set of all possible stacking regions.
The search tree is composed of m level of nodes, where m is the
number of possible stacks and nodes at depth 1' determine whether
the i-th stacking region is selected. Evers and Giegerich (2001)
provided an algorithm that can enumerate all possible saturated
structures such that no unpaired base can be paired without affecting
the validity of the structures (Zuker, 1984). They employed a
dynamic programming similar to that of Wuchty et (11. (1999)
and incorporated a saturation check to ensure that structures are
saturated. Giegerich and his cooperators also presented RNAShapes
(Giegerich et (11., 2004; Steffen et (11., 2006), an approach that ﬁrst
extracts RNA abstract shapes based on juxtaposition and embedding
of stacks, and then clusters structures with the same shape together,
and ﬁnally represents all the structures in a cluster by the ‘shrep’ of
the cluster (i.e. the secondary structure with the lowest free energy
in the cluster). One shortcoming of the stack-based approaches is that
they may exclude incompatible stacks that overlap by only one or a
few bases. If we consider shortening one of the stacks by cutting
off the overlapping bases, it will result in a pair of compatible
stacks. Another drawback of these approaches is that it is hard
to infer the stability of RNA secondary structures in the context
of energy landscape and thus is hard to accurately predict native
structures. Recently, Lorenz and Clote (2011) proposed an approach,
RNAlocopt, that can sample a user-deﬁned number of structures
from the space of locally optimal structures. A locally optimal
structure has the lowest free energy compared with its neighboring
structures (obtained by adding or deleting a single base pair). One
shortcoming is that when the sample size is small, RNAlocopt may
fail to predict the native structures, and when the sample size is
large, it would be difﬁcult to identify the signiﬁcant structures from
a large number of candidates.

We are interested in ﬁnding stable local optimal (SLOpt)
structures that conform to the following criteria. First, a SLOpt

 

Fig. 1. A schematic representation of an energy landscape. Numbers 1,3 , 4, 5
represent local optima and 2* represents the global optimum. The dot
adjacent to a local optimum 5 represents a none local optimal structure, which
can transit to 5 along a gradient walk. Lower-case characters a,b,c and d
are saddle points (i.e. structures with the highest free energies) of folding
pathways between local optima 1&2, 2&3, 3&4 and 4&5, respectively. Bars
represent the minimal additional energy required for the RNA molecule to
‘jump’ out of the corresponding energy basins.

structure should be local optimal (LOpt) in that it resides at the
bottom of a basin in the energy landscape (i.e. has the lowest
free energy compared with all its neighbors). None local optimal
structures are unlikely to be biologically functional, because they
can continuously transit to their lower energy neighboring structures,
like climbing down a hill until a local optimum (the bottom of
a basin in the energy landscape) is reached. Second, a SLOpt
structure should be stable in that the minimal energy barrier between
this structure and any other SLOpt structures should be high. This
criterion is proposed because secondary structures with lower free
energies are not guaranteed to be more stable than those with higher
energies. This criterion ensures that the RNA molecule can be
‘trapped’ by the energy basin where the SLOpt structure resides,
without being able to getting out of the basin easily. Figure 1
illustrates a schematic representation of the energy landscape of
an RNA molecule. Each LOpt structure (e.g. the local optimum,
number 5) can represent a set of none LOpt structures in its
associated energy basin (e.g. the dot). In addition, although both
1 and 3 are local optima and 1 has even lower energy than 3, 1 is
still less stable. This is because the conformational transition from 1
to 2 involves a lower energy barrier, while the transitions from 3 to
any lower free energy LOpt structures yield higher energy barriers.

We formalize the problem as follows: given an RNA sequence A,
an energy range AE and an energy barrier cutoff AB, ﬁnd all the
stable and local optimal structures, of which (i) the free energies
are within AE of the MFE and (ii) the minimal energy barrier
between any pair of SLOpt structures is 3 AB. We will describe
our approach (RNASLOpt) for addressing the problem in Section 2.
In Section 3, we will compare RNASLOpt against the state-of-
art methods and show benchmark tests on known riboswitches. In
Section 4, we will discuss possible applications of our approach and
conclude the article.

2 METHODS

First, we introduce conﬁgurations of stacks to represent scaffolds of RNA
secondary structures. RNA secondary structures involve both stacking
base pairs and isolated base pairs, where stacking base pairs contribute
signiﬁcantly to the stabilization of RNA secondary structures (Yakovchuk
61611., 2006). Structures with isolated base pairs are usually unrealistic and the
removal of these structures from the search space may yield more signiﬁcant
structures (Zuker, 1989). Since LOpt structures reside at bottoms of basins

 

2995

112 /3.IO'S[12111110prOJXO'SOIJBLUJOJIIIOIq”Idllq uror} papeolumoq

9103 ‘Og anﬁnv uo ::

{Li and S.Zhang

 

in the energy landscape, and each can represent a set of similar secondary
structures, we introduce LOpt stack conﬁgurations to approximate LOpt
structures. LOpt stack conﬁgurations are conﬁgurations that have a maximal
number of putative stacks such that no stacks can be added rendering lower
energy structures. We then present algorithms for ﬁnding all possible LOpt
stack conﬁgurations based on both the Nussinov model (Nussinov et al.,
1978) and the Turner energy model (Freier et al., 1986; He et al., 1991;
Jaeger et al., 1989; Mathews et al., 1999; Turner et al., 1988), using the
mathematical scheme advocated by Wuchty et al. (1999). Next, we describe
a fast heuristic algorithm for computing pairwise energy barriers among
LOpt stack conﬁgurations. The energy barrier between a pair of LOpt stack
conﬁgurations indicates the amount of additional energy required for the
RNA molecule to fold from one structure to the other, and can be used to
ﬁlter out unstable LOpt structures. Finally, we employ a simple neighbor
joining algorithm to cluster unstable LOpt structures, obtain stable local
optimal structures and assign rank accordingly.

2.1 RNA secondary structures and stack conﬁgurations

Consider an RNA sequence as a string A =a1 ---a,, of n letters over alphabet
E = {A, U, G, C}. A pair of nucleotides a, and aj (i <1) can interact with each
other and form a base pair (denoted by (i , j)), if they are complementary
to each other. In this article, we only consider the canonical base pairings
(G4: and AiU) and the wobble base pairing (GiU). A secondary structure
of an RNA can be represented by an ensemble of pairing bases. A secondary
structure is pseudoknotted if it contains two base pairs (i , j) and (i’ , j’ ) such
that i < i’ < j <j’. In this article, we only consider pseudoknot-free secondary
structures.

The stability of an RNA secondary structure is determined predominantly
by energetically favorable helical regions, where both base pair stacking
and hydrogen bonding provide stabilizing energy contributions (Yakovchuk
et al., 2006). We denote a helical region by a stack. A stack p=(171,,p,,,p1)
has p1 consecutive base pairs, where (171,,p,,) is the outmost base pair and
(171, +p1 — 1, p,, — p, + 1) is the innermost base pair. Without loss of generality,
p1 can be 0. We deﬁne two arbitrary stacks as compatible with each other
if they are parallel or one stack encloses the other. We deﬁne partial orders
<1: and <1 between compatible stacks as follows. If a stack p is parallel to
a stack (1, and p resides to the 5’ of q (i.e. p,, < (11,), thenp <1: (1. pr encloses
q [i.e. (171, +p1) 5 (11, and (1,, 5 (17,, —p1)], then (1 <1p. We denote the ensemble
of all possible putative stacks of an RNA sequence by ’P. We can compute
’P using the algorithm of Bafna et al. (2006) in 0(n2) time. Following their
work, we score hydrogen bonds between pairing bases GiC, AiU and GiU
by 3, 2 and 1, respectively, and set the minimum length of putative stacks
(6min) as 4 and the minimum score of hydrogen bonds (hmin) as 8, because
statistics show that the fraction of true stacks missed is <10% with the cutoff
(Bafna et al., 2006). The number of putative stacks predicted is usually much
less than the number of feasible pairing bases. This yields a faster algorithm
for enumerating suboptimal structures, which recursively branches when a
putative stack (instead of a feasible base pair) is encountered. In addition,
the typical lengths of riboswitches are around 100— 200, and the number of
putative stacks predicted for an RNA of similar length may even be smaller
than the sequence lengths. For example, we predicted 62 putative stacks for
the 110 nt long adenine riboswitch of ydhL gene from B. subtilis.

In order to elucidate the basic idea, we deﬁne a notion of stack
conﬁguration. A stack conﬁguration of an RNA sequence is composed of
a set of putative stacks in ’P that are pairwiser compatible. Figure 2 shows
a schematic representation of a stack conﬁguration. A stack conﬁguration (p
is local optimal if there does not exist any stack 17 in ’P that 17 can be added
to (p without affecting the validity of (p (i.e. forming a pseudoknot or paring
a base with more than one partner). Next, let 17 and (1 be putative stacks and
q is enclosed with p, we also deﬁne the following terms:

|p|: the length of the subsequence covered by 17 (i.e. p,, — p1,+ 1).

73(17): the set of all possible putative stacks on a subsequence covered by
17 (i.e. am . . .aPe).

 

 

Fig. 2. A schematic representation of a stack conﬁguration. Filled arcs
represent putative stacks p,q,u and v. The relationships between these
putative stacks are as follows: p<pv, u <1: (1, u<[p, q<1p and qe]31(17).
Dashed arcs represent 1]”, and rim], respectively.

N (17): all possible LOpt stack conﬁgurations composed of putative stacks

in 73(17).

J-‘l(17): a subset of putative stacks in 73(17), where qu J31(p), 39 (1’ such

that q’ <1p and ((q <P q’) or (q <1 4’»-

11M]: a stack (17;, +p1, (11, — 1,0) that is enclosed by 17 and juxtaposes to the

5’ end of (1, provided that (1 <1 p.

rm]: a stack ((1,, + 1, p,, —p1,0) that is enclosed by 17 and juxtaposes to the

3’ end of (1, provided that (1 <1 p.

In the next two subsections, we will describe algorithms for generating
all possible LOpt stack conﬁgurations based on the Nussinov model and the
Turner model, respectively.

2.2 Stack-based folding using Nussinov model

2.2.1 Computing the maximum number of base pairs The RNA folding
problem was formulated as a loop matching problem by Nussinov et al.
(1978) and solved using dynamic programming. In the Nussinov model, the
energy contribution of each base pair is 1, while base pair stacking and
loop entropies have no energetic contributions. Given an arbitrary stack
p, we deﬁne N (17) as the maximal number of base pairs of all the stack
conﬁgurations in N (17). The recursive formula for computing N (17) is shown
in Equation (1). If J31(p) is an empty set, then no putative stack is enclosed
with p and N (17): p1 (the number of base pairs in p). Otherwise, we can
divide the sequence covered by p into three parts: (i) the stacking base pairs
in p, (ii) an arbitrary stack (1 in J31(p) and (iii) a stack 1]“, which is enclosed
with p and to the 5’ of (1. In this case, N (17) is the sum of base pairs in the three
parts. The time complexity for computing N (17) is 0(I’P(17)|2). In addition,
we denote the entire RNA sequence by a stack p* =(1,n,0) and can obtain
the maximum number of base pairs over all possible stack conﬁgurations on
the sequence by computing N (17*).

N(17)=pl+vq21gqj)lN(q)+N(lp,q)} (1)

2.2.2 Generating all possible LOpt stack conﬁgurations We present in
Figure 3 an exact algorithm for enumerating all possible LOpt stack
conﬁgurations with at least n9 base pairs. We keep an array of partial stack
conﬁgurations in R. Each partial stack conﬁguration (p in R comprises an
ordered list of stacks, which are labeled with either ﬁnished or unﬁnished.
The label ﬁnished indicates that we have ﬁnished processing p and p should
appear on all the stack conﬁgurations (p represents. The label unﬁnished
means that the structures on the subsequence covered by p is not determined
yet and p needs to be dealt with in the future. Each partial stack conﬁguration
(p can represent a set of LOpt stack conﬁgurations that contain all the ﬁnished
stacks in (p. And, a partial stack conﬁguration (17*,unﬁnished) can represent
all possible LOpt stack conﬁgurations on the entire RNA sequence. Besides,
when all the stacks in (p are labeled with ﬁnished, (p only represents exactly
one stack conﬁguration.

The algorithm is as follows. First, we push (17*, unﬁnished) to R. Then, we
repeatedly pop up the last partial stack conﬁguration (p from R and process
(p according to the following procedures until R is empty. Given (p, we pop

 

2996

112 /3.IO'S[1211anprOJXO'SOTJBLUJOJIITOTq”Idllq moi; papeolumoq

9103 ‘Og anﬁnv uo ::

RNASLOpt

 

 

procedure enumerate(A , n9)
[7* = (1 w n, 0)» (ﬂ = {@*,unﬁni»vhed)}» R: {(¢,N(p*))}
while (R 75 Q) do
((p,x) <=R, (17, label) <=<p
if (label is unﬁnished) then
for all stacks q in J-‘l(p) do
(¢’,X’)=(¢,X-N(P))
if (171750) then (17,ﬁnished):;<p’ end if
(1,”, unﬁnished) => (p’. (q, unﬁnished) => (p’
X’ :1" +Pl+N(q)+N(llxq)
if (x’ 3%) then (o’,x’)=>R end if
end for
if (3(17) is Z andxzng) then (¢,x)=>R end if
else (/* label is ﬁnished */
if (x3 n9) then output (p end if
end if
end while

 

 

 

Fig. 3. An algorithm enumerate(A,ng) for enumerating all possible local
optimal stack conﬁgurations on an RNA sequence A with at least n9 base
pairs. The meaning of =>. :; and <= are pushing back an element to the end
of an array, inserting an element to the beginning of an array, and popping
up the last element from an array, respectively.

the last element (a stack p) from the array of (p and check its associated
label. If the label of p is ﬁnished, then all the stacks in (p should have been
processed. (Because we always insert stacks labeled with ﬁnished to the front
of the array of (p and push stacks labeled with unﬁnished to the end.) In this
case, we output the only stack conﬁguration that (p represents. Otherwise,
we decompose the unﬁnished stack p into three disjoint components: (i) the
stacking base pairs of p, (ii) a stack qe]31(17) and (iii) a stack 1W]. We
can construct a stack conﬁguration on the subsequence covered by p by
combining (i) the stack p, (ii) a stack conﬁguration taken from N(q) and
(iii) a stack conﬁguration taken from N (11W). If (1 is determined, we can
construct |N(q)| >< IN (1],,q)| possible new stack conﬁgurations. And, for each
stack (1 in J-‘l(17), we construct a new stack conﬁguration (p’ by pushing
(17, ﬁnished) to the end of (p and inserting (1],,q,unﬁnished) and (q, unﬁnished)
to the beginning of (p. We can compute the size of N (17) using Equation (2).

|N(p)|= Z |N(q)|><|N(lp,q)l (2)

4671(1))

Next, we push all the new partial stack conﬁgurations that have at least
n9 base pairs to the end of R. We denote the maximal number of base pairs
of a partial stack conﬁguration (p by N ((p). As shown in Equation (3), N ((p)
is the sum of N (17) over all stacks p in (p. Each stack labeled with ﬁnished
contributes exactly p1 base pairs, and each stack labeled with unﬁnished
contributes at most N (17) base pairs [where N (17) can be computed using
Equation (1)].

NW): 2 {p1 the label ofp isﬁnished (3)

N (17) the label of p is unﬁnished
Vpew

2.3 Stack-based RNA folding using the Turner model

According to the Turner model, the free energy of a stack conﬁguration is the
additive sum of energy contributions of all the stacking base pairs, hairpin
loops, bulges, interior loops, multiloops and dangling bases (Mathews et al.,
1999). We describe the energy parameters and terminal symbols used in the
following:

%: offset penalty for opening a multibranched loop.

%: free base penalty for each unpaired base in a multibranched loop.

M ,: helix penalty for each helix in a multibranched loop.

E (17): destabilizing energy of the hairpin loop enclosed with a stack p.

[(17,q): destabilizing energy of the interior loop or bulge between stacks

p and q.

§(17): stabilizing energies of all the stacking base pairs in a stack p.

M6, M1, and M, are constant energy parameters. E (17) and [(174) can be
obtai—‘neﬁrom tE tabulated energy parameters, and §(17) can be computed
as the sum of tabulated stacking energies of adjacent stacking base pairs in
p. All the free energy parameters are taken from the work of Mathews et al.
(1999). We also deﬁne the following non-terminal symbols as follows:

F (17): the MFE of all stack conﬁgurations in N(17), provided that p1, =1

and p1 = 0.

C(17): the MFE of all stack conﬁgurations in N(17), provided that pl 750

and p closes the structure on am] mape.

FM 1(17): the MFE of all stack conﬁgurations in N(17), provided that p is

within a multibranched loop, and there exists at least a stack (1 such that

(11750 and q <1p.

FM (17): the MFE of all stack conﬁgurations in N(17), provided that p is

within a multibranched loop.

2.3.1 Computing the minimum free energy The recursive formula for
computing the minimum free energy is shown in Equation (4), with a time
complexity of 0( |’P(17)|3) [which is 0(n6) with a small factor]. For the sake of
simplicity, we do not discuss dangling energy contributions in the recursive
formula, but take them into account in the implementation.

F(P)—quIIJ__III:p){C(tI)+F(lp,q)}
£07).
Qig{C(q)+l@,q)},
C(p>=§(p>+min ”

C(q)+FM1(l,,,q)+% }

In H
LIETKP) {+2*%+lrp,ql*%
fl(lp,q)3£g

FMMP)= min {C(q)+FM(lp,q)+%+l’17,ql*%}
4671(1))

(4)

lpl *ﬂw

6min {C(q)+FM(lp,q)+%+ l’pgl’kﬂl
I

FM(17) = min :
7(1))

4

2.3.2 Generating all possible LOpt stack conﬁgurations In this section,
we describe an algorithm for numerating all possible local optimal stack
conﬁgurations of an RNA sequence A within AE of the MFE. The detailed
procedures are described in Supplementary Figures S4758. We denote the
free energy upper limit for stack conﬁgurations by eg, where eg is equivalent
to the MFE of all possible stack conﬁgurations plus AE. We keep an array
of paired objects R:{((p,E((p)),(<p’,E(<p’)),...}. Each paired object of R
comprises of a partial stack conﬁguration (p and its associated minimum free
energy E((p). Each partial stack conﬁguration (p comprises an ordered list of
stacks, each with a label (i.e. (p: {(17,label),(17’,label’), . ..}). There are ﬁve
types of labels, including ﬁnished, F, C, FMl and FM. The label ﬁnished
indicates that we have ﬁnished processing stack p, and p will appear on all
the stack conﬁgurations that (p represents. The remaining labels correspond
to the following cases: F (17), C(17), FM 1(17), and FM (17), respectively.

The algorithms starts with a partial stack conﬁguration (p0 =(17* =
(1,n,0),F) and its associated minimum free energy E((p0). (p0 represents
all possible stack conﬁgurations onA, and E (w) is the minimum free energy
of (pa (i.e. E(¢0)=F(p*)). We push ((po,E((p0)) to R and repetitively process
the last element of R according to the following procedure until R is empty.
Let ((p,E((p)) be the last partial stack conﬁguration and its associated energy
in R, and let (17, label) be the last stack and its associated label in (p. First, we
check the label of p. Similar to the algorithm based on the Nussinov model,
we also ensure that stacks labeled with ﬁnished are inserted to the front of
the array of (p and other stacks are pushed back to the end of the array. If
the label of p is ﬁnished, then all the stacks should have been processed.
In this case, we output (p if EV, is less than e9. Otherwise, we will construct
a set of new partial stack conﬁgurations according to the label. Each new

 

2997

112 /3.IO'S[1211anprOJXO'SOTJBLUJOJIITOlq”Idllq moi; papeolumoq

9103 ‘Og anﬁnv uo ::

{Li and S.Zhang

 

partial stack conﬁguration (p’ is constructed by combining all the remaining
stacks other than p in (p (denoted by (p‘, where (p‘ =(p— {(17,label)}) with
stacks enclosed with p. Next, we compute E((p’) for each new partial stack
conﬁguration (p’, and push them to the end of R if E ((p’ ) is less than or equal
to eg, as described in the following:
Case F: p (171,21 and p120) is a stack. For each stack (1 in J31(p), we
construct a new partial stack conﬁguration (p’ by pushing (q, C) and (1,”, , F)
to the end of (p‘. E((p’) is given by Equation (5).

EW’)=E(<p)-F(I7)+C(q)+F(lp,q) (5)

Case C: p (171750) should appear on all the stack conﬁgurations that (p
represents. We construct a set of new partial stack conﬁgurations according
to Cases C.1, C2 and C3.
CI: p closes a hairpin loop. We construct a new partial stack
conﬁguration (p’ by inserting (17, ﬁnished) to the front of (p‘. E((p’) is
given by Equation (6).

EW’) =E(<ﬂ) — C(p)+§(p)+ﬂ(p) (6)

C2: p closes a stack (1 and forms an interior loop (or a bulge) with (1.
For each stack (1 <1p, we construct a partial stack conﬁguration (p’ by
inserting (17, ﬁnished) to the front of (p‘ and then pushing (q, C) to the
end. E((p’) is given by Equation (7).

EW’) =E(<ﬂ) - C(p)+§(p)+l(p, q)+ C(q) (7)

C3: p closes a multibranched loop. For each stack (16 J31(p), we
construct a new partial stack conﬁguration (p’ by inserting (17, ﬁnished)
to the front of (p‘, and then pushing (q, C) and (l,,g,,,FM1) to the end.
E((p’) is given by Equation (8).

EW’) = EW) - C(17)+§(l7)+ C(q)+FM1(lp,q)

8
+n+2>kn+lrml>km ( )

Case FM 1: p (171 :0) is directly enclosed with a multibranched loop, and
there exists at least a stack (1 such that (11750 and (1 <1 p. For each stack
(1 in J-‘l(17), we construct a new partial stack conﬁgurations (p’ by pushing
(q, C) and (lWPFM) to the end of (p‘. E((p’) is given by Equation (9).

EW’) =E(<ﬂ) -FM1(I7)+ C(q)+FM(lp,q)+%+ lrp,q | *ﬂ (9)

Case FM: p (171:0) is directly enclosed with a multibranched loop. We
construct a set of new partial stack conﬁgurations according to cases FM.1
and FM.2.
FM.1: all the bases covered by p are unpaired. We construct a partial
stack conﬁguration (p’ =(p‘. E((p’) is computed as Equation (10).

E(¢’)=E(¢)-FM(17)+|17|*% (10)

FM.2: there exists a stack (1 ((11750) enclosed with p. For each stack
(1 <1p, we construct a partial stack conﬁguration (p’ by pushing (q, C)
and (lWPFM) to the end of (p‘. E((p’) is given by Equation (11).

E(¢’)=E(<ﬂ)-FM(I7)+ C(q)+FM(lp,q)+%+ lrp,q | *ﬂ (11)

2.3.3 Redeﬁning partial orders <1 and <p Stack conﬁgurationsproduced
by our approach consist of pairwisely compatible stacks, therefore
incompatible stacks that overlap one another by only a few bases cannot
coexist in a structure. To solve this problem, we use looser deﬁnitions
of partial orders <1 and <p, which allow compatible stacks to share a
small portion of bases in common. RNASLOpt is able to produce stack
conﬁgurations containing incompatible stacks overlapping by a few (by
default, no >20%) bases.

2.4 Obtaining SLOpt structures

Using the algorithm described above, we can produce a set of all possible
LOpt stack conﬁgurations on an RNA sequence, and denote it by R.
However, although the conformational space of LOpt stack conﬁgurations
is dramatically reduced compared with the space of feasible secondary

structures, the number of structures considered may still be enormous. In
literature, many distance metrics, such as base pair metrics (Zuker, 1989;
Zuker et al. , 1991), tree metrics (Shapiro and Zhang, 1990), mountain metrics
(Moulton et al., 2000), metrics based on base pairing probability matrices
(Hofacker et al., 2004) and metrics using the Lempeliziv algorithm (Liu
and Wang, 2006; Zhang and Wang, 2010) have been proposed for ﬁltering
out similar structures and reducing the number of structures considered. In
contrast, we are only interested in stable local optimal (SLOpt) structures.
And, we will ﬁlter out unstable structures from the space instead of removing
similar structures that share base pairs, shapes or pairing probabilities in
common. The SLOpt structures should be difﬁcult for an RNA molecule
to escape, and the associated energy barrier between any pair of SLOpt
structures should be greater than or equal to a certain threshold AB. Using
pairwise energy barriers among LOpt stack conﬁgurations as a distance
matrix, we can evaluate the stability of RNA secondary structures in the
context of energy landscape.

The problem of determining the minimal energy barrier between two
conformational structures has been well studied, and it is usually solved
in conjunction with ﬁnding the optimal folding pathways with the minimal
energy barrier. Many approaches have been proposed to address the problem.
These approaches can either be based on the Nussinov model [e.g. an exact
algorithm proposed by Thachuk et al. (2010) and a greedy algorithm by
Morgan and Higgs (1998)] or the Turner model [e.g. an exact solution
devised by Flamm et al. (2002) and heuristic algorithms developed by
Morgan and Higgs (1998), Flamm et al. (2001), Voss et al. (2004), Geis
et al. (2008) and Dotu et al. (2010)]. In this article, we focus on using
energy barriers to ﬁnd SLOpt stack conﬁgurations (instead of determining
the optimal folding pathways). Therefore, here, we propose a fast heuristic for
computing pairwise energy barriers among LOpt stack conﬁgurations. Upon
these pairwise energy barriers, we cluster unstable LOpt stack conﬁgurations
using a simple neighbor joining algorithm, and obtain all the SLOpt stack
conﬁgurations with the minimal pairwise energy barrier no less than AB.
Finally, we rank these SLOpt structures either according to their free energies
or their minimal associated energy barriers.

2.4.1 Approximating barrier energy Consider secondary structures S and
S’, the folding pathway between S and S’ involves a series of intermediate
structures, among which, the saddle point structure S* is the one with the
highest free energy (e. g. in Fig. 1, a is the saddle point for the folding
pathway from local optima 1 to 2). We denote the energy barrier from S to S’
by B(S—> S’) and denote the energy barrier between S and S’ by B(S ‘3 S’).
B(S —> S’) is equivalent to the absolute difference in the free energies of S and
S* [i.e. |E(S) —E(S*)|] and B(S S S’) can be computed using Equation (12).

8(3: S’) =min{B(S’ —> S), B(S —> S’)} (12)

We list our assumptions for approximating barrier energy B(S —> S’) in
the following. The saddle point S* between S and S’ can be achieved when
all the base pairs in S are opened or shifted such that S’ can be formed
without opening more base pairs. The amount of additional energy required
for opening an entire stack p is roughly S07), and the amount for opening a
base pair in p is about % *S(17), while the amount for sliding one endpoint of
a base pair in p is 1% *S(17), (0 5 oz 51, by default, 01 is 0.5). Given a base pair
(i , j) in S and an arbitrary stack p’ in S’, we determine the necessary operation
to apply to (i , j) (i.e. operations that can make the formation of p’ possible)
according to the positional relationship between (i, j) and p’. Let w((i , j), p’ )
denote the additional energy associated with the operation. We describe the
four types of positional relationships and the corresponding w((i, j), p’ ) in
Table 1. Case 1 (i , j) is compatible to p’ (i.e. either be nested or juxtapose to
each other). In this case, we cannot infer the operation to apply to the base
pair, because the stack can be formed anyway. Case 2, (i , j) is consistent with
p’ [(i , j) is in p’ ]. We do not apply any operation to the base pair so as to keep
it intact during the folding. Case 3 (i, j) partially conﬂicts to p’ [i.e. there
exist two base pairs (i, i’) and U’,j) in p’]. In this case, we may slide either

 

2998

112 13.10's[BumoprOJXO'soueuiiowtotq”:duq uron papeo1umoq

9103 ‘0g15n8nv uo ::

RNASLOpt

 

Table 1. Positional relationships between a base pair (i, j) and a stack p’

 

 

Cases Relationships Descriptions w((i , j), p’)
1 Compatible (i, j) and p’ either are nested or 7 (not
juxtapose to each other applicable)
2 Consistent (i,j) is in p’ 0
3 Partially-Conﬂict there exist base pairs (i, i’) and 1%
(1" J) in 17’
4 Conﬂict Otherwise pi,

 

endpoint i orj to its new partner (i’ or 1") to form p’. Case 4 (i,j) conﬂicts
to p’. In this case, we have to open (i, j) in order to make the formation
of p’ possible. Since S’ usually contains more than one stack, we use the
smallest w((i , j), p’ ) over all the stacks p’ in S’, to represent the least amount
of additional energy required so as to form S’. If (i, j) is compatible with all
the stacks in S’, we have to delete (i , j), which requires %*S(p) additional
energy. We present the approximated algorithm for computing B(S —> S’) in
Equation (13).

B(S—>S’)=Z Z ?:g{w((i.j).p’)*§(p)} (13)

1165011361?

2.4.2 Pairwise energy barrier-based clustering A LOpt stack
conﬁguration (p is considered as stable if the minimal energy barrier
between (p and any other stable structures is no less than AB. (p can
be seen as a representative of all the unstable structures in the energy
basin it resides. Let R* denote the set of SLOpt stack conﬁgurations. We
describe the procedure for constructing R* from the set of LOpt stack
conﬁgurations R in Supplementary Figure S9. First, we sort LOpt stack
conﬁgurations in R by their free energies (i.e. the lower the free energy is,
the higher the stack conﬁguration ranks). Then, we push the MFE LOpt
stack conﬁguration (i.e. R[0]) to R*. Next, we deﬁne a lower triangular
matrix M * for saving pairwise energy barriers of SLOpt stack conﬁgurations
in R*, where M * [k,l] represents the energy barrier between R* [k] and R*[l]
[i.e. B(R* [k] SR* [l])]. We analyze each LOpt stack conﬁguration (p in R.
If the energy barrier between (p and any SLOpt stack conﬁguration in R*
is less than AB, we consider (p as unstable, and discard it. Otherwise, we
push (p to R* as a SLOpt stack conﬁguration and update M * accordingly.
When M* is constructed completely, we stepwisely neighbor join SLOpt
stack conﬁgurations in R* which have the lowest pairwise energy barrier in
M *, and obtain a cluster tree. Finally, we rank SLOpt structures in R* either
by their free energies or by their associated minimal energy barriers.

3 RESULTS

3.1 Reducing the conformational space

The number of feasible secondary structures within a certain
energy range of the MFE can be enormous. Therefore, instead of
investigating the vast conformational space of feasible secondary
structures, we want to reduce the size of the conformational space
to consider. First, we only enumerate LOpt stack conﬁgurations
instead of feasible structures, the number of which is greatly reduced
compared with that of feasible structures. In addition, we can ﬁirther
reduce the number of candidates to consider by ﬁltering out unstable
structures and only investigate SLOpt stack conﬁgurations. Note that
the reduced space still grows exponentially with the RNA length and
the energy range. Comparisons of sizes of different conformational
spaces are shown in Supplementary Figures S2 and S3.

Table 2. The numbers of structures produced by mfold, RNAShapes and
RNASLOpt

 

 

Riboswitch Len SubOpt mfold RNAS hapes RNASLOpt
(%) LOpt SLOpt

Adenine-BS 110 55 43 25 19 5
Adenine-VV 113 20 2O 9 14 4
Guanine 148 55 38 759 1216 70
S AM 134 20 18 5 3 410 3 1
c-di-GMP 124 20 25 81 259 38
Lysine 233 20 20 > 1000 4798 346
TPP 185 20 33 247 1384 91

 

Len, lengths of riboswitches. SubOpt, the percentage suboptimality.

3.2 Predicting alternative structures for riboswitches

We will show that although the conformational space of SLOpt
stack conﬁgurations is greatly reduced compared with the space
of feasible structures, it does not miss native structures for
all the benchmark tests. Therefore, we can predict alternate
structures for riboswitches by exploring the space of SLOpt
stack conﬁgurations. We performed benchmark tests on seven
riboswitches, including the adenine riboswitch of the ydhL gene
from B.subti1is (Mandal and Breaker, 2004) (denoted by adenine-
BS), the adenine riboswitch of add gene from Vibrio vulniﬁcus
(Lemay et (11., 2011) (denoted by adenine-VV), the guanine
riboswitch of xpt-pqu operon from B.subti1is (Mandal et (11.,
2003), the S-adenosylmethionine (SAM) riboswitch of metE from
Thermoanaerobacter tencongensis (Epshtein et (11., 2003), the
c-di-GMP riboswitch of tfoX from Candidatus desulforudis (Smith
et (11., 2009), the lysine riboswitch of lysC from B.subti1is (Blouin
et (11., 2011) and the thiamin pyrophosphate (TPP) riboswitch of
thiamin from B.subti1is (Mironov et (11., 2002; Rentmeister et (11.,
2007). We describe the parameters used in the tests as follows. By
default, the minimum length of putative stacks (i.e. (min) is 4, and
the minimum score for hydrogen bonds (i.e. hmin) is 8. However,
[min is 3 for the SAM riboswitch and c-di-GMP riboswitch, because
a large proportion of stacks in the native structures of both cases
are of lengths 33. Percentage suboptimality is a parameter that
determines the free energy upper limit for the predicted structures. If
percentage suboptimality is x%, then only structures that have free
energies f (1 —x%) of the MFE will be computed. The default value
is 20%, since usually the native structures are within a lower energy
range from the MFE. However, for the adenine-BS riboswitch and
the guanine riboswitch, suboptimality is assigned a greater value
(i.e. 55%), because the free energies of the ‘on’ structures for both
riboswitches are >20% of the MFE. The default energy barrier cutoff
AB is 12 (kcal/mol), which is empirically chosen to reﬂect the
stability of alternative structures, and it can be changed by users.
First, we compare the number of structures produced by mfold
(v3.5), the number of ‘shreps’ by RNAShapes (v2.1.6) and the
numbers of LOpt and SLOpt stack conﬁgurations by RNASLOpt
in Table 2. The number of SLOpt produced by RNASLOpt is less
than that of RNAShapes in all the cases. It reveals that although the
number of candidates considered by both methods are exponential,
the space of RNASLOpt is reduced compared with the space of
RNAShapes. Interestingly, the number of candidates produced by
RNASLOpt is even less than that of mfold [which generates 0(n2)

 

2999

112 13.10's[BumoprOJXO'soueuiiowtotq”:duq uron papeo1umoq

9103 ‘0g15n8nv uo ::

{Li and S.Zhang

 

Table 3. The ranks of the best structures corresponding to the native ‘off ’ and ‘on’ structures produced by mfold, RNAShapes, RNAlocopt and RNASLOpt

 

 

 

Riboswitch SubOpt mfold RNAShapes RNAlocopt RNASLOpt

(%) n = 10 n = 100 n = 1000 RankE RankB
Adenine-BS 55 (1, 18) (1. e) (3. 7) (3. e) (3. 7) (1.4) (1, 2)
Adenine-VV 2O (3, 1) (4, 1) (7, 7) (28, 7) (42, 25) (2, 1) (4, 1)
Guanine 55 (1,25) (1, 66) (1,7) (1,7) (1,7) (1,15) (1, 3)
SAM 2O (6, 11) (8, 14) (7. 7) (66. 60) (180. 98) (1, 5) (1. 13)
c-di-GMP 2O (10, 12) (22, 3) (7, 1) (38, 1) (68, 1) (6, 14) (10, 4)
Lysine 2O (4, 5) (22, 35) (1, 7) (2, 92) (658, 806) (24. 31) (18. 22)
TPP 20 (1,17) (1, 24) (1,7) (2.7) (190,410) (1.5) (1,3)

 

For each pair of numbers in the table, the two numbers denote ranks of the best structures corresponding to the native ‘off’ and ‘on’ structures, respectively. SubOpt represents
percentage suboptimality used by mfold, RNAShapes and RNASLOpt. RNAShapes were run using the most abstract shape type. RNAlocopt were run with sample size n: 10 (the
default value), 100 and 1000 (instead of using suboptimality). RankE and RankB represent that secondary structures are ranked by their free energies and minimal associated energy

barriers, respectively. Bold faced numbers indicate the best pair of ranks produced among all the approaches. ‘7’ represents no secondary structure similar to the speciﬁed native

structure found.

structures at most], when the RNA sequence is short (e.g. the adenine
riboswitch). The running time for all the test cases on a 32 bit
PC with 2.4 GHz Quad-processor, 3.2 GB memory (running Fedora
11) are 0.04, 0.04, 6, 2.4, 1.5, 227.6 and 15.8 s, respectively (see
Supplementary Table S1). Usually, RNASLOpt can be applied on
RNAs of around 200 nt long and ﬁnish the computation within a few
minutes.

Next, we compare the ranks of the best structures corresponding to
the native structures produced by mfold, RNAShapes, RNAlocopt
and RNASLOpt in Table 3. The best structures should share the
most backbone structures in common with the native structures.
RNASLOpt can rank predicted structures both according to their
free energies and minimal associated energy barriers. In all the cases,
RNASLOpt ranks the best structures corresponding to the native ‘on’
and ‘off’ structure conformations among the top. And, in six out of
seven cases, RNASLOpt provides better ranks than the others.

For example, Figure 4 show both the native ‘on’ and ‘off’
structures of adenine riboswitch from the ydhL gene of
B.subti1is (Breaker, 2004) and the best stack conﬁgurations
produced by RNASLOpt. RNAsubopt produces >109 feasible
secondary structures, mfold selects 43 representative structures
and RNAShapes predicts 25 shreps (with the most abstract
option). In contrast, RNASLOpt enumerates 19 LOpt stack
conﬁgurations within 55% of the MFE, ﬁlters out 14 unstable
stack conﬁgurations, and obtains 5 SLOpt stack conﬁgurations.
Two SLOpt stack conﬁgurations among the ﬁve have the similar
backbone structures to the native conformations and are ranked
among the top according to both free energies (i.e. ranked 1 and
4, respectively) and the minimal associated energy barriers (i.e.
ranked 1 and 2, respectively). Since the ‘on’ and ‘off’ structures
predicted by RNASLOpt are LOpt stack conﬁgurations, an extra
stack was predicted for each conﬁguration (Fig. 4C and D) without
affecting the backbone structure. We also list the native ‘on’ or
‘off’ conformations of the seven riboswitches, together with the
best structures produced by mfold, RNAShapes, RNAlocopt and
RNASLOpt in Supplementary Figures S10—S16.

4 CONCLUSION

In this article, we designed an approach RNASLOpt for predicting
stable local optimal stack conﬁgurations of an RNA molecule.

‘u‘u
HOG
"-1
9::
|l—A
u u
A B " "
A-U
A—U-w
A—u
m—A—u
c=a
w 3. A—u
an \ “c u_,,
(I; “G "A so nn-u 5' U—A
a u u I: \ c u _ A—u
u uu “at C5 ., 3‘ u... m
A IIIIIIIII Illlllll u u A « U-A
A u A nuccu‘ A U 1 A" “a-zn nun-mo
‘ ' A“ “A I A" u u .-u n=s
A-" I“ u .: A-u w-U-A
U-Il u A zo-c-u A—u
=c A c “-1 A-u 3,
In—u—A— n n (=6 A-U
AllUAUCACU-AAAUUU-AUHUUUUGUAAUOAG uauAHAAc-unuaucunccAaaAAccuuA—uuuuu
I a=c l l v | I u
1 U—A w .99 w «A mm m.
5. um: um;
“(l/"A" uon
H—A
u=c
|l—A
u
u
A—u
c D  H...
A a .—u
“ a "' 1II-A—U
4n " U _
u \ A—U c—a
I one“ 511 A—u A—u
an” GU A, \Acc m—c=a .._.
u UUGAGG CAGE! G u—A Il—A
A lllllllll Illlllll u _
u‘ uAACucc euceuA AA c—u A—U
A . AA A I A c=aG 5::
an u,_..u an A u ,w .,_,
A e
u-A u u c=e —1na
a=c c c=n
n-u—A- ‘ " - —A
AUUA|lCACU-AAAUUﬂ-AUUU-Aﬂuuuuﬂﬂu u D! 5“ "
l a=caa-ula l u=c A—u
« Il—A uae —m in: W-ﬂ—A A—u a
, nos u-A , i A-"
5 ,u‘u 9:4: 3
so u u

AUIIAUCAI:=EAACGGUA—uu|l|lu
. u
l

I
so m

Fig. 4. The native and predicted ‘on’ and ‘off ’ structure conformations of
the adenine riboswitch from the ydhL gene of B.subtilis. (A) and (B) show
the native ‘on’ and ‘off ’ structure conformations; (C) and (D) plot the best
corresponding stack conﬁgurations predicted by RNASLOpt.

We ﬁrst predict all possible local optimal stack conﬁgurations
that are signiﬁcantly different from one another. With each
stack conﬁguration representing a set of similar RNA secondary
structures, we are able to greatly reduce the size of the
conformational space considered, and make applications on longer
sequences with a higher energy range possible. In addition, we also
employ a fast heuristic to compute pairwise energy barriers among
LOpt stack conﬁgurations. Finally, we ﬁlter out unstable structures
based on their pairwise energy barriers, obtain stable structures and
rank them either according to their free energies or their minimal
associated energy barriers.

RNASLOpt can produce interesting stable local optimal
stack conﬁgurations for an RNA, and can be used to predict
alternate structure conformations for riboswitches. We benchmarked
RNASLOpt on seven riboswitches and the results show that
RNASLOpt is able to successﬁilly predict both native ‘on’ and ‘off’

 

3000

112 13.10's[BumoprOJXO'soueuiiowtotq”:duq uron papeo1umoq

9103 ‘0g anBnV uo ::

RNASLOpt

 

structures for all the riboswitches. In addition, RNASLOpt is able
to assign better ranks than the other methods in most cases. Since
RNASLOpt is still an exponential algorithm, it is best applied to
RNAs of up to 250 nt long. In conclusion, RNASLOpt can possibly
be used in the following applications: (i) detecting alternate structure
conformations for novel riboswitches; (ii) producing stable local
optimal structures for an RNA molecule, which comprise a compact
representation of the energy landscape; and (iii) unraveling the
folding kinetics of an RNA molecule by exploiting the compact
energy landscape and then determining its functionality. Stack
conﬁgurations of an RNA molecule contain only the backbone
helices and represent scaffolds of secondary structures. When ﬁner
grained structures conforming to the backbone structure are in need,
we can take stack conﬁgurations as constraints and obtain the MFE
structures that conform to the constraints using constraint folding
(e.g. RNAfold with -C option, Hofacker et (11., 1994).

Conﬂict of Interest: none declared.

REFERENCES

Bafna,V. et al. (2006) Consensus folding of unaligned RNA sequences revisited.
J. Comput. Biol., 13, 2837295.

Batey,R.T. et al. (2004) Structure of a natural guanine-responsive riboswitch complexed
with the metabolite hypoxanthine. Nature, 432, 411415.

Baumstark,T. et al. (1997) Viroid processing: switch from cleavage to ligation is driven
by a change from a tetraloop to a loop E conformation. EMBO J., 16, 5997610.
Blouin,S. et al. (2011) Folding of the lysine riboswitch: importance of peripheral

elements for transcriptional regulation. Nucleic Acids Res, 39, 337373387.

Breaker,R.R. (2004) Natural and engineered nucleic acids as tools to explore biology.
Nature, 432, 8387845.

Dotu,I. et al. (2010) Computing folding pathways between RNA secondary structures.
Nucleic Acids Res, 38, 171171722.

Epshtein,V. et al. (2003) The riboswitch-mediated control of sulfur metabolism in
bacteria. Proc. Natl Acad. Sci. USA, 100, 50525056.

Evers,D. and Giegerich,R. (2001) Reducing the conformation space in RNA structure
prediction. In Proceedings of the German Conference on Bioinformatics. German
Research Center for Biotechnology, Braunschweig, Germany, pp. 1187124.

Flamm,C. et al. (2001) Design of multistable RNA molecules. RNA, 7, 2547265.

Flamm,C. et al. (2002) Barrier trees of degenerate landscapes. Z Phys. Chem., 216,
1557174.

Freier,S.M. et al. (1986) Improved free-energy parameters for predictions of RNA
duplex stability. Proc. Natl Acad. Sci. USA, 83, 937379377.

Geis,M. et al. (2008) Folding kinetics of large RNAs. J. Mol. Biol., 379, 1607173.

Giegerich,R. et al. (2004) Abstract shapes of RNA. Nucleic Acids Res, 32, 48434851.

He,L. et al. (1991) Nearest-neighbor parameters for G.U mismatches. Biochemistry,
30, 11124411132.

Hofacker,I.L. et al. (1994) Fast folding and comparison of RNA secondary structures.
Monatsh. Chem., 125, 1677188.

Hofacker,I.L. et al. (2004) Alignment of RNA base pairing probability matrices.
Bioinformatics, 20, 222272227.

Jaeger,J.A. et al. (1989) Improved predictions of secondary structures for RNA Proc.
Natl Acad. Sci. USA, 86, 770677710.

Lemay,J.F. et al. (2011) Comparative study between transcriptionally- and
translationally-acting adenine riboswitches reveals key differences in riboswitch
regulatory mechanisms. PLoS Genet, 7, 61001278.

Liu,N. and Wang,T. (2006) A method for rapid similarity analysis of RNA secondary
structures. BM C Bioinformatics, 7, 493.

Lorenz,W.A. and Clote,P. (2011) Computing the partition function for kinetically
trapped RNA secondary structures. PLoS One, 6, 616178.

Mandal,M. and Breaker,R.R. (2004) Adenine riboswitches and gene activation by
disruption of a transcription terminator. Nat. Struct. Mol. Biol., 11, 29735.

Mandal,M. et al. (2003) Riboswitches control fundamental biochemical pathways in
Bacillus subtilis and other bacteria. Cell, 113, 5777586.

Mathews,D.H. et al. (1999) Expanded sequence dependence of thermodynamic
parameters improves prediction of RNA secondary structure. J. Mol. Biol., 288,
9117940.

Mironov,A.S. et al. (2002) Sensing small molecules by nascent RNA' a mechanism to
control transcription in bacteria. Cell, 111, 7477756.

Morgan,S. and Higgs,P. (1998) Barrier heights between ground states in a model of
RNA secondary structure. J. Phys. A: Math. Gen., 31, 315373170.

Moulton,V. et al. (2000) Metrics on RNA secondary structures. J. Comput. Biol., 7,
2777292.

Nakaya,A. et al. (1996) Classiﬁcation of RNA secondary structures using the techniques
of cluster analysis. J. Theor Biol., 183, 1057117.

Noeske,J. et al. (2005) An intermolecular base triple as the basis of ligand speciﬁcity
and afﬁnity in the guanine- and adenine-sensing riboswitch RNAs. Proc. Natl Acad.
Sci. USA, 102, 137271377.

Nussinov,R. et al. (1978) Algorithms for loop matchings. SIAM J. App. Math, 35,
68782.

Parisien,M. and Major,F. (2008) The MC-Fold and MC-Sym pipeline infers RNA
structure from sequence data. Nature, 452, 51755.

Pipas,J.M. and McMahon,J.E. (1975) Method for predicting RNA secondary structure.
Proc. Natl Acad. Sci. USA, 72, 201772021.

Rentmeister,A. et al. (2007) Conformational changes in the expression domain of the
Escherichia coli thiM riboswitch. Nucleic Acids Res, 35, 371373722.

Schultes,E.A. and Bartel,D.P. (2000) One sequence, two ribozymes: implications for
the emergence of new ribozyme folds. Science, 289, 448452.

Shapiro,B.A. and Zhang,K.Z. (1990) Comparing multiple RNA secondary structures
using tree comparisons. Comput. Appl. Biosci., 6, 3097318.

Smith,K.D. et al. (2009) Structural basis of ligand binding by a c-di-GMP riboswitch.
Nat. Struct. Mol. Biol., 16, 121871223.

Steffen,P. et al. (2006) RNAshapes: an integrated RNA analysis package based on
abstract shapes. Bioinformatics, 22, 503503.

Thachuk,C. et al. (2010) An algorithm for the energy barrier problem without
pseudoknots and temporary arcs. Pac. Symp. Biocomput., 15, 1087119.

Turner,D.H. etal. (1988) RNA structure prediction. Annu. Rev. Biophys. Biophys. Chem.,
17, 1677192.

Voss,B. et al. (2004) Evaluating the predictability of conformational switching in RNA.
Bioinformatics, 20, 157371582.

Wakeman,C.A. et al. (2007) Structural features of metabolite-sensing riboswitches.
Trends Biochem. Sci. , 32, 415424.

Waterman,M.S. and Byers,T.H. (1985) A dynamic programming algorithm to ﬁnd all
solutions in a neighborhood of the optimum. Math. Biosci., 77, 1797188.

Wuchty,S. et al. (1999) Complete suboptimal folding of RNA and the stability of
secondary structures. Biopolymers, 49, 1457165.

Yakovchuk,P. et al. (2006) Base-stacking and base-pairing contributions into thermal
stability of the DNA double helix. Nucleic Acids Res, 34, 5647574.

Zhang,S. and Wang,T. (2010) A complexity-based method to compare RNA secondary
structures and its application. J. Biomol. Struct. Dyn., 28, 2477258.

Zuker,M. (1984) RNA secondary structures and their prediction. Bull. Math. Biol., 46,
5917621.

Zuker,M. (1989) On ﬁnding all suboptimal foldings of an RNA molecule. Science, 244,
48752.

Zuker,M. et al. (1991) A comparison of optimal and suboptimal RNA secondary
structures predicted by free energy minimization with structures determined by
phylogenetic comparison. Nucleic Acids Res, 19, 270772714.

 

3001

112 13.10's[Bumofpioyosopeuiiqutotq”:duq uron papeo1umoq

9103 ‘0g anBnV uo ::

