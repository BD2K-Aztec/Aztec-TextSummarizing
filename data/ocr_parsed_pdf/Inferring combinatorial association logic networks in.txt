Vol. 26 ISMB 2010, pages i149—i157
doi:1 0. 1 093/bioinformatics/btq21 1

 

Inferring combinatorial association logic networks in multimodal

genome-wide screens

Jeroen de Bidder1’2’3a*. Alice Gerrits4. Jan Botlas. Gerald de Haan4. Marcel Beindersla3

and Lodewyk WesselsZ’sai‘

1Delft Bioinformatics Lab, Delft University of Technology, 2628 CD Delft, 2Bioinformatics and Statistics, Department
of Molecular Biology, Netherlands Cancer Institute, 1066 CX Amsterdam, 3Netherlands Bioinformatics Center, 6525
GA Nijmegen and 4Department of Cell Biology, Section Stem Cell Biology, University Medical Center Groningen,
University of Groningen, 9700 AD Groningen, the Netherlands

 

ABSTRACT

Motivation: We propose an efficient method to infer combinatorial
association logic networks from multiple genome-wide
measurements from the same sample. We demonstrate our
method on a genetical genomics dataset, in which we search for
Boolean combinations of multiple genetic loci that associate with
transcript levels.

Results: Our method provany finds the global solution and is very
efficient with runtimes of up to four orders of magnitude faster
than the exhaustive search. This enables permutation procedures
for determining accurate false positive rates and allows selection
of the most parsimonious model. When applied to transcript levels
measured in myeloid cells from 24 genotyped recombinant inbred
mouse strains, we discovered that nine gene clusters are putatively
modulated by a logical combination of trait loci rather than a single
locus. A literature survey supports and further elucidates one of these
findings. Due to our approach, optimal solutions for multi-locus logic
models and accurate estimates of the associated false discovery
rates become feasible. Our algorithm, therefore, offers a valuable
alternative to approaches employing complex, albeit suboptimal
optimization strategies to identify complex models.

Availability: The MATLAB code of the prototype implementation is
available on: http://bioinformatics.tudelft.n|/ or http://bioinformatics.
nki.nl/

Contact: m.j.t.reinders@tudelft.nl; |.wessels@nki.n|

1 INTRODUCTION

To explain complex biological phenomena it is of vital importance
to measure—in the same sample—all relevant (complementary)
biological variables, and to measure these at a genome-wide scale.
For this reason, many multimodal screens have been performed that
have complemented transcriptional proﬁling with, among others,
copy number variation measurements, transcription factor binding
assays, methylation status proﬁling or genotype calls (Bystrykh,
2005; Pollack et (11., 2002; Shames et (11., 2006; Visel et (11.,
2009).

A common aim in analyzing these multimodal datasets is to ﬁnd
associations between the biological variables measured to infer
their regulatory role. Consider, for instance, a study in which
expression proﬁles and genome-wide genotype data were obtained in
hematopoietic cells from a panel of fully homozygous recombinant
inbred mouse strains (Fig. 1A). This ‘genetical genomics’ approach

 

*To whom correspondence should be addressed.

enables the determination of expression quantitative trait loci
(eQTLs) Characterized by strong associations between the genotype
and the observed expression levels (Jansen and Nap, 2001; Schadt
et (11., 2003). In the absence of a strong direct association between the
genotype and gene expression, real multi-locus interactions may still
be present, due to epistatic interaction (Frankel and Schork, 1996;
Michaelson et (11., 2009). Such interactions may not be detectable
as (marginal) direct associations between the genotype and gene
expression (Fig. 1B).

To alleviate this, approaches which evaluate the joint association
of multiple loci and a phenotype of interest are required. Several
approaches have been proposed to attack this problem. These
approaches differ mostly regarding the way the associations are
modeled and the strategy employed to solve the combinatorial
optimization problem. Some approaches (Manichaikul et (11., 2009;
Wongseree et (11., 2009) follow what could be loosely termed a
two-stage approach, where all two-locus models are ﬁrst evaluated,
which, in stage two, are used in a greedy search to yield multi-
locus models. Approaches employing more advanced strategies
to traverse the space of possible models are represented by a
genetic programming approach (Nunkesser et (11., 2007) and Markov
Chain Monte Carlo (MCMC) approaches associated with Bayesian
analyses (Mukherjee et (11., 2009; Zhang and Liu, 2007). Since two-
stage approaches have been demonstrated to be suboptimal (Evans
et (11., 2006) and advanced search strategies such as MCMC are
very sensitive to their implementation and parameter settings, and
are not guaranteed to be optimal, an approach that ﬁnds a provably
global solution to a selected model within reasonable time is highly
desirable. Of particular interest is the method of Ljungberg et (11.
(2004) which is used for the pair-scan analysis that is available
on the GeneNetwork on http://genenetwork.org. Ljungberg et (11.
(2004) stress the importance of performing a global search rather
than relying on greedy searches by (pre)selecting markers based on
their marginal effects. To deal with the computational complexity
associated with such an optimization problem, the authors present a
method to ﬁnd global optima of a linear regression problem for up
to three predictors that is fast enough to be employed in permutation
procedures.

In contrast to the class of additive models employed by
Ljungberg et (11. (2004) (and many other approaches), we follow
others (Kooperberg and Ruczinski, 2004; Mukherjee et (11., 2009;
Nunkesser et (11., 2007) and employ Boolean combinatorial logic
to explicitly incorporate interactions in the eQTL inference. To this
end, we infer combinatorial association logic (CAL) networks that
combine the observed genotypes through AND (A), OR (V) and XOR

 

© The Author(s) 2010. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/2.5), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /3.Io's[Bruno[p.IOJXO'sorwurJOJurorq”:duq 11101} papeolumoq

9103 ‘{g isnﬁnv 110::

J.de Ridder et al.

 

 

ﬁ ‘

31 G
g. gm
.. I up
7  Idown

allzle.
allBelel:l

TRUE I
FALSE C

   

\,
Poor association
1

 

 

 

 

 

 

 

 

 

 

 

Fig. 1. Schematic overview of data and association inference. (A) A panel of
BXD mice that is densely genotyped and expression proﬁled. The genotype
data can be considered as binary vectors by choosing a binary encoding of the
alleles (in the ﬁgure D=TRUE and B=FALSE) and putting thresholds that divide
the genome into loci such that each locus differs in at least one element from
its neighbors. The cartoon shows that good association is obtained between
Locus 5 and Gene 7 because elevated expression is consistently observed
in conjunction with the D allele of Locus 5. (B) Interaction among genetic
features may destroy direct associations between individual loci and genes.
The cartoon shows that conﬁgurations exist in which the gene expression can
only be predicted by considering two loci simultaneously (using Boolean XOR
logic). (C) By inferring CAL networks. interaction among genetic features
is taken into account in the association inference. Inferring CAL networks
is achieved by selecting the input loci with the selection function 8 and
combining these with the appropriate Boolean function B. such that the
association (as measured by a scoring function f ) between the network output
and the gene of interest is maximized.

(69) ﬁinctions by searching for associations between the result of
the Boolean operation and the gene expression. The Boolean AND
ﬁinction can be used if altered expression is consistently observed
in combination with a particular combination of two alleles (which
do not necessarily have to be equal), but remains unchanged in
all other genotype conﬁgurations. An example of a situation in
which this may be observed is the case of two parallel pathways
that only promote transcription of their downstream target when the
genes in these pathways have speciﬁc alleles. Conversely, we may
also consistently observe differential transcription in the strains for
which either one of two loci is of a certain genotype. This may,
for instance, be observed in case of a cascaded signaling pathway:
a silencing mutation in one of the alleles can repress the entire
pathway, regardless of which gene in the cascade contained this

mutation. Boolean OR (V) and XOR (69) are capable of capturing this
behavior (Fig. 1B).

Like the search for optimal predictors in the additive model,
inferring optimal predictors of a Boolean ﬁinction is a challenging
computational problem, especially considering that more complex
combinations of these functions are also possible. Moreover, we
noted that the objective ﬁinction that needs to be optimized is
highly discontinuous and nonlinear so that standard optimization
techniques, such as genetic algorithms, simulated annealing
and MCMC do not provide an optimal solution. Nevertheless,
an efﬁcient and—most importantly—global solution is highly
desirable, since this allows permutation procedures with which
signiﬁcance estimates of the discovered associations can be realized
(Ljungberg et (11., 2004).

In the following, we will mathematically prove that, under
reasonable conditions, CAL network inference provides an efﬁcient
way to obtain globally optimal multi-locus models that associate
multiple genomic loci with the expression of target genes. We
illustrate our approach on the genetical genomics dataset from
Gerrits et (11. 2009, and using these data show that 100% accuracy
is achieved at runtimes that are a fraction of those required for
exhaustive search. Furthermore, we observe that using this approach
complex associations are revealed that otherwise would have gone
unnoticed. As such, our approach offers a useﬁil alternative to the
commonly used additive models and suboptimal search strategies.

2 METHODS
2.1 CAL network search

The construction of a CAL network that predicts the expression proﬁle from
a set of binary predictors can be formulated as an optimization problem.
Interesting logic networks are those for which maximal association between
the network output and the gene expression is obtained. Let g be the (T X 1)
vector. with T the number of samples. containing the expression values of
a gene and L the (T><L) matrix of binary predictors. e.g. the genotypes.
where L is the number of predictors. A CAL network L is deﬁned in terms
of S (L; n) : BL —> BN . a selection function that selects N columns from L and
8(1) :BN —> B. a Boolean logic function that speciﬁes the network topology.
In the latter. (T X N) matrix I is a concatenation of the columns selected by
S. i.e. I=(in(1),...,in(N)). where n is a (N X 1) vector containing the indices
of the selected columns. Consequently. CAL network L maps the genotype
matrix L to a (T X 1) output vector y as follows:

y=£(L;B,n)=B(S(L;n)). (1)

The association between g and y is quantiﬁed with an association measure

f(g~y)

  

( “frﬁ iHm>me>m

n — .V‘H + n — .V‘ _ _

 0 "0+"1-12 ("10+"11 ) 
0 otherwise.

For notational convenience. we used x0 = {g(r) : y(1') = O,Vr e (1, . . . , T)}

and x1={g(r):y(r)=1,Vre(1,...,T)}. i.e. vector g is split into x0 and x1
according to the Boolean values in y. Furthermore. i0 (in). s?) (s?) and no
(m) are deﬁned as the sample mean. the sample variance and the number
of elements in x0 (x1). respectively. Note that Equation (2) is equal to the
absolute value of the t-statistic. except when no or m becomes too small.
which ensures high f-Values are only obtained in Case x0 and x1 have
at least 17 elements.

The inference of CAL networks is a computationally challenging problem.
Primarily. because the feature selection problem. i.e. ﬁnding the optimal
vector n. critically depends on the number of features that are considered.

 

i150

112 /3.Io's[Bruno[p.IOJXO'sorwurJOJurorq”:duq 11101} papeolumoq

9103 ‘{g isnﬁnv 110::

Combinatorial association logic networks

 

In the case of genetic markers. this easily runs in the several hundreds to
thousands. Moreover. the optimal subset of markers is heavily dependent
on how these markers are combined. i.e. dependent on the optimal Boolean
function B. All together. one frequently has to rely on greedy search strategies
that easily get stuck in local optima or near exhaustive searches that are
computationally too expensive. especially when employed in permutation
procedures required to assess statistical signiﬁcance.

Our solution to this problem hinges upon two observations. First. in
most practical datasets the sample size is relatively small. especially when
compared to the number of features. This means that we can limit ourselves to
considering only small CAL networks with few inputs. since larger networks
are prone to overﬁtting. which makes them less informative. For this reason.
and because most networks have many equivalent topologies that do not
need to be evaluated due to symmetry. the set containing all unique and
meaningful network topologies {Bj:j=1,2,---} is relatively small (in the
order of 107100. depending on the desired topology). Consequently. the set
of optimal input vectors {n]?“:j=1,2,---}. associated with each Bf. can be
found by ﬁxing B]- and maximizing for each B]- separately

nfk=argmax{f(g~5j(5(L¥n)))l- (3)

Second. we observe that Equation (3) still represents a complex
optimization problem that can be signiﬁcantly simpliﬁed by employing an
approximation to the association measure. denoted by f . In the following. we
show that maximizing f is equivalent to maximizing f . but the maximization
of the former can be very efﬁciently realized by using a branch and bound
search. Before deﬁning f . we deﬁne the Boolean vector yOpt as the solution
for which f reaches a global maximum independent of the network topology.
i.e. yOpt =argmaxy f (g, y). Note that yOpt can be easily determined by sorting
the gene expression vector g and evaluating all positions for a threshold 1
that splits g into x0 and x1 (Fig. 2A). For f . we use the weighted Hamming
similarity between yOpt and the network output y

ﬂywﬁy)=Zwrr>Iu°P‘(r>=y(r>> (4)

VI

 

.\

Association measure (f)

o:

 

.5

m

51
/
Assocration Measures/W

I.

x :

illl!
15 202224

Approximated Association Measure (f)
K (equal w(r)) )

do
m

]u

Expression level (g)
g

a;

 

 

ciation Measure
s
A

n

 

“-

2

\ ovum Errorweights (M7)) /

 

 

 

 

 

 

 

 

7 a 9 10A
Approximated Association Measure (f)
(optimized 111(7)) /

[n 0,2550

Fig. 2. Association versus approximated association. (A) Example gene
expression vector (circles) split in x0 and x1 according to yopl. The magenta
line denotes the association measure f . deﬁned in Equation (2). as a function
of a threshold 1 that splits the expression vector in x0 and X]. The blue
triangles indicate the error weights W(‘L’) that result after optimizing them.
(B and C) 500 random samples that are generated by introducing up to seven
bit-ﬂips in yOpt to show the relation between f and f. The red dot indicates f
and f values for yop‘. (B) shows the samples in case the weights are assumed
equal. Although the trend of the data is monotonically increasing. a large
spread around this trend is observed. (C) shows the same samples in case
the weights are optimized. resulting in a near one-to-one relation between

fandf.

where w(r)>OVr denotes the weight for sample 1'. and I (-) the indicator
function. evaluating to ‘1’ if the r-th element of vectors yOpt and y
are equal.

For an example gene expression vector. Figure 2B shows 500 random
samples of ()2 , f) pairs. in case all weights are equal to one. Although the
trend of this distribution is monotonically increasing. the spread around the
trend is substantial. This is undesirable because a maximum in f is only
guaranteed to correspond to a maximum inf in case there is a direct one-to-
one relation between them. Clearly. this is not the case in Figure 2B. since
each value of f corresponds to many values of f. However. by optimizing
the weights such that the difference between f and f is minimal. a near
one-to-one relation can be obtained. as exempliﬁed by Figure 2C. With the
proper adjustments. detailed below. it is thus ensured that maximizing f is
equivalent to maximizing f. The major advantage of maximizing f instead
of f is that in the former each sample has an independent contribution to
the association measure. This can be readily exploited using a branch and
bound search. so that it is possible to avoid the expensive evaluation of the
association measure.

2.2 Optimizing Equation (3)

Here. we show that optimizing Equation (3) can be achieved by ﬁrst
determining f* =maxn(]f). where f was deﬁned in Equation (4). After this
the search for f * = maxnf is readily solved by searching in the neighborhood
of f *.

For a single sample 1'. let V“) be the set of input combinations such that
y(t) =y°P‘(r)Vn e V“). where y =£(L; B, n).1 Figure 3A4: shows how V“)
can be inferred from L and the truth table of B. For a set of samples C . the
input combinations ne V(C) for which all re C reach the optimal output
yOpt are found by taking the intersection of all the individual sets of input
combinations. i.e. V(C) zﬂrec V“). Note that. under the assumption that
each sample has at least one non-zero locus. V“) 75 Z VT. In other words. for
individual samples there always exists a combination of inputs for which
the network can reach the desired optimal output yop‘. However. for an
arbitrary combination of samples this is clearly not the case. If we observe
that V<O 2%. this means that for the collection of samples in C there does
not exist a valid combination of inputs. Moreover. if V(C) = Z. all supersets
of C will also result in the empty set. Finally we note that. by choosing a
convenient binary encoding. V“) and V(C) can be computed very efﬁciently
by means of bitwise XNOR and AND operations. respectively (see Fig. 3D and
the Supplementary Fig. SI for details).

With these deﬁnitions in mind. we propose the following lemma:

LEMMA 1.
A": b‘ tt : W3 (a 5
f mLax Z W(‘L’) su jec o 75 ( )

VreC

PROOF. Let C*=argmaxc Zvrecwﬁ). i.e. C* is the set of solutions for
which f * is obtained. Since it is required that V(C*) 75 Z. there must be at least
one solution n such that yop‘(r)=y(r)Vt EC*. Since for C* the optimum
inf is obtained. it must also hold that yopl(t) 75y(r)Vt§éC*. This means
that Equation (4) can be rewritten as follows: Zvrw(r)1(y°pl(t)=y(r))=
Zvrecwﬁ). proving the statement in this lemma. I

As argued by Lemma 1. Equation 4 is thus maximized by having as many
samples in C as possible. while taking into account their respective weights
w(r).

Before we will show that Equation (5) ﬁts a branch and bound framework.
we ﬁrst make the observation that for the relation between f and f the
following holds:

6(y0P‘,yi><f(y°Pﬁy2>—z)» (ﬂgwyi) <f(g.y2)). (6)

 

1Since we optimize Equation 3 for each B]- separately. we omit its subscript
if its meaning is inconsequential.

 

i151

112 /3.Io's[BumoIpJOJXO'sorJBuiJOJuroiq”:duq 11101} papeolumoq

9103 ‘{g isnﬁnv uo ::

J.de Ridder et al.

 

 

[IE LLLLLgyOP‘\/ i1 i2

1:1 r=21 1

1:2 — —

I:
w u u

 

 

 

r=2

= ‘70) r:
I: L L L L 15 L L 1, L15 1.1.13 L15 r=6
13:1  I I I I i r=7

K / ‘4 ouLﬁJ 
\——\/*/ r=5
/ i. iii. y \ 14”: {um r=8

’3; [1.15]

. 3 E3, as: V“; V‘“n vs

I — :

9 A i =5 [4.4.5] ~ ~ ~

:1 y ;=6 (I) (I) (I; }(I) (1) Val”: V(I)X VG)

. :; V=vuw UK 0% “WW” (HUT
_ N") ~. ~, ~. ~. T = V’V’ V’V’  V"?

\ jkv=11“)?(wtrw’trw’iyu 2 1 x 2 3), ’ Sb

.\/ i i i \
E Ll2 1L1, 1.1,];ng L 12 11L];

1;

 

 

 

 

 

Fig. 3. Computation of solution sets for each sample. (A) Example data from Figure 1A. (B) The topology and the truth table of the Boolean function 8
under investigation. (C) Explanation by example of the calculation of V“). the set of all possible input combinations to B such that yop‘(t)= y(r). This panel
shows how V“) is determined. Since yop‘(1)= 1. the rows from the truth table for which y = 1 are applicable. i.e. r = {2,4,6, 7}. According to r: 2. the desired
output for T: 1 is obtained by selecting any of the loci that are ‘0’ for inputs i1 and i2. and loci that are ‘1’ for input i3. Accordingly. for i1 we may select
from the set: {11,12,14}. This can be efﬁciently calculated by taking the XNOR (evaluates to ‘1’ when both inputs are equal) between row r=1 from the data
matrix and the row r=2 from the truth table. as shown in (C). Observe that the result is an efﬁcient encoding of all the possible input combinations that

(I) “ (I)

satisfy yopl(1) while using r :2 from the truth table. In general. we denote this set by r . and its binary encoding by r . To determine the complete set of
valid input combinations for r = 1. rows 4. 6 and 7 need to be considered in a similar fashion. V“) is now determined by taking the union of the subsets. i.e.
V“) = Vél) U Vii) U Vél) U V7“). which. in binary form. may be represented by a concatenation of 17;”. 17:1). 17:) and 17;”. (D) This panel shows the valid input
combinations for r = 1 and 1' :3 in binary representation (i.e. 17(1) and 17(3)). For any set of samples C the input combinations for which the output equals yOpt
can be obtained by taking the intersection of the individual sets. In binary representation. this is equivalent to taking the row-wise cartesian product (row-wise

product of all combinations of rows). as is shown in the panel.

where y 1 and y; are two Boolean vectors. Note that. for g‘ :0. Equation (6)
reduces to the requirement for strict monotonicity. and that for larger 4‘ > 0
this requirement is increasingly relaxed. Even though this seems trivial. the
value of this relation becomes clear by considering that if there exists a strong
positive correlation between )2 and f . there may in fact exist a small 4‘ for
which Equation (6) is true.

Based on Lemma 1 and Equation (6). we observe that solutions that are
suboptimal in terms of )2 may still be optimal in terms of f. since 4‘ can
be non-zero. In the following. let {yi:i=1,2,---} and {Ci:i=1,2,---} be all
the network outputs and the sample sets for the solutions for which holds
that f* — g‘ 5f(y°pl,yi)5f*. respectively. Finally. let 4‘ be chosen such that
Equation (6) holds. Our main theorem can now be formulated as follows:

THEOREM 2.
n* e U V“ (7)

VC,‘

PROOF. First. assume that Equation (6) holds for g‘ = 0. and thus )2 (yop‘, y) =
f* Vi. Furthermore. from Equation (6) it follows that in this case there exists a
direct one-to-one relation between )2 and f . Consequently. a maximum in f is
guaranteed to correspond to a maximum inf and WC") must contain n*. This
is true because from Lemma 1 it follows that WC") 75 O. For non-zero values
of 4‘. the one-to-one relation does not hold. However. from Equation (6). it
follows that all values of f for which the corresponding )2 lies outside the
interval [22* — {,f*] are strictly smaller than the value of f corresponding to
f*. Thus. it must be the case that the maximum of f is constrained to solutions
for which )2 lies in the interval [22* — {,f*]. Therefore. the union of the sets of
solutions that lie in this interval will contain n*. I

From Theorem 2 it naturally follows that:

COROLLARY 3.
n* = argmaxf(g, aura, n))Vn e V<Q>, (8)
n

where V(Q)=UVCiV(Ci). Notably. if there exists a small 4‘ for which
Equation (6) holds. the number of solutions in V(Q) is limited. and hence

n* is easily determined by an exhaustive search over all possible solutions
in V(Q). In the following. we show that in practice the set V(Q) is small by
choosing w such that g‘ is small.

2.2.1 Estimating the weights Ideally. vector w is chosen such that g‘ is
minimal. For practical purposes. it is sufﬁcient to choose w so that g‘ is
small. which can be realized by minimizing the difference between )2 and
f. For this purpose. we sample the ()2 , f) relation by generating N random
instances y” by introducing up to m random bit-ﬂips in yOpt (shown in
Fig. 2B and C). The N corresponding association measures f” and Hamming
similarities are collected in vector f: [f(g,y1),f(g,y2), - - -]T and matrix
F: [(y0pl<—>y1)T,(y°pl<—>y2)T,---]T. respectively. In the latter. <—> denotes
the XNOR operation. which evaluates to ‘1’ in case its arguments are equal.
Notably. m (the number of bit-ﬂips) should be chosen such that the region
of interest of the distribution of f is sampled. Since we are interested only in
network outputs that associate well with the gene expression. we can choose
m rather small to focus only on the right tail for which a good ﬁt between )2 and
f is obtained. We found that smaller residuals were obtained by converting
log-transformed f-Values to z-scores. i.e. f =z(lnf). Furthermore. to deal
with the intercept. the matrix F is mean centered. denoted by F. Using the
vector f and matrix F we can ﬁnd the weights w by constraint linear least
squares minimization

w =argmin | lf — FWI |2~ subject to: w(r) 3 WS (9)

W

where wS >0 is a small scalar that ensures each sample receives a non-zero
weight. Figure 2 illustrates a typical example showing that the trend of
the relation is monotonically increasing. and the spread around the trend
is marginal. indicating that Equation (6) indeed holds for a small 4“.

2.2.2 Estimating g‘ The parameter 4‘ can be estimated by randomly
resampling the (ff) relation using the obtained weights and measuring the
spread around the trend in the data in the )2 direction (Fig. 2C illustrates
this schematically). To this end. lowess smoothing was performed to obtain
the the trend in the data (Cleveland. 1979). Subsequently. the spread around

 

i152

112 /3.Io's[BumoIpJOJXO'souBuiJOJuroiq”:dnq 11101} papeolumoq

9103 ‘{g isnﬁnv uo ::

Combinatorial association logic networks

 

this trend was obtained by applying a sliding window in the )2 direction and
deﬁning g‘ as the maximum spread across all window positions.

2.2.3 Branch ana1 bound search tree Equation (5) naturally ﬁts a branch
and bound framework with a backtracking search tree. in which each node
corresponds to a particular set of samples C (shown in Supplementary
Fig. S2). Although this tree exhaustively represents all possible sample sets
C. the search is very efﬁcient since most nodes can be pruned from the
search tree. First of all. if V(C) becomes equal to the empty set. all child
nodes of node C can be discarded because these will also result in the empty
set. Second. as a result of the search tree topology. for each node C we can
deﬁne an upper bound and lower bound The upper bound is

W
deﬁned as the value of f that would be obtained assuming all its subnodes
do not result in the empty set (best case scenario)

fl?=Zw(r>+ Z we), (10)

161: 166mb

where Csub denotes the collection of all samples in the subnodes of C. The
lower bound]2 is deﬁned as the value of]2 that would be obtained assuming
all subnodes will result in the empty set (worst-case scenario)

 zzwm. (11)

IEC

A vast reduction of the search space is realized by considering the
following branch and bound principle: any node Ca can be pruned if there
exists a node C5. for which the following is true:

yang") < ) — 4‘, under the condition: V(C5) 75 Z (12)

Thus. if we encountered a branch whose worst-case error is better than
the best-case error of another branch. we can safely discard the latter.

After the complete search tree is traversed. the set V(Q) is determined by
the union of all the nodes that resulted in a non-empty V(C). In Equation (12).
the parameter 4‘ is included to ensure that set V(Q) includes n* (Theorem 2).
An optimal leaf ordering is obtained when the samples are sorted based on
their weight W(‘L’). This ensures that decreases as quickly as possible.
in effect pruning the tree early in the search. Also. note that most V(C)
will contain many duplicates when symmetries in the topology of B are
considered. By ﬁltering these from Vw) before evaluating the succeeding
node results in an additional search speedup.

2.2.4 Tolerance level A ﬁnal. yet inﬂuential. search-space reduction is
achieved by only considering solutions for which a certain minimum level
of association is achieved. This is realized by enforcing that )2 low can never be
below a user deﬁned tolerance level. In other words. for this bounded )2 10w . we
can write: ﬂow =max(}2ml,f10w). As a result. branches for which flow Sflol
can be pruned even before the search is started. The search procedure is
explained by example in Supplementary Figure S2.

2.2.5 Estimating the false discovery rate Because our primary interest lies
with the interpretation of the selected genotype markers and combinatorial
logic. it is of critical importance to assess frequency of false positives
among the networks called signiﬁcant. Due to the efﬁciency of the proposed
method. it is possible to employ a permutation procedure to obtain a null-
distribution for each Bf. From this distribution. it is possible to estimate the
false discovery rate (FDR) and the associated q-Values by using the method
proposed in Storey and Tibshirani (2003). Not surprisingly. in many cases.
multiple network topologies yield signiﬁcant associations with the same
gene. The q-Values. available for each of the solutions. provide a convenient
way of performing selection of the most parsimonious model by accepting
only the topology for which the q-Value is minimal.

3 RESULTS

3.1 Genetical genomics dataset

The genetical genomics dataset used to demonstrate our method
contains genome-wide RNA transcript measurements performed
on four related hematopoietic cell populations (Gerrits et (11.,
2009). These were isolated from the bone marrow of ~25 BXD
recombinant inbred mouse strains that were derived by crossing
C57BL/6J (B6) and DBA/2J (D2) (Peirce et (11., 2004). A typical
analysis of these data includes determining eQTLs, i.e. regions in
the genome for which the genotype across strains associates well
with RNA transcript levels.

We inferred associations only for the myeloid cell population,
as for this cell type data for the largest number (T=24) of unique
BXD strains were available. The expression data were preprocessed
as described in the Supplementary Methods. Because the CAL
networks inferred for highly correlated genes are equivalent,
rather than starting the optimization for each gene separately, we
constructed gene Clusters and searched for CAL networks for the
centroids of each gene cluster. To ensure only tightly correlated
probes were Clustered, we employed a stringent cutoff (correlation
distance cutoff 0.2). This resulted in 6139 Clusters that were used to
determine eQTLs.

Genotype information for the strains was retrieved from
The GeneNetwork (http://www.genenetwork.org/dbdoc/BXDGeno
.html). Genotype markers that were highly similar across strains and
on the same Chromosome were also grouped into Clusters to prevent
the algorithm from ﬁnding many combinations of genotype markers
that are equivalent (such as the markers in linkage disequilibrium).
This resulted in 453 marker Clusters (L = 453). The Cluster centroids
were deﬁned as the majority vote of the individual markers in the
Cluster and were used as putative inputs to the network (see also the
Supplementary Methods and Supplementary Figs. S3 and S4).

For setting the tolerance level ftol no straightforward method
exists. Preferably, the tolerance level is set close to the ﬁnal
signiﬁcance threshold to minimize the effort spent on ﬁnding optima
for gene Clusters that can never be signiﬁcant. We settled for a
tolerance level equal to the 75th percentile of the f Opt distribution
(ftol = 7.6), obtained by computing the f -values associated with each
yopt. Gene Clusters for which the maximum f-score is below this
tolerance level (i.e. in case f Opt < ftOI) were not included in the CAL
network search, to result in a set of 1525 high-potential gene Clusters.

3.2 Algorithm performance

From the methods section it follows that, under the condition that an
appropriate value for g“ is found, our algorithm produces an optimal
solution. We empirically validate this Claim by comparing solutions
of the proposed algorithm with the global optimum obtained with an
exhaustive search. To ensure realistic conditions, we do this using
the real data described above.

For each gene expression vector, we performed our CAL network
search as described with seven network topologies containing AND,
OR and XOR logic as well as a more complex combination of these
Boolean functions. A rather low tolerance level (ftol :4) was used,
which turned out to capture most of the solution-space (>80% for
all topologies). The solutions obtained were compared with the
optimal solutions determined by means of an exhaustive search
for the same seven Boolean logic ﬁinctions using Grid computing

 

i153

112 /3.Io's[BumoIpJOJXO'soueuiJOJuroiq”:duq 111011 papeo1umoq

9103 ‘1gisn8nv uo ::

J.de Ridder et al.

 

 

Barcelor |:I i:| i:| - - - -
TOPOIOQY hi: “(LAD iiviz iiv(i.vix) illi. “(L-i.) -i,v(i.0i,)
75th percentile 5.7 5.3 5.5 5.3 5.4 5.7 7.9

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

100%
90%
360%
2
E 70%
60%
0%
a.” a}, 6“ A» q? 975° ‘99 «‘3’
binned f-score of solution
r N f N r N 5’
IE Id In .53
A 6‘ e.
cu 3% {(-
_ 6 ul- 0
8 ‘6‘
III
S5 r ’1? 3‘?
0‘ . Q
0 6‘
64 "J
III
‘3 a
O
a: i + at
.E 2 + r i i \Q
a, + i '-r-' "' +
1 +
f» i * s Q t s Q
g o I i
a: 4: i Qé'
Age. Q Q 1 6
=4 + +
 eggs “1‘0
e 9 < > a x x x a. || || H
..r ‘— ‘- ‘- E s s s
...r ...r ...r ...r ‘° ‘° ‘“ in
v v v v E E E m ‘4‘ x ‘4‘
6 < > > 4% *4: *1: %
...r ...r ....' ...r 5 § § (>5.
r n u u . u u
\ j \ 11802913) / \lle(12®li)/

 

Fig. 4. Algorithm performance in terms of accuracy and runtime under
various conditions. (A) Bargraph displaying accuracy for different network
topologies and different values of the f-score. For each of the network
topologies the 75th percentile of the solution distribution is also given.
showing that for solutions in the tail 100% accuracy is obtained. For the
two missing bars in the 4-6 and 5-6 bins no solutions were found. (B) and C)
Runtimes for different network topologies and dataset sizes. The horizontal
lines reﬂect runtimes for exhaustive search. From bottom to top these
represent the runtimes for: a single input network. two input network and
three input network with one. two and four times the number of predictors.
respectively.

facilities. The accuracy is expressed as the percentage of times that
the algorithm ﬁnds the same solution as the exhaustive search.

Figure 4A shows the resulting accuracy. We observe that for
solutions with f-scores between 5 and 6 already >95% accuracy
is achieved, while for solutions with f -scores of :6, Virtually 100%
accuracy is achieved for each topology. For comparison, Figure 4A
also gives the 75th percentiles of the solution distributions for
each topology. Because solutions of interest (putatively signiﬁcant
solutions) are required to have f -scores substantially higher than the
75th percentile, we can conclude that our method achieves 100%
accuracy for a reasonable operating range (solutions with f -scores
between 4 and 5—where the accuracy is below 95%—are well the
75th percentile for all networks).

While comparing our method to the method presented in
Mukherjee et (11. (2009), using simulated gene expression vectors
and a predetermined random network (ground truth), we found that
our method reaches higher true positive rates (see Supplementary
Material). These results illustrate the beneﬁt of searching for
solutions for each of the network topologies separately, and
employing a signiﬁcance estimate to enforce parsimony.

Obtaining the same accuracy as an exhaustive search is only useﬁil
if this is achieved for runtimes that are substantially lower. To asses
this, we randomly selected 200 gene expression vectors from the

1525 gene Clusters and measured runtimes for both our CAL network
search as well as the exhaustive search. Figure 4B—D shows these
runtimes for a range of conditions. The boxplots represent the results
obtained with the CAL network search and the horizontal lines the
runtimes for the exhaustive search.

Figure 4B compares runtimes for different network topologies.
Clearly, the branch and bound algorithm signiﬁcantly outperforms
the exhaustive search under all experimental conditions with
differences in runtime of up to four orders of magnitude. For the three
input networks in particular, the runtime required for exhaustive
search (>5 h per gene per network) prohibits any further permutation
procedures. The CAL network search, on the other hand, is able
to ﬁnd the solution in a matter of seconds, thereby enabling the
large number of permutations required to obtain reliable signiﬁcance
estimates.

Compared to the variance in runtime of the exhaustive search,
which was negligible, the variance of the CAL network search is
quite high. This is expected as our CAL network search ﬁnishes
rapidly when a good solution presents itself early in the search,
while more time is needed to conclude that no acceptable solution
is present. For a similar reason, the more complex networks,
those containing XOR logic, have higher median runtimes. On no
occasion, however, does this increase runtimes >100 s for any of the
networks.

To evaluate performance as a function for dataset size we
artiﬁcially increased the number of predictors and the number of
samples (Fig. 4C). In addition, runtimes for different tolerance
levels were examined (Fig. 4D). The number of predictors was
increased by horizontally concatenating the original matrix L with
copies of L containing 10% random bit-ﬂips. The sample size was
increased by vertically concatenating matrix L as well as all gene
expression vectors g with copies of L and g, respectively. In case
of the latter, normally distributed noise was added to the copies
with amiss = 0.1(7g. We observe that for both the exhaustive search
as well as the CAL network search runtimes increase substantially
as the number of predictors increase. In case of the CAL network
search, this is explained by the fact that many very good solutions
are present due to the increased imbalance between the number of
predictors and the sample size. It is expected, yet not quantitatively
established, that better performance is observed when this balance is
restored. The increase in runtime as a result of an increased number
of samples is moderate, with a median runtime considerably lower
than an exhaustive search for only two input networks. Likewise,
increasing the tolerance level only moderately speeds up the CAL
network search, demonstrating that runtime is robust for the setting
of this parameter.

3.3 Combinatorial eQTLs

We performed the CAL network search for the set of 1525 high-
potential gene Clusters. The complete search (e.g. for all gene
Clusters and all topologies) was repeated 100 times using a permuted
version of the gene-expression vectors. For each topology, this
resulted in a null-distribution containing 152 500 values, which was
used to estimate q-values for each of the resulting solutions. We
considered network topologies with a maximum of three inputs listed
in Supplementary Figure S5. Notably, we included two single-input
networks to account for direct positive and negative association,
respectively, which is equivalent to positive association with the

 

i154

112 /3.Io's[BumoIpJOJXO'soueuiJOJuroiq”:duq 111011 papeo1umoq

9103 ‘1gisn8nv uo ::

Combinatorial association logic networks

 

 

J

 

 

a}

 
      
   

  

— All clusters
— Clusters with minimum q-value
— flevel 311096 FDR

§

 

 

 

 

   

f-level
\
x

S

 

mber of signiﬁcant clust

 

a
i
i
0‘
1‘

(ENU

 

 

/ 13
12
K \ 11
a} S 10
Q
$29 0* #6; ass
as 3.5 \ a a y
x. \ 0° 5 «9 «a s
«35* 59° «03° o§ as 06‘” x149 v49 ~03

1 Parp3 o 0.005 12.7 6.6 yes

2 Pcaf V 0.040 9.1 4.1 yes

333}!
339-!

3 y Lilrb4 5 0.045 13.5 4.3 no
QED-y

Daglb o 0.050 0.9 3.2 no
Urml

2
i
2
1
3 des
3%yiaioooemamk V “061 “'5 3'” “°
3 Chidi
6 3%4 BCO26590 9 0.061 10.5 3.9 no
2
I
2
i
3
2
1

Probe position
N

NeurIZ
{9" 2900092E17Rik ' 0°59 3'7 3‘7 "° 1
329"

2
gig-y '35:; 4 0.030 9.3 3.7 no

Ecsit

Dadt
Calu J

 

|GKV8>18 A 0.071 10.5 5.2 no

 

 

+

2

0
m
3
(I
z
n
3
2
w
2
'a
o
2
z
a
:x

.i

— Pcaf

   
  
      
   
 
 
  
 

—1510009K13Rik

\ Ddx28

18

    

\Calu

— B0026590
— des

—Urm1

3 4 5 6 7 8 910111213141516171819X

 

J

Fig. 5. (A) Bargraph with an overview of the number of gene clusters for which a signiﬁcant (10% FDR) solution is found. Network topologies are sorted
according to the 10% FDR level (blue line). (B) CAL networks signiﬁcant at 10% FDR. The color and shape of the symbols correspond to the symbols used
in (C). Small circles at the inputs of the networks denote negation. i.e. for these inputs the mapping from allele to binary representation is switched. We also
indicate whether the best single marker coincides. for that gene cluster. with one of the inputs of the CAL network. (C) Marker/probe-plot for the top CAL
networks showing both the eQTLs (blue crosses) and ceQTLs (sets of colored symbols of various shapes). The colors and shapes of the markers refer to the
network topologies listed in (B). Horizontal gray lines connect the inputs and the output of the CAL network. Because probes were clustered. it occurs that
the ceQTLs map to multiple probes in case these probes were part of the same cluster. The numeric labels near the the colored symbols correspond to the
input of the network. Notably. some probes seem to be predicted by more ceQTLs than there are inputs to the CAL network reported. This occurs when there
are multiple combinations of markers that show the same association with the gene expression level of the network output. and can be explained by similarity
among markers. The cis-band (diagonal) is clearly Visible. and in one occasion contains a ceQTL. Overlap among ceQTLs from different networks is marked

by red dashed lines. overlap between ceQTLs and eQTLs by black dashed lines.

D2 and B6 allele, respectively. This ensures that the algorithm has
the option of Choosing the least complex model in case an eQTL
is capable of explaining a signiﬁcant portion of the variance in the
expression of the gene cluster.

Figure 5A gives an overview of the number of gene Clusters for
which the output of a CAL network signiﬁcantly (at the 10% FDR
level) associated with its expression (red bars). To obtain additional
conﬁdence in the signiﬁcance threshold, we calculated q-values for
10 additional permutations of the whole dataset. For none of the
network topologies did the mean number of signiﬁcant gene Clusters
across the 10 permutations exceed 0.6, indicating that the expected
number of false discoveries is conservatively kept under control.
The yellow bars indicate the number of signiﬁcant gene Clusters after
model size selection based on the q-value as detailed in Section 2.
It appears that most of the gene Clusters for which association is
observed can be explained by one of the single input networks. For
nine gene Clusters (corresponding to 17 genes), however, a CAL
network was capable of explaining signiﬁcantly more of the variance
than one of the single input networks or any one of the other CAL
networks.

The network topologies, q-values and association scores of the
signiﬁcant CAL networks are given in Figure 5B. Not surprisingly,
for all gene Clusters at the output of these networks, the combination
of loci is vastly superior in explaining the variance in expression over
any of the markers in isolation. Interestingly, many of these genomic
regions would have been missed, as in seven of the networks the
best markers do not coincide with one of the inputs of the CAL
network.

The sets of markers that were found as the optimal inputs for
the seven topologies were mapped onto the genome. Combinatorial
eQTLs (ceQTL) were then deﬁned as stretches of consecutive
markers. A genome map of the (C)eQTLs is given in Figure 5C,
showing the eQTLs (red and blue crosses for positive and negative
association, respectively) and ceQTLs (colored symbols) on the
x-axis versus the genomic positions of the probes measuring
expression on the y-axis. The numbers near the ceQTL symbols
correspond to the inputs of the CAL networks depicted in Figure 5B.

Before we zoom in on one of the CAL networks in more detail,
some general observations can be made. In particular, we note that
in some cases overlap exists among the markers selected at the

 

i155

112 /3.Io's[BumoIpJOJXO'soueuiJOJuroiq”:duq 111011 papeo1umoq

9103 ‘1gisn8nv uo ::

J.de Ridder et al.

 

 

_ _ , (f—score: 4.29
Genes In input regions 12
Atp43, 2200002J24Rik,Tmem149l
Hspb6, Prodh2, Sbsn,Tmem162,
ENSMUSGOOOOOOSZGQI, Dmkn,
Gm1082, Krtdap, Lsr,Wbp7, thb32,
Etv2, Upkl a,Tmem147, FfarS, Cd22,

genomic location

l-score: 13.55
12

 

Chr7226776606—43677962

 

Lilrb4 expression
B

Mag, 231 0022K01 Rik, Coxébl ,

 

Psenen, Lin37, BC053749, Snx26.
Ffari, 930479M11Rik. Hamp1,Ffa12.
Hamp2, Usf‘2, Gapdhs

Apbai, Klf9, 2410080|02Rik.
1110005A23Rik.Trpm3,
ENSMUSG00000054178,
XR_003716.1, Smc5, 1700028P14Rik,
Mamdc2, ENSMUSG00000055440

 

 
   

chr19:21910296—66652367

Lilrb4 expression

 

 

 

 

 

 

 

1313479194

1542321115

y 5511mm

1:; 1e ,0

.
03’ '9 ‘ 0"
 

 

 

 

 

 

 

 

 

 

 

nudism
000 O
K asseasgyrgao

 
 

    

 

 

 

 

 

 

 

 

 

 

Fig. 6. Input regions of the CAL network for Lilrb4 The line graphs give the f -score for association between the output gene and the individual markers (blue)
and the network output (red). The latter was computed by taking the maximum f-score of the network using the marker under evaluation for one input and
any of the other markers for the second input of the network. Where possible the IDs of the genetic markers are given. but some were omitted for readability.
The dot plots gives the expression values separated by network output (right) and the best markers in the inputs (left). Finally. for one particular combination
of markers the genotype for all strains is depicted as a Boolean heat map. In these diagrams. the NOT gates were already incorporated.

inputs of the CAL networks and between other network inputs and
eQTLs. In seven instances, the identiﬁed ceQTLs coincide with
eQTLs (connected by black dashed lines in the ﬁgure). Some of these
eQTLs are located in cis. The ﬁnding of CAL networks that share
one of their inputs (ceQTLs) with an eQTL suggests that the local
genotype associated with the eQTL is involved in the regulation of a
local gene (cis-regulation), but in addition collaborates with the other
CAL input locus/loci to regulate the CAL network output gene(s).
Furthermore, two of the CAL networks (ranked sixth and ninth)
share a ceQTL between the inputs (connected by red dashed lines).
It is not inconceivable that a gene present in this ceQTL is indeed
involved in the regulation of the target genes of both networks,
but that the interaction partners through which this regulation is
established differs for both target genes.

Among the list of output genes of the nine most signiﬁcant
CAL networks is Lilrb4 (ranked third). Lilrb4 encodes a leukocyte
immunoglobulin-like receptor which is expressed on the surface of
mast cells, neutrophils, and macrophages. It plays a key role in
counter-regulating the inﬂammatory response to prevent pathologic
excessive inﬂammation (reviewed in Katz, 2007).

Figure 6 shows small regions around the ceQTLs that were
selected as inputs for the CAL network ofLi1rb4. For each region, the
association was measured between the expression of Lilrb4 and the
individual markers (blue lines). The red lines, on the other hand, give
the association score for the network output. Clearly, the association
between the logical combination of inputs and the expression of
Lilrb4 is markedly higher than considering any of the markers in
isolation. The regions for which the red curves reach their maximum
correspond to the ceQTLs.

The Boolean heat map, displayed at the bottom of Figure 6,
outlines the genotype of one particular combination of genetic
markers in the ceQTLs across the BXD mouse strains. The bottom
two rows of this heat map give the optimal network output and

predicted output, respectively. For the Lilrb4 network the optimal
network output is exactly recapitulated by the CAL network. For
Lilrb4 elevated expression is exclusively observed in case of B6
alleles in both the ceQTL regions of Chromosomes 7 and 19.

To focus our attention to the most interesting genes in the ceQTLs
we performed a literature search using Ingenuity pathway analysis
(Ingenuity©Systems, www.ingenuity.com). Interestingly, we found
a substantial number of interactions between genes localized in the
ceQTLs and Lilrb4. For example, the literature search revealed a link
between Apbal (located in the ceQTL region on Chromosome 19)
and Lilrb4. Both protein products have been described to bind
ITGB3 (Calderwood et (11., 2003; Castells et (11., 2001). In addition,
the search revealed a link between Psenen (Chromosome 7 ceQTL)
and Apbal (Chromosome 19 ceQTL). Both protein products have
been described to bind PSENl and PSEN2 (Biederer et (11., 2002;
Steiner et (11., 2002).

While literature is able to link the genes in the ceQTLs to Lilrb4
and thereby gives the ﬁrst clues as to how the expression of Lilrb4
may be regulated, we do not exclude that other interactions (not yet
represented in literature) exist. In any case, the result of our method
should provide a set of testable hypotheses that can be validated in
the laboratory.

4 DISCUSSION

Unravelling (transcriptional) regulatory networks by inferring
complex associations, for instance, between genotype and gene
expression, necessitates algorithms that take into account possible
(allele-speciﬁc) interactions. For this purpose, we have proposed a
method to efﬁciently infer CAL networks, i.e. small logic networks
in which allele-speciﬁc interactions are modeled by Boolean
functions. To ﬁnd the best possible ﬁt of the model given the data, a
computationally challenging optimization problem had to be solved.

 

i156

112 /310's112u1n0fp101x0'so1112111101u101q//:d1111 111011 pap1201um0q

9103 ‘1g15n8nv u0 ::

Combinatorial association logic networks

 

This was achieved by rewriting the optimization such that it could
be effectively solved by a customized branch and bound algorithm.
Proof and empirical evidence for optimality of the solution, under
appropriate conditions, was given. At the same time, differences in
runtimes of up to four orders of magnitude were observed when
compared to exhaustive search.

Because the CAL network search is able to ﬁnd the optimal
solution in a matter of seconds a permutation procedure becomes
feasible, which can be employed to obtain estimates of the FDR.
This is a major advantage as the resulting q-values allow selection
of the most parsimonious model and enable ranking the network
topologies in terms of their complexity.

We demonstrated our algorithm on a genetical genomics dataset,
and found that, from the 1525 gene clusters (2913 genes) that
resulted after selection of high potential genes, 9 gene clusters
(17 genes) were signiﬁcantly associated (at 10% FDR level) through
a logical combination of genomic loci rather than a single eQTL.
Notably, without incorporating the complex interactions, these
associations would have gone unnoticed. Many of the discovered
input regions were found to overlap eQTLs or were shared
inputs of CAL networks explaining the expression of other genes,
suggesting that these regions, indeed, are involved in transcriptional
regulation.

ACKNOWLEDGMENTS

The authors thank Daoud Sie and Leonid V. Bystrykh for their
valuable input.

Funding: This work was part of the BioRange programme of the
Netherlands Bioinformatics Centre (NBIC), which is supported by
a BSIK grant through the Netherlands Genomics Initiative (NGI);
Dutch Life Science Grid initiative of NBIC and the Dutch e-
Science Grid BiG Grid, SARA - High Performance Computing
and Visualisation; Netherlands Genomics Initiative (Horizon, 050-
71-055); Dutch Cancer Society (RUG2007-3729); Netherlands
Organization for Scientiﬁc Research (NWO) (VICI to G.d.H.,
918-76-601); European Community (EuroSystem, 200720).

Conﬂict of Interest: none declared.

REFERENCES

Biederer,T. et al. (2002) Regulation of APP-dependent transcription complexes by
mint/xlls: differential functions of Mint isoforms. J. Neurosci, 22, 73407351.

Bystrykh,L.V. et al. (2005) Uncovering regulatory pathways that affect hematopoietic
stem cell function using ‘genetical genomics’. Nat Genet, 37, 2257232.

Calderwood,D.A. et al. (2003) Integrin beta cytoplasmic domain interactions with
phosphotyrosine-binding domains: a structural prototype for diversity in integrin
signaling. Proc. Natl Acad. Sci. USA, 100, 227272277.

Castells,M.C. et al. (2001) gp49b1-alpha(v)beta3 interaction inhibits antigen-induced
mast cell activation. Nat Immunol, 2, 436—442.

Cleveland,W. (1979) Robust locally weighted regression and smoothing scatterplots. J.
Am. Stat. Assoc, 74, 8297836.

Evans,D.M. et al. (2006) Two-stage two-locus models in genome-wide association.
PLoS Genet, 2, 6157.

Frankel,W.N. and Schork,N.J. (1996) Who’s afraid of epistasis? Nat Genet, 14, 3717
373.

Gerrits,A. et al. (2009) Expression quantitative trait loci are highly sensitive to cellular
differentiation state. PLoS Genet, 5, e1000692.

Jansen,R.C. and Nap,J.P. (2001) Genetical genomics: the added value from segregation.
Trends Genet, 17, 3887391.

Katz,H.R. (2007) Inhibition of pathologic inﬂammation by leukocyte Ig-like receptor
B4 and related inhibitory receptors. Immunol. Rev., 217, 2227230.

Kooperberg,C. and Ruczinski,I. (2004) Identifying interacting SNPs using Monte Carlo
logic regression. Genet. Epidemiol., 28, 1577170.

Ljungberg,K. et al. (2004) Simultaneous search for multiple QTL using the global
optimization algorithm direct. Bioinformatics, 20, 188771895.

Manichaikul,A. et al. (2009) A model selection approach for the identiﬁcation of
quantitative trait loci in experimental crosses, allowing epistasis. Genetics, 181,
107771086.

Michaelson,J.J. et al. (2009) Detection and interpretation of expression quantitative trait
loci (eQTL). Methods, 48, 2657276.

Mukherjee,S. et al. (2009) Sparse combinatorial inference with an application in cancer
biology. Bioinformatics, 25, 2657271.

Nunkesser,R. et al. (2007) Detecting high-order interactions of single nucleotide
polymorphisms using genetic programming. Bioinformatics, 23, 328073288.

Peirce,J.L. et al. (2004) A new set of bxd recombinant inbred lines from advanced
intercross populations in mice. BMC Genet, 5, 7.

Pollack,J.R. et al. (2002) Microarray analysis reveals a major direct role of DNA copy
number alteration in the transcriptional program of human breast tumors. Proc.
Natl Acad. Sci. USA, 99, 12963712968.

Schadt,E.E. et al. (2003) Genetics of gene expression surveyed in maize, mouse and
man. Nature, 422, 2977302.

Shames,D.S. et al. (2006) A genome-wide screen for promoter methylation in lung
cancer identiﬁes novel methylation markers for multiple malignancies. PLoS Med,
3, e486.

Steiner,H. et al. (2002) Pen-2 is an integral component of the gamma-secretase complex
required for coordinated expression of presenilin and nicastrin. J. Biol. Chem, 277,
39062739065.

Storey,J.D. and Tibshirani,R. (2003) Statistical signiﬁcance for genomewide studies.
Proc. Natl Acad. Sci. USA, 100, 94409445.

Visel,A. et al. (2009) Chip-seq accurately predicts tissue-speciﬁc activity of enhancers.
Nature, 457, 8544558.

Wongseree,W. et al. (2009) Detecting purely epistatic multi-locus interactions by an
omnibus permutation test on ensembles of two-locus analyses. BM C Bioinformatics,
10, 294.

Zhang,Y. and Liu,J.S. (2007) Bayesian inference of epistatic interactions in case-control
studies. Nat Genet, 39, 116771173.

 

i157

112 /310's112u1n0fp101x0'so1112111101u101q//:d1111 111011 pap1201um0q

9103 ‘1g15n8nv u0 ::

