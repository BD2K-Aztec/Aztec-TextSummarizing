Advance Access Publication Date: 2 November 2015

Bioinformatics, 32(5), 2016, 779—781
doi: 10.1093/bioinformatics/btv645

 

Applications Note

 

Sequence analysis

No Promoter Left Behind (NPLB): learn de novo
promoter architectures from genome-wide

transcription start sites

Sneha Mitra and Leelavati Narlikar*

Chemical Engineering Division, CSIR-National Chemical Laboratory, Pune 411008, India

*To whom correspondence should be addressed.
Associate Editor: John Hancock

Received on September 11, 2015; revised on October 16, 2015; accepted on October 28, 2015

Abstract

Summary: Promoters have diverse regulatory architectures and thus activate genes differently. For
example, some have a TATA—box, many others do not. Even the ones with it can differ in its pos—
ition relative to the transcription start site (TSS). No Promoter Left Behind (NPLB) is an efficient, organ—
ism—independent method for characterizing such diverse architectures directly from experimentally
identified genome—wide TSSs, without relying on known promoter elements. As a test case, we show
its application in identifying novel architectures in the fly genome.

Availability and implementation: Web—server at http://nplb.ncl.res.in. Standalone also at https://

github.com/computationalBioIogy/NPLB/ (Mac OSX/Linux).

Contact: |.nar|ikar@nc|.res.in

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Promoters play a key role in transcription initiation by harbouring
specific DNA elements, which act as transcription factor recognition
sites. But how these promoter elements (PEs) contribute to the diver—
sity in transcriptional regulation is not yet clear. While high—
throughput technologies are increasingly used to produce accurate
maps of transcription start sites (TSSs) (Ohler and Wassarman,
2010), the subsequent step of characterizing promoters and their
functions is still done using two rather dated approaches. The first
involves classifying them based on known PEs such as the INR motif
or TATA—box. Unfortunately, a majority of promoters and their
activities cannot be explained by the presence or absence of these
few PEs. Alternatively, de novo motif discovery methods are used to
identify overrepresented elements directly from the sequences. These
can miss PEs present only in a small fraction of promoters.
Since promoters have diverse mechanisms of activation, most PEs
fall in this category (Juven—Gershon et (11., 2008). Even methods that
identify cis—regulatory modules fail here, since although they look
for motif—combinations, these are still required to be common across
the full set (Van Loo and Marynen, 2009).

©The Author 2015. Published by Oxford University Press.

No Promoter Left Behind (NPLB) is a new method modelled
along the lines of unsupervised learning with feature selection that
partitions TSS—aligned promoter sequences into distinct promoter
architectures (PAs), each characterized by its own set of PEs, all
learned de novo (Narlikar, 2014). Since it explicitly allows for diver—
sity, NPLB can be applied to the full dataset, leaving out no pro—
moter, in contrast to the standard approach of presorting/
preselecting promoters on the basis of criteria such as presence of
known PEs (Chen et (11., 2014) or TSS peak characteristics (Ni et (11.,
2010). In this new parallel software, the number of PAs and PEs are
determined automatically using a mix of Bayesian modelling and
cross validation.

2 Methods
2.1 Overview of NPLB

Each promoter is characterized by one PA out of a finite set of PAs.
Each PA is characterized by categorical distributions over nucleo—
tides {A,C,G,T} at specific positions relative to the T55. These pos—
itions and their distributions are expected to be unique to that PA.

779

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.U/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 ﬁle'slvumofqurxo"sotJBurJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnv 110 ::

780

S.Mitra and L.Narlikar

 

All other positions follow a background categorical distribution,
common for all PAs. Parameters of models with various numbers of
PAs are learned using Gibbs sampling and the best model is decided
using cross validation. Key advantages of NPLB are that it

1. identiﬁes novel and possibly diverse architectures and elements,
with the only input being the set of promoters,
2. is an organism and a cell—type independent,

u

can be applied to the full set, directly,

4. employs a likelihood—based approach, thus can be used to make
new predictions of promoters, as well as classify between
architectures,

5. uses multiprocessing, making it fast: takes about 2 h for bacteria

and 10h for ﬂy on an Intel i7—3770K desktop. (Supplementary

Fig. S1 shows how runtime scales with number of promoters.)

Written in C and Python, NPLB requires a prior installation of gnu—
plot 4.6+. Weblogo 3.3 (Crooks et 41]., 2004), and is modified to
generate sequence logos.

2.2 NPLB input

NPLB can learn new PAs (PROMOTERLEARN) or categorize new pro-
moters based on an input PA—model (PROMOTERCLASSIFY). Both re—
quire a fasta file of promoters, aligned according to the T55. A
typical eukaryotic file would contain DNA sequences ~50 bp up—
and downstream of the T55. PROMOTERCLASSIFY also needs a previ—
ously learned model. Various other default settings such as number
of PAs to be explored and the number of sampling iterations can be
overridden by the user. This is especially useful when the user wants
to choose between a quick, approximate solution and a slow, but
more accurate characterization. A tab—separated text file with one
line per promoter, containing additional characteristics of each TSS
such as UTR length, TSS spread, etc. is an optional input. In such a
situation, NPLB creates plots that can give insights into functional
differences between PAs.

2.3 NPLB output

A successful run of PROMOTERLEARN produces the following outputs:

' PAs in two visual formats: image (PAimage.png; Fig. 1b) and
logos (PAlogo.html; Supplementary Fig. S1). The input is stored
as rawImage.png (Fig. 1a) for reference. An —eps option produces
eps ﬁgures. More details about the PEs and PAs are reported in
modelOut.txt and architectureDetails.txt.

' If a characteristic ﬁle is supplied, box—plots (Fig. 1c and d) or pie—
charts are created for real or categorical characteristics,
respectively.

' The model itself is saved in a binary ﬁle bestmodel.p and can be
used by NPLB to classify a new promoter.

' The best model is determined by cross validation. Likelihoods of
all models are recorded in CVLi/eelihoods.txt. The verbose op—
tion leads to likelihoods of all sampling iterations to be plotted in
separate [mg ﬁles.

' The parameters of the execution are saved in settings.txt.

A successful run of PROMOTERCLASSIFY produces all the aforementioned
files except CVLi/eelihoods.txt, settingstxt and the likelihood plots.

3 Case study: Drosophila

PROMOTERLEARN was applied to 90—bp neighbourhoods centred on
6635 TSSs (Fig. 1a) reported in adult Drosophila melanogaster car—
casses (Chen et 41]., 2014). In the original study, four types of promoters

l")

_ ll

(Milli)

' I
*2
i
E-
a
3'

lll'll'l'l"llll'llllll" 

112 /310'S[BHmOprOJXO'SOIJBLUJOJIIIOIq/ﬂdnq 11101} pepaoprmoq

 

IA IE '6 IT

(a) (b)

In I: IE IT {(3)

Fig. 1. (a) Original set of promoter sequences. (b) 30 PAs learned by NPLB,
ordered here based on presence of known PEs. (c) Tags per million at TSSs in
each PA. (d) Length of 5’ UTRs in each PA

were identified, based on known ﬂy PEs (Ohler and Wassarman,
2010): TATA—box, INR, DPE, Dmv4 and Dmv5. These four types ac—
counted for 2112 of the 6635 promoters (Supplementary Fig. S3a).
Here, 12 PAs were identified (Supplementary Fig. S4a);
PROMOTERLEARN was run again on each of them. Eight PAs were split
further into a total of 23 PAs (Supplementary Fig. S4b), three of which
were split to get a final set of 30 PAs (Fig. 1b).

A1—A6 contain the TATA—box, but differ in its distance from the
T55. Interestingly, the INR motif TCAGTY varies slightly with the
TATA—box position in A3—A6. Standard analyses miss such vari—
ations, either because they rely on known PEs or look for elements
overrepresented in the full set. For instance, in the sequences left out
in the original study, NPLB finds PAs characterized by known as
well as novel PEs (Supplementary Fig. S3b).

The characteristic file with the number of tags at each T55 and 5’
UTR length was used to construct two box—plots (Fig. 1c and d). A30
contains the ribosomal TCT motif (Parry et 41]., 2010) in place of the
INR, which explains the significantly higher number of tags at those
promoters (P < 10721). This PA was missed in the original analysis pos—
sibly since it contains <2% of all promoters. Interestingly, A7—A11,
which contain variants of the DPE, but no obvious upstream element,
create transcripts with longer 5’ UTRs than other PAs (P< 10762).
This has not been noted before. A more detailed description of the PAs
is available in the Supplementary methods. PAs can be further analysed
for function through conservation analysis (Karolchik et 41]., 2014;
Supplementary Fig. S5) and GO term enrichment studies (Huang et 41].,
2007; Supplementary Table S1).

9IOZ ‘OE ISUEHV 110 ::

No Promoter Left Behind

781

 

4 Conclusion

Data from new and advanced high—throughput technologies are in—
creasingly making it clear that cells employ diverse mechanisms for
transcriptional regulation. NPLB seeks to fulfil the need for an efficient
and unbiased method that can identify these mechanisms directly from
such data. Although NPLB has been designed for TSS maps, it can be
applied to any DNA sequences aligned on the basis of a common gen—
omic event such as splicing, eRNA synthesis or protein—DNA binding
and expected to have distinct sequence architectures in the immediate
neighbourhood.

Funding

This work was supported by an Early Career Fellowship from Wellcome
Trust/DBT India Alliance to LN.

Conﬂict of Interest: none declared.

References

Chen,Z. et al. (2014) Comparative validation of D. melanogaster
modENCODE transcriptome annotation. Genome Res., 24, 1209—1233.

Crooks,G.E. et al. (2004) WebLogo: a sequence logo generator. Genome Res.,
14,1188—1190.

Huang,D.W. et al. (2007) DAVID bioinformatics resources: expanded annota-
tion database and novel algorithms to better extract biology from large gene
lists. Nucleic Acids Res., 35, W169—W175.

Juven—Gershon,T. et al. (2008) The RNA polymerase II core promoter—the
gateway to transcription. Curr. Opin. Cell Biol., 20, 253—25 9.

Karolchik,D. et al. (2014) The UCSC Genome Browser database: 2014 up—
date. Nucleic Acids Res., 42, D764—D770.

Narlikar,L. (2014) Multiple novel promoter—architectures revealed by decod—
ing the hidden heterogeneity within the genome. Nucleic Acids Res., 42,
12388—12403.

Ni,T. et al. (2010) A paired-end sequencing strategy to map the complex land—
scape of transcription initiation. Nat. Methods 7, 521—527.

Ohler,U. and Wassarman,D.A. (2010) Promoting developmental transcrip—
tion. Development, 137, 15—26.

Parry,T.J. et al. (2010) The TCT motif, a key component of an RNA polymer-
ase II transcription system for the translational machinery. Genes Deu, 24,
2013—2018.

Van Loo,P. and Marynen,P. (2009) Computational methods for the detection
of cis—regulatory modules. Brief. Bioinform. 10, 509—5 24.

112 ﬁle'slvumofqutxo"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnv 110 ::

