BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

I.Shlyakhter et al.

 

coalescence of n,— and n_,-; recomb(n,.,x,n,~,n/) means recombin—
ing 11, at x produced nodes 11,- and n_,-.

2.2 Tracking only the veneer of the ARG

Coalescent simulators typically work in two phases. First, they
simulate the genealogy of the sample, known as the ARG.
Second, they simulate mutations on that geneology. CosiZ com—
bines these into one phase, avoiding construction of the full
ARG. During simulation, only a thin frontier of the ARG is
kept, along with bookkeeping information sufﬁcient for placing
mutations.

Standard coalescent simulations begin by initializing the ARG
with the present—day population sample Go. A sequence of coales—
cences and recombinations is then sampled, updating G: for a
coalescence of nodes 11,- and n_,- producing no G <— G U {116}; for a
recombination of node 11, into nodes 11,- and n_,-, G <— G U {n,~, 11,}.
Then, mutations are placed on the ARG. For mutation placed
above node n at chromosomal location x e l0cs(n), L(n, {x}) is
found by tracing down the ARG: L(n, {x}) = G0 (1 trace(n, x)
where trace(n, x) = {n} U (U{trace(c, x) | c e ch(n) /\ x e l0€s(c)}).

In c0512, ARG nodes are discarded as soon as a parent is gen—
erated. For coalescence, G <— G U {116} \ {n,~, 11,}; for recombin—
ation, G <— G U {n,~, nj} \ m. Not keeping the full ARG removes
a computational bottleneck, but discards information needed to
compute L(n, {x}) when placing mutations. To compensate, we
store for each node n the full function L,,(x)=L(n, {x}), repre—
sented efficiently using skip lists (see below). L" is updated incre—
mentally during simulation: c0al(n,~, 11;, no) => Lm = L", U Ln];
recomb (m, x, n,~, 11,) => Ln, = L", [[n?, x]. Despite not being kept
in memory, the full ARG can be logged to a file using an option
described in the documentation.

2.3 Efficiently representing segment lists

The piecewise constant function L" is represented efficiently at
each node as a skip list (Pugh, 1990) of segments on which it is
constant and non—empty. The skip pointers of the skip list are
augmented with the total physical and genetic length of the
skipped segments. Standard skip—list techniques then permit
logarithmic—time updates of L" during recombination, coales—
cence and gene conversion. Keeping just the veneer of the
ARG works synergystically with skip lists: as nodes participating
in recombination or coalescence are discarded immediately after
the operation, large portions of their skip lists can be reused in
constructing the skip—list representation of the result.

2.4 Efﬁcient sampling of crossovers and gene conversions

The vast majority of crossover and gene conversion events do
not change the ARG but do take time to track. These are either
crossovers falling entirely to one side of a node’s segment list or
gene conversions falling entirely outside any segment. Cosi2
directly samples only crossovers and gene conversions that actu—
ally change the ARG, by keeping the crossover and gene con—
version rates of the individual nodes in a Fenwick tree data
structure supporting quick access to the total rate and efﬁcient
sampling of event location weighted by the genetic map. The
skip—list representation of segment lists allows incremental updat—
ing of the node’s individual event rates.

Table 1. Simulation time comparison

 

Model parameters Mean simulation time per replica (s)

 

 

L k r f msms mbs 60512 60512 “I”
3 40 1e78 0.57 3 76 0.7 0.25

10 80 1e78 0.57 40 > 163 5 l

30 200 2e78 0.70 2786 > 164 162 21

60 200 2e7 8 0.70 10286 > 264 686 71

3 40 1e — 8'” 0.57 n/s 69 0.76 0.26

10 80 1e — 8g" 0.57 n/s n/s 9 3

10 40 le78 0.35 16.02 > 163 2.44 0.59
20 200 le78 0.80 431.6 > 264 25.7 4.65
10 40 le78 1.0 28.06 > 163 4.51 0.90

 

Note. Model parameters: Liregion length in megabases, kisample size, r7
recombination rate ("Yiwith hotspots, g"'7with gene conversion), fipresent—day
frequency of selected allele. Mutation rate #:16 — 8. Selection coefﬁcient: rows
1—6, X : 0.0185; row 7, S : 002; row 8, S : 0.0185; row 9, S : 0.043. n/s means not
supported, coxiZ “17“ is (30.62 with Markov approximation with u : 0.001.

2.5 Modeling of selection

Selection is implemented using the structured coalescent
approach (Teshima and Innan, 2009). At start of simulation,
sampled chromosomes are partitioned into two classes based
on their allelic state at the selection site. Coalescence happens
only within the same allelic class, with coalescence rate based on
the frequency trajectory of the causal allele. The frequency tra—
jectory of the selected allele can be deterministic (based on causal
allele age and present—day frequency), or can be provided exter—
nally; the latter mode permits the use of stochastic trajectories
generated for any selection model.

2.6 Implementing the Markovian approximation

We implement an approximation to the coalescent, in which
coalescences are restricted to occur between nodes whose genetic
information overlaps or nearly overlaps. This approximation was
proved equivalent to the Markovian simulation of coalescent
along the chromosome (McVean and Cardin, 2005). By modify—
ing only the coalescence step within an existing coalescent
simulator that supports selection, we add the ability to approxi—
mate the coalescent while preserving support for simulating
selection. The approximation speeds up computation by
reducing the number of coalescence and recombination events
generated during simulation. For two nodes p, q where 1)" << (1”,
repeated cycles of c0al(p, q, r) followed by recomb(r, x, p, q)
where p" g x f q” are avoided. Such cycles do not change the
output when no coalescences involving r happen between
coal(p, q, r) and recomb(r, x, p, (1). In general, ignoring such
cycles yields an approximation, the quality of which is
checked empirically.

Sampling restricted coalescences requires knowing, at each
simulation step, the number of coalesceable node pairs. We
maintain this information incrementally using a dynamic data
structure based on augmented interval trees. We define a hull
of a node n as H(n) = [nb, 11" + u] where u is a parameter control—
ling the amount of approximation (smaller 14 means greater
approximation). We declare two nodes coalesceable if their

 

3428

ﬁm'spzumol‘pmjxo'sopeuuopuorq/ﬁdnq

Cosi2

 

hulls overlap; 14 therefore specifies the maximum separation
between coalescing nodes, as a fraction of the total length of
the simulated region. We can dynamically maintain the count

of coalesceable node pairs. Initially, the count equals (lid).

Adding a hull [nb, n"] adds |G| — |{n’| n/"<n”}| — |{n’ |n/b>n"}|
to the count of hull intersections (Layer et al., 2013). Hull re—
moval is analogous. Because all coalescent operations (crossover,
gene conversion, coalescence and migration) can be implemented
as a sequence of hull additions and removals, we can maintain
the count of coalesceable node pairs with only logarithmic over—
head. Selecting a coalesceable pair uniformly at random requires
maintenance of additional information; description of the imple—
mentationialso requiring only logarithmic time and space over—
headiis given in Supplemental Information.

3 SUMMARY

cosi2 provides a combination of performance and sup—
ported demographic scenarios unavailable with existing

selection—supporting simulators. We hope it becomes a useful
tool for population geneticists studying positive selection.

Funding: PCS is funded by an NIH Innovator Award
1DP2OD006514—01 and by a Broad Institute SPARC award.

Conﬂict of interest: none declared.

REFERENCES

Ewing,G. and Hermisson,J. (2010) MSMS: a coalescent simulation program includ—
ing recombination, demographic structure and selection at a single locus.
Bioinformutim‘, 26, 206$2065.

Layer,R.M. et a]. (2013) Binary interval search: a scalable algorithm for counting
interval intersections. Bioiiy’ormuticx, 29, 177.

McVean,G.A. and Cardin,N.J. (2005) Approximating the coalescent with
recombination. Pltilox. Tram“. R. Soc. Lond. B Biol. Sci, 360, 138771393.

Pugh,W. (1990) Skip lists: a probabilistic alternative to balanced trees. Commun.
ACM, 33, 668$76.

Teshima,K. and Innan,H. (2009) mbs: modifying Hudson’s ms software to generate
samples of DNA sequences with a biallelic site under selection. BMC
Bioinformutim‘, 10, 166.

Yang,T. et a]. (2014) Critical assessment of coalescent simulators in modeling
recombination hotspots in genomic sequences. BMC Bioinformutim‘, 15, 3.

 

3429

ﬁm'spzumol‘pmjxo'sopeuuowrorq/ﬁdnq

