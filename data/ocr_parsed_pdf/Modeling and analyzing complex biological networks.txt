ORIGINAL PAPER

Vol. 26 no. 16 2010, pages 2037-2041
doi: 1 0. 1 093/bioinformatics/btq333

 

Systems biology

Advance Access publication July 2, 2010

Modeling and analyzing complex biological networks
incooperating experimental information on both network topology

and stable states
Yi Ming Zou*

Department of Mathematical Sciences, University of Wisconsin—Milwaukee, Milwaukee, WI 53201, USA

Associate Editor: Trey Ideker

 

ABSTRACT

Motivation: Linking the topology of a complex network to its long-
term behavior is a basic problem in network theory, which has been
on the focus of many recent research publications. To obtain a
suitable Boolean model for a biological system, one must analyze
the initial model and compare it with other experimental evidence,
and if necessary, make adjustments by changing the topology of
the wiring diagram. However, our knowledge on how to link the
topology of a network to its long-term behavior is very limited
due to the complexity of the problem. Since the need to consider
complex biological networks has become ever greater, develop
both theoretical foundation and algorithms for model selection and
analysis has been brought to the forefront of biological network study.
Results: This article proposes a novel method to study intrinsically
the relationship between experimental data and the possible Boolean
networks, which can be used to model the underlying system. Simple
and easy to use criteria for a Boolean network to have both a given
network topology and a given set of stable states are derived. These
criteria can be used to guide the selection of a Boolean network
model for the system, as well as to gain information on the intrinsic
properties, such as the robustness and the evolvability, of the system.
A Boolean model for the fruit fly Drosophila melanogaster is used to
explain the method.

Contact: ymzou@uwm.edu

Received on March 16, 2010; revised on June 12, 2010; accepted
on June 15, 2010

1 INTRODUCTION

Boolean networks were introduced as random models of genetic
regulatory networks to study biological systems by Kauffman
(1969), and in recent years, we have seen a rapid increase of
applications of Boolean networks to modeling and analyzing
biological systems, as well as a rapid increase of research activities
aim at developing foundational theories and algorithms for Boolean
networks to address questions arise from biological applications.
See for example, Bonneau (2008), Davidson and Levine (2008),
Karlebach and Shamir (2008), Kinoshita et a1. (2009), Purnick and
Weiss (2009), Tomlin and Axelrod (2007) and the references therein.

The construction of a Boolean model for a biological system, such
as a gene regulatory network, is based on the experimental evidence
on the interactions among the genes (Albert and Othmer, 2003;

 

*To whom correspondence should be addressed.

Mathematical
Formulas

<:| Compulatuon

 

 

 

 

 

 

Fig. 1. The middle block depicts a simpliﬁed Boolean network, which
was formulated to model the expression pattern of the segment polarity
genes in the fruit ﬂy Drosophila melanogaster (Albert and Othmer, 2003).
The interactions among the genes are speciﬁed by the lines. Arrows mean
activations and blunts mean inhibitions. To distinguish the different actions of
the genes among themselves and to make it clear from the diagram which of
the logical operations V, /\ and -' should be used in formulating the updating
functions, two copies of each of the genes wg3, wg4, PTC] and PTC2 were
drawn, with the assumption that the identical copies were to be combined
by the logical operation V. More details are provided in the Supplementary
Material.

Aldana and Cluzel, 2003; Feist et al., 2009; Karlebach and Shamir,
2008; Kauffman, 1969). The data can be integrated into a diagram,
which is similar to an electrical wiring diagram (Bennett and Hasty,
2008; Hasty et (11., 2002), and logical functions that deﬁne a Boolean
network for the biological system can then be formulated according
to the topology (how it is wired) of the diagram (Fig. 1).

For a system that only partial information was obtained through
experiments, the Choice of a Boolean network for the system is non-
unique, assumptions must be made in order to construct a wiring
diagram, and linking the topology of the wiring diagram to the
stable states of the network constructed from it becomes crucial (Pal
et al., 2005; Pomerance et al., 2009; Strogatz, 2001). If the system
under consideration is small, then we can use the exhaustive method
to study the system effectively. For systems occurring in biology,
which are typically large, developing general theory to guide our
study is important. However, for complex systems, only in some
special cases, we have a Clear picture of how to derive information
on the long-term behavior of a network from the topology of the
corresponding wiring diagram.

Here, we brieﬂy review some recent publications that are relevant
to this study. Colon-Reyes et al. (2004) studied a family of Boolean
networks for which each updating function (see Section 2 for
deﬁnition) is given by a monomial. A method to derive the dynamical
properties of such a Boolean network from the structure of the
monomials that deﬁne the network was derived there, and thus

 

© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 2037

112 ﬁlo's[Bumo[pJOJXO'sotwutJOJutotqﬂ:duq uteri popeolumoq

9103 ‘{g anﬁnv 110::

KM.Zou

 

provided a link from the network topology to its long-term behavior.
Kauffman et a1. (2004) found that a random Boolean genetic
network model with canalyzing rules is dynamically stable. Nested
canalyzing Boolean networks were ﬁirther studied in Jarrah et al.
(2007b). Nochomovitz and Li (2006) explored the mapping from the
space of network topologies to the space of dynamical phenotypes
for three- and four-node networks using the exhaustive method, and
demonstrated that certain dynamical phenotypes can be generated
by an atypically broad spectrum of network topologies. A review
of the aforementioned and other existing literature shows that as
far as linking the dynamics of a complex network to its topology
and providing efﬁcient algorithm (polynomial time in the number of
nodes) to derive such information are concerned, there has yet to be
substantial progress beyond linear systems and monomial systems.
In fact, the general problem is believed to be non-deterministic
polynomial-time (NP) hard (Tamura and Akutsu, 2009; Zhang et (11.,
2007).

Since a convenient way to handle a Boolean network is to use its
polynomial representation, it is natural to employ algebraic method
to study Boolean networks. Attempts had been made to utilize the
existing algebraic geometry tools to develop algorithms for handling
the computational needs in modeling biological systems with
Boolean networks. Laubenbacher and Stigler (2004) and Jarrah et al.
(2007a) treated ﬁnite dynamical systems on a more general setting
(which includes Boolean networks as a special case) using algebraic
geometry. As of the writing of this article, existing algorithms and
softwares from computational algebraic geometry can only handle
relatively small size systems except Boolean networks, for which
Brickenstein and Dreyer (2009) has developed an algorithm that
speciﬁcally aims at the computations for Boolean polynomials.
According to their statements, their software can handle industrial
size datasets.

There are also other recent studies devoted to deriving information
on the long-term behavior of a biological system from the structure
of a Boolean model. Choudhary et al. (2006) derived a control
algorithm by minimizing a composite ﬁnite-horizon cost ﬁinction
that is a weighted average over the individual networks of a family
of Boolean networks possessing a common set of stable states (see
Section 2 for deﬁnition). Xiao and Dougherty (2007) studied the
impact of function perturbations in Boolean networks by focusing
on function perturbation in the form of a one-bit Change of the truth
table and investigated its impact on the stable states. These studies
can be viewed as attempts to link the topology of a Boolean network
to its set of stable states.

In this article, we address the following question: giving partial
information on a wiring diagram and a set of states, can we formulate
easy to verify conditions (criteria) that will ensure a Boolean network
we construct is consistent with the given information on the wiring
diagram as well as capable of producing the given set of states as
its stable states?

We remark that the problem of generating Boolean networks
with given attractor structure has been studied before. See for
example, Pal et a1. (2005) and the references therein. In particular,
Pal et a1. (2005) provided an analysis of the complexity of the
problem, and developed two algorithms for generating Boolean
networks with prescribed attractor structures based on the truth
table. However, the problem of connecting both information on
the topology of the wiring diagram of a Boolean network and the
set of stable states were not discussed. The algorithms developed

in Laubenbacher and Stigler (2004) and Jarrah et al. (2007a) also
produce Boolean networks that satisfy the property that each of
the given stable states transmitted to itself. The main difference
between the problem considered there and the problem considered
here is that the problem considered here is about the connection
between the given information on a wiring diagram and the given
information on stable states, so the consistency between these two
pieces of information must be considered when a Boolean network
is constructed; while their algorithms start with a given set of
transitions and produce a dependency diagram. Though a given set
of transitions carries partial information on a wiring diagram, the
information is more local in nature compare with the information
carried by the given conditions on the wiring diagram. For instance,
to give the state transitions for the fact that a node is activated by
another node requires using half of the total states in the state space.

In terms of a truth table, the problem we want to address is: given
a partially ﬁlled truth table as well as partial information on the
interactions among the genes considered, how can we complete the
table so the resulting Boolean network is both consistent with the
information on the known interactions and capable of producing the
given set of states as its stable states? We develop a new approach for
this problem here. Our approach leads to some easy to apply criteria
for the existence of Boolean networks, which ﬁt the experimental
evidence on gene interactions and are capable of producing the
observed stable states. In a sense, we provide a link from a wiring
diagram to the stable states of the Boolean network constructed
from it. We also describe a method for constructing these Boolean
networks if the criteria are met. Our theoretical results can be used to
derive information on the intrinsic properties of Boolean networks
and are suitable for computer implement. We expect our results to
be useful in real-world applications, such as guiding the selection
of a Boolean model and the construction of synthetic gene Circuits
(Purnick and Weiss, 2009; Tyers and Mann, 2003).

2 MODEL

Boolean networks can be conveniently represented using Boolean
value polynomials, which are suitable for both analysis and
computation. If a Boolean network has n nodes, then we can use
11 Boolean-valued polynomials f1,...,fn in 11 variables x1,...,x,,
to represent it by labeling the nodes as l,2,...,n. The variables
x1,...,xn take the values 0 and l, and the polynomials f1,...,fn
also take the values 0 and 1. We have the options to either
use the logical operations OR (V), AND (A) and NOT (-I), or
the modulo 2 arithmetic operations addition and multiplication to
perform the calculations for Boolean variables and polynomials.
The correspondence is as follows:

)9ij =xin, xiij =xi +Xj+xin, -xl- =xl- + 1.

When studying the dynamical properties of a Boolean network,
we consider the time-discrete dynamical system deﬁned by these
Boolean functions on the state space {0, 1}" (all the sequences of
length 11 formed by 0 and l)

f=(fl,...,f,,):{0,1}"—>{0,1}", (1)
f:(x1(t),...,xn(t))l—> (x1(t+ l), ...,x,,(t+ 1)).

That is, the ﬁinctions fi, 1 3i 3 11, give the updating rules for the
nodes, and the state of the i-th node at time [+1 is given by the

 

2038

112 ﬁlo's[Bumo[pJOJXO'sotwutJOJutotqﬂ:duq uteri popeolumoq

9103 ‘{g anﬁnv 110::

Linking topology to stable states for complex networks

 

ﬁinction value fi(x1 (t), ...,x,, (t)). For gene regulatory networks, the
variables x1,...,x,, represent the genes and the functions f1,...,f,,
give the gene regulatory rules. If xi=l the corresponding gene is
expressed (ON), and if x,- = 0 the gene is not expressed (OFF). The
state space graph of a Boolean network 1' is a directed graph with
the vertices given by the set {0, 1}". There is a directed edge from
vertex V1 to vertex V2 if the value of f at V1 is V2.

3 APPROACH

To explain our approach, we begin by examining the transition from
the experimental data to a wiring diagram, and we want to transform
the experimental data to the information on the updating functions
on certain subsets of the state space {0, 1}" instead. We observe that
giving a wiring diagram is the same thing as giving the information
on the values of each updating ﬁinctionfi on certain subsets Ul- and
V,- of {0, 1}", for all lfifn.

Let us consider the wiring diagram in Figure l as an example.
The indication that wg3 is self activated in the wiring diagram in
Figure 1 can also be represented by the fact that the expression of
wg3 is ‘on’ for all those states (sequences of 0 and l of length 6),
which have a l at the third spot. In terms of updating functions, that
means the updating ﬁinction f3 takes the value 1 for all states of the
form *>l< l *>l<>l<, where the *’s can be either 0 or 1.

We shall assume that fl- takes the value 0 on all the states in U i, i.e.
the expression of corresponding gene is ‘off’ for these conditions;
and takes value 1 on all the states in Vi, i.e. the expression of
the corresponding gene is ‘on’ for these conditions. Since fi takes
different values on Ul- and Vi, this pair of sets is disjoint, i.e.
Ul- (1 V,- = (A (empty set), and this is true for all 1 f i f n. If the union
U l- U V,- = {0, 1}", then the values of fi on all the states are known, and
fl- is completely determined. If this happens for all 1 f i f n, then all
the updating ﬁinctions are completely determined, and there is only
one Boolean network ﬁts the given data. However, if only partial
information is known, then UiUVl- g {0, 1}" for at least one index
i, and there are many Boolean networks ﬁt the data. In this case,
the number of the Boolean networks that ﬁt the data depends on
how much information we know about the biological system; and
to choose a Boolean network (or to construct a wiring diagram), we
need to make assumptions on those values of the ﬁ’s that have yet
to be supported by experimental evidence in order to enlarge the
subsets Ul- and V,- to, say [A],- and ‘7,- respectively, make the equality
0iuv,={0,1}" hold for all 1 gign.

The other piece of experimental evidence, namely the observed
stable states of the biological system, is a subset of states, say S, of
the entire state space. To say that a Boolean network given in the
form of a polynomial function as in (l) is capable of producing the
states of S as its stable states is to say that the states in S are solutions
(may or may not be all the solutions) of the system of equations
fi(x1,x2,...,xn)=xi, lfifn. (2)
That is, they are the so-called ﬁxed points of the Boolean network.

This is where the complexity occurs. Though it is possible to
check the states in S to see if they are solutions of the system
of equations given by (2), in the cases where some or all of the
states in S are not solutions of the Boolean network at hand, without
ﬁirther theoretical guidance, it will be difﬁcult to make modiﬁcations
on the assumptions we made in the construction of the wiring

diagram so the new Boolean network will be more consistent with
the experimental data, especially for large size networks.

To link the topology of a wiring diagram with the stable states
of the corresponding system, we propose to consider n pairs of
disjoint subsets Ui, Vi, 1 3i 3 n, of {0, 1}", which carry the original
information we use to construct a wiring diagram. We also have a set
S of observed stable states, which we want our Boolean network to
be capable of producing as its stable states. Then our goal is to derive
some equations that relate the information carried by the given sets
Ui, Vi, lfifn, and S.

4 MAIN RESULTS
4.1 Theoretical Results

To describe our ﬁrst result, we need to construct n pairs of disjoint
sets from S as follows. For each index i, let S130 be the subset of
states in S with a 0 at the i-th spot, and let S131 be the subset of
states in S with a l at the i-th spot. Note that some of these sets
may be empty. For instance, in the case of the Boolean model for
the expression pattern of the segment polarity genes in Drosophila
melanogaster, the set of experimentally observed stable states is
S: {000101,000011,001100} (Albert and Othmer, 2003), thus for
the index i: 1, since the ﬁrst spots of the states in S are all 0, we
have S130=S and S1i1=lZJ.

To distinguish between the set of the stable states that a Boolean
network 1' produces from the given set S in our statements, we write
S (f ) for the set of stable states of 1'. We are now ready to state our
ﬁrst result.

THEOREM 1. Suppose we are given pairs of disjoint subsets Ul- and
V,- of {0, 1}", l f i f n. Assume that there is at least one index i, such
that the union UiﬂVl-Q{0,1}". Then the existence of a Boolean
network 1' = (fl , . . . ,fn) such that the following conditions hold:

(1) fl- takes the value00n Ul- and takes the value 1 on Vi, lfifn;
and

(2) f is capable of producing the states in S as its stable states,
namely S g S (f ),

is equivalent to the conditions:
U,ﬂS,-31=1ZJ and ViﬂSL0=lZJ for all lfifn.

To give the detail for the proof of this theorem and to describe a
method of constructing these Boolean networks if the conditions of
the theorem are satisﬁed, we will need more preliminary information
and notation, thus we prefer to provide them in the Supplementary
Material.

Next, we describe a condition for the existence of Boolean
networks that satisfy the known information on a wiring diagram
with precisely S as its stable state set. This condition offers other
interesting information. For instance, it gives insight into the
robustness of a biological system from a Boolean model: the closer
of the Boolean model is to being satisfying the condition the more
stable the system is, since in that case, the chance of the system
ends up in a stable state other than the ones in S is smaller under
perturbations of states (changes of the initial condition or state);
while ﬁirther away from the condition the more sensitive the system
is to perturbations, and thus has a greater chance of evolving into
new ﬁinctions (Oikonomou and Cluzel, 2006; Pomerance et al.,
2009; Xiao and Dougherty, 2007).

 

2039

112 ﬁlo's[Bumo[pJOJXO'sotwutJOJutotqﬂ:duq mot} pop1201umoq

9103 ‘1g15n8nv 110::

KM.Zou

 

Some extra notation are needed before we can state this result.
Let U130 be the subset of states in U} with a 0 at the i-th spot, and let
V31 be the subset of states in V}- with a 1 in the i-th spot, 1 f ign.

THEOREM 2. Under the assumption that the conditions in Theorem I
are satisﬁed, the existence of a Boolean network f such that S (f) = S
is equivalent to

n
ﬂ<U.-,0UV.-,1>gs.

i=1

The proof of this theorem will also be given in the Supplementary
Material.

4.2 Algorithm

The theoretical results stated in the two theorems above can be
readily implemented, and we now summarize the general procedure
provided by the theorems for checking if we can construct a Boolean
network from partial information (such as experimental data), which
is both capable of producing the given set S of states as its stable
states and consistent with the partial information on the interactions
among the nodes, or we need to modify some of our assumptions on
the network and/or gather ﬁirther information (such as ﬁnding the
missing links of interactions).

(1) For each lfifn, deﬁne subsets U}, U130, V}, Vial, S30, and

S131 from the given information as follows.

0 The set U} is all the states such that the i-th updating
function f}- takes the value 0 and the set V}- is where f}- takes
the value 1.

0 Let U30 be the subset of those states in U} with a 0 at the
i-th spot, and let V31 be the subset of those states in V}- with
a 1 on the i-th spot.

0 Let S30 be the subset of states in S with a 0 at the i-th spot,
and let S131 be the subset of states in S with a 1 at the i-th
spot.

(2

V

Compute the intersections U} ﬂSl-gl and ViﬂSl-SO for all
1 f i f n.

(3) Compute ﬂ?=1(U}-,0 U V}, 1).

(4) If all the intersections computed in Step (2) are empty,
then there exist Boolean networks which both ﬁt the given
information on interactions among the nodes and are capable
of producing the states in S as their stable states. If not, one
can modify the sets U} and V} by taking into consideration of
further information (the computed result in Step (2) can be
used a guide for further data collection).

(5) If all the intersections computed in Step (2) are empty and the
intersection computed in Step (3) is a subset of S, then there
exist Boolean networks which both ﬁt the given information
on interactions among the nodes and are capable of producing
precisely the states in S as their stable states. If not, one can
modify the subsets U} and V}, as mentioned in Step (4) as
needed, to reduce the size of the intersection computed in
Step (3) so that the intersection is a subset of S.

4.3 Examples

We use a simple example to explain the procedure outlined above.

a, g “a Z": .1.

Fig. 2. (a) The two diagram on the left give the state space graph for the
original model. (b) The diagram on the right gives the state space graph for
the modiﬁed model.

EXAMPLE 4.1. Assume that the Boolean network we start with is
given by the following updating functions:

f1 = x1+x2+x3+x1x2x31
f2 = X1+X1X3+X2X31
f3 = 162 +163 +X1X3 +x2x3 +x1x2x3-

This Boolean network has two stable states 000, and 011 (Fig. 2a).

We remark that in this example, since we start with a given
Boolean network, the unions UiUV} are always equal to the entire
state space ( no other choice for a Boolean network unless we change
the sets U} and V}).

(1) The subsets are
U1={000,011,101,110,111};U10={000,011};
V1 ={001,010, 100}; V11 ={100};

U2={000,001,010, 101}; U20={000,001, 101};

V2={011,100,110,111};V21={011,110,111};
U3 ={000,100, 101}; U30 = {000, 100};

V3={001,010,011,110,111};V31={001,011,111};

S10={0001011};S11=@;S20={000};
S21={011};S30={000};S31={011}-

(2) It can be seen immediately that all the intersections U} ﬂSl-gl
and V} ﬂSl-go are empty as expected.

(3) To compute ?:1(U}-,0UV},1), we ﬁrst compute the unions:
U10UV11={000,011,100};
U20UV21={000,001,011,101,110,111};
U30UV31={000,001,011,100,111}.

Then compute the intersection ﬂ?=1(Ul-,0UVl-11)=
{000,011}. The intersection is equal to S and hence is
a subset of S as expected.

Now suppose we want to change the set of stable states so that
the new stable set contains only one state: S = {000}. Without any
change, the original Boolean network still satisﬁes the conditions
in Theorem I and thus is capable of producing 000 as one of its
stable states. However it does not satisfy the condition in Theorem
2 since {000,011} is no longer a subset of the new set S. There are
many possible ways to change the Boolean network so it produces
just 000 as its stable state. For instance, we can simply move
the state 011 from V2 to U2, then the new union U20UV21 will
no longer contain the state 011 and resulting in the intersection

 

2040

112 /3.10's[Bumo[pJOJXO'sotwutJOJutotqﬂ:duq mot} pop1201umoq

9103 ‘1g15n8nv 110::

Linking topology to stable states for complex networks

 

ﬂ?=1(U}-,0 U V}, 1) = {000}. Ifin addition, we also move 011from V3
to U3, then we get a new Boolean network deﬁned by the updating
rules:

£1 = x1+x2+x3 +X1X2X31
£2 = x1(1+X3 +x2x3)1
£3 = x2+x3 +x1x3:

with the state space graph as in Fig. 2b.

As another example, one can check that the wiring diagram in
Figure 1 satisﬁes the conditions in Theorem 1 for the set

S={000101,000011,001100}

of the experimentally observed stable states but does not satisfy
the condition in Theorem 2. Thus, according to the theorems, the
Boolean network constructed according to the diagram is capable
of producing these stable states as well as other stable states. This
is indeed the case: the corresponding Boolean network produces
10 stable states including the three observed ones. Details of this
example are provided in the MAPLE worksheet as part of the
Supplementary Material.

In general, since the choice of a Boolean network is not unique due
to the fact that we only have partial information on the system, quite
often, the Boolean network we construct for the system will produce
more stable states than observed experimentally. Whether one wants
to modify the network so it produces less stable states depends
on other evidence. It could also turn out these extra stable states
predict something that has not been observed. For the Drosophila
melanogaster example here, there is a discussion for these extra
stable states in Albert and Othmer (2003).

5 CONCLUDING REMARKS

We have developed a new approach to the problem of constructing a
Boolean model for a biological system given partial information on
the wiring diagram and a set of stable states. Our approach leads to
two theorems that provide criteria for a Boolean network to have
both a given network topology and a given set of stable states.
It is clear from the statements of our theorems that virtually no
computation is needed to verify these conditions, especially for real-
word applications, where the given set S (observed stable states)
is usually small compare with the size of the whole space {0, 1}".
For example, the full Boolean network considered in Albert and
Othmer (2003) consists 21 parameters, so the state space is of size
221, while the size of the set of the experimentally observed stable
states is 3. Our theorems have applications in many contexts. For
instance, if one wants to modify the topology of a wiring diagram,
such as adding new links (Bennett and Hasty, 2008; Isalan et al.,
2008), one must make sure that the conditions in the theorem are
satisﬁed, otherwise the model will not be able to produce the desired
stable states. For another instance, one can use them in detecting the
missing links among the genes if the Boolean model constructed
according to a wiring diagram does not produce the observed stable
states: links must exist so that the conditions in the theorem are not
violated.

As the need to consider complex networks becomes inevitable
(Pumick and Weiss, 2009; Strogatz, 2001; Tyers and Mann, 2003),

developing theoretical foundation for networks has now been
brought to the forefront of network study (Porter et al., 2009). Our
results here can be viewed as another step in this direction.

Conﬂict of Interest: none decalred.

REFERENCES

Albert,R. and Othmer,H. (2003) The topology of the regulatory interactions predicts
the expression pattern of the segment polarity genes in Drosophila melanogaster.
J. Theor Biol, 223, 1718.

Aldana,M. and Cluzel,P. (2003) A natural class of robust networks, Proc. Natl Acad.
Sci. USA, 100, 871%8714.

Bennett,M.R. and Hasty,J. (2008) Genome rewired. Nature, 452, 8244825.

Bonneau,R. (2008) Learning biological networks: from modules to dynamics.
Nat. Chem. Biol, 4, 6587664.

Brickenstein,M. and Dreyer,A. (2009) PolyBoRi: A Grobner basis frame-work for
Boolean polynomials. J. Symbolic Comput, 44, 132641345.

Choudhary,A. et al. (2006) Intervention in a family of Boolean networks.
Bioinformatics, 22, 2267232.

Colon-Reyes,O. et al. (2004) Boolean monomial dynamical systems. Ann.
Combinatorics, 8, 425439.

Davidson,E.H. and Levine,M.S. (2008) Properties of developmental gene regulatory
networks, Proc. Natl Acad. Sci. USA, 105, 20063720066.

Feist.A.M. et al. (2009) Reconstruction of biochemical networks in microorganisms.
Nat. Rev. Microbiol, 7, 1297143.

Hasty,J. et al. (2002) Engineered gene circuits. Nature, 420, 2244230.

Isalan,M. et al. (2008) Evolvability and hierarchy in rewired bacterial gene networks.
Nature, 452, 84%845.

Jarrah,A.S. et al. (2007a) Reverse-engineering of polynomial dynamical systems.
Adv. Appl. Math, 39, 477489.

Jarrah,A.S. et al. (2007b) Nested canalyzing, unate cascade, and polynomial functions,
Phys. D, 233, 1674174.

Karlebach,G and Shamir,R. (2008) Modelling and analysis of gene regulatory networks.
Nat. Rev. Mol Cell Biol, 9, 77w780.

Kauffman,S.A. (1969) Metabolic stability and epigenesis in randomly constructed
genetic nets. J. Theor Biol, 22, 437467.

Kauffman,S. et al. (2004) Genetic networks with canalyzing Boolean rules are always
stable. Proc. NatlAcaa. Sci. USA, 101, 17102417107.

Kinoshita,S-i. et al. (2009) Intrinsic properties of Boolean dynamics in complex
networks. J. Theor Biol, 256, 3514369.

Laubenbacher,R. and Stigler,B. (2004) Acomputational algebra approach to the reverse
engineering of gene regulatory networks. J. Theor Biol, 229, 5234537.

Nochomovitz,Y.D. and Li,H. (2006) Highly designable phenotypes and mutational
buffers emerge from a systematic mapping between network topology and dynamic
output. Proc. Natl Acad. Sci. USA, 103, 41804185.

Oikonomou,P. and Cluzel,P. (2006) Effects of topology on network evolution. Nat.
Phys, 2, 5327536.

Pal,R. et al. (2005) Generating Boolean networks with a prescribed attractor structure.
Bioinformatics, 21, 40214025.

Pomerance,A. et al. (2009) The effect of network topology on the stability of discrete
state models of genetic control. Proc. Natl Acad. Sci. USA, 106, 820948214.

Porter,M.A. et al. (2009) Communities in networks. Not. Am. Math. Soc., 56,
108241097.

Purnick,P.E.M. and Weiss,R. (2009) The second wave of synthetic biology: from
modules to systems. Nat. Rev. Mol Cell Biol. 10, 410422.

Strogatz,S.H. (2001) Exploring complex networks. Nature, 410, 2684276.

Tamura,T. and Akutsu,T. (2009) Detecting a singleton attractor in a Boolean network
utilizing SAT algorithms. IEICE Trans. F undam. Electron. Commun. Comput. Sci.,
E92-A, 4934501.

Tomlin,C.J. and Axelrod,J.D. (2007) Biology by numbers: mathematical modelling in
developmental biology. Nat. Rev. Genet, 8, 3314340.

Tyers,M. and Mann,M. (2003) From genomics to proteomics. Nature, 422, 1934197.

Xiao,Y. and Dougherty,E.R. (2007) The impact of function perturbations in Boolean
networks. Bioinformatics, 23, 126571273.

Zhang,S-Q. et al. (2007) Algorithms for ﬁnding small attractors in Boolean networks.
EURASIP J. Bioinform. Syst. Biol, 2007, doi:10.1155/2007/20180.

 

2041

112 /3.10's[Bumo[pJOJXO'sotwuiJOJutotqﬂ:duq mot} popeo1umoq

9103 ‘1gisn8nv 110::

