Bioinformatics, 32(9), 2016, 1293—1300

doi: 10.1093/bioinformatics/btwOOQ

Advance Access Publication Date: 14 January 2016
Original Paper

 

Genome analysis

Realizing privacy preserving genome-wide
association studies

Sean Simmons and Bonnie Berger*

Department of Mathematics and CSAIL, MIT, Cambridge, MA, USA

*To whom correspondence should be addressed.
Associate Editor: John Hancock

Received on 13 August 2015; revised on 5 January 2016; accepted on 6 January 2016

Abstract

Motivation: As genomics moves into the clinic, there has been much interest in using this medical
data for research. At the same time the use of such data raises many privacy concerns. These cir—
cumstances have led to the development of various methods to perform genome—wide association
studies (GWAS) on patient records while ensuring privacy. In particular, there has been growing
interest in applying differentially private techniques to this challenge. Unfortunately, up until now
all methods for finding high scoring SNPs in a differentially private manner have had major draw—
backs in terms of either accuracy or computational efficiency.

Results: Here we overcome these limitations with a substantially modified version of the neighbor
distance method for performing differentially private GWAS, and thus are able to produce a more
viable mechanism. Specifically, we use input perturbation and an adaptive boundary method to
overcome accuracy issues. We also design and implement a convex analysis based algorithm to
calculate the neighbor distance for each SNP in constant time, overcoming the major computa—
tional bottleneck in the neighbor distance method. It is our hope that methods such as ours will
pave the way for more widespread use of patient data in biomedical research.

Availability and implementation: A python implementation is available at http://groups.csail.mit.

 

edu/Cb/DiffPrivl.
Contact: bab@csail.mit.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Genome—wide association studies (GWAS) are a cornerstone of
genotype—phenotype association in humans. These studies use vari—
ous statistical tests to measure which polymorphisms in the genome
are important for a given phenotype and which are not. With the
increasing collection of genomic data in the clinic, there has been a
push towards using this information to validate classical GWAS
findings and generate new ones (Weber et (11., 2009). Unfortunately,
there is growing concern that the results of these studies might lead
to loss of privacy for those who participate in them (Erlich and
Narayanan, 2014; Homer et (11., 2008; Lumley and Rice, 2010).
These privacy concerns have led some to suggest using statistical
tests that are differentially private (Jiang et (11., 2014; Johnson and
Shmatikov, 2013; Tramer et (11., 2015; Uhler et (11., 2013; Wang

©The Author 2016. Published by Oxford University Press.

at 111., 2014; Yu and Ji, 2014; Yu et (11., 2014). On the bright side,
such methods, properly used, can help ensure a high degree of priv—
acy. Moreover, recent work has suggested that differentially private
methods can be used to help avoid overfitting and related problems
that plague much of biomedical science (Dwork et (11., 2015). These
gains, however, have traditionally come at a high cost in utility and
efficiency. Moreover, since the genome is extremely high dimen—
sional, this cost is especially pronounced, as was noted in previous
works (Uhler et (11., 2013). In order to help balance utility and priv—
acy, new methods are needed that provide greater utility than cur—
rent methods while achieving equal or greater privacy.

Here we improve upon the state of the art in differentially pri—
vate GWAS. We build on previous work (Johnson and Shmatikov,
2013), which applied the ideas of differential privacy to common

1293

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.U/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /3.10'speum0fp1q1x0"sotJBurJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnv 110 ::

1294

S.Simmons and B.Berger

 

analysis approaches in case—control GWAS. In particular, we show
how to use non—convex optimization to overcome many of the limi—
tations of their method for picking high scoring SNPs in a differen—
tially private way, making the approach computationally tractable
(Johnson and Shmatikov 2013; Yu et (11., 2014). Unlike previous
work (Yu and Ji, 2014), we are able to achieve this while protecting
the genomic data of all study participants. Second, we demonstrate
how to give improved significance estimates for the chosen SNPs
using input, as opposed to output, perturbation—based methods.
Taken together, these results substantially advance our ability to
perform differentially private GWAS.

1.1 Previous work

Previous works have looked at using differentially private versions
of the Pearson  and allelic test statistics (defined below) to find
high scoring SNPs, beginning with the work of Uhler et al. Since
then numerous others have worked on this problem (Jiang et (11.,
2014; Johnson and Shmatikov, 2013; Wang et (11., 2014; Yu and Ji,
2014; Yu et (11., 2014), and there has even been a competition where
teams attempted to improve on the state of the art (Jiang et (11.,
2014). There have also been suggestions of using similar perturb—
ation based techniques in other areas of biomedical data analysis
(Wieland et (11., 2008).

Previous works focused on using three different approaches for
picking high scoring SNPs—namely a neighbor distance based one, a
Laplacian mechanism based one, and a score—based one (see Yu et (11.,
2014 for details). These studies have suggested the score—based
method is an improvement on the Laplacian—based method. The rela—
tion between the neighbor—based method and the other two is more
complicated, however. Though it often outperforms them, it turns
out that the ranking of SNPs favored by the neighbor method is not
always the same as that favored by the other methods. Moreover, the
neighbor method is more computationally demanding, leading others
to use approximate versions of it (Yu et (11., 2014).

Previous work on speeding up the neighbor method has assumed
that the control groups genotypes are publicly available (Yu and Ji,
2014). Though this assumption is reasonable for some studies (if one
uses a public database, such as the 1000 genomes cohort, for the con—
trols), it does limit the settings in which their technique can be applied.

Beyond just choosing high scoring SNPs, others have also looked
at ways of estimating significance after choosing the SNPs of inter—
est. This goal has been achieved by calculating the sensitivity of the
allelic test statistic and applying the Laplace mechanism directly to
it, or by performing similar procedures for P—values (Uhler et (11.,
2013; Yu et (11., 2014).

2 Our contributions

We significantly improve upon the promising neighbor distance
based mechanism for releasing top SNPs (which was introduced by
Johnson and Shmatikov, 2013) and further refined by Yu et al.
(2014) and Yu and Ji (2014). We introduce an adaptive threshold
approach which overcomes accuracy issues arising from the fact that
the neighbor mechanism might favor a different ordering than the
true ordering given by the allelic test statistic. We then introduce a
faster algorithm for calculating the neighbor distance (defined
below) used in this method, making it tractable for large datasets.
Moreover, unlike some previous approaches (Yu and Ji, 2014), our
method ensures the privacy of individuals in both the case and con—
trol cohorts.

This algorithm works in three steps: (i) stating the problem as an
optimization problem; (ii) solving a relaxation of this problem in
constant time; and (iii) rounding the relaxed solution to a solution
to the original problem.

We also show how to obtain accurate estimates of the allelic test
statistic. In particular, we show that the input perturbation based
method greatly improves accuracy over traditional output perturb—
ation—based techniques when applied to the allelic test statistic (as
opposed to some other statistics (Uhler et (11., 2013).

Finally, we apply our methods to real GWAS data, demonstrat—
ing both our greatly improved computational performance and ac—
curacy compared with the state of the art.

3 Methods

3.1 Differential privacy
We begin with a data set D : (d1, . . . ,dn) 6 ID)” for which we want
to calculate f(D) for some f : ID)” —> Q, where Q and ID) are both sets.
For example, JD) might be the set of all possible genotypes. Often,
however, f(D) releases private information about d,- for some i. For
example, if D is a set of patients with a given disease then f(D) may
reveal the fact that d,- is in D, and thus has the disease. In order to
deal with this worry we want to release a perturbed version of f, let
us call it F, that does not have the same privacy concerns. This idea
is formalized using differential privacy (Dwork and Pottenger,
2013). We say that D and D’ : ( ’1,. . . ,d;) are neighboring data—
bases if they differ in exactly one entry (aka there is exactly one i
such that d,- # d,’). We then have the following definition.
DEFINITION 1. A random function F 21D)” —> Q is e—differentially
private for some 6 > 0 if, for all neighboring databases D and D’
and all sets S Q 9, we have that

P(F(D) e S) g exp(e)P(F(D’) e S)

Intuitively, the above definition says that if D and D’ differ by
one entry then F(D) and F(D’) are statistically hard to distinguish.
This ensures that no individual has too large an affect on F(D), so
no participant loses too much privacy. The parameter e is a privacy
parameter: the closer to 0 it is the more privacy is ensured, while the
larger it is the weaker the privacy guarantee. Clearly this means we
would like to set e as small as possible, but unfortunately this comes
at the cost of having less useful output. The problem of figuring out
the correct 6 to use is quite tricky (Hsu et (11., 2014).

Our goal is to find a differentially private F that closely approxi—
mates  One of the simplest ways to do this is with what is known
as the Laplacian mechanism (Dwork and Pottenger, 2013).
Formally, if Q g Rk, we define the sensitivity of a function f,
denoted Af, to be equal to

I
M = DﬁDrlrllgthbmlﬂD) -f(D)l1

More than that, let LapkUt) 6 We be a random variable that re—

turns a k—dimensional vector with probability density, pk”) , given by

lxll

Pia/Xx) 0< eXP (— T)

We let Lap(l) : Lap1(l). The Laplacian mechanism works by
letting

F<D> : f(D) + Lap}. 

Theorem 1 (Dwork and Pottenger, 2013). If F is defined as above
than F is e—differentially private.

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq 11101} popcolumoq

91oz ‘Og Isnﬁnv 110 ::

Realizing privacy preserving GWAS

1295

 

3.2 Allelic test statistic

The allelic test statistic is used to test for associations between SNPs
and disease status. In order to define it, assume we have a case—con—
trol cohort. For a given SNP let so, 51 and 52 be the number of indi—
viduals in the control population with 0, 1 or 2 copies of the minor
allele, respectively. Similarly, let r0, r1 and Q be the corresponding
quantities for the case cohort, and n0, 711 and 712 be the same quanti—
ties over the entire study population. Let S be the number of cases, R
the number of controls, and N the total number of participants. We
assume that R, S and N are known.

The allelic test statistic is given by

2N((2ro + ms — (250 + 51)R)2

Y :
(70771772750751.52) RS<2nO+me +2n2)

Note that Y only depends on x : 2m + n and y : 250 + 51, so
we can overload notation and let

7 2N(xS — yR)2
W”) ‘ RS(x +y)(2N — x _ y)

3.3 Neighbor distance

Our goal is to pick the top mm highest scoring SNPs (where mm is a
user chosen parameter). In order to do this we shall use the neighbor
method. We begin by introducing some notation. For a set, S, we
use (S) to denote the number of elements in S. Similarly, for a vector,
11, let (u) denote the length of 11. Moreover, for a given study cohort,
denoted D, let Y,(D) be the allelic test statistic of the ith SNP.

The neighbor method for picking SNPs (Johnson and Shmatikov,
2013) starts with a user defined threshold, co. All SNPs with an al—
lelic score higher than co are considered significant, while all others
are considered not significant.

In order to understand how the neighbor method works, we
must define the neighbor distance. The neighbor distance of a given
SNP to the threshold co is the minimum number of individuals whose
genotypes need to be changed in our database to ﬂip a given SNP
from significant to not significant or vice versa—i.e. to say the min—
imum Hamming distance from our databases to a significant data—
base if the SNP is not significant or vice versa. We can then use this
distance measure to pick our SNPs in a differentially private manner,
as shown in Algorithm 1.

Intuitively, the idea is that the neighbor distance is closely related
to the allelic test statistic. For significant SNPs, the more strongly

 

Algorithm 1. The neighbor method for picking top mm SNPs
(Johnson and Shmatikov, 2013)

 

Require: Data set D, number of SNPs to return mm, privacy
value 6, and boundary co.
Ensure: A list of mm SNPs that is e— differentially private.
fori:0,...,m do
if Y,(D) > co then
dz" 2 ﬁg,“ ({lD - 13’) I Yi(D’) < 60) W) 2 WW

 

else
d,- : 1 — ugn ({lD — Di 2 my) > w, W : lDl})
end if
end for
Let co,- : exp (him if), for all 1'.

Choose mm SNPs without replacement, where
Pr(ChooseSNPi) 0( an.
return Chosen SNPS

 

 

 

the SNP is associated to the disease, the larger the neighbor distance
tends to be. Conversely, for SNPs that are not significant, a stronger
association tends to correspond to a smaller neighbor distance. The
neighbor mechanism harnesses this intuition by attempting to pick
significant SNPs with large neighbor distances and SNPs that are
not significant but have small neighbor distance.

3.4 Modified neighbor method

Though the neighbor method is much more accurate than other
methods for most databases, it sometimes leads to incorrect results
(Yu et (11., 2014). This is due to the fact that the ordering given by
the allelic test score differs slightly from the ordering given by the
neighbor distance. We show, however, that this can be dealt with by
slightly changing Algorithm 1. Instead of picking a boundary co be—
forehand, we use part of the privacy budget to choose an optimal
boundary, wdp, with the Laplacian mechanism (more details in the
Supplementary Materials), then use the rest of the privacy budget to
choose the SNPs. This algorithm is given in Algorithm 2.

 

Algorithm 2. Our modiﬁed neighbor method for picking top
mm SNPs

 

Require: Data set D, number of SNPs to return mm, privacy
values 61 and 62.
Ensure: A list of mret SNPs that is — 51+ eg—differentially
private.
Let co be the mean score of the mmth and mret + 1—st high—
est scoring SNP.
Let wdp be an 51—differentially private estimate of co (use
the Laplacian Mechanism).
return Chosen SNPS using Algorithm 1 with e : 52
and boundary value wdp.

 

 

 

Note, in practice, we pick 6 and let 51 : .15 and 52 : .95. This is
arbitrary, and it would be worthwhile looking at the trade—off be—
tween 61 and 52.

3.5 Quick neighbor distance

The major computational bottleneck of the neighbor method for
picking high scoring SNPs has been the calculation of the neighbor
distance. This bottleneck has led some to calculate approximate
neighbor distances (Yu et (11., 2014) or use methods that leak infor—
mation about the control cohort (Yu and Ji, 2014). We are able to
overcome this bottleneck using Algorithm 3.

To help remedy the situation we introduce a new method for cal—
culating the neighbor distance. Our method involves only a constant
number of arithmetic operations per SNP. To understand our ap—
proach, assume we want to calculate the neighbor distance for a
given SNP and a given threshold, co. To simplify notation, let
p : (r0, r1, 0,50,51,52). Note that the neighbor distance can be ex—
pressed as the solution to the following optimization problem:

. . . 1 ,
mlglgrélﬁlze Z in — 9 l1
subjectto p220,i:1,...,6
96+p’1 +p’2 =Rtp’3 +pil+p’5 =5
x’ = 296+p’17y’ 2 29’3 +91:
um<p><Y<xw> — w) s o

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq 11101} popcolumoq

91oz ‘Og anﬁnv 110 ::

1296

S.Simmons and B.Berger

 

 

Algorithm 3. Calculates the neighbor distance for SNPs in
constant time

 

Require: p : (ro,r1,r2,so,s1,52) with p,- Z 0 for i: 0, . . . ,5;
N, R and S deﬁned as usual; and threshold co 2 
Let g(x, y) : g1 + g2 (y) be deﬁned as in the text.
Let C denote the curve deﬁned by

2N(xS — yR)2 : RSw(x + y)(2N — x — y)

Find the set P of all points 17 E [0,2R] X [0, 2S] on the curve
C whose tangent line has slope in

1
12—
{772}

Let Q be the set of all p : (170,171) 6 [0,2R] >< [0,2S] O C
and either

170 E {2(1’0 + 1’2) + 1’1,21’o + 1’1,1’1,0,2R}

or
171 6 {2(50 +52) +5172$o +5175170725}

g : minpePuQ fg(l7)l
if Y(p) < co then
return g
end if
for5 E {g,...,g+5} do
if exists feasible x,y E Z with [31 + [3201) : 5 then
return 5
end if
end for

 

 

 

where um(p) denotes the sign of Y(p) — co. By removing the integral—
ity constraints and projecting down onto two dimensions we get the
following relaxation:

minjrynize g(xr y) = g1(x) + g2(y)

subjectto 0£x£2R;0£y§2S

Mm(p)(Y(xry) - w) E 0

where
_2 _
# 2R—r12x22ro+r1
2ro+r1—x
g1(x): f TISxSZm+71
r2+x—2(ro+72)—’1 ZRZ’CZZR—m
m + 1’1 — x otherwise
and
_2 _
# 2S—s12y22so+51
250+51—
g2(y): f3} $1£y£250+51

52+y—2(so+52)—s1 2SZyZ2S—s1

so + $1 — y otherwise

See the Supplementary Materials for a more detailed derivation.
We say that (x, y) is feasible if it satisfies the constraints for this
relaxed problem.

Algorithm 3 first solves this relaxed problem by iterating over a
small set of possible solutions (each of which can be found in con—
stant time using the quadratic equation and some basic facts about
convex optimization) then rounding to find a solution to the original
problem. A proof of correctness as well as a few other details is
given in the Supplementary Materials. Note that the algorithm in—
volves [31 and [32, where

[g1 + 1 if n : 0 and x — 2m — r1 odd
[3100 I {
fgl else

and

fg2(y)l + 1 if 51 2 0 and y — 250 — 51 odd
320’) I {
l—gZO’H else

Note that our algorithm assumes that co 2  This restriction,
however, is not a problem, since in practice this corresponds to a ra—
ther large p—value (>.05 as long as N > 5). To accommodate this re—
striction, the only change we need to make to the neighbor method
is to round wdp up to % if this condition is not met. It is also
worth noting that this algorithm relies on being able to check, for a
given 5, if there exists a feasible x,y E Z with [31  + [32 (y) : 5. We
show how to check these conditions in the Supplementary
Materials.

THEOREM 2. Algorithm 3 returns the true neighbor distance for
the specified SNP and involves only a constant number of arithmetic
operations.

PROOF. See the Supplementary Materials.

3.6 Input perturbation

In addition to returning high scoring SNPs, we want to return esti—
mates of the allelic test statistic for those high scoring SNPs. In the
past this has been achieved by applying the Laplacian mechanism to
the output allelic test statistic (Yu et (11., 2014). Instead we apply the
Laplacian mechanism to the inputs. The method works as follows:
Let x : 2m + n and y : 250 + 51. Then we see that if x’ and y’ are
the corresponding quantities for a neighboring database that
(x — x’) + (y — y’) S 2. Therefore if we let

2
xdp : x + Lap

and

2
yap = y + Lap (g)

then (xdp, ydp) is a e—differentially private estimate of (x, y). We can
then estimate Y in a differentially private way using the equation

2N(xdpS — ydpr
RS(xdp + ydp)(2N _ xdp _ ydp)

if the denominator is greater than 0, else outputting 0.

3.7 Measuring performance

In order to test our method we use the following standard measure
of performance (Yu et (11., 2014). Let A be the top mm scoring
SNPs, and let B be the mm SNPs returned by some differentially pri—
vate algorithms. We than measure the utility of the algorithm by
considering %. The closer to one this quantity is the better.

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq uIOII pQPBOIII/lAOG

9103 ‘Og anﬁnv 110 ::

Realizing privacy preserving GWAS

1297

 

Note that one might also look at other measures of utility—after
all, the difference between mmth highest scoring SNP and the next
highest scoring SNP may be small, and this measure does not con—
sider that. We use this measure due to its simplicity, and because it
has been used in previous works (Yu and Ji, 2014; Yu et (11., 2014).

3.8 Dataset

We test our methods on a rheumatoid arthritis dataset, NARAC—1,
from Plenge et al. (2007). After quality control it contained 893
cases and 1244 controls. We removed all SNPs with minor allele fre—
quency <0.05. We considered only SNPs that were successfully
called for all individuals. This process resulted in a total of 62 441
SNPs to be considered.

4 Results

4.1 Comparison to the score and

Laplacian—based methods

Our modified neighbor distance method outperforms both the
Laplacian and score based methods (Yu et (11., 2014) for picking
high scoring SNPs. In order to demonstrate this we run our

(a) 

0.3

0.6

0.4

0.2

Accuracy=% SNPs Correct

 

 

0.0
0

 

 

1 2 3 4 5
c (privacy)
(c) 1.0 —._._______
J—l
U
E 0.8
L.
O
U
m
D. 0.5
2
m
39-
II 0.4
in
U
(U
I.—
a
U 0.2
<c
0'00 5 10 15 20 25 30
c (privacy)

algorithm and both the other algorithms for various mm and e to
compare utility.

The results can be seen in Figure 1. We see that in all cases our
modified neighbor method (red) outperforms the Laplacian (green)
and score (blue) based methods by a large margin.

It is worth noting that the accuracy of the score and Laplacian
based methods are fairly consistent with previous work (Yu and Ji,
2014). The most interesting difference is that the score and
Laplacian based methods seem to perform more similarly in our ex—
periments than in previous work (Uhler et (11., 2013; Yu and Ji,
2014; Yu et (11., 2014). This suggests that the relative performance
of each method may be dataset dependent, depending on the number
of SNPs, size of case and control cohorts, and the distribution of P—
values (e.g. if there is a large gap between the score of the top mm
SNPs and the rest of the SNPs one might expect the above methods
to be more accurate).

4.2 Comparison to the traditional neighbor method

Our modified neighbor method also manages to overcome many of
this issues present in the traditional neighbor method, which uses a
predefined cutoff co. To demonstrate this we compare our method to

(b)  22222—

0.3

0.6

=% SNPS Correct

Accuracy
9:

 

 

0.0
0 1 2 3 4

c (privacy)

U!

E

1.0

0.8

0.6

0.4

Accuracy=% SNPs Correct

 

 

0'00 5 10 15 20 25 30

e (privacy)

Fig. 1. We measure the performance of our modified neighbor method for picking top SNPs (red) as well as the score based (blue) and Laplacian based (green)
methods for mrel (the number of SNPs being returned) equal to (a) 3, (b) 5, (c) 10 and (d) 15 for varying values of e. For mret : 3,5 we consider 6 between 0 and 5,
while in the other cases we consider 6 between 0 and 30. We see that in all four graphs our method leads to the best performance by far. These results are aver-

aged over 20 iterations

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Idllq quII pQPBOIII/lAOG

9103 ‘Og anﬁnv uo ::

1298

S.Simmons and B.Berger

 

the traditional method. For the traditional method we use a cutoffs
corresponding to a Bonferroni corrected P—values of.05 and.01 (Yu
et (11., 2014). The results are pictured in Figure 2. When mm : 15,
we see that as 6 increases the utility of our method (red) increases to—
wards one, while the utility of the traditional methods (green for
0.05, blue for 0.01) seem to plateau around 0.85. This result demon—
strates the advantages of using adaptively chosen boundaries, even if
in some cases (m,at E {3, 5, 10}) doing so leads to slightly decreased
utility for small 5. Moreover, by changing the balance between 61
and 62, it seems plausible that even this slight decrease can be mostly
overcome.

4.3 Runtime

Beyond overcoming utility issues, our method is able to improve
runtime on real GWAS datasets by an order of magnitude. To dem—
onstrate this, we look at how long it takes to calculate the neighbor
distance for all SNPs (since this is the time consuming step). In the
past others have had to implement approximate versions of the
neighbor distance to make it run in a reasonable time (Yu et (11.,
2014). We implemented a simple hill climbing algorithm similar to
those used in previous works (Yu et (11., 2014). We then tested it for

 

(a) 

0.8

0.6

0.4

0.2

Accuracy=% SNPs Correct

 

0.0

 

O
..

s (privacy)

 

A
O
V
3“
a

0.3

0.6

0.4

Accuracy=% SNPs Correct

 

 

0.0
0 5 10 15 20 25 30

a (privacy)

2 3 4 5

various values of mm (see Table 1). We see that our method is much
faster than the approximate method, taking only about 3 s in all
cases to estimate the neighbor distances for all SNPs. Moreover, we
see that the approximate method gives results that can greatly differ
from our exact results, as demonstrated by the average error in the
neighbor distance per SNP.

4.4 Input versus output perturbation

Finally, we are able to show that our input perturbation method
compares favorably to previous output perturbation based
approaches. To see this, we looked at the average error of estimating
the allelic test statistic on the top ten highest scoring SNPs for both
input perturbation (green) and output perturbation (blue) (we con—
sidered the top 10 SNPs because we are usually only interested in
the most significant SNPs—the performance is even more lopsided
for arbitrary SNPs). We see that our input perturbation based ap—
proach greatly decreases the error compared with output perturb—
ation based methods for 6 between 0 and 2. It is worth noting that
this result differs from the result of similar comparisons for the
Pearson xz—statistic, since in that case output perturbation seems
preferable (Uhler et (11., 2013). This is likely due to the fact that we

(b)  ~—

0.3

0.6

0.2

Accuracy=% SNPs Correct

 

0.0

 

0 l 2 3 4
e (privacy)

ur

A
n.
v
I"
D

 

0.8

0.6

0.4

Accuracy=% SNPs Correct

 

 

e (privacy)

Fig. 2. We measure the performance of our modified neighbor method for picking top SNPs (in red) as well as the traditional neighbor method with cutoffs corres-
ponding to a Bonferroni corrected P—value of.05 (in green) and.01 (in blue) for mrel (the number of SNPs being returned) equal to (a) 3, (b) 5, (0)10 and (d) 15 for
varying values of e. For mm : 3,5 we consider 6 between 0 and 5, while in the other cases we consider 6 between 0 and 30. We see that in the first three cases the

traditional method slightly outperforms ours. When mrel : 15; however, the traditional methods can only get maximum utility around.85, where as ours can get

utility arbitrarily close to 1. These results are averaged over 20 iterations

:: 112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”K1111] quII pQPBOIII/IAOG

910z ‘09 Isnﬁnv 110

Realizing privacy preserving GWAS

1299

 

Table 1. We demonstrate the runtime of our exact method as well
as the approximate method for various numbers of SNPs as well
as the average error per SNP that comes from using the approxi-
mate method

 

 

mm Our runtime Approximate runtime Approximate error
3 3.0 5 71.15 5 22.15
5 3.05 53.45 13.77
10 3.05 s 38.2 s 7.62
15 3.05 5 31.85 s 5.76

 

We see that in all cases the exact method is much faster than the approxi-
mate method. In addition, its runtime is fairly steady for all choices of mm.
These results are averaged over 20 trials.

10

Error

101

 

 

0. D o. 5 1.0 1.5 2.0
Epsilon

Fig. 3. We compare the accuracy of output perturbation (blue) and input per-
turbation (green), tested on the 10 highest scoring SNPs. We see that the in-
put perturbation approach greatly outperforms the standard output
perturbation approach. This graph was averaged over 1000 runs, and the
error is plotted on a log scale

are adding noise to a 2 by 2 table of inputs, as opposed to a 2 by 3
table (Fig. 3).

5 Conclusion

The above work shows how to make differentially private GWAS
much more realistic, both in terms of accuracy and run time.
Though the tools of differential privacy have been around for years
Mohan et al., 2012, the biomedical community has been slow to
adopt them (Dankar and El Emam, 2014). Though this delay is par—
tially due to the limited knowledge about such approaches in the
biomedical field, perhaps a bigger reason is that current techniques
greatly reduce the utility of data and their analysis. In a field whose
main concern is human health there is extra incentive to give the
most accurate analysis possible—lives could be on the line.

Despite this concern, there are a few important areas where ac—
curate differentially private methods might play a role. The most ob—
vious one is when institutional or legal concerns prevent data from
being published (Gilbert, 2008). When such limitations exist, it
might be possible to release differentially private versions of the data
under consideration instead. The other application where differen—
tial privacy might be useful is when untrusted users query a data—
base. It is this situation that has motivated many of the previous
works on differential privacy (Johnson and Shmatikov, 2013;

Vinterbo et al., 2012), and some of the only applications of data per—
turbation that have been implemented in real world systems (Lowe
et al., 2009; Murphy et al., 2012). In a nutshell, the idea is that users
who might want to use a large medical database to help design a
study (e.g. to come up with hypothesis to test, find participants with
certain traits for a study) or validate results can do so by asking
queries about the database and getting differentially private answers
to those queries. This approach allows researchers access to the
database while minimizing privacy concerns. As an added bonus,
since the queries are being used as a preliminary step, as opposed to
being part of a rigorous analysis, there may be less worry about the
ethical implications of returning inaccurate results. It is even pos—
sible that being able to make such queries will actually lead to more
accurate results downstream.

Acknowledgements

We want to acknowledge Jadwiga Bienkowska for introducing us to the data
set we used, as well as Noah Daniels, Jian Peng and other members of the
Berger lab for useful discussions. We are also grateful to the reviewers for
many helpful comments.

Funding

This material is based upon work supported by the National Science
Foundation Graduate Research Fellowship under grant (1122374) and
National Institutes of Health Grant (GM108348).

Conﬂict of Interest: none declared.

References

Dankar,F. and El Emam,K. (2014) Practicing differential privacy in health
care: a review. Trans. Data Privacy, 5, 35—67.

Dwork,C. et al. (2015) The reusable holdout: preserving validity in adaptive
data analysis. Science, 349, 63 6—638.

Dwork,C. and Pottenger,R. (2013) Towards practicing privacy. ]. Am. Med.
Inform. Assoc., 20, 102—108.

Erlich,Y. and Narayanan,A. (2014) Routes for breaching and protecting gen—
etic privacy. Nat. Rev. Genet, 15, 409—421.

Gilbert,N. (2008) Researchers criticize genetic data restrictions. Nature.
doi:10.1038/news.2008.1083.

Homer,N. et al. (2008) Resolving individual‘s contributing trace amounts of
DNA to highly complex mixtures using high-density SNP genotyping micro-
arrays. Plos Genet., 4, e1000167.

Hsu,J. et al. (2014) Differential privacy: an economic method for choosing ep—
silon. In: Proceedings of 27th IEEE Computer Security Foundations
Symposium. Vienna, Austria., pp. 398—410.

Jiang,X. et al. (2014) A community assessment of privacy preserving tech—
niques for human genomes. BMC Med. Inform. Decis. Mak., 14, 51.

Johnson,A. and Shmatikov,V. (2013) Privacy—preserving data exploration in
genome-wide association studies. KDD, 1079—1087.

Lowe,H. et al. (2009) STRIDE—an integrated standards-based translational
research informatics platform. AMIA Annu Symp Proc., 2009, 391—395.

Lumley,T. and Rice,K. (2010) Potential for revealing individual-level informa-
tion in genome—wide association studies. lama, 7, 65 9—660.

Mohan,P. et al. (2012) GUPT: privacy preserving data analysis made easy. In:
Proceedings of the ACM SIGMOD International Conference on
Management of Data, pp. 349—360.

Murphy,S. et al. (2012) Strategies for maintaining patient privacy in i2b2. ].
Am. Med. Inform. Assoc., 18, 103—108.

Plenge,R. et al. (2007) TRAFl—C5 as a risk locus for rheumatoid arthritis— a
genomewide study. N. Engl. ]. Med., 357, 1199—1209.

Tramer,F. et al. (2015) Differential privacy with bounded priors: reconciling
utility and privacy in genome—wide association studies. 22nd ACM
Conference on Computerand Communications Security, pp. 1286—1297.

112 /310'S[BHJnOprOJXO'SOIJBLUJOJIIIOICI”K1111] 11101} papao1umoq

9103 ‘0g1sn8nv uo ::

1300

S.Simmons and B.Berger

 

Uhler,C. et al. (2013) Privacy—preserving data sharing for genome-wide associ—
ation studies.I. Priv. Conﬁd., 5, 137—166.

Vinterbo,S. et al. (2012) Protecting count queries in study design. I. Am. Med.
Inform. Assoc., 19, 75 0—75 7.

Wang,S. et al. (2014) Differentially private genome data dissemination
through top-down specialization. BMC Med. Inform. Decis. Mak., 14, 51.
Weber,G. et al. (2009) The Shared Health Research Information Network
(SHRINE): a prototype federated query tool for clinical data repositories.

I. Am. Med. Inform. Assoc., 16, 624—630.

Wieland,S. et al. (2008) Revealing the spatial distribution of a disease while
preserving privacy. Proc. Natl. Aacd. Sci. USA, 105, 17608—17613.

Yu,F. and Ii,Z. (2014) Scalable privacy—preserving data sharing method—
ology for genome-wide association studies: an application to iDASH
healthcare privacy protection challenge. BMC Med. Inform. Decis. Mak.,
14,51.

Yu,F. et al. (2014) Scalable privacy—preserving data sharing method-
ology for genome-wide association studies. I. Biomed. Inform., 50,
133—141.

112 /310'S[BHJnOprOJXO'SOIJBLUJOJIIIOICI”K1111] quII papao1umoq

9103 ‘0g1sn8nv uo ::

