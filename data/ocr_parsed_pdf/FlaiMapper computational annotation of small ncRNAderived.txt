Bioinformatics, 31 (5), 2015, 665—673

doi: 10.1093/bioinformatics/btu696

Advance Access Publication Date: 22 October 2014
Original Paper

 

Sequence analysis

FlaiMapper: computational annotation of small
ncRNA-derived fragments using RNA-seq
high-throughput data

Youri Hoogstrate, Guido Jenster and Elena S. Martens-Uzunova*

Department of Urology, Erasmus University Medical Center, Be 362a, PO Box 2040, 3000 CA Rotterdam,
The Netherlands

*To whom correspondence should be addressed.
Associate Editor: lvo Hofacker

Received on May 2, 2014; revised on September 18, 2014; accepted on October 20, 2014

Abstract

Motivation: Recent discoveries show that most types of small non—coding RNAs (sncRNAs) such
as miRNAs, snoRNAs and tRNAs get further processed into putatively active smaller RNA species.
Their roles, genetic profiles and underlying processing mechanisms are only partially understood.
To find their quantities and characteristics, a proper annotation is essential. Here, we present
FlaiMapper, a method that extracts and annotates the locations of sncRNA—derived RNAs
(sncdRNAs). These sncdRNAs are often detected in sequencing data and observed as fragments of
their precursor sncRNA. Using small RNA—seq read alignments, FlaiMapper is able to annotate
fragments primarily by peak detection on the start and end position densities followed by filtering
and a reconstruction process.

Results: To assess performance of FlaiMapper, we used independent publicly available small
RNA—seq data. We were able to detect fragments representing putative sncdRNAs from nearly all
types of sncRNA, including 97.8% of the annotated miRNAs in miRBase that have supporting reads.
Comparison of FlaiMapper—predicted boundaries of miRNAs with miRBase entries demonstrated
that 89% of the start and 54% of the end positions are identical. Additional benchmarking showed
that FlaiMapper is superior in performance compared with existing software. Further analysis
indicated a variety of characteristics in the fragments, including sequence motifs and relations with
RNA interacting factors. These characteristics set a good basis for further research on sncdRNAs.
Availability and implementation: The platform independent GPL licensed Python 2.7 code is
available at: https://github.com/yhoogstrate/flaimapper. Corresponding Linux—specific scripts and
annotations can be found in the same repository.

Contact: e.martens@erasmusmc.nl

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

Sequencing of small non—coding RNAs (sncRNAs) aiming at the
quantification and discovery of microRNAs (miRNAs), small nucle—
olar RNAs (snoRNAs), transfer RNAs (tRNAs) and vault RNAs
(vtRNAs) has revealed that most types of sncRNAs get processed

into smaller RNAs (Chen and Heard, 2013). Initially, it was sug—
gested that these smaller RNAs are degradation products of the
turnover of their precursors. Nevertheless, evidence accumulating
over the last years demonstrates that some RNA fragments are

©The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 555

112 /310'slcu1n0fp103x0"sotwurJOJutotq/ﬁduq 11101} popcolumoq

9103 ‘Og anﬁnv 110 ::

666

Y.Hoogstrate et al.

 

functional and have specific maturation mechanisms indicating
their importance and novelty (Sobala and Hutvagner, 2011; Scott
et al., 2012; Chen and Heard, 2013). Such fragments find their
origin in tRNAs, vtRNAs and snoRNAs and are assumed to have a
variety of functions. Most importantly, deregulation and involve—
ment of different types of fragments have been demonstrated in dif—
ferent types of cancer (Martens—Uzunova et al., 2013). A description
of commonly detected fragments and their precursors is given
below:

' A pre-miRNA is an approximately 75 nt long RNA molecule
produced from its primary precursor transcript (pri—miRNA) by
Drosha (Valen et al., 2011). Pre—miRNAs adopt a hairpin struc—
ture recognized by Dicer that cleaves the terminal loop to release
an approximately 22—nt long double—stranded miRNA duplex.
One of the strands (miRNA) is loaded into AGO to generate the
functional miRISC complex (Lin He, 2004; Fabian and
Sonenberg, 2012). The remaining strand (miRNA’i) is usually
degraded. Often both strands are found as fragments in small
RNA—seq (Friedlander et al., 2008).

' Fragments originating from mature tRNAs are commonly classi—
ﬁed into two subgroups (Sobala and Hutvagner, 2011), tRNA
halves and tRNA—derived RNA fragments (tRFs):

' tRNA halves are most probably produced by angiogenin that
cleaves the tRNA near its anticodon, resulting into halve
tRNAs (~ 35 nt). It is believed that some tRNA halves con—
tribute to translational repression and cell stress response
(Thompson and Parker, 2009; Yamasaki et al., 2009).

' The smaller (~ 20 nt) tRFs are derived from the tRNAs 5 ’— and
3’—end and from the pre—tRNAs 3’—end. It is not completely
understood which proteins are involved in the production of
tRFs, although evidence for associations with both Dicer and
RNaseZ are reported (Sobala and Hutvagner, 2011; Chen and
Heard, 2013). Although the putative functions of the majority
of tRFs are unclear, evidence suggests that some are involved in
RNA interference, with effects on cell proliferation and gene
regulation (Chen and Heard, 2013).

' snoRNA are (60—250 nt) small RNAs found in the nucleolus.
They comprise the subtypes H/ACA—box, C/D—box and small
Cajal body—speciﬁc RNAs (scaRNAs) (Henras et al., 2004).
Putative functions such as regulation of alternative splicing,
post—transcriptional regulation of gene expression and associ—
ations with cancer have been proposed for their fragments
(Ender et al., 2008; Dong et al., 2009; Kishore et al., 2010;
Askarian—Amiri et al., 2011; Brameier et al., 2011; Ono et al.,
2011; Mei et al., 2012; Scott et al., 2012).

Currently, studies on fragments other than miRNA and miRNA” are
restricted to (often visual) interpretation of alignments. Consequently,
the data are inspected only at a global ncRNA level. Not making use
of the annotation of exact fragment coordinates is a shortcoming, since
it restricts analysis at the level of individual fragments. Additional bene—
fit of such analysis is the gained statistical power.

Here, we describe Fragment Location Annotation Mapper
(FlaiMapper) that predicts the locations of sncRNA fragments in small
RNA—seq alignments. Prediction is based on the densities of start and
end positions of aligned reads. It is important to state that the goal is
not to predict any particular subtype of fragment but to annotate data
for subsequent quantitative analysis, by making use of sequencing data
only. Therefore, FlaiMapper does not use 2D structure prediction or
classification based on heuristics of previous discoveries as often is used
for the prediction of pre—miRNAs (Friedlander et al., 2008).

2 Methods

Fragments are measured with small RNA—seq, where the corres—
ponding variable—sized sequences, called reads, are aligned back to a
reference sequence. The reference sequence is used to determine the
reads origin. This reference can be the genome, the transcriptome or
specific regions (e.g. miRNA or tRNA databases). The library used
for our analysis was manually composed (Supplementary informa—
tion). Pre—processing and alignment for each dataset are further dis—
cussed in the Supplementary information.

Analysis was applied to two different publicly available datasets
with SRA accession numbers SRP002175 (Stark et al., 2010) and
SRP006788 (Valen et al., 2011). Dataset SRP002175 contains 12
small RNA—seq samples, taken from human pigment cells. The reads
are 18—23—nt long and processed on the Illumina’s Genome Analyzer
II platform. Dataset SRP006788, processed on the same platform,
contains 18—30—nt long reads, taken from six samples from a HeLa
cell line. In this dataset, the samples have undergone the following
treatments (Valen et al., 201 1):

' SRR2 07111 Total cellular RNA was extracted from HeLa cells.
' SRR2 07112 Total cellular RNA was extracted after RRP40 core
subunit depletion; RRP40 has 3’ —> 5’ exonucleolytic activity.

' SRR2 07113 RNA pool—down obtained from non—treated HeLa
cells after AGO1 and AGO2 immunoprecipitation.

' SRR2 07114 RNA pool—down obtained from RRP40—depleted
HeLa cells after AGO1 and AGO2 immunoprecipitation.

' SRR2 07115 Total cellular RNA was extracted after XRN1 and
XRN2 depletion; XRN has 5’ —> 3’ exonucleolytic activity.

' SRR2 07116 RNA was extracted from the nucleus.

2.1 Formal problem

For convenience, we use the term boundary to describe either a start
or an end position of a fragment, without being specific to one of
them. If an alignment of a fragment is inspected in more detail, its
boundaries are indicated by the corresponding start and end positions
of the aligned reads. Fragment boundaries are variable, as indicated
by the aligned reads (Fig. 1). Read starts and ends are located at vari—
able positions, but close to the boundaries. This results in peaks in the
densities of aligned start and end positions, near the boundaries.
Therefore, it seems more convenient to estimate fragments using the
most common start and end positions instead of the most common
read. The number of read starts or ends at a certain position in the se—
quence (intensity) decreases rapidly and symmetrically with respect to
the position with the highest intensity. As a result, the peaks have
characteristics compatible to a normal distribution, with its expected
value being the position with the highest intensity. Because of the vari—
ability in the alignments and the limited sequencing depth, the data
contain noise (Fig. 2). In FlaiMapper, a fragment is defined as:

1. The region in a precursor ncRNA in-between the most common
start and most common end position, as deﬁned by aligned reads.

2
5'1 9nt3'

 

Fig. 1. 1468 reads aligned to SNORD74 (black line) in dataset SRP006788
(total RNA). The contours of the aligned reads (grey) form three separate
clusters. This may be an indicatorfor the presence of multiple fragments

112 /310'sleu1n0fp103x0'sopeurJOJutotq/ﬁduq 11101} papeolumoq

9103 ‘Og anﬁnv uo ::

FlaiMapper: annotation of ncRNA—derived fragments

667

 

 

 

 

o " 100.000 _ .n " 100
1 o |—‘ ,_
5‘.‘ J datapoints datapoiuts
o _ o
. g _
o l l
3 J L ' "’
l' 1
H L11 .
.JJ —_
5 1 0 -1 0 -5 0 5 10
25 ' N " 5
datapoints datnpnints

L L

Fig. 2. Relation between noise and sequencing depth. Under the assumption
that the variability of reads near a boundary is normally distributed with a
standard deviation of 3, we illustrate effects of noise by binned sampling of this
distribution at different resolutions. The horizontal axes give the offset to a frag-
ment's true position and the vertical axes the number of times an (artificial) in-
tensity is sampled from the distribution. The dashed line represents the
distribution used for sampling. A sequencing technology with an infinite reso-

 

 

 

 

 

 

lution (top left; by approximation) would result into one single peak in the verti-
cal axis. As the sequencing depth decreases, the sampled distribution deviates
further from the true distribution and more peaks in the vertical axis may ap-
pear by chance (top right and bottom). Each illustration belongs to the same
simulated fragment boundary, derived from the same distribution. Because
FlaiMapper expects only one peak per boundary, the remaining peaks, caused
by the deviation from their original distribution, are referred to as noise

Consequently, the problem of finding such fragments is defined as:

2. Given a set of aligned reads to a precursor ncRNA, the challenge
is to estimate a fragment by: (i) ﬁnding the correct candidate start
and end positions, (ii) taking the optimal proportion of noise into
account and (iii) relating the corresponding start and end positions
that belong to the same fragment hack to each other.

2.2 Algorithm

The FlaiMapper algorithm is divided into five sequential steps
(Fig. 3): (i) parsing, (ii) metrics, (iii) peak detection, (iv) filtering and
(v) reconstruction.

2.2.1 Parsing

For every ncRNA, alignments are parsed from input files. There is
no preference towards a specific alignment algorithm as long as its
output is in BAM format.

2.2.2 Metrics
Given an ncRNA with a length of n nt, the following corresponding
vectors are determined:

' Start and stop position densities

1. p5, : (pipgln . .,p§); here, pf, is the total number of reads
that have their M position (5’—end) aligned to position i of
the precursor ncRNA, where lgign.

2. p3, : (p1,,p2',. . .,p2’); here, p?’ is the total number of reads
that have their ﬂ position (3’—end) aligned to position i of
the precursor ncRNA, where lgign.

' Read lengths

1. 15’ : (lf,l§1,...,lf); here, l,-51 is the average read length of
reads that have their start position (5’—end) aligned to

 

 

Fig. 3. Schematic overview of the five steps that FlaiMapper performs per
sncRNA. (i) Parsing: alignment file is parsed; reads (thin lines) are aligned to a
sncRNA (bold line). (ii) Metrics: acquire alignment statistics; for all positions
in the sncRNA: I: find the number of aligned start (red) and end (blue) pos-
itions (referred to as intensity) and Ir: find the average length of mapped reads
(not illustrated). (iii) Peak detection: predict candidate start and end positions
(vertical lines) upon the intensity vectors using peak detection. (iv) Filtering:
remove candidate start and end positions expected to be detected due to
noise. In the example above, a candidate start position is discarded (grey
cross) because it is an artefact of the noise of its neighbour. The remaining
positions are considered as actual start and ends. (v) Reconstruction: recon-
struct predicted fragments (grey bars) by finding corresponding start and end
positions using a balance (purple triangle) between expected distance and
intensity

position i of the precursor ncRNA, where lgign. If no reads
have their start position aligned to nucleotide i, If, : 0.

2. 13’ : (If , 13’ ,. . ., I21); here, If” is the average read length of
reads that have their w position (3’—end) aligned to position
i of the precursor ncRNA, where lgign. If no reads have
their end position aligned to nucleotide i, l?’ : 0.

2.2.3 Peak detection

Candidate start and end positions are characterized by peaks in the
intensity vectors. Therefore, candidate positions are estimated inde—
pendently in directions d : 5’ (start) and d : 3’ (end) on vector pd.
The methodology of independence between start and end positions
used by FlaiMapper is different from methods that rely on (i) the
most common read or (ii) distributions of read density. Because of
this, candidate start and end positions loose their one—to—one rela—
tionship. The purpose of peak detection is to find all positions that
have an intensity higher than its adjacent positions. Because of noise
in the intensities, the difference in intensity with respect to the adja—
cent values must be above a certain threshold. For direction d, the
algorithm detects peaks upon corresponding vector p(1 of length n.
Vector pd should be extended with a 0 at the end, to ensure that a
peak at the very last position can be called. To avoid confusion
about the lengths, we denote qd : {pd,0} and as consequence its
length n’ : n + 1. For every ith position in the vector, the intensity
q? is compared with the previous highest value.

' If the intensity is larger, it becomes the highest value, and is
therefore the (new) candidate to become a peak.

' If the intensity is smaller, a drop in intensity is observed. If the
drop is more than 90%, the ith peak is called by putting the

112 /310'S[BIIJHO[pJOJXO'SOTJ’BLUJOJIITOTCI”Zduq 11101} papeo1umoq

9103 ‘0g15n8nv uo ::

668

Y.Hoogstrate et al.

 

location in c751. Subsequently, the candidate position will be reset
and iterator / is increased with 1.

The formal description of peak detection is given in algorithm 1
and per ncRNA, the following vectors are added:

1. c5, : (cf,c§,...,ci1); for a number of [2 candidate M pos—
itions, the ith start position is located at nucleotide cf, of the
ncRNA, where 193k and 13ch Sn.

2. c3, : (cf , c3, ,. . ., c311); for a number of m candidate ﬂ positions
cf], the ith end position is located at nucleotide cf, of the

ncRNA, where lgigm and lgcf'g.

2.2.4 Filtering

Per fragment, multiple candidate start and end positions are fre—
quently found due to noise. A target peak may be derived from the
same fragment as surrounding peaks (Fig. 2). For each target peak at
position i, a filter tests whether the remaining peaks at i’, are indeed
noise of the target. The intensity around a boundary has characteris—
tics of a normal distribution and decreases as the distance to the true
start or stop position increases. Peaks caused by noise will have simi—
lar characteristics and therefore their intensity is expected to be (i) a
function of the distance (between the positions i and i’) and (ii) pro—
portional to the targets intensity, p21. The filter uses these character—
istics to separate peaks derived from noise, from peaks derived from
other fragments. The distance A (in nt) between a target and noise
candidate position is defined in Equation (1), where  .  is the abso—
lute value operator. A will always be larger than 0 because a target
is not compared with itself.

sz—m,iﬁ¢i. (0

Because intensities of noise artefacts are proportional to the in—
tensity of the target, a weight matrix is used to define the area bor—
der (Fig. 4). The weights are derived from the probability density
function of a normal distribution with a standard deviation of 3, for

 

Algorithm 1 Peak detection

 

qd <— {pd,0} D Input
n’ : n + 1

at <— 0.1 D Noise threshold
val_previous, vaI_maX, pos_max <— 0 D lnit
cd <— {} D Output
[<— 1 D Output iterator

for 1gign’ do
if q? > val_previous then
if ql‘.’ > val_max then
pos_max <— i
val_max <— qgosmax
end if
else if q? < val_previous then
if pos,max > Oand (or X qlf’) < val,max then
of <— pos,max D Call peak
vaI_max <— 0 D Reset for next peak
i~i+1
end if
end if
vaLprevious <— qﬁ
end for

 

 

 

all integer values 03x315. To rescale densities to weights, the den—
sities were divided through the density for x : 0 (0.1329808). To
improve performance for peaks with a very low number of
corresponding reads, the densities for a A of 1, 2, 3 and 4 were
changed to 1.0. The complete weight matrix co is available in the
source code.

For each target peak, the filter evaluates whether any other peaks
fall within the range that can be expected by noise in both directions
(d : 5’ or d : 3’) as follows (Fig. 4):

A Sort c(1 on corresponding intensities in descending order.
B For each i E c(1 target peak, remove corresponding noise
artefacts:

B.i For all i’ E c2171,- noise candidate peaks, ﬁnd coA and
deﬁne whether the candidate is noise or belongs to a separate
fragment by evaluating Equation (2). If the equation is true,
the candidate peak is considered to be a noise artefact of the
target; immediately discard candidate cgl. If it is false, the
candidate peak is not considered to be a noise artefact and
must be retained.

17;? s (“A x p?) (2)

As a result of the filter, c5, and C31 may have shrunk and their
respective lengths k and m may have become smaller.

2.2.5 Reconstruction

The peaks are expected to be the actual boundaries of fragments.
Because start and stop positions do not have a direct one—to—one
relationship with each other, a trace back is required to reconstruct
the fragments. Because the number of predicted start ([2) and end
(m) positions is not necessarily equal, it is convenient to start recon—
struction from direction d with min(k, m) candidate positions, and

Intensity

100 150 200 250 300 350

 

50
l

 

 

 

 

0

 

 

5 10 1'5 20 25 30 35
Position in the sequence

Fig. 4. Illustration of the filter. Vector cd : {16,20,28} contains three pre-
dicted peaks referred to as peak A, B and C. For each peak, the intensity is
indicated with vertical solid lines, at positions 16, 20 and 28 in green, purple
and blue, respectively. Peak A (350 corresponding reads) has the highest in-
tensity, followed by C (100) and B (85). Using a top-down approach in terms
of intensity, the algorithm starts with filtering the noise artefacts that belong
to peak A. The borders that separate noise from true fragments are indicated
with dashed lines. Peaks within the coloured areas are marked as noise. For
peak A, this is the light-green area. Any other peak within this region (peak B;
solid purple line) gets discarded. Thus, B is expected to noise of peak A. In
the next iteration, the noise of next top peak C is taken into account. Because
no other peaks fall in its corresponding blue area, none will be discarded.
Since peak B is discarded already, only peak A and C remain

112 /3.IO'S[BIIJI’IO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pepeo1umoq

9103 ‘0g15n8nv uo ::

FlaiMapper: annotation of ncRNA—derived fragments

669

 

find for each position the most likely corresponding position d’.
Direction d is defined in Equation (3), and d’ is its complement.

d 5’(startpositions) if kgm (3)
— 3’(endpositions) if m > [2.

Important information required for reconstruction is the ex—
pected length of reads that were used for detecting a peak, given in
15’ and 13’.

Indeed:

' A fragment that starts at position i is expected to have its end i"
close to: i" z i+ l,-5'.

' A fragment that ends at position i is expected to have its start i"
close to: i" z i — If“.

The number of reads that correspond to a start position is
expected to be close to the number of reads that define the
end position: p21 zpi‘l'. Thus, the reconstruction process needs a
balance between (i) the expected position and (ii) the expected
intensity of the counter position. This is achieved by conjoining an
associated start and end position into a fragment as follows:

A Sort cd based on corresponding intensities in descending order.
B For all i E c(1 candidate positions ﬁnd expected counter position i".

B.i For all candidate counter positions i’ 6 cd', the goal is to
determine the counter position which has the optimal trade—off
between a small distance with the expected counter position
and a small difference in intensity. This is achieved by solving of
Equation (4). In the equation 0.09 is an arbitrary chosen weight
that forms the linear balance between distance and intensity.
A predicted fragment is determined with its start position:
min (i,/') and end position: max (i, j). After reconstruction,
positions i and j are discarded from cd and cd', respectively.

/: max ((1 _ 0.09 X (r 41) X pf), for all i’ 6 cd’. (4)

3 Results

3.1 Validation of FlaiMapper performance

3.1.1 miRBase

To get an impression of FlaiMapper’s performance, its predictions
for corresponding miRNAs detected in dataset SRP002175 were

5' miRNA
4—

520510321: 2492139
Magma-E gﬁﬁwwﬁ'ﬂ

<-5-5-4—3-2-1012345>5
550

77.9%

117

15.
411417 1121007
wwwgm @ﬁmnnw

<-5-5-4—3-2-1012345>5

12 IO 5
Myﬂméﬂ DE‘ﬁﬂwo-m

wwﬁﬂzébﬂ

compared with miRNA annotations in miRBase 20 (Kozomara and
Griffiths—Jones, 2011). Because all experiments in this dataset are
generated under the same conditions, alignments to the same
ncRNA from all 12 experiments were merged, to maximize reso—
lution. Of the 1037 miRNAs annotated in miRBase, 169 lacked
supporting reads, and were not included in the quality assessment
(because they would inﬂuence the outcome negatively without
assessing the algorithm itself). Of the remaining 868 miRNAs,
FlaiMapper was not able to predict a fragment that overlaps an
annotated miRNA only 21 times, with a corresponding sensitivity of
847/868 : 0.98.

A detailed assessment was performed by measuring the offset
between a predicted fragment and a miRNA annotation in miRBase
(Fig. 5, top). We assume that miRBase provides the ‘ground truth’ in
terms of miRNA annotations. The results show that the majority of
FlaiMapper predictions are identical to miRBase annotations.
Also, the decrease of the offset bars (Fig. 5, top) is symmetrical,
indicating no systematic inconsistency. 89% of the predicted start
positions are identical to the reference. When an offset of 1 nt is
allowed, the ratio correctly predicted start positions increases
to 95%. In contrast, 54% of the end positions are predicted
identical to the reference. When an offset of 1 nt is allowed, this
increases to 82%. In addition, their offset—bars descend slower. This
indicates that estimation of start positions is more precise.

To get an impression of the inﬂuence of sequencing depth on ac—
curacy of start and end positions corresponding to miRNA and
miRNA"' predictions, the number of corresponding reads (intensity)
was plotted as a function of the offset for dataset SRP002175.
Figure 6 illustrates that with the increase of sequencing depth, the
offset for both start and end positions decreases. However, at identi—
cal intensity, end positions have higher offset than start positions
and require deeper sequencing to achieve the same accuracy.

In addition, we analysed the performance of FlaiMapper on
three supplementary datasets generated on other sequencing plat—
forms. Performance was similar to the performance described
above.

3 . 1.2 Existing software

Previous research reported a comparable method (Langenberger
et al., 2009). Its goal is to detect miRNA—offset—RNAs (moRNAs),
fragments adjacent to pre—miRNAs. The authors also used the
method to demonstrate its ability to discover miRNAs. The

:lmiRNA 3'
—p

Emﬁent

4-

ra ent4w

54%

104 197

53% 46

72515421 7

<-5-5-4-3-2-1012345>5

255 255
amen/gum.
1 7s
A r a 10 199.9% 0.5%1910 5 5
Elfg’lﬂwﬂﬂ

<-5-5-4-3-2-1012345>5

Fig. 5. Comparison between the predictions of miRBase 20 and FlaiMapper (top) and between miRBase and BlockBuster (bottom) on dataset SRP002175, indicat-
ing the offset of the start positions (left) and end positions (right). The vertical axes reflect the amount of predictions that correspond to a particular offset. The
horizontal axes represent the offset between a predicted fragment and an annotated miRNA; exact matches are located at 0, offsets < 0 are predicted upstream

the miRNA's boundaries and offsets > 0 —downstream

112 /3.IO'S[BIIJI’IO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pepeo1umoq

9103 ‘0g tsnﬁnv uo ::

 

 

 

 

  

 

 

 

 

 

 

 

670 Y.Hoogstrate et al.
5' 3'
miRNA miRNA
t- -b
Fragment Fragment
€1e+07 ,.
g 1e+06 Fragment
g1e+os , :3 5;
E10000 . ° '3 z,
- ' . . I '
a  - .r, . .‘r 1::
8 100  2.! -§ . ',:';; ' . . '
E 10 '2. I**- = . rl ll-i.”
0 l'l'l'l'l'l'l'l 'l'l'l'l'l'l'l'l'l'l'l'l
--—4—2024 8 -8-6-4-202468

Fig. 6. Relation between sequencing depth and offset in predicted miRBase annotations for dataset SRP002175. The horizontal axis represents the offset for the
start (left) and end (right) positions between a miRNA annotation and a predicted fragment. Predictions with exact matches are located at 0, offsets < 0 are pre-
dicted upstream the miRNA's boundaries and offsets > 0 —downstream. The vertical axis represents the number of reads corresponding to a start (left) or end
(right) position. The figure indicates that the higher the number of corresponding reads, the lower the offset. Overall, the predicted start positions have a lower

offset than the end positions, for the same sequencing depth

algorithm has no restrictions to a certain type of fragment, so its
outcome should be comparable to FlaiMapper and therefore their
performances can be compared with each other.

In contrast to our method, BlockBuster relies on the overall
aligned read density of a fragment and transforms this into a normal
distribution. Consequently, the prediction of the start and end
positions are dependent on each other since they are derived from
the same distribution. This implies that the alignments near a frag—
ment’s start and end position should have a symmetrical shape.
BlockBuster’s performance was tested on dataset SRP002175 and
the alignments of the 12 corresponding experiments were merged
and converted into the BED format for compatibility. BlockBuster
was used with a variety of parameters where its scale parameter of
0.05 and distance of 26 were found to be rough estimates for the
optimum. Optimum is defined by the lowest amount of root squared
error of all predicted miRNAs where error is defined as the offset
between a predicted miRNA and its miRBase annotation. The
following is observed (Fig. 5, bottom):

' A lower sensitivity: 745/868 : 0.86 (compared with 0.98 in
FlaiMapper).
' A lower accuracy:

' The number of start positions identical to miRBase is
78% compared with FlaiMapper’s 89%. When an offset of
1nt is allowed, both tools show comparable accuracy of
95%.

' The number of end positions identical to miRBase is 34%
compared with FlaiMapper’s 54%. When an offset of 1 nt is
allowed, 79% is predicted correctly compared with 82%
using FlaiMapper.

' The offset bars of the start position decrease asymmetrically.

' The predictions are shifted; for the start positions, there is an
overhang towards the pre—miRNAs 5’—end and for the end
positions there is an overhang towards the pre—miRNAs 3’—end,
indicating that the predicted fragments are on both sides system—
atically longer than the miRBase annotations.

3.2 Fragment analysis

We used FlaiMapper to detect fragments originating from sncRNAs
other than pre—miRNAs on datasets SRP002175, SRP006788 and
supplementary datasets SRP02895 9, SRPO34 013 and SRPO41082.
To maximize resolution, alignments of dataset SRP002175,
SRPO340l3 and SRPO41082 were merged. For SRP006788 and
SRP02895 9, experiments were analysed individually to investigate

possible inﬂuence of specific RNA processing—related treatments.
The numbers of predicted fragments, categorized per type of precur—
sor, are given in Table 1. The ratios of predicted fragments per pre—
cursor type were used for principal component analysis (Fig. 7). The
largest difference between fragment profiles was observed between
datasets SRP002175, SRPO34 013 and SRPO41082. Since they are
from different tissues and experiments, this is expected. Sub—condi—
tions within dataset SRP006788 that are taken from AGO pool—
downs showed nearly identical fragment profiles. In addition, sam—
ples of which nuclear RNA was extracted from independent HeLa
experiments processed on different sequencers, also show very simi—
lar fragment profiles.

Table 1 shows that the AGO—pool down samples of dataset
SRP006788 have a relatively high proportion of fragments derived
from pre—miRNAs compared with the other samples in the dataset.
This observation is consistent with the known association of
miRNAs with AGO proteins (Fabian and Sonenberg, 2012). On the
same time, it also suggests that fragments derived from other precur—
sor types than pre—miRNAs are not associated with AGO to the
same extend. Taken together, this supports the biological context of
the FlaiMapper—derived fragment profiles.

3.3 Sequence logos

To show that the outcome of FlaiMapper can be used to explore
characteristics of sncdRNAs like sequence motifs, fragments were
analysed for over—represented pre— or suffixes using sequence logo
plots (Schneider and Stephens, 1990) (Fig. 8). The analysis on pre—
miRNA—derived fragments did not indicate over—represented motifs.
Although it must be stated that the number of predicted fragments
derived from C/D—box snoRNAs is lower than for pre—miRNAs, the
analysis confirms that the C—box is over—represented (Brameier
et al., 2011). It also shows that sequences of H/ACA—box snoRNA—
derived fragments located at the 3’—half of the precursor, most often
contain the suffix ACANNN, where ACA is the precursor’s ACA—box and
N can represent any nucleotide. On the 5’—half of the H/ACA box the
fourth is preferentially occupied by a G/C. However, due to the mild
bit score and the low number of used fragments, this observation
should be interpreted with caution. Because of the highly conserved
sequences and the high number of genomic copies, tRNAs were
excluded from motif analysis.

4 Discussion

We set out a method able to extract and annotate ncRNA fragments,
because such annotations can be helpful in further high—throughput

112 /3.IO'S[BIIJI’IO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pepeo1umoq

9103 ‘0g tsnﬁnv uo ::

FlaiMapper: annotation of ncRNA—derived fragments

671

 

Table 1. Summary of predicted fragments on datasets SRPOOZ 175 (Stark et al., 2010), SRPOO6788 (Valen etal., 2011), SRP028959 (Bai etal.,
2014), SRPO34013 (Contrant etal., 2014) and SRPO41082 (Selth etal., 2014)

 

 

Dataset Type pre—miR SNORD SNORA tRNA SCARNA MISC

Total (in ncRNA reference) ncRNAs 1386 264 106 451 23 39
SRP002175 (Pigment): RNA extracted ncRNAs 645 141 51 381 16 29

Total cellular RNA (12 merged experiments) fragments 947 (37.2%) 202 (7.9%) 56 (2.2%) 1210 (47.5%) 26 (1.0%) 107 (4.2%)
SRP006788 (HeLa) ncRNAs 463 92 20 359 8 28

Total cellular RNA fragments 680 (26.1%) 140 (5.4%) 24 (0.9%) 998 (38.3%) 11 (0.4%) 755 (28.9%)
SRP006788 (HeLa): Total cellular RNA ncRNAs 455 108 29 367 16 32

after RRP40 core subunit depletion fragments 686 (24.2%) 181 (6.4%) 34 (1.2%) 1104 (38.9%) 24 (0.8%) 806 (28.4%)
SRP006788 (HeLa): RNA pool—down ncRNAs 415 19 14 151 6 15

after AGO immunoprecipitation fragments 560 (39.7%) 30 (2.1%) 15 (1.1%) 208 (14.7%) 9 (0.6%) 590 (41.8%)
SRP006788 (HeLa): pool—down from RRP4 core ncRNAs 393 30 16 155 4 18

depleted cells after AGO immunoprecipitation fragments 517 (38.6%) 42 (3.1%) 17 (1.3%) 209 (15.6%) 6 (0.4%) 550 (41.0%)
SRP006788 (HeLa): RNA pool—down after ncRNAs 513 129 65 301 18 33

after XRN immunoprecipitation fragments 738 (25.9%) 294 (10.3%) 112 (3.9%) 760 (26.6%) 47 (1.6%) 903 (31.6%)
SRP006788 (HeLa) ncRNAs 451 129 57 281 16 33

RNA was extracted from the nucleus fragments 649 (27.3%) 280 (11.8%) 87 (3.7%) 519 (21.9%) 32 (1.3%) 806 (34.0%)
SRPOZ 8959 (HeLa): SRR954957 ncRNAs 168 10 0 167 2 4

total cell small RNA preparation fragments 203 (30.8%) 15 (2.3%) 0 (0%) 229 (34.7%) 2 (0.3%) 210 (31.9%)
SRPOZ 8959 (HeLa): SRR9558 ncRNAs 146 28 0 104 3 6

nuclear small RNA preparation fragments 169 (33.3%) 33 (6.5%) 0 (0%) 126 (24.8%) 4 (0.8%) 176 (34.6%)
SRPOZ 8959 (HeLa): SRR954959 ncRNAs 162 2 0 183 1 6
cytoplasmic small RNA preparation fragments 197 (29.1%) 2 (0.3%) 0 (0.0%) 274 (40.4%) 1 (0.1%) 204 (30.1%)
SRPO34013 (B cells): ncRNAs 1012 213 99 409 23 39

Total cellular RNA (three merged experiments) fragments 2230 (42.4%) 670 (12.7%) 384 (7.3%) 1478 (28.1%) 105 (2%) 391 (7.4%)
SRPO41082 (Prostate): ncRNAs 803 230 90 381 21 38

Total cellular RNA (two merged experiments)

fragments 1454 (37.9%)

552(14.4%) 201(5.2%) 1222(31.9%) 99(2.6%) 304(7.9%)

 

SRP034213" (B cells)

 

 

 

E
o'
c, SRPO410'82" (Prostate)
E SRR2071131-IeLa (AGO pd)
SRR207114'HeLa (AGO pd)
'3
o
N SRR207116 HeLa (Nuclear)
o I
O
n' 8 SRR954958 HeLa (Nuclear)
o 5111,0021]? (Pigment) SRR207-115 HeLa (XRN)
3
cl; - SRP002175' (Pigment)
- snpoosma (HeLa) SBR954957 HeLa (Total RNA)
0 o SRP028959 (HeLa)
— A SRP034013‘ (B cells)
' . SRR207111 HeLa 0131 RNA
7 V SRP°41032 (P1081319) .' snnacm 12 HeLa otal RNA
merged ‘ SRR954959 HeLa Cytoplasmic)
| l l l |
-o.4 -0.2 0.0 0.2 0.4

P01

Fig. 7. The first two components of principal component analysis applied
on percentages of predicted fragments (Table 1) comprise 92% of the vari-
ance. The circle represents the profile of merged dataset SRP002175 (pig-
ment cells, Illumina GA ll); squares individual experiments of dataset
SRP006788 (HeLa cells, Illumina GA ll); diamonds individual experiments of
SRP028959 (HeLa cells, Ion Torrent PGM); triangle pointing up dataset
SRP034013 (B cells, Illumina HiSeq2000) and the triangle pointing down
dataset SRP041082 (prostate cells, Illumina HiSeq2000). The last three data-
sets are addressed in the Supplementary information. Datasets correspond-
ing to separate tissue types demonstrate unique fragment profiles.
Experiments with HeLa cells taken under similar circumstances group to-
gether; total RNA samples from independent datasets SRP006788 and
SRP028959 cluster closely together

research. We designed FlaiMapper, a computer program to predict
ncRNA fragments using small RNA—seq alignments. Benchmarking
indicated that FlaiMapper is able to predict 97.8% of the miRNAs
with corresponding reads. 95% of the miRNAs 5’—end and 82% of
the 3’—end predictions were concordant with miRBase annotations.
For this analysis, data from the Illumina Genome Analyser II was
used. A similar accuracy was observed for sequencing data derived
from the Ion Torrent PGM and Illumina HiSeq2000
(Supplementary information), indicating FlaiMapper can perform
well on data from different platforms. We demonstrated that
FlaiMapper performs better than existing similar software
(Langenberger et al., 2009).

FlaiMapper predicts fragments by looking at the most common
start and end positions in alignments. It can be argued whether the
most common start and end positions should indeed provide the evi—
dence for the prediction of a fragment, since the most common read
could be used instead. However, the most common start and end
positions should usually be covered by a higher number of reads.
This corresponds to a higher resolution, which is especially advanta—
geous for the prediction of fragments with a low read coverage, and
should therefore also be more robust towards noise. Together with
the demonstrated high performance, this implies that predictions
based on start and end position densities provide a more appropriate
solution for fragment annotation.

The weights used in the filtering step are based on a normal distri—
bution with an arbitrary chosen (7. These parameters probably
find their optimum in relation with sequencing protocols, 5’/3’—
end—specific processing factors or different families of fragments.
Therefore, once there is a better understanding of the processing of

112 /3.IO'S[BIIJI’IO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pepeo1umoq

9103 ‘0g isanV uo ::

672

Y.Hoogstrate et al.

 

 

,_qum....n.=_T..;m....¢

a,

2
:51

gatesse‘ereswhwwrawr

Fig. 8. Sequence logos (Schneider and Stephens, 1990) of the fragments located on the 5’- (left) and the 3’-end (right) of the precursor ncRNA from the predictions
on dataset SRP002175. Only fragments with their centre located at 340% of the precursor are used for prefix analysis and fragments located at 260% for suffix
analysis. (top) Pre-miRNA fragments: no common prefix or suffix motif (based on 520 prefixes and 427 suffixes). (middle) C/D-box snoRNA fragments: (middle
left) the prefix motif UGAUGA is found more often around the sixth and seventh nucleotide (based on 130 prefixes). (middle right) The suffix UGAUG is found more
often around the feighth nucleotide (based on 72 suffixes). (bottom) H/ACA-box snoRNA fragments: (left) the fourth nucleotide of the prefix appears to be G/C en-
riched, although the bit score is mild (based on 37 prefixes). (bottom right) The suffixes are enriched with the motif ACA from the isixth until the ifourth nucleo-

tide (based on 19 suffixes)

fragments, it is recommended to spend effort in optimizing these
parameters.

Additional analysis indicated that FlaiMapper’s performance in
miRNA annotation is positively correlated to sequencing depth.
Predicted 3’—ends of miRNAs have a larger offset compared with
miRBase annotations than the 5’—ends, even for the same sequencing
depth. The higher variability of the miRNAs 3’—ends has earlier been
reported (Kozomara and Griffiths—Jones, 2011). In addition, re—
search on the classification of sncRNAs indicated that metrics
corresponding to the variability in the alignment are indeed higher
for the 3’—end in miRNAs (Leung et al., 2013). They were able to
indicate that different levels of variability correspond to specific
types of sncRNAs. Possible explanations could be RNA post—
processing or RNA editing. This means that alignments over the
entire fragment can be asymmetrical because of a larger variation
observed at miRNAs 3’—ends. Since BlockBuster assumes reads to be
symmetrically distributed over a fragment, this might explain why
(i) its accuracy is lower, (ii) its predictions are longer and (iii) shifted
with respect to miRBase.

Although it seems counter—intuitive that an ncRNA can produce
different fragments that originate from an overlapping region, there
are situations where overlapping fragments can be expected. This
can be stressed by recalling the not fully understood tRNA process—
ing mechanism(s), where tRNA halves and tRFs spanning similar
regions have been reported. Therefore, FlaiMapper has no restric—
tion to the prediction of overlapping fragments, similar to the
method of Langenberger et al. (2009).

Sequence logos indicated that the ACA box, as part of the the
ACANNN suffix, is over—represented and position specific in frag—
ments derived from the 3’—halve of the H/ACA—box snoRNAs.
The analysis also confirmed that the C—box of C/D box snoRNAs is
over—represented in corresponding fragments. Yet, this result may be
biased by the existence of multiple, highly homologous, genomic copies
of certain C/D—box snoRNAs such as HBH—52 and HBH—85.

Fragment characteristics can play an important role in finding
associations with their processing mechanism. For example, al—
though the larger variability of the alignments at the 3’—end of
miRNAs affects performance, it clearly indicates a difference in the
processing of miRNAs ends. Characteristics such as 5’— and 3’—end
entropy have been successfully used in the classification of sncRNAs
(Leung et al., 2013; Yuan and Sun, 2013). Using such characteristics
on the fragment level, for example for clustering or classification,
might provide new insights into the processes of production,

functioning or degradation of fragments or indicate a possible
sub—grouping. The future in—depth analysis of sncdRNAs will require
more comprehensive datasets with higher sequencing depth and
more statistical power.

5 Conclusion

The lack of a sncdRNAs annotation is a short coming in small
RNA—seq analysis. To overcome this, we designed the computer pro—
gram FlaiMapper. FlaiMapper has a high performance in predicting
miRNA boundaries, but can be used for the annotation of any type
of sncdRNA. Examination of FlaiMapper—predicted sncdRNAs indi—
cated different type specific characteristics: 5’/3’—end—specific vari—
ability in miRNAs, associations between AGO and relative fragment
profiles in dataset SRPO 06 788 and a position—specific sequence
motif in a subset of the H/ACA—box fragments. These characteristics
indicate that FlaiMapper is a good starting point for the down—
stream analysis of small RNA sequencing experiments.

Acknowledgement

The authors would also like to thank Bas Pigmans for his work on sequencing
alignment methodology.

Funding

The research leading to these results has received funding from the European
Union Seventh Framework Programme (FP7/2007-2013) under grant agree—
ment n°201438 and from the research programme ALW-VENI Grant
863.12.014 ﬁnanced by the Netherlands Organisation for Scientiﬁc Research
(NWO).

Conﬂict of interest: none declared.

References

Askarian-Amiri,M.E. et al. (2011) Snord-host RNA zfasl is a regulator of
mammary development and a potential marker for breast cancer. RNA, 17,
878—891.

Bai,B. et al. (2014) Small RNA expression and deep sequencing analyses of the
nucleolus reveal the presence of nucleolus-associated microRNAs. FEBS
Open Bio., 4, 441—449.

112 /3.IO'S[BIIJI’IO[pJOJXO'SOIJ’BLUJOJIIIOICI”Idllq 11101} pepeo1umoq

9103 ‘0g isanV uo ::

FlaiMapper: annotation of ncRNA—derived fragments

673

 

Brameier,M. et al. (2011) Human box cld snoRNAs with miRNA like func—
tions: expanding the range of regulatory RNAs. Nucleic Acids Res., 39,
675—686.

Chen,C.—J. and Heard,E. (2013) Small RNAs derived from structural non—cod-
ing RNAs. Methods, 63, 76—84. [Diversity of the non—coding transcriptomes
revealed by RNA—seq technologies.]

Contrant,M. et al. (2014) Importance of the RNA secondary structure for the
relative accumulation of clustered viral microRNAs. Nucleic Acids Res., 42,
7981—7996.

Dong,X.-Y. et al. (2009) Implication of snoRNA {U50} in human breast can—
cer.]. Genet. Genomics, 36, 447—454.

Ender,C. et al. (2008) A human snoRNA with microRNA—like functions. Mol.
Cell, 32, 519—528.

Fabian,M.R. and Sonenberg,N. (2012) The mechanics of miRNA-mediated
gene silencing: a look under the hood of miRISC. Nat. Struct. Mol. Biol.,
19, 5 86—5 93.

Friedlander,M.R. et al. (2008) Discovering microRNAs from deep sequencing
data using miRDeep. Nat. Biotech., 26, 407—415.

Henras,A.K. et al. (2004) RNA structure and function in C/D and H/ACA
s(no)RNPs. Curr. Opin. Struct. Biol., 14, 335—343.

Kishore,S. et al. (2010) The snoRNA mbii—52 (snord 115) is processed into
smaller RNAs and regulates alternative splicing. Hum. Mol. Genet., 19,
1 15 3—1 1 64.

Kozomara,A. and Grifﬁths—Jones,S. (2011) mirbase: integrating microRNA
annotation and deep—sequencing data. Nucleic Acids Res., 39(Suppl. 1),
D152—D157.

Langenberger,D. et al. (2009) Evidence for human microRNA—offset RNAs in
small RNA sequencing data. Bioinformatics, 25, 2298—2301.

Leung,Y.Y. et al. (2013) Coral: predicting non-coding RNAs from small
RNA—sequencing data. Nucleic Acids Res., 41, E137.

Lin He,G.J.H. (2004) MicroRNAs: small RNAs with a big role in gene regula-
tion. Nat. Rev. Genet., 5, 522—531.

Martens-Uzunova,E.S. et al. (2013) Beyond microRNA novel RNAs derived
from small non—coding RNA and their implication in cancer. Cancer Lett.,
340, 201—211.

Mei,Y.-P. et al. (2012) Small nucleolar RNA 42 acts as an oncogene in lung
tumorigenesis. Oncogene, 31, 2794—2804.

Ono,M. et al. (2011) Identiﬁcation of human miRNA precursors that resemble
box cld snoRNAs. Nucleic Acids Res., 39, 3879—3891.

Schneider,T.D. and Stephens,R.M. (1990) Sequence logos: a new way to
display consensus sequences. Nucleic Acids Res., 18, 6097—6100.

Scott,M.S. et al. (2012) Human box cld snoRNA processing conservation
across multiple cell types. Nucleic Acids Res., 40, 3676—3688.

Selth,L.A. et al. (2014) Human seminal ﬂuid as a source of prostate cancer-
speciﬁc microRNA biomarkers. Endocr. Relat. Cancer, 21, L17—L21.

Sobala,A. and Hutvagner,G. (2011) Transfer RNA-derived fragments:
origins, processing, and functions. Wiley Interdiscip. Rev. RNA, 2,
853—862.

Stark,M.S. et al. (2010) Characterization of the melanoma miRNAome by
deep sequencing. PLoS One, 5, e9685.

Thompson,D.M. and Parker,R. (2009) Stressing out over tRNA cleavage.
Cell, 138, 215—219.

Valen,E. et al. (2011) Biogenic mechanisms and utilization of small RNAs
derived from human protein—coding genes. Nat. Struct. Mol. Biol., 18,
1075—1082.

Yamasaki,S. et al. (2009) Angiogenin cleaves tRNA and promotes stress-
induced translational repression. ]. Cell Biol., 185, 35—42.

Yuan,C. and Sun,Y. (2013) RNA-code: a noncoding RNA classiﬁcation tool
for short reads in NGS data lacking reference genomes. PLoS One, 8,
e775 96.

112 /310's1eu.rnofp.rq1xo"sothJJOJutotq/ﬁduq 11101} pepeo1umoq

9103 ‘0g isnﬁnv uo ::

