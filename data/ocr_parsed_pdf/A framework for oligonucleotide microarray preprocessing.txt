ORIGINAL PAPER

Vol. 26 no. 19 2010, pages 2363-2367
doi: 1 0. 1 093/bioinformatics/btq431

 

Genome analysis

Advance Access publication August 5, 2010

A framework for oligonucleotide microarray preprocessing

Benilton S. Carvalho” and Rafael A. lrizarry2’*

1Department of Oncology, University of Cambridge, CRUK Cambridge Research Institute, Li Ka Shing Centre,
Robinson Way, Cambridge CB2 ORE, UK and 2Department of Biostatistics, Bloomberg School of Public Health,

Johns Hopkins University, Baltimore, MD 21205, USA
Associate Editor: John Quackenbush

 

ABSTRACT

Motivation: The availability of flexible open source software for the
analysis of gene expression raw level data has greatly facilitated
the development of widely used preprocessing methods for these
technologies. However, the expansion of microarray applications has
exposed the limitation of existing tools.

Results: We developed the oligo package to provide a more
general solution that supports a wide range of applications. The
package is based on the BioConductor principles of transparency,
reproducibility and efficiency of development. It extends the existing
tools and leverages existing code for visualization, accessing
data and widely used preprocessing routines. The oligo package
implements a unified paradigm for preprocessing data and interfaces
with other BioConductor tools for downstream analysis. Our
infrastructure is general and can be used by other BioConductor
packages.

Availability: The oligo package is freely available through
BioConductor, http : //www.bioconductor . org.

Contact: benilton.carvalho@cancer.org.uk; rafa@jhu.edu
Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on March 21, 2010; revised on July 13, 2010; accepted on
July 21, 2010

1 INTRODUCTION

Open source software signiﬁcantly simpliﬁed the development
and distribution of preprocessing methods for gene expression
microarrays. The BioConductor project (Gentleman et (11., 2004)
is one hub of tools for the analysis of genomic data and distributes,
among others, the affy package (Gautier et (11., 2004), the most used
tool for analysis of Affymetrix gene expression arrays. In addition
to Affymetrix, other manufacturers (e.g. Illumina, NimbleGen and
Agilent) also commercialize microarray solutions, increasing the
number of applications of the technology.

With different microarray applications, the investigator can
analyze genomic data from different perspectives: Gitan et al. (2002)
use tiling arrays to identify, at high resolution, regions of DNA
and histone modiﬁcations; The International HapMap Consortium
(2003) uses genome-wide single nucleotide polymorphism (SNP)
and copy number variant (CNV) arrays to obtain: (i) genotype
calls, later used in association studies; and (ii) extract copy number
estimates to assess chromosomal aberrations; Clark et a1. (2007)
use exon arrays to analyze alternative splicing. As new applications

 

*To whom correspondence should be addressed.

became available and designs by other manufacturers became more
popular (see Supplementary Material), users developed suboptimal
solutions to allow the use of the existing code in affy on these new
arrays. This strategy did not succeed because the new designs did not
share the structure used by the Affymetrix gene expression arrays,
such as density and array annotation standards.

Based on the BioConductor principles of transparency, repro-
ducibility and efﬁciency of development, we developed the oligo
package. Its infrastructure, presented in Section 2, is general
and can be used by other BioConductor packages. The package
natively supports feature-level data for different applications and
manufacturers, as shown in Section 3. It implements a uniﬁed
framework for preprocessing microarray data and interfaces with
other BioConductor tools for downstream analysis.

2 INFRASTRUCTURE

The package contains structures to simplify usage and interaction
with other packages. A clear distinction is made between feature-
level, summarized and annotation data, and this is reﬂected by the
different classes that are implemented using the S4 scheme intrinsic
to the R environment.

Before importing data, the researcher must have the respective
annotation package already installed in the system. The annotation
package provides array coordinates, feature types, sequences,
feature names and other relevant information for preprocessing.
Affymetrix shares these data using a number of ﬁle sufﬁxes: CDF
(expression and SNP arrays), BPMAP (tiling arrays) and PGF + CLF
(exon and gene arrays). NimbleGen distributes their annotations
through NimbleGen Design Files (NDFs), regardless of the array
type, but an additional position (POS) ﬁle, containing up-to-date
genomic coordinates, is not uncommon. Table 1 describes the
sufﬁxes used by some manufacturers, and we note that oligo
currently supports Affymetrix and NimbleGen arrays. Using the
annotation ﬁles provided by the manufacturer, the researcher
can create the annotation package using the pdlnfoBuilder
BioConductor package.

Bolstad et a1. (2003); Carvalho et a1. (2007, 2010); Irizarry et al.
(2003a, 2006a, b, 2008); Ritchie et a1. (2009); Scharpf et al. (2008)
show signiﬁcant improvements on the results when alternative
algorithms are used as replacement for the solutions provided by
the manufacturers. In fact, the novel methodologies described by
Carvalho et a1. (2007); Irizarry et al. (2008); Scharpf et a1. (2008) use
early versions of the oligo package hereby described to implement
their solutions. Regardless of the application, these depend on two
factors: (i) the ability to access the data at the rawest possible

 

© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 2363

112 /3.ro's[Bumo[pJOJXO'sorwurJOJurorqﬂ:duq 11101} popcorn/neg

9103 ‘{g anﬁnv 110::

B.S.Carvalho and R.A.Irizarry

 

Table 1. File sufﬁxes used by manufacturers for different array types

 

 

 

Manufacturer Intensities Design Type
CDF Expression/SNP
Affymetrix CEL PGF + CLF exon/ gene
BPMAP tiling
Agilent GPR GAL All
Illumina TXT BPM All
NimbleGen XYS NDF All

 

The raw data ﬁles contain observed ﬂuorescence intensities used in analysis; the design
ﬁles provide information speciﬁc to the array, such as dimensions, physical locations,
probe types and sequences. Currently, oligo supports Affymetrix and NimbleGen arrays.

Table 2. Raw data and annotation classes used by the oligo package

 

 

FeatureSet class PDInfo class Arrays
ExpressionFeatureSet ExpressionPDInfo Expression
ExonFeatureSet ExonPDInfo Exon
GeneFeatureS et GenePDInfo Gene
SoneatureS et SinDInfo SNP
SannvFeatureS et SannvPDInfo SNP+CNV
TilingFeatureSet TilingPDInfo Tiling

 

level, after image processing (which is beyond the scope of this
material); and (ii) the existence of an environment that provides
analysis and visualization tools. The manufacturers whose products
are currently supported by oligo provide these data using CEL
(Affymetrix) and XYS (NimbleGen) ﬁles. These ﬁles supply array
coordinates and observed intensities, which can be easily imported
with oligo after installing the associated annotation package created
by pdlnfoBuilder.

The oligo package implements multiple classes to manage raw
intensities. They are used to differentiate data originating from
different applications, such as gene expression versus exon data.
Because the same method can behave differently when applied
to objects of distinct applications, we make use of this feature to
increase the ﬂexibility of the package. From the eSet class deﬁned in
Biobase, we created the FeatureSet class, the template for feature-
level data subclasses. Each application has its own FeatureSet
subclass, as shown in Table 2. We make no distinction in terms of the
manufacturer: data generated on chips of the same application, even
from different manufacturers, will belong to the same FeatureSet
extension. This uniﬁed framework increases productivity, because
the preprocessing steps for arrays on the same application are
essentially the same, regardless of the manufacturer.

This infrastructure is beneﬁcial for both developers and end-users.
Developers can use oligo solutions to facilitate the integration of
their tools with BioConductor. The researcher beneﬁts from the
uniﬁed model that the package makes available, as the consistency
in data delivery and handling improves efﬁciency.

3 APPLICATIONS

In this section, we use the oligo package with data of different
types. We demonstrate its use to preprocess gene expression data in

 

 

 

 

 

(3) 1521999an smsca. 
'39 _
O
‘9
a 0 _
E
V
a o- -
“I _
O
0. _
0
log intensity
Pseudo-image Smoothed histograms
 1521amm_am.ch

 

on

-n.5

 

 

 

 

 

MA Plot

Fig. 1. The oligo package provides several tools for the visualization of raw
data. represented in the package through the FeatureSet subclasses. In (a).
the pseudo-image can be used to Visually inspect the data for spatial artifacts.
Using oligo. one can produce such ﬁgures using the image method. (b) shows
the smoothed histogram. implemented in oligo via the his! method. providing
a way to compare the distribution of intensities across multiple samples. In
(c). we show boxplots generated with the boxplot method. also used to assess
the data distribution. The MAplot method can be used to generate the MA
plot shown in (d). used to assess the dependency of log-ratios on the average
log-intensity of the data.

Section 3.1. Section 3.2 shows how it can be used to obtain genotype
calls from SNP arrays. In Section 3.3, we show how it can be used to
preprocess exon data at both exon and transcript levels. Section 3.4
uses data from tiling arrays to show how objects created by oligo
can be used with methods deﬁned by other BioConductor packages.
The Supplementary Material contains the actual code used in these
examples.

3.1 Preprocessing expression arrays

After loading oligo, the user identiﬁes the CEL or XYS
ﬁles that represent the study in question. This is done with
the list.celfiles or list.xysfiles functions. These
functions accept the same arguments as list . files.

The read. cel files and read . xysfiles functions import
the CEL and XYS ﬁles into the R session. The returned object
belongs to one of the FeatureSet classes shown in Table 2 and
represents the raw data. These objects can be visualized through
different strategies: Figure 1 shows, respectively, the pseudo-
image, smoothed histograms, boxplots and MA plot for the Latin
Square data on the Human Genome U95 array, made available by
Affymetrix. Figurela—d are produced, respectively, with the image,
hist, boxplot and MAplot methods.

The oligo package is tightly integrated with important
BioConductor tools. Probe sequences are stored using the
DNAStringSet objects, deﬁned in the Biostrings package.

 

2364

112 /3.ro's[Bruno[pJOJXO'sorwurJOJurorqﬂ:duq 11101} paprolumoq

9103 ‘{g isnﬁnv 110::

Oligo package

 

 

(a);—

A
5'
v

[:06
QCC c
.0(:0 C12‘

0
o
1

a x c

0.2
\0

c x
l c

c
I 5966656 0
-—i 666666
\ATTTTTTTTTTTrrff‘SGEEEEQE
\ /

12
I

Effect
0 0

loge intensity
1O

\ A
A A
\k IA, co _

A

—0.2

A. .
A .A
AAAAAAAAAA

 

 

 

 

 

 

—o.4
‘.5

5 1'0 1‘5 2'0 2'5
Base Position

Afﬁnity Proﬁle

13 5 7 011131517192123
GC Frequency in 25—mers

Intensity vs. GC content

Fig. 2. The package is tightly integrated with other BioConductor tools to
improve the user experience. (a) shows the afﬁnity proﬁle. which can be
produced with oligo. In this ﬁgure. we can easily observe the clear interaction
of nucleotide and position on the logz-intensity. For (b). storing sequence
information using the DNAStringSet class in Biostrings provides a compact
representation of the data and allow efﬁcient calculation. as shown above
with the logz-intensity boxplot stratiﬁed by GC content.

This allows a compact representation of the data and simpliﬁes
the interfacing with other tools. The getBaseProfile
and getAffinitySplineCoefficients functions can be
combined to obtain the afﬁnity proﬁle shown in Figure 2a. The
alphabetFrequency method in Biostrings is easily used with the
pm method in oligo to show the dependency of log intensities on
GC content, as shown in Figure 2b.

Expression data can be preprocessed using RMA (Irizarry et al.,
2003a, b) by applying the rma method to the ExpressionFeatureSet
object. The data will be background corrected (if the background
argument is set to TRUE), quantile normalized (if the normalize
argument is TRUE) and summarized using the median-polish. The
resulting object is an ExpressionSet, deﬁned by the Biobase
package. The Supplementary Material shows one detailed example
of how to use oligo to preprocess the expression data.

3.2 Obtaining genotype calls from SNP arrays

Carvalho et al. (2007) describe the Corrected Robust Linear
Model with Maximum likelihood distance (CRLMM) algorithm to
genotype SNP arrays. This method is implemented in oligo and, to
use it, the investigator needs the annotation data package speciﬁc
to the design used in the experiment. These annotation packages
are available through the BioConductor website and, because
they contain hand-curated data, we recommend users refrain from
creating (with the pdlnfoBuilder package) their own annotation
packages for SNP chips. Table 3 describes the supported designs
and the respective annotation packages.

To demonstrate its genotyping capability, we use 269 CEL ﬁles
on the XBA array, available on the HapMap website. The crlrnm
ﬁmction requires the CEL ﬁle names and an output directory, where
the results are stored. The output directory must not exist prior to
the call and the software will take care of this task. The crlrnm
ﬁmction is applied directly on the CEL ﬁles, to minimize the memory
footprint. A detailed demonstration on how to use crlrnm is shown
in the Supplementary Material.

The getCrlmmSummaries ﬁmction reads the results obtained
by CRLMM back into the R session. The calls and confs methods
are accessors to genotype calls and conﬁdence values. Calls are
coded as integers 1 (AA), 2 (AB) and 3 (BB). The conﬁdence score

Table 3. SNP array designs currently supported by the oligo package and
their respective annotation packages

 

 

Design Annotation Package
Mapping 50K XBA pd.mapping50k.xba240
Mapping 50K HIND pd.mapping50k.hind240
Mapping 250K NSP pd.mapping250k.nsp
Mapping 250K STY pd.mapping250k.sty
Genomewide SNP 5.0 pd.genomewidesnp.5
Genomewide SNP 6.0 pd.genomewidesnp.6

 

These annotation packages are made available through the BioConductor website and
contain hand-curated data, required by the CRLMM algorithm.

 

 

(aha (b)vi

ogu

o
N- °° 5m” N— o
a

n: a) 513$ 8 o o "8
1i] ll} 0 o o
5 °- 5 °- o o
In In °°d° °°

 

 

 

 

 

 

 

antisense

SNP_A-1725330

antisense

SNP_A-l703121

Fig. 3. Log-ratio data used by CRLMM for genotype calling. which can be
seriously affected by probe effects. In this plot. genotype calls provided by
oligo are represented in different colors (black. AA; red. AB; green. BB)
and each point represents one sample. SNP_A-l703l2l shows signiﬁcant
discrimination on both strands and. as competing algorithms. CRLMM
has excellent performance on similar scenarios. SNP_A-l725330 presents
poor discrimination on the sense strand. because CRLMM does not average
across strands. it can successfully predict the genotype calls. In comparable
situations. competing algorithms are known to fail.

is the estimated probability that the algorithm made the right call.
The plotM ﬁmction provides the visualization of the results, as
Figure 3a and b show.

3.3 Preprocessing exon arrays

The oligo package also supports the Affymetrix exon and gene
arrays. Their annotation packages are available via BioConductor.
These chips are extensions of the 3’ IVT expression arrays and,
as such, users are often interested in preprocessing them using the
RMA algorithm. With these designs, the researcher can use oligo to
obtain RMA summaries at exon and transcript levels.

The read . celfiles function imports any CEL ﬁle. The
software identiﬁes speciﬁcally if the ﬁles refer to exon or gene arrays
and returns an object of the appropriate class. Raw data visualization
can also be performed using the techniques presented in Section 3.1.

Similarly, the rma method provides RMA summaries and, in the
case of the exon and gene arrays, accepts one extra argument: target.
The possible values for target are probeset, core, extended
and full. The ﬁrst value will allow summarization to the exon
level; the other three provide summarization to the gene level, using
the Affymetrix deﬁnition of meta probesets.

The ﬂexibility of oligo and its annotation packages allows
integration with other BioConductor tools. Below, we use the

 

2365

112 /3.ro's1Burno[pJOJXO'soerJJOJurorqﬂ:duq uror} pep1201umoq

9103 ‘1gisn8nv 110::

B.S.Carvalho and R.A.Irizarry

 

ENSGDUDODI 31 746

 

 

 

 

 

 

Fig. 4. Visual representation of the observed logz-intensities
and summarized data at the exon level for a fragment of gene
ENSG00000131748. On the top panel of the ﬁgure. each line represents one
different sample; the vertical bins represent the start and end positions for
each probe (ﬁrst subﬁgure) and probeset (second subﬁgure). On the bottom
panel. the block diagram shows the probes. gene and transcript. respectively.
in green. orange and blue. Here. the oligo. biomaRt, Biostrings,
BSgenome and GenomeGraphs packages were used together to provide
an improved visualization of the data at a speciﬁc genomic location.

biomaRt, Biostrings, BSgenome and GenomeGraphs packages
to obtain more information on probesets and to visualize the results
(see Fig. 4) at a speciﬁc genomic location. The Supplementary
Material shows detailed information on how to combine sequence
information obtained through oligo to get updated genomic
coordinates by sequence alignment using the Biostrings and
BSgenome packages.

3.4 Interfacing with ACME to ﬁnd enriched regions
using tiling arrays

The oligo package handles tiling data from both Affymetrix and

NimbleGen, as long as the annotation packages are created through

the pdlnfoBuilder package and installed in the system.

The functions read. celfilesZ and read.xysfile32
can be used to import the data into the R session. The
difference between read . celfiles/read . xysfiles and
read . celfilesZ/read.xysfi1es2 is that the former reads
in the data as one-channel data and the latter reads it in as two-
channel data. The ge tNgsColors Info ﬁinction parses the names
of the XYS ﬁles and returns an object with suggested channels and
sample names that can be combined with read . xysfilesZ.

Using ChIP-chip data provided by NimbleGen, we use oligo to
import the XYS ﬁles and combine their contents to create an object
that can be used with the ACME package. The ACME package
calculates enrichment, using algorithms that are insensitive to
normalization strategies and array noise. We refer the interested user
to the Supplementary Material, which contains detailed information
on the use of oligo interfacing the ACME package. For this
example dataset, we show below some enriched regions (ﬂagged
with TFzTRUE) found on Chromosome 1 for Sample 1:

Length TF StartInd EndInd Start End
2179 FALSE 1 2179 56753 7925574

8 TRUE 2180 2187 7943079 7943879

18 FALSE 2188 2205 7943979 8009243

8 TRUE 2206 2213 8009343 8010043

251 FALSE 2214 2464 8010143 9893203

6 TRUE 2465 2470 9893303 9893803

4 DISCUSSION

The integration of data management, visualization and analysis is
essential in current research. Weaknesses in existing tools are more
evident today that more applications and array manufacturers are
available. To overcome the deﬁciencies introduced by suboptimal
solutions and improve the delivery of original strategies, we
developed the oligo package. It uses the commonalities of
oligonucleotide microarray designs and applications to provide an
open-source solution that centralizes the preprocessing tasks under a
solid framework that can be reused by other developers, improving
the consistency between packages within the BioConductor project.

The structure used by oligo is ﬂexible and its objects inherit
the properties of Biobase objects, using the standards set by
the BioConductor project. Because it is implemented in R, every
feature of this statistical software is at the researcher’s disposal. This
simpliﬁes the interface with many other packages from both projects
(R and BioConductor), widening the options during analysis.
Classes used by its companion, the pdlnfoBuilder package, are
based on a broader class, offering inheritability properties and
transparency to the user, who beneﬁts from the fact that annotation
packages use SQL databases to minimize their memory footprint.

The oligo and affy packages are closely related: the former
uses the knowledge acquired by the latter to provide solutions
for limitations found so far. The main improvements offered
by oligo are: (i) support to multiple vendors and platforms;
(ii) efﬁcient storage and access schemes for annotation of current
high-throughput arrays, whose metadata have become signiﬁcantly
large; and (iii) native support to manufacturer ﬁles.

Using oligo, one can handle data from different applications
(expression, tiling, SNP/CNV, exon and gene) of two manufacturers
(Affymetrix and NimbleGen), using their native ﬁle schemes,
avoiding potential problems introduced by conversion tools. We
demonstrated how one can use our package to preprocess and
visualize oligonucleotide microarray data. We show how the
package can serve as an interface between the data ﬁles and
methodologies implemented by other BioConductor packages.
These features deﬁne a uniﬁed framework that allows the efﬁcient
use of the environment set by both R and BioConductor projects
and increase the productivity of novel methods and algorithms.

ACKNOWLEDGEMENTS

Robert Gentleman, Wolfgang Huber, Martin Morgan, Seth Falcon,
Marc Carlson, Vincent Carey, Robert Scharpf and James MacDonald
for insights, comments and lengthy discussions on the package
implementation. Ming-Wen An for suggestions that signiﬁcantly
improved the readability of the manuscript. Marvin Newhouse and
Jiong Yang for all the help with the computational environment.

Funding: Doctoral scholarship awarded by the Brazilian Funding
Agency CAPES (Coordenagao de Aprimoramento Pessoal de Nivel
Superior) and National Institutes of Health grants R01RR021967
and P41HG004059.

Conﬂict of Interest: none declared.

REFERENCES

Bolstad,B.M. et a1. (2003) A comparison of normalization methods for high density
oligonucleotide array data based on variance and bias. Bioinformatics, 19, 1857193.

 

2366

112 /3.ro's1Burno[pJOJXO'soerJJOJurorqﬂ:duq uror} pep1201umoq

9103 ‘1gisn8nv 110::

Oligo package

 

Carvalho,B.S. et a1. (2007) Exploration, normalization, and genotype calls of high-
density oligonucleotide SNP array data. Biostatistics, 8, 485499.

Carvalho,B.S. et a1. (2010) Quantifying uncertainty in genotype calls. Bioinformatics,
26, 2427249.

Clark,T.A. et a1. (2007) Discovery of tissue-speciﬁc exons using comprehensive human
exon microarrays. Genome Biol, 8, R64.

Gautier,L. et a1. (2004) affyianalysis of affymetrix genechip data at the probe level.
Bioinformatics, 20, 3077315.

Gentleman,R.C. et a1. (2004) Bioconductor: open software development for
computational biology and bioinformatics. Genome Biol, 5, R80.

Gitan,R.S. et a1. (2002) Methylation-speciﬁc oligonucleotide microarray: a
new potential for high-throughput methylation analysis. Genome Res, 12,
1587164.

Irizarry,R.A. et a1. (2008) Comprehensive high-throughput arrays for relative
methylation (CHARM). Genome Res, 18, 7807790.

Irizarry,R. et al. (2003a) Exploration, normalization, and summaries of high density
oligonucleotide array probe level data. Biostatistics, 4, 2497264.

Irizarry,R. et al. (2003b) Use of mixture models in a microarray-based screening
procedure for detecting differentially represented yeast mutants. Stat. Appl. Genet.
Mol. Biol, 2, Articlel.

Irizarry,R. et al. (2006a) Comparison of affymetrix genechip expression measures.
Bioinformatics, 22, 7897794.

Irizarry,R. et al. (2006b) Feature-level exploration of a published affymetrix genechip
control dataset. Genome Biol, 7, 404.

Ritchie,M.E. et a1. (2009) R/Bioconductor software for Illumina’s Inﬁnium whole-
genome genotyping BeadChips. Bioinformatics, 25, 262172623.

Scharpf,R.B. et a1. (2008) Hidden Markov models for the assessment of chromosomal
alterations using high-throughput SNP arrays. Ann. Appl. Stat., 2, 6877713.

The International HapMap Consortium (2003) The International HapMap Project.
Nature, 426, 7897796.

 

2367

112 /3.ro's1eurno[pJOJXO'soerJJOJurorqﬂ:duq uror} pepeo1umoq

9103 ‘1gisn8nv uo ::

