BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Adding sequences into existing alignment

 

For handling short unaligned sequences, another option,
——addfragments, has been designed. In this option, new
sequences are independently added into an alignment, without
considering the relationship among new sequences. This strategy
was adopted because most short sequences are not expected to
overlap each other. The calculation procedure is as follows:

(1) Compute a distance matrix of the existing alignment con—
sisting of N sequences. The pairwise alignment scores are
converted into pairwise distances (between 0 and 1) as in
Katoh et a]. (2002).

(2) Compute N ><n pairwise local alignments between the
N sequences in the existing alignment and the 11 new
sequences. Only the best alignment is used per sequence
pair. If no alignment is found, the distance is set to 1. By
default, the SmithiWaterman algorithm (Smith and
Waterman, 1981) is used [indicated as — —addfragments
(DP) in Tables below]. It can be replaced by LAST for faster
computation [indicated as — —addfragments (LAST)] for
nucleotide data.

(3) For each of the 11 new sequences, the same calculation as
in the — —add option is repeated independently. That is,

(a) Build a guide tree consisting of N +1 tips, using the
distances calculated in steps 1 and 2.

(b) Compute a multiple alignment consisting of N + 1 se—
quences using the guide tree computed at the previous
step.

(4) Combine 11 different MSAs, calculated in step 3, into one
MSA, inserting gaps as necessary. For each of the n
MSAs,

(a) If no gap was inserted into the existing alignment in
step 3, then no new gap is necessary in this step.

(b) If gaps were inserted into the existing alignment to
align the new sequence in step 3, then corresponding
gaps are inserted in the other new sequences in this
step.

If different new sequences create gaps in the same position in
the existing alignment, then the inserted new sequences are
aligned to each other.

Table 1. Comparison using SEPP dataset

Each of steps 13 runs in parallel, on a multi—core PC.

We implemented the aforementioned options in MAFFT ver—
sion 6.927. To test their performance, we used the same datasets
as those used in the PAGAN article (L'oytynoja et al., 2012).
These are two independently simulated datasets, prepared by
Loytynoja et a]. (2012) and Mirarab et a]. (2012). We included
two representative methods, PaPaRa version 2.0 and PAGAN
version 0.38, in the comparison because they can be used in
situations similar to ours.

Table 1 shows the result for one of the two datasets. See
Supplementary Material for details on the benchmark settings
and results. The ——addfragments option generally outper—
formed the other methods in accuracy, except for easy problems.
This table also shows results of profileisequence alignment. An
existing alignment was converted to a proﬁle, and each new se—
quence was separately aligned to the profile using mafft—pro—
file. The application of profile alignment in this situation is
conceptually wrong, as noted at the beginning. As shown in
Supplementary Table S1, the ——add option worked well for
full—length sequences, although it could not appropriately
handle fragmentary sequences, as expected.

The ——addfragments option performed well in compari—
son with existing methods that were specially designed for
aligning short sequences. For the SEPP dataset, as shown in
Table 1, it generally outperformed PaPaRa and PAGAN, but
in the easiest case (1000M4), the difference was minor. For the
PAGAN dataset (see Supplementary Table S1), the difference
among these three methods was small, but a slight tendency
was observed that PAGAN performed better for easy cases
and that ——addfragments performed better for difﬁcult
cases.

Our approach differs from PaPaRa and PAGAN, in that it
internally infers a tree of the existing alignment and the phylo—
genetic positions of new sequences in the tree. Thus, it can be
applied even when we have no sound phylogenetic information
of the existing alignment. This feature can be a disadvantage,
when the number of sequences, N, in the existing alignment is
large. Our method computes and stores 0(N2) distances, whereas
tree information needs only 0(N) space. We are planning to try
more approximate methods to overcome this limitation in the
future. On the other hand, the ——addfragments option is
scalable to the number of new sequences, 11.

 

 

Method\data 1000M2 1000M2-p 1000M3 1000M3-p 1000M4 CPU time (s) Actual time on 8 cores (s)
MAFFT

——addfrag-ments (DP) 0.8313 0.9970 0.9299 0.9975 0.9986 7487 1 026

——addfrag'ments (LAST) 0.8303 0.9970 0.9288 0.9974 0.9986 2635 676.7

——add (DP) 0.7280 0.9755 0.8440 0.9744 0.9790 15 360 2 160

——add (6mer) 0.2716 0.5935 0.4163 0.6398 0.8450 135.8

MAFFTiproflle 0.0345 0.0395 0.1077 0.1241 0.5991

PaPaRa 0.6739 0.9653 0.8339 0.9764 0.9973 2601 375.8

PAGAN (fast option) 0.9292 0.9316 0.9857 376.5

 

The estimated alignments were compared with the true alignments to measure the accuracy (the number of correctly aligned letters/the number of aligned letters in the true
alignment). The accuracy scores were averaged for all the pairs and then averaged for all the 20 simulated replicates. See Supplementary Material for the details.

 

3145

ﬁm'spzumofpmﬂo'sopeuuopuorq/ﬁdnq

K.Katoh and M.C.Frith

 

We had to use simulation because there is no established
benchmark dataset based on actual sequences for this purpose.
Thus, the assessment here is still insufflcient, especially for com—
paring methods with different scoring systems. We cannot com—
pletely exclude the possibility that the observations just reﬂect
the fitness of the parameter set to the simulation setting.
However, we can safely compare different MAFFT options
that use the same parameter set. They behaved similarly for
the two independent datasets, generated by different programs,
INDElible and ROSE. Thus, it is unlikely that the results are
artif1cial because of simulation settings. In the future, benchmark
datasets of actual sequences should be established for this type of
problem.

We did not assess the accuracy of phylogenetic placement of
the fragmentary sequences. As noted previously, MAFFT does
not use a user—defined tree of the existing alignment, unlike
PaPaRa and PAGAN. MAFFT calculates the phylogenetic pos—
itions of new sequences in an internally constructed tree, instead
of a user—defined tree. Thus, it is difficult to make straightfor—
ward assessments about the correctness of the phylogenetic pos—
ition in a given tree. Tests of phylogenetic placement using
alignments by different methods, including that described here,
are being performed by Tandy Warnow’s group (personal
communication).

The present results suggest the usefulness of a simple and
natural algorithm for adding new sequences into an alignment.
The straightforward strategy implemented as maf ft
——addfragments showed high performance for problems
that were previously used for assessing this type of method.
It can be a basis for extensions in several directions, such as
speciﬁc support for NGS data, and faster and more scalable
calculation.

ACKNOWLEDGEMENTS

The authors thank Osamu Gotoh for insightful comments. They
also thank Viet Huy Dinh and Shaq Liu, Osaka University, for
computational support.

FUNDING

KAKENHI for Young Scientists (B) 21700326 from
Monbukagakusho, Japan (to K.K.).

REFERENCES

Berger,S.A. and Stamatakis,A. (2011) Aligning short reads to reference alignments
and trees. Bioinformdtics, 27, 206872075.

Cole,J.R. et a]. (2009) The Ribosomal Database Project: improved alignments and
new tools for rRNA analysis. Nucleic Acids Res., 37, D1417D145.

Feng,D.F. and Doolittle,R.F. (1987) Progressive sequence alignment as a prerequis—
ite to correct phylogenetic trees. J. Mol. Evol., 25, 3517360.

Higgins,D.G. and Sharp,P.M. (1988) CLUSTAL: a package for perfomiing mul—
tiple sequence alignment on a microcomputer. Gene, 73, 2377244.
Katoh,K. et a]. (2002) MAFFT: a novel method for rapid multiple sequence align—
ment based on fast Fourier transfomi. Niwleic Acids Res., 30, 305973066.
Kielbasa,S.M. et a]. (2011) Adaptive seeds tame genomic sequence comparison.
Genome Res., 21, 4874193.

Loytynoja,A. et a]. (2012) Accurate extension of multiple sequence alignments using
a phylogeny—aware graph algorithm. Bioinformdtics, 28, 16844691.

Mirarab,S. et a]. (2012) SEPP: SATe—Enabled phylogenetic placement. Pdc. Symp.
Biocomput., 17, 2477258.

Punta,M. et a]. (2012) The Pfam protein families database. Nucleic Acids Res., 40,
D29(%D301.

Sigrist,C.J. et a]. (2010) PROSITE, a protein domain database for functional char—
acterization and annotation. Niwleic Acids Res., 38, D1617D166.

Smith,T.F. and Waterman,M.S. (1981) Identification of common molecular subse—
quences. J. Mol. Biol, 147, 1957197.

Sun,H. and Buhler,J.D. (2012) PhyLAT: a phylogenetic local alignment tool.
Bioinfommtics, 28, 133671344.

 

3146

ﬁm'spzumofpioyo'sopeuuopuorq/ﬁdnq

