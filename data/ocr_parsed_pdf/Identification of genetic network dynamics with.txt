ORIGINAL PAPER

Vol. 26 no. 9 2010, pages 1239—1245
doi: 1 0. 1 093/bioinformatics/btq120

 

Systems biology

Advance Access publication March 19, 2010

Identification of genetic network dynamics with unate structure

Riccardo Porrecal, Eugenio Cinquemani2’*, John Lygeros1 and Giancarlo Ferrari-Trecate3

1Institutf r Automatik, ETH Z rich, 8092 Z rich, Switzerland, 2INRIA Grenoble—Rh ne—Alpes, Montbonnot,
38334 Saint—Ismier Cedex, France and 3Dipartimento di Informatica e Sistemistica, Universit degli Studi di Pavia,

27100 Pavia, Italy
Associate Editor: Trey ldeker

 

ABSTRACT

Motivation: Modern experimental techniques for time course
measurement of gene expression enable the identification of
dynamical models of genetic regulatory networks. In general,
identification involves fitting appropriate network structures and
parameters to the data. For a given set of genes, exploring all
possible network structures is clearly prohibitive. Modelling and
identification methods for the a priori selection of network structures
compatible with biological knowledge and experimental data are
necessary to make the identification problem tractable.

Results: We propose a differential equation modelling framework
where the regulatory interactions among genes are expressed in
terms of unate functions, a class of gene activation rules commonly
encountered in Boolean network modelling. We establish analytical
properties of the models in the class and exploit them to devise a
two-step procedure for gene network reconstruction from product
concentration and synthesis rate time series. The first step isolates
a family of model structures compatible with the data from a set of
most relevant biological hypotheses. The second step explores this
family and returns a pool of best fitting models along with estimates
of their parameters. The method is tested on a simulated network
and compared with state-of-the-art network inference methods on
the benchmark synthetic network IRMA.

Contact: eugenio.cinquemani@inria.fr

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on September 30, 2009; revised on February 4, 2010;
accepted on March 16, 2010

1 INTRODUCTION

Identiﬁcation of genetic regulatory networks aims at inferring the
regulatory mechanisms of gene expression from experimental data.
Various modelling approaches have been employed with success for
the reconstruction of the network of interactions among genes (see
e.g. Bansal et (11., 2007; Gardner and Faith, 2005; Markowetz and
Spang, 2007, for recent reviews). In particular, Boolean activation
rules (Kauffman, 1969) have been proposed as a natural framework
for the description and reconstruction of gene activation rules,
whereas Bayesian networks (Nachman et (11., 2004; Nagarajan et (11.,
2004; Segal et (11., 2003) have been utilized to capture statistical
relationships in the expression of a network of genes.

 

*To whom correspondence should be addressed.

The development of experimental techniques for the quantitative
monitoring of gene expression over time is paving the way for the
learning of gene expression dynamics. Kinetic modelling, where
the interactions among genes are encoded into the structure of a
set of gene expression rates (see de Jong, 2002, and references
therein), provides an accurate description of the time evolution
of gene expression. Unfortunately, an overwhelming variety of
gene activation functions must be explored in order to reconstruct
the network structure and dynamics from the data. A way around
this complexity is to quantify genetic interactions by universal
approximators. In Jaeger et (11. (2004), the activation level of
each gene is quantiﬁed by a saturated linear combination of
the concentrations of the network proteins. This enables the
reconstruction of direction and sign (inhibition versus activation)
of the interactions among genes. Unlike in Boolean networks, the
interplay among controlling genes in the regulation of the controlled
gene (the ‘logics’ of the network) is not modelled explicitly. Similar
insight into regulatory interactions near equilibria is provided by the
linearization methods (Bansal et (11., 2007; Cinquemani et (11., 2009;
Gardner et (11., 2003; Zavlanos et (11., 2008). Glass and Kauffman
(1973) suggested to model switch-like regulatory interactions by
step functions. This results into a very simple piecewise linear model
of gene product concentration kinetics (constant synthesis rate plus
degradation) that can be ﬁtted to experimental data (Cinquemani
et (11., 2008; Drulhe et (11., 2008; Porreca et (11., 2008) quite efﬁciently.
For many activation functions, however, the approximation by step
functions is rather coarse and may prevent the use of this framework
for identiﬁcation.

In this work, we address the identiﬁcation of kinetic models
of gene regulatory networks from time course gene expression
data. Our primary interest is the reconstruction of the network
of interactions and logics behind gene expression control. We
propose a modelling framework where the synthesis rate equations
reﬂect the structure of a Class of gene activation rules known
as unate functions (Aracena, 2008). In the context of Boolean
modelling, unate ﬁlnctions capture all interactions where each
gene acts exclusively as an inducer or as an inhibitor for
the expression of another gene. Based on biochemical analysis,
Grefenstette et (11. (2006) argue that unate functions provide
a comprehensive modelling framework for genetic regulatory
networks. Unate ﬁinctions include hierarchically (or nested)
canalizing ﬁinctions (Jarrah et (11., 2007), a Class of Boolean
functions describing the majority of the known gene activation
rules (Kauffman et (11., 2004; Nikolajewa et (11., 2007; Szallasi
and Liang, 1998). Canalizing models are used for gene network
inference by Laubenbacher and Stigler (2004), Raeymaekers (2002)

 

© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 1239

112 /3.Io's[sumo[p.IOJxosotwurJOJutotq”:duq 11101} popBorumoq

9103 ‘{g anﬁnv 110::

R.Porreca et al.

 

and Akutsu et (11. (2000). We establish properties of the rate equations
with unate structure and exploit them to set up an identiﬁcation
procedure in two steps. The ﬁrst step selects a restricted family
of gene interaction patterns consistent with the experimental data.
The second step explores kinetic models with compatible structure
and returns a pool of kinetic models of lowest complexity that
explain the data in a statistical sense. This procedure ensures
that a reduced number of models need to be ﬁtted to the data,
leading to substantial computational savings. Still, the number
of model structures compatible with the data may be enormous
in practice. To cope with this, we show by a relevant example
how the method can be adapted to conﬁne the search of model
structures to the most relevant biological hypotheses. We assume
that gene product concentration and synthesis rate measurements are
available simultaneously at discrete time instants. Various direct of
indirect methods providing this data exists (see for instance Brown
and Lostroh, 2008; Ronen et (11., 2002). The performance of the
method is ﬁrst tested on a simulated system and then compared
with state-of-the-art on the network IRMA (In vivo assessment
of Reverse-engineering and Modeling Approaches), a synthetic
network designed by Cantone et (11. (2009) as a benchmark for gene
network inference algorithms.

2 METHODS

2.1 Kinetic models with unate structure

Consider a network with n genes. In the context of Boolean networks. the
activation status of gene i. with i = l, . . .,n. is encoded by a binary variable
X, that is 1 if the gene is active and 0 otherwise. The laws governing the
activation of gene i are captured by a Boolean rule B,»(X): {0, 1}” —> {0,1}.
with X=(X1,...,X,,). In practice. Bi depends only on the entries of X
corresponding to the genes that control the expression of gene i. Grefenstette
et a1. (2006) argued on the basis of biochemical reaction modelling that
virtually all regulatory interactions can be described by unate functions. Also
known as sign-deﬁnite functions. these are Boolean functions that are either
non-decreasing or non-increasing in each of the input variables. Every unate
function can be written in conjunctive normal form by an expression where
each variable X, appears either in a positive form (Xi itself) or in a negative
form (the negation of X». indicated by -X,»). but not both. That is. it can be
written as

Bi(X>=/\T1(X>. Tt(X>=Vx-. (1)

1:1 jeJ,

where ‘A’ and ‘V’ stand for conjunction (‘and’) and disjunction (‘or’).
respectively. each J, is a non-empty set of pairwise different indices from
{l,...,n}. and each variable X7]- is uniquely deﬁned as either  or -'Xj.
By convention. a conjunction of ni=0 terms is equal to l. A theoretical
investigation of the properties of Boolean regulatory networks based on
unate activation functions is developed by Aracena (2008). Unate functions
include. among others. the class of hierarchically canalizing functions (HCF;
Aracena. 2008). According to Kauffman et a1. (2004) and Szallasi and Liang
(1998). HCF capture a large class of the known regulatory interactions among
genes and are intimately related with the stability properties of the network.

Let x, ERZQ denote the concentration of the product of gene i. and let
x = (x1 , . . . ,xn). We consider ordinary differential equation models describing
the evolution ofx as follows (de Jong, 2002): for i: l,...,n.

it =gi(x)- Mix), (2)

where gi(x)z 0 and y,»(x)z 0 are the synthesis and the degradation rates of
the product of gene i. The gene network identiﬁcation methods that we will
discuss rely on sample observations of x and corresponding g,»(x). As long

as these data are available. the decay rate function y,»(x) does not enter the
problem and will be ignored. We focus on non-linear models of g,»(x) of
the type

gi(x)=K0,i+Kl,ibi(x)v (3)
where KQJ’ERZQ and KLI’ERZQ are constants and bi(x):R’£0—>[O,l]

quantiﬁes the regulatory effects of the gene products on the expression of
gene i via Hill activation functions (Keller. 1995; Yang et (11.. 2007):

xii 17"

+ — +

U (X')=—. U (X')=1—U (X')=—.
J xjgj+nd J J xjtj+nd

where (1 Z l is a cooperativity coefﬁcient and 17 > 0 is a threshold parameter.
We propose a modelling framework where the unate structure of gene
activation functions is reﬂected into the algebraic structure of b,»(x). Given an
activation function (1). we obtain the corresponding b,»(x) by the following
transformation rules. For parameters (1 and 17 possibly depending on i.
we replace each X, by o+(xi). Given any two functions r(x) and r’(x)
representing the Boolean expressions T(X) and T’(X). we encode -'T(X)
by l — r(x) and T(X)/\ T’(X) by r(x) - r’(x). With these rules. Equation (1) is
transformed into (Supplementary Material)

birx>=Hnrxt Tl(x)=1—H(1—Ui(xj))v (4)

1:1 jeJ,

where oi(xj)=o+(xj) if )2}sz and oi(xj)=o_(xj) if X7]- =-'X]-. By
convention. a product of zero terms. i.e. n,»=0. is equal to 1. According
to Plahte et a1. (1998). this is the algebraic counterpart of (1) if xj low is
interpreted as  = 0 and xj high is interpreted as  = 1. We will refer to (24)
as a kinetic model with unate structure.

2.2 Hierarchies of consistent models

We Show that kinetic models with unate structure possess monotonicity
properties that are independent of the model parameters and of the decay
rates y,»(x). These properties can be exploited in order to accept or reject
families of model structures based on a qualitative analysis of experimental
data. Since the results apply equally to any ﬁxed index i . in the remainder of
the section we will drop index i from g. We deﬁne the sign pattern of (34)
to be the n-tuplep=(pl,...,p,,)e {—l,0,+l}”. where. forj: l,...n.

0, ifj¢J,,l=1,...,n,,
p]: 1, ifoi(xj)=o+(xj),
—1, ifaiocj)=a-(xj).

Note that many different functions of the form (4) share the same Sign
pattern. We will write g(x|p) in place of g(x) to specify a synthesis rate
with Sign pattern [7. The complexity C (p) of a Sign pattern [7 is deﬁned as the
number of non-zero entries of p. and is equal to the number of effective inputs
of g(x|p). Given any Sign pattern [7 with C (p) > 0 and any two concentration
vectors x1 and x2. it holds that (Supplementary Material)

[moi—$20. 1:1.....n] =>[g(x2|p)—g(x‘|p)20j- (5)

In words. if all the elements ofx move in the direction of growth (deﬁned
by p) of the corresponding sigmoid in g(x|p). then g(x|p) is bound to increase.
In View of identiﬁcation. consider a set of in concentration measurements xk
and corresponding synthesis rates gk 2 g(xk). with k = l, . . . ,m. A Sign pattern
[7 is called inconsistent with the data if there exist two data points (xk, gk)
and (xl,gl). with k,l e {1, . . . ,m}. for which (5) is violated. i.e.

[pj(lef—x;)30,j=l,...,n] and [gk—gl<0]. (6)

A pattern that is not inconsistent is called consistent with the data. A Sign
pattern [7’ is called a subpattern of p (and p is a superpattern of 17’) if all its

 

1 240

112 /3.IO'S[1211anprOJXO'SOIJBLUJOJIIIOIq”Idllq wort popcorn/hog

9103 ‘{g anﬁnv 110::

Identification of genetic network dynamics with unate structure

 

non-zero entries are equal to the corresponding entries of [7. We indicate this
fact by the notation p’ E [7. It is easily seen that in this case C (p/ ) 5 C (p) and
subpatterns of inconsistent Sign patterns are also inconsistent. Conversely.
superpatterns of consistent Sign patterns are also consistent. Let us compute
a set 13 as follows.

Computation off: set 13:0. For all indices k,le {1, . . . ,m}:

(I) If gk—gl <0. deﬁne the Sign pattern ﬁ=Q31,...,[7,,) by setting 13,-:

Signor}? —x]l). withj=1,...,n. and include [—7 in 13.
[By convention sign(0) = 0]. It follows from above that all Sign patterns in
13 are inconsistent. Moreover. it is shown in the Supplementary Material that
every inconsistent Sign pattern [7 is a subpattern of at least one pattern [—7 61—).
It is possible to determine a set P* of minimal consistent Sign patterns. such
that every consistent pattern is a superpattern of at least one Sign pattern in
P*. In light of these properties. we will denote the hierarchy of consistent
Sign patterns by %(P*). Given 13. the set P* of minimal consistent Sign
patterns can be computed by the following procedure.
Computation of P*: deﬁne Z: max{C([7): [7 e 13}. Initialize P* :0. For
increasing values of complexity E = 0, . . . , min{n, Z + 1}:

(II) Generate all patterns [7 of complexity E. For each such [7.

(III) Check if p is consistent by verifying that there is no [—7613 such that
[7 E13. If this is the case.

(IV) Check if p is minimal consistent by verifying that there is no [7* EP*
such that [7* Ep. If this is the case. include [7 in P*.

The complexity of the computation of 13 is @(mz). In the current
implementation. the complexity of the computation of P* from I3 is 6(35).
with Z 5 n. The correctness of the algorithm is proven in the Supplementary
Material. In practice. the procedure will be applied to noisy data. The
necessary extensions are presented in the next section.

2.3 Structure and parameter identiﬁcation

We exploit the properties of kinetic models with unate structure to perform
model identiﬁcation in two steps. In a ﬁrst step. data is used to select a
hierarchy .96” of consistent Sign patterns. In a second step. we ﬁt models of
increasing complexity with Sign pattern in .96” in order to build a pool 33
of models explaining the data with sufﬁcient accuracy. The method requires
simultaneous measurements of gene product concentrations and synthesis
rates at in time instants t1,...,t,,,. and a quantiﬁcation of the statistics of the
measurement noise. We assume that data obeys the following measurement
model: for k=1,...,m.

ii=xi+er gi=gi+er (7)

where  and  are noisy observations of x? =xi(tk) and  =g(x(tk)).
respectively. while  and e? are mutually uncorrelated Gaussian random
variables with zero mean and variance vg(xl].{)=var(ef) and v€(gf)=var(ef)
possibly depending on x? and gf. We assume that the functions ve(xi) and
v€(g,») are known. This measurement model includes. for instance. additive
noise models. where vg and v6 are positive constants. and multiplicative
noise models (see e. g. Kreutz et al.. 2007). where vg(xi) and v€(g,») are linear
functions of x? and giz.

2.3.] Outline of the algorithm Given a Sign pattern [7. let S (p) be a set of
admissible structures for a model g(xlp). Under the assumption that g(xlp) has
a unate structure. each element s e S(p) determines the family of index sets
J1 , . . . ,Jni of Equation (4) and. in accordance with p. the Sign of the sigmoids
oi(xj). with j=1,...,n. For a model (4) with structure s. the parameters
Km. 161,1, and the cooperativity and threshold parameters of all the sigmoids
in the model will be collectively denoted by 9. Given data (£11,371), with
k = 1, . . . ,m. and values N > 0 and 01 6(0, 1) speciﬁed by the user. we perform
identiﬁcation by the following algorithm. executed separately for each gene
i = 1, . . . , n. (The deﬁnition of several new quantities. including N and 01. will
be discussed shortly.)

 

Algorithm 1 Two-step identiﬁcation.

 

Step 1. (Selection of consistent model structures)

1. Set 13:11. For all indices k,le {1,...,m}, if g”? —g”§ < —Na’g‘;l
then deﬁnef)=([31.---,I_7n) by

—1, ifff—fjlg—Naéf’l,
—._ . ~k ~l k.l -_
111— lij —xj3NoX/,, J—lin-in.

1 7
0, otherwise,

and include 13 in 13.

II—IV. Execute the computation of P* from the resulting P, as
described in Section 2.2.

Step 2. (Identiﬁcation of best consistent models) Set 9 = ((1. Deﬁne
1* = min{C(p*): 11* EP*}. For 1 =1* to n:

V. Generate patterns 1) such that C (p)=1 and 11* £1) for some
11* EP*. For each such I), execute VI.
VI. For all seS(p), ﬁt the model g,(-) with sign pattern 1) and
structure s by solving the nonlinear regression problem

m
. ~ ~ 2
3=n161nZWk (gl‘ —g.-(x">) . (8)
k=1
If 6 < 1(a), include the ﬁtted model in 9.
VII. If 9 7S ((1 return 9 and exit.

 

2.3.2 Discussion of the algorithm Step 1 computes the minimal consistent
Sign patterns. The procedure is an adaptation of Steps 171V of Section 2.2
to allow for the presence of measurement noise. For the various indices
l,ke {1,...,m} andje{1,...,n}. we employ standard statistical hypothesis
testing for the mean of Gaussian random variables in order to evaluate the
signs of gf—gﬁ and lef—le. on the basis of noisy data. For a given N>
0 (typically integer). the hypothesis  —g§ <0 is accepted if and only if
 —g§ < —No:fl:l. where 0:23! is the standard deviation ofgf —g§. On the basis

of (7). we make the approximation o§;l=‘/v€(gf)+ve(g§). Likewise. for

of]?! = ivg( ~11?)+vg(fjl.). we accept the hypothesis x1]? —le < 0 (i.e. set [—7]- : — 1)

iffjl-C —)E]l- 5 —Nof]:l. the hypothesis x1]? —le > 0 (131-: 1) iffjl-C —)E]l- ZNof/rl and
the hypothesis x1]? —x; :0 (131-20) otherwise. The result of Step 1 is a set of
minimal consistent Sign patterns P*. The smaller N . the smaller %(P*). at
the price of an increased probability of excluding the true Sign pattern from
.92”(P*).

In Step 2. we seek models with structure compatible with %(P*) that
explain the data with sufﬁcient accuracy. The search is conducted by
increasing levels of complexity 6. starting from the simplest models (6 26*)
with structure compatible with %(P*) onwards. and is stopped at the level
of complexity where at least one good model is found. The parameters 6 of
a candidate model g(-) with Sign pattern [7 and structure s are estimated by
regression (8). The choice of the weights wk is determined by the statistics
of the ﬁtting errors  —gi(fk). Under the null hypothesis that structure and
parameters ofgi are correct.  — gi(fk) is approximately Gaussian with mean
0 and covariance 02(xk , g?) = G(xk)Tdiag(ve(x]f), . . . , vg(xﬁ)) G(xk) + v€(gf).
where G(x) is the column vector given by G(x) = 3g,»(x)/3x. Therefore.
the choice wk 2 (02(fk , ))_l guarantees that the error residuals are
appropriately weighted by the inverse of the corresponding noise levels. In
addition. under the same null hypothesis. this choice approximately yields
8~ X2(m— |9|) (chi-square distributed with m— |6| degrees of freedom. see
the Supplementary Material). This fact is used to set the model acceptance

 

1241

112 /3.Io's112an0[p.IOJxosotwurJOJutotq”:duq 111011 popeo1umoq

9103 ‘1g15n8nv 110::

R.Porreca et al.

 

threshold t(ot). For a suitable 016(0, 1). we choose T((X)=Fmi 161(01). where

F,;1 is the inverse of a chi-square distribution with in degrees of freedom.
Then. with conﬁdence level 01. we reject the hypothesis that a model g,»(-)
with residual ﬁtting error 8 is a satisfactory description of the data if 8 Z t(ot).
otherwise we accept the model and stop the iterations of the identiﬁcation
procedure at the current level of complexity. This mechanism favours simple
models over complicated ones. reducing the risk of overﬁtting: the search of
acceptable models proceeds by increasing levels of complexity E and halts
at the level for which at least one model is found. Several models of the
same complexity may be accepted. If no good model exists. the procedure
terminates at the maximum level of complexity n returning the empty set
33 = (4. Alternatively. a smaller upper bound to the complexity of the models
searched can be placed by the user in the light of biological considerations.
For the special circumstance where b,»(x)EO (no effective inputs). it is
convenient to introduce a preprocessing step that checks if a constant model
explaining the data well enough exists. We do this by a standard chi-square
test with conﬁdence level 01:
Step 0. (Check for trivial dynamics) For m =---=w,,,=1. solve
regression (8) with respect to g,»(x)EK0,,»=9. If 8 <v€(K0,,»)-F,;il(ot). then
return the model g,»(x) 2 K0,,» and exit. Otherwise execute Algorithm 1.

2.3.3 Restriction of the search space. In practice. searching all unate
structures S(p) associated with a sign pattern p is prohibitive. especially
for large values of complexity C(p). A possible remedy is to conﬁne the
search to sign patterns having limited complexity (i.e. only a limited number
of genes may have a direct regulatory effect on the expression of another
gene). Another sensible approach is to reduce the set of model structures
S (p) associated with each sign pattern p. Based on a priori information on the
nature of the interactions. separately for every gene i = 1, . . . , n. identiﬁcation
can be focused on the most relevant models of regulation.

For example. Nikolajewa et al. (2007) note that many gene activation
rules are unate functions (in fact HCF) in one of the following forms:

leAXjZAXhA-“AXJ'Z OI'

BX: ~ - - -
l( ) [leVijlAstAmAXizv

(9)
where E is the number of effective inputs of B,»(X) and j 1 , . . . , jg are pairwise
different indices from the set {1, . . . , n}. Both expressions are in the form (1).
Following Section 2.1. the algebraic counterpart of (9) becomes

(Ti (x11 )Ui (sz )Ui (x13 )' ' "7i (x12) Or
an): [1— (1 -Ui(n1))(1-Ui(xiz))lx (10>
aims-«tori».

For the purpose of exempliﬁcation. in our identiﬁcation experiments we
will restrict ourselves to models in form (10). which will be referred to as
kinetic models with Y-structure.

2.3.4 Performance ina'ices. In order to provide an evaluation of our
identiﬁcation method. we propose suitable indices of performance for Steps
1 and 2 based on repeated identiﬁcation experiments. Let p* and s" denote
the sign pattern and the structure of the true model. Let it“ and 33’. with
r=1,...,M. denote the hierarchy of consistent Sign patterns and the pool
of identiﬁed models. respectively. computed by the r-th of M identiﬁcation
experiments. We shall write s e 33’ to denote that 33’ contains a model with
structure s. For Step 1. we deﬁne the reliability index R: |{r: p* e 91”} |/M
(l - | denotes set cardinality) and the selectivity index

1 llpeﬁimi C(17)SC(17*)}|
Z —.

3:1——
MR llpi C(17)SC(17*)}|

r: 11*6320’
R e [0, 1] is the relative frequency of p* falling in the set of consistent Sign
patterns: the larger R. the more reliable the procedure. When p* is deemed
consistent. S e [0, 1] counts the number of patterns that need not be explored
in Step 2 thanks to Step 1. relative to the number of patterns that would be

explored in Step 2 in absence of Step 1. under the assumption that the model
acceptance criterion in Step 2 is perfect. Therefore. S e [0, 1] quantiﬁes the
computational savings provided by Step 1: the larger S . the more signiﬁcant
the saving. For Step 2. we deﬁne the accuracy index A: |{r:s* e 33’}|/M
and the dispersion index D = (2,316 9, lgzr |)/MA. A 6 [0,1] is the relative
frequency of s" being found in the pool of identiﬁed models: the higher
A. the more effective the identiﬁcation. When s* is found in the pool of
identiﬁed models. D Z 1 counts how many models are included in the pool
on an average: the smaller the D. the more accurate the results.

3 RESULTS AND DISCUSSION

In this section, we will discuss the identiﬁcation of two regulatory
networks by the algorithm in Section 2. The ﬁrst is an in silico
network speciﬁcally designed for testing the performance of the
identiﬁcation method. The second is IRMA, a synthetic network
engineered by Cantone et (11. (2009) in Saccharomyces cerevisiae
cells and proposed as a benchmark for the comparison of
reverse engineering algorithms. The identiﬁcation algorithm was
implemented in MATLAB and optimization (8) was performed by
the standard MATLAB procedure fmincon.

3.1 Performance test on a repressilator

We considered a network of six genes where three genes form a core
control loop in which a single gene represses the expression of the
next gene. This portion of the network is usually called repressilator
and was ﬁrst synthesized by Elowitz and Leibler (2000). It induces
oscillations in the product concentration and activation levels of each
of the genes. The expression of the remaining three genes is activated
according to various functions of the product concentrations of the
core genes. The network is governed by the following equations (for
a graphical representation of the network refer the Supplementary
Material):

X1=K0,1+K1,10_(x3)—V1X17 (11)
12=K0,2+K1,20_(X1)—V2x27 (12)
X3=K013+K1,30_(x2)—V3x37 (13)
X4=K0g4+K1ﬁ4i7—(x1)a+(x2)—1’4x47 (14)
515=K0,5+K1,5[1—a+(x2)0_(x3)1—y5x57 (15)

x6=xo,6+m,6[1—a+(x2>a+(x3>]a+(x1>—y6x6. (16)

The parameters and initial conditions for this system are reported
in the Supplementary Material. In particular, the cooperativity
coefﬁcients of the sigmoids are assumed known and equal to 2.1
(Elowitz and Leibler, 2000).

We attempted identiﬁcation of this system with 90 equally
spaced data points over a time interval such that the product
concentrations of the core genes complete three full oscillations.
Measurements  and  were artiﬁcially corrupted by Gaussian
noise samples according to the observation model (7), with ye (xi?) =
(Uex§)2 and v€(g§)=(o€g§)2, for the different noise levels (Te:
(76 = 001,003,005, 0.07. This corresponds to noise roughly within
3%, 10%, 15% and 20% of the actual values of x? and gf. The
performance of Algorithm 1 (with N :6 and (1:095) for the
various noise levels and all genes is conveyed by the scores on the
performance indices R, S, A and D (Table 1). These were computed

 

1 242

112 /3.Io's112an0[p.IOJxosotwurJOJutotq”:duq 111011 popeo1umoq

9103 ‘1g15n8nv 110::

Identification of genetic network dynamics with unate structure

 

Table 1. Identiﬁcation performance for the repressilator network

 

09,06 0.01 0.03 0.05 0.07

 

St 1 R 1 1 1 1
Gene 1 ep S 0.92 0.92 0.92 0.91
Ste 2 A 0.90 0.92 0.91 0.89

p D 1 1 1 1

R 1 1 1 1
Gene 2 Step 1 S 0.92 0.92 0.92 0.91
Ste 2 A 0.93 0.92 0.89 0.89

p D 1 1 1 1

R 1 1 1 1
Gene 3 Step 1 S 0.92 0.92 0.92 0.92
Ste 2 A 0.93 0.93 0.93 0.92

p D 1 1 1 1

St 1 R 1 1 1 1
Gene 4 ep S 0.94 0.92 0.87 0.65
St 2 A 0.94 0.94 0.93 0.89
ep D 1 1 1.02 1.44

R 1 1 1 1
Gene 5 Step 1 S 0.94 0.74 0.53 0.48
Ste 2 A 0.95 0.94 0.91 0.83

p D 1 1 1.79 4

R 1 1 1 1
Gene 6 Step 1 S 0.79 0.65 0.57 043
Ste 2 A 0.89 0.92 0.85 0.42
p D 1 1.02 2.76 2.74

 

as described in Section 2.3.4 on the basis of M = 100 identiﬁcation
runs with the same system evolution, but with different random
outcomes of the noise. Each run (MATLAB V.7 R.14) took on an
average roughly 5 min on a Windows XP workstation with Pentium
3.20 GHz processor and 2.00 GB RAM. Computational time ranged
from ~2 s for the identiﬁcation of g3 to ~4 min for the identiﬁcation
of g6. Step 1 always performs very reliably, i.e. index R is constantly
equal to 1. This is expected since the Choice N :6 makes Step 1
conservative, i.e. the probability of declaring the true sign pattern
inconsistent is negligible. The selectivity S generally decreases with
the increase of the noise level. Even for high noise level, however,
Step 1 is able to save the exploration of ~50% of the sign patterns
from the iterative identiﬁcation procedure in Step 2; note that the
total number of patterns that would be explored in absence of Step 1
is 232 for the most complicated case of Gene 6. The accuracy A of
Step 2 is very high. The true model structure is included in the pool
of identiﬁed models in >80% of the cases except for Gene 6. In
this case, which corresponds to the most complicated synthesis rate
function, the accuracy drops drastically with the increase of noise.
On average, pools of less than four models (index D) are returned
and need to be discriminated on the basis of biological knowledge or
dedicated experiments. Note that the data ﬁt of all models produced
by Algorithm 1 is satisfactory (according to the acceptance test in
Step 2.VI of Algorithm 1), even if the correct model is not found.
Scores D in Table 1 reveal that when the true structure is among
the models found it is also often the only model found. Intuitively,
this means that frequently the best ﬁt model (usually associated
to the correct structure) is the only one that passes the acceptance

test among models of the same complexity. Finally, for correctly
identiﬁed model structures, parameter estimates turned out to be
quite accurate in all numerical experiments (results not shown).

3.2 Performance assessment on the IRMA network

A graphical representation of the network of interactions IRMA,
comprising ﬁve genes, is depicted in Figure 1a. Time series of
gene product concentrations and corresponding standard errors
were obtained in Cantone et (11. (2009) by averaging different
experimental replicates (Supplementary Material) under two
growth-medium conditions termed switch-on and switch-oﬁ’. In
particular, 15 and 20 data points collected every 20 and 10 min are
available for the switch-on and switch-off experiments, respectively.

Data in both conditions were used to assess the performance
of different state-of-the-art techniques, ranging from ordinary
differential equation (ODE) models to Bayesian and information
theoretic approaches. In order to quantify the performance of
reverse engineering algorithms, Cantone et (11. (2009) considered the
unsigned directed graph produced by each method and compared
it with the unsigned version of the graph in Figure 1 computing
the positive predictive value (PPV) = TP/(TP + FP) (TP, true positive
arcs; FP, false positive arcs) and the Sensitivity (Se) =TP/(TP+ FN)
(FN, false negative arcs). The use of unsigned graphs does not
make any distinction between activatory and inhibitory interactions.
According to Cantone et (11. (2009), the ODE-based TSNI algorithm
(Bansal and di Bernardo, 2007) was able to achieve the best
performance in the context of reverse engineering from time series
data, and hence it will be used for comparison in our study. The
networks produced by TSNI are reported in Figure lb along with
their performance measures.

Given the availability of time series concentration data only and
due to the lack of in vivo measurements of synthesis rates, we
generated the latter data using the mathematical model proposed
by Cantone et (11. (2009, Supplementary Results) where just three
out of ﬁve kinetic models have a unate structure. We then applied
Algorithm 1 withN = 2 and at = 0.95 to the combination ofthe in vivo
concentration and in Silico synthesis data. The latter were corrupted
by an artiﬁcial measurement noise according to (7) with (egg);
Three values of (76 (0.07, 0.1 and 0.3) were considered. Roughly,
they correspond to noise contributions within 20%, 30% and 90%
of the data values. The value N :2 was Chosen to make the sign
pattern selection effective given the highly noisy data. For each
value of (76, 100 noisy dataset were produced and, for each dataset,
a single reconstructed network was obtained by selecting the best
ﬁt model among the pool returned by Algorithm 1. The average
performance of the method was evaluated by computing mean and
standard error of the PPV and Se values for the 100 reconstructed
networks, as shown in Table 2. In order to provide a visual inspection
of the results, Figure 10 shows as representative networks the ones
inferred more frequently for switch-on and switch-off time series.

Results in Table 2 show that Algorithm 1 succeeds in
reconstructing correct interactions for the two lower noise levels,
outperforming TSNI also. There is a decay of performance for
increasing values of (76, particularly relevant for the highest noise
level. The good performance of the proposed technique is conﬁrmed
by the representative networks in Figure 10, in particular with respect
to the few false positive interactions. Interestingly, our method
is also accurate in inferring the sign (activation/inhibition) of the

 

1 243

112 /3.Io's112an0[p.IOJXO'sotwurJOJutotq”:duq 111011 popeo1umoq

9103 ‘1g15n8nv 110::

R.Porreca et al.

 

b) switch on data

(a) (

e

c o e /
—

True network TSNI

switch off data (C)
PPV=0.80[0.60]; Se=0.50[0.38] PPV=0.60[0.20]; Se=0.38[0.13]

_  ....... .. 6,9

switch off data
PPV=1; Se=0.63,0.63,0.25

switch on data
PPV=1; Se=0.63,0.38,0.38

    

Algorithm 1

Fig. 1. (a) True network of interactions in IRMA. Results obtained by (b) the TSNI algorithm (Cantone et al.. 2009) and by (c) Algorithm 1. Grey arcs
(respectively. grey-end markers) denote incorrect direction (respectively. sign) of the inferred interactions. Values of PPV and Se for the signed directed graph.
when different from the unsigned case. appear in square brackets. The three values of Se in (c) refer to increasing noise levels. while dashed and dotted arcs

denote interactions inferred only for :76 < 0.3 and :76 < 0.1. respectively.

Table 2. Average performance (standard errors in parentheses) on the IRMA
datasets for different noise levels

 

Switch-on data Switch-off data

 

 

a. PPV Se PPV Se

0 07 0.98 (0.07) 0.53 (0.08) 0.91 (0.12) 0.58 (0.07)
‘ [0.98 (0.07)] [0.53 (0.08)] [0.88 (0.13)] [0.56 (0.08)]

0 1 0.95 (0.10) 0.46 (0.08) 0.85 (0.14) 0.51 (0.09)
‘ [0.94 (0.11)] [0.46 (0.08)] [0.80 (0.14)] [0.48 (0.09)]

0 3 0.67 (0.23) 0.29 (0.10) 0.58 (0.25) 0.25 (0.11)
‘ [0.64 (0.24)] [0.27 (0.10)] [0.52 (0.25)] [0.22 (0.11)]

 

Indices PPV and Se are reported for both the signed (in square brackets) and unsigned
(without square brackets) directed graph.

interactions. Indeed, PPV and Se values computed with respect the
signed graph in Figure 1a (i.e. an arc is false positive if it has either
the wrong direction or the wrong sign) and shown in Table 2 are
very similar to their unsigned counterparts. Moreover, all arcs in
Figure 10 have the correct sign. Conversely, there is a signiﬁcant
performance decay for the TSNI algorithm, especially for the switch-
off data where only one out of the ﬁve reconstructed interactions has
correct direction and sign. This analysis reveals that the proper use
of concentration and synthesis rate data can signiﬁcantly improve
results obtained by methods based on concentration data only, such
as the algorithms considered in Cantone et (11. (2009).

4 CONCLUDING REMARKS

We presented a kinetic modelling framework for genetic networks
based on the unate structure of the regulation functions
typically encountered in Boolean network modelling. We exploited
monotonicity properties of the models in this class to devise
a model identiﬁcation procedure. Assessment on an artiﬁcial
repressilator system and on the benchmark network IRMA revealed
that the method performs well and outperforms state-of-the-
art reconstruction methods provided product synthesis rates and
concentration time series are both available. The fact that our
method, compared with most reverse engineering algorithms,
provides a pool of accepted models opens new perspectives in the
analysis of the results. As an example one can assign conﬁdence

measures on the interactions according to their frequency of
appearance in the pool of accepted models. For the case where
only concentration time series are available, we are currently
working on the extension of the method based on non-parametric or
semiparametric estimation for the missing data. First results based
on bootstrapping suggest that the approach is still feasible in this
case.

ACKNOWLEDGEMENTS

The work of E. Cinquemani and J. Lygeros was supported in part
by the SystemsX.ch research consortium under the project YeastX.

Conﬂict of Interest: none declared.

REFERENCES

Akutsu,T. et al. (2000) Algorithms for identifying Boolean networks and related
biological networks based on matrix multiplication and ﬁngerprint function.
J. Comput. Biol, 7, 3317344.

Aracena,J. (2008) Maximum number of ﬁxed points in regulatory Boolean networks.
Bull. Math. Biol, 70, 139841409.

Bansal,M. and di Bernardo,D. (2007) Inference of gene networks from temporal gene
expression proﬁles. IET Syst. Biol, 1, 3067312.

Bansal,M. et al. (2007) How to infer gene networks from expression proﬁles. Mol Syst.
Biol, 3, 78.

Brown,D. and Lostroh,C.P. (2008) Inferring gene expression dynamics from reporter
protein levels. Biotechnol. J., 3, 143771448.

Cantone,I. et al. (2009) A yeast synthetic network for in vivo assessment of reverse-
engineering and modeling approaches. Cell, 137, 1727181.

Cinquemani,E. et al. (2008) Stochastic dynamics of genetic networks: modelling and
parameter identiﬁcation. Bioinformatics, 24, 274872754.

Cinquemani,E. et al. (2009) Local Identiﬁcation of Piecewise Deterministic Models
of Genetic Networks, Vol. N.5469 of LNCS Series. Springer, Berlin/Heidelberg,
Germany, pp. 1057119.

de Jong,H. (2002) Modeling and simulation of genetic regulatory systems: a literature
review. J. Comput. Biol, 9, 697105.

Drulhe,S. et al. (2008) Reconstruction of switching thresholds in piecewise-afﬁne
models of genetic regulatory networks. IEEE Trans. Automat. Control, 53, 1537165.

Elowitz,M. and Leibler,S. (2000) A synthetic oscillatory network of transcriptional
regulators. Nature, 403, 3357338.

Gardner,T. and Faith,J. (2005) Reverse-engineering transcription control networks.
Phys. Life Rev., 2, 65788.

Gardner,T. et al. (2003) Inferring genetic networks and identifying compound mode of
action via expression proﬁling. Science, 301, 1027105.

Glass,L. and Kauffman,S. (1973) The logical analysis of continuous, nonlinear
biochemical control networks. J. Theor Biol, 39, 1037129.

 

1 244

112 /3.Io's112an0prOJxosotwuiJOJutotq”:duq urorJ popeo1umoq

9103 ‘1gisn8nv 110::

Identification of genetic network dynamics with unate structure

 

Grefenstette,J. et al. (2006) An analysis of the class of gene regulatory functions implied
by a biochemical model. BioSystems, 84, 81490.

Jaeger,J. et al. (2004) Dynamic control of positional information in the early Drosophila
embryo. Nature, 430, 3684371.

Jarrah,A.S. et al. (2007) Nested canalyzing, unate cascade, and polynomial functions.
Physica D., 233, 1677174.

Kauffman,S. (1969) Metabolic stability and epigenesis in randomly constructed genetic
nets. J. Theor. Biol, 22, 437467.

Kauffman,S. et al. (2004) Genetic networks with canalyzing boolean rules are always
stable. Proc. Natl Acad. Sci. USA, 101, 17102717107.

Keller,A.D. (1995) Model genetic circuits encoding autoregulatory transcription factors.
J. Theor Biol, 172, 1694185.

Kreutz,C. et al. (2007) An error model for protein quantiﬁcation. Bioinformatics, 23,
274742753.

Laubenbacher,R. and Stigler,B. (2004) A computational algebra approach to the reverse
engineering of gene regulatory networks. J. Theor Biol, 229, 5234537.

Markowetz,F. and Spang,R. (2007) Inferring cellular networks: a review. BMC
Bioinformatics, 28 (Suppl. 6), SS.

Nachman,I. et al. (2004) Inferring quantitative models of regulatory networks from
expression data. Bioinformatics, 20 (Suppl. 1), i2484i256.

Nagarajan,R. et al. (2004) Modeling genetic networks from clonal analysis. J. Theor
Biol, 230, 3597373.

Nikolajewa,S. et al. (2007) Boolean networks with biologically relevant rules show
ordered behavior. BioSystems, 90, 4047.

Plahte,E. et al. (1998) A methodological basis for description and analysis of systems
with complex switch-like interactions. J. Math. Biol, 36, 3214348.

Porreca,R. et al. (2008) Structural identiﬁcation of piecewise-linear models of genetic
regulatory networks. J. Comput. Biol, 15, 136541380.

Raeymaekers,L. (2002) Dynamics of boolean networks controlled by biologically
meaningful functions. J. Theor Biol, 218, 3314342.

Ronen,M. et al. (2002) Assigning numbers to the arrows: Parameterizing a gene
regulation network by using accurate expression kinetics. Proc. Natl Acad. Sci.
USA, 99, 10555710560.

Segal,E. et al. (2003) Module networks: Identifying regulatory modules and their
condition-speciﬁc regulators from gene expression data. Nat. Genet, 34, 1664176.

Szallasi,Z. and Liang,S. (1998) Modeling the normal and neoplastic cell cycle
with “realistic Boolean genetic networks”: their application for understanding
carcinogenesis and assessing therapeutic strategies. Proc. Pac. Symp. Biocomput.,
3, 66776.

Yang,H. et al. (2007) An analytical rate expression for the kinetics of gene transcription
mediated by dimeric transcription factors. J. Biochem, 142, 1354144.

Zavlanos,M. et al. (2008) Identiﬁcation of stable genetic networks using convex
programming. In Proceedings of the American Control Conference, IEEE Inc.,
Piscataway, Washington, USA, pp. 275542760.

 

1 245

112 /3.Io's112an0prOJxosotwuiJOJutotq”:duq urorJ popeo1umoq

9103 ‘1gisn8nv 110::

