Bioinformatics, 32(10), 2016, 1577—1579

doi: 10.1093/bioinformatics/btiA/037

Advance Access Publication Date: 22 January 2016
Applications Note

 

 

Gene expression

PAA: an R/bioconductor package for biomarker
discovery with protein microarrays

Michael Turewicz*, Maike Ahrens, Caroline May, Katrin Marcus and

Martin Eisenacher*

Medizinisches Proteom-Center, Ruhr-University Bochum, Bochum, 44801, Germany

*To whom correspondence should be addressed.
Associate Editor: Ziv Bar-Joseph

Received and revised on 17 November 2015; accepted on 15 January 2016

Abstract

Summary: The R/Bioconductor package Protein Array Analyzer(PAA) facilitates a flexible analysis
of protein microarrays for biomarker discovery (esp., ProtoArrays). It provides a complete data ana—
lysis workflow including preprocessing and quality control, uni— and multivariate feature selection
as well as several different plots and results tables to outline and evaluate the analysis results. As a
main feature, PAA’s multivariate feature selection methods are based on recursive feature elimin—
ation (e.g. SVM—recursive feature elimination, SVM—RFE) with stability ensuring strategies such as
ensemble feature selection. This enables PAA to detect stable and reliable biomarker candidate

panels.

Availability and implementation: PAA is freely available (BSD 3—clause license) from http://

www.bioconductor.org/packages/PAA/.

Contact: michael.turewicz@rub.de or martin.eisenacher@rub.de

 

1 Introduction

Protein microarrays (PMs) such as the ProtoArray by Thermo Fisher
Scientific, Waltham, MA, USA, are used for autoimmune antibody
screening studies, e.g. to discover biomarker candidate panels in
human body ﬂuids to discriminate two groups of samples (e.g. ‘dis—
eased’ and ‘controls’). For ProtoArray data analysis the software
Prospector is often used because it provides the advantageous uni—
variate feature ranking approach minimum M statistic (mMs)
(Love, 2007) and a ProtoArray—specific robust linear model normal—
ization (rlm) (Sboner et (11., 2009). However, since Prospector pro—
vides hardly any further functionality for biomarker discovery it is a
quite limited tool (Turewicz et (11., 2013). Therefore, we have
adopted and extended Prospector’s key features (mMs, rlm) and im—
plemented PAA which provides a complete data analysis pipeline for
ProtoArrays and other single color PMs.

2 PAA workflow

The adaptable PAA workﬂow consists of six parts (see Fig. 1) which
are described in the following subsections.

©The Author 2016. Published by Oxford University Press.

2.1 Data import

PAA imports microarray data in gpr file format. Therefore, it pro—
vides the function loadGPR which imports all needed data into an
object of class EListRaw (Expression List). To load the desired files
and pass metadata not contained in the gpr files (e.g. mapping be—
tween sample IDs and gpr files, batch information, clinical data,
etc.) a so called targets file has to be created previously and provided
to loadGPR. In case of ProtoArrays, spot duplicates are condensed
by taking the smaller value or taking the mean after data import.
Besides ProtoArrays, data of all one color microarrays in gpr file for—
mat (e.g. other PMs) can be imported.

2.2 Preprocessing and quality control

PAA provides several different preprocessing methods to make all
PM intensity values inter— and intra—array—wise comparable. E.g.
batch effects must be minimized when PMs from different manufac—
turing lots are compared in large studies (Turewicz et (11., 2013).
Therefore, PAA provides the function batchFilter to detect and dis—
card differential features between PM manufacturing lots.
Furthermore, the function batchAd/ust can be used to adjust for
known microarray batches. The function normalizeArrays provides

1577

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.0/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /310'slcu1n0[p103x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

9103 ‘Og anﬁnv 110 ::

1578

M. Turewicz et aI.

 

Biomarker
candidates
inspection

Data import

Preprocessing
& quality control

Differential
analysis

Feature
selection

Feature

preselection
_I

Fig. 1. The FAA workflow. The six parts of the PAA workflow including their
specific function names and plots are shown. Each analysis begins with ’data
import’and ends with ’biomarker candidates inspection’

several different normalization methods. E.g. the ProtoArray—spe—
cific rlm approach which uses specific control spots has been reim—
plemented for PAA. Brieﬂy, the model

We 2 o(1"l' l},- + 17k + Ei/"kr (1)

where yil-k, is the measured spot signal in log2 scale (of array 1', block
/, feature [2 and replicate r), at,- is the array effect, [3,- is the block ef—
fect, 17;, is the actual feature signal and 6,713, is a random error
(ail-k, N N (0472)) is fitted using robust regression to compute the
corrected intensities via 37,7,” : 2"(y,-,-k, + or,- + [3,). Other normaliza—
tion approaches provided by normalizeArrays are: cyclic loess,
quantile and vsn. To assist in choosing an appropriate normalization
method, PAA offers two functions: plotMAPlots drawing MA plots
and plotNormMet/oods drawing box plots visualizing differences be—
fore and after normalization. For quality control, the function
plotArray reconstructs the original spot positions from gpr files to
draw a plot mimicking the original scan image and to visualize PMs
for which no scan image is available. Then, visual inspection of the
spatial intensity pattern can identify strong local tendencies and spa—
tial biases. Moreover, PMs can be inspected after each preprocessing
step in order to check the impact of the applied methods.

2.3 Differential analysis

PAA offers univariate biomarker discovery with fold change and
P—value calculation via the functions diffAnalysis, pvalnePlot and
volcanoPlot.

2.4 Biomarker candidate selection

Biomarker candidate selection via feature selection methods is the
central task in computational biomarker discovery. Multivariate
approaches based on embedded classifier algorithms model feature
interdependencies, interact with the classifier and result in more ac—
curate classifications than simpler strategies (Saeys et (11., 2007).
Hence, PAA comes with three recursive feature elimination (RFE) al—
gorithms: (i) a reimplementation of SVM—RFE (Guyon et (11., 2002)
which utilizes the weights of linear SVMs; (ii) a similar RFE ap—
proach using Random Forests (RFs) (Jiang et (11., 2004) called RF—
RFE; (iii) an interface to RJ—RFE, the RFE method of the C++
package Random jungle (RJ) (Schwarz et (11., 2010) which is a fast
RF reimplementation. All three variants of RFE can be called via the
function selectFeatnres and are embedded in frequency—based

 

feature selection (FFS) (Baek et (11., 2009) and ensemble feature se—
lection (EFS) (Abeel et (11., 2010) which are strategies that ensure sta—
ble and reliable biomarker panels.

2.5 Feature preselection

Because RFE embedded in FFS or EFS are computationally expen—
sive multivariate methods for large datasets (e.g. group sizes >30
each) it is often beneficial to reduce the number of variables before—
hand. Therefore, PAA provides several univariate preselection meth—
ods via the function preselect. The default method is mMs
(implemented in C ++ to improve run times) which provides a
P—value based on an urn model (similar approach to the hypergeo—
metric test). Besides mMs, PAA provides t test— and MRMR—based
(Peng et (11., 2005) preselection.

2.6 Biomarker candidates inspection

PAA returns various output for results evaluation. E.g. the plots re—
turned by pvalnePlot and volcanoPlot visualize differential features
from the univariate perspective. ROC curves and results files outlin—
ing the classification performance can be returned by selectFeatnres.
After feature selection the resulting biomarker candidate panel can
be inspected. Therefore, PAA comes with three functions: (i)
plotFeatnres plots the ﬂuorescence intensities of the selected bio—
marker candidates in group specific colors (one sub—figure per candi—
date) in order to visualize the differences; (ii) the selected panel and
all related protein information can be saved via printFeatnres into a
txt file suitable for analysis with external tools (e.g. annotation); (iii)
a heat map of the candidate panel can be plotted by
plotFeatnresHeatmap as an alternative to plotFeatnres.

3 Conclusion

PAA provides a comprehensive toolbox and an adaptable workﬂow
for PM data analysis. It comprises the most important methods of
Prospector and goes far beyond. Especially the multivariate feature
selection based on RFE embedded in FFS or EFS, which is a cutting
edge strategy for biomarker discovery, enables PAA to identify sta—
ble and reliable feature panels. Finally, PAA is ﬂexible since the
R/Biocondnctor framework facilitates workflow extension and
customization.

Funding

This work was supported by P.U.R.E., a project of Nordrhein-Westfalen, a
federal state of Germany; and de.NBI, a project of the German Federal
Ministry of Education and Research (BMBF) [grant number FKZ 031 A
534A].

Conﬂict of Interest: none declared.

References

Abeel,T. et al. (2010) Robust biomarker identiﬁcation for cancer diagnosis
with ensemble feature selection methods. Bioinformatics, 26, 392—398.

Baek,S. et al. (2009) Development of biomarker classiﬁers from high—dimen-
sional data. BriefBioinform., 10, 537—5 46.

Guyon,I. et al. (2002) Gene selection for cancer classiﬁcation using support
vector machines. Mach. Learn, 46, 389—422.

Jiang,H. et al. (2004) Joint analysis of two microarray gene-expression
data sets to select lung adenocarcinoma marker genes. BMC Bioinformatics,
5, 81.

112 /310'S[BIIJHO[pJOJXO'SOTIBLUJOJIITOTCIHIdllq 11101} popcolumoq

9103 ‘Og anﬁnv 110 ::

PAA

1579

 

Love,B. (2007) The analysis of protein arrays. In: Predki,P.F. (ed). Functional
Protein Microarrays in Drug Discovery. CRC Press, Boca Raton, pp. 381—
402.

Peng,H. et al. (2005) Feature selection based on mutual information: criteria
of max-dependency, max-relevance, and min—redundancy. IEEE Trans.
Pattern Anal. Mach. Intell., 27, 1226—1238.

Saeys,Y. et al. (2007) A review of feature selection techniques in bioinfor-
matics. Bioinformatics, 23, 2507—25 17.

Sboner,A. et al. (2009) Robust—linear-model normalization to reduce technical
variability in functional protein microarrays. ]. Proteome Res., 8,
5451—5464.

Schwarz,D.F. et al. (2010) On safari to Random Jungle: a fast implementation of
Random Forests for high—dimensional data. Bioinformatics, 26, 1752—1 75 8.

Turewicz,M. et al. (2013) Improving the default data analysis workﬂow for
large autoimmune biomarker discovery studies with protoarrays.
Proteomics, 13, 2083—2087.

112 /310's1cu1n0[p101x0"soticuiJOJutotq/ﬁduq 11101} p9p1201um0q

9103 ‘0g anﬁnv 110 ::

