Bioinformatics, 32(4), 2016, 629—631

doi: 10.1093/bioinformatics/btv596

Advance Access Publication Date: 26 October 2015
Applications Note

 

Systems biology

Pycellerator: an arrow-based reaction-like
modelling language for biological simulations

Bruce E. Shapiro” and Eric Mjolsness2

1Department of Mathematics, California State University, Northridge, CA 91330, USA and 2Department of Computer
Science, University of California, Irvine, CA 92697, USA

*To whom correspondence should be addressed.
Associate Editor: Jonathan Wren

Received on July 12,2015; revised on September 19, 2015; accepted on October 12, 2015

Abstract

Motivation: We introduce Pycellerator, a Python library for reading Cellerator arrow notation from
standard text files, conversion to differential equations, generating stand—alone Python solvers,
and optionally running and plotting the solutions. All ofthe original Cellerator arrows, which repre—
sent reactions ranging from mass action, Michales—Menten—Henri (MMH) and Gene—Regulation
(GRN) to Monod—Wyman—Changeaux (MWC), user defined reactions and enzymatic expansions
(KMech), were previously represented with the Mathematica extended character set. These are
now typed as reaction—like commands in ASCII text files that are read by Pycellerator, which in—
cludes a Python command line interface (CLI), a Python application programming interface (API)
and an iPython notebook interface.

Results: Cellerator reaction arrows are now input in text files. The arrows are parsed by
Pycellerator and translated into differential equations in Python, and Python code is automatically
generated to solve the system. Time courses are produced by executing the auto—generated
Python code. Users have full freedom to modify the solver and utilize the complete set of standard
Python tools. The new libraries are completely independent of the old Cellerator software and do
not require Mathematica.

Availability and implementation: All software is available (GPL) from the github repository at
https://github.com/biomathman/pycellerator/releases. Details, including installation instructions
and a glossary of acronyms and terms, are given in the Supplementary information.

Contact: bruce.e.shapiro@csun.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

1 Introduction

Cellerator describes biological interactions with a reaction-like
arrow-based input language. Input strings are converted into differ-
ential equations and integrated to produce numerical time-course
predictions using Mathematica (Shapiro et (11., 2003). Extensions
include Cellzilla for two-dimensional tissue simulation (Shapiro
et (11., 2013) and KMech for exact enzymatic expansion (Yang
et (11., 2005).

There are many tools that convert reactions to differential equa-
tions and solve them, particularly in Python, but they do not use an
arrow-based language in the same manner as Cellerator. Examples

include PySCeS (Olivier et (11., 2004), which has its own text model-
ing language; PyDSTool (Clewey, 2012) (for hybrid systems); and
pyhrn (pybrn. sf . net, for SBML-like structures). Perhaps the
closest conceptually to Pycellerator are PySB (Lopez et al, 2013) and
SBML shorthand (Wilkinson, 2011). PySB is a rule-based system
with a collection of text language rules that are merged into Python
commands; models are built as Python programs. SBML Shorthand
is not a simulator; it is a pre-processor for converting models into
SBML, in which each reaction is represented by a single line of text.
In addition, a number of popular stochastic simulation tools are also
implemented in Python.

(63 The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 629

/310‘srcumo[p10}xo‘soncuHOJIItotq/ﬁdnq

Supplementar) Pigu re 52

and Granger, 2007

lliiidinarsh, 1983

Su ppleinentar} Fig. 51

Ilucka (7/ LI/., 2003

Fig. 1
Supplementar) Fig. S4

Shapiro
(7/ 11]., 2013

1\4iolsness, 2013

Supplementar) Tables 51—53

Jupy’EE‘T MAPK La.

I‘- 4‘47 DI-E.‘

MAPK with Oscillations

III IlI'

 

Huang and Ferrell, 1996

Kholodenko, 2000
Hilioti eta/., 2008
Supplementary Figures 81 S4

/310'S[BHJHO[pJOJXO'SOpBLUJOJIItolq/ﬂduq

Pycellerator

631

 

Hucka,M. et al. (2003) The systems biology markup language (SBML): a me-
dium for representation and exchange of biochemical network models.
Bioinformatics, 19, 513—523.

Kholodenko,B.N. (2000) Negative feedback and ultrasensitivity can bring
about oscillations in the mitogen-activated protein kinase cascades. Em. ].
Biochem., 267,1583—1588.

Lopez,C.F. et al. (2013) Programming biological models in Python using
PySB. Mol. Syst. Biol., 9. doi:10.1038/msb.2013.1

Mjolsness,E. (2013) Time-ordered product expansions for computational sto-
chastic systems biology. Phys. Biol., 10, 035009.

Olivier,B.G. et al. (2004) Modelling cellular systems with PySCeS.
Bioinformatics, 21, d560—d561.

Pérez,F. and Granger,B. (2007) IPython: a system for interactive
scientiﬁc computing. Comput. Sci. Eng., 9, 21—29. doi:10.1109/MCSE.
2007.53.

Shapiro,B.E. et al. (2003) Cellerator: extending a computer algebra system to
include biochemical arrows for signal transduction simulations.
Bioinformatics, 19, 677—678. doi: 10.1093/bioinformatics/btg042.

Shapiro,B.E. et al. (2013) Using cellzilla for plant growth simulations at the
cellular level. Front. Plant Sci., 4. doi: 10.3389/fp1s.2013.00408

Wilkinson,D. (2011) Stochastic Modeling for Systems Biology. CRC Press,
Boca Raton.

Yang,C.-R. et al. (2005) An enzyme mechanism language for the
mathematical modeling of metabolic pathways. Bioinfonnatics, 21, 774—780.

/810'sleumo[p103xo'sopeuIJOJutotq”:duq

