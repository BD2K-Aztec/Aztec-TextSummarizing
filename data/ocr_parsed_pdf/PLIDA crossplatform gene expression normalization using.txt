ORIGINAL PAPER

Vol. 30 no. 7 2014, pages 956—961
doi:10. 1 093/bioinformatics/btt5 74

 

Gene expression

Advance Access publication October 11, 2018

PLIDA: cross-platform gene expression normalization using

perturbed topic models
Amit G. Deshwar1 '* and Quaid Morrisl'z'e"4

1Edward S. Rogers Sr. Department of Electrical and Computer Engineering, 2Department of Molecular Genetics,
3Department of Computer Science and 4Terrence Donnelly Centre for Cellular and Biomolecular Research, University of

Toronto, Toronto, Ontario M5S 1A1, Canada
Associate Editor: Olga Troyanskaya

 

ABSTRACT

Motivation: Gene expression data are currently collected on a wide
range of platforms. Differences between platforms make it challenging
to combine and compare data collected on different platforms. We
propose a new method of cross-platform normalization that uses topic
models to summarize the expression patterns in each dataset before
normalizing the topics learned from each dataset using per-gene
multiplicative weights.

Results: This method allows for cross-platform normalization even
when samples profiled on different platforms have systematic differ-
ences, allows the simultaneous normalization of data from an arbitrary
number of platforms and, after suitable training, allows for online nor-
malization of expression data collected individually or in small batches.
In addition, our method outperforms existing state-of-the-art platform
normalization tools.

Availability and implementation: MATLAB code is available at http://
morrislab.med.utoronto.ca/plida/.

Contact: Amit.Deshwar@utoronto.ca

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on September 30, 2012; revised on June 19, 2013; accepted
on September 27, 2013

1 INTRODUCTION

Microarray platforms differ from one another in their manufac-
ture, labeling methods, hybridization procedures, number of
probes per gene, probe length and probe sequences. Although
these characteristics can affect the dynamic range, precision and
accuracy of the resulting gene expression measurements, the
major modern probe-based microarrays (e.g. Affymetrix,
Agilent, Applied Biosystems (AB1) and Illumina) provide data
of similar quality, so long as they are normalized appropriately
(Shi et al., 2006).

However, even microarrays from the same provider can differ
in the probes used to target speciﬁc genes, and these differences
can lead to systematic differences in the relationship between
their target abundance and the measured probe intensity (Shi
et al., 2006). The presence of these platform effects is well
known and often acknowledged by the admission that gene ex-
pression levels are measured in arbitrary units. However, because
most comparisons in gene expression levels are done on a per-

 

*To whom correspondence should be addressed

gene basis among samples from the same platform, these plat-
form-speciﬁc biases have limited impact and can be safely
ignored. However, quantitative comparisons between gene ex-
pression datasets from different microarray platforms beneﬁt
from correcting these biases (Rudy and Valafar, 2011).
Given the significant cost of collecting and analyzing human
tissue, there are signiﬁcant benefits to attempting to com-
bine gene expression measurements from multiple studies to
increase statistical power or provide a broader overview of
disease.

The most straightforward method of cross-platform normal-
ization is to standardize the expression of each gene to have the
same center (using the median or the mean) and the same vari-
ance on the different platforms using a gene-speciﬁc afﬁne trans-
form. This method has the advantage of being fast, easy and
having no parameters to tune, but it does not work as well as
more complex normalization methods on supporting, for ex-
ample, estrogen receptor (ER) status prediction by integrating
data across platforms (Shabalin et al., 2008). Of the many dif-
ferent cross-platform normalization methods that were com-
pared in a recent review by Rudy and Valafar (2011), distance-
weighted discrimination (DWD) and cross-platform normal-
ization were identiﬁed as superior choices.

Cross-platform normalization (Shabalin et al., 2008) consists
of a two-step procedure. In the ﬁrst step, k-means clustering is
used to find blocks of similar genes and samples across the plat-
forms. Then, within each block, cross-platform normalization
fits a combination of additive and multiplicative weights to nor-
malize the data between platforms within this block. This process
is done multiple times and the results from each run are averaged
together to account for various possible clustering patterns.
Their article reported the ability of cross-platform normalization
to signiﬁcantly increase the ability to use data collected on one
platform as training data to predict ER status in breast cancer
samples collected on a second platform.

DWD (Benito et al., 2004) consists of finding the direction that
best separates the data from the two platforms in log-vector
space and then translating data from each platform along that
direction until the data from each platform overlaps. Implicit in
DWD’s formulation is the assumption that gene expression data
are log-normally distributed [c.f. Rocke and Durbin (2001)] be-
cause it is based on linear discriminant analysis, and that plat-
form differences are the only systematic differences between the
two datasets are separated.

 

956 © The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com

112 /310's112u1n0[p10}x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnV uo ::

PLIDA

 

Despite this existing work, there are still unsolved problems in
cross-platform normalization. One is normalizing data collected
on more than two platforms. Although it is possible to chain
cross-platform normalization steps together, it is not clear what
effect multiple normalization steps will have on the data and
what the preferred chaining strategy (tree-based or linear)
should be. Another unaddressed problem in cross-platform nor-
malization is ‘online use’; in other words, normalizing data using
a normalization function learned from a previously collected
dataset. Online normalization would be useful, for example, for
applying a gene signature derived from another platform to new
gene expression proﬁles where the cross-platform normalization
was previously deﬁned using a calibration dataset.

We are also interested in addressing use cases where cross-
platform normalization is applied among heterogeneous datasets
that differ in their sample composition. Many methods
(including DWD but not cross-platform normalization) assume
that systematic differences between datasets are because of plat-
form effects and can ‘over-normalize’ by removing all systematic
expression differences between the two datasets, including those
due to differences in the samples represented. For example,
breast cancer datasets can differ in their expression subtype com-
position and in these cases, over-normalization would interfere
with gene signature construction on integrated datasets. Over-
normalization can also interfere with the use of cross-platform
normalization in computational puriﬁcation in which expression
proﬁles of normal tissue are used to try to remove the impact of
normal tissue contamination in tumor expression proﬁles (Clarke
et al., 2010; Nicolau et al., 2007; Quon and Morris, 2009; Quon
et al., 2013).

One way of dealing with heterogeneity between datasets is to
assume that the variation is found in a low-dimensional subspace
of the dataspace, using dimensionality reduction techniques such
as Principal Components Analysis (PCA). Dimensionality reduc-
tion is often used when analyzing gene expression data from
multiple platforms. For example, Wang et a]. (2011) use dimen-
sionality reduction to summarize gene expression measurements
on multiple platforms of the same samples, but they do not at-
tempt to make measurements on different platforms comparable.
However, because gene expression analysis measures the quan-
tity of messenger RNA transcripts for a particular gene, it is
ultimately measuring a non-negative quantity. This makes
topic models, such as the latent Dirichlet allocation (LDA)
(Blei et al., 2003), particularly appropriate. LDA models count
observations as coming from a convex combination of multi-
nomial distributions and has been used previously for analysis
of gene expression data (Gerber et al., 2007; Gevaert et al., 2006).

2 APPROACH

Our method is based on the hypothesis that, in the absence of
platform-induced differences, the gene expression proﬁles from
different platforms should be able to be summarized using the
same topics. Based on this hypothesis, we propose to carry out
cross-platform normalization by simultaneously learning a topic
model decomposition that describes the data from all the plat-
forms being normalized and per-platform adjustment weights
that modify the topics to account for platform biases. We call
our method Platform Independent LDA, or PLIDA.

This method addresses several issues with cross-platform nor-
malization not yet addressed with existing methods. This method
naturally handles the case of normalizing an arbitrary number of
platforms simultaneously, using all the data to learn the under-
lying structure of the data. Using our method, one could learn
the platform-speciﬁc adjustment weights using archival data and
then apply those weights to data collected in the future, enabling
online use and simplifying the transition of previously deﬁned
clinical biomarkers to new platforms. Finally, our method expli-
citly models differences between datasets and does not strive to
eliminate all differences, just those ones not explainable by a
topic model decomposition.

PLIDA assumes a one-to-one mapping between genes (or
transcripts) represented on all of the platforms, and data from
platforms with multiple probes per gene should be summarized
at the gene level before applying PLIDA. PLIDA also assumes
that the gene expression measurements are made in the linear
range of the platform being used, a reasonable approximation
for most genes on modern expression platforms (Shen-Orr et al.,
2010).

3 METHODS

3.1 Generative model and inference

Our generative model for gene expression measurements from multiple

platforms is similar to that of LDA (Blei et al., 2003), except that each

platform has a set of per-gene multiplicative scaling factors (called ‘ad-

j ustment factors’) that modify the topics used to model samples from that

platform. Formally, our generative model can be described as follows:
For each observed sample d from {1, . . . , ill}:

(1) Select a platformp from {1, . . . ,P}
(2) For each observed transcript t” in the sample:
(a) Select a topic 2 from {1, . . . , K} using a sample-speciﬁc discrete
distribution over topics 64.

(b) Select a transcript. The transcript will be selected from a
distribution speciﬁc to the topic selected in step 2 and the plat-
form selected in step 1. The probability of drawing transcript g,
given 2 and p is as follows:

Pun ==g>=fz*n;/th 
g.

In this equation, fl’ is a platforrn- and gene-speciﬁc adjustment factor
that modiﬁes the probability of drawing that transcript relative to the
‘base’ topic distribution JTZ . The adjustment factor itself is drawn from a
gamma distribution. These probabilistic relationships and the priors asso-
ciated with the different variables are summarized below:

64 ~ Dirichlet(ot)
2 ~ Discretewd)
712 ~ Dirichlet(,8)

fIg’ ~ Gamma(a, b)

The plate diagram describing this model can be found in Figure 1.

The drawing of the perturbation factor fg from a gamma distribution
limits the range of perturbation factors to be greater than zero.
Furthermore, we set b: l/a, so the mean of the Gamma prior is

 

957

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq 11101} pQPBOIIIAAOG

91oz ‘Og isnﬁnV uo ::

A.G.Deshwar and Q.Morris

 

a *b = 1. Fitting this model to the gene expression data required the
discretization of the observations, which were rounded to the nearest
integer. To estimate the parameters of the model, we run 50 iterations
of an optimization procedure that maximizes the posterior log likelihood
using a block conjugate gradient descent approach. In each iteration, the
PolakiRibiere conjugate gradient descent (Hestenes and Stiefel, 1952) is
used to optimize the following sets of variables: {:11}, . . . , {21"}, {61}, . . . ,
{9M}.{a},{f‘l, ---,{f°l

Variables within a set are optimized simultaneously, whereas each set is
optimized sequentially once per iteration.

Although this method has many hyperparameters, for all experiments
reported in this manuscript the number of topics was set to 2, and a and b
were set to 0.25 and 4 = 1/0.25, respectively. The value of a should be
decreased (or increased) if stronger (or weaker) perturbations are ex-
pected on average. Although the user can change the number of topics
(K), we recommend setting the number of topics to 2, as we found that
this provided the ability to model platform-independent systematic dif-
ferences among datasets (e.g. due to differences in sample composition)
while preventing the model from explaining platform-dependent differ-
ences using platform-speciﬁc topics (data not shown).

3.2 Gene expression datasets used

3 .2.1 Prostate datasets The ﬁrst prostate tumor dataset, from Wang
et a]. (2010) consists of 140 prostate tumor samples collected on the
Affymetrix U133A platform, available as Gene Expression Omnibus
(GEO) ascension GSE8218. The second prostate dataset comes from
the same manuscript, but uses the Affymetrix U133 Plus2 platform and
consists of 45 normal prostate samples, available as GEO ascension
GSE17951. Both prostate datasets were normalized within each dataset
using Robust Multi-array Average (RMA) (Irizarry et al., 2003) and
mapped to Entrez gene IDs using a custom Chip Deﬁnition File
(CDF) (Dai et al., 2005).

3.2.2 Breast cancer datasets Dataset 1 comes from Hu et a]. (2006)
and is collected on the Agilent Human 1A (V2) platform and consists of
69 breast tumor samples, 24 of which are ER positive (GEO ascension
GSE1992). This dataset was Lowess normalized Cleveland (1979) and
mapped to Entrez IDs by the original authors. Dataset 2 (Desmedt
et al., 2007) uses the Affymetrix U133A platform and consists of 198
breast cancer samples, 134 are ER positive (GSE 7390). Dataset 3
comes from the MicroArray Quality Control (MAQC) II project (Shi
et al., 2010) and consists of 278 breast cancer samples with 164 ER posi-
tive cases, using the Affymetrix U133A platform and available as
GSE20194. Breast datasets 2 and 3 were normalized within each dataset
using RMA (Irizarry et al., 2003) and mapped to Entrez gene IDs using a
custom CDF ﬁle (Dai et al., 2005).

For the breast and prostate datasets, only the genes measured on all
the compared platforms were used. The Entrez gene IDs provided by the

 

 

 

 

 

Fig. 1. Graphical model for PLIDA

original authors (breast dataset 1) or provided by the custom CDF ﬁle
(prostate datasets, breast datasets 2 and 3) were used to ﬁnd the shared
genes.

3.2.3 MAQC dataset This dataset comes from the MAQC project
(Shi et al., 2006) and was used by Rudy and Valafar (2011). It consists of
299 samples composed of technical replicates of four different mixtures of
Stratagene Universal Human Reference RNA and Ambion Human Brain
Reference RNA collected on four different platforms. In all, 120 samples
were collected on the Affymetrix U133 Plus2 platform, 59 samples on the
Illumina Sentrix Human-6 Expression Beadchip, 60 samples on the ABI
Human Genome Survey Microarray and 60 samples on the Agilent
Whole Human Genome Oligo Micoarray G4131A. These data are avail-
able already normalized as the R package CONORData (Rudy and
Valafar, 2012).

4 RESULTS

4.1 Assumption testing

PLIDA assumes that gene expression data can be decomposed
into a small number of topics and that biases between platforms
can be corrected with a per-gene adjustment factor. To test these
assumptions we carried out two experiments. In the first, we used
prostate dataset 1, the prostate tumor dataset. Prostate tumor
samples are composed of varying proportions of tumor and
normal tissue, so this dataset is not homogeneous as would be
expected from a sample from one tissue type. This dataset was
randomly partitioned into two halves, representing two ‘differ-
ent’ platforms. Because there is no difference in platform char-
acteristics, we expect that the platform-speciﬁc factors learned
should all be close to one. Figure 2 shows a histogram of the
platform-speciﬁc factors learned for the pseudo-platform. In the
log2 domain, most values are tightly clustered around 0 (i.e. no
adjustment).

As another experiment, we veriﬁed that our method was cap-
able of learning systematic differences between two datasets.
Taking the same dataset as used the previous experiment, we
perturbed the expression values in one half of the dataset.
Perturbations were drawn randomly from a log-uniform distri-
bution between one-third and three. After learning, we compared
the known perturbations with the learned perturbations, shown
in Figure 3. The concordance between the learned perturbations
and the known values was good, with a Pearson correlation of

 

-U.§ U 0.5 _ '1 1.5 2
Value 011032 pcl‘turlmlon lactor

Fig. 2. Distribution of log platform adjustment factors when datasets
from the same platform are normalized

 

958

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”K1111] 11101} pQPBOIIIAAOG

91oz ‘Og isnﬁnV uo ::

PLIDA

 

Learned Perturbation Factor

 

 

:3

0:5 1 1.5 2 2:5 3

Known Perturbation Factor
Fig. 3. Scatter plot between known and learned perturbation factors.
Black line shows y = x line

0.97 and most values lying close to the y = x line. The ability to
recover known perturbations in real gene expression data, even
though the perturbations were drawn from a different distribu-
tion than the model uses, increases our conﬁdence in PLIDA.

We repeated this experiment for 3- and 4-way splits, each time
recovering the known perturbations with high accuracy. For the
3-platform case, the Pearson correlations between the known
and recovered perturbations were 0.97 and 0.98. For the 4-plat-
form case, the Pearson correlations between the known and re-
covered perturbations were 0.97, 0.94 and 0.95 (See
Supplementary Figs. 1 and 2).

4.2 MAQC

To demonstrate the ability of PLIDA to remove systematic biases
in microarray data, we plot all 299 datapoints from the MAQC
dataset in the ﬁrst two principal component spaces before and
after normalization by PLIDA (Fig. 4). Before normalization,
data collected on each platform clustered with others from the
same platform, while this tendency is greatly reduced after nor-
malization. This reduction in differences across platforms is con-
ﬁrmed by median concordance between the platforms that ranged
from 0.45 to 0.76 before normalization but were above 0.98 after
normalization. We also plot the topic loadings (6) found, showing
that samples from different platforms are well dispersed, despite
the presence of some intra-platform clustering.

4.3 ISOpure testing

In this section, we test the utility of gene expression normaliza-
tion for use with ISOpure, a computational method for purifying
tumor expression profiles and inferring tumor cellularity (Quon
et al., 2013). For this experiment, we used both prostate datasets
described in the Methods section. For each prostate tumor
sample, the sample was examined by a pathologist who provided
an estimate of the cancerous composition of the sample. The aim
of the experiment was to normalize the dataset of 45 normal
samples so it could be used to generate accurate predictions of
the cancerous composition of the tumor samples using ISOpure.

We normalized the normal prostate dataset with the tumor
dataset using either PLIDA, DWD or cross-platform normal-
ization. We then ran ISOpure using the original and normalized
tumor and normal tissue datasets. We then compared the

 

 

 

 

 

 

 

 

 

{8] mm C Afﬁrmcmx
SU_ l I lLlumina
F - ABE
W m ' A ilerlr
4“ I
a. I
20 ‘
N M» C
r- u
a ‘4‘.-
2|J- '
.4n- 
Q
[.0 ‘k
-50- {
43-?an -s'o in 5'0 100 130
PC ]
(b) 80_ I Affymetrix
- Lllumina
- AB!
an i w .
I. ‘ :1 t .
o l o f '
m .
. .’ f' ; f
20- 'i _," i a J
a. c on: . ' a .-
N o . :0 o f 3:
E El 3 I I . I g . o
‘ .3 ° ‘t - -
.20 'J . ; . - .
." , - . '
4o— ' I : . '.
' . I :
ﬁn I
I
f .
's-i'sn we ‘50 o to lﬂﬂ 150
PC ]
M I
\g. 0 Aﬁymem‘x
‘ Lllumina
118* x ’ ABI
N \ 0 Agjlcnt
.!
8' =
F 0.6.”
5 s
an .
g 0.4. '5 \
._1 N
0.2
\
U . . . . \.
U 02 0.4 0.6 0.8 1

Loading on Topic 1

Fig. 4. Scatter plots showing the ﬁrst two principal components of the
MAQC data, before (a) and after (b) normalization, and topic loadings
learned by PLIDA (c)

cancerous composition estimates from ISOpure for each dataset
version (original, PLIDA, cross-platform normalization and
DWD) with the pathologist’s estimates. Without any normaliza-
tion, the Spearman correlation between ISOpure’s estimates and
the pathologist was 0.2153. Normalizing the data using DWD or
cross-platform normalization resulted in noticeably worse per-
formance than the original case, with correlations of 0.0059
and 0.1046, respectively. In contrast, using PLIDA greatly
increased the correlation between ISOpure estimates and the
pathologist’s, with a correlation of 0.3502 (see Fig. 5). The cor-
relation found using PLIDA normalized data was signiﬁcantly
greater than that found using cross-platform normalization and

 

959

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”K1111] 11101} pQPBOIIIAAOG

9103 ‘Og isnﬁnV uo ::

A.G.Deshwar and Q.Morris

 

0.4
0.35
0.3
0.25

0.15
0‘05 -
0 =

None XPN DWD PLIDA
Normalization

C or rel an on
C
N

C)
_-

 

Fig. 5. Correlation between ISOpure’s cancerous composition estimates
and pathologist

0.35 --
0.3
0.25
g 0.2 -
III
30.15
m 0.1
0.05 --
0 . .
None XPN DWD PLIDA
Normalization

Fig. 6. Error rate for classiﬁers trained on breast dataset 2 and tested on
breast dataset 1

DWD (P< 0.05, Steiger’s Z-test). In examining the topic load-
ings of the optimized PLIDA model, the normal prostate dataset
had almost all of its mass (98%) on one of the topics, whereas the
cancerous dataset had 33% of its mass on the same topic. This
pattern is what we would expect, given that the tumor samples
are composed of some normal tissue along with cancerous tissue.

4.4 ER status classiﬁcation

In this section, we test the ability of using gene expression normal-
ization to train a classiﬁer to determine (ER) status from breast
cancer gene expression data. This task is similar to one used in
Shabalin et a]. (2008) to validate their cross-platform normalization
algorithm. We trained elastic-net-regularized logistic regression
classiﬁers (Friedman et al., 2010) using breast dataset 1 and then
measured the classiﬁcation error rate on breast dataset 2 before
reversing the procedure. An identical procedure was carried out
after normalizing data from the two datasets using PLIDA,
DWD and cross-platform normalization. Classiﬁer hyperpara-
meters were set by an inner cross-validation loop on the training
dataset. For training on breast dataset 2 and testing on breast
dataset 1, accuracy was highest using the original expression data
and with PLIDA-normalized data, with the other two normaliza-
tion methods lowering the accuracy, as shown in Figure 6.

0.35
0.3

0.25
,5 0.2 -
h
€0.15 -
m

0.1 -

0.05

None XPN DWD PLIDA
Normalization

Fig. 7. Error rate for classiﬁers trained on breast dataset 1 and tested on
breast dataset 2

 

0.7
0.6 --
0.5 -
D
50.4 -
h
gas --
m0.2 -
0.1 I -
0 .  _.. _. .
None XPN DWD PLIDA
Normalization

Fig. 8. Error rate for classiﬁers trained on breast dataset 1 (normalized
with breast dataset 2) and tested on breast dataset

For training on breast dataset 1 and then testing on breast
dataset 2, the results were more variable. Using the original
datasets resulted in an error rate of 0.2828, much higher than
the error rates obtained for the reverse case. All three normal-
ization methods resulted in increased classiﬁer performance, but
PLIDA performed the best, as shown in Figure 7. Classiﬁers
trained using PLIDA, cross-platform normalization and DWD
had error rates of 0.1465, 0.1919 and 0.2163, respectively.

4.5 Online use

In this section, we demonstrate the ability of our method to learn
adjustment factors using archival data, than apply these factors
to normalize platform differences on data not available at train-
ing time. Again, the task was ER status prediction, and we nor-
malized Breast Dataset 1 and Breast Dataset 2. We then trained
an elastic-net logistic regression classiﬁer to predict ER using the
normalized Breast Dataset 1 and used this classiﬁer to predict
ER status of patients in the third Breast Dataset after applying
the weights learned previously. With DWD and cross-platform
normalization, the ﬁrst and second breast datasets were normal-
ized together and again only the data from the ﬁrst dataset used
for training. In this scenario, classiﬁers trained using PLIDA-
normalized data performed much better than the original data

 

960

112 /3.IO'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”K1111] 11101} pQPBOIII/lAOG

9103 ‘Og isnﬁnV uo ::

PLIDA

 

or the other normalization methods. Using the original data re-
sulted in an error rate of 0.3058, similar to the error rate when
tested against breast dataset 2. cross-platform normalization-
normalized data lead to a similar error rate as the unnormalized
data (0.3021), whereas DWD-normalized data did worse, with an
error rate of 0.5111. In comparison, PLIDA was able to bring
down the error rate to 0.1727, as shown in Figure 8.

5 DISCUSSION

Gene expression data provide an inexpensive and high-resolution
snapshot of cellular state, but comparison and use of gene
expression proﬁles collected on different platforms and technol-
ogies remain difﬁcult. Methods of cross-platform normalization
have already been developed but have limitations that make
them unsuitable for some desired uses of gene expression data.
We developed PLIDA to provide a cross-platform normalization
tool to overcome these limitations, allowing the greater use of
platform-varied gene expression data.

Speciﬁcally PLIDA is capable of normalizing gene expression
data collected on different platforms even when there are system-
atic differences between the samples on each platform. It does
this by ﬁnding a low-dimensional topic model representation of
the data, and then normalizing this topic model across platforms.
This allows for the integration of more datasets than cross-plat-
form normalization methods that assume that all differences be-
tween experiments are solely due to the platform. PLIDA is also
capable of online use, by learning platform adjustment weights
using existing data and then applying these weights to data col-
lected in the future. This allows data collected on different plat-
forms to be used to train classiﬁers for data that have not been
observed at the time of normalization, as when a biomarker
signature is used in the clinic. Finally, PLIDA is capable of
normalizing an arbitrary number of platforms simultaneously.

Funding: National Science and Engineering Research Council
(NSERC) operating grant (to Q.M.); NSERC Julie Payette
post-graduate fellowship (to A.G.D.).

Conﬂict of Interest: none declared.

REFERENCES

Benito,M. et a]. (2004) Adjustment of systematic microarray data biases.
Bioinformatics, 20, 1057114.

Blei,D. et a]. (2003) Latent dirichlet allocation. J. Mach. Learn. Res., 3, 99371022.

Clarke,J. et a]. (2010) Statistical expression deconvolution from mixed tissue sam—
ples. Bioinformatics, 26, 104}1049.

Cleveland,W. (1979) Robust locally weighted regression and smoothing scatterplots.
J. Am. Stat. Assoc., 74, 8297836.

Dai,M. et a]. (2005) Evolving gene/transcript deﬁnitions signiﬁcantly alter the
interpretation of geneehip data. Nucleic Acids Res., 33, e175.

Desmedt,C. et a]. (2007) Strong time dependence of the 76—gene prognostic signa—
ture for node—negative breast cancer patients in the transbig multicenter inde—
pendent validation series. Clin. Cancer Res., 13, 320773214.

Friedman,J. et a]. (2010) Regularization paths for generalized linear models via
coordinate descent. J. Stat. Softw., 33, 1722.

Gerber,G.K. et a]. (2007) Automated discovery of functional generality of human
gene expression programs. PLoS Comput. Biol., 3, e148.

Gevaert,O. et a]. (2006) Predicting the prognosis of breast cancer by integrating
clinical and microarray data with bayesian networks. Bioinformatics, 22,
e184ee190.

Hestenes,M. and Stiefel,E. (1952) Methods of conjugate gradients for solving linear
systems. J. Res. Natl Bur. Stand, 49, 4094136.

Hu,Z. et a]. (2006) The molecular portraits of breast tumors are conserved across
microarray platforms. BMC Genomics, 7, 96.

Irizarry,R. et a]. (2003) Summaries of affymetrix geneehip probe level data. Nucleic
Acids Res., 31, e15.

Nieolau,M. et a]. (2007) Disease—speciﬁc genomic analysis: identifying the signature
of pathologic biology. Bioinformatics, 23, 9577965.

Quon,G. and Morris,Q. (2009) Isolate: a computational strategy for identifying the
primary origin of cancers using high—throughput sequencing. Bioinformatics, 25,
288272889.

Quon,G. et a]. (2013) Computational puriﬁcation of individual tumor gene expres—
sion proﬁles. Genome Med, 5, 1720.

Rocke,D.M. and Durbin,B. (2001) A model for measurement error for gene expres—
sion arrays. J. Comput. Biol., 8, 5577569.

Rudy,J. and Valafar,F. (2011) Empirical comparison of cross—platform normaliza—
tion methods for gene expression data. BMC Bioinformatics, 12, 467.

Rudy,J. and Valafar,F. (2012) CONORData: CONORData. R package version
1.0.2, http://cran.at.r—project.org/web/packages/CONORData/index.html.

Shabalin,A. et a]. (2008) Merging two gene—expression studies via cross—platform
normalization. Bioinformatics, 24, 11544160.

Shen—Orr,S. et a]. (2010) Cell tychspeciﬁc gene expression differences in complex
tissues. Nat. Methods, 7, 2877289.

Shi,L. et a]. (2006) The Microarray Quath Control (MAQC) project shows inter—
and intraplatform reproducibility of gene expression measurements. Nat.
Biotechnol., 24, 115171161.

Shi,L. et a]. (2010) The Microarray Quality Control (MAQC)—II study of common
practices for the development and validation of microarray—based predictive
models. Nat. Biotechnol., 28, 8277838.

Wang,X.V. et a]. (201 1) Unifying gene expression measures from multiple platforms
using factor analysis. PLoS One, 6, e17691.

Wang,Y. et a]. (2010) In silico estimates of tissue components in surgical samples
based on expression proﬁling data. Cancer Res., 70, 6448$455

 

961

112 /310's1cu1nofp101x0"soiwuiJOJuioiq/ﬁduq 111011 papeo1umoq

9103 ‘0g1sn8nV uo ::

