BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

PTMTreeSearch

 

insert one or more gaps into the theoretical spectrum such that
it maximizes the number of the overlapping peaks or other
scoring functions. The main challenge for the PTM—search
algorithms is then to find such gaps that can be interpreted as
PTMs in the MS/MS data, while keeping the execution time and
the false discovery rate (FDR) low (Benjamini and Hochberg,
1995).

PTM—search algorithms can be categorized into three large
groups: targeted, untargeted and de novo PTM—search methods
(for a review see Ahrne et al., 2010). In the case of targeted PTM
searches, the user/experimenter has to specify the PTMs that
may be present in the sample as an input parameter to the
search program and these parameters will then be used to calcu—
late the gaps. For instance, X!Tandem (Craig and Beavis, 2004)
considers one type of PTM per amino acid. However, this results
in a combinatorial explosion of the search space that increases
the execution time and often reduces the signiﬁcance of the hits.
For example, a partial (incomplete) modiﬁcation, such as phos—
phorylation of serine would result in a mass shift of ~+80 Da at
serine residues and would effectively double the number of
serine—containing peptides. This is because each serine residue
would have to be annotated with and without the mass shift
due to phosphorylation.

Untargeted PTM searches do not require the user to specify
expected PTMs but instead use heuristic search algorithms to
ﬁnd modiﬁcations on the basis of a database of known PTMs.
RESID (Garavelli, 2003) is one such database that can be used in
this type of search. For instance, the algorithm PILOT_PTM
(prediction via integer linear optimization and tandem mass
spectrometry) uses a binary integer optimization model to find
PTMs that best match the experimental data under analysis
(Baliban et al., 2010). MODi (Kim et al., 2006) identiﬁes short—
sequence tags (375—amino acid long) and fills gaps between tags
with amino acids that are unmodiﬁed or modiﬁed by PTMs.
PTMSearchPlus (Kertesz et al., 2009) uses further information
obtained from accurate intact protein mass to identify PTMs in
MS/MS data.

De novo PTM—search algorithms (also called ‘unrestricted
PTM searches or blind searches’) do not use a priori information
about modiﬁcations making it possible to discover novel, previ—
ously never reported, modiﬁcations. In general, a theoretical
spectrum of a peptide sequence is aligned to an experimental
spectrum, allowing placement of one or a few gaps in one way
or another. These gaps are then reported as putative PTMs. To
explain this in more detail, let A denote the mass difference
between the precursor mass of the experimental spectrum and
the parent mass of the theoretical peptide. Some methods have a
restriction on gaps, such as the number of the gaps or the sum of
the inserted gaps must be 2 A. MS—Alignment (Tsur et al., 2005)
uses a dynamic programming approach to calculate the best
alignment. A similar method has been proposed by (Chiyong
et al., 2010), but in this case does not take A into account
during the alignment calculation. P—Mod (Hansen et al., 2005),
PTMap (Chen et al., 2009) and pMatch (Ye et al., 2010) place A
of each amino acid on the theoretical peptide and matches it to
the experimental spectrum iteratively. In a similar manner,
TwinPeaks (Havilio and Wool, 2007) and DeltAMT (Fu et al.,
2011) calculate the location of the PTM but TwinPeaks shifts the
theoretical peptide over a wide range and derives the PTM mass

from the shift providing the highest score. DeltAMT meanwhile
assumes that both modiﬁed and unmodiﬁed versions of the pep—
tides are present in the sample and looks for frequent occurrences
of the retention time and parent ion—mass difference between
spectral pairs. High concentration of such pairs is assumed to
represent modiﬁcation groups in the sample. OpenSea (Searle
et al., 2004), in a similar manner to MODi, identifies short—
sequence tags from the spectrum but fills the gaps between
tags without using a PTMDB. SIMS (Liu et al., 2008) meanwhile
interprets pairs of product ion peaks, which represent potential
amino acid residues or intervals, as a means of mapping PTMs.
The de novo PTM identiﬁcation algorithms often misplace PTMs
on the amino acid sequence or require other corrections to im—
prove accuracy. PTMClust (Chung et al., 2011) and PTMFinder
(Tanner et al., 2008) have been designed to improve the quality
of PTM assignments obtained with de novo PTM identiﬁcation.

Building a prefix tree from theoretical peptide sequences con—
stitutes a different kind of approach wherein the problem of
PTM identiﬁcation is reduced to tree traversal (Kertesz—Farkas
et al., 2011). For a peptide sequence [)1 . . .p" of length n, a preﬁx
tree structure can be built wherein the nodes at the i—th level
of the tree are labeled with the amino acid p,- and each branch
represents different modiﬁcations on p,- taken from a PTMDB.
At each node, the corresponding theoretical fragment ion masses
are calculated and matched to the experimental spectrum, pro—
viding a score for the given node. Leaves that have gathered
modiﬁcations on the path from the root and add up to the
parent mass difference are considered feasible solutions. The
problem with this approach is the tree’s size: a complete traversal
is too time—consuming for practical application. A greedy traver—
sal heuristic has previously been proposed that traverses only a
fraction of the full search space thus reducing running times to a
manageable level (Kertesz—Farkas et al., 2011). However, greedy
algorithms may fail to ﬁnd the best solution and report false
annotations. Instead of developing more sophisticated tree tra—
versal algorithms for this problem, we decided to develop tree—
pruning rules to eliminate unlikely modiﬁcations and reduce the
search space.

In this article we present a novel method, called
PTMTreeSearch, which is designed to identify modifications in
experimental spectra using a PTMDB. PTMTreeSearch is exe—
cuted in two rounds. Using strict tree—pruning rules, the first
round of search is aimed at identifying a restricted set of PTM
types with high confidence. The second round uses this restricted
set of PTM types but runs with relaxed tree—pruning rules so as
to identify more modiﬁed spectra. To the best of our knowledge,
this method is the ﬁrst that applies a two—stage—search approach
to PTM identiﬁcation. This idea is analogous to the two round
peptide identiﬁcation strategy used by XlTandem and Mascot,
where the first round is used to reduce the search space to likely
solutions followed by an error—tolerant, more exhaustive search
in the second round.

The rest of this article is structured as follows: Section 2
presents the PTMTreeSearch algorithm along with the tree
pruning techniques applied; Section 3 describes the datasets
and methods used and Section 4 presents and discusses the re—
sults. Finally, Section 5 concludes our ﬁndings and outlines
further work.

 

235

ﬁm'spzumofpmﬂo'sopeuuopuorq/ﬁdnq

A.Kertész-Farkas et al.

 

2 METHODS

Let L, be a list of modiﬁcation masses (measured in Daltons) for the amino
acid a and ha 2 |Lu| denote the number of the elements in the list (0.0 Da is
always included and represents no modiﬁcation). A modiﬁcation mass is
the mass difference that the amino acid gains or losses due to the molecular
modiﬁcation. For example L6: /0.0, —l7.0265, 47.9847, 57.0215,
71.0371,. . ., ‘/’ means the amino acid cysteine can be (i) unmodiﬁed, (ii)
lose 17.0265 Da (via losing ammonia from cysteine), (iii) gain 47.9847 Da
(via complete oxidation), (iv) gain 57.0215 Da (via carbamidomethylation)
and (v) gain 71.0371 Da (via propionamide), and so on. The molecular
mass of cysteine is 121.16 Da and becomes 178.1815 Da after carbamido-
methylation. Note that one particular amino acid molecule is not modiﬁed
with more than one modiﬁcation at the same time, but an amino acid can
be modiﬁed with various modiﬁcations at different occurrences in the
peptide sequence (and in different peptides as well).

Let q be an experimental spectrum represented as a list of location-
intensity peak pairs, pzalaz. . .a,, be a peptide sequence, PM(q) and
PM(p) denote the precursor mass of q and 17, respectively, and
A = PM(q) 7PM(p). The basic idea is to generate the theoretical fragment
ion peaks for all modiﬁed variations of peptide 17 and store them in a
preﬁx tree, where a branch at the level i denotes a PTM on amino acid a,-.
A tree node at the level icontains a structure v = (s, b, y, m, c), wheres is a
score that quantiﬁes the comparison of the peptide part a1 . . .a,- to the
experimental spectrum. Then 6 is the number and m is the sum of the
mass of the acquired modiﬁcations in the sequence a 1 . . . a,-. The variables
I; and y store the masses (m/z) of the b- and y-fragment ions that corres-
pond to the (al . . .a,-) +m and (a,-+1...a,,)+ A m1 fragment ions,
respectively.

Now we recursively deﬁne the tree and the values stored in the node
structures as follows: the root node is (0, 0, PM(q), 0, 0) at level 0. If
v = (s, b, y, m, c) is a node in the tree at the level i (0 5 i< n), then the node
v): (s + h, b + mu,-+1+ m), yimqu 7m), m +m/~, c’) is a child of the node v
at level i+ l, where

0 ma,“ is the mass of the amino acid a,-+1,
o m) is the j—th modiﬁcation in the list LuH 1,

o h is the sum of the intensities of the experimental peaks that matches
to the theoretical peaks b+mui+1 +m,~ and yimuHrm/ within the
small ion match tolerance,

o c’ = c+ 1 if m) 75 0, otherwise 6 = c (that is 6’ counts the PTMs on
the a, . . .a,-+1 fragment).

The node v) at level i + 1 represents that the amino acid a,-+1 in the peptide
17 is modiﬁed with the j—th modiﬁcation from Lqu. If v is a node at level n
then v is a leaf node. A leaf 1 = (s, b, y, m, c) is called a feasible solution if
A =m (up to a small precursor mass tolerance); that is the mass of the
peptide with the acquired modiﬁcation masses is equal to the precursor
mass of the query spectrum. Note that h can be calculated in an efﬁcient
way by storing the peaks of the experimental spectrum in an ordered list
ordered by the peaks’ m/z locations.

The score of the spectrum q and peptide [7 comparison is the maximum
score of the feasible solutions, if there is any, otherwise ‘null’ is returned.
This goal can be found with any kind of tree traversal methodidepth-
ﬁrst traversal algorithms are a good example in this case. The modiﬁca-
tions on the peptide can then be extracted from the path between the root
and the best goal leaf.

Note that all nodes at level 1' correspond to the i-th amino acids in
peptide 17, and all have the same nu,- number of children. Hence, the tree is
balanced and all leaves have the same depth. This gives the size of the
search space:

1'
|T|=l+innm

1:1 [:1

MQL

  
   
  
 

M Q+0.98 L

+31.9898

M+153949Q . . . 5: score
b: mass of (M‘15‘35‘5‘Q‘D 93L) = 406.9749
M+1s.9949Q+o.93 M+1s.ssaaQ+o.aaL v: mass of(SQL)+A-16.9749=329.0251-A
m:16.9749
c: 2
+15.9949Q+o.9s
Peptide: M Q L S Q L

Mods: LM={0,15.9949} LQ={0,0.98,31.9898}

Fig. 1. Illustration of a computational tree representation of the search
space of the peptide MQLSQL, where the amino acid M can be oxidized,
Q can carry 0.98 and 31.9898 modiﬁcations, and where the curly bracket
shows the structure of a node. Each path from the root to the leaf rep-
resents a modiﬁed peptide and each branch represents an insertion of a
modiﬁcation to the peptide

which makes the time complexity of the traversal algorithm impractical.
Note also that the size of the search space does not depend on the ex-
perimental spectrum. In the next subsection we define pruning techniques
in order to maintain the run time polynomial and make it appropriate for
real applications. An example computational tree is given in Figure l.

2.1 Search space reduction via tree pruning

In theory, for a peptide of 10 residues each modiﬁable by three modiﬁ-
cations, the search space will be a tree consisting of around four million
nodes. Checking all these nodes means a complete traversal of the tree
would require prohibitively long calculations for practical applications.
However, we can deﬁne simple rules for eliminating potential modiﬁca-
tions and/or combinations that are unlikely to occur. This is a rule-based
reduction of the search space, which corresponds to the pruning of the
tree. Namely, if a rule is not fulﬁlled at a certain node, a sub-tree beyond
the node in question is eliminated, and, as a result, tree traversal will
become faster. We use the following rules.

(i) Limiting the number of modiﬁcations: Let MB be a user-deﬁned
upper bound on the number of modiﬁcations allowed on any
peptide. The algorithm eliminates the node v: (s, b, y, m, 6)
along with the corresponding sub-tree from the search space if
c > MB. We noticed that applying a large MB value (say 5) leads
to a disproportionally large number of erroneous annotations in
short peptides (data not shown). This bias can be removed by
applying a length-dependent upper bound, MB’ 2 min(MB, n / 3),
where n is the length of the peptide in question.

(ii) Excluding adjacent, compensatory modiﬁcations: In the data-
base of modiﬁcations there are 102 pairs in which the mass
change is identical but of adverse sign. We term these ‘pairs-
compensatory’ modifications. For instance, hydroxylation of
lysine to hydroxyl-lysine leads to a mass gain of 15.9994 Da,
while reduction of serine to alanine (or threonine to oz-aminobu-
tyrate) leads to a mass loss of 15.9994 Da. The algorithm would
automatically allow these pairs to be included since the overall
mass of the peptide would not change. Currently we disallow
such compensatory modiﬁcations if they are adjacent (but are
not necessarily on two subsequent amino acids). If the sum of the
peak shifts caused by two adjacent PTMs is 0 within a certain
tolerance, the node and the respective sub-tree will be pruned
from the tree.

(iii) Excluding non-productive modiﬁcations: In the ﬁrst approxima-
tion, a PTM is accepted if adding its mass shift to the corres-
ponding theoretical peaks (type b- and its complementary peak

 

236

ﬁm'spzumofpmjxo'sopeuuopuorq/ﬁdnq

Fast
matching

Potential
Mod:

Cleavage

Crt rniini Point
modiﬁcation modiﬁcation mutation:

2 stage (Errortoie searc

PTMTreeSearch
TworStage Search

  

/310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq

A.Kertész-Farkas et al.

 

The data were downloaded from ProteomeCommons.org Tranche net-
work via the following hash: anUzQuuP7BIqFlantLtjwnfwauOM-
Avag2BFmenNe9Ue MgprBFh7+wtpchanMk2KY-8z9ijquY
DbQOpTNqu4AAAAAA SJlaw: :. ‘HSPP2A’ is a dataset containing
29 583 spectra (20 773 doubly and 8706 triply, 474 quadruply, 26 quin-
tuply and four hexuply charged spectra) and was obtained with an LTQ
mass spectrometer. The data were obtained from trypsin digested pro-
teins of the human protein phosphatase 2A system (Glatter et al., 2009)
and downloaded from www.peptideatlas. org/repository/publications/
Glatter2008. The Universal Proteomics Standard I (Sigma) dataset
(UPSl) contains 3368 singly charged spectra obtained from 50 trypsin-
digested proteins using an Applied Biosystems 4800 MALDI TOF/TOF
instrument (Bish et al., 2008). The data were obtained from the authors.

2.4.3 Protein sequences Computational identiﬁcation of PTMs re-
quires a collection of protein sequences, which are selected by the experi-
menter, and will be dependent on the goal of the experiment. In order to
compare various algorithms on an equal footing, we compiled uniform
collections of protein sequences that were then used with each PTM
ﬁnder program used in this work. Each spectral dataset was submitted
to the XlTandem program using the IPI.Human v3.81 protein sequence
dataset (Kersey et al., 2004), and the proteins that passed to the second
round were collected in separate FASTA ﬁles (Jeong et al., 2012). For
statistical analysis, we constructed decoy datasets (Elias and Gygi, 2007)
from reversed sequences (Moore et al., 2002). The target and reverse
datasets were uniﬁed in concatenated FASTA ﬁles before use by various
programs. Supplementary Material Section S8 shows a summary of the
datasets and the corresponding parameters used.

2.4.4 Performance evaluation The performance was evaluated using
the receiver operator characteristic (ROC) curve technique (Green and
Swets, 1966; Sonego et al., 2008). Annotated spectra were ranked accord-
ing to a matching score. Spectra annotated with target peptide sequences
were then plotted as a function of the number of spectra annotated with a
decoy peptide sequence by varying a threshold over the ranking variable
range. This plot gives a monotonously increasing curve, the ROC curve.
A higher running ROC curve indicates better performance. The false
discovery rate (FDR) was calculated as the ratio of the number of the
decoy hits over the number of positive hits at a certain threshold t using
the following formula (Kall et al., 2007):

Number of decoy(t)

FDR : —.
Number of target(t)

The ROC plot can also be used to compare methods at the level of the
same FDR. For instance, FDR: 1% is a straight line in the ROC plot,
and the intersections with the ROC curves indicate the number of target
and decoy peptides found at the same level of FDR. The FDR: 100%
would coincide with the diagonal X: y line.

2.4.5 PT M ﬁnding programs ‘InsPecT’ [version 2012.01.09 (Tsur
et al., 2005)] was downloaded from the project web site (http://prote
omics.ucsd.edu/Software/Inspect.html) and installed on Linux. Inspect
was running in ‘unrestrictive’ mode in order to ﬁnd modiﬁcations in a
de novo way. No ﬁxed or partial modiﬁcations were included as param-
eters. The parameter MaxPTMSize was set to 200 Da. The results ﬁles
were then post-processed by ComputeFDRjar script (part of Inspect)
and the ﬁeld InspectFDR was used as a ranking variable for the ROC
analysis.

MODi v3.01 (Kim et al., 2006) was run remotely at the web server
available at http://prix.hanyang.ac.kr/modi/search.jsp. The runs were per-
formed without ﬁxed modiﬁcations and by allowing all 615 variable
modiﬁcations present in the database of MODi. The modiﬁcation
range was set from —50 to 200 Da. The ROC analysis was carried out
using the ‘Probability’ ﬁeld as ranking parameter. ‘SIMS’ (Liu et al.,
2008) was obtained from the authors. SIMS was used with the

‘FULL_TRYPTIC FALSE’ parameter setting and the modiﬁcation
range was set to (P200 Da. No fixed or variable modiﬁcations were
used. ‘XlTandem’ version 10-12-01 (Craig and Beavis, 2004) was down-
loaded from www.thegpm.org. For the experimental calculations only,
the source code of XlTandem was slightly altered such that it uses the
complete restricted protein sequences in the second round in order to
allow FDR and ROC calculations based on target/decoy comparisons.
The LogE values taken from the XlTandem output ﬁle were used for
FDR and ROC calculations.

2.4.6 Computational environment All programs (except MODi,
which was run on a web server) were executed on a Linux cluster con-
sisting of one frontend and 20 backend nodes, each equipped with 2.2
Ghz CPU and 2 GB memory. The execution time was calculated as if the
experiments were run on a single CPU computer in order to make the
execution time comparable with other methods.

3 RESULTS AND DISCUSSIONS

3.1 Comparison of tree-pruning strategies

PTMTreeSearch has three parameters (MB, SR, NPM) that con—
trol the size of the search space. In this section we investigate
their impact on accuracy and execution time. First, we ﬁxed
MB:1 and MPE:0.0, and we defined six search strategies
(Table 1) for the SR and NPM, in which the size of the search
space gradually decreases from complete search (no tree pruning)
to restricted search (strict tree pruning).These search strategies
were applied to the three spectrum datasets and the identiﬁed
peptides (spectra that are assigned to a peptide sequence), the
modiﬁed peptides (peptides that carry at least one modiﬁcation)
and the modiﬁcation types (a modiﬁcation from the PTMDB,
such as carbamidomethylation of cysteine or oxidation of me—
thionine) were counted at the level of 1% FDR. Note that the
number of identified peptides includes both modiﬁed and un—
modiﬁed peptides. The exact numbers can be found in the
Supplementary Materials Table S3, Section S4. On each dataset,
the relative increase or decrease in speed, compared to the full
search (Search Strategy 1) were calculated, and averaged over the
three spectrum datasets. These are illustrated in Figure 3. As
expected, stricter pruning rules reduced the execution time
(PTMTreeSearch became 3:4—times faster) however they also
reduce the number of the identiﬁed modiﬁcation types and anno—
tated modiﬁed peptides. We have evaluated the six search stra—
tegies using MB: 2, and the results are presented in the
Supplementary Materials Table S4, Figure S8 in Section S4.
These results show that larger search space can result in higher
execution times and fewer annotations at FDR: 1%. When
tree—pruning rules are applied, the execution time decreases sig—
niﬁcantly and the number of annotated peptides increases.
In order to further improve the performance we decided to
implement a two—stage—search process.

3.2 Two-stage search

In the ﬁrst stage of this strategy, strict tree pruning rules are
used to identify trusted modiﬁcation types from PTMDB. The
modiﬁcation types found in the ﬁrst stage are filtered according
to the MPE criterion as described in Supplementary Materials
Sections S1 and S2. A more exhaustive search is then performed
in the second round, using this relatively small set of trusted

 

238

ﬁm'spzumofpmjxo'sopeuuopuorq/ﬁdnq

Fiill Search:

+ Peptides
- I - Unique Mods

---A-- Modified Peptides

Full. Search .
(One Round)

+ Peptides
- I - Modified Peptides
V Full Search (One Round)

 

/3.10's112um0fp10}x0'sopizuiJOJuioiq”:duq

II“-
..iﬂlﬂ “-

PTMTreeSearch (M
PTMTreeSearch (MB-2) I

g

JIIMi-

' PTMTreeSearch (MB=1) PTMTreeSearch (
- PTMTreeSearch (MB=2)

PTMTreeSearch (MB=3)

.
g
:i
m
m
U)
m
m
a
3
E E

PTMTreeSearch

- inspeci

Inspect

 

/3.10's112um0fp10}x0'sopizuiJOJuioiq”:duq

PTMTreeSearch

 

(to the work at BRC Szeged); grants TET_10—1—2011—0058,
TAMOP—4.2.1.B_11/2/KMR-2011-0002 and TAMOP—4.2.2/B-
10/1—2010—0014 (to the work at Pazmany University, Budapest).

Conflict of Interest: none declared.

REFERENCES

Aebersold,R. and Mann,M. (2003) Mass spectrometry—based proteomics. Nature,
422, 1987207.

Ahrne,E. et al. (2010) Unrestricted identiﬁcation of modiﬁed proteins using
MS/MS. Proteomics, 10, 671$S6.

Baliban,R.C. et al. (2010) A novel approach for untargeted post—translational modi—
ﬁcation identiﬁcation using integer linear optimization and tandem mass
spectrometry. Mol Cell Proteom., 9, 764e779.

Becker,C.H. and Bern,M. (2011) Recent developments in quantitative proteomics.
Mutation Res., 722, 1717182.

Benjamini,Y. and Hochberg,Y. (1995) Controlling the false discovery rate: a prac—
tical and powerful approach to multiple testing. J. Royal Stat. Soc. Series B
(Methodological), 57, 2897300.

Bish,R.A. et al. (2008) Conjugation of complex polyubiquitin chains to WRNIPl.
J. Proteome Res., 7, 3481:3489.

Bjornson,R.D. et al. (2008) XIITandem, an improved method for running Xltandem
in parallel on collections of commodity computers. J. Proteome Res., 7,
2937299.

Chen,Y. et al. (2009) PTMapia sequence alignment software for unrestricted,
accurate, and full—spectrum identiﬁcation of post—translational modiﬁcation
sites. Proc. Natl Acad. Sci. USA, 106, 7617766.

Chiyong,K. et al. (2010) Unrestricted identiﬁcation of post translational modiﬁca—
tions from tandem mass spectra datasets. In: Proceedings of the International
Conference on Bioinformatics and Biomedical Technology ( ICBB T), 2010,
Sanya, China. pp. 2447247.

Chung,C. et al. (2011) Computational reﬁnement of post—translational modiﬁca—
tions predicted from tandem mass spectrometry. Bioinformatics (Oxford,
England), 27, 7974506.

Craig,R. and Beavis,R.C. (2003) A method for reducing the time required to match
protein sequences with tandem mass spectra. Rapid Commun. Mass Spectrom.,
l7, 231(k2316.

Craig,R. and Beavis,R.C. (2004) TANDEM: matching proteins with tandem mass
spectra. Bioinformatics (Oxford, England), 20, 146(rl467.

Craig,R. et al. (2004) Open source system for analyzing, validating, and storing
protein identiﬁcation data. J. Proteome Res., 3, 12344242.

Creasy,D.M. and Cottrell,J.S. (2002) Error tolerant searching of uninterpreted
tandem mass spectrometry data. Proteomics, 2, l42frl434.

Deutsch,E.W. et al. (2008) Data analysis and bioinformatics tools for tandem mass
spectrometry in proteomics. Physiol. Genom., 33, 18:25.

Elias,J.E. and Gygi,S.P. (2007) Target—decoy search strategy for increased conﬁ—
dence in large—scale protein identiﬁcations by mass spectrometry. Nat.
Methods, 4, 2077214.

Falkner,J.A. et al. (2007) Validated MALDI—TOF/TOF mass spectra for protein
standards. J. Am. Soc. Mass Spectrom., 18, 85(F855.

Fu,Y. et al. (2011) DeltAMT: a statistical algorithm for fast detection of protein
modiﬁcations from LC—MS/MS data. Mol. Cell Proteom., 10, M110 000455.

Garavelli,J.S. (2003) The RESID database of protein modiﬁcations: 2003 develop—
ments. Nucleic Acids Res., 31, 49%501.

Geer,L.Y. et al. (2004) Open mass spectrometry search algorithm. J. Proteome Res.,
3, 9587964.

Glatter,T. et al. (2009) An integrated workflow for charting the human interaction
proteome: insights into the PP2A system. Mol. Syst. Biol., 5, 237.

Green,D.M. and Swets,].A. (1966) Signal Detection Theory and Psychop/tysics.
Wiley, New York.

Hansen,B.T. et al. (2005) P—Mod: an algorithm and software to map modiﬁcations
to peptide sequences using tandem MS data. J. Proteome Res., 4, 3587368.
Hart,P.E., Nilsson,N.J. and Raphael,B. (1968) A formal basis for the heuristic
determination of minimum cost paths. Systems Science and Cybernetics, 4,

1W107.

Havilio,M. and Wool,A. (2007) Large—scale unrestricted identiﬁcation of post—
translation modiﬁcations using tandem mass spectrometry. Anal. Chem, 79,
136271368.

Jacob,R.J. (2010) Bioinformatics for LC—MS/MS—based proteomics. Methods Mol.
Biol., 658, 61791.

Jeong,K. et al. (2012) False discovery rates in spectral identiﬁcation. BMC
Bioinform., 13 (Suppl 16), $2.

Johnson,R.S. et al. (2005) Informatics for protein identiﬁcation by mass spectrom—
etry. Methods, 35, 2237236.

Kall,L. et al. (2007) Assigning signiﬁcance to peptides identiﬁed by tandem mass
spectrometry using decoy databases. J. Proteome Res., 7, 29:34.

Kersey,P.J. et al. (2004) The International Protein Index: an integrated database for
proteomics experiments. Proteomics, 4, 198571988.

Kertesz—Farkas,A. et al. (2011) PTMSearch: a greedy tree traversal algorithm for ﬁnd—
ing protein post—translational modiﬁcations in tandem mass spectra. In: Proceedings
of the 2011 European conference on Machine Learning and Knowledge Discovery in
Databases — Volume Part [1. Springer—Verlag, Athens, Greece.

Kertesz—Farkas,A. et al. (2012) Database searching in mass spectrometry based
proteomics. Curr. Bioinform., 7, 2217230.

Kertesz,V. et al. (2009) PTMSearchPlus: software tool for automated protein iden—
tiﬁcation and post—translational modiﬁcation characterization by integrating
accurate intact protein mass and bottom—up mass spectrometric data searches.
Anal. Chem., 81, 8387:8395.

Kim,S. et al. (2006) MODi: a powerful and convenient web server for identifying
multiple post—translational peptide modiﬁcations from tandem mass spectra.
Nucleic Acids Res., 34, W2587W263.

Liu,J. et al. (2008) Sequential interval motif search: unrestricted database surveys of
global MS/MS data sets for detection of putative post—translational modiﬁca—
tions. Anal. Chem., 80, 784(r7854.

MacCoss,M.J. (2005) Computational analysis of shotgun proteomics data. Curr.
Opin. Chem. Biol., 9, 88:94.

MacCoss,M.J. et al. (2002) Shotgun identiﬁcation of protein modiﬁcations from
protein complexes and lens tissue. Proc. Natl Acad. Sci. USA, 99, 790(P7905.

MacLean,B., Eng,J.K., Beavis,R.C. and McIntosh,M. (2006) General framework
for developing and evaluating database scoring algorithms using the TANDEM
search engine. Bioinformatics, 22, 28332832.

McDonald,W.H. et al. (2004) MS], MSZ, and SQT—three uniﬁed, compact, and
easily parsed ﬁle formats for the storage of shotgun proteomic spectra and
identiﬁcations. Rapid Commun. Mass Spectrom., 18, 2162:2168.

Menschaert,G. et al. (2010) Peptidomics coming of age: a review of contributions
from a bioinformatics angle. J. Proteome Res., 9, 205172061.

Moore,R.E. et al. (2002) Qscore: an algorithm for evaluating SEQUEST database
search results. J. Am. Soc. Mass Spectrom., 13, 3787386.

Nesvizhskii,A.I. (2010) A survey of computational methods and error rate estima—
tion procedures for peptide and protein identiﬁcation in shotgun proteomics.
J. Proteom., 73, 2092:2123.

Nesvizhskii,A.I. and Aebersold,R. (2004) Analysis, statistical validation and dissem—
ination of large—scale proteomics datasets generated by tandem MS. Drug
Discov. Today, 9, 1737181.

Neumann,S. and Bocker,S. (2010) Computational mass spectrometry for metabo—
lomics: identiﬁcation of metabolites and small molecules. Anal. Bioanalyt.
Chem, 398, 277972788.

Noble,W.S. and MacCoss,M.J. (2012) Computational and statistical analysis of
protein mass spectrometry data. PLoS Comput Biol., 8, e1002296.

Searle,B.C. et al. (2004) High—throughput identiﬁcation of proteins and unantici—
pated sequence modiﬁcations using a mass—based alignment algorithm for MS/
MS de novo sequencing results. Anal. Chem, 76, 22232230.

Sonego,P. et al. (2008) ROC analysis: applications to the classiﬁcation of biological
sequences and 3D structures. Brief. Bioinform., 9, 1987209.

Tanner,S. et al. (2008) Accurate annotation of peptide modiﬁcations through
unrestrictive database search. J. Proteome Res., 7, 1707181.

Tharakan,R. et al. (2010) Data maximization by multipass analysis of protein mass
spectra. Proteomics, 10, 11631171.

Tsur,D. et al. (2005) Identiﬁcation of post—translational modiﬁcations via blind
search of mass—spectra. In: Proceedings/IEEE Computational Systems
Bioinformatics Conference, CSB, San Francisco, CA, USA. pp. 1577166.

Webb—Robertson,B.J. and Cannon,W.R. (2007) Current trends in computational
inference from mass spectrometry—based proteomics. Brief. Bioinform., 8,
304e317.

Yates,J.R. 3rd et al. (1995) Method to correlate tandem mass spectra of modiﬁed
peptides to amino acid sequences in the protein database. Anal. Chem, 67,
l42frl436.

Ye,D. et al. (2010) Open MS/MS spectral library search to identify unanticipated
post—translational modiﬁcations and increase spectral identiﬁcation rate.
Bioinformatics (Oxford, England), 26, i3997i406.

 

241

ﬁm'spzumofpmjxo'sopizuuopnorq/pdnq

