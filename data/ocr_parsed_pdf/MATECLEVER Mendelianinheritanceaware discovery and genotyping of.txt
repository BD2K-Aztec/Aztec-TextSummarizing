BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

:39\Ewowsmoaﬁmowoxmoagoﬁsambwﬁ

Deletion

Deletion

MATE-CLEVER

 

Although approaches that aim at genotyping indels have
rarely been described, there have been reliable techniques for
shorter indels since 2011. Examples for processing indels of
length up to 30bp are the above—mentioned UG (DePristo
et al., 2011) from the GATK (McKenna et al., 2010) and the
earlier approach DINDEL (Albers et al., 2011), whose core ideas
initially inspired the GATK—UG. An option for indels from
125 bp or longer is GASV—Pro (Sindi et al., 2012), which report—
edly achieves sufﬁciently reliable classiﬁcation rates on very long
indels.

Reliable pipelines for genotyping indels that are ~3(L100 bp
long, in particular in the context of family settings, have not been
described in the literature so far.

2 METHODS

2.1 Laws of Mendelian inheritance

According to Mendel’s laws, a child inherits exactly one allele from each
parent. Egg and sperm cells each contain one set of chromosomes, rep-
resenting a recombination of the two sets of chromosomes present in each
parent. During recombination, it is determined which alleles are passed
on to the child. Let 0,1,2 be placeholders for ‘variant not present’, ‘het-
erozygous variant’ and ‘homozygous variant’, respectively. We write X g),
with g, h e {0, 1, 2} and g 5 h to refer to variants that are ‘g’ in one parent
and ‘h’ in the other one. For example, X01 refers to variants that are
heterozygous in either the mother or father, but not present in the
other parent. Analogously, we write Y) with j e {0, 1,2} to denote the
event that the child has genotype j. Assuming that each allele is equally
likely to be transmitted to the child, the Mendelian laws can be cast
statistically as

P(YOIX01)=% P(YIIX01)=% P(YZIX01)=0
P(YOIX11)=,1-1 P(Y1IX11)=% P(YZIX11)=%
P(YOIX02)=0 P(YIIX02)=1 P(YZIX02)=0 (1)

P(YOIX12)=0 P(Y1lX12)=% P(Yle12)=%
P(YOIX22)=0 P(YIIX22)=0 P(Y21X22)=1

When discovering genetic variations in a trio rather than a single
individual, one can take advantage of Mendel’s laws. A variant found
in one of the parents has (at least) a 50% probability of being present in
the child. This translates to the conditional probability of a variant being
present in the child, given its presence in one of the parents, being higher
than the a priori probability, which is not conditioned on any prior
knowledge.

2.2 MATE-CLEVER workflow

Step 1: Running CLEVER. We run our tool CLEVER (Marschall
et al., 2012) on each individual independently. CLEVER processes all
alignments, including also concordant ones, which allows it to also
detect indels shorter than 100 bp. The output of this step is a set of
deletions Belem.

Step 2: Defining Regions of Interest. At this stage, deletions
still may have remained undiscovered in single individuals. So, for
each d e Belem, we declare a window of :|:1000 bp around d, a region
of interest in every individual, independently of in which individual d was
originally discovered.

Step 3: Extracting Reads of Interest. We extract all paired-end
reads where one end aligns in a region of interest. Owing to pooling
deletions from all family members when determining these regions, this

may also include paired-end reads from individuals who do not have a
CLEVER deletion in the region of interest themselves. The goal of this is
to discover breakpoint-covering reads, where one end has to be split-
aligned and therefore has remained unaligned by the (standard) read
aligner in use (Li and Durbin, 2009). Let 2 = {A, C, G, C} be the
DNA alphabet and let (3 be the read length. That is, each paired-end
read can be considered a pair of sequences of length 6, i.e. an element
of 2‘ X 2‘. Correspondingly, we write R C 2‘ X 2‘ for the set of all
extracted read pairs, from all individuals.

Step 4: Generating (Split) Alignments with LASER. We align all
reads r e R using our read aligner LASER (Marschall and Schonhuth,
2013). LASER determines both normal alignments, containing only short
indels and split alignments, indicating long indels. We report up to 50
alignments per read end. In case of ambiguous indel placements, we
only report the leftmost one. We write A1(r) and A2(r) to denote the
set of alignments of the ﬁrst and second read end of r e R. We deﬁne
A(r) = A1(r) U A2(r) and A(R) = UreR A(r). For each alignment
A e A(r), LASER estimates the probability of it indicating the correct
placement of r, written P(A), based on phred scores and empirical indel
statistics; see Appendix D for details.

Step 5: Refining the List of Putative Deletions. We now reﬁne the
set of putative deletions 13mm to create a list of candidate deletions Dmnd
that are supported by both spanning and breakpoint-covering alignments,
i.e. are supported by both CLEVER and split alignments from LASER.
Here, we again aim at a high sensitivity: we prefer to err on the side of
including too many rather than too few candidates. We will purge bad
candidates in a later step. Let Dspm be the set of all deletions supported by
split alignments generated in Step 4. We compute the expected support
SR(d) of a deletion d e Dspm as follows:

572W) 1: 2 MA) - P(A)
AeA(R)
where MA) is an indicator that is 1 when alignment A contains deletion d
and 0 otherwise. To be rather permissive, we retain all deletions with an
expected support of 0.5 and above and thus set

Dépm := {d e Dspm : SR(d) : 0.5}
Next, we ﬁlter out deletions that are not similar to any deletion from
13mm. Formally, we deﬁne the set of candidate deletions as follows:

Beam :2 {d e Dépm : there exists d’ 6 13mm such that 2
AL(d,d’)<TL and A0(d,d’)<T0} ( )
where AL(d, d ’) is the length difference between d and d ’ and A0(d, d ’) is
the offset, i.e. the distance of their center points. CLEVER predictions are
based on internal segment statistics rather than on alignments. Therefore,
position and length can differ from the true deletion. The thresholds TL
and To have to allow for enough ﬂexibility to take that into account
without creating too many spurious hits. We found that setting TL 2 20,
just slightly above the insert size distribution’s stddev, and T0 = 100, to a
distance that is unlikely to produce random hits, works well in practice.

Step 6: Recalibrating Alignment Scores. Because of empirical indel
statistics, the probability P(A) tends to be small if A is an alignment that
supports a deletion (either through too long insert size, in case of a
spanning alignment, or through a split, in case of a breakpoint-covering
alignment). Because we are ready to believe in deletions d 6 Beam, we
increase the probabilities P(A) for alignments supporting deletions
d 6 Beam as follows.

All deletions d 6 Beam now incur only the minimum phred-scaled cost
of 1, whereas all other deletions retain their original costs. To be more
precise, a deletion d’géDmnd retains a cost of Cdcl(L(d’)) as deﬁned in
Appendix D. Using the updated deletion costs, we re-compute the
posterior distribution over all alternative alignments (as described in

 

3145

ﬁm'spzumol‘pmﬂo'sopeuuopnorq/ﬁdnq

T.Marschall et al.

 

Appendix D). This systematically increases P(A) for alignments A indi-
cating deletions d 6 Beam, but not for A indicating deletions d not in
Dam}. From a Bayesian point of view, this procedure corresponds to
updating our prior belief in alignments A into posterior probabilities by
incorporation of the additional evidence provided by Dmnd. We then
compute the most likely alignment pair:

(AW), 143(0) 1= arg max P(Al) - P(|1(z‘11,z‘12)|) - P(Az)
(A .A7)
641039420)

where P(|I(A1,A2)|) is the empirical probability (determined from
uniquely mappable reads) to observe an internal segment of size
I(A1, A2). We discard all other alignments. We also discard alignments
where P(A)< 1 — 0.001, equivalent to a phred-scaled mapping quality of
at least 30.

Step 7: Genotyping each Individual. For each deletion, we predict
the genotype of each individual based on a prior belief ppm”, evidence
from covering alignments, and evidence from spanning alignment pairs.
The prior belief is a global user-speciﬁed input parameter. It can be used
to adjust the trade-off between precision and recall. We process all
d 6 Beam ordered (decreasingly) by expected support SR(d). In the fol-
lowing, let C(d) be the arithmetic mean of start and end position of d.

Spanning alignment pairs: We assume insert sizes to be normally
distributed with mean u and stddev a [see Marschall et al. (2012) for
further discussion of this assumption]. A read r is said to support the
deletion d if

dC1(AT(r),A’£(r)) and |I(Ai(")aA§("))|—M>|d|/2,

where I(A’f(r),A’2‘(r)) is the set of positions that constitute the internal
segment between the two alignments. That is, deletion d lies in the
internal segment and the internal segment length is closer to u + |d|
than to u. Owing to the symmetry of the null distribution NW7, the
latter is equivalent to that the deletion is more likely to be present than
absent relative to r. Read r contradicts the deletion d if

C(d) E 1(Al(r)aA’2‘(r)) and |I(Al(r)aA’£(r))l - M S Idl/Z-

That is, the center point of d lies in the internal segment, whereas in this
case d is more likely to be absent than present relative to r. Note that for
contradicting reads d itself does not necessarily lie in the internal segment,
which is an obvious requirement. Because a deletion reduces to a single
breakpoint in the donor genome, considering only center points for
contradicting reads is analogous to considering the entire deletion for
supporting reads. For accurate genotyping, we have to take ‘crosstalk’
between supporting and contradicting reads into account. Therefore, we
determine 17%?“ := foi‘d‘ N#_0(X)dX as the probability of a false positive
(a contradicting read being misclassiﬁed as supporting) and 17%;?“ 2 173°“
as the probability of a false negative (a supporting read misclassiﬁed as
contradicting).

Let nS and nC be the number of supporting and contradicting reads,
respectively, and let n :2 n5 + nC. Let Em p)(k) be the probability that out
of n samples, each of which, with probability p, has a special label,
k samples have the label. This reﬂects a common binomial distribution.
We then determine (0 for indel not present, 1 for heterozygous and 2 for
homozygous)

ins insch

170 cx Bn.p(ns), 17 =pr
p3“ cx BMW), [7 = 0.5123?" + 0.5(1 — pig“) (3)

ins insch

[72 (X Bh.p(nS)a [7 = 1 _17FN
as insert-size based probabilities for a deletion being not present,
heterozygous and homozygous.

Breakpoint-covering alignments: We determine the number of read ends
supporting the deletion

nx = Z IL1(A’f(r)) + ﬂa(A§("))

rER

where MA) is 1 if alignment A contains the deletion d and 0 otherwise.
We also count the number n of all reads r whose alignments overlap C(d)
(hence, nC : n — n5 is the number of alignments that contradict d). We set
17$? :17??? = 0.01. This is rather conservativeirecall that the align-
ments were ﬁltered at a 0.001 level in Step 6. We proceed analogously
as for spanning alignments (see Equation 3), but now use n and n5, as

obtained here. This yields probabilities 1231*“, pipm, pzpm.

We also consider pgrior :2 l — ppn'or, Plin-or =17?or :2 ppdor/Z, which
expresses our prior belief in the zygosity status of deletions. To achieve
a high precision, we set pprior = 0.001.

prior

Let p,» :=pl. pins -pls.pm for i=0,1,2. We ﬁnally determine the
type as

arg max {170,171,172}
0.1.2

which corresponds to the genotype with the highest posterior probability.

Recall that we process deletions d ordered by expected support SR(d).
When processing subsequent deletions, all alignments already in use for
genotyping a higher-ranked deletion d will be ignored.

Step 8: Finding De Novo Deletions. De Novo deletions, i.e. dele-
tions present only in the child, but not in the parents, are rare but usually
of utmost interest. Their detection is difﬁcult for two reasons. On one
hand, they are absent in the parents and heterozygous in the child, i.e.
only one out of six alleles represents them. This results in considerably
less power for detecting them. On the other hand, inherited deletions that
are heterozygous in only one parent are prone to be mistaken as de novo,
if local coverage in the respective parent is low.

To avoid such spurious calls, we further ﬁlter all deletions that were
genotyped as present only in the child, by not only requiring strong evi-
dence for its presence in the child, but also strong evidence that it is absent
in the parents. Let Tdmovo 2 10’5; we recall that po is the probability
(from Step 7) that a deletion is not present in an individual. All deletions
with 170 < TdCLnOVO in the child and with 1 — 170 < TdCLnOVO in both parents
are reported as de novo. All other deletions are passed on to the next
processing step.

Step 9: Family—Structure—Aware Genotyping. Finally, we combine
individual probability distributions (170,171,172) (0 for not present, 1 for
heterozygous and 2 for homozygous) from all family members into a
combined probability distribution (pg/7; g, h, j e {0, 1, 2}). For example,
1702] 2 p37" - p‘z“ - 173*, where we index with "’",-l“, "’7 for the different family
members, is the probability that the deletion is not present in the mother,
homozygous in the father and heterozygous in the child. We combine these
probabilities with a Mendelian prior aghj; g, h, j e {0, 1, 2} where

P(leXgh) ghj respects the Mendelian laws

. (X .
qgh‘ 0 otherw1se

See (1) for P(leXgh). We report

arg max {qghj ‘ Pghj}
ghj

as the ﬁnal Mendelian-law-corrected genotype.

3 EVALUATION

3.1 ‘Venter’s Family’—a Trio Benchmark

We derive Mendelian—inheritance—compliant annotations for a
virtual family from the full set of Craig Venter’s variants (Levy
et al., 2007). We opt for proceeding this way for three reasons.
(i) For indels, there are no trio benchmark datasets available
(see also the discussion in Appendix A.2). (ii) The Venter vari—
ants make an encompassing amount of real annotations.

 

3146

ﬁm'spzumol‘pmﬂo'sopeuuopnorq/ﬁdnq

MATE-CLEVER

 

In particular, we only have to simulate reads, but not variants
[see also Marschall et al. (2012) for more arguments on good
benchmark datasets]. (3) Dividing these variants into three (over—
lapping) subsets, one each for a mother, a father and the child,
does not lead to a significant reduction of quantities of variants
in one of the single individuals because Mendel’s laws imply that
the vast majority of annotations are shared by at least two
individuals.

Formally, let S2 be the entire set of annotations. We divide (see
section ‘Laws of Mendelian inheritance’ for notation)

s2 2 X010 X110 X02 U X12 U X22 (4)

We also set aside a certain amount of de novo variants X00.
We assume that fractions of variants of equal zygosity are the
same in both mother and father. Similarly, we divide S2 = Y 0 U
Y1 U Y2 into subsets.

The (computational) problem is to partition a given set of
annotations S2 into subsets

(YOHX10)O(Y00X11)O  L’J(Yzf1X22) (5)

without violating Mendel ’s laws and such that the resulting call—
set makes a reasonable SV discovery and genotyping benchmark.
Refer to Appendix A1 for how we solve this problem geomet—
rically. Owing to the large number of heterozygous deletions and
because heterozygous deletions are harder to discover than
homozygous deletions, the resulting benchmark is relatively
difficult. We included (unrealistically) large amount of de novo
deletions in the benchmark because we need a statistically sufﬁ—
cient mass of de novo annotations for benchmarking properly.

Using the resulting trio benchmark annotations, which include
all SNPs, indels, mixed variants and inversions, i.e. all variants
one can download from Levy et al. (2007), we simulated reads
using the read simulator SimSeq (Earl et al., 2011). Mean frag—
ment size was set to u = 500 and stddev to o = 15, which reﬂects
common standards and was chosen as it resembles the data in the
GoNL project (Boomsma et al., 2013). We generated two differ—
ent datasets of reads, one of which amounts to 12x coverage
(which meets the GoNL Project standards) and the other one has
30>< coverage. We then aligned all reads with BWA (Li and
Durbin, 2009), with default parameters in the ‘aln’ step and
parameters ‘—n25 —N2 5’ in the ‘sampe’ step to allow for up to
25 alternative alignments per read.

3.2 Results: Venter simulated reads

For comparing MATE—CLEVER with state—of—the—art
approaches, we selected the following three tools: (i) Unified
Genotyper (abbreviated UG or simply GATK), which sets the de
facto standard for both population— and multi—sample—aware gen—
otyping (DePristo et al., 2011); (ii) PINDEL as a most prominent,
state—of—the—art split—read approach that sets the defacto standard
in split—aligning reads (Ye et al., 2009); and (iii) CommonLA Was
the only indel discovery tool available, apart from the GATK, that
is distinctly trio—aware (Hormozdiari et al., 2011).

We have furthermore evaluated DELLY (Rausch et al., 2012)
and PRISM (Jiang et al., 2012), both of which, like MATE—
CLEVER, are hybrid approaches. However, DELLY does not
address discovery of indels in the length range considered here
(Tobias Rausch, personal communication). Moreover, both tools

address neither genotyping of indels nor the integration of family
information during discovery. See Appendix B for corresponding
results. We furthermore refer to the CLEVER article (Marschall
et al., 2012) for performance statistics for Breakdancer (Chen
et al., 2009), GASV (Sindi et al., 2009), HYDRA (Quinlan
et al., 2010), VariationHunter (Hormozdiari et al., 2009),
SVSeq2 (Zhang et al., 2012) and MoDIL (Lee et al., 2009).

Because CommonLAW is internal segment size—based, we
evaluate its calls with relaxed distance thresholds and compare
its results with MATE—CLEVER calls evaluated in the same way
in a separate table to avoid confusion and/or unfair compari—
sons. The comparison of MATE—CLEVER, the GATK and
PINDEL (with strict criteria) is shown in Table 1, whereas the
comparison of MATE—CLEVER and CommonLAW (with
relaxed criteria) is displayed in Table 2; the precise criteria and
an explanation of evaluation metrics are provided in the next
section. A detailed overview of MATE—CLEVER’s genotyping
performance is given in Figure 2.

Table 3 shows the performance of MATE—CLEVER, UG and
PINDEL in terms of making de novo predictions. De novo dele—
tions only exist in the child, hence cannot be inherited, but must
have come into existence during mating. De novo variants,
including SNPs, are rare, but are also of great interest, because
they can help to explain the mechanisms behind creation of new
genetic variation. We recall that we included amounts of de novo
calls in our benchmark that overestimate true amounts because
we need a statistically sufﬁcient mass for evaluation.

3.3 Evaluation metrics

In Table 1, we count a prediction as true positive if it matches a
true annotation at most 20—bp distance, with at most 10 bp dif—
ference in length. For a relaxed evaluation of CommonLAW
(Table 2), a true positive is a prediction that matches a true
annotation at a distance of at most 100—bp, with at most
100 bp difference in length. Recall is determined as the number
of true positives over the number of true annotations. Precision is
the number of true positives over the number of predictions. In
Tables 1 and 2, Family Precision refers to pooling all predictions
and annotations into one ‘family pool’ and determining precision
accordingly. Recall is also evaluated by pooling. Individual
Precision refers to not pooling calls and annotations, but to
evaluating precision in each individual separately and taking
the average. Genotype Precision is the fraction of (individual)
predictions that are (not only true positive, but also) correctly
genotyped. In Table 2, we have replaced Genotype Precision by
Length Difference, due to that CommonLAW does not genotype
and to reﬂect differences between split—read—driven and insert—
size based approaches in terms of breakpoint accuracy.

3.4 Results: real data (platinum genome)

We also evaluated MATE—CLEVER on chromosome 1 of the
platinum genome trio provided by Illumina, as downloaded from
http://www.illumina.com/platinumgenomes, together with the
computational annotations, generated through Illumina
inhouse—software (Eland and CASSAVA, personal communica—
tions with Ole Schulz—Trieglaff, Illumina, available at ftp://ftp.
platinumgenomes.org/trio). The platinum trio consists of individ—
uals NA12878 (mother), NA12877 (father) and NA12882 (son).

 

3147

ﬁm'spzumol‘pmjxo'sopeuuopnorq/ﬁdnq

T.Marschall et al.

 

Table 1. Performance rates for calling and genotyping deletions, using highly stringent evaluation criteria

 

 

Coverage Overall recall Family precision Individual precision Genotype precision
12>< /30>< 12>< /30>< 12>< /30>< 12>< /30><
Length range 10—29 (25678 true deletions)
MATE-CLEVER 11.9 / 22.1 90.1 / 90.9 90.6 / 91.5 77.2 / 83.4
GATK 57.0 / 69.9 90.9 / 89.8 90.5 / 89.2 87.0 / 88.3
PINDEL 66.3 / 82.7 92.4 / 90.4 93.0 / 91.4 N/A / N/A
Length range 30—49 (3170 true deletions)
MATE-CLEVER 55.8 / 69.6 88.0 / 85.9 88.2 / 86.3 81.9 / 84.6
GATK 15.7 / 23.2 91.5 / 91.3 90.9 / 90.8 84.8 / 88.5
PINDEL 43.0 / 58.8 83.9 / 73.8 86.6 / 78.2 N/A / N/A
Length range 50—99 (1854 true deletions)
MATE-CLEVER 48.7 / 55.6 77.9 / 74.4 78.9 / 74.8 78.5 / 76.8
GATK 0.3 /0.6 66.7 / 73.3 65.0 / 73.7 59.3 / 77.8
PINDEL 25.0 / 37.2 69.3 / 55.9 72.8 / 61.7 N/A / N/A
Length range 100—249 (1137 true deletions)
MATE-CLEVER 34.7 / 42.5 73.9 / 63.6 76.5 / 64.9 77.6 / 70.5
GATK 0.0/0.0 —/— —/— — —
PINDEL 14.1 /20.1 71.1 / 58.7 75.0 / 63.7 N/A / N/A

 

Note: See main text for deﬁnitions. Best values in each category are typeset in bold face.

Table 2. Performance rates comparing MATE-CLEVER and CommonLAW, using relaxed evaluation criteria

 

 

Coverage Overall recall Family precision Individual precision Length difference
12>< /30>< 12>< /30>< 12>< / 30>< 12>< /30><

Length range 10—29 (25678 true deletions)

MATE-CLEVER 13.2 / 23.9 93.7 / 93.8 93.6 / 93.8 0.5 / 0.5

CO.LAW 0.4 / 0.5 93.1 / 89.5 94.1 / 90.9 17.8 / 16.4

Length range 30—49 (3170 true deletions)

MATE-CLEVER 60.7 / 75.2 93.7 / 92.1 93.4 / 91.8 0.9 / 1.1

CO.LAW 12.4/ 12.9 94.2 / 95.0 92.3 / 88.5 13.6 / 11.0

Length range 50—99 (1854 true deletions)

MATE-CLEVER 54.1 / 63.1 87.0 / 85.6 87.0 / 84.5 2.3 / 2.8

CO.LAW 55.2 / 66.9 84.3 / 93.6 77.0 / 89.0 16.4/ 13.4

Length range 100—249 (1,137 true deletions)

MATE-CLEVER 38.6 / 48.9 84.7 / 78.4 86.5 / 78.9 3.1 / 4.5

CO.LAW 39.5 / 52.4 75.8 / 65.8 77.7 / 68.4 27.9 / 14.8

 

Note: CommonLAW cannot genotype. Because CommonLAW is internal segment size—based, breakpoint predictions are less accurate. See main text for column deﬁnitions.

Best values in each category are typeset in bold face.

We then aligned the reads using BWA (with the same setting as
for the simulated reads) and ran MATE—CLEVER as well as
PINDEL on the alignments. Note ﬁrst that the standard devia—
tion (stddev) of the fragment length distribution is extremely high
(865 bp), due to the outdated library protocols, which explains
the small amount of deletions of length 6&129 bp MATE—
CLEVER predicts (We virtually claim that we can discover
and genotype indels longer than two times the stddev of the
fragment length distribution, which amounts to 30 on current
protocols.). See Appendix E for Venn diagrams and statistics,
relating MATE—CLEVER, PINDEL and CASSAVA calls. Total
amounts of predictions (exclusive calls in parentheses) evaluate
as follows (see Appendix E for more details):

7 657129 bp (172 stddev): MATE-CLEVER 69 (22),
CASSAVA 130 (79) and PINDEL 256 (195), with 21 shared
by all

7 13(P194 bp (273 stddev): MATE-CLEVER 30 (15),
CASSAVA 113 (100), PINDEL 40 (26), with 12 shared by all

7 19y324 bp (376 stddev): MATE-CLEVER 87 (22),
CASSAVA 45 (28), PINDEL 80 (16), with 16 shared by all

7 3251000 bp (>6 stddev): MATE-CLEVER 97 (33),
CASSAVA 0, PINDEL 157 (93), with 64 shared by the two

Although CASSAVA genotypes can be in conﬂict with the
Mendelian laws (see Appendix A.2), none of the MATE—
CLEVER calls are (PINDEL does not genotype).

4 DISCUSSION

Table 1 shows that the GATK’s overall recall and precision as
well as its genotyping performance are excellent for deletions of
10729 bp, with recall between 60 and 70%, depending on cover—
age, and with precision and genotyping rates at ~90%.

 

3148

ﬁm'spzumol‘pmjxo'sopeuuopnorq/ﬁdnq

53x\Ewogmoizmnnw.oxmoagoﬁsiwbwﬁ

T.Marschall et al.

 

par with those of the GATK for deletions smaller than 30 bp. In
doing this, MATE—CLEVER also integrates statistics reﬂecting
the laws of Mendelian inheritance, for enhanced performance
rates when dealing with ancestry—related contexts.

We focus exclusively on results for deletions here. With some
minor modiﬁcations, however, MATE—CLEVER also applies
for insertions7both its core engines (Marschall et al., 2012,
CLEVER); (Marschall and Schonhuth, 2013, LASER) have
been designed for also reliably handling insertions (note that
the usual limitations owing to read and fragment length do not
allow to discover insertions larger than 80 bp). Extrapolating
CLEVER’s and LASER’s performance rates for insertions,
which largely agree with those for deletions, may yield reason—
able guesses on MATE—CLEVER’s performance on insertions.

Still, challenges remain. Neither the GATK nor MATE—
CLEVER achieves recall of >70%. Future work will be con—
cerned with raising sensitivity even further, by using improved
alignment scores, and also by integrating elements that allow
for further improved recalibration of read alignments, such as
constructing local haplotypes.

For further results on real data, we refer the interested reader
to the GoNL Project (http://www.nlgenome.nl), where MATE—
CLEVER contributed to predicting indels in all 231 trios and
19 quartets.

ACKNOWLEDGEMENT

The authors thank various members of the GoNL Consortium
and Fereydoun Hormozdiari for fruitful discussions.

Funding: I. Hajirasouliha is supported by the NIH/NHGRI
grant (1R01HG005690—01). Hajirasouliha acknowledges funding
through the NSERC Canada Graduate Scholarships Michael
Smith Foreign Study Supplements Program, which allowed to
perform part of this work at CWI, Amsterdam, jointly with the
other authors.

Conflict of Interest: none declared.

REFERENCES

Abyzov,A. et al. (2011) CNVnator: an approach to discover, genotype, and
characterize typical and atypical CNVs from family and population genome
sequencing. Genome Res, 21, 9747984.

Albers,C.A. et al. (2011) Dindel: accurate indel calls from short—read data. Genome
Res, 21, 9617973.

Alkan,C. et al. (2011) Genome structural variation discovery and genotyping.
Nat Rev. Genet, 12, 3637376.

Boomsma,D.I. et al. (2013) The Genome of the Netherlands: design, and project
goals. Eur. J. Hum. Genet, [Epub ahead of print, doi:10.1038/ejhg.2013.118,
May 29, 2013].

Chen,K. et al. (2009) BreakDancer: an algorithm for high—resolution mapping
of genomic structural variation. Nat Methods, 6, 6777681.

DePristo,M.A. et al. (2011) A framework for variation discovery and genotyping
using next—generation DNA sequencing data. Nat Genet, 43, 4917498.

Earl,D. et al. (2011) Assemblathon 1: a competitive assessment of de novo short read
assembly methods. Genome Res, 21, 222472241.

Enide,A.—K. et al. (2012) Detecting genomic indel variants with exact breakpoints in
single— and paired—end sequencing data using SplazerS. Bioinformatics, 28,
6197627.

Gnerre,S. et al. (2011) High-quality draft assemblies of mammalian genomes from
massively parallel sequence data. Proc. Natl Acad. Sci. USA, 108, 151371518.

Hajirasouliha,I. et al. (2010) Detection and characterization of novel sequence
insertions using paired—end next—generation sequencing. Bioinformatics, 26,
127771283.

Hormozdiari,F. et al. (2009) Combinatorial algorithms for structural variation de—
tection in high—throughput sequenced genomes. Genome Res, 19, 127(21278.

Hormozdiari,F. et al. (2011) Simultaneous structural variation discovery among
multiple paired—end sequenced genomes. Genome Res, 21, 220%2212.

Jiang,Y. et al. (2012) Prism: pair—read informed split—read mapping for base—pair
level detection of insertion, deletion and structural variants. Bioinformatics, 28,
257672583.

Korbel,J.O. et al. (2009) PEMer: a computational framework with simulation—based
error models for inferring genomic structural variants from massive paired—end
sequencing data. Genome Biol, 10, R23.

Langmead,B. and Salzberg,S.L. (2012) Fast gapped—read alignment with bowtie 2.
Nat Methods, 9, 3577359.

Lee,S. et al. (2009) MoDIL: detecting small indels from clone-end sequencing with
mixtures of distributions. Nat Methods, 6, 4734174.

Levy,S. et al. (2007) The diploid genome sequence of an individual human.
PLoS Biol, 5, e254.

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with Burrows—
Wheeler transform. Bioinformatics, 25, 175471760.

Li,R. et al. (2010) De novo assembly of human genomes with massively parallel
short read sequencing. Genome Res, 20, 2657272.

Lunter,G. and Goodson,M. (2011) Stampy: a statistical algorithm for sensitive and
fast mapping of illumina sequence reads. Genome Res, 21, 93(r939.

Marschall,T. and Schonhuth,A. (2013) Sensitive long—indel—aware alignment of
sequencing reads. Tech. Rep., arXiv:1303.3520.

Marschall,T. et al. (2012) CLEVER: clique—enumerating variant ﬁnder.
Bioinformatics, 28, 287572882.

McKenna,A. et al. (2010) The Genome Analysis Toolkit: a MapReduce framework
for analyzing next—generation DNA sequencing data. Genome Res, 20, 129771303.

Medvedev,P. et al. (2010) Detecting copy number variation with mated short reads.
Genome Res, 20, 161371622.

Quinlan,A.R. et al. (2010) Genome—wide mapping and assembly of structural vari—
ant breakpoints in the mouse genome. Genome Res, 20, 623%35.

Rausch,T. et al. (2012) DELLY: structural variant discovery by integrated paired—
end and split—read analysis. Bioinformatics, 28, i3337i339.

Sindi,S. et al. (2009) A geometric approach for classiﬁcation and comparison of
structural variants. Bioinformatics, 25, i2227i230.

Sindi,S. et al. (2012) An integrative probabilistic model for identiﬁcation of struc—
tural variation in sequencing data. Genome Biol, 13, R22.

The 1000 Genomes Project Consortium. (2010) A map of human genome variation
from population—scale sequencing. Nature, 467, 106171073.

The International Cancer Genome Consortium. (2010) International network of
cancer genome projects. Nature, 464, 9937998.

Ye,K. et al. (2009) Pindel: a pattern growth approach to detect break points of
large deletions and medium sized insertions from paired—end short reads.
Bioinformatics, 25, 286572871.

Zerbino,D. and Birney,E. (2008) Velvet: algorithms for de novo short read assembly
using de bruijn graphs. Genome Res, 18, 8217829.

Zhang,J. et al. (2012) An improved approach for accurate and efﬁcient calling of
structural variations with low—coverage sequence data. BMC Bioinformatics, 13
(Suppl. 6), S6.

 

3150

ﬁre'spzumol‘pmJXO'sopeuuowrorq/ﬁdnq

