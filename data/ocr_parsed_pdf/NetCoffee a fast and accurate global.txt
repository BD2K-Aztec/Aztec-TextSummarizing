BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

NetCoffee

 

Many pairwise local and pairwise global alignment tools have
been developed in the last decade. Among pairwise local align—
ment tools are PathBlast (Kelley et al., 2004), MaWISh
(Koyuturk et al., 2005), NetworkBlast (Kalaev et al., 2008),
NetAligner (Pache et al., 2012), PINALOG (Phan and
Sternberg, 2012) and SIPINAL (Aladag and Erten, 2013).
A review by Sharan et al. (Sharan and Ideker, 2006) extensively
discusses some of these methods. Well—known pairwise global
alignment tools are IsoRank (Singh et al., 2007), PISwap
(Chindelevitch et al., 2010), MI—GRAAL (Kuchaiev and Prulj,
2011), Natalie 2.0 (El-Kebir et al., 2011) and GHOST (Patro
and Kingsford, 2012).

With the increasing availability of PPI networks, the demand
for local and global alignment tools of multiple networks has
risen. Several multiple alignment tools have been developed,
most notably the multiple global alignment tools Graemlin 2.0
(Flannick et al., 2009), IsoRank—N (Liao et al., 2009) and
SMETANA (Sahraeian and Yoon, 2013), and the multiple
local alignment tool NetworkBlast—M (Kalaev et al., 2009).
However, these tools have some limitations. Graemlin 2.0 re—
quires a training dataset of known alignments to learn its
many network—dependent parameters and a phylogenetic tree,
which means it can not be applied to species without known
alignments or without a phylogenetic tree. NetworkBlast—M
does not work on networks containing protein nodes with
large vertex degree, such as the yeast network in our test datasets.
Both IsoRank—N and SMET ANA need a lot of computing time
for aligning six or more species. Thus, there is a demand for tools
that can deal with many networks in a more efﬁcient way.

As a remedy for these limitations, we present a fast and ac—
curate tool NetCoffee, which addresses the problem of global
alignment of multiple networks. The algorithm implemented in
NetCoffee has four main steps: (i) building the PPI networks and
a library of bipartite graphs, (ii) assigning an integrated weight to
each edge in the bipartite graphs using a triplet extension
approach similar to T —Coﬂee, (iii) building a search space that
consists of candidate edges (protein pairs) and (iv) simulated
annealing (SA) with a large number of iterations of a
Metropolis Scheme to maximize a scoring function for global
alignments. We ran NetCoﬂee on four datasets consisting of
up to six PPI networks. Our results show that NetCoffee over—
comes the limitations of existing algorithms, outperforms all
existing alignment tools in terms of speed and nevertheless iden—
tif1es a biologically meaningful alignment.

2 METHODS

2.1 Deﬁnitions and notation

Let {61 , Gz, - - - , Gk} represent a set of k z 3 PPI networks. Each network
G,» = (Vi,E,») is an unweighted graph, where V,- is a set of nodes repre-
senting proteins and E,- a set of binary interactions appearing in the net-
works. We refer to elements of E,- as interactions to distinguish them from
edges in a different type of graph below. Let V 2 UL] V,» be the union of
all proteins. A match set 29 is a subset of V. By deﬁnition, a global align-
ment of the k networks is a node mapping that consists of a set of mu-
tually disjoint match sets, {291, 292, ---, 29’"} with 2V H 291' = (A, Vi,j,i;£j.
A match set can contain more than one node from each network.

Like a match set, a k-spine is a subset of V but contains exactly one
protein from each network. In addition, two different k-spines can share

nodes. In contrast to global alignments, a local alignment of k networks is
a set of independent high-scoring local node mappings, each node map-
ping consisting of a set of k-spines (Kalaev et al., 2009).

2.2 Generating a bipartite graph library

Given k species and their corresponding PPI networks, we build a bipart-
ite graph library, which contains a graph Bi]- : (V, U V], E!) for each pair
of input networks G,- and G], i5j,i,j 6 {1,2, - - -,k}. We use the term
edges to refer to elements in E”. To determine the sets Eif, we perform
an all-against-all sequence comparison with the program BLASTP
(Altschul et al., 1997) for each pair of species, including pairs of the
same species like humanihuman. Then, the set of  bipartite graphs
can be constructed by simply joining protein pairs V] 6 V,», v; e V]- that
have an e-value 5 10’7 by edges (v1, v;) 6 Eg. In bipartite graphs 3,,- of
the same species, we add only edges for pairs of two distinct proteins
v1 75 v; to E,-,-. This allows us to construct match sets that might reﬂect
duplication events within a species and hence exhibit functional relation
within a species.

2.3 Integration of two conservation measures

To search for a biologically meaningful alignment, we developed a linear
scoring model that assigns a weight to each edge of the bipartite graphs.
The development of the scoring model was intuitively guided by two basic
assumptions: (i) functionally conserved proteins are likely to have sequence
similarity and (ii) interactions among orthologous proteins are likely to be
conserved across species. Likewise, our scoring model consists of two in-
dependent parts for sequence and topology similarity. Given an edge
e 2 (v1, v;), we use Sr(v1, v;) to denote a normalized sequence score
and S,(v1, v;) to denote a normalized topology score for proteins v1
and v;. A combined score for the edge e is calculated with
S(v1, v;) = ozS,(v1, v;) + (1 — oz)Sr(v1, v;), where at is a user-deﬁned
parameter controlling how much of the topology score contributes to
S(V1 , V2).

To compute the sequence-based score Sr(v1, v;) for a pair of proteins v1
and v;, we adopt a previously introduced log-ratio scoring function that
uses distributions of e-values in two models, the homology model H and
the null model N (Flannick et al., 2006). The null model includes all pairs of
proteins from the input networks, whereas the homology model includes
only pairs of proteins with an e-value 5 10’7. Given the distributions of
e-values in these two models, we calculate the probabilities to observe the
e-value Xv”: of the two proteins v1 and v; in the two models, Pr(x..l..2 |H)
and Prod”, |N). Our normalized sequence score is the log-ratio

P‘ v \‘a
 2 MM
P’(X\'1v2 
of these probabilities scaled to the range from 0 to 1 with the minimal

observed log-ratio y,,,,-,, and maximal observed log-ratio ymm. of all protein
pairs in the H model:

yvlvg _ yinin

max _ y min

Sr(vl a V2) 2

To compute the topology-based score S,(v1, v;), we use a triplet ap-
proach that bears similarities to the concept of overlapping weights
(Morgenstern, 1999) and T-Coffee’s consistency approach (Notredame
et al., 2000) in multiple sequence alignment. Our approach is an incre-
mental process with the ﬁnal score reﬂecting the likelihood of a pair of
proteins being topologically conserved. Initially, we set the topology-

based scores of all edges in the  bipartite graphs of two different

species to zero. After this initialization, each of the edges has an equal
right to be part of the global alignment with regard to the topology
similarity. Figure 1a illustrates an example of species that are numbered
1 and 2. Next, we do a series of triplet comparisons as displayed in
Figure lbw. A triplet is a set of three PPI networks and the three involved
bipartite graphs. We can construct a series of triplets by combining any

 

541

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

J.Hu et al.

 

 

 

 

 

 

 

 

Fig. 1. The workﬂow of our triplet approach on an example with four species. Proteins are represented by nodes, PPIs by solid lines and edges of
bipartite graphs by dashed lines. (a) Initialization of the bipartite graph for species 1 and 2. (b—e) Comparison of triplets. Increasing edge scores of pairs
of triplet matches whose proteins share three PPIs, e.g. the edges in line with ﬁne dots. (f) The ﬁnal topology scores of edges between species 1 and 2

three different PPI networks. A set of three nodes that are mutually
connected by edges is a triplet match, e.g. {A1,A2,A3} in Figure 1b. In
the process of reweighing, we consider all pairs of triplet matches that are
connected by conserved interactions in all three networks, such as the
edges in line with ﬁne dots in Figure lbw, and increase the score of each
edge in the pair of triplet matches by one. In graphs of the same species,
we set the topology-based score of all edges to zero.

All edge scores of the two species 1 and 2 are illustrated in Figure 1f.
As an example, the overall topology-based score for the two proteins 31
and 32 in Figure 1f is ﬁve, which is explained as follows: In Figure 1b the
conserved interaction between {31, C1} and {32, C2} is conﬁrmed by
{33, C3}, and hence the triplet matches {31, 32,33} and {C1, C2, C3}
are completely connected by interaction edges contributing one to the
score. In Figure 1b, the triplet matches {A1,A2,A3} and {31,32,33} do
not contribute because of the missing interaction edge {A3, 33}. In Figure
1c, the four combinations of triplet matches {{31,32, 34}, {A1, A2, A4}},
{$1,132,134}, {C1, C2, C4}}, {ll-91,32,134}, {A1,Dz, C4}} and {ll-91,32,134},
{C1, D2, C4}} contribute four to the score. For more details for this
example including the other weighted bipartite graphs and pseudo-code
for the triplet comparison see the Supplementary Material.

After this process, each edge of the bipartite graphs has been assigned
a topology-based score, which we normalize to the range between 0 and 1.
However, the distribution of theses scores is extremely non-uniform, as
the connectivity of biological networks follows a power-law distribution
(Barabasi and Albert, 1999). A few edges between hub-nodes have a
topology score close to the maximal score, and many others are close
to zero. For example, ~90% of the protein pairs have a normalized
topology score between 0 and 0.1 in our dataset 2. In contrast, 95% of
the protein pairs has a normalized sequence score between 0.6 and 1. This
implies that small normalized topology scores might still be statistically
signiﬁcant and indicate a high probability of functional relatedness.
A large number of protein pairs have a small normalized topology
score because the maximal score is large. Therefore, we lift the small
scores up using a power-law redistribution to make sure that the topology
score has a reasonable impact on the whole alignment score (for details
see the Supplementary Material). This concludes the computation of the
edge scores S(v1, V2), where each score now reﬂects sequence similarity
and topology conservation.

2.4 Alignment algorithm

Our algorithm for aligning multiple networks first collects candidate
edges from the  bipartite graphs. Subsequently, the algorithm com-
bines some of these candidate edges to a global alignment with the meta-
heuristic method SA (Kirkpatrick et al., 1983). The collection of
candidate edges reduces the computational complexity while retaining

the sensitivity and specificity of the algorithm in praxis.

bipartite graphs,  of which formed by proteins from two different
species. The weights of all edges in 321-,1' < j reﬂect the likelihoods of
the edges to be a true match of the global alignment, including
information about sequence and topology conservation. We use a max-
imum weighted matching algorithm, namely, Edmond’s Algorithm
(Galil, 1983), to ﬁnd a one-to-one node mapping in each of the  bi-
partite graphs and collect the matching edges as candidate edges.
Furthermore, we collect protein pairs of the same species with scores
higher than a threshold :7 = n(l —Ol). The parameter :7 is user-deﬁned
and enables our method to identify match sets formed by proteins of one
species. The term (1 — or) accounts for the fact that the topology score of
these edges is always 0. We obtain a collection of candidate edges,

denoted as $2.

2.4.] Collection of candidate edges We have given ('1?) weighted

2.4.2 Multiple alignment To ﬁnd a multiple global alignment A g 9,
we deﬁne the scoring function (MA) = ZﬂeAﬂﬁ), where ﬂz?) is the score

of a match set 29 = {V1,V2, ---, 11W}. The score of z? is calculated with
the functionﬂz?) = Z”. S(v,», vj)8,j, where 8,]- : 1 if {v}, vj} e 9, otherwise

Let I be the collection of all possible global alignments. Then,
the problem of multiple global alignment can be modeled as an opti-
mization problem maerl (MA). We use an SA approach to approximate
the highest-scoring alignment. Unlike the strategy of progressive align-
ment (Flannick et al., 2006), which successively aligns closest pairs of
networks and constructs a new network alignment, our SA approach
starts with an empty alignment of all networks and runs a large
number of iterations of a Metropolis scheme (Metropolis et al., 1953)
to maximize (MA).

 

542

ﬁm'spzumofpmﬂo'sopeuuqurorq/ﬁdnq

NetCoffee

 

 

Algorithm 1 Simulated annealing algorithm
Input: Matching edges 9, K, Tmin, me, s
Output: A solution x* with a set of mutually disjoint match sets

1: x20, T0 = me,i= 1;

2: while i 5 K do

3 n = 0;

4 T. = T. — 
5: while n<N do
6.

7
8

 

draw arbitrary sample S e 9 from uniform distribution;
x’ = updateState(x, E);
: A<1> = <I>(x’) — <I>(x);
9: if A<1> > 0 then

10: x = x’;

11: else rand(0, 1)< exp{A<I>/(sT,»)}
12: x = x’;

13: end if

14: n=n+l;
15: end while
16: i=i+l;
17: end while

18: x* = x;

19: return x*;

 

The pseudo-code of the SA approach is given in Algorithm 1. Let x e I
be a feasible solution (a set of mutually disjoint match-sets) for the prob-
lem and <I>(x) the alignment score of x. At the beginning of the algorithm,
we initialize our alignment x with (A and set a temperature parameter To
to its maximum. In the following annealing phase, we decrease the tem-
perature and repeatedly perturb the current solution x with a Metropolis
scheme using 71,» cc exp(—<I>(x)/(sT,»)) as the equilibrium distribution.
Parameters s, K, N, Tmin and T1le control the SA. The updateState
(x, S) updates the current alignment with an arbitrary sample
S: {u,v} e 9. It runs into four possible scenarios. Let ugéx indicate
that V; e x, ugég‘, and u e x indicate that El; 6 x, such that u e 3“. Then,
the scenarios are (i) ugéx and vgéx; (ii) ugéx and v e x; (iii) u e x and vgéx;
and (iv) u e x and v e x, but u and v are not in the same match set. In the
ﬁrst scenario, u and v are added to the current alignment x as a new
match set. In the other scenarios, u and v are moved to the same match set
of the alignment x in two possible ways, called combination and substitute.
Details are described in the Supplementary Material. We continue this
process until the ‘temperature’ T,- decreases to Tmin.

2.5 Complexity analysis

We assume that the number of proteins in the largest PPI network is n,
and the number of input networks is k. The pseudo-code of the triplet
approach (see Supplementary Material) has a complexity of (§)0(n6).
Suppose there is a bipartite graph, 3,. = (V51 U V52,E,.), the running
time complexity of Edmond’s Algorithm on 3,. is 0(| V51 U Vs2|-
log |Esl). Therefore, the collection of candidate edges costs
(§)0(n log(n)) time.

The convergence time of SA has been a widely studied question in the
last two decades. We assume A =max{<I>(x’)— <I>(x)}, where x’ is a
neighbor state of state x. As shown by the proof in Rajasekaran
(1990), SA converges (at any temperature) in time 23[dexp(A/sT)]D,
where D is the diameter, d is the degree of the underlying Markov
chain and 3 is deﬁned by the convergence probability 2 (1 —2’ﬁ).
Theoretically, D and d are hard to calculate. However, in practice, the
complexity of SA only depends on two parameters of the cooling scheme,
K and N. From Algorithm 1, we can easily ﬁnd that the complexity is
52(K - N), which is independent of the number of compared species k. To
sum up, practically, NetCoﬂee is able to deal with multiple networks and
has a favorable time complexity. Our results show that the alignment
score converges rapidly in our experiments (see Supplementary Fig. S5).

3 RESULTS AND DISCUSSION

3.1 Test datasets

We have evaluated NetCoﬂee on three datasets of up to five
eukaryotic species and one dataset of six microbes as shown in
Table 1. The ﬁve eukaryotic species include Homo sapiens
(human), Mus musculus (mouse), Dorsophila melanogaster (fruit
ﬂy), Caenorhabditis elegans (nematode) and Saccharomyces cer—
evisiae (yeast). The six microbes include Escherichia coli,
Salmonella typhimurium, Vibrio cholerae, Campylobacter jejuni
NCT C 11168, Helicobacter pylori 26695 and Caulobacter
crescentus.

To build the five eukaryotic networks of dataset 0, 1 and 2, we
collected all experimentally determined interactions from the
public database IntAct (Kerrien et al., 2012). In addition, we
collected the reference proteome sets of the ﬁve species from
UniProtKB/Swiss—Prot release 2012_07 (Uniprot Consortium,
2007), which are used for all—against—all sequence comparisons.
To make sure the proteins in our networks are non—redundant
and well—annotated, we discarded interactions between proteins
that are not in the reference proteome sets. The number of pro—
teins and interactions of these PPI networks are given in Table 1.
Dataset 3 is the same dataset used in the original publication of
Graemlin 2.0 (Flannick et al., 2009).

For analyzing the biological quality of the alignments, gene
ontology (GO) information was collected from UniProt—GOA
(Camon et al., 2004) (downloaded on Jan. 8, 2013) to annotate
proteins with the three basic types of ontologies: biological pro—
cess (BP), molecular function (MF) and cellular component (CC).
To exclude unreliable function annotations, GO annotations
with evidence codes IEA (inferred from electronic annotation)
and ISS (inferred from sequence or structural similarity) were
discarded.

3.2 Experimental setup

We have implemented NetCoﬂee in C++ using the LEMON
Graph Library (Dezs et al., 2011) version 1.2.3. The implemen—
tation supports multicore parallelism for the triplet comparison.
We ran NetCoﬂee on all four datasets and tuned its SA param—
eters such that the SA process converges to a stable score (see
Supplementary Fig. S5). The default values are now 5 = 0.005,
K: 100, N=2000, Tmm = 10, Tm,” = 100 and n = 1.0.

To compare NetCoﬂee with the state—of—the—art algorithm
IsoRank—N, we executed IsoRank—N on the same datasets with
recommended parameters: K: 20, thresh 2 10’4, maxveclen
= 106. Additionally, NetworkBlast—M, Graemlin 2.0 and
SMETANA were included in our assessment. However,
NetworkBlast—M is unable to work on dataset 0, 2 and 3 for
two reasons. First, the yeast network has proteins with up to
3276 interactions, which is prohibitive for NetworkBlast—M.
Second, NetworkBlast—M requires e—values as a protein similarity
measure, but dataset 3 provides only bitscores. Furthermore, we
ran Graemlin 2.0 only on dataset 3 because it needs additional
training data (i.e. known alignments for the compared species) to
learn its parameters. Because Graemlin 2.0 identiﬁes match sets
whose proteins are from a single species, we set 17 = 0.7 for
dataset 3 to allow a fair comparison with Graemlin 2.0.

 

ﬁm'spzumofpmjxo'sopeuuqurorq/pdnq

J.Hu et al.

 

Table 1. The number of proteins and PPI of four datasets that consist of the PPI networks from 11 species

 

 

Species Proteins Interactions Dataset 0 Dataset 1 Dataset 2 Dataset 3
H.sapiens 8777 28 366 \/ \/

M .musculus 1531 1626 \/ \/

D.melanogaster 1534 2664 \/ \/ \/

C .elegans 767 915 \/ \/ \/

S. cerevisiae 5739 36 226 \/ \/

Ecoli 4179 169636 \/
V. cholerae 3044 7 6 341 \/
Cjejuni11168 1424 76913 \/
prlori 26695 1206 48 430 \/
C. crescentus 3022 52 302 \/
S. typhimurium 4326 151 118 \/

 

We input the networks of the species in the same order for all
programs, namely, the order from Table 1. Only the results of
IsoRank—N depend on the order of input species. All experiments
mentioned in the following parts were carried out on the same
machine, an Intel(R) Xeon(R) CPU X5550 with 2.67GHz.

3.3 Performance comparison

We demonstrate the quality of our alignments in terms of cover—
age and consistency and assess the performance of our method
by measuring running times. Coverage, which serves as a proxy
for sensitivity, indicates the amount of input data the algorithm
can explain. Consistency, which serves as a proxy for speciﬁcity,
measures the functional similarity of proteins in each match set.
Coverage can be easily achieved by sacriﬁcing consistency and
vice versa. The running time demonstrates the ability of
NetCoﬂee to deal with large datasets. Intuitively, the goal is to
ﬁnd a global alignment that has a good consistency while ex—
plaining as many proteins as possible (i.e. high coverage) in rea—
sonably short time. We first look at differences the programs
exhibit in coverage and then investigate the consistency of the
match sets with three measures. Next, we compare running times
and, ﬁnally, demonstrate how much NetCoﬂee benefits from the
integration of similarity and topology score by addressing the
inﬂuence of the parameter at.

3.3.1 Coverage For each program, we calculated the percentage
of proteins (PPV) in the whole set of proteins that are covered by
the alignment as the coverage (see Table 2). In comparison with
IsoRank—N and NetworkBlast—M, the coverage of NetCoﬂee is
signiﬁcantly higher. For instance, the PPV of NetCoﬂee is up
to 41.8% for dataset 1, whereas it is only 31.1% for IsoRank—N
and 16.1% for NetworkBlast—M. The lower coverage of these
two alignment tools can be explained by the facts that
NetworkBlast—M is a local aligner and, thus, considers only con—
served modules; IsoRank—N aligns proteins of at least three spe—
cies into match sets and does not report match sets of proteins
from only two species (These match sets can be recognized by
running the pairwise aligner IsoRank on each pair of species.)
(see an example in Supplementary Table S1). In comparison with
Graemlin 2.0, NetCoﬂee also has a slightly higher PPV value
except for the extreme case of at = 1. When at = 1, sequence

scores of all pairs of proteins are set to 0 in NetCoffee. As a
result, all protein pairs from a single species are excluded from
the collection of candidate edges and consequently from the
alignment. Hence, the coverage drops to 69.7% for dataset 3.
In comparison with SMET ANA, the coverage of NetCoﬂee is
similar. NetCoﬂee achieves a lower PPV for dataset 0, 1 and 2,
but a higher PPV for dataset 3. Concerning the number of match
sets, IsoRank—N identifies more match sets formed by proteins
from three of the compared species, and both Graemlin 2.0 and
SMET ANA find more match sets for dataset 3 than NetCoffee
except for at = 1 (see Supplementary Table S1).

3.3.2 Consistency An alignment tool that achieves a high cover—
age is not necessarily better than others. For example, a random
global alignment may cover all proteins but aligns many unre—
lated proteins. Hence, we now address the performance of the
alignment tools in terms of consistency. Consistency demon—
strates the biological signiﬁcance of predicted match sets.

As a ﬁrst consistency measure, we computed the mean entropy
and the mean normalized entropy of the predicted match sets in
the alignments of each algorithm. We calculated the entropy of a
match set with the same method as in IsoRank—N according to its
GO annotations. A match set has lower entropy if its GO anno—
tations are more functionally coherent. From Table 2, we can see
that the entropy of NetCoffee is considerably lower than that of
IsoRank—N and NetworkBlast—M no matter which at was used,
whereas at the same time having a high coverage. Additionally,
the entropy of NetCoﬂee is lower than that of SMET ANA on all
datasets except for dataset 3. In comparison with Graemlin 2.0,
NetCoffee achieves nearly identical entropy results for dataset 3,
whereas being considerably faster. The results for at = 0 and
at = 1 demonstrate that both of our two conservation measures
can favorably predict the functional relatedness between protein
pairs.

Dataset 3 exhibits an interesting trade—off using the at param—
eter in terms of coverage and consistency. For at = 1, NetCoffee
has the lowest entropy, however, at the cost of a much lower
coverage. Decreasing at improves the coverage while deteriorat—
ing the entropy measure. This behavior is less pronounced for the
other datasets. However, it shows that the at parameter can be
used for having a specificity versus sensitivity trade—off.

 

ﬁm'spzumofpmjxo'sopeuuqurorq/pdnq

NetCoffee

 

Table 2. Coverage, entropy and speed comparison

 

NetCoffee

IsoRank—N

NBM Gr. 2.0 SME

 

Dataset
Measure

01:0.0 01:0.3 01:0.4 01:0.5 01:06 01:07 01:10 01:00 01:0.3 01:0.4 01:0.5 01:06 01:07 ot=l.0— — —

 

D—0 PPV(%) 28.3 28.2 28.4 28.3 28.1 28.3 27.6 6.75

ME 1.525 1.504 1.511 1.519 1.522 1.528 1.523 3.562
M NE 0.6081 0.6026 0.6031 0.6054 0.6052 0.6059 0.6091 1.093
Time 25 25 25 25 25 25 25 9.9m
D-l PPV(%) 41.8 41.2 41 41 40.5 40.2 41 19.4
ME 2.603 2.645 2.6 2.615 2.608 2.614 2.589 4.366

MNE 0.8642 0.8721 0.8638 0.8669 0.8651 0.8652 0.8601 1.258
Time 225 215 215 215 225 215 22s 14.6m
D-2 PPV(%) 49.5 49.1 48.8 48.6 48.3 48.1 47.1 21.9
ME 2.257 2.288 2.265 2.286 2.293 2.277 2.238 3.942
MNE 0.7918 0.7988 0.7931 0.7979 0.7995 0.7954 0.7883 1.167
Time 48.25 47.3 51.95 55.65 46.65 47.85 48.05 1.70h

D—3 PPV (%) 84.8 84.3 84.3 84.1 83.9 83.6 69.7 *
ME 0.267 0.266 0.267 0.268 0.266 0.267 0.249 *
MNE 0.203 0.203 0.204 0.205 0.204 0.205 0.201 *

Time 4.9m 5.9m 5.3m 5.8m 5.7m 7.3m 3.9m > 72h

16.1 16.1 15.7 15.1 14.2 2.14 * * 35.2
2.927 2.941 2.952 3.083 3.057 3.235 * * 2.393
0.9627 0.967 0.9705 0.9993 0.9942 0.9951 * * 0.8374

20.5m 21.7m 25.3m 32.5m 41m 70.5m * * 535

31.1 30.9 30.4 30.2 29.7 10.8 16.1 * 52.6
3.927 3.896 3.986 3.992 4.043 4.863 4.130 * 3.054
1.173 1.167 1.186 1.185 1.194 1.336 1.227 * 0.9616

29.6m 31.4m 37.7m 46.9m 64.2m 101m 13.5m * 3.3m

33.8 33.3 32.7 32.1 31.8 9.67 * * 58.1
3.597 3.629 3.645 3.681 3.686 4.403 * * 2.592
1.103 1.109 1.113 1.12 1.12 1.244 * * 0.8656
3.01h 3.77h 4.18h 4.81h 5.86h 9.05h * * 6.2m
* * * * * * * 0.263 0.248
* * * * * * * 0.205 0.199
>72h >72h >72h >72h >72h >72h * 6.7h 7.8m

 

Note: The ﬁve algorithms NetCoﬂee, IsoRank—N, NetworkBlast—M (NBM), Graemlin 2.0 (Gr. 2.0) and SMETANA (SME) were tested on the four datasets. The rows list the
PPV, mean entropy (ME), mean—normalized entropy (MNE) and the running time. D—x in the ﬁrst column represents the test dataset, Dataset—x. S, m and h in the row of time
represent seconds, minutes and hours. Bold face numbers represent the best performance with respect to each row. The parameter of or in both NetCoﬂee and IsoRank—N

demonstrates the percentage of the topology score contributing to the whole—alignment score. And ‘—

corresponding aligner is not applicable in this dataset.

Second, we assessed consistency by three elaborate semantic
similarity measures introduced in Schlicker et al. (2006, 2007):
BPscore, MFscore and rfunSim. Unlike many existing
approaches (El—Kebir et al., 2011; Kuchaiev and Prulj, 2011)
that simply evaluate functional similarity by counting the
number of common GO terms of involved proteins, BPscore
and MFscore assess the functional similarity of two proteins by
exploiting BP and MF annotations with the GO hierarchy tree.
The measure rfunSim is a combination of BPscore and MFscore
(for details see the Supplementary Material). We report the arith—
metic mean of the similarity scores of all involved protein pairs as
the functional consistency of a match set. For instance, given a
match set 73 = (v1, V2, ---, VWI), the functional consistency of 73
with respect to the BP annotation is deﬁned as

Z BPscore(v,~, vi)
13¢; . .
(ml) , l,j€{l,2, ,lﬁl}.
2

Analogously, we can calculate W and rfunSim. All three
scores range from 0 to 1, which translates into an increasing
degree of functional similarity. We calculated the scores using
the functional similarity search tool (FSST) (Schlicker et al.,
2007). To avoid skipping too many meaningful match sets,
match sets that contain <40% uncharacterized proteins were
also taken into consideration. We separately compared match
sets that contain proteins from 3, 4 and 5 species. And the dis—
tribution of match sets in each category can be seen in
Supplementary Table S1.

We compared the consistency of NetCoﬂee with that of
IsoRank—N (see Fig. 2) and SMETANA (see Supplementary

BPscore(73) =

7

indicates or is not a parameter of the corresponding aligner, ‘*’ means the

Fig. S6) on their alignments of dataset 2. As shown in
Figure 2am, when Ot>0, the BPscore of NetCoﬂee is higher
than that of IsoRank—N, and the W and rfunSim are
roughly the same. More importantly, the advantage of
NetCoﬂee expands when i (i.e. the number of species) increases
to 4, as shown in Figure 2dif, although it identiﬁes more match—
sets. NetCoﬂee shows signiﬁcant improvements with regard to
the BPscore, MFscore and rfunSim except for the case of at = 0.
When at = 0, IsoRank—N reaches its highest point. However, we
do not recommend to use at = 0 for IsoRank—N, as its coverage
drops to only 21.9%. For i=5 illustrated in Figure 2gii,
IsoRank—N improves the quality of match sets in terms of
BPscore. The two algorithms are comparable in terms of
W and rfunSim. However, NetCoﬂee identiﬁes ~378
times more match sets than IsoRank—N (see Supplementary
Table S1). Compared with the alignment of SMET ANA,
match sets identiﬁed by NetCoﬂee have lower semantic scores
for i=3 but roughly the same scores for i=4 and i=5 (see
Supplementary Fig. S6).

Finally, we measured the consistency by computing the per—
centage of qualified match sets the algorithms identified. As
demonstrated in Schlicker et al. (2006), almost 60% of protein
pairs in the Inparanoid Orthologs (IO) dataset has an MFscore
>08 and 65% has a BPscore >0.6. Therefore, we regard those
match sets that have an M >0.8 or a m >0.6 as
qualified match sets, i. e. functionally related proteins. With
these thresholds, ~45% of the match sets recognized by
NetCoﬂee are qualiﬁed match sets (see Supplementary Fig.
S7), which is signiﬁcantly more than those identiﬁed by
IsoRank—N (~25%) and more than those identiﬁed by
SMET ANA (~42%). Visualizations of the GO trees for each
qualiﬁed match set [drawn using the package G0.'.'TermFinder

 

ﬁre'spzumofpmjxo'sopeuuqurorq/pdnq

55,2kgogmoddmmowoxwoa‘oﬁsambmﬁ

1 .....................  1 ............ ..l .... .1 1 ........... 
II II II
1 .................. -l1 1 ............. -I ..... 1 1 ............ -I ........ 1
II II II
1 .................. -l 1 1 ................ -l ....  1 ........ -l ....... 
II II II
1 .................. 1'1 1 ................ ..l .... .1 1 ....... ..I ...... .1
II II II
1 .................. ..l1 1 ............... ..| .... .1 1 ....... ..l .... .1
II II II
1 ...................  1 ..............  1 .... -I ....... 
II II II
1 ............ -l .... 1 1 ............ -I ...... 1  ..... 1
II II II
1 ................ ..| ..... .1 1 ............... ..l ...... .1 1| ............. .1
II II II
1 ............  1 ............ -I ...... 1 1 ........... -l .......... 1
II II II
1 ...........  1 ............... -l ......  1 ....... -l .... 
II II II
1 ........... -I 1 1 ............... -l .....  1 ...... -I ..... 
II II II
1 ........... ..l 1 1 ............. ..l ..... .1 1 ..... ..l ...... .1
II II II
1 .............  1 ............ ..| ..... .1 1 .... ..| ...... .1
II II II
1 ..... ..| ........ .1 1 .......... ..l ......... .1 1 ....... ..| ...... .1
II II II

 

NetCoffee

 

training data, ﬁnding a global alignment of six species within
several minutes and scaling to networks with tens of thousands
of proteins and interactions. Further, it is the ﬁrst alignment tool
that can run with multiple cores in parallel.

We rigorously combine protein sequence similarity and net—
work topology similarity into a suitable scoring scheme for mul—
tiple networks, adapting a successful technique from multiple
sequence alignment. This allows us to model the problem as a
combinatorial optimization problem, which we solve with SA.
On PPI networks of five eukaryotic species, such as human,
mouse, fruit ﬂy, nematode and yeast, our implementation
NetCoffee successfully finds a global alignment covering ~50%
of the proteins; and ~45% of the match sets are qualified.

We compared NetCoﬂee with four existing tools, three of
which fail to run on at least one of the three test datasets in
our benchmark. The results indicate that NetCoﬂee outperforms
the state—of—the—art algorithm IsoRank—N in terms of coverage
and consistency, and at the same time is ~173 orders of magni—
tude faster. Compared with NetworkBlast—M, Graemlin 2.0 and
SMET ANA, NetCoﬂee not only overcomes their limitations but
also retains the quality of alignments in terms of both coverage
and consistency.

This suggests that NetCoﬂee provides substantial improve—
ments to global network alignment and that the research com—
munity working on function annotation and phylogenetic
analysis can benefit from it. Further, its application is not re—
stricted to PPI networks. It could also be extended to other types
of complex networks, such as Scientiﬁc Collaboration Networks
(SCN) and World Wide Web Networks (WWWN).

ACKNOWLEDGEMENT

The authors are grateful to Gunnar Klau and Mohammed El—
Kebir for helpful discussions. They thank Roded Sharan and
Maxim Kalaev for their helpful support regarding
NetworkBlast—M. They also wish to thank Jason Flannick and
Tony Novak for their help with the dataset used in Graemlin 2.0.

Funding: China Scholarship Council (CSC).

Conﬂict of Interest: none declared.

REFERENCES

Aladag,A.E. and Erten,C. (2013) Spinal: scalable protein interaction network align—
ment. Bioinformatics, 29, 9177924.

Altschul,S.F. et al. (1997) Gapped BLAST and PSI—BLAST: a new generation of
protein database search programs. Nucleic Acids Res, 25, 338973402.

Bandyopadhyay,S. et al. (2006) Systematic identiﬁcation of functional orthologs
based on protein network comparison. Genome Res, 16, 4284135.

Barabasi,A.L. and Albert,R. (1999) Emergence of scaling in random networks.
Science, 286, 5097512.

Boyle,E.I. et al. (2004) Gozztermﬁnderopen source software for accessing gene ontol—
ogy information and ﬁnding signiﬁcantly enriched gene ontology terms asso—
ciated with a list of genes. Bioinﬁ)rmatics, 20, 37133715.

Brutlag,D.L. (2008) Inferring Protein Function from Sequence. Vol. 3, Chapter 30.
Wiley—VCH Verlag GmbH, pp. 108771119.

Camon,E. et al. (2004) The gene ontology annotation (GOA) database: sharing
knowledge in Uniprot with gene ontology. Nucleic Acids Res, 32 (Suppl. 1),
D2627D266.

Chindelevitch,L. et al. (2010) Local optimization for global alignment of protein
interaction networks. Pac. Symp. Biocomput., 10, 1237132.

Dezs,B. et al. (2011) LEMON 7 an open source C++ graph template library.
Electron. Notes Theor. Comput. Sci., 264, 2345Proceedings of the Second
Workshop on Generative Technologies (WGT) 2010.

El—Kebir,M., Heringa,J. and Klau,G. (2011) Lagrangian relaxation applied to
sparse global network alignment. In: Loog,M., Wessels,L., Reinders,M. and
Ridder,D. (eds) Pattern Recognition in Bioinformatics, volume 7036 of Lecture
Notes in Computer Science. Springer, Berlin Heidelberg, pp. 2257236.

Flannick,J. et al. (2006) Graemlin: general and robust alignment of multiple large
interaction networks. Genome Res, 16, 116%1181.

Flannick,J. et al. (2009) Automatic parameter learning for multiple local network
alignment. J. Comput. Biol., 16, 100171022.

Galil,Z. (1983) Efﬁcient algorithms for ﬁnding maximal matching in graphs. In:
Proceedings of the 8th Colloquium on Trees in Algebra and Programming.
CAAP’83, Springer—Verlag, London, UK, pp. 93113.

Ho,Y. (2002) Systematic identiﬁcation of protein complexes in Saccharomyces cer—
evisiae by mass spectrometry. Nature, 415, 1807183.

Ito,T. et al. (2001) A comprehensive two—hybrid analysis to explore the yeast
protein interactome. Proceedings of the National Academy of Sciences, 98,
456974574.

Kalaev,M. et al. (2008) Networkblast: comparative analysis of protein networks.
Bioinformatics, 24, 594=596.

Kalaev,M. et al. (2009) Fast and accurate alignment of multiple protein networks.
Journal of Computational Biology, 16, 9897999.

Kelley,B.P. (2003) Conserved pathways within bacteria and yeast as revealed by
global protein network alignment. Proc. Natl Acad. Sci. USA, 100,
11394711399.

Kelley,B.P. et al. (2004) PathBLAST: a tool for alignment of protein interaction
networks. Nucleic Acids Research, 32 (Suppl. 2), W837W88.

Kerrien,S. et al. (2012) The intact molecular interaction database in 2012. Nucleic
Acids Research, 40, D841=D846.

Kirkpatrick,S. et al. (1983) Optimization by simulated annealing. Science, 220,
671%80.

Koyutiirk,M. et al. (2005) Pairwise local alignment of protein interaction networks
guided by models of evolution. In: Miyano,S. et al. (ed.) Research in
Computational Molecular Biology, volume 3500 of Lecture Notes in Computer
Science. Springer, Berlin/Heidelberg, p. 995.

Kuchaiev,O. and Prulj,N. (2011) Integrative network alignment reveals large
regions of global network similarity in yeast and human. Bioinformatics, 27,
139(kl396.

Lashkari,D.A. et al. (1997) Yeast microarrays for genome wide parallel genetic and
gene expression analysis. Proceedings of the National Academy of Sciences, 94,
13057713062.

Liao,C.—S. et al. (2009) IsoRansz spectral methods for global alignment of mul—
tiple protein networks. Bioinformatics, 25, i2537i258.

Metropolis,N. et al. (1953) Equation of State Calculations by Fast Computing
Machines. TIM Journal of Chemical Physics, 21, 108771092.

Morgenstern,B. (1999) Dialign 2: improvement of the segment—to—segment approach
to multiple sequence alignment. Bioinformatics, 15, 2117218.

Notredame,C. et al. (2000) T—coffee: a novel method for fast and accurate multiple
sequence alignment. Journal of Molecular Biology, 302, 2057217.

O’Brien,K.P. et al. (2005) Inparanoid: a comprehensive database of eukaryotic
orthologs. Nucleic Acids Research, 33 (Suppl. 1), D47frD480.

Pache,R.A. et al. (2012) NetAligneria network alignment server to compare com—
plexes, pathways and whole interactomes. Nucleic Acids Research., 40,
W1577W161.

Park,D. et al. (2011) IsoBase: a database of functionally related proteins across PPI
networks. Nucleic Acids Research, 39 (Suppl. 1), D29yD300.

Patro,R. and Kingsford,C. (2012) Global network alignment using multiscale spec—
tral signatures. Bioinformatics, 28, 310573114.

Phan,H.T.T. and Sternberg,M.J.E. (2012) Pinalog: a novel approach to align pro—
tein interaction networksimplications for complex detection and function pre—
diction. Bioinformatics, 28, 123971245.

Rajasekaran,S. (1990) On the convergence time of simulated annealing. Technical
report. University of Pennsylvania.

Sahraeian,S.M.E. and Yoon,B.—J. (2013) Smetana: Accurate and scalable algorithm
for probabilistic alignment of large—scale biological networks. PLoS One, 8,
e67995.

Schlicker,A. et al. (2006) A new measure for functional similarity of gene products
based on gene ontology. BMC Bioinformatics, 7, 302.

Schlicker,A. et al. (2007) GOTax: investigating biological processes and biochemical
activities along the taxonomic tree. Genome Biol., 8, R33.

 

547

ﬁre'spzumofpmjxo'sopeuuqurorq/pdnq

J.Hu et al.

 

Sharan,R. (2005) Conserved patterns of protein interaction in multiple species. Proc.
Natl Acad. Sci. USA, 102, 19744979.

Sharan,R. and Ideker,T. (2006) Modeling cellular machinery through biological
network comparison. Nat. Biotech., 24, 4274133.

Shih,Y.—K. and Parthasarathy,S. (2012) Scalable global alignment for multiple bio—
logical networks. BMC Bioinformatics, 13 (Suppl. 3), SI].

Singh,R. et al. (2007) Pairwise global alignment of protein interaction networks by
matching neighborhood topology. In: Proceedings of the 11th annual interna—
tional conference on Research in computational molecular biology. RECOMB'07,
Springer—Verlag, Berlin, Heidelberg, pp. 1&3].

Singh,R. et al. (2008) Global alignment of multiple protein interaction networks
with application to functional orthology detection. Proc. Natl Acad. Sci. USA,
105, 12763712768.

Szklarczyk,D. et al. (2011) The string database in 2011: functional interaction
networks of proteins, globally integrated and scored. Nucleic Acids Res, 39
(Suppl. 1), D5617D568.

Tatusov,R.L. et al. (1997) A genomic perspective on protein families. Science, 278,
6317637.

Tatusov,R.L. et al. (2000) The COG database: a tool for genome—scale analysis of
protein functions and evolution. Ntwleic Acids Res, 28, 33736.

Uniprot Consortium. (2007) The universal protein resource (UniProt). Ntwleic
Acids Res, 35 (Suppl. 1), D1937D197.

Waterhouse,R.M. et al. (2011) OrthoDB: the hierarchical catalog of eukaryotic
orthologs in 2011. Ntwleic Acids Res, 39 (Suppl. 1), D2837D288.

 

/810'spzum0fp10}x0"sotJBHIJOJutthH:duq

