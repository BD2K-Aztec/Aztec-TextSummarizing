APPLICATIONS NOTE

Vol. 29 no. 1 2013, pages 137-139
doi:10. 1093/bioinformatics/bt5630

 

Systems biology

Advance Access publication October 25, 2012

XiP: a computational environment to create, extend and share

workflows

Masao Nagasaki”, Andre Fujitaz, Yayoi Sekiyae, Ayumu Sait03, Emi lkeda3, Chen Li3 and

Satoru Miyano3

1Department of Integrative Genomics, Tohoku Medical Megabank Organization, Tohoku University, Japan, 2Department
of Computer Science, Institute of Mathematics and Statistics, University of Sao Paulo, Brazil and 3Human Genome
Center, Institute of Medical Science, University of Tokyo, Japan

Associate Editor: Martin Bishop

 

ABSTRACT

XiP (eXtensible integrative Pipeline) is a flexible, editable and modular
environment with a user-friendly interface that does not require
previous advanced programming skills to run, construct and edit
workflows. XiP allows the construction of workflows by linking com-
ponents written in both R and Java, the analysis of high-throughput
data in grid engine systems and also the development of customized
pipelines that can be encapsulated in a package and distributed. XiP
already comes with several ready-to-use pipeline flows for the most
common genomic and transcriptomic analysis and ~300 computa-
tional components.

Availability: XiP is open source, freely available under the Lesser
General Public License (LGPL) and can be downloaded from http://
xip.hgc.jp.

Contact: nagasaki@megabank.tohoku.ac.jp

Received on May 10, 2012; revised on October 10, 2012; accepted on
October 17, 2012

1 INTRODUCTION

Large-scale sequencing and microarray technologies are
high-throughput methodologies that generate huge genomic
and transcriptomic data that must be processed in a multi-step
fashion. Usually, it is carried out by several distinct programs
that are interconnected in a speciﬁc order, forming a workﬂow
process, namely pipeline (Durham et al., 2004; Fujita et al.,
2007). For example, a simple workflow to investigate genes po-
tentially related to cancer might begin with microarray image
analysis, normalization, statistical tests to identify differentially
expressed genes between the normal and the tumor tissues fol-
lowed by a multiple test P-Value correction.

Shah et a]. (2004) have described that pipelines must satisfy at
least three characteristics: (i) ﬂexibility: a software can be used to
analyze different data sets that may require different analysis
tools; (ii) integrability: a system should provide the framework
to facilitate data integration of analysis results from different
tools; and (iii) extensibility: a system needs to allow for the in-
clusion of new tools in a modular fashion.

In addition to these characteristics that are actually necessary
to a pipeline, we believe that the portability with grid engines and

 

*To whom correspondence should be addressed.

the interoperability with pre-existing systems are also important
in this new era of generation of high-throughput data. The port-
ability with grid engines makes possible to run heavy routines in
supercomputers (hundreds of cores) in an easy manner while the
interoperability allows the use of workﬂows constructed under
different platforms.

To facilitate the construction of workflows, we present XiP
(eXtensible integrative Pipeline), a free [under the Lesser
General Public License (LGPL)] and easy-to-use environment
designed to integrate the state-of-the-art computational methods
and to satisfy researchers’ need in multi-collaborative projects.

2 IMPLEMENTATION

XiP was entirely developed in Java and runs at the client’s ma-
chine Via the Java Web Start technology. In other words, XiP
runs in the majority of operating systems, requiring only a
pre-installation of the Java Runtime Environment (J RE version
21.6) at the client’s machine. If J RE is not installed, the instal-
lation package asks for the permission to install J RE. Although
XiP was originally designed to run Via the Web, it can also be
installed in local machines.

XiP already comes with ~300 components, where each com-
ponent represents one computational algorithm (e.g. Support
Vector Machine, k-means, t-test, etc). XiP also recognizes com-
ponents written in R (R Development Core Team, 2011), one of
the most popular statistical programming languages in
Bioinformatics.

For data input, XiP accepts any Java and R basic data struc-
tures, Cell System Markup Language (CSML) (Nagasaki et al.,
2010), Cell System Ontology (CSO) (Jeong et al., 2007), Cell
System Markup Language Data Base (CSMLDB) and CSODB
formats.

The complete list of components that comes with XiP (~300
components), tutorials, documentation and some example pipe-
lines are available at the XiP project webpage (http://xip.hgc.jp).

3 RESULTS AND DISCUSSIONS

With the advances in the generation of high-throughput data and
the development of large-scale projects, which involve dozens of
labs around the world, computational pipelines become crucial
and indispensable, especially when the same protocol must be

 

© The Author 2012. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0), which permits
unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /310'sleu1notp103x0"sotJBurJOJutotq/ﬁduq 11101} papeolumoq

91oz ‘Og isnﬁnV uo ::

M. Nagasaki et al.

 

carried out in different laboratories to guarantee both reprodu-
cibility and quality.

The construction of a computational pipeline under the XiP
platform does not require advanced computer-programming
skills. At Figure 1a, there is a list of components and a tool to
search for a speciﬁc algorithm. To build a workﬂow, the user
clicks on the component of interest and drags and drops on the
canvas (Fig. lb). The order of analysis in the pipeline is set ac-
cording to the order of the components deﬁned by the arrows of
the workﬂow (Fig. lb). The tail of the arrow represents from
which component the data comes, and the head points to the
next analysis step. In other words, the direction of the arrows
indicates the data ﬂow. The parameters of each component can
be easily set up by using the graphical interface illustrated on
Figure 1c, and the results are Visualized in separate windows as
shown in Figure 1d.

XiP satisﬁes the three essential characteristics for a pipeline
platform and also the fourth (portability to grid engines) and
ﬁfth (interoperability) described in Section 1 as follows:

(1) Flexibility: The specific requirements of a research project
make it difﬁcult to use a pipeline designed for a particular
data set for analysis of another data set. As a result, two
different pipelines must be constructed, both sharing sev-
eral common components. However, notice that it is not
necessary to reconstruct the entire pipeline, but only the
different parts. As the pipelines constructed by XiP are
modular, i.e. the pipelines are composed of an ordered
sequence of components, one must replace only the differ-
ent components to adapt the pipeline to a new data set.

(2) Integrability: Components written in both R and Java pro-
gramming languages run on XiP. Internally, XiP translates
the R data structures into Java structures, thus allowing
the connection of packages available at the R webpage

au-u'.- 1’-

(http://www.r-project.org) and the BioJava project
(Holland et al., 2008).

(3) Extensibility: R and Java functions developed by different
groups can automatically be translated to a XiP compo-
nent and included in the platform. Therefore, XiP can be
customized and extended with several components de-
pending on the user’s necessities.

(4) Portability to grid engine: The analysis of large amounts of
data generated by the new technological approaches in
molecular biology requires high-performance computa-
tional resources. The XiP platform allows the construction
of pipelines that use grid engines to parallelize computa-
tional jobs. To run a parallel job, the user must set up a
cluster (server) with several cores and log in to this remote
server. The integration with grid engines makes XiP suit-
able for individual researchers with modest data sizes as
well as for big collaborative projects with large amounts of
data.

(5) Interoperability: Owing to several different pipeline plat-
forms available in the literature such as Pegasus
(Deelman et al., 2004), Kepler (Altintas et al., 2004) and
Galaxy (Goecks et al., 2010), each one with unique advan-
tages, it would be interesting whether one platform could
integrate components developed in different environments.
XiP satisﬁes the interoperability by converting the compo-
nents developed in the Galaxy platform (Goecks et al.,
2010) to an XiP component. Interoperability with other
systems is under development.

Once a pipeline is constructed, it can be distributed in both a
XiP XML format and a jar ﬁle. The XiP XML is a markup
language that stores the pipeline structure, i.e. the information
about how the components are interconnected. The jar format is
a closed stand-alone package that runs in a computational

 

 

 

 

 

 

:wmummnnrm

Mum. I—mmm

 

 

 

   
   

 

 

 

 

 

p

 

 

 

Hut... . ‘nv'. ..,._.

 

 

 

 

Fig. 1. Screenshot of a XiP graphical interface and a regulatory network estimation pipeline. (a) The list of components; (b) the pipeline schema; (c) the
parameters for each component of the pipeline; ((1) the output, i.e. the estimated regulatory network

 

138

112 /310'S[BHJHOIPJOJXO'SOIJ’BLUJOJIIIOIq/ﬂduq 11101} papeolumoq

91oz ‘Og isnﬁnv uo ::

eXtensible integrative pipeline

 

environment without XiP. Some examples of pipelines freely
available designed in the XiP platform are the DA1.0 (Koh
et al., 2010) and the CS0 validator (Jeong et al., 2011). Other
examples can be found at the XiP webpage.

Summing up, the main advantages of XiP are (i) it satisﬁes all
the five characteristics for a pipeline platform; (ii) components
developed in the Galaxy platform can be converted to XiP com-
ponents; and (iii) stand-alone packages created under XiP can be
run outside the XiP environment.

The entire code is open and we encourage researchers to con-
tribute with novel functionalities for the XiP platform.

ACKNOWLEDGEMENT

The super-computing resource was provided by Human Genome
Center, Institute of Medical Science, University of Tokyo.

Funding: This work was supported by a grant of the Genome
Network Project from the Ministry of Education, Culture,
Sports, Science and Technology, Japan. AF. was partially sup-
ported by CNPq and FAPESP, Brazil.

Conﬂict of Interest: none declared

REFERENCES

Altintas,I. et a]. (2004) Kepler: an extensible system for design and execution of
scientiﬁc workﬂows. In Proceedings of the 16th International Conference on
Scientific and Statistical Database Management. pp. 423424.

Deelman,E. et a]. (2004) Pegasus: mapping scientiﬁc workﬂows onto the grid. Lect.
Notes Comput. Sci., 3165, 1317140.

Durham,A.M. et a]. (2004) EGene: a conﬁgurable pipeline generation system for
automated sequence analysis. Bioinformatics, 21, 281272823.

Fujita,A. et al. (2007) GEDI: a user—friendly toolbox for analysis of large—scale gene
expression data. BMC Bioinformatics, 8, 457.

Goecks,J. et a]. (2010) Galaxy: a comprehensive approach for supporting accessible,
reproducible, and transparent computational research in the life sciences.
Genome Biol., 11, R86.

Jeong,E. et a]. (2007) Cell system ontology: representation for modeling, visualizing
and simulating biological pathways. In Silico Biol., 7, 623$38.

Jeong,E. et a]. (2011) C30 validator: improving manual curation workﬂow for
biological pathways. Bioinformatics, 27, 247172472.

Nagasaki,M. et a]. (2010) Cell Illustrator 4.0: a computational platform for systems
biology. In Silico Biol., 10, 0002.

Holland,R.C.G. et a]. (2008) BioJava: an open—source framework for bioinfor—
matics. Bioinformatics, 24, 209(r2097.

Koh,C.H. et a]. (2010) DA 1.0: a parameter estimation of biological pathways using
data assimilation approach. Bioinformatics, 26, 179471796.

R Development Core Team (2011) R: a language and environment for statistical
computingR Foundation for Statistical Computing, Vienna, Austria, ISBN
3—900051—07—0.

Shah,S.P. et a]. (2004) Pegasys: software for executing and integrating analyses of
biological sequences. BMC Bioinformatics, 5, 40.

 

139

112 /310'S[BHJHOIPJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} papeolumoq

91oz ‘Og isanV uo ::

