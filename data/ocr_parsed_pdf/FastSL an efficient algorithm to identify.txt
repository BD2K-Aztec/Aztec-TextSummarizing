Bioinformatics, 31 (20), 2015, 3299—3305

doi: 10.1093/bioinformatics/btv352

Advance Access Publication Date: 17 June 2015
Original Paper

 

 

Systems biology

Fast-SL: an efficient algorithm to identify
synthetic lethal sets in metabolic networks

Aditya PratapaI, Shankar Balachandran2 and Karthik Raman1'*

1Department of Biotechnology, Bhupat and Jyoti Mehta School of Biosciences and 2Department of Computer
Science and Engineering, Indian Institute of Technology Madras, Chennai 600036, India

*To whom correspondence should be addressed
Associate Editor: Igor Jurisica

Received on April 9, 2015; revised on May 16, 2015; accepted on May 29, 2015

Abstract

Motivation: Synthetic lethal sets are sets of reactions/genes where only the simultaneous removal
of all reactions/genes in the set abolishes growth of an organism. Previous approaches to identify
synthetic lethal genes in genome—scale metabolic networks have built on the framework of flux bal—
ance analysis (FBA), extending it either to exhaustively analyze all possible combinations of genes
or formulate the problem as a bi—level mixed integer linear programming (MILP) problem. We here
propose an algorithm, Fast—SL, which surmounts the computational complexity of previous
approaches by iteratively reducing the search space for synthetic lethals, resulting in a substantial
reduction in running time, even for higher order synthetic lethals.

Results: We performed synthetic reaction and gene lethality analysis, using Fast—SL, for genome—
scale metabolic networks of Escherichia coli, Salmonella enterica Typhimurium and Mycobacterium
tuberculosis. Fast—SL also rigorously identifies synthetic lethal gene deletions, uncovering synthetic
lethal triplets that were not reported previously. We confirm that the triple lethal gene sets obtained
for the three organisms have a precise match with the results obtained through exhaustive enumer—
ation of lethals performed on a computer cluster. We also parallelized our algorithm, enabling the
identification of synthetic lethal gene quadruplets for all three organisms in under 6h. Overall,
Fast—SL enables an efficient enumeration of higher order synthetic lethals in metabolic networks,
which may help uncover previously unknown genetic interactions and combinatorial drug targets.
Availability and implementation: The MATLAB implementation of the algorithm, compatible with
COBRA toolbox v2.0, is available at https://github.com/RamanLab/FastSL

Contact: kraman@iitm.ac.in

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 IntrOducuon (Deutscher et (11., 2006; Kuepfer et (11., 2005). Another important as—

9103 ‘Og JSanV uo seleﬁuv soc] ‘BtHJOJtIBQ JO AJtsreAtuf] 112 /310'slcu1noip103x0"sotJBurJOJutotq/ﬁduq 11101} popcolumoq

In the recent years, genome—scale metabolic networks have been re—
constructed for many organisms (Edwards and Palsson, 2000;
Jamshidi and Palsson, 2007; Kim et (11., 2011; Thiele et (11., 2005,
2011). These networks have been studied using tools such as ﬂux
balance analysis (FBA) (Kauffman et (11., 2003; Varma and Palsson,
1994), for the identification of drug targets (Jamshidi and Palsson,
2007; Thiele et (11., 2011), targets for metabolic engineering (Alper
et (11., 2005) and to understand the robustness of organisms
through systematic experimental evaluation of gene knockouts

pect of analyzing these reconstructed metabolic networks is the iden—
tification of combinations of genes, which when simultaneously
deleted, abolish growth in silico (Deutscher et (11., 2006; Harrison et
(11., 2007; Henry et (11., 2009; Suthers et (11., 2009; Giiell et (11.,
2014). These sets, termed ‘synthetic lethals’, reveal complex inter—
actions in metabolic networks. Synthetic lethals have been analyzed
in the past for prediction of novel genetic interactions and analyzing
the extent of robustness of biological networks (Raghunathan et (11.,
2009). Prediction of phenotypic behavior on genetic perturbations

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 3299

3300

Fast—8L

 

has also been studied in many reconstructions (Fang et (11., 2010;
Plata et (11., 2010; Sigurdsson et (11., 2012; Thiele et (11., 2005;
Wodke et (11., 2013) for model validation.

FBA has been proven to accurately predict phenotypes following
various genetic perturbations (Edwards and Palsson, 2000; Famili
et (11., 2003); previous reports also suggest that FBA can reliably pre—
dict synthetic lethal genes in metabolic networks of organisms such
as Saccharomyces cerevisiae (Harrison et (11., 2007). The identifica—
tion of synthetic lethal genes in metabolic networks also finds appli—
cation in combinatorial therapy, as combinatorial deletion strategies
are more difficult for the organism to resist (Hartman et (11., 2014;
Navid, 2011; Zimmermann et (11., 2007). Since the systematic evalu—
ation of these targets in vivo is challenging, computational
approaches have been of great interest to overcome this difficulty
(Pinney et (11., 2007).

Exhaustive enumeration of synthetic lethals of higher orders was
previously performed by parallelizing the deletions on a cluster of
computers (Deutscher et (11., 2006; Henry et (11., 2009). However,
exhaustive enumeration is computationally very expensive, and even
prohibitive, in case of larger metabolic networks. Another algorithm
for identifying synthetic lethal reactions and genes is ‘SL Finder’,
published by Maranas and co—workers (Suthers et (11., 2009). SL
Finder elegantly poses the identification of synthetic lethals as a bi—
level Mixed Integer Linear Programming (MILP) problem; the algo—
rithm has been applied for the identification of synthetic lethal
doublets and triplets in Escherichia coli.

Reaction essentiality has been previously inferred using elemen—
tary modes and minimal cut sets (Behre et (11., 2008). Even though
there are efficient algorithms to analyze minimal cut sets in a meta—
bolic network, the MILP formulation is fundamentally NP—hard
(Acuﬁa et (11., 2009) and is prohibitive in case of large networks.
Other methods also suggest ways for reduction of metabolic net—
works and alternate formulations to enumerate minimal cut sets for
the identification of synthetic lethal sets (Chindelevitch et (11., 2014;
von Kamp and Klamt, 2014).

We here propose an alternative algorithm, Fast—SL, which circum—
vents the computational complexity of both exhaustive enumeration
and bi—level MILP, through an iterative reduction of the search space
for higher order synthetic lethal sets. We also present an efficient
method to rigorously identify lethal gene sets, identifying upto quadru—
ple lethal gene sets that were not previously identified. Fast—SL formu—
lation for gene deletions also compares favorably with logical
transformation of model (LTM) approach (Zhang et (11., 2015), which
transforms the stoichiometric matrix such that lethal gene deletion sets
can be identified by merely identifying lethal reaction sets applying the
Fast—SL algorithm on the transformed matrix (using the pre—print of an
earlier version of this paper available at arXiv.org). Fast—SL provides a
rapid way to gain insights into the genetic robustness of organisms by
identifying synthetic lethal sets even up to the order of four.

2 Methods

2.1 Overview

FBA involves the formulation of a Linear Programming (LP) prob—
lem, whose objective function typically is to maximize ﬂux through
the biomass reaction (vbio), subject to the constraints obtained from
the stoichiometry of the metabolic network (represented by the stoi—
chiometric matrix S). FBA has also been used to simulate the effects
of the removal of one or more genes/reactions from a metabolic net—
work. The phenotype obtained as a result of gene/reaction deletion
is classified as a lethal phenotype, if the maximum growth—rate

obtained by FBA is less than a specified cut—off, typically 1% of the
in silico maximum wild—type growth rate (Deutscher et (11., 2008),
denoted as Um. We here propose an alternative algorithm to identify
synthetic lethals, using an iterative approach that greatly reduces the
search space for the synthetic lethals. The standard FBA formulation
to identify effects of reaction deletions is as given below:

max- Main (1)
st
2,5,1»,- : 0 Vi e M,V/' e 1 (2)
LB,- 9;, 3 U3, vi 6 ] (3)
12,1 : 0 d e D C] (4)

Here,

] represents the set of all reactions in the metabolic model

M represents the set of all metabolites in the metabolic model

D represents the set of reactions whose ﬂuxes are set to zero
(for deletion)

1/,- represents the ﬂux through the [#7 reaction

vbio represents the ﬂux through the biomass reaction

5,,- represents the corresponding element in the stoichiometric
matrix 5

LB,- and UB, represent the lower and upper bounds of the ﬂuxes
through the [#7 reaction respectively

The maximum 115,0 obtained here, using Equations (1)—(3), for
the wild—type strain, is designated as Inn-07m. Further details on the
FBA formulation, such as the substrate uptake ﬂuxes and the upper
and lower bounds are given in Supplementary File S1.

2.2 Fast—SL algorithm

The objective of Fast—SL is to enumerate combinations of reactions,
which when deleted, abolish growth. We achieve this by a combin—
ation of pruning the search space and exhaustively iterating through
the remaining combinations. We successively compute: (i) Is), the set
of single lethal reactions, (ii) Id, (Id, C ]2), the set of synthetic lethal
reaction pairs, and (iii) L; C P, the set of synthetic lethal reaction
triplets. Initially, we use FBA to compute a ﬂux distribution, corres—
ponding to maximum growth rate, while minimizing the sum of ab—
solute values of the ﬂuxes, i.e. the £1—norm of the ﬂux vector. We
hereafter denote this ﬂux distribution as the ‘minimum norm’ solu—
tion of the FBA LP problem. We denote the set of reactions that
carry a non—zero ﬂux in this minimum norm solution as jnz. Below,
we outline the minimum norm FBA formulation, corresponding to
maximum wild—type growth rate obtained earlier (Inn-0y”):

min. Silt/i) (5)
SI.

Ubio : Ubio,WT (6)
Eisiivi : 0 Vi E M,V/' E ] (7)
LB,§u,-§UB,- We] (8)

2.2.1 Identifying single lethal reactions ([51)
If a reaction is essential (single lethal) in a given environment, con—
straining its ﬂux to zero results in the abolishment of biomass ﬂux.

9103 ‘Og JSanV uo sejeﬁuv soc] ‘Btulomcg JO AJtSJQAtuf] 112 /3.10'spzu.m0fp10}x0"sotwurJOJutotq/ﬁduq 11101} pQPBOIIIAAOG

A.Pratapa et al.

3301

 

We argue that the set of all such single lethal reactions, Isl, is com-
pletely contained in jnz. Conversely, ] — I“ does not contain any of
the single lethal reactions, which are essential for growth in the
medium under consideration. This is because, if it is possible to
identify a ﬂux distribution that admits maximum biomass ﬂux (as
enforced by the constraint in the Equation (6)), and at the same
time zero flux through certain reactions (D C] — jnz), obviously,
those reactions cannot be essential for the growth of the organism.
This can also be understood in light of the FBA formulation given
by Equations (1)—(4): the constraint in Equation (4) for the reac—
tions in the set D C ] — jnz will not have any impact on the biomass
ﬂux (setting 11d: 0 for reactions already carrying zero flux in the
minimum norm solution will not affect the solution to FBA).
Hence, for the lethality analyses of order one, we look only in the
set of reactions with non—zero ﬂuxes, jnz. We therefore compute
single lethal reactions ([51) by performing exhaustive single reaction
deletions only in jnz, instead of].

2.2.2 Identifying double lethal reactions (J41)

We posit that for every pair in the set Id), at least one of the reactions
will he in jnz. Consider any pair of reactions i and j E ]. Only two
types of such pairs exist:

i. iand/ a1”,

ii. at least one ofi or/ E I“

For pairs of type (i):

Suppose, both reactions of a pair do not belong to jnz. This
implies that both have zero ﬂux through them under the minimum
norm formulation and hence deleting them simultaneously does
not produce a lethal phenotype and consequently, they do not
form a lethal reaction pair. Our algorithm identifies and eliminates
such pairs for consideration and hence reduces the search space
substantially. Table 2 illustrates the savings obtained in terms of
the number of LPs solved in comparison to exhaustive
enumeration.

For pairs of type (ii):

For all the other reaction pair combinations (i.e. at least one re—
action of a pair E ],,z — Isl), we first obtain the minimum norm solu—
tion after removing a reaction, say, i E ],,z — Isl, and obtain the set of
non—zero ﬂuxes In“. It is important to note that, under this deletion,
the Inn-07m- of Equation (6) will be replaced by the corresponding
maximum flux through the biomass reaction after removing the ith
reaction, Inn-07,. This is because removal of the ith reaction may not al—
ways result in the same maximum value of the wild—type biomass
ﬂux, Inn-own as it was obtained prior to the deletion and constrain—
ing so may result in an infeasible solution. Therefore, the RHS in
Equation (6) is the maximum biomass obtainable under the deletion
of reaction i, denoted as Inn-0,,- and not Inn-07m. Similar to Fast—SL for
single lethal reactions, we restrict our search space for potential syn—
thetic double lethal deletions to the set L,“- — Isl. Under this config—
uration, as the reaction i is already removed, a synthetic lethal
reaction / E L,“- — Isl, would actually correspond to a lethal reaction
pair {i, 

Algorithm 1 shows the Fast—SL implementation to identify lethal
single and double reaction deletions as explained above. We illus—
trate the application of Fast—SL to identify single and double lethal
reactions in the E.coli iAF1260 model, as well as the algorithm for
identifying lethal reaction triplets, in Supplementary File S1. The al—
gorithm can be further extended to quadruplets and higher orders
using a similar approach.

 

Algorithm 1: Algorithm to identify single and double lethal
reaction sets.

 

Input: SBML model of an organism
Output: Set of single lethal reactions 15]
Set of double lethal reactions jd,
Do FBA to obtain the maximum biomass ﬂux for wild—type,
Uhio,WT
Do FBA to obtain minimum norm solution corresponding to
Uhio,WT
Identify set of reactions jnz, having non—zero ﬂuxes
Set 0.01 >l< Inn-07m- as the cut—off for lethality, 1/5,,
for each reaction i E I“ do
Set the upper and lower bounds of 1/,- to zero
Do FBA to maximise growth rate, Inn-0,,-
if ohm- g Um then
Add i to the set Is;
end if
Reset bounds on 1/,-
end for
for each reaction i E I“ —]51 do
Set the upper and lower bounds of 1/,- to zero
Do FBA to obtain minimum norm solution corresponding
to Uhioj
Identify set of reactions In“, having non—zero ﬂuxes
for each reaction/ E L,“- —]51 do
Set the upper and lower bounds of 1/,- to zero
Do FBA to maximise growth rate Inn-0,,-
if vbioﬁil- g Um then
Add {i,/'} to the set Id,
end if
Reset the bounds on 1/,-
end for
Reset bounds on 1/,-
end for

 

2.3 Fast—SL algorithm for gene deletions
The synthetic lethal gene deletions can be obtained using a similar
approach to that of Fast—SL for lethal reaction deletions by addition—
ally considering the Gene—Protein—Reaction (GPR) associations in
the model. As these associations are often ‘many—to—many’, it is non—
trivial to identify all the lethal gene sets from lethal reaction sets of
the same order. To account for this complexity, Fast—SL groups the
reactions based on their GPR associations. Each time a reaction is
deleted, other associated reactions are also removed, based on the
underlying GPR rules. The lethal reaction sets obtained using this
method are then analyzed for lethal gene deletions up to the order of
four. Further details on the gene deletion algorithm are available in
Supplementary File S1.

We implemented Fast—SL for both reaction and gene deletions in
MATLAB (R2013b, The Mathworks Inc.), interfacing with COBRA
Toolbox v2.0 (Schellenberger et al., 2011 ).

2.4 Parallel Fast—SL algorithm

To further improve the time profile of the Fast—SL algorithm, we
have developed a parallel version of our algorithm to identify both
synthetic lethal reaction and gene sets, which enables us to even
identify synthetic lethal quadruplets, within a few hours. Unlike the

9103 ‘Og JSanV uo sejeﬁuv soc] ‘Bturomcg JO AJtsreAtuf] 112 /3.10'spzu.m0fp10}x0"sotwurJOJutotq/ﬁduq 11101} papeolumoq

3302

Fast—8L

 

exhaustive enumeration algorithm, the Fast—SL algorithm by itself is
not embarrassingly parallel. However, the enumeration of a particu—
lar order of synthetic lethals can be easily parallelized. For example,
in the case of single lethal reactions, once the minimized [l—norm so—
lution is identified, the subsequent LPs to be solved for identifying
Isl can be evaluated in parallel. A similar strategy can be applied to
first identify the potential synthetic lethal sets (reaction sets with
non—zero ﬂuxes, obtained using the £1—norm solution) at each stage
of a particular order and then perform the deletions in parallel to
further reduce the time taken to identify synthetic lethal reaction
and gene sets. This parallelization scheme ensures a superior utiliza—
tion of computing resources available.

3 Results

We performed gene and reaction deletions up to the order of four
using Fast—SL for the genome—scale metabolic networks of E.coli
iAF1260 (Feist et al., 2007) and two important pathogenic organ—
isms, Salmonella enterica Typhimurium LT2 STM_v1.0 (Thiele
et al., 2011) and Mycohacterium tuherculosis zNJ661 (Jamshidi and
Palsson, 2007).

3.1 Fast—SL massively prunes the search space for
synthetic lethal reactions

The Fast—SL formulation eliminates large sections of the search space
for synthetic lethals, as described earlier, resulting in a massive speed—
up over exhaustive search. Fast—SL formulation results in more than a
4000—fold reduction in the search space for synthetic lethal triplets in
E.coli; for a smaller model such as that of M.tuherculosis with 1028
reactions, the reduction is over 300—fold.

In order to appreciate the speed—up offered by Fast—SL, consider
the E.coli iAF1260 model that has 2 382 reactions. For aerobic
growth under minimal glucose conditions, the maximum wild—type
growth rate as obtained by FBA, UbioWT, is 0.9290 mmol gDW’1 h’l.
The minimum norm formulation, given by Equations (5 )—(8), results
in a ﬂux vector having 406 reactions with non—zero ﬂuxes, and the
same growth rate, vbioﬁm. The set In comprises of these 406 reac—
tions. As mentioned earlier, Fast—SL analyzes the effect of deletion of
reactions in ],,z to identify lethal reaction sets: we identified 278 single
lethal reactions ([51) after solving only 379 LP problems instead of
2 051. Extending this formulation, Fast—SL identified 1.56 million re—
action pairs whose deletion would not result in a lethal phenotype
and solved only 6 084 LPs to identify lethal reaction pairs. We have
identified 96 synthetic lethal reaction pairs and 247 synthetic lethal re—
action triplets in E. coli, which match exactly with the results obtained
through exhaustive enumeration of lethal reaction sets and also the
MCSEnumerator Algorithm (von Kamp and Klamt, 2014).

Table 1. Comparison of the time taken for Fast-SL and
MCSEnumerator algorithms for the E.coli iAF1260 model

 

Table 1 illustrates the comparison between the MCSEnumerator
and the Fast—SL for the E.coli model, using workstation with a
2.4GHz Intel Xeon E5645 processor with six cores available for
computation, it takes approximately 9.3 h for the Fast—SL algorithm
to compute the synthetic lethal quadruplets, jqj. While, it has been
reported that the MCSEnumerator method takes approximately
18.5h using two 3.07GHz Xeon X5650 processors with 12 cores
available for the computation of ]q[.

It has been reported that the SL Finder algorithm (Suthers et al.,
2009) is able to enumerate all synthetic lethal triple reaction sets in
z 6.75 days, on a 3 GHz processor. We have been unable to perform
a systematic comparison owing to the difference in platforms
(General Algebraic Modelling System (GAMS) versus MATLAB), as
well as processors used. However, we note that the savings obtained
through a pruning of reaction space and the fact that we solve only a
large number of small LPs instead of a bi—level MILP, render Fast—SL
as a powerful alternative for metabolic networks of any size.

Table 2 enumerates the number of LPs solved by the proposed
algorithm as compared to the exhaustive enumeration for all three or—
ganisms. For each of the three models under consideration, Fast—SL
provides a significant reduction in the search—space for the enumer—
ation of synthetic lethal reaction sets. A complete listing of lethal reac—
tion sets for all three organisms is available in Supplementary File S2.

3.2 Fast—SL rigorously identifies synthetic lethal genes

Fast—SL carefully considers the GPR associations to rigorously identify
synthetic lethal gene deletions up to order four for the organisms.
Table 3 shows the number of lethal gene deletions identified for the or—
ganisms under consideration. We corroborated these results by

Table 2.Summary of reaction deletions for the three organisms
under consideration

 

 

 

 

 

 

E.coli S.Typhimurium M. tuberculosis

Model Name iAF1260 STM7V1.0 iNJ661
Medium M9/glc M9/glc Middlebrook 7H9
Number of reactions, m 2382 2546 1028
Number of exchange and 331 378 86

diffusion reactions“
Number of reactions injnz 406 484 414
Single lethal reactions IS,

Exhaustive LPsb 2051 2168 939

LPs solved by Fast-SL 379 456 399

Number of single 278 329 309

lethal reactions

Lethal reaction pairsjd,

Exhaustive LPs solved 1.57 x 106 1.69 x 106 2.00 x 105

LPs solved by Fast-SL 6084 9803 5058

Number of lethal 96 152 75

reaction pairs

 

Lethal reaction triplets J”

 

 

 

 

. 8 9 7

Order of SLs No. of SLs CPU time taken CPU time taken EXhausnve LPS sch/Ed 9'27 X 10 1'04 X 10 4'21 X 10
f M CSE f F SL Al . h LPs solved by Fast-SL 223 469 460142 177 000

0r_ numerator 0r_ as" gom m Number of lethal 247 275 140

(usmg 12 cores) (usmg 6 cores) reaction triplets

Single 278 1 1 s 2.8 5 Lethal reaction quadrupletsjq,

D9“ble 96 391 S _ 17'25 _ Exhaustive LPs 4.10 x 1011 4.75 x 1011 6.63 x 109

Trlple 247 163 mm 85 mm LPs solved by Fast-SL 1.43 x 107 3.01 x 107 1.19 x 107

Quadruple 402 18.5 h 9.3 h Number of lethal 402 1008 463

 

Notes: The times reported are for a workstation with a 2.4 GHz Intel Xeon
E5 645 processor with 16 GB DDR3 RAM running Windows 8.1 using the
IBM CPLEX v12.5.1 solver

reaction quadruplets

 

aGenerally not considered for lethality analyses
bExcluding exchange reactions

9103 ‘01; isanV uo s9198uv s01 ‘BIIIJOJIIBD JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Idllq 11101} pep1201um0q

A.Pratapa et al.

3303

 

performing exhaustive triple gene deletions on a computer cluster with
1000 nodes for all three organisms and we found an exact match.
Fast—SL identified 285 lethal gene triplets under minimal glucose
conditions in the E.coli iAF1260 model. The SL Finder algorithm
(Suthers et al., 2009) identified only 158 lethal gene triplets (in the
same model under the same medium conditions). We thus identified

Table 3. Summary of gene deletions forthe three organisms under
consideration

 

 

 

 

 

 

E. coli S.Typhimurium M.tuherculosis
Model name iAF126O STM_v1.0 iNJ6 61
Number of genes 1260 1270 661
Single lethal genes
Exhaustive LPs 1260 1270 661
LPs solved by Fast—SL 389 464 355
Number of single 188 201 188
lethal genes
Lethal gene pairs
Exhaustive LPs 574 O5 6 570 846 111 628
LPs solved Fast—SL 3644 3202 2470
Number of lethal 69 87 49

gene pairs

 

Lethal gene triplets

 

 

 

 

127 new lethal gene triplets in E.coli using Fast—SL. Perhaps, these trip—
lets were not identified by SL Finder owing to the complexity in defin—
ing the binary variable for gene deletions using the bi—level MILP
formulation. To accommodate the gene—reaction associations, the SL
Finder approach introduces new binary variables (corresponding to
genes) and imposes additional constraints on them (corresponding to
gene—reaction rules). This introduction of new variables and constraints
would increase the problem size significantly depending upon the num—
ber of genes present in the model as well as the gene—reaction rules,
which may add to the difficulty in identification of all the lethal gene
sets using the SL Finder approach.

Among the newly identified triplets using Fast—SL, 121 belong to
central carbon metabolism, four triplets belong to amino acid syn—
thesis and the rest are involved in metal—ion transport reactions.
More information on these 127 gene triplets obtained can be found
in Supplementary File S3. Using the parallel Fast—SL algorithm we
were able to identify lethal gene quadruple sets for all the three or—
ganisms in less than 6 h. A complete listing of lethal gene sets for all
three organisms is available in Supplementary File S4.

3.3 Missing biomass precursors in lethal gene deletions
To further demonstrate why certain deletions are lethal for the or—
ganism’s survival, we identified the missing precursor metabolites
for the synthetic lethal gene sets in E.coli using the method available
from the COBRA Toolbox (Schellenberger et al., 2011). Under the
FBA formulation, failure of an organism to produce any of the bio—

 

Exhaustive LPs 2.04 X 108 2.03 X 108 1.75 X 107 _ . _
Number of Processors used 896 896 448 mass precursors results 1n a zero growth—rate. Flgure 1 summarizes
Equivalentserialtime z 689 days z 944 days z 19 days our findings for the given biomass configuration in (Feist et al.,
LPs solved by Fast—SL 109180 97 641 55 967 2007). The biomass of E.coli comprises amino acids, cofactors, inor—
Timetakeﬂ for FaSt-SL 3218 3298 1458 ganic ions, lipids, lipopolysaccharides (LPS), metabolites required
Number 821cm“ 285 175 333 for maintenance (ATP), murein and nucleic acids. From the lethal
gene mp as single and double gene deletion sets obtained using Fast—SL, we iden—
Lethal gene quadruplets tified that they predominantly involve non—production of essential
Exhaustive LPS 5.47 X 1010 5.41 X 1010 2.06 X 109 metabolites such as tetrahydrofolates, Coenzyme A and S—Adenosyl
Lps solved by Fast_SL 2. 54 X 106 2.32 X 106 9.39 X 105 methionine. Interestingly, more than 30% of the deletions in syn—
Time taken for Fast—SL 1.91h 2.35h 0.89h thetic lethal triplets and quadruplets primarily affect mechanisms
Number of lethal 376 445 1804 involved in ATP production required for maintenance. In 48 of the
gene quadruplets quadruple lethal gene sets, we observed that the organism is unable
50%
m El Single
L
8 E Double
5 40% " IZITriple
U
8 Quad ru ple
D.
go 30% '-
'7)
.2
E
“_ 20% ——
0
CU
0.0
to
+5 10% --
CU
U
L
é'.’
0%

 

 

 

 

Aminoacids Cofactors Inorganicions Lipids

 

 

    

 

 

LPS Maintenance Murein Nucleic acids

Biomass precursor metabolite groups

Fig. 1 Missing biomass precursors under lethal gene deletions in Escherichia coli. The biomass constituents are classified into eight different groups as given in
the model, namely, amino acids, cofactors, inorganic ions, lipids, lipopolysaccharides (LPS), metabolites required for maintenance (ATP), murein and nucleic
acids. The figure illustrates the percentage of missing biomass precursors under single, double, triple and quadruple lethal gene deletions

9103 ‘01; isanV uo s9198uv s01 ‘BIIIJOJIIBD JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Idllq mot} popco1umoq

3304

Fast—8L

 

to produce more than 70% of the biomass precursors under consider—
ation, belonging to all metabolite groups except the inorganic ions (as
their exchanges are unaffected under these deletions). These observa—
tions reiterate the robustness of cellular metabolism and at the same
time, the central and critical role played by co—factors and ATP.

It is important to note that approximately 14% of all lethal dele—
tions (up to order four) result in a non—zero, but severely hampered,
growth rate (here it is less than 1% of the maximum wild—type
growth rate, inn-07m) and therefore do not have any missing precur—
sors under the optimal FBA configuration.

4 Discussion

In this study, we describe a new algorithm to rapidly identify syn—
thetic lethal reaction/gene sets in genome—scale metabolic networks.
The identification of synthetic lethals in organisms can be used to
understand complex genetic interactions between genes and identify
drug targets for combinatorial therapy (Kim et al., 2011; Lee et al.,
2009; Sigurdsson et al., 2012). We build on the popular framework
of FBA, extending it to identify synthetic lethals; our algorithm ex—
ploits the structure of the metabolic network better than previous al—
gorithms, to eliminate combinations of reactions/genes that are
guaranteed not to produce a lethal phenotype under the conditions
considered.

Importantly, our algorithm also identifies synthetic lethal gene sets
rigorously, by carefully considering the GPR associations in the meta—
bolic model. Fast—SL therefore manages to identify 127 new lethal
gene triplets in E.coli, which were not identified by a previous study
(Suthers et al., 2009) (indicated in Supplementary File S3). Further,
we confirmed that our algorithm does not miss out on any synthetic
lethal gene sets, by cross—checking with an exhaustive analysis of triple
gene deletions on a computer cluster. Our algorithm for finding syn—
thetic lethal gene sets also outperforms the LTM method (Zhang et
al., 2015) which increases the problem size in the case of E.coli from
1668 X 2382 to 5372 X 7287. For the same model, our approach
avoids this transformation and consequently solves far fewer LPs,
thereby computing the lethal sets in much less time.

Fast—SL utilizes the ﬂux corresponding to [l—norm minimization,
which can be easily formulated as an LP. It is important to note that
there may be multiple jnz sets corresponding to the minimum sum of
absolute values of fluxes (i.e. minimized £1—norm solution) and these
jnz sets may also vary in terms of their sizes. It does not matter which
jnz set one may begin the algorithm with, because in all the ],,z sets,
the arguments that Is; is completely contained in ],,z and at least one
of i or i of a lethal pair (i, /) belongs to In and so on, always hold
true. However, smaller the size of the set ],,z in each step, faster the
algorithm would be. More importantly, minimization of the £1—
norm of the ﬂux vector may not always converge to the sparsest pos—
sible solution, which is often denoted as the [o—norm solution. Here,
it is also important to note that Fast—SL does not require the sparsest
solution to work; a reasonably sparse solution already achieves a
significant search space reduction, while circumventing the com—
plexity of the [o—norm MILP formulation.

Our work does have its limitations. As with any other metabolic
network analysis technique, our method suffers from any inadequa—
cies present in the model. Nevertheless, our algorithm can identify a
list of lethal (and non—lethal) phenotypes, which can be used to re—
fine the metabolic model, based on disagreements with experimental
results. Further, the synthetic lethals predicted by our algorithm are
valid only in a particular environment/growth medium; it is however
straightforward to identify lethal sets for other environments, by
altering the constraints suitably.

In sum, we see three main contributions of our method. First,
Fast—SL achieves a massive reduction in the search space and obvi—
ates the need for performing an exhaustive analysis of combinatorial
gene/reaction deletions. This can facilitate the identification of com—
binatorial drug targets in organisms, even up to the order of four,
which was previously nearly intractable (Navid, 2011). Second,
Fast—SL also compares favorably with the MCSEnumerator algo—
rithm, eliminating the need to solve complex MILPs. Finally, Fast—
SL also rigorously identifies lethal gene sets, uncovering lethal gene
sets not previously identified by other algorithms. Overall, Fast—SL
enables a rapid evaluation of combinatorial gene and reaction dele—
tions in genome—scale metabolic networks, which may help identify
previously unknown genetic interactions and combinatorial drug
targets.

Acknowledgements

The authors thank Dr. Rupesh Nasre and Aarthi Ravikrishnan for useful
discussions and critical reading of the manuscript. The use of the high—
performance computing facility HPCE at IIT Madras is also gratefully
acknowledged. The authors also thank three anonymous reviewers for a crit-
ical reading of the manuscript and valuable suggestions.

Funding

KR. acknowledges funding from IIT Madras and the grant BT/PR4949/BRB/
10/ 1048/2012 from the Department of Biotechnology, Government of India.

Conﬂict of Interest: none declared.

References

Acuﬁa,V. et al. (2009). Modes and cuts in metabolic networks: complexity
and algorithms. Biosystems, 95, 51—60.

Alper,H. et al. (2005). Identifying gene targets for the metabolic engineering of
lycopene biosynthesis in Escherichia coli. Metab. Eng., 7, 15 5—164.

Behre,J. et al. (2008). Structural robustness of metabolic networks with respect
to multiple knockouts. ]. Theor. Biol., 252, 433—441.

Chindelevitch,L. et al. (2014). An exact arithmetic toolbox for a consistent
and reproducible structural analysis of metabolic network models. Nature
Commun., 5, 4893.

Deutscher,D. et al. (2006). Multiple knockout analysis of genetic robustness in
the yeast metabolic network. Nat. Genet., 38, 993—998.

Deutscher,D. et al. (2008). Can single knockouts accurately single out gene
functions? BMC Syst. Biol., 2, 5 O.

Edwards,J.S. and Palsson,B.O. (2000). Metabolic ﬂux balance analysis and
the in silico analysis of Escherichia coli K-12 gene deletions. BMC
Bioinformatics, 1, 1.

Famili,I. et al. (2003). Saccharomyces cerevisiae phenotypes can be predicted
by using constraint—based analysis of a genome—scale reconstructed meta—
bolic network. Proc. Natl. Acad. Sci. U.S.A, 100, 13134—13139.

Fang,X. et al. (2010). Development and analysis of an in vivo—compatible
metabolic network of Mycobacterium tuberculosis. BMC Syst. Biol., 4, 160.

Feist,A.M. et al. (2007). A genome—scale metabolic reconstruction for
Escherichia coli K—12 MG1655 that accounts for 1260 ORFs and thermo-
dynamic information. Mol. Syst. Biol., 3, 121.

Guell,O. et al. (2014). Essential plasticity and redundancy of metabolism un—
veiled by synthetic lethality analysis. PLoS Comput. Biol., 10, e1003637.

Harrison,R. et al. (2007). Plasticity of genetic interactions in metabolic net-
works of yeast. Proc. Natl. Acad. Sci. U.S.A, 104, 2307—2312.

Hartman,H.B. et al. (2014). Identiﬁcation of potential drug targets in
Salmonella enterica sv. Typhimurium using metabolic modelling and experi-
mental validation. Microbiology (Reading, England), 160, 1252—1266.

Henry,C.S. et al. (2009). Application of high-performance computing to the
reconstruction, analysis, and optimization of genome—scale metabolic mod-
els.]. Phys: Conf. Ser., 180, 012025.

9103 ‘01; isanV uo s9198uv s01 ‘BIIIJOJIIBD JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Idllq mot} popco1umoq

A.Pratapa et al.

3305

 

Iamshidi,N. and Palsson,B.O. (2007). Investigating the metabolic capabilities
of Mycobacterium tuberculosis H37Rv using the in silico strain iNI661 and
proposing alternative drug targets. BMC Syst. Biol., 1, 26.

Kauffman,K.I. et al. (2003). Advances in ﬂux balance analysis. Curr. Opin.
Biotechnol., 14, 491—496.

Kim,H.U. et al. (2011). Integrative genome—scale metabolic analysis of Vibrio
vulniﬁcus for drug targeting and discovery. Mol. Syst. Biol., 7, 460.

Kuepfer,L. et al. (2005). Metabolic functions of duplicate genes in
Saccharomyces cerevisiae. Genome Res., 12, 1421—1430.

Lee,D.S. et al. (2009). Comparative genome—scale metabolic reconstruction
and ﬂux balance analysis of multiple Staphylococcus aureus genomes iden—
tify novel antimicrobial drug targets. I. Bacteriol., 191, 4015—4024.

Navid,A. (2011). Applications of system-level models of metabolism for ana—
lysis of bacterial physiology and identiﬁcation of new drug targets. Brief.
Funct. Genomics., 10, 354—364.

Pinney,I.W. et al. (2007). Metabolic reconstruction and analysis for parasite
genomes. Trends Parasitol., 23, 548—55 4.

Plata,G. et al. (2010). Reconstruction and ﬂux—balance analysis of the
Plasmodium falciparum metabolic network. Mol. Syst. Biol., 6, 408.

Raghunathan,A. et al. (2009). Constraint-based analysis of metabolic capacity
of Salmonella typhimurium during host-pathogen interaction. BMC Syst.
Biol., 3, 38.

Schellenberger,I. et al. (2011). Quantitative prediction of cellular metabolism
with constraint—based models: the COBRA Toolbox v2.0. Nat. Protoc., 6,
1290—1307.

Sigurdsson,G. et al. (2012). A systems biology approach to drug targets in
Pseudomonas aeruginosa bioﬁlm. PLoS One, 7, 1—9.

Suthers,P.F. et al. (2009). Genome—scale gene/reaction essentiality and syn-
thetic lethality analysis. Mol. Syst. Biol., 5, 301.

Thiele,I. et al. (2005). Expanded metabolic reconstruction of Helicobacter
pylori (iIT341 GSM/GPR): an in silico genome-scale characterization of sin-
gle— and double—deletion mutants. I. Bacteriol., 187, 5 818—5 830.

Thiele,I. et al. (2011). A community effort towards a knowledge-base and
mathematical model of the human pathogen Salmonella Typhimurium LT2.
BMC Syst. Biol., 5, 8.

Varma,A. and Palsson,B.O. (1994). Stoichiometric ﬂux balance models
quantitatively predict growth and metabolic by—product secretion
in wild—type Escherichia coli W3110. Appl. Environ. Microb., 60,
3724—3731.

von Kamp,A. and K1amt,S. (2014). Enumeration of smallest intervention strat-
egies in genome—scale metabolic networks. PLoS Comput. Biol., 10,
e1003378.

Wodke,I.H. et al. (2013). Dissecting the energy metabolism in Mycoplasma
pneumoniae through genome-scale metabolic modeling. Mol. Syst. Biol., 9,
653.

Zhang,C. et al. (2015). Logical transformation of genome scale metabolic
models for gene level applications and analysis. Bioinformatics, 31, 2324—
2331.

Zimmermann,G.R. et al. (2007). Multi—target therapeutics: when the whole is
greater than the sum of the parts. Drug Discov. Today, 12, 34—42.

9103 ‘01; isanV uo s9198uv s01 ‘BIIIJOJIIBD JO AusreAtuf] 112 /310's113u1nofp10}x0"sotwulJOJutotq/ﬁduq mot} popco1umoq

