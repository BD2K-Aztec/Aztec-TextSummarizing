Bioinformatics, 31(12), 2015, 1999—2006

doi: 10.1093/bioinformatics/btv072

Advance Access Publication Date: 2 February 2015
Original Paper

 

Systems biology

Incorporating peak grouping information for
alignment of multiple liquid chromatography-
mass spectrometry datasets

Joe Wandy1, Ronan Dalyz, Rainer Breitling3 and Simon Rogers1'*

1School of Computing Science, University of Glasgow, Glasgow, UK, 2School of Computing and Mathematical
Sciences, Liverpool John Moores University, Merseyside, UK and 3Manchester Centre for Synthetic Biology of
Fine and Speciality Chemicals (SYNBIOCHEM), Manchester Institute of Biotechnology, University of Manchester,
Manchester, UK

*To whom correspondence should be addressed.
Associate Editor: Jonathan Wren

Received on September 21, 2014; revised on January 5, 2015; accepted on January 28, 2015

Abstract

Motivation: The combination of liquid chromatography and mass spectrometry (LC/MS) has been
widely used for large—scale comparative studies in systems biology, including proteomics, glyco—
mics and metabolomics. In almost all experimental design, it is necessary to compare chromato—
grams across biological or technical replicates and across sample groups. Central to this is the
peak alignment step, which is one of the most important but challenging preprocessing steps.
Existing alignment tools do not take into account the structural dependencies between related
peaks that coelute and are derived from the same metabolite or peptide. We propose a direct
matching peak alignment method for LC/MS data that incorporates related peaks information
(within each LC/MS run) and investigate its effect on alignment performance (across runs). The
groupings of related peaks necessary for our method can be obtained from any peak clustering
method and are built into a pair—wise peak similarity score function. The similarity score matrix pro—
duced is used by an approximation algorithm for the weighted matching problem to produce the
actual alignment result.

Results: We demonstrate that related peak information can improve alignment performance. The
performance is evaluated on a set of benchmark datasets, where our method performs competi—
tively compared to other popular alignment tools.

Availability: The proposed alignment method has been implemented as a stand—alone application
in Python, available for download at http://github.com/joewandy/peak—grouping—alignment.
Contact: Simon.Rogers@glasgow.ac.uk

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

Liquid chromatography, coupled to mass spectrometry (LC/MS) is
one of the most wider used techniques in untargeted proteomic and
metaholomic studies (Vandenbogaert et (11., 2008). In proteomic or
metaholomic experiments, the input sample to the LC/MS in-
strument is a complex mixture of peptides or metabolites.

(C7 The Author 2015. Published by Oxford University Press.

Compounds in the mixture are separated in time through liquid
chromatography (LC) and subjected to mass spectrometry (MS) ana-
lysis. The result of this process is a mass chromatogram: an intensity
surface across the mass-to-charge ratio (WI/z) and retention time
(RT) dimensions. From this surface, it is possible to extract individ-
ual peaks (corresponding to ions in the mass spectrometry). In this

1999

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/Iicenses/by/4.0/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

/310‘srcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

2000

J. Wandy et al.

 

article, we use the term ‘run’ to refer to the output from running any
biological sample through the LC/MS instrument once, and ‘feature’
to refer to a tuple of (rn/z, RT) values derived from a single peak.

Experiments in biology involve a comparison of multiple samples,
so a typical LC/MS dataset consists of data from several runs. In order
to compare peaks across these runs, they have to be matched, and
while the measured rn/z of a particular peak tends to be conserved in
high—precision mass spectrometry, the RT is prone to drifting. These
RT shifts can be highly nonlinear (Podwojski et al., 2009) and are the
result of instrument—specific factors, such as the condition of the chro—
matographic column, gradient slope, and temperature (Christin et al.,
2008), or experiment—specific factors, such as instrument malfunctions
or columns that need be replaced mid—experiment. Due to this RT
variation, a single peak from one run can have several potential
matches in another run. The problem of matching peaks and correct—
ing RT shifts is broadly referred to as alignment. Errors during the
alignment can have a detrimental effect on the subsequent analysis.

In a comprehensive review, Smith et al. (2013) identify two broad
alignment approaches: warping and direct matching. In the warping
approach, an alignment tool seeks to fit an RT correction function
(typically a regression model) between runs. Once the RT shifts have
been corrected, the correspondence of peaks can be found through
any method that matches peak features across runs. Early warping
approaches, such as dynamic time warping (Sakoe and Chiba, 1978),
correlation optimized warping (Nielsen et al., 1998) and parametric
time warping (Eilers, 2004), are predominantly based on dynamic
programming, and use only the time information present in the Total
Ion Chromatograms (TIC), but recent warping approaches have
included the rn/z dimension as well (Christin et al., 2008). In the alter—
native approach of direct matching, the goal of alignment is to skip
the warping step and directly match peaks across runs. Direct
approaches therefore require that the peak (i.e. feature) extraction
step has already been completed. The majority of direct matching
approaches consist of two stages: computing feature similarity and
using this similarity to match the features. A wide range of feature
similarity measures have been proposed to compare the rn/z and RT
values of two peaks, including normalized weighted absolute differ—
ence (Pluskal et al., 2010), cosine similarity (Hoffmann et al., 2012),
Euclidean distance (Ballardini et al., 2011) and Mahalanobis distance
(Voss et al., 2011). Once similarity has been computed, feature match—
ing can be established through either a greedy or combinatorial
matching method. Since matching across all runs at once can be com—
putationally expensive (due to the exponential growth of features to
be considered), complete multiple alignment results are usually pro—
duced through some merging scheme of pair—wise runs.

Greedy feature matching methods work by making a locally opti—
mal choice at each step, in the hope that this will lead to an acceptable
matching solution in the end. RTAlign in MSFACTS (Duran et al.,
2003) merges all runs and greedily groups features into aligned peak—
sets within a user—defined RT tolerance. Join Aligner (Pluskal et al.,
2010) in MZmine2 merges successive runs to a master peaklist by
matching features greedily according to their similarity scores
within user—defined rn/z and RT windows. Similarly, MassUntangler
(Ballardini et al., 2011) performs nearest—distance matching of fea—
tures, followed by various intermediate filtering and conflict—
resolutions steps. Recent advances in direct matching methods have
also posed the matching task as a combinatorial optimization prob—
lem. Simultaneous Multiple Alignment (SIMA) (Voss et al., 2011)
uses the Gale—Shapley algorithm to find a stable matching in the bi—
partite graph produced by joining peaks (nodes) from one run with
peaks from another run that are within certain rn/z and RT tolerances.
Wang and Lam (2013) explore the application of the classical

Hungarian algorithm to find the maximum weighted bipartite match—
ing. Bidirectional best hits peak assignment and cluster extension
(BIPACE) (Hofﬁnann et al., 2012) establishes correspondence by find—
ing the maximal cliques in the graph. SMFM (Lin et al., 2013) uses
dynamic programming to compute a maximum bipartite matching
under a relaxed bijective mapping assumption for time mapping.
Many of the tools surveyed in Smith et al. (2013) make the assump—
tion that elution order of peaks is preserved across runs. Often, a tool
also has a number of user—defined parameters, varying which can dras—
tically change the alignment. More importantly, none of the tools sur—
veyed in Smith et al. (2013) take into account the structural
dependencies between coeluting peaks when solving the correspond—
ence problem. Such information could potentially be used to improve
the alignment process, since a set of coeluting peaks (derived from the
same compound/peptide fragment) in one run should generally be
aligned to another set of coeluting peaks in the other run. In this work,
we propose the inclusion of related peak information into the matching
process. We define related peaks to be all those peaks that appear in a
run due to the presence of one compound in the sample being analyzed.
Examples of related peaks are isotope peaks, multiple adduct and de—
duct peaks, and fragment peaks (Scheltema et al., 2009). Such peaks
should coelute from the column and have similar chromatographic
shapes. Our proposed approach uses information as to which peaks
are related to which other peaks in an individual run, to modify peak
to peak similarity scores across runs. The related peak information can
come from any peak grouping (e.g. clustering via RT) method. Our
key assumption is that groups of co—eluting peaks will be preserved
across runs. The idea is illustrated in Figure 1. In the figure, initial
weights are computed between pairs of peaks in the two runs that are
within rn/z and RT tolerances (e.g. WAE and WA 1). When related peak
information is added, the similarity between peaks A and E is increased
due to peak A being related to another peak (B) that is similar to a
peak (G) related to E. On the other hand, the similarity between A and
] is not increased as ] does not have any related peaks that could poten—
tially be matched to peaks related to A. In other words, we are propos—
ing using the structural dependencies present between peaks in each
run to modify the similarity scores and improve alignment perform—
ance: the more peaks related to A that could be matched to peaks
related to E, the more likely it becomes that A should be matched to E.

2 Materials and methods

2.1 Direct matching method

Our proposed alignment method combines a novel similarity score
with maximum weighted bipartite matching. This results in pair—
wise alignments which can be, if desired, extended to multiple align—
ments with hierarchical merging strategy. In such merging strategies,
having an accurate initial pair—wise alignments is important because
of its influence on the final multiple alignment results. In the follow—
ing sections, we describe each step in more detail.

2.2 Feature similarity

Suppose we wish to align run A containing N A peaks with run B
containing NB peaks. We follow SIMA (Voss et al., 2011) in using
the Mahalanobis distance between two peaks [7,- E A, p,- E B where
each peak is a vector of its rn/z and RT values p,- : [rn,~,t,~]T and
p]- : [m]-, tij. The distance is given as:

DUMP/J : (Pi — P;)T2_1(Pi — Pi):

where the covariance matrix 2 is a diagonal matrix of mass—

to—charge tolerance a; and retention time tolerance 0,2. The

[310'sp2umofp105xo'sopeuHOJIItotq/ﬁdnq

Equation 3

+0 . .
\ : ‘ ‘ $.
0‘ \Q
‘A
° 6
O O
m/z
Figure l

 

 

Updated weights, taking into
account peak grouping,
. computed via Equation 2

0.0 ,r
0 o

Rasmussen, 2000

Supplementary Material

Voss et al., 2011
Gusfield and Irving, 1989

Wang and
Lam (2013)

/3.IO'S[BIIm0[p.IOJXO'SOIJBIIIJOJIIIOIq/ﬂdnq

2002

J. Wandy et al.

 

align runs having large and systematic drifts in RT values. The well—
known Hungarian algorithm (Kuhn, 1955) attributed to Kuhn and
Munkres is used in LWBMatch to solve this problem. The time com—
plexity of the Hungarian algorithm is O(n3), where n is the number
of peaks in the larger set. While the Hungarian algorithm’s imple—
mentation can be improved to O(nzlog n) by using Fibonacci heaps
for the shortest path computation, the polynomial time complexity
required in this scheme is often too slow to be practical for align—
ments of the large number of runs produced in large—scale untargeted
LC—MS studies. Consequently, we compute an approximation of the
maximum weighted matching using a simple greedy algorithm that
runs in O(m log n) time, where n and in denote the number of verti—
ces and edges in the bipartite graph G to be solved. The greedy algo—
rithm is straightforward to describe: pick the heaviest edge e in G,
where e represents a potential match between nodes (features). Add
e to the matching solution M and remove all other edges adjacent to
e from G. Repeat until all edges in C have been exhausted. This sim—
ple greedy algorithm is known to provide a lower bound of at least
1/2 of the maximum weight in the matching (Duan et al., 201 1).

2.5 Evaluation datasets

Performance of the proposed methods and other benchmark meth—
ods is evaluated on LC—MS datasets from proteomic, metabolomic
and glycomic experiments. The proteomic datasets are obtained
from Lange et al. (2008) while the glycomic dataset comes from
Tsai et al. (2013). These datasets provide the ground truth for align—
ment and have used to benchmark alignment performance in other
evaluation studies (Ballardini et al., 2011; Lange et al., 2008;
Pluskal et al., 2010; Tsai et al., 2013; Voss et al., 2011).
Additionally, we also introduce a metabolomic dataset generated
from the standard runs used for the calibration of chromatographic
columns (Creek et al., 201 1). The runs were produced from different
LC—MS analyses separated by weeks, representing a challenging
alignment scenario. Further details on each dataset and the construc—
tion of alignment ground truth can be found in Section 2 of the
Supplementary Material.

3 Evaluation study

3.1 Experimental setup
The alignment tools evaluated have in common user—defined rn/z
and RT window parameters. These parameters act as hard thresh—
olds that determine the solution space to be explored in the rn/z and
RT dimensions when matching features. Performance of all align—
ment procedures is highly dependent on the assumptions and choice
of parameter values that underpin them (Smith et al., 2013). For ex—
ample, warping methods must make assumptions regarding the
mathematical form of the warping function and are dependent on a
good choice of reference run. Direct matching approaches typically
need to decide on the form of peak similarity function, and define
some rn/z and RT windows, outside of which, peaks cannot be
matched. While the rn/z window and parameters can often be deter—
mined based on the mass accuracy of the measurement equipment,
there is no obvious way to determine the RT window and associated
parameters. The optimal choice of such parameters could have a sig—
nificant influence on the final results (Smith et al., 2013), and there
is no reason to believe that these parameters should remain constant
across different experiments.

Previous studies on the proteomic and metabolomic datasets pre—
sented here (Ballardini et al., 2011; Lange et al., 2008; Voss et al.,
2011) varied the window parameters and reported the best

performance achieved. While informative, this procedure is unrealistic
due to the role of the ground truth in choosing the optimal parameter
values. To provide a more realistic estimate of performance, we also
present the performance on a separate testing set. In other words, we
optimize the window parameters on one alignment task and report
the performance when using these optimized parameters on a second
task (distinct from the first task). This reflects the scenario where the
parameters are set based on performance on a previous dataset or due
to information supplied from the instrument manufacturer and tells
us how critical setting these parameters is for each method.

In this article, training set refers to the data on which alignment
parameters are optimized and testing set refers to the independent
set on which alignment performance is evaluated. We believe that
this represents a more realistic measure of alignment performance
and provides us with some information as to how the different algo—
rithms generalize to new datasets. We addressed the lack of com—
parative evaluation of alignment tools as discussed in Smith et al.
(2013) by independently reproducing key results from Lange et al.
(2008) and Voss et al. (2011) for the Join and SIMA alignment
methods. Our evaluation studies were performed on datasets se—
lected in Section 2.5 to validate the hypothesis that using related
peak information can improve alignment performance. Since most
direct matching algorithms work in a pair—wise fashion (pairs of
runs are matched and the results combined), pair—wise performance
therefore limits overall performance, justifying the choice for our ex—
periments. For the proteomic datasets, each fraction in P1 has two
runs used for alignment, while each fraction in P2 has three runs (we
use only the first two to establish pair—wise alignments). Similarly
for the metabolomic and glycomic datasets, we randomly extracted
30 pairs of runs for training and another 30 pairs of runs for testing
performance evaluation.

Performance is evaluated in terms of precision, recall and F1—
score. Looking at pair—wise matching, we can define the following
positive and negative instances with respect to some pair—wise align—
ment ground truth:

° True Positive (TP): pairs of peaks that should be aligned and are
aligned.

° False Positive (FP): pairs of peaks that should not be aligned but
are aligned.

° True Negative (TN): pairs of peaks that should not be aligned
and are not aligned.

° False Negative (FN): pairs of peaks that should be aligned but
are not aligned.

In the context of alignment performance, precision (ﬁ) is the

fraction of aligned pairs in the output that are correct with respect

to the ground truth, while recall (HEW) is the fraction of aligned

 

pairs in the ground truth that are aligned in the output. A perfect
alignment would have both precision and recall to be 1. In addition,
we also computed the F1 score (the harmonic mean of precision and
recall) such that F1 : 2(precision - recall) / (precision + recall). Only
feature pairs present in the ground truth are considered for evalu—
ation. The idea of using pair—wise matching to define alignment per—
formance evaluation is not new, and has also been done in Wang
and Lam (2013). Collectively for the purpose of performance evalu—
ation, the set of Precision, Recall and F1 values is referred to as a
‘measurement’.

3.2 Other alignment tools for comparison
Our proposed approach was benchmarked against MZmine2’s
Join Aligner (Pluskal et al., 2010) and SIMA (Voss et al., 2011).

[310'sp2umofp105xo'sopeuHOJIItotq/ﬁdnq

Incorporating peak grouping information

2003

 

Table 1. F1 scores for the single-fraction experiment results on the
P1 dataset

Table 2. F1 scores for the single-fraction experiment results on the
P2 dataset

 

 

 

 

 

Fraction Join SIMA MW MWG MWM Fraction Join SIMA MW MWG MWM
000 0.63 0.64 0.64 0.77 0.71 000 0.45 0.45 0.45 0.49 0.45
020 0.88 0.88 0.88 0.95 0.90 020 0.77 0.78 0.79 0.80 0.79
040 0.82 0.83 0.85 0.87 0.86 040 0.77 0.78 0.77 0.80 0.77
060 0.76 0.78 0.78 0.88 0.83 080 0.66 0.68 0.67 0.67 0.72
080 0.90 0.89 0.88 0.92 0.90 100 0.55 0.58 0.56 0.85 0.70
100 0.89 0.89 0.89 0.91 0.91 Mean 0.64 0.65 0.65 0.72 0.69
Mean 0.81 0.82 0.82 0.88 0.85

 

Notes: The tool With the highest F1 score for each fraction is highlighted in
hold. The results for ‘All’ show the average F1 scores of individual fractions.

These tools employ different approaches towards alignment. Join
Aligner is a greedy direct—matching method, While SIMA is a com—
binatorial direct—matching method, with an optional warping step to
correct RT shifts after an initial matching has been established.

3.2.1 MZmine2’s join aligner

Users of the MZmine2’s toolkit may have good reasons to prefer
Join Aligner to the more recent RANSAC Aligner due to its simpli—
city and speed. Join Aligner produces a deterministic alignment out—
put (so running it each time on the same input and parameters gives
the same result), in contrast to the RANSAC aligner, which is non—
deterministic. Join Aligner has relatively few parameters to config—
ure, the most important ones being the rn/z tolerance and retention
time tolerance parameters. These parameters are used for threshold—
ing and score calculations, and they were varied within reasonable
ranges during our experiments.

3.2.2 Simultaneous multiple alignment

The two most important parameters used in SIMA for thresholding
and computing feature similarities are the TW/z) and Tr, parameters
(equivalent to our (Tm and at). We let these two parameters vary in
our experiments. SIMA also offers an optional step to correct for re—
tention time distortion by constructing a smooth and monotonic
warping function for the maximum likelihood alignment path after
the initial matching has been done. The utility of this optional step is
not obvious to end—users, since it requires additional parameters to
configure and relies on having an initial correspondence established.
Therefore, we chose to test only the core matching functionality in
SIMA.

4 Results

We conducted several experiments on the proteomic, metabolomic
and glycomic datasets, each designed to test a different aspect of
alignment tools’ performance. Details on the parameter opti—
mizations for evaluated tools are provided in the Supplementary
document.

4.1 Proteomics experiments

4.1.1 Single-fraction experiment

Both P1 and P2 data consist of multiple fractions. In the first experi—
ment, we investigate the best possible performance by using the
same fraction as training and testing sets. On each training set (a
fraction), we optimized the rn/z and RT window parameters for
alignments. The rn/z parameters are in parts per million, normally
notated ‘ppm’ and the range of rn/z parameters used were
{1.0,1.1,...,2.0} and RT {5,10,...,300} seconds. Parameters that

Note: The tool With the highest F1 score for each fraction is highlighted in
hold. The results for ‘All’ show the average F1 scores of individual fractions.

control the grouping and influence of the cluster similarity score for
our MWG and MWM methods were also optimized. The ratio par—
ameter or was set to {0.1, 0.2, ..., 1} for both MWG and MWM. The
grouping tolerance gm) was set to {1,2, ..., 10} seconds for greedy
clustering, while the same hyperparameters were used for clustering
of all fractions in case of mixture—model clustering (further details
on parameter range selections are in the Supplementary Material).

The results are shown in Tables 1 and 2 (full results, including
precision and recall values, can be found in the Supplementary
Material). We see that approximate maximum weighted matching
(MW) alone performs competitively to other tools. On the P1 data
(Table 1), incorporating grouping information (MWG, MWM) im—
proves F1 score performance over MW. MWG outperforms MWM,
which may be due to the fact that the greedy approach is easier to
optimize. For the P2 data (Table 2), which contains features with
significantly higher RT drift across runs, again we find that MW is
competitive and clustering information (MWG) improves perform—
ance for all fractions. The results here show the potential of our pro—
posed approach: any peak grouping results expressed in a suitable
matrix format can be incorporated into our method, and used as
additional information during the matching stage. Figure 2 shows
how the benefit of incorporating clustering information is realized
during matching: it allows the matching methods to explore regimes
in the solution space having higher precision and recall values. On
some training fractions, both methods that incorporate clustering in—
formation show significant increases in the best possible F1 score.
For dataset P1 fraction 000, this is an 11% improvement for MWG
and a 7.5% improvement for MWM. For dataset P2 fraction 100,
this is a 51% improvement for MWG and 25% improvement for
MWM. Smaller improvements can be observed from other fractions
in the Proteomic datasets too. The full results for all fractions,
including computed precision and recall values, are available in the
Supplementary document.

4.1.2 Multiple-fractions experiment

The single—fraction experiment does not represent a very realistic
scenario as the optimal parameters were determined with respect to
an alignment ground truth; practitioners might not possess that in—
formation in real analytical situations. In this experiment, we im—
proved upon the single—fraction experiments by using each fraction
in each dataset as the training set and the remaining fractions as the
testing set. Parameters were optimized on the training set and per—
formance evaluations were performed on the testing set. This
training—testing procedure produces six measurements for P1 and
five measurements for P2, corresponding to the number of training
fractions in each dataset. The overall F1 score reported for each
measurement is the average F1 scores from individual testing frac—
tions. The aim of this experiment is to investigate how well the

ﬁre'steumol‘pmJXO'sopcuuowtotq/ﬁdnq

 

Fig. 2 Fig. 2
Supplementary Material

Tables 3 4
Supplerncntar) l\4atcrial

Figures 3 4

Supplerncntar) l\4atcrial

Supplerncntar) l\4atcrial

Supplerncntar) l\4atcrial

Figures 1

/310'S[BIIJHOFPJOJXO'SOIIBLUJOJIIIOICIHIdllq

 

Suppleinentar) l\4ate1‘ial

 

 

Rogers (7/ Lil. (2012)
Dal} (7/ ill. (2014)

Dunn (7/ Lil. (2011)

Voss (7/ al., 2011

Tsai (7/ al., 2013

 

/310'S[BIIJHOFPJOJXO'SOIIBLUJOJIIIOICIHIdllq

2006

J. Wandy et al.

 

Conﬂict of Interest: none declared.

References

Ballardini,R. et al. (2011). MassUntangler: A novel alignment tool for label—
free liquid chromatography—mass spectrometry proteomic data.
]. Chromatogr. A, 1218, 8859—8868.

Christin,C. et al. (2008). Optimized time alignment algorithm for
LC-MS data: Correlation optimized warping using component
detection algorithm-selected mass Chromatograms. Anal. Chem., 80,
7012—7021.

Creek,D.]. et al. (2011). Toward global metabolomics analysis with hydro-
philic interaction liquid chromatography—mass spectrometry: improved me-
tabolite identiﬁcation by retention time prediction. Anal. Chem., 83,
8703—8710.

Daly,R. et al. (2014). MetAssign: probabilistic annotation of metabolites from
LC—MS data using a Bayesian clustering approach. Bioinformatics, 30,
2764—2771.

Duan,R. et al. (2011). Scaling algorithms for approximate and exact max—
imum weight matching.

Duran,A.L. et al. (2003). Metabolomics spectral formatting, alignment and
conversion tools (MSFACTs). Bioinformatics, 19, 2283—2293.

Eilers,P.H. (2004). Parametric time warping. Anal. Chem., 76, 404—411.

Gusﬁeld,D. and Irving,R.W. (1989). The Stahle Marriage Problem: Structure
and Algorithms, Vol. 54. MIT Press, Cambridge.

Hoffmann,N. et al. (2012). Combining peak- and chromatogram-based reten-
tion time alignment algorithms for multiple chromatography-mass spec-
trometry datasets. BMC Bioinformatics, 13, 214.

Kuhn,H.W. (1955). The Hungarian method for the assignment problem.
Naval Res. Log. Q, 2(1-2), 83—97.

Lange,E. et al. (2008). Critical assessment of alignment procedures for
LC-MS proteomics and metabolomics measurements. BMC Bioinformatics,
9, 375.

Lin,H. et al. (2013). A combinatorial approach to the peptide feature matching
problem for label—free quantiﬁcation. Bioinformatics, 29, 1768—1775.

Nielsen,N.-P.V. et al. (1998). Aligning of single and multiple wavelength chro-
matographic proﬁles for chemometric data analysis using correlation opti-
mised warping. ]. Chromatogr. A, 805, 17—35.

Pluskal,T. et al. (2010). MZmine 2: Modular framework for processing, Visu-
alizing, and analyzing mass spectrometry-based molecular proﬁle data.
BMC Bioinformatics, 11, 395.

Podwojski,K. et al. (2009). Retention time alignment algorithms for LC/MS
data must consider non-linear shifts. Bioinformatics, 25, 758—764.

Rasmussen,C.E. (2000). The inﬁnite Gaussian mixture model. In: Advances in
Neural Information Processing Systems. Vol. 12. MIT Press, Cambridge,
MA, pp. 554—560.

Rogers,S. et al. (2012). Mixture model clustering for peak ﬁltering in metabo-
lomics. In: Ninth International Workshop on Computational Systems
Biology, WCSB 2012, June 4—6, Ulm, Germany, p. 71.

Sakoe,H. and Chiba,S. (1978). Dynamic programming algorithm optimization
for spoken word recognition. IEEE Trans. Acoust. Speech Signal Process.,
26, 43—49.

Scheltema,R.A. et al. (2009). Simple data-reduction method for high-reso-
lution LC-MS data in metabolomics. Bioanalysis, 1, 1551—1557.

Smith,R. et al. (2013). LC-MS alignment in theory and practice: a comprehen-
sive algorithmic review. Brief. Bioinform, 16, 104—117.

Tsai,T.-H. et al. (2013). Multi-proﬁle Bayesian alignment model for LC-MS
data analysis with integration of internal standards. Bioinformatics, 29,
2774—2780.

Vandenbogaert,M. et al. (2008). Alignment of LC-MS images, with applica-
tions to biomarker discovery and protein identiﬁcation. Proteomics, 8,
650—672.

Voss,B. et al. (2011). SIMA: Simultaneous multiple alignment of LC/MS peak
lists. Bioinformatics, 27, 987—993.

Wang,]. and Lam,H. (2013). Graph-based peak alignment algorithms for mul-
tiple liquid chromatography-mass spectrometry datasets. Bioinformatics,
29, 2469—2476.

ﬁre'steumol‘pmJXO'sopcuuowrorq/ﬁdnq

