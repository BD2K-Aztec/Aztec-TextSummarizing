BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

SNP content is

extracted from

aligned sequence

reads to construct

fragments.

Fragments are encoded as row vectors of
SNP alleles in M. SNP alleles may be 0, 1‘ or
‘-' repre ‘nting the major allele, minor allele.

ng data respectively.

SNP—ﬁagmerzt
matrix M

 

/810'SIBumo[pJOJxo'sopELuJOJutotq”:duq

an?kgogmomammowoio~&o:3m7.omm\

c
G
h
P
a
r
G
S
S
a
P
m
o
C

SNpeFravment Matrix

mucuncwﬁm

 

 

 

an?kgogmomammowoio~&o:3m7.omm\

 

an?kgogmomammowoio~&o:3m7.omm\

 

Haplotype assembly in polyploid genomes

 

We omit the straightforward proofs that the MWVR and
MWER problems are in NP. It remains to be shown that known
NP—hard problems can be reduced to MWVR and MWER.

We restate the conﬂict graph generality lemma from Lippert
et al. (2002).

LEMMA 1. Let G = (V,E) be an arbitrary graph. Then there
exists an SNP—fragment matrix M such that GF(lll) = G.

PROOF: Introduce a fragment f,- for each vertex v,~ e V. For
every two adjacent vertices {v,~,v,«} e E, introduce a new SNP
column sk in M where ﬁk = 0 andﬂk = 1.

Let M be the SNP—fragment matrix constructed from Lemma
1, G; the corresponding fragment conﬂict graph of M and GC the
compass graph of M.

LEMMA 2. Every simple cycle of odd length in G1: produces
exactly one conﬂicting simple cycle in GC.

For the proof of Lemma 2 please see Supplementary Appendix
Proof of Lemma 2.

LEMMA 3. Every conﬂicting simple cycle in GC includes exactly
one odd length simple cycle in G;.

PROOF. We now interpret conﬂicting cycles in GC as a set of
vertices of GC, which deﬁne a set of edges in GF.

Because of the previous lemma, every conﬂicting cycle in GC can
be resolved by removing an edge of GF, which corresponds to
removing a vertex in GC.

COROLLARY 1. There exists no conﬂicting cycles in GC if and
only if there are no cycles of odd length in GF.

LEMMA 4. Given an M produced from Lemma 1, the compass
graph GC(M) is the line graph of GF(lll) with weights of GC as
defined by the phasing relationships of the fragments of M.

Proof. The SNPs (columns) of M contain exactly two alleles
from two fragments that conﬂict. Therefore, in GF, each SNP
uniquely deﬁnes an edge, and in GC, each SNP uniquely defines a
vertex. All that remains is to show that every two adjacent edges
in G F produce an edge in GC. Consider an SNP s whose conﬂicts
involve fragments f,- and The edge deﬁned by s in G; is adja—
cent to edges deﬁned by the other conﬂicts of f,- and The vertex
s in GC is deﬁned exactly as the pairwise phasing relationships as
defined by the SNP s and other SNP alleles in fragments f,- and fl,
which in turn deﬁne the adjacencies in GF.

Because GC is the line graph of GF, if k simple cycles in GC
share an edge then k simple cycles in G F share a vertex.

THEOREM 1. M WVR is NP—hard.

PROOF: See the M WVR Proof section in Supplementary
Appendix.

THEOREM 2. M WER is NP—hard.

PROOF: The reduction is from the problem of removing the
minimum number of edges of a graph to make it bipartite. Let G
be an arbitrary graph and M the SNP—fragment matrix as
defined in Lemma 1. We modify GF(M) by adding two add—
itional degree 2 vertices to each edge, effectively converting

each edge to a length 3 path. Cycles of odd (even) length
retain their odd (even) length, thus odd length cycles still create
conﬂicting cycles in GC. All vertices of degree k produce cliques
of size k in GC, which do not correspond to any cycles in GF(lll).
Therefore, we label all edges of clique vertices produced from a
single vertex with weight 00. All paths of G; will be encoded with
two edges of GC; both of which cannot be removed in an optimal
solution to MWER. Given a solution to the MWER optimiza—
tion, we can determine the minimum number of edges in G; to
make it bipartite.

3.2 Experimental

We evaluate the HapCompass MEC, HapCompass IBD and
polyploid HapCompass algorithms using 1000 Genomes
Project [The 1000 Genomes Project Consortium (2010)], Paciﬁc
Biosciences and simulated data.

Metrics. To evaluate the accuracy of our diploid haplotype
assembly methods, we use the following measures, which capture
different aspects of haplotype assembly quality. In Aguiar and
Istrail (2012), we introduce the fragment mapping phase relation—
ship (FMPR) distance, which counts the number of pairwise
phase relationships (as deﬁned by the input read fragments)
that do not exist in the solution. The related boolean fragment
mapping (BFM) distance counts the number of read fragments
that do not map back to the solution. The third evaluation criteria
we use is the MEC measure, which counts the number of allele
ﬂips in the fragments required to produce the phased haplotype
assembly solution. In all previously described measures, lower
values are desired. These metrics are similar to read mapping
metrics in genome and transcriptome assembly, where good—qual—
ity assemblies will allow for many reads to map back to them.

3.3 Paciﬁc biosciences data

Single molecule sequencing has great potential to become a pre—
ferred method for haplotype assembly, but current algorithmic
techniques are untested on data with high error rates. We down—
loaded the chromosome 20 data from individuals HG00321,
HG00577, HG01101, NA18861, NA19313, NA19740,
NA20296 and NA20800 [PacBio Data (2013)]. Haplotype assem—
bly solutions were produced by HapCompass, Levy et al. (2007)
and HapCUT to obtain the results in Table 1 (run times can be
found in the Pacific Biosciences run times section in
Supplementary Appendix). HapCompass outperforms the com—
petition in terms of MEC using both optimizations. Interestingly,
the Levy et al. (2007) algorithm is the most accurate in terms of
FMPR and BFM. This is likely due to the Levy et al. (2007)
algorithm processing entire read fragments each iteration while
HapCompass focuses on correcting multiple fragments at adja—
cent SNPs. Because the Paciﬁc Biosciences read lengths are long
(several kb), more emphasis is placed on matching reads with
large overlaps on the same haplotype. This result further suggests
that it is important to consider the input data and the desired
results when preparing data for a haplotype assembly experiment.

3.4 1000 genomes project data

To further evaluate the HapCompass MEC implementation, we
haplotype assembled the genome of 1000 Genomes Project

 

i357

ﬁm'spzumol‘pmjxo'sopeuuopnoiq/ﬁdnq

55,2kgogmoddmmowoio~&o:~=£¢o~m\

child + mother

child only

IV.
b
m
e
s
s
a
f
o
e
P
W.

 

MnMngamomhm
greedy
probabmsvc

1e+02

le+03

le+04

 

le+05 3e+05

/3.IO'S[BIImO[p.IOJXO'SOIIBLUJOJIIIOICV/Idllq

D.Aguiar and S.Istrail

 

International Workshop on Algorithms in Bioinformatics, WABI '02. Springer—
Verlag, London, UK, pp. 29743.

Robertson,N. and Seymour,P. (1995) Graph minorsxiii. the disjoint paths problem.
J. Comb. Theory B, 63, 657110.

Schwartz,R. (2010) Theory and algorithms for the haplotype assembly problem.
Commun. Inf. Syst., 10, 23738.

The 1000 Genomes Project Consortium. (2010) A map of human genome variation
from population—scale sequencing. Nature, 467, 106171073.

 

i360

/810'slcumofp103xo'sopBLuJOJuioiq”:duu

