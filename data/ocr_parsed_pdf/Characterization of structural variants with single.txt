BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

 

 

D1

1 D
(4) MultIBreak-SV
D2
*|:|

:39\Ewowsmoaﬁmowoxmoagoﬁsambwﬁ

 

*3!

D4

 

A.Ritz et al.

 

at most a single location in the reference. Thus, for multi-read S there is at
most one correct multi-breakpoint-mapping. Let A(S) be the set of all
multi-breakpoint-mappings for multi-read S, along with the empty set
(which indicates that the correct alignment is not present). The correct
multi-breakpoint-mapping for multi-read S is thus an element in A(S).
Selecting one element from A(S) for each multi-read in S produces a
candidate mapping M that describes the placement of every multi-read
in S. The goal of this work is to solve the following problem:

M ulti—Read Mapping Problem. Given a set S of multi-reads and their
corresponding multi-breakpoint-mappings, ﬁnd (1) an optimal map-
ping M *; that is, a selection of one element from A(S) for each S e S,
and (2) the set of novel adjacencies implied by M*.

When there are more than two reads (t>2), there is a dependence
between pairs of consecutive reads, and thus direct application of paired-
read methods will not necessary yield a valid solution to the Multi-Read
Mapping Problem. For example, for a 3-multi-read (R1, R2, R3), the
alignments of the pairs (R1, R2) and (R2, R3), cannot be selected inde-
pendently: a single alignment of R2 must be chosen. MultiBreak-SV ﬁnds
highly-probable mappings and novel adjacencies to solve the Multi-Read
Mapping Problem (Fig. 1).

2.1 Implied adjacencies and the cluster diagram

For each read R,-, every read alignment a provides (i) the interval [Xm ya]
in the reference genome corresponding to the alignment location, (ii) the
orientation sign“ of the alignment, (iii) and the edit distance 6“ of the
alignment. Let 73 be all pairs of alignments from adjacent reads in each
multi-read, or the consecutive read pairs (Supplementary Section 1.2.1).
A consecutive read pair (a1, a2) 6 73 is concordant if the aligned distance
and orientation of the pair is expected given the sequencing platform and
parameters (Supplementary Sections 127121). If (a1, a2) is not concord-
ant, then it is discordant and implies a novel adjacency in the individual
genome. Let Pdiscord E 73 be the set of discordant consecutive read pairs
(which we will call discordant pairs when the context is clear). When
I = 1 (in the case of long reads), Pdimrd =73 because full alignments
are considered concordant (Figure 1).

To accurately predict SVs, we must ﬁrst identify all possible candidate
novel adjacencies that arise from the set Pdimrd of discordant pairs. Let
N be the set of possible novel adjacencies determined from the discordant
pairs Pdismrd. N is determined by clustering discordant pairs whose align-
ments are consistent with the same novel adjacency (Fig. 1, Step 2). We
cluster discordant pairs using Geometric Analysis of Structural Variants
(GASV) (Sindi et al., 2009), an algorithm which identiﬁes candidate novel
adjacencies and provides a geometric representation of how the discord-
ant pairs contribute to each novel adjacency prediction (Supplementary
Section 1.3).

To solve the Multi-Read Mapping Problem, we must ensure that the
novel adjacencies implied by M do not conﬂict; that is, each discordant
pair supports at most one novel adjacency. We capture the organization of
these ‘conﬁicting’ novel adjacency predictions using a directed graph
G called a cluster diagram (Figure 1, Step 3b). Nodes in G represent can-
didate novel adjacencies and edges represent pairs of candidate adjacencies
that have one or more discordant pairs in common. A solution of the
Multi-Read Mapping Problem includes at most one node from each con-
nected component in the cluster diagram. G is computed as a preprocessing
step using an efﬁcient line-sweep algorithm (Supplementary Section 1.3).

2.2 Probabilistic model

We will now describe a probabilistic model for a mapping M given the
data D which consists of (i) the multi-breakpoint-mappings A(S) = USES
A(S) and (ii) the cluster diagram G. We provide a high-level description
here; refer to Supplementary Section 1.4 for the full model. Our goal is to
compute P(M|D), the probability of a mapping M given the data. After

applying Bayes’ Rule, the probability of D given M includes the condi-
tional probability of the selected multi-breakpoint-mappings A(S) and
the conditional probability of the novel adjacencies G (the cluster dia-
gram).

 

P(D|M)P(M) = P(A(S)lﬂ/[)P(Glﬂ/[)P(M)_

P(M|D) : P(D) P(D)

(1)

A mapping M can be partitioned into the set A(il/I) of read alignments
in M and the number eM of missing alignments (empty sets):

P(A(S)|M) = P(AUVO, 8M) = P(A(M))P(6M)-

The probability P(A(]l/[)) of the read alignments depends on the error
rates and fragment lengths of the sequencing technology. For a mapping
M, let e(]l/[) be the total edit distance and ail/I) be the total length of all
read alignments in M. We use a binomial distribution to model the prob-
ability of observing e(]l/[) errors in a string of length ail/I) when the
sequencing error is pscq. We assume the missed alignments occur inde-
pendently with a ﬁxed probability pm. To compute P(Glil/I), we ﬁnd the
smallest number of nodes in the cluster diagram G that cover the discord-
ant pairs in M (Supplementary Section 1.3). The alignments in M are
partitioned into the selected novel adjacencies; the number of mappings
for each node is called the support. Let the non-zero supports be a vector
<I>(]l/[). We model the expected support of a novel adjacency as a Poisson
process with parameter Ad=ALan(t — 1) where A is the sequence cover-
age, t is the number of reads in the multi-read, and Lavg is the average
advance length. P(M|D) in Equation (1) now becomes

[Bin(e(]l/[); 6(M), pscq)pgg;][ H Poiss(k; Ad)]P(]l/[)

ked>(M)
P(D)

 

(2)

with hyperparameters pscqv 17cm and Ad, and a uniform prior P(M) over
all mappings. The hyperparameters can be prespeciﬁed or inferred from
the read alignments. We have generalized the model to include multiple
sequencing technologies (e.g. strobes and pairs), allowing for multiple
hyperparameters (Supplementary Section 1.7).

2.3 Markov chain Monte Carlo method

The probability in Equation (2) is prohibitive to compute due to the large
number of possible mappings M. However, we still want to consider the
distribution of mapping probabilities for the data rather than simply
ﬁnding a mapping M that maximizes P(M|D). To achieve this,
MultiBreak-SV employs a MetropolisiHastings algorithm to sample
mappings M with probability proportional to P(M|D) (Figure 1, Step
4). MultiBreak-SV takes the set A(S) of alignments and a cluster diagram
G and samples mappings M for z iterations with probability asymptotic-
ally proportional to P(M|D). MultiBreak-SV explores the solution space
via two types of moves: a local move that changes the assignment of a
single multi-read and a ‘jump’ move that changes the assignment of many
multi-reads at one time (Supplementary Section 1.5).

Since the number of possible mappings grows exponentially with the
number of multi-breakpoint-mappings, the Markov chain may take an
extremely long time to converge. Fortunately, since novel adjacencies are
independent, we divide S into independent subproblems for which
MultiBreak-SV can be run in parallel (Supplementary Section 1.5.3).
This independence observation was made by (Sindi et al., 2012) to
make the problem tractable for GASVPro on paired-end data. We
run each problem from 2 to 20 million iterations depending on the sub-
problem size.

2.3.] Computing adjacency probabilities To solve the Multi-Read
Mapping Problem, we predict novel adjacencies (nodes in the cluster
diagram G) from the mapping probabilities. We calculate the probability

 

3460

ﬁm'spzumol‘pmjxo'sopeuuopuorq/ﬁdnq

Characterization of structural variants

 

of the multi-breakpoint-mappings in order to derive an adjacency prob-
ability for each node in the cluster diagram G (Figure 1, Step 5). First, for
every multi-read S we compute the probability of each multi-breakpoint-
mapping a e A(S) by summing over probabilities of the mappings M that
contain a (Supplementary Section 1.6). Then, for every node in G we
compute the probability that the node is supported by k or more multi-
breakpoint-mappings for a ﬁxed value of k (Supplementary Section 1.6).
Finally, we choose the node with the highest probability in each con-
nected component of G as a predicted novel adjacency.

2.4 Datasets and algorithms for comparison

2.4.1 Simulated datasets Following other methods (Chen et al.,
2009; Ritz et al., 2010; Sindi et al., 2012), we constructed an individual
chromosome, VENTER, by including ~17 000 adjacencies (including dele-
tions, insertions and inversions) from HuRef into hg18 chr17 (Levy et al.,
2007). From these rearrangements, we evaluated 124 deletions greater
than 120 bp (detectable deletions) and four inversions. We focused on
deletions greater than 120 bp to account for uncertainty (:|:60 bp) in frag-
ment lengths for multi-reads with r z 2 (Ritz et al., 2010). We also con-
structed a chromosome with hundreds of novel adjacencies inserted from
individuals from the 1000 Genomes project individuals into chr1 (1000
Genomes Project Consortium, 2010) and evaluated 511 deletions greater
than 120 bp. We found notable differences in performance between the
two simulations; see Supplementary Section 2.2 for a detailed discussion
of 1000 Genomes simulation.

To simulate PacBio’s strobe platform, we generated 3-multi-reads with
normally distributed read lengths (meanzl: SD 322 :l: 134, 360 :l: 130,
359:|: 142) and advance lengths (1214:|:40, 1171 :|:40) determined from
the fosmid sequencing data described below, and inserted 15% error
using Alchemy (Chaisson, 2012). To simulate short-read Illumina-like
platforms, we generated two multi-reads with exactly 100 bp reads and
normally distributed advance lengths (mean 400), inserted 1% error into
the reads using wgsim (Li et al., 2009). We call the simulated strobe
datasets STROBES, the simulated paired datasets PAIRS. We also combined
STROBES with PAIRS datasets to produce HYBRID datasets.

We aligned all PAIRs data with BWA version 0.6.2 (Li and Durbin,
2009) and all STROBES data with BLASR (Chaisson and Tesler, 2012)
using default values, taking full alignments for each read and determining
discordant pairs from the resulting multi-breakpoint-mappings. BWA
retains a single, unique alignment for each paired-read; we found that
including multiple alignments for a read in the paired dataset decreased
performance (Supplementary Section 2.3). We ﬁxed p5ccl =0.15 for
PacBio data, pSeq =0.01 for PAIRs data, and Perr=0.01 for all datasets.
The choice of Ad depends on the sequencing coverage (Supplementary
Table 1).

To simulate PacBio’s long read sequencing platform, we generated
one-multi-reads whose lengths were exponentially distributed with
mean 3.4 kb (approximating PacBio performance at the time of data
generation), inserted 15% error using Alchemy, and aligned the reads
using BLASR. We processed the alignments in two ways.

1. Determine multi-breakpoint-mappings from partial alignments. We con-
struct a set of t-multi-breakpoint-mappings (for t z 2) from the align-
ments to the reference. We do this by building a directed acyclic graph
with vertices corresponding to the alignments and edges corresponding to
allowed discordant pairs between alignments (according to the coordin-
ates in the long read). Traversing this graph in a depth-ﬁrst manner
produces potential multi-breakpoint-mappings; we retain multi-
breakpoint-mappings that include at least 80% of the original long
read. This construction is analogous to split read alignment approaches
(Abyzov and Gerstein, 2011; Jiang et al., 2012; Wang et al., 2011); how-
ever here we permit the read to split into more than two pieces and do not
require that the pieces partition the entire read. The latter is important as

repetitive sequences at the breakpoint sometimes lead to overlapping and/
or incomplete partial alignments.

2. Determine potential deletion coordinates within full alignments. We
observed that BLASR often aligned across deletion coordinates in the
reference with a gap. Further, the BLASR-reported coordinates of the
gaps did not accurately reﬂect the deletion novel adjacencies. Thus, we
reﬁned the multi-read mapping coordinates reported by BLASR using a
three-state (deletion, match/mismatch, insertion) hidden Markov model
(HMM). For the match state emission probabilities, we ﬁt a 20% error
(symmetrically for insertions and deletions), thus 0.8 probability of
emitting a match state. For insertions and deletions, we used a 0.9 prob-
ability of emitting their respective states. We allowed a 0.01 probability of
transition from insertion and deletion states to a match state and a strict
1 X 10’10 probability to transition from a match state to either insertion
or deletion states. Initialization and termination states were both enforced
to be match states, and the Viterbi path was selected to identify potential
insertions and deletions. We found that deletion coordinates called in this
manner were more accurate than the original BLASR gap coordinates.
Each deletion greater than 200 bp called in this manner was considered a
two multi-breakpoint-mapping.

We also ignored multi-breakpoint-mappings near telomeres/centro-
meres, and converted multi-breakpoint-mappings to discordant pairs by
taking the outer coordinates in the case that the BLASR alignments
aligned across the breakpoint (which occurs in highly repetitive regions).
More details about the two steps above and the ﬁltering are in the
Supplementary Section 1.8.1. We call the simulated long read dataset
LONG.

2.4.2 PacBio Data We sequenced four human fosmids (two harbor-
ing a deletion, two harboring an inversion) from individual NA15510
(Kidd et al., 2008) (Supplementary Section 2.4). The fosmids were
sequenced using an early prototype PacBio machine; two SMRT cells
were used for each inversion compared with one SMRT cell for each
deletion. We performed a robustness analysis by varying perr and Ad.

We also obtained 10 X coverage of publicly-available long read data of
the human CHMlTERT cell line from PacBio (Paciﬁc Biosciences, 2013).
We used the LONG processing pipeline described above with one pre-
processing step before executing Step 1: we ignored any long read
where 80% of the read aligned contiguously to the reference. We also
ensured that the alignment did not contain a large deletion by requiring
that the coordinates in the reference must be within 20% of the long read
length. We used the same perr and p5ccl as in the simulations. To estimate
A,,, we determined the coverage of long read alignments to chr20. There
are 78 121 long reads that have over 80% aligning to chr20; the average
length of these long reads is about 6500. Dividing the total number of
bases in these reads by the size of chr20 yields a Adof 8.06 (Supplementary
Table 1).

2.4.3 Illumina assembly We compare CHMlTERT to a reference-
guided CHMlTERT assembly (NCBI BioProject PRJNA178030). An
initial assembly was generated from 38 X coverage Illumina HiSeq2000
aligned to hg19; the assembly was then refined using 400 BAC clones for
CHMlTERT. We mapped the coordinates in the reference (hg19) to the
CHMlTERT assembly by aligning each chromosome assembly to the
corresponding chromosome in hg19 using nucmer (Delcher et al.,
2002). We retained alignments greater than 7kb and alignments that
had a one-to-one query-to-reference mapping. This was achieved with
the delta-ﬁlter ‘71’ option, which maps each position of the query to
the best hit in the reference and vice versa. We use the alignments to
map novel adjacency coordinates to the assembly.

2.4.4 Algorithms for comparison We compared MultiBreak-SV to
GASV version 2.0 (Sindi et al., 2009), Hydra version 0.5.3 (Quinlan et al.,
2010), VariationHunter version 3.0 (Hormozdiari et al., 2009), Delly

 

3461

ﬁm'spzumol‘pmjxo'sopauuopIIoIq/pdnq

#TP Variants

Venter Variant Calling Accuracy
(Receiver Operating Characteristic)

30X Pairs MBSV
30X Pairs Hydra
30X Pairs GASV
30X Pairs GASVPro

30X Pairs Delly

5X Strobe MBSV

5X Strobe Parsimony Sol.
2X/30X Hybrid MBSV

30X Pairs VH — 5X Long Reads

10
#FP Variants

!"
o

.0
oo

.0
m

.0
.[s

E
LL
+
Q.
I.
<
D.
I.
11:
E
.9
.‘Q
U
OJ
L
D.

.O
N

Venter Mapping Accuracy
(Precision and Recall)

5X Strobe MBSV

30X Pairs Hydra 5X Strobe Parsimony Sol.
30X Pairs GASV 2X/30X Hybrid MBSV
30X Pairs GASVPro — 5X Long Reads

30X Pairs VH

30X Pairs MBSV

0.4 0.6
Recall: #TP/(TP+FN)

 

/3.IO'S[BIIJI’10[pJOJXO'SOlIBLUJOJIIlOlq/ﬂdnq

Characterization of structural variants

 

Table 1. Four inversions predicted by MultiBreak-SV on simulated data
from VENTER

 

Inversion 1 Inversion 2

 

Sup. Prob FPs Sup. Prob FPs

 

2X STROBES 1 2e73 6 7 1.0 0
5X STROBES 4 1.0 0 16 1.0 0
30X PAIRs 0 7 7 50 1.0 0
2X/30X HYBRID 1 1e-3 6 57 1.0 0

 

Inversion 3 Inversion 4

 

Sup. Prob FPs Sup. Prob FPs

 

2X STROBES 10 0.921 1 1 0.0 50
5X STROBES 24 1.0 0 4 0.365 3
30X PAIRs 0 7 7 60 1.0 0
2X/30X HYBRID 10 0.479 1 61 0.5 0

 

Note: Sup. is the number of reads with a correct mapping in the dataset, Prob is the
MultiBreak—SV probability of the correct inversion, and FPs are the number of false
positives incorrect to detect the inversion.

30>< pairs due to the larger fraction of HYBRID mappings from
paired—read data.

3.2 Sequenced fosmids from NA15510

Motivated by the promising performance of MultiBreak—SV in
detecting variants on simulated data sets, we generated strobe
sequencing data for four fosmids from individual NA15510 that
were previously reported to contain SVs (Kidd et al., 2008).
Before selecting fosmids from individual NA15510 for sequen—
cing, we evaluated the detectability of the reported variants for
the 63 fully sequenced fosmids (44 deletions and 19 inversions)
from this study (Kidd et al., 2008). To identify candidates for
strobe sequencing, we simulated 30x STROBES and 30x PAIRs
datasets and selected two deletions supported by 3 5 strobes
and 3 5 pairs (D1 and D2). Additionally, we selected two inver—
sions that were supported by 3 5 strobes but not pairs (11 and
I2) (Supplementary Section 2.4).

MultiBreak—SV predicts the correct adjacency for all parameter
choices in both deletions (Table 2; Supplementary Section 2.4).
Deletions in D1 were predicted with no false positives for all
parameter choices and similarly one false positive for D2. While
both inversions were predicted using MultiBreak—SV, a number of
false positives were also predicted. This was not surprising, since
the breakpoints of the inversions lie in segmental duplications and
the majority of the multi—breakpoint—mappings were ambiguous
alignments (95% for 11 and 90% for I2 and Supplementary
Section 2.4). Interestingly, although I2 has higher sequence simi—
larity near the breakpoints than 11 (99% vs. 95%), the prediction
of I2 incurs fewer false positives than 11 (Table 2).

3.3 Sequenced CHMlTERT genome

We applied MultiBreak—SV to third—generation sequencing data
of CHMlTERT, a haploid cell line derived from a complete
hydatidiform mole (Paciﬁc Biosciences, 2013). CHMlTERT

Table 2. Results on Sequenced Fosmids

 

 

Ad =10, M, = {5, 10, 15, 20}

17m = .01 Pm =0.005 — 0.15

Accession Cov. TP FP TP FP
D1 AC158335 18X 1 0 1:l:0.00 0:l:0.00
D2 AC153483 9X 1 0 1:l:0.00 0.25:l:0.44
Il AC195776 31X 1 4 0.45:l:0.51 3.7:l:2.45
I2 AC193137 33X 1 1 1:l:0.00 0.65:l:0.67

 

Note: For each fosmid (D1, D2, 11 and 12) multiple values of A and perr were
simulated. The steps for perr in the last column are {0.005,0.01,0.05, 0.1,0.15}.
Values represent mean :l: smndard deviation.

was sequenced to 10x coverage, producing over 300000
multi—breakpoint—mappings for input to MultiBreak—SV
(Supplementary Table 2).

3.3.1 Running time of MultiBreak—S V There were nearly
250000 GASV clusters from the multi—breakpoint—mappings,
orders of magnitude larger than the number of SVs one would
expect from a human genome compared to HuRef hg19. Nearly
90% of the are clusters supported by only one long read, indicat—
ing a spurious alignment. The GASV clusters could be divided
into 131 594 independent subproblems, allowing for paralleliza—
tion. About 122 294 (93%) of the subproblems contained six or
fewer discordant pairs; we explicitly computed the probability for
every possible solution, which took at most 10s. Most of the
remaining 9300 subproblems took about a minute to run
(Supplementary Figure 15). The largest subproblem took
~4.75 days, and included 535 clusters of all types (deletions,
inversions and translocations). All 1962 fragments in this sub—
problem contained a multi—breakpoint—mapping to a highly rear—
ranged region of chrl6 ql 1.2; this region is responsible for the
dependence of all fragments in the subproblem. We have
removed this subproblem from the subsequent analysis.

3.3.2 Novel adjacencies predicted by M ultiBreak—
S V MultiBreak—SV returns the posterior probability of every
multi—breakpoint—mapping; we use these probabilities to compute
the probability than an adjacency is supported by k or more
multi—breakpoint—mappings (see Methods and Supplementary
Section 1.6). When we compute the probability that an adjacency
is supported by any multi—breakpoint—mapping (k = 1), 242 395
(98%) of the GASV clusters have an adjacency probability of
less than 0.01. These clusters consist of multi—reads that are more
often assigned an error rather than a mapping, and are consistent
with the observation of spurious alignments in the GASV clus—
ters. The remaining adjacency probabilities 3 0.01 are shown in
Figure 3. Most of the high—probability (P 3 0.9) predicted adja—
cencies are deletions, while more inversions and translocations
appear with lower probabilities. Since we used two methods to
determine deletion breakpoints, the deletions are better charac—
terized than the other types of novel adjacencies in our analysis.
When we compute the probability of adjacencies supported by
k = 5 or more mappings, there are 1034 adjacencies with a prob—
ability 30.01; 1002 with a probability 30.9 (Fig. 3). Again, there
are more deletions than other types of adjacencies; however we

 

3463

ﬁm'spzumol‘pmjxo'sopauuopIIoIq/pdnq

— Probability

Deletion (n=1974)
Inversion (n:149)
Translocatiori (n: 57)

— Probability
Deletion (ri=1014)
Inversion (n:1)
Translocatiori (n=12)

 

/3.IO'S[BIIJI’10[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq

Novel
Adjacericy

|> D l>
First Second
Read Read

|> .

 

 

153983066

Gap (32.4mm

153950386'

162475056
Illumina Assembly Chr 3

 

Illumina Assembly Chr 1

55,2kgogmoddmmowoxwoa‘oﬁsambaﬁ

A.Ritz et al.

 

Li,H. et al. (2009) The sequence alignment/map format and samtools.
Bioiry’ormatics, 25, 207872079.

Malhotra,A. et al. (2013) Breakpoint proﬁling of 64 cancer genomes reveals numer—
ous complex rearrangements spawned by homology—independent mechanisms.
Genome Res., 23, 7627776.

Mardis,E.R. (2012) Genome sequencing and cancer. Curr. Opin. Genet. Dev., 22,
2457250.

Mills,R.E. et al. (2011) Mapping copy number variation by population—scale
genome sequencing. Nature, 470, 5765.

Paciﬁc Biosciences (2013).Data release: Long—read shotgun sequencing of a human
genome. http://blog.paciﬁcbiosciencescom/2013/10/data—release—long—read—shot—
gun.html.

Peters,B.A. et al. (2012) Accurate whole—genome sequencing and haplotyping from
10 to 20 human cells. Nature, 487, 19W195.

Quinlan,A.R. et al. (2010) Genome—wide mapping and assembly of structural vari—
ant breakpoints in the mouse genome. Genome Res, 20, 623$35.

Quinlan,A.R. and Hall,I.M. (2012) Characterizing complex structural variation in
germline and somatic genomes. Trends Genet, 28, 43753.

Rausch,T. et al. (2012) Delly: structural variant discovery by integrated paired—end
and split—read analysis. Bioiry’ormatics, 28, i3337i339.

Ritz,A. et al. (2010) Structural variation analysis with strobe reads. Bioinformatics,
26, 129171298.

Roberts,R.J. et al. (2013) The advantages of SMRT sequencing. Genome Biol, 14,
405.

Schwartz,J. (2012) Inﬁnipair: Capturing native long—range contiguity by in situ
library construction and optical sequencing within an illumina flow cell.
AGBT Conference.

Sharp,A. et al. (2006) Structural variation of the human genome. Anna. Rev.
Genomics Hum. Genet, 7, 4077142.

Sindi,S. et al. (2009) A geometric approach for classiﬁcation and comparison of
structural variants. Bioiry’ormatics, 25, i2227i230.

Sindi,S.S. et al. (2012) An integrative probabilistic model for identiﬁcation of struc—
tural variation in sequencing data. Genome Biol, 13, R22.

Stromberg,M. (2010) Enabling high—throughput sequencing data analysis with
MOSAIK Ph.D. Thesis, Boston College.

Trapnell,C. et al. (2009) TopHat: discovering splice junctions with RNA—Seq.
Bioiry’ormatics, 25, 110571111.

Turner,S. (2009) Personal genomes (conference talk). Cold Spring Harbor
Laboratory, NY.

Wang,J. et al. (2011) Crest maps somatic structural variation in cancer genomes
with base—pair resolution. Nat. Methods, 8, 652%54.

Xi,R. et al. (2010) Detecting structural variations in the human genome using next
generation sequencing. Brief Fanct. Genomics, 9, 40y415.

 

3466

ﬁm'spzumol‘pmjxo'sopauuopIIoIq/pdnq

