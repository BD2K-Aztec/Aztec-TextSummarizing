APPLI CA TIONS NOTE V°" 230230.11%Sg/Zofvigrfzaifcgbtgig

 

Data and text mining

Advance Access publication June 4, 2013

BeCAS: biomedical concept recognition services and visualization

Tiago Nunes*, David Campos, Sérgio Matos and Jose Luis Oliveira*
DEl'l/IEETA, University of Aveiro, Campus Universitério de Santiago, 3810 - 193 Aveiro, Portugal

Associate Editor: Jonathan Wren

 

ABSTRACT

Summary: The continuous growth of the biomedical scientific literature
has been motivating the development of text-mining tools able to effi-
ciently process all this information. Although numerous domain-specific
solutions are available, there is no web-based concept-recognition
system that combines the ability to select multiple concept types to
annotate, to reference external databases and to automatically annotate
nested and intercepted concepts. BeCAS, the Biomedical Concept
Annotation System, is an API for biomedical concept identification
and a web-based tool that addresses these limitations. MEDLINE ab-
stracts or free text can be annotated directly in the web interface, where
identified concepts are enriched with links to reference databases.
Using its customizable widget, it can also be used to augment external
web pages with concept highlighting features. Furthermore, all text-pro-
cessing and annotation features are made available through an H'I'I'P
REST API, allowing integration in any text-processing pipeline.
Availability: BeCAS is freely available for non-commercial use at
http://bioinformatics.ua.pt/becas.

Contacts: tiago.nunes@ua.pt or jlo@ua.pt

Received on March 13, 2013; revised on May 6, 2013; accepted on
May 27, 2013

1 INTRODUCTION

Exponential growth of the biomedical literature during the past dec-
ades has prompted the development of automatic techniques and
systems to ease the task of finding relevant information in unstruc-
tured documents (Lu, 2011). However, the offer of no-installation,
no-maintenance and online modular solutions for concept annota-
tion that can be easily integrated in any text-processing pipeline is
still scarce. Whatizit (Rebholz-Schuhmann et al., 2008), for instance,
offers dictionary-based annotation of documents with a large set of
vocabularies and is available both through a web service and a web
page. Yet, annotation of concepts from different types is only pos-
sible by repeating the annotation process several times and combin-
ing the results generated by different pipelines. iHOP (Hoffmann and
Valencia, 2004) is a web application offering programmatic access to
pre-annotated abstracts from MEDLINE. It is a protein-centric
system and does not allow the annotation of external documents
submitted by the user. Another solution focused on genes, proteins
and small-molecules is Reﬂect (Paf11is et al., 2009), a web service that
annotates these concepts on web pages and provides, through pop-
ups, additional information such as synonyms, database identiﬁers
and related literature. Cocoa is a multiple concept annotator with an
online interface and an HTTP API (http://npjoint.com). It annotates
entities in user submitted text, but it is limited to named entities and
does not provide concept identif1ers or external references.

 

*To whom correspondence should be addressed.

Only few text-mining solutions for concept identification are avail-
able as web services, and most of them focus on a small number of
entity types. Of those, most omit concepts that intersect other recog-
nized concepts or that are nested within broader concepts. Moreover,
to the best of our knowledge, there is no solution available that
allows users to select the entity types they want to annotate on a
single service invocation. BeCAS, the Biomedical Concept
Annotation System, is a web-based tool for on-demand document
processing and annotation that can be integrated on larger text-pro-
cessing pipelines, used directly through a user-friendly and highly
interactive web interface or incorporated on external web pages
through a simple yet ﬂexible widget.

2 IMPLEMENTATION

BeCAS is built on top of a modular system for biomedical concept
recognition. It integrates modules for PubMed article fetching, sen-
tence splitting, tokenization, lemmatization, POS tagging, chunking,
concept identiﬁcation, abbreviation resolution, external database
identif1er tagging and interactive Visual concept highlighting. The
text-processing modules were implemented in Java, the article fetch-
ing modules and web-services were built in Python and the web
interface was developed using HTML, CSS and Javascript.
Sentence splitting, tokenization, lemmatization, POS tagging and
chunking are provided by a customized version of GDep (Sagae
and Tsujii, 2007), a C++ parser wrapped by our Java modules.
Concept identification modules for recognizing species, anatomical
concepts, miRNAs, enzymes, chemicals, drugs, diseases, metabolic
pathways, cellular components, biological processes and molecular
functions apply deterministic f1nite automatons for dictionary
matching. For this, we compiled a database of concepts from mul-
tiple meta-sources, including UMLS (Bodenreider, 2004), LexEBI
(Sasaki et al., 2008), Jochem (Hettne et al., 2009) and NCBI
BioSystems (Geer et al., 2010). Genes and proteins are identified
using a Conditional Random Fields tagger with entity normaliza-
tion, built over Gimli (Campos et al., 2013).

The various concept recognition modules were tested on the
CRAFT (Bada et al., 2012), AnEM (Ohta et al., 2012) and NCBI
Diseases (Dogan and Lu, 2012) corpora, achieving f-measure results
for overlap matching of 76% for genes and proteins, 95% for spe-
cies, 65% for chemicals, 83% for cellular components, 92% for cells,
63% for molecular functions and biological processes, 83% for ana-
tomical entities and 85% for diseases. These results are on par with
current state-of-the-art biomedical annotation systems.

3 ANNOTATING BIOMEDICAL TEXT

BeCAS exposes its functionalities through three interfaces: an HTTP
REST API, a widget embeddable in web pages and an interactive
web application. It provides annotations both for user-supplied texts

 

© The Author 2013. Published by Oxford University Press. All rights resen/ed. For Permissions, please email: journals.permissions@oup.com 1915

112 /310'S[BHJHO[pJOJXO'SOIJBLUJOJIIIOTCI”Zduq mot; popcolumoq

91oz ‘Og anﬁnv uo ::

T.Nunes et al.

 

 

 

Fig. 1. BeCAS web interface showing an annotated PubMed abstract.
Each annotated entity type can be highlighted separately (left). The
concept tree (bottom) displays all annotations along with the associated
concepts and external references

and for MEDLINE abstracts, which are automatically fetched
from PubMed.

3.1 Exploring annotations on a web interface

BeCAS web interface was built with a strong focus on usability.
Specific entity types can be highlighted or muted in real-time by
using simple toggle controls, and nested and intersected annotations
are also easily identiﬁed by the colour-coding scheme used. An info-
box with links to external databases is displayed by placing the
mouse over highlighted entities, and users can explore this same in-
formation, grouped by concept type, through the concept tree
(Fig. 1). Annotated text can be exported in several formats such as
JSON and A1. Users and other websites can link to annotated
PubMed publications by using direct links (e.g. http://bioinfor
matics.ua.pt/becas/pmid/22957306).

Concept highlighting with external references can easily be inte-
grated in any website through the use of the BeCAS Javascript
widget. Host pages only need to include a <script> tag linking to
the plugin and a few conﬁguration parameters. Every feature imple-
mented in the main web interface is exposed by the widget, apart
from the concept tree.

3.2 Processing text and MEDLINE publications

Text can be annotated programrnatically using one of BeCAS HTTP
REST endpoints. Clients should make HTTP POST requests to one
of the endpoints with a J SON encoded payload, specifying the text
to annotate, the desired output format and types of entities that
should be annotated. Because of inherent representation constraints,
the available output formats support different levels of granularity
in the results. CoNLL format is the most comprehensive,
providing sentence splitting, tokenization, lemmatization, POS tag-
ging, chunking and identification of isolated, nested and intersected
concepts. J SON format includes sentence splitting and concept
identiﬁcation. IeXML formatted results contain the same informa-
tion as J SON, but nested and intersected annotations are limited to a
depth of one level, with deeper annotations resolved to the largest

span. Results in A1 format provide concept identifiers, including
nested and intersected annotations.

Apart from supplying text directly to the API, BeCAS is capable
of fetching and annotating PubMed articles. A client can issue an
HTTP POST request to one of the abstract annotation endpoints,
optionally providing a JSON-encoded payload of entity types for
annotation. As publications have multiple fields, such as the title,
abstract, authors, MeSH terms and others, results are provided
exclusively as PubMed annotated IeXML or J SON. The service re-
turns XML documents delivered by the Entrez eFetch Utility, with
the ‘ArticleTitle’ and ‘AbstractText’ fields enriched with IeXML
annotations.

Comprehensive documentation of all API methods and param-
eters, along with usage examples, is available online.

4 CONCLUSION

BeCAS provides three distinct user interfaces for biomedical concept
identification, presenting state-of-the-art performance, as evaluated
on various corpora. It currently recognizes and annotates 1.2 million
concepts and enriches them with 1.6 million external references to 30
online resources. The REST API is suitable for integration in custom
text-processing pipelines, whereas the widget can be easily integrated
in any web page. Finally, users can also use BeCAS annotation ser-
vices as a stand-alone web application. In the future, we plan to add
support for more entity types and continue to improve annotation
performance, with focus on concept disambiguation.

Funding: This work was supported by Fundacao para a Ciencia e
Tecnologia [PTDC/EIA-CCO/10054l/2008 (FCOMP-01-0124-
FEDER-010029)] and FCT Ciéncia2007.

Conﬂict of Interest: none declared.

REFERENCES

Bada,M. et al. (2012) Concept annotation in the CRAFT corpus. BMC
Bioinformatics, 13, 161.

Bodenreider,O. (2004) The uniﬁed medical language system (UMLS): integrating
biomedical terminology. Nucleic Acids Res., 32 (Suppl. 1), D2677D270.

Campos,D. et al. (2013) Gimli: open source and high—performance biomedical name
recognition. BMC Bioinformatics, 14, 54.

Dogan,R.I. and Lu,Z. (2012) An improved corpus of disease mentions in PubMed
citations. In Proceedings of BioNLP’I2. Association for Computational
Linguistics.

Geer,L. et al. (2010) The NCBI biosystems database. Nucleic Acids Res., 38 (SuppL
l), D4927D496.

Hettne,K. et a]. (2009) A dictionary to identify small molecules and drugs in free
text. Bioinformatics, 25, 298%2991.

Hoffmann,R. and Valencia,A. (2004) A gene network for navigating the literature.
Nat. Genet., 36, 664664.

Lu,Z. (2011) Pubmed and beyond: a survey of web tools for searching biomedical
literature. Database, 2011, baq036.

Ohta,T. et al. (2012) Open—domain anatomical entity mention detection. In
Proceedings of DSSD 2012, ACL’12, pp. 27736.

Pafilis,E. et al. (2009) Reﬂect: augmented browsing for the life scientist. Nat.
Biotechnol., 27, 5087510.

Rebholz—Schuhmann,D. et a]. (2008) Text processing through web services: calling
Whatizit. Bioinformatics, 24, 2967298.

Sagae,K. and Tsujii,]. (2007) Dependency parsing and domain adaptation with
LR models and parser ensembles. In Proceedings of EMNLP—CoNLL’07
shared task, Vol. 7, pp. 10441050.

Sasaki,Y. et al. (2008) BioLexicon: a lexical resource for the biology domain. In
Proceedings ofSMBM 2008, Vol. 3, pp. 10%116.

 

1916

112 /310'S[BHJHOIPJOJXO'SOIIBLUJOJIIIOICIHIdllq uiori papeolumoq

9103 ‘Og isanV uo ::

