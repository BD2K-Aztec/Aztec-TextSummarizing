BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Y.Zhao et al.

 

introduced in Supplementary Fig. S1 in Supplementary Material). The
average branch length (B“"g(n)) or node depth (D“"g(n)) of every strain
pair in a given combination G(n) represented genome diversity of the
combination G(n) and were calculated using the following formulas,
respectively.

, l
B“‘g(n)=g Z By-

" l§i<j§n

, l
D“‘g(n)=a 2 Da-

" l§i<j§n

In model A, six methods were provided, which were introduced in
Supplementary Material.

Model B: Genome diversity was characterized by the difference of each
strain’s gene number. For each combination G(n), the total gene number
of all strains (marked as Sum _geneNum) and the variance of gene num-
bers among those strains (marked as Dev _geneNum) were calculated by
two different formulas, shown as follows.

VSum,geneNum(n) = Z gi

151’ng

l/2
VDm'gem’NumU') = < Z (gi _ VS"’"‘*'”"W”"("V")2)

151’ng

Note: VSumgW/VZWM) means the Sum_geneNum value; VDm._ge,,eNum(n)
means the Dev _geneNum value; g,» is the gene number of the ith strain.
Model C: Genome diversity was characterized by the discrepancy
among gene clusters. For each combination G(n), the average number
of the different gene clusters between two strains (marked as
Dev _geneCluster) was calculated to represent genome diversity in
a given combination G(n). The value of Dev _geneCluster
(VDW£L,,,BCZMW(n)) is calculated by the following formula.

1
VDev.geneClu\'ter(") = a Z 

" l§i<j§n

Note: Cl]- is the number of different gene clusters between the 1th and jth
strains.

2.4 Evaluate the performance of sampling algorithm

To evaluate the accuracy of sampling algorithm, the pan-genome size and
core genome size of n (l 5 n 5 N) strains were calculated by TR and DG
algorithms. Real data were calculated without sampling; ampliﬁcation
coefﬁcient k was set to 4; and the simulation were carried out with the
sample size set to 300, 500, 800, 1000, 2000, 3000, 5000, 8000 and 10000.
For each population, the simulation for two sampling algorithms was
repeated 100 times respectively. The accuracy for every simulation
result was measured by root mean square (RMS) value, which calculated

the deviation between sample result (Egml‘lm‘MM) and E‘Zﬁf’ﬂé‘l“””"(n)) and
real data (G”’“l(n) and Gm” (n)) at each point.

pun core

2

1 N =.. . ,
RMSummy = (iv (2(G:,§;’;3W"(n) — G::)'::(n))
":1

N 2 1/2
+ Z<Ezmulution(n) _  n)) 
":1

The stability for every simulation result was also measured by RMS
value, which calculated the deviation between the ith simulation result

(ngr’f‘lm‘mKn) and E‘W‘M‘m‘m», and the jth simulation result (ngr’f‘lmW/(n)

a) re

and Eliml‘lm‘m/(nD at each point (1 5 i < j 5 100).

a) re

. . 1 N = . . = . . 2
2.] _ 2 .vzmulumm- .vzmulutmn
RMSVMbility _  (Game [(n) _ Gmre /(n))

":1

N 1 / 2
_ _ 2
_.\'imuluti(m- _.\'imuluti(m
+ 2(9)” ‘00 — GM /(n)) 
n: l

2.5 Nonlinear fitting for the pan-genome proﬁle

When the pan-genome size and core genome size of n strains (1 5 n 5 N)
were available, a series of mathematics models (Supplementary Material)
were used to depict pan-genome size, core genome size and new gene size.

3 RESULTS

The performance of sampling algorithms. It was found in
Supplementary Fig. S1 that genome diversity, characterized by
Dev _geneCluster method in Model C, exhibited strong correl—
ation to pan—genome size, and difference in gene cluster number
may primarily affect pan—genome size. Hence, we take
Dev _geneCluster as the method to characterize genome diversity
in the DG algorithm. The performance of two sampling algo—
rithms was estimated from three aspectsiaccuracy, stability and
time cost. Seen from Supplementary Figs S27S4, the result from
the DG algorithm was closer to the real data and more stable
than the TR result with the same sample size. For the same
species, population size almost did not affect the accuracy and
stability of the two sampling algorithms. When the sample size
was set to 500, the error proportion in the total gene clusters,
either between the DG result and the real data or between any
two sample results from the DG algorithm, were <0.l% in all
test populations. Regarding time cost, the DG algorithm took
slightly more time than the TR algorithm with the same sample
size (Supplementary Table S1). When sample size was set to 500,
the analysis for £50 genomes could be ﬁnished within 3min.

Application for PanGP. Among pan—genome analysis tools,
PGAP, a comprehensive pan—genome analysis pipeline with
five modules, could only deal with small—scale genomes in the
pan—genome proﬁle analysis module, while PanGP was a highly
efﬁcient tool for large—scale bacterial pan—genome profile analysis
with sampling algorithms. Besides TR and DG algorithms, an—
other one named traverse all algorithm (TA algorithm) was also
provided in PanGP. When TA algorithm was selected, the pan—
genome profile would be analysed without sampling. PanGP
required orthologs information as the input data, which could
be generated by series of software, such as PGAP (Zhao et al.,
2012), OrthoMCL (Li et al., 2003) and PanOCT (Fouts et al.,
2012), with the format introduced in the online manual. When
sampling finished, the pan—genome proﬁle would be present as
curves images (shown as Supplementary Fig. S5). The curves
images could be revised and exported via the user—friendly gra—
phic interface, and non—linear ﬁtting with three mathematic
models was also available for pan—genome size, core genome
size and new gene size. More usages about PanGP were provided
in the online manual.

Funding: The National Basic Research and Development
Program (973 Program; 2010CB126604 to J.X.); National
Programs for High Technology Research and Development
(863 Program; 2012AA020409), the Ministry of Science and
Technology of People’s Republic of China; Key Program of

 

1 298

ﬁm'spzumofpmyo'sopeuHOJmorq/ﬁdnq

PanGP

 

Chinese Academy of Sciences grant (KSZD—EW—TZ—009—02
to J .X).

Conﬂict of Interest: none declared.

REFERENCES

Baumdicker,F. et a]. (2010) The diversity of a distributed genome in bacterial popu—
lations. Ann. App]. Pro/mix, 20, 156771606.

Fouts,D.E. et a]. (2012) PanOCT: automated clustering of orthologs using con—
served gene neighborhood for pan—genomic analysis of bacterial strains and
closely related species. Nucleic AcidS Re.\'., 40, e172.

Hogg,J.S. et a]. (2007) Characterization and modeling of the Haemophilus inﬂuen—
zae core and supragenomes based on the complete genomic sequences of Rd and
12 clinical nontypeable strains. Genome Biol., 8, R103.

Laing,C. et a]. (2010) Pan—genome sequence analysis using Panseq: an online tool
for the rapid analysis of core and accessory genomic regions. BMC
Bioiiy’ormuticx, 11, 461.

Li,L. et a]. (2003) OrthoMCL: identiﬁcation of ortholog groups for eukaryotic
genomes. Genome Re.\'., 13, 2178r2189.

Medini,D. et a]. (2005) The microbial pan—genome. Curr. Opin. Genet. Dev., 15,
5897594.

Tettelin,H. et a]. (2005) Genome analysis of multiple pathogenic isolates of
Streptococcus agalactiae: implications for the microbial “pan—genome". Proc.
Natl Acud. Sci. USA, 102, 13950713955.

Tettelin,H. et a]. (2008) Comparative genomics: the bacterial pan—genome. Curr.
Opin. Micro/7iol., 11, 4724177.

Zhao,Y. et a]. (2012) PGAP: pan—genomes analysis pipeline. Bioiiy’ormuticx, 28,
416—418.

 

1 299

/810's112um0fp10}x0'sopBLuJOJuioiq”:duq

