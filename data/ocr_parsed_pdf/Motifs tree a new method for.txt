BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Motifs tree for PTMs prediction

 

These motifs are combined using a binary decision tree (DT).
Our choice is mainly motivated by the need for white box models,
that is, to say classiﬁers that are interpretable by biologists to
help identifying the required biological features.

The method described in this article is tested by evaluating its
capacity to predict the IMC and the Na—Ac of eukaryotic pro—
teins. The choice of predicting those PTMs has been made be—
cause several methods to predict Na—Ac have been published,
which allow us to test the efﬁciency of our method by compari—
son. The published methods range from black box machine learn—
ing methods (ML), e.g. support vector machines (Liu and Lin,
2004) and artiﬁcial neural networks (Lars et al., 2005), to manual
pattern detection (‘by eye’). For example, Martinez et a]. (2008),
Cai and Lu (2008) and more recently Bienvenut et a]. (2012)
predicted PTMs using manually extracted rules based only on
the information provided by the ﬁrst two or three amino acids in
the sequence, which may be insufﬁcient to predict correctly the
PTMs.

2 METHODS

Our method is based on combinations of biomolecular motif descriptors.
Each descriptor can then be used to compute a similarity score by align-
ing the descriptor with an amino acid sequence (Gonnet and Lisacek,
2002). These scores are then compared with cutoff values to discriminate
sequences into two groups (Bucher et al., 1996). These descriptors are
then combined in a DT, where they correspond to the test nodes. We call
such model a motifs tree.

Dataset. Because our method relies on supervised machine learning, we
need good-quality datasets to train the classiﬁers. All data used in this
study were extracted from the release 2012_07 of UniProtKB (11 July
2012). (i) Na-Ac dataset. To extract entries from UniProtKB, we build
two queries, one for the Na-acetylated proteins and one for proteins that
do not undergo Na-Ac. Our datasets were based only on experimental
evidence. We select entries in the database according to the following
criteria: each entry must have been reviewed by a UniProtKB curator;
its existence must be experimentally proven and a chromosomic gene
must be linked to the entry. An entry is labeled as Na-acetylated
(N-Ac) if the residue exposed to the Nat is annotated as N-acetyl. The
acetylation must also be experimentally proven. An entry is labeled as
non-Na-acetylated if the exposed N-termial residue is not annotated as
N-acetyl (regardless the conﬁdence) and one reference must state that the
entry has been sequenced at protein level with a method able to detect
eventual acetylation. Proteins with N-terminal residues blocked by an
unidentiﬁed modiﬁcation are discarded. Those criteria are detailed in
Supplementary Information A (see ‘2.1 Criteria used to build the
datasets’). Although it is known that Na-Ac is not always a total modi-
ﬁcation, this fact is currently not taken into account in the available
protein databases. Hence, we qualify a protein as acetylated if the
PTM was experimentally observed, regardless of the modiﬁcation ratio.
The extraction process was repeated for several taxonomic groups.
Table 1 shows the sizes and the PTM ratio of the datasets extracted
from UniProtKB depending on the chosen taxon: Eukaryota, Metazoa
and Homo sapiens. We also stress that the taxon datasets are not mutually
exclusive: 79% of the Eukaryota dataset is composed by Metazoa se-
quences and 65% of the Metazoa dataset is composed by H.3apiens se-
quences. (ii) IMC dataset. There is no speciﬁc query to build an IMC
dataset. Our IMC datasets were extracted from the Na-Ac datasets by
checking the presence of the feature of type initiator methionine with the
value removed. The criteria used for the Na-Ac datasets imply experimen-
tal evidences for the IMC too. In the case of the IMC datasets, we have
kept 33 proteins that were ﬁltered out of the Na-Ac dataset because the

Table 1. Number of sequences and content of the different datasets ex-
tracted from UniProtKB for the two considered PTMs: the IMC and the
Na-Ac

 

 

 

Taxon Initiator Met cleavage Na-Terminal acetylation
Number of Ratio Number of Ratio
sequences sequences

Eukaryota 2519 0.72 2486 0.64

Metazoa 2004 0.72 1971 0.71

H.3apiens 1322 0.69 1289 0.87

 

Note: The ‘Ratio’ column indicates the ratio of proteins undergoing the correspond—
ing PTMs.

method used to sequence the N-terminus was not able to determine
acetylation, while being able to determine the IMC status. The datasets’
composition is detailed in Table 1.

Model. There are several approaches to deﬁne the motif descriptors:
regular expression, consensus sequence with degenerated positions, con-
sensus sequence with mismatches, weight matrix, ﬂexible pattern, proﬁle
and so on (Bork and Gibson, 1996; Bucher et al., 1996). We will, in the
context of this study, deﬁne a motif as a sequence of elements called here
token. The ﬁve categories of tokens we used are presented along with
their similarity measure with an amino acid. The similarity of an amino
acid a with a token t is denoted by a(t,a), and ranges between 0 and 1.

0 Any amino acid: this token matches with any amino acid and its
similarity measure is always 1. This token is represented with the
symbol ‘0’.

o Fixed amino acid: which are tokens imposing a match with a single
amino acid. The similarity measure is 1 if and only if the token is
aligned on the amino acid described by the token, otherwise it is 0.

Inclusion: these tokens describe sets of amino acids. The similarity
measure is 1 if and only if the token is aligned on an amino acid
included in the set, otherwise it is 0. For instance [ACM] is a token
having a similarity measure of 1 with Ala, Cys and Met and 0 with
the other amino acids.

0 Exclusion: these tokens are the complement of the previous one. The
token similarity measure is 1 if and only if the token is aligned on an
amino acid not included in the amino acids set described by the
token, otherwise it is 0. For instance —' [EPT] has a similarity of 0
with Glu, Pro and Thr and 1 with the other amino acids.

Physicochemical similarity: which are tokens describing how similar
is an amino acid to a reference amino acid according to a
physicochemical property (the AAindexI database, Kawashima and
Kanehisa, 2000). Those tokens are represented by the reference
amino acid r, followed by the AAindexI p (i.e. t: {r,p}). For ex-
ample, {S, KYTJ 82 0101} is a token where the amino acids with
a similar hydropathy index (Kyte and Doolittle, 1982) than Ser have
a high similarity score. The similarity is computed as follows:

U({r,17},a) = 1 — 1130‘) -13(a)|
where 13(X) is the value of the property for X, normalized between 0 and 1.

Although we restricted our choice only to these ﬁve types of tokens, to
keep the model as simple as possible, these tokens generate ~2 X 106
possibilities (as there exist 220 possible sets of amino acids). The previous
deﬁnition of tokens allows building a similarity matrix between the 20
amino acids and the tokens. Then to compute a similarity score between a

 

1 975

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

C. Charpilloz et al.

 

motif and a sequence, we use the NeedlemaniWunsch algorithm with the
similarity matrix to obtain the score of the best possible global alignment
between a motif and an amino acids sequence.

These motifs are then combined in a DT manner. The need of combin-
ing motifs arises because a single motif, as described above, was not able
to produce an accurate prediction for the Na-Ac prediction. A DT uses
motifs as nodes and class labels as leaves. A sequence ‘moves’ down in the
tree the following way: (i) When a sequence reaches a node, it is aligned
with the node’s motif to get a similarity score. This score is then com-
pared with the node threshold (cutoff values) to select the next branch to
take. (ii) When a sequence reaches a leaf, it is classiﬁed as undergoing a
speciﬁc PTM or not, depending on the leaf label. This representation is
highly readable: each path in the tree from the root to a given leaf can be
represented as a logical clause in conjunctive normal form.

Building the motifs tree. The algorithm used to build a motifs tree is
similar to C4 .5 (Quinlan, 1992). This algorithm recursively adds test
nodes that split the training set. In our case, the tests conducted by the
nodes are based on a motif and its alignment with a sequence. To choose
a motif at each node, the C4.5 algorithm selects the best motif among all
possible motifs, that is to say the one yielding two subsets with the best
class separation. The problem is that with the symbols used to describe
our motifs, there exist ~106‘” possible motifs of length n. For example,
searching the best motif of length 5 means searching the best motif among
1030 motifs.

Because an exhaustive search for the best possible motif is not feasible,
we cannot use the C4 .5 algorithm. Therefore, we relied on GA (Goldberg,
1989) to explore the motif space (i.e. the set of all possible token se-
quences). The idea is that we may not need the best possible motif to
build the motifs tree, but a good approximation of the best motif is
probably enough.

Approximating the best motif. Genetic algorithms generate a solution
to an optimization problem by mimicking Darwinian evolution (repro-
duction, inheritance, mutation and selection) to explore the space of ad-
missible solutions. The idea is to reproduce a survival-ofthefittest model,
where several solutions of the problem are generated, then modiﬁed by
bio-inspired methods and the best ones are selected for the next round of
evolution. In the GA terminology, an admissible solution of the problem
is called an individual, its representation in the GA is called a genome and
its elements, genes. The individuals of the evolution process form the
population. To understand how we used the GA to approximate the
best motif, we need to deﬁne what is an individual, what is the initial
population, how the fitness function is computed and which genetic op-
erators are used.

In our setup, an individual is a token sequence of variable length. The
initial population is randomly created by generating n individuals with m
tokens, randomly drawn from the category of token described in the
model section, with m equal to the length of the sequences in the dataset
(six amino acids in this study). The ﬁtness function used is based on the
normalized information gain ratio (Russell and Norvig, 2010) and the
Matthews correlation coefﬁcient (MCC) (Matthews, 1975). The best
threshold is selected among all different scores evaluated in the set. To
do so, we consider each score as a potential candidate for the threshold,
so each of them is used sequentially as a cutoff value. As the cutoff value
allows splitting the training data, the information gain ratio can be com-
puted and the score maximizing this gain is chosen to be the threshold.
Then we compute the MCC based on the split induced by the threshold.
We used the following GA operators: (i) The k-tournament selection
operator. (ii) The one point crossover, where the same break point is
used in both parents to produce two new offspring of the same length
(Banzhaf et al., 1998). The break point is randomly chosen at each ap-
plication of the operator. (iii) The one point mutation, which changes the
value of one gene in the individual. Our mutation operator can add a
random new token, delete a random token or substitute a token in the
motif at a random position by a random new token. (iv) We deﬁne a

plague operator, which is used to simplify an individual (i.e. a motif).
This operator removes the tokens that do not improve the quality of the
solution, and simpliﬁes inclusion and exclusion tokens. Therefore, this
operator improves the readability of a motif without altering its discrim-
inant power. This step is important because we try to build an interpret-
able model. All operators used along with model parameters are detailed
in Supplementary Information A (‘1 Genetic algorithm’).

The retained parameters are Tournament size: 5; Population size: 250;
Max generations: 150; Mutation probability: 0.75; Number of plague
“remove”: 20; Number of plague “clean”: 100; Number of amino acids:
6; Gappenalty: —0.0625; Pruningfactor (oz): 0.5 and Bucket size: 6. They
were chosen by scanning a wide range of values (data not shown). We
observed that the method performance is independent of the chosen
values for most of the parameters. For example, reducing the maximum
generations does not change the quality of prediction but produces deeper
trees. The only parameter that affects the quality of prediction is the size
of the fragment used for the alignment (the ‘Number of amino acids’
parameter in Supplementary Information A and Table A1). This param-
eter speciﬁes the number of amino acids taken into account for the align-
ment. During tests, we noticed that fragments that are too long, e.g. 15
amino acids, produce classiﬁers with poor generalization capacities (see
Section 3.1). Therefore we used the minimum size that disambiguates the
proteins undergoing and not undergoing Na-Ac.

Software to build a motif tree. All software used to build our model,
namely a motif tree, has been developed by the authors.

3 RESULTS

In this section, we first assess the learning capability of our
method by evaluating the quality of the predictions obtained
with the datasets extracted from UniProtKB. We then compare
our predictors with the state of the art used to predict IMC and
Na—Ac.

3.1 Generalization and stability

Two potential problems arise from the algorithm we used to
build our classiﬁer. The first (common to all machine learning
algorithms) is a lack of generalization, which is the ability of the
algorithm to correctly classify proteins that are not present in the
training set. The second problem is the stability of our model,
that is to say the consistency of the results despite the stochastic
nature the GA. We have no guarantee that every GA evolution
will converge to a good solution.

Cross—validation (CV) is a widely used process to evaluate
generalization of a classiﬁer, allowing us to estimate the average
generalization error of a ML method (Hastie et al., 2001). To
evaluate the stability, we simply applied 10 independent stratiﬁed
10—fold CVs on our datasets, combining the CV results to obtain
the average and the standard deviation. So, if the CV results have
a high average classiﬁcation score with low standard deviations,
the method is stable and produces classiﬁers with good general—
ization capability. Because we are only taking into account the
first six amino acids, redundancies and ambiguities appear in the
dataset. Therefore, we have removed those duplicates from the
training set of each fold. This ensures that the test set contains
only sequences never seen during the learning phase. More de—
tails are provided in Supplementary Information A (‘2.3
Redundancy and ambiguities resolution’). The CV results are
presented in Table 2.

 

1976

ﬁre'spzumofpmﬂo'sopeuuopnorq/pdnq

Motifs tree for PTMs prediction

 

Table 2. Results assessing the quality of the IMC prediction and Na-Ac
prediction

 

 

PTM Taxon Accuracy Sensitivity Specificity MCC

IMC Eukaryota 0.93 0.95 0.89 0.83 (0.0001)
Metazoa 0.94 0.96 0.91 0.86 (0.0002)
H.sapiens 0.95 0.96 0.93 0.89 (0.0001)

N-Ac. Eukaryota 0.84 0.89 0.76 0.65 (0.0001)
Metazoa 0.85 0.90 0.73 0.64 (0.0002)
H.sapiens 0.93 0.96 0.59 0.56 (0.0006)

 

Note: Score values are the mean on 10 independent stratiﬁed CVs, each made with
10—folds. The MCC standard deviation is given in parentheses.

We can see that the learning and generalization capabilities of
our method are good for both IMC and Na—Ac, as it is shown by
the classiﬁcation scores. However, we must pay attention to the
accuracy values. Because our training set classes are imbalanced,
a trivial classiﬁer could easily reach a high accuracy. For in—
stance, 87% of human proteins are acetylated in our dataset,
and a bad classiﬁer that predicts all proteins as acetylated will
obtain an accuracy score of 0.87. To evaluate our results, we then
compare the obtained accuracy score against a so—called baseline
(the ‘Ratio’ columns in Table 1), which is the proportion of the
majority class in the training set. All classiﬁers obtained here
display a signiﬁcant improvement over the baselines of our train—
ing sets. For example, with the Eukaryota dataset, the accuracy
rises from 0.72 (baseline) to 0.93 in the case of IMC. In the case
of Na—Ac, it rises from 0.64 (baseline) to 0.84. The results also
show that the method is stable because the standard deviation is
<1% of the classiﬁcation scores, meaning that every run will
produce a good classiﬁer.

3.2 Comparison with TermiNator3

Now that we know that our method is reliable, we compare our
method with the state of the art: T ermiNator3 (Martinez et al.,
2008). We choose not to compare our model against NetAeet,
another well—known Na—Ac predictor, because it has only been
trained on NatA substrates from Saeeharomyees cerevisiae. For
this comparison, we trained our classiﬁers with the full datasets
(instead of running a CV experiment) described above, one for
each taxon: Eukaryota, Metazoa and H.sapiens and for each
PTM: Na—Ac and IMC. Six predictors were produced, whose
performances were compared with T ermiNator3. Those trainings
are justiﬁed by the fact that, now that we are convinced that our
model generalizes well and is stable, we wanted to use all the
available information to build the most accurate predictors.
Moreover, the patterns used by T ermiNator3 seem to have
been built based on their full dataset. The comparison is pre—
sented in Table 3 and we obtained cross—validated results close to
T ermiNator3 with our method (Table 2). When trained on the
full dataset, results are on par with T ermiNator3 for the predic—
tion of IMC. However, our classiﬁers perform better than
T ermiNator3 for Na—Ac prediction.

3.2.] Potential NatB and NatC As it was introduced above,
several enzymes catalyze the Na—Ac; however, the information
regarding the Nats catalyzing the PTM is rarely available. But by
looking at the known speciﬁc substrates, authors have proposed
substrates to identify the Nat catalyzing the acetylation depend—
ing on the first two amino acids. For the NatB, the following
substrates are proposed: MD—, ME—, MN—; for the NatC, the
following substrates are proposed: MF—, MI—, ML—, MW—
(Polevoda et al., 2009).

Unfortunately, the number of experimentally identiﬁed sub—
strates of those speciﬁc Nats is scarce. To estimate the capability
of our classiﬁers regarding NatB and NatC substrates, we built
two new datasets: one for potential NatB and one for potential
NatC. From the Eukaryota dataset, all proteins matching the
theoretical requirements for NatB or C are considered as poten—
tial substrates and extracted into those new datasets. The pro—
teins are extracted with their original class (i.e. Na—acetylated or
not Na—acetylated) because not all proteins matching the sub—
strates are acetylated.

We applied a 10—fold CV on the whole Eukaryota dataset.
Then, we measured the performance of the model only on the
potential NatB and NatC. The results in Table 4 display that the
patterns used in T ermiNator3 are too stringent. The results show
that if a sequence starts like the NatB—proposed substrate, it is
always classiﬁed as Na—acetylated (the sensitivity is 1.0 and the
speciﬁcity is 0.0). For the sequences starting like the NatC—
proposed substrates, it is the opposite (the sensitivity of 0.0
and the speciﬁcity of 1.0), indicating that all these sequences
are classiﬁed as not Na—acetylated. Therefore, in both cases the
MCC obtained is 0.0, meaning that in this case T ermiNator3
performs no better than random prediction. The pattern used
by T ermiNator3 (Martinez et al., 2008) takes only into account,
at most, the ﬁrst three amino acids, but the information provided
by these three amino acids is probably insufﬁcient to decide
whether a protein undergoes Na—Ac. Our model takes into ac—
count the ﬁrst six amino acids and produces a cross—validated
MCC >0.0; therefore, it performs better than random. So, our
model has been able to ﬁnd speciﬁcities between proteins
undergoing Na—Ac, as it is showed by the increase of specificity
in the case of the NatB substrates (+0.39) and the increase of
sensitivity in the case of the NatC substrates (+0.55).

Finally, we tested our predictor on the five experimentally
identiﬁed substrates of NatB and C in H.sapiens (Starheim
et al., 2008, 2009). As shown in Table 5, all substrates were cor—
rectly predicted by the motifs tree. This shows that our model is
able to discover subtle features speciﬁc to those proteins, even
when they are accounting only for <20% of the whole dataset.

3.3 Analysis of the initiator Met cleavage motifs tree

The main goal of this article is to present a new automatic ap—
proach to predict PTMs based only on the protein primary struc—
ture, called motifs tree, and we have presented the performances
of our classiﬁers to predict Na—Ac and IMC. In this section, we
will show how we can use our model to infer knowledge about
the underlying biological process (e.g. enzymeisubstrate speciﬁ—
city). Owing to the lack of space, we will illustrate this feature by
analyzing the smallest motifs tree, predicting IMC in H .sapiens.
However, the same approach can be applied to all motifs trees

 

1 977

ﬁre'spzumofpmjxo'sopeuuopnorq/pdnq

C. Charpilloz et al.

 

Table 3. Prediction scores for Terminus (our online predictor) and TermiNator3

 

 

 

 

 

 

Taxon Service Initiator Met cleavage Na-Terminal acetylation
Accuracy Sensitivity Specificity MCC Accuracy Sensitivity Speciﬁcity MCC
Eukaryota Terminus 0.99 0.99 0.99 0.98 0.99 0.98 0.99 0.97
TermiNator3 0.96 0.99 0.89 0.91 0.87 0.92 0.77 0.71
Metazoa Terminus 0.99 0.99 0.99 0.98 0.99 1.0 0.96 0.96
TermiNator3 0.97 1.00 0.90 0.92 0.88 0.92 0.80 0.72
H.sapiens Terminus 0.99 0.99 0.99 0.97 0.99 0.99 0.96 0.96
TermiNator3 0.97 0.99 0.92 0.93 0.90 0.91 0.82 0.63
Table 4. Cross-validated scores obtained by Eukaryota classiﬁers versus TermiNator3
Service Potential substrate Number of sequences N-Acet. Accuracy Sensitivity Speciﬁcity MCC
Motifs tree NatB 384 0.91 0.89 0.93 0.39 0.31
TermiNator3 0.90 1.00 0.00 0.00
Motifs tree NatC 100 0.38 0.66 0.55 0.73 0.28
TermiNator3 0.64 0 .00 1.00 0.00

 

Note: The Potential substrate means that only sequences matching to the potential NatB or potential NatC substrates are considered. The ‘N—Acet.’ column indicates the ratio

of sequences undergoing Nu—Ac in each dataset.

Table 5. Predictions of acetylated proteins with known Nats using the Terminus H.sapiens classiﬁer

 

 

UniProt ID Taxon Sequence Nat Terminus TermiNator3
Q04206 H .sapiens MDELFPL B Ac-M( 1) Ac-M( 1)
Q9NVJ2“ H.sapiens MLALISR C Ac-M(l) M(1)

P423 45 H .sapiens MLGTGPA C Ac-M( l) M(1)
P31943“ H.sapiens MLGTEGG C Ac-M(l) M(1)
P52597“ H.sapiens MLGPEGG C Ac-M(l) M(1)

 

Note: The ‘Sequence’ column displays only the ﬁrst seven amino acids of the protein exposed to the Nat. The ‘Nat’ column indicates which Nat
catalyzes the N”—Ac. The ‘Terminus’ and the ‘TermiNator3’ columns indicate, respectively, the prediction of the services. “Sequences used to build the

classiﬁers.

(article in preparation). For details about the other motifs trees
produced for this article, see Supplementary Information B
(‘1 Motifs trees’).

The analyzed tree is the product of a training on the full
H.sapiens dataset. We point out that the motifs found during dif—
ferent runs of training are close and combined in similar trees. As
it seems that all learning phases converge to a particular point in
the solution space, we can focus our analysis on one motifs tree.

As this model is based on combination of motifs, it can be
interesting to analyze the discovered motifs to propose assump—
tions about the substrates of the enzymes catalyzing the chemical
process of a given PTM. Hence, we studied how sequences are
split at each node and we tried to extract the features that

separate the two sets of sequences induced by the split. Let us
note that there are two genes encoding for MetAPs in human,
MetAPl and MetAP2 (Bradshaw et al., 1998), but the informa—
tion about which enzyme catalyzes the cleavage is not known
and is not taken into consideration in the model. Also, even if
it does not add information, the initiator Met is kept in the
sequences.

First of all, we see that the motifs tree (Fig. 1) is composed of
three tests (motifs), all of them leading to at least one leaf (i.e. a
predicted class):

0 The sequences that do not contain the signal described by
the ﬁrst motif are classiﬁed as not undergoing the IMC;

 

1 978

ﬁre'spzumofpmjxo'sopeuuopnorq/pdnq

 

CHAM830104}{ {F GARJ730101} -

HPE [ACK] HL-LH [NFAIQWKS] ans
{M,RDBB760103}K{M,MEEJ81

 

TM] (V,NADH 01} [NAvas]
[ETLPW] [FQHK] [EAGD] PS [EK] 4E

 

 

/310'SIBan0prOJx0"sotJBuiJOJutotqﬂ:duq

 

‘inmm {Kid 1
- ‘ruﬂlnu :u’ifl 2
|:| ammo and :1

|:| :uuum HIM-1
|:|:u|mm;<h|415
|:| Hmmu a: :41 i.

 

/3.IO'S[BIIm0[p.IOJXO'SOIJBIIIJOJIIIOIq/ﬂdnq

Motifs tree for PTMs prediction

 

lead us to draw conclusion on human MetAPs substrates that are
similar to the experimental results published in literature
(Burstein and Schechter, 1978; Frottin et al., 2006; Martinez
et al., 2008; Meinnel et al., 2005; Xiao et al., 2010). Therefore,
we can claim that our model is a white box.

3.4 N—terminus prediction service

We developed a free and open online service to allow researchers
to use our motifs trees for predicting IMC and Na—Ac on their
sequences of interest. The service is accessible both through a
web interface and through a simple REST API (supported in
almost every programming language) and can be used to
access the predictors programmatically. The service is available
at the following address: http://terminus.unige.ch/.

4 DISCUSSION

We presented a new method to predict PTMs called motifs tree.
The method was tested for the IMC and Na—Ac by building a
classiﬁer for proteins in different taxa. The resulting models are
accurate on our datasets and perform as well as the previously
published state—of—the—art results, namely T ermiNator3.
Moreover, our results are cross—validated, showing that our
model can build classiﬁers with good generalization capabilities.
We did not compare our model with NetAeet because it has been
trained only on a small dataset restricted to NatA substrates
from S .eerevisiae.

Also, we have shown that our Na—Ac classiﬁer can take into
account subtle information allowing it to improve the classiﬁca—
tion of potential NatB and NatC substrates, which is a feature
that is lacking in T ermiNator3 and NetAeet.

As with all machine learning approaches, the quality of the
predictor depends on the quality of the dataset. In biology, nega—
tive sets are difﬁcult to build because they rely on the non—ob—
servation of a phenomenon, which is not directly annotated in
databases. To conﬁrm that our predictor was not biased because
of noise in the dataset, we have used a hold—out test set. This set is
only composed of experimentally confirmed non—acetylated eu—
karyotic proteins (Bienvenut et al., 2012). All proteins in the
hold—out test set were not seen during training. The Eukaryota
motifs tree produce a specificity of 0.85 on this hold—out test set,
which is above the cross—validated speciﬁcity (+0.09). This good
result illustrates that our algorithm induces correct rules to pre—
dict non—acetlyation, probably because our methodology can
cope with noise in the dataset, or because our dataset is clean
enough to produce accurate predictors. We add that the ability
to learn with noise is a desirable feature for a ML method. For
more details, see Supplementary Information A (‘3.3 Validation
for N—terminal acetylation classiﬁers’).

Also, our method produces a white box model that shows how
features are used to classify sequences. In a preliminary analysis,
we have illustrated that our model can provide helpful informa—
tion about the composition of sequences that promote or inhibit
a PTM. This is also a valuable advantage versus the predictors
presented in Lars et al. (2005) and Liu and Lin (2004), which is
hard or impossible to interpret. We are convinced that a model
used for classiﬁcation in biology should be readable by experts.
Models used in machine learning are able to capture

characteristics that are hard to see in the data. Those character—
istics or features may be exploited to understand the studied
biological process.

The purpose of this first analysis was only to validate the white
box quality of our model, by retrieving experimentally known
biological facts from our motifs trees. However, in the future we
may be able to use the motifs tree as a tool to propose new
biological hypothesis that could be tested experimentally.

ACKNOWLEDGEMENT

The authors would like to thank Alexandros Kalousis from the
Computer Science department (University of Geneva) for the
discussion that helped us to improve our methodology.

Funding: The SIB activities are supported by the State Secretariat
for Education, Research and Innovation (SERI).

Conﬂict of interest: none declared.

REFERENCES

Banzhaf,W. et al. (1998) Genetic Programming: An Introduction: on the Automatic
Evolution of Computer Programs and its Applications. Morgan Kaufmann
Publishers Inc., San Francisco, CA.

Berthold,M.R. et al. (2010) Guide to Intelligent Data Analysis: How to Intelligently
Make Sense of Real Data, 1st edn. Springer Publishing Company, Incorporated,
London.

Bienvenut,W.V. et al. (2012) Comparative large scale characterization of plant
versus mammal proteins reveals similar and idiosyncratic N-ot—acetylation fea—
tures. Mol. Cell. Proteomics, ll, Mlll.01513l.

Blom,N. et al. (1999) Sequence and structure—based prediction of eukaryotic protein
phosphorylation sites. J. Mol. Biol., 294, 135171362.

Bologna,G. et al. (2004) N—terminal myristoylation predictions by ensembles of
neural networks. Proteomics, 4, 162G1632.

Bork,P. and Gibson,T.J. (1996) Applying motif and proﬁle searches. Methods
Enzymol., 266, 1627184.

Bradshaw,R.A. et al. (1998) N—terminal processing: the methionine
aminopeptidase and N—ot—acetyl transferase families. Trends Biochem. Sci., 23,
2637267.

Bucher,P. et al. (1996) A flexible motif search technique based on generalized pro—
ﬁles. Comput. Chem., 20, 3723.

Burstein,Y. and Schechter,I. (1978) Primary structures of N—terminal extra peptide
segments linked to the variable and constant regions of immunoglobulin light
chain precursors: implications on the organization and controlled expression of
immunoglobulin genes. Biochemistry, 17, 239272400.

Cai,Y.—D. and Lu,L. (2008) Predicting N—terminal acetylation based on feature se—
lection method. Biochem. Biophys. Res. Commun., 372, 8624565.

Chuang,G.—Y. et al. (2012) Computational prediction of N—linked glycosylation
incorporating structural properties and patterns. Bioinformatics, 28, 224972255.

Eisenhaber,B. and Eisenhaber,F. (2010) Prediction of posttranslational modiﬁca—
tion of proteins from their amino acid sequence. In: Carugo,O. and
Eisenhaber,F. (eds) Data Mining Techn‘ujues for the Life Sciences. Methods in
Molecular Biology. Vol. 609, Humana Press, New York, NY, pp. 36y384.

Frottin,F. et al. (2006) The proteomics of N—terminal methionine cleavage. Mol.
Cell. Proteomics, 5, 233G2349.

Gautschi,M. et al. (2003) The yeast n-ot—acetyltransferase nata is quantitatively an—
chored to the ribosome and interacts with nascent polypeptides. Mol. Cell. Biol.,
23, 740%7414.

Goldberg,D.E. (1989) Genetic Algorithms in Search, Optimization and Machine
Learning. 1st edn. Addison—Wesley Longman Publishing Co., Inc., Boston, MA.

Gonnet,P. and Lisacek,F. (2002) Probabilistic alignment of motifs with sequences.
Bioinformatics, 18, 109171101.

Hastie,T. et al. (2001) The Elements of Statistical Learning. Springer Series in
Statistics, 2nd edn. Springer New York Inc., New York, NY.

Julenius,K. (2007) Netcglyc 1.0: prediction of mammalian c—mannosylation sites.
Glycobiology, 17, 8687876.

 

ﬁre'spzumofpmjxo'sopeuuopnorq/pdnq

C. Charpilloz et al.

 

Kawashima,S. and Kanehisa,M. (2000) AAindex: amino acid index database.
Nucleic Acids Res., 28, 374.

Kendall,R.L. and Bradshaw,R.A. (1992) Isolation and characterization of the me—
thionine aminopeptidase from porcine liver responsible for the co—translational
processing of proteins. J. Biol. Chem., 267, 20667720673.

Kyte,J. and Doolittle,R.F. (1982) A simple method for displaying the hydropathic
character ofa protein. J. Mol. Biol., 157, 10&132.

Lars,K. et al. (2005) NetAcet: prediction of N—terminal acetylation sites.
Bioinformatics, 21, 126971270.

Liu,Y. and Lin,Y. (2004) A novel method for N—terminal acetylation prediction.
Genomics Proteomics Bioinform., 2, 2537255.

Martinez,A. et al. (2008) Extent of N—terminal modiﬁcations in cytosolic proteins
from eukaryotes. Proteomics, 8, 280972831.

Matthews,B.W. (1975) Comparison of the predicted and observed
secondary structure of T4 phage lysozyme. Biochim. Biophys. Acta, 405,
4424151.

Meinnel,T. et al. (2005) Processed N—termini of mature proteins in higher eukary—
otes and their major contribution to dynamic proteomics. Biochimie, 87,
7017712.

Pestana,A. and Pitot,H.C. (1975) Acetylation of nascent polypeptide chains on rat
liver polyribosomes in vivo and in vitro. Biochemistry, 14, 14044412.

Polevoda,B. and Sherman,F. (2002) The diversity of acetylated proteins. Genome
Biol., 3, reviews0006.

Polevoda,B. and Sherman,F. (2003) N—terminal acetyltransferases and sequence re—
quirements for N—terminal acetylation of eukaryotic proteins. J. Mol. Biol., 325,
595%22.

Polevoda,B. et al. (2008) Yeast n-ot—terminal acetyltransferases are associated with
ribosomes. J. Cell. Biochem., 103, 4927508.

Polevoda,B. et al. (2009) A synopsis of eukaryotic n-ot—terminal
acetyltransferases: nomenclature, subunits and substrates. BMC Proc., 3
(Suppl. 6), $2.

Quinlan,J.R. (1992) C4.5: Programs for Machine Learning ( Morgan Kaufmann
Series in Machine Learning). 1st edn. Morgan Kaufmann, San Mateo, CA.
Radivojac,P. et al. (2010) Identiﬁcation, analysis, and prediction of protein ubiqui—

tination sites. Proteins, 78, 3657380.

Russell,S.J. and Norvig,P. (2010) Artificial IntelligenceiA Modern Approach. 3rd
edn. Pearson Education, Upper Saddle River, NJ.

Schwartz,D. et al. (2009) Predicting protein post—translational modiﬁcations using
meta—analysis of proteome scale data sets. Mol. Cell. Proteomics, 8, 3657379.

Starheim,K.K. et al. (2008) Identiﬁcation of the human Not—acetyltransferase com—
plex b (hNatB): a complex important for cell—cycle progression. Biochem. J., 415,
3257331.

Starheim,K.K. et al. (2009) Knockdown of human N—ot—terminal acetyltransferase
complex C leads to p53—dependent apoptosis and aberrant human Ar18b local—
ization. Mol. Cell. Biol., 29, 356973581.

Walsh,C. (2006) Posttranslational Modification of Proteins: Expanding Nature's
Inventory. Roberts and Company Publishers, Englewood, CO.

Xiao,Q. et al. (2010) Protein N—terminal processing: substrate speciﬁcity of
Escherichia coli and human methionine aminopeptidases. Biochemistry, 49,
558875599.

Zhang,N. et al. (2012) Computational prediction and analysis of protein y—carb—
oxylation sites based on a random forest method. Mol. Biosyst., 8, 294G2955.

 

ﬁre'spzumofpmjxo'sopeuuonnorq/pdnq

