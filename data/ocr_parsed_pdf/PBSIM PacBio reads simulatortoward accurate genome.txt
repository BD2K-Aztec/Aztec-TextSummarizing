BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Y.Ono et al.

 

Fig. S7). Quality scores are therefore simulated stochastically, i.e. in the
model-based simulation, a quality score at each position of a simulated
read is randomly chosen from a frequency table of quality scores. For
each accuracy of a read, frequencies of quality scores were precomputed
using Escherichia coli C227-11/55989 CLR datasets and C227-11 CCS
dataset. For accuracies of 0759% and 8&100% of CLR and (P84% of
CCS, uniform distributions are used because datasets are not sufficiently
large. Note that these CLR and CCS datasets were not filtered by the
length (>100 bp) and accuracy (>75%).

2.1.5 Simulation of nucleotide sequences Simulated read se-
quences are randomly sampled from a reference sequence, and differences
(errors) of the sampled reads are introduced as follows.

The substitutions and insertions are introduced according to the qual-
ity scores, which are chosen as described in Section 2.1.4. Their probabil-
ities are computed for each position of a simulated read from the error
probability of the position (computed from the quality score of the pos-
ition), and a ratio of differences was (substitution/insertion/deletion)
given by a user (Supplementary Section S1). From the observations of
the real PacBio reads, we found a weak frequency bias in the substitution
pattern (Supplementary Fig. S8), but the cause of this bias is not clear;
hence, we do not include this pattern in the current version of PBSIM (i.e.
substitutions are simulated by using a uniform distribution.). On the
other hand, we found that the probability that inserted nucleotide is
the same as either of its neighbors is significantly higher than that of
random choice (Supplementary Table S6), and this bias is considered
to be caused by the mechanism known as cognate sampling (Eid et al.,
2009); therefore, half of inserted nucleotides are chosen to be the same as
their following nucleotides, and the other half are randomly chosen.

From the observations of the real PacBio reads, we found that the
nucleotide frequency of deletion is uniform (Supplementary Fig. S9c and
d), and that the distribution of deletion length is similar to the geometric
distribution (Supplementary Fig. S10). Therefore, the deletion probability
is uniform throughout all positions of every simulated read, which is
computed from the mean error probability of the read set and the ratio
of differences (Supplementary Section S1).

It was reported that coverage depth of PacBio reads across a genome
and against GC content is nearly uniform (Carneiro et al., 2012; Koren
et al., 2012; Quail et al., 2012). We therefore do not introduce coverage
bias and GC bias to simulated sequence reads.

2.2 Sampling-based simulation

In the sampling-based simulation, lengths and quality scores of reads are
simulated by randomly sampling them in a real library of PacBio reads
(provided by the user). Subsequently, their nucleotide sequences are simu-
lated by the same method with the model-based simulation described in
Section 2.1.5.

3 RESULTS AND DISCUSSION

PBSIM is implemented using the C language. PBSIM produces a
set of simulated reads in the FASTQ format (Cock et al., 2010)
and a list of alignments between a reference sequence and simu—
lated reads in the MAF format (https://cgwb.nci.nih.gov/FAQ/
FAQformat.html#format5).

3.1 Simulator performance

3.1.] Speed and memory To test PBSIM’s speed, we chose
three genomes from Supplementary Table S7 as reference se—
quences, and simulated CLR and CCS reads at 10x, 20X, 50X
and 100x coverage to each of the reference sequences.
Supplementary Table S8 shows the computational time for

simulating reads by PBSIM, indicating that PBSIM is sufﬁciently
fast (at most 200 s). On the other hand, the memory requirement
of PBSIM depends on the length of the reference sequence.

3.1.2 Accuracy of simulator Because the length and accur—
acy are selected stochastically, the difference between a set of real
reads and a set of simulated reads tends to be larger when the
number of simulated reads is smaller. We evaluated this point by
using the A—phage genome (which is the shortest genomes in this
study; see Supplementary Table S7). In the sampling—based simu—
lation, we used E.coli C227—11 real reads as the sample reads.
Supplementary Figures S11 and S12 show a comparison of real
reads and simulated reads. Note that the variance would be
much smaller if we used a longer reference sequence.
Alignment tests of simulated reads show that simulated reads
reproduced CLR and CCS reads well (Supplementary Table
S9, compared with Supplementary Table S5).

3.2 Assembly test for simulated reads

Finally, we conducted hybrid error correction and assembly tests
using datasets simulated by PBSIM. We simulated CLR and
CCS reads with coverage depth of 5, 10, 15, 20, 30, 40 and 50
(by both model—based and sampling—based simulations), and
tested all the combinations of these coverage depth. In the
model—based simulation, for CLR reads, the length and accuracy
are set to be ~3000 bp and 78%, respectively; for CCS reads, the
length and accuracy are set to be ~450 bp and 98%, respectively.
In the sampling—based simulation, we used E.coli C227—ll real
reads (from which reads are sampled). Reference sequences
tested were E.coli 55989, Drosophila melanogaster chr2L and
Homo sapiens chr21 (compare with Supplementary Table S7).

For a hybrid assembly of CLR and CCS reads, we used the
PacBioToCA (Koren et al., 2012), a hybrid error correction
method and de novo assembly of single—molecule sequencing
reads. In the pipeline, error correction of CLR reads was ﬁrst
conducted using CCS reads, and then the corrected (CLR) reads
were assembled with the Celera assembler (Venter et al., 2001).
CLR reads without error correction can not be assembled by the
Celera assembler because of the high error rate.

The results are shown in Figure 1, Supplementary Figures S13
(the number of contigs), S14 (aligned reference bases by PBcR),
S15 (aligned reference bases by contigs), S16 (N50 of contigs)
and S17 (maximum length of contigs). For every reference se—
quence, an extensive assembly was obtained with a CLR cover—
age depth of at least 15 in combination with a CCS coverage
depth of at least 30 (Supplementary Figs S16 and S17).
Additionally, we simulated and assembled error—free CLR
reads for all the CLR coverage depth tested earlier. Although
the error correction of PacBioToCA improved assembly metrics,
assembly of error—free reads was more comprehensive still. Also,
higher read coverage did not always translate into larger assem—
bly. These results suggest that there is room for progress in the
correction of PacBio errors and read assembly (see the
‘error—free’ parts in Fig. 1 and Supplementary Figs S137S17).

In this section, we have shown that users can use PBSIM to
design sequencing experiments (e.g. to determine the depths of
CLR and CCS reads). Note that users can design sequencing
experiments of hybrid assembly of PacBio CLR (simulated by

 

120

ﬁm'spzumol‘pmﬂo'sopeuuopuorq/ﬁdnq

53x\Ewogmoizmnnw.oxmoagoﬁsiwbwﬁ

 

 

 

 

