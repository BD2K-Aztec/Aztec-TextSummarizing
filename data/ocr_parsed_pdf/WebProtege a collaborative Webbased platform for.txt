BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

WebPro tégé

 

advantage of a precisely defined notion of ontology changes
and ontology change lists. Change lists, which correspond to
operations in the user interface, are stored along with vari—
ous metadata about which user enacted the changes, the
timestamp of the changes and the f1ne—grained details
of the changes. All project changes are tracked, and
WebProtégé allows users to download any previous version
or revision of an ontology, making it possible to compare
different versions using tools such as Bubastis (Malone
et al., 2010) or Ecco (Goncalves et al., 2012).

3 AN OBO FRIENDLY U|

The WebProtégé user interface is customizable, and users can
arrange individual views (known as ‘portlets’) to suit their
needs. We provide several out—of—the—box views that are specif—
ically designed for editing biomedical, OBO—Style, ontologies.
Heavily inspired by OBOEdit widgets, many of these views
shield the user from the verbose and intricate OWL representa—
tion of OBO format constructs. Some of these views are
described below.

0 0 TermId View: presents a user—friendly OBO Id and Name
for the selected term and hides the under—the—hood represen—
tation of term Ids (IRIs).

o 9 Term Definition View: obviates the need for the user to
know what the correct ‘def1nition’ OWL annotation prop—
erty (IAO_0000115) is, and manages the database cross—ref—
erence annotations on the OWL annotation assertion that
specifies the term deﬁnition.

0 9 Synonyms View: manages the speciﬁcation of synonyms,
the scope of these synonyms and database cross references
for them.

0 9 Relationships View: simple OBO relationships correspond
to OWL ObjectSomeValuesFrom restrictions that are super—
class expressions of the subject term. This view manages the
SubClassOf relationship and ObjectSomeValuesFrom re—
strictions under the hood, meaning that users do not need
to know about these OWL constructs. Furthermore, auto—
completion (‘3) assists the user in typing in correct property
names and term names.

0 6 Cross-Products View: similar to the Relationships
View, this view manages EquivalentClasses axioms and the
bundling of component relationships, represented by
ObjectSomeValuesFrom restrictions, into intersection
classes.

4 IMPLEMENTATION

WebProtégé is based on the OWL API (Horridge and Bechhofer,
2011). This API is widely used by people that need programmatic
access to OWL ontologies, and it is the basis of other widely used

tools such as Protege (Horridge et al., 2006), services such as the
module and diff analysis tools (Goncalves et al., 2012; Malone
et al., 2010) and OBO workflow tools such as the OBO Ontology
Release Tool. For loading and processing OBO ontologies, we
use the OBO format tools, which provide a ‘reference’ OBO
parser among other things. The WebProtégé user interface and
client/server communication is implemented using the Google
Web Toolkit (https://developers.google.com/web—toolkit/) and
JavaScript.

5 FUTURE DEVELOPMENT

WebProtégé is currently under heavy development. Some of the
features that are relevant for the biomedical ontology community
that we plan to add are as follows: support for exporting and
publishing projects as OBO ontologies (via integrations with the
OBO—Ontology Release Tool); tighter integration with third—
party issue trackers that are typically used by biomedical ontol—
ogy projects (such as GoogleCode or GitHub Issues); online rea—
soning and query support (along the lines of the functionality
provided by Protege 4); mixed subclass and non—subclass (e.g.
partOf) hierarchy views; better support for visualization and sup—
port for subset views (slims).

Funding: The National Institute of General Medical Science
(GM103316) of the US National Institutes of Health.

Conﬂict of Interest: none declared.

REFERENCES

Day—Richter,J. et al. (2007) OBO—Editian ontology editor for biologists.
Bioinformaticx, 23, 219872200.

Goncalves,R.S. et al. (2012) Ecco: a hybrid diff tool for OWL 2 ontologies. In:
Klinov,P. and Horridge,M. (eds) Proceeding of OWL: Experiencex and
Directiom' WorkSllOp 2012. Vol. 849, CEUR Workshop Proceedings.
http://ceur—ws.org.

Horridge,M. et al. (2006) Supporting early adoption of OWL 1.1 with Protege—
OWL and FaCT+ +. In: Cuenca Grau,B. et al. (ed.) OWL: Experiences and
Directiom' (0 WLED). Vol. 216, CEUR Workshop Proceedings.

Horridge,M. and Bechhofer,S. (2011) The OWL API: a Java API for OWL ontol—
ogies. Semant. Web, 2, 11721.

Larson,S.D. and Martone,M.E. (2013) NeuroLex.org: an online framework for
neuroscience knowledge. Front. Neuroinform., 7, 18.

Malone,J. et al. (2010) Modelling sample variables with and experimental factor
ontology. Bioiry’ormaticx, 26, 111271118.

Motik,B. et al. (2009) 0 WL 2 Web Ontology Language Structural Speciﬁcation anal
Functional Style Syntax. W3C Recommendation, W3C7World Wide Web
Consortium. http://www.w3.org/TR/ow12—syntax/ (May 2014, date last
accessed).

Mungall,C.J. et al. (2011) Obo flat file format 1.4 syntax and semantics [draft].
Technical report, Lawrence Berkeley National Laboratory.

Noy,N.F. et al. (2009) BioPortal: ontologies and integrated data resources at the
click of a mouse. Nucleic AL’ldA‘ Rex, 37, W17(%W173.

Smith,B. et al. (2007) The OBO Foundary: coordinated evolution of ontology to
support biomedical data integration. Nat. Biotechnol, 25, 125171255.

Xiang,Z. et al. (2011) Ontobee: a linked data server and browser for ontology terms.
In: Smith,B. et al. (ed.) ICBO International Conference on Biomedical Ontology,
Buﬂalo, New York, USA. http://icbo.buffalo.edu/ICBO—2011_Proceedings.pdf.

 

2385

ﬁre'spzumofpmﬂo'sopeuuowrorq/ﬁdnq

