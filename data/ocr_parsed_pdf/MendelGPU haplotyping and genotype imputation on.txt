BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

G.K.Chen et al.

 

Table 1. Haplotype phasing and genotype imputation performance
ignoring reference haplotypes

 

Program Phasing Hetero. E] norm Total Max memory
accuracy accuracy of errors runtime footprint

 

Mendel-GPU 0.945 0.929 188 239.305 19:44 320 MB
BEAGLE 0.968 0.948 159 772.295 2:03:37 573 MB
IMPUTE2 0.925 0.820 695491.159 10:51:33 2.5GB
thunder 0.964 0.952 244 652.465 25:00:50 947 MB

 

Table 2. Genotype imputation in a low pass (241x) re-sequencing study
using KGP reference haplotypes

 

 

Program Hetero. E] norm Total Max memory
accuracy of errors runtime footprint
Mendel-GPU 0.943 767 007.878 15:11 575 MB
BEAGLE 0.962 522 638.033 26:21 :45 7.0 GB
IMPUTE2 0.903 1604154945 36:21:12 3.7GB

 

and Browning, 2007). In contrast to previous evaluations of
haplotyping (Browning and Browning, 2011) and imput—
ation performance (Howie et al., 2009), we base our simulations
and comparisons on the KGP rather than microarray derived
data.

In our first example, we performed genotype imputation and
haplotyping with no reference haplotypes present on simulated
274x coverage data generated from a 1 MB region of
Chromosome 22 taken from the KGP. Table 1 compares our
runtime and accuracy results to those from the three competing
programs. The second column of the table indicates haplotype
phasing performance, measured as 1 minus the switch error,
while the third column indicates imputation performance, mea—
sured as concordance of imputed heterozygotes to true hetero—
zygotes. Our results indicate comparable haplotyping and
imputation accuracies across all programs. In terms of compu—
tational efﬁciency, Mendel—GPU achieved 6—, 33— and 76—fold
speed improvements over BEAGLE, IMPU T E2 and thunder, re—
spectively, while requiring only 56, 13 and 33% as much peak
memory.

In our second example, we considered a random 7 MB dataset
derived from the KGP where one has ethnically matched refer—
ence haplotypes. One half of the KGP was reserved as reference
haplotypes, and the other half was used to simulate 241x cover—
age data. In capitalizing on reference haplotypes, Mendel—GPU
takes advantage of a computationally efficient middle—thirds al—
gorithm. Because all genotypes in the middle third of a sliding
window are imputed simultaneously, the speed and memory im—
provements for Mendel—GPU are more impressive in Table 2
than Table 1. Mendel—GPU is 104 and 144 times faster than
BEAGLE and IMPUT E2 and requires only 845% of their
peak memory demands. Mendel—GPUs accuracies fall between
those of BEAGLE and IMPUT E2. Note that thunder does not
support reference haplotypes.

4 DISCUSSION

We have described software to meet the challenges of imputation
in whole—genome sequencing data. Mendel—GPU supports the use
of dense reference haplotypes and genotype penetrances as re—
ported by variant calling pipelines. As the two examples illus—
trate, Mendel—GPU enjoys similar accuracies to the most highly
regarded programs available, while requiring only a fraction of
their time and memory demands. The fine—grained parallel algo—
rithms of Mendel—GPU effectively harness the computational ef—
ficiency and memory bandwidth of hundreds of GPUs. Although
BEAGLE appears to have an edge in accuracy in the scenarios
tested, the speed and memory advantages of Mendel—GPU out—
weigh, in our opinion, its slight losses in accuracy. As GPU de—
vices increase in sophistication and we further tune the code of
Mendel—GPU, we expect to see greater gains.

Even as things now stand, Mendel—GPU will prove helpful.
For researchers interested in testing rare variants coordinated
with the KGP, our simulations highlight potential gains for
study data consisting of a few hundred subjects sequenced at
modest coverage. For example, whole—genome imputation of
low—pass sequencing data on 545 study subjects would complete
in ~68 days on a machine equipped with a single nVidia Tesla
C2050 GPU. The same analysis using IMPU T E2 would require
~2.7 years on a single CPU machine. This difference puts small
laboratories back in contention with the sequencing factories.
Enabling small projects will ripple productively through the
entire fabric of genomics research.

ACKNOWLEDGEMENTS

We thank the USC Epigenome Center for GPU computing
resources.

Funding: R01 ES019876 and R01 HG006465 (to G.K.C. and
K.W., in part); U01 HG004726-01 (to A.H.S.); R01 HG006139
(to EMS.) and R01 GM53275 (to KL.)

Conﬂict of Interest: none declared.

REFERENCES

Altshuler,D. et ul. (2010) A map of human genome variation from population—scale
sequencing. Nature, 467, 106171073.

Ayers,K.L. and Lange,K. (2008) Penalized estimation of haplotype frequencies.
Bioinfommtiex, 24, 159671602.

Browning,S.R. and Browning,B.L. (2007) Rapid and accurate haplotype phasing
and missing—data inference for whole—genome association studies by use of loca—
lized haplotype clustering. Am. J. Hum. Genet, 81, 10844097.

Browning,S.R. and Browning,B.L. (2011) Haplotype phasing: existing methods and
new developments. Nat Rev. Genet, 12, 7037714.

Chen,G.K. (2012) A scalable and portable framework for massively parallel variable
selection in genetic association studies. Bioinﬁnmutiex, 28, 71%720.

Howie,B.N. et ul. (2009) A ﬂexible and accurate genotype imputation method for
the next generation of genome—wide association studies. PLoS Genet, 5,
e1000529.

Lange,K. (2004) Optimization. Springer Text.\' in Stutixties. Springer, New York.

Li,Y. et ul. (2010) MaCH: using sequence and genotype data to estimate haplotypes
and unobserved genotypes. Genet. Epidemiol., 34, 81(r834.

Purce11,S. et ul. (2007) PLINK: a tool set for whole—genome association and
population—based linkage analyses. Am. J. Hum. Genet, 81, 5597575.

Zhou,H. et ul. (2010) Graphics processing units and high—dimensional optimization.
Stat Sci, 25, 3117324.

 

2980

ﬁm'spzumol‘pmjxo'sopeuuopuotq/ﬁdnq

