Bioinformatics, 31 (6), 2015, 897—904

doi: 10.1093/bioinformatics/btu733

Advance Access Publication Date: 6 November 2014
Original Paper

 

Systems biology

TreeEFM: calculating elementary flux modes
using linear optimization in a tree-based
algorithm

Jon Pey1, Juan A. Villarz, Luis Tobalina1, Alberto Rezola1,
José Manuel Garciaz, John E. Beasley3 and Francisco J. Planes1'*

1CEIT and TECNUN, University of Navarra, Manuel de Lardizabal 15, 20018 San Sebastian, Spain, 2Computer
Engineering Department, School of Computer Science, POB 30100 University of Murcia, Spain and 3Mathematical
Sciences, Brunel University, Kingston Lane, UBB 3PH Uxbridge, UK

*To whom correspondence should be addressed.
Associate Editor: Igor Jurisica

Received on February 27,2014; revised on September 16,2014; accepted on October 31, 2014

Abstract

Motivation: Elementary flux modes (EFMs) analysis constitutes a fundamental tool in systems biol—
ogy. However, the efficient calculation of EFMs in genome—scale metabolic networks (GSMNs) is
still a challenge. We present a novel algorithm that uses a linear programming—based tree search
and efficiently enumerates a subset of EFMs in GSMNs.

Results: Our approach is compared with the EFMEvolver approach, demonstrating a significant im—
provement in computation time. We also validate the usefulness of our new approach by studying
the acetate overflow metabolism in the Escherichia coli bacteria. To do so, we computed 1 million
EFMs for each energetic amino acid and then analysed the relevance of each energetic amino acid
based on gene/protein expression data and the obtained EFMs. We found good agreement be—
tween previous experiments and the conclusions reached using EFMs. Finally, we also analysed
the performance of our approach when applied to large GSMNs.

Availability and implementation: The stand—alone software TreeEFM is implemented in C++ and
interacts with the open—source linear solver COIN—OR Linear program Solver (CLP).

Contact: fplanes@ceit.es

Supplementary information: Supplementary data are available at Bioinformatics online.

 

 

1 Introduction

Many advances in medicine and biology would not be possible with-
out a detailed understanding of the functional mechanisms of cellular
metabolism (Hsu and Sabatini, 2008). However, this is a very com-
plex task as there are intricate regulatory events controlling cellular re-
sponse. Novel technologies, referred to with the suffix omics, are
emerging in the last two decades and providing us with a cellular pic-
ture of unprecedented coverage and resolution (Joyce and Palsson,
2006). Unfortunately, it is often difficult to detect the mechanisms
behind an observed alteration using the data provided by omics tech-
nologies. The scientific community needs improved tools and methods
to identify these mechanisms in different scenarios (Werner, 2008).

Several mathematical methods modeling metabolism are emerg-
ing that are able to incorporate datasets provided by different omics
technologies. Many of these methods are encompassed within con-
straint-based models (Price et (11., 2004), in which a set of mathemat-
ical constraints are defined using a genome-scale metabolic network
(GSMN) reconstruction as a starting point. Several curated GSMNs
can be found in the literature (Thiele and Palsson, 2010). However,
being able to automatically characterize the biochemical reactions
present in a particular metabolism through omics data truly consti-
tutes a challenge (Schmidt et (11., 2013).

Typically, constraint-based models account for two principal con-
straints, namely the mass balance equation at steady state, and

(C7 The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 897

/310‘srcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

Schuster at (11., 2000

Equations (1)
Rezola at (11., 2011

de
Figueiredo at (11., 2008 Gebauer at (1]., 2012 Trinh at (11., 2009
Rezola at (1]., 2014

Terzer and Stelling, 2008 Urbanczik and \Wagner, 2005 Von
Kamp and Schuster, 2006
Hunt at (1]., 2014

Klamt and
Stelling, 2002

de Figueiredo (1) (3)
at (11., 2009 Kaleta at (11., 2009 Pey and Planes, 2014 Rezola (#111,,
2011 2013
(2009)
Kaleta at (11., 2009
Nakano
Ct (11., 1997

Valgepea at (11., 2010

Rezola at [Z]. (2013)

Valgepea at [Z]. (2010)

Fig. 1

Equation (1)

Schuster at a]. (2000)

Equation (2)

(2)

de Figueiredo at (11., 2009 Pey (#111,, 2014

Equation (3)

Equation (3)

Equations (1) (2)
Pey and Planes (2014)

Pey and Planes, 2014
Kaleta at a].
Dantzig at (11., 1955
Lougee-Heimer, 2003

(1) (3)
Pey and Planes, 2014

/810'sreumoprOJxo"sotJBuIJOJutotqﬂ:duq

TreeEFM

899

 

programming models (Land and Doig, 1960). However, our branch—
ing strategy is completely different and bounds are not used here. In
particular, in many branch—and—bound approaches two children
emerge from each parent node, whilst here TreeEFM may create as
many child nodes as active reactions in the solution obtained in the
antecessor node. Note also that during the branch—and—bound pro—
cess integrality is promoted by including an inequality in each child
besides the constraints in the parent node. TreeEFM is slightly dif—
ferent since a constraint deactivating a variable is included in the
child node. Nevertheless, both approaches share the idea of carrying
forward constraints from the parent to the child node.

Trees have been used previously for EFM computation. In par—
ticular, in the efmtool approach (Tcrzcr and Stelling, 2008), the con—
cept of bit pattern trees was introduced to optimize the iterative
phase of the double description method, which is the standard algo—
rithm to enumerate extreme rays in a polyhedral cone. This algo—
rithm starts from an initial cone that contains the final cone, defined
by Equations (1) and (2). Each time a constraint is added, the cone
and extreme rays are updated. By definition, it is necessary to com—
plete the iterative process to guarantee that each candidate is indeed
an EFM. Bit pattern trees were introduced to accelerate the elemen—
tarity test in intermediate iterations. Our tree—branching approach is
substantially different, as it is based on linear programming and ex—
treme point enumeration. Each node in the tree constitutes a LP that
potentially provides us with an EFM. As linear programming solvers
are highly sophisticated, we can always compute a subset of EFMs
even in large—size networks. This gives a substantial computational
advantage to our approach relative to efmtool, which is only appli—
cable to networks of moderate size.

To conduct the tree search more efficiently, several heuristic
rules have been included in the algorithm. In particular they avoid:
(i) recalculating previously obtained EFMs and (ii) solving nodes
representing LPs without solution, namely infeasible models, which
may substantially increase the computation time. Further details are
given below.

2.3 Heuristic rules

In our approach, the majority of the computation time is spent on
solving LPs. Hence, decreasing the total number of LPs required to
obtain an EFM constitutes an appropriate strategy. In this light, we
first explore nodes that are more likely to provide a new EFM. Let
us define E as the already calculated set of EFMs (where this set will
grow in size as we explore more of the tree). We also define a non—
negative score for each node i that is a count of how many EFMs in
E are feasible in i. We consider that an EFM/ E E is feasible in node
i if all the constraints imposed in that node are satisfied in the EFM,
meaning that solving the corresponding LP in node i could retrieve
EFM /. It is important to realize that unnecessary calculations are
being carried out when an EFM is recalculated, to the detriment of
overall computational performance. For this reason, we first explore
nodes with the lowest score, as the smaller the score of a node, the
higher the probability of obtaining a new EFM after solving its
corresponding LP. Different strategies are used depending on
that score: (i) when the score is equal to zero and (ii) when the score
is one or more. A schematic representation of the procedures
follows:

Input: stoichiometric matrix S, active reaction set L, Stop condi—
tions StopConditions
Output: flux vectors of the EFMs

// setting the root node
root_node : buildRoot(S, L);

efm : solveLinearProgram(root_node);
feasible_children : eliminateInfeasibilities(root_node, efm);
nodes_tree : storeChildrenInTree(feasible_children);

// processing the nodes of the tree
while (checkStopConditions(StopConditions) is not True and
NumberUnexploredNodes(nodes_tree) is not zero) do
current_node : selectNodeLowestScore(nodes_tree);
if (scoreOf(current_node) is zero) then
efm : solveLinearProgram(current_node);
else
efm : searchFittingEFM(current_node);
end
feasible_children : eliminateInfeasibilities
(current_node, efm);
nodes_tree : storeChildrenInTree(feasible_children);
end

Description:
After the initial node is solved, the child nodes are stored in the tree.

While the stop conditions (i.e. number of obtained EFMs, or expired
execution time) are not met and there are still unexplored nodes, the
algorithm selects from the tree the node whose score is the lowest. If
the score is zero, then the LP of the node is re—solved by the CLP
library. However, if the score is greater than zero, it means at least
one of the obtained EFMs is likely to be returned again by the CLP
library, so the algorithm just takes the existing EFM without invok—
ing the CLP library. Lastly, the algorithm performs an analysis of
the EFM of the current node to detect the reactions that may pro—
duce infeasible children, so that only feasible children are stored
in the tree. If new EFMs are found by the function
eliminateInfeasibilities, they will be added to E. Once the algo—
rithm terminates, the flux vectors of the obtained EFMs are saved to

disk.

Case 1: Score :Q

When the lowest score among the available nodes is zero, the LP
defined in these nodes is directly solved. Two scenarios may then
arise: (i) a new EFM is obtained, which can be added to E; or (ii) the
LP is infeasible. In no case can we obtain an already calculated
EFM, because a score of zero means that constraints in node i are
not fulfilled by any EFM in E.

Note that solving an infeasible noa'e implies solving an LP with—
out obtaining a new EFM, resulting in wasted computation. To pre—
vent this, we introduce the following strategies when the score is
non—zero.

Case 2. Score >0

Score > 0 implies there is at least one EFM in E that satisfies the
constraints applicable at the current node. We refer to this EFM as
one that fits in the current node. If the corresponding LP is solved,
we run the risk of calculating again the same EFM. However, by
solving only one additional LP, we can take advantage of this
fitting EFM to calculate all the infeasibilities that may arise from the
offspring of the current node. Let us consider the example in
Figure 2.

Figure 2 represents the scenario posed above where the selected
node, referred to as node i, imposes the elimination of reactions 1, 3
and 7. In addition, we have already calculated the EFM / activating
reactions 2, 5, 8, 9 and 10. Note how EFM / fits in node i (since
reactions 1, 3 and 7 are not active in it). If score > 1, we consider the
most recently calculated EFM.

ﬁm'sreumol‘pquo'sopeuuowtotq/ﬁdnq

i-th node

171, v3 and v7 = 0

01, v3, v7 and 112: 0
01, v3, v7 and 05: 0 v1, v3, v7 and vs: 0

Fig. 2

 

v1, v3, v7 and v9: 0

Figure 2

Supplcrncntai‘) bdatcrial

Rezola (7/ Lil. (2013)

Kalcta (7/ LI/., 2009

Pcist (7/ LI/., 2007

Table 1

/310'SIBanoprOJxo"sotJBuiJOJutotqﬂ:duq

S\\'artz, 2001
Valgepea cl rr/.. 2010

(ischaedler and Boudrant, 1994

(2013)

Table 2

Valgepea

Valgepea cl rrl. (2010)

Figure 3

Valgepea (7

Table 2

Han cl LIL, 2002

Rezola cl LIL, 2013

Feist cl rrl. (2007)

(7111/. (2010)

It'll. (2010)

Figure 3

Fe) cl til.

at al. (2013)

(I)
2
L
m
“6

5
.Q

E

3
Z

3

4

Time (seconds)

Figure 3

Feist cl rrl. (2007)

Equation (7)

Rezola

 

/310'SIBanoprOJxo"sotJBuiJOJutotqﬂ:duq

Rezola cl rrl. (2013)

Valgepea cl rrl. (2010)
Fe) m .11. (2013)
Table 2

Han cl Lil. (2002)

Valgepea cl rrl. (2010)

Liu cl 11].. 1998

Liu cl 11].. 1998

Vemuri cl LIL, 2006

Thiele cl LIL, 2013

El MacroModel
SEED
Recon2

 

IIenr) cl rr/.. 2010

Thiele cl LIL, 2012

Figure 4

Figure 3

Figure 4

/310'SIBanoprOJxo"sotJBuiJOJutotqﬂ:duq

TreeEFM

903

 

The usefulness of the TreeEFM approach is validated with the suc—
cessful enumeration of 1 million EFMs in the genome—scale metabolic
reconstruction of E.coli (Feist et al., 2007). Our analysis shows that
the computation time is not a limiting resource but that effective strat—
egies are needed to deal with the memory required for the large
amount of generated data. Although TreeEFM implements effective
strategies for reducing memory requirement, for computation of
EFMs in large GSMNs, it may be necessary to develop effective strat—
egies for compressing the EFMs.

The analysis in section 3.3 shows that TreeEFM is able to adapt,
with an affordable computation cost, to future increasingly large
metabolic models. For instance, metagenomic studies, in which sev—
eral organisms are modeled at a time, will provide us with meta—net—
works encompassing several times the number of reactions and
metabolites present in current GSMNs. TreeEFM is a suitable tool
for such scenarios.

EFMs are an elegant theoretical concept that provide insight into
different metabolic questions, as illustrated here with acetate over—
flow. To improve the relevance of the conclusions provided by an
EFM—based study, it is essential to contextualize the analysis in the
light of omics data. However, the required methodology to take ad—
vantage of large and diverse sets of EFMs is currently emerging, for
example, for gene expression data integration (Rezola et al., 2014).
The open availability of TreeEFM will certainly play a role, as such
approaches improve their predictions when they are provided with a
more diverse set of EFMs.

Acknowledgements

The authors thank Kaspar Valgepea for providing us with the gene/protein ex-
pression data in the acetate overﬂow metabolism, as well as Juliane Gebauer
and Christoph Kaleta for kindly providing us with the data in Table 1. The
authors thank the anonymous referees for their valuable comments and sug-
gestions, which improved the manuscript signiﬁcantly.

Funding

The work of Jon Pey and Luis Tobalina was supported by the Basque
Government. In addition, this work was partially supported by the Fundacion
Séneca (Agencia Regional de Ciencia y Tecnologia, Region de Murcia)
[15290/PI/2010], the Spanish MEC and European Commission FEDER
[TIN2012—31345], and the Minister of Economy and Competitiveness of
Spain [BI02013-48933].

Conﬂict of interest: none declared.

References

Dantzig,G.B. et al. (1955) The generalized simplex method for minimizing a
linear form under linear inequality restraints. Paciﬁc]. Math. 5, 183—195.
De Figueiredo,L.F. et al. (2008) Can sugars be produced from fatty acids?
A test case for pathway analysis tools. Bioinforrnatics 24, 2615—2621.

De Figueiredo,L.F. et al. (2009) Computing the shortest elementary flux modes
in genome-scale metabolic networks. Bioinforrnatics 25, 3158—3165.

Feist,A.M. et al. (2007) A genome-scale metabolic reconstruction for
Escherichia coli K-12 MG1655 that accounts for 1260 ORFs and thermo-
dynamic information. Mol. Syst. Biol. 3, 121.

Gebauer, J. et al. (2012) Detecting and investigating substrate cycles in a
genome — scale human metabolic network. FEBS ]. 279, 3192—3202.

Gschaedler,A. and Boudrant,  (1994) Amino acid utilization during batch
and continuous cultures of Escherichia coli on a semi-synthetic medium.
]. Biotechnol. 37, 235—251.

Han,L. et al. (2002) Effect of glycine on the cell yield and growth rate of
Escherichia coli: evidence for cell-density-dependent glycine degradation as
determined by 13C NMR spectroscopy. ]. Biotechnol. 92, 237—249.

Henry,C.S. et al. (2010) High-throughput generation, optimization
and analysis of genome-scale metabolic models. Nat. Biotechnol. 28,
977—982.

Hsu,P.P. and Sabatini,D.M. (2008) Cancer cell metabolism: Warburg and be—
yond. Cell 134, 703—707.

Hunt,K.A. et al. (2014) Complete enumeration of elementary ﬂux modes
through scalable, demand-based subnetwork deﬁnition. Bioinforrnatics 30,
1569—15 78.

Joyce,A.R. and Palsson,B.®. (2006) The model organism as a system: integrat-
ing ‘omics’ data sets. Nat. Rev. Mol. Cell Biol. 7, 198—210.

Kaleta,C. et al. (2009) EFMEvolver: computing elementary flux modes in gen-
ome-scale metabolic networks. Lect. Notes Inf. P—157, 179—189.

K1amt,S. and Stelling,J. (2002) Combinatorial complexity of pathway analysis
in metabolic networks. Mol. Biol. Rep. 29, 233—236.

Land,A.H. and Doig,A.G. (1960) An automatic method of solving discrete
programming problems. Econometric Soc. 28, 497—520.

Liu,J. et al. (1998) Gene cloning, biochemical characterization and physio-
logical role of a thermostable low-speciﬁcity L-threonine aldolase from
Escherichia coli. Enr.  Biochem. 255, 220—226.

Lougee-Heimer,R. (2003) The common optimization interface for operations
research: promoting open-source software in the operations research com-
munity. IBM]. Res. Dev. 47, 57—66.

Nakano,K., et al. (1997) Inﬂuence of acetic acid on the growth of Escherichia
coli K12 during high-cell-density cultivation in a dialysis reactor. Appl.
Microhiol. Biotechnol. 48, 597—601.

Pey,J. and Planes,F.J. (2014) Direct calculation of Elementary Flux Modes sat-
isfying several biological constraints in genome-scale metabolic networks.
Bioinforrnatics 30, 2197—2203.

Pey,J., Planes, F.J. and Beasley,J.E. (2014) Reﬁning carbon flux paths using
atomic trace data. Bioinforrnatics 30, 975—980.

Pey,J. et al. (2013) Integrating gene and protein expression data with gen-
ome-scale metabolic networks to infer functional pathways. BMC Syst.
Biol. 7,134.

Price,N. D. et al. (2004) Genome-scale models of microbial cells: evaluating
the consequences of constraints. Nat. Rev. Microhiol. 2, 886—897.

Rezola,A. et al. (2011) Exploring metabolic pathways in genome-scale net-
works via generating fluX modes. Bioinforrnatics 27, 534—540.

Rezola,A. et al. (2013) Selection of human tissue-speciﬁc elementary flux
modes using gene expression data. Bioinforrnatics 29, 2009—2016.

Rezola,A. et al. (2014) Advances in network-based metabolic pathway
analysis and gene expression data integration. Brief. Bioinf. doi: 10.1093/
bib/bbu009.

Schmidt,B.J., et al. (2013) GIM3E: condition-speciﬁc models of cellular
metabolism developed from metabolomics and expression data.
Bioinforrnatics 29, 2900—2908.

Schuster,S. et al. (2000) A general deﬁnition of metabolic pathways useful for
systematic organization and analysis of complex metabolic networks.
Nat. Biotech., 18, 326—332.

Swartz,J.R. (2001) Advances in Escherichia coli production of therapeutic
proteins. Curr. Opin. Biotech. 12, 195—201.

Terzer,M. and Stelling,J. (2008) Large-scale computation of elementary flux
modes with bit pattern trees. Bioinforrnatics 24, 2229—2235.

Thiele,I. and Palsson,B.®. (2010) A protocol for generating a high-quality
genome-scale metabolic reconstruction. Nat. Protoc. 5, 93—121.

Thiele,I. et al. (2012) Multiscale modeling of metabolism and macromolecular
synthesis in E. coli and its application to the evolution of codon usage.
PLoS One, 7, e45635.

Thiele,I. et al. (2013) A community-driven global reconstruction of human
metabolism. Nat. Biotechnol. 31, 419—425.

Trinh,C.T. et al. (2009) Elementary mode analysis: a useful metabolic path—
way analysis tool for characterizing cellular metabolism. Appl. Microhiol.
Biotechnol. 81, 813—826.

Urbanczik,R. and Wagner,C. (2005) An improved algorithm for stoichiomet-
ric network analysis: theory and applications. Bioinforrnatics 21,
1203—1210.

ﬁm'sreumol‘pquo'sopcuuowtotq/ﬁdnq

904

J.Pey et al.

 

Valgepea,K. et al. (2010) Systems biology approach reveals that overﬂow
metabolism of acetate in Escherichia coli is triggered by carbon catabolite
repression of acetyl—CoA synthetase. BMC Syst. Biol. 4, 166.

Vemuri,G.N. et al. (2006) Overﬂow metabolism in Escherichia coli during
steady-state growth: transcriptional regulation and effect of the redox ratio.
Appl. Environ. Microhiol. 72, 3653—3661.

Von Kamp,A. and Schuster,S. (2006) Metatool 5.0: fast and ﬂexible elemen-
tary modes analysis. Bioinformatics 22, 1930—1931.

Werner,T. (2008). Bioinformatics applications for pathway analysis of micro-
array data. Curr. Opin. Biotech. 19, 50—54.

/810'sreumofp103xo"soueuuogutotqﬂ:duq

