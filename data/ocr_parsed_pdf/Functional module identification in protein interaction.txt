ORIGINAL PAPER

Vol. 30 no. 1 2014, pages 81-93
doi:1 0. 1093/bioinfonnatics/btt569

 

Systems biology

Advance Access publication October 1, 2013

Functional module identification in protein interaction networks by

interaction patterns
Yijie Wang” and Xiaoning Qian1'2‘*

1Department of Computer Science and Engineering, University of South Florida, Tampa, FL 33620, USA and
2Department of Electrical and Computer Engineering, Texas A&M University, College Station, TX 77843, USA

Associate Editor: Martin Bishop

 

ABSTRACT

Motivation: Identifying functional modules in protein—protein inter-
action (PPI) networks may shed light on cellular functional organization
and thereafter underlying cellular mechanisms. Many existing module
identification algorithms aim to detect densely connected groups of
proteins as potential modules. However, based on this simple topo-
logical criterion of ‘higher than expected connectivity’, those algo-
rithms may miss biologically meaningful modules of functional
significance, in which proteins have similar interaction patterns to
other proteins in networks but may not be densely connected to
each other. A few blockmodel module identification algorithms have
been proposed to address the problem but the lack of global optimum
guarantee and the prohibitive computational complexity have been the
bottleneck of their applications in real-world large-scale PPI networks.
Results: In this article, we propose a novel optimization formulation
LCP2 (low two-hop conductance sets) using the concept of Markov
random walk on graphs, which enables simultaneous identification of
both dense and sparse modules based on protein interaction patterns
in given networks through searching for LCP2 by random walk.
A spectral approximate algorithm SLCP2 is derived to identify non-
overlapping functional modules. Based on a bottom-up greedy strat-
egy, we further extend LCP2 to a new algorithm (greedy algorithm for
LCP2) GLCP2 to identify overlapping functional modules. We compare
SLCP2 and GLCP2 with a range of state-of-the-art algorithms on syn-
thetic networks and real-world PPI networks. The performance evalu-
ation based on several criteria with respect to protein complex
prediction, high level Gene Ontology term prediction and especially
sparse module detection, has demonstrated that our algorithms based
on searching for LCP2 outperform all other compared algorithms.
Availability and implementation: All data and code are available at
http://www.cse.usf.edu/~xqian/fmi/slcp2hop/.

Contact: yijie@mail.usf.edu or xqian@ece.tamu.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on April 16, 2013; revised on September 23, 2013; accepted
on September 25, 2013

1 INTRODUCTION

Advances in high-throughput proﬁling techniques have enabled
researchers to produce large-scale proteiniprotein interaction
(PPI) datasets (Phizicky and Fields, 1995; Raman, 2010).

 

*To whom correspondence should be addressed.

Systematic analysis of these large-scale interactomic datasets
based on their graph representations, in which nodes stand for
proteins in species of interest and edges represent interactions
between proteins, has the potential to yield a better understand-
ing of protein functions computationally (Rivas and Fontanillo,
2010). One way to chart out the underlying cellular functional
organization is to identify functional modules in these networks
by grouping the proteins sharing similar biological functions into
the same modules (Navlakha et al., 2009; Nepusz et al., 2012;
Pinkert et al., 2010; Royer et al.,2008).

Intuitively, based on interactomic data, if two proteins interact
with each other, they are more likely to share the same cellular
functionalities than proteins that do not interact. Thus, densely
connected groups or subnetworks of proteins in a given network
can be Viewed as potential functional modules. Based on this
idea, many modularity-based algorithms (Newman, 2006;
Newman and Girvan, 2004) have been successfully applied to
identify functional modules in PPI networks by detecting ‘higher
than expected connectivity’ subnetworks. Several algorithms
based on Markov random walk on graphs also have been
proposed recently. For example, Markov CLustering (MCL)
algorithm is one of such module identiﬁcation algorithms for
biological network analysis by iteratively implementing
‘Expand’ and ‘Inﬂation’ operations on the transition matrix of
the underlying Markov chain of random walk on the given net-
work (van Dongen, 2000). Regularized MCL (RMCL) (Satuluri
and Parthasarathy, 2009; Satuluri et al., 2010) further extends the
original MCL algorithm to penalize the large module size at each
iteration to obtain more balanced modules with a similar number
of nodes within them. Other formulations based on Markov
random walk, including ﬁnding low conductance (LC) sets
(V oevodski et al., 2009), also can be applied in module identiﬁ-
cation, which is similar to normalized cut problems 0(ing and
Jordan, 2003) in graph partitioning to minimize the normalized
cut size across modules. Recently, several overlapping module
identiﬁcation methods have been developed to detect densely
connected modules that may overlap with each other in net-
works. For example, Cluster One (ClusterOne) (Nepusz et al.,
2012) can be Viewed as the overlapping version of normalized
cut. Link community (LinkComrn) (Ahn et al., 2010) formulates
the overlapping module identiﬁcation in an innovative frame-
work to implement the hierarchical clustering on edge graph
representations, which reveals hierarchical and overlapping or-
ganization of networks.

In addition to densely connected modules in PPI networks,
such as protein complexes, there are other topological structures

 

© The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com 81

112 /310's112u1n0fp10}x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnv uo ::

Y.Wang and X.Qian

 

in PPI networks that may possess important cellular functional-
ities. Again, based on interactomic data, the proteins that inter-
act with similar sets of other proteins in a given network also
intuitively have a higher probability of sharing the similar func-
tionalities compared with the proteins that do not share any
interacting partners or neighbors (Morrison et al., 2006;
Pinkert et al., 2010; Royer et al., 2008). These proteins may
not directly interact with each other but they still work toward
similar cellular functionalities and hence should belong to the
same modules. Take transmembrane proteins for example. It is
well known that transmembrane proteins, such as receptors in
signal transduction cascades, tend to interact with cytoplasmic
proteins as well as with extracellular ligands, but rarely interact
with themselves (Pinkert et al., 2010). To identify such types of
functional modules, many state-of—the-art blockmodel module
identiﬁcation algorithms have been proposed recently. For ex-
ample, Power Graph (PG) (Royer et al., 2008) greedily collects
topologically similar nodes into the same module based on
Jaccard index similarity. Graph Summarization (GS)
(Navlakha et al., 2009, 2008) uses the minimum description
length principle to group nodes with similar interaction patterns.
However, both PG and GS are solved by greedy algorithms,
which can not guarantee the global optimality. Additionally,
they tend to over segment the network to get relatively small
modules based on our empirical experience. A Bayesian frame-
work (Hofman and Wiggins, 2008) based on a stochastic block-
model formulation has been developed to identify modules as
well as the optimal number of modules. However, the algorithm
only guarantees to converge to local optima. Reichardt (2009)
has proposed to solve blockmodel module identiﬁcation by op-
timally mapping the given network to an image graph using
simulated annealing, and several optimization strategies also
have been proposed to accelerate the original simulated anneal-
ing algorithm (Wang and Qian, 2012, 2013). But those algo-
rithms suffer from prohibitive computational complexity due
to the inherent combinatorial complexity of the blockmodel
problem.

In this article, we propose a novel formulation to solve the
functional module identiﬁcation problem, which simultaneously
identiﬁes the previously described dense and sparse modules with
similar interaction patterns. The article is organized as follows: In
Section 2, we ﬁrst introduce the new optimization formulation by
searching for the low two-hop conductance sets (LCP2) based on
the two-hop transition matrix of the underlying Markov chain of
the random walk on a given network. Then, we derive the corres-
ponding mathematical programing problem and propose an al-
gorithm SLCP2 (spectral algorithm for LCP2), which solves LCP2
to search for non-overlapping modules by a spectral approximate
method with a close-to-optimal solution. We also present an ex-
tended algorithm (greedy algorithm for LCP2) GLCP2, which
solves LCP2 to search for overlapping modules by a bottom-up
greedy strategy. In Section 3, we evaluate and compare our
methods with other state-of—the-art algorithms for functional
module identiﬁcation on four large-scale PPI networks: the
Saccharomyces cerevisiae PPI network extracted from the
Database of Interacting Proteins (DIP) (Salwinski et al., 2004)
(SceDIP); the corresponding network from the BioGRID data-
base (Breitkreutz et al., 2008; Stark et al., 2006) (SceBioGRID);
the Homo sapiens (HsaHPRD) PPI network collected from the

Human Protein Reference Database (HPRD version 9) (Prasad
et al., 2009); and the human PPI network HsaBioGRID obtained
from BioGRID (Breitkreutz et al., 2008; Stark et al., 2006). The
experimental results of protein complex prediction show that non-
overlapping SLCP2 outperforms most of the non-overlapping
state-of—the-art algorithms and performs competitively with the
more recent RMCL algorithm (Satuluri and Parthasarathy, 2009;
Satuluri et al., 2010). When we compare GLCP2 with the other
algorithms for overlapping modules, our experiments show that
GLCP2 outperforms ClusterOne (Nepusz et al., 2012) and
LinkComm (Ahn et al., 2010). High level GO (Gene Ontology)
term (Ashburner et al., 2000) prediction results further demon-
strate that SLCP2 is superior to other non-overlapping algo-
rithms, whereas GLCP2 and LinkComm perform equally well.
Furthermore, we present a few identified functional sparse mod-
ules to illustrate that SLCP2 and GLCP2 have the advantage in
detecting functional sparse modules compared with the other
state-of—the-art algorithms in the last part of Section 3. In
Section 4, we draw our conclusions by brieﬂy summarizing the
differences between our new SLCP2 and GLCP2 algorithms and
other existing module identification algorithms.

2 METHOD

2.1 Preliminaries

Without loss of generality, let G = (V, E) represent a connected PPI net-
work, in which there exists at least one path connecting any pair of nodes.
Let V denote the set of nodes in G corresponding to n proteins and E is
the edge set denoting interactions among all n proteins. A is the adjacency
matrix of G, of which the element Ail- : 1 when node i ‘interacts’ with
node j; Ail- : 0 when there is no interaction between node i and node j
(there are no self edges and A,—,— = 0).

For random walk on G, its underlying Markov chain can be charac-
terized by a transition matrix P = D’IA, where D = Diag(d1, d2, . . . , d")
is an n x n diagonal matrix with the corresponding node degrees
(d,- = Z]. Ail, i = 1, . . . ,n) on its diagonal. As G is connected, the under-
lying Markov chain of the random walk is irreducible and ergodic.
Therefore there exists a stationary distribution satisfying PTJT = :1,
where :1,- = di/M,M 2 EL di. The conductance of a subset of nodes
S in G can be deﬁned as (King, 2003)

Z 77in
<1>p(S.§)=i.SUS=V. (1)
Z 71 i
iES
Finding k LC sets in the network G based on this conductance deﬁnition
involves partitioning the node set V into k subsets (S1, S2, . . . , Sk),

which can be formulated as the following optimization problem:

k k
min Z <1>P(S,,,S—,,) s.t. U 5,, = V; 5,, n S, = (gm/h 7e 1. (2)
h:1 h:1
We call this method LC sets deﬁned by P (LCP) for simplicity, and LCP
is equivalent to the formulation of normalized k-cut in Xing and Jordan
(2003).

2.2 Interaction patterns and transition matrix P2

Considering Markov random walk on the given network G, its corres-
ponding transition matrix P describes the transition probability that the
random walker walks from one node to another in one step. With two

directly interacting nodes (Ail- : 1), the corresponding transition prob-
A,-

ability is uniformly random among all the direct neighbors: Pg- 2?,

 

82

112 /310's112u1n0fp10}x0"sotJBurJOJutotq/ﬁduq 11101} papnolumoq

91oz ‘Og isanV uo ::

Functional module identification by interaction patterns

 

denoting the probability of walking from node i to j in one step. Clearly,
nodes without connections have no chance to reach each other in one
step. The conductance deﬁnition in (1) extends to the transition probabil-
ities between two complement partitions S and S in the given network.
Hence, ﬁnding LCP tends to ﬁnd densely connected modules as it aims to
minimize the transition probabilities between potential modules to the
rest of the network, which are dependent on the corresponding cut size
or the number of edges across potential modules.

However, in addition to densely connected modules, functional
module identiﬁcation in PPI networks desires to detect other meaningful
modules with nodes having similar interaction patterns in networks. The
star and biclique motifs in Figure 1 show that nodes with similar inter-
action patterns may be sparsely connected or even have no interactions
among them. For example, nodes marked by ‘S’ and ‘T’, which should be
grouped into two respective modules, all have the same interaction pat-
terns based on the network structure. But because there are no inter-
actions among them, existing algorithms for densely connected
modules, including LCP, rarely cluster them into the corresponding mod-
ules correctly. The second column in Figure 1 lists the random walk
transition matrix P of each motif and the module dividing lines by
LCP derived based on P. The third column in Figure 1 gives the objective
function values computed by LCP (2). Based on the analysis of the three
basic motifs, we conﬁrm that LCP only focuses on detecting dense mod-
ules, which may not be adequate for functional module identiﬁcation in
PPI networks.

To identify modules of more diverse topology based on interaction
patterns, we propose to search for LC sets deﬁned by a two-hop transi-
tion matrix P2 = P x P (LCPZ). Intuitively, nodes with similar inter-
action patterns (no matter whether densely connected or sparsely
connected) are more likely to transit back to the nodes in the same
module after two steps of random walk. Therefore, we redeﬁne the con-
ductance by replacing P with P2, which captures more meaningful modu-
lar structures in PPI networks. The fourth and ﬁfth columns in Figure 1
show P2 transition matrices and module dividing lines for three
basic motifs and LC values computed by P2, respectively. From P2 in
Figure 1, we find that the nodes with the same interaction patterns have
higher probabilities to walk to each other in two random walk steps.
Therefore, the correct module identiﬁcation of star and biclique motifs
can be achieved by ﬁnding LC sets deﬁned by the two-hop transition
matrix P2. For the clique motif, the nodes in cliques still have the same
interaction patterns though the LC value computed by P2 increases.
Therefore, the corresponding cliques can still be correctly identiﬁed by
LCP2 as potential modules. The example of these three motifs demon-
strates that dense modules like cliques and sparse modules such as stars
and bicliques can be identified simultaneously through searching for LC
sets based on P2.

Based on these motivating examples, ﬁnding LC sets using P2 has the
promising potential to discover biologically meaningful modules consist-
ing of the nodes with similar interaction patterns. We now provide the
mathematical formulation and the optimization algorithm to solve LCPZ.

Similar to LCP, we aim to solve the following minimization problem
LCP2 by using the two-hop transition matrix P2:

k k

min Z <1>P2(S,,,S—,,) m. U 5,, = V; 5,, n S, = avh #1, (3)

h:1 h:1

in which <1>P2(S;,, S_;,) is the new conductance based on P2. Note that P2 is
still a stochastic matrix and its stationary distribution is also It
(PTPTJT = PTJT = It). We can derive that <1>P2(S, S) + <1>P2 (S, S) = 1
(proof is provided in Supplementary Materials). With these, the afore-
mentioned problem (3) can be transformed to an equivalent formulation:

k k
max: <I>P2(S;,,Sh) m. Us, = V; 5,, n S, = 0,Vh #1. (4)

h:l h:l

As the underlying Markov chain is ergodic given a connected network,
we have :1in- = anJ-i = A,-j/M and :1,- = di/M. By expanding the object-
ive function in (4), we can further derive

k
Zappa,“ Sh)
h:1

n

k 2 Hip;- k 2 JTiZPiIPIj
_ Zi,jESh _ Zi,jESh [:1
_ 2 2 Hi _ E 2 Hi

h_1 iES;1 [—1 1'65};

2 i
AilPl'

_ ﬁnes), [:1 J _ 2k:foth
_ hil Z d,- _ hil xz-th

_ iES;l _

k foD’leh XTAD’IAX
= ZT— = trace — ,

h:1 thxh XTDX

where x), denotes the hth column of the n x k module assignment matrix
X, which lies in the space:

3k={X:X1k=1,,, x,e{o,1}}, (5)

in which 1;, and 1,, are vectors with all of their elements equal to 1.
Combining the transformed objective function and the constraint set
(S), we can express LCP2 as the following optimization problem:

(F) max: trace(%‘) (6)
s.t. X E 3k

2.3 Module identiﬁcation by interaction patterns

2.3.] Non-overlapping algorithm We can further transform the
problem (F) to the following relaxed optimization problem (detailed ex-
planation is given in Supplementary Materials):

max trace( YT WY)

s.t. YT Y = Ik, (7)

(F 1){
where W = D’l/ZAD’IAD’l/Z, and Y = Dl/ZX(XTDX)71/2 denotes the
relaxed assignment matrix, which is orthonormal. Let H = D’l/ZAD’l/Z.
We can rewrite W = HHT as the inner-product of H. Taking each column
of H as the normalized interaction pattern of the corresponding node, this
Gram matrix Wmeasures the interaction similarity among different nodes
(we note that the inner-product can be replaced by a general Mercer
kernel if needed). According to this inner-product form of W, nodes in
dense modules have high similarities as they share the same interaction
pattern, which is to interact with each other within modules. At the same
time, similarities among nodes in sparse modules are high because they
interact with similar neighbors in the rest of the network. Consequently,
similarities among nodes with similar interaction patterns (no matter
whether in dense or sparse modules) are higher. Therefore, nodes that
play identical roles in the network can be grouped together.

We note that a formulation similar to ours has also been independently
presented in Satuluri and Parthasarathy (2011). The authors in Satuluri
and Parthasarathy (201 1) have proposed to use a symmetrization strategy
AAT to detect interaction patterns of nodes. In our new LCP2 formula-
tion, module identiﬁcation depends on the different form HHT, which
can be viewed as the normalized version of AA T. As shown in previous
results obtained by normalized cuts, we expect that this new formulation
depending on the normalized version HHT may yield more balanced
modules that may lead to biologically meaningful functional module
identiﬁcation results.

To derive the solution strategy for LCPZ, we relax Y to be an ortho-
normal matrix and it turns out that (F 1) has a closed-form solution based
on Ky Fan Theorem.

 

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pQPBOIIIAAOG

91oz ‘Og isnﬁnv uo ::

Y.Wang and X.Qian

 

 

Motifs P LCP

P2 LCPz 2"" Largest

 

s s s j T T T T
s 0 0.5 0.5 1 0 0 0 0
s 0.5 0 0.5 l 0 0 0 0
-§-EELS-"993----Q-l-9§9----9----9 ____ -E--.
T 0 0 0.25. 0 0.25 0.25 0.25
T 0 0 0 l 0.33 0 0.33 0.33 0 22
T o 0 0 10.33 0.33 0 0.33
T o o 0 :0.33 0.33 0.33 0
s i s T T T
_§____'2_.1_P____9£§_._Q§i__9_§§_.
.

| 0 0.33 0.33 0.33 1.33

 

13263"3163"'1r'T5753""innit???" 031 a.

 

Eigenvector of W‘

I I I I
S T T T T n
1 0

.
.

 _______ .2 ____ __o ____ 

T 010.25 025 0.25 0.25

T 010.25 025 0.25 0.25 o M

T 010.25 025 0.25 0.25

T 010.25 025 0.25 025

 

 

0 0 0081022 0:19 0:31 0:19

 

 

 

0 0 0:00 : 0:22 0.19 0.19 0.31 I
I I I
S S S T T T 1
s s g T T T I I
S 0.5 0.5) 0 0 0
-§---9-‘r’---P-§-l--9 ____ --9 ____ --°---. 0
T 0 0 £0.33 033 0.33 01
T 0 0 10.33 033 0.33
T o 0 50.33 033 0.33
4,, I I I

 

 

Fig. 1. Different module identiﬁcation results obtained by using P and P2. The ﬁrst column displays three basic motifs (star motif, clique motif and
biclique motif) [used by Royer et al. (2008)] and the dashed lines show the natural partitions. The second column gives the P of three basic motifs and the
dashed lines denote the module dividing lines obtained by LCP. The third column gives the minimum objective function values by (2). The fourth column
gives the P2 of three basic motifs and the dashed lines indicate the identiﬁed modules by LCPZ. The ﬁfth column shows the minimum objective function
values based on (3). The last column illustrates the second largest eigenvector of W* used in Algorithm 1

THEOREM 1. ( Ky Fan Theorem) Let T be a symmetric matrix with
eigenvalues A1 3 A2 3  3 A" and the corresponding eigenvectors

U = [141, . . . , an]. Then 2:1 A,- = rTnax trace(XTTX). Moreover, the op-
X X20.

timal X" is given by X" = [141, ...
onal matrix.

, uk]Q with Q being an arbitrary orthog-

Following this theorem, we can use the largest k eigenvectors of the
Gram matrix W to approximate the module assignment matrix Y.
Therefore, we propose our module identiﬁcation algorithm SLCP2 in
Algorithm 1.

 

Algorithm 1 (Non-overlapping): Spectral algorithm for LCP2 (SLCPZ)

Input: Adjacency matrix A and the number of modules k

Output: Module assignment matrix X”

1. Add self loops to A = A + 1,,

2. Compute W = D’l/ZAD’IAD’I/2

3. W* = W — Diag(diag(W))

4. Find the largest k eigenvalues and their corresponding eigenvectors
[E, Vk] = eig(W*,k)

5. Obtain the approximated module assignment R by pivoted QR decom-
position: VkTP = Q[R11, R12], then R = [1,, R;,1R12]PT

6. The module membership of each node is determined by the row index
of the largest element in the absolute values of the corresponding column
of R

 

 

The ﬁrst step in the algorithm aims to compute the interaction simi-
larity more accurately by considering the self connection. Adding self
loops can make dense modules more distinguishable and avoid impairing
the dense modular structure by considering interaction patterns. The se-
cond step computes W. The third step removes the diagonal part of the
Gram matrix W to get rid of the inﬂuence of self similarity because pro-
teins tend to be clustered into single node modules when they have large
self similarities. To obtain modules of appropriate size, removing self
similarity is necessary. The fourth step obtains the k largest eigenvectors
of W*. Steps 5 and 6 use the pivoted QR decomposition to approximate
the module assignment matrix X (Zha et al., 2001). The pivoted QR
decomposition is a better option than the classic k-means method. It is
well known that the performance of k-means heavily depends on its ini-
tialization. However, when dealing with a large-scale network that may
have thousands of potential modules, it is difﬁcult for k-means to ﬁnd

good initializations. Using the pivoted QR decomposition avoids the ini-
tialization step, therefore better performance can be achieved. As illu-
strated, the last column of Figure 1 exhibits the second largest
eigenvector of W*, from which we can easily distinguish the two different
modules in the three motifs in Figure 1.

2.3.2 Overlapping algorithm Based on the previously derived Gram
matrix W, which contains the information of interaction similarity among
all the nodes in the given network, we can further derive a bottom-up
greedy algorithm to identify overlapping functional modules. The pro-
cedure of the greedy algorithm is illustrated in Algorithm 2. The idea of
adopting the greedy strategy is similar to the one used in ClusterOne
(Nepusz et al., 2012) to grow each module from each single protein as
a seed. For each iteration, we add proteins to modules to acquire the most
gain in the weight density of a module h, which can be computed as

2 W1,-
i,jES;l

Wd(Sh) = W
h

, (8)
where WU measures the interaction similarity between proteins i and j.
We keep adding proteins to potential modules until there is no increase of
the weight density.

 

Algorithm 2 (Overlapping): Greedy algorithm for LCP2 (GLCPZ)

Input: Gram matrix W

Output: Module assignment matrix X0

1. Assign each protein in its own module W S
2. Compute the average weight density Q = w
3. while(Q > S)

 

4 Shufﬂe protein list V

S for i = 1 : |V|

6. Add the protein V,- to existing module h to achieve the largest
7 positive weight density gain.

8 endfor

9. Re-compute the average weight density Q.

10. endwhile
11. Post-processing the obtained modules.

 

The post-processing step in Line 11 of Algorithm 2 aims to remove
low-quality modules and merge highly overlapped modules. Because our

 

84

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} pQPBOIIIAAOG

91oz ‘Og isanV uo ::

Functional module identification by interaction patterns

 

LCP2 formulation can detect both densely connected modules and spar-
sely connected modules (the sparsely connected modules contain proteins
with similar interaction to the rest of the network), we use two quality
functions to evaluate the obtained modules. One quality function is
qfd = edgedensity x sqrt(size), which has been similarly adopted in Shih
and Parthasarathy (2012) to identify high-quality dense modules. The
other quality function is qfs = #sharedproteins/ size for sparse modules.
We remove the modules when qfd <03 and qfs < ,8, where a and ,8 are two
user-speciﬁed thresholds. With larger or and ,8, we may remove a larger
number of low-quality modules by qfd and qfs. After removing low-qual-
ity modules, we merge highly overlapped modules based on

NA(a, b) = 152,17 5V3, where a, b are two modules with Va and Vb proteins
respectively. If NA(S,-, S j) > p, we merge modules S,- and / together. Here,
[7 is another tuning parameter and we typically set it over 0.9 to guarantee

that only highly overlapped modules are merged.

 

3 EXPERIMENTS

We first introduce how we implement the algorithms that we take
for performance comparison, where we obtain the PPI networks
and protein complex golden standard sets, and what criteria we
use to evaluate the performance of the selected algorithms. After
that, we compare all algorithms on synthetic networks with both
dense and sparse modular structures and show that both the non-
overlapping and overlapping algorithms (SLCP2 and GLCP2, re-
spectively) based on the two-hop transition matrix outperform all
other state-of—the—art methods. Then, we analyze the performance
of protein complex and high level GO term predictions to dem-
onstrate the potential of predicting biologically meaningful mod-
ules by all compared algorithms. In the end, we illustrate that the
algorithms based on our LCP2 formulation are superior to the
state-of—the-art algorithms in identifying sparse functional mod-
ules by displaying the module detection results for several speciﬁc
biological functional sparse modules.

3.1 Algorithms, data and metric

3.1.] Algorithms For algorithms that identify non-overlapping
modules, we compare SLCP2 with ﬁve state-of-the-art algo-
rithms, which are LCP (Xing and Jordan, 2003), MCL (van
Dongen, 2000), RMCL (Satuluri and Parthasarathy, 2009;
Satuluri et al., 2010), GS (Navlakha et al., 2009) and PG
(Royer et al., 2008). Comparing with LCP aims to show that
ﬁnding LC sets through P2 is superior to LCP based on the
conductance deﬁnition by P, as LCP only focuses on detecting
dense modules. We also compare SLCP2 with MCL and RMCL
because they are widely used network clustering algorithms in
biological network analysis and have been shown to give bio-
logically meaningful results. Additionally, two other algorithms,
GS and PG, are chosen as they search for modules based on
interaction patterns and hence are also able to detect both
dense and sparse modules as SLCP2 does.

For overlapping module identiﬁcation algorithms, we com-
pare our GLCP2 with two other recently proposed algorithms:
ClusterOne (Nepusz et al., 2012) and LinkComm (Link
Community) (Ahn et al., 2010). To distinguish non-overlapping
and overlapping algorithms, we mark all the overlapping algo-
rithms with a star (*) in all the ﬁgures in our experimental results.

As discussed earlier, LCP is equivalent to the normalized k-cut
problem Oﬁng and Jordan, 2003). Therefore, we adopt the

spectral method proposed in Xing and Jordan (2003) to solve
LCP. The implementation of the k-means clustering algorithm
used by LCP is based on the procedure proposed in Bisgin and
Dalfes (2008). We have obtained the source code for MCL
(http://www.micans.org/mcl), RMCL (http://www.cse.ohio-
state.edu / satuluri/ research. html), GS (https: //open-innovation.
alcatel-lucent.com/proj ects/gscode/), PG(http: //www.biotec.tu—
dresden.de/re-search/schroeder/powergraphs/),
ClusterOne(http://www.paccanarolab.org/cluster-one/index.
html) and LinkComm (https://github.com/bagrow/linkcom)
from the web pages provided in the corresponding articles.

For non-overlapping module identiﬁcation algorithms, SLCP2
and LCP have one parameter k (the number of modules) and
MCL also has one tuning parameter called ‘Inﬂation’ I F. RMCL
has two tuning parameters, which are ‘balance’ b and ‘Inﬂation’
I F. For the number of modules k in SLCP2 and LCP, we imple-
ment the grid search from k: 50(L3000 with an interval of 100.
For [F in MCL, we similarly search from 1.2 to 5.0 with an
interval of 0.1. For RMCL, we set b and [F to 0.5 and 2.0,
respectively, based on the suggestions in the articles (Satuluri
et al., 2010; Shih and Parthasarathy, 2012). Because both PG
and GS are hierarchical bottom-up algorithms, they do not
have any tuning parameter.

For overlapping module identiﬁcation algorithms, LinkComm
has one parameter t and GLCP2 has three parameters a, )3 and 1).
For LinkComm, we set the threshold t = 0.2 as it yields the best
results in our experiments. For GLCP2, the parameters set
(a, 0,12) determines the quality of the results. From our experi-
ence, 03,12) = (08,09) gives good performance. As to a, it de-
pends on the density of the original network. In the following
experiments, we set a = 0.76 for the Sce PPI networks and
a = 0.7 for the Hsa PPI networks because the Hsa PPI networks
are more sparse than the Sce PPI networks.

3.1.2 Data We have run all these selected algorithms on four
PPI networks. Two of them are S.cerevisiae (Sce) PPI networks
obtained from the DIP (Salwinski et al., 2004) (SceDIP) and
BioGRID database (Breitkreutz et al., 2008; Stark et al., 2006)
(SceBioGRID), respectively. The other two are the H.sapiens
(Hsa) PPI networks extracted from HPRD (Prasad et al., 2009)
(HsaHPRD) and BioGRID database (Breitkreutz et al., 2008;
Stark et al., 2006) (HsaBioGRID), respectively. We use the largest
components of these four networks as the input of the algorithms.

We evaluate the complex prediction performance of the algo-
rithms based on four protein complex golden standards. For Sce
PPI networks, we use Munich Information Center for Protein
Sequences (MIPS) (Mewes et al., 2004) and Saccharomyces
Genome Database (SGD) (Hong et al., 2008) golden standards.
For Hsa PPI networks, we adopt the Human Protein Complex
Database with a Complex Quality Index (PCDq) (Kikugawa
et al., 2012) as well as CORUM (comprehensive resource of
mammalian protein complexes) golden standards (Ruepp et al.,
2008) for our performance evaluation. We use all golden stand-
ard protein complexes with two or more proteins in all our
experiments.

For examining whether the detected modules capture protein
functional relationships other than just protein complexes, we
use the high-level GO terms in all three domains (molecular
function (F), biological process (P) and cellular component

 

85

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} pQPBOIIIAAOG

91oz ‘Og isanV uo ::

Y.Wang and X.Qian

 

(C)) as the golden standard for GO term prediction. Any GO
term, whose information content (IC) (Shih and Parthasarathy,
2012) is >2, is considered as a high-level GO term. The deﬁnition
of the IC ofa GO term g is IC = —log(|g|/|root|) as given in Shih
and Parthasarathy (2012), where ‘root’ is the corresponding root
GO term (either F, P or C) of g. In addition, we remove GO
terms that contain <2 proteins. The detailed information of the
networks, complex golden standards and GO terms are listed in
Table 1.

3.1.3 Metric To evaluate the performance for complex predic-
tion, we use two independent quality measures [used by Nepusz
et al. (2012)] to assess the similarity between the predicted com-
plexes and the golden standard reference complexes. In our ex-
periments, we set the minimum size of detected modules to three
for fair comparison between all competing algorithms. The
ﬁrst measure counts the number of predicted modules matched
to the golden standard reference modules. A predicted module a
with Va proteins is considered a match to a reference module b
with V), proteins when the neighborhood afﬁnity
NA(a, b) = 15:33:, 2 0.25 (Li et al., 2010; Nepusz et al., 2012).
The threshold of 0.25 is chosen because it represents the case
when at least half of the complexes overlap if the two compared
complexes are equally large. The second measure is the geometric
mean of two other measures, which is the cluster-wise sensitivity
(Sn) and the cluster-wise positive predictive value (PPV) (Li
et al., 2010). Given r predicted and s reference complexes, let ti]-
denote the number of proteins that exist in both predicted com-
plex i and reference complex j, and wj represent the number
of proteins in reference complex j. Then Sn and PPV can be
deﬁned as

 

2 max ti]-
j=l i=l,...,r

Y 1‘
Sn _ — , PPV = 
Because Sn can reach its maximum by grouping all proteins in
one module, whereas PPV can be maximized by putting each
protein in its own module, we use their geometric mean as ‘ac-
curacy’ to balance these two measures (Acc = \/ Sn x PPV) (Li
et al., 2010; Nepusz et al., 2012).
To investigate the functional signiﬁcance of identiﬁed mod-
ules, we follow the same strategy in Shih and Parthasarathy

(2012) to compute F measure based on high-level GO term
prediction.

Table 1. Information of the four real-world PPI networks

 

Network Number Number MIPS SGD PCDq CORUM |GO|
of nodes of edges

 

SceDIP 4980 22 076 203 305 7 7 1166
SceBioGRID 5640 59 748 203 305 7 7 1172
HsaHPRD 9269 36 917 7 7 1204 1294 4452
HsaBioGRID 14 283 87 397 7 7 1204 1294 4457

 

Note: The networks are the largest components of the original datasets. |G0| is the
number of GO terms whose IC is >2.

Let C = {c1,c2,  ,ck} denote the identiﬁed modules and
G = {g1, g2, . . . , g1} denote the selected GO terms. We can cal-
culate the number of identified modules that match at least one
GO term denoted by NW: NW 2 |{c,~ e ClNA(c,-,gj)>0.25,
Elgj e G}|. The number of GO terms that match at least one
identiﬁed module can be computed: NCg = |{g,- e GlNA(c,-,gj)
>0.25, 3c,- 6 C}|. Based on these numbers, we can further com-
pute precision and recall: precision = %, recall 2  The ﬁnal
F—measure is the harmonic mean of precision and recall:
F = 2 x precision x recall/ (precision + recall).

Finally, all experiments illustrated in this article can be accom-
plished within 1 h on a 2.4 GHz quad-core CPU and 6 GB RAM
computer. Except when identifying modules in the HsaBioGRID
PPI network, PG and SG fail to execute due to the large memory
requirement from two algorithms for this large PPI network.
Based on the simulation results, the run time of SLCP2 and
GLCP2 is competitive with the other algorithms. For example,
SLCP2 only takes around 2 min for clustering the SceDIP PPI
network into k: 1000 modules and GLCP2 needs <1 min for
analyzing the SceDIP PPI network.

 

3.2 Synthetic networks

To illustrate the performance difference of different algorithms,
we ﬁrst evaluate all the selected algorithms on synthetic networks
with the known ground truth. The modular structure of synthetic
networks is shown in Figure 2A. There are three dense modules
of different sizes together with two sparse modules of the same
size. To test statistical signiﬁcance, we generate the null model
by shufﬂing edges from an original synthetic network based on
the Maslov7Sneppen procedure (Maslov and Sneppen, 2002).
Figure 2B is one example of the random network after half of
the original edges are permuted. The performance is evaluated by
generalized normalized mutual information (GNMI)
(Lancichinetti et al., 2009) for both non-overlapping and over-
lapping module identiﬁcation algorithms. GNMI ranges from 0
to 1 and it equals to 1 when the module identiﬁcation result is the
same as the ground truth.

Figure 2C shows the mean values and the standard deviations
of GNMI obtained by all the algorithms on 100 random null
networks. For non-overlapping algorithms, SLCP2 is superior to
LCP, MCL and RMCL. For PG and GS, although the obtained
GNMI values are better than LCP and MCL, they may not
provide useful biological information as their identiﬁed modules
are ﬁne grained (one or two nodes in each module). For over-
lapping module identification algorithms, GLCP2 outperforms
ClusterOne and LinkComm. Figure 2D plots the
—log(p— value) of the t-test scores of SLCP2 compared with
other non-overlapping algorithms as well as the comparison of
GLCP2 to ClusterOne and LinkComm. From Figure 2D, we
find that both SLCP2 and GLCP2 are significantly better than
other state-of-the-art algorithms on synthetic networks with the
ground truth modular structure.

In addition, we estimate the statistical signiﬁcance for each
identiﬁed module in synthetic random networks for all nine al-
gorithms. We annotate the dense modules in Figure 2A as D1,
D2 and D3 and sparse modules as S1 and S2. Based on 100
random null networks, for each module, we can obtain the dis-
tribution of corresponding Acc scores based on the known

 

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} pQPBOIIIAAOG

91oz ‘Og isanV uo ::

Functional module identification by interaction patterns

 

 

 

 

SLCP2 vs. other algorithms

GLCP2 vs. other alogrithms

0

LCP RMCL MCL 0 ClusterOne" LinkComm'

Fig. 2. Performance comparison on synthetic networks: (A) the adjacency
matrix of the original network; (B) one example of the randomly shufﬂed
network (obtained by shuffling half of the original edges); (C) GNMI
comparison among all algorithms; (D) t-test results

ground truth. Figure 3A displays the mean values and the stand-
ard deviations of Ace scores produced by all the algorithms on
every module in Figure 2A. For example, the first nine bars
indicate the mean values and the standard deviations of Ace
scores from all nine competing algorithms in detecting dense
module D1 in Figure 2A. Based on the distributions of Ace
scores, we can further compute the P—values of our proposed
algorithms compared with other state-of-the-art algorithms.
Figure 3B plots the —log(p—value) of the t-test scores of
SLCP2 compared with other non-overlapping algorithms and
the comparison of GLCP2 to ClusterOne and LinkComm on
all ﬁve modules, respectively. We consider our algorithms are
significantly better when —log(p — value) 2 3 (p — value 5
1.0e — 3). From Figure 3B, we ﬁnd that LCP and SLCP2 are
competitive in identifying dense module D1. For the rest of the
modules and algorithms, the —log(p — value) values shown in
Figure 3B imply that our SLCP2 and GLCP2 achieve signiﬁ-
cantly better performance in detecting both dense and
sparse modules. Furthermore, from Figure 3B, we find the
bars for sparse modules (S1 and S2) are typically higher than
those corresponding to dense modules, which further validates
that the competing algorithms focus more on detecting dense
modules, whereas our proposed algorithms can simultaneously
detect both dense and sparse modules based on interaction
patterns.

3.3 Complex prediction

We test the quality of a module identiﬁcation algorithm by how
well it can be applied to make predictions for protein complexes.
We compare SLCP2 with other state-of—the-art non-overlapping
module identiﬁcation algorithms, including LCP, RMCL, MCL,
GS and PG, on four PPI networks. Also, to detect overlapping
modules, we compare GLCP2 with ClusterOne and LinkComm.
The information of the module identiﬁcation results and the op-
timal parameters used by each algorithm are reported in Tables 2
and 3.

For non-overlapping module identiﬁcation algorithms, as
shown in Tables 2 and 3, SLCP2 and RMCL are competitive
and outperform all the other non-overlapping algorithms. For
the SceDIP PPI network, SLCP2 achieves better performance
than RMCL because it predicts more matched protein complexes
and has a higher Acc score. For other PPI networks, SLCP2 and
RMCL obtain competitive results, as SLCP2 consistently pre-
dicts more matched protein complexes, whereas RMCL gets
higher Acc scores. In addition, SLCP2 has the best coverage
with more proteins clustered into corresponding modules on all
four PPI networks except the SceBioGrid PPI network. For the
SceBioGrid PPI network, RMCL only covers one more protein
than SLCP2.

For overlapping module identiﬁcation algorithms, based on
Tables 2 and 3, we find that GLCP2 outperforms LinkComm
and ClusterOne. Although both GLCP2 and LinkComm identify
competitive numbers of protein complexes in different golden
standards, GLCP2 consistently achieves higher Acc scores for
all four PPI networks. Finally, GLCP2 also has the best coverage
on all four PPI networks except the SceBioGrid PPI network, on
which LinkComm has a higher coverage than GLCP2. If we
consider that LinkComm identiﬁes larger numbers of smaller
overlapping modules as shown in both tables, we expect that
GLCP2 may provide more biologically meaningful results.

Furthermore, we test the statistical signiﬁcance of our algo-
rithms in terms of predicting the SGD golden standard com-
plexes on the SceDIP PPI network. We ﬁrst generate 100
random networks from the original SceDIP PPI network by ran-
domly shufﬂing the original edges based on the Maslov7Sneppen
procedure (Maslov and Sneppen, 2002). Then, we obtain the
empirical distributions of Ace scores with respect to the predic-
tion of the SGD golden standard on these 100 randomized net-
works for the competing algorithms. Based on the results
provided in Table 2, we compare SLCP2 with RMCL for non-
overlapping algorithms and GLCP2 with LinkComm for over-
lapping algorithms because they are the two best-performing
algorithms in predicting the SGD complexes among non-
overlapping algorithms and overlapping algorithms, respectively.
For non-overlapping algorithms, the average and the standard
deviation of Ace scores obtained by SLCP2 are 0.5180 and
0.0064. Although for RMCL, the average and the standard de-
viation of the Ace scores are 0.5137 and 0.0044. For overlapping
algorithms, the average and the standard deviation of Ace scores
of GLCP2 are 0.5018 and 0.0054. For LinkComm, the average
and the standard deviation of the Ace scores are 0.4983 and
0.0047. By two-sample t—test, SLCP2 is signiﬁcantly better than
RMCL with the P—value 1.429e-08 and GLCP2 is signiﬁcantly
better than LinkComm with the P—value 1.095e-07.

 

87

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} papeolumoq

91oz ‘Og isanV uo ::

Y.Wang and X.Qian

 

 

GLCP2 vs. other

   

 

   
 

SLCszs.other ' "L
|

 

3

  

 

D1 D2 Si 52 D3

  

   
  
         

2

-Iog(p-value)

 
   
    

2%.

.4/2/

 

MM

 

" ’ %%ﬂiiiiiiWiiﬂiﬂiﬂﬁ

22;
ZZZZ’W’W’”;

D1 D2 51 52 D3

Fig. 3. Statistical performance in detecting each module: (A) Acc scores comparison among all algorithms; (B) t-test results based on distributions of Acc.

For low bars in (B), we put the —log(P — value) values on top of the bars

Table 2. Performance comparison for complex prediction on Sce PPI networks

 

 

Network Golden Method Coverage Number of Average size Number Sn PPV Acc
standard clusters(size :3) of matched
SceDIP MIPS LCP(k = 1000) 2572 525 4.90 62 0.2346 0.3825 0.2995
RMCL 3725 814 4.57 79 0.2834 0.3977 0.3357
MCL (IF = 2.2) 3846 675 5.70 68 0.2821 0.3787 0.3269
GS 2391 550 4.35 65 0.185 0.4067 0.2743
PG 2717 364 7.46 14 0.1153 0.2978 0.1853
SLCP2(k 21000) 4564 783 5.83 84 0.3050 0.3732 0.3378
ClusterOnea 1461 358 4.89 81 0.2641 0.3605 0.3085
LinkComma 2344 1725 4.12 102 0.3093 0.3575 0.3326
GLCP2a 3447 1517 4.46 104 0.3066 0.3928 0.3470
SGD LCP(k = 1000) 2572 525 4.90 75 0.3484 0.6058 0.4594
RMCL 3725 814 4.57 125 0.4572 0.6039 0.5254
MCL (1;: 2.3) 3630 659 5.70 115 0.4468 0.5735 0.5102
GS 2391 550 4.35 88 0.2915 0.6689 0.4416
PG 2717 364 7.46 11 0.1714 0.4102 0.2615
SLCP2(k = 1000) 4564 783 5.83 125 0.4917 0.5621 0.5257
ClusterOnea 1461 358 4.89 113 0.4037 0.5775 0.4828
LinkComma 2344 1725 4.12 136 0.4567 0.4895 0.4727
GLCP2a 3447 1517 4.46 155 0.4894 0.5850 0.5350
SceBioGRID MIPS LCP(k = 1000) 3503 557 6.30 77 0.2978 0.4252 0.3558
RMCL 5210 772 4.57 81 0.4908 0.3921 0.4346
MCL (IF = 3.3) 3544 338 10.49 45 .3495 0.3270 0.3380
GS 3315 609 5.44 83 0.2420 0.4296 0.3224
PG 2601 356 7.31 2 0.0740 0.3128 0.1521
SLCP2(k = 1000) 5209 782 6.76 84 0.3723 0.3906 0.3810
ClusterOnea 2580 473 7.57 101 0.4797 0.3938 0.4346
LinkComma 4633 4108 5.48 143 0.5891 0.3526 0.4557
GLCP2a 4440 2183 7.74 136 0.5006 0.4204 0.4587
SGD LCP(k = 1000) 3503 556 6.30 98 0.4672 0.6236 0.5398
RMCL 5210 772 4.57 137 0.6628 0.5915 0.6262
MCL (IF = 3.2) 3652 335 10.49 80 0.4291 0.4752 0.4516
GS 3315 609 5.44 130 0.3774 0.6544 0.4969
PG 2601 356 7.31 3 0.135 0.4517 0.2469
SLCP2(k = 1000) 5209 782 6.76 151 0.5847 0.5926 0.5886
ClusterOnea 2580 473 7.57 158 0.6703 0.5621 0.6138
LinkComma 4633 4108 5.48 207 0.7955 0.4637 0.6037
GLCP2a 4440 2183 7.74 204 0.7341 0.5887 0.6574

 

Note: Bold values denote the best scores corresponding to speciﬁc criteria.
“Overlapping module identiﬁcation algorithms.

In summary, both SLCP2 and GLCP2 based on our new op-
timization formulation LCP2 using the concept of random walk
on graphs are among the best performing algorithms for protein
complex prediction. However, protein complexes have typical

dense modular structure within which proteins are highly con-
nected. As our SLCP2 and GLCP2 aim to detect both dense and
sparse modules, these protein complex prediction results only
exhibit one aspect of our algorithms’ performance. In the

 

88

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} papeolumoq

9103 ‘Og isanV uo ::

Functional module identification by interaction patterns

 

Table 3. Performance comparison for complex prediction on Hsa PPI networks

 

 

Network Golden Method Coverage Number of Average Number Sn PPV Acc
standard clusters (size :3) size of matched
HsaHPRD PCDq LCP(k = 1000) 8561 979 8.74 205 0.3986 0.4206 0.4095
RMCL 6879 1508 4.56 290 0.3538 0.5990 0.4604
MCL (IF = 3.3) 6534 1279 5.11 237 0.3255 0.5633 0.4282
GS 4719 1167 4.04 167 0.2169 0.6785 0.3836
PG 5172 805 6.25 22 0.2016 0.3453 0.2639
SLCP2(k = 1000) 8657 1494 5.79 303 0.3916 0.4774 0.4324
ClusterOnea 2915 771 4.53 199 0.2379 0.6478 0.3925
LinkComma 7183 4107 4.58 418 0.4314 0.3029 0.3652
GLCP2a 8181 4257 4.50 450 0.4145 0.5377 0.4721
CORUM LCP(k = 1000) 8561 979 8.74 172 0.3729 0.2049 0.2764
RMCL 6879 1508 4.56 247 0.3291 0.2777 0.3023
MCL (IF = 3.3) 6534 1279 5.11 215 0.3192 0.2567 0.2862
GS 4719 1167 4.04 195 0.2123 0.3084 0.2559
PG 5172 805 6.25 2 0.1609 0.2084 0.1831
SLCP2(k = 1000) 8657 1494 5.79 257 0.3748 0.2227 0.2889
ClusterOnea 2915 771 4.53 233 0.2623 0.2624 0.2623
LinkComma 7183 4107 4.58 614 0.4676 0.1349 0.2510
GLCP2a 8181 4257 4.50 418 0.3859 0.2413 0.3051
HsaBioGrid PCDq LCP(k = 1000) 7042 958 7.35 111 0.2798 0.4945 0.3720
RMCL 10 698 1536 6.96 223 0.3777 0.5054 0.4369
MCL (IF = 3.3) 5345 917 5.82 59 0.1668 0.5563 0.3046
GS
PG
SLCP2(k = 1800) 12889 1622 7.95 205 0.3523 0.4281 0.3884
ClusterOnea 10543 1753 10.31 162 0.4098 0.3869 0.3982
LinkComma 10322 6954 5.70 372 0.4467 0.2784 0.3526
GLCP2a 10948 5607 5.31 360 0.4190 0.4943 0.4545
CORUM LCP(k 21000) 958 7042 7.35 166 0.3558 0.2611 0.3047
RMCL 10698 1536 6.96 190 0.4286 0.2689 0.3395
MCL (IF = 3.3) 5345 917 5.82 82 0.2094 0.2535 0.2304
GS
PG
SLCP2(k=1800) 12889 1622 7.95 221 0.4235 0.2331 0.3142
ClusterOnea 10543 1753 10.31 197 0.5797 0.2548 0.3445
LinkComma 10322 6954 5.70 724 0.6856 0.1193 0.286
GLCP2a 10948 5607 5.31 615 0.5047 0.2313 0.3476

 

Note: For HsaBioGRID PPI network, GS and PG do not have results due to the memory limitation. Bold values denote the best scores corresponding to speciﬁc criteria.

“Overlapping module identiﬁcation algorithms.

following sections, we further compare the performance of dif-
ferent algorithms on functional module identiﬁcation, especially
for sparse module identiﬁcation.

3.4 GO term prediction

In this section, we follow the same strategy in Shih and
Parthasarathy (2012) to compare the biological significance of
identified modules by all nine algorithms with respect to GO
term prediction. Instead of using all GO terms, we only consider
high-level GO terms with IC larger than two so that we can
better understand the functional speciﬁcity of identified modules.
The comparison for GO term prediction is illustrated in
Figure 4A illustrates the F-measure comparison among all the
algorithms. Figure 4B shows the percentage of GO terms that are
considered to be correctly matched to at least one of the

identiﬁed modules by different algorithms. Among non-overlap-
ping algorithms, Figure 4 clearly illustrates that SLCP2 not only
detects the largest number of matched high-level GO terms for
each PPI network, but also obtains the best F-measure score.
Therefore, for non-overlapping module identiﬁcation, SLCP2
outperforms other state-of-the-art non-overlapping algorithms
on high-level GO term prediction. For overlapping algorithms,
based on Figure 4, GLCP2 identiﬁes more matched GO terms
and achieves higher F-measure scores than ClusterOne and
LinkComm on two Sce PPI networks, which indicates that
GLCP2 outperforms ClusterOne and LinkComm for two yeast
networks. For both Hsa PPI networks, GLCP2 and LinkComm
uncover competitive numbers of matched GO terms; however,
LinkComm obtains better F-measure scores because it gets
higher recall scores due to the fact that LinkComm detects a
larger number of small overlapping modules, as it does not

 

89

112 /310'S[BIIJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} papeolumoq

9103 ‘Og isanV uo ::

Y.Wang and X.Qian

 

have a post-processing procedure to deal with highly overlapping
modules. These small overlapping modules can be matched to
the same GO terms and hence the recall scores can get higher.
Among all nine algorithms, for GO term prediction, GLCP2 and
LinkComm perform competitively with each other and outper-
form the other compared algorithms.

3.5 Sparse module identiﬁcation

To further illustrate the advantage of our LCP2 formulation in
detecting functional modules with similar interaction patterns,
we compare the performances of different algorithms with re-
spect to identifying functional sparse modules in this section.
However, in general, as we do not have sparse module golden
standards, it is hard to provide quantitative measures for detect-
ing sparse modules. In this section, we provide the examples of
well-understood biologically meaningful sparse modules to
evaluate the capability of different algorithms in identifying f unc-
tional sparse modules. Through the comparison of identiﬁed
corresponding modules, we demonstrate that our SLCP2 and
GLCP2 are superior in detecting functional sparse modules.

3.5.] Pro-survival proteins and cytochrome c release The pro-
survival proteins (BCL2, MCLl and BCL2A1), which constitute
the Bcl-2 subfamily, directly or indirectly prevent the release of
cytochrome c from mitochondria Wang et al., 1997). Therefore,
the pro-survival proteins module should interact with the module
that has the release of cytochrome c from mitochondria func-
tionality. In Figure 5, we provide the comparison of the module
identiﬁcation results for detecting these two modules in the
HsaBioGRID PPI network. For the pro-survival proteins
module, we mark the three members in circle shapes. For the
functional module with the release of cytochrome c from mito-
chondria functionality (HRK, BCL2L11, BID, BNIP3, BIK,
PMAIPl, BAKl, BMF and BBC3), we mark the members in

 

 

 

 

 

 

 

 

 

F-measura

 

 

 

.
0' mun: _
" mSLCFZ

ERMCL .. .. .. .. .-
E MCL

 
  
 
     
  

 

 

w ClusterOne“
56¢ LinkComm'
We chz-

  
      
 
 

 

Percentage of match GO terms W

 ..... ..
:2

      
   

 

 

HsaHPRD HsaBioGrid
Fig. 4. The top bar ﬁgure shows the comparison results based on the F
measure on four PPI networks. The bottom ﬁgure displays the compari-
son of the percentages of matched GO terms in the complete set of se-
lected high-level GO terms. For the HsaBioGRID PPI network, GS and
PG fail to execute due to the memory limitation

rectangle shapes. Shaded areas represent the modules detected by
the corresponding algorithms. Based on the interactions in the
HsaBioGRID PPI network, we find these two modules are
sparse with constituent proteins having similar interaction pat-
terns. As shown in Figure 5, LCP detects part of the cytochrome
c release module but fails to identify the pro-survival module.
RMCL splits pro-survival proteins into two modules. MCL fails
to detect both the cytochrome c release module and the pro-
survival module. ClusterOne groups those two modules into
one. LinkComm fails to detect the pro-survival modules. Only
our algorithms SLCP2 and GLCP2, which take the interaction
patterns into account, achieve the most promising results. For
two algorithms PG and GS, which also consider the interaction
patterns, we do not have their module detection results because
both algorithms run out of memory on this relatively large
network.

3.5.2 FGF/FGFR signaling FGF/FGFR signaling has been
associated with a diverse and broad range of biological functions,
including cell growth, cell differentiation and the promotion of
angiogenesis (Powers et al., 2002). FGFR stands for the fibro-
blast growth factor receptors, which bind to the members of the
family of FGF (ﬁbroblast growth factor) proteins. Based on their
functionality, FGFR proteins should interact with FGF pro-
teins. Figure 6 illustrates the module identiﬁcation results for
FGFR and FGF modules in the HsaHPRD PPI network.
Based on the network structure, FGFR and FGF modules are
two sparse modules. We mark the FGFR proteins in rectangle
shapes and FGF proteins in circle shapes. Shaded areas represent
the modules detected by the corresponding algorithms. As shown
in Figure 6, LCP, RMCL, MCL, ClusterOne and LinkComm
again can not identify these two modules correctly. PG, GS and
our algorithms have the ability to correctly detect them.
However, PG and GS over-segment the FGFR module, whereas
our algorithms can provide better module identification results.

4 DISCUSSION AND CONCLUSION

The compared module identiﬁcation algorithms in this article use
different module deﬁnitions and methods. LCP, ClusterOne,
SLCP2 and GLCP2 are all based on finding LC sets deﬁned by
the Markov chain of random walk on networks. LCP and
ClusterOne are the non-overlapping and overlapping algorithms
of searching for LC sets deﬁned by the transition matrix P (LCP)
of the underlying Markov chain. Therefore, they tend to find
densely connected modules. However, SLCP2 and GLCP2 are
respective algorithms for searching for non-overlapping and
overlapping modules by finding LC sets based on the two-hop
transition matrix P2 (LCP2) of the random walk Markov chain.
By taking the advantage of ﬁnding two-hop LC sets, our new
algorithms detect modules based on the interaction patterns,
which reﬂect functional similarity between proteins. In Satuluri
and Parthasarathy (2011), the authors present a similar formu-
lation to search for modules based on the interaction similarity.
However, our formulation depending on the Gram matrix W
derived by LCP2 can be viewed as the normalized version of
the symmetrization matrix proposed in Satuluri and Parthasar-
athy (2011). Generally, as in normalized cuts, the normalized
version often gives balanced modules that may lead to more

 

90

112 /310's112u1n0fp101x0"sotJBurJOJHtotq/ﬁduq 111011 p9p1201um0q

9103 ‘0g1sn8nv uo ::

Functional module identification by interaction patterns

 

 

(e) LinkComm*

(f) GLCPZ"

Fig. 5. The pro-survival and cytochrome c release modules in HsaBioGRID PPI network detected by all the algorithms (GS and PG fail to execute
because of running out of memory). The pro-survial proteins are in rectangle shapes and the cytochrome c release proteins are in circle shapes. Diamond
shapes denote the proteins that belong to neither the pro-survial proteins nor the cytochrome c release proteins. Shaded areas represent the modules

detected by the corresponding algorithms

promising functional module identification results. Both MCL
and RMCL are network clustering algorithms based on (stochas-
tic) ﬂow simulation that extends the similar random walk
Markov chain idea by two operations for better performance:
‘Inﬂation’ and ‘Expand’. However, both operators are heuristic
strategies. Theoretically, why they give good results is still a mys-
tery. PG and SG are two non-overlapping algorithms that iden-
tify functional modules in terms of interaction patterns. Because
they apply greedy algorithms to solve the module identification
problem, the quality of the results is not guaranteed. Last but not
least, LinkComm is a novel algorithm based on an edge graph
representation that tends to detect a large number of overlapping
modules whose biological meaning may not be immediately clear
due to the ﬁne-grained modular structure.

In our experiments, we have applied our algorithms to analyze
four unweighted PPI networks, which can be viewed as binary
({0, 1}) edge-weighted networks. However, both SLCP2 and
GLCP2 can be extended in a straightforward manner for the
analysis of general edge-weighted networks by modifying corres-
ponding terms in Algorithms 1 and 2 proposed in this article. We
will evaluate the performances of algorithms in module identiﬁ-
cation by introducing reliable edge weights when they are avail-
able in our future work. Another limitation for SLCP2 is how to

decide the desirable number of modules k in advance. One pos-
sible way is to search k values within a certain range and choose
k with the best average weight density computed by (8). In our
future research, we will also explore the ideas adopted in Ahn
et al. (2010) and Brunet et al. (2004) to determine k based on the
partition density and/or module entropy score, respectively.
Finally, GLCP2 is our preliminary solution strategy for identify-
ing overlapping modules based on the LCP2 formulation. We
plan to further investigate the properties of the Gram matrix
W, and we expect that we may achieve better performance
with a better understanding of the problem structure.

In conclusion, we propose a novel formulation to achieve
functional module identiﬁcation based on protein interaction
patterns in PPI networks. An efﬁcient spectral algorithm,
which can obtain a close-to-optimal solution based on
Ky Fan theorem, is designed to solve the new optimization prob-
lem for non-overlapping module identiﬁcation. We also develop
a greedy algorithm to solve the same problem but obtain over-
lapping results. Our algorithms not only can overcome the limi-
tation of traditional module identiﬁcation algorithms, which
only focus on identifying dense modules, but they also have a
better scalability for large-scale PPI networks to efﬁciently solve
module identiﬁcation problem. Experimental results show that

 

91

112 /310's112u1n0fp101x0"sotJBurJOJHtotq/ﬁduq 111011 p9p1201um0q

9103 ‘0g1sn8nv uo ::

Y.Wang and X.Qian

 

(g) ClusterOne*

 

(i) GLCPZ“

(h) LinkComm*

Fig. 6. The FGF/FGFR signaling modules in HsaHPRD PPI network detected by all algorithms. FGF proteins are in the circle shapes and FGFR
proteins are in the rectangle shapes. Diamond shapes indicate proteins of neither FGF proteins nor FGFR proteins. Shaded areas represent the modules

detected by the algorithms

our SLCP2 and GLCP2 have achieved promising results on both
protein complex and GO term predictions on four large-scale
PPI networks. Most importantly, our new algorithms can
detect functional sparse modules, which are often ignored by
many other existing algorithms.

ACKNOWLEDGEMENTS

The authors thank Deborah Stabler and the anonymous re-
viewers for helpful suggestions to improve the presentation of
this work.

Funding: X Qian was support in part by Award R21DK092845
from the National Institute Of Diabetes And Digestive And
Kidney Diseases, National Institutes of Health.

Conflict of Interest: none declared.

REFERENCES

Ahn,Y.Y. et al. (2010) Link communities reveal multiscale complexity in networks.
Nature, 466, 7617764.

Ashburner,M. et al. (2000) Gene ontology: tool for the uniﬁcation of biology. the
gene ontology consortium. Nat. Genet, 25, 2&29.

Bisgin,H. and Dalfes,H. (2008) Parallel clustering algorithms with application to
climatology. In: Technical report. Informatics Institute, Istanbul Technical
University, Turkey.

Breitkreutz,B. et al. (2008) The BioGRID Interaction Database: 2008 update.
Nucle’w Acids Res., 36, D6377D640.

Brunet,J. et al. (2004) Metagenes and molecular pattern discovery using matrix
factorization. Proc. Natl Acad. Sci. USA, 101, 4164—4169.

Hofman,J. and Wiggins,C. (2008) A bayesian approach to network modularity.
Phys. Rev. Lett., 100, 258701.

Hong,E. et al. (2008) Gene ontology annotations at SGD: new data sources and
annotation methods. Nucleic Acids Res., 36, D5777D581.

Kikugawa,S. et al. (2012) PCDq: human protein complex database with quality
index which summarizes different levels of evidences of protein complexes pre—
dicted from H—invitational protein—protein interactions integrative dataset. BMC
Syst. Biol, 6 (Suppl. 2), S7.

King]. (2003) Conductance and rapidly mixing markov chains. In: Technical report.
University of Waterloo.

Lancichinetti,A. et al. (2009) Detecting the overlapping and hierarchical community
structure in complex networks. New J. Phys., 11, 033015.

Li,X. et al. (2010) Computational approaches for detecting protein
complexes from protein interaction networks: a survey. BMC Genomics, 11
(SuppL 1), S3.

Maslov,S. and Sneppen,K. (2002) Speciﬁcity and stability in topology of protein
networks. Science, 296, 91(7913.

Mewes,H.W. et al. (2004) MIPS: analysis and annotation of proteins from whole
genomes. Nucleic Acids Res., 32, D417D44.

Morrison,J.L. et al. (2006) A lock—and—key model for protein—protein interactions.
Bioinformatics, 2, 201272019.

Navlakha,S. et a]. (2008) Graph summarization with bounded error. In: Processing
of the 33rd International Conference on Management of Data (ACM SIGMOD
Conference). pp. 419432.

Navlakha,S. et al. (2009) Revealing biological modules via graph summarization. J.
Comp. Biol, 16, 2537264.

Nepusz,T. et al. (2012) Detecting overlapping protein complexes in protein—protein
interaction networks. Nat. Methods, 9, 4717172.

 

92

112 /310's112u1n0fp101x0"sotwurJOJHtotq/ﬁduq 111011 p9p1201um0q

9103 ‘0g1sn8nv uo ::

Functional module identification by interaction patterns

 

Newman,M. (2006) Finding community structure in networks using the eigenvec—
tors of matrices. Phys. Rev. E, 74, 036104.

Newman,M. and Girvan,M. (2004) Finding and evaluating community structure in
networks. Phys. Rev. E, 69, 026113.

Phizicky,E. and Fields,S. (1995) Protein—protein interactions: methods for detection
and analysis. Microbiol Rev., 59, 947123.

Pinkert,S. et al. (2010) Protein interaction networks: more than mere modules.
PLoS Comput. Biol, 6, e1000659.

Powers,C.J. et al. (2002) Fibroblast growth factors, their receptors and signaling.
Embcr. Relat.Cancer, 7, 1657197.

Prasad,T. et al. (2009) Human Protein Reference Database72009 update. Nucleic
Acids Res., 37, D7677D772.

Raman,K. (2010) Construction and analysis of protein7protein interaction net—
works. Autom. Exp., 2, 2.

Reichardt,J. (2009) Structure in Complex Networks. Lect. Notes Phys. 766, Springer,
Berlin, Heidelberg.

Rivas,J. and Fontanillo,C. (2010) Protein7protein interactions essentials: Key con—
cepts to building and analyzing interactome networks. PLoS Comput. Biol, 6,
e1000807.

Royer,L. et al. (2008) Unraveling protein networks with power graph analysis.
PLoS Comput. Biol, 4, e1000108.

Ruepp,A. et al. (2008) Corum: the comprehensive resource of mammalian protein
complexes. Nucleic Acids Res., 36, D64(rD650.

Salwinski,L. et al. (2004) The Database of Interacting Proteins: 2004 update. Nucleic
Acids Res., 32, D4497D451.

Satuluri,V. and Parthasarathy,S. (2009) Scalable graph clustering using stochastic
ﬂows: Applications to community discovery. In: 15th ACM SIGKDD
International Conference on Knowledge Discovery and Data Mining (KDD'09).
Paris, France.

Satuluri,V. and Parthasarathy,S. (2011) Symmetrizations for clustering directed
graphs. In: 14th International Conference on Extending Database Technology
( EDBT 11 ). Uppsala, Sweden.

Satuluri,V. et al. (2010) Markov clustering of protein interaction networks. In:
ACM Conference on Bioinformatics, Computational Biology and Biomedicine
2010. New York, USA.

Shih,Y. and Parthasarathy,S. (2012) Identifying functional modules in inter—
action networks through overlapping markov clustering. Bioinformatics, 28,
i47¥i479.

Stark,C. et al. (2006) BioGRID: a general repository for interaction datasets.
Nucleic Acids Res., 34, D5357D539.

van Dongen,S. (2000) A cluster algorithm for graphs. In: Technical Report INS—
R0010. National Research Institute for Mathematics and Computer Science in
the Netherlands, Amsterdam.

Voevodski,K. et al. (2009) Finding local communities in protein networks. BMC
Bioinformatics, 10, 297.

Wang,Y. and Qian,X. (2012) Functional module identiﬁcation by block modeling
using simulated annealing with path relinking. In: ACM Conference on
Bioinformatics, Computational Biology and Biomedicine 2012. Orlando, USA

Wang,Y. and Qian,X. (2013) A novel subgradient—based optimization algorithm
for block model functional module identiﬁcation. BMC Bioinformatics, 14
(Suppl 2), S23.

Xing,E. and Jordan,M. (2003) On semideﬁnite relaxation for normalized k—cut and
connections to spectral clustering. In: Technical report UCB/CSD-03—1265.
EECS Department, University of California, Berkeley.

Yang]. et al. (1997) Prevention of apoptosis by Bcl—2: release of cytochrome c from
mitochondria blocked. Science, 275, 112971132.

Zha,H. et al. (2001) Spectral relaxation for k—means clustering. In: Advances in
Neural Information Processing Systems. Vol. 14, pp. 105771064.

 

93

112 /310'S[BHJnOprOJXO'SOIJ’BLUJOJIIIOICI”Idllq 111011 papBo1u/noq

9103 ‘0g1sn8nv uo ::

