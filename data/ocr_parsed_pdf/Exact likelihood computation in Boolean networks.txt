Vol. 30 no. 3 2014, pages 414—419
doi:10. 1 093/bioinformatics/btt696

ORIGINAL PAPER

 

Systems biology

Advance Access publication November 30, 2013

Exact likelihood computation in Boolean networks with probabilistic

time delays, and its application in signal network reconstruction

“2‘21, Johannes Brauere'l, Benedict Anchang4‘5, Rainer 308094,

h1.2.*

Sebastian DUmcke
Niko Beerenwinkel6 and Achim Tresc
1Institute for Genetics, University of Cologne, 50674 Cologne, 2Max Planck Institute for Plant Breeding Research,

50829 Cologne, 3Gene Center, Department of Biochemistry, Ludwig-Maximilians University, 81379 Munich, Germany,

4Insitute for Functional Genomics, 93053 Regensburg, Germany, 5Department of Radiology, Center for Cancer Systems
Biology, Stanford University, Stanford, CA 94305-5488, USA and 6ETH ZUrich, Department of Biosystems Science and

Engineering, Mattenstrasse 26 4058 Basel, Switzerland
Associate Editor: Alfonso Valencia

 

ABSTRACT

Motivation: For biological pathways, it is common to measure a gene
expression time series after various knockdowns of genes that are
putatively involved in the process of interest. These interventional
time-resolved data are most suitable for the elucidation of dynamic
causal relationships in signaling networks. Even with this kind of data it
is still a major and largely unsolved challenge to infer the topology and
interaction logic of the underlying regulatory network.

Results: In this work, we present a novel model-based approach invol-
ving Boolean networks to reconstruct small to medium-sized regulatory
networks. In particular, we solve the problem of exact likelihood
computation in Boolean networks with probabilistic exponential time
delays. Simulations demonstrate the high accuracy of our approach.
We apply our method to data of Ivanova et al. (2006), where RNA inter-
ference knockdown experiments were used to build a network of the
key regulatory genes governing mouse stem cell maintenance and dif-
ferentiation. In contrast to previous analyses ofthat data set, our method
can identify feedback loops and provides new insights into the interplay
of some master regulators in embryonic stem cell development.
Availability and implementation: The algorithm is implemented in the
statistical language R. Code and documentation are available at
Bioinformatics online.

Contact: duemcke@mpipz.mpg.de or tresch@mpipz.mpg.de
Supplementary information: Supplementary Materials are available
at Bioinfomatics online.

Received on June 24, 2013; revised on November 7, 2013; accepted
on November 25, 2013

1 INTRODUCTION

The inference of signaling networks from biological data is of fun-
damental importance for a systemic understanding of regulatory
processes. The statistical methods that have been developed for
that purpose can be grouped according to the type of data that
they expect as input. Many approaches use gene expression data.
Some methods are based solely on static observations of the
unperturbed system; they exploit the fact that ﬂuctuations of

 

*To whom correspondence should be addressed.
7‘The authors wish it to be known that, in their opinion, the ﬁrst two
authors should be regarded as Joint First Authors.

interacting components are dependent (Basso et al., 2005;
Van Driessche et al., 2005). The use of perturbation data greatly
improves network reconstruction (Frohlich et al., 2008;
Niederberger et al., 2012; Tresch et al., 2008). To resolve the
order of events in a signaling cascade, time-resolved measure-
ments after perturbation yield further improvements (Friedman
et al., 2000; Grzegorczyk et al., 2008). Boolean networks are an
appropriate tool for dealing with this type of data (Ideker et al.,
2000; Kauffman, 1969; Shmulevich et al., 2002; Silvescu and
Honavar, 2001). The most difﬁcult problem lies in accounting
for the mostly unknown time delays with which the signal is
propagated through the network (Papin et al., 2005).

In this work, we propose Boolean networks with probabilistic
time delays as a novel statistical network inference method. There
have been attempts to calculate the likelihood of a Boolean net-
work in special cases by using Markov Chain Monte Carlo
(MCMC) sampling (Anchang et al., 2009) and for dynamic
nested effects models (Failmezger et al., 2013; Frohlich et al.,
201 1). Exact results were so far obtained only under strong restric-
tions on the logic functions involved, as in the context of conj unc-
tive Bayesian networks (Beerenwinkel and Sullivant, 2009;
Beerenwinkel et al., 2007). By analytically marginalizing over
the unknown delay times, we derive our main result, an exact
and efﬁcient recursive likelihood formula for a broad class of
Boolean networks with exponentially distributed time delays
that may include feedback loops. We evaluate our method in vari-
ous simulation scenarios for its ability to recover the unknown
topology. The method is then applied to a murine stem cell knock-
down data set by Ivanova et a]. (2006), which consists of a set of
whole genome gene expression time series after the knockout of six
genes (Essrb, Sox2, Nanog, Tcll, Oct4 and Tbx3) that are con-
sidered key regulators in the maintenance and differentiation of
mouse embryonic stem cells. Our analysis reveals more feedback
loops than previously detected.

2 METHODS

We aim to model central aspects of dynamic signaling networks, namely,
combinatorial regulation, and time delayed responses in gene activity.
All signaling components are considered either active or inactive, i.e.
they are represented as binary variables. The activity of each component
is modeled as a Boolean function of its parent variables in the network.

 

414 © The Author 2013. Published by Oxford University Press. All rights resen/ed. For Permissions, please e—mail: journals.permissions@oup.com

112 /310's112u1n0fp10}x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnV uo ::

Exact likelihood computation in signal network reconstruction

 

Signaling in biological networks occurs with time delays, which are suit-
ably modeled by the Boolean networks introduced later in the text.

2.1 Boolean networks with unknown time delays and
interventions

Let g = {1, . . . , N} be a set of N signaling components that dynamically
interact with each other via transcriptional regulation, and let [F = {0, 1}
be a Boolean ﬁeld. Our model represents intracellular gene regulation by
a directed graph given by an adjacency matrix 1" e ngg. It is understood
that 1",]- : 1 whenever i is a parent, i.e. a regulator of j. At each time point
t, a gene j e g is characterized by two Boolean variables Aj(t) and Bj(t).
The induction state variable Aj(t) tells us whether gene j is either tran-
scribed at its basic rate or whether it exhibits altered transcription
(AI-(t) = 0 or 1, respectively). The activity state variable Bj(t) reports
whether the signaling molecule j is in its basic functional state or whether
its function is altered at time point t (BI-(t) = 0 or 1, respectively, see
Fig. 1). It helps to think of the induction states as genes and their expres-
sion, and the activity states as the corresponding gene products (proteins)
and their activity as transcription factors. Although protein activity
can be measured in some instances, it is generally hard to obtain time-
resolved data. Therefore, we will infer the activity variables from the
expression of their known target genes. The induction state Aj(t) of j at
time t is determined instantaneously by the activity states B,(t) of its
parents i 6 pa (j) g g via a Boolean function : PM —> IF,
A10) =fj(Bi(t); 1'6 p210», j E g, t E [0, 00) (1)
If pa(j) = ﬂ,  is a constant. The family {fl-[j e g} of Boolean functions
is denoted by .73. The changes in the activity state of gene j are
transmitted to changes in the corresponding activity state with a constant
time delay  e [0, co),
A-(t — d) for t 3 d-
Bfm 2 {14(0) 1 else I
Let A = {djlj e g}. The graph 1", together with .7: and A deﬁne the
dynamics of all binary variables in the model.

To completely specify the Boolean network, we need to initialize the
values of Aj(t) at t = 0. Through an intervention experiment, some induc-
tion states are actively set to 1, Aj(0) = 1 (e.g. by a gene knockdown),
whereas the rest of the variables are initialized by 0. At the same time, all
feedback to an actively perturbed induction state variable A) is blocked,
which is reﬂected by the removal of all incoming edges to 

,jeg,te[0,oo) (2)

 

Fig. 1. Schematic of the model for a ﬁxed time point t: A,- and B,- are the
induction and activity states, respectively, of each regulator {1, 2, 3}. The
delays in signaling between an alteration of the gene state and an ensuing
alteration of the activity state are given by A 2 (di). Given all parenti
child relationships of the network, .7: = {f1,f2,f3} is the family of Boolean
functions. Functions for nodes with <2 parents (A1 and A2) are constant

In practical situations the delay times A are rarely known. We account
for this fact by considering the delay times as unknowns for which we
specify their prior distribution. The prior is a product of independent
exponential distributions, one for each individual delay time,

1v .
. _ . .. . . .. . _ Mum—Mali) lfdj Z 0
”(A’ A) _ Emmi” A!) ’ 711(“5’ A!) _ {0 otherwise (3)
Here, A = (A!) is a tuple of appropriately chosen positive hyperparam-
eters, and a complete parametrization of the model is given by the tuple
M = (12.71:, A).

2.2 The likelihood function

Let B = {Bj(rk);j e g, k = 0, . . . , K} the observations of the binary state
variables B) at K + 1 time points 0 = ro<rl <12<  <rK. Given a
parametrization M of the model and some initial activation pattern,
one seeks to calculate the probability of observing B, by integration
over the unknown delay times,

P(Bll",.7-', A): / P(Bll",.7-', A) ‘ 11(A; A) (4)
A

The major technical achievement of this article is the closed-form solu-
tion of the integral in Equation (4) for arbitrary Boolean networks (pos-
sibly including cycles) that satisfy a rather general admissibility condition
(Supplementary Material S1). The class of Boolean networks that can be
inferred includes all acyclic networks, and all networks that allow each
node to switch only once, yet it is substantially larger. As the derivation of
this result requires tedious calculations and elaborate notation, we just
give the algorithm for the likelihood calculation in Algorithms 1 and 2
and refer to Supplementary Methods S2 for details. We also prepared
a table of all symbols as Supplementary Materials S6. Some quantities
arising during the calculation become extremely small, which bears the
risk of underﬂow errors. Therefore, all necessary computations were per-
formed in log space instead of using standard ﬂoating point arithmetic
(Supplementary Material S3). Having scored a Boolean network, we
search the space of all admissible signaling graphs by Markov Chain
Monte Carlo as outlined in Husmeier (2003) (Supplementary Material SS).

Our framework easily allows the modeling of a series of intervention
experiments. Each intervention will produce its own sequence of state
observations B, and each sequence will be evaluated separately by actively
initializing the expression states of perturbed variables with 1 and block-
ing all feedback to this state by the removal of all incoming edges.

 

Algorithm 1: Calculation of the likelihood and search through
the space of admissible Boolean networks. The scoring function
(line 6) is detailed in Algorithm 2

input: maximal scoring state sequence: Bmw
hyperparameter for the distribution of the delay times: A
local probability functions: P(D|B, L)

1 Find N(Bmaw), all state sequences at Hamming distance 1 of
Bmaa:

2 Run an MCMC chain over all admissible Boolean networks
(1", .7: Acceptance or rejection of proposed models (1", f) is
based on their likelihood L (see Supplementary Materials 3)

3 foreach proposed Boolean network do

4 foreach B E N(Bmaz) do

// calculate S' = P(B | RF, A)

 

5 ﬁnd the set [C of all compatible n
6 SB 2 Zhenscore (B, H,A)
7 end

// calculate likelihood L of (I‘, ]-')
s L = zBEmBmw) SB - P(D | B,£)
9 end

 

 

415

112 /310'S[BIIJHO[pJOJXO'SOlJBLUJOJIIlOlq/ﬂduq 11101} papnolumoq

91oz ‘Og isnﬁnV uo ::

S.Diimcke et al.

 

 

Algorithm 2: Scoring a Single State Sequence B, Given K and or. The Recursion Will Split into Two Separate Cases Whenever Bk and Its Predecessor BKW
Switched Values within the Same Observation Interval. If This Happens Too Often, Network Reconstruction Will Be Impossible Anyway. In Practice,

A Sufﬁcient Temporal Resolution Will Imply That Scaling of the Algorithm is Roughly Linear in the Number of State Switches

 

Function score (B,K,a = A):
input: state sequence B,

switch time K,

parameter of the integral or

For each k, ﬁnd the interval [1,-k, rim] where the switch in the state sequence B happens calculate:

Ti1+1 Tik+1 k
FU: 13,01; K) = f  [9900030) H7710; — tICU); at):|dlkdlk1 ---dl1
’ i=1

[1:111 k=Tik
This is done using the following recursion formula:
1

F0“ M K) = 5"" 5; a) - F<ka 0, 64k, [3; a); K)

Here, 670', ,8; or) and 8(j, ,8; or) are constants deﬁned as

’3; a) = ﬂ; a))i=l,...,ks &i(j2ﬂ; 0‘) = 

50', ﬂ; a) =

nazu
na¢a5>0

F(0,0, (a1, ...,ak,1); K) — exp(—akt,-k+1) - F(K(k),ak, (a1, ...,ak,1); K) ifa 7E 0,)3 = 0, wk) 3 I},
[WM—01km) — eXP(—akm+1)l ' F(K(k)aak, (051, ---sakil); K)

ifa 75 @,}3 = 0, tk(k)<1.'[k

ifi¢{i,r(j),K2(j), ---1
—)3 ifie {j,K(j),K2(j), ...}

n as

se{/',K(j),K2(j),...}

 

G‘s—ﬂ

 

3 RESULTS

3.1 Performance on synthetic data

Having in mind the application to stem cell differentiation
data with six genes (see Section 3.2), we manually chose ﬁve repre-
sentative topologies with six nodes for our simulation studies with
an OR as sole Boolean function. The delay times dg for each gene
g were sampled uniformly from the interval [1, 30] min. The
measurements were generated after t = {0, 15, 30, 45, 60} min.
For each topology, we then calculated the binary activity patterns
Bg(t) for each single gene knockout g. The local probability dis-
tributions [I = {P(Dlej); j e g} are taken as

P(Dlej) N N(Dj; M = 31:02)

for o 6 {0.006, 0.12, 0.24,0.36,0.46,0.58}. We assume that
vague prior knowledge about the delay times is available by
choosing the hyperparameter Ag of the exponential delay time
prior such that their expected value equals the respective true
delay time dg.

For each topology, we started 100 MCMC runs with 2000
steps (see Supplementary Material S3 for details on the
MCMC method). The likelihood requires the summation over
all possible state sequences B e IFNXK. This makes calculations
infeasible even for medium-sized networks. We address this
problem by restricting the model space search to state sequences
that are in the immediate Vicinity of the best scoring state
sequence Bmax. To ﬁnd Bmax, we exploit the fact that in our
model, the hidden state variables 3,- change their value from 0
to 1 at most once in their time course (due to the monotonicity
of the chosen Boolean function, OR). This means that for each
3,- we can summarize its time course by denoting the time at
which the state change occurs by the random variable I} called

change point. The contribution of the hidden state 3, to
P(DlB, [1) is

K K
n P(Dj(Tk)lBj(Tk)) = n P(Dj(Tk)lBj = 8(Tk > T1» (5)
k=l k=1

1 if ‘Ek > 
0 else
Thus, there are at most K + 1 different time courses for
B] [(0,0,. . . ,0), (0,0, . . . ,0,1), . . . (0,1,1, . . . ,1), (1,1, . . . ,l)].
Enumerating these, we ﬁnd the time course for B, that maximizes
the term in (5). Doing so for allj e g, we find the best scoring
state Bmax. Figure 2 shows the results for all five topologies. The
model shows a good overall performance for low and moderate
noise levels. It performs best on tree topologies (Fig. 2E), which
are often encountered in biological pathways. Another frequent
pathway motif is the feed-forward loop, as modeled in Figure 2B.
The addition of feedback to the linear topology in Figure 2A
decreases performance, but it still remains at a reasonable level.
Figure 2F shows the results on a biological network from litera-
ture [of the stem cell differentiation pathway from Anchang et al.
(2009)]. Specificity and sensitivity are comparable with the
simpler topologies AiE.

where 8(Tk>TJ-)={ is the indicator function.

3.2 Application to stem cell differentiation data

Our model calls for time series measurements of protein activities
after single gene knockouts. Data of that kind are still sparse.
We circumvented this problem and increase the applicability
of the method by treating the binary activity state variables
as hidden variables. Our data consist of time series of measure-
ments D = (Dj(Tk)) of the activity states Bj(Tk), j e g, at a ﬁnite
number of K + 1 time points OZTO<T1<12<  <‘L'K.

 

416

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq 11101} papnolumoq

91oz ‘Og isnﬁnV uo ::

Exact likelihood computation in signal network reconstruction

 

True model Edge recovery

'I'
I
I
I
I
I
I
I
_I_

Speciﬁcity

_ E! "'
.8 8!-

Sensitivity

 

 

1.0
1.0
I

0.8

_I_ '

I
I
_I_
_I_
O

00 00

I
I
I
_I_
0
0

0
Speciﬁcity
0.2 0.4 0.6
O 0000
o 000 |- - -. - -|
Sen5ItIVIty
0.2 0.4 0 6 0 a
I I I
0
o |- — —
ell

0
O
-'-
I
I
I
I
_I-

— O

0
l

0
l
o

 

 

 

 

0
1.0

I

I
I
I
--|
---I

“III
°|--'-|
08
|
I.-
I.-
|.__
I

08 I
°|---I

II

a ooo|--
o oI-I-I

o|-——.——-|o

o o o|---|
I----I

Accuracy

0 o 00 I- — — —-
Speciﬁcity

0.2 0.4 0.6
Sensitivity

0.2 0.4 0.6

m 0
Accuracy

0
o
0
l
0
l
I_____

 

 

 

 

1.0
1.0

____
_000'

0.8
I. _

RI
col-l-I

° I-II
08
| |
o
o
o
I.-
0

Sensitivity
---I

|
oo|--
o o |--

O

000 |- — —-|

Speciﬁcity
0.2 0.4 0.6

O

|-----l
|----I

0.2 0.4 0.6

01
6)
Accuracy

0.4 0.|5 0.6 0.7 0.8 0.91.0 0.4 0.5 0.6 0.7 0.8 0.91.0 0.4 0.5 0.6 0.7 0.8 0.91.004 0.5 0.6 0.7 0.8 0.91.0 0.4 0.5 0.6 0.7 0.8 0.91.0 0.4 0.5 0.6 0.7 0.8 0.91.0
I
0
I
0
I

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

— 'I‘ Q— 'l' 'l' 'l- 'l' 'I' F— 'l'
.-
n a r'rrr III -I . Il:
_ I °3.— o— I I I o
: ° I : I I ' ' '
_ I I I I _|. _|. _I_
> ' I I I _I_  In_ I -'- I I I I  <0._ I T o
0 I | I I Q o- _,_ g _I_ I I I _2 O I :
1 9 _ I .I. I 5: I .n. _I_ _4: o o _|_ .'_
8 _L o J- l I 8 It 8 8 I o g v I I
0 O -— _I_ o'—
O — o : I I D- o 8 a, c I I
< o o I (I) ° (I) N
o ' ' I‘I_ o'— '
_ ° o I _I- I o o o 0 -'-
o I _I_ I
6 o I I
— o O -‘- o— o- o o _I_
E — 'l' 'l‘ 'l' 'I' Q- 'l' 'l' 'l- 'l' 'l' e— __— 0
—.— I— ----
3 2 _I_. , _I_ _I_ _I_ _I_...
_ _L 4 _L I w_ c m_ o o o
o : o o o _I_- o T o
> _ _L._'_ ‘5‘ o o b as ' I
o 0 ° 0 I I '6 ‘Q— 0 I 'S o— I ‘l'
4 1 9 _ o I ' E o O _L E ' '
3 g _I- O U} ' I
0 (D V— E V— _I_
o _ o. o 0 (D o I
< I (I) o (D N I
_ ° . g— o_ o i
5 6 "' I
I
— o o- o- 0 "-
—TTT E-----TT e—Tw—Tw—
I I I T o 4 _L _I_ 4-, ‘— ' ' o
I o _I_ I I
— I 'I‘ °°— o ' oo_ I
F 5°“ “4 6 .l: e" 8"?" I 'r
_ I I
E _I_ _I_ I I 2 :g _  ®_ : T
:3 _I_ _I_ _I_ a o I 'a o. I I I
8 - ° I - g l 5 - l : : I
Esrrb I w- I
< _I- I (I) o' 0 (I) <r— I I I
— 0 o' I I I
o l N _L _I— I
anog 5— q— _I_
I O _I_
I
_ I o— _
  LLLLLL LLLLLL, °IIIIII
o I— N to <1- m c: I— N «3 <1- In 8 § § 8 g B
o. c o o c o o. o o o o o  o o c, o 0

amount of noise amount of noise amount of noise

Fig. 2. Results of the simulations study on ﬁve topologies (ﬁrst column). The second column shows the performance as percentage of correctly predicted
edges (presence and absence) for different noise levels 0 added to the binary activity patterns as a box plot over all 100 runs of the MCMC. The third and
fourth columns show the distribution of sensitivity and speciﬁcity of network reconstruction across all runs. (A) Linear graph. This topology can be
predicted with high accuracy up to noise level 0.36. (B) Linear graph with feed-forward loop. This topology is also correctly predicted up to noise level
0.36, although we lose 0.1 performance points compared with the linear graph without shortcut. (C) Linear graph with forward-jump to the last node.
The model can better predict this case than the intra-node forward-jump in B. (D) Full cycle. This difﬁcult topology can be predicted by the model with
accuracy >80% up to noise level 0.36. Performance then rapidly degrades. This topology has a high variance in sensitivity/ speciﬁcity values between the
different runs even for low levels of added noise. (E) Tree structure. The model is well adapted to this topology and shows a high performance until noise
level 0.36. Its performance is comparable with the linear topology (A). (F) Network of stem cell differentiation as reconstructed by Anchang et al.

 

417

112 /310'S[Buln0lpJOJXO'SOIJBLUJOJIIIOICI”K1111] uioii papnolumoq

91oz ‘Og isnﬁnV uo ::

S.D0mcke et al.

 

The data Dj(‘L'k) can be thought of as a noisy possibly repli-
cate quantiﬁcation of the hidden activity states B = {Bl-(11,);
j e g, k = 0, . . . , K}. We relate measurements to their underlying
activity state through time-independent local probability
distributions [1 = {P(Dlej); j e g}. Given the hidden induction
states B and the local probabilities [1, the probability of obser-
ving D is

N K
P(DlB, 1:) = HUM/Drench» (6)

j=l k=l

Equation (6) assumes independence of observations. The likeli-
hood then becomes

P(DlI‘, 1:, f, A) = Z P(DlB, £)(B|F, 7-“, A) (7)

BEIFNXK

Thus, we can apply the method to the dataset of Ivanova et al.
(2006) who used short hairpin RNA loss of function techniques
to downregulate genes whose expression patterns suggest self-
renewal regulatory functions in mouse embryonic stem cells.
Genome-wide gene expression time series measurements after
t: 0,1, ..., 7 days were obtained after knockdown of each of
the following genes: Nanog, Oct4, Sox2, Tbx3, Esrrb and Tell.
These genes are known to play a major role in stem cell differ-
entiation and are therefore called ‘major genes’. Anchang et al.
(2009) built a model with this knockdown data using dynamic
nested effect models.

The major genes represent the nodes in our network. The vari-
ables Aj(t) and Bj(t) correspond to their gene and protein activ-
ities, respectively. Because the activity states Bj(t) are not directly
measured by Ivanova et al. (2006), we use the expression activity
of gene groups under the regulatory control of the major genes
[the E—Genes in the nested effect model of Anchang et al. (2009)]
as a proxy for their protein activity. To get the local probabilities
P(Dlej) needed in the case of assuming hidden Bj(t), we use data
from 122 genes given as discretized time series representing ad-
missible patterns [see the Supplementary Materials of Anchang
et al. (2009) for details]. In accordance with our deﬁnition, genes

Tel1 >

Oct4 80x2 Esrrb Tbx3

Nanog

   

  

Nanog Oct4 SOKQ Esrrb Tbx3 Tcl1

in their basic state were assigned the value 0, and assumed the
value 1 on activation. We kept the grouping of the 122 genes into
six groups of genes depending on Nanog, Oct4, Sox2, Tbx3,
Esrrb or Tcll discovered from the E—Genes graph from
Anchang et al. Because the data contain time series representing
the undifferentiated cell culture (the negative control), and the
cell culture undergoing normal differentiation (the positive con-
trol), we filtered for genes whose expression differed more than
two-fold at the last time point between the two control experi-
ments. Then, we assigned to each gene at each time point a
probability to belong to the basal or the active state, according
to whether its expression resembled more the negative or positive
control (a likelihood ratio was calculated under the assumption
of Gaussian expression distributions). Using the gene groups
deﬁned earlier, we calculated a likelihood ratio for each major
gene to be active versus inactive as the product of the corres-
ponding likelihood ratios of the assigned genes (this was done
separately for each time point and each knockout). The likeli-
hood ratios are then converted into a probability of being active
(at a certain time point, in a certain knockdown experiment),
which corresponds to the input required for our model.

In this application, we only use the Boolean function
AND, leading to monotonic activity states B. As described in
Section 3.1, we chose the state sequence Bmax that maximizes
P(DlB, [1).

Using the same MCMC procedure as in the simulation setting
(Supplementary Material SS), the stationary chain comprised 155
unique models. We used model averaging and calculated the
weighted frequencies of each edge. Each model was weighted
by its number of occurrences in the Markov chain, resulting in
a probabilistic adjacency matrix (Fig. 3A). Tcll has the lowest
connectivity, whereas Nanog has the highest. To compare the re-
sults of our model with the model from Anchang et al. (Fig. 3C),
we converted the probabilistic adjacency matrix into a graph by
drawing all edges with a probability >0.5 (Fig. 3B). The most
striking difference of Figure 3B compared with Figure 3C is the
presence of cycles. In particular, the major genes Oct4, Sox2,
Nanog and Esrrb form a maximal clique of the graph.

        

Fig. 3. (A) Adjacency matrix of the result of the network inference on the biological dataset. Each entry corresponds to the observed frequency and
is colored accordingly with lighter colors representing lower frequencies (B) Network obtained from A by setting a threshold of 0.5 on the edge
probability (C) Network inferred by Anchang et al. (2009) (D) Extract from the network published in Zhou et al. (2007). The authors did not include
Tbx3 and Tcll in their ﬁndings. Dashed edges in B and C represent edges that are not present in our model (A). All other edges from B and C are also

found in model A

 

418

112 /310'S[Buln0lpJOJXO'SOIJ’BLUJOJIIIOICI”K1111] uioii papnolumoq

91oz ‘Og isnﬁnV uo ::

Exact likelihood computation in signal network reconstruction

 

The two graphs essentially agree on the position of Tcll, which in
both cases is targeted by Tbx3 and Esrrb. Also, Tbx3 is located
mostly upstream of the Oct4, Sox2, Nanog, Esrrb clique in both
graphs. Still, it is puzzling why our method finds a highly inter-
connected feedback-loop rich structure, whereas Anchang et al.
ﬁnd a sparser solution. The method in Anchang et al. assumes an
acyclic graph structure, and hence by deﬁnition cannot find
cycles. As our simulation studies have shown that the model
can accurately predict circular structures in regulatory graphs,
the feedback in this network might be higher, and the signaling
hierarchy less pronounced than previously thought. This is
conﬁrmed by a different approach to mouse embryonic stem
cell network reconstruction (Zhou et al., 2007) that also discovers
a large amount of interplay between the key regulators of stem
cell differentiation. Zhou et al. have also reconstructed a mouse
embryonic stem cell network based on transcription factor
binding sites, protein interactions and literature annotation.
They show bidirectional interactions of Oct4 with Nanog and
Sox2 coinciding with our ﬁnding (Fig. 3D).

4 CONCLUSION

In this work, we developed an algorithm that permits us to
analyze gene knockdown time series experiments, which have
high dimensional readouts (such as gene expression). To elucidate
the interplay of the major regulators, all of them need to be per-
turbed and measured individually. On the side of methods devel-
opment, we have solved the problem of calculating the likelihood
function for data generated from a Boolean network with prob-
abilistic exponentially distributed time delays (Algorithm 2). The
likelihood function can be used for network reconstruction, as has
been demonstrated in our simulation studies. Having a closed
form solution for the likelihood has several further applications
that we did not mention so far. It is possible to sample the joint
distribution P(BlI‘, 7-", A) rather efficiently, because many obser-
vations B can be excluded a priori knowing I‘ and 7-". This allows
for accounting for some hidden variables Bk among the observed
B by integrating them out. Furthermore, it is possible to calculate
the expectation of a certain B]- to be on or off in a given time
interval. As an application, we have devised a method to apply
it to data in which the values of the Boolean network can only be
observed indirectly (Algorithm 1). We analyzed murine stem cell
differentiation data of Ivanova et al. (2006) for the purpose of
signaling network reconstruction. Comparison with a previous
reconstruction attempt in Anchang et al. (2009) revealed a
much richer feedback structure than expected. Our method sug-
gests regulatory feedback loops that lead to a better understand-
ing of the dynamic interplay of some master regulators in murine
embryonic stem cell development. We expect our method to find
numerous applications, as protein abundance data become
increasingly available (Frohlich et al., 2009).

ACKNOWLEDGEMENT

The authors thank Holger Frohlich for useful suggestions during
the preparation of the manuscript.

Funding: Deutsche Forschungsgemeinschaft (SFB646 to AT).

Conﬂict of interest: none declared.

REFERENCES

Anchang,B. et al. (2009) Modeling the temporal interplay of molecular signaling
and gene expression by using dynamic nested effects models. Proc. Natl. Acad.
Sci. USA, 106, 6447$452.

Basso,K. et al. (2005) Reverse engineering of regulatory networks in human B cells.
Nat. Genet., 37, 3827390.

Beerenwinkel,N. and Sullivant,S. (2009) Markov models for accumulating
mutations. Biometrika, 96, 645$61.

Beerenwinkel,N. et al. (2007) Conjunctive bayesian networks. Bernoulli, 13,
8937909.

Failmezger,H. et al. (2013) Learning gene network structure from time laps cell
imaging in RNAi knock downs. Bioinformatics, 29, 15344540.

Friedman,N. et al. (2000) Using bayesian networks to analyze expression data.
J. Comput. Biol., 7, 601$20.

Frdhlich,H. et al. (2008) Analyzing gene perturbation screens with nested effects
models in R and bioconductor. Bioinformatics, 24, 254972550.

Frdhlich,H. et al. (2009) Deterministic effects propagation networks for recon—
structing protein signaling networks from multiple interventions. BMC
Bioinformatics, 10, 322.

Frdhlich,H. et al. (2011) Fast and efﬁcient dynamic nested effects models.
Bioinformatics, 27, 2387244.

Grzegorczyk,M. et al. (2008) Modelling non—stationary gene regulatory processes
with a non—homogeneous bayesian network and the allocation sampler.
Bioinformatics, 24, 207172078.

Husmeier,D. (2003) Sensitivity and speciﬁcity of inferring genetic regulatory
interactions from microarray experiments with dynamic Bayesian networks.
Bioinformatics, 1‘), 227172282.

Ideker,T.E. et al. (2000) Discovery of regulatory interactions through perturb—
ation: inference and experimental design. Pac. Symp. Biocomput., 2000,
3057316.

Ivanova,N. et al. (2006) Dissecting self—renewal in stem cells with RNA interference.
Nature, 442, 5337538.

Kauffman,S.A. (1969) Metabolic stability and epigenesis in randomly constructed
genetic nets. J. T heor. Biol., 22, 4377467.

Niederberger,T. et al. (2012) Mc eminem maps the interaction landscape of the
mediator. PLoS Comput. Biol., 8, e1002568.

Papin,J.A. et al. (2005) Reconstruction of cellular signalling networks and analysis
of their properties. Nat. Rev. Mol. Cell Biol., 6, 997111.

Shmulevich,I. et al. (2002) Probabilistic boolean networks: a rule—based uncertainty
model for gene regulatory networks. Bioinformatics, 18, 2617274.

Silvescu,A. and Honavar,V. (2001) Temporal Boolean network models of genetic
networks and their inference from gene expression time series. Complex Syst,
13, 5470.

Tresch,A. et al. (2008) Structure learning in nested effects models. Stat. Appl. Genet.
Mol. Biol., 7, 9.

Van Driessche,N. et al. (2005) Epistasis analysis with global transcriptional pheno—
types. Nat. Gen., 37, 4714177.

Zhou,Q. et al. (2007) A gene regulatory network in mouse embryonic stem cells.
Proc. Natl. Acad. Sci. USA, 104, 16438716443.

 

419

112 /310'S[Buln0lpJOJXO'SOIJ’BLUJOJIIIOICI”K1111] uteri papeolumoq

9103 ‘Og isnﬁnV uo ::

