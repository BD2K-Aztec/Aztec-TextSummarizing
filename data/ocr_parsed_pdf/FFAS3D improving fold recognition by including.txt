BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

FFAS-3D

 

the new composite score, we predict the accuracy of each align—
ment by neural network trained on various parameters of the
alignment. All new features were tested on benchmarks inde—
pendent from the training set.

2 METHODS

FFAS-3D contains several features of the original FFAS (Rychlewski
et al., 2000), such as the collection and weighting of sequences in the
multiple sequence alignments used for proﬁle calculation and normaliza-
tion of profile matching matrix between two sequences. The modiﬁca-
tions of the proﬁle-proﬁle matching score added after original FFAS
publication (Rychlewski et al., 2000) are described in Section 2.1.

The most important scoring terms added to FFAS-3D include the
SS matching score, solvent exposure matching score and template
re-ranking. The derivation of residue-size independent SA, the direct
comparison of RD and the re-ranking score using different sources of
information were not used in similar proﬁle-proﬁle methods before.
These features are described in Sections 2272.4. Implementation of
dynamic programing, calculation of the ﬁnal Z-score and template
re-ranking are described in Sections 2572.7.

2.1 Sequence proﬁle derivation

Current implementation of FFAS ﬁrst runs PSI-BLAST (Altschul et al.,
1997) on a non-redundant sequence database clustered using CD-HIT
(Li and Godzik, 2006) with sequence identity cutoff 85% to obtain the
multiple sequence alignments. The E-value threshold of 0.005 and the
maximum number of ﬁve iterations are used as a default. At most 750
alignments are saved in each round. The proﬁle is built from alignments
from the last PSI-BLAST round and all alignments from previous
rounds, if aligned sequences were not included in the last round [in the
original FFAS (Rychlewski et al., 2000) all the alignments from ﬁve PSI-
BLAST iterations were included but then aligned proteins were purged by
removing ones with >97% sequence identity to other proteins].

Unlike the HenikoffiHenikoff weighting scheme (Henikoff and
Henikoff, 1994) used for balancing the sequences in multiple sequence
alignments found by PSI-BLAST, the weight of each sequence in FFAS
proﬁle is based on the diversity of this sequence as compared with all the
other sequences, which is calculated using the BLOSUM62 mutation
matrix as described in Rychlewski et al. (2000).

The sequence-proﬁle score sp(i,j) for matching two residues in two
sequences is the product of the corresponding two proﬁle vectors and the
BLOSUM62 matrix [see Equation (1)]. The multiplication by the
BLOSUM62 matrix was introduced after year 2000, and it is a logical
equivalent of the transformation of profiles used in Rychlewski et al.
(2000).

20 20
sp(i, j) = — 2 2m], k) X BL(k, 1) X m], 1) (1)
k2] 1:1

We then calculate the average p,(sp) and standard deviation a(sp) of
sp( i J ) score over all residue pairs in the two compared proﬁles and trans-
form sp(iJ') into a normalized scoring matrix, which is then used by
dynamic programing algorithm [see Equation (2)] [the same approach

was used in Rychlewski et al. (2000)].

SP’ULJ') = (SPUJ) - M(SP))/ 0(317) (2)

The rationale behind this step is that raw (not normalized) proﬁle-
proﬁle comparison matrices show large differences in average values
and standard deviations resulting from factors such as similarity of
amino acid composition and number and diversity of sequences included
in the proﬁles. These factors are not related to specific similarity between
two proteins represented by these proﬁles. As conﬁrmed by benchmark

tests, the normalization step improves prediction accuracy by reducing
unspecific score differences and enhancing specific sequence similarity
signal related to the optimal alignment found by dynamic programing.

2.2 Secondary structure type

The three-state SS type (helix, sheet, coil) of each residue is predicted by
PSIPRED (Jones, 1999) for the query sequence. For each template struc-
ture, we group the eight SS types as assigned by Deﬁne Secondary
Structure of Proteins (DSSP) (Kabsch and Sander, 1983) into three
states. The SS matching score (used in the alignment scoring matrix)
for two residues depends on the agreement of aligned SS types and the
conﬁdence score provided by PSIPRED [see Equation (3)]. The
PSIPRED’s conﬁdence is in the range of 079. For templates whose SS
was calculated using DSSP, we assumed conﬁdence score of 9.

. . _ —conf(i) >< conf(j) ss(I) = ss(j)
“(I’D _ { conf(i) >< conf(j) otherwise (3)

We have also tested a scoring function using negative logarithm of the
SS probability (Soding, 2005), but it did not improve the prediction
accuracy.

2.3 Residue-type independent solvent accessibility

The real-value SA of each residue was predicted by a back propaga-
tion neural network (Rumelhart et al., 1986) with two hidden layers for
the query sequence (Xu and Zhang, 2012). The input features are 20
frequencies of residue types extracted from the checkpoint ﬁle generated
by PSI-BLAST and three probabilities of SS types as predicted by
PSIPRED.

For template structures, solvent accessible surface area (SASA) was
calculated by EDTSurf (Xu and Zhang, 2009) and then normalized by
dividing it by the maximum solvent accessible surface area (MSASA).
However, we found that this kind of SA is residue-type dependent,
e.g. smaller residues usually have smaller SA values despite the fact
that they have lower values of MSASA (see Supplementary Table S1 in
Supplementary Materials) used for normalization. This is because small
residues tend to be buried by the neighboring bigger residues. It results in
the smaller values of average SA for small residues as compared with
bigger residues even if they have similar hydrophobicity values. This de-
pendence on the residue type does not cause problems if the predicted and
real SA values are compared for the same residue type (Xu and Zhang,
2012). However, it introduces discrepancies when we align residues and
compare their SA values for different residue types.

To make the SA normalization residue-type independent, we intro-
duced the reference solvent accessible surface area (RSASA) and used
it for normalization of SA. We downloaded a non-redundant set of 3922
protein chains provided by Protein Sequence Culling Server (PISCES)
(Wang and Dunbrack, 2003) server (pairwise sequence identity< 0.30)
and calculated all-to-all structure alignment using Template Modeling
Score Alignment (TM-align) (Zhang and Skolnick, 2005). Then we se-
lected protein pairs that have TM-score> 0.5, which means they have the
same fold (Xu and Zhang, 2010). We only considered pairs of aligned
residues with distances <5 A after the optimal superposition of each pro-
tein pair. Then we calculated RSASA iteratively. In the ﬁrst step, RSASA
of each residue type is set to its MSASA. Then we sum the SA values for
residue types a and b separately when they are aligned and then calculate
their ratio RA 7‘] a,b ) in the k-th iteration. We divide the RSASA by the
average ratio ARA 74‘] a ) for each residue type to get the new RSASA.
After ~5 iterations, the RSASA of each residue type becomes stable and
most of the ratios between the 400 residue pairs get closer to 1. The ﬁnal
20 values of RSASA are listed in Supplementary Table S1 [they can also
be used for the normalization of SA values calculated with DSSP, as
SASA values calculated by EDTSurf and DSSP are highly correlated
(Xu and Zhang, 2013)]. The iterative procedure is described formally

 

661

ﬁm'spzumofpmJXO'sopeuuopnorq/ﬁdnq

D.Xu et al.

 

by Equation (4). The average absolute difference of solvent accessibilities
normalized with RSASA for the aligned residue pairs is equal to 0.113 as
compared with 0.120 difference of solvent accessibilities normalized with
MSASA.

RSASA0(a) = MSASA(a)
sol"(a) = SASA(a)/RSASAk(a)
RA7*(a, b) = Zsol"(a)/ Zsol"(b)
ARAT‘(a) = 20 RAT"(a,b)/20
1

b:

(4)

RSASAk+1(a) = RSASAk(a)/ARAT"'(a)

The SA matching score [given in Equation (5)] used in the alignment
scoring matrix is the absolute difference of solvent accessibilities between
any two residues in two sequences.

sa(i,j) = |sol(i) — sol(j)| (5)

2.4 Residue depth

RD evaluates the position of each residue in the protein structure relative
to the closest point of the solvent accessible surface (Chakravarty and
Varadarajan, 1999). When residues are completely buried inside of the
protein, their solvent accessibilities are all equal to zero, but depth values
are different. Hence, RD can be considered as a complementary term to
SA. It was used before for generating structure proﬁle to help ﬁnd
remotely homologous protein pairs (Zhou and Zhou, 2005).

Here, RD of a template structure is calculated by EDTSurf, whereas
for the query sequence it is predicted by a separate neural network with
two hidden layers. Input features for each residue are the same as that
used for the SA prediction. The window size is 33, which results in
23 X 33 2759 nodes in the input layer. Each of the two hidden layers
contains 70 nodes and the output layer (consisting of one node) predicts
the real-value RD. Similar to SA, we normalize the depth value dv( i) to a
value between 0 and 1 as shown in Equation (6). We then directly use the
absolute difference of RDs as the matching function in the alignment
scoring matrix [see Equation (7)].

dep(i) = (am) — 2.8)/7 (6)

mKILJ') = IdePU) - 01817031 (7)

The inclusion of predicted structural features into profiles improves
proﬁle-proﬁle comparison only if these predictions are sufﬁciently accur-
ate. For instance, the accuracy of SS prediction is relatively high (Q;
accuracy >0.80) and it is known to provide a useful contribution to pro-
ﬁle-proﬁle alignment. The prediction errors of SA and RD are listed in
Supplementary Table S2. For SA, hydrophobic residues such as CYS,
ILE, LEU and VAL, often have smaller prediction errors, as they are
usually buried and have small values of SA. For hydrophilic residues such
as ASP, GLU, LYS, ASN, GLN and ARG, SA is harder to predict, as
they are on the surface region and real SA values of those residues vary in
a broad range. On the contrary, hydrophilic residues often have small
values of RD, which are easier to predict with neural networks. In sum-
mary, the values listed in Supplementary Table S2 suggest that by using
both RD and SA one may reduce errors related to inaccuracies in solvent
exposure prediction.

2.5 Dynamic programing

FFAS carries out SmithiWaterman dynamic programing algorithm
(Smith and Waterman, 1981) to obtain the optimum local-local alignment
(because FFAS uses local-local alignment, it is not necessary to introduce
a separate step of splitting sequences into domains). The gap opening and
gap extension penalties are constant, set to 6.0 and 0.3, respectively. The

complete matching score in Equation (8) is the linear combination of the
four terms described earlier in the text with weighting factors w, = 1.25,
w2=2J5 and w3=205.

score(i,j) = sp’(i,j) + W1 >< ss(i,j) + W; X sa(i,j) + W3 >< rd(i,j) (8)

The weighting factors were optimized on the targets of the ninth
Critical Assessment of protein Structure Prediction (CASP9) compared
with the template library consisting of 29 301 protein chains from the
Protein Data Bank (PDB) (Berman, et al., 2000) released before
CASP9. For every pair of sequences a and t, the ﬁnal raw score raw_
score(q,t) that is found by dynamic programing corresponds to the op-
timal local alignment between the two sequences. Average Global
Distance Test-High Accuracy (GDT-HA) score for all targets was used
as an objective in the optimization.

2.6 Calibration of raw proﬁle-proﬁle alignment scores

Raw proﬁle-proﬁle alignments scores for a given protein are obviously
correlated with protein’s length, but they also show less trivial biases
toward higher or lower average scores. They may also have wider or
narrower distribution when compared with proﬁles of unrelated proteins.
These differences, related to amino acid composition and diversity of
sequences included in the proﬁle, are difﬁcult to predict from the proﬁle
itself. Therefore, FFAS calibrates raw alignment score using actual dis-
tribution of scores obtained by comparing each sequence proﬁle with a
library of proﬁles representing 1195 different folds from Structural
Classiﬁcation of Proteins (SCOP) (Murzin et al., 1995) database. The
proﬁles representing SCOP structures are assigned to four bins based
on their lengths (bins correspond to length ranges: <100aa, 10(P200aa,
2007300aa, >300aa), and median value and average absolute deviation of
the raw scores are then calculated for alignments between query proﬁle
and proﬁles from each bin. Subsequently, linear regression is used to
interpolate the median value and the average absolute deviation values
(we then denote intercept and slope parameters for median raw score and
absolute deviation oz_p,, ﬁJL, oz_a and ﬁ_a, respectively). The expected
median value and average absolute deviation of raw score for proteins
with any sequence length can be then estimated using these four param-
eters. These expected values are then used to calibrate the raw score.
For each alignment of two sequences a and t, raw score raw_score(q,t)
can be calibrated in two ways leading to two different Z-scores. The ﬁrst
calibration is based on the parameters of the expected median and aver-
age absolute deviation for sequence a, and the second is calculated using
analogous values for sequence t [see Equation (9)]. High value of Z ,( q,t )
indicates that protein t may be a signiﬁcant hit among all proteins with
similar lengths, when they are aligned with protein a. At the same time,
high value of Z 2( q,t ) means that protein a may be a signiﬁcant hit among
all proteins with similar lengths, when they are aligned with protein t.

I‘aWJCOI‘eUI, t) - (Gt-M51) + 13—11(51) X 18/10))
0147(4) + 1317(4) X 18W)

rawzscore(q, t) — (oap.(t) + ﬁ,p,(t) >< len(q)) _
a_o(t) + ﬁ_o(t) >< len(q) _

201,!) = max{Zl (q, t), 22(51, t)}

We assumed that a signiﬁcant hit should fulﬁll both of the above
criteria. Hence, we used the maximum of Z ,( q,t ) and Z2(q,t) as the
ﬁnal value of the calibrated score (because FFAS scores are negative,
maximum corresponds to the less outstanding of the two Z-scores).
Note that raw_score(q,t) is symmetrical with respect to q and t.

Template t may be a signiﬁcant hit to query a based on the low
Z ,( q,t ), but on the contrary, a may be not an outstanding hit to t
based on the high Z2(q,t). Hence by using a maximum, we eliminate
cases when raw score is signiﬁcant as compared with only one ‘baseline’
distribution. As we show later, this approach improves template selection.
The comparisons between the three possible ways of Z-score calculation

21W,” =

 

(9)

 

22(q, z) = 21 (t, q)

 

662

ﬁm'spzumofpmJXO'sopeuuopnorq/ﬁdnq

an?kgogmomammowoio~&o:3m7.omm\

 

D.Xu et al.

 

of 18% alignments did not change and the accuracy of 23%
decreased, as compared with the original FFAS method.

To evaluate the impact of the modeling step, we compared the
accuracy of the Modeller model with the accuracy of the initial
alignment. As show in Table 1, the average GDT—TS score of the
models is slightly higher than GDT—TS score of the correspond—
ing alignments but the opposite is true for the average GDT—HA
score. Because GDT—HA takes into account only the most ac—
curate parts of the model (Cot—Col distances<4A), whereas
GDT—TS score also includes less accurately predicted regions
(Cot—Cot distances<8A), it means that the modeling step im—
proved the overall completeness of the model at the expense of
the accuracy of most reliably predicted regions.

We also compared the performance of FFAS—3D with HHpred
(Soding, 2005), a leading Hidden Markov Model—Hidden
Markov Model (HMM—HMM) local—local alignment program.
HHpred uses hidden Markov models, which can be viewed as a
special type of proﬁles that include probabilities of insertions and
deletions and SS matching score based on confidence—dependent
conditional probability. We built HHpred HMM proﬁles for the
same template library of 29 301 protein chains that was used to
evaluate FFAS—3D. The average alignment accuracy and align—
ment coverage of HHpred are close to those of the FFAS—3D
before the template re—ranking step (Table 1). The distribution
of differences in accuracy of the top—scoring alignments between
FFAS—3D and HHpred is illustrated by Figure 1b. Both pro—
grams yield similar results for easy benchmark targets with
highly accurate alignments (GDT—HA>75). Similarly, for difﬁ—
cult cases, where there is probably no accurate template in the
library, the top hits by both programs have low accuracy (GDT—
HA <20). However, most benchmark queries fall into the region
between these two extremes and, in this region, alignment results
are signiﬁcantly different. In fact, the top—scoring templates from
FFAS—3D and HHpred are different for 231 of 367 queries, sug—
gesting that despite similar overall accuracy, there are signiﬁcant
differences between these two local—local alignment programs.

3.2 Fold recognition rate

To evaluate fold recognition independently from the overall pre—
diction accuracy assessed as described in the previous section, we
tested FFAS—3D on the Lindahl benchmark set (Lindahl and
Elofsson, 2000), consisting of 976 domains from the SCOP
library. The benchmark contains 555, 434 and 321 targets with
at least one similar structure at the family, superfamily and fold
levels, respectively. We evaluated the success rates in terms of
ranking any of the similar structures as the ﬁrst and among top
ﬁve hits. The comparison of FFAS—3D with HHpred and
SPARKS—X is shown in Table 2. SPARKS—X conducts a semi—
global alignment and tends to yield longer alignments (on aver—
age ~9% higher coverage than HHpred and FFAS—3D).
FFAS—3D has better recognition rates than the other two pro—
grams at the family and superfamily levels, even without tem—
plate re—ranking. Because SPARKS—X is speciﬁcally designed
with focus on the remote homologs, it has the highest success
rate at the fold level. Although FFAS—3D fold detection rate is
~25% lower than that of SPARKS—X, it is 40% better than
HHpred’s. The lower performance of local—local alignment pro—
grams at the fold level as compared with semi—global programs

Table 2. Family, superfamily and fold recognition rates of different pro-
grams on the Lindahl benchmark set

 

 

 

Method Family (%) Superfamily (%) Fold (%)
First Top 5 First Top 5 First Top 5

FFAS 82.3 87.7 60.4 67.5 15.0 28.3
HHpred 82.9 87.1 58.8 70.0 25.2 39.4
SPARKS-X 84.1 90.3 59.0 76.3 45.2 67.0
FFAS-3D 84.9 91.2 66.6 79.5 35.8 55.1
FFAS-3D" 86.3 91.9 65.7 77.0 33.0 53.9
FFAS-3D“ 87.2 93.9 71.0 81.8 42.7 63.9

 

Note: In each level, the program succeeds in recognizing the target if the structure
with the same SCOP family, superfamily or fold classiﬁcation is ranked as the ﬁrst
or as one of the top 5.

FFAS—3D”, using the matching of predicted structural features in the scoring func—
tion; FFAS—3Dr, using the matching of real structural features in the scoring
function.

such as SPARKS—X is probably linked to the fact that for remote
homologs they either yield short alignments or do not yield any
alignment at all and, thus, do not provide any meaningful score.
In other words, semi—global algorithm, which ‘forces’ the align—
ment of apparently dissimilar pairs, makes it possible to choose
the closest of these marginally similar templates.

FFAS—3D uses predicted structural features of the query
sequence and real structural features of template structures.
However, using experimental structures signiﬁcantly limits the
range of potential applications of the method, as thousands of
protein families have no structural coverage. Thus, to detect
remote homologies to such families, we evaluated the version
of the program that uses predicted structural features for both
the query and the template (denoted FFAS—3Dp in Table 2). For
reference, we also checked the performance of the program
where real structural features were used for the query and the
template (denoted FFAS—3Dr in Table 2). To maintain simpli—
city, we used the same weighting parameters of the scoring terms
as that in the default version, even that they could be re—
optimized for predicted features to achieve better results.
Surprisingly, the performance of the version using only predicted
features is similar to that of FFAS—3D at the superfamily level
and surpasses FFAS—3D at the family level. It is understandable
because at the family level sequences are highly similar and the
differences between their predicted structural features obtained
with the same SS prediction method are smaller than the differ—
ences between predicted and real structural features. At the fold
level where sequences are more distantly homologous, the recog—
nition rate is only 8% worse. As expected, when we use the real
features for both the target and the template, the performance is
much better than the default FFAS—3D at all the SCOP levels
indicating the potential gain from improving the accuracy of
predicted features.

3.3 Symmetrical Z—score improves template ranking

We compared the ranking result by the symmetrical Z—score
Z(q,t) (see Section 2) with results obtained with individual
Z—scores calculated for query and the template (Z1(q,t) and

 

664

ﬁm'spzumol‘pmﬂo'sopeuuopnorq/ﬁdnq

an?kgogmomammowoio~&o:3m7.omm\

 

D.Xu et al.

 

3.5 Improved template ranking using neural network

The effect of template re—ranking is illustrated by Figure 1c.
Although the average accuracy of the prediction after template
re—ranking increases, there are still many targets for which it
decreases. The re—ranking procedure does not change the order
of top templates for ~39% of targets (these are usually cases
when one template is signiﬁcantly better than others). Most of
the situations when templates are re—ranked fall into two cate—
gories: (i) there are many templates with low Z—scores; (ii) all the
top—scoring templates have high Z—scores. In such cases, the pre—
dicted Maxsub score and the backbone potential provide infor—
mation complementary to the Z—score and help to differentiate
between the templates with similar Z—scores.

Because the predicted structural features have only limited
accuracy, they may sometimes become closer to the structural
features of the wrong template than to the correct one. The cal—
culation or prediction of SA/depth for a protein is also likely to
be inaccurate for the surface regions where it binds to cofactors
or other proteins. In other cases, correct templates with good
matching of structural terms are not on the top of the
scoring list because of the high raw proﬁle—proﬁle score or high
normalization factori i.e. denominator in Equation (9). Neural
network re—ranking can account for these situations and effect—
ively filter out at least some erroneous templates.

The ﬁrst situation may be illustrated by the example 2y0mB,
which is a small domain consisting of one helix. Z—scores of the
top templates are high (>—15.0), suggesting that it is a hard
target and the original template ranking may be incorrect.
Generally, the neural network predictions of Maxsub scores
are higher than the actual Maxsub scores, as illustrated by the
top part of Table 3. Because neural network correctly infers that
the ﬁrst template has low Maxsub score (possibly due to the low
sequence identity in the alignment region), this template drops to
the fourth place. The template 2o98P is predicted to have the
highest accuracy (due to the high sequence identity to the query

Table 3. Top ﬁve templates before and after re-ranking for targets
2y0mB(top) and 3rij(bottom)

 

 

R Temp ID cSA cRD aSS Z MSp MSr R’
1 lundA 0.09 0.56 0.10 0.85 —14.1 0.43 0.30 4
2 2kesA 0.15 —0.03 0.07 0.97 —13.9 0.79 0.60 2
3 2rmfA 0.25 0.21 —0.03 1.00 —13.9 0.62 0.58 3
4 2o98P 0.31 0.08 0.26 0.96 —13.3 0.81 0.55 1
5 3a1qC 0.11 0.21 —0.01 0.94 —13.0 0.42 0.67 5
1 2jzyA 0.38 0.44 0.35 0.78 —84.1 0.69 0.59 2
2 2pmuA 0.35 0.65 0.55 0.87 —80.8 0.75 0.79 1
3 2han 0.27 0.50 0.44 0.81 —75.2 0.70 0.66 4
4 1gpr 0.37 0.58 0.55 0.84 —71.4 0.75 0.80 3
5 1ys6A 0.41 0.58 0.60 0.90 —69.2 0.73 0.76 5

 

R, order before re—ranking; Temp, template name; ID, sequence identity in the
alignment region; cSA, correlation coefﬁcient of solvent accessibility in the align—
ment region; cRD, correlation coefﬁcient of residue depth in the alignment region;
aSS, agreement of secondary structure in the alignment region; Z, original Z—score;
MSp, predicted MaxSub score; MSr, real MaxSub score of the alignment; R/, order
after re—ranking.

sequence). Although this template is not the optimal choice (as
indicated by real Maxsub scores of the predictions), it still gives
the much higher Maxsub score than the top template in the ori—
ginal ranking.

The second type of situation where templates re—ranking may
lead to substantial improvement can be exempliﬁed by predic—
tions for target 3rij, an alpha+beta protein, with a lot of
highly homologous templates in the library. Here, the predicted
Maxsub scores are highly correlated with the real Maxsub scores
(see the bottom of Table 3). The best template 1gpr has the
highest predicted score, but it is only in the third place after re—
ranking due to the much lower Z—score. The second best tem—
plate 2pmuA now becomes the ﬁrst template, which has Maxsub
score 0.20 higher than the original ﬁrst template 2jzyA.

Table 3 illustrates only the re—ranking of the top ﬁve templates.
After testing several values for the number of templates included
in the re—ranking process, we found that the best improvement is
achieved if top 10 templates are re—ranked.

4 CONCLUSIONS

We have performed an extensive upgrade of a FFAS proﬁle—
proﬁle alignment method, bringing its sensitivity and accuracy
on par to the leading programs in the ﬁeld, while maintaining its
unique features. This was achieved by incorporating three local
structural features into FFAS: SS type and solvent exposure term
consisting of complementary SA and RD terms. The combin—
ation of these terms improves the average alignment accuracy of
the program by ~7% as compared to the original version of
FFAS, which only conducts proﬁle—proﬁle alignments. The
next step of predicting the alignment accuracy of the top tem—
plates by neural network and re—ranking the templates adds an—
other 4% in accuracy as evaluated by the GDT—HA score. The
new FFAS—3D program is comparable with the current state—of—
the—art programs as evaluated on the independent test set of
structures deposited after CASP9 targets (which served as our
training set). We have also tested FFAS—3D on the test set con—
sisting of CASPlO targets obtaining an average GDT—HA of
41.65, which would rank FFAS—3D among the most accurate
homology recognition methods. FFAS—3D was also tested on
the Lindahl benchmark set for fold recognition and showed
superior success rate on the family and superfamily levels.

The individual predictions obtained with FFAS—3D and pre—
dictions from other programs often show significant differences
in template selection suggesting that they are complementary and
thus FFAS—3D would contribute to the accuracy of meta—servers
and other jury—based prediction methods.

Because the accuracy of the predicted structural features is
crucial to the alignment accuracy and template ranking, the
future improvements of the performance of FFAS—3D may
depend on the development of the more accurate programs for
predicting structural features. Such new added structural features
should provide non—redundant information to the scoring func—
tion. For instance, SS description schemes with >3 SS types may
improve prediction accuracy if they can be accurately predicted
from protein sequence.

Another possible direction of development is linked to the
observation that optimal parameters for the alignment of close
homologues are probably signiﬁcantly different from the optimal

 

666

ﬁm'spzumol‘pmﬂo'sopeuuopnorq/ﬁdnq

FFAS-3D

 

method for aligning remotely homologous pairs and pairs for
which similarity can only be predicted based on structural fea—
tures. In particular, the optimal detection of such remote homo—
logs may require different values of gap penalties, higher weights
of structural features or even switching to semi—global align—
ments. To address this issue, the alignment program may evalu—
ate the difﬁculty of the prediction in the initial search and then
adjust alignment parameters and perform another search in the
template library.

Funding: National Institute of Health (GM087218 and
GM101457).

Conﬂict of Interest: none declared.

REFERENCES

Altschul,S.F. et al. (1997) Gapped BLAST and PSI—BLAST: a new generation of
protein database search programs. Nucleic Acids Res, 25, 338973402.

Baker,D. and Sali,A. (2001) Protein structure prediction and structural genomics.
Science, 294, 93796.

Berman,H.M. et al. (2000) The Protein Data Bank. Nucleic Acids Res, 28, 2357242.

Chakravarty,S. and Varadarajan,R. (1999) Residue depth: a novel parameter for
the analysis of protein structure and stability. Structure, 7, 7237732.

Henikoff,S. and Henikoff,].G. (1994) Position—based sequence weights. J. Mol
Biol, 243, 57¢578.

Jaroszewski,L. et al. (2009) Exploration of uncharted regions of the protein uni—
verse. PLoS Biol, 7, e1000205.

Jaroszewski,L. et al. (2000) Improving the quality of twilight—zone alignments.
Protein Sci., 9, 148771496.

Jones,D.T. (1999) Protein secondary structure prediction based on position—speciﬁc
scoring matrices. J. Mol. Biol, 292, 19y202.

Kabsch,W. and Sander,C. (1983) Dictionary of protein secondary structure: pattern
recognition of hydrogen—bonded and geometrical features. Biopolvmers, 22,
257772637.

Kinch,L.N. and Grishin,N.V. (2002) Evolution of protein structures and functions.
Curr. Opin. Struct. Biol, 12, 400—408.

Li,W. and Godzik,A. (2006) Cd—hit: a fast program for clustering and comparing
large sets of protein or nucleotide sequences. Bioinformatics, 22, 165871659.
Lindahl,E. and Elofsson,A. (2000) Identiﬁcation of related proteins on family,

superfamily and fold level. J. Mol. Biol, 295, 613%25.

Murzin,A.G. et al. (1995) SCOP: a structural classiﬁcation of proteins database for

the investigation of sequences and structures. J. Mol. Biol, 247, 5367540.

Panchenko,A.R. (2003) Finding weak similarities between proteins by sequence
proﬁle comparison. Nucleic Acids Res, 31, 6837689.

Rumelhart,D.E. et al. (1986) Learning representations by back—propagating errors.
Nature, 323, 5337536.

Rychlewski,L. et al. (2000) Comparison of sequence proﬁles. Strategies for strtw—
tural predictions using sequence information. Protein Sci., 9, 2327241.

Sali,A. and Blundell,T.L. (1993) Comparative protein modelling by satisfaction of
spatial restraints. J. Mol. Biol, 234, 7797815.

Schwarzenbacher,R. et al. (2004) The importance of alignment accuracy for
molecular replacement. Acta Crystallogr. D Biol. Crystallogr., 60, 122%1236.

Siew,N. et al. (2000) MaxSub: an automated measure for the assessment of protein
structure prediction quality. Bioiry’ormatics, l6, 77(r785.

Smith,T.F. and Waterman,M.S. (1981) Identiﬁcation of common molecular subse—
quences. J. Mol. Biol, 147, 1957197.

Soding,J. (2005) Protein homology detection by HMM—HMM comparison.
Bioinformatics, 21, 9517960.

Wang,G. and Dunbrack,R.L. Jr (2003) PISCES: a protein sequence culling server.
Bioinformatics, 19, 158971591.

Wu,S. and Zhang,Y. (2008) MUSTER: improving protein sequence proﬁle—proﬁle
alignments by using multiple sources of structure information. Proteins, 72,
5477556.

Xu,D. and Zhang,Y. (2009) Generating triangulated macromolecular surfaces by
Euclidean distance transform. PLoS One, 4, e8140.

Xu,D. and Zhang,Y. (2012) Ab initio protein structure assembly using continuous
structure fragments and optimized knowledge—based force ﬁeld. Proteins, 80,
171571735.

Xu,D. and Zhang,Y. (2013) Toward optimal fragment generations for ab initio
protein structure assembly. Proteins, 81, 2297239.

Xu,J. and Zhang,Y. (2010) How signiﬁcant is a protein structure similarity with
TM—score = 0.5? Bioinformatics, 26, 8897895.

Yang,Y. et al. (2011) Improving protein fold recognition and template—based
modeling by employing probabilistic—based matching between predicted one—
dimensional structural properties of query and corresponding native properties
of templates. Bioiry’ormatics, 27, 207(rZOSZ.

Zemla,A. (2003) LGA: a method for ﬁnding 3D similarities in protein structures.
Nucleic Acids Res, 31, 337(F3374.

Zhang,Y. and Skolnick,]. (2004) Scoring function for automated assessment of
protein structure template quality. Proteins, 57, 7027710.

Zhang,Y. and Skolnick,]. (2005) TM—align: a protein structure alignment algorithm
based on the TM—score. Ntwleic Acids Res, 33, 230272309.

Zhou,H. and Zhou,Y. (2002) Distance—scaled, ﬁnite ideal—gas reference state
improves structure—derived potentials of mean force for structure selection and
smbility prediction. Protein Sci., 11, 271472726.

Zhou,H. and Zhou,Y. (2005) Fold recognition by combining sequence proﬁles
derived from evolution and from depth—dependent structural alignment of
fragments. Proteins, 58, 3217328.

 

667

ﬁre'spzumol‘proyo'sopnuuowrorq/ﬁdnq

