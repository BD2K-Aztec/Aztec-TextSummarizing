APPLICATIONS NOTE V°" 235%.lié‘iléﬁéﬁliééiléé?

 

Structural bioinformatics

Advance Access publication February 14, 2014

ZDOCK server: interactive docking prediction of protein—protein
complexes and symmetric multimers
Brian G. Pierce1'2'*, Kevin Wiehe2, Howook Hwangl'z, Bong-Hyun Kim‘, Thom Vreven1 and

Zhiping Weng1‘2'*

1Program in Bioinformatics and Integrative Biology, University of Massachusetts Medical School, 364 Plantation Street,
Worcester, MA 01 605 and 2Bioinformatics Program, Boston University, 44 Cummington Mall, Boston, MA 02215 USA

Associate Editor: Anna Tramontano

 

ABSTRACT

Summary: Protein—protein interactions are essential to cellular and
immune function, and in many cases, because of the absence of an
experimentally determined structure of the complex, these interactions
must be modeled to obtain an understanding of their molecular basis.
We present a user-friendly protein docking server, based on the rigid-
body docking programs ZDOCK and M-ZDOCK, to predict structures
of protein—protein complexes and symmetric multimers. With a goal of
providing an accessible and intuitive interface, we provide options for
users to guide the scoring and the selection of output models, in add-
ition to dynamic visualization of input structures and output docking
models. This server enables the research community to easily and
quickly produce structural models of protein—protein complexes and
symmetric multimers for their own analysis.

Availability: The ZDOCK server is freely available to all academic and
non-profit users at: http://zdock.umassmed.edu. No registration is
required.

Contact: brian.pierce@umassmed.edu or Zhiping.weng@umassmed.edu

Received on November 22, 2013; revised on January 17, 2014;
accepted on February 7, 2014

1 INTRODUCTION

Proteiniprotein interactions are responsible for a wide range of
key biological processes such as cell signaling, enzyme inhibition
and immune recognition. A high-resolution structure of a protein
complex provides the atomic details of the interaction, and
enables rational design of therapeutic molecules that inhibit or
improve binding. Although many structures of protein com-
plexes have been determined by x-ray crystallography, many
have not been characterized experimentally due in part to cost
and experimental limitations. This has led to the development of
proteiniprotein docking algorithms, of which the top-performing
methods often produce models with atomic-level accuracy. These
approaches are distinct from those developed for protein-
small molecule docking, which are often used to dock ligands
(or sets thereof, for Virtual screening) to a known binding pocket.
To facilitate proteiniprotein docking prediction, web-based ser-
vers have been developed for rigid-body docking (Ritchie and
Venkatraman, 2010; Tovchigrechko and Vakser, 2006), ﬂexible
docking and refinement (Lyskov and Gray, 2008; Mashiach

 

*To whom correspondence should be addressed.

et al., 2010; Torchala et al., 2013), clustering (Comeau et al.,
2004) and symmetric multimer docking (Schneidman—Duhovny
et al., 2005).

The rigid-body proteiniprotein docking program ZDOCK
was developed in our laboratory >10 years ago (Chen and
Weng, 2002). It uses the Fast Fourier Transform algorithm to
enable an efﬁcient global docking search on a 3D grid, and util-
izes a combination of shape complementarity, electrostatics and
statistical potential terms for scoring. ZDOCK achieves high
predictive accuracy on proteiniprotein docking benchmarks,
with >70% success in the top 1000 predictions for rigid-body
cases in the most recent benchmark version (Pierce et al.,
2011), and consistent success (acceptable or better predictions
for 22 of the last 35 submitted targets) in the international pro-
teiniprotein docking experiment, Critical Assessment of
Predicted Interactions (CAPRI) (Hwang et al., 2010a; Vreven
et al., 2013; Wiehe et al., 2005; Wiehe et al., 2007). To provide
the research community with a simple interface to predict struc-
tures of protein complexes using ZDOCK, we developed the
ZDOCK Server. Since its initial implementation, the ZDOCK
Server has undergone major changes to improve its docking per-
formance, functionality and user interface. The improvements
were motivated by valuable user suggestions as well as our
own initiatives and algorithm development. These include
upgrading the docking algorithm from ZDOCK 2.3 to
ZDOCK 3.0.2, resulting in greater accuracy and highly efﬁcient
searching. A portal for running the program M-ZDOCK (Pierce
et al., 2005) to predict the structures of symmetric multimers was
recently added. Also, various aspects of the user interface have
been improved, integrating Viewing of structures and descriptions
during submission and analysis of results.

2 IMPLEMENTATION

The ZDOCK Server web interface is written in PHP and HTML,
as well as Javascript for dynamic functionality. JMol (http://
www.jmol.org) is used for molecular Visualization on the residue
selection and results pages, and the Protein Data Bank (PDB)
RESTful web service interface (Rose et al., 2011) is used to dy-
namically gather information for PDB IDs that are entered
during submission. The ZDOCK Server allows users to generate
sets of predictions in PDB format from job output ﬁles with a
Java program.

 

© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com 1771

112 /310's112u1no[p10}x0"sotwurJOJutotq/ﬁduq wort papeolumoq

91oz ‘Og anﬁnv uo ::

B.G.Pierce et al.

 

Jobs are run on a dedicated computer server at the University of
Massachusetts Medical School with 128GB RAM and 64
(2.2GHz) cores. Each ZDOCK and M-ZDOCK job is paralle-
lized using Message Passing Interface (MP1) to run on eight cores.
A Perl script on the backend server checks for jobs to submit,
submits jobs, checks for completed jobs and sends results to users.

The ZDOCK and M-ZDOCK executables and code were not
modiﬁed for the server from the downloadable and published
algorithms; default sampling levels are used for all jobs.

3 USAGE

Prediction of complexes using the server proceeds in three steps
(Fig. 1):

(1) Input structures and options. On the initial submission
page, users provide two input structures to be docked
(one structure in the case of M-ZDOCK), either by up-
loading their own PDB ﬁles or by specifying PDB codes
followed by selection of chains or biological assembly Via
dynamically generated checkboxes. Options include selec-
tion of ZDOCK version (3.0.2 or 2.3.2).

(2) Selection of blocking/contacting residues. The next step is
selection of blocking (ZDOCK and M-ZDOCK) and con-
tacting (ZDOCK only) residues for each submitted pro-
tein, which is aided by JMol Visualization of each molecule
that highlights selected residues for the user.

(3) Viewing results. Users are emailed a link to the results
page on job completion, where randomly generated
codes are used for results page names (to ensure privacy
of users’ data). In addition to the ZDOCK output and
pre—processed input PDB ﬁles, the results page features a
JMol Visualization of the top docking models and the
center-of-mass positions of the top 500 ligands (the
latter for ZDOCK only), as well as the capability to
Visualize (in JMol) or download any individual complex
from the output. In addition to the top 10 models
that are available as a user download, sets of predicted
complexes can be generated using a Java program, or
alternatively an executable file that is included with the
download of the appropriate program (ZDOCK or
M-ZDOCK).

The ZDOCK Server has established a sizable user base.
Since its move to the dedicated computer server at the
University of Massachusetts 7 months ago, the ZDOCK Server
has completed >6200 jobs from >1000 unique users. The aver-
age running time for jobs is 11.5 min. While this is signiﬁcantly
faster than most docking servers, its predictive performance
is comparable with recently developed docking servers. For
example, based on CAPRI ‘Acceptable’ criteria, the success
rates of ZDOCK 3.0.2 on Docking Benchmark 4.0 (Hwang
et al., 2010b) are 12 and 51%, for the top 1 and 50 predictions,
respectively, versus rates of 10 and 57% reported for the
SwarmDock Server, which takes up to 36h per docking run
(Torchala et al., 2013).

imam

ZDDLK __tf1—_Z£i_(_)_§_l§_ ___l;l_e_Lq__ Links References

 

lnputEmtaln .1 P03 ID = .4982

1 "11.7. II MHC class H mm“: TCR spedfk for
i ‘ hamggmﬁniiu

., Usehlnlﬂgmal
assembly

Select chains 1‘10“me chain a! Class 11' T02]: A
manuallyI mural-u Chain Mali: 1.! Tell): 8

 

 

 

 

Input Prouln 3 mm =
Email;
Optional:
W zoom: 3.0.2 .-
5 . . I .
J
B Pick Contact and Blocking Residues
Sﬂmﬁesmuojtackﬂm
We;
49"! 1dll|_llBC

109 Chain 5 ARE 5 (Hall! A GLU
IID Cilaln E “U 1 Chill! .ﬂ (FLU
1| I Eilaln S Hill 5 (him I HIS
1|! CluinBVAI. ﬁchaillﬁwL
113 Quin I VIM. 7Chnill I ILE
114 Ullln I GLIJ ﬂchaill A ILE
115 CIIIII'IIASF 9ChaillAGUll
115 UIIII'I I Lnl 10 Chill! A HM
1|? Ulalll BM ll ChalnACLU
11! Clllln I LI‘S 12 Challl .Q PHI.

5pm 3 l E! . s E . I
49k: 1dlll_llBC
2| Chain a m: achaln n GLU
22 Cluln A cvs : chain a Cu;
21 Cluln Am 5 (him in His
24 Chain A mt 6Chaill in \l'nL
25 Cluin a Sill 71:11am A ILE
25 Chain a 5m atrial-l A ILE
2? Chlll'l a 5m 9cnaln A GLN
20 Clulrl a VM 10 chill! A AU
29 Chain A no 11 (ham A cm
in Cluln a m 12 Chum in our.

 

 

 

 

Géi'p—red'l'di'émh—u:
1.5

       
      
 
  

Download Film

ZDQQK gut.ng

Gel

RCCQDLGEPDB
Llns‘lnsi ELLE
Top 10 Predlctmns

Model is generated
mm was 15

 

Model 15

 

J Model 1. 5

Model 1
Model 2
JMOGEI 3
Model 4
Top 50!)

«(Cartoon
Wireframe
Suaceﬁil

 

Fig. 1. The ZDOCK Server interface: (A) structure input, (B) blocking/
contacting residue selection and (C) results pages

 

1772

112 /310's112u1no[p10}x0"sotJBulJOJutotq/ﬁduq wort papeolumoq

91oz ‘Og anBnV uo ::

ZDOCK sen/er

 

4 CONCLUSIONS

The ZDOCK Server provides a fast and effective means to pro-
duce models of proteiniprotein complexes and symmetric multi-
mers, Via a user-friendly web interface. In addition to generating
and Viewing structures of docking models through the server’s
tools and interface, users have the option of submitting ZDOCK
Server output files directly to several available docking reﬁne-
ment and post-processing tools (linked from the server page). In
the future, possible developments include clustering and post-
processing functionality directly on the server itself, in addition
to other improvements based on user requests.

ACKNOWLEDGEMENTS

Rong Chen and Yu Zheng (Boston University) provided the
initial scripts and framework for the server. The authors are
grateful to Alan Ritacco (University of Massachusetts Medical
School) and Mary Ellen Gipson—FitzPatrick (Boston University)
for computing help, as well as the Scientiﬁc Computing Facilities
at Boston University for computing resources during initial
server implementation. The authors would also like to thank
the users of the ZDOCK Server for their valuable comments
and suggestions.

Funding: National Institutes of Health (GM084884).

Conﬂict of Interest: none declared.

REFERENCES

Chen,R. and Weng,Z. (2002) Docking unbound proteins using shape complemen—
tarity, desolvation, and electrostatics. Proteins, 47, 2817294.

Comeau,S.R. et a]. (2004) ClusPro: a fully automated algorithm for protein—protein
docking. Nucleic Acids Res, 32, W96rW99.

Hwang,H. et al. (2010a) Performance of ZDOCK and ZRANK in CAPRI rounds
13—19. Proteins, 78, 3104e3110.

Hwang,H. et al. (2010b) Protein—protein docking benchmark version 4.0. Proteins,
78, 311173114.

Lyskov,S. and Gray,J.J. (2008) The RosettaDock server for local protein—protein
docking. Nucleic Acids Res, 36, W2337W238.

Mashiach,E. et a]. (2010) FiberDock: a web server for ﬂexible induced—ﬁt backbone
reﬁnement in molecular docking. Nucleic Acids Res, 38, W4577W461.

Pierce,B. et a]. (2005) M—ZDOCK: a grid—based approach for Cn symmetric multi—
mer docking. Bioinformatics, 21, 147271478.

Pierce,B.G. et a]. (2011) Accelerating protein docking in ZDOCK using an
advanced 3D convolution library. PLoS One, 6, e24657.

Ritchie,D.W. and Venkatraman,V. (2010) Ultra—fast FFT protein docking on
graphics processors. Bioinformatics, 26, 239&2405.

Rose,P.W. et a]. (2011) The RCSB Protein Data Bank: redesigned web site and web
services. Nucleic Acids Res, 39, D3927D401.

Schneidman—Duhovny,D. et a]. (2005) PatchDock and Syranock: servers for rigid
and symmetric docking. Nucleic Acids Res, 33, W36¥W367.

Torchala,M. et a]. (2013) SwarmDock: a server for ﬂexible protein—protein docking.
Bioinformatics, 29, 8077809.

Tovchigrechko,A. and Vakser,I.A. (2006) GRAMM—X public web server for
protein—protein docking. Nucleic Acids Res, 34, W31(¥W314.

Vreven,T. et a]. (2013) Performance of ZDOCK in CAPRI rounds 20—26. Proteins,
81, 217$2182.

Wiehe,K. et a]. (2005) ZDOCK and RDOCK performance in CAPRI rounds 3, 4,
and 5. Proteins, 60, 2077213.

Wiehe,K. et a]. (2007) The performance of ZDOCK and ZRANK in rounds 6—11 of
CAPRI. Proteins, 69, 7197725.

 

1 773

112 /310'S[BHJHOIPJOJXO'SOIJBLUJOJIIIOIq/ﬂduq uloii papeolumoq

9103 ‘Og isnﬁnv uo ::

