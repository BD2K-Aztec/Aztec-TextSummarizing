BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

4g
RECON
fa Ilics

chucnu

T_.

[\J'lcgaBIast

RepeatMasker ‘
repeats

result

 

/3.10'S[Bum0[p10}x0'SOpBLUJOJuyqu”:duq

PRAP

 

varies widely based on chosen parameters. RepeatMasker runs in this
package using the default options with Llib’ to specify the library ob-
tained from the previous step, which contains only hundreds of data
elements for prokaryotic genomes. Hence, the actual running time of
RepeatMasker is minimized, and this renders the tool with high
efﬁciency.

3 PIPELINE PERFORMACE

To evaluate the PRAP performance, we compared its ability in
identifying repeats with other well—known tools and veriﬁed its
accuracy with manually curated and experimental data.

3.1 Comparison using general purpose tools for
genome-wide repeats structure

Chloroﬂexus Sp. Y —400—ﬂ, whose complete GenBank annotation
includes signiﬁcant repeat features, is a repeat—rich prokaryote.
Hence, we selected this organism as an example for a genome—
wide comparison of our software performance with other exist—
ing tools, RepeatFinder, RepeatScout and RepeatModeler (Smit
and Hubley, 2012). RepeatFinder finds repeats directly without
applying RepeatMasker. The other tools create a custom repeat
library to be analyzed as sequences in RepeatMasker. To ensure
a fair comparison, the default parameters were used to run the
tools.

Table 1 summarizes the repeats found by different tools. The
three listed values indicate repeat elements found, not found and
falsely reported, respectively. The element is reported as false
when it does not follow the repeat type deﬁnition. Detailed
results are listed in Supplementary Table SI. No repeat is gener—
ated by running RepeatModeler, which, in turn, indicates that its
algorithm may not be applicable to the prokaryotic genome and
is therefore excluded from the comparison shown in Table 1. For
simplicity, we limited our comparison to those repeat elements
listed in GenBank file. The GenBank results did not specify the
method used and it reported 46 repeat regions: 15 transposons in
3 families, 4 CRISPRs and 27 segmental repeats. Compared with
other tools’ results, GenBank data missed 7 transposon elements
(including 3 in ISDge7 type, 3 in ISMhu9 type and l in ISEhe2
type) and 36 segmental repeats. These missing mobile elements
were mistakenly annotated as pseudogenes. Similarly, most miss—
ing segmental repeats were annotated as either hypothetical
genes or unknown CDSs (see details in Supplementary
Table S1). GenBank data were found to falsely report short—
period tandem repeats as CRISPRs.

Among these tools, RepeatFinder exhibits low quality, where—
as RepeatScout and PRAP show comparable results. All
reported repeats in GenBank can be identiﬁed by RepeatScout
and PRAP with reasonable boundaries, as evidenced by com—
parison with GenBank’s transposon genes boundaries. The
major difference between the two tools occurs within the sufﬁ—
ciently diverged regions, where RepeatScout tends to only iden—
tify partially conserved domains to form disconnected subrepeats
in the same family, whereas PRAP identiﬁes the entire region as
a repeat belonging to other family instead (see repeats in
Supplementary Table S1 marked in green). It should be noted
that both RepeatScout and RepeatFinder failed to correctly
determine CRISPRs elements, which are one of the most
needed repeat features in the prokaryotic genome. This indicates

Table 1. Genome-wide repeats comparison among different tools

 

 

Repeat GenBank Repeat Repeat PRAP
family ﬁnder scout
CRISPRs 4/0/1 0/3/0 3/0/3 3/0/0
Repeat segments 27/36/0 20/43/0 63/0/0 63/0/0
Transposons
ISDge7 8/3/0 7/4/0 11/0/0 11/0/0
ISMhu9 2/3/0 4/1/0 5/0/0 5/0/0
ISEhe2 5/1/0 3/3/0 6/0/0 6/0/0

 

Note: The ﬁrst, second and third numbers of each entry indicate the number of
elements found, not found and falsely reported by the method. The boldface num—
bers highlight the incorrect results. ‘0’ indicates good result in the second and the
third entries.

that their capability of ﬁnding short repeats is inferior to PRAP.
Hence, our method achieves better prediction in this comparison.

3.2 Comparison using specialized tools on interspersed
repeats structure

CRISPRs are one of the most important repeat families in
prokaryotic genomes. The locus contains a succession of highly
conserved regions (direct repeats) varying in size from 23
to 47 bp, separated by similarly sized unique non—repetitive
sequences (spacer) usually of viral origin (Jansen et al., 2002a,
b; Mojica et al., 2005). Organisms with multiloci CRISPR have
conserved the leader sequence at either the 5’ or 3’ ﬂanking
region.

Our method was verified with tools speciﬁcally designed for
the purpose of ﬁnding CRISPRS, such as PILER—CR (Edgar
and Myers, 2005), CRISPRFinder (Grissa et al., 2007) and
CRT (Bland et al., 2007). We chose three genomes as examples
that contain different numbers of CRISPRs cluster and possess
structures that are difﬁcult to identify: Anaeromyxobacter deha—
logenans 2cp—1 genome (NC_011891) with two different
CRISPRs clusters; Chloroﬂexus Sp. Y—400—f1 genome
(NC_012032) with three different CRISPRs clusters; and
Zymomonas mobilis ZM4 genome (NC_006526), whose third
CRISPR is split by a longer spacer (164 bp) into two parts and
contains three similar short CRISPR (&8 U) clusters. Table 2
summarizes the CRISPR analysis of three genomes adopting all
above tools in comparison with our PRAP analysis.

PRAP has proved its unique merits that are superior to its
peer: (i) It is the only tool that identiﬁes all CRISPRs in three
tested genomes, whereas PILER—CR misses one with both
Adehalogenans and Zymomonas genomes, and CRISPRFinder
and CRT each misses a truncated one with Zymomonas genome;
(ii) It is also the only tool that possesses the ability to ﬁnd the
leader sequence; however, this is true only when multiple
CRISPRs belong to the same repeat family. CRISPR loci and
leader sequences are identiﬁed as different repeat families in this
method; (iii) Most importantly, it has the unique capability to
minimize the background noises from simple repeats or tandem
repeats. The CRT tool produces a considerable tandem repeating
background as previously reported (Grissa et al., 2007). Both
PILER—CR and CRISPRFinder also misidentify one tandem

 

2685

ﬁm'spzumol‘pmyo'sopeuuopuotq/ﬁdnq

549216549454

 

6375061637742

 

561814561985

 

 

/810'sleum0prOJxo'sopBLuJOJutotqﬂ:duq

PRAP

 

Table 3. Summary for comparison of PRAP with other tools in identifying mobile repeats of Clostridium thermocellum

 

 

 

IS name/family IS_Finder PRAP RepeatScout RepeatFinder
Full Partial Full Partial Full Partial Full Partial
IS120/IS3 16 6 0 —3 0 —3 —1 —5
ISCthl/IS982 7 0 0 +3 0 +3 —1 0
ISCth2/IS30 10 1 0 0 0 0 —l —l
ISCth3/IS30 16 4 0 —1; +3 0 —2 0 +3
ISCth4/18256 14 4 0 +3 0 +3 —3 —4
ISCth5/18256 9 2 0 0 0 0 0 —l
ISCth6/IS1 10 3 0 0 0 +l +1 —1 0
ISCth7IS110 2 0 0 0 —2 0 0 0
ISCth8/IS1 10 4 0 0 0 0 0 0 0
ISCth9/IS21 4 0 0 +2 0 +2 —1 0
ISCtth/IS200 2 0 0 +1 0 0 0 0
ISCthl 1/IS66 1 0 —1 —1 0 —l 0
ISCth12/IS21 2 2 0 0 —2 +2 0 —1
ISCthl3/ISL3 2 2 0 0 0 —l 0 —3
ISCth14/IS110 1 0 0 0 0 0 -l 0
ISCth15/IS21 l 0 —1 +2 —1 +1 —1 0
ISChy16/IS701 1 1 —1 +1 —1 —1 —1 —1
Unknown/IS256 0 l 0 0 0 0 0 —1
Total absolute deviation 3 l9 8 l9 12 20
Repeat boundary discrepancy <6 bp 84/95 8/23 61/95 8/23 60/95 0/23

 

Note: The entire Cloxtridium themwcellum IS families found by four algorithms. IS_Finder results were taken as a standard reference. The entry number in IS_Finder columns
is the number of IS elements in the family. The entry number of other algorithms indicates the number of the element deviating from IS_Finder result. ‘+’ for additionally
repeats found and ‘—’ for less repeats found. The toml absolute deviation is the sum of the absolute values of the entire column. The bottom row gives the ratio of total repeats
with boundary discrepancy <6 bp from the reference repeat to the entire reference set of full—length or partial elements. The total full—length and partial elements of reference

set are 95 and 23, respectively.

Table 4. Summary of comparison results between experimental data and
PRAP analysis of MIRUs in M ycobacterium tuberculosis H37Rv

 

 

 

 

 

Experimental data PRAP
Class Repeats Family Repeats
I 10 82 10
4 34
848 1
H 37 309 1
56 1
848 12
III 18 3 33 4
82 2
4 4
Not found 333 1

 

Note: PRAP ﬁne—tuned experimental MIRUs families into more families and found
more elements. Family numbers here have no biological meaning.

848333 and 82. The families 82, 4 and 848 are dominant in
classes I, II and III, respectively.

The alignment (Supplementary Fig. SI) of those 65 MIRU
sequences and additional MIRUs predicted by PRAP show
that classes I and II are highly conserved and consistent with

the PRAP identiﬁcation as families 82 and 4, respectively.
However, class III is not sufﬁciently conserved to be identiﬁed
as a single family by PRAP. The following two observations are
worth mentioning: (i) Two class II MIRUs are mosaicked in
longer repeats and are grouped into additional families 56 and
309. (ii) By examining the homologous regions of family 333
(highlighted in Supplementary Fig. SI) in class III, separated
subclasses should be considered, which merits further study.
Overall, this demonstrates that the capabilities of PRAP in iden—
tifying repeats are as reliable as the experimental work.

3.5 Effects of DUST ﬁltering on the PRAP performance

To illustrate the necessity of combining two MegaBlast runs,
PRAP was used to analyze genomes ZM4 (Zymomonas
mobilis ZM4), Saga (Simiduia agarivorans SAlT) and Mutb
(M ycobacterium tuberculosis H37Rv) in three scenarios: (i) one
MegaBlast run with DUST, (ii) one MegaBlast run without
DUST, and (iii) merge of (i) and (ii). The number of
MegaBlast hits and the number of RECON families generated
in this analysis are presented in Table 5. To study the actual
difference in blast hits and RECON families between scenarios,
the content of each hit and the consensus sequence of each family
should be examined and compared, as counted number alone
can be misleading. The results are shown in the right column
of Table 5.

 

2687

ﬁm'spzumol‘pmyo'sopeuuopuotq/ﬁdnq

G.-L.Chen et al.

 

Table 5. Illustration of DUST effects on the PRAP performance

 

Genomes tested PRAP with one MegaBlast run

 

With DUST(A) Without DUST(B)

PRAP with two MegaBlast runs
(merged results)

 

 

 

MegaBlast RECON Genomes RECON Merged MegaBlast RECON DifferenceHits/families
hits families tested families hits families
From (A) From (B)
ZM4 584 186 813 218 813 218 229 (28)/32 (15) 0/0
Saga 4635 534 5736 544 5736 544 1105 (19)/37 (7) 0/0
Mutb 10 252 1203 24815 1288 24833 1320 14 781 (59)/478 (36) 481(2)/176(13)

 

Note: All hits <80% similarity were removed. The value in ‘Difference’ columns indicates the number of difference in blast hits and RECON repeat families between the single

and the merged runs. The number in parentheses is the percentage.

For all tested genomes, the numbers of blast hits and repeat
families with dust ﬁltering (one MegaBlast run) showed signiﬁ—
cant difference from those of merged run, and the differences
ranged from 19 to 50% and 7 to 36%, respectively. For single
MegaBlast run without dust ﬁltering, the blast hit and repeat
family numbers showed no difference from the merged run for
genomes ZM4 and Saga. However, the effect of the merged
MegaBlast run is well demonstrated for genome Mutb. By mer—
ging the two MegaBlast runs, PRAP successfully captured 481 or
2% different blast hits and 176 or 13% different repeat families
compared with one MegaBlast run without dust. This could be
explained by the low complexity repeat content in genome, as
both ZM4 and Saga genomes are poor, but Mutb is highly rich,
in low complexity structures (Nandi et al., 2003).

When two runs were merged, the blast hits were summed up
from two single runs followed by removing the duplicated hits
and subjected to other cutoff constrains. Repeat families were
then created from these merged hits. In the scenarios of ZM4 and
Saga genomes, the limited low complexity regions (if existing) do
not inﬂuence repeats in other regions. Therefore, the without
dust hits fully include the dust hits and are equivalent to the
merged one. In the case of Mutb, whose low complexity region
constitutes a higher fraction of the genome, the short repeats
embedded in the vicinity of low—complexity regions will likely
skew the alignment during similarity search, thus inﬂuencing
the repeat detection in other regions. This would lead to different
repeats identiﬁed between two single runs. After merging,
repeat family for the merged run is determined again, which
may be different from each single run. Nevertheless, we do not
expect a huge difference between without dust and merged runs,
as both runs process similarity search against the same
(unmasked) sequence. The degree of difference is dependent on
the genome’s intrinsic low—complexity repeat structure and simi—
larity identity chosen; other possible factors are not completely
excluded.

This exercise demonstrates the necessity of combining the two
MegaBlast runs. Using MegaBlast with dust or without dust
alone would possibly lead to incomplete discovery of repeat
elements or repeat families. The effects are not known a priori.
To avoid the unpredictable loss, even small, users are advised to
adopt the ‘merged’ run as default.

4 DISCUSSION

We described an ab initio system for rapid identiﬁcation of all
spectrum repeats in prokaryotic genome sequences and the
assignment of these repeats to families. Prokaryotic genome, at
the scale of Mb, allows BLAST to use a smaller size of search
word to identify both short and long repeat segments accurately.
The nature of the repeats within the prokaryotic genomes facili—
tates the algorithm to minimize errors generated from grouping
the repeat family, thus achieving better performance.

To run PRAP, it is required to download and install BLAST,
RECON, VisCoSe, RepeatMasker and Artemis from different
external sources. Downloading, installing and granting the
licensee permission are users’ responsibility. Although these pre—
requisites do not update frequently, adjustment of the executing
commands of the software might be required when using a dif—
ferent version for initiating installation or updating.

False—positive rate is a common index of speciﬁcity to assess
the performance of discovery algorithms. However, by defin—
ition, a DNA repeat is two similar sequences, and the precise
deﬁnition of a false positive is debatable. Moreover, unlike
eukaryotes, which have extensive curated known
RepeatMasker libraries (RepBase) to aid in identifying true posi—
tive repeats (Saha et al., 2008), prokaryotes have difﬁculty in
evaluating the tools in terms of sensitivity and speciﬁcity.
Therefore, we used the direct comparison of repeat numbers/
boundary approach instead of the sensitivity and specificity of
repeat as benchmarks for comparing the code performance.

PRAP currently categorizes the repeats as transposon, protein
motif repeat, RNA, CRISPRs and unknown. However, it is
challenging to clearly distinguish repeat families, especially
when overlap and mosaic subrepeat structure occur. As stated
in Section 3.4, repeat elements may be categorized into different
families owing to embedding in a longer repeat belonging to the
different family. Furthermore, PRAP tends to distinguish the less
conserved repeats from a conserved group into different families,
and it may require some adjustment using the similarity cutoff
setting.

Mobile repeats are often nested in one another in the form of
fragments, which become a major source of fragmented trans—
posons. Hence, fragmented transposons, as opposed to intact

 

2688

ﬁm'spzumol‘pmjxo'sopeuuopuotq/ﬁdnq

PRAP

 

transposons, are more difﬁcult to be identiﬁed and assigned to a
family. The open reading frame within these fragments can be
mis—annotated as a pseudogene if the repeat is not accurately
identified. On the other hand, identifying fragmented repeats
can help to better annotate the pseudogenes impacted by frame
shift, split or premature stop codon effect. The PRAP can iden—
tify both intact and fragmented repeats as described in Section
3.3, although the short fragmented transposons are difficult to be
distinguished from interspersed repeats that are also transpos—
able. This ability enables the tool to avoid miscalling genes in
the repeat regions, therefore enhancing the gene prediction as
discussed in Section 3.1. It is believed that a signiﬁcant number
of false hypothetical/pseudogenes can be removed from annota—
tion when this tool is applied.

In addition, the PRAP is capable of detecting novel repeats.
By facilitating its ‘ab initio’ and ‘identifying full spectrum repeats
in genome—wide’ characteristics, a new repeat library containing
all repeat families can be generated for each new organism. This
ensures the discovery of novel repeat. However, to achieve this, a
prokaryotic repeat database has to be established such that the
novel repeats can be easily identiﬁed. Our tool is currently the
most complete repeat—ﬁnding tool designed for prokaryote
genome. It can improve genome annotation and offer valuable
potentials in repeat—related biological applications such as the
characterization of metagenomes by signature repeats.

ACKNOWLEDGEMENTS

This work was initiated when Drs Chen and Chang were work—
ing at the Bioscience Division, Oak Ridge National Laboratory,
USA. The authors thank National Science Council (NSC),
Taiwan, for the supporting grant, and the facilities in National
Taiwan University and HPCbio, the University of Illinois to
complete this work. They are also grateful to Mr Marshall Lin
for helping with the UNIX software installation.

Funding: National Science Council, Taiwan under Contract no.
NSC 100-2221-E-002—128 and NSC 101-2811-E—002—045.

Conﬂict of Interest: none declared.

REFERENCES

Altschul,S.F. et ul (1990) Basic local alignment search tool. J. Mol Biol, 215,
4037410.

Andrey,S. et ul (2010) Identiﬁcation of repetitive elements in the genome of
oreochromis niloticus: tilapia repeat masker. Mar. Biotecnol, 12, 121+125.

Bao,Z. and Eddy,S.R. (2002) Automated ale novo identiﬁcation of repeat sequence
families in sequenced genomes (RECON). Genome Res, 12, 12694276.

Barrangou,R. et ul (2007) CRISPR provides acquired resistance against viruses in
prokaryotes. Science, 315, 1709+1712.

Bland,C. et ul (2007) CRISPR Recognition Tool (CRT): a tool for automatic
detection of clustered regularly interspaced palindromic repeats. BMC
Bioiip’ormutics, 8, 209.

Brouns,S.J. et ul (2008) Small CRISPR RNAs guide antiviral defense in prokary—
otes. Science, 321, 96(F964.

Claverie,J.M. and States,D.J. (1993) Information enhancement methods for large
scale sequence analysis. Comput. Chem, 17, 191+201.

Edgar,R.C. and Myers,E.W. (2005) PILER: identiﬁcation and classiﬁcation of
genomic repeats. Bioinformutics, 21 (Suppl. 1), i152+i158.

Grissa,I. et ul (2007) CRISPRFinder: a web tool to identify clustered regularly
interspaced short palindromic repeats. Nucleic Acids Res, 35, W52+W57.

Jansen,R. et ul (2002a) Identiﬁcation of a novel family of sequence repeats among
prokaryotes. OMICS, 6, 23+33.

Jansen,R. et ul (2002b) Identiﬁcation of genes that are associated with DNA repeats
in prokaryotes. Mol Microbiol, 43, 156&1575.

Koressaar,T. and Remm,M. (2012) Characterization of species—speciﬁc repeats in
613 prokaryotic species. DNA Res, 19, 219+230.

Kurtz,J.V. et ul (2001) REPuter: the manifold applications of repeat analysis on a
genomic scale. Niwleic Acids Res, 29, 463%4642.

Mojica,F.J. et ul (2005) Intervening sequences of regularly spaced prokaryotic
repeats derive from foreign genetic elements. J. Mol Evol, 60, 174482.

Morgulis,A. et ul (2006) WindowMasker: window—based masker for sequenced
genomes. Bioinfommtics, 22, 134+141.

Nandi,T. et ul (2003) A novel complexity measure for comparative analysis
of protein sequences from complete genomes. J. Biomol. Struct. Dyn., 20,
657$68.

Price,A. et ul (2005) De novo identiﬁcation of repeat families in large genomes
(RepaetScout). Bioinformutics, 21 (Suppl. 1), i351+i358.

Saha,S. et ul (2008) Empirical comparison of ab initio repeat ﬁnding programs.
Nucleic Acitls Res, 36, 22842294.

Siguier,P. et ul (2006) ISﬁnder: the reference centre for bacterial insertion
sequences. Nucleic Acids Res, 34, D32+D36.

Smit,A. and Hubley,R. (2012) RepeatModeler — 1.0.5. Institute for Systems Biology.
http://www.repeatmasker.org/RepeatModeler.html (6 June 2011, date last
accessed).

Smith,C.D. et ul (2007) Improved repeat identiﬁcation and masking in dipterans.
Gene, 389, 1+9.

Sobreira,T.J. et ul (2006) TRAP: automated classiﬁcation, quantiﬁcation and
annotation of tandemly repeated sequences. Bioinformutics, 22, 361+362.

Song,S. et ul (2012) Genome—wide detection of spontaneous chromosomal rear—
rangements in bacteria. PLoS One, 7, e42639.

Spitzer,M. et ul (2004) VisCoSe: visualization and comparison of consensus
sequences. Bioinformutics, 20, 4334135.

Supply,P. et ul (1997) Identiﬁcation of novel intergenic repetitive units in a myco—
bacterial two—component system operon. Mol Microbiol, 26, 991+1003.

Trivedi,S. (2006) Comparison of simple sequence repeats in 19 archaea. Genet. Mol
Res, 5, 7417772.

van Belkum,A. et ul (1998) Short—sequence DNA repeats in prokaryotic genomes.
Microbiol. Mol. Biol. Rev., 62, 275+293.

Volfovsky,N. et ul (2001) A clustering method for repeat analysis in DNA
sequences (RepeatFinder). Genome Biol, 2. research0027—research0027.l l.

 

2689

ﬁm'spzumol‘pmjxo'sopeuuopuotq/ﬁdnq

