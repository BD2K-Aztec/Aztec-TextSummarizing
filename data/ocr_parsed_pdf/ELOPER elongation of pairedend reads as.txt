APPLI CA TIONS NOTE V°" 2305-135.11233/Zsﬁigiiaiiiﬁig

 

Genome analysis

Advance Access publication April 19, 2013

ELOPER: elongation of paired-end reads as a pre-processing tool
for improved de novo genome assembly

David H. Silver‘, Shay Ben-Elazar‘, Alexei Bogoslavsky2 and ltai Yanai”
1Department of Biology, Technion—Israel Institute of Technology, Haifa 32000, Israel and 2Daynix Computing Ltd,

Netanya 42317, Israel
Associate Editor: Martin Bishop

 

ABSTRACT

Motivation: Paired-end sequencing resulting in gapped short reads is
commonly used for de novo genome assembly. Assembly methods
use paired-end sequences in a two-step process, first treating each
read-end independently, only later invoking the pairing to join the con-
tiguous assemblies (contigs) into gapped scaffolds. Here, we present
ELOPER, a pre-processing tool for pair-end sequences that produces
a better read library for assembly programs.

Results: ELOPER proceeds by simultaneously considering both ends
of paired reads generating elongated reads. We show that ELOPER
theoretically doubles read-lengths while halving the number of reads.
We provide evidence that pre-processing read libraries using ELOPER
leads to considerably improved assemblies as predicted from the
Lander—Waterman model.

Availability: http://sourceforge.net/projects/eloper.

Contact: yanai@technion.ac.il

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on August 30, 2012; revised on April 6, 2013; accepted on
April 8, 2013

1 INTRODUCTION

Sequencing a genome involves the production of a large number
of relatively short sequences, termed reads, which collectively
comprise the entire genomic sequence, several fold over.
Reconstructing the genomic sequence from a set of such reads
constitutes the assembly problem. A typical de novo assembler
iteratively merges overlapping reads, until no additional overlap
is detected (Miller et al., 2010). To predict how a given library of
reads will perform in the assembly process, the Landere
Waterman (LVV) statistical model is generally invoked (Lander
and Waterman, 1988).

Paired-end reads refer to the sequencing of short (~100 bp)
portions of both ends of a DNA fragment. Paired-end sequen-
cing was used extensively in Sanger sequencing of most large
genomes and is also common for genome sequencing using
high-throughput methods. A paired-end read amounts to more
than two independent single-end reads, as the two map to prox-
imate regions in the genome, where the proximity is deﬁned by
the known size of the library of fragments. As useful as this
information is, however, methods to assemble paired-end data
generally disregard the pairing information in the ﬁrst stage of

 

*To whom correspondence should be addressed.

assembly that generates contigs, and invoke the pairing only later
to build scaffolds.

Here, we present ELOPER, a pre-processing tool for a library
of reads to be invoked before their submission to any assembler.
ELOPER exploits the notion that the paired-end information
essentially doubles the read length, permitting the detection of
up to double the original overlap while maintaining the min-
imum required sequence overlap. Thus, ELOPER detects
‘gapped overlap’ where sub-threshold overlaps occurring in
both ends reach significant thresholds. ELOPER then returns
the ‘elongated’ paired-end reads according to the gapped overlap
detected with all other reads in the library (Fig. la). The result is
a new library of paired-end reads, longer than the original reads.
The ELOPER-processed library can be assembled using de
novo assemblers (Miller et al., 2010). Although ARACHNE
(Batzoglou et al., 2002) uses a similar approach as part of a
full assembler, ELOPER allows an elongation pre-processing
step followed by assembly using any assembler. Here, we show,
both empirically and mathematically, that ELOPER-processing
leads to better assemblies.

2 THE ELOPER APPLICATION

ELOPER is written in C and compatible with Linux and
Windows. The application receives as command-line inputs
ﬁles containing paired-end reads in FASTA format and returns
elongated reads. For each paired-end read p1 in a library [L] of
short paired-end reads, ELOPER operates as follows. The short-
est common superstring of p1 and p, is identiﬁed if Overlap
(r1,ri) + Overlap(ll,li) 3 T, where T is an overlap length threshold
and l and r are the left and right read ends. ELOPER identiﬁes
overlap of Tbase pairs, if both reads share the exact Tbase pairs.
ELOPER merges all the paired-end reads, which surpass
the overlap threshold into pf, an elongated substitute for p1
(Fig. la). ELOPER implements elongation using a highly paral-
lelized hash table creation and match detection (Supplementary
Note 1).

3 RESULTS
The LW model predicts the expected length of a contig (£2) and
the number of contigs (A) as:

£2 2 Ne’”,

A = L((e“’ — l)/c +1 — a),

 

© The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com 1455

112 /310's112u1n0fp10}x0"sotwurJOJutotq/ﬁduq 11101} papeolumoq

91oz ‘Og anﬁnV 110 ::

D.H.Silver et al.

 

(a) (b)

[L]

 

p‘
p2
p3
[L'] :LI- (6)

 

, _l_ ' 4.
p @----;—-

I
O
O
:T
I”! '1..- WIN
1‘ Assembler I
I

‘N I
‘h—-ﬂ’

 

——- Thauwlical — ELOF'EFI+
— Obsewad — ELOPER—

 

 

 

 

 

    

 

 

 

 

 

 

 

 

 

 

 

 

,.E 5 ,9 a
g9 4 “m... g s
a "a. e
E 3 \\ “uh...”- § 4-
w
E 2 x *5 a
a \ 4: _,
E I \x E 2 ....——"
3 \ _ _.-
Z 0 ‘ g 1
H)
10 20 an 40 E 10 20 30 40
Coverage Coverage
% 1 0.5
5
3 0.3 0.4
E _w
5 0.6 E 0.3
0 e
E 0.4 E 0.2
Z Ll.
% 0.2 0.1
a:
g o u
10 20 30 4D 10 20 30 40
Coverage Coverage

Fig. 1. ELOPER pre-processing and its performance. (a) Schematic of the ELOPER method. Library, [L], of three paired-end reads, p1_3, is shown in the
top. Reads are marked in gray, and ends belonging to the same fragment are connected by a dashed line. Overlap among reads is indicated in red.
ELOPER converts p1 to pl’ after elongating using p2 and p3. The overlap between p1 and p3 is less than the threshold in either end of the read; however,
taking both overlaps into account, ELOPER is able to merge these reads. (b and c) Dashed and continuous lines represent the theoretically expected and
empirically measured values, respectively. Red and blue lines represent SOAPdenovo results starting from a pre-processed library of bacteriophage reads
and the unprocessed library, respectively. (b) The number of contigs and the average length of a contig are shown as a function of coverage.
Discrepancies between theoretical and observed values occur because the assembly includes a scaffolding step. The theoretical model is skewed when
the average contig length is greater than the genome length (G). (c) A comparison of the N50 and the fraction of ‘N’s in the scaffolds as a function of
coverage. The parameters for ELOPER and SOAPdenovo were T: 30 and k = 29, respectively

where N is number of reads, L is the length of the reads, c is the
expected coverage (LN/ G) and G is the genome length. Finally, a
is [-6, where 6 is the fraction of the read required for an overlap
T/L. In this formulation, contigs and reads are treated synonym-
ously. The equal sign here represents almost sure convergence as
arises from ergodic theorems. The LW model bases expectation
analyses on the probability of covering a base in the genome. We
show that using paired-end information provides the same ex-
pectation for covering a base as single-end reads of twice the
length. Given two paired-end reads, each of length L/2, which
both map to a previously uncovered region in the genome, let us
assume that the overlap between the pairs of ends is of length T1
and T2, where T; + T2: T. The number of newly covered bases
is then 2(L/2)-T1 + 2(L/2)-T2, or 2L-T. This is equivalent to the
number of newly covered bases by two single-end reads of length
L and overlap T.

We further considered the probability for erroneous read
merges. The probability of observing an overlap of T1 + T2 be-
tween a pair of paired-end reads is (G — 2f) - 4’(T1+T2), where f is
the fragment size (assuming it is constant) of the paired reads,
and G is the genome size. This is roughly equal to the probability
of ﬁnding an overlap of length T at random between two sin-
gle-end reads (G — 2T) - 4’ T. Thus, using both ends of the
paired-end sequences simultaneously to detect overlap (Fig. la)
effectively halves the number of reads in the library, but doubles
the length of each read in terms of the detection and error rate.
Substituting these parameters in the LW model, we arrive at the

following theoretical improvement to the number of contigs and
to their expected length:
/

% = g - er” a were),

A/ (We?) — 1) N .9

X 3 m ~ W )a
where £2/ and A/ are based on a library of 2L and N /2, relative to
the £2 and A libraries of L and N. For a real genome with re-
petitive regions, these relationships will hold with a deviation of a
smaller magnitude than 0(e’66) and 0(ec"), respectively. The
theoretical improvement with the paired-end information ad-
equately included is thus expected to be exponential in terms
of both the number of contigs and their mean length (dashed
lines in Fig. lb).

We examined the performance of SOAPdenovo (Li et al.,
2010) in assembling a library of bacteriophage reads (Sabehi
et al., 2012) with and without pre-processing by ELOPER
(Fig. lb and c). We found that ELOPER pre-processing im-
proves the quality of the assembly across a range of coverages
(Fig. lb), genomes and assemblers (Supplementary Fig. S1,
Supplementary Tables S173). Beyond the predicted statistics,
ELOPER-pre-processed libraries yield larger and more complete
scaffolds, as measured by the N50 and the fraction of N’s
(Fig. 1c). ELOPER run-time mainly depends on the chosen
k-mer; a larger k—mer results in faster pre-processing.
For example, ELOPER processes 100 000 paired-end reads

 

1456

112 /310'S[BIIJHOIPJOJXO'SOTJBLUJOJIITOTCI”Zduq 11101} papeolumoq

91oz ‘Og anﬁnV 110 ::

ELOPER: elongation of paired-end reads

 

per minute per thread with 10 GB RAM, with a chosen k—mer of
30. The runtime scales linearly with the size of the library such
that the limit on the size of the library for pre-processing is re-
stricted only by the computational resources. ELOPER thus pro-
vides a valuable pre-processing for improved de novo assemblies
of short paired-end libraries.

ACKNOWLEDGEMENTS

D.H.S. is supported by Microsoft Research through its PhD
Scholarship Programme.

Funding: Israel Science Foundation grant 1500/09.

Conﬂict of Interest: none declared.

REFERENCES

Batzoglou,S. et a]. (2002) ARACHNE: a whole—genome shotgun assembler. Genome
ReS., 12, 1777189.

Lander,E.S. and Waterman,M.S. (1988) Genomic mapping by ﬁngerprinting
random clones: a mathematical analysis. Genomics, 2, 2317239.

Li,R. et a]. (2010) De novo assembly of human genomes with massively parallel
short read sequencing. Genome Res., 20, 2657272.

Miller,J.R. et a]. (2010) Assembly algorithms for next—generation sequencing data.
Genomics, 95, 3157327.

Sabehi,G. et a]. (2012) A novel lineage of myoviruses infecting cyanobacteria is
widespread in the oceans. Proc. Natl Acad. Sci. USA, 109, 203772042.

 

112 /310'S[BHJDO[pJOJXO"SOTJBHIJOJulolq/ﬂdnq 11101} papeolumoq

91oz ‘Og isnﬁnV 110 ::

