BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

S.Degroeve and L.Martens

 

inductive leaning approach for peak intensity regression that
exploits all of the information contained in this large number
of PSMs. Our approach still uses the non—linear decision tree
representation for training the peak intensity prediction
models. Both training and prediction procedures are imple—
mented in a freely available tool called MS2 Peak Intensity
Prediction, or MSZPIP.

2 METHODS

2.1 Training dataset

A total of 3.965.456 OrbiTrap PSMs identiﬁed as true matches in 619
proteomics experiments (obtained by sampling human, mouse and rat as
well as many plant and bacterial species) were queried from the ms-lims
database (Helsens et al., 2010) of the proteome analysis and bioinfor-
matics unit of Ghent University. All PSMs were scored as non-random
matches by the Mascot search engine (versions ranging from 2.1.02 to
2.3.01) with allowed error rate estimates from 1 to 5%. We refer to this
PSM data as the training dataset D. Signal peak intensities are normal-
ized within each MS2 spectrum such that we can compare these intensities
between spectra. All peak intensities within a spectrum were divided by
the sum of all peak intensities of that spectrum, i.e. normalization to total
ion current (Degroeve et al., 2011). All intensities are logz transformed.

2.2 Evaluation datasets

Several publicly available MS2 sample processing experiments, all per-
formed on LTQ-OrbiTrap type instruments, were used for evaluating
the intensity prediction models obtained from the training data. None
of these data were generated by the Proteome Analysis and
Bioinformatics Unit of Ghent University. The ﬁrst set of processed sam-
ples was obtained from a study of the NCI funded Clinical Proteomic
Technology Assessment for Cancer (CPTAC) Network (Paulovich et al.,
2010). Herein, six digested yeast samples were analyzed by three different
laboratories to generate the corresponding MS2 spectra. For each labora-
tory, we make one evaluation dataset that contains all PSMs of the six
proteomic experiments.

We will refer to these datasets as lab] , lab2 and MM. The second set of
processed samples originates from The Proteome Informatics Research
Group (iPRG) of the Association of Biomolecular Resource Facilities
and their 2009 study. This study used two different E. coli lysate samples,
each processed as ﬁve technical replicates. We create two evaluation
datasets, sample] and sample2, each containing the respective PSMs for
all ﬁve replicates.

All MS2 spectra were searched with the Mascot peptide identiﬁcation
engine and post-processed by the Percolator PSM rescoring tool to pro-
duce PSMs with high conﬁdence (FDR< 0.01). The number of PSMs in
each evaluation dataset is shown in Table 1.

2.3 Data processing

Our key idea is to partition the dataset D into disjoint subsets that rep-
resent regression learning tasks that are easier to solve by a machine
learning method. This is possible by exploiting the vast amount of
PSM training data available to us. As different PSM charge states 6 are
known to fragment differently, dataset D is ﬁrst partitioned based on the
charge state of the PSM. In this research, we consider the most important
charge states +2 and +3. We refer to these PSM datasets as D(. with
ce{+2,+3}. It is worth noting that the separate analysis of different pep-
tide charge states has already been shown to be useful in identiﬁcation
results validation (Vaudel et al., 2011).

We take this one step further by partitioning each dataset Di. based on
the peptide length l of the PSM. For this, we consider peptide lengths
from 8 to 28 amino acids based on the typical lengths of identiﬁed

Table 1. The number PSMs in the CPTAC and iPRG evaluation datasets

 

 

Dataset Charge +2 Charge +3
Labl 42 774 4435
Lab2 59 751 21 263
Lab3 42 174 15 808
Samplel 11191 5114
Sample2 12 005 5428

 

peptides (Vandermarliere et al., 2013). As a result, we now have parti-
tioned D into Dc, with c e {+2,+3} and l 6 [8,28]. As explained further,
this will greatly simplify the representation of the PSMs by feature vec-
tors, and therefore make it easier for a machine learning method to learn
an accurate regression model.

To apply a machine learning method on the datasets D(.,, we need to
compile each PSM into a feature vector and label that vector with a target
for the regression. Table 2 lists the features we used to represent a PSM.
These include previously described features (Elias et al., 2004) such as the
mass-to-charge ratio of the peptide sequence and the two fragment ions
as well as average values for different chemical properties of the amino
acids in a peptide or fragment ion. Also, the amino acid composition is
taken into account by counting the number of times each amino acid
appears in the peptide (feature I_). The features (seq_<pos>_x) are new
and can only be computed because we partitioned the training data based
on the length l of the peptide. These features capture information from all
positions in the amino acid sequence, not just from the positions in prox-
imity to the cleavage site. For each position, we compute features that
represent the presence of a speciﬁc, potentially modiﬁed amino acid.
Similarly we compute features that contain the value of several chemical
amino acid properties for each position in the peptide sequence.

In this research, we build regression models for all the bi, b++,-, b-H20i,
b'NH3i, b++-H20i, b++-NH3i, Yi,y++i, y-H20i, y-NH3i, y++-H20i and
y++-NH3,- fragment ions with i ranging from 1 to l—l for a peptide of
length I. We will refer to this set of fragment ions as frag(l). Each ion is
searched for in the MS2 spectra with a 0.8 Da error tolerance. If >1 signal
peak is observed within the constructed error window, then the peak with
the highest intensity is selected as the matching peak. For each fragment
ion f e frag(l), a training dataset Dclfis compiled that contains all PSMs
with charge 6 and peptide length l and with the observed peak intensities
for fragment ion f as targets for the regression. Just as for c and l, we here
build separate models for each f e frag(l).

Each dataset Dc, contains PSMs with the exact same peptide sequence
and charge, but with different experimental MS2 spectra. Instead of rep-
resenting these PSMs as different feature vectors, we merged these spectra
by computing the median intensity for each f e frag(l) and computed only
one feature vector from the merged PSMs. This reduces experiment
induced intensity variance and limits the negative impact of outlying
PSMs, i.e. PSMs not correctly identiﬁed by Mascot. This is similar to
the spectrum averaging techniques used in spectral libraries (Lam et al.,
2007).

To make spectrum merging meaningful, we removed all PSMs for
which the peptide sequence is observed <10 times. This ﬁlter again re-
duces the impact of potentially incorrectly identiﬁed PSMs as such
random matches are typically identified in only few experiments.
Preferring to err on the side of caution, we assumed that many of these
only occasionally observed identiﬁcations could be incorrect PSMs. The
minimum threshold of 10 spectra identifying a peptide is selected as a
balance between making the merging meaningful while still keeping
enough PSM data for training the regression models. The number of
non-redundant PSMs in each dataset Dc, is show in Table 3.

 

3200

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

M82PIP

 

Table 2. Features used to represent the PSMs in datasets D6,,»

 

 

Feature Description

labeled Set to 1 if the peptide has an n-terminal label, 0 otherwise
pep_mz Computed mass value of the peptide sequence

ion_mz Computed mass of the fragment ion f

ion_mz_other Pep_mz minus ion_mz
avg_<chem>

avg_<chem>_ion

Average of chemical property <chem> for all amino acids in the peptide
Average of chemical property <chem> for all amino acids in the fragment ion f

I Number of occurrences of the amino acid <amin0> in the peptide sequence

seq_<pos>_
seq_<pos>_<mod-a>
seq_<pos>_<chem>

Set to 1 if the amino acid at peptide sequence position <pos> is
Set to 1 if the modiﬁed amino acid at peptide sequence position <pos> is
The value of the chemical property <chem> of the amino acid at position <pos> in the peptide

 

Note: The different chemical properties <clzem> are basicity, hydrophobicity, helicity and p1. The values are listed in Supplementary Table S]. The
modiﬁed amino acids <mod—amin0> in the training PSMs are C, K, M, N and R.

Table 3. The number of (merged) PSMs used in each dataset Dc,

 

 

Peptide length Charge +2 Charge +3
8 4972 40
9 6875 89
10 7627 155
11 7910 289
12 6855 355
13 5927 443
14 5131 615
15 4422 798
16 3633 951
17 2614 870
18 1900 895
19 1531 941
20 859 807
21 705 777
22 433 694
23 307 670
24 166 480
25 137 329
26 55 266
27 63 293
28 28 214
Total 62150 10 971

 

Remark that our spectrum merging approach is a way of removing
redundant PSMs from the datasets. In previous approaches, non-redun-
dant sets of PSMs were obtained by selecting the match with the highest
quality (typically implemented as selecting the PSM with the highest
Mascot score). However, by merging the observed peak intensities for
all observed PSMs, we try to exploit much more information from the
3.965.456 spectra in our PSM dataset.

2.4 Regression model induction

Signal peak intensity prediction models were induced from the compiled
training datasets using the random forests (RF) regression method
(Breiman, 2001). This algorithm computes an ensemble of ntree CART

regression trees in which each tree is constructed from mtry randomly
sampled features. A peak intensity prediction is then computed as the
average of the outputs of the regression trees in the forest.

Let m be the number of features in a training dataset D6,), then all
combinations of ntree e {10, 20, 40, 60, 100, 140, 200} and mtry e
{sqrt(m), m/4, m/3, m/2, m/1.5} are evaluated. The RF method uses an
out-of-bag (oob) procedure that can be used to compute an unbiased
estimate of the prediction performance. For each parameter combination,
we induce a RF regression model and estimate the explained variance by
computing the oob R2 as the mean-squared error divided by the variance
of the original observations and subtracted from one. We used the
‘randomForest’ R library version 4.6.7 from the Comprehensive R
Archive Network (CRAN) as the RF implementation.

3 RESULTS

3.1 Training RF regression models

Table 3 shows the number of vectors for each dataset Dd. There
are many more experimental PSMs with charge +2 as compared
with charge +3 PSMs. For charge +2 PSMs, the peptide length
I = 11 is most likely to be observed, whereas for charge +3, this is
I: 16. It is observed that training set sizes are different for the
different regression tasks.

To investigate the regression target distribution in each dataset
Dd): we plotted the mean and standard deviation of this distri—
bution for each dataset Ddf with f e {by}. From this plot
(Supplementary Fig. Sl), we concluded that datasets Dd) with
low mean intensity also have low variance. For these dataset, the
signal peaks for fragment ion f are hardly ever observed, or they
are in the noise. For these datasets, a baseline regression model
that always predicts that no signal peak is observed will be hard
to beat. So, for all datasets Dd) with a standard deviation of the
regression target distribution smaller than 0.5, we do not induce
an RF regression model but rather apply the baseline regression
model.

Figure 1 shows the distribution of the oob R2 prediction per—
formance results for b and y ion types. A more detailed visual—
ization of the results can be found in Supplementary Figure S2.
As known from previous research, learning charge +3 fragmen—
tation rules is much harder than charge +2 rules. Because of this,
the dataset D contains less charge +3 PSM examples, as it is

 

3201

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

'.  __...illlHI
' _-...u|llHll
.-_..ulll”ll
___....t|llHl.
__...-.|llHl.

 

M82PIP

 

better. This is somewhat surprising for the charge +3 models as
these were trained relatively small datasets (Table 3). A ﬁnal
observation is that these conclusions are consistent for all evalu—
ation sets.

4 CONCLUSIONS

MSZPIP is a tool that implements a number of new techniques
for the induction of MS2 signal peak intensity prediction models.
First, following the conclusion made by (Elias et al., 2004) that
decision tree representations are suitable for learning peptide
fragmentation rules, MSZPIP applies a RF regression learning
algorithm for constructing the prediction models. Second, the
vast amount of available PSM data accumulated over the
recent years allows MSZPIP to partition this PSM data to facili—
tate the construction of feature vectors from peptide sequences.
Third, MSZPIP merges PSM data to reduce dataset sizes while
still preserving the relevant intensity information contained in
all PSMs.

The main conclusions we want to make from this research are
the following. First, MSZPIP shows superior prediction perform—
ance for the fragment ion peak intensities considered in this re—
search as compared with the neural network based PeptideART
prediction tool. Second, MSZPIP and PeptideART both are sig—
niﬁcantly less accurate for the longer peptides, although MSZPIP
is far more accurate than PeptideART for the smaller peptides.
Third, the accuracy of the models differs signiﬁcantly between
the different fragment ion types. For less prominent ion types
such as b++—H20 and y++—NH3ﬁ the accuracy of the intensity
predictions is low for both tools. The prediction models com—
puted for the b and y ions were most accurate. The ion types
b++ and y++ could be modeled accurately only for the charge
+3 peptides.

Although additional research needs to be performed, we be—
lieve the main contribution of MSZPIP to the increased accuracy
observed for MS2 signal peak intensity prediction is the splitting
of the PSM data based on charge state, peptide length and frag—
ment ion type, making the learning task easier for the RF regres—
sion method. The observation that MSZPIP is far more accurate
for the smaller peptides provides a strong indication for this
statement.

In addition, our publicly available MSZPIP implementation
allows for building peak intensity prediction models for all
other types of fragment ions as well.

Funding: The seventh framework program of the European Union
(Contract no. 262067— PRIME—XS) and by Ghent University
(multidisciplinary research partnership ‘Bioinformatics: from nu—
cleotides to networks’). IWT SBO grant ‘INSPECTOR’ (120025)

(in part). Computations were performed on the Stevin
Supercomputer Infrastructure at Ghent University, funded by
Ghent University, the Hercules Foundation and the Flemish
Government.

Conﬂicts of Interest: none declared.

REFERENCES

Arnold,R.J. et al. (2006) A machine learning approach to predicting peptide frag—
mentation spectra. In: Pacific Symposium on Biocompating. pp. 2197230.

Barton,S.J. and Whittaker,J.C. (2009) Review of factors that influence the abun—
dance of ions produced in a tandem mass spectrometer and smtistical methods
for discovering these factors. Mass Spectrom. Rev., 28, 1777187.

Breiman,L. (2001) Random Forests. Machine Learning, 45, 5732.

Craig,R. and Beavis,R.C. (2004) TANDEM: matching proteins with tandem mass
spectra. Bioiiy’ormatics, 20, 146(rl467.

Degroeve,S. et al. (2011) A reproducibility—based evaluation procedure for quan—
tifying the differences between MS/MS peak intensity normalization methods.
Proteomzcs, 11, 117271180.

Elias,J.E. et al. (2004) Intensity—based protein identiﬁcation by machine learning
from a library of tandem mass spectra. Nat. Biotechnol, 22, 214+219.

Geer,L.Y. et al. (2004) Open mass spectrometry search algorithm. J. Proteome Res,
3, 9587964.

Helsens,K. et al. (2010) ms_lims, a simple yet powerful open source laboratory
information management system for MS—driven proteomics. Proteomics, 10,
126171264.

Lam,H. et al. (2007) Development and validation of a spectral library searching
method for peptide identiﬁcation from MS/MS. Proteomics, 7, 655%67.

Li,S. et al. (2011) On the accuracy and limits of peptide fragmentation spectrum
prediction. Anal. Chem., 83, 7907796.

Narasimhan,C. et al. (2005) MASPIC: intensity—based tandem mass spectrometry
scoring scheme that improves peptide identiﬁcation at high conﬁdence. Anal.
Chem., 77, 758177593.

Paulovich,A.G. et al. (2010) Interlaboratory study characterizing a yeast perform—
ance standard for benchmarking LC—MS platform performance. Mol. Cell.
Proteomzcs, 9, 2427254.

Perkins,D.N. et al. (1999) Probability—based protein identiﬁcation by searching se—
quence databases using mass spectrometry data. Electrophoresis, 20, 355173567.

Sadygov,R. et al. (2006) Central limit theorem as an approximation for intensity—
based scoring function. Anal. Chem., 78, 89795.

Tabb,D.L. et al. (2007) MyriMatch: highly accurate tandem mass spectral peptide
identiﬁcation by multivariate hypergeometric analysis. J. Proteome Res, 6,
654—661.

Vandermarliere,E. et al. (2013) Getting intimate with trypsin, the leading protease in
proteomics. Mass Spectrom. Rev., [Epub ahead of print, doi: 10.1002/
mas.21376, June 15, 2013].

Vaudel,M. et al. (2011) Peptide identiﬁcation quality control. Proteomics, 11,
210572114.

Zhang,Z. (2004) Prediction of low—energy collision—induced dissociation spectra of
peptides. Anal. Chem., 76, 390873922.

Zhang,Z. (2005) Prediction of low—energy collision—induced dissociation spectra of
peptides with three or more charges. Anal. Chem., 77, 6364£373.

Zhou,C. et al. (2008) A machine learning approach to explore the spectra intensity
pattern of peptides using tandem mass spectrometry data. BM C Bioinformatics,
9, 325.

 

3203

ﬁre'spzumofpmﬂo'sopeuuowrorq/ﬁdnq

