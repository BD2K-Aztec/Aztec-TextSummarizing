Bioinformatics, 32(8), 2016, 1256—1258

doi: 10.1093/bioinformatics/btv730

Advance Access Publication Date: 12 December 2015
Applications Note

 

Systems biology

BioFVM: an efficient, parallelized diffusive
transport solver for 3-D biological simulations

Ahmadreza Ghaffarizadeh, Samuel H. Friedman and Paul Macklin*

Centerfor Applied Molecular Medicine, University of Southern California, Los Angeles, CA 90033, USA

*To whom correspondence should be addressed.
Associate Editor: Alfonso Valencia

Received on 16 October 2015; revised on 3 December 2015; accepted on 4 December 2015

Abstract

Motivation: Computational models of multicellular systems require solving systems of PDEs for re—
lease, uptake, decay and diffusion of multiple substrates in 3D, particularly when incorporating the
impact of drugs, growth substrates and signaling factors on cell receptors and subcellular systems
biology.

Results: We introduce BioFVM, a diffusive transport solver tailored to biological problems. BioFVM
can simulate release and uptake of many substrates by cell and bulk sources, diffusion and decay
in large 3D domains. It has been parallelized with OpenMP, allowing efficient simulations on desk—
top workstations or single supercomputer nodes. The code is stable even for large time steps, with
linear computational cost scalings. Solutions are first—order accurate in time and second—order ac—
curate in space. The code can be run by itself or as part of a larger simulator.

Availability and implementation: BioFVM is written in C++ with parallelization in OpenMP. It is
maintained and available for download at http://BioFVM.MathCancer.org and http://BioFVM.sf.net

 

under the Apache License (v2.0).
Contact: paul.macklin@usc.edu.

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Mathematical modeling of many biological systems requires solving
for secretion, diffusion, uptake and decay of multiple substrates in
three dimensions. Cells change phenotype (division rate, metabol—
ism, secretions, etc.) in response to their microenvironment; the spa—
tial distribution of cells (and their uptake and secretion of
substrates) alters the substrates’ distribution, affecting later cell be—
havior (Lowengrub et (11., 2010). BioFVM solves PDEs driven by
such problems, of the form
diffusion decay bulk source bulk uptake

3?? ’3’? ’5? Th ’1?

E=DV p— in +S(p —p)— Up

sources and uptake by cells

r—’*
+ Z 11(55)l5k(ﬁ2 - F?) - Ukﬁl inQ
cellsk

with zero flux conditions on 69. Here, 9 is the computational do—
main with boundary 69, f) is the vector of substrate densities, [3* are

©The Author 2015. Published by Oxford University Press.

the substrate saturation densities, 13 are the diffusion coefficients, X
are the decay rates, S and [7 are the supply and uptake rates (may
vary throughout the domain), {(32}, Whig)“ [7)“ (3:) : 1 S k S N(t)}
is a collection of cells centered at 55;, with volume Wk, supply and
uptake rates 51 and [7}, and saturation densities (3:. 1;,(3) is defined
by 1;,(55) : 1 inside cell [2 and 1;,(55) : 0 otherwise. All products of
vectors are element—wise.

While most multicellular models [e.g. Morpheus (Starrufﬁ et (11.,
2014), Chaste (Mirams et (11., 2013)] include diffusion solvers, they
generally are not designed to scale well to large 3D domains with
more than a few substrates. Most are not designed for multithreaded
parallelization on multicore desktops. The solvers tend to use expli—
cit time steppings (require strict stability restrictions on At) or impli—
cit time steppings (stable but require inverting large matrix systems).
Those that invert large linear systems often have large dependencies
that complicate cross—platform use.

BioFVM implements simple methods that can readily be parallel—
ized by OpenMP. It can efficiently and accurately simulate systems

1256

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

112 /310'S[BHJDO[pJOJXO'SOTJBLUJOJIITOTq/ﬂduq 11101} popcolumoq

91oz ‘Og anBnV 110 ::

BioFVM: an efficient diffusion solver for 3—D biology

1257

 

of 5—10 or more diffusing substrates on 1—10 million or more vox—
els, with desktop workstations or single compute nodes. The code is
first—order accurate in time and second—order accurate in space. Its
performance scales linearly in the number of substrates (it takes
2.6 X longer to increase from 1 to 10 substrates), the number of
voxels and the number of cells. The code is stable; it often achieves
good accuracy with At : 0.01 to 0.1 min.

2 Method and implementation

We use a first—order, implicit (and stable) operator splitting, allow—
ing us to create separate, optimized solvers for the diffusion—decay,
cell—based source/sinks and bulk source/sinks (Marchuk, 1990). We
solve the diffusion—decay terms using the finite volume method
(Eymard et (11., 2000), further accelerated by an additional first—
order splitting into separate solutions in the x—, y— and z—directions
via the locally one—dimensional method (LOD) (Marchuk, 1990;
Yanenko, 1971). For each dimension, we solve the resulting tridiag—
onal linear systems with the Thomas algorithm (Thomas, 1949). We
use OpenMP where loops can be parallelized (e.g. many instances of
the Thomas solver when solving x—diffusion across multiple strips of
domain). Other optimizations include storing pre—computations and
overloading vector operations. The C ++ implementation is
described in further detail in the supplementary materials.

3 Examples
3.1 Oxygen and VEGF diffusion in a large tissue

In Figure 1, we simulated 1 hour of diffusive transport in 125 mm3
of vascularized tissue (red curves, panel A) with a large irregular
tumor (green cells, panel A) at 20 um resolution (15 625 000 voxels)
and At : 0.01 min. Oxygen is released by the vessels (a series of
cell—centered sources), diffuses through the tissue and is consumed
by tumor cells. For technical illustration, tumor cells release VEGF
where p02 < 15 mmHg, which diffuses through the domain.
Further biology, parameter values and references are discussed in
the supplementary materials. In panel A, the vasculature is rendered
up to the gray clipping plane for clearer illustration. Panel B shows
the tumor cells and vessels in the gray clipping plane. Panels C—D
shows the concentration of oxygen and VEGF in this plane. The red
contour marks the tumor boundary. This simulation—with 2.8 mil—
lion cell source/sink terms—required ~ 80 minutes on a quad—core
desktop computer (Intel i7 4790, 3.60GHz, 16GB of memory);
similar problems on 1 million voxels require 5—10 min.

3.2 Convergence testing

Tests for several 1D and 3D problems showed first—order accuracy in
time, second—order accuracy in space and stability even for large time
steps. Using At : 0.01 min gave reasonable accuracy for most prob—
lems. The convergence tests are fully detailed in the supplementary
materials.

3.3 Performance testing

We tested diffusion of N : 1 to 128 substrates with D N 105um2/
min (typical magnitude for cancer biology) in a 1 mm3 domain at 10
um resolution (1 million voxels) with At : 0.01 min.
Computational cost (wall time for 4min of diffusion) scaled linearly
with N; increasing from 1 to 10 substrates increased computational
cost by ~ 2.6><. In other tests, computational cost scaled linearly
with the number of voxels (domain size) and the number of cells.
Full results are in the supplementary materials.

   

   

. ‘ \ L‘
r... 1 ' ~ I \ \r 1
oxygen {mmﬂm VEGF {climatic-Ito“:

a ﬁ

Fig. 1. Simulation of oxygen and VEGF diffusion in a highly vascularized tis-
sue with a multifocal tumor lesion; vasculature is rendered up to the gray clip-
ping plane (A). Vessels and tumor cells in the gray clipping plane (B). Oxygen
distribution in (C) shows significant hypoxia (blue areas, p02<15mmHg)
within the tumor (red outline). Hypoxic tumor cells release VEGF to stimulate
further vascularization (D) (Color version of this figure is available at
Bioin formatics on line.)

4 Obtaining software and licensing

BioFVM is available from BioFVM.MathCancer.0rg and BioFVM.
sf.net under the Apache License (v2.0). A tutorial on using the code
is included with the BioFVM download, along with several
examples.

5 Discussion

BioFVM can efficiently and accurately simulate several diffusing
substrates in large 3D domains, with both bulk and cell—based
source and uptake terms. While it can run on its own (with minimal
software dependencies), it is well—suited for inclusion in larger mod—
eling packages. Beyond simulating the transport of drugs and
growth substrates, BioFVM’s ability to simulate dozens of com—
pounds should make 3D simulations of multicellular secretomics
and multiscale cell responses feasible. In future releases, we plan to
add upwinded advective solvers, more adaptive time stepping for
cell—based source/sink terms and support for general Voronoi
meshes.

Acknowledgements

We thank David B. Agus and the USC Center for Applied Molecular
Medicine for generous institutional support.

Funding

Breast Cancer Research Foundation and the National Institutes of Health
(5U54CA143907,1R01CA180149).

Conﬂict of Interest: none declared.

112 /310'S[Buln0prOJXO'SOIJBLUJOJIIIOIq/ﬂduq 11101} popcolumoq

91oz ‘Og anﬁnv 110 ::

1258

A. Ghaffarizadeh et al.

 

References

Eymard,R. et al. (2000). Finite volume methods. In Solution of Equation in IR“
(Part 3), Techniques of Scientiﬁc Computing (Part 3). Handbook of
Numerical Analysis, vol. 7. Elsevier, pp. 713—1018.

Lowengrub,J. et al. (2010) Nonlinear modeling of cancer: Bridging the gap be—
tween cells and tumors. Nonlinearity, 23, R1—R91.

Marchuk,G. (1990). Splitting and alternating direction methods. volume 1 of
Handbook of Numerical Analysis, Elsevier, pp. 197—462.

Mirams,G.R. et al. (2013) Chaste: An open source c ++ library for computa-
tional physiology and biology. PLoS Comput. Biol., 9, e1002970.

StarruBJ. et al. (2014) Morpheus: a user-friendly modeling environment for
multiscale and multicellular systems biology. Bioinformatics, 30, 1331—1332.

Thomas,L.H. (1949). Elliptic problems in linear difference equations over a net-
work. In: Watson Sci. Comput. Lab Report. Columbia University, New York.

Yanenko,N. (1971). Simple schemes in fractional steps for the integration of
parabolic equations. In: Holt,M. (ed.) The Method of Fractional Steps.
Springer, Berlin Heidelberg, pp. 17—41.

112 /310'S[Buln0prOJXO'SOIJBLUJOJIIIOIq/ﬂduq 11101} popcolumoq

91oz ‘Og isnﬁnv 110 ::

