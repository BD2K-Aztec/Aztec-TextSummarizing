Vol. 28 no. 7 2012, pages 1054-1056
APP N doi:10.1093/bioinformatics/btsO46

 

Databases and ontologies

Advance Access publication January 28, 2012

Chado Controller: advanced annotation management with

a community annotation system

Valentin Guignonlazaii, Ga tan Drool, Michael Alaux3, Franc—Christophe Baurensl,
Olivier Garsmeurl, Claire Poiroan, Tim Carver4, Mathieu Rouardi2 and St phanie Boos”

1ClFlAD, UMR AGAP, F—34398 Montpellier, 2Bioversity International, CfL programme, F—34397 Montpellier, 3Unit de
Recherche en G nomique—lnfo, UR 1164, INRA Centre de Versailles—Grignon, Versailles, France and 4Wellcome Trust
Sanger Institute, Wellcome Trust Genome Campus, Hinxton, Cambridge CB10 1SA, UK

Associate Editor: Janet Kelso

 

ABSTRACT
Summary: We developed a controller that is compliant with the
Chado database schema, GBrowse and genome annotation-editing
tools such as Artemis and Apollo. It enables the management of
public and private data, monitors manual annotation (with controlled
vocabularies, structural and functional annotation controls) and
stores versions of annotation for all modified features. The Chado
controller uses PostgreSQL and Perl.
Availability: The Chado Controller package is available for download
at http://www.gnpannot.org/content/chado-controller and runs on
any Unix-like operating system, and documentation is available at
http://www.gnpannot.org/content/chado-controller-doc

The system can be tested using the GNPAnnot Sandbox at http://
www.gnpannot.org/content/gnpannot-sandbox-form
Contact: valentin.guignon@cirad.fr; stephanie.sidibe-bocs@cirad.fr
Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on September 19, 2011; revised on January 13, 2012;
accepted on January 23, 2012

1 INTRODUCTION

With the growth of large community annotation projects due to
the rapid progress of the next-generation sequencing technologies,
efﬁcient and optimized genomic data management is critical.
Community Annotation Systems (CASs) are suitable for curators
to annotate from all over the world via the Web. Some genomic
information systems (Flicek, et al., 2011; Fujita, et (11., 2011;
St Pierre and McQuilton, 2009) have been provided to the
community but only a few of them allow manual interactive,
dynamic and user-friendly curation (Legeai, et al., 2010; Vallenet,
et al., 2006). Generic Model Organism Database (GMOD,
http://gmod.org) is a collaborative project to develop a set of
interoperable open-source software for visualizing, annotating
and managing biological data. In this project are developed
popular software such as Chado (Mungall and Emmert, 2007) a
modular database schema that underlies many GMOD tools such
as the Generic Genome Browser, GBrowse, (Stein, et al., 2002).

 

*To whom correspondence should be addressed.
IPresent address: UM2, LIGM, CNRS. UPR IGH 1142, IMGT®, F-34396
Montpellier, France.

In conjunction with genome annotation-editing tools such as
Apollo (Lewis, et al., 2002) and Artemis (Carver, et al., 2008),
these interfaces are foundations for a generic and robust CAS.
However, additional components are required to consolidate these
components. For instance, software to deal with conﬁdential and
unpublished data which is an important requirement for a system
to be more widely adopted by biologists that prefer to deal with
ﬂat ﬁles on a local ﬁle system. Also required is a monitoring
system to keep track of the annotation process and highlight
annotation inconsistencies. Currently, when a modiﬁcation is made,
pre-existing manual annotations are overwritten and only basic data
quality controls are made. To address these issues, we decided
to extend the Chado schema. Our approach was driven by the
GMOD philosophy and we propose a generic, modular, seamless,
easy-to-install and highly conﬁgurable controller called the Chado
Controller (CC).

2 IMPLEMENTATION

Chado is a modular schema driven by ontologies and controlled
vocabularies and partitioned into modules for different biological
domains linked to appropriate ontologies. The modules targeted
by the CC are those related to genomic sequences: core modules
(general usage, ontologies and controlled vocabularies) and the
sequence feature module. The CC is based on a Model—View—
Controller (MVC) architecture. In this publication, the ‘model’ is
Chado, ‘views’ are GBrowse and Artemis and the ‘controller’ is the
CC. The CC is embedded in the Chado 1.1 database as PostgreSQL
views, procedures and triggers in order to intercept and process any
query made on the genomic features. Chado 1.2 has been tested and
no schema conﬂicts have been detected. Several Perl scripts and
modules were developed to install and administer the CC. Some
patches have been written for GBrowse 1.70 and 2.40 and Artemis
13.2.8 to apply the new features brought by the CC. For Apollo
1.11.4, a new data adapter has been added. The architecture of the
CC modules is described in Supplementary Figures S1—S4 and in
technical documentation.

2.1 User access restriction module

The access restriction module required the following: (i) new
tables in the generic database schema; (ii) a new PostgreSQL View

 

© The Author(s) 2012. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/3.0), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /3.Io's[Bumo[p.IOJXO'sorwurJOJurorq”:duq mot} papeolumoq

91oz ‘Og anﬁnv uo ::

Chado Controller

 

Ia) Restricted access to GBrowse
GNPAnnot Sandbox L“mun-mm '

‘_____._._-—-—-—'—l. I
LII-rm
mun-m .._‘°."_"

 

1 .1

Showing 10 Map from MaCOBEKZCI. positions 131.001 “5149.000
nun-u

 

my 1351 133. i» 135- ;» 13‘.‘ 3%: 135. m 1.1» no 145: mi uh ms. uh no no
um

mes-e .qviarn Ego-max; name-.mp- mow-Jo

(e) Annotation versioning

mu. tau J‘s-omen
min- nuumm mu

   
 
   
   

 

Gum unsung”:

FNMA “OHS. mm

Emu: JWIIMZSJJIIFE. “232L133”. IllIITJMI'II. ‘IU‘SIJMB. lamen. ‘JMJHHI. iguana-3:.
mn'unr_4'

mm:'lncnaun_nnm 2mm umm— Elm- minutes-nun”.-
.armlrl wmm-Tmynq minin- cum

nnIeﬂIllE'lel'h‘lllem no! 32'

Pmm=Eﬂwhnn mnpmr

rumors Cwmu-‘I-wwm‘
smualciamnlelenau-W'
SmmlcnmpllllnosFW

Eum Gonn='||:_2a'

Gem-‘ETRI‘

EC mar-‘2 7 I) T

FM|D='IXII'2I!2'

  

M: 18.81 EWI’N"
.MJ

 

         
  
     
    

m Murm‘a‘ 90??"
. u 2w I I I I n Haclﬂé‘a.‘ ‘50325 I
L“— JW um DOWN new!
MLunlJ-Mh alumna“. Hm.
"—m—‘WL Fm Mn amm

access to can: I' nmaw- tit-37mm"
. M. I‘Hwﬂ-Illu- 18.3'! mm"
 m I S Emu l‘ IHDI‘MIIIITI. Im1m.lmn_mm.lmn..im Ime 1m1ml. IML‘M
“.— m

2 .—b

 

m
and!
in: our»: mg :m

noose}: n-mein Home“ 21: r: os=ncmoom mum w

 

 

(9) Manual annotation with cvterms

 

 

(d) Annotation inspector

.ml o: mammal vnmulou

l tit

        

Lem an n mlllsln u

1...: Iwamtn mum. mu r 3:
: a 5100 coda" nu men (or: a: um munce mruwrw n munch Iw- :me sequence momma.-

 

- n non-nos: .1 “mm: mm Elm =muu "nu-m ”{.:l.‘ﬂ: bun-mm m...

 

' {itilittlkl‘

i
i

 

mm .1 m m

Fig. 1. GNPAnnot Community Annotation System round trip at ATGC South Green Bioinformatics Platform. (3) Illustration of GBrowse that uses the access
restriction module of the CC from the GNPAnnot Sandbox. (b) Artemis connection using the CC access restriction module. (c) Feature editing, both the
structure and the function using cv terms. ((1) Clicking on the commit button calls the CC annotation inspector module. (e) Feature annotation history using

the CC annotation versioning module.

that restricts access; (iii) a login and password area for GBrowse
(Supplementary Fig. 51 and Fig. 1a); and (iv) an administrator web

interface developed to manage users or group permissions. A View
of the feature table with rules (for insert/update/delete) ensures
access-restrictions. For user-management, a table for users/groups
and a table to associate the access-level of features with users and
groups were created.

2.2 Annotation inspector module

A module to check manual annotation, called the inspector, was
integrated in the implementation of Chado, with database triggers
that calls SQL ﬁinctions for monitored events. This module
automatically adds some basic properties to any given genomic
feature (e.g. ‘/owner’, ‘/color’). Additional procedures to check the
integrity of the structure of curated genes are run by the genome
editor (e.g. start/stop codon, coding sequence length, splicing sites).
For instance, Artemis has been modiﬁed to call the initialization
procedure once connecting to Chado. Then, when a change is
validated using the commit button, a procedure returns the inspection
report in a java dialog box (Fig. 1d). Depending on the user choice,
Artemis can then either commit the change or rollback to the original

state. The list of data quality controls is available in Supplementary
Tables S 1—S4.

2.3 Annotation versioning module

The annotation versioning module keeps track of any change in
database content. This ﬁinctionality is based on a slightly modiﬁed
version of the ‘audit module’ provided in Chado. The name of
the annotator responsible for the modiﬁcation is now recorded in
the database. By default, all the tables available in the database
at the time of installation are audited. Any annotation changes
made by Artemis or even data loaded in database are recorded. The
‘GBrowse_history’ web page can be used to View the history of
changes on a given feature (Fig. 1e). It displays the modiﬁcations
made by each annotator in chronological order.

2.4 Chado controller package

The CC comes with several utilities, including an installer,
a compatibility management script (see ‘readme’ ﬁle and
documentation) and a controlled vocabulary management script.
The installer can be used to install, update or uninstall the CC. By
default, the installation process will modify the database, update the

 

1 055

112 /8.IO'S[BHmOprOJXO'SOIJBLUJOJIIIOIq”Idllq mot} popaommoq

9IOZ ‘OE ISUEHV Ho ::

V.Guignon et al.

 

GBrowse conﬁguration ﬁle, add new modules and scripts and patch
what is needed. In addition, the CC has various options to be ﬁnely
tuned and change its ﬁinctioning.

3 DISCUSSION
3.1 Architecture

Due to some limitations of the association of Chado, GBrowse,
Apollo and Artemis, annotation communities have been compelled
to set up multiple Chado databases. The CC can greatly simplify
the informatics architecture. As it manages private data and enables
annotation versioning, the number of Chado databases to be
maintained per project, genome or institute can be reduced. Thus, it
can contribute to a more effective management of the bioinformatics
architecture.

3.2 Data loading and performance

Benchmarking was carried out (using custom benchmark ﬁles
available for download and summarized in Supplementary Table
S5) and the CC causes only a slight delay on starting a new
database connection. Read access was found to be almost as fast as
it is without the controller. Write operations can be slow, although
acceptable (up to three times longer). The quality control carried out
by the inspector can take time and depends mainly on the number
of features to be checked. In our test database, it took ~1s per
gene. People who cannot afford the inspection delay can disable or
uninstall the inspector. However, we found that losing a few seconds
using the inspector is signiﬁcantly less constraining than having an
administrator’s annotation validation step.

3.3 High quality annotations support

This system has been effective to manage annotation of BAC
sequences of plant genomes (e.g. 51 Musaceae and 11 Poaceae). It
enhanced the curation of 637 out of 1319 genes (48%; see Statistics
at http://www.gnpannot.org/content/south-monocots-statistics).

This high-quality annotation contributed to answering a number of
biological questions (Bocs, et al., 2010; Garsmeur, et al., 2011).

ACKNOWLEDGEMENTS

We would like to acknowledge and thank the GMOD and GNPAnnot
communities in particular to Fabrice Legeai, Joelle Amselem and
Baptiste Brault.

Funding: French National Research Agency (ANR Genoplante)
(grant ANR-07-GPLA-004).

Conﬂict of Interest: none declared.

REFERENCES

Bocs,S. et al. (2010) Mechanisms of haplotype divergence at the RGA08 nucleotide-
binding leucine-rich repeat gene locus in wild banana (Musa balbisiana). BM C Plant
Biol., 10, 149.

Carver,T. et al. (2008) Artemis and ACT: viewing, annotating and comparing sequences
stored in a relational database. Bioinformdtics, 24, 267272676.

F1icek,P. et al. (2011) Ensembl 2011. Nucleic Acids Res., 39, D8004D806.

Fujita,P.A. et al. (2011) The UCSC Genome Browser database: update 2011. Nucleic
Acids Res, 39, D87&D882.

Garsmeur,O. et al. (2011) High homologous gene conservation despite extreme
autopolyploid redundancy in sugarcane. New Phytol., 189, 6297642.

Legeai,F. et al. (2010) AphidBase: a centralized bioinforrnatic resource for annotation
of the pea aphid genome. Insect Mol. Biol., 19 (Suppl. 2), 5712.

Lewis,S.E. et al. (2002) Apollo: a sequence annotation editor. Genome Biol., 3,
RESEARCH0082.

Munga11,C.J. and Emmert,D.B. (2007) AChado case study: an ontology-based modular
schema for representing genome-associated biological information. Bioinformdtics,
23, i3374i346.

St Pierre,S. and McQuilton,P. (2009) Inside FlyBase: biocuration as a career. Fly
(Austin), 3, 1127114.

Stein,L.D. et al. (2002) The generic genome browser: a building block for a model
organism system database. Genome Res., 12, 159971610.

Vallenet,D. et al. (2006) MaGe: a microbial genome annotation system supported by
synteny results. Nucleic Acids Res, 34, 53765.

 

1 056

112 /3.Io's[Bumo[p.IOJXO'soneuiJOJurorq”:duq uroii papeolumoq

91oz ‘Og isnﬁnv uo ::

