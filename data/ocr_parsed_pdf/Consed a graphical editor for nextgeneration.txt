BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Consed: a graphical editor

 

~20 KB region of coverage depth ~25><), examine the read data in
greater detail and, if desired, edit the reference sequence or the assembly
in these regions. (As consed’s graphical editor is restricted to datasets of a
few million reads, this method can currently ﬂx misassemblies of regions
at most this size.) Edits to various locations in the reference may be made
in one or several editing sessions, and consed can create a new version of
the reference that reﬂects all edits. This can then be used with a read
alignment program to create a new BAM alignment ﬂle.

Tracks [as in the UCSC Genome Browser (Kent et al., 2002)] can be
shown in the Aligned Reads Window (Supplementary Fig. S3) either as a
graph, as genes with indications of untranslated regions, introns and
the translated amino acid sequence or as bars with grayscale indicating
quantitative data (e.g. conservation scores).

A tag is a label attached to a region of a read or reference sequence
(Gordon et al., 1998). We have expanded the tag feature to allow com-
ments, user-deﬁned tag types and user-speciﬁed tag ﬁelds that may contain
numbers, text or references to other tags. Consed has ﬂexible tag-search
capabilities and generates interactive lists of the tags that are found.

Consed detects putative SNPs and indel polymorphisms and calculates
genotype qualities using the method of Li et a]. (2008), producing an
interactive list that allows putative variants to be viewed along with
their supporting read data. A VCF format (Danecek et al., 2011)
report can also be generated in batch.

The consed graphical editor provides several capabilities (alternative to
those in bamScape) for misassembly detection and correction. The
Assembly View Window (Supplementary Fig. S4) (Nielsen et al., 2010)
gives a close-up view of potentially misassembled regions showing the
order and orientation of contigs in scaffolds, read depth, clusters of in-
consistent mate pairs and sequence similarity. The Highly Discrepant
Positions Window (Supplementary Fig. S5) shows an interactive list of
locations where multiple reads disagree with the consensus or reference
sequence. An interactive list of high- (or low-) depth coverage regions can
be generated.

The user can select a read to be placed near the top of the Aligned Reads
Window (Supplementary Fig. S3) and determine, by visually comparing it
to other reads at informative sites, which reads belong with it and which do
not; the latter can then be moved to another location. Reads can be
removed from the contig by right-clicking on read names, by clicking on
inconsistent mate pairs in Assembly View, by highlighting read names (see
later in the text) and requesting that highlighted reads be removed or by
supplying a list of reads to a batch program. A group of reads can be
removed together into a single contig that preserves alignments, removed
individually into separate contigs for each read, or deleted entirely from the
assembly. Optionally, mates of reads can also be removed. The removed
reads can either be added to a different location using the join feature
(Gordon et al., 2001) or reassembled by clicking ‘miniassembly’.

Contig joins can be made in any of three ways: manually, using
sequence similarity as shown in Assembly View or as found with the
search-for-string feature, by clicking to display the alignment in the
Compare Contigs Window (Supplementary Fig. S6, bottom) and then
clicking ‘join’; in semiautomated fashion using an interactive list of
potential joins (Supplementary Fig. S6, top) generated in batch by con-
sed’s autoreport program; or in fully automated batch mode accepting all
joins recommended by autoreport.

False joins can be corrected using the tear function (Gordon et al.,
2001), which now allows the user to sort the reads into two new contigs
while looking at base discrepancies.

Consed can pick PCR or walking primers for closing gaps between
contigs (either under manual control or in batch mode). Once new
reads have been generated, a button click or a script running in batch
adds them to the assembly by running cross_match to ﬁnd the best
gapped alignment of each read against the existing consensus sequence,
incorporating the read at the aligned location. Optionally, reads can be
targeted to an approximate location. An interactive list of newly added

reads is displayed. A batch feature corrects and extends the contig se-
quences where appropriate.

Consensus bases and base qualities (Ewing and Green, 1998) can
optionally be recalculated following changes to the assembly. The inter-
active list ‘questionable consensus bases’ indicates potential errors in the
consensus sequence (identiﬁed using a choice of three different algorithms
involving read frequency, quality and strand) for user review and editing.
The consensus can be trimmed.

Reads can be grouped by highlighting their names and then operated
on as a group. Highlighting can be done in various ways (e.g. by clicking
on read names or by specifying a sequence at a particular location). All
reads at a particular reference position can be edited at once to have the
same base. All read bases to the left (or right) of a particular position can
be changed to X’s (indicating vector).

Additional new features are described in Supplemental information.

ACKNOWLEDGEMENTS

The work described here reﬂects suggestions, ideas and requests
from many users including Amr Abouelleil, Don Bovee, Yaron
Butterﬂeld, Bob Fulton, Eugene Goltsman, Don Hutchison,
Sven Klages, Jim Knight, Rachel Maupin, Mike McLellan,
Margaret Priest, Jeremy Schmutz, Lori Spiegel, Cindy Strong,
Jeremy Wheeler and Shiaw—Pyng Yang. We particularly thank
Pat Minx and Aye Wollam for extensive help over many years.

Funding: National Institutes of Health grant R01HG005710.

Conﬂict of interest: Consed is licensed for a fee to commercial
users by the authors’ employer (University of Washington).

REFERENCES

Bonfield,J.K. and Whitwham,A. (2010) Gap54editing the billion fragment se—
quence assembly. Bioinfommiicx, 26, 169971703.

Danecek,P. et a]. (2011) The variant call format and VCFtools. Bioinformuiicx, 27,
215G2158.

Dear,S. and Staden,R. (1991) A sequence assembly and editing program for efficient
management of large projects. Nucleic Acids Re.\'., 19, 390773911.

Ewing,B. and Green,P. (1998) Base—calling of automated sequencer traces using
phred. 11. Error probabilities. Genome Re.\'., 8, 1867194.

Gordon,D. (2003) Viewing and editing assembled sequences using Consed. Curr.
Protoc. Bioinformciiicx, Chapter 11, Unit 11.12.

Gordon,D. et a]. (1998) Consed: a graphical tool for sequence ﬁnishing. Genome
Rein, 8, 1957202.

Gordon,D. et a]. (2001) Automated finishing with autofinish. Genome Re.\'., 11,
614—625.

Kent,W.J. et a]. (2002) The human genome browser at UCSC. Genome Rec, 12,
99(r1006.

Li,H. and Durbin,R. (2009) Fast and accurate short read alignment with Burrows—
Wheeler transform. Bioinformuiicx, 25, 17544760.

Li,H. et a]. (2009) The sequence alignment/map format and SAMtools.
Bioinformciiicx, 25, 207872079.

Li,H. et a]. (2008) Mapping short DNA sequencing reads and calling variants using
mapping quality scores. Genome Re.\'., 18, 185171858.

Mardis,E.R. (2008) Next—generation DNA sequencing methods. Annu. Rev.
Genomics Hum. Genet, 9, 3877402.

Nielsen,C.B. et a]. (2010) Visualizing genomes: techniques and challenges. Nut.
Methods, 7, 557515.

Schatz,M.C. et a]. (2007) Hawkeye: an interactive visual analytics tool for genome
assemblies. Genome Biol., 8, R34.

Swain,M.T. et a]. (2012) A post—assembly genome—improvement toolkit (PAGIT) to
obtain annotated genomes from contigs. Nut. Protoc., 7, 126(kl284.

Thorvaldsdottir,H. et a]. (2013) Integrative Genomics Viewer (IGV): high—perform—
ance genomics data visualization and exploration. Brief. Bioinform, 14, 1787192.

Zerbino,D.R. and Birney,E. (2008) Velvet: algorithms for tie novo short read assem—
bly using de Bruijn graphs. Genome Rec, 18, 8217829.

 

2937

ﬁm'spzumol‘pmﬂo'sopeuuopuotq/ﬁdnq

