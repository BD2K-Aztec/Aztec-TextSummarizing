ORIGINAL PAPER

Vol. 29 no. 8 2013, pages 1052-1059
doi:10. 1 093/bioinformatics/btt097

 

Systems biology

Advance Access publication February 22, 2018

An improved constraint filtering technique for inferring hidden
states and parameters of a biological model

Syed Murtuza Baker1 '*, C. Hart Poskar‘, Falk Schreiber2'3 and Bjdrn H. Junker‘

Systems Biology Group, Leibniz Institute of Plant Genetics and Crop Plant Research (IPK), 06466 Gatersleben,
Germany, 2Institute of Computer Science, Martin Luther University, 06120 HaIIe-Wittenberg, Germany and 3Plant
Bioinformatics Group, Leibniz Institute of Plant Genetics and Crop Plant Research (IPK), 06466 Gatersleben, Germany

Associate Editor: Martin Bishop

 

ABSTRACT

Motivation: In systems biology, kinetic models represent the
biological system using a set of ordinary differential equations
(ODEs). The correct values of the parameters within these ODEs are
critical for a reliable study of the dynamic behaviour of such systems.
Typically, it is only possible to experimentally measure a fraction of
these parameter values. The rest must be indirectly determined from
measurements of other quantities. In this article, we propose a novel
statistical inference technique to computationally estimate these
unknown parameter values. By characterizing the ODEs with
non-linear state-space equations, this inference technique models
the unknown parameters as hidden states, which can then be esti-
mated from noisy measurement data.

Results: Here we extended the square-root unscented Kalman filter
SR-UKF proposed by Merwe and Wan to include constraints with the
state estimation process. We developed the constrained square-root
unscented Kalman filter (CSUKF) to estimate parameters of non-linear
state-space models. This probabilistic inference technique was suc-
cessfully used to estimate parameters of a glycolysis model in yeast
and a gene regulatory network. We showed that our method is
numerically stable and can reliably estimate parameters within a bio-
logically meaningful parameter space from noisy observations. When
compared with the two common non-linear extensions of Kalman filter
in addition to four widely used global optimization algorithms, CSUKF
is shown to be both accurate and computationally efficient. With
CSUKF, statistical analysis is straightforward, as it directly provides
the uncertainty on the estimation result.

Availability and implementation: Matlab code available upon request
from the author.

Contact: baker@ipk-gatersleben.de

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on December 5, 2012; revised on February 7, 2013;
accepted on February 18, 2013

1 INTRODUCTION

Living organisms develop a highly interconnected web of
dynamic mechanisms between different levels of molecular com-
ponents, which are organized into diverse biochemical reaction
networks. A better understanding of the general principles of
these biological processes requires a system-level study of the

 

*To whom correspondence should be addressed.

underlying mechanisms (Sun et al., 2008). The integration of
computational and mathematical methods with experimental
efforts is necessary to gain such systems level understanding. In
systems biology, the speciﬁc type of modelling that studies the
detailed quantitative analysis of the dynamics of cellular pro-
cesses is mechanistic or kinetic modelling (Stelling, 2004). Such
models are often characterized by sets of ordinary differential
equations (ODEs) (Sitz et al., 2002) that describe the underlying
interactive mechanisms of the system in a quantitative manner
(Liu and Niranjan, 2012). They account for the change of con-
centration of certain chemical species such as the metabolites,
messenger RNA (mRNA) or proteins over time. These changes
are speciﬁed through the rate laws, which are determined from
in vitro biochemical experiments. The rate laws may have mul-
tiple parameters that need to be determined correctly to faithfully
mimic observations (Lillacci and Khammash, 2010; Liu and
Niranjan, 2012). While it might be possible to experimentally
measure some of these parameters, for most of them, conducting
biological experiments to determine their values are difﬁcult,
expensive, time-consuming or not currently possible (Lillacci
and Khammash, 2010). As a result, different computational tech-
niques have been developed for the indirect determination of
these unknown parameter values from some other measured
quantities (Moles et al., 2003).

In general, the parameter estimation problem is formulated as
a non-linear optimization problem that aims at minimizing the
difference between simulated and measured values from experi-
mental time-course data (Arisi et al., 2006). Starting with an
initial guess, these methods exhaustively search the parameter
space to ﬁnd the set of values that produce the best fit between
the simulated and the measured data. Extensive research exists
on the application of different optimization techniques, such as
non-linear least square ﬁtting and methods following steepest
descent gradient techniques (Mendes and Kell, 1998), methods
suitable for global optimization including simulated annealing
(SA; Kirkpatrick et al., 1983) and evolutionary computation
(Moles et al., 2003). But due to the non-linear nature of the
dynamics, the optimization problems of biochemical networks
are most often multimodal (Moles et al., 2003). Exploring such
parameter space is computationally expensive for these optimiza-
tion techniques. Moreover, they often get stuck in local minima
(Moles et al., 2003). Their performance also suffers in the pres-
ence of large measurement errors (Lillacci and Khammash,
2010). This is compounded as few optimization techniques are

 

1052 © The Author 2013. Published by Oxford University Press. All rights reserved. For Permissions, please e—mail: journals.permissions@oup.com

112 /310's112u1n0fp10}x0"sotwuiJOJutotq/ﬁduq 11101} popcolumoq

91oz ‘Og anﬁnv uo ::

CSUKF

 

able to take into consideration the system noise (Wilkinson,
2007).

An alternative to traditional optimization methods is to use
the Bayesian inference method. This method takes both the
system and measurement noise into consideration when extract-
ing information from noisy or uncertain data (Wilkinson, 2007).
The major advantage is its ability to infer the full probability
distribution of the states and the parameters instead of making a
simple point estimate. This method tries to estimate the posterior
distribution of the parameter 6 conditioned on the observed data
y, p(6| y). However, the calculation of this posterior density in-
volves high-dimensional integration for which analytical expres-
sions are generally not available (Barnes et al., 2011). Their
numerical solution might also be computationally challenging
as the problem is translated to a combinatorial summation prob-
lem (Lillacci and Khammash, 2010). The Markov chain Monte
Carlo (MCMC) (Brooks, 1998) method, which works with batch
data, has the capability to represent the posterior distribution
numerically (Barnes et al., 2011). Recently, MCMC techniques
have been widely used in biological systems for predicting differ-
ent targets (Barenco et al., 2006; Jayawardhana et al., 2008;
Vyshemirsky and Girolami, 2008). Sequential approaches such
as the sequential Monte Carlo (SMC), also known as particle
ﬁlters (Doucet et al., 2001; Lang et al., 2007), and Kalman fil-
tering type approaches (Kalman, 1960; Julier and Uhlmann,
1997) were primarily developed for data produced in a sequential
fashion. These methods yield better approximations compared
with the batch processing algorithms when applied to the whole
data (Liu and Niranjan, 2012). There has been extensive research
in recent years to apply the sequential approximation methods to
estimate states and parameters in biological systems. The work of
Liu and Niranjan (2012); Mahsuni and Haris (2009); Nakamura
et a]. (2009) demonstrate the applicability of the SMC in the state
estimation of biological models. Although SMC or particle filters
are more sophisticated than the Kalman ﬁltering methods, they
involve calculation of several hyper parameters and have to solve
numerous sets of ODEs, which leads to a high computational
cost (Quach et al., 2007). Nakamura et a]. (2009) reported that
parameter estimation using particle ﬁltering for a regular-size
biological model requires the cost of petascale computing. Such
large-scale computing can only be performed with high-end clus-
ters and supercomputers. In that respect, Kalman filtering meth-
ods are much more suitable for biological systems, as they are
less resource intensive in terms of computational cost. To date,
efforts have been made to apply Kalman filteringibased methods
to estimate parameters of biological systems (Lillacci and
Khammash, 2010; Lillaci and Valigi, 2007; Sisson et al., 2007;
Sun et al., 2008; Quach et al., 2007; Zeng et al., 2011 to name
a few).

In this article, we propose a new form of the unscented
Kalman ﬁlter for the estimation of unknown parameter values
of biological systems within a constrained boundary. Unlike
other non-linear extensions to the Kalman ﬁlter (KF), this algo-
rithm remains numerically stable. We illustrate the efﬁciency of
this method by estimating the unknown parameters and hidden
states of two different systems. The first system is the upper part
of Glycolysis in yeast (Klipp et al., 2005), modified from Hynne
et a]. (2001). With this, we study the parameter estimation of a
medium-size kinetic model. The second model is from the

Dream6 contest on the estimation of model parameter challenge
(Dream6, 2012). The result from the parameter estimation of
these models clearly demonstrates the applicability of our
newly proposed algorithm to much larger and real-life biological
models.

2 MODELLING BIOLOGICAL NETWORKS AS
STATE-SPACE MODELS

To apply Kalman ﬁltering for parameter estimation in biological
models, the system must first be formulated as a non-linear state-
space model (Quach et al., 2007). The state-space description
uses a set of first-order differential equations to provide a
convenient and powerful representation of the non-linear dy-
namics of a system. This representation consists of state variables
and observed variables as well as their different components and
interactions. State variables represent the total state of the system
at any given time. Generally some state variables are not directly
observable (hidden states). The observed variables are those that
can be directly measured. The general form of the non-linear
state-space model is

x = F(x, 6, u, t) + w,x(t0) = x0

y=H(x,6,t)+v (I)

The evolution of these state variables, x = [x1, x2, - - - , xn],
over time is defined by the state equation, F, which also depends
on the model parameters 6 = [61, 62, - - - , 6m], starting from x0 at
time to (Quach et al., 2007). For a biological system, this state
vector x might represent the change of concentration of biochem-
ical species like metabolite or mRNA. The state equation may
also be inﬂuenced by external input, u 2 [ul, uz, - - - , up]. The ob-
servation equation, H, relates the state variables to the output
variables, y = [y1, y2, - - - , yk], describing how the state variables
are observed through their measurements. The process noise w is
uncorrelated Gaussian white noise with probability distribution,
p(w)~N(0, Q). This is an extrinsic noise describing the amount
of confidence we have in our model. The measurement noise, v,
explains the reliability of the measurement data and is also
uncorrelated Gaussian white noise with probability distribution,
p(v) ~ N(0, R).

2.1 Parameter estimation in non-linear state space

Parameter estimation of kinetic models represented with state-
space models can be addressed with state observers by extending
the state-space deﬁnition to use an augmented state vector
xaug = [x 6] (Sitz et al., 2002). This augmented state vector is
constructed by considering the parameters, 6 as additional state
variables with a zero rate of change, i.e. constants. In this
manner, the parameters are considered as constant functions of
time instead of as mere constant numbers (Lillacci and
Khammash, 2010). The augmented state-space equations for

parameter estimation are
x = F(x, 6, t) + w, x(t()) = x0 (2)
Q = 0 9  = 60

For notational simplicity, we will use x to denote x‘mg.

 

1053

112 /310'S[BHJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Idllq 11101} popcolumoq

91oz ‘Og anﬁnv uo ::

S.M.Baker et al.

 

2.2 Deriving non-linear state space from ODEs

Dynamics of the biological systems are characterized by a set of
ODEs, where the state evolution is described as

x = F(x, u, t) + w, x(t0) = x0 (3)

There are a number of ways to link this ODE with the non-linear
state-space modelling. One issue to consider is that, although the
system is a continuous time process, it is observed only at discrete
times. Sitz et a]. (2002) solved this problem by numerically inte-
grating the state dynamics between the temporal time points at
which the state is being observed, using the parameter values
estimated at the previous iteration:

f(x(k),u) = x(k) + ft  F(x(t),u)dt (4)

x(k + l) =f(x(k), u) + w(k)

2.3 Parameter estimation with ﬁltering techniques

In this article, we apply the Bayesian framework to infer the
hidden states and parameters of a biological system. We seek
to calculate the joint probability distribution of the parameters
and states, given the measurements, denoted as p(6,x(k)|y(k)).
The algorithm we propose is derived from the sequential estima-
tion procedure based on filtering.

The filtering technique sequentially calculates the posterior
probability of the state, p(x(k)|y(k)), given the measurement
data upto the k-th time step. The complete calculation consists
of a sequential and alternative calculation of the state probability
at time k having the measurement data upto time step k—l,
called the prediction step

t7(x(k)ly(k—1))=/t)(x(k)lx(k—1))t)(x(k — 1)Iy(k — 1))dx(k — 1)
(5)

and the calculation of the state probability when the measure-
ment data is available at the k-th time step is called the correction
step.
170(k)lx(k))t)(x(k)|y(k — 1))
p(x(k)ly(k)) p(y(k)ly(k _ 1)) (6)
At the start, the prediction step p(x(0)|y(0 : — 1)) is deﬁned as the
density of the initial state vector, (x(0)).

The Kalman ﬁlter optimally calculates the posterior mean and
covariance when f and h are linear Markov processes. This algo-
rithm is invalid if f and h are non-linear. Several extensions of
Kalman filter has been developed to work under non-linearity
such as the extended Kalman filtering (EKF) (van der Merwe,
2004) and unscented Kalman filtering (UKF) (J ulier and
Uhlmann, 1996; Merwe and Wan, 2001). Among the different
non-linear extensions, UKF has demonstrated a much higher
accuracy in the state estimation of dynamic systems (J ulier and
Uhlmann, 2004).

The key idea in UKF is the ‘unscented transformation’ where
a set of points called sigma-points are selected deterministically
to capture the probabilistic spread of the state variables. These
sigmaipoints are then propagated through the process function
f. An approximation of the transformed mean x(k|k — 1) and

covariance P(k|k— 1) are then calculated from these sigmai
points. At the correction step, the final state estimation x(k)
uses the classical Kalman ﬁltering approach. The complete
algorithm for UKF is given in Supplement 6.

A major drawback when applying the UKF to biological sys-
tems is that it becomes numerically unstable when the estimation
covariance matrix is not positive deﬁnite (Merwe and Wan,
2001). The square-root implementation of UKF solves the prob-
lem of numerical instability by propagating the square root of
the covariance matrix at each iteration (Merwe and Wan, 2001).

3 CONSTRAINED SQUARE-ROOT UNSCENTED
KALMAN FILTER

Constraints play a major role in biological systems, as they
include previously known information about the parameter
ranges. As biological parameters vary within a biophysically
plausible range, the inclusion of constraints makes the state
estimation possible within a biologically meaningful space. One
method for introducing constraints into the KF is the moving
horizon estimator. However, this approach requires the solution
of a non-recursive quadratic system at each step (Teixeira et al.,
2008). Alternatively, the interval constrained unscented trans-
formation (ICUT) proposed by Teixeira et a]. (2008) introduces
the constraints at each of the sigmaipoints individually. This
constrains the sigmaipoints and the mean value to stay within
the given boundaries. That is, if a sigma point falls outside of the
boundary, it is projected onto the boundary. The latter approach
is a more efﬁcient method for introducing the state inequality
constraints into the state estimation process (Teixeira et al.,
2008).

Applying ICUT directly to UKF would ensure a constrained
state estimation, and the instability of this technique would still
pose a problem during the estimation. The ﬁltering technique
proposed in this article includes state inequality constraints by
modifying the square-root unscented Kalman filter. This new
ﬁltering technique, the constrained square-root unscented
Kalman ﬁlter (CSUKF), is both numerically stable and can esti-
mate parameters within a biologically plausible parameter space.

In CSUKF, we deﬁne the state constraints for an
n-dimensional state vector at iteration k, x(k) 6 IR”, with an
n-dimensional hypercube according to

L(k) S x(k) S U(k) (7)

Where for iteration k, L(k) 6 IR” is the vector of lower bounds
and U(k) 6 IR” is the vector of upper bounds. (Although typically
not the case for biological systems, the boundaries of each
sigma-point may vary with each iteration.) For an unbounded
region, the limits are set to inﬁnity.

3.1 Selection of sigma-points

The direction of the sigma-points are deﬁned through the matrix
S = [+ﬁ — ﬂ], Where P is the current estimate of the co-
variance matrix. This allows the positive and negative square
roots to be handled separately. The step size vector, 4‘, is then
deﬁned as

g- é min(c0lj(®)) (8)

 

1 054

112 /310'S[BHJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} papeolumoq

91oz ‘Og isnﬁnv uo ::

CSUKF

 

«n+2» ifSi,j:0
Q”, g mirt(x/n + A,  1f Si,j>0
min(«/I’l + A,  if Sip/<0

where A = 0301 + K) — rt is a scaling parameter. The other scaling
parameters or and K are described in Supplement 1. When none of
the sigma-points are outside of the boundary, the step size is
«/n+)t, the regular step size for the scaled UT (Julier and
Industries, 2002). However, if any of the sigma-points Violate
the boundary, then the step size is set to the scaled distance to
the nearest boundary. These result in the constrained sig-
ma—point matrix, lying either on or inside the boundary, and
defined by

Abra—1)  Sn (9)

£06 — 1) + 9606(5) ,

The constrained sigma-points may not be symmetric. In this case,
we need to adjust the weights associated with these non-symmetric
sigma-points. The weights, Wm for the mean and W“ for the co-
variance, are calculated such that when sigma-points do not Vio-
late the constraints, the regular weights are selected. However, if
the sigma-points are propagated onto the boundary, the weights
are varied linearly with the step size. Supplement 7 illustrates the
sigma-point selection, and the detailed calculation of the weights is
given with the description of the algorithm.

3.2 Formulation of CSUKF

For the implementation of CSUKF, we applied the same tech-
niques as SR-UKF, namely QR decomposition, Cholesky factor
updating and pivot-based least squares. The Cholesky factor,
V(k), of the compound matrix formed by the positively weighted
sigma-points and the matrix square root of the process noise are
calculated using the QR decomposition. A similar approach is
used to update the Cholesky factor of the measurement update
covariance matrix. The Cholesky factor update is used to down-
date the Cholesky factor for the negatively weighted sigma-
points. Finally, the pivot-based least squares are used to calculate
the Kalman gain K(k) (see Supplement 1 for a detailed descrip-
tion). By adapting the method from the square-root UKF, V(k)
is propagated at each iteration instead of the full covariance
matrix P, eliminating the need to explicitly calculate this
square root at each iteration.

We start the CSUKF by initializing the state
vector x(0) = E[x(0)] and the state covariance matrix
P(0) = E[(x(0) — x(0))(x(0) — x(0))], and then calculating its
square root, V(0), Via Cholesky factorization. As the weights in
the constrained sigma-point calculation are asymmetric, they
may vary in magnitude and sign, i.e. they can be positive or
negative. Thus the calculation of the square-root factor of the
covariance matrix needs to be decomposed into two parts, one
for the positive weights of WC denoted as Vp0s(k) and one for the
negative weights of WC denoted as Vneg(k). This propagated
Cholesky factor is used to calculate the sigma-points, X. At
each iteration, they are calculated as

mark):[Mailer—male» Q] + (10)

jeI

Vnegac) = [ IVVflﬂj-(klk — 1) — £(k))], , (11)
ye]
where, [Jr 2 {jl  3 0} and I’ = {jl WJC<0} are used as a helper
index to identify the positive and negative weights, respectively.
The covariance matrix P can be recovered from V as

P(k) = Vpos(k)(Vp0S(k))T — Vneg(k)(Vneg(k))T

QR decomposition was used to express V1,”, in terms of an or-
thogonal matrix 0 and an upper triangular matrix G

VposUC) = 0(k)(G(k))T (12)
The state covariance matrix then becomes

P(k) = G(k)(0(k))T0(k)(G(k))T — Vneg(k)(Vneg(k))T

13
= G(k)(G(k))T — Vneg(k)(Vneg(k))T ( )
where, (0(k))T(0(k)) = 1. Thus, the state covariance matrix can
be formed from the upper triangular matrix generated during
QR decomposition, i.e. G(k) = qr( me(k)). Supplement 4
explains the recovery of the covariance matrix in detail.

A rank 1 downgrade to Cholesky factorization is performed to
include the effect of Vneg(k) in the calculation of the square root.
This approach is applied to update the square-root factor in both
the time and measurement update steps. The final step for each
iteration is the calculation of the state estimation and the
square-root factor of the estimation covariance. We next discuss
the complete algorithm of CSUKF.

3.3 Initialization

To start the filter, we need to ﬁrst initialize the states and the
error covariance matrix. As we do not have any measurement
data to estimate x(0), we set the initial state estimate to its
expected value.

8(0) = [Elx(0)] (14)

It follows the calculation of the error covariance matrix as
P(0) = [E[(x(0) — x(0))(x(0) — x(0))T]. In CSUKF, we only
propagate the triangular form of the square root of the error
covariance matrix. This square root is calculated at the initial-
ization step using the Cholesky decomposition.

V(O) = chol{P(0)} (15)

We iterate the next steps for the whole time-series data from
k = 1 to k = T.

3.4 Time update (prediction stage)

The time update equations are first applied to obtain the current
a priori state estimate, which we denote as x’(k). This calcula-
tion is based on the process function f, considering all the data
available upto step k—l, y(l : k — 1). To calculate this x’ (k), we
need to first generate 2n + 1 sigma-points. These sigma-points,
X(k|k — 1), are calculated based on the state estimate made at
(k — 1)”' time step, x(k — 1) and the Cholesky factor of the error

 

1 055

112 /310'S[BHJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} papeolumoq

91oz ‘Og isnﬁnv uo ::

S.M.Baker et al.

 

covariance matrix V(k — 1). The sigma-points satisfying
L 5 X(k|k — 1) 5 U are then selected as
X(k|k— 1): {WP 1) 

x(k—l)+§jc0lj(S) , 52,1 (16)

where X is based on the direction, S = [V(k — 1) — V(k — 1)].
4' is the step size, which is calculated as

9- % min(colj(®)) (17)

x/n+A ifSi,j:0

@Ug may—n+1, ifS.-,1>0
. L,- ke‘, kil -

mzn(\/n + )1,  1f SM <0

With the adjustment of the sigma-points, the weights are to be
adjusted as well. These weights vary linearly with the step size of
the sigma-points. They are calculated as

Wf,”=b (18)
W3=b+(1—a2+)3) (19)

W’."=Wj=a;j+b, 1515211 (20)

I

such that Z W = 1, as deﬁned in the general weighting scheme
of UT (Julier and Uhlmann, 1996). Solving for a and b then
yields
n l — 2A
a = ——
(n + A) 2"
j
j=l
_ A
_n+A

 

The detailed calculation of a and b is given in Supplement 5.
These sigma-points are transformed through the non-linear
state function.

Xx(k|k— 1) =f[X(k|k— 1)] (21)

These transformed sigma-points are then used to calculate the a
priori mean and covariance of the estimation.

xT (k) = (V(ka — 1)(W'")T (22)

Gx(k)=qr{[\/Wf(/Yf(klk—1)—1?’(k)) 761.61,) (23)

rink) = [ Ivnlrxj-‘(klk — 1) — £’(k))]jel, (24)

The prior cholesky factor for the time update, VX’ (k), is a down-

date of the positive and negative square roots

VX’ (k) = cholupdate(GX(k), le‘Eg(k), /—/)

3.5 Measurement update (correction stage)

The correction stage updates the a priori state estimate 28’ (k) by
taking the current measurement data, y(k), into consideration.

At this stage, sigma-points are redrawn to incorporate the meas-
urement noise, R

X(k|k — 1) 2 page) 2* (k) :I: ,/(n + A) VX’(k)]

These sigma-points are now propagated through the observation
function h. The same approach is applied to calculate the
cholesky factor for the measurement covariance, W’ (k).

212(ka — 1) = 1425(ka — 1)] (25)

V(k) = XyUCIk — 1)(W'")T (26)

Gyrk)=qr{[ VV;(X,¥(ka—1)—t*(k)) Rig} (27)

Viech) =[ IWfIWﬂklk— 1) —i’(k))] (28)

jelz

Vy’ (k) = cholupdate(Gy (k), VZEgUC), /—/) (29)

3.6 State and covariance estimation

The same general formulation used in the UKF for the final state
and covariance estimation is applied. For that we need to ﬁrst
calculate the cross-correlation covariance matrix,

2n
nyUC) = Z VVlej-‘(klk — 1) — 37(k)][/Yf(klk — 1) — yA’UOIT
j=0

(30)

The Kalman gain, which describes the relative certainty of the
current state estimate and the measurement, is calculated as

K(k) = P)‘y(i€)/(W’(i€))TW’(i€) (31)

For measurement data ymm(k) at iteration k, the ﬁnal posterior
state estimation is

WC) = 99’(k) + K(k)(rmm(k) — 206)) (32)

The square-root factor of the estimation covariance matrix V(k)
is then updated

V(k) = cholupdate{ V"’ (k), K(k) W’ (k), U} (33)

If at the end of the measurement update stage, any state value
violates the constraints, they are projected back onto the con-
straint boundary before the start of the next iteration.

The choice of probability density function in CSUKF ultim-
ately depends on the variance; as the mean of the non-negative
state approaches zero, the distribution either remains Gaussian
or if sufﬁciently large, may be better described by a Weibull
distribution (which is one sided, i.e. 0 for x<0). The Weibull
distribution with parameters A B mean and k > 2 has been shown
to approximate the Gaussian distribution (at k: 2, it is equated
with the Rayleigh distribution and moves towards a Dirac delta
centered at x = A as k approaches inﬁnity). As such, we feel the
trade off of this simpliﬁed approach using the Gaussian pdf is
appropriate both theoretically and, moreover, has held up in the
actual application of the algorithm when applied to parameter
estimation problems.

 

1056

112 /310'S[BHJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} papeolumoq

91oz ‘Og isnﬁnv uo ::

CSUKF

 

Table 1. Comparison of Kalman ﬁlter extensions; EKF, UKF and
CSUKF calculated from 50 repetitions of each algorithm with the par-
ameters initialized to random values between zero and one. The standard
deviation (SD) is shown in the parentheses next to the mean value

 

 

 

Parameter Actual EKF UKF CSUKF
name value

Mean (SD) Mean (SD) Mean (SD)
k2 2.26 3.58 (0.03) 2.26 (0.03) 2.27 (0.08)
Vimm 140.28 92.65 (0.21) 140.31 (0.45) 140.24 (0.68)
me 44.73 36.13 (0.14) 44.71 (0.16) 44.73 (0.28)
k8,, 133.33 120.05 (0.34) 133.33 (0.32) 133.33 (0.38)

 

In the UKF, the sigma-points are symmetric. When calculat-
ing the Taylor series accuracy, these symmetric sigma-points
result in all odd order moments being zero Julier and
Uhlmann (2004). In CSUKF, when sigma-points violate the con-
straints, they are projected back onto the feasible space and may
result in asymmetric sigma-points. To preserve the Gaussian dis-
tribution of the state variables, the weights (Wm and IV) are
adjusted to compensate for the projected sigma-points
(Supplement 4). Thus, the weighted symmetric sigma-points
from this modiﬁed distribution maintain the same order of ac-
curacy for the CSUKF. This preservation of accuracy is
illustrated by the comparison of UKF and CSUKF results, as
contrasted with those of EKF (Table 1).

4 RESULTS AND DISCUSSION

4.1 Glycolysis model from yeast

The impetus of this work is to develop an algorithm that can
estimate unknown parameter values for kinetic models of biolo-
gical systems. To test the algorithm, the kinetic model from the
upper part of glycolysis in yeast (Klipp et al., 2005), modiﬁed
from Hynne et a]. (2001), was chosen. This model, shown in
Figure 1, consists of the ﬁrst four reactions from the upper
part of glycolysis. This model explains the degradation of glucose
in the process of yielding energy. The model has 15 parameters
of which four parameters, k2, max’3, Vmax,4 and kg,., were
selected to be estimated. These parameters were chosen to
cover a large range of values, from 2.26 (k2) to 140.28 (V’fmxﬁ).
The other two parameters are Vmax,4 = 44.73 and k3”. = 133.33.
Parameters can not have negative value so we set the lower
bound for all parameters as L(x) 3 0. As there is no upper
bound for the parameters, this was set to infinity U(x) 5 00.
Synthetic measurement data ymm with uncorrelated white
noise was generated to validate the model.

Results: Figure 2 shows the estimation trajectory of the four
parameters from a single run of the CSUKF. The dashed line
represents the actual parameter value and the solid line repre-
sents the estimation trajectory of the parameters. The CSUKF
estimations quickly approach the actual parameter values,
regardless of their magnitude. Despite the noisy data, the par-
ameter fitting continues to improve over time as does the accur-
acy of the estimate. This is again consistent with the observed
behaviour of the original UKF. The same parameters were then

 

a
mop
:/
Q.
ATP ADP mp ATP ADP
U V V; V.
Glucuse b Glut-S—P a: '.“ Fruc-S—P b ch-1.S—P_ --
v._ . 1.»,
ADD —D .M’P ATP * ADP ATP + AMP :' " MIDI)

Fig. 1. Simpliﬁed glycolysis model adapted from Klipp et a]. (2005). The
ﬂuxes are denoted vi. Each ﬂux is represented with speciﬁc rate laws
depending on their enzymatic reactions. Details of the rate laws can be
found in the Supplement 2

 

150

100'

50 -_

Parameter Value {parameter unit}

 

 

 

 

 

0 2'0 40 6'0 8'0 160 120
Iteration

Fig. 2. Parameter estimation trajectory from CSUKF. The actual values
of the four unknown parameters are shown with dashed lines, and the
recursive estimations are shown with solid lines. The sample time is
At = 0.25 corresponding to 100 data points

estimated with the EKF and UKF, providing an additional set of
comparative values. The summary statistics from 50 runs (with
random initial state values between zero and one) are listed in
Table 1. The CSUKF again performs similarly to the UKF, both
of which yield accurate and precise estimations. In this result, the
UKF had marginally lower standard deviations compared with
the CSUKF, indicating a slightly better estimation accuracy.
However, it suffers from numerical instability when initialized
to higher values as shown in (Supplementary Table S4). To
determine the effect that the choice of initial parameter values
has on each non-linear KF variant, 50 sets of randomly selected
starting values were generated for each parameter in the range of
[0 1] and a second 50 in the range of the actual parameter
values, [0 140] (Supplementary Table S2). Supplementary
Table S1 presents the estimations from running each algorithm
with each set of initial parameter values. One major difference
was that for this model, the UKF became numerically unstable,
when initialized with higher values (Supplementary Table S4),
failing 68% of the time. The CSUKF was found to be independ-
ent of the starting values yielding 100% solutions, with only one
outlier (Supplementary Table S3). Furthermore, without con-
straints, the UKF periodically considered negative parameter
values to be valid. Both UKF and CSUKF provide more accur-
ate estimates than EKF while requiring <3% of the processing
time, which is consistent with previous comparisons (Kandepu
et al., 2007; Merwe and Wan, 2001). Using the MATLAB pro-
ﬁler, the bottleneck in EKF was found to be the calculation of
the Jacobian, required for linearization. EKF was also found to

 

1 057

112 /310'S[BHJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} papeolumoq

91oz ‘Og isnﬁnv uo ::

S.M.Baker et al.

 

be most dependent on the initial values, with the estimation
result showing significant variation in all parameters when start-
ing in the extended range. In the limited starting range of [0 1],
the EKF produced poor but consistent results (Supplementary
Table S5). Analysing these results, CSUKF was found to have
the most consistent and accurate results of these three KF exten-
sions. Additional comparisons were made with four probabilistic
global optimization algorithm, evolutionary programming (EP),
genetic algorithm (GA), simulated annealing (SA) and particle
swarm optimization (PSO). Supplementary Table S1 summarizes
these results. For this comparison, the model was implemented in
Copasi 4.8 with the default settings used for each of these algo-
rithms. To summarize, the overall estimation performance of
CSUKF exceeded that of the other algorithms, both in terms
of runtime and accuracy (Supplementary Table S1).

4.2 Gene regulatory network

To verify the applicability and accuracy of CSUKF, it was
applied to estimate the parameters of a gene regulatory network.
This model was part of the Dream6 estimation of model param-
eters challenge. The network structure of the model and the cor-
responding rate laws are given in Supplement 3. This model
follows linear kinetics for mRNA degradation and protein syn-
thesis and degradation. Hill-type kinetics were assumed for the
activation and repression. Protein production was modelled in
two steps, the transcription step and the translation step.
Considering the two Hill kinetic parameters, 6),, 6M, and the
mRNA synthesis rate 6mRNAJyn, the transcription can be
described as

(AW 1
VmRNA3 = 9mRNA3,syn '% ' W
(1 +93“) 1 1 + (94“) I (34)

_6mRNA,dgg -mRNA3

The network topology and reaction rates were given by the
organizers. Initially, the contest provides a limited amount of
data representing the time-course of mRNA concentration for
the wild-type variety. To reﬂect an actual scientiﬁc scenario, add-
itional datasets can be purchased by spending a virtual budget
allocated to each team at the time of registration. The model
has 30 parameters among which 29 are unknown and, therefore,
have to be estimated. For this experiment, we additionally bought
the protein concentration of the wild type and also the mRNA
and protein concentration for the mutant with increase of RBS4
activity by 100%. All time-series data are over the interval 0 to 20
s with a 1 s step size. We set the constraints as 10’6 5 6 5 106.
The experiment was divided into two phases. In the ﬁrst phase, we
used the mutant data to estimate the mean and covariance of the
parameters. During this step, the states were initialized with small
random numbers. Similarly, the process noise covariance matrix,
Q, was also initialized with small random numbers. The
measurement noise covariance matrix R was initialized with
the noise model supplied by the organizers, which is
ynoivy = max[0, y + 0.1 + 0.2 - y]. The estimated values from
phase 1 are used to formulate the prior distribution of the param-
eters for the second phase of the experiment where the data from
the wild type was used. Figure 3 compares the ﬁnal estimation
result of the parameters with the actual values (which were made

I ﬂEtua' value

I Estimated

QdKil —

3
ﬁ
:1
2 li llll I II I I i ii i I L
J. I I i J .4 4 J
gigigggﬁggggﬁgﬁsﬁsi €3iié§ﬁ§§
, _ _
_ . . saﬂamw mmﬁwmhmm
-§§§§§§§z§§§§° m w a m m I
gulzwulululuzulalulz
N—t'w H' -A'
EEEEEEESQEZEX
6663333565555
u
|
a
a)

Fig. 3. Parameter estimation trajectory from CSUKF. The actual values
of the four unknown parameters are shown with dashed lines, and the
recursive estimations are shown with solid lines. The sample time is
At = 0.25 corresponding to 100 data points

available at the end of the contest). Supplementary Table S6 de-
scribes the numerical value of the estimation along with the stand-
ard deviation. As can be seen from Figure 3 and Supplementary
Table S6, CSUKF can estimate most of the parameters with a
reasonably high accuracy for this model. A comparative result of
the parameter estimation for this network with GA, EP, SA and
EKF along with CSUKF are given in Supplementary Table S7.
One point to note from Supplementary Table S6 is that param-
eters having high standard deviation deviates more from the actual
value compared with the other parameters, indicating that some of
the parameters might be non-identiﬁable. However,
non-identiﬁability is not considered under the scope of this article.
For a more in-depth view of the estimation, state trajectory of the
metabolites with the estimated parameters and actual parameters,
a full set of plots are provided in Supplement 8.

5 CONCLUSION

In systems biology, the modelling of biochemical networks re-
quire the estimation of mechanistic parameters that cannot be
determined directly from measurements. These parameters are
inferred from other measured quantities. Compounding the
problem is the fact that these measurements are inherently
noisy, the networks are non-linear and traditional optimization
space is multimodal.

In this article, we describe a novel filtering method, the
CSUKF, which provides a powerful yet computationally cost-
effective method to tackle complex parameter inference problems
for biological models. While ﬁltering approaches are generally of
use in applications suffering from noisy measurement data, the
constrained parameter estimation and insensitivity to initial con-
ditions combine to make CSUKF particularly well suited to bio-
logical applications. To illustrate this point, the CSUKF was
shown to successfully estimate the parameters of a metabolic
network (the Glycolysis model) and a gene regulatory network
(the Dream6 challenge). CSUKF systematically propagates
uncertainty while exploring the parameter space, giving the esti-
mation covariance matrix along with the parameter approxima-
tions. Thus this approach makes it easier to conduct direct
statistical analysis over the estimation. Furthermore, the
CSUKF provides this enhanced parameter estimation while
ensuring numerical stability with the same runtime complexity
of the less-stable unscented Kalman filter.

 

1 058

112 /310'S[BHJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zduq 11101} papeolumoq

91oz ‘Og isnﬁnv uo ::

CSUKF

 

The CSUKF has been speciﬁcally designed for the needs of
systems biology; however, these needs are not unique to biolo-
gical modelling. Thus the CSUKF can be generally applied to
any filtering or state-space problem.

ACKNOWLEDGEMENT

We would like to thank Dr Christian Krach and Dr Jan Huege
for their fruitful discussion on the modelling approaches.

Funding: This work was supported by the German Federal
Ministry of Education and Research (BMBF) (grant 0315295).

Conflict of Interest: none declared.

REFERENCES

Arisi,I. et al. (2006) Parameter estimate of signal transduction pathways. BMC
Neurosci., 7 (Suppl. 1), S6.

Barenco,M. et al. (2006) Ranked prediction of p53 targets using hidden variable
dynamic modeling. Genome Biol., 7, R25.

Bames,C.P. et al. (2011) Bayesian design strategies for synthetic biology. Interface
Focus, 1, 8957908.

Brooks,D.J. (1998) Bayesian methods in bioinformatics and computational systems
biology. The Statistician, 47, 697100.

Doucet,A. et al. (2001) Sequential Monte Carlo Methods in Practice. Springer, USA.

Dream6 (2012) Estimation of Model Parameters Challenge. Dialogue for Reverse
Engineering Assessments and Methods. http://www.the—dream—project.org/ (6
March 2013, date last accessed).

Hynne,F. et al. (2001) Full—scale model of glycolysis in Saccharomyces cerevisiae.
Biophys. Chem., 94, 1217163.

Jayawardhana,B. et al. (2008) Bayesian inference of the sites of perturbations in
metabolic pathways via Markov chain Monte Carlo. Bioinformatics, 24,
119171197.

Julier,S.J. and Industries,I. (2002) The scaled unscented transformation. In
Proceedings 0fIEEE American Control Conference, pp. 455541559.

Julier,S.J. and Uhlmann,].K. (1996) A general method for approximating nonlinear
transformations of probability distributions. In Technical report. Robotics
Research Group, Department of Engineering Science, University of Oxford.

Julier,S.J. and Uhlmann,].K. (1997) A new extension of the Kalman ﬁlter to non—
linear systems. In International Symposium on Aerospace/Defense Sensing.
Simulation and Controls, Orlando, FL, pp. 1827193.

Julier,S.J. and Uhlmann,].K. (2004) Unscented ﬁltering and nonlinear estimation.
Proc. IEEE, 92, 4014122.

Kalman,R.E. (1960) A new approach to linear ﬁltering and prediction problems.
Trans. ASME, J. Basic Eng., 82 (Series D), 3245.

Kandepu,R. et al. (2007) Applying the unscented Kalman ﬁlter for nonlinear state
estimation. J. Process Control, 18, 7537768.

Kirkpatrick,S. et al. (1983) Optimization by simulated annealing. Science, 220,
67l$80.

Klipp,E. et al. (2005) Systems Biology in Practice: Concepts, Implementation and
Application. Wiley—VCH, Weinheim, Germany.

Lang,L. et al. (2007) Bayesian estimation via sequential Monte Carlo sampling —
constrained dynamic systems. Automatica, 43, 161571622.

Lillaci,G. and Valigi,P. (2007) State observers for the estimation of mRNA and
protein dynamics. In Life Science Systems and Applications Workshop, 2007.
LISA 2007. IEEE/NIH, pp. 1087111.

Lillacci,G. and Khammash,M. (2010) Parameter estimation and model selection in
computational biology. PLoS Comput. Biol., 6, e1000696.

Liu,X. and Niranjan,M. (2012) State and parameter estimation of the heat shock
response system using Kalman and particle ﬁlters. Bioinformatics, 28,
150171507.

Mahsuni,G. and Haris,V. (2009) A particle ﬁltering algorithm for parameter esti—
mation in real—time biosensor arrays. In IEEE International Workshop on
Genomic Signal Processing and Statistics. Minneapolis, USA.

Mendes,P. and Kell,D. (1998) Non—linear optimization of biochemical pathways:
applications to metabolic engineering and parameter estimation. Bioinformatics,
14, 8694183.

Merwe,R.V.D. and Wan,E.A. (2001) The square—root unscented Kalman ﬁlter for
state and parameter—estimation. In International Conference on Acoustics,
Speech, and Signal Processing. Salt Lake city, USA, pp. 346173464.

Moles,C.G. et al. (2003) Parameter estimation in biochemical pathways: a compari—
son of global optimization methods. Genome Res., 13, 246772474.

Nakamura,K. et al. (2009) Parameter estimation of in silico biological pathways
with particle ﬁltering towards a petascale computing. In Pacwc Symposium on
Biocomputing. Hawaii, pp. 227238.

Quach,M. et al. (2007) Estimating parameters and hidden variables in non—linear
state—space models based on odes for biological networks inference.
Bioinformatics, 23, 320973216.

Sisson,S.A. et al. (2007) Sequential Monte Carlo without likelihoods. Proc. Natl.
Acad. Sci. USA, 104, 176(kl765.

Sitz,A. et al. (2002) Estimation of parameters and unobserved components for
nonlinear systems from noisy time series. Phys. Rev. E, 66, 16210.

Stelling,J. (2004) Mathematical models in microbial systems biology. Curr. Opin.
Microbiol, 7, 5137518.

Sun,X. et al. (2008) Extended Kalman ﬁlter for estimation of parameters in non—
linear state—space models of biochemical networks. PLoS One, 3, e3758.

Teixeira,B.O.S. et al. (2008) Unscented ﬁltering for interval—constrained nonlinear
systems. In 47th IEEE Conference on Decision and Control, Cancun, Mexico,
pp. 511675121.

van der Merwe,R. (2004) Sigma—point Kalman ﬁlters for probabilistic inference in
dynamic state—space models. In Ph.D. thesis, OGI School of Science and
Engineering, Oregon Health and Science University, Oregon, USA.

Vyshemirsky,V. and Girolarni,M. (2008) Biobayes: a software package for Bayesian
inference in systems biology. Bioinformatics, 24, 193%1934.

Wilkinson,S.P. (2007) Markov chain Monte Carlo methods and its application.
Brief. Bioinform., 8, 1097116.

Zeng,N. et al. (2011) Inference of nonlinear state—space models for sandwich—type
lateral ﬂow immunoassay using extended Kalman ﬁltering. IEEE Trans.
Biomed. Eng., 58, 195971966.

 

1 059

112 /310'S[BHJHO[pJOJXO'SOIJ’BLUJOJIIIOICI”Zdllq 11101} papeolumoq

9103 ‘Og isanV uo ::

