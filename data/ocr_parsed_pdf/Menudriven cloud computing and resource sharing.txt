Vol. 27 no. 16 2011, pages 2309—2310
APP S N O  doi:10.1093/bioinformatics/btr364

 

Systems biology

Advance Access publication June 17, 2011

Menu-driven cloud computing and resource sharing for R and

Bioconductor

Hamid Bolouri*’T, Rajiv Dulepeti and Michael Angerman
Division of Biology, California Institute of Technology, Pasadena, CA 91125, USA

Associate Editor: Alex Bateman

 

ABSTRACT

Summary: We report CRdata.org, a cloud-based, free, open-source
web server for running analyses and sharing data and R scripts
with others. In addition to using the free, public service, CRdata
users can launch their own private Amazon Elastic Computing Cloud
(E02) nodes and store private data and scripts on Amazon’s Simple
Storage Service (83) with user-controlled access rights. All CRdata
services are provided via point-and-click menus.

Availability and Implementation: CRdata is open-source and free
under the permissive MIT License (opensource.org/licenses/mit-
license.php). The source code is in Ruby (ruby-lang.org/en/) and
available at: github.com/seerdata/crdata.

Contact: hbolouri@fhcrc.org

Received on April 4, 2011; revised on June 2, 2011; accepted on
June 8, 2011

1 INTRODUCTION

High-throughput technologies and integrative systems biology have
led to an increasing need for high-performance computing. Cloud
computing has emerged as an attractive solution to issues of
maintenance, administration and obsolescence (Stein, 2010).

The Bioconductor (bioconductor.org) and R (cran.r-project.org)
projects offer a rich, open-source computational environment
with over 3000 ‘packages’ (high-level libraries) covering data
analysis (e.g. sequencing, ChIP/RNA-seq), simulation modeling
(e.g. stochastic modeling, ODEs and PDEs) and network integration,
analysis and visualization. Compatibility with other resources is
provided via bridging packages such as RSBML and Rgraphviz.

2 RESULTS

Here, we report the development of a web-based resource
(CRdata.org) that addresses three current Challenges: First, CRdata
provides a means with which people inexpert in R syntax
can execute R scripts using a simple web-based graphical user
interface. Secondly, to facilitate sharing datasets and scripts, CRdata
automatically generates a graphical user interface for submitted

 

*To whom correspondence should be addressed.

lPresent address: D4-100, Div. Human Biology, Fred Hutchinson Cancer
Research Center, 1100 Fajrview Avenue North, Seattle, WA 98109-1024,
USA.

:lPresent address: WiseWindow Corporation, 17748 Skypark Circle, Suite
220, Irvine, CA 92614, USA.

scripts. Moreover, users can make data and scripts available to
selected collaborators or the world using simple menus. Thirdly,
to avoid processing bottlenecks, we provide menu-driven access to
Amazon’s Elastic Computing Cloud (EC2, aws.amazon.com/eC2/)
and its Simple Storage Service (S3, aws.amazon.com/s3/). CRdata
users can launch any number of private EC2 processor nodes and/or
store their private and shared data and scripts in S3.

In addition to individual use, CRdata users can create groups
and share data, scripts and Cloud Computing resources within
groups. This functionality enables computational biologists to
provide targeted private resources (e.g. customized scripts and
analysis results) to collaborators and subscribers. It also enables
script users to run multiple analyses using different algorithms
and/or parameters. Similarly, authors of systems biology models can
provide online versions of their models for interactive exploration.

CRdata users can also send feedback to the owner of a shared
ﬁle and rate/review the resource to help others. Moreover, the usage
history of any ﬁle can be explored by users with access rights.

Figure 1 shows example views of CRdata in use. Figure 1A shows
the directory listing for an example CRdata group. Each group has
an administrator, who can accept/reject user applications to join
(arrow). This example group has four members, as shown.

Figure 1B shows the user interface for a script shared within
the above group. The dialog boxes (and their default values) are
automatically generated by CRdata based on speciﬁcations by
the script author. As shown, the user is prompted to Choose the
processing queue (Public, or a user’s private queue), specify the
input ﬁle name and provide algorithmic parameter values (including
the Choice of output data).

To help users understand the algorithm and Choose parameter
values, each script is accompanied by an HTML help page (supplied
by the script author via CRdata’s HTML help ﬁle editor). Figure 1C
shows a portion of the help ﬁle for the script in Figure 1B. Users
can also view the script code through a read-only viewer (a portion
is shown in Figure 1D).

Output of analyses are provided in two forms: data ﬁles that can
be downloaded or used as inputs to other CRdata scripts, and HTML
pages containing text, ﬁgures, tables, etc. A portion of the HTML
output of the example script is shown in Figure 1E.

To enable CRdata to process output statements, scripts must be
annotated with HTML-like tags that declare output statements and
their type. The tags are treated as comments by R. For example, a
command to output some text is tagged as: #<Crdata_text> output
text </Crdata_text>. CRdata replaces the output declaration tags
with HTML commands using R2HTML (tinyurl.com/R2HTML).
See URLs 1, 2 and 4 in Supplementary Material for details.

 

© The Author 2011. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 2309

112 /3.Io's[BrunoprOJXO'sorwurJOJurorq”:duq 11101} papBOIII/lAOG

91oz ‘Og anﬁnv uo ::

H. Bolouri et al.

 

 

 

    

 

 

 

 

 

 

 

 

 

  

 

A - m Add Group My Gtoupi m
.- _ - ' _ é
‘ I- e; and analvs-s scr Dis inzearacnq E 3 dataset; to '-redict human cis--enulatorv d -
can“: as mudulea :ane-w'de.
; “mm” “W ENWDE Was“ “Stew-“a1”? mdules C
Minn“. CPU Ruin-unit: 'ihur'.
ﬂair-ﬁnal“: I. lmruytmul}
1 libuzrtztnuklmrl
brnut"'.orsersus _~a.-':r _IL'l:LIrJas?] ~areouor.s"ranh.r' .9. lmruwmmeal
New Job B Ben _ I waﬁvo mdﬁjencmwﬂ minarawﬁul : a dung“ c- "ftp:,Uhgdbﬂnlum!,cs:.“:5:.edug‘galdenPatJu'hqlBJmCDdebﬂcrugIncude'ﬂﬂhueSIqj"
3 “' ' ' ' " ' ' S £11210: < recite”[Ellwmxmgeder-Hle,coltlaaaea-"chuacut"J
mm.“ mi." n. .l... I _ s shnzcms <— suhauiasmhaxacur[Illelnabln ,2a,1noc»|
__ _ _  1 mm“ <. lgmtshunm”
-'ra|:l||:1U\Ilr ENLIJL'I: Jl‘laSEl Ins-regulator,r muaulas 3 Hum, <— c ["5th Hanan" ﬂ"M"“me"l"score"l"atranﬁ"’
Wmmmsmmmhwmﬁmnmuurm- I "simathluc" ."nVaJ.uc"."riVaJ.ue". "Dc air"!
:18. cmlmame: D
N...“ W... it... 11 alibi-pus <— vectnrlnudeﬂutu".temuunoﬂlesi
: ‘.|i- ' '.-'-'r 2' i = .1 -- -_-I =.
mm m H] "‘ 'NRC‘P' re‘ r n'" m" m” P F‘nrnmnlt-rNamE DI'MIIII anul: nnramnh-rnmrilninn
'JI'N'“ 4""5 we"! ﬁJ'a.\-ames Ilw Er-m-in ll- -. --. : W of Inlet—Amr- "(I (In nrr'=..=$=rl.1h—:N|D war-I“ must wa-‘l'a I'-I='rh
punnc j #:3211923”; those .n \‘C ear". ll-:3 ‘ile snoulc L-—: I: am .ez'. saved m runma
' ' ssaarazed v5: Earner. with 1 l-ne Der f' name. the gala-.11: his _
Parameters D'CNIdEJ has a acwnloajad iron the EN - no 5 -.e with u-; riﬂtcrlplinn S‘Mﬂ Silos

liIeN-Ilues lDaI-lsell
J"'-' EFIIEJ? jNJSEl HS SIE‘) [lib Ellﬂe': C‘Jv

Inimﬁll annleJlll III-value lieu-95M“ 2L

|r|i|lfU|lSllE-llll {BunleaI-I

Inimnuwnslwqm Ifllmlrmnl

1L re;

 

to -ncrurrei:cl= 11
threshold

1;qu v
|r||hrUu|1|I|eGehes iBn.»lemil
13535 I]
mmqn punks willl ﬂap: "mum llmn IIIIII tllltmrnn
:nn
Iilm um weasel mull-ms LII-1e. llmll llrpl lime-ma mxneak irkm'a 5:30
5-000

lillel «m DN-Isel Ie-Jlnns nutllllllh] '1 llmn M ﬂies
IIIIIegell

lunch. as ar

! 'I

 

.I-uﬁﬂlyvnluu selenium tluleslml-l II-I DNnee! [leaks distance to {3'3 GI. .IU

lFlIm“

I‘ﬂ

h.l|NebeL1:ll\i. l1-T55

"'33:: \SE pen 9 I" n SIIIILE up; I: In “no” “(a 1::

2w start end m'dﬂl

 

Ere-an.- Ju: ca ncgl

 

Fig. 1. Example Views of the CRdata user interface. See text for details.

Over 20 example scripts and associated data ﬁles are provided in
the CRdata Public space (see Supplementary Material).

CRdata architecture is modular and extensible. A Ruby-on—Rails
(http://rubyonrails.org/) server node handles all user, processing
node, jobs queue, data and script management, leaving CRdata
processing nodes free for data processing. All processing nodes are
copies of a Master node which is preloaded with R and Bioconductor
libraries and stored as an EC2 processor instance. In this way, nodes
can be launched dynamically on demand (typically, initialization of
a new EC2 node takes a few minutes).

A Staging Node provides a means to update CRdata nodes without
interrupting the operation of the server and its active processing
nodes. Apart from packages requiring third-party software or
interactive graphics, all packages from R212 and Bioconductor2.7
are preinstalled on CRdata nodes. Unpublished packages can be
submitted to CRdata using a simple R script.

CRdata supports all Amazon processing node sizes and
conﬁgurations (see aws.arnazon.com/ec2/instance—typesl). To
minimize running costs, we currently offer two processing node
types: small and medium. Three free processing nodes are offered

 

 

5cm". "uDIG ad J

Deal 5 mm -IDcl1-:-Iu-rali.a- asa :har mreshnlc are deem—:1 :Dn I'Eﬂuént to Lie
'IIt: Heist. lulu: .J 90 we: iu|=-.L':|J Dill

ul u  . -_'|."u .lluvm a ; ._- am -_-. _--.u |.J|I,'-: LJIIIJI mm. In 1....» -. hula... u-..-. 'uluu.

We ne'no'va ﬂan rona-t-jn-sueclflr DeaLs ru
blnce tltare are trulcallu '5 replicates per
atrium-g ..- 5-6 :21: true;

we retro-fa aaai soanr m sum: or lower Lie:'=us;- incur! :is-raqulacoi'.

      
 

hnnciane real 3 with n his dlStal'T? from he nearas': '55.

Beats mar alE less than this I-unbe' :vf base Da-rs aua't are me'oec.

940240 940410 1'71 0000187 ENSGODWUISTGOB 000018":I 1
940?00 940900 2?1 0000138 315600000187603 0000183 1

 

JC :‘E‘E [-rlasai “5 sltes

 

 

L aai: ul In: ma - ar p.

 

ring In 11 Dr mc'e ﬁatase's-
.'.h|s cc'resDor‘Js tc Deal-5 :3-

 

rJiLe- These Inna DIDI-5 1131- u'.-:Iir.ate Lrans_-inec

 

 

 

0 1 000

maidlalmbﬁamm

 

  
 
 
 

names peak strand feature nartjoritioin endjoxiﬁml ilmirleFenhn'e

31393000019608 9.4 e+05 9.484435 downstream
NSC-10000013608 9.4 rr05 9.4e+DS downstream

by CRdata to allow users to test scripts and perform small analysis
tasks. For jobs likely to take more than a few minutes, we request
that users launch private EC2 nodes. A menu-driven interface
in CRdata makes this task straightforward. Extra nodes can be
launched automatically when there are jobs waiting in a user’s
queue, and idle nodes terminated.

ACKNOWLEDGEMENTS

CRdata was developed as part of a collaborative project with the
laboratory of Dr Ellen Rothenberg (Caltech), with code contributions
by SparkTech Software (sparktechsoft.coml), and Bioconductor
contributions by Dr Martin Morgan (FHCRC).

Funding: NHLBI grant (HLOS9102 to H.B.).

Conﬂict of Interest: none declared.

REFERENCE

Stein,R.D. (2010) The case for cloud computing in genome informatics. Genome Biol.,
11, 207.

 

2310

112 /3.IO'S[BumO[p.IOJXO'SOIJBLUJOJIIIOIqﬂIdllq mot} pepBoIH/vxoq

9IOZ ‘OE ISUEHV IIO ::

