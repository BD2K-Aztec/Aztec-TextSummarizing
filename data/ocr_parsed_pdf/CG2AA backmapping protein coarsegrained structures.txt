Bioinformatics, 32(8), 2016, 1235—1237

doi: 10.1093/bioinformatics/btv740

Advance Access Publication Date: 16 December 2015
Applications Note

 

 

Structural bioinformatics

CGZAA: backmapping protein coarse-grained
structures

Leandro E. Lombardi‘, Marcelo A. Marti2 and Luciana Capece3'*

1Dto. De Matematica - lnstituto De Célculo, Fac. de Ciencias Exactas y Naturales, Univ. De Buenos Aires., 2Dto. De
Ouimica Biologica - lOUlBlCEN-CONICET, Fac. De Ciencias Exactas Y Naturales, Univ. de Buenos Aires., 3Dto. De
Ouimica Inorganica, Analitica Y Ouimica Fisica - lNOUlMAE-CONICET, Fac. De Ciencias Exactas Y Naturales, Univ.
De Buenos Aires, Cdad. Universitaria, CABA C1428EGA, Argentina

*To whom correspondence should be addressed.
Associate Editor: Anna Tramontano

Received on 27 September 2015; revised on 23 November 2015; accepted on 12 December 2015

Abstract

Summary: Coarse grain (CG) models allow long—scale simulations with a much lower computational
cost than that of all—atom simulations. However, the absence of atomistic detail impedes the analysis
of specific atomic interactions that are determinant in most interesting biomolecular processes.
In order to study these phenomena, it is necessary to reconstruct the atomistic structure from the CG
representation. This structure can be analyzed by itself or be used as an onset for atomistic molecular
dynamics simulations. In this work, we present a computer program that accurately reconstructs the
atomistic structure from a CG model for proteins, using a simple geometrical algorithm.

Availability and implementation: The software is free and available online at http://www.ic.fcen.
uba.ar/cg2aa/cg2aa.py

Supplementary information: Supplementary data are available at Bioinformatics online.

Contact: lula@qi.fcen.uba.ar

 

chains are modeled with one to four beads, depending on the com—
plexity of the aminoacid. The backbone reconstruction scheme pre—
sented in this work can be applied to any model that represents the
backbone with a bead at the C5,. Of course, side chains reconstruc—
tions strongly depend on number and positions of the beads of each
CG model but the same approach can be implemented in other mod—
els (see Supplementary Figure S4 for a Martini CG model example).
We also include in our program a backmapping of a CG model for
the heme group, which was obtained using a similar approach as the
one used to obtain standard CG aminoacids in (Hills et (11., 2010).

In summary, this tool allows backmapping of CG structures in
an accurate manner. Also, due to the simplicity of the algorithm, it

1 Introduction

In the context of molecular dynamics (MDs), coarse grain (CG) models
define particles by grouping several atoms into one bead. This process
reduces the number of particles used to describe the system, allowing
longer scale (either temporal, spatial or both) simulations in exchange
of detail (Saunders and Voth, 2013). Furthermore, the possibility of re—
constructing (or backmapping) the atomistic structure from the CG
representation allows a multiscale approach. Although a perfect recon—
struction is mathematically impossible, approximate reconstructions
can be obtained (Darré et (11., 2015; Heath et (11., 2007; Rzepiela et (11.,
2010; Wassenaar et (11., 2014). For instance, in (Wassenaar et (11.,
2014), authors construct a complete backmap for the Martini model

. . . . . can be easily expanded to other particular molecules or chemical
(Monticelll et (11., 2008). This reconstructlon 1s remarkably accurate for

9103 ‘Og JSanV uo salaﬁuv soc] ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /3.10'speum0fp1q1x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

the protein backbone and quite good on the side chains.

The backmapping algorithm presented here was developed for
the CG model developed in Hills et al. (2010). As in the Martini
force field, this model represents the backbone with one bead.
Nevertheless, this bead is located in the position of the C, atom in—
stead of the center of mass of the residues backbone atoms. The side

groups, such as cofactors and ligands (e.g. the heme group).

2 Methods

The algorithm is implemented in Python, foreseeking maximum
portability. Numerical calculations are performed with the NumPy

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1235

1236

L.E.Lombardi et aI.

 

library, a nowadays standard in any python—enabled system. The
software usage is very simple by invoking the program from the
command line.

The algorithm works as follows. First, we reconstruct backbone
atoms positions from the known Ca positions. In (Wassenaar et (11.,
2014) the authors claim that the C20 vector of the i—th amino
acid points approximately in the direction of the cross product

of the vectors CQCQTZ and CQCQH. We propose a weaker assumption:
This cross product lies inside the peptide bond plane (see Fig. 1a).
Because this plane contains both C; and C2“, the positions of the
atoms between them are completely determined. More precisely, we
place the C,-, O,- and N,-+1 atoms at distances given by the Amber
force field (Duan et (11., 2003) and the angles reported in (Tozzini
et (11., 2006) (see Supplementary Materials for details). This gives an
accurate reconstruction, except at the N— and C— terminals.

Having placed the backbone atoms, the position of the C); (if pre—
sent) is defined by the tetrahedral arrangement of the atoms bonding
the Ca. Now, knowing the coordinates of the Cu atoms and, having
stated the C); positions, we guess the remaining positions of the side
chain sequentially. The program computes them as follows. The al—
ready determined atoms impose geometric constrains on the positions
of the ones yet to place. As expected, the guess is strongly determined
by the position of the bead in question. For example, in this model
most aminoacids have a bead defined by the C/g, the CV and the neigh—
boring hydrogen atoms. In that case, the first step of the side chain re—
construction is to place the CV, given the positions of the C, and Cﬁ.

—I

Since the vector C/gCy points approximately in the direction of the
bead, we chose to place the atom at a typical distance for this bond,
in a way that it forms a tetrahedral angle and pointing as close as pos—
sible in that direction. The process continues atom by atom, taking
into account the geometrical information of the aminoacid beads For
instance, aromatic rings planes can be reconstructed from bead infor—
mation. For more details on the backmapping algorithm see
Supplementary Figures S1 and S2 particularly.

By similar geometric reasoning, the algorithm reconstructs the
atom positions from the CG model of the heme group. This model
was obtained using an analog approach as the one used to obtain
standard CG aminoacids in (Hills et (11., 2010). In this particular
case, it involves 17 beads, 1 bead for the Fe atom, 12 on the heme
plane and 4 beads for the propionate side chains. (Supplementary
Fig. S3) The amount of beads used for its description, together with
its simple geometry allows us to give an accurate reconstruction.

The numerical values of all the geometric constraints (i.e. bond
distances, angles and dihedrals values) were taken from the
Amber03 Force Field, (Duan et (11., 2003).

In order to refine the internal coordinates of the side chains and
since our motivation is to use the all—atom structure as a starting
point of a MDs simulation, we include an energy minimization as
part of our standard work ﬂow. Namely, we run a short classical

    

'_) '+1 ﬂ '+2

'CLCL ><C;CL a) (m
Fig. 1. (a) Three consecutive Cm'o and the corresponding cross product. This
vector and the C : 0 bond have different directions. (b) In this example, the
backmapped structure is superimposed the original

minimization using the Amber14 package (Case at 111., 2015) in im—
plicit solvent. (See Supplementary Materials for simulation details)

The minimization process is not included as part of this piece of
code since it would severely affect portability and, at the same time,
users may prefer a different simulation context (i.e. force field or
software). We are confident that a user with experience in MDs
simulations will find our contribution easy and ﬂexible to use and
adapt

As examples, we have selected five different proteins with differ—
ent secondary structure elements and variable 3D folds. In all cases,
a CG representation is obtained from the original PDB structures
using an adapted version of the script gently provided by the authors
of (Hills et (11., 2010) (see Supplementary Materials for details).
Then, we applied the backmapping algorithm to the CG structure.
The backmapped structure was compared with the original crystal
structure. The total root mean square deviation (RMSD) of the
backbone atoms between the backmapped and the crystal structure
ranged from 0.5 to 0.8  in the analyzed cases. These values were
not significantly modified after minimization. However, in some
cases, minimization allowed to correct small imperfections in the
relative position of the side chains with respect to their direct neigh—
bors. RMSD calculations for each residue show very small differ—
ences for most of the protein structure. Only a few residues located,
as expected, in regions with low secondary structure organization
had higher deviations (see Supplementary Fig. S4). Two of the se—
lected examples correspond to heme proteins, in which the perform—
ance of the heme group backmap was also tested (the reconstruction
being accurate on the heme plane, with a total RMSD of 0.61 A).

In order to test the stability of the obtained structures, we used
them as starting points for MDs simulations. More precisely, after solv—
ation and a short thermalization, a 100—ns MD simulation was per—
formed for two of the considered examples. In all cases structures
remained stable showing an average RMSD with respect to the original
crystal structure of 1—2.5  for the backbone atoms, and lower than 3
A when considering all the protein atoms (Supplementary Fig. S6). The
obtained trajectories were compared with MD simulations starting
from the crystal structures, calculating the root—mean—square—ﬂuctu—
ation (RMSF) for each residue in the protein, showing similar results
(Supplementary Fig. S7). To further test the backmapping scheme, we
backmapped 500 ns a CG—MD trajectory and calculated the RMSD
with respect to the crystal structure. The average RMSD resulted 3.289
A for the backbone atoms and 4.085  for all the heavy atoms, which
results a reasonable value considering the increased sampling and the
expected deviations from the crystal structure in a CG—MD simulation
(Hills et (11., 2010). From this backmapped CG—MD trajectory, 10
equally spaced snapshots were simulated for 10 ns in explicit solvent.
Interestingly, the RMSF obtained in these trajectories is in good agree—
ment with the ﬂuctuations observed in atomistic simulations starting
from the corresponding crystal structure, with, again, higher ﬂuctu—
ations. These results further validate the application of this backmap—
ping methodology for combining CG and atomistic simulations in a
multiscale approach (Supplementary Fig. S8).

3Condu§on

We presented an intuitive, portable, fast, free and easy—to—use method
to map CG structures back to all—atom representation. We have tested
it in several examples by changing protein structures to CG represen—
tation and backmapping them. Examples were selected in order to
test the algorithm for different secondary structure elements and 3D
structure complexity. Both the backbone and total reconstruction is

9103 ‘Og JSanV uo sajaﬁuv soc] ‘Btulomcg JO AJtSJQAtuf] 112 /310'slcu1nofp103xo"sotJBuiJOJutotq/ﬁduq 11101} pQPBOIIIAAOG

Backmapping protein CG structures

1237

 

accurate except, sometimes, at the more ﬂexible parts of the structure
(i.e. ends, loops and long side chains).

Acknowledgements

The authors want to thank A. Roitberg for valuable discussions. They would
also like to acknowledge M. Arrar and L. Boechi for helpful comments on the
article. The authors are members of CONICET.

Funding

This work has been supported by grants from Universidad de Buenos Aires
(UBA-CYT project 20020120300025BA) and from Agencia Nacional de
Produccién Cientiﬁca y Tecnolégica (project PICT 2012-2571). LEL, MAM
and LC are members of CONICET.

Conﬂict of Interest: none declared.

References
Case,D. et al. (2015). Amber 15. University of California, San Francisco, CA.

Darre,L. et al. (2015) Sirah: a structurally unbiased coarse—grained force ﬁeld
for proteins with aqueous solvation and long-range electrostatics. I. Chem.
Theory Comput., 11, 723—739.

Duan,Y. et al. (2003) A point-charge force ﬁeld for molecular mechanics simu-
lations of proteins based on condensed-phase quantum mechanical calcula—
tions.I. Comput. Chem., 24, 1999—2012.

Heath,A. et al. (2007) From coarse-grain to all—atom: toward multiscale ana—
lysis of protein landscapes. Proteins, 68, 646—66 1.

Hills,R.D. et al. (2010) Multiscale coarse-graining of the protein energy land—
scape. PLoS Comput. Biol., 6, e1000827.

Monticelli,L. et al. (2008) The martini coarse—grained force ﬁeld: extension to
proteins. I. Chem. Theory Comput., 4, 819—834.

Rzepiela,A. et al. (2010) Reconstruction of atomistic details from coarse—
grained structures.I. Comput. Chem., 31, 1333—1343.

Saunders,M. and Voth,G. (2013) Coarse-graining methods for computational
biology. Armu. Rev. Biophys., 42, 73—93.

Tozzini,V. et al. (2006) Mapping all-atom models onto one—bead coarse—
grained models: general properties and applications to a minimal polypep—
tide model. I. Chem. Theory Comput., 2, 667—673.

Wassenaar,T.A. et al. (2014) Going backward: A ﬂexible geometric approach
to reverse transformation from coarse grained to atomistic models. I. Chem.
Theory Comput., 10, 676—690.

9103 ‘Og isanV uo sajaﬁuv soc] ‘Bnuomcg JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOICI”Idllq 11101} pQPBOIIIAAOG

