BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

TIPP

 

Phase 1 involves a sequence of preprocessing steps, based on its
set S of reference sequences for its set of marker genes, and its
input set Q of uncharacterized reads (the ‘query sequences’).
TIPP uses SATé (Liu et al., 2009, 2012) to compute an alignment
A and tree T for full—length sequences for each of its marker
genes, using its reference set S; these are called the ‘backbone
alignment’ and ‘backbone tree’. Since the NCBI taxonomy is not
fully resolved (i.e., bifurcating), TIPP uses the backbone align—
ment and RAxML (Stamatakis, 2006) to refine the NCBI tax—
onomy (restricted to the sequences in the backbone alignment)
into a fully resolved tree, T“. Thus, each marker gene has its own
refinement of the taxonomy that is used in subsequent analyses.
TIPP then uses BLAST (Altschul et al., 1990) to determine which
reads in Q map to its marker genes. At the end of this pre—
processing, the set Q is partitioned into sets, with one set for
each of its marker genes, and a ﬁnal set for the reads that are
not mapped to any marker gene

Phase 2, where reads that are mapped to marker genes
are taxonomically characterized, is the most involved, and is
described below (and also in Fig. 1).

Phase 3, which estimates the abundance proﬁle, is quite
simple. We pool all the reads that mapped to any marker gene
and have been characterized at any taxonomic level into a single
set. We compute the abundance proﬁle as the relative distribu—
tion of the clades present in the pooled set. As the pooled reads
are only required to be characterized at the phylum level, the
abundance proﬁles can include a category of unclassif1ed
sequences. Sequences can be labeled as unclassif1ed due to two
reasons: there may not be sufﬁcient support to classify a se—
quence at a given taxonomic level, and the taxonomy may not
have a classiﬁcation for a clade at a particular taxonomic level.
For example, a species that does not have a family label would be
unclassiﬁed at the family level, even if it was classiﬁed at a lower

level; see Section S7 for an example.
HMM3
’ P

2 HMM1

 

 

 

 

’/

A
‘3
V

DO

 

 

Fig. 1. TIPP’s algorithm to taxonomically characterize the query se-
quence q that is already mapped to a marker gene. The backbone align-
ment and tree are for the marker gene, and an HMM Family is computed
for the backbone alignment. The HMM Family is then used to compute
one or more ‘extended alignments’ including q. The phylogenetic place-
ment method pplacer produces a probability distribution for the place-
ments of q into the reference taxonomy. Each node in the taxonomy is
labeled with the sum of the probabilities of any placements at or below
the edge above the node. TIPP classiﬁes the query sequence at any node
with sufﬁcient statistical support

2.2 Phase 2: taxonomic characterizations of reads

We describe how TIPP performs its taxonomic characterization
of a single read mapped to a single marker gene; see Figure l.
The input to TIPP includes the maximum alignment subset size
(In) and the statistical support thresholds (s3 and sp) for align—
ment and placement support, respectively, which can be set by
the user. We set default values as follows: m= 100 and
S21 = SP =95%.

Step 1: Decomposition. TIPP decomposes the set of leaves in
the backbone tree T into subsets using the decomposition tech—
nique in SEPP. TIPP finds a centroid edge in T (one that separ—
ates the leaf set into two sets of approximately equal size), breaks
the tree accordingly into two subtrees, and recurses on each
subtree that contains more than m leaves. This produces a par—
tition of the leaves of T into alignment subsets 51,52, ... ,Sk,
each of size at most In.

Step 2: Compute Extended Alignment(s). We define the align—
ment A,— by restricting the alignment A to 5,, for every 1 5 i 5 k;
these are the ‘subset alignments’. TIPP uses the HMMER soft—
ware suite (Eddy, 1998) to compute an HMM H,- on each A.
Thus, TIPP represents the backbone alignment with a set of
HMMs, a technique we call an ‘HMM Family’. HMMER pro—
duces bit scores (discussed below), which are measures of the fit
between each H,- and each query sequence (1 e Q. Then, for the
query sequence (1, one or more subset alignments are selected so
that the total statistical support for the alignments is at least 53
(see below for how TIPP computes statistical support). TIPP
uses HMMER to align q to each of the selected subset align—
ments, and thus, produces extensions of each subset alignment A ,-
that include (1 (called an ‘extended alignment’). Thus, each query
sequence (1 gives rise to at least one and potentially many ex—
tended alignments of the reference dataset, each with |S|+l
sequences.

Step 3: Placement. For each query sequence (1 and each ex—
tended alignment containing (1, we use pplacer (Matsen et al.,
2010), a maximum likelihood phylogenetic placement method, to
insert (1 into T“. The output of pplacer provides multiple place—
ments and their likelihood weight ratios (the maximum likeli—
hood values for all placement locations, normalized to sum to
l) for each extended alignment. We combine all placements re—
sulting from the extended alignments into a single collection of
placements, re—normalize their likelihood weight ratios to sum up
to l (weighting each placement by the corresponding alignment
support), and treat the normalized likelihood weight ratios as
probabilities; see Section S8 for an example.

Step 4: Classiﬁcation. For each query sequence, we assign stat—
istical support to each node in the taxonomy by adding the
probabilities of all placements at or below the edge above the
node; thus, the statistical support monotonically increases as one
traverses the tree from any leaf to the root, and this allows us to
classify the query sequence at all taxonomic levels for which it
has support of at least SD. The query sequence is left unclassiﬁed
at levels where the support of sp is not reached. A unique taxon
identiﬁcation is produced whenever sp>0.5; otherwise, TIPP
outputs all identif1cations that meet the support threshold of
sp, along with their support values. Because our default setting
has sp =0.95, TIPP produces a unique taxon identiﬁcation for
each query sequence.

 

3549

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

N.-p.Nguyen et al.

 

2.3 Alignment support calculation

To take alignment uncertainty into account, we take a large
enough number of extended alignments to reach the alignment
support threshold 53. To determine the number of extended
alignments we need, we use HMMER’s output to deﬁne the
probability that a given query sequence is generated by a given
HMM from the set of HMMs computed for the different subset
alignments. These calculations are based on the assumptions that
(1) the subsets are disjoint, so that at most one HMM generates
the query sequence and (2) the query sequence is generated by
some HMM.

For a given HMMER model H and query sequence (1,
HMMER calculates a bit—score (which we denote BS(H)),
deﬁned by:

FUND
PM | R)

 

BS(H) =10g 2 (1)
where P(q|H) is the probability of model H generating query
sequence (1, and P(q|R) is the probability of a random model
R generating query sequence (1. Assuming that the query se—
quence q is generated by exactly one of the HMMs (H1 to H",
each corresponding to a different subset alignment), the prob—
ability that H,- generated (1 is:

P(q|Hi)P(Hi) _
2,11 P(q|H/)P(H;)

Since our subsets all have roughly equal size, we make the sim—
plifying assumption that the a priori probabilities of any two
HMMs generating any given query sequence are equal. We can
rewrite Equation (2) as:

P(Hr|q) = (2)

P(H.~|q> =  (3)

i=1 P(q|Hr)

 

By Equation (1),
P(q|H/) _10 P(q|H.~)

 

 

 

BSH4 —BS H,~ =lo 4
< J) < > gm“) 2pm,) 0
P(q|H/)
= o ‘ 5
g ’ P(q|H.~) ( )
Hence, the probability of H,- using bit—scores is given by:
1
P(H.~|q)= (6)

Z" 2BS(I'IJ)’BS(HI)
/= 1

Thus, assuming that the bit—scores are sorted such that BS(H,~)
3 BS(H,~+1) (i= 1, 2, . . . , n — 1), to reach a specified threshold 53,
we ﬁnd the smallest m such that 2211 P(Hk|q) 3 5a.

3 EXPERIMENTAL DESIGN

3.1 Overview

We evaluated TIPP in comparison to other phylogenetic profil—
ing methods under three different conditions. Experiment 1 com—
pared performance under easy conditions, where the genomes
are known and the reads (i.e. query sequences) have low rates

of sequencing errors. Experiment 2 examined datasets with high
rates of insertion and deletion errors (collectively known as
‘indels’). Experiment 3 examined performance where the query
sequences come from ‘novel’ genomes (defined below).

3.1.] Methods studied We compared TIPP, MetaPhyler,
MetaPhlAn, PhymmBL, mOTU and NBC. Three of these meth—
ods (TIPP, mOTU and Metaphyler) are marker—based methods,
and use universal housekeeping genes that are unlikely to
undergo duplication or horizontal gene transfer. Both TIPP
and MetaPhyler use the same collection of 30 marker genes,
and mOTU uses a reduced set of 10 marker genes selected
from Mende et a]. (2013). MetaPhlAn, conversely, selects mar—
kers that uniquely identify speciﬁc taxonomic groups. Assigning
query sequences to genes (i.e. binning) is performed internally by
each of the marker—based methods; see Section S4 for the
BLAST settings used within TIPP for binning.

Phred quality scores (Ewing and Green, 1998) are needed for
each read, in order for mOTU to run. Since the datasets used in
our study do not have the quality scores, we assigned Phred
quality scores of 33 to all the bases of all the reads (99.95%
probability that the base is correct). MetaPhyler allows the
user to input a conﬁdence threshold, and query sequences are
only classiﬁed at a given level if this confidence threshold is met.
We use the confidence level of 90% suggested by the authors of
MetaPhyler. For PhymmBL, we classify a query sequence at the
most speciﬁc classiﬁcation yielding a confidence score of 95% or
higher; however, PhymmBL does not give conﬁdence scores at
the species level, and thus, cannot be used to perform abundance
proﬁling at the species level. Finally, NBC gives a conﬁdence
score of the query sequence matching a taxon. We accept the
classiﬁcation if the conﬁdence score is above the species thresh—
old formula given by the NBC authors (which is a function of
read—length; see Section S4); thus, a query sequence will either be
classiﬁed at the species level or be completely unclassiﬁed. See
Section S4 for version numbers and commands used.

3.1.2 Reference marker datasets TIPP uses the reference se—
quence dataset obtained from Liu et a]. (2010, 2011), consisting
of 30 phylogenetic marker genes that span the Bacteria and
Archaea domains. The marker genes selected were believed to
be single copy genes, universally present across the Bacteria
domain, and resistant to horizontal gene transfer. Only species
whose genomes have been sequenced were present in the refer—
ence dataset. The number of sequenced representatives for each
marker gene ranges from 65 to 1555 sequences, with an average
of 1312 sequences per marker gene. See Section S2 for the list
of marker genes and the empirical statistics of the reference align—
ments on these datasets.

3.1.3 Training MetaPhyler, MetaPhlAn and mOTU come pre—
trained, but their reference datasets depend on which version is
used. NBC and PhymmBL require the user to manually train
their software, and their reference datasets are dependent on
when the genomes were downloaded for training. The versions
of MetaPhyler, MetaPhlAn and mOTU used in our article are
based on reference datasets downloaded from NCBI in 2010,
2011 and 2012, respectively. TIPP is trained on the same refer—
ence dataset as MetaPhyler, and thus is trained on sequences
downloaded from NCBI in 2010. NBC and PhymmBL were

 

3550

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

TIPP

 

trained on the same set of genomes downloaded from NCBI on
May 2013. Thus, NBC and PhymmBL are based on training
datasets from 2013, mOTU is based on a training dataset from
2012, MetaPhlAn is based on a training dataset from 2011, and
MetaPhyler and TIPP are based on a training dataset from 2010.
These differences favour methods (such as NBC and PhymmBL)
that are trained on more recent datasets than those based on
older datasets (such as MetaPhyler and TIPP). See Section S6
for additional information on how TIPP was trained.

3.1.4 Simulated abundance proﬁling datasets The datasets we
used have different properties, including the average read
length (short versus long), complexity of the profiles (uniform
versus non—uniform), the rate of sequencing errors (low versus
high), and whether the datasets contained ‘novel’ or ‘known’
genomes (defined shortly). The complexity of the profile is
labeled as low complexity (LC; staggered distribution of species),
high complexity (HC; uniform distribution of species) and
medium complexity (MC; distribution of species in between
LC and HC). A dataset is labeled as ‘novel’ if none of the
marker—based methods have been trained on any of the genomes
in that dataset (see below for more detail). A dataset is labeled as
‘known’ if it contains any genome that was previously used to
train at least one of the marker—based methods. We provide a
brief overview of the datasets, separated out into experimental
conditions (Table 1); a more in—depth description of the individ—
ual datasets (including their Shannon Entropy) can be found in
Section S3.

3.1.5 Experimental condition 1.' easy datasets The first group
of datasets contained query sequences from known genomes
(all the genomes were present in the training sets of at least
one of the marker—based methods) and had low rates of sequen—
cing error (insertions, deletions and substitutions).

Table 1. Properties of the simulated datasets

The easy datasets are separated into two different conditions:
long read datasets (average length of 200 to 1000 nucleotides)
and short read datasets (average length of 100 nucleotides or
shorter). The long read datasets include the FACS HC simulated
dataset (Stranneheim et al., 2010), the FAMeS LC, MC and
HC datasets (Mavromatis et al., 2007), and the WebCarma
HC—simulated dataset (Gerlach and Stoye, 2011). Both the
WebCarma and FACS dataset contained simulated 454 reads
and had an average indel rate of 3% per base. The FAMeS
dataset contained reads taken from Sanger sequencing projects,
and thus, is expected to have very low rates of sequencing error
[typically <1% error per base (Shendure and Ji, 2008)]. The ori—
ginal FACS HC dataset contained viral, bacterial, and human
sequences, and we removed the viral and human sequences so
that profiles were estimated only on bacterial reads. The short
read datasets include the MetaPhlAn HC and LC—simulated
datasets (Segata et al., 2012), the TIPP FACS HC Illumina—
simulated dataset, and the TIPP WebCarma HC Illumina—
simulated dataset; the last two datasets were generated using
MetaSim (Richter et al., 2008) to simulate Illumina reads from
the metagenomes used in the original FACS HC and WebCarma
HC datasets. The short read datasets contain simulated Illumina
reads with at most 0.2% substitutions per base.

3.1.6 Experimental condition 2: datasets with high rates of indel
errors The second group of datasets was modified versions
of the easy datasets with additional indels to make analyses
more difficult. The easy datasets contained reads with less than
0.2% substitution errors per base or less than 3% indel errors
per base. We inserted additional indel sequencing errors to the
query sequences in the easy datasets, using indel rates typical
of PACBio reads (12% insertion and 2% deletion error rate
per base (Carneiro et al., 2012)). Details can be found in
Section S3.6.

 

 

Dataset Experiment # Genomes Complexity # Reads Length
MetaPhlAn HC 1&2 100 High 1000000 88 (s)
MetaPhlAn LC 1&2 25 Low 240000 88 (s)
FAMeS HC 1&2 113 High 116771 949 (l)
FAMeS MC 1&2 113 Medium 114457 969 (l)
FAMeS LC 1&2 113 Low 97495 951 (l)
FACS HC-454 1&2 19 High 26984 268 (l)
TIPP FACS HC-Illum 1&2 19 High 300000 100 (s)
WebCarma-454 1&2 25 High 25000 265 (l)
TIPP WebCarma-Illum 1&2 25 High 300000 100 (s)
TIPP HC novel-Illum 3 100 High 1000000 100 (s)
TIPP LC novel-Illum 3 100 Low 1000000 100 (s)
TIPP HC novel-454 3 100 High 1000000 269 (l)
TIPP LC novel-454 3 100 Low 1000000 269 (l)

 

Eleven basic datasets were used in this study, but each dataset has two versions 7 a low error model (with mostly substitutions and few or no
indels) and a high error model (where the indel rate is high); see text for details about the error models for all datasets. Datasets labelled
‘TIPP’ were generated for this study; the rest are datasets previously studied in the literature. ‘Experiment’ specifies the experiments where
each dataset is used. The low indel versions are studied in Experiments 1 and 3, and the high indel versions are studied in Experiments 2
and 3. The number of genomes in the dataset is given in the column labelled ‘# Genomes’. The complexity of the dataset is given in the
column labelled ‘Complexity’. The number of reads in the dataset is given in the column labelled ‘# Reads’. ‘Length’ refers to the average
length of the reads for the low indel version of the dataset (‘s’ and ‘1’ refer to short and long).

 

3551

ﬁm'spzumofpmﬂo'sopeuuopnotq/pdnq

L ng sequence easy datasets

S on sequence easy datasets

 

 

/310'S[BIIJHO[pJOJXO'SOlNZLUJOJIIlOlq/ﬂduq

Long sequence high indel datasets

Short sequence high indel datasets

Easy long read novel datasets

High indel long read novel datasets

Method NBC PhymmBL

Easy short read novel datasets

High indel short read novel datasets

 

MetaPhlAn Metaphyler mOTU TIPP

/3.10'spzum0[p10}x0'sopctuJOJutotq”:duq

N.-p.Nguyen et al.

 

characterized very few reads (see Supplementary Table S8).
Finally, PhymmBL was clearly more accurate than
MetaPhlAn, which was more accurate then NBC.

On the short read novel genome datasets (right column), TIPP
and MetaPhyler were distinctly more accurate than all other
methods for both easy datasets and high indel datasets
(with TIPP slightly more accurate in the presence of high
indels, and MetaPhyler slightly more accurate on the easy data—
sets). The performance of mOTU was interesting: on the easy
short read novel genome datasets, mOTU was very close to
PhymmBL but slightly less accurate; however, mOTU failed to
complete on the high indel short read datasets (terminated with
an error message, see Supplementary Section S1.6). The other
methods were largely indistinguishable from each other, but
much less accurate than both TIPP and MetaPhyler.

4.1 Running time

We generated ﬁve replicates from the easy TIPP HC datasets,
varying the total number of fragments from 500,000 to 2,000,000
fragments. PhymmBL and NBC failed to complete within 48 h
on any of these datasets (see Supplementary Section S1.4), but
the other methods completed all analyses, most within an hour.
The fastest method was mOTU, which completed in <7 min on
2,000,000 fragments for both short and long reads. TIPP ﬁnished
in under an hour on both short and long fragments. MetaPhlAn
required <25 min on short fragments, but used 90 min on
long fragments. MetaPhyler completed in <13 min for short frag—
ments, but used 29 h for long fragments.

5 DISCUSSION

The study compared four marker—based methods (mOTU, TIPP,
MetaPhyler and MetaPhlAn) and two composition—based meth—
ods (PhymmBL and NBC) on a collection of datasets. On the
easy datasets with only known genomes (Experiment 1), many
methods produced highly accurate abundance proﬁles, although
which method was the best depended on the read length. On the
easy short read datasets the most accurate methods were mOTU,
MetaPhlAn and TIPP, while the most accurate methods on the
easy long read datasets were TIPP and NBC, with MetaPhlAn a
close third.

However, when datasets had novel genomes or high indel error
rates, the performance of most methods degraded significantly.
For example, while NBC had excellent accuracy on the easy long
read datasets, it had poor accuracy in the presence of high indel
rates. Similarly, although mOTU had excellent accuracy on easy
short read datasets with known genomes, it had poor perform—
ance on short read datasets with novel genomes and terminated
with an error message on the datasets with high indel rates.
We also saw that MetaPhyler had difﬁculties on datasets with
long sequences and high indels (Experiments 2 and 3).

TIPP did well on the easy datasets (known genomes with low
sequencing error rates), where it tied for ﬁrst with other methods.
However, TIPP was the only method that was robust to all the
tested model conditions (short versus long reads, novel versus
known genomes, low indel versus high indel error rates), so
that it was either ﬁrst or tied for ﬁrst under even very difficult
conditions (novel genomes with high indel rates). Consequently,

TIPP dominated the other methods in terms of overall
performance.

Thus, one of the main features of TIPP is its relative robust—
ness to sequencing errors (both substitutions and indels) and its
ability to perform well on novel genomes. We conjecture that the
HMM Family technique within TIPP provides this robustness,
which uses HMMs in a divide—and—conquer framework, and also
beneﬁts from the use of local alignment techniques.

Therefore, the high error rates commonly encountered in
single—molecule sequencing technologies [up to 14% indel rate
for Paciﬁc Biosciences technologies (Carneiro et al., 2012)] that
are likely to be increasingly used in the context of metagenomic
data may not be particularly problematic for TIPP, even when
the data contain novel genomes. Instead, our results indicate
that TIPP may well continue to have good accuracy with new
sequencing technologies that result in reduced data quality.

One of the interesting observations in this study is that
the marker—based methods (TIPP, MetaPhlAn, mOTU and
MetaPhyler) often gave more accurate abundance proﬁles than
the composition—based methods (NBC and PhymmBL), even
though marker—based methods estimate abundance proﬁles by
characterizing only those reads that map to their selected
marker genes. These results show that accurate profiles can be
obtained by taxonomic characterization of only a fraction of the
query sequences. However, the choice of marker genes, and the
technique used to bin the reads to the markers, has an impact on
the resultant abundance proﬁle. Thus, future research should
investigate whether improved performance can be obtained
using a different set of marker genes and different techniques
to map reads to the marker genes. Also, our abundance proﬁle
estimates were based on combining all reads for all markers into
one set, and using the distribution estimated for that set; more
sophisticated techniques could be used to combine distributions
estimated for each marker.

ACKNOWLEDGEMENTS

The authors thank Sean Eddy for his help with the derivations
of the probability that a query sequence is generated by one
HMM in a set of HMMs. The authors also thank the
Huttenhower lab for sharing the synthetic data with us for the
taxonomic proﬁling experiment.

Funding: This research was partially supported by a Guggenheim
Foundation Fellowship to T.W.; National Science Foundation
grants DBI-1062335, DBI—1461364 and DEB 0733029 to T.W.;
an HHMI International Predoctoral Fellowship to S.M.; the
iPlant Collaborative US. National Science Foundation grant
DBI—1265383 (via TACC) to N.N.; and National Institutes of
Health grant R01—AI—100947 to M.P. Some of this work was
performed while T.W. was a program director working for the
US National Science Foundation, and supported by the IR/D
program.

REFERENCES

Abe,T. et ul. (2006) A novel bioinformatics tool for phylogenetic classiﬁcation
of genomic sequence fragments derived from mixed genomes of uncultured
environmental microbes. Polar Biosci, 20, 1037112.

 

3554

ﬁle'sreumofpmJXO'sopeuuowrorq/pdnq

TIPP

 

Altschul,S., Gish,W. and Miller,W. (1990) Basic local alignment search tool.
J. Mol. Biol, 215, 4034110.

Brady,A. and Salzberg,S.L. (2009) Phymm and PhymmBL: metagenomic phylo—
genetic classiﬁcation with interpolated Markov models. Nat. Methods, 6,
6737676.

Brady,A. and Salzberg,S.L. (2011) PhymmBL expanded: conﬁdence scores, custom
databases, parallelization and more. Nat. Methods, 8, 367.

Carneiro,M.O. et al. (2012) Paciﬁc biosciences sequencing technology
for genotyping and variation discovery in human data. BMC Genomics,
13, 375.

Eddy,S.R. (1998) Proﬁle hidden Markov models. Bioinformatics, 14, 7557763.

Ewing,B. and Green,P. (1998) Base—calling of automated sequencer traces using
phred. II. Error probabilities. Genome Res., 8, 18(r194.

Gerlach,W. and Stoye,]. (2011) Taxonomic classiﬁcation of metagenomic shotgun
sequences with CARMA3. Nucleic Acids Res., 39, e91.

Huson,D.H. et al. (2007) MEGAN analysis of metagenomic data. Genome Res., 17,
3777386.

Koski,L.B. and Golding,G.B. (2001) The closest BLAST hit is often not the nearest
neighbor. J. Mol. Evol, 52, 5407542.

Liu,B. et al. (2010) Metaphyler: Taxonomic proﬁling for metagenomic sequences.
In: 2010 IEEE International Conference on Bioinformatics and Biomedicine
(BIBM). pp. 9&100.

Liu,B. et al. (2011) Accurate and fast estimation of taxonomic proﬁles from
metagenomic shotgun sequences. BMC Genomics, 12, S4.

Liu,K. et al. (2009) Rapid and accurate large—scale coestimation of sequence
alignments and phylogenetic trees. Science, 324, 156171564.

Liu,K. et al. (2012) SATe—II: very fast and accurate simultaneous estimation
of multiple sequence alignments and phylogenetic trees. Syst. Biol, 61,
9&106.

Matsen,F.A., Kodner,R.B. and Armbrust,E.V. (2010) pplacer: linear time
maximum—likelihood and Bayesian phylogenetic placement of sequences onto
a ﬁxed reference tree. BMC Bioinformatics, 11, 538.

Mavromatis,K., Ivanova,N. and Barry,K. (2007) Use of simulated data sets to evalu—
ate the ﬁdelity of metagenomic processing methods. Nat. Methods, 4, 4957500.

McHardy,A.C. et al. (2007) Accurate phylogenetic classiﬁcation of variable—length
DNA fragments. Nat. Methods, 4, 63772.

Mende,D.R. et al. (2013) Accurate and universal delineation of prokaryotic species.
Nat. Methods, 10, 8817884.

Patil,K.R. et al. (2011) Taxonomic metagenome sequence assignment with struc—
tured output models. Nat. Methods, 8, 1917192.

Rao,C. (1995) A review of canonical coordinates and an alternative to correspond—
ence analysis using Hellinger distance. Questiio, l9, 23%3.

Richter,D.C. et al. (2008) MetaSim: a sequencing simulator for genomics and
metagenomics. PloS One, 3, e3373.

Rosen,G.L., Reichenberger,E.R. and Rosenfeld,A.M. (2011) NBC: the Naive Bayes
Classiﬁcation tool webserver for taxonomic classiﬁcation of metagenomic reads.
Bioinformatics, 27, 1277129.

Segata,N. et al. (2012) Efﬁcient metagenomic microbial community proﬁling using
unique clade—speciﬁc marker genes. Nat. Methods, 9, 8117814.

Shendure,J. and Ji,H. (2008) Next—generation DNA sequencing. Nat. Biotechnol,
26, 113?1145.

Stamatakis,A. (2006) RAxML—VI—HPC: maximum likelihood—based phylogenetic
analyses with thousands of taxa and mixed models. Bioinformatics, 22,
268872690.

Stranneheim,H. et al. (2010) Classiﬁcation of DNA sequences using Bloom ﬁlters.
Bioinformatics, 26, 159571600.

Sunagawa,S. et al. (2013) Metagenomic species proﬁling using universal
phylogenetic marker genes. Nat. Methods, 10, 119671199.

 

3555

ﬁle'sreumofpmJXO'sopeuuowrorq/pdnq

