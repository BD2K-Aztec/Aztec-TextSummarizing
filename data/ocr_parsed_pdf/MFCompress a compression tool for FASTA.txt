BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

A.J.Pinho and D.Pratas

 

most of the information of the four DNA bases. Both upper and
lower case characters representing the four DNA bases are converted
to this four-symbol alphabet. If characters other than the four DNA
bases are also present, they are all mapped to the ‘0’ symbol in the
main stream.

When the sequences contain other characters besides the DNA bases,
another coding stream must be present to disambiguate the occurrences
of the ‘0’ symbol in the main stream. This extra stream is responsible for
representing all non-acgt/ACGT characters that have been found in the
sequences, as well as to indicate when the ‘0’ in the main stream is an a/A
DNA base.

If the sequences contain both DNA bases in upper and lower case, an
additional binary symbol is associated to each symbol in the main stream,
indicating the respective case type (the case stream).

A more detailed description of the methods is provided in the
Supplementary Material.

3 RESULTS AND DISCUSSION

In the Supplementary Material, we provide compression results
obtained using several popular general purpose compression
methods, namely gzip, bzip2, ppmd and lzma (the last two
using the versions implemented in the 7z archiver), as well as
by the recent special purpose compressor DELIMINATE
(Mohammed et al., 2012) and by the compressor that we describe
in this article.

Supplementary Table S1 in the Supplementary Material shows
the total compressed ﬁle size, in bytes, obtained with gzip in the
FFN and FNA datasets (composed of all bacteria in the NCBI),
as well as the compressing gains attained by the other methods in
relation to gzip. We can see that MFCompress provides a com—
pression gain of ~3.5% in relation to DELIMINATE for the
FFN dataset and of ~4% for the FNA dataset. Compared with
gzip, the compression gain of MFCompress is ~25%.

In Supplementary Table S2 of the Supplementary Material, we
present the compression results for the human genome dataset
(HG19). The gain of the default mode of MFCompress is mar—
ginal in comparison with DELIMINATE (only 1.8%). For the
more complex coding mode, the gain is ~3.3%. In relation to
gzip, the gain is >34%.

Regarding the CAMERA dataset, in Supplementary Table S4
of the Supplementary Material, we provide compression results
regarding the 26 ﬁles that have been used in this dataset, showing
signiﬁcant gains over DELIMINATE for most of them. To give
a wide range of examples, we chose ﬁles with sizes from ~5 x 105
to >3.5 x 1010 characters, i.e. covering five orders of magnitude.
For three of these ﬁles, DELIMINATE was not able to provide
reliable results: in two cases the decoded file was different from
the original ﬁle and in one case the encoder crashed. In relation
to gzip, the size was reduced to almost half.

In Supplementary Table S5 of the Supplementary Material, we
show the compression results of two highly redundant datasets
(all Escherichia and Salmonella genomes of the FNA dataset). In
this case, MFCompress attained an 8—fold ﬁle size reduction over
gzip and >44% gain in relation to DELIMINATE.

4 CONCLUSION

For daily use, general purpose compression tools, such as gzip,
may continue to play an important role in the context of genomic
data processing, mainly due to its pervasiveness and relatively
good speed. However, as shown in this article, special purpose
compression tools can sometimes attain additional ﬁle reductions
as large as 50% or even more, in relation to gzip. In our opinion,
the possibility to virtually double the amount of sequence data
that can be stored in a given space, exclusively by means of
software compression tools, is an opportunity worthy of consid—
eration by the genomic laboratories. Higher compression can
only be obtained using more complex algorithms, often requiring
some more time and memory to run. However, these additional
requirements are compensated by the relief attained in terms of
storage requirements. In conclusion, we believe that the compres—
sion tool reported in this article is a relevant contribution to slow
down the negative impact of the data deluge that we are facing
nowadays.

Funding: European Fund for Regional Development (FEDER)
through the Operational Program Competitiveness Factors
(COMPETE) and by the Portuguese Foundation for Science
and Technology (FCT), in the context of projects FCOMP—01—
0124-FEDER-022682 (FCT reference PEst—C/ EEI/U10127/201 1)
and Incentivo/EEI/UIOl27/2013.

Conﬂict of Interest: none declared.

REFERENCES

Berger,B. et al. (2013) Computational solutions for omics data. Nat. Rev. Genet, 14,
3337346.

Bonﬁeld,J.K. and Mahoney,M.V. (2013) Compression of FASTQ and SAM format
sequencing data. PLoS One, 8, e59190.

Cao,M.D. et al. (2007) A simple statistical algorithm for biological sequence com—
pression. In: Data Compression Conference, DCC—2007, Snowbird, Utah. IEEE
Computer Society, pp. 43752.

Cox,A.J. et al. (2012) Large—scale compression of genomic sequence databases with
the Burrows—Wheeler transform. Bioinformatics, 28, 141571419.

Grumbach,S. and Tahi,F. (1993) Compression of DNA sequences. In: Data
Compression Conference, DCC—93, Snowbird, Utah. IEEE Computer Society,
pp. 34(F350.

Hach,F. et al. (2012) SCALCE: boosting sequence compression algorithms using
locally consistent encoding. Bioinformatics, 28, 305173057.

Jones,D.C. et al. (2012) Compression of next—generation sequencing reads aided by
highly efﬁcient de novo assembly. Nucleic Acids Res., 40, e171.

Korodi,G. and Tabus,I. (2007) Normalized maximum likelihood model of order—1
for the compression of DNA sequences. In: Data Compression Conference,
DCC—2007, Snowbird, Utah. IEEE Computer Society, pp. 33412.

Matos,L.M.O. et al. (2013) A compression model for DNA multiple sequence align—
ment blocks. IEEE Trans. Inf. Theory, 59, 318973198.

Mohammed,M.H. et al. (2012) DELIMINATE — a fast and efﬁcient method for
loss—less compression of genomic sequences. Bioiiy’ormatics, 28, 252772529.
Pinho,A.J. et al. (2011) On the representability of complete genomes by multiple

competing ﬁnite—context (Markov) models. PLoS One, 6, e21588.

Pinho,A.J. et al. (2012) GReEn: a tool for efﬁcient compression of genome rese—
quencing data. Nucleic Acids Res., 40, e27.

Popitsch,N. and Haeseler,A. (2013) NGC: lossless and lossy compression of aligned
high—throughput sequencing data. Nucleic Acids Res., 41, e27.

 

118

ﬁm'spzumol‘pmﬂo'sopeuuopuotq/pdnq

