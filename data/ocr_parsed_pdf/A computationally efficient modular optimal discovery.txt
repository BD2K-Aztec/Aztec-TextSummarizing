ORIGINAL PAPER

Vol. 27 no. 4 2011, pages 509-515
doi:1 0. 1 093/bioinformatics/btq701

 

Gene expression

Advance Access publication December 24, 2010

A computationally efficient modular optimal discovery procedure

Sangsoon Wool, Jeffrey T. Leek2 and John D. Storey3a*

1Department of Biostatistics, University of Washington, Seattle, WA 98195, 2Department of Biostatistics, Johns
Hopkins Bloomberg School of Public Health, Baltimore, MD 21205 and 3Lewis—Sigler Institute for Integrative
Genomics and Department of Molecular Biology, Princeton University, Princeton, NJ 08544, USA

Associate Editor: Trey Ideker

 

ABSTRACT

Motivation: It is well known that patterns of differential gene
expression across biological conditions are often shared by many
genes, particularly those within functional groups. Taking advantage
of these patterns can lead to increased statistical power and
biological clarity when testing for differential expression in a
microarray experiment. The optimal discovery procedure (ODP),
which maximizes the expected number of true positives for each
fixed number of expected false positives, is a framework aimed at this
goal. Storey et al. introduced an estimator of the ODP for identifying
differentially expressed genes. However, their ODP estimator grows
quadratically in computational time with respect to the number of
genes. Reducing this computational burden is a key step in making
the ODP practical for usage in a variety of high-throughput problems.
Results: Here, we propose a new estimate of the ODP called
the modular ODP (mODP). The existing ‘full ODP’ requires that
the likelihood function for each gene be evaluated according
to the parameter estimates for all genes. The mODP assigns
genes to modules according to a Kullback—Leibler distance, and
then evaluates the statistic only at the module-averaged parameter
estimates. We show that the mODP is relatively insensitive to the
choice of the number of modules, but dramatically reduces the
computational complexity from quadratic to linear in the number of
genes. We compare the full ODP algorithm and mODP on simulated
data and gene expression data from a recent study of Morrocan
Amazighs. The mODP and full ODP algorithm perform very similarly
across a range of comparisons.

Availability: The mODP methodology has been implemented into
EDGE, a comprehensive gene expression analysis software package
in R, available at http://genomine.org/edge/.

Contact: jstorey@princeton.edu

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on August 12, 2010; revised on November 10, 2010;
accepted on December 15, 2010

1 INTRODUCTION

Since the development of microarrays, a large number of methods
have been proposed to identify genes that are differentially expressed
across biological conditions. Methods exist that borrow strength
across genes to shrink variances, apply data-adaptive thresholds
to traditional statistics or calculate hierarchical Bayesian posterior

 

*To whom correspondence should be addressed.

probabilities (Cui et (11., 2005; Efron et al., 2001; Lonnstedt and
Speed, 2002; Newton et (11., 2004; Smyth, 2004; Tusher et al.,
2001). Recently, Storey et a1. (2007) proposed an approach called
the optimal discovery procedure (ODP) that borrows strength
across genes with similar expression patterns when testing them
for differential expression. The ODP, which must be estimated in
practice, maximizes the expected number of true discoveries for a
ﬁxed expected number of false discoveries. This optimality property
makes the ODP an attractive choice for use in analyzing gene
expression and other high-throughput data.

Conceptually, the ODP uses information about differential
expression patterns across all genes to inform the decision about
any speciﬁc gene. Figure 1 shows a simple simulated dataset
that illustrates the ODP concept. The black box highlights the
genes that are differentially expressed among groups. The ﬁrst
set of differentially expressed genes are upregulated in the ﬁrst
two groups and downregulated in the third. The second set of
differentially expressed genes are downregulated in the second
group and upregulated in the ﬁrst and third. The third set is
upregulated in the second group and downregulated in the others.
In this example, each pattern of differential expression is shared
across genes. The number of genes sharing each pattern is different,
and only three of the six possible differential expression patterns
are present. The ODP directly utilizes this information, stemming
from the idea that if a gene shares an expression pattern with other
genes that have been identiﬁed as differentially expressed, then it is
more likely to be differentially expressed as well. It has been shown
that the ODP is more powerful for detecting differential expression
than existing methods such as the traditional t-test (or F -test), a
shrunken t-test, SAM and empirical Bayes methods (Storey et al.,
2005, 2007).

The ODP statistic is related to the commonly used likelihood ratio
(LR) test statistics, also known as the Neyman—Pearson statistic
(Lehmann, 1986). Suppose we have observed an n><1 vector of
expression data x,- for the i-th gene. The traditional LR statistic,
which is optimal when testing a single hypothesis, evaluates the
likelihood under the null hypothesis of no differential expression
for that gene Lio and the alternative hypothesis LiA, and forms their
ratio LiA (xi)/Li0(xi) as the test statistic. If the ratio is large enough,
then the gene is called differentially expressed.

The ODP has a similar structure, except the ratio is taken of
all alternative likelihoods to all null likelihoods given the gene’s
data xi, where these likelihoods are evaluated across all genes.
The ODP statistic is the ratio ZathA(xi)/Znu11Lj0(xi). As with
the LR statistics, the ODP statistic for a test also captures evidence
against the null hypothesis in favor of the alternative hypothesis.

 

© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com 509

112 /3.Io's[Bruno[pJOJXO'sorwuiJOJurorqﬂ:duq 11101} pQPBOIII/lAOG

9103 ‘Og anﬁnv uo ::

S. Woo et al.

 

genes

 

Fig. 1. A heatmap of simulated gene expression data for a study comparing
three groups. The genes inside the black box show three common gene
expression patterns; the ﬁrst pattern is downregulated for groups 1 and 2 and
upregulated for group 3. The second pattern is downregulated for groups 1
and 3 and upregulated for group 2. The third pattern is downregulated for
group 2 and upregulated for groups 1 and 3. The number of genes sharing each
pattern is different, and only three of the six possible differential expression
patterns are present. The ODP is designed to utilize these expression patterns
to improve inference of differential expression.

But in contrast to the univariate LR test, the ODP summarizes the
evidence against the null taking into account the information from
the other (possibly related) tests being performed. When another
gene is uninformative, it contributes essentially nothing to the above
ODP statistic because its likelihood is very low.

Although the ODP statistic is more powerﬁil than traditional
statistics developed for testing single hypotheses, it requires the
evaluation of a large number of likelihoods for each dataset. For
each gene, the number of terms to calculate in the ODP statistic is on
the order of the total number of genes, resulting in a computational
cost that grows quadratically in the number of genes when doing
a genome-wide analysis. The original ODP estimator introduced in
Storey et al. (2007) performs this exhaustive set of calculations.
However, if groups of genes share common expression patterns,
they will have similar probability distributions, and therefore their
calculations can be compressed into a single computational step.
Here, we propose to identify modules of genes based on similarity
of probability distributions using a clustering scheme based on the
Kullback—Leibler distance. The ODP statistic can then be calculated
using only the distributions derived from the centroids of these
modules and weighted by the number of genes in that module. Since
the number of modules is much smaller than the number of genes,
the ODP computation will be substantially reduced. However, the
performance of and results from the modular ODP approach are
very similar to the full ODP approach. In addition to a substantial
reduction of computation, the unknown parameters for each centroid
can be accurately estimated because multiple genes are used.

2 THE OPTIMAL DISCOVERY PROCEDURE

Gene expression and other high-throughput data can be thought of
as a set of related experiments performed simultaneously. Suppose

there are m genes in an experiment; then for each gene there is
an n><1 vector of data xi corresponding to the gene expression
measurements, for each of n individuals for that gene. A usual goal
in high-throughput data analysis is to test a statistical hypothesis
for each gene, for example, testing the hypotheses that each gene
has constant expression across some groups of interest versus the
hypotheses that some genes mean expression varies by group. In
other words, testing the hypotheses: H0 : [Li = M101 versus H1 I’Li =
[Lil Where It} parameterizes difference in means across samples.

For simplicity, in the remainder of the discussion we will assume
that the data xi are sample of n independent observations from a
Normal distribution with mean vector [Li and common variance 01.2.
However, any other data generating distribution can be substituted
in the discussion and methods that follow. For Normal distributed
data, the likelihood is

Zn -(1i/-#i/)2
'=1 2
e I 2"i .

L(Mi.UiIXi)= —
27101.2

The so-called generalized LR test is an approximation to the most
powerﬁil test given a ﬁxed type one error rate. Using the Normal
model, the generalized LR test statistic is given by

A1 A1 .
31R (Xi) = W 7
LULZ‘ 7 0i IXi)
where  ,6?) and (ﬁg???) are the maximum likelihood parameter
estimates under the alternative and the null hypotheses, respectively
(Lehmann, 1986). In the case of Normal data for a two sample
comparison, the generalized LR statistic is equivalent to the standard
two-sided t-test. However, the LR statistic is far more general and
can be ﬁt to a wide range of data types.

The ODP uses a concept similar to the Neyman—Pearson
approach, except the ODP approach was developed for testing
multiple hypotheses. Rather than maximizing the power for a ﬁxed
false positive rate of a single test, the ODP maximizes the overall
number of expected true positives (ETP) for a ﬁxed level of expected
false positives (EFP) among multiple hypothesis tests. The ETP is
simply the sum of the power across all truly alternative tests and the
EFF is the sum of the false positive rates across all truly null tests.
The ODP, like the LR test, is optimal when the null and alternative
distributions are known. The ODP can be estimated by using the
same principles for forming the generalized LR statistics, which is
an estimate of the theoretical optimal Neyman—Pearson LR statistic.

For identifying differentially expressed genes in a microarray
study, a simple estimate of the full ODP has been developed (Storey
et al., 2007). The ﬁrst step is to calculate the maximum likelihood
estimates for each gene under the alternative and null hypotheses,
(ﬁgfé) and (ﬁg???) for i =1,...,m. To calculate the estimated
full ODP statistic for a given gene, the gene’s likelihood function
is evaluated at all of these ﬁtted maximum likelihood estimates,
summed over all tests, and the ratio between the alternative
likelihood sum to the null likelihood sum is formed. In mathematical
notation, the estimated ODP statistic for gene i can be written as

follows:
2 m Lola-1k)
 M]? J l

m *0 A0 , '
ijluuj .aj le)

$1.4m): <1)

 

510

112 /3.Io's[BrunoprOJXO'sorwuiJOJurorq”:duq 1110.1} popBonr/vxoq

9IOZ ‘OE ISUEHV Ho ::

A computationally efficient modular ODP

 

 

 

 

 

 

{Iul 51“? "1' ‘ Hum}
II I I I II I IIIIIII “III III IIII I I ll II
o _ I,»’\\ .r---._
  .- 1»
LIHIXS) If '-I d J. Ix13I
A l _
m 1“ 5='2  ".   I" 13— 2
3 C) III  III II
:1. f '. 0 'I,
:- II I! ll' 1
E3 — r' I. i "
£ i I. T *1
E 1'  3 t
_ II II "I II.
3 —  "1 -‘ 
i  
g‘ —-"/ "'“o—O—‘r/ 

 

.5 4 .2 n 2 4 6
parameter, 11

Fig. 2. A demonstration of the difference between the ODP approach and
LR statistic. Suppose that hypothesis tests H0: p.20 versus H1 41,750 are
performed on 11.1 ,1”, . . .,p.,,, based on respective datasets x1,x2,...,xm.
Shown are the likelihood functions for test 5, L([,L|X5) in red, and test
13, L(p.|x13) in blue. Their maximum likelihood estimates are such that
L025 |X5)= L(ﬁ13 |x13), implying that they would produce equal LR statistics.
The ODP utilizes information from all of the maximum likelihood estimates
TIL/122, ...,IZ,,,, shown at the top of the plot. These tend to be more similar
to II 13 than ﬁs, lending greater evidence against the null hypothesis for test
13. The ODP quantiﬁes this evidence by calculating the likelihood functions
over all maximum likelihood estimates, shown as red dots for test 5 and in
blue dots for test 13. It can be seen that 2;:1L(ﬁj|x13)>> 2;:1L(ﬁj|xs),
implying that the ODP statistic for test 13 would be larger than that for
test 5. This makes sense in that there are many more positive IZJ- than
negative, so we should attribute stronger evidence against the null hypothesis
to those tests with positive estimates. In more complex situations such as
those encountered in gene expression studies, this aggregation of information
becomes even more useful.

An intuitive understanding of the ODP statistic and how it relates
to the traditional LR statistic is explained in Figure 2. Storey
et a1. (2007) presented a more general form of (1) as well as
some steps one may take to remove ancillary information, which
may be incorporated into our proposed method (see Supplementary
Material).

Evaluating (1) requires 2m likelihood calculations for each
of the m tests, resulting in 2m2 likelihood calculations. The
statistical signiﬁcance for this ﬁill ODP statistic is evaluated using
a bootstrap procedure. Because the ODP statistic is estimated for
each bootstrapped dataset, this can lead to substantial computational
costs.

In most experiments, the data for many features will follow a
common pattern of variation. The pattern of variation that is relevant
to the inference is that captured by the probability distribution used to
model each gene’s data, parameterized by the (M1307). If genes (1 and
b have similar relevant patterns of variation, then (lid , ea) 8 (lib, ab),
as well as their likelihood values L(/ia,aa|xi)BL(/ib,ab|xi) for
any given gene 1'. Thus, it is not necessary to do each calculation
individually in (1), but rather approximate them with a single

‘average’ calculation. There may be many more than two genes
with common patterns of variation, thereby allowing us to reduce
the computation even ﬁirther.

A key problem is how to decide if (lid , ea) 8 (lib,ob), and how to
identify larger sets of genes with this similarity. Even more so, we
want L(/ia,oa|x)BL(/ib,ob|xi) for all genes i=1,...,m, because
agglomerating genes (1 and b in the ODP statistic will be applied
in the calculation of every gene’s ODP statistic. To this end, we
use a modiﬁed Kullback—Leibler divergence (Kullback and Leibler,
1961), which indeed quantiﬁes the probabilistic distance between
L(ﬁa,3a Ix) and L(ﬁb,3b|x) over all x e R". The Kullback—Leibler
divergence measures the discrepancy between two distributions.
Because the Kullback—Leibler divergence is asymmetric, we use
a symmetric version that is sometimes called the Kullback—Leibler
distance.

We assign each gene to one of K modules by utilizing a clustering
algorithm based on the Kullback—Leibler distance (Nielsen and
Nock, 2009). This creates K centroid estimates of the parameters
for the alternative model ﬁts and the null model ﬁts. Then for
each gene, we only evaluate its likelihood function at the centroid
parameters and weight it by the number of genes in that module.
Since the number of modules is much smaller than the number of
genes, this approach substantially reduces the computational burden
of the approach. We reduce 2m2 calculations to 2Km, where K <<m.
If K stays approximately ﬁxed, then the computational cost of the
proposed modular ODP (mODP) algorithm grows linearly in the
number of genes. At the same time, we show that the mODP gives
nearly identical inference results to the original ﬁill ODP estimate.

3 METHODS

Our approach to calculating the ODP statistics has three steps: (i) cluster
genes into K modules based on similarity of expression variation captured by
the KullbackiLeibler distance; (11) evaluate each gene’s likelihood function
at each module centroid model ﬁt, weighted by the number of genes assigned
to that module; and (iii) aggregate these weighted centroid likelihood
calculations into modular ODP (mODP) statistics.

For the ﬁrst step, we use a modiﬁcation of the well-known Kullbacki
Leibler (KL) divergence as our metric for measuring how similar two genes”
estimated probability distributions are. Let F a and F}, be two continuous
probability distributions with a common support and corresponding
probability density functions, fa and fb. The KL divergence between these
two distributions is given by

KL(F.,.F;,) = Ep. [log(fa(x>/fi(x))]
= flogvarxvfirmvarxwx.

The KL divergence is not a symmetric measure, so we use the following KL
distance:

d(F,,,F,,) =KL(F,,,F,,) +KL(F,,,F,,).
The KL distance between two of the Normal distributions that we consider
here is calculated to be:

d(N(u..a3>.N(ui.a§>)=

1 T 1 1 n :73 0,3

EULa—Mb) (Ma—Mb) —2+—2 +— —2+—2 —”-
an ab 2 ob a”

We construct modules by extending K-means clustering (Nielsen and
Nock, 2009), which is typically based on Euclidean distance of a gene’s
expression vector to that of K cluster centroids, to a KL distance-based

 

511

112 /3.Io's[BrunoprOJXO'sonBHJJOJurorq”:duq 11101} papBOIIIAAOG

9103 ‘0g1sn8nv uo ::

S.Woo et al.

 

approach. The distance between a gene and a module is based on the
KL distance between the gene”s estimated probability distribution and the
‘average distribution” of the genes within a module. The mODP estimation
algorithm proceeds as shown below. We represent the gene”s estimated
probability distribution by its maximum likelihood parameters under the
alternative hypothesis,  ,6?) The ‘average distribution” of the module is
simply based on the average of the parameter estimates for every gene in that
module. Therefore, the approach by which we construct clusters is derived
from K -means clustering, except we replace Euclidean distance with KL
distance, and we replace expression vectors and centroids with parameter
estimates and averaged parameter estimates.

In constructing modules, we use the alternative hypothesis estimates
rather than the null hypothesis estimates because the former is ﬁt under
the unconstrained model, thereby allowing for each gene to be truly null or
truly alternative without having to introduce an extra estimation step. Also,
when incorporating data transformations to remove ancillary information,
as proposed by Storey at al. (2007) (see Supplementary Material), we get
 = 0 for all 1' making them uninformative for module construction.

Once the module construction is completed [step (i) above], then steps
(11) and (iii) become straightforward. Our proposed method is summarized
in the following algorithm.

 

Algorithm. The Modular Optimal Discovery Procedure (mODP)

 

1. For a user-chosen number of modules K , initiate the module parameter
estimates by randomly selecting K of the in genes and setting their
alternative hypothesis estimates to be the module parameter estimates.
Speciﬁcally, for k = 1, ...,K, the module k is parameterized by [1k =ﬁ;<k)
and &k 231.1%), where [(k) is a randomly chosen gene index among the
m.

2. For each gene i=1,...,m and each module k=1,...,K, calculate their
KL distance using the formula:

d» —1(" “W N) i+L
lk—2M’k It, Mk M, 613 (3102

n 5,2 (3.1)2
+§<ﬁ+ jz —n.
(‘5’) Uk

3. Assign gene 1' to the closest module in terms of KL distance, calculated
by argminlSkSK dik.

4. For these new module assignments, calculate their updated parameters.
Let Rk be the set of indices of genes assigned to module k and |Rk| be
the number of genes in that module.

 

.. 1 A]
Mk = — u,-
IRkIjeRk
1 2
5’13 = m (31") -
k fERk

5. Repeat Steps 24 until the centroids are ﬁxed in the sense that [1k and
5']? differ less than a user chosen 6 between two consecutive iterations.
Calculate the ﬁnal module estimates under the alternative and null
hypotheses as follows:

 

6. For each gene 1' = 1,2, . . . ,m, calculate the mODP statistics according to
the following formula:
A Ziiluﬂlﬁi ix,» IRkI
SmODP(Xi) = W-
ZkzlL(Mkak IXi)' lel

7. From the mODP formula above, obtain P-Values and FDR q-Values by
using the bootstrap, exactly as proposed in Storey at al. (2007).

(2)

 

The mODP algorithm requires the user to choose the number of modules
K in advance. Estimating the number of clusters in data is a notoriously
difﬁcult problem, because much biological interpretation is made of the genes
contained in each cluster. However, in our setting, the clustering may be used
simply as a numerical tool, making this choice much less crucial in that one
is not required to make any biological interpretation of the clusters. The rule
of thumb we propose is to set K large enough so that K is greater than the
number of distinct patterns of expression variation, but not so large that the
gain in computational speed is diminished. In the numerical results below,
we have observed that K: 50 seems to be a well behaved choice. This may
be data dependent, but one may always compare the results for different
values of K , as we do below, before making a ﬁnal choice.

On the other hand, embedded in our mODP method is a potentially useful
new clustering algorithm. Whereas clustering is typically performed in an
unsupervised manner, our algorithm allows one to cluster genes based on how
the model of interest ﬁts the data. In such a case, the choice of K becomes
more important and exploring a data-driven choice of the number of clusters
may be more relevant. It is also possible that this clustering algorithm driven
by study design could be incorporated with more sophisticated modular
clustering frameworks (Zhang and Horvath, 2005). While this is potentially
a very interesting direction, it is beyond the scope of this work.

4 RESULTS

The mODP estimator (2) has two advantages over the full ODP
estimator (1). First, the number of modules is generally much smaller
than the number genes (K << m), thereby dramatically reducing the
computational burden. The second advantage is that the averaged
parameter ﬁts within each module will be more stable than individual
gene’s parameter estimates. We now compare the behavior of the
mODP estimator to the ﬁill ODP estimator both on simulated gene
expression data and on data from a study comparing gene expression
levels in human leukocytes from individuals living in three different
environments. We show below that the mODP algorithm offers
nearly identical results as the ﬁill ODP, while indeed requiring
substantially less computing time.

4.1 Simulation results

We compared the mODP to the full ODP on a range of simulated
examples; the R code and details of the simulations appear in the
Supplementary Material. First, we compared the computational time
for the full ODP approach versus the mODP approach with K :50.
Figure 3 shows the relative CPU times required to calculate the
mODP and ﬁill ODP statistics for a set of genes under one of
the simulation scenarios, as the number of genes increases from
100 to 10000. (The other scenarios show equivalent results.) The
computational time for the mODP, which includes the time required
for clustering, grows nearly linearly in the number of genes, while
the ﬁill ODP is closer to quadratic growth. Given that the ODP
statistics must be recomputed for all genes for each null bootstrap

 

512

112 /3.Io's[BrunoprOJXO'soiwuiJOJurorq”:duq 111011 papBo1u/vxoq

9103 ‘0g1sn8nv uo ::

A computationally efficient modular ODP

 

 

— Full ODP
Modular ODP

 

 

relative CPU time

 

 

 

u l I I u
o 2000 4000 soon 5000 10000
number of genes

Fig. 3. A plot of relative CPU time for increasing numbers of genes for the
mODP and the full ODP estimators under one of the simulation scenarios.
The full ODP grows approximately quadratically in the number of genes
while the mODP grows nearly linearly.

sample, the computational savings can be substantial in practice. To
make this comparison, we used an Apple Mac Pro machine with OS
X version 10.5.8, 2.66 GHz Intel Core 2 Duo processor and 4 GB of
RAM.

Next we examined whether the mODP statistics produce similar
results to the ﬁill ODP statistics. Our simulations followed the
structure from the simulation study in Storey et (11. (2007) to provide
comparable results. The ﬁill ODP has already been compared to a
number of other popular methods (Cui et (11., 2005; Efron et (11.,
2001; Lonnstedt and Speed, 2002; Smyth, 2004; Tusher et (11., 2001)
in Storey et (11. (2007), as well as a Bayesian version of the ﬁill ODP
in Guindani et (11. (2009). Since our results show that the mODP
provides nearly identical signiﬁcance results to the full ODP, we do
not repeat these comparisons here.

We simulated eight different types of gene expression studies,
each corresponding to a particular set of parameters and
experimental design. Four simulated studies correspond to two
group comparisons and four correspond to three group comparisons.
Within each of these two sets, the same signal structure is used, but
we vary the variance structure. For both the two and three sample
studies, the simplest case is a constant variance across all genes,
followed by variances simulated from a Uniform distribution, from
a Gamma distribution and from a more heterogeneous mixture of
Uniform distributions. R scripts for simulating these datasets can
be found in the Supplementary Material. In each case, we plot the
number of signiﬁcant genes across a range of estimated q-value
cutoffs (Storey and Tibshirani, 2003), averaged over 100 simulated
studies (Fig. 4). We also compared the estimators in terms of the
true EFP and ETP (Supplementary Figs S1 and S2), showing similar
results to the above comparison.

For simple variance structures, the mODP provides nearly
identical performance to the more computationally intensive full
ODP regardless of the number of modules K and no matter how
many groups are compared. As the variance structure becomes more
complex, it appears that more modules are required for the mODP to
achieve the same performance as the full ODP, especially in the three
group comparison. The mODP is more likely sensitive to the choice
of the number of modules in a three-group comparison because the

parameter structure is more complicated. However, in all simulated
scenarios K :50 modules or more leads to results that are nearly
identical to the full ODP.

We compared the numerical values of the mODP and ﬁill ODP
statistics and the gene signiﬁcance rankings for K :50 and K =200
(Supplementary Figs S3—S5). It can be seen that the mODP and ﬁill
ODP again produce similar results. We also veriﬁed that the random
initial cluster centers do not heavily inﬂuence the mODP values
nor the relative rankings that they produce (Supplementary Figs S7
and $8).

4.2 Environmental differential expression

Idaghdour et (11. (2008) measured gene expression from a human
population of Moroccan Amazighs composed of three different
lifestyles. They collected leukocyte samples from peripheral blood
to proﬁle gene expression in 16 Bedouin, 18 Anza and 12 Sebt-Nabor
individuals. The Bedouin individuals have traditional nomadic lives
on the fringe of the Sahara desert near the town of Errachidia, the
Anza individuals are from the coastal city of Anza near Agadir and
the Sebt-Nabor individuals come from a rural mountainous region
in Agadir. In total, 10177 transcripts were expressed across the
46 samples. Details of the gene expression proﬁling process are
described in Idaghdour et (11. (2008). We refer to samples from
Bedouin as ‘Desert’, samples from Sebt-Nabor as ‘Village’ and
samples from Anza as ‘Agadir’.

We conducted pairwise comparisons for all pairs of the Agadir,
Village and Desert groups and also looked for differential expression
across all three groups simultaneously. The plots of the number of
signiﬁcant genes for each q-value for both the mODP and the ﬁill
ODP are shown in Figure 5. Again we considered the performance
over a range of module numbers K for the mODP approach. As the
plots show, the mODP and ﬁill ODP perform nearly identically when
K 3 50. We also compared the gene rankings produced by the ﬁill
ODP to the mODP for K :50 (Supplementary Fig. S6). It can be
seen that the two methods produce similar gene rankings, meaning
that they identify nearly the exact same genes as being differentially
expressed.

5 DISCUSSION

The optimal discovery procedure (ODP) is a powerful approach
for the analysis of high-throughput gene expression data (Storey
et (11., 2007; Storey et (11., 2007). However, the ﬁill ODP requires
the computation of a large number of likelihoods to evaluate the
statistic for any speciﬁc gene. This leads to computational costs that
grow quadratically in the number of genes. Since signiﬁcance of
these statistics is typically evaluated by a non-parametric bootstrap
approach requiring many sets of ODP statistics to be calculated, there
is a strong need for methods that reduce the computational cost of
evaluating these statistics. Here, we have introduced a new approach
for calculating ODP statistics, based on forming probabilistic gene
modules using the Kullback—Leibler distance and greatly reducing
the number of likelihood calculations making up each statistic. The
mODP statistics are formed from a small number of likelihood
calculations, making the computation grow nearly linearly in the
number of genes. Even though the mODP statistics are substantially
faster to calculate, we have shown that they produce nearly identical

 

513

112 /3.Io's[BumoprOJXO'soiwuiJOJurorq”:duq 111011 papBo1u/vxoq

9103 ‘0g1sn8nv uo ::

S.Woo et al.

 

 

 

 

  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

8
9— _ g —
o
m o _
9' m o _
a g _ 8 8 _ y/
- to
.5 § ‘ s - o
E ‘” 2 - e
g o _ o 9, — — mODPio
1.,— 8 3 — — mODP 50
a — mODP100
E g _ o § ‘ 8 _ m0DP130
g N a - N — m0DP150
— mODPZOD
o — o _ o _ o _ -- FullODP
I I I I I I I I I I I I I I I I I I I I I I I I I I I I
0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.00 0.05 0.10 0.15 0.20 0.25 0.30
o o
g - o 8 ‘ e
8 - g -
0 o '—
5 8 ' 0 ° _
9 s - 8 e _
g o _ 8
E S 8 — o
5: '° 3 ‘ 0
.ﬁ 0 S _
- o - I:
e <- 3 _
l” o
E g _ g _ S ‘ § —
E N N
o — o — o — o —
I I I I I I I I I I I I I I I I I I I I I I I I I I I I
0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.00 0.05 0.10 0.15 0.20 0.25 0.30
q-value cut-oil q-value cut-off q-value cut-off q-value cut-oil

Fig. 4. A comparison of the mODP and the full ODP method based on simulated data. Each panel is the average number of genes called signiﬁcant for each
q-Value cutoff over 100 simulated datasets. Solid colored lines are the proposed mODP method for different numbers of modules K and the black dashed
line is the full ODP. The simulations correspond to (A) two group comparison, ﬁxed equal variances, (B) two group comparison, variances Uniform sampled,
(C) two group comparison, variances Gamma sampled and (D) two group comparison, variances Uniform mixture sampled, (E) three group comparison,
ﬁxed equal variances, (F) three group comparison, variances Uniform sampled, (G) three group comparison, variances Gamma sampled and (H) three group
comparison, variances Uniform mixture sampled.

 

 

   

 

   

 

 

 

 

 

 

 

 

 

 

 

a
O _ D
 8 §— 8 - é -
ﬂ) 6) ‘0
0| _
E 8 _
g s 8 _ § - 8
z o - 8 v
.g: n 8 — mODP 20
T, _ g ' — mODP 50
a. g 8 — mODP so
g o 9' 3' g_ —m0DP100
g g - a — m0DP150
'— — mODP 200
o _ o _ o _ o _ —- FullODP
I I I I I I I I I I I I I I I I I I I I
0.00 0.05 0.10 0.15 0.20 0.00 0.05 0.10 0.15 0.20 0.00 0.05 0.10 0.15 0.20 0.00 0.05 0.10 0.15 0.20
q-value cut-oil q-value cut-off q»value cut-oil q-value cut-off

Fig. 5. A comparison of the mODP and the full ODP approaches on the Morrocan data from Idaghdour et a1. (2008). In each plot, the number of signiﬁcant
genes is plotted versus the corresponding q-Value cutoff. (A) Agadir versus Village, (B) Agadir versus Desert, (C) Desert versus Village and (D) Agadir versus
Desert versus Village (three group comparison). The mODP performs nearly identically to the full ODP, particularly when K 3 50.

results to the full ODP statistics in both simulated and real data distributions. The methodology presented in this article has been
examples. implemented in the EDGE software package (Leek et (11., 2006),
Even though the mODP requires the user to decide the number freely available at http://genomine.org/edge/.

of modules in advance, we have shown that the mODP statistics
are relatively robust to the choice of the number of modules. In
both the simulated and real data examples, it was observed that
50 modules or more were sufﬁcient to match the performance of Conﬂict oflnterest: none declared.
the full ODP. Also because the mODP method borrows strength
across multiple genes, the averaged parameter estimates deﬁning REFERENCES
each module form more stable estimates of gene express1on variation

relevant to the study and may contribute impoﬁant information Cui,X. et a1. (2005) Improved statistical tests for differential gene expression by
beyond unsupervised Clustering Although we have used the Normal shrinking variance components estimates. Biostatistics, 6, 59775.

. . . . . . Efron,B. t l. 2001 Em ‘r‘cal ba 6: anal  of a m‘croarra e eriment. J. A .
likelihood 1n the formulation of our method, Justiﬁed because 8 a ( ) p“ y s ym 1 y Xp m
Stat. Assoc, 96, 115171160.

the data are continuous and can be Shown to be aPPYOXimately Guindani,M. et a1. (2009) Abayesian discovery procedure. J. Roy. Stat. Soc. Sen B,
Normal, the ODP approach may be utilized with other probability 71, 9057925.

Funding: This research was supported in part by NIH grant
HG002913.

 

514

112 /3.Io's[Bumo[pioixosoiwuuoiurorqﬂ:duq 111011 papBo1u/vioq

9103 ‘0g1sn8nv uo ::

A computationally efficient modular ODP

 

Idaghdour,Y. et al. (2008) A gemone-wide gene expression signature of environmental
geography in leukocytes of moroccan amazighs. PLoS Genet., 4, 61000052.

Kullback,S. and Leibler,R.A. (1961) On information and sufﬁciency. Ann. Math. Stat.,
22, 79786.

Leek,J.T. et al. (2006) EDGE: extraction and analysis of differential gene expression.
Bioinformatics, 22, 5077508.

Lehmann,E.L. (1986) Testing Statistical Hypotheses. 2nd edn. Springer, Berlin.

L0nnstedt,I. and Speed,T. (2002) Replicated microarray data. Stat. Sin., 12, 3146.

Newton,M.A. et al. (2004) Detecting differential gene expression with a semiparametric
hierarchical mixture method. Biostatistics, 5, 1557176.

Nielsen,F. and Nock,R. (2009) Clustering multivariate normal distributions. In
Nielsen,F. (ed.) Emerging Trends in Visual Computing. Springer, Berlin/Heidelberg,
pp. 1644174.

Smyth,GK. (2004) Linear models and empirical bayes methods for assessing
differential expression in microarray experiments. Stat. Appl Genet. Mol Biol,
3, Art. 3.

Storey,J.D. and Tibshirani,R. (2003) Statistical signiﬁcance for genome-wide studies.
Proc. Natl Acad. Sci. USA, 100, 944079445.

Storey,J.D. et al. (2005) Signiﬁcance analysis of time course microarray experiments.
Proc. Natl Acad. Sci. USA, 102, 12837712842.

Storey,J.D. et al. (2007) The optimal discovery procedure for large signiﬁcance
testing, with applications to comparative microarray experiments. Biostatistics, 8,
414—432.

Storey,J.D. et al. (2007) The optimal discovery procedure: A new approach to
simultaneous signiﬁcance testing. J. Roy. Stat. Soc. Sen B, 69, 3477368.

Tusher,V.G et al. (2001) Signiﬁcance analysis of microarrays applied to the ionizing
radiation response. Proc. NatlAcad. Sci. USA, 98, 511675121.

Zhang,B. and Horvath,S. (2005) A general framework for weighted gene co-expression
network analysis. Stat. Appl Genet. Mol Biol, 4, Art. 17.

 

515

12 /3.Io's12u1no[p101x0's0112u1101u101q//:d1111 111011 pap2o1umoq

9103 ‘0g1sn8nv uo ::

