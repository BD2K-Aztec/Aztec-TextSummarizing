ORIGINAL PAPER

Vol. 29 no. 13 2013, pages 1654—1662
doi:10. 1 093/bioinformatics/btt202

 

Data and text mining

Advance Access publication May 21, 2013

NETAL: a new graph-based method for global alignment
of protein—protein interaction networks
Behnam Neyshabur‘, Ahmadreza Khadem‘, Somaye Hashemifar2 and

Seyed Shahriar Arab3'4'*

1Department of Computer Engineering, Sharif University of Technology, Tehran, Iran, 2School of Computer Science,
University of Tehran, Tehran, Iran, 3Department of Biophysics, Faculty of Biological Sciences, Tarbiat Modares University,
Tehran, Iran and 4Bioinformatics Department, School of Computer Science, Institute for Research in Fundamental

Science (IPM), Tehran, Iran
Associate Editor: Jonathan Wren

 

ABSTRACT

Motivation: The interactions among proteins and the resulting net-
works of such interactions have a central role in cell biology.
Aligning these networks gives us important information, such as con-
served complexes and evolutionary relationships. Although there have
been several publications on the global alignment of protein networks;
however, none of proposed methods are able to produce a highly
conserved and meaningful alignment. Moreover, time complexity of
current algorithms makes them impossible to use for multiple align-
ment of several large networks together.

Results: We present a novel algorithm for the global alignment of pro-
tein—protein interaction networks. It uses a greedy method, based on
the alignment scoring matrix, which is derived from both biological and
topological information of input networks to find the best global network
alignment. NETAL outperforms other global alignment methods in
terms of several measurements, such as Edge Correctness, Largest
Common Connected Subgraphs and the number of common Gene
Ontology terms between aligned proteins. As the running time of
NETAL is much less than other available methods, NETAL can be
easily expanded to multiple alignment algorithm. Furthermore, NETAL
overpowers all other existing algorithms in term of performance so that
the short running time of NETAL allowed us to implement it as the first
server for global alignment of protein—protein interaction networks.
Availability: Binaries supported on linux are freely available for
download at http://www.bioinf.cs.ipm.ir/software/netal.

Contact: sh.arab@modares.ac.ir

Supplementary information: Supplementary data are available at
Bioinformatics online.

Received on November 12, 2012; revised on April 11, 2013; accepted
on April 23, 2013

1 INTRODUCTION

The interactions among proteins are of high importance within
the majority of biological functions. A protein may interact with
another protein for the sake of modification; it also may interact
to form part of a protein complex or it may carry another protein
(Kayarkar et al., 2009). There are numerous experimental tech-
niques including yeast two-hybrid (Fossum et al., 2009; Parrish

 

*To whom correspondence should be addressed.

et al., 2007; Stelzl et al., 2005) and protein co—immunoprecipita—
tion (Aebersold and Mann, 2003) that demonstrate large-scale
proteiniprotein interactions (PPIs) for organisms, including
Saccharomyces cerevisiae (Collins et al., 2007), Homo sapiens
(Radivojac et al., 2008) and Drosophila melanogaster (Giot
et al., 2003). As the data from these experiments have a lot of
false-positive interactions, putting several studies containing
other data types, such as gene expression into account, they
have been used to reduce the number of such interactions (von
Mering et al., 2002).

Such an analysis is the alignment between networks that iden-
tify functional or structural conserved components in species.
The purpose of network alignment is to align nodes of the
input networks to maximize the overall match between them.
This alignment not only gives the global similarities between
the networks of species but also yields knowledge about the
topology of the proteins in the networks that is valuable in
evolutionary biology. Given a group of such PPI networks, the
scores of the pairwise alignment between them can be used to
construct their phylogenetic tree.

Most of the previous approaches focused on local network
alignment (LNA). LNAs ﬁnd local similar subnetworks that are
probably conserved components either functional or structural.
PathBLAST (Kelley et al., 2003), NetworkBLAST (Sharan
et al., 2005), Mawish (Koyuturk et al., 2006) and Graemlin
1.0 are examples of local network alignment. PathBLAST
uses both BLAST similarities of the proteins and the probabil-
ities of interactions to find the biological pathways. These prob-
abilities indicate how much an interaction is true and is not
false positive (Kuchaiev et al., 2010). NetworkBLAST generates
a network alignment graph based on the sequence similarities
and performs a search over the network to identify conserved
pathways and clusters. Mawish models the biological deletion
and duplication and uses the weighted edge of the network to
find the maximum weight induced subgraph. Graemlinl.0
(Flannick et al., 2006) uses a scoring scheme based on two
models, in one of which the module is subject to evolutionary
constraints; however, in other proteins, the modules are under
no constraints.

As mapping of LNA is categorized as one-to-many mapping,
it may be ambiguous. In other words, in this kind of alignment,
one node can be aligned with different nodes in different local

 

1654 © The Author 2013. Published by Oxford University Press. All rights resen/ed. For Permissions, please e—mail: journals.permissions@oup.com

112 /310'S[BHJDO[pJOJXO'SOTJBLUJOJIITOlq/ﬂduq 11101} papnolumoq

91oz ‘Og anﬁnV uo ::

NETAL

 

conserved subnetworks. Although this may indicate gene dupli-
cation, in some cases, it may cause implausibly numerous
matches for a protein (Singh et al., 2007). Previous LNA algo-
rithms have not generally been able to detect large connected
subgraphs that are conserved during the evolution (Kelley et al.,
2003). In contrast, the purpose of global alignment is to ﬁnd a
unique correspondence between all nodes of the input networks.
Such an overall alignment can result in detection of functional
orthologs and cross-species variations (Singh et al., 2008). The
pioneering work in this area was carried out by IsoRank (Singh
et al., 2007) that mapped the nodes of two input networks based
on the similarity of their neighborhood topology. It uses a pre-
processed matrix that indicates the efﬁciency of aligning each
node of the network to all others. Afterward, IsoRankN was
proposed for aligning multiple networks (Singh et al., 2008).
This algorithm uses original IsoRank to ﬁnd the alignment
scores between any pair of networks. It uses a developed
PageRank-Nibble algorithm (Andersen et al., 2006) to infer
the alignment clusters based on these scores. Graemlin 2.0
(Fossum et al., 2009) is a parameter-leaming algorithm that
ﬁnds the alignment between multiple networks by relying on
their phylogenetic relationships. GA and PATH are based on
one and two relaxations over the set of doubly stochastic matri-
ces (Zaslavskiy et al., 2009). They use the same objective func-
tion that balances the matching similar pairs with increasing the
number of conserved edges. PISwap (Chindelevitch et al., 2010)
uses a local optimization to ﬁnd the optimal alignment. This
algorithm initially finds an alignment using only sequence data
and then adjusts it by incorporating topological information.
Natalie (Klau, 2009) is a lagrangian relaxation approach that
uses homology information with a branch-and-bound method
to compute the global alignment. HopeMap (Tian and
Samatova, 2009) is a parameter-free algorithm that iteratively
refines the conserved regions by applying a connected-compo-
nentibased process. GRAAL (Kuchaiev et al., 2010) and H-
GRAAL (Milenkovic et al., 2010) rely solely on topological
network similarities based on the graphlet degree vector.
Although GRAAL is a greedy seed and extend approach, H-
GRAAL uses Hungarian algorithm (Mills-Tettey et al., 2007) to
ﬁnd the optimal alignment. MI—GRAAL (Kuchaiev and Przulj,
2011) uses both node similarity and topological network simi-
larity measures to break the ties and ﬁnd a more stable
alignment.

In Figure 1 one can see the categorization of different tools,
including NETAL, which shows how the strategies are different.
Broadly, network alignment algorithms (local or global) can
be categorized into two groups: pairwise alignment and mul-
tiple alignment. Pairwise alignment algorithms align two PPI
networks. Mawish, Natalie, HopeMap, PISwap, IsoRank,
GRAAL, H-GRAAL and MI-GRAAL are examples of pairwise
alignment algorithms. However, multiple alignment algorithms
try to create an alignment between more than two PPI networks.
IsoRankN, NetworkBLAST and Graemlin are in this group.
Previous algorithms for the problem of PPI network alignment
use two main approaches for scoring the alignments. Some of the
algorithms such as GRAAL use solely the topology of networks,
whereas most of the alignment methods like Mawish,
NetworkBLAST, IsoRankN and Graemlin incorporate previous
biological information about nodes, such as the similarities of

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Tools Local Pairwise guided straLegv (PPI network lnpul}
0r Dr
Global Multiwise
Alignment GraDh single node expans-on.
Pathblast L P conserved linear path extraction
NetworkBlasl L M Alignment Graph score for PPI reliabilixy
NetworkBlasL- M
(NMJ L M Layered alignment Graph
Alignment graph single node expansion.
MaWIsh [MW] L P duplltate divergence model
Graemlin 1.0 L M Probability model to score nodes and edges
Graemlin 2.0 I3 M machine learning approach for network sconng
[sarank G P Eigenvectar of protein pair assD::aticins
Isorank-M G M Greedy extension of Isorank
Purely topology based on probability model of
NeLAI G P computed nodes' soores
Purely lopolugv based proteins pairs scored
GRkkL G 9 based on graphlet Signature
Purely lnpnlngy based proteins pairs scored
MI-Graal G P based on graphlet signature and blast value

 

 

Fig. 1. A synopsis on network alignment tools

protein sequences and phylogenetic relationships in PPI net-
works. In this article, we propose a novel algorithm, NETAL
(network aligner), as a solution to the pairwise global PPI net-
work alignment. This problem can be formulated as follows
(Kuchaiev and Przulj, 2011): given two networks, ﬁnd an inject-
ive mapping so each node in the smaller network is mapped
to one node in the larger network. All the details of our algo-
rithm are discussed on pairwise alignment, but it can be easily
promoted to multiple alignment. This algorithm uses a scoring
function based on both biological and topological information.
The topological information between each pair of nodes is
updated gradually during execution. The main advantages of
our proposed method are ﬁnding the best global PPI alignment
and the ability to ﬁnd big connected common subgraph that is
so useful for extracting the biological information. We compare
the results of our program with MI-GRAAL, GRAAL and
IsoRank to demonstrate the effectiveness and usability of our
method. The reason for choosing these tools for comparison
is because of the accuracy of their results in comparison with
other existing tools that have been used so far.

2 METHODOLOGY

2.1 Deﬁnitions and notations

In this article, each PPI network is represented as a simple undirected
graph G = (V, E) such that each u e V is a protein v and for each e e E,
e = (i, j) is a notation for an interaction between proteins i and j.
Apparently, |V| and |E| are the number of nodes and edges in the
graph. In addition, the edge weight w(e) is associated with the edge e
where 0 5 w(e) 5 1. N(i) demonstrates the set of neighbors of node i;
therefore, |N(i)| indicates the degree of node i. A subnetwork of G is a
graph H: (V’,E") in which V’ g V and E g E. Let G}, = (Vb,E;,) be a
complete bipartite graph, i.e. Vb 2 V1 U V2, V1 ﬂ V2 2 @, E, =
{(u, v) | u 6 V1, v 6 V2} and suppose that |V1| 5 |V2|. A bipartite matching
M g E, is a set of edges so that every u 6 V1 is incident to at most one
edge of M.

 

1655

112 /310'sieu1noip103x0"sorJBuiJOJurorq/ﬁduq 11101} papeoiumoq

9103 ‘Og isnﬁnV uo ::

B.Neyshabur et al.

 

Now, suppose we have two networks G1 2 (V1, E1) and G2 2 (V2, E2)
such that |V1| 5 |V2|. Global alignment of these two networks is an in-
jective function f : V1 —> V2. There are several measurement methods for
assessing the quality of an alignment. We will discuss them in Section 3.

Let M be a bipartite matching for the complete graph
G 2 (V1 U V2, E) where V1 is the set of nodes of network A, and V2 is
the set of nodes of network B and let (i, j) be an interaction in network A.
We call (i, j) a conserved interaction or conserved edge when the end points
of (i, j) are matched with the end points of an interaction (i’,j’) of net-
work B.

2.2 N ETAL approach

Our computational tool, NETAL, takes two networks G1 2 (V1, E1) and
G2 = (V2,E2) in addition to various conﬁguration parameters as inputs
and returns global alignment of them. Without loss of generality, we
assume that |V1| 5 |V2|. This approach includes two main phases. First
phase is the construction of alignment score matrix, and the second one is
the greedy approach of updating of scores until we get to the ﬁnal result.

At the ﬁrst phase Alignment Score Matrix is generated. This matrix is
constructed based on two other matrices named Similarity Score Matrix
and Interaction Score Matrix. Similarity score indicates both topological
and biological similarities between every two nodes i 6 V1 and j 6 V2.
This matrix is a weighted sum of Topological Score Matrix and
Biological Score Matrix. Topological Score Matrix and Biological
Score Matrix indicate topological and biological similarities between
every two nodes of input networks, respectively. Interaction score of
two nodes i 6 V1 and j 6 V2 is an estimate on the conditional expected
value of the number of conserved interactions that are incident to the
node i given the assumption that nodes i and j are aligned to each other.
Similarity score matrix that is calculated in phase one will not change
during the process of ﬁnding alignments, and they remain ﬁxed until the
end. Therefore, we can consider this part as an ofﬂine pre-process for
the continuation of the algorithm. The reason is that the values of the
similarity matrix are computed based on structure of the networks and
biological properties of proteins in networks, which both are available at
the beginning. However, interaction score matrix should be updated
iteratively during the next phase of the algorithm because the expected
value of the number of conserved interactions changes after aligning
each two nodes. Clearly, when interaction scores are updated, the
values of alignment score matrix should also be renewed, respectively.

At the second phase, a greedy search is used to ﬁnd the global align-
ment based on the values of the alignment score matrix. In each iter-
ation of the greedy search, we ﬁnd the two nodes with maximum score
in alignment score matrix and then align them. This greedy search is
repeated until all nodes of the ﬁrst network are aligned with the nodes
of the second network.

Algorithm 1 presents general steps of NETAL. For more speciﬁc
pseudocodes, see the Supplementary Data.

 

Algorithm 1. NETAL(G1, G2)

Require: Wu 5 |V2|
Construct topological score matrix T.
Given biological data, construct biological score matrix B.
Given matrices T and B, construct similarity score matrix S.
Construct interaction score matrix I.
Given S and I, construct alignment score matrix A.
while there is an unaligned node in 6 V1 do
Find unaligned nodes i 6 V1, j 6 V2 with maximum A(i,j).
f (I) <—J'
Update interaction score matrix I.
Given S and I, update Alignment score matrix A.
end while
return f

 

 

2.2.] Topological score matrix Topological score matrix Tconsists
of |V1| rows and |V2| columns, whereas T(i,j) indicates topological simi-
larity between the nodes i 6 V1 and j 6 V2. Our major assumption is that
two nodes are topologically similar if and only if their neighbors are
topologically similar.

As you can see in the example provided in Figure 2a, we initiate
T°(i,j) = 1, and in each iteration, we update T based on its values on
the last iterate. To compute T’“(i,j), we construct a complete weighted
bipartite graph G}, = (Vb,E;,) where Vb is made of two disjoint sets of
nodes N(i) and N(j) and every edge (i ’, j’) e E, connects node i’ e N(i)
and node j’ e N(j). Furthermore, for each edge (i’,j’) e E, we set
WU’J’) = T’U’J’)

After constructing G1,, a matching M will be found using a greedy
algorithm. Initially, we select an edge e = (u, v) so that for every
(i’,j’) e E, we have w(u, v) 3 w(i’,j’). Then, we add e to M and
remove u, v, and all edges that are incident to u or v in G1,. This process
is repeatedly done while traversing all the graphs until all the edges be-
tween the two parts of graph are removed. Now we can calculate T’“(i,j)
using formula 1:

Z T(u, v)
(u,v)EM

where t is the counter for the iteration. Looking at the right-hand side of
Equation (1), the numerator is sum over similarity between the matched
neighbors. The Figure 2b illustrates how the topological matrix updates
for four iterations in our simple graph. If for each u e N(i) and v e N(j),
T(u, v) 5 1, we can conclude that the enumerator is less than or equal
to min{|N(i)| |N(j)|}. Inverse impact of max{|N(i), |N(j)|} in the denomin-
ator not only keeps T’“ between 0 and 1 but also assigns higher simi-
larity score to the vertices with similar degrees. For instance, if N(i) = 3
and N(j) = S, then T(i, ') is no more than 3/5 in any iteration.

After a few iterations, the final values of matrix T are considered as
topological similarities between every pairs of nodes (the number of iter-
ations is an input parameter and usually two or three iterations are
enough).

THU,» = (1)

2.2.2 Biological score matrix In this work, we have not used biolo-
gical score impact in evaluation, which we implement in our future works.
But in a nutshell, the biological score matrix B is deﬁned such that B(i,j)
is referred to as biological similarity between two nodes i 6 V1 and
j 6 V2. We say two nodes i and j are biologically similar, if and only if
the two following conditions hold:

(i) The actual proteins represented by iandj are biologically similar.
(ii) The actual proteins represented by the neighbors of i and j are
biologically similar.

B (M) — maxueyl,VE MPG), m (2)
_, Z ME“ 11")
Bt+1(iv.j) =  +  _  (I a] )E 

m

2.2.3 Similarity score matrix Similarity score matrix S with
|V1| rows and |V2| columns, indicates the similarity between nodes of
two networks, i.e. S(i,j) is the similarity of nodes i and j where i 6 V1 and
j 6 V2. After computing topological score matrix and biological score
matrix, matrix S is computed as follows:

5021') = “T(LJ') + (1 - 003021") (4)

where T(i,j) and B(i,j) are the values of topological score matrix and
biological score matrix, whereas 0 5 or 5 1 is a parameter that controls
the balance between them. As aforementioned, we do not need to update

 

1656

112 /3.10'spzum0fp10}x0"sorJBuiJOJurorq/ﬁduq 11101} popcorn/neg

9103 ‘Og isnﬁnV uo ::

NETAL

 

 

 

 

 

 

 

 

 

afl- rd d' _'c' a h'ic'Id'
‘1 ’ a 1 1 1'1
b’x bIT\‘\,_ a, b 1 1i: 1
T v— ” .c 1 311.1
cw d 1 1!1__l_
a1 62 T0

Networks G1 and G2 and their topological score man-ix at ﬁrst
iteration

(b)
a  .

  

T](b,b‘) = 0.66
a  .
1 d
c r’
v 1 /
,/
d U

 

Time) =0.33

Calculation of topological score of node b of network 61 with all
nodes of network G2

(0)

For; =1

 

 

b 0.66 0.66 0.33 i

 

c 0.5 0.5 1 0.33

 

d 0.5 0.5 1 0.33

 

 

 

 

 

 

 

T1
Topological score matrix networks 01 and G2. at second iteration

Fig. 2. Example of how Topological Score Matrix is calculated

matrix S, and it never changes during the greedy search. The reason is
that we compute the similarity score based on the structural similarity of
networks and biological similarity between proteins. As the structural and
biological similarity of nodes are constant and do not change during the
algorithm, we do not need to update similarity score matrix. As we ex-
plained in the previous section, we have not speciﬁed and implemented
the computation of biological score matrix. Therefore, in our current
version of software, the parameter or is equal to 1.

2.2.4 Interaction score matrix If I1 WXW,‘ be the interaction score
matrix with |V1| rows and |V2| columns, I(i,j) indicates an approximation
of the expected value for the number of conserved interactions incident to
i in the ﬁnal alignment of the two nodes i and j. In other words, if the two
nodes is V1 and j 6 V2 are matched, I(i,j) interactions will approxi-
mately be conserved. Next, we introduce the concept of dependency.

Each node i has a dependency to any of its neighbors equal to 
This value indicates the probability that interaction (i,i’) will be con-
served, if a node i’ e N(i) is aligned with a random node of the other
network. For example, consider a node i with three neighbors i’, i ” and
i ”’. Every interaction (i, i’), (i, i ”) and (i, i ”’) will be conserved with the
probability m, e.g.  Thus, dependency of i is equal to 

For each node i summing dependencies of its neighbors will give an
approximate expected value for the number of conserved interactions that
are incident to i, when i is matched to a random node in the other net-
work. In the aforementioned example, let i’, i ” and i ”’ have degrees 4, 2
and 4, respectively. Summing dependencies of neighbors of node i is equal
to %+%+% = 1. It means that by aligning i with a node of the other
network, the expected value of conserved interactions will be one.

Considering the concept of dependency, I(i,j) can be computed as
follows:

WEN“) N(i)
maxkEViUl/zilN(k)l}

The idea of this formula is as follows. In aligning two nodes i and j, the
expected value for the number of conserved edges will be equal to the
minimum expected value for the number of conserved interactions be-
tween the two nodes i and j. As the expected value of conserved inter-
actions for node i is no more than |N(i)|, expected values can be scaled by
dividing them by the maximum degree among all the nodes of the two
input networks.

As two nodes are matched, the expected value of conserved inter-
actions in alignment will change. Therefore, the values of matrix I
should be updated. For this purpose, two new matrices are deﬁned:

' 1 1
“mi 2 lN(i/)l’j,EZ lN(1'/)l

10,1) = (5)

o Definite interaction matrix: Suppose two nodes i 6 V1 and j 6 V2 are
matched together. D(i,j), is the number of definite conserved inter-
actions of the first network that are incident to i. Let two optional
nodes u and v be aligned with each other. Because of binding of these
two nodes, two situations may happen. In the ﬁrst situation, if we
align i e N(u) to j e N(v), the interaction (u, i) will be conserved be-
cause it is aligned with (v,j). Thus, the number of deﬁnite conserved
interactions resulted from this matching will be increased by one, i.e.
D(i,j) = D(i,j) + 1. In fact, when two nodes u and v are matched, the
number of deﬁnite conserved interactions resulted from aligning of
any pair of nodes i and j where i e N(u) and j e N(v), will be
increased by one. In the other situation, if we align i to j where
i ¢N(u) or j¢N(j), the number of deﬁnite conserved interactions re-
sulted from this matching will not change.

Therefore, after the matching of u and v, the values of matrix D
get updated based on the formula 6. As a reminder, D(i,j) is the
number of interactions that will deﬁnitely be conserved, if two nodes
i and j are matched. Note that the matrix D is zero at ﬁrst and k is
iteration number.

..k1_ Dk(i,j)+1 ieN(u),jeN(v)
00’» + _ {D0, 1')" otherwise (6)

Canceled interaction matrix: This is a 1D matrix. As aforementioned,
every node u has a dependency equal to m to any of its neighbors.
But, after aligning node u to a node v of the other network, this
dependency should be removed from the interaction score of any
neighbor i of u, similarly to any neighbor j of v. For this purpose,
two canceled interaction arrays C1 and C2 are used for the networks
G1 and G2, respectively. Each value C1(i) or C2(j) indicates the
number of conserved interactions that should be removed from ex-
pected value of number of conserved interaction for node i and j. If
two nodes u and v are matched, C1(i) is updated based on the
Equation (7). C2(j) updates similarly. Note that Cl and C2 are set
to zero at the beginning, and k is iteration number.

 

1 657

112 /310's112u1n0[p101x0"sotJBuiJOJHtotq/ﬁduq 111011 pap1201um0q

9103 ‘0g isnﬁnV uo ::

B.Neyshabur et al.

 

C103,.“ 2 { Clo)" + m is No) (7)

C1(i)k otherwise

C2(j) also updates similar to C 1 (i). After updating the matrices D,
C1 and C2, matrix I will acquire its new value using this following
formula:

min{d1(i), d2(j)}

1W) 2 maxiewnimni} (8)

where

l
d '= E ——C '
1(1) i/EWHNUOI 1(1)

(9)

1
d0): —.,—C(l)
2 ,.EX,,:,.,iN(1 )l 2

2.2.5 Alignment score matrix After calculating matrices S and
I, alignment score matrix A is computed based on Equation
(10).

AUJ) = A5021") + (1 - DRIED (10)

where A(i,j) is the scores of aligning two nodes i 6 V1 and j 6 V2.
Although computing alignment score matrix, NETAL simultaneously
constructs a priority queue of paired nodes in decreasing order of their
alignment scores. This priority queue is used in the second phase to
quickly identify the pair nodes with the maximum alignment score.

2.2.6 Greedy search In the second phase, our algorithm uses a greedy
search to ﬁnd the best global alignment between two input networks G1
and G2. At ﬁrst, the pair nodes with maximum alignment score are
chosen and aligned to each other. Then interaction score matrix is
updated, and the alignment score matrix is changed based on the new
values of I. Finally, two cited nodes and their corresponding rows and
columns are removed from the matrix. Now, two other nodes with the
maximum alignment scores are chosen, and similar steps are performed
repeatedly. This process will continue until all the nodes of the smaller
network are aligned to some nodes of the other network. At this time, the
resulted alignment will be considered as the ﬁnal alignment of the two
networks G1 and G2.

2.3 Time complexity

Let n =max{|V1|,|V2|} and m =max{|E1||E2|}. Calculation of topo-
logical score matrix and biological score matrix takes 0(m2).
Computing each of similarity score matrix, interaction score matrix and
alignment score matrix can be done in 0(n2). As we use priority queue to
ﬁnd highest scores in the alignment score matrix, we also need to build
this priority queue that takes 0(n210gn). Therefore, the total time com-
plexity of the ﬁrst phase of the algorithm is 0(m2 +n210gn). In the
second phase, extracting the pair with highest score takes constant
time. However, the major time consuming part is updating matrices
and the priority queue, which is 0(nmlogn). Therefore, the total time
complexity of the algorithm is 0(n210gn + m2 + nm log n). For a simpler
time complexity, if we assume that m 2 nlogn (which is an acceptable
assumption in biological networks), then the time complexity of NETAL
will be 0(m2) = 0(n210g2 n). For more details about time complexity of
the algorithm, please see the Supplementary Data.

3 RESULTS

In this section, our algorithm is compared with other global
network alignment algorithms. The comparisons are done
based on five criteria. At ﬁrst, these criteria for the comparison
are introduced (Kuchaiev et al., 2010).

0 Edge Correctness (EC) is the percentage of edges (inter-
actions) of the first network that are aligned to edges in
the second network. Higher values of the EC indicates
that the two input networks are topologically more similar.
EC is computed by the following equation (Milenkovic
et al., 2010; Singh et al., 2007):

: |{(ua V) 6 E1 1 (g(u):g(v)) 6 E2}|

EC
lEl

x 100% (11)
Obviously, if the second network has a subnetwork that is
isomorphic to the first network, then EC can be ideally one.

0 Node Correctness (NC) is the percentage of nodes (proteins)
of the ﬁrst network that are aligned to the correct nodes of
the second network. Let f be the correct node mapping and g
be the alignment mapping; then NC is deﬁned as

: Hit 6 V1:f(u)=g(u)}l

NC
|V1|

x 100% (12)

Obviously, to calculate NC, a correct node mapping like f
should be known.

0 Interaction Correctness (IC) is the percentage of interactions
of the ﬁrst network that are aligned with a correct inter-
action in the second alignment. IC is deﬁned as

l{(u3 v) e El :  6 E1901: v) e 
lEl

where A = {(u, v) e E1  = g(u),f(v) = g(v)}. Like NC,

for calculating IC, a correct node mapping like f should be

known.

1C:

 

x100% (13)

o Largest Common Connected Subgraph (LCCS) is largest
connected subgraph of the first network that is isomorphic
to a subgraph of the second network. This common sub-
graph is not necessarily induced. The larger and denser con-
nected subgraphs are biologically more valuable.

0 NF is the number of aligned protein pairs that their func-
tional similarity is >0.5. Such protein pairs are considered to
be functionally related. Higher values for NF indicate that
the alignment is functionally meaningful. Functional simi-
larity between proteins is deﬁned based on their Gene
Ontology (GO) terms. The functional similarity of two pro-
teins is calculated by the method defined by (Schlicker et al.,
2006). This method only considers biological process and
molecular function terms.

0 G0 terms that exist in different databases, describe some
biological characteristics of the proteins, such as molecular
function, biological process and cellular component. If both
proteins corresponding to the aligned pair of nodes share
common GO terms, then it means that the aligned proteins
are functionally similar. More common GO terms express
that two proteins of the aligned pair are more similar to each
other. A large number of such pairs in the resulted align-
ment supports that the alignment is biologically credible.

In the next section, the NETAL algorithm is compared with
the other global alignment algorithms, such as IsoRank,
GRAAL and MI—GRAAL, on the basis of the mentioned cri-
teria. The reason for choosing these tools is their availability and

 

1 658

112 /310's112u1n0[p101x0"sotJBuiJOJHtotq/ﬁduq 111011 pap1201um0q

9103 ‘0g isnﬁnV uo ::

NETAL

 

the accuracy of their results in comparison with other existing
tools.

Although IsoRankN and Graemlin are also popular and re-
nowned algorithms for global network alignment, they are not
included in our assessments. Output of IsoRankN algorithm is
not compatible with ours for which we excluded from our com-
parisons. It outputs disjoint sets of aligned proteins that each set
may contain a node of one network that is aligned to several
nodes of the other network. In other words, it gives a one-to-
many mapping between the nodes. Moreover, the input informa-
tion of Graemlin is somehow different with other alignment
methods. For example, it takes the phylogenetic relationships
among the species corresponding to input networks. Some
other algorithms, such as GA and PATH, are not able to align
huge networks to each other, including yeast and human.
Furthermore, some other methods like Natalie and HopeMap
need homology information to align networks (Kuchaiev and
Przulj, 2011).

3.1 Alignment of two PPI networks human and yeast

NETAL is used to align two PPI networks of yeast and human.
We extracted the needed information and datasets of PPI net-
works of yeast and human from (Collins et al., 2007) and
(Radivojac et al., 2008), respectively. The yeast network has
2390 nodes and 16127 edges, and the human network consists
of 9141 nodes and 41456 edges. As we omitted the impact of
biological information in our algorithm, to keep our assessments
fair, we considered the or equal to one. We experimentally found
that the inverse of the number of the nodes of the larger network
is a good estimation for parameter A. Thus, we set A to 0.0001 for
alignment of networks of yeast and human. Moreover, the re-
cursion process of the computing topological score matrix was
repeated two times. As we used the same network as (Kuchaiev
and Przulj, 2011), we compared our result with the results in this
article.

The edge correctness (EC) of the alignment by NETAL is
equal to 36.10%. But, the edge correctness of the alignment of
PPI networks of human and yeast by IsoRank, GRAAL and
MI-GRAAL are equal to 3.89, 11.72 and 23.26%, respectively.
This means NETAL is able to find fairly more conserved inter-
actions compared with other algorithms. Moreover, the largest
common connected subgraph (LCCS) of our algorithm has 5370
edges (interactions). But the LCCSs resulted from IsoRank,
GRAAL and MI—GRAAL have 261, 900 and 3467 edges, re-
spectively. Thus, the NETALs LCCS is 20.57, 6.0 and 1.55
times larger than the LCCS of IsoRank, GRAAL and MI-
GRAAL, respectively. These comparisons are shown in Table 1.

As aforementioned, for measuring the biological signiﬁcance
of our algorithm, the number of aligned pair nodes that share
common G0 is considered. GO annotation data that are used in
this article were extracted from the GO database (The Gene
Ontology Consortium, 2000). In case of GO terms, the global
alignment resulted from NETAL consists of 50.41, 20.27, 7.80,
3.30, 1.47 and 0.96 aligned pairs that have at least one, two,
three, four, ﬁve and six common GO terms, respectively. Note
that in this study, we only consider the pairs that have at least
one known GO term. These results are compared with the results
of IsoRank, GRAAL and MI-GRAAL in Table 2. It is clear that

our algorithm has aligned considerably more pair nodes having
common GO terms. These results emphasize that our algorithm
efﬁciently aligns the homologue proteins. On the other hand, as
the number of common GO terms increases, NETALs results get
signiﬁcantly higher in comparison with other algorithms. This
means that NETAL is more powerful in aligning the proteins
with high similarity.

3.2 Additional measurements on alignment of different
networks with each other

We align different pairs of protein networks of human, ﬂy, yeast,
worm and mouse. Protein interaction networks of these species
are extracted from IntAct database (Kerrien et al., 2012). We
report EC, LCCS and NF in of the alignment obtained by dif-
ferent algorithms. The results of the alignments using different
tools are reported in Figures 375, respectively. In the alignments
of humanifly, humaniyeast, humaniworm and flyiyeast,
NETALs NF is higher than IsoRank, MI-GRAAL and
GRAAL. It means that using just topological information,
NETAL is able to align the proteins that are functionally related.
In the alignment of humanimouse NETALs, NF is still close to
IsoRanks NF. Moreover, the EC and LCCS of NETAL are
much better than the other algorithms. These results show that
our algorithm is able to ﬁnd large conserved complexes while
preserving the biological similarities as much as possible.

3.3 Statistical signiﬁcance

To demonstrate the quality of an alignment algorithm, two simi-
lar networks are aligned with each other. For this purpose, a
noisy network is constructed from a real PPI network. In this
article, for obtaining the noisy network of a real PPI network,
a fraction ,0 of edges of the network is removed randomly, and
instead, the same number of edges is randomly added. This re-
moval and addition causes the real network and the resulted
noisy network not to be subgraphs of each other, as a result
the comparison between them will be meaningful.

As other results of MI-GRAAL are fairly better than previous
algorithms, in this section, we just compare our results with MI-
GRAAL. To measure our algorithms performance and compar-
ing it with algorithm MI-GRAAL, PPI network of yeast is
aligned to its noisy model. The experiments are over different
values of ,0: 5, 10, 15, 20 and 25%. For each value of p, the
experiment runs 30 times.

The ECs of the resulted alignment of NETAL for these values
ofp are 86.7, 74.05, 63.31, 51.82 and 47.11%, respectively. These
measures are as follows in MI—GRAAL: 51.62, 40.84, 35.21,
31.31 and 27.67%. NETALs NCs are equal to 55.68, 40.23,
25.91, 10.57 and 5.27%, respectively, whereas MI-GRAALs per-
centages are 20.19, 8.19, 4.02, 2.29 and 1.49%, respectively. Also,
NETALs ICs are 54.05, 29.88, 13.75, 4.27 and 1.47%, respect-
ively, comparing with MI-GRAALs percentages of 10.1, 3.19,
1.11, 0.51 and 0.25%. Obviously, the values of EC, NC and IC
of NETAL are so higher than the corresponding values of MI-
GRAAL.

Thus, it is clear that for different values of ,0, either low or
high, NETALs performance is much better than MI—GRAAL.
Moreover, this indicates that our algorithm has the capability to
discover the best global alignment, where two input networks are

 

1 659

12 /310's12u.1n0[p.101x0"$0112u1101utotq//:d11t1 111011 pap201um0q

9103 ‘0g1sn8nv uo ::

B.Neyshabur et al.

 

Table 1. EC and LCCS of different global alignment algorithms for yeast
and human networks

 

 

Method EC LCCS
IsoRank 3.89 261
GRAAL 1 1 .72 900
MI-GRAAL 23 .26 3467
NETAL 36.10 5370

 

Table 2. The number of aligned pairs with the minimum speciﬁed
common GO terms

 

 

Method 3 1 3 2 3 3 3 4
IsoRank 44.2 14.1 4.1 1.5
GRAAL 45.1 15.6 5.1 2

MI-GRAAL 46.67 14 3.58 1.01
NETAL 50.41 20.27 7.8 3.3

 

90
80
70
60
50 +NETAL
+lsoRank
+MI-GRAAL
-)(-GRAAL

EC

40

30

20

10

 

0

human-mouse human—yeast human-worm fly-yeast human-ﬂy

species alignment

Fig. 3. EC of different alignment tools for different species

so similar. The results are presented in Figures G8. As we ex-
pected, as the fraction ,0 increases, EC, NC and IC decrease.

3.4 Decreasing running time efﬁciently

Most of the presented algorithms for network alignment are too
slow. Although recent algorithms, such as GRAAL and MI-
GRAAL, have improved the time complexity, NETAL is still
much faster than all of them, as it can be promoted to be used
for multiple alignment of large networks. To compare GRAAL,
MI—GRAAL and NETAL, we ran them for aligning PPI net-
works of yeast and human on a 2.66 GHz Linux system with 2
GB random access memory. As it is shown in Table 3, running
time of NETAL is much less than the other algorithms. In other
words, it is 40.70 and 54.41 times faster than GRAAL and MI-
GRAAL, respectively, and this was predictable considering their
time complexity.

 

12000

 

 

 

+NETAL
+lsoRank
+Ml-GRAAL

LCCS(edges)

—)(—GRAAL

 

 

 

species alignment

Fig. 4. LCCS of the different alignment tools for different species

+NETAL
-I-lsoRank
+Ml-GRAAL
-)(-GRAAL

 

humanemouse humanryeast humaneworm ﬂyeyeast humanefly
species alignment

F.

i—

g. 5. NF different alignment tools for different species

+ Ml-GRAAL + NETAL
100

90
80
70
60
50
40
30
20
10

0

 

5 10 15 20 25

Fig. 6. Edge Correctness (EC) in the noisy for NETAL in comparison
with MI-GRAAL

4 DISCUSSION AND CONCLUSIONS

The previous approaches in global alignment of PPI networks
use different kinds of topological information of nodes that are
calculated based on their neighbors at a pre—processing step, and
these scores remain fixed during the algorithm execution. Using
stable topological information can not result the best conserved
subnetworks. For example, consider that two hubs of two net-
works are matched together in one step; now, it is reasonable
that some neighbors of them are matched together in the next
step rather than two nodes that are more similar topologically.

 

1660

12 /810's12u1n0fp101x0'so112111101u101q//:d1111 111011 pap201um0q

9103 ‘0g1sn8nv 110 ::

NETAL

 

+ Ml—GRAAL

+ NETAL
100

90
80
70
6O
50
40
30
20
10

0

 

5 10 15 20 25

Fig. 7. Node Correctness (NC) in the noisy for NETAL in comparison
with MI-GRAAL

+ MI-GRAAL + NETAL

100
90
80
70
60
50
40
30
20
10

O

 

5 10 15 20 25

Fig. 8. Interaction Correctness (IC) in the noisy for NETAL in compari-
son with MI-GRAAL

Table 3. EC and LCCS of different global alignment algorithms for yeast
and human networks

 

 

Method Running time (s) Time complexity
GRAAL 3813.3 0(n5)
MI-GRAAL 5098.3 0(n5)

NETAL 93.7 O(n2 log2 n)

 

Because one of the aims of network alignment is to ﬁnd the
largest and densest connected common subnetworks and clearly
by choosing the neighbors of a hub, the probability of finding
these subnetworks increases. For this and other reasons, our al-
gorithm uses topological information that is updated during the
algorithm. In other words, after aligning each pair of proteins of
two input networks, topological scores of remained proteins
updates.

In this article, a greedy method is presented for global align-
ment of PPI networks based on the alignment score matrix.
Our method is implemented and tested for aligning PPI net-
works of yeast and human. The results are compared with three
well-known global network alignment algorithms IsoRank,

GRAAL and MI—GRAAL. The performance of our method
is depicted by comparing our result with the other algorithms.
To compare our algorithm with other algorithms, the EC,
LCCS and running time measures are used, and common GO
terms are applied for comparing biological signiﬁcance.
Moreover, to measure the ability of our algorithm in aligning
similar networks, PPI network of yeast is aligned by its noisy
model. In our experimental tests, we observe that our algorithm
is successful in finding large connected subgraphs and con-
served edges in an efficient time comparing with other algo-
rithms. It was also able to ﬁnd optimal global alignment of
yeast and its noisy model.

Funding: This research was in part supported by a grant from
IPM (No. CS1385-102).

Conﬂict of Interest: none declared.

REFERENCES

Aebersold,R. and Mann,M. (2003) Mass spectrometry—based proteomics. Nature,
422, 193207.

Andersen,R. et al. (2006) Local graph partitioning using page rank vectors. In:
Foundations of Computer Science. IEEE Computer Society, Los Alamitos,
CA, USA, pp. 475486.

Berg,J. et al. (2004) Structure and evolution of protein interaction networks:
a statistical model for link dynamics and gene duplications. BMC Evol Biol,
4, 51.

Chindelevitch,L. et al. (2010) Local optimization for global alignment of protein
interaction networks. Pac. Symp. Biocomput., 2010, 1237132.

Collins,S.R. et al. (2007) Toward a comprehensive atlas of the physical interactome
of Saccharomyces cerevisiae. Mol. Cell Proteom’ws, 6, 4394150.

Flannick,J. et al. (2006) Graemlin: general and robust alignment of multiple large
interaction networks. Genome Res, 16, 11631181.

Flannick,J. et al. (2008) Automatic parameter learning for multiple network align—
ment. In: Research in Computational Molecular Biology, Lecture Notes in
Computer Science. Vol. 4955, Springer, Berlin/Heidelberg, pp. 214231.

Fossum,E. et al. (2009) Evolutionarin conserved herpes viral protein interaction
networks. PLoS Pathog., 5, e1000570.

Giot,L. et al. (2003) A protein interaction map of Drosophila melanogaster. Science,
302, 172771736.

Kayarkar,N.A. et al. (2009) Protein network in diseases. Int. J. Drug Discov., l,
1317.

Kelley,B.P. et al. (2003) Conserved pathways within bacteria and yeast as revealed by
global protein network alignment. Proc. Natl Acad. Sci. USA, 100, 1139441399.

Kelley,B. et al. (2004) PathBLAST: a tool for alignment of protein interaction
networks. Nucl. Acids Res, 32, 83788.

Kerrien,S. et al. (2012) The IntAct molecular interaction database in 2012. BMC
Bioinformatics, 40, D8417D846.

Klau,G. (2009) A new graph—based method for pairwise global network alignment.
BMC Bioinformatics, 10, SS9.

Koyuturk,M. et al. (2006) Pairwise alignment of protein interaction networks.
J. Comput. Biol, 13, 1827199.

Kuchaiev,O. et al. (2010) Topological network alignment uncovers biological
function and phylogeny. J. R. Soc. Interface, 7, 134171354.

Kuchaiev,O. and Przulj,N. (2011) Integrative network alignment reveals large
regions of global network similarity in yeast and human. Bioinformatics, 27,
13931396.

Milenkovic,T. et al. (2010) Optimal network alignment with graphlet degree vectors.
Cancer Informat., 9, 1217137.

Mills—Tettey,G.A. et al. (2007) The dynamic Hungarian algorithm for the assign—
ment problem with changing costs. Robotics Institute, Technical Report CMU—
RI—TR—07—2.

Parrish,J.R. et al. (2007) A proteome—wide protein interaction map for
Campylobacter jejuni. Genome Biol, 8, R130.

Radivojac,P. et al. (2008) An integrated approach to inferring gene—disease associ—
ations in humans. Proteins, 72, 10331037.

 

1661

12 /310's12u1n0fp101x0'so112111101u101q//:d1111 111011 pap201um0q

9103 ‘0g1sn8nv 110 ::

B.Neyshabur et al.

 

thetsky,A. and Gomez,S.M. (2001) Birth of scale—free molecular networks and the
number of distinct DNA and protein domains per genome. Bioinformatics, 17,
9887996.

Sharan,R. et al. (2005) Conserved patterns of protein interaction in multiple species.
PNAS, 102, 19731979.

Singh,R. et al. (2007) Pairwise global alignment of protein interaction networks by
matching neighborhood topology. In: Research in Computational Molecular
Biology, Vol. 4453, Lecture Notes in Computer Science. Springer, Berlin/
Heidelberg, p. 1631.

Singh,R. et al. (2008) Global alignment of multiple protein interaction networks.
Proc. Paci. Symposium on Biocomputing, 13, 3037314.

Singh,R. et al. (2008) Global alignment of multiple protein interaction networks
with application to functional orthology detection. Proc. Natl Acad. of Sci.
USA, 105, 12763712768.

Stelzl,U. et al. (2005) A human protein—protein interaction network: a resource for
annotating the proteome. Cell, 122, 9577968.

The Gene Ontology Consortium. (2000) Gene ontology: tool for the uniﬁcation of
biology. Nat. Genet, 25, 25729.

Tian,W. and Samatova,N. (2009) Pairwise alignment of interaction networks by fast
identication of maximal conserved patterns. In: Pacific Symposium on
Biocomputing. pp. 997110.

von Mering,C. et al. (2002) Comparative assessment of large—scale data sets of
protein—protein interactions. Nature, 417, 3994103.

Wagner,A. (2001) The yeast protein interaction network evolves rapidly and
contains few redundant duplicate genes. Molecular Biology and Evolution, 18,
128371292.

Zaslavskiy,M. et al. (2009) Global alignment of protein—protein interaction net—
works by graph matching methods. Bioinformatics, 25, i2597i267.

Schlicker et al. (2006) A new measure for functional similarity of gene products
based on Gene Ontology. BMC Bioinformatics, 7, 302.

 

1662

12 /310's12u1n0fp101x0'so112111101u101q//:d1111 111011 pap201um0q

9103 ‘0g1sn8nv 110 ::

