BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

C.Chung et al.

 

Phosphorylation Localization Score (PLS) in InsPecT (Albu—
querque et al., 2008), SLoMo (Bailey et al., 2009), Phosphinator
(Phanstiel et al., 2011), PhosphoRS (Taus et al., 2011). Examples
of the latter scoring strategy are Mascot Delta Score (Savitski
et al., 2011), the site localization in peptide (SLIP) score in Pro—
tein Prospector (Baker et al., 2011) and the variable modiﬁcation
localization score in Spectrum Mill (Agilent, 2005). A review of
the different modification site scoring localization methods is
provided in (Chalkley and Clauser, 2012).

PTM reﬁnement using a modiﬁcation site localization scoring
algorithm can be achieved by reassigning the modification pos—
ition to the highest scoring position for each modiﬁed peptide.
However, modiﬁcation site localization scoring methods are lim—
ited when used for general PTM reﬁnement owing to the follow—
ing three reasons. First, a predeﬁned list of PTMs is required for
these scoring methods. Second, these scoring methods assume
that input—predicted modiﬁcation masses are error—free and are
mapped precisely to one of the PTMs in the predeﬁned list.
Lastly, most of these scoring methods are designed to score
only phosphorylated predictions. Consequently, modiﬁcation
site localization scoring methods are ill—suited to analyze PTM
datasets generated from blind PTM search engines.

The second type of PTM reﬁnement approach is to reﬁne both
observed modiﬁcation masses and modiﬁcation positions. Two
recently published algorithms that use this type of PTM reﬁne—
ment method are PTMFinder (Tanner et al., 2008) and our pre—
vious algorithm, PTMClust (Chung et al., 2011). PTMFinder
takes a peptide—level approach to PTM reﬁnement, where it
groups and reanalyzes spectra mapping to the same modiﬁed
peptide sequence to produce for each spectrum a ﬁnal peptide
sequence with a modiﬁcation mass and a modiﬁcation position.
Hence, reﬁnement using this method is limited to modiﬁed pep—
tides that occur multiple times in the same dataset. As shown in a
recent study, a modiﬁed peptide is rarely found more than three
times even for a large—scale, genome—wide experiment (Chung
et al., 2011). Furthermore, PTMFinder suffers from favoring
high abundance modiﬁed peptides and discretizing observed
modiﬁcation masses. In contrast, PTMClust accounts for errors
of the observed modiﬁcation masses and modiﬁcation positions at
the PTM level, and overcomes several issues that PTMFinder has.

The principle behind, and the distinguishing feature of,
PTMClust is modeling modiﬁcations at the PTM level instead of
at the peptide level. While peptide—level modeling can beneﬁt from
correcting low—level errors, the PTMClust approach has the ad—
vantage of accounting for low abundance modiﬁed peptides be—
cause other peptides with the same underlying PTM can help
identify the correct but unknown modiﬁcation mass and modiﬁed
amino acid. PTMClust uses a generative model to capture the
hidden relationship between factors inﬂuencing the PTM mapping
process. It uses the expectation—maximization (EM) algorithm and
a modiﬁed version of the split and merge model selection method
to learn and infer an optimal parameter setting for the model. As
part of the model selection procedure, a range of models are
learned by adjusting a model complexity parameter, and the
ﬁnal model is selected by weighting the trade—off between false
positives (determined using decoy peptides) and correct (real) pep—
tides detected. The resulting PTM predictions are of higher quality
than those taken from existing blind PTM search engines alone
and those post—analyzed with PTMFinder (Chung et al., 2011).

Here, we address some limitations of PTMClust: (i) the use of
a greedy method for selecting the number of PTM clusters,
(ii) the need for manual parameter tuning, and (iii) the lack of
a conﬁdence score per modiﬁcation position. We overcame these
limitations by extending the PTMClust model to allow for an
unbounded number of mixture components that can account for
uncertainties in the quantity and identity of PTMs in the input
data. The model makes use of an inﬁnite non—parametric mixture
model, so we refer to it as inﬁnite—PTMClust or zPTMClust. This
extension parallels the conversion from a ﬁnite to an inﬁnite
standard mixture model (IMM), but the complex nature of the
underlying PTMClust model makes this extension non—trivial.
We derived and implemented a Gibbs sampling algorithm
(Bishop, 2006; Geman and Geman, 1984) and a split—and—merge
Metropolis—Hastings algorithm (Jain and Neal, 2000), which
enable iPTMClust to efﬁciently infer the groupings of input
modiﬁed peptides and reﬁne the peptides’ modiﬁcation masses
and modiﬁcation positions. zPTMClust achieves the following
beneﬁts: (i) it outperforms PTMClust and other PTM refinement
algorithms, (ii) it provides a more highly automated model selec—
tion method that does not require manual parameter tuning, and
(iii) it outputs modiﬁcation position—level conﬁdence scores that
users can use to assess the quality of the result and further reﬁne
their analyses. In a series of benchmark experiments on both
synthetic and real—world phosphopeptide datasets, we show
that zPTMClust outperforms PTMClust and other state—of—
the—art PTM prediction and PTM reﬁnement algorithms. To
ensure broad applicability, we have designed and optimized
iPTMClust to analyze PTM data generated from both low—
and high—resolution MS/MS spectra processed by popular
blind PTM search engines. As with PTMClust, the input to
iPTMClust is a list of PTM predictions consisting of the peptide
sequence, modiﬁcation position and modiﬁcation mass.

2 METHODS

Similar to PTMClust, iPTMClust is based on a generative probability
model that describes a process in which observed modiﬁed peptides can
be generated by modeling interactions between hidden variables that play
a role in the protein modiﬁcation process. Given an observed modiﬁca-
tion, we assume it comes from one of many PTMs. However, the number
and identity of these PTMs are unknown. Our method accounts for this
uncertainty by considering a variable unbounded number of PTMs. By
deﬁning appropriate priors on the hidden variables, over-ﬁtting can be
avoided, and only a ﬁnite set of PTM groups are used at anytime during
inference. The latter point is important because it makes calculations in
the algorithm tractable. During inference, the properties of the active
PTM groups are inﬂuenced by the input data and the chosen priors.
We adapted both the Gibbs sampling and the restricted Gibbs sampling
split-merge algorithms to infer the values of the hidden variables and
parameters in our model. After inference, these hidden variables and
model parameters can be used to deduce the true modiﬁcation mass
and a conﬁdence score per possible modiﬁcation position for each
input peptide sequence, or the maximum a posteriori (MAP) estimate
of modiﬁcation masses and positions.

2.1 iPTMClust model and conditional distributions

The core of the generative model in [PTMClust is the same as in
PTMClust: it describes how a pair of observed modiﬁcation mass and
modiﬁcation position are generated. iPTMClust extends PTMClust by

 

822

ﬁm'spzumofpmﬂo'sopeuuopnorq/ﬁdnq

iPTMCIust: Non-parametric Bayesian PTM refinement algorithm

 

introducing priors on model variables and parameters that govern the
choice of active PTM groups from a boundless number of PTM groups.
Given the type of PTM (PTM group) chosen from one of the limitless
numbers of PTM groups, we can generate the observed modiﬁcation
mass as a noisy version of the mean modiﬁcation mass, and select an
amino acid most likely to contain the modiﬁcation as the modiﬁed amino
acid. Given the peptide sequence, we assume that the ‘true’ modiﬁcation
position is uniformly distributed among those positions that match the
modiﬁed amino acid. Finally, we assume that the observed modiﬁcation
position is a noisy version of the true modiﬁcation position.

The structural relationships between variables are shown by the
Bayesian network in Figure l. The top part outlines the priors represented
by their corresponding hyper-parameters placed on the model parameters:
mixing coefﬁcient, modification mass means, modiﬁcation mass variances
and probability of modiﬁcation occurring on an amino acid. The bottom
portion describes the model for one input peptide and is repeated for N
measurements, as indicated by the plate notation. The extension from
PTMClust to IPTMClust follows similar steps as for a standard mixture
model, as given in (Escobar and West, 1994; Rasmussen, 2000). In the
following, we outline the rational and intuition behind the different com-
ponents of our model, and the conditional probabilities used during
Markov chain sampling. Details can be found in the Appendix.

In our model, each input peptide sequence S", indexed by
n e {1, ...,N}, where N is the number of peptides in the dataset, has a
corresponding discrete peptide length L", observed modiﬁcation position
x" e {1, ..., Ln} and observed modiﬁcation mass m". We denote the amino
acid in position j of the input sequence n as 8,,(1'). The total number of
values Sn(j) can take on is A = 24, which includes the 20 naturally
occurring amino acids and four special characters indicating the begin-
ning and end of proteins and peptides. Additionally, we denote ok to be
the unknown number of input peptides assigned to cluster k. The hidden
variable 6,, e [l,..,oo] denotes the unknown PTM group that peptide
sequence n is assigned to. Following from the derivation of IMMs with
a Chinese Restaurant Process (Antoniak, 1974; Ferguson, 1973), its prob-
ability conditioned on all other c,,’s takes into consideration the likelihood

 

 

 

 

 

 

 

 

 

A. l) i; 'y (,0 Hyperparameters
. . . .
00
pk Parameters
PTM
group Modiﬁed
aminoacid
Observed
mummi” . Correct Observations and
mass Peptide . _ I _
sequence modlﬁcatlorl hidden variables
position
Observed
modification
position

 

 

Fig. 1. A Bayesian network describing the generative model for our new
algorithm iPTMClust, using plate notation. The shaded nodes represent
observed variables, the unshaded nodes represent hidden variables and
hyper-parameters are shown outside of the plates. The model describes
how the observed modiﬁcation mass and position are generated. The
bottom part captures the assumptions about how each observation is
generated. The plate notation indicates that there are N copies of the
model, one for each measurement. The top portion outlines the structure
of the hierarchy of priors and hyper-priors placed on the model param-
eters, mixing coefﬁcients, modiﬁcation mass means, modiﬁcation vari-
ances and probability of modiﬁed amino acid. The outer plate shows
that there is potentially an inﬁnite number of clusters, one for each pos-
sible PTM group. The probability of modiﬁed amino acid [BM- is
embedded in two plates signiﬁes that there are K>< A copies, one for
each K —> oo PTM groups and A possible amino acids

of the n-th input modiﬁed peptide belonging to the PTM group index is
given as

0711.]:
N71er
y

 

ifo,n_k>o

P(Cn = klchia ya  2 Otherwise

,, (1)

 

N71er

where 0,"). is the number of peptides assigned to cluster k that does not
consider the n-th peptide sequence, N\n indicates all indices excluding n,
CM" is shorthand notation for C,- : Vi e {N\n}, b is the appropriate nor-
malizing constant so the probabilities sum to one, y is the hyper-
parameter concentration parameter and (9 represents hyper-parameters
A, U, (p, E, y and (0. Furthermore, we can write the conditional posterior
probability for 6,, that takes into consideration the likelihood of the n-th
input modiﬁed peptide belonging to the PTM group index by C", using
parameter setting from the previous sample iteration, as follows, using D
to indicate the observed data:

 

P(CH = klcl'VVia V, 89 
bjyitjiin(anaZnaxmrnnlcmS1158)  gilt/{>0 
 fP(a,,, 2,7, x", m", Qlcn, Sn, ®)8H0(6) otherwise

where 6 represents parameters M, E and ﬂ, and H0 indicates the
prior distribution placed on M, E and )3. The calculations of the condi-
tional posterior probability P(a,,,z,,,x,,,m,,|c,,,S,,,(~)) and the integral
fP(a,,,z,,,xn,n1n,6|cn,Sn,®)8H0(6) are given later in Equations 13
and 14, respectively. Given a vague inverse gamma prior on y,
P(y) 2 19(1, 1), its conditional posterior can be derived by combining
the joint distribution of c,,’s with the prior to give

PWVCN) CX {144/2 EXPU—ZVYINWHINN‘F WT] (3)

We assume that the observed modiﬁcation mass for each PTM group is
normally distributed around the true modiﬁcation mass,
P(m,, lo" 2 k) 2 N04, 2A.), where m. and EA. are the mean and variance
of the modiﬁcation mass in the k-th PTM group.

For mathematical convenience, we used the conjugate prior normal-
inverse gamma distribution with hyper-parameter mean A, variance U,
shape (p and scale $1 for all PTM groups. Broad and vague correspond-
ing priors are given to each hyper-parameter to account for uncertainty in
their values (see Supplementary Information for details). Given the com-
bination of prior and hyper-prior distributions used, the conditional pos-
teriors for A, U, (p and E have the following forms:

Mai + v2; m 1 >

P(XIM17A,U)=N< 1/U£+/w ’m (4)

P01011432») = 91k +1310? +1)’1(Ui+ Z]; (W — M2)“ (5)

Igor} I;

PWIEFA», s) cx r(§)’ke’1/2¢(§)_H (Ersﬁe’m/Z (6)
':l

2
J

ME'EI’k’Wzgl’WLIUWHYTUJZWZL2011} (7)

where in and a: are the mean and variance of the observed modiﬁcation
masses, F(-) is the gamma function with the form 1‘01) 2 (n — l)! for a
positive integer n and l — k is shorthand for l, ..., k.

By using conjugate priors on m. and 2A., both these parameters can be
integrated out to give a probability of mn based directly on the
hyper-parameters:

P(n1lilcli9 A? U? (p9 

= fP(m,,|c,, 2 law, Ek)P(Mk|A, U)P(Ekl(p, SQUABEA (g)

= {a X,(U +1)(o + airlé]

 

823

/810'SIEumo_fpmjxo'soiJEmJOJUioiW/zduq

C.Chung et al.

 

where t(-) is the Student’s t-distribution, 0k is the number of peptides
assigned to cluster k, ¢ = W, A = A + 0),, U = U + 0),,

tp+0k
A — 2 A V 17 3 — ~
g = g + ZWLCFA (m, — mi.) + —”"§"J:"Uk‘”) , and m), = izﬁvmﬂ m, 1s the
average observed modiﬁcation mass for peptides assigned to the k-th

PTM group.

Let a" : n e {1, ...,N} denote the true (hidden) modified amino acid
(i.e. the amino acid that the PTM occurs on) for the n-th peptide se-
quence. Then, the probability of a,, given that the PTM group is k is
modeled as a multinomial distribution with parameters [BMW 2 l, ..., A. A
conjugate Dirichlet distribution with hyper-parameter a) is used for )3)”;
The hyper-parameter a) is given a vague inverse gamma distribution.
Because a conjugate prior is used on the ﬁk,’s, we can integrate them
out using a standard Dirichlet integral. This leads to the conditional
posterior of a cluster assignment given all others:

aim/{i + %

0k _ , + gamma", 5,) (9)

P(an = ilcﬂ = k, aimzmxm Sm w) =
where P(2,,,X,,|a,,, S,,) can be factorized into P(2,,|a,,, S,,)P(X,,|s,,). Both
P(2,,|a,,, S,,) and P(X,,|S,,) are discussed below. The conditional posterior
for the hyper-parameter a) can be derived similar to Equation 3 to give

P(w|A, N) = {CUM/2 exp[(—2w)’1r(w)]}[r(N + w)]’1 (10)

The details of the rest of the model are the same as those in PTMClust
given in (Chung et al., 2011). To reiterate, given the peptide sequence 5,,
and true (hidden) modiﬁed amino acid a,,, we assume the distribution
over modification position 2,, is uniform over those with matching amino
acids:

1 if 5,0) = i,j>0

P(Zn ZjlanziaSn)=  ifj=0 (11)
0 otherwise

where 8,,» denotes the number of times amino acid i occurs in sequence
n and 2,, = 0 indicates that the true PTM occurs outside of the
given peptide sequence. Given the true modiﬁcation position 2,,, the prob-
ability of modiﬁcation position error (X, — 2,,) for the observed modiﬁ-
cation position X,, is modeled with a discrete probability distribution,
given as

$00. - j) ifj > 0
P(Xrilzn =1) = ¢(Ln) ifj = 0 (12)
0 otherwise

where the likelihood function ¢ accounts for the modiﬁcation position
error. This likelihood function is shared across all PTM groups and was
inferred from our empirical observation of the yeast PTM dataset as
described in (Chung et al., 2011).

Finally, we outline how the conditional posterior probability
P(a, 2, X, mlc, S, 6)) and the integral fP(a, 2, X, m, u, 2, ﬁle, S, ®)3H0
(u, E,ﬁ) used in Equation 2 can be evaluated analytically. Based on
the structure of the Bayesian network of our model given in Figure l,
for a given PTM group k, P(a, 2, X, mlS, 6)) can be derived as follows:

P(anaznaXnan1n|CnaSna®)
= /P(an,zmxmmmu,2,13%,Sn,®)3H7n.k(M,>3,ﬁ) (13)

= Fenian, Sn)P(anzn)[Dir(w + 01>]{t[¢, X, (a + ué/(o + on] },

where HL"). is the posterior distribution of u, E and )3 based on their
priors and all peptides that are assigned to the k-th PTM group excluding
the n-th peptide sequence, and the variables é, A, U and § are deﬁned
before in Equation 8. It is easy to see the integral with respect to priors

f P(a,,, 2,,, X", m,,, u, 2, ﬁle", 5,, ®)3H0(p,, E, )3) for unoccupied clusters is
equivalent to setting 0,, = 0 in Equation 13, which can be written as

/P(ana Zn, X", "1", Ma 22 ﬁlcﬂa Sm ®)3H0(Ma Ea 
A (14)
= Fenian, Sam" 12,)[Dir(w)1{t[¢, X, (a + 1W] }

By combining the structure of the Bayesian network and the condi-
tional distributions described above, we can write the joint distribution as

P(c, a, 2, X, m, u, E, )3, A, U, (p, S, y, wlS, \II)
= P(J/|\1’)P(A|‘1’)P(U|\1’)P(¢|\1’)P(§|\1’)P(wl\1’) 1‘11, [Pom (15)
P(n1nlcna A, Ua (ﬂ, §)P(anlcm w)P(Zn|am Sm w)P(Xn|Zm ‘11)],

where \11 represents the model hyper-parameters for the hyper-priors
placed on y, A, U, (p, S and a).

2.2 Markov chain inference method

The combination of complicated interactions of hidden variables and
priors in iPTMClust leads to a complex joint distribution over
high-dimensional spaces, which is impossible to characterize analytically
in its entirety. So, we use an approximate Markov Chain Monte Carlo
(MCMC) method (Escobar and West, 1994; Neal, 2000b). MCMC meth-
ods are commonly used for IMM models. In MCMC sampling, the
model posterior distribution can be sampled to collect instances of par-
ameter and variable settings likely under the model. Given a large enough
collection of samples, the posterior can be approximated, and the ideal
settings of model parameters and hidden variables can be inferred.

Although the Gibbs sampling algorithm is a commonly used MCMC
sampling method for non-parametric Bayesian clustering models such as
ours, it can mix poorly and produce poor results when the input dataset is
large and complex (Jain and Neal, 2000). Hence, in addition to the Gibbs
sampling method, we derived and implemented the restricted Gibbs sam-
pling split-merge algorithm (or the split-merge sampling algorithm for
short) (Jain and Neal, 2000) for iPTMClust. The split-merge sampling
algorithm is designed to mitigate the aforementioned issues with the
Gibbs sampling method. We adhered to the recommended settings for
running this sampling algorithm given in (Jain and Neal, 2000).

Both of the methods with and without split-merge steps require Gibbs
sampling updates. For each Gibbs sampling step, we use the following
procedure. First, we sample the set of hidden variables (parameters are
considered as hidden variables) associated with input peptide n, where
n e {1, ...,N}. Starting with the n-th input observation, for each repre-
sented (occupied) cluster KW, we draw a,, according to Equation 9 and 2,,
using Equation 11. Next, we sample a new cluster assignment 6,, from
Equation 2. Finally, we update the sufﬁcient statistics associated with
assignments for C” and a,,. We repeat this procedure for each input pep-
tide sequence. At the end of each Gibbs sampling step, we obtain a new
value for each hyper-parameter, with the exception for y, a) and (p, dir-
ectly by sampling from their conditional posterior distribution given in
Equations 4, 5 and 6, which are all distributions of standard form.
Although they are not standard distributions, the conditional posteriors
for y, a) and (p are all log-concave, which implies that they are unimodal
in the logarithmic domain and have a single global optimum. The
log-posteriors of y, a) and S are given as

In P(y|k,N) = C + (k —  ln(y) — Ziyln F(y) — 1n F(N+ y) (16)

In P(w|A, N) = C + (k —  1mm) — i111 F(w) — 1n r(N+ w) (17)

In P(<p|21,  2,, g) = C — kln F((p/2) — (2¢)’1+

, (18)
(W — 3/2)1n(¢/2) + 2:”, («J/2mm 2,. +1119 — (ms/2)

 

824

ﬁm'spzumofpmjxo'sopnuuopnorq/ﬁdnq

iPTMCIust: Non-parametric Bayesian PTM refinement algorithm

 

where C is a normalizing constant. Given the equations for the
log-posteriors and their log-concave property, a new value for each
hyper-parameter can be efﬁciently sampled using the efﬁcient, easily im-
plemented slice sampling method (Neal, 2000a).

The MCMC sequence is guaranteed to converge to the exact posterior,
eventually. However, in practice, it is common to terminate the sampling
procedure after a ﬁxed number of iterations, based on an analysis of how
well the chain has mixed according to trace plots of the distribution of
posterior probabilities and the number of clusters over time.
Furthermore, samples from a burn-in period at the beginning of the
chain, before mixing has occurred, are discarded. Again, this is deter-
mined using trace plots. We found that 1000 bum-in samples and a
total of 15000 samples are enough to produce a good approximation
of the posterior for the large-scale PTM datasets we studied, including
the phosphopeptides, yeast proteome and human proteiniprotein inter-
action datasets described below. Details of this analysis, including trace
plots, are given in Supplementary Information. For simpler datasets, such
as the synthetic and phosphorylation datasets, a setting of 100 burn-ins
and 6000 total samples was sufﬁcient. A detailed analysis is provided in
Supplementary Information. Lastly, to counter auto-correlations
amongst the samples, we only use results taken from every ﬁfth sample.

2.3 Background model

Unlike PTMClust, the background model for iPTMClust does not expli-
citly encompass a predeﬁned background component. Instead, it uses a
background model consisting of multiple background components
learned directly from the input data. Based on the modification mass
variance calculated for each PTM group, we deﬁne a background com-
ponent to be a PTM group with a variance 2 2.0. This threshold is
chosen based on the assumption that valid PTM groups should have
well-deﬁned modiﬁcation masses, and thus have low variance. By allow-
ing for multiple background components instead of one, we observe em-
pirically that the new model is better at capturing spurious data.

3 RESULTS

Our first goal is to demonstrate that iPTMClust outperforms
existing algorithms both in terms of ﬁnding correct clustering
assignments and in refining PTMs on a set of noisy modiﬁed
peptide sequences. To this end, we conducted two experiments.
We benchmarked iPTMClust against standard clustering algo—
rithms, k—means and MOG, as well as our previous algorithm
PTMClust. The key observation, given in Supplementary Figure
S1, is that iPTMClust using the split—merge algorithm attains the
most consistent results across different settings and achieves in—
creasingly better results than PTMClust as the problem becomes
more complex. Given that the true modiﬁcation positions are
known for simulated data, we can evaluate how well
PTMClust and implementations of our new algorithm perform
for the task of PTM reﬁnement. Supplementary Figure S2 shows
the same trend as above: iPTMClust with the split—merge algo—
rithm outperforms the others in almost all cases. We also com—
pared blind PTM search engines SIMS (Liu et al., 2008), InsPecT
(Tanner et al., 2005) and MODmap (Na and Paek, 2009), a
state—of—the—art PTM reﬁnement algorithm PTMFinder and
our algorithms PTMClust and iPTMClust on detecting the
true modiﬁcation positions from a well—studied phosphopeptide
dataset. In each of the experiments, we use both the split—merge
and the Gibbs sampling inference algorithms for iPTMClust. We
report results based on MAP estimation for zPTMClust for both
experiments.

The second goal is to directly show the applicability of
zPTMClust to datasets taken from studies of complex protein
solutions. To achieve this goal, we analyze data taken from a
genome—wide yeast and a human chromatin—speciﬁc protein com—
plex study. We have limited our analyses to only post—processing
PTM predictions generated from SIMS with either PTMClust or
zPTMClust. We include analysis from PTMClust to highlight
that iPTMClust is producing sensible results.

In these experiments, we initialize k—means, MOG and
PTMClust with settings that are outlined in (Chung et al.,
2011). The settings for the number of burn—in and total samples
for iPTMClust are described in the Supplementary Information.

3.1 Benchmarking against phosphopeptide predictions

We compare iPTMClust against current PTM search engines
and PTM reﬁnement algorithms using a real—world dataset en—
riched for phosphopeptides containing modiﬁcation sites that are
validated (Beausoleil et al., 2004). We will refer to the identities
of the known peptide sequences and their modiﬁcation sites as
the reference. The dataset consists of 1655 spectra, but we will
focus exclusively on the 1340 spectra mapped and curated as
singly modiﬁed phosphopeptides (SIMS, InsPecT, PTMClust
and iPTMClust are limited to one modiﬁcation per peptide se—
quence). In this analysis, we define positives (P) as outputs from
the base blind PTM search engine that match to the reference
considering only their peptide sequence, i.e. disregarding the pos—
itions of their modiﬁcation, and negatives (N) as all other out—
puts that do not match their corresponding reference peptide
sequences. Each blind PTM search engine produces a different
number of P and N. For SIMS, PTMClust and iPTMClust
(SIMS was used as the base blind PTM search engine), there
are 895P and 445 N. Lastly, for PTMFinder, which uses
InsPecT as its base unrestricted PTM search engine, there are
860 P and 480 N.

For iPTMClust, in addition to the MAP estimate, we con—
sidered inference by averaging over samples to produce a conﬁ—
dence score per modiﬁcation position for each output peptide
sequence. By varying the conﬁdence threshold setting, we can
adjust the sensitivity and speciﬁcity of the PTM predictions.
For iPTMClust results evaluated using conﬁdence scores, we
deﬁne a PTM prediction as a peptide sequence and its modifica—
tion positions with conﬁdence scores above the threshold; pep—
tide sequences that do not have at least one modiﬁcation position
with a conﬁdence score above the threshold are considered to be
assigned to the background model. For PTMClust and
zPTMClust using MAP estimate, a prediction is any peptide se—
quence not assigned to the background model. All peptide se—
quences assigned to the background model are removed from the
evaluation. Lastly, we consider all outputs as predictions for the
other algorithms because they do not use a background model.

Given the true phosphorylation of each peptide are known, we
plot the number of correct phosphorylation sites versus the num—
ber of incorrect phosphorylation sites identified in Figure 2A for
the results of iPTMClust, PTMClust, PTMFinder and InsPecT.
For this experiment, the blind PTM search engine InsPecT was
used to analyze the input spectra, then each of the PTM refine—
ment algorithms, iPTMClust, PTMClust and PTMFinder, were
used to post—process the PTM predictions output from InsPecT.

 

825

ﬁre'spzumofpmjxo'sopnuuopnorq/ﬁdnq

u
9
E
m
E
u.
2
:7)
m .
o
I
u
E
93
'5
o
B
E
3
z

+ iPTMClusl 7 Spwmerge
iPTMCILASi 7 5pm7merge (MAP)

+1FTMCIU. 7 1m):
iPTMCIusl 7 Gibbs MAP»

+ pmciw

PTMFinder

lnsFecT

in In) ' .. u sun

Num of False Phos. Sites identified

+1PTMCiusl - Sum-merge
lemons: 7 Sphkmerae MAP;
+1FTMCluSK 7 Gibbs
PTMClust 7 amps (MAP)
+ FIMClus|
sws

 

duq

/310'S[Buln0[pJOJXO'SOIJBLUJOJIIIOICI”

iPTMCIust: Non-parametric Bayesian PTM refinement algorithm

 

The estimated false discovery rate for the predictions made by
SIMS is 4.3% based on the number of decoy peptides identiﬁed.
Here, we present the result taken from our post—analysis using
iPTMClust with the split—merge algorithm (MAP estimate was
used). MAP estimate is used to simplify the analysis and the
mapping to known PTMs. The speciﬁc setting used for
PTMClust is described in (Chung et al., 2011).

The known set of modiﬁcations was taken from Uniprot
(Release 2010_11). We matched the sets of modiﬁed peptides
produced by SIMS and post—processed with iPTMClust with
the split—merge algorithm, iPTMClust with the Gibbs sampling
algorithm and PTMClust to the set of known yeast modiﬁcation
sites. This table shows the number of peptides and unique sites
that are mapped to known PTMs. The results show iPTMClust
is able to improve on SIMS and significantly outperform
PTMClust in a complex dataset.

A summary of commonly known PTMs taken from the
Uniprot knowledgebase (Release 2010_11) that are found in
our dataset is shown in Table 1. Overall, iPTMClust using
either the split—merge or the Gibbs sampling method is able to
reposition a large portion of modifications to known PTM sites
that were missed by SIMS originally (increase of ~ 49% unique
PTMs and ~ 34% modiﬁed peptides for split—merge, and ~ 55%
and ~ 43% for Gibbs). This represents a signiﬁcant increase over
what can be achieved using PTMClust. The most improvement is
gained with phosphorylation sites, where post—analysis with
iPTMClust is able to identify >65% more (known) unique
sites and almost double the number of instances of phosphopep—
tide when compared with the result obtained from SIMS.
However, iPTMClust using the split—merge method incorrectly
places a number of peptides with acetylation and other modiﬁ—
cations in the background model that SIMS correctly identiﬁed.
We note that iPTMClust using the Gibbs sampling method and
PTMClust did not make this mistake. A closer look reveals that
many of these instances belong to a few unique peptide se—
quences. The analysis on the yeast proteome dataset conﬁrms
that iPTMClust can detect other PTMs such as acetylation and
cysteine oxidation (cysteine sulﬁnic acid) in addition to phos—
phorylation. Moreover, the results reiterate that iPTMClust
using either the split—merge or the Gibbs sampling method can
refine a greater number of PTMs than PTMClust.

3.3 Analysis of human protein—protein interaction data

Protein complexes and protein7protein interactions studies are a
major focal point in the field of proteomics. However, to date,

the focus has been mainly on ﬁnding complex memberships and
interaction partners. Because it is well established that PTMs,
such as phosphorylation and acetylation, play a vital role in
the formation and regulation of protein7protein interactions,
we seek to complement these studies with an emphasis on the
identiﬁcation of PTMs.

The dataset we used consists of high mass—resolution MS/ MS
spectra (Orbitrap mass spectrometer) from a human protein7
protein interaction study searched using SIMS. The study is a
collaboration with the Emili lab at the University of Toronto,
and the dataset is not yet published at the time of writing. The
experimental protocol used is tandem afﬁnity puriﬁcation (Puig
et al., 2001; Rigaut et al., 1999) followed by MS approach.
Brieﬂy, the method proceeds by placing a biological tag on all
instances of a member of the complex of interest. Next, these
tagged proteins are isolated and puriﬁed along with their inter—
acting proteins, and ﬁnally, the set of puriﬁed proteins are sub—
jected to MS analyses.

Here, we chose to focus on three well—studied protein com—
plexes, the Mediator (MED), the RNA Polymerase II (POL2)
and the Polycomb Repressive Complex 1 (PRCl). This dataset
consists of 17 experiments. These experiments include technical
replicates, covering 6 of 12 proteins known to be in the MED
complex, two experiments covering 2 of the 32 members of the
POL2 complex and three experiments covering 2 of 12 members
of the PRCl complex. There is a total of 13 221 spectra mapped
to modiﬁed peptides by SIMS (estimated false discovery rate of
13.5% based on the number of decoy peptides identiﬁed) with a
modiﬁcation range (0, 300) Da.

Supplementary Table S1 highlights the 48 distinct peptide se—
quences putatively identiﬁed to be modiﬁed either with acetyl—
ation or phosphorylation. Including duplicates, 114 modiﬁed
peptides were found. Of the 48 unique peptides, 9 had at least
one instance with their modiﬁcation site corrected by iPTMClust
using the split—merge sampling algorithm that was originally mis—
placed by SIMS. These are highlighted in bold. We speculate this
smaller number improvement is due to two major reasons: (i) a
majority of the listed PTMs are acetylation, which SIMS does a
good job with, as seen in the yeast study above, and (ii) spectra
are cleaner owing to the use of a high—resolution mass spectrom—
eter. In this list, there are 15 putative novel modiﬁcation sites and
33 known ones according to the Uniprot knowledgebase
(Release 2011_12). Although the complete list is not shown,
after removing those assigned to the background model, we
have identiﬁed 10409 putative modiﬁed peptides such that a

Table 1. Summary of peptides with known PTM sites in the yeast proteome dataset

 

 

 

PTM Peptides with known PTM sites (number of unique sites)

i PTMClust split-merge i PTMClust Gibbs PTMClust SIMS
Phosphorylation 196 (103) 185 (101) 115 (66) 100 (61)
Acetylation 59 (5) 78 (9) 75 (9) 72 (8)
Cysteine oxidation (cysteine sulﬁnic acid) 7 (2) 6 (l) 7 (l) 6 (1)
Others 24 (2) 35 (5) 35 (5) 35 (5)
Total 286 (112) 304 (116) 232 (81) 213 (75)

 

 

827

ﬁre'spzumofpmjxo'sopnuuopnorq/ﬁdnq

C.Chung et al.

 

large portion of them is mapped to regions in their respective
proteins that do not contain known PTMs. Similar to those listed
putative, novel phosphorylated and acetylated peptides, we be—
lieve this list also contains many high—quality new PTM discov—
eries. Hence, this list represents a ﬁltered list of high—quality
candidates for further investigation. We have shown a PTM pre—
diction pipeline comprises a blind PTM search engine, and
zPTMClust can be fruitful in novel discoveries and should be
used routinely.

The use of a high mass—resolution mass spectrometer is ex—
pected to reduce errors and potentially remove the need for re—
ﬁnement of measured modiﬁcation masses. Even so, we noticed
many instances where the observed modiﬁcation mass deviates
from our refined modiﬁcation mass by ~1 Da. This modiﬁcation
mass error is believed to be due to the presence of isotopes.
Although heuristics can be used to account for these mass
shifts, such methods can be error—prone and cannot adapt to
unforeseen mass errors. Our results show that zPTMClust can
handle such errors and improve the quality of PTM predictions
taken from an analysis of a high mass—resolution mass
spectrometer.

4 CONCLUSION

Accurately identifying PTMs and their potential roles in clinical
studies such as biomarker discovery and drug development is an
important task. Although thousands of PTM candidates have
been reported using blind PTM search engines (Liu et al.,
2006, 2008; Han et al., 2005; Searle et al., 2006; Tanner et al.,
2005; Tsur et al., 2005), these blind PTM search algorithms suffer
from mass measurement inaccuracy and uncertainty in predict—
ing modiﬁcation positions, making the ﬁndings error prone. The
importance of post—processing PTM predictions using a PTM
reﬁnement algorithm have been established in (Chung et al.,
2011; Tanner et al., 2008). The previous state—of—the—art algo—
rithm, PTMClust, achieves a significantly higher PTM prediction
accuracy over blind PTM search engines alone and outperforms
existing PTM reﬁnement algorithm, PTMFinder. Despite signifi—
cant improvements in PTM prediction, PTMClust has three
main drawbacks of particular interest: (i) it uses of a greedy—
based non—automatic model selection algorithm, (ii) it requires
manual parameterization on the maximum number of PTM
groups and (iii) it does not provide a conﬁdence score per modi—
ﬁcation position.

To address these issues, we introduce iPTMClust. iPTMClust
extends PTMClust by using an infinite mixture model approach
that achieves the following three beneﬁts: (i) outperforming
PTMClust and other PTM reﬁnement algorithms, (ii) providing
a fully automated model selection method without the need for
any manual parameterization, and (iii) offering modiﬁcation pos—
ition level conﬁdence scores that users can use to assess the qual—
ity of the results and to greater reﬁne their analyses. Through a
series of benchmark experiments using both synthetic and real
(phosphopeptides and yeast proteome) data, we demonstrated
that zPTMClust better models the PTM generative process and
outperforms PTMClust, PTMFinder and other blind PTM
search engines. In addition, we analyzed data generated from a
yeast proteome study using zPTMClust in which we reported an
improvement over the base blind PTM search algorithm SIMS in

detecting annotated PTMs. Thousands of putative PTMs were
found in this analysis. Moreover, in our in—depth look at PTM
predictions for three human protein complexes, MED, POL2
and PRCl, iPTMClust identiﬁed numerous validated and puta—
tive phosphorylated and acetylated peptides that may be
involved in the formation and regulation of protein7protein
interactions. Further investigations are warranted, but we believe
a number of these putative predictions are valid PTMs and can
serve to further our understanding of the complexities involved
in protein7protein interactions. To summarize, our new algo—
rithm zPTMClust is easy to use, achieves overall greater perform—
ance than the state—of—the—art, provides conﬁdence scores at the
modiﬁcation position level that allow for a higher ﬂexibility
when evaluating potential PTMs and is designed to be broadly
applicable to PTM predictions generated from any blind PTM
search engine.

Given the rapid advancement of mass spectrometer technol—
ogy, how applicable is iPTMClust going forward? We explore
this question by analyzing data generated from high mass—
resolution mass spectrometers, e. g. from an Orbitrap. Although
mass accuracy has improved with the use of high mass—resolution
mass spectrometers, the presence of isotopes, for example, can
result in deviations in observed modification masses. In addition,
higher mass accuracy does not necessarily equate to errorless
modiﬁcation site determination. We have shown in our analysis
of the human protein complex data that problems with mass
measurement inaccuracy and uncertainty predicting modiﬁcation
positions continue to exist for data generated from high
mass—resolution mass spectrometers, such as an Orbitrap used
in the experiment. Our results demonstrate that iPTMClust can
improve on PTM predictions taken from data with high mass
accuracy, and continue to be a vital component of a
genome—wide PTM study.

In designing iPTMClust, we have developed two different in—
ference algorithms, the split—merge Metropolis—Hastings and the
Gibbs sampling algorithm. While the Gibbs sampling method is
the standard inference algorithm for Bayesian mixture models
and IMMs, the split—merge method is shown to perform better
when dealing with complex datasets (Jain and Neal, 2000).
Results of our synthetic data experiments also exhibit this
trend. zPTMClust using the Gibbs sampling method displays a
performance drop, while its counterpart using the split—merge
sampling algorithm perform consistently well as the data used
gets more complex. It is important to note that when there are
few PTMs within a small modiﬁcation mass window, say 172 Da
(e.g. when two or three PTM groups added in our experiment
with the synthetic data), our algorithm using the Gibbs sampling
performs at par with or slightly worse than its counterpart using
the split—merge method. Furthermore, iPTMClust using the
Gibbs sampling runs faster per iteration (~ 50% quicker) than
iPTMClust using the split—merge method. Hence, for large data—
sets, where running time can be overwhelmingly long, we recom—
mend running zPTMClust with the Gibbs sampling method as it
provides a good trade—off between quality of the result and com—
putational cost.

Despite outperforming its competitors, zPTMClust has a
number of limitations. Similar to PTMClust, it is unable to
handle more than one modification per input peptide sequence,
and PTM groups identiﬁed can contain multiple PTMs if their

 

828

ﬁre'spzumofpmjxo'sopnuuopnorq/ﬁdnq

iPTMCIust: Non-parametric Bayesian PTM refinement algorithm

 

modiﬁcation masses are similar. The latter problem is less of an
issue when working with high mass—resolution data. Moreover,
iPTMClust does not consider the underlying spectrum when
refining a PTM prediction. The presence of certain peaks in
the spectrum can add to support to a residue along the peptide
sequence as being the modiﬁcation position. Its limitations not—
withstanding, iPTMClust is shown to outperform both
PTMClust and previous state—of—the—art in our benchmark tests
using both synthetic and real—world PTM data.

ACKNOWLEDGEMENTS

We thank Jonathan Olsen, Jian Liu, Yoseph Barash and Leo Lee
for valuable conversations and Vincent Fong for his help with
collecting the experimental data and generating the SIMS and
InsPecT results.

Funding: This research was supported in parts by funds from a
John C Polanyi Award (to B.J.F.); an Operating Grant from the
Canadian Institutes of Health Research (to B.J.F.); and an
Ontario Ministry of Research and Innovation grant (to A.E.).

Conﬂict of Interest: none declared.

REFERENCES

Agilent (2005) Spectrum mill. http://www.chem.agilent.com/en—US/Products—
Services/Software—Informatics/Spectrum—Mill/pages/default.aspx.

Albuquerque,C.P. et al. (2008) A multidimensional chromatography technology for
in—depth phosphoproteome analysis. Mol. Cell Proteomics, 7, 138971396.

Antoniak,C.E. (1974) Mixtures of Dirichlet processes with applications to Bayesian
nonparametric problems. Ann. Stat., 2, 115271174.

Bailey,C.M. et al. (2009) SLoMo: automated site localization of modiﬁcations from
ETD/ECD mass spectra. J. Proteome Res., 8, 196571971.

Baker,P.R. et al. (2011) Modiﬁcation site localization scoring integrated into a
search engine. Mol. Cell Proteomics, 10, M111.008078.

Beausoleil,S. et al. (2004) Large-scale characterization of hela cell nuclear phospho—
proteins. Proc. Natl Acail. Sci. USA, 101, 1213(F12135.

Beausoleil,S.A. et al. (2006) A probability—based approach for high—throughput pro—
tein phosphorylation analysis and site localization. Nat. Biotechnol, 24,
128571292.

Bishop,C.M. (2006) Pattern Recognition and Machine Learning. Springer,
NY, USA.

Cantin,G.T. and Yates,J.R. (2004) Strategies for shotgun identiﬁcation of
post—translational modiﬁcations by mass spectrometry. J. Chromatogr, 1053,
7714.

Chalkley,R.J. and Clauser,K.R. (2012) Modiﬁcation site localization scoring: stra—
tegies and performance. Mol. Cell Proteomics., 11, 3714.

Chung,C. et al. (2011) Computational reﬁnement of post—translational modiﬁca—
tions predicted from tandem mass spectrometry. Bioinformatics, 27, 7977806.

Domon,B. and Aebersold,R. (2006) Mass spectrometry and protein analysis.
Science, 312, 2127217.

Escobar,M.D. and West,M. (1994) Bayesian density estimation and inference using
mixtures. J. Am. Stat. Assoc., 90, 5777588.

Ferguson,T.S. (1973) A Bayesian analysis of some nonparametric problems. Ann.
Stat., 1, 2097230.

Geman,S. and Geman,D. (1984) Stochastic relaxation, Gibbs distributions, and the
Bayesian restoration of images. IEEE Trans. Pattern Anal. Mac/t. Intel.,
PAMI-6, 7217741.

Han,Y. et al. (2005) Spider: software for protein identiﬁcation from sequence tags
with de novo sequencing error. J. Bioinform. Comput. Biol, 3, 6977716.

Jain,S. and Neal,R. (2000) A split—merge Markov chain Monte Carlo procedure for
the Dirichlet process mixture model. J. Comput. Graph. Stat., 13, 1587182.

Keller,A. et al. (2002) Empirical statistical model to estimate the accuracy of peptide
identiﬁcations made by MS/MS and database search. Anal. Chem, 74,
538375392.

Krogan,N. et al. (2006) Global landscape of protein complexes in the yeast
Saccharomyces cerevisiae. Nature, 440, 637%43.

Lehninger,A.L. et al. (1993) Principles of Biochemistry, 2nd edn. Worth Publishing,
New York, NY.

Liu,C. et al. (2006) Peptide sequence tag—based blind identiﬁcation of
post—translational modiﬁcations with point process model. Bioninformatics, 22,
e3077e313.

Liu,J. et al. (2008) Sequential interval motif search: unrestricted database searching
of global MS/MS datasets for unexpected post—translational modiﬁcations.
Anal. Cltem., 80, 784677854.

Mikesh,L.M. et al. (2006) The utility of ETD mass spectrometry in proteomic
analysis. Biocltim. Biophys. Acta., 1764, 181171822.

Na,S. and Paek,E. (2009) Prediction of novel modiﬁcations by unrestrictive search
of tandem mass spectra. J. Proteome Res., 8, 441841427.

Neal,R. (2000a) Slice sampling. Ann. Stat., 31, 7057767.

Neal,R.M. (2000b) Markov chain sampling methods for Dirichlet process mixture
models. J. Comput. Graph. Stat., 9, 2497265.

Olsen,J.V. et al. (2006) Global, in vivo, and site—speciﬁc phosphorylation dynamics
in signaling network. Cell, 127, 635%48.

Phanstiel,D.H. et al. (2011) Proteomic and phosphoproteomic comparison of
human ES and iPS cells. Mol. Cell Proteomics, 8, 8217827.

Puig,O. et al. (2001) The tandem afﬁnity puriﬁcation (tap) method: a general pro—
cedure of protein complex puriﬁcation. Met/toils, 24, 2187229.

Ramakrishnan,S. et al. (2009a) Mining gene functional networks to improve
mass—spectrometry based protein identiﬁcation. Bioinformatics, 25, 295572961.

Ramakrishnan,S.R. et al. (2009b) Integrating shotgun proteomics and mRNA ex—
pression data to improve protein identiﬁcation. Bioinformatics, 25, 139771403.

Rasmussen,C.E. (2000) The inﬁnite Gaussian mixture model. In: Solla,S.A.,
Leen,T.K. and Miiller,K.—R. (eds) Advances in Neural Information Processing
Systems 12. MIT Press, Cambridge, MA, USA, pp. 55¢560.

Rigaut,G. et al. (1999) A generic protein puriﬁcation method for protein complex
characterization and proteome exploration. Nat. Biotechnol, 17, 103(%1032.
Savitski,M.M. et al. (2011) Conﬁdent phosphorylation site localization using the

mascot delta score. Mol. Cell Proteomics, 10, M110.003830.

Searle,B. et al. (2006) Identiﬁcation of protein modiﬁcations using MS/MS de novo
sequencing and the opensea alignment algorithm. J. Proteome Res., 4, 5467554.

Tanner,S. et al. (2005) Inspect: identiﬁcation of posttranslationally modiﬁed pep—
tides from tandem mass spectra. Anal. Chem, 77, 462C4639.

Tanner,S. et al. (2008) Accurate annotation of peptide modiﬁcations through
unrestrictive database search. J. Proteome Res., 7, 1707181.

Taus,T. et al. (201 1) Universal and conﬁdent phosphorylation site localization using
phosphors. J. Proteome Res., 10, 5354ﬁ5362.

Tsur,D. et al. (2005) Identiﬁcation of post—translational modiﬁcations by blind
search of mass spectra. Nat. Biotechnol, 23, 156271567.

 

829

ﬁm'smumofptho'sopnuuowtotq/pdnq

