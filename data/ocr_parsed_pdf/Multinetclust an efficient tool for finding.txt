Vol. 26 no. 19 2010, pages 2482-2483
APP N doi:10.1093/bioinformatics/btq435

 

Data and text mining

Advance Access publication August 2, 2010

Multi-netclust: an efficient tool for finding connected clusters in

multi-parametric networks

Arnold Kuzniar1’2’1, Somdutta Dhir3’T, Harm Nijveenlaz, S ndor Pongor3’4

and Jack AM. Leunissenlaw

1Laboratory of Bioinformatios, Wageningen University and Research Centre, PO Box 569, 6700 AN Wageningen,
2The Netherlands Bioinformatios Centre, PO Box 9101, 6500 HB Nijmegen, The Netherlands, 3Protein Structure and
Bioinformatios, International Centre for Genetic Engineering and Biotechnology, Padrioiano 99, |—3401 2 Trieste, Italy
and 4Bioinformatics Group, Biological Research Centre, Hungarian Academy of Sciences, Temesv ri krt. 62, H—6701

Szeged, Hungary
Associate Editor: Jonathan Wren

 

ABSTRACT

Summary: Multi-netclust is a simple tool that allows users to extract
connected clusters of data represented by different networks given in
the form of matrices. The tool uses user-defined threshold values to
combine the matrices, and uses a straightforward, memory-efficient
graph algorithm to find clusters that are connected in all or in either of
the networks. The tool is written in C/C++ and is available either as a
form-based or as a command-line-based program running on Linux
platforms. The algorithm is fast, processing a network of >106 nodes
and 108 edges takes only a few minutes on an ordinary computer.
Availability: http://www.bioinformatics.nl/netclust/

Contact: jack.leunissen@wur.nl

Supplementary information: Supplementary data are available at
Bioinformatios online.

Received on May 18, 2010; revised and accepted on July 22, 2010

1 INTRODUCTION

Finding tightly connected clusters in large datasets is a frequent
task in many areas of bioinformatics such as the analysis
of protein similarity networks, microarray or protein—protein
interaction data. Classical clustering algorithms have difﬁculties
in handling large datasets used in bioinformatics owing to high
demands on computer resources. Fast heuristic algorithms have
been developed for speciﬁc tasks, e.g. BLASTClust (ftp://ftp.ncbi
.nih.gov/blast/documents/blastclust.html) from the NCBI—BLAST
package (Altschul et al., 1990), Tribe-MCL (Enright et al., 2002)
or the CD-HIT (Li and Godzik, 2006) can delineate protein or gene
families in a large network of sequence similarities (e.g. BLAST
E -values). However, there are no apparent tools that could efﬁciently
handle large multiple networks, such as those necessary to group
proteins using more than one similarity criterion (e.g. based on
sequence, structure or function) (Fig. 1A).

We developed an efﬁcient, semi-supervised tool that takes the
users’ empirical knowledge of cutoff values into account (below
which interactions or similarities can be neglected) to combine
multiple data networks using an averaging or kernel ﬁision method

 

*To whom correspondence should be addressed.
lThe authors wish it to be known that. in their opinion. the ﬁrst two authors
should be regarded as joint First Authors.

IA
\‘\\\\I I§§* %
w® i Q @
_’//
Haﬁz»an m"=tﬂtmi"'~15
..

“Sum rule" “Product rule "

Fig. 1. The principle of Multi-netclust is illustrated on a two-parameter
network. Thick and thin edges correspond to distinct similarity data (A).
Dotted lines denote edges that are below the respective threshold. and hence
can be omitted from the networks. Two different aggregation rules are
implemented: the weighted arithmetic averaging (‘sum rule”) gives clusters
that are connected within either of the two networks (B); the weighted
geometric averaging (‘product rule”) gives clusters that are connected within
both networks (C). Mi]- denotes the value assigned to the edges. w is the
weighting factor (‘alpha’) of the two matrices (hence n =2) and M m” refers
to the aggregated matrix.

(Kittler et al., 1998). The resulting combined network can then
be queried for connected components (clusters) using an efﬁcient
implementation of the union-ﬁnd algorithm (Tarjan, 1975). The
clusters correspond to groups of nodes that are connected either
by any or by all of the constituent networks, depending on the
aggregation rule used (Fig. 1B and C, respectively). To adapt
this method to large heterogeneous datasets, we combined the
thresholding, aggregation as well as the connected component
search into a single, memory- and time-efﬁcient tool, Multi-netclust.
Multi-netclust is not a new clustering method but an optimized
implementation of existing graph algorithms suitable for handling
large networks of > 106 nodes and 108 edges.

2 MULTI-NETCLUST INPUT AND OUTPUT

Multi-netclust uses external memory rather than the in-core
approach (Chiang, 1995) for matrix manipulations so that the size of
the datasets is not a limiting factor. The input to Multi-netclust are
networks given in sparse matrix format, as well as the aggregation
rule, ‘alpha’ weighting factor, and similarity (or distance) cutoff
value(s) associated with a processing step(s). Generally, the product
rule results in more reliable connections conﬁrmed by multiple data

 

© The Author(s) 2010. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/2.5), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /3.Io's[Bumo[p.IOJxosoiwuiJOJurotq”:duq moi; pQPBOIII/lAOG

910E ‘IE JSHBHV 110::

Multi-netclust

 

Table 1. Protein classiﬁcation results obtained for the individual and
combined Similarity networks

 

 

Dataset Correct Incorrect Singletons
SW >< DALIl (251) 910 0 447
BLAST (0.1) X DALI2 (0.4) 888 0 469
BLAST (0.4) + DALI2 (0.4) 803 469 85
SW (251) 316 0 1041
DALIl (251) 56 1266 35
DALI2 (0.4) 790 475 92
BLAST (0.4) 36 0 1321
BLAST (0.1) 66 1101 190

 

Numbers in parentheses denote the threshold used. Symbols ‘><’ and ‘+’ refer to the
product and sum aggregation rules, respectively. The results were obtained for ‘alpha’
weighting factor 0.5.

DALIl , matrix of raw scores; DALIz, matrix of diagonally normalized scores; correct,
proteins connected only to members of the same SCOP superfamily; incorrect, proteins
connected to members of other SCOP superfamilies.

sources, whereas the sum rule expands the network with new (not
necessarily reliable) connections. Setting the ‘alpha’ value for each
matrix provides means, e.g. to weight the reliability of different
data sources or to decide which dataset is more likely to contribute
with new (additional) information. A permissive cutoff value usually
results in a few large clusters, while a strict cutoff value tend to
produce many small (singleton) clusters. The data can be entered
either via a CGI interface, or from the command line. The output of
Multi-netclust is a list of the connected clusters given in a structured
text format.

Multi-netclust is written in the C/C++ language, and the CGI
interface is a Perl script. The source code, sample data, explanations
and benchmark results are available on the website http://www
.bioinformatics.nl/netclustl. There is also a web-based application
suitable to run smaller test-sets.

3 PERFORMANCE

The run-time of Multi-netclust subsumes: (i) the time needed
for reading-in the data, thresholding and aggregation (>99.9%);
and (ii) ﬁnding the connected components and writing the results
(<0.1%). A benchmark dataset of 1357 proteins, taken from
the Protein Classiﬁcation Benchmark database (Sonego et al.,
2007) was used to combine sequence similarities calculated by
the BLAST and Smith—Waterman (Smith and Waterman, 1981)
algorithms, and DALI 3D structure similarities (Holm and Sander,
1995). The analysis took 4s on a 2GHz processor, the inﬂuence
of parameter settings on the purity of connected clusters is
apparent from the results (Table 1). An interesting example is the
immunoglobulin superfamin (SCOP b. 1. 1), which has 125 members
in the benchmark dataset. Using DALI alone, the b.1.1 proteins
clustered together with the ‘E set domains’ (SCOP b.1.18), grouping
proteins related to immunoglobulin and/or ﬁbronectin Type III
superfamilies. Using BLAST alone, the b.1.1. proteins clustered

together with a number of other superfamilies. Surprisingly, the
combination of both DALI and BLAST datasets made 94% of the
group b.1.1 cluster correctly.

The external memory-based, connected component search
algorithm is fast and memory-efﬁcient compared to single-linkage-
based clustering methods and in-memory graph algorithms used
for similar purposes within the bioinformatics community (see
Supplementary Material). The strength of Multi-netclust becomes
more apparent when we deal with large datasets that cannot be
handled with other algorithms. For example, a network of 2 713 908
nodes and 781 328 458 edges took <5 min on an ordinary computer.
Of the other algorithms tested (see case studies on the website), only
BLASTClust was able to handle a dataset of similar size; however,
its use is limited to BLAST similarity networks (and at greater
expense of CPU time and memory required), whereas Multi-netclust
is generally applicable. To conclude, Multi-netclust is an efﬁcient
tool that can aid exploratory analyzes of large biological networks
using an ordinary computer. Speciﬁcally, the potential applications
include any task where network data of heterogeneous sources, such
as sequence and structure similarities, gene expression or protein—
protein interaction data, are to be combined together, resulting in
new and/or improved biologically relevant predictions.

ACKNOWLEDGEMENTS

The authors would like to thank Pieter van Beek (SARA Computing
and Networking Services) for help in providing additional BLAST
data, Anand Gavai for preparing binaries for Mac OS X, Stijn van
Dongen for the help with the MCL utilities and the NBIC initiative
for using the Dutch Life Science Grid platform.

Funding: Graduate School Experimental Plant Sciences (to A.K.);
BioAssist programme of the Netherlands Bioinforrnatics Centre
(to H.N.).

Conﬂict of Interest: none declared.

REFERENCES

Altschul,SF. et al. (1990) Basic local alignment search tool. J. Mol. Biol, 215, 403410.

Chiang,YJ. et al. (1995) External-Memory Graph Algorithms. In Proceedings of the
6th Annual ACM—SIAM Symposium on Discrete Algorithms (SODA ’95). Society for
Industrial and Applied Mathematics, San Francisco, CA, USA, pp. 1397149.

Enright,AJ. et al. (2002) An efﬁcient algorithm for large-scale detection of protein
families. Nucleic Acids Res., 30, 157571584.

Holm,L. and Sander,C. (1995) Dali: a network tool for protein structure comparison.
Trends Biochem. Sci., 20, 478480.

Kittler,J. et al. (1998) On combining classiﬁers. IEEE Trans. Pattern Anal. Mach. Intell.,
20, 2267239.

Li,W and Godzik,A. (2006) Cd-hit: a fast program for clustering and comparing large
sets of protein or nucleotide sequences. Bioinformatics, 22, 165871659.

Sonego,P. et al. (2007) A Protein Classiﬁcation Benchmark collection for machine
learning. Nucleic Acids Res., 35, D2327D236.

Smith,T.F. and Waterman,M.S. (1981) Identiﬁcation of common molecular
subsequences. J. Mol. Biol, 141, 1957197.

Tarjan,R.E. (1975) Efﬁciency of a Good But Not Linear Set Union Algorithm. J. ACM.
22, 2157225.

 

2483

112 /3.Io'S[Bumo[p.IOJxosoiwuiJOJuioiq”:duq 11101} popcorn/hog

9103 ‘{g isnﬁnv 110::

