Vol. 26 no. 14 2010, pages 1781-1782
APP N doi:10.1093/bioinformatics/btq286

 

Genome analysis

Advance Access publication May 30, 2010

CisGenome Browser: a flexible tool for genomic data visualization
Hui Jiang1’2’*, Fan Wang3, Nigel P. Dyer4 and Wing Hung Wongla5

1Department of Statistics, 2Stanford Genome Technology Center, 3Department of Electrical Engineering, Stanford
University, Stanford, CA 94305, USA, 4Systems Biology Centre, Coventry House, the University of Warwick, Coventry,
CV4 7AL, UK and 5Department of Health Research and Policy, Stanford University, Stanford, CA 94305, USA

Associate Editor: John Quackenbush

 

ABSTRACT

Summary: We present an open source, platform independent tool,
called CisGenome Browser, which can work together with any other
data analysis program to serve as a flexible component for genomic
data visualization. It can also work by itself as a standalone genome
browser. By working as a light-weight web server, CisGenome
Browser is a convenient tool for data sharing between labs. It
has features that are specifically designed for ultra high-throughput
sequencing data visualization.

Availability: http://biogibbs.stanford.edu/~jiangh/browser/
Contact: jiangh@stanford.edu

Received on February 4, 2010; revised on May 4, 2010; accepted on
May 26, 2010

1 INTRODUCTION

For the past decade, the advent of high-throughput technologies
such as microarrays and the more recent ultra high-throughput
sequencing have given rise to fruitful research on large-scale
genomic data analysis. As a result, numerous software tools have
been developed and widely used. Since genomic data is usually
very large and complex, visualization tools are always essential for
data examination and interpretation.

There are two major approaches for genomic data visualization.
One approach is to provide built-in data visualization components
together with data analysis tools. A typical example is DNA-
chip analyzer (dChip; Li and Wong, 2003) whose convenient
visualization functions contribute greatly to its popularity. This type
of approach usually gives the best user experience. Since the data
visualization components are speciﬁcally designed for the results
that are generated by the data analysis tools, they can work together
seamlessly. However, only a small fraction of data analysis tools
have built-in visualization components because the programming
of a good visualization component requires expertise and is also
often very time-consuming. For these reasons, most of the data
analysis tools use the second approach, where the programs generate
output ﬁles in speciﬁc formats that can subsequently be imported and
visualized by external data visualization tools, such as Affymetrix
Integrated Genome Browser (Nicol et al., 2009), analyzed by
graphical data analysis environments such as Excel, MATLAB or R,
or uploaded onto web-based browsers, e.g. UCSC Genome Browser
(Karolchik et (11., 2008). All these approaches require additional
operations or even programming to load and examine the data. If
uploading the data onto a web-based browser, the transfer of a large

 

*To whom correspondence should be addressed.

 

 

 

5) Load 1) Prepare
Data Files Data Files
Data
Files
—7
4) Load 2) Prepare
Parameter Parameter

F'Ie Parameter We
4— _
File
—7

 

3) Send HTTP Request

 

<

6) Generate

Web a e
p 9 Web

Page

 

   

 

Fig. 1. CisGenome Browser works as a Visualization component for a
third-party program. The six steps are numbered according to their temporal
order in runtime.

amount of data via the Internet is often a bottleneck, limiting the
ability of researchers to examine their data thoroughly.

To better facilitate genomic data visualization, we present a
ﬂexible genomic data visualization tool, called CisGenome Browser,
which has a speciﬁcally designed feature: besides being manually
operated by a user, it can also be easily controlled by a third-party
program regardless of the programming language in which the third-
party program is written. This feature makes CisGenome Browser a
ﬂexible and universal data visualization tool. Any data analysis tool
can simply output its results in formats that CisGenome Browser
can interpret and then calls CisGenome Browser to visually present
the results to the users. The whole procedure can be made automatic
and transparent, which gives the illusion to the users that the data
analysis program and CisGenome Browser work together as a single
piece of software.

2 METHODS
2.1 Workﬂow

The workﬂow for a third-party program to control CisGenome Browser can
be outlined in six steps. as illustrated in Figure l.

(l) The third-party program prepares data ﬁles in formats that CisGenome
Browser can interpret.

(2) The third-party program prepares a parameter ﬁle in a simple text
format (the Windows INI format). which speciﬁes the paths of the

 

© The Author 2010. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oxfordjournals.org 1781

112 /3.Io's[Bruno[pJOJXO'sotwuiJOJutotqﬂ:duq 11101} popcorn/hog

9103 ‘{g anﬁnv 110::

H.Jiang et al.

 

data ﬁles. the genomic region of interest and other parameters for
data Visualization.

(3) The third-party program opens a web browser and then calls
CisGenome Browser Via a HTTP request. with one parameter
specifying the name of the parameter ﬁle.

(4) Working as a local web server. CisGenome Browser listens on a
speciﬁc port. When it receives a request. CisGenome Browser parses
the HTTP header and retrieves the name of the parameter ﬁle. It then
opens the parameter ﬁle and reads in all the parameters. including the
paths of the data ﬁles.

(5) CisGenome Browser loads the data ﬁles entirely or partially
depending on the parameters speciﬁed in the parameter ﬁle.

(6) CisGenome Browser generates the web page according to the
parameters and sends it back to the web browser. which then presents
the web page to the user.

2.2 Other features

CisGenome Browser is an open source software. It has a modular design and
allows new features to be added conveniently. It was originally written as a
data Visualization module for CisGenome. a ChIP-chip and ChIP-seq data
analysis tool (Ji et al.. 2008). CisGenome Browser works with CisGenome
core programs to Visualize signal associated with genomic loci. raw images
for Affemetrix microarrays and motif logos for transcriptional factor binding
sites. CisGenome Browser was largely rewritten afterwards in order to
serve as a standalone platform-independent Visualization tool. As another
example for its ﬂexibility. CisGenome Browser is also used by the software
JETTA (http://gluegrantl.stanford.edu/~junhee/JETTA/. Junction and Exon
array Toolkits for Transcriptome Analysis) to Visualize microarray probe
intensities.

CisGenome Browser is written in C++ using platform-independent
libraries. As a result. it can run on Windows. Linux and the Mac platforms.
The executable has no dependence on other packages or libraries. which
makes the installation procedure very straightforward. It provides a light-
weight web server (the whole program is <10 MB in size). which runs
locally so that there is no need to upload the data Via the Internet. The
browser prohibits remote connection in the default conﬁguration for safety
reasons. It can also be conﬁgured so that remote users can browse the data
sessions prepared by local users. which makes it a convenient tool for data
sharing between labs.

CisGenome Browser is capable of Visualizing a wide variety of genomic
data. including genome sequences. conservation scores. gene annotations or
any signal associated with genomic loci or regions such as those generated
by microarrays. sequencing or other types of biological experiments. It can
Visualize the signal in bar plot. dot plot. line plot or heatmap plot. and allows
several datasets to appear in one track in different colors. Almost every aspect
of the Visualization procedure is conﬁgurable in parameter ﬁles. such as
picture height. width. color. axes. etc. The interface of CisGenome Browser
is very similar in its look and feel to other genome browsers. such as the
UCSC Genome Browser (Karolchik et al.. 2008). One can easily shift or
scale the genomic region. search for genes. and add. delete or customize
tracks. It also integrates links to external websites such as NCBI (Wheeler
et al.. 2005). UCSC (Karolchik et al.. 2008) and Ensembl (Flicek et al..
2008) on the webpage or in convenient pop-up menus. (See Table l for a
summary of its features.)

The input data ﬁle formats for CisGenome Browser include tab-delimited
text format. UCSC BED. WIG and refFlat formats. Affymetrix BAR format
and BAM format (Li et al.. 2009). When a text format ﬁle is loaded for the
ﬁrst time. CisGenome Browser automatically converts the ﬁle into binary
format with a built-in index. Later on only the binary format ﬁle will be used
for fast data retrieval.

There are features speciﬁcally designed in CisGenome Browser for ultra
high-throughput sequencing data Visualization. For example. CisGenome
Browser can Visualize a genomic region by rescaling different parts of it so

Table 1. CisGenome Browser feature list

 

Feature category Features

 

Runtime Light-weight local web server. OS independent
Input ﬁle format Tab-delimited text formats. UCSC BED. WIG and
refFlat formats. BAR format. BAM format
Panning. zooming. searching by gene names or
genomic regions
Track management Adding. deleting or customizing tracks
Plot types Bar plot. dot plot. line plot. heatmap plot. gene
structures. conservation scores. genome
sequences. sequencing reads
Others Visualizing Affymetrix microarray image. motif
logos. integrated pop-up links to NCBI. UCSC
and Ensembl. selected zooming

Navigation

 

eermiquiu-uemrlam: :n-II mums-1:52:59; ' In: 'ngt': ll"_|'_|lJ|:

mlEEEIQE‘EIm-HHEIIEI m 

lauunnu 324mm: 12a noun: azsnnnw lmnun
. I . . . . . . .

 

Dam? Rersm auto

 

@"aeiﬁe gate“:
 a: @ﬁg}; Ea

if

 

. u u u u u u u .
323mm 2245an 324nm“:- 32snnnoo smnnn

U nmumm: mmuw manna: the lam [UllEll blﬁmiulu nmeec-nml'acvs ‘

 

Fig. 2. Paired-end RNA-seq reads mapped to mouse gene StklO are
Visualized in CisGenome Browser. The gene structure is folded so that all
the intronic regions are compressed.

that the part of particular interest (such as exons) will be ampliﬁed. while
the rest part (such as introns) will be compressed (Figure 2).

ACKNOWLEDGEMENTS
We thank Hongkai Ji and Wenxiu Ma for helpful advice.

Funding: National Institute of Health grant R01-HG004634 (to
W.H.W.); National Institute of Health grant 2P01-HG000205 (in
part); Agilent Technologies (gift grant).

Conﬂict of Interest: none declared.

REFERENCES

F1icek,P. et al. (2008) Ensembl 2008. Nucleic Acids Res., 36, D7077D714.

Karolchik,D. et al. (2008) The UCSC genome browser database: 2008 update. Nucleic
Acids Res., 36, D7737D779.

Ji,H. et al. (2008) An integrated software system for analyzing ChIP-chip and ChIP-seq
data. Nat. Biotechnol, 26, 129371300.

Li,C. and Wong,W.H. (2003) DNA-chip analyzer (dChip). In Parmigiani,G et al. (eds)
The Analysis of Gene Expression Data: Methods and Software. Springer, New York,
pp. 1207141.

Li,l-I. et al. (2009) The Sequence alignment/map (SAM) format and SAMtools.
Bioinformatics, 25, 207872079.

Nicol,J.W. et al. (2009) The Integrated Genome Browser: free software for distribution
and exploration of genome-scale datasets. Bioinformatics, 25, 273072731.

Wheeler,D.L. et al. (2005) Database resources of the National Center for Biotechnology
Information. Nucleic Acids Res., 33, D397D45.

 

1 782

112 /3.Io's[Bumo[pJOJXO'sotwuiJOJutotqﬂ:duq 11101} popcorn/hog

9103 ‘{g isnﬁnv 110::

