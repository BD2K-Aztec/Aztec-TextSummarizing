ORIGINAL PAPER

Vol. 27 no. 6 2011, pages 797-806
doi:10. 1093/bioinformatics/btr01 7

 

Gene expression

Advance Access publication January 22, 2011

Computational refinement of post-translational modifications
predicted from tandem mass spectrometry

Clement Chunglaz, Jian Liu3’4, Andrew Emilie”4 and Brendan J. Frey1’2’3’5a*

1Department of Computer Science, 2Probabilistic and Statistical Inference Group, 3Banting and Best Department of
Medical Research, 4Donnelly Centre for Cellular and Biomolecular Research and 5Department of Electrical and
Computer Engineering, University of Toronto, Toronto, Canada

Associate Editor: Olga Troyanskaya

 

ABSTRACT

Motivation: A post-translational modification (PTM) is a chemical
modification of a protein that occurs naturally. Many of these
modifications, such as phosphorylation, are known to play pivotal
roles in the regulation of protein function. Henceforth, PTM
perturbations have been linked to diverse diseases like Parkinson’s,
Alzheimer’s, diabetes and cancer. To discover PTMs on a genome-
wide scale, there is a recent surge of interest in analyzing
tandem mass spectrometry data, and several unrestrictive (so-called
‘blind’) PTM search methods have been reported. However, these
approaches are subject to noise in mass measurements and in the
predicted modification site (amino acid position) within peptides,
which can result in false PTM assignments.

Results: To address these issues, we devised a machine learning
algorithm, PTMClust, that can be applied to the output of blind
PTM search methods to improve prediction quality, by suppressing
noise in the data and clustering peptides with the same underlying
modification to form PTM groups. We show that our technique
outperforms two standard clustering algorithms on a simulated
dataset. Additionally, we show that our algorithm significantly
improves sensitivity and specificity when applied to the output
of three different blind PTM search engines, SIMS, lnsPecT and
MODmap. Additionally, PTMClust markedly outperforms another
PTM refinement algorithm, PTMFinder. We demonstrate that our
technique is able to reduce false PTM assignments, improve overall
detection coverage and facilitate novel PTM discovery, including
terminus modifications. We applied our technique to a large-scale
yeast MS/MS proteome profiling dataset and found numerous known
and novel PTMs. Accurately identifying modifications in protein
sequences is a critical first step for PTM profiling, and thus our
approach may benefit routine proteomic analysis.

Availability: Our algorithm is implemented in Matlab and is freely
available for academic use. The software is available online from
http://genes.toronto.edu.

Supplementary Information: Supplementary data are available at
Bioinformatics online.

Contact: frey@psi.utoronto.ca

Received on September 8, 2010; revised on December 14, 2010;
accepted on January 5, 2011

 

*To whom correspondence should be addressed.

1 INTRODUCTION

Proteins are created through a biological process called protein
biosynthesis. This process begins with transcription and splicing
of genes into messenger RNA (mRNA) molecules, which are later
translated into polypeptides. At the time of translation, a protein can
either be active or inactive, and its subsequent activity is generally
regulated by Chemical modiﬁcations referred to as post-translational
modiﬁcations (PTMs). PTMs, which may occur during or after
translation, involve an enzymatic addition of a Chemical group
(e.g. a phosphate) or a larger moiety (e.g. an additional polypeptide
such as ubiquitin) onto one or more amino acid side Chains. Many
PTMs, in particular, phosphorylation on serine (S), threonine (T)
or tyrosine (Y), can regulate a protein’s function by inﬂuencing its
folding, stability or physical association with other proteins, thereby
activating or suppressing it.

Since PTMs have been shown to dynamically inﬂuence a
wide range of important processes (e.g. catalysis of biochemical
reactions, intracellular cell signaling and cell division), mapping
of PTMs in a comprehensive proteome-wide manner remains
a critical outstanding research problem. Although the biological
importance of certain PTMs is well established, the diversity and
the prevalence of PTMs and their targets remain to be fully
elucidated. One recently developed approach to discover PTMs
on a genome-wide scale is to analyze tandem mass spectrometry
(MS/MS) data using an unrestricted (so-called ‘blind’) PTM search
engine. Unlike traditional ‘restricted’ search methods [Baliban
et a1. (2010); Craig and Beavis (2004); Eng et al. (1994);
Matthiesen et al. (2005); Perkins et al. (1999)], blind search
engines require no predetermined list of candidate PTMs, with
pre-deﬁned delta masses or preferred target residues. This allows
blind PTM search engines to be able to consider a large number
of potential PTMs at once, representing both previously known
PTMs and new ones. A number of blind search engines have been
reported that employ various different optimization techniques and
sequence prediction approaches [Baumgartner et al. (2008); Chen
et al. (2009); Han et a1. (2005); Hansen et a1. (2005); Havilio and
Wool (2007); Kim et al. (2006); Liu et a1. (2006, 2008); Na and Pack
(2009); Savitski et a1. (2006); Searle et a1. (2006); Tanner et al.
(2005); Tsur et al. (2005)].

Reviews of protein mass spectrometry and the detection of PTM
by mass spectrometry can be found in Domon and Aebersold
(2006) and Witze et al. (2007). Brieﬂy, a typical proteomic MS/MS
experiment begins with an enzymatic digestion of proteins into
peptides. For a complex mixture, it is common to simplify the

 

© The Author(s) 2011. Published by Oxford University Press.

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non—Commercial License (http://creativecommons.org/licenses/
by—nc/2.5), which permits unrestricted non—commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.

112 ﬁlo's[BumoprOJXO'sorwurJOJurorq”:duq 11101} popaolumoq

9103 ‘0g1sn8nv uo ::

C. Chung et al.

 

mixture by separating peptides based on their Chemical properties,
such as hydrophobicity using liquid Chromatography, before they
are ionized and injected into a mass spectrometer. Once in the
spectrometer, peptides are grouped and isolated based on their mass-
to-Charge ratio (simply referred to as mass). Ideally, each group
will contain one peptide variant. For each group, the peptides are
ﬁirther broken down by a fragmentation method, such as collision-
induced dissociation (CID), to produce ion fragments. The mass
spectrometer captures the ion fragmentation pattern for each group
in a mass spectrum. The presence of PTMs shifts the mass of the
corresponding ions, which Changes the ion fragmentation pattern
signiﬁcantly. Specialized PTM search engines, like those discussed
above, are used to decipher these ion patterns and map each mass
spectrum to a peptide sequence that best explains it.

The use of real and decoy proteins is an established practice
for estimating false predictions for MS/MS spectra analysis using
database search approaches [Kall et (11. (2007); Kislinger et (11.
(2003); Peng et (11. (2003)], including blind PTM search methods
(Liu et (11., 2008). Decoy proteins are generated by reversing the
amino acid sequence of real proteins; this ensures that real and decoy
proteins have the same distributions of amino acids and protein
lengths. When using a protein reference database containing an
equal number of real and decoy proteins, a random (false) peptide
prediction (modiﬁed or unmodiﬁed) will have an equal likelihood
of Choosing a peptide from either a real protein or a decoy protein.
This allows the number of decoy peptide hits as an estimate for false
detection rate.

In practice, blind PTM search methods suffer from two major
sources of error: sequence-dependent uncertainty in the modiﬁcation
position (residue position along the peptide sequence where the
modiﬁcation is deemed to occur) and mass inaccuracy for the
modiﬁcation mass. The fragmentation process is often incomplete
and the presence of labile PTMs may interfere with this process
(Mikesh et (11., 2006). Both issues combined result in MS/MS
spectra missing peaks that in turn may lead to ambiguous or
erroneous modiﬁcation predictions. The presences of natural stable
isotopes, such as carbon-l3, in addition to electronic noise are
major contributors to inaccurate mass measurements. This is more
prominent in spectra generated from low mass resolution mass
spectrometers (e.g. ion trap mass spectrometers), which are still
commonly used in today’s mass spectrometry studies. Figure 1
shows a diagrammatic representation of the search results obtained
from applying the blind PTM search engine SIMS (Liu et (11., 2008)
to a set of MS/MS spectra previously mapped to phosphopeptides
(Beausoleil et (11., 2004). Enriched for phosphopeptides using a
strong cation exchange-based method, the spectra from the complex
peptide mixture in the original study were analyzed by a restricted
PTM search method designed to look for phosphorylation and were
validated manually. The same dataset has been used in benchmark
experiments in previous PTM studies [Liu et (11. (2008); Tanner
et (11. (2005)]. Phosphorylation is known to occur at ~80 Da and
primarily on the amino acid serine (S) and less frequently on
threonine (T). Yet the results show, even for those observed peptide
sequences that match to the original reference study, that many of
their modiﬁcation (delta) masses and modiﬁed amino acid sites
deviate from this reference. A Closer look (Fig. 1C) shows that
many of the amino acids misplaced are a few residues away from
their corresponding reference modiﬁcation position. In a global-
scale PTM survey, these issues can make distinguishing true PTM

 

§ E

i.

Number of Peptides 3"
a Q

 

82 83 34

79 so :11
Modiﬁcation Mass [Dal

 

11

Number of
'3?

 

_-.—_-_-_I_-_I__A__l—__I—_—._-—I—
ACDEFBHI’KLMNPDRSTVWY
Amino Acid Modiﬁed

5 8

.7—3-54.3.2.1o1234 7
Modiﬁcation Position Error (No. of Residues)

D

.4
a

 

u
1:

Number of Peptides o
2 S

.-
a

 

Fig. 1. Histograms of inputs to our algorithm [generated by SIMS (Liu et (11.,
2008)] for spectra previously determined to be mapped to phosphopeptides
(Beausoleil at (11., 2004). They show that the statistics for modiﬁcation mass
and modiﬁed amino acid deviate from the reference, which determined that
the PTM (phosphorylation) occurs at ~80 Da and on serine (S) and threonine
(T). (A) The distribution of the measured modiﬁcation mass. (B) Identiﬁed
amino acids that deviate from S and T. (C) The distribution of the distance
(in residues) from the identiﬁed amino acid to the reference for misplaced
modiﬁcations; this demonstrates that identiﬁed modiﬁcations are generally
only a few residues away from the reference.

matches from false detections non-trivial; therefore, identifying
bona ﬁde PTMs conﬁdently remains difﬁcult. While these errors
can potentially be reduced by technological improvement in
instrumentation (e.g. higher mass accuracy mass spectrometers or
using alternate fragmentation mechanisms), we sought to develop
an algorithm that can deconvolve errors associated with measuring
masses and mapping of modiﬁcation positions simultaneously to
salvage both existing datasets and current experimental platforms.

These two sources of error were acknowledged by Tsur et (11.
(2005), who brieﬂy described a heuristic approach to account for
‘shadows’ (modiﬁcations that are misplaced by a PTM search
engine), and later by the same group in the PTM reﬁnement
algorithm PTMFinder (Tanner et (11., 2008). However, in the
former method, their approach favors high abundance modiﬁed
peptides, since it requires each peptide match to occur multiple
times; discretizes observed modiﬁcation masses, which introduces
additional error with the mass measurements; and can handle only
one type of error per peptide (namely either a modiﬁcation mass error
of exactly 1 Da or a modiﬁcation position misplaced by exactly one

 

798

112 ﬁlo's[BumoprOJXO'sorwurJOJurorq”:duq 11101} papBOIII/lAOG

9103 ‘Og isnﬁnv uo ::

PTMClust: a PTM refinement algorithm

 

residue). The latter method, PTMFinder, takes a machine learning
approach where it groups and reanalyzes spectra mapping to the
same modiﬁed peptide sequence to produce for each spectrum a
ﬁnal peptide sequence with a modiﬁcation mass and a modiﬁcation
position. This method also suffers from favoring high abundance
modiﬁed peptides and discretizing observed modiﬁcation masses.
As we show later, it is not always the case that many spectra
map to the same modiﬁed peptide in a typical genome-wide MS
study. These restrictions limit the suitability of both methods’ error
correction approach to global PTM studies. We note that in addition
to correcting for errors with modiﬁcation mass and modiﬁcation
position estimations, PTMFinder can reﬁne the peptide sequence and
provides a P-value conﬁdence score for both the reported peptide
sequence and modiﬁcation.

Here we introduce a novel generative probability model
(PTMClust) that addresses the aforementioned problems
encountered when using blind PTM search engines. It accomplishes
a signiﬁcant boost in PTM prediction accuracy and precision by
modeling the hidden relationships between the compositions of
amino acids in the peptide sequence, speciﬁcally the modiﬁcation
mass, the modiﬁcation position and the identity of the modiﬁed
amino acid. Our algorithm iterates between Clustering modiﬁed
peptides with similar modiﬁcations to form groups, which we call
PTM groups, and ﬁnding the most likely modiﬁcation mass and
modiﬁcation position for each peptide based on the grouping. Our
method distinguishes itself from others by modeling modiﬁcations
at the PTM level instead of at the individual peptide level.
By rigorous benchmarking, we show that a number of learned
PTM groups correspond to known PTMs and many reported
modiﬁed peptides match to annotated modiﬁcations. In addition,
our algorithm simultaneously considers PTMs occurring in either
the middle or at the terminal ends of a peptide or protein, which
provides additional information missed by blind PTM search
techniques [Han et (11. (2005); Liu et (11. (2006, 2008); Searle et (11.
(2006); Tanner et (11. (2005); Tsur et (11. (2005)]. To ensure broad
applicability, we have designed and optimized PTMClust to analyze
PTM data generated from low resolution MS/MS spectra processed
by popular blind PTM search engines, such as those generated from
ion trap mass spectrometers.

2 METHODS

Our proposed algorithm PTMClust consists of a generative model, which
captures the hidden relationship between the factors that inﬂuence the
RTM mapping process, and an algorithm to infer the values of the hidden
variables and parameters. It includes a background model to account for
spurious data. The input to PTMClust is obtained using a blind PTM search
method [e.g. SIMS or InsPecT Tanner et a1. (2005)]. It consists of a list of
modiﬁed peptides with the following attributes: peptide sequence, measured
modiﬁcation mass and estimated position of the modiﬁcation along the
peptide sequence (modiﬁcation position). The output of PTMClust for each
input peptide consists of a cluster assignment, a corrected modiﬁcation
position and a corrected modiﬁcation mass. The identity of the modiﬁed
amino acid for each peptide can be obtained from its peptide sequence and
modiﬁcation position.

A key component of our algorithm is the model selection method that
selects the appropriate number of clusters by adjusting the model complexity
‘control knob’ 01”. Using the labels of real and decoy peptides, we deﬁned rate
of detection (RD) as the number of real peptides that are not assigned to the
background model, divided by the total number of real peptides. Similarly, we

 

Mixing
coefficient a —

PTM N

 
 
     
   
     

   
 

Observed QTOUPS
Modiﬁcation modification prob. of
mass mean u \ Mass amino acid
modified

Amino acid

Modification I'|'|°d|f|¢9d — B

mass 2 /
variance

Correct
modification
position

Observed
modification
position

 

 

 

Fig. 2. A Bayesian network describing our generative model, using plate
notation (box). The shaded nodes represent observed variables, the unshaded
nodes represent latent variables and the variables outside the plate are model
parameters. The model describes how the observed modiﬁcation mass and
modiﬁcation position are generated. Given the type of PTM (PTM group),
we can generate the observed modiﬁcation mass as a noisy version of the
modiﬁcation mass mean, and select an amino acid to be modiﬁed. Given
the peptide sequence, we can choose a position along it that matches the
modiﬁed amino acid as the ‘true’ modiﬁcation position. We can generate the
observed modiﬁcation position as a noisy version of the ‘true’ modiﬁcation
position. The plate notation indicates there are N copies of the model, one
for each input peptide.

deﬁned rate of false detection (RFD) as the number of decoy peptides that are
not assigned to the background model, divided by the total number of decoy
peptides. A setting for 01” was chosen by weighing the tradeoff between the
number of decoy peptides allowed and the number of real peptides detected,
as described below.

2.1 A generative model for ﬁnding PTM groups

By accounting for combinatorial interactions between hidden variables that
play a role in the protein modiﬁcation process, our generative probability
model aims to describe how each PTM observation is generated. For a
given PTM type (PTM group), the observed modiﬁcation mass is assumed
to be a noisy version of the expected (mean) modiﬁcation mass, and the
modiﬁed amino acid is chosen from a distribution over amino acids that
may be modiﬁed in that type. For example, modiﬁcations occur primarily on
serine (S) and threonine (T) for phosphorylation. For a given peptide, the true
modiﬁcation position is assumed to be chosen uniformly among occurrences
of that amino acid in the peptide. Finally, the observed modiﬁcation position
is assumed to be a noisy version of the true position. Below, we described the
components of our model: the probability of choosing each PTM type, the
probability of choosing each amino acid to be the modiﬁed amino acid given
the PTM type, the probability of the true modiﬁcation position given the
modiﬁed amino acid and the uncertainty in the observed modiﬁcation mass
and modiﬁcation position. We then introduce an algorithm for learning the
model parameters and inferring the hidden (latent) variables from the input
data. Once a model is learned, we can reﬁne the modiﬁcation for each input
peptide sequence by inferring its most likely PTM group, true modiﬁcation
mass and true modiﬁcation position.

The structural relationships between the variables are shown by the
Bayesian network in Figure 2. It describes the model for one input peptide
and is repeated for N inputs, as indicated by the plate notation (box in the
ﬁgure).

In our model, each input peptide sequence Sn, indexed by ne {1, . . . ,N}
where N is the number of peptides in the dataset, has a corresponding
discrete peptide length L”, observed modiﬁcation position x” e {l,...,L,,}

 

799

112 ﬁlo's[BumoprOJXO'sorwurJOJHrorq”:duq uror} pop1201umoq

9103 ‘0g1sn8nv uo ::

C. Chung et al.

 

and observed modiﬁcation mass m”. Sn(j) is the amino acid in position j
of the input sequence n. The total number of values SnU) can take on is
A :24, which includes the 20 naturally occurring amino acids and 4 special
tokens indicating the beginning and end of proteins and peptides. The latent
variable on e [1, ..,K] denotes the unknown PTM group for peptide sequence
n, where K is the number of PTM groups and will be adjusted depending
on the desired false detection rate, as described later. The prior probability
(mixing coefﬁcient) for each PTM group is given as

Prcn=k>=ak. (1)

K
where it satisﬁes the constraints 01k 3 0 and 2 01k :1, and is inferred from
k:l
the data (see below for details).
The probability that the PTM occurs on amino acid 1 e {1,...,A}, given

that the RTM group is k, is
P(an=ilcn=k)=ﬁkiv (2)
where the latent variable an denotes the true (unobserved) modiﬁed amino

A
acid and the 13’s satisfy the constraints 1% Z 0 and 2131a = 1. and is inferred
from the data (see below for details). l 1
Given the peptide sequence Sn and the modiﬁed amino acid an, each
occurrence of that amino acid in the peptide sequence has equal probability
of being the true (unobserved) modiﬁcation position z”. For completeness,
our probabilistic model considers the likelihood of cases where an amino
acid does not occur in S”. To do so, we allowed for the event that the true
PTM occurs outside of the given peptide sequence,1 indicated by z” :0, so
that z” e {0,...,L,,}. All other positions in the peptide sequence have zero
probability of being the true modiﬁcation position. This can be written as

 ifsnm=tjzr
Pen =j|an=zzsn>=  117:0, (3)
0 otherwise,

where (3,), denotes the number of times amino acid 1 occurs in sequence n.

We modeled the modiﬁcation position error (xn —z,,) between the observed
modiﬁcation position x” and the true modiﬁcation position z” with a discrete
probability distribution, given as

¢(x,, —j) ifj> 0,
PM; lZn =j) = ¢(Ln) ifj = 0. (4)
0 otherwise,

where the likelihood function ¢ accounts for the modiﬁcation position error.
This likelihood function is shared across all PTM groups and is inferred from
our empirical observation of the yeast PTM dataset as follows (see Section 3
for description of the dataset). We grouped the entries in the dataset by
their peptide sequence and modiﬁcation mass, allowing for mass differences
of :l:2 Da. Then, we determined the average modiﬁcation position for each
group (rounded to the nearest position) and computed a histogram of the
modiﬁcation position error. In the above assignment, groups with less than
three entries were removed. This threshold was chosen so that a reasonable
number of points (1206) were available to estimate the likelihood function,
while also ﬁltering out false modiﬁed peptides. The frequency of peptides
for each group size, shown in Supplementary Figure S 1 , exhibits a heavy-tail
distribution where the majority of modiﬁed peptides have low counts. More
than 48% of the entries have a group of size exactly three. The resulting
likelihood distribution is shown in Figure 3.

Lastly, we accounted for the variation (noise) in the estimated modiﬁcation
mass by assuming the observed modiﬁcation mass for each PTM group is
normally distributed around the true modiﬁcation mass, given as

_(mn _ [14192
ex — , 5
2712,, p< 22,, ( )
where 11k and 22k are the modiﬁcation mass mean and variance for the k-th
PTM group, and are inferred from the data (see below for details).

P(mnlcn=k)=

 

 

lz,,=0 is needed to avoid numerical issues since our algorithm considers
each amino acid as a possible modiﬁcation target.

0.5

 

Likelihood

 

 

 

—7—6—5—4—3—2—1 01 2 3 4 5 6 7
Modification Position Error (No. of Residues)

Fig. 3. Distribution of modiﬁcation position error used by PTMClust. This
empirical distribution was derived using yeast PTM data (Krogan et a1. , 2006)
analyzed with SIMS (Liu et (11.. 2008). A positive (negative) modiﬁcation
position error indicates that the observed modiﬁcation position is toward the
C-terminus (N-terminus) of the expected modiﬁcation position.

Combining the structure of the Bayesian network and the conditional
distributions described above, we can write the joint distribution as

P(c,a,z,x,m|S,9)=
N
H (P(Cnl9)P(mnlcnv9)P(anlcnv9)P(ZnlanvSnv6)P(xannv6))v

n2]

(6)

where 6 represents the model parameters (01k. 1%,», 11k and Elk).

The input data are noisy and may contain false positives and modiﬁed
peptides that do not ﬁt into proper PTM groups. To account for these
spurious data points, we included an additional PTM group (background
component) that acts as a garbage collection process (background model).
In the background component, we assumed there is no speciﬁc relationship
between the modiﬁcation mass and modiﬁed amino acid. Formally, the
background component has a ﬁxed modiﬁcation mass mean 11” and variance
2” set to be equal to the mean and variance of the data. Additionally, it has a
ﬁxed uniform probability over the modiﬁed amino acid 132 2 i V a = 1, . . . ,A,
and a mixing coefﬁcient at”, which will be used to adjust model complexity
(see below).

Inference and learning: The key step in our algorithm is to infer an optimal
setting for latent variables and learn the model parameters. However, exact
inference and learning of the above model is computationally intractable,
because of non-linear relationship between latent variables and parameters.
Instead, we used the EM algorithm [Dempster et a1. (1977); McLachlan and
Krishnan (1997)], which alternates between probabilistically ﬁlling in the
latent variables on, an and z” and estimating the parameters 01k. 1%,», 11k and
Elk. A detailed derivation of the EM algorithm for our model is provided as
part of the Supplementary Material.

In the E-step, the posterior probabilities for iteration t and every peptide
n are evaluated using the parameters from iteration t — 1 by conditioning on
the observed variables In” and x” in (6):

Q(t)(cnvaann)=P(CnvanvanmnvxnvSnvet—l)2
P<cn,an,zn,m,,,x,,js,,,6’-1) (7)
ZZ213m.,ﬂn.zn,nzn,xnlsn.0"1)'

In the M-step, the parameters are reestimated by maximizing the expected
complete log likelihood using the current posterior probabilities. This is
done by taking the partial derivative of the expected complete log likelihood
with respect to each parameter. Lagrangian terms are added to the expected

 

800

112 ﬁlo's[BumoprOJXO'sorwurJOJHrorq”:duq won popeo1umoq

9103 ‘0g1sn8nv uo ::

PTMClust: a PTM refinement algorithm

 

complete log likelihood to account for the constraints on probabilities 01k and
13k). The updates for the parameters are as follow:

 

N ’)
Z Q(t)(cn = k)mn g: Ql’)(c,,:k)(m,, ﬂag)-
n:l ":1
Mk = N 1 2k = N i
Z Q(t)(cn = k) n§1Q”’(Cn:k)
n21
N
1 N Z er)(cn:k,an:i)
“k = ﬁ 29‘ch =k>. 181.»: "=‘N—. (8)
n21 Qm(€n=k)
:1

At the end of each pair of E- and M-steps, we calculated the log likelihood
and stop if the difference between the current and previous log likelihood
divided by the current log likelihood is smaller than 10—5 (this stop criterion
is chosen to ensure the EM algorithm terminates).

Recursive merge method for model selection: In our model, the only free
parameter is the number of PTM groups (mixture components) K and the
probability of the background component. We devised a recursive merge
method, similar to the split and merge model selection methods,2 that will
effectively evaluate and identify the optimal free parameters that achieve a
desired false detection rate.

Instead of adjusting K directly, we adjusted the mixing coefﬁcient of
the background component at”, which represents the prior probability that
a data point belongs to the background model, to adjust model complexity.
We gradually increase this parameter and for each speciﬁc setting of at”,
our method infers the hidden variables, parameter settings and K. Using
maximum likelihood estimation, as 01” increases (we used step size of 0.01),
more and more of the loosely clustered peptide sequences are redistributed
to other components, including the background component, and the number
of non-background components is reduced by merging clusters (reducing
K). This is accomplished by pruning away ‘empty’ components, where we
deﬁne a component to be empty when it has less than or equal to one
peptide sequence assigned to it. In effect, the non-background components
are slowly merging with each other and the background component as 01”
increases until the non-background components are empty and pruned away,
which decreases the model complexity. In our algorithm, we started with
a large value for K and a small value for at” (0.01), and slowly merge
the non-background components and the background component, pruning
away any empty clusters, by increasing at” each time. In total, we learn M
models where M is the number of different at” settings. We chose a single
model (i.e. a speciﬁc setting for at”) by analyzing the results from our model
selection method using the measures RD and RFD. The choice of which
model to use depends on the desired RD and RFD.

2.2 Synthetic PTM data generation

To compare PTMClust against standard clustering algorithms on the problem
of ﬁnding correct groupings of modiﬁcations, we generated a synthetic
PTM dataset that provides us with ground truth. The dataset consists of
ﬁve subsets, each having 100 peptides randomly picked from the yeast
protein complex dataset, described in Section 3. Here, each set of peptides
is assigned to have one of the ﬁve arbitrarily chosen modiﬁed amino acids:
aspartic acid (D), phenylalanine (F), histidine (H), leucine (L) and proline (P).
The true modiﬁcation position for each peptide was randomly chosen to
be on one of the instances of the preassigned amino acid for that subset,
and the modiﬁcation positions used as input to the algorithms are set to
a noisy version of the true modiﬁcation positions. The noise (modiﬁcation
position error) added was chosen from a standard normal distribution (see
Supplementary Fig. S2). Since the true modiﬁed amino acids are predeﬁned,
we can use them as labels to evaluate the performance of the algorithms.
The modiﬁcation mass for each peptide was randomly generated to have
Gaussian noise with a small variance (0.2) from the modiﬁcation mass

 

2Our approach only makes use of merge steps.

center for that particular set of peptides (see Supplementary Fig. S3). The
distribution of modiﬁcation masses was chosen to provide signiﬁcant overlap
in modiﬁcation mass between adjacent sets. The modiﬁcation mass centers
were set to 40.0 Da for peptides with PTMs on D, 41.0 Da for peptides with
PTMs on F, 42.0 Da for peptides with PTMs on H, 43.0 Da for peptides with
PTMs on L and 44.0 Da for peptides with PTMs on P.

For k-means clustering and mixture of Gaussians (MOG), the format
of each input peptide is a vector consisting of the modiﬁcation mass and
the distance between the modiﬁcation position and the closest instance of
each amino acid, i.e. a vector of size 21 with the modiﬁcation mass as the
ﬁrst element and the 20 amino acid as the next 20 elements (alphabetically
ordered). The distance between the true modiﬁcation position and each amino
acid is used to account for our expectation that each PTM occurs on a speciﬁc
set of amino acids. To interpret the input distances, for each PTM group, the
amino acids most likely to be the true modiﬁed amino acid will have a small
variance and the amino acids that are unlikely to be the true modiﬁed amino
acid will have a large variance.

3 RESULTS

We conducted two proof-of—concept experiments. First, we
compared PTMClust to two standard Clustering algorithms, k-means
Clustering (MaCQueen, 1967) and a mixture of Gaussians (MOG),
on a synthetically generated PTM dataset. Second, we benchmarked
PTMClust against three state-of—the-art blind PTM search engines
and a PTM reﬁnement algorithm on a reference phosphopeptide
dataset. To show its strengths, we applied our algorithm to process
a yeast proteome dataset that contains multiple PTMs.

In our experiments, we initialized our algorithm with number of
Clusters K = 150 (except for the ﬁrst proof-of—concept experiment);
the prior probability of each PTM group 01k = %, where k e
{1,...,K}; the probability that the PTM occurs on amino acid
1' e { 1, . . . ,A}, given that the PTM group is k, ﬂki = [it ; the modiﬁcation
mass mean for each PTM group 11k to be uniformly distributed
across the searched modiﬁcation mass range (except for the ﬁrst
proof-of—concept experiment); and the variance of modiﬁcation mass
for each PTM group 2k=1 and limited, during learning, to be
no greater than 2. The assumption on the maximum value for 2k
corresponds to our knowledge that for a PTM group to be physically
relevant, it should have a well-deﬁned modiﬁcation mass.

3.1 Comparison of algorithms on synthetic data

Both the k-means Clustering and MOG algorithms are standard
methods used when faced with an unsupervised Clustering problem.
They perform effectively in many cases and are simple to understand
and implement. Our algorithm improves upon them by explicitly
modeling the hidden relationship between the modiﬁcation mass,
modiﬁed amino acid, peptide sequence and modiﬁcation position.
We evaluated the performance of PTMClust against these two
algorithms using the synthetic PTM dataset described above, which
provides us with ground truth labels for the true modiﬁed amino
acids, modiﬁcation positions, modiﬁcation masses, identities of the
PTM groups and Cluster assignment for each peptide. The synthetic
data was designed to have overlapping modiﬁcations, in terms of
modiﬁcation masses and modiﬁed amino acids, so that it is non-
trivial to identify the PTM groups. The goal of this experiment is
to evaluate how well the three algorithms perform with increasing
complexity in the input data, so multiple datasets were generated
with the number of PTM groups ranging from two to ﬁve. Details
on how we generated the synthetic data can be found in Section 2.

 

801

112 ﬁlo's[BumoipJOJXO'sorwurJOJHrorq”:duq uron popeo1umoq

9103 ‘0g1sn8nv uo ::

C. Chung et al.

 

To test whether each method could identify the PTMs, we ﬁxed
the number of Clusters (K) for each algorithm. In fact, PTMClust
can automatically determine the number of PTM Clusters, but we
deactivated this feature for this experiment. The initial parameter
settings for the modiﬁcation mass Cluster centers, shared for all
three algorithms, were initialized randomly within the range of
modiﬁcation masses in the input dataset. For MOG, the variance was
initialized to 1 for modiﬁcation mass (consistent with PTMClust)
and distances between the observed modiﬁcation position and the
Closest instance of each amino acid (same variance used to generate
the data). Theoretically, a large initial variance for modiﬁcation mass
(e.g. 10 in this experiment) can result in data points being falsely
assigned to one Cluster, because many data points with different
labels have the same observed modiﬁed amino acids. This has an
effect much like our background model. At the other extreme, a
small initial variance for modiﬁcation mass (e.g. 0.1) can result in
Clusters that explain only a few data points that are near the initial
Cluster centers. However, due to the small size and simplicity of
this dataset, we did not see signiﬁcant problems in this regard for
both MOG and PTMClust when we varied the initial modiﬁcation
mass variance (data not shown). We initialized the other parameters
in PTMClust as discussed above. For each method, we performed
30 random restarts and picked the restart with the best joint log-
likelihood. To do this, we learned k-means Clustering by modifying
the MOG, where, after each EM iteration, we set the probability
between a data point and its Closest Cluster center to 1 and 0 for all
other Cluster centers to that data point.

Using 1' e {1, ...,K} to index each Cluster, we evaluated the
performance of the algorithms using a criterion that measures how
well each ground truth modiﬁcation was detected. For Cluster 1', we
deemed the largest group of peptides with the same label assigned
to it as true positives (TP,) and all other peptides assigned to it as
false positives (FPi). To evaluate each algorithm, we calculated the
correction rate (CR), which we deﬁned as the difference between the
total number of true positives and the total number of false positives
divided by the total number peptides in the sample, given as

CR: ZiTPi _ZiFPi
N .

where N is the total number of peptides in the sample. The CR is a
measure of the fraction of PTM predictions that are expected to be
not due to Chance.

Figure 4 shows the result of applying the three algorithms on
input datasets with varying number of PTM groups. It shows that our
algorithm outperforms both k-means Clustering and the MOG. The
key observation is that PTMClust performed consistently well, while
the performances of the other two algorithms exhibit a signiﬁcant
drop as the complexity of the dataset increases.

(9)

3.2 Benchmarking against phosphopeptide predictions

We next examined the abilities of our algorithm to identify PTM
groups corresponding to bona ﬁde PTMs, ﬁne-tune observed
modiﬁcation masses and correct for misplaced modiﬁcation
positions. We Chose to focus this analysis on phosphorylation
because it plays a vital role in protein regulation for many different
biological processes. As a result, it is well studied and annotated
datasets are readily available. Using a dataset of ion trap MS/MS
spectra (human HeLa cells) previously mapped and manually
validated as phosphopeptides (Beausoleil et (11., 2004), we compared

 

 

 

 

 

PPPPPPP
mammNmm-t

 

 

 

.9
(U
D:
: |:| K—means
g -MOG -
9 - PTMClust
B
O

0.2 _

0.1 _

El
0
2 3 4 5

Number of PTM Groups Added

Fig. 4. A comparison of clustering algorithms on a synthetically generated
dataset. It shows how each of the three methods, k-means clustering, a
mixture of Gaussians (MOG) and PTMClust (our algorithm), performs as
more sets of data points with different modiﬁcations are added (increasing
complexity). Correction rate is a quality measure deﬁned as the difference
between the total true positives and the total false positives divided by the
total number peptides in the sample; higher correction rate indicates better
performance. The result shows PTMClust performs consistently well while
the other two algorithms exhibit a signiﬁcant drop as the complexity of the
dataset increases.

the initial PTMs identiﬁed from three state-of—the-art blind PTM
search engines, SIMS (Liu et (11., 2008), InsPecT 3 [Tanner et (11.
(2005); Tsur et (11. (2005)] and MODmap (Kim et (11., 2006;
Na and Paek, 2009) to the results after applying PTMClust on each
of them individually. Additionally, we compared our results against
those obtained by post-processing the result from InsPecT with the
PTM reﬁnement algorithm PTMFinder. Knowing the underlying
peptide sequence and PTM for each spectrum is critical to allow
us to compare the effectiveness of PTMClust.

The dataset consists of 1655 spectra but we focused only
on the 1340 spectra mapped and curated as singly modiﬁed
phosphopeptides (SIMS, InsPecT and PTMClust are limited to one
modiﬁcation per peptide prediction). When searching the spectra,
we used the default settings optimized for ion trap instruments
for InsPecT, PTMFinder and MODmap, and reference settings
described in Liu et (11. (2008) for SIMS. To simulate a true blind
PTM search, an empty list of known PTMs was passed into
PTMFinder, which ensures that any corrections made by PTMFinder
are not inﬂuenced by prior knowledge of known PTMs. Due to
the long search time required, which scales linearly with the size
of the reference database, a common practice employed by blind
PTM search engines [Liu et (11. (2008); Tanner et (11. (2005); Tsur
et (11. (2005)] is a two-pass approach (Craig and Beavis, 2003),
where a reduced database is generated by ﬁltering the reference
database for proteins that are found by an initial analysis of the
spectra not considering modiﬁcations. The human database from

 

3The MS-alignment algorithm (Tsur et al., 2005), which is part of the InsPecT
program, was used to perform blind PTM search.

 

802

112 ﬁlo's[BumoipJOJXO'sorwurJOJHrorq”:duq uron popeo1umoq

9103 ‘0g1sn8nv uo ::

PTMClust: a PTM refinement algorithm

 

Table 1. Results for SIMS, InsPecT, MODmap and PTMFinder with and
without application of our method, PTMClust

 

No. of correct No. of misplaced Total correct
modiﬁcation modiﬁcation peptide
position matches (% position matches (% sequence
improvement over improvement over matches
base algorithm) base algorithm)

 

SIMS 685 267 952
SIMS with PTMClust 791 (~15%) 161 (~40%) 952
InsPect 621 239 860
InsPect with PTMClust 712 (~15%) 148 (~38%) 860
PTMFinder 620 242 862
PTMFinderwith PTMClust 711 (~15%) 151 (~38%) 862
MODmap 97 28 125
MODmap with PTMClust 108 (~11%) 17 (~39%) 125

 

A reference set of MS/MS spectra previously mapped to phosphopeptides (Beausoleil
et (11., 2004) was analyzed by SIMS (Liu et (11., 2008), InsPecT (Tanner et (11., 2005;
Tsur et (11., 2005), MODmap (Na and Paek, 2009), and InsPecT followed by PTMFinder
(Tanner et (11., 2008), a PTM reﬁnement method. Using the reference peptide sequences
and modiﬁcations as the truth, the table shows the number of correct peptide sequence
matches, and the correct and misplaced modiﬁcation positions before and after applying
PTMClust (our algorithm) to the output from the four methods. PTMClust was able to
correct for a signiﬁcant portion of the modiﬁcation position errors made by the four
methods and the improvements are consistent across different methods. Furthermore,
PTMClust is able to correct errors that PTMFinder missed, signiﬁcantly outperforming
it in terms of reﬁning PTMs.

the National Center for Biotechnology Information was used as
the initial reference database in this two-pass approach. A reduced
reference database of 1827 real proteins appended with the same
number of decoy proteins and a common modiﬁcation range [—20,
300] Da was used for all algorithms.

Among the 952 outputted peptide sequences matching to the
reference for SIMS, 267 had their modiﬁcation misplaced. Similarly,
InsPecT result matched 860 reference sequences but misplaced
239 modiﬁcation positions. Using the default settings MODmap
produced a peptide sequence for only 157 spectra, which resulted in
125 peptide sequences matching to the reference with 28 of those
having misplaced modiﬁcation positions. Lastly, post-processing
InsPecT outputs with PTMFinder produced a change to ﬁve peptide
predictions: two peptide sequence changes resulted in a match to the
reference but both cases failed to identify the correct modiﬁcation
position; an incorrect modiﬁcation position change on a previously
correct prediction; and two incorrect modiﬁcation position changes
on previously mismatch modiﬁcation positions (i.e. no positive
effect). In summary, we observed 242 of the 862 peptide sequences
matching to the reference with a misplaced modiﬁcation position.

We initialized our algorithm as described above. Weighting the
tradeoff between maximizing RD and minimizing RFD, we settled
on a model complexity setting of ab = 0.90, which resulted in a RD
of 0.76 and a RFD of 0.27 for SIMS; (117 =0.94 with a RD of 0.72
and a RFD of 0.34 for InsPecT, (117 =0.94 with a RD of 0.72 and a
RFD of 0.34 for PTMFinder; and (117 =0.45 with a RD of 0.701 and
a RFD of 0 for MODmap.

As shown in Table 1, PTMClust was able to correct a signiﬁcant
portion of the misplaced modiﬁcations identiﬁed by SIMS, InsPecT,
MODmap and PTMFinder. Across the board, PTMClust performed
consistently well. More speciﬁcally, for SIMS, PTMClust decreased
the number of misplaced modiﬁcations by ~40% (106 fewer
misplaced modiﬁcation positions) to produce 791 correct matches,

an increase of ~15%. Similarity, for InsPecT, our algorithm
reduced the number of misplaced modiﬁcation positions by ~38%
(91 fewer modiﬁcation position misplacement) to produce 712
correct predictions, an increase of ~15%. PTMClust obtained
improvement on par with others for MODmap with a ~39% decrease
in the number of misplaced modiﬁcations (11 fewer misplaced
modiﬁcation positions) and a ~11% increase of correct predictions
(108). Given PTMFinder had little effect on the result from InsPecT
for this dataset, we experienced similar improvements to those for
InsPecT where we obtained ~38% (91) fewer modiﬁcation position
misplacement to produce 711 correct predictions, an increase of
~15%.

Importantly, a breakdown of the results show that our algorithm
made very few mistakes (19 for SIMS, 26 for InsPecT, 1 for
MODmap and 26 for PTMFinder) where it incorrectly changed
modiﬁcation positions that were correctly identiﬁed by SIMS,
InsPecT, MODmap or PTMFinder, while making a large number of
improvements (125 for SIMS, 117 for InsPecT, 12 for MODmap
and 117 for PTMFinder). A closer examination of the models
learned (for all four algorithms) shows that the majority of the
reference phosphopeptides were assigned to a PTM group with
modiﬁcation mass ~79.87 Da and high likelihood for S (~0.94)
and T (~0.06): this corresponded correctly to our knowledge about
phosphorylation. A listing of the search results from all algorithms
are provided in Supplementary Table S1.

Next, we examined the overlap between the results from SIMS,
InsPecT and MODmap, and the corrected results after applying
our algorithm. PTMFinder is omitted here since its result is nearly
identical to InsPecT. It has been reported that a signiﬁcant portion
of the results from SIMS and InsPecT do not match (Liu et (11.,
2008), and this observation is widely believed to be true for
many pairs of blind PTM search methods. Our analysis shows that
many of the mismatches are due to incorrect modiﬁcation position
assignments: 229 of the 790 spectra that both SIMS and InsPecT,
mapped to the same peptide sequence have mismatched modiﬁcation
position. After post-processing with our algorithm, ~41% (93) of
the mismatches were corrected, which signiﬁcantly improved the
overlap between the results from the two algorithms. We observed
similar improvements when we include MODmap in the analysis:
25 of 106 spectra have mismatching modiﬁcation position with
~44% (11) improvement between InsPect and MODmap, and
25 of 98 spectra have mismatching modiﬁcation position with
~48% (12) improvement between all three algorithms (SIMS,
InsPecT and MODmap). Due to the small number of observed
mismatched modiﬁcation positions among the overlaps between
SIMS and MODmap (14 of 119 matching peptide sequences
(~ 12%)), we did not observe any improvement post-processed with
PTMClust. PTMClust consistently, with the exception of SIMS
versus MODmap, is able to improve on the overlap of the identiﬁed
modiﬁed peptides between the different algorithms. These results
provide additional evidence that our algorithm is producing sensible
results.

3.3 Large-scale PTM analysis of yeast proteome

To test its versatility in detecting diverse PTM groups in a more
complex biological context, we next applied PTMClust to analyze
a large-scale PTM dataset taken from analyses of yeast protein
complexes (LC-MS/MS spectra only) (Krogan et (11., 2006) using

 

803

112 ﬁlo's[BumoipJOJXO'sorwurJOJHrorq”:duq uron popeo1umoq

9103 ‘0g1sn8nv uo ::

C. Chung et al.

 

Table 2. Summary of known modiﬁcations in the yeast proteome dataset

 

PTM PTMCIust SIMS

 

Known PTM Peptides with Known Peptides with

 

sites (% known PTM PTM sites known PTM
improvement sites (% sites
over SIMS) improvement
over SIMS)
Phosphorylation 66 (~8%) 115 (~15%) 61 100
Acetylation 9 (~13%) 75 (~42%) 8 72
Cysteine oxidation 1 (~0%) 7 (~17%) 1 6
(Cysteine sulﬁnic
acid)
Others 5 (~0%) 35 (~0%) 5 35
Total 81 (~8%) 232 (~9%) 75 213

 

The known set of modiﬁcations was taken from Uniprot (Release 2010_11). We matched
the sets of modiﬁed peptides produced by SIMS and post-processed with PTMClust to
the set of known yeast modiﬁcation sites. The results show PTMClust is able to identify
and reﬁne PTMs in a complex dataset.

SIMS. Brieﬂy, the yeast dataset consists of over 2 million ion
trap MS/MS spectra of which 19 560 putatively modiﬁed peptides
(estimated false discovery rate of 4.3% based on the number of decoy
peptides identiﬁed) were identiﬁed by SIMS with modiﬁcation range
[0, 200] Da. In this experiment, we used a model complexity setting
of (117 =0.92, which resulted in a RD of 0.58 and a RFD of 0.16.

Analysis with our algorithm was able to identify 121 PTM groups.
The complete list of modiﬁed peptide predictions are provided in
Supplementary Table S2 and a summary of the frequent PTMs
observed are listed in Supplementary Table S3. Within the list of
PTM groups are naturally occurring PTMs such as phosphorylation,
acetylation and oxidation, and in vitro artiﬁcial modiﬁcations such
as oxidized methionine and sodium/potassium salt adduct. Among
them are many modiﬁed peptides not previously annotated to contain
these modiﬁcations. In addition to those listed, there are a number
of putative novel modiﬁcations types that have not been previously
reported.

To validate that our approach is generally applicable to
any PTM, we compare the results before and after applying
PTMClust to known modiﬁed yeast proteins taken from the Uniprot
Knowledgebase (Release 2010_11). A breakdown of our ﬁndings is
shown in Table 2. For this analysis, we determined the modiﬁcation
sites (positions in the corresponding protein where the modiﬁcations
occur) for each modiﬁed peptide in our results and matched them
against the list of known modiﬁcation sites from Uniprot. We
found 213 modiﬁed peptide matches consisting of 75 unique known
modiﬁcation sites before and 232 modiﬁed peptide matches and 81
unique modiﬁcation sites after applying PTMClust, for an overall
improvement of ~9%. In addition to phosphorylation, PTMClust
was able to detect and reﬁne other known PTMs, such as acetylation
and cysteine oxidation (cysteine sulﬁnic acid).

A novel feature of PTMClust is the ability to consider
modiﬁcations at the ends of proteins and peptides. Examples
are modiﬁed peptides that exhibit N-terminus glycosylation
(modiﬁcation mass ~162 Da) (Tanner and Lehle, 1987). This
modiﬁcation is a PTM that adds sugar molecules to proteins and is
known to play a vital role in proteolytic resistance, protein solubility,
stability, local structure, lifetime in circulation and immunogenicity
(Lis and Sharon, 1993). Although the original distribution of

modiﬁed amino acids did not show any pattern with modiﬁcations
mainly found on alanine (A), isoleucine (I), leucine (L) and valine
(V), PTMClust was able to recognize that all the modiﬁcations occur
close to the N-terminus of the peptide. This observation is unlikely
to be explained by simple amino acid substitutions or artifacts since
they have a similar initial modiﬁcation mass and their modiﬁcations
were initially observed to occur on different amino acids. In terms of
where the modiﬁcations occur, they all share the commonality that
their modiﬁcations occur near the N-terminus, which PTMClust is
able to capture.

4 CONCLUSION

Accurate identiﬁcation of protein modiﬁcations in protein sequences
is a critical ﬁrst step in any PTM study, and thus it may beneﬁt
the utility of proteomic proﬁling to address research problems in
basic biology, as well as biomarker discovery and drug development
in the clinical domain. A recently developed approach for PTM
discovery is to analyze MS/MS data using a blind PTM search
method. Genome-wide studies using SIMS, InsPecT and other blind
PTM search engines have reported numerous PTM candidates (Han
et (11., 2005; Liu et (11., 2006, 2008; Searle et (11., 2006; Tanner et (11.,
2005; Tsur et (11., 2005). However, these search methods suffer from
two problems: mass measurement inaccuracy and uncertainty in
predicting modiﬁcation positions, which limit their accuracy and
precision. We developed a novel machine learning algorithm called
PTMClust for post-processing the results of blind PTM search
engines and improving prediction performance, by simultaneously
identifying the positions of the most likely modiﬁed amino acids
and grouping peptides with similar modiﬁcation mass and modiﬁed
amino acid side chains. We demonstrated that PTMClust improved
on both true positives (correct modiﬁcation position predictions)
and false positives (misplaces modiﬁcation positions) when applied
to the outputs of SIMS, InsPecT, MODmap, and InsPecT post-
processed with PTMFinder, a PTM reﬁnement algorithm. The results
showed that our algorithm was able to detect a number of previously
annotated naturally occurring and artiﬁcially induced PTMs, most
notably phosphorylation, but also acetylation (lysine), oxidization
(methionine) and even the formation of non-covalent adducts
(e.g. sodium/potassium salts). In addition, our algorithm facilitates
the identiﬁcation of terminal modiﬁcations, which is a feature not
currently found in common blind PTM search engines. To our
knowledge, this algorithm is the ﬁrst technique that systematically
and objectively addresses sequence-dependent variation in the PTM
dataset at the PTM level, which can improve the reliability of
individual PTM identiﬁcation.

For the task of PTM reﬁnement, we have shown that PTMClust
outperforms PTMFinder on the dataset of phosphopeptides.
PTMFinder failed here because only ~4% (69) of spectra map to
modiﬁed peptides already detected in the dataset. This is expected
since it is known that only a small portion of spectra in an experiment
map to modiﬁed peptides (Liu et (11., 2008; Tanner et (11., 2008)
and current MS experimental protocols for genome-wide studies are
designed to sample as many different peptides as possible (through
the use of an exclusion list in the mass spectrometer). Moreover,
many instances of the same modiﬁed peptide either share the same
modiﬁcation position (for both correct and misplaced cases) or
have vastly different modiﬁcation positions that point to different
phosphorylation sites in the peptide. The former can be explained

 

804

112 ﬁlo's[BumoipJOJXO'sorwurJOJHrorq”:duq uron popeo1umoq

9103 ‘0g1sn8nv uo ::

PTMClust: a PTM refinement algorithm

 

since some missing peaks due to incomplete fragmentation are
generally not detected for different instances of a peptide and
blind PTM search algorithms produce the same modiﬁed peptide
prediction for similar looking spectra. For blind PTM searches,
PTMFinder only works when there are multiple instances of the
same modiﬁed peptide. On the other hand, our method, PTMClust
is successful even for low abundance modiﬁed peptides as long as
there are multiple instances of the same underlying PTM.

We believe PTMClust is complementary to and can beneﬁt from
technological improvements in mass spectrometer instrumentation.
Two of the more prominent advancements in recent years are high
mass accuracy and alternate fragmentation mechanisms. For high
mass accuracy mass spectrometers, such as an Orbitrap (Hu et (11.,
2005), mass errors are signiﬁcantly reduced and peak intensity
signal-to-noise ratios are greatly improved in the observed MS/MS
spectra if they are acquired in high resolution mode. However,
currently the common practice for experiments using Orbitrap is
to generate MS/MS spectra in low resolution mode due to its higher
scan rate. Distinguishing features of electron-transfer dissociation
(ETD), a recently introduced fragmentation mechanism, are its
abilities to preserve the localization of labile PTMs and produce
near complete ion fragmentation (Mikesh et (11., 2006). However, it is
limited to peptides with charge state greater than +2 and can identify
signiﬁcantly less peptides than other fragmentation methods. To
address these issues, a current approach is to use a mass spectrometer
equipped with ETD and another fragmentation method, such as CID,
and switch between them depending on the properties of the peptides
to be fragmented (Hogan et (11., 2005; Molina et (11., 2008). These
technological advancements can help reduce the issue of misplaced
modiﬁcation position due to missing peaks and noisy spectra but can
still beneﬁt from using PTMClust in its analysis. Given input data
with higher mass resolution and fewer misplaced modiﬁcations due
to cleaner ion fragmentation signals, PTMClust can improve upon its
abilities to reﬁne modiﬁcation positions and ﬁnd meaningful PTM
groups. Our algorithm could be used to analyze modiﬁed peptides
processed from spectra generated by both low- and high-resolution
mass spectrometers using a variety of fragmentation methods [e.g.
CID, ETD and high-energy collision dissociation (HCD)].

Our current version of PTMClust has a small number of
weaknesses, which can potentially be solved. Although RD and RFD
can provide a conﬁdence estimate for the overall result, we have not
explored how our algorithm can be used to provide a conﬁdence
score per peptide and per modiﬁcation, which is a feature that can
be found in PTMFinder. However, since our method is based on a
probability model, such a score can be computed. Additionally, our
method cannot detect PTMs that occur only once in the data, since
multiple instances are needed for model building. Moreover, our
method is currently unable to handle multiple modiﬁcations per input
sequence. Lastly, depending on the mass resolution in the input data,
PTM groups identiﬁed by our algorithm may contain multiple PTMs
with similar modiﬁcation mass. Despite these limitations, we were
able to obtain results that signiﬁcantly exceeded the performance of
the state of the art. A noteworthy extension would be to combine
blind search algorithms with our algorithm to jointly analyze MS
data for modiﬁed and unmodiﬁed peptides. This would enable the
algorithm to take into account ion fragmentation patterns directly.
One advantage to this extension is that it might be able to handle
cases where multiple, equally likely modiﬁcation positions are
present in the peptide but the modiﬁcation was originally misplaced.

An example would be multiple serines appearing side by side in
the peptide and the modiﬁcation (phosphorylation) having been
misplaced on one of the serines. We believe that the utility, reliability
and generality of our approach in reﬁning PTMs indicate that our
probability model and extensions of it can be used to produce higher-
quality datasets and facilitate novel biological discoveries in the
future.

ACKNOWLEDGEMENTS

We thank Johannes Hewel, Yoseph Barash and Leo Lee for valuable
conversations and Vincent Fong for his help with collecting the
experimental data and generating the SIMS and InsPecT results.

Funding: This research was supported by Steacie, Discovery and
NET grants from the Natural Sciences and Engineering Research
Council of Canada (to B.J.F.); an Operating Grant from the Canadian
Institutes of Health Research (to B.J.F.); and two Operating Grants
from the Ontario Ministry of Research and Innovation, (to AB. and
B.J.F.).

Conﬂict of Interest: none declared.

REFERENCES

Baliban,R.C. et al. (2010) A novel approach for untargeted post-translational
modiﬁcation identiﬁcation using integer linear optimization and tandem mass
spectrometry. Mol. Cell. Proteomics, 9, 7647769.

Baumgartner,C. et al. (2008) Semop: a new computational strategy for the
unrestricted search for modiﬁed peptides using lc-ms/ms data. J. Proteome Res,
7, 41994208.

Beausoleil,S. et al. (2004) Large-scale characterization of hela cell nuclear
phosphoproteins. Proc. NatlAcad. Sci. USA, 101, 12130712135.

Chen,Y. et al. (2009) Ptmap - a sequence alignment software for unrestricted, accurate,
and full-spectrum identiﬁcation of post-translational modiﬁcation sites. Proc. Natl
Acad. Sci. USA, 106, 7617766.

Craig,R. and Beavis,R.C. (2003) A method for reducing the time required to match
protein sequences with tandem mass spectra. Rapid Commun. Mass Spectrom., 17,
231072316.

Craig,R. and Beavis,R. (2004) Tandem: matching proteins with tandem mass spectra.
Bioinformatics, 20, l46&l467.

Dempster,A. et al. (1977) Maximum likelihood from incomplete data via the em
algorithm. J. R. Stat. Soc., 39, 1738.

Domon,B. and Aebersold,R. (2006) Mass spectrometry and protein analysis. Science,
312, 2127217.

Eng,J. et al. (1994) An approach to correlate tandem mass spectral data of peptides
with amino acid sequences in a protein database. J. Am. Soc. Mass Spectrom., 5,
973989.

Han,Y. et al. (2005) Spider: software for protein identiﬁcation from sequence tags with
de novo sequencing error. J. Bioinformatics Comput. Biol, 3, 6977716.

Hansen,B.T. et al. (2005) P-mod: An algorithm and software to map modiﬁcations to
peptide sequences using tandem ms data. J. Proteome Res, 4, 3587368.

Havilio,M. and Wool,A. (2007) Large-scale unrestricted identiﬁcation of post-
translation modiﬁcations using tandem mass spectrometry. Anal. Chem, 79,
136271368.

Hogan,J. et al. (2005) Complementary structural information from a tryptic n-
linked glycopeptide via electron transfer ion/ion reactions and collision induced
dissociation. J. Proteome Res, 4, 628$32.

Hu,Q. et al. (2005) The orbitrap: a new mass spectrometer. J. Mass Spectrom., 40,
430—443.

Kall,L. et al. (2007) Assigning signiﬁcance to peptides identiﬁed by tandem mass
spectrometry using decoy databases. J. Proteome Res, 7, 29734.

Kim,S. et al. (2006) Modi: a powerful and convenient web server for identifying
multiple post-translational peptide modiﬁcations from tandem mass spectra. Nucleic
Acids Res, 34, W25 87W263.

Kislinger,T. et al. (2003) Prism: a generic large-scale proteomics investigation strategy
for mammals. Mol. Cell. Proteomics, 2, 9&106.

 

805

112 ﬁlo's[BumoipJOJXO'sorwurJOJHrorq”:duq uron popeo1umoq

9103 ‘0g1sn8nv uo ::

C. Chung et al.

 

Krogan,N. et al. (2006) Global landscape of protein complexes in the yeast
saccharomyces cerevisiae. Nature, 440, 6377643.

Lis,H. and Sharon,N. (1993) Protein glycosylation. structural and functional aspects.
Eur J. Biochem., 218, 1727.

Liu,C. et al. (2006) Peptide sequence tag-based blind identiﬁcation of post-
translational modiﬁcations with point process model. Bioinformatics, 22,
e3077e313.

Liu,J. et al. (2008) Sequential interval motif search: unrestricted database surveys of
global ms/ms data sets for detection of putative post-translational modiﬁcations.
Anal. Chem., 18, 784977854.

MacQueen,J. (1967) Some methods for classiﬁcation and analysis of multivariate
observations. In Proceedings of 5-th Berkeley Symposium on Mathematical
Statistics and Probability. Vol. 1, Berkeley, CA, pp. 2817297.

Matthiesen,R. et al. (2005) Vems 3.0: Algorithm and computational tools for tandem
mass spectromtry based identiﬁcation of post-translational modiﬁcations in proteins.
J. Proteome Res, 4, 233872347.

McLachlan,G. and Krishnan,T. (1997) The EM Algorithm and its Extensions. Wiley,
San Francisco, CA.

Mikesh,L. et al. (2006). The utility of etd mass spectrometry in proteomic analysis.
Biochim. Biophys Acta, 1764, 181171822.

Molina,H. et al. (2008) Comprehensive comparison of collision induced dissociation
and electron transfer dissociation. Anal. Chem., 80, 48254835.

Na,S. and Paek,E. (2009) Prediction of novel modiﬁcations by unrestrictive search of
tandem mass spectra. J. Proteome Res, 8, 44184427.

Peng]. et al. (2003) Evaluation of multidimensional chromatography coupled with
tandem mass spectrometry (lc/lc-ms/ms) for large-scale protein analysis: the yeast
proteome. J. R. Stat. Soc., 2, 43750.

Perkins,D. et al. (1999) Probability-based protein identiﬁcation by searching sequence
databases using mass spectrometry data. Electrophoresis, 20, 255172567.

Savitski,M.M. et al. (2006) Modiﬁcomb, a new proteomic tool for mapping
substoichiometric post-translational modiﬁcations, ﬁnding novel types of
modiﬁcations, and ﬁngerprinting complex protein mixtures. Mol. Cell. Proteomics,
5, 9357948.

Searle,B. et al. (2006) Identiﬁcation of protein modiﬁcations using ms/ms
de novo sequencing and the opensea alignment algorithm. J. Proteome Res, 4,
5467554.

Tanner,W. and Lehle,L. (1987) Protein glycosylation in yeast. Biochim. Biophys. Acta,
906, 88799.

Tanner,S. et al. (2005) Inspect: identiﬁcation of posttranslationally modiﬁed peptides
from tandem mass spectra. Anal. Chem., 77, 46264639.

Tanner,S. et al. (2008) Accurate annotation of peptide modiﬁcations through
unrestrictive database search. J. Proteome Res, 7, 1707181.

Tsur,D. et al. (2005) Identiﬁcation of post-translational modiﬁcations by blind search
of mass spectra. Nat. Biotechnol, 23, 156271567.

Witze,E.S. et al. (2007) Mapping protein post-translational modiﬁcations with mass
spectrometry. Nat. Methods, 4, 7987806.

 

806

112 ﬁlo's[BumoipJOJXO'sorwurJOJHrorq”:duq uron popeo1umoq

9103 ‘0g1sn8nv uo ::

