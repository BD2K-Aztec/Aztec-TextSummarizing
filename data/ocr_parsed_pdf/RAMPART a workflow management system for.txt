Bioinformatics, 31 (1 1), 2015, 1824—1826

doi: 10.1093/bioinformatics/btv056

Advance Access Publication Date: 30 January 2015
Applications Note

 

Genome analysis

RAMPART: a workflow management system for
de novo genome assembly

Daniel Mapleson*, Nizar Drou and David Swarbreck

The Genome Analysis Centre, NonNich Research Park, Norwich NR4 7UH, UK

*To whom correspondence should be addressed.
Associate Editor: Alfonso Valencia

Received on August 5, 2014; revised on January 5, 2015; accepted on January 26, 2015

Abstract

Motivation: The de novo assembly of genomes from whole— genome shotgun sequence data is a
computationally intensive, multi—stage task and it is not known a prioriwhich methods and param—
eter settings will produce optimal results. In current de novo assembly projects, a popular strategy
involves trying many approaches, using different tools and settings, and then comparing and con—
trasting the results in order to select a final assembly for publication.

Results: Herein, we present RAMPART, a configurable workflow management system for de novo
genome assembly, which helps the user identify combinations of third—party tools and settings that
provide good results for their particular genome and sequenced reads. RAMPART is designed to
exploit High performance computing environments, such as clusters and shared memory systems,
where available.

Availability and implementation: RAMPART is available under the GPLv3 license at: https://github.

 

com/TGAC/RAMPART.
Contact: daniel.mapleson@tgac.ac.uk

Supplementary information: Supplementary data are available at Bioinformatics online. In add—
ition, the user manual is available online at: http://rampart.readthedocs.org/en/latest.

 

1 Introduction

The de novo genome assembly of whole genome sequence data is a
complex task and typically involves testing multiple tools, param—
eters and approaches to produce the best possible assembly for
downstream analysis. This is necessary because it is not always
known a priori, which tools and settings will work best on the avail—
able sequence data given the organism’s specific genomic properties,
such as size, ploidy and repetitive content. Despite advances in com—
puting hardware and sequencing technologies, de novo assembly,
particularly for more complex eukaryotic genomes, remains a non—
trivial task and an ongoing challenge.

Recently, several tools, such as iMetAMOS (Koren et (11., 2014)
and A5 (Tritt et (11., 2012), approach this problem by exhaustively
testing many tools in parallel and then identifying and selecting the
best assembly. However, these pipelines focus on prokaryote assem—
blies, where the computational demands are manageable and the
genomes are easier to assemble. The complexities of eukaryotic

©The Author 2015. Published by Oxford University Press.

genomes prohibit exhaustive testing of all tools and parameters with
current computing hardware. For these projects the user must use
the literature and their own experience to decide which avenues are
worth considering.

2 RAM PART

This article presents a workflow management system for de novo
genome assembly called RAMPART, which allows the user to de—
sign and execute their own assembly workﬂows using a set of third—
party open—source tools. This reduces human error and relieves the
burden of organizing data files and executing tools manually.
Frequently, this helps to produce better assemblies in less time than
is possible otherwise.

RAMPART gives the user the freedom to compare tools and par—
ameters to identify the effect these have on the given data sets. The
ﬂexibility to roll—your—own workﬂow enables the user to tackle both

1824

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/4.U/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

112 /310'S[BIIJUO[pJOJXO"SOTJBHIJOJIITOlq/ﬂduq 11101} popcolumoq

91oz ‘Og anﬁnv uo ::

RAMPART: a workflow management system for de novo genome assembly 1825

 

Job Conﬁguration File FastQ ﬁles

Sequenced Reads

Environment Conﬁguration
7 scheduling other

Command line (—
RAMPART pipeline

(First Half)

 

- Pipeline conﬁguration
- List of Library properties

 

 

 

 

 

 

 

 

MECQ: Multi Error Con'ection and Quality RAMPART pipeline
trimming tool (Second Half - optional)
(Quake, Sickle, Musket)

 
  

 

  
  

AM P: Assembly IM vaer
(REAPR. SSPACE, SOAP Scaffolder/ Gap Closer,
Platanus Scaffolderl Gap Closer)

V

Assembly Analysis:
(Quast, CEGMA, KAT)

Output

  
   

Library Analysis (KAT)
Kmer calculation (Kmer genie)

 

 

 

 

 

 

MASS: Multi Assembling tool
(ABySS, SOAPdenovo. ALLPATHS-LG.
Velvet, Platanus. SFAdes)

V

Assembly Analysis:
(Quast, CEG MA, KAT)

Assemth Selection

Fig. 1. A simplified representation of RAMPART's architecture. Although
user's workflow must conform to the linear structure depicted here, each
stage is optional and highly configurable. Most stages allow the user to select
which third-party tool(s) and parameters are used, although primary input
and output parameters to all tools are managed automatically. The most im-
portant pipeline stage, MASS, allows the user to execute multiple assem-
blers, with varying parameters. In the subsequent step, the resultant
assemblies are analyzed before a single assembly is selected for use in the
second half of the pipeline. Input to the MASS and AMP stages can be se-
lected from any raw input library or from any modified libraries generated
during the MECQ stage

 

 

 

 

 

 

 

 

 

prokaryotic and eukaryotic assembly projects, tailoring the amount
of work to be done based on the availability of computing resources,
quantity of sequence data and complexity of the genome. In add—
ition, RAMPART produces logs, metrics and reports throughout the
workﬂow, which allows users to identify, and subsequently rectify,
any problems.

2.1 Workflow design

Input to RAMPART consists of one or more sequenced whole gen—
ome shotgun libraries and a configuration file describing properties
of those libraries and the workflow through which the libraries
should be processed. The workflow is comprised of a number of
configurable stages as depicted in Figure 1. This design allows the
user to answer project—specific questions such as: whether raw or
error corrected sequence data works best; which assembler works
best; or which parameter value is optimal for a specific tool. The
final output from RAMPART is the assembled sequences, although
plots, statistics, reports and log files are produced as the pipeline
progresses.

RAMPART connects standardized input and outputs from adja—
cent pipeline stages, which in some cases requires translating in
order to drive specific third—party tools. Designing the software this
way has three advantages. First, the user only needs to install those
tools required for their specific project. Second, the user does not
have to manually specify many input and output parameters for the
tools, particularly library properties and file locations. Finally,
RAMPART developers can add new tools without changing the
pipeline logic. RAMPART is an open source project so any user
with the right skillset can add their own tools to their pipeline, pro—
viding those tools can be made to comply with appropriate
interfaces.

2.2 Assembly comparison and selection

To compare assemblies, RAMPART measures properties of each
assembly relating to contiguity, conservation and assembly problems
using third—party tools. The user can control which analysis tools,
if any, are executed in their pipeline. To function as a fully
automated pipeline, RAMPART, at particular stages, must be
capable of selecting the best assembly to proceed with. We address
this by assigning a single score to each assembly using a method
similar to that described by Abbas et al. (2014), which groups and
weights individual assembly metrics before assigning a single score.
The user has the option to override the default weightings for
automatic selection, or can select an assembly manually at their dis—
cretion. Please see Supplementary Material Section 2 for more
information.

2.3 High performance computing support

Experimenting with de novo assembly for large, complex genomes is
a computationally intensive process. Therefore, RAMPART is de—
signed to exploit high performance computing environments, such
as clusters or shared memory machines, by executing tools in paral—
lel where possible via the system’s job scheduler. However,
RAMPART still runs on desktop and server machines sequentially
with sufficient resources. RAMPART currently supports both the
Platform Load Sharing Facility and Portable Batch System sched—
ulers, with plans to support Sun Grid Engine in the future.

3 Concluding remarks

RAMPART is a workﬂow management system for de novo genome
assembly that provides an effective means of producing quality pro—
karyotic and eukaryotic assemblies by reducing the amount of man—
ual work required in such projects. In addition, it offers a way for
users to better understand differences in their genomic sequence
data, assemblies and assembly tools. RAMPART is already used in
production workﬂows at The Genome Analysis Centre, is under ac—
tive development and is updated regularly to adapt to the latest chal—
lenges, tools and data.

As sequencing costs have come down it has been possible to se—
quence multiple isolates of the same species in parallel, these kinds
of projects present additional challenges for the bioinformatican
in terms of managing the numbers of files and comparing results of
de novo assemblies across isolates. RAMPART contains some pre—
liminary scripts for managing these kinds of projects. It also enables
the rapid functional annotation of prokaryote genomes via
PROKKA (Seemann, 2014). In the future we would like to improve
these scripts and workﬂows and to provide the ability to annotate
eukaryotic genomes.

Over time, the community will develop a better understanding of
what assembly workﬂows are appropriate for certain types of gen—
omes with certain types of sequence data. For example, the
ALLPATHS—LG ‘recipe’ (Gnerre et (11., 2011) has been shown to
produce high—quality assemblies of mammalian genomes. We plan
to encourage this process in the future by allowing users to share
their own RAMPART workﬂows and metrics describing their re—
sults on a website for appraisal by the community.

Acknowledgements

We thank Bernardo Clavijo, Robert Davey, Tony Burdett, Hugo Tavares,
Tim Stitt and Sarah Bastkowski for their support and valuable contributions.
Thanks also to all RAMPART users and the manuscript reviewers for their
valuable feedback.

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOiq/ﬂdnq 11101} pQPBOIH/IAOG

9103 ‘Og anﬁnv uo ::

1826

D. Mapleson et al.

 

Funding

This work was strategically funded by the BBSRC, Institute Strategic
Programme grant [BB/J004669/ 1].

Conﬂict of Interest: none declared.

References

Abbas,M.M. et al. (2014) Assessment of de novo assemblers for draft gen—
omes: a case study with fungal genomes. BMC Genomics, 15 (Suppl 9), 510.

Gnerre,S. et al. (2011) High—quality draft assemblies of mammalian genomes
from massively parallel sequence data. Proc. Natl Acad. Sal, 108,
1513—15 18.

Koren,S. et al. (2014) Automated ensemble assembly and validation of micro-
bial genomes. BMC Bioinformatics, 15, 126.

Seemann,T. (2014) Prokka: rapid prokaryotic genome annotation.
Bioinformatics, 30, 206 8—2069.

Tritt,A. et al. (2012) An integrated pipeline for de novo assembly of microbial
genomes. PLoS One, 7, e42304.

112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOiq/ﬂdnq 11101} pQPBOIH/IAOG

9103 ‘Og anﬁnv uo ::

