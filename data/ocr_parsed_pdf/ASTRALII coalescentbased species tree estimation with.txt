Bioinformatics, 31, 2015, i44—i52
doi: 10.1093/bioinformatics/btv234
lSMB/ECCB 2015

 

ASTRAL-ll: coalescent-based species tree
estimation with many hundreds of taxa and
thousands of genes

Siavash Mirarab1'* and Tandy Warnow2

1Department of Computer Science, The University of Texas at Austin, Austin, TX 78712, USA and 2Departments of
Computer Science and Bioengineering, The University of Illinois at Urbana-Champaign, Champaign, IL 61801, USA

*To whom correspondence should be addressed.

Abstract

Motivation: The estimation of species phylogenies requires multiple loci, since different loci can
have different trees due to incomplete lineage sorting, modeled by the multi—species coalescent
model. We recently developed a coalescent—based method, ASTRAL, which is statistically consist—
ent under the multi—species coalescent model and which is more accurate than other coalescent—
based methods on the datasets we examined. ASTRAL runs in polynomial time, by constraining
the search space using a set of allowed ’bipartitions'. Despite the limitation to allowed bipartitions,
ASTRAL is statistically consistent.

Results: We present a new version of ASTRAL, which we call ASTRAL—ll. We show that ASTRAL—ll
has substantial advantages over ASTRAL: it is faster, can analyze much larger datasets (up to 1000
species and 1000 genes) and has substantially better accuracy under some conditions. ASTRAL's
running time is 0(n2lelz), and ASTRAL—ll's running time is 0(nlelz), where n is the number of
species, k is the number of loci and Xis the set of allowed bipartitions for the search space.
Availability and implementation: ASTRAL—ll is available in open source at https://github.com/smir—
arab/ASTRAL and datasets used are available at http://www.cs.utexas.edu/~phylo/datasets/astra12/.

 

Contact: smirarab@gmail.com

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

The estimation of species trees is complicated by the fact that differ-
ent parts of the genome have different evolutionary histories; there-
fore, the different ‘gene trees’ obtained on different loci are often in
conflict with each other and with the true species tree. Gene tree dis-
cord due to incomplete lineage sorting (ILS) is a major challenge to
species tree estimation (Degnan and Rosenberg, 2009; Edwards,
2009; Maddison, 1997) and is a particular problem for rapid radi-
ations (where several speciation events occur in a relatively short
amount of time).

Because of the possibility of gene tree conflict, species tree esti-
mations are increasingly based on multiple loci. One approach to
estimating the species tree simply concatenates the sequence align-
ments for the different loci together and estimates a tree on the con-
catenated alignment. However, concatenation-based analyses can be
statistically inconsistent under the multi-species coalescent (Roch
and Steel, 2014) and can result in incorrect trees with high support
(Kubatko and Degnan, 2007). Because of this potential for

$1 The Author 2015. Published by Oxford University Press.

concatenation analyses to produce incorrect species trees, many
methods have been developed that are designed to address gene tree
incongruence due to ILS. Some of these methods have been proven
statistically consistent under the multi-species coalescent (Rannala
and Yang, 2003), which means that they will return the true species
tree with high probability, given a large enough number of true gene
trees. Some of these coalescent—based methods |e.g. MP-EST by Liu
et a1. (2010) and NJst by Liu and Yu (2011)| are now in widespread
use.

Despite the availability of coalescent-based methods, many bio-
logical datasets are too large for the available methods; for example,
MP-EST cannot be used on large datasets due to computational rea-
sons (Bayzid et (11., 2014). Other coalescent-based methods are even
more limited; for example, “‘BEAST (Heled and Drummond, 2010),
a method that co-estimates gene trees and the species tree, cannot be
used with more than about 25 species (Zimmermann et (11., 2014).
Computational challenges in real dataset analyses have required the
development of coalescent-based methods that could analyze larger

i44

This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/Iicenses/by-nc/4.0/),
which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact

journals.permissions@oup.com

/310‘srcumo[p10}xo‘sopcuHOJIIrorq/ﬁdnq

ASTRAL—II

i45

 

datasets; for example, MP—EST could not analyze the 1KP (Wickett
et al., 2014) dataset of about 100 species and 600 genes, due to the
dataset size among other issues.

ASTRAL (Mirarab et al., 2014a) was developed to enable coales—
cent—based analyses of these larger datasets. ASTRAL solves a likely
NP—hard problem by constraining the allowed search space to those
species trees that derive their bipartitions from an input set X,
provided by the user. In the default setting for ASTRAL, we set X to
be all bipartitions in the input gene trees. ASTRAL is statistically
consistent under the multi—species coalescent using this setting for X
and runs in polynomial time. ASTRAL also had excellent accuracy
on the datasets (both simulated and biological) that we explored in
Mirarab et al. (2014a); however, all these datasets were relatively
small (at most 37 species). Our subsequent evaluation of ASTRAL,
which we report here, shows that ASTRAL’s running time increases
quickly for large datasets and that setting X to be the bipartitions in
the input gene trees reduces the accuracy for species trees estimated
by ASTRAL under certain model conditions. In particular, this set—
ting for X is a problem in the presence of large numbers of taxa, few
gene trees or high levels of discordance.

We introduce ASTRAL—II, a new version of ASTRAL. We im—
prove the running time asymptotically by a factor of n (where n is
the number of species), and we show how to define the set X so that
ASTRAL is more robust and also explores a larger search space. We
have also modified ASTRAL so that it can handle polytomies in the
input trees. We compare ASTRAL to coalescent—based species tree
estimation methods and to concatenation using maximum likeli—
hood (CA—ML) on a collection of simulated datasets and a biological
dataset. We show that ASTRAL outperforms the coalescent—based
methods, providing improved accuracy, and is able to analyze very
large datasets. In particular, we show that ASTRAL can analyze
1000 species and 1000 genes in about a day, using a single proces—
sor. The comparison between ASTRAL and CA—ML shows that
ASTRAL is more accurate whenever the ILS level is sufficiently high
and comes close to CA—ML under very low ILS levels. Our extensive
simulations show how the choice of the best method to use can often
depend on the amount of gene tree error, number of genes and the
level of discordance. On the biological data, we show that some dif—
ferences between CA—ML and MP—EST previously attributed to the
fact that MP—EST accounts for ILS have to be interpreted with care,
because ASTRAL—II, which is also consistent under ILS, recovers
topologies similar to CA—ML.

2 Background: ASTRAL-l
Given a set 9 of k binary input gene trees on n taxa, there is a multi—
set of k <  quartet trees induced by the input. We define the

weighted quartet (WQ) score of a given tree as the number of quar—
tet trees from this multi—set that the given tree also induces. The opti—
mization problem solved by ASTRAL is to find the species tree that
maximizes the WQ score (Mirarab et al., 2014a).

ASTRAL solves this problem using a dynamic programming
algorithm. Each internal node of an unrooted tree divides the set of
leaves into three parts, defining a tripartition (Supplementary
Fig. 514), and vice versa, such tripartitions define nodes in an un—
rooted tree. We use X lYlZ to denote a tripartition and use triparti—
tions and internal nodes interchangeably. Each tripartition also
defines some number of quartet topologies that will be induced by
any tree that includes that tripartition as a node (Supplementary Fig.
514). Mirarab et al. (2014a) presented a formula for calculating the
number of shared induced quartet trees between two given

tripartitions. Let T : AllAzlAg and T’ : BllelBg be two triparti—
tions and let Ci; : (A, ﬂ 3,) for i,/' E {1, 2, 3}. The number of quar—
tets shared by Tand T’ is as follows:

QI(T,T’):QI(C): Z F(c1,.cz,,.C3,) (1)

(d.b.C)EG3

where G3 gives the set of all permutations of { 1, 2, 3} and F is given

by:

a b _
F(a,b,c) : <2>bc+a<2>c+ab<:> 2%

Mirarab et al. (2014a) defined an overall score for a tripartition:

w(T):Z Z QI(T.T’) (2)

geg T'e/wg)

where N (g) is the set of internal nodes in g. Mirarab et al. (2014a)
showed that the WQ score of the species tree can be computed
by summing w(T) for all nodes in the tree and then dividing this
sum by 2 (every gene tree quartet will be counted twice).

The ability to score a tripartition of the species tree in isolation
from others using the to function allows us to use dynamic program—
ming to maximize the WQ score. The dynamic programming starts
from the set L of all leaves and recursively divides it into smaller
subsets, each time finding the division that maximizes the score. To
solve the problem exactly, all ways of dividing a subset need to be
considered (this is exponential). However, we can restrict the search
space by defining a set X of bipartitions of taxa and restricting our
search to tripartitions derived from X. Let X’ : {A : AlL — A E X}
(thus, X’ is the set of both parts from all bipartitions in X). In the
constrained search, we divide a subset into two parts only when
both parts appear in X’. Thus, the recursion in the dynamic pro—
gramming becomes:

V(A) {V(A’) + WA —A’) +w(A’lA —A’)L —A)}

: max

A’.A—A’EX’
where V(A) gives the score for an optimal subtree on A, and w is
defined in Equation (2). Note that bipartitions that we allow in the
species tree we construct are restricted to those found in the set X.
ASTRAL—I, by default, sets X to the set of bipartitions observed in
the input gene trees. Mirarab et al. (2014a) proved that using this
set X ensured statistical consistency for ASTRAL. However,
the proof relies only on the fact that the set X contain all the biparti—
tions in the input gene trees, and so any set X that contains those
bipartitions (and perhaps others) also maintains statistical consist—
ency. Thus,

Theorem 1: Let X0 denote the set of bipartitions found in the in—
put gene trees. If Xo Q X, then using ASTRAL with the set X is stat—
istically consistent under the multi—species coalescent model.

3 ASTRAL-II

ASTRAL—II has three new features: (i) it uses a faster algorithm to
compute w, (ii) it searches a larger space by expanding the set X
using heuristics and (iii) it can handle polytomies in its input.

3.1 Running time improvement

The score to (Equation 2) needs to be calculated for each tripartition
and O(leZ) such tripartitions need to be scored. ASTRAL—I com—
putes w in 0012/6) time for each tripartition, but in ASTRAL—II, we
use a better algorithm that uses only O(nk) time. In ASTRAL—I, we

ﬁm'sreumol‘pquo'sopeuuowrorq/ﬁdnq

i46

S.Mirarab and T. Warnow

 

sum over O(nk) input gene tree nodes, and, for each node, we first
calculate C and then compute Q1 using Equation (1). We represent
subsets of taxa as bitsets, which results in O(n) running time for cal—
culating C; therefore, calculating each to requires 0012/6). In
ASTRAL—II, instead of looking at tripartitions in input gene trees,
we do a post—order traverse of all gene trees (rooted arbitrarily) and
calculate the score using the algorithm shown in Algorithm 1.

 

Algorithm 1. Weight calculation: The Input is a gene tree g and
a tripartition X) YlZ. Each part (e.g. X) is a bitset indexed by the
species (thus, Xlu] is 1 ifleaf u is in X and otherwise is 0). Q1 is
deﬁned as in Eq. 1. Function WEIGHT is called for allg E g and
results are summed to compute to deﬁned in Eq. (2).

RWD : 2 and FRQ : LTH : Wlo.

 

 

function WEIGHT (g.XlYlZ) w <— 0 and S <— empty stack
for u E postOra’er(g) do

if u is a leaf then
(x.y.z) <— (X[u],Y[u],Z[u])

else
(C117C127C13) <— pull from S
(C217C227 C23) <— pull from S
(xvyvz)(_(C11+ C21,C12 + (:227 C13 + C23)
(C317C327C33) <— (le —x, (Y) — y, (Z) —z)
w e w + QI(C)

Push (x, y, z) to S

 

 

Algorithm 2. Computing similarity matrix: leafCount gives the
number of leaves under a node and is easily precomputed.

 

function GETSIMILARITY (g)
S <— Zeros(n X n)
for g E g and u E postOra’er(g) do
for l E Left(u) do

for r E Rig/at(u) do n _ leafcountw)
Sll.r] : Slr.l] : Shall + < 2 >

 

 

Algorithm 3. Additions to X using greedy consensus:
See detailed descriptions of functions in Supplementary
Table S3. greedy(g. t. b) returns the greedy consensus of 9,
including only branches with frequency 2 t; if b is true,
polytomies in the consensus are randomly resolved.
updateX(t) adds bipartitions from tree t to the set X; when
edges in t are labeled with a frequency label (e.g. frequencies
in the greedy consensus), it returns the maximum label of
any new bipartition added to X. clusters(p) returns the taxon
partitions deﬁned by an unrooted node 17. upgma(S, C) runs
the UPGMA algorithm using the similarity matrix S; when C
is given, UPGMA starts by groups deﬁned in C.
randSample(p) selects a random taxon from each subtree
around a node 17 and resolve(p, r) resolves polytomy 17
according to a tree 1’ on such a sampling. Operator ) restricts
a tree or a matrix to a subset. pectinate(O) returns a pectin—
ate tree based on O, an ordered list of taxa. sortBy sorts a
list of taxa based on their decreasing similarity to a given

taxon. Constants: THS : {0.1—(1X),%,%,ﬁ,%,%}; MIT: 10;

function ADDBYGREEDY (g, S)
for t E THS do
gc <— greedy(g. t. False)
for p E polytomies(gc) do
updateX(upgma(S.start : clusters(p)))
c <— 0 and max <— MIT
while 6 < max do
6 <— c + 1
sample <— randSample(p)
r <— greea'y(g )sample. 0. True)
mt <— updateX(resoer(p. 7))
if mt 2 FRQ then max <— max + RWD
updateX(resoer(p. upgma(S )sample)))
if t g LTH and c < MIT then
for s 6 sample do
1’ <— pectinate(sortBy(S. s.sample)
updateX(resoer(p. 7))

 

This algorithm, for each traversal node 14, computes the number
of taxa under 14 that are shared with each side of the tripartition
being scored. This is done using a O(1) calculation that sums the
same quantities already calculated for the children of 14. At the
leaves, we simply need to find which side of the tripartition includes
that leaf, which can also be done in O(1) using bitsets. Thus, we eas—
ily compute the C matrix in 0(1) and therefore, calculating w for
each tripartition requires O(nk) running time. Thus,

Theorem 2: The running time of ASTRAL—II is O(nlelZ).

3.2 Additions to X

We use following heuristic strategies to add bipartitions to the set X.

3.2.1 Similarity matrix

We define the similarly between a pair of taxa as the number of
quartet trees induced by gene trees where the pair appear on the
same side of the quartet. We compute a similarity matrix by travers—
ing all nodes of input gene trees, rooted arbitrarily (Algorithm 2).
For each node 14, we look at all pairs of leaves chosen each from one

of the children of 14. For each such pair, we add  to their simi—

larity score, where y is the number of leaves outside the subtree
below 14. This will process each pair of nodes in each of the input k
genes exactly once and would therefore require 0(112/6) computa—
tions. The final score can be normalized by the number of input
quartet trees that include any pair (not shown in Algorithm 2). We
use the similarity matrix to calculate a UPGMA tree and add all its
bipartitions to X. This matrix is also used in our next heuristics.

3.2.2 Greedy

The greedy consensus of a set of trees is obtained by starting from a
star tree and adding bipartitions from input trees in the decreasing
order of their frequency if they do not conflict with previous biparti—
tions. This process ends when no remaining bipartition has frequency
above a given threshold or when the tree is fully resolved. We estimate
the greedy consensus of the gene trees with various thresholds
(Algorithm 3). For each polytomy in each consensus tree, we resolve
the polytomy in multiple ways and add bipartitions implied by those
resolutions to the set X. First, we resolve the polytomy by applying

ﬁm'sreumol‘pquo'sopeuuowrorq/ﬁdnq

ASTRAL—ll

i47

 

UPGMA to the similarity matrix, starting from clusters defined by the
polytomy. Then, we sample one taxon from each side of the polytomy
randomly and use the greedy consensus of the gene trees restricted to
this subsample to find a resolution of the polytomy (randomly resolv—
ing remaining polytomies). We repeat this process at least 10 times,
but if the subsampled greedy consensus trees include new bipartitions
that are sufficiently frequent (21%), we do more rounds of random
sampling (we increase the number of iterations by two). For each ran—
dom subsample around a polytomy, we also resolve it by calculating
an UPGMA tree on the subsampled similarity matrix. Finally, for the
two first greedy threshold values and the first 10 random subsamples,
we also use a third strategy that can potentially add a larger number
of bipartitions: for each subsampled taxon x, we resolve the polytomy
as a pectinate tree by sorting the remaining taxa according to their
similarity with x (in decreasing order).

3.2.3 Gene tree polytomies

When gene trees include polytomies, we also add new bipartitions to
set X. We first compute the greedy consensus of the input gene trees
with threshold 0, and if the greedy consensus has polytomies, we re—
solve them using UPGMA; we repeat this process twice to account
for random tie—breakers in the greedy consensus estimation. Then,
for each gene tree polytomy, we use the two resolved greedy consen—
sus trees to infer a resolution of the polytomy, and we add the
implied resolutions to set X.

3.3 Multifurcating input gene trees

Although true gene trees are assumed to be fully resolved (binary),
in some cases, estimated ML trees produce polytomies. Extending
ASTRAL to inputs that include polytomies requires solving the WQ
tree problem when each node of the input defines not a tripartition
but a multi—partition of the set of taxa. We start by a basic observa—
tion: every resolved quartet tree induced by a gene tree maps to two
nodes in the gene tree regardless of whether the gene tree is binary
or not (Supplementary Fig. 514). In other words, induced quartet
trees that map to only one node of the gene tree are unresolved.
When maximizing the quartet support, these unresolved gene tree
quartet trees are inconsequential and need to be ignored. Now, con—
sider a polytomy of degree d, which divides the set of taxa into d
parts. Any selection of three parts around the polytomy defines a tri—
partition. Any selection of two taxa from one part of this tripartition
and one taxon from each of the remaining two parts induces a
resolved quartet tree, and each resolved quartet tree maps to exactly
two nodes in our multifurcating tree. Thus, all the algorithmic as—
sumptions of ASTRAL remain intact, as long as for each degree d

. . . . d .
node in an input gene tree, we treat it as a collection of (3 > tripar—

titions. Thus, for a tripartition T : A1 lAzlAg and a multi—partition
M 2 M1)  lMd, we let Ci} 2  ﬂMl'l for all i6  and

j E {1. .. . .d} and we generalize Equation (1) to:
our M) : QI(C) : 2 Pro... Ca. Ca.) (3)
(a.b.c)EP3
where P3 is the set of all ordered subsets of size 3 from {1. . . . .d}.

Extending Algorithm 1 to compute Equation (3) is straightforward.

In the presence of polytomies, the running time analysis can
change because analyzing each polytomy requires time cubic in its
degree and the degree can increase with n. It is not hard to see that
the worst case is when all gene trees have a polytomy with d : g; in
this case, the running time is O(n3lelZ).

3.4 Statistical consistency

Theorem 3: ASTRAL—II is statistically consistent under the multi—
species coalescent model.

Proof: The changes made to ASTRAL—I to develop ASTRAL—II
affect the running time, enlarge the search space and allow it to ana—
lyze gene trees with polytomies. Under the multi—species coalescent
model, all gene trees are binary. As shown in Theorem 1, as long as
the set X contains all the bipartitions in the input gene trees,
ASTRAL is statistically consistent. The theorem follows.

4 Experimental setup

4.1 Simulation procedure

We used SimPhy (https://github.com/adamallo/SimPhy) to simulate
species trees and gene trees (produced in mutation units) and then
used Indelible (Fletcher and Yang, 2009) to simulate nucleotide se—
quences down the gene trees with varying length and model param—
eters. We estimated gene trees on these simulated gene alignments,
which we then used in coalescent—based analyses.

We simulated 11 model conditions, which we divide into two
datasets, with one model condition appearing in both datasets. We
used SimPhy to simulate species trees according to the Yule process,
characterized by the number of taxa, maximum tree length and the
speciation rate (this combination defines a model condition). In six
model conditions (forming Dataset I), we fixed the number of taxa to
200 and varied tree length (500K, 2M and 10M generations) and
speciation rates (1e—6 and 1e—7 per generation). The tree length im—
pacts the amount of ILS, with lower length resulting in shorter
branches, and therefore higher levels of ILS (Supplementary Fig. 1a).
Speciation rate impacts whether speciation events tend to happen
close to the tips (1e—06) or close to the base (1e—07). Different tree
shapes (i.e. combinations of tree length and speciation rate) produce
different levels of ILS starting from relatively low [roughly 10% dis—
tance between true gene trees and the species tree, measured by the
Robinson—Foulds (RF) distance; Robinson and Foulds (1981)] and
going up to very high (roughly 70% RF). In the remaining model
conditions (forming Dataset II), we fixed the tree shape to 2 M/1e—06
and set the number of taxa to 10, 50, 100, 200, 500 and 1000.
Thus, the model condition with 200 taxa and the 2M/1e—6 tree shape
appears in both datasets.

For each model condition, we simulated 50 species trees, form—
ing 50 replicates. On each species tree, 1000 gene trees were simu—
lated according to the multi—species coalescent model with the
population size fixed to 200 000 (a reasonable value for verte—
brates). SimPhy uses various rate parameters and rate heterogeneity
modifiers to convert gene tree branch lengths to mutation units,
introducing deviations from molecular clock and rate heterogeneity
between genes (see Supplementary Table 51 for parameters; simula—
tion scripts available at http://www.cs.utexas.edu/users/phylo/soft—
ware/astral/).

We simulated indel—free gene alignments using Indelible and
under the GTR+ T model. First, for each replicate, two parameters,
‘u and a, were drawn uniformly from (5.7. 7.3) and (0. 0.3) respect—
ively. Then, the sequence length for each gene in that replicate was
drawn from a log—normal distribution with a and 0 parameters
(thus, average sequence length is uniformly distributed between
300 bp and 1500 bp). GTR+ T parameters were drawn from
Dirichlet distributions that had parameters estimated using ML
from a collection of real biological datasets (details given in the
Supplementary Material).

ﬁm'spzumol‘protxo'sopeuuoturorq/ﬁdnq

Liu (’1 rr/., 2011 Price
(’1 rr/., 2010 Supplementar) Fig. 512
Stamatakis 2014

Figure l

Supplementar) Fig. 51

Table 1

tree height Supplementar) Fig. 52
2M

Table l

 

Supplementar) Fig. 52
Table 1

Table l

 

Supplementar) Figs 52

Supplementary
Fig. 813

Supplementary Figure 81

/310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq

 

method
ASTRAL—II NJst MP—EST

genes
O 50 A 200 l 1000

Supplementar) Fig. S2

Supplementar) Fig. S3

Supplementar) Fig. 54

Su pplementa 1‘} Table S2

Supplementar) Table 52

L1.)

Fig.

El ASTRAL—II El ASTRAL—II (true gt) El CA—ML

 

Supplementar) Fig. 55

Supplementar) Table 51 Fig. 2

Fig. 4

Supplementar) Table 52 Fig. 2

Supplementar) Fig. 56

/310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOIq/ﬂduq

E ASTRAL—II E NJst E CA—ML

 

I— Fig. 5

Supplementar) Fig. S9

Supplementar) Fig. 511

 

Xi eta/.12014l

Supplementar) Fig. 57

Drew (71 ill. 2014 Qiu (71 ill. 2000 W’ickett (71 ill. 2014 Zhaug
(’1 Lil. 20l2

Supplementar) Fig. 58 W’ickett (’1 rr/., 2014
Drew (’1 rr/., 2014
Gorem) kin (’1 rr/., 2013 Xi (71 ill. (2014)

Fig. 5
Supplementar) Figs 59 $10
Xi (71 ill.
(2014)

Supplementar) Fig. 510 Fig. 6 Xi (71 ill. (2014)

/3.IO'S[BIImOfp.IOJXO'SOIIBLUJOJIIIOICV/Idllq

i52

S.Mirarab and T. Warnow

 

CA—ML, recovers Amborella as sister to other angiosperms, with
75% support. Although the exact position of Amborella is debated,
our analysis shows that the differences between CA—ML and
MP—EST results cannot be simply attributed to the fact that CA—ML
does not consider ILS.

7 Discussion and conclusion

Our wide—ranging simulation results show that ASTRAL—II, unlike
the other methods we studied, can analyze datasets with up to 1000
taxa and 1000 genes within reasonable running times. However,
future studies need to compare ASTRAL—II to divide—and—conquer
approaches (e.g. Bayzid et al., 2014; Zimmermann et al., 2014) that
enable slower coalescent—based methods to scale to large datasets.
ASTRAL—II was more accurate than other coalescent—based methods
and was more accurate than CA—ML, unless ILS levels were low and
gene tree error was high. Although the angiosperm biological data—
set we studied was relatively small (46 species), our simulations
show that upcoming multi—gene datasets with large numbers of
species can be accurately analyzed using ASTRAL—II.

On the angiosperm dataset, ASTRAL recovered the relationship
supported by CA—ML and a large number of recent studies, whereas
MP—EST recovered an alternative topology, also supported by some
previous analyses. There are several possible reasons for the differ—
ences between the two methods, including the possibility that root—
ing gene trees (required by MP—EST but not by ASTRAL) by
Selaginella can be problematic for some genes or that the impact of
the gene tree estimation error is different for the two methods. We
also note that ASTRAL is a non—parametric method that does not
estimate branch lengths, and it is possible that non—parametric meth—
ods are less sensitive to gene tree estimation error than parametric
methods (like MP—EST).

ASTRAL was more accurate than CA—ML, except when gene
tree estimation error was high and ILS levels sufficiently low. These
results suggest that CA—ML should not be rejected, even though it is
not statistically consistent under the multi—species coalescent model.
Conversely, proofs of consistency of standard summary methods as—
sume gene trees estimated without error (Roch and Warnow, 2015 ),
and this assumption limits the relevance of consistency results in
practice. Improving gene tree estimation is crucial for coalescent—
based species tree estimation, as observed in the literature (e.g.
Mirarab et al. 2014b, c; Patel et al. 2013); however, the requirement
to use recombination—free regions complicates this pursuit as recom—
bination—free ‘c—genes’ can be very short, especially with increased
numbers of taxa (Gatesy and Springer, 2014). Future studies need to
study the impact of using shorter gene sequence alignments, and
conversely the presence of recombination events within genes, used
as input to coalescent—based species tree estimation methods.

Acknowledgement

We thank the anonymous reviewers for their helpful suggestions.

Funding

This work was supported by the National Science Foundation [0733029,
1461364, and 1062335 (to T.W.)]; and by a Howard Hughes Medical
Institute (HHMI) graduate student fellowship (to S.M.).

Conﬂict of Interest: none declared.

References

Bayzid,M.S. et al. (2014) Disk covering methods improve phylogenomic ana-
lyses. BMC Genomics, 15(Suppl 6), S7.

Degnan,].H. and Rosenberg,N.A. (2009) Gene tree discordance, phylogenetic
inference and the multispecies coalescent. Trends Ecol. Evol., 24, 332—340.

Drew,B.T. et al. (2014) Another look at the root of the angiosperms reveals a
familiar tale. Syst. Biol., 63, 368—382.

Edwards,S.V. (2009) Is a new and general theory of molecular systematics
emerging? Evolution, 63, 1—19.

Fletcher,W. and Yang,Z. (2009) Indelible: a ﬂexible simulator of biological se-
quence evolution. Mol. Biol. Evol., 26, 1879—1888.

Gatesy,]. and Springer,M. (2014) Phylogenetic analysis at deep timescales:
unreliable gene trees, bypassed hidden support, and the coalescence/
concatalescence conundrum. Mol. Phylogenet. Evol., 80, 231—266.

Goremykin,V.V. et al. (2013) The evolutionary root of ﬂowering plants. Syst.
Biol., 62, 50—61.

Heled,]. and Drummond,A.J. (2010) Bayesian inference of species trees from
multilocus data. Mol. Biol. Evol., 27, 570—580.

Kubatko,L.S. and Degnan,]. (2007) Inconsistency of phylogenetic estimates
from concatenated data under coalescence. Syst. Biol., 56, 17—24.

Liu,K. et al. (2011) RAXML and FastTree: comparing two methods for
large-scale maximum likelihood phylogeny estimation. PLOS One, 6,
627731.

Liu,L. et al. (2010) A maximum pseudo-likelihood approach for esti-
mating species trees under the coalescent model. BMC Evol. Biol.,
10, 302.

Liu,L. and Yu,L. . (2011) Estimating Species Trees from Unrooted Gene Trees.
Syst. Biol., 60, 661—667.

Maddison,W. (1997) Gene trees in species trees. Syst. Biol., 46, 523—536.

Mirarab,S. et al. (2014a) ASTRAL: genome-scale coalescent—based species tree
estimation. Bioinformatics, 30, i541—i548.

Mirarab,S. et al. (2014b) Evaluating summary methods for multi-locus species
tree estimation in the presence of incomplete lineage sorting. Syst. Biol., pii,
DOI: 10.1093/sysbio/syu063.

Mirarab,S. et al. (2014c) Statistical binning enables an accurate coalescent-
based estimation of the avian tree. Science, 346, 1250463.

Patel,S. et al. (2013) Error in phylogenetic estimation for bushes in the tree of
life.]. Phylogenet. Evol. Biol., 1, 110.

Price,M.N. et al. (2010) FastTree-2 approximately maximum-likelihood trees
for large alignments. PLOS One, 5, e9490.

Qiu,Y. et al. (2000) Phylogeny of basal angiosperms: analyses of ﬁve genes
from three genomes. Int. Plant Sci., 161, 53—527.

Rannala,B. and Yang,Z. (2003) Bayes estimation of species divergence times
and ancestral population sizes using DNA sequences from multiple loci.
Genetics, 164, 1645—1656.

Robinson,D. and Foulds,L. (1981) Comparison of phylogenetic trees. Math.
BiOSci., 53,131—147.

Roch,S. and Steel,M. (2014) Likelihood-based tree reconstruction on a concat-
enation of aligned sequence data sets can be statistically inconsistent. Theor.
Popul. Biol., 100, 56—62.

Roch,S. and Warnow,T. (2015) On the robustness to gene tree estimation
error (or lack thereof) of coalescent—based species tree methods. Syst. Biol.,
pii, syV016.

Stamatakis,A. (2014) RAXML Version 8: A Tool for Phylogenetic Analysis
and Post-Analysis of Large Phylogenies. Bioinformatics, 30, 1312—1313.

Wickett,N.]. et al. (2014) Phylotranscriptomic analysis of the origin and
early diversiﬁcation of land plants. Proc. Natl. Acad. Sci. USA, 111,
E4859—E4868.

Xi,Z. et al. (2014) Coalescent versus concatenation methods and the place-
ment ofAmborella as sister to water lilies. Syst. Biol., 63, 919—932.

Zhang,N. et al. (2012) Highly conserved low—copy nuclear genes as effect-
ive markers for phylogenetic analyses in angiosperms. New Phytol., 195,
923—937.

Zimmermann,T. et al. (2014) BBCA: improving the scalability of "’BEAST
using random binning. BMC Genomics, 15(Suppl 6), $11.

[BJO'SIIZHIHOTPJOJXO'SOplZILLIOJLIIOIQ/[idnq

