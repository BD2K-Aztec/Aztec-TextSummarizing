Bioinformatics, 32110), 2016, 1559—1561
doi:10.1093/bioinformatics/btw015

Advance Access Publication Date: 18 January 2016
Applications Note

 

Sequence analysis

GeneValidator: identify problems with
protein-coding gene predictions

Monica-Andreea Dragan”, Ismail Moghulz'T, Anurag Priyamz,
Claudio Bustos3 and Yannick Wurm2'*

1Department of Computer Science, ETH Ziirich, Ziirich, Switzerland, 2School of Biological and Chemical Sciences,
Queen Mary University of London, London, UK and 3Departamento de Psiquiatria y Salud Mental, University of
Concepcion, Concepcion, Chile

*To whom correspondence should be addressed.
TThe authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.
Associate Editor: John Hancock

Received on 4 August 2015; revised on 8 October 2015; accepted on 18 December 2015

Abstract

Summary: Genomes of emerging model organisms are now being sequenced at very low cost.
However, obtaining accurate gene predictions remains challenging: even the best gene prediction algo—
rithms make substantial errors and can jeopardize subsequent analyses. Therefore, many predicted
genes must be time—consumingly visually inspected and manually curated. We developed GeneValidator
(GV) to automatically identify problematic gene predictions and to aid manual curation. For each gene,
GV performs multiple analyses based on comparisons to gene sequences from large databases. The re—
sulting report identifies problematic gene predictions and includes extensive statistics and graphs for
each prediction to guide manual curation efforts. GV thus accelerates and enhances the work of biocura—
tors and researchers who need accurate gene predictions from newly sequenced genomes.

Availability and implementation: GV can be used through a web interface or in the command—line.

 

GV is open—source (AGPL), available at https://wurmlab.github.io/tools/genevalidator.

Contact: y.wurm@qmul.ac.uk

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

The plummeting costs of DNA sequencing (Wetterstrand, 2015) have
made (16 1101/0 genome sequencing accessible to individual laboratories
and even researchers (Nygaard and Wurm, 2015). However, identify-
ing genes in a newly assembled genome remains challenging.
Traditional gene prediction approaches involve either [lb initio predic-
tion via modelling ofcoding versus non-coding sequence or similarity-
based prediction using independent sources. Relevant sources include
protein-coding sequences from other organisms, or peptide or tran-
scriptome sequences from the organism being studied. Modern algo-
rithms combine both approaches (Cantarel et (11., 2008; Korf, 2004;
Stanke et (11., 2008). The recent ability of obtaining large amounts of
RNA sequences at low cost (Hou et (11., 2015) has led to a dramatic
improvement in the performance of similarity-based algorithms and
thus gene prediction quality (Goodswen et (11., 2012) albeit only for

(C7 The Author 2016. Published by Oxford University Press.

expressed genes. Despite this, the accuracy of gene prediction tools
(e.g. Alioto et (11., 2013; Cantarel et (11., 2008; Keller et (11., 2011;
Lomsadze et (11., 2014; Wilkerson et (11., 2006) remains disappointing
(Yandell and Ence, 2012). Typical errors include missing exons, non-
coding sequence retention in exons, fragmenting genes and merging
neighboring genes. Automated gene prediction quality evaluation
tools analyze exon boundaries (Eilbeck et (11., 2009; Yandell and
Ence, 2012) or focus on subsets of highly conserved genes (Parra
et (11., 2007). Unfortunately, such tools ignore most of the information
present in frequently updated databases such as SwissProt or
Genbank NR. Visual analysis is thus required to identify errors and
manual curation is needed to fix them. This requires tens of minutes
to days for one gene (Howe et (11., 2008) — a daunting task when con-
sidering analyses of dozens of species each with thousands of genes
(Pray, 2008; Simola et (11., 2013).

1559

This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/Iicenses/by/4.0/), which permits
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.

/310‘srcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

1560

M.-A.Drégan et al.

 

W’e thus created GeneValidator (GV), a tool to evaluate quality
of protein-coding gene predictions based on comparisons with simi-
lar known proteins from public and private databases. GV provides
quality evaluations in text formats for automated analysis and in

highly visual formats for inspection by researchers.

2 Approach

For each new gene prediction, BLAST (Camacho et al., 2009) identi-
fies similar sequences in Swiss-Prot (The UniProt Consortium,
2014), (ienbank NR (Benson et al., 2010) or other relevant data-
bases. Subsequently, GV performs up to seven comparisons between
the gene prediction and the most highly significant hit sequences or
high-scoring segment pairs (HSPs). The results of each comparison
indicate whether characteristics of the query gene prediction deviate
from those of hit sequences. The following four comparisons are
performed on all queries:

Length: W’e compare the length of the query sequence to the
lengths of the most significant BLAST hits using hierarchical cluster-
ing (Fig. 1a, e) and a rank test. A particularly low or high rank can
suggest that the query is too short or too long.

Coverage: W’e determine whether hit regions match the query se-
quence more than once using a W’ilcoxon test. Significance suggests
that the query includes duplicated regions (e.g. resulting from merg-
ing of tandem gene duplicates).

Conserved regions: W’e align the query to a position specific scor-
ing matrix profile derived from a multiple alignment of the ten most
significant BLAST hits. This identifies potentially missing or extra
regions (Fig. 1d, h and Supplementary Fig. 52).

Different genes: Deviation from unimodality of HSP start and
stop coordinates indicates that HSPs map to multiple regions of the
query. If this is the case, we perform a linear regression between
HSP start and stop coordinates, weighting data points proportion-
ally to BLAST significance (see Fig. 1b, c, f, g). Regression slopes be-
tween ().4 and 1.2 (empirically chosen values) suggest that the query
prediction combines two different genes (see Supplementary Fig.
51).

Two additional analyses are performed on nucleotide queries:

Ab initio Open Reading Frame (ORF): W’e expect a single major
ORF. Frameshifts, retained introns or merged genes can lead to pres-
ence of multiple major ORFs.

 

3 IOLiC’y Sceticr‘ec .~ . - . .
‘D IN: cr‘scCltisie o ' - ‘Q
g 0 ‘ ‘-
0 o o a
o a
. L
o ' 8
0. ° E
I 3% 0 j
o 0. Z
0 r o o i
o c o .

 
 

Start offset (most left HSP)

Sequence Length
obey SCLtiCr‘EC

.ch Der‘sc Cltisic’

.O:l"c’ .r

 

HitNurnber

 

 

End Offset (most right HSP) I End Offset (most right HSP).

 

Numberof Sequences I Numberof Sequences I
query

  

 

Similarity-based ORFS: W’e expect all BLAST hits to align within
a single ORF. This test is more sensitive than the previous when a
query has HSPs in multiple reading frames.

An additional analysis is performed for l\4AKER gene
predictions:

MAKER RNASeq Quality Index: l\4AKER gene predictions in-
clude a quality index (in the PASTA defline) indicating the extent to
which the prediction is supported by RNAseq evidence. GV con-

siders this information when it is available.

 

Each analys ‘ of each query returns a binary result (i.e. similar
or different to BLAST hits) according to a P-value or an empiric-
ally determined cutoff. The results for each query are combined
into an indicative overall quality score from 0 to 100. The scores
allow comparing overall qualities of different gene sets, or identify-
ing the highest- or lowest-quality gene predictions within a gene
set.

The individual and global scores are provided in JSON and tab-
delimited text formats, and as an HTl\4L report that can be viewed
in a web browser (Supplementary Fig. S3). Importantly, this
HTl\4L report includes up to five graphs for each gene (Fig. 1), as
well as explanations of the analyses and results. These visualiza-
tions can be particularly useful to biocurators improving gene

predictions.

3 Usage

CV is installed as a ruby gem (Bonnal et al., 2012). The user pro-
vides PASTA protein or nucleotide gene predictions; BLAST is run
remotely (NCBI) or on a local database, or the user provides an
existing BLAST output. Alternatively, a web wrapper provides an
elegant graphical interface and a programmatic iQuery API. Finally,
GV can already be used from within the Afra genome annotation
editor (Priyam el al. unpublished).

4 Discussion

(iV’s power comes from leveraging large, frequently-updated data-
bases, using multiple metrics, input/output format flexibility and im-
portantly its multiple data visualization approaches. Indeed,
visualization is crucial for understanding genomic comparisons
(Nielsen et al., 2010; Riba—Grognuz et al., 201 1).
The code underlying GV respects best practices in scientific soft-
).

ware development (Wurm, 2015 However, (iV’s analyses depend

I Aligr‘ce (KSceiicr‘cc I Cer‘sc’vce aegicr

 

Offset in prediction

Offset in prediction

i
:—
—_

l Aligr‘ce ii: SCLtiCr‘EC l Ccr‘sc’vce aegicr
Hummus-Ii.”

 

 

Start offset (most left HSP)

Sequence Length

Offset in prediction

Offset in prediction

Fig. 1. Contrasting GV graphs: (a), (8) sequence lengths; (b), (f) HSP offsets; (c), (g) overviews of hit regions; (d), (h) conserved regions. Graphs (aid) were pro,
duced with a sequence for which GV detected no problems. The other graphs show typical problems: (e) query is short; (f), (9) query sequence is a fusion of unrei

lated genes; (h): query includes sequence absent from first 10 hits

dnq

[310'sp2umofp105xo'sopeuuopltotq”

Gene Validator

1561

 

on BLAST—identification of homologs in databases which include
low—quality sequences, on expecting similar gene sequence and
structure among homologs, and on empirically chosen cutoffs.
Binary results of individual tests are thus indicative rather than infal—
lible. Similarly, GV’s overall quality evaluations are not ground
truths but indicate consistencies with database sequences.

We used two approaches to determine the appropriateness of
GV’s scoring system. GV scores for 10 000 randomly selected
Swissprot genes were significantly higher than GV scores for 10 000
randomly selected TrEMBL genes (Supplementary Fig. 54).
Similarly, 73—90% of recently updated gene models from four eu—
karyotic genomes had higher GV scores than older versions
(Supplementary Table 51; Supplementary Fig. 55). Both results are
consistent with GV appropriately quantifying gene prediction im—
provements due to manual curation or improved gene prediction
technologies. Lower GV scores for some gene predictions could be
due the reference databases containing sequences of low—quality,
new automated predictions introducing new errors and scores being
noisy for queries with few BLAST hits.

5 Future work

CV was developed with a plug—in system for adding validation
approaches. We plan to extend CV with improved orthology detec—
tion, additional validation approaches (e.g. codon usage, explicit
RNAseq support) and improved statistics (e.g. evidence—weighting
based on phylogenetic and database—quality information). In its cur—
rent form, GV already can save large amounts of time for biologists
working with newly obtained gene predictions.

Funding

This work was supported by the Sciruby community, NESCent Google Summer
of Code, the NESCent “Building non-model species genome curation
communities” working group, Biotechnology and Biological Sciences Research
Council [BB/K004204/1], Natural Environment Research Council [NE/
L00626X/1, EOS Cloud] and QMUL Apocrita Midplus (EP/K000128/1).

Conﬂict of Interest: none declared.

References

Alioto,T. et al. (2013) ASPic-GeneID: a lightweight pipeline for gene predic-
tion and alternative isoforms detection. BioMed Res. Int., 2013, 502827.

Benson,D.A. et al. (2010) GenBank. Nucleic Acids Res., 38, D46—D51.

Bonnal,R.]. et al. (2012) Biogem: an effective tool-based approach for scaling
up open source software development in bioinformatics. Bioinformatics,
28,1035—1037.

Camacho,C. et al. (2009) BLAST+z architecture and applications. BMC
Bioinformatics, 10, 421 .

Cantarel,B.L. et al. (2008) MAKER: an easy-to-use annotation pipeline designed
for emerging model organism genomes. Genome Res., 18, 188—196.

Eilbeck,K. et al. (2009) Quantitative measures for the management and com-
parison of annotated genomes. BMC Bioinformatics, 10, 67.

Goodswen,S.]. et al. (2012) Evaluating high-throughput ab initio gene ﬁnders
to discover proteins encoded in eukaryotic pathogen genomes missed by la-
boratory techniques. PLoS One, 7, e50609.

Hou,Z. et al. (2015) A cost-effective RNA sequencing protocol for large-scale
gene expression studies. Nat. Sci. Rep., 5, 59.

Howe,D. et al. (2008) Big data: the future of biocuration. Nature, 455, 47—50.

Keller,O. et al. (2011) A novel hybrid gene prediction method employing pro—
tein multiple sequence alignments. Bioinformatics, 27, 757—763.

Korf,I. (2004) Gene ﬁnding in novel genomes. BMC Bioinformatics, 5, 59.

Lomsadze,A. et al. (2014) Integration of mapped RNA-Seq reads into
automatic training of eukaryotic gene ﬁnding algorithm. Nucleic Acids Res.,
42, e119.

Nielsen,C.B. et al. (2010) Visualizing genomes: techniques and challenges.
Nat. Methods, 7, 55—15.

Nygaard,S. and Wurm,Y. (2015 ) Ant genomics (Hymenoptera: Formicidae): chal-
lenges to overcome and opportunities to seize. Myrmecol. News, 21, 59—72.

Parra,G. et al. (2007) CEGMA: A pipeline to accurately annotate core genes in
eukaryotic genomes. Bioinformatics, 23, 1061—1067.

Pray,L.A. (2008). Eukaryotic genome complexity. Nat. Educ., 1, 96.

Riba-Grognuz,O. et al. (2011) Visualization and quality assessment of de
nor/0 genome assemblies. Bioinformatics, 27, 3425—3426.

Simola,D.F. et al. (2013) Social insect genomes exhibit dramatic evolution in
gene composition and regulation while preserving regulatory features linked
to sociality. Genome Res., 23, 1235—1247.

Stanke,M. et al. (2008) Using native and syntenically mapped cDNA align-
ments to improve de nor/0 gene ﬁnding. Bioinformatics, 24, 637—644.

The UniProt Consortium. (2014) Uniprot: a hub for protein information.
Nucleic Acids Res., gku989.

Wetterstrand,K. (2015). DNA Sequencing Costs: Data from the NHGRI
Genome Sequencing Program (GSP).

Wilkerson,M. et al. (2006) yrGATE: a web-based gene-structure annotation
tool for the identiﬁcation and dissemination of eukaryotic genes. Genome
Biol., 7, r58.

Wurm,Y. (2015) Avoid having to retract your genomics analysis. The
Winnower, 2, e143696.68941.

Yandell,M. and Ence,D. (2012) A beginner’s guide to eukaryotic genome an-
notation. Nat. Rev. Genet., 13, 329—342.

ﬁm'srcumol‘pquo'sopizuuowtotq/ﬁdnq

