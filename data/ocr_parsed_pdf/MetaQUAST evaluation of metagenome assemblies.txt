Advance Access Publication Date: 26 November 2015

Bioinformatics, 32(7), 2016, 1088—1090
doi: 10.1093/bioinformatics/btv697

Applications Note

 

Genome analysis

MetaQUAST: evaluation of
metagenome assemblies

Alla Mikheenko, Vladislav Saveliev and Alexey Gurevich*

Center for Algorithmic Biotechnology, Institute of Translational Biomedicine, St. Petersburg State University, St.

Petersburg 199034, Russia

*To whom correspondence should be addressed.
Associate Editor: lnanc Birol

Received on 20 August 2015; revised on 10 November 2015; accepted on 23 November 2015

Abstract

Summary: During the past years we have witnessed the rapid development of new metagenome
assembly methods. Although there are many benchmark utilities designed for single—genome
assemblies, there is no well—recognized evaluation and comparison tool for metagenomic—specific
analogues. In this article, we present MetaQUAST, a modification of QUAST, the state—of—the—art
tool for genome assembly evaluation based on alignment of contigs to a reference. MetaQUAST
addresses such metagenome datasets features as (i) unknown species content by detecting and
downloading reference sequences, (ii) huge diversity by giving comprehensive reports for multiple
genomes and (iii) presence of highly relative species by detecting chimeric contigs. We demon—
strate MetaQUAST performance by comparing several leading assemblers on one simulated and

two real datasets.

Availability and implementation: http://bioinf.spbau.ru/metaquast.

Contact: aleksey.gurevich@spbu.ru

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

Metagenomics studies genetic material taken directly from environ—
mental samples. NGS technologies allow for extracting short reads
even from low abundant organisms without cloning. However, the
data produced in such experiments tend to be enormous, noisy, and
contain fragments from thousands of species highly varying in abun—
dance and homology. Those challenges led to a new computational
problem of metagenome assembly, followed by a diversity of meth—
ods (Boisvert et (11., 2012; Peng et (11., 2012; Haider et (11., 2014),
which demands a standard benchmark procedure.

Most existing assembly evaluation approaches are not designed
to work with metagenomes. However there exist methods which
count read likelihoods with respect to the assembly (Clark et (11.,
2013; Ghodsi et (11., 2013), or determine single—copy conservative
ubiquitous gene content (Parks et (11., 2015; Simao et (11., 2015).
Unfortunately, none uses contig alignments to a closely related refer—
ence genome. In this article we present MetaQUAST, a metage—
nomic—specific improvement over QUAST (Gurevich et (11., 2013).

QUAST detects errors based on alignments to a given closely related
reference genome, and also reports and plots contig statistics like
N50 and gene content which gives an overview of constituent spe—
cies even without user—supplied reference sequences. To address
metagenome assemblies, MetaQUAST adds several new features: (i)
ability of using an unlimited number of reference genomes, (ii) auto—
mated species content detection, (iii) detection of chimeric contigs
(interspecies misassemblies) and (iv) significantly redesigned
visualizations.

2 Materials and Methods

2.1 Reference—based evaluation

There are well—studied metagenomic datasets with known species
content (Qin et (11., 2010) or simulated reads (Boisvert et (11., 2012;
Namiki et (11., 2012). They can be used with MetaQUAST to evalu—
ate assembly methods based on alignments to reference genomes.

©The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1088

 

91oz ‘Og JSanV 110 salaﬁuv soc] ‘BtHJOJtIBQ 30 AJtSJQAtuf] 112 /310'slcu1n0fp103x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

MemOUAST

1089

 

The multiple—reference pipeline consists of four major steps
(Supplementary Fig. S1):

1. All reference genomes get concatenated into one ﬁle (combined
reference). QUAST is fed with all input assemblies versus the
combined reference. We force QUAST to report all ambiguous
alignments instead of only one. For metagenomic datasets con—
taining closely related species, all ambiguous alignments are
essential.

2. We partition all contigs into groups, each of which contains se—
quences mapped to a particular reference genome (based on pre—
viously generated alignments). The contigs mapped to several
genomes go into every matching group. Unaligned contigs are
put into one extra group.

3. Next, QUAST is launched for each input reference separately,
feeding it with a corresponding group of contigs. The group of
unaligned contigs is processed without any input reference.

4. Finally, the results of all QUAST runs are grouped together into
summary reports and visualizations. A user can view both de—
tailed full QUAST outputs for each run, as well as bird—eye over—
views of the results from the entire dataset.

In addition to the QUAST standard set of quality statistics (N5 0,
genome fraction, etc.), we added two metrics:

' No. of interspecies translocations: A type of misassembly where
the ﬂanking sequences align to distinct references [similarly to
translocation introduced in (Gurevich et al. 2013) where ﬂanking
sequences align to different chromosomes].

' No. of possibly misassembled contigs: The number of contigs that
include both large aligned and unaligned fragments, thus possibly
contain interspecies translocation with an unknown genome.

In contrast with regular QUAST which uses GeneMarkS,
MetaQUAST uses MetaGeneMark (Zhu et (11., 2010) for gene pre—
diction, which is developed specially for metagenomes.

2.2 De novo evaluation

Most experimental metagenomic studies operate with de novo
assemblies where the reference information is not available. When
MetaQUAST is executed without input reference sequences or spe—
cies lists, it attempts to identify species content and automatically
pull reference sequences. Note that the algorithm works under the
assumption that researchers are mostly interested in microbial com—
munities, so the search is restricted to bacteria and archaea.

The workﬂow (see Supplementary Fig. S2) starts with applying
BLASTn (Camacho et (11., 2009) to align contigs to the 16S rRNA
sequences from the SILVA database (Quast et (11., 2012). The 16S
subunits, which are present in almost all microbial species, are
highly conserved sequences but also include a hypervariable region
that can serve to classify organisms into taxonomic groups. For each
detected species, one strain with the best score is remained in the
assembly.

Top 50 organisms are queried against NCBI, and the least frag—
mented sequence for each species is downloaded. Due to the known
issues with differences in the copy number of rRNA operons be—
tween organisms, and intra—genomic heterogeneity of the 16S genes,
some of the downloaded genome sequences may not have represen—
tation in the assembly under assessment. MetaQUAST attempts to
filter false positives by removing genomes with a contig coverage
fraction of less than 10% (for all assemblies). In special cases when
all sequences have a very low genome fraction, the list remains
unfiltered.

As a result, we obtain a set of genomes possibly represented by
the assembled sequences. We launch MetaQUAST using these se—
quences (as in section 2.1) and produce the same output files as in
the case of usual reference—based analysis.

Our approach is a compromise between accuracy and time/mem—
ory consumption. For more precise results, we would advise using
MGTAXA (Williamson et (11., 2012), or methods based on exact
read alignments, e.g. Kraken (Wood and Salzberg, 2014) or CLARK
(Ounit et (11., 2015). Very precise results can be obtained by a
BLASTx (Altschul et (11., 1990) search against the whole NCBI—nr
database. The acquired list of species names can be fed to
MetaQUAST in a plain text format, making it download the speci—
fied sequences from the NCBI database and use them for the refer—
ence—based evaluation (see Section 2.1).

2.3 Refining misassemblies based on read mapping

The regular single—genome QUAST algorithm reports structural dis—
agreements between contigs and a reference genome as misassem—
blies. However, in some cases they may be proof of structural
variants (SVs) rather than true assembly errors. This is especially im—
portant when analysing a metagenomic community for which no
close references are available. MetaQUAST addresses this problem
by taking pair reads mapping into consideration (Supplementary
Fig. S3). MetaQUAST applies a structural variation finding algo—
rithm to detect breakpoints based on discordant read—pairs, which
then used to mute misassemblies that share called breakpoints.

2.3.1 SV detection

MetaQUAST utilizes bowtie2 (Langmead et (11., 2009) for perform—
ing reads alignment against the combined reference genome. The
BAM file (Li et (11., 2009) produced by bowtie2 is sorted by coor—
dinate and passed as an input for SV discovery software. We have
chosen Manta (Chen et (11., 2015) SV caller that outperforms
LUMPY (Layer et (11., 2014) and Pindel (Ye et (11., 2009) by sensitiv—
ity and precision on our test datasets.

2.3.2 Misassembly classification
Each misassembly reported by QUAST is compared with breakpoint
confidence intervals of all discovered SVs. If both start and end co—
ordinates of the misassembly lie within the SV intervals extended by
a small 5, MetaQUAST marks this misassembly fake and does not
include into the final report. If no similarity is found between SVs
and the misassembly, it is considered true. The default 5 value is
100 bp which is based on manual analysis of dozens SVs occurred
on real and simulated datasets.

This approach allows us to significantly reduce number of falsely
reported misassemblies on all three test datasets. See Supplementary
Material for detailed benchmarking results.

2.4 Visualization
MetaQUAST complements the QUAST visualizations with a num—
ber of bird—eye overviews. In addition, an interactive summary
HTML report combining key statistics for all assemblies and refer—
ences is generated. Charts and summary HTMLs are demonstrated
in Supplementary Material.

We classify summary plots into three groups:

' Misassembly plots: distribution of misassemblies by type (reloca—
tions, inversions, translocations and interspecies translocations).
They exist in two views: across all assemblies per reference and
across all references per assembly.

9103 ‘Og JSanV 110 salaﬁuv soc] ‘BtHJOJtIBQ 30 AJtSJQAtuf] 112 /310'slcu1n0fp103x0"sotJBuiJOJutotq/ﬁduq 11101} popcolumoq

1090

A.Mikheenko et aI.

 

Statistics without reference IDBJLUD Ray SOAFnemuaz SPAdes

a contigs _ 31 224 10 32? 36 468 40 346

Largest contig _ 305 144 99 10? 4D ?0? 189 063

Total length  80 325 256 30 411 92 1 46 ?41 224 92 39? 329

Total length (a w 1000 hp! 69 223 529 2?’ 080646 30 220 336 ?'7 823 825

Total Length 6—. 10000 be] 34 930 908 13 2'55 6?? 2 800 864 33 4?? 263

Total length (a —- 50000 b0] 16 008 349 2 346 322 0 11 409 912

misassemblies

a mrsassemoinas . 1132 40? 831 1.240

Misassembled contigs hnmh . 10 448 260 4 115 ??Z 911 826 1.0 2'50 55 3'

Mismatches

4 mismatches per 100 kbp . 904.95 1054.68 885.21 —

4 indels new 100 mp .. 31.88 27.7 17.09 

Ff N's DE! 100 kbp _ 238.45 205?.27 3730.31 1423.14

Genome Slatislits

Genome fraction [96) _ 12.296 4.386 3.055 11.535
Aid:ermansia_mn:inlnnila_a1‘tc 0.003 — — 0.011
Allsripes_pu[remms 1.366 0.595 0.61 1.11?
Anaermruncus_cchhomlnis 2.466 2.06? 1.268 2.320

Bacteroades catcae 5.363 2.543 3.923 5.136
=3  :1?) t-  I)  13$

 

Fig. 1. Part of a summary HTML report for the MetaHlT dataset. The cells
containing outliers are colored. In this example, the genome fraction per-
reference info is expanded

' Metric—level plots: one per metric, for all assemblies versus all
references. Genomes are ordered by the average value among all
assemblies, starting from the best.

' Krona charts (Ondov et (11., 2011): one per assembly, and one for
the whole dataset. Round charts show the taxonomic proﬁle.
Available only in the de novo evaluation mode.

The interactive summary HTML report aggregates tables and
plots for all statistics, references and assemblies. Each table row
shows a value for the combined reference and can be expanded to
show values per each reference (see Fig. 1). The blue/red heatmap
emphasizes outliers.

3 Results

We tested MetaQUAST on three datasets: the CAMI (http://cami—
challenge.org) simulated toy dataset, the MH0045 sample from
MetaHit and the SRS077736 tongue dorsum female sample from
HMP (Human Microbiome Project Consortium et (11., 2012). We
assembled these data using four leading assemblers commonly used
in metagenomic studies: IDBA—UD (Peng et (11., 2012), SPAdes
(Bankevich et (11., 2012), Ray Meta (Boisvert et (11., 2012) and
SOAPdenov02 (Luo et (11., 2012). Comparisons results and
MetaQUAST performance on all three datasets are demonstrated in
Supplementary Material.

The comparison on these datasets demonstrated that none of the
assemblers can be called an undisputed leader in metagenomic as—
sembly. Thus, tools such as MetaQUAST are of great practical im—
portance for the community. It will help scientists to assess different
assembly software and choose the best pipeline for their research.

Acknowledgements

We would like to thank A. Prjibelski, S. Nurk, D. Meleshko and D. Antipov
from the SPAdes team for substantial feedback on our software; the CAMI
team for extremely helpful comments and feature requests; and T. Amariuta
for proofreading this text.

Funding

This work was supported by Russian Science Foundation [grant number
14-50—00069].

Conﬂict of Interest: none declared.

References

Altschul,S. et al. (1990) Basic local alignment search tool. ]. Mol. Biol., 215,
403—410.

Bankevich,A. et al. (2012) SPAdes: a new genome assembly algorithm and its
applications to single—cell sequencing. ]. Comput. Biol., 19, 455—477.

Boisvert,S. et al. (2012) Ray Meta: scalable de novo metagenome assembly
and proﬁling. Genome Biol. 13, R122.

Camacho,C. et al. (2009) Blast+z architecture and applications. BMC
Bioinformatics, 10, 421.

Chen,X. et al. (2015) Manta: rapid detection of structural variants and indels
for clinical sequencing applications. Bioinformatics, doi:10.1093/bioinfor—
matics/btv710.

Clark,S. et al. (2013) ALE: a generic assembly likelihood evaluation frame-
work for assessing the accuracy of genome and metagenome assemblies.
Bioinformatics, 29, 435—443.

Ghodsi,M. et al. (2013) De novo likelihood-based measures for comparing
genome assemblies. BMC Res. Notes, 6, 334.

Gurevich,A. et al. (2013) QUAST: quality assessment tool for genome assem—
blies. Bioinformatics, 29, 1072—1075 .

Haider,B. et al. (2014) Omega: an overlap-graph de novo assembler for meta—
genomics. Bioinformatics, 30, 2717—2722.

Human Microbiome Project Consortium et al. (2012) Structure, function and
diversity of the healthy human microbiome. Nature, 486, 207—214.

Langmead,B. et al. (2009) Ultrafast and memory-efﬁcient alignment of short
DNA sequences to the human genome. Genome Biol., 10, R25.

Layer,R. et al. (2014) LUMPY: a probabilistic framework for structural vari—
ant discovery. Genome Biol., 15, R84.

Li,H. et al. (2009) The Sequence Alignment/Map format and SAMtools.
Bioinformatics, 25, 2078—2079.

Luo,R. et al. (2012) SOAPdenov02: an empirically improved memory-efﬁcient
short—read de novo assembler. Gigascience, 1, 18.

Namiki,T. et al. (2012) Metavelvet: an extension of velvet assembler to de
novo metagenome assembly from short sequence reads. Nucleic Acids Res.,
40,e155.

Ondov,B. et al. (2011) Interactive metagenomic visualization in a Web
browser. BMC Bioinformatics, 12, 385.

Ounit,R. et al. (2015) CLARK: fast and accurate classiﬁcation of metagenomic
and genomic sequences using discriminative k—mers. BMC Genomics, 16, 236.

Parks,D. et al. (2015) CheckM: assessing the quality of microbial genomes recovered
from isolates, single cells, and metagenomes. Genome Res., 25, 1043—1055.

Peng,Y. et al. (2012) IDBA-UD: a de novo assembler for single-cell and metage—
nomic sequencing data with highly uneven depth. Bioinformatics, 28, 1—8.

Qin,J. et al. (2010) A human gut microbial gene catalogue established by meta-
genomic sequencing. Nature, 464, 5 9—65 .

Quast,C. et al. (2012) The SILVA ribosomal RNA gene database project: im—
proved data processing and web-based tools. Nucleic Acids Res., 41,
D5 90—D5 96.

Simao,F. et al. (2015) BUSCO: assessing genome assembly and annotation
completeness with single-copy orthologs. Bioinformatics, 31, 3210—3212.
Williamson,S. et al. (2012) Metagenomic exploration of viruses throughout

the Indian Ocean. PLoS One, 7, 18.

Wood,D.E. and Salzberg,S.L. (2014) Kraken: ultrafast metagenomic sequence
classiﬁcation using exact alignments. Genome Biol., 15, R46.

Ye,K. et al. (2009) Pindel: a pattern growth approach to detect break points of
large deletions and medium sized insertions from paired-end short reads.
Bioinformatics, 25, 2865—2871.

Zhu,W. et al. (2010) Ab initio gene identiﬁcation in metagenomic sequences.
Nucleic Acids Res., 38, e132.

9103 ‘Og isanV uo salaﬁuv soc} ‘BtHJOJtIBQ JO AJtSJQAtuf] 112 /310'S[BIIJHO[pJOJXO'SOIJBLUJOJIIIOTCI”K1111] 11101} popcolumoq

