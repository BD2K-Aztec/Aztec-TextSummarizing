Bioinformatics, 31(24), 2015, 3953—3960

doi: l0.1093/bioinformatics/btv513

Advance Access Publication Date: 2 September 2015
Original Paper

 

Genetics and population analysis

Learning directed acyclic graphical structures
with genetical genomics data

Bin Gao and Yuehua Cui*

Department of Statistics and Probability, Michigan State University, East Lansing, MI 48824, USA

*To whom correspondence should be addressed.
Associate Editor: Gunnar Ratsch

Received on January 7, 2015; revised on July 20, 2015; accepted on August 24, 2015

Abstract

Motivation: Large amount of research efforts have been focused on estimating gene networks
based on gene expression data to understand the functional basis of a living organism. Such net—
works are often obtained by considering pairwise correlations between genes, thus may not reflect
the true connectivity between genes. By treating gene expressions as quantitative traits while
considering genetic markers, genetical genomics analysis has shown its power in enhancing the
understanding of gene regulations. Previous works have shown the improved performance on esti—
mating the undirected network graphical structure by incorporating genetic markers as covariates.
Knowing that gene expressions are often due to directed regulations, it is more meaningful to esti—
mate the directed graphical network.

Results: In this article, we introduce a covariate—adjusted Gaussian graphical model to estimate the
Markov equivalence class of the directed acyclic graphs (DAGs) in a genetical genomics analysis
framework. We develop a two—stage estimation procedure to first estimate the regression coefficient
matrix by (2’1 penalization. The estimated coefficient matrix is then used to estimate the mean values
in our multi—response Gaussian model to estimate the regulatory networks of gene expressions
using PC—algorithm. The estimation consistency for high dimensional sparse DAGs is established.
Simulations are conducted to demonstrate our theoretical results. The method is applied to a human
Alzheimer’s disease dataset in which differential DAGs are identified between cases and controls. R
code for implementing the method can be downloaded at http://www.stt.msu.edu/ ~cui.

Availability and implementation: R code for implementing the method is freely available at http://
www.stt.msu.edu/~cui/software.html

Contact: cui@stt.msu.edu

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

x,,)~ N(O.Z) and 9:21. x,ux,){x,},lz,,¢>

The past decades have witnessed enormous methodology develop-
ments in gene network inference using gene expression data (e.g.
Cheung and Spielman, 2002; Schadt et (11., 2003). Such networks
were developed mostly by assessing the pairwise correlation of gene
expressions. From a statistical point of view, under the assumption
that the joint distribution of the gene expressions of interest is a multi-
variate normal distribution, such networks can be constructed by as-
sessing the nonzero elements of the inverse covariance matrix, the so
called precision matrix or concentration matrix. Assume X : (X1. 

where 0),, is the (i, j)th entry in S2. That is, X, and X, are condition-
ally independent if and only if (u), : 0. Thus, one can infer the pos-
itions of zero entries in S2 to infer the graphical structure, i.e. the
conditional independencies between components in X. However,
when the data dimension is larger than the sample size, the inverse
of the sample covariance matrix is not available. When considering
such networks as undirected graphs, there has been huge statistical
interests in developing Gaussian graphical models assuming spars-
ity of the precision matrix, to name a few, Friedman et al. (2008),
Cai et al. (2013), Meinshausen and Bﬁhlmann (2006) and Yuan

(C7 The Author 2015. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 3953

/310‘srcumo[p10}xo‘sopcuHOJHtotq/ﬁdnq

3954

Learning directed acyclic graphical structures

 

and Lin (2007). Under certain assumptions, the positions of zero
entries in the precision matrix indicate conditional independence
between variables of study.

When inferring a network only based on gene expressions, two
genes could show correlation in expression simply because they
share a common regulator, while they should be independent condi—
tioning on the common regulator. Motivated by this, a few meth—
odological developments have been focused on covariate—adjusted
graphical models by using genetic markers as covariates to correct
both false positives and false negatives (e.g. Cai et al., 2013; Lee and
Liu, 2012; Yin and Li, 2011, 2013). In their estimation procedures,
the effect of genetic variants is estimated in the first step. Then, the
graphical structure is estimated in the second step while adjusting
for the genetic effects. Their simulation results and real data analysis
showed that graph estimates were substantially improved when tak—
ing the genetic effects into account. These models are all focused on
the estimation of undirected graphs without considering direction
information. The directed graphs, however, are more attractive in
the sense that often people are interested in the causal relationships,
i.e. interests are not only focused on whether two variables are con—
ditionally independent but also if one causes the other one. In real
life, gene expressions are often the results of directed regulations.
Thus, the estimation of directed graphs should provide more biolo—
gical information for further functional investigation. Genetical gen—
omics data provide optimal resources to learn such directed
graphical networks.

In typical directed acyclic graph (DAG) inference, one probabil—
ity distribution has a set of corresponding DAGs which are Markov
equivalent under certain assumptions. The directions of the edges in
the graphs indicate causal relations. Studies on directed graphs have
flourished in the literature both in theory and in application (e.g. Ali
et al., 2009; Anderson et al., 1997; Richardson and Spirtes, 2002).
The most common case is the Gaussian case. Let Y : (Y1, ..., Yp) be
a p—dimensional Gaussian random vector, and each coordinate rep—
resents a gene expression. To infer the regulatory relationship of
these 17 gene expressions, the PC—algorithm developed by Spirtes
et al. (2000) can be applied to construct a completed partially DAG
(CPDAG). The CPDAG can uniquely represent all DAGs corres—
ponding to the common distribution of Y and can be represented as
the regulatory networks of the gene expressions. Kalisch and
Biihlmann (2007) later proved that the graph obtained from the PC—
algorithm is consistent under some conditions, even in high dimen—
sional cases.

Directed graphs constructed with the PC—algorithm are
more biologically relevant compared with undirected graphs.
However, as mentioned before, if two genes share a common regula—
tor, their expression relationship could be complicated or even dis—
torted without considering the underlying genetic structure. When
adjusting for the genotype (i.e. the common regulator) effects, the two
related genes could be independent or vice versa. This motivates us to
develop a covariate—adjusted directed graphical model by extending
the CPDAG estimation procedure to a regression framework. We
treat genetic markers as covariates and develop a two—stage estimation
method, which combines the penalized estimation and PC—algorithm
to estimate the marker—adjusted CPDAG structure.

In the following of the article, we first provide some background
knowledge about graphical models and the formulation of our
model and the two—stage estimation procedure in Section 2.
Theoretical results are given in Section 3. Simulations and real data
analysis are given in Sections 4 and 5 to justify our method followed
by discussions in Section 6. All the proofs of the theoretical results
are rendered in the Supplementary File due to space limit.

2 Model and estimation

2.1 Background

Let G : (V, E) be a graph where V represents the set of vertices and
E represents the set of edges. A directed graph is a graph in which
each edge has a direction represented by a “ —>” sign. A DAG is a
directed graph with no directed cycles. A criterion called d—separ—
ation is used to read conditional independence relationships from a
DAG structure (Pearl, 2000). Other criteria can be used to generate
conditional independence relationships. The reason why d—separ—
ation is particularly useful is that it is related to causal inference
(Pearl, 2009; Spirtes et al., 2000) and for the purpose of constructing
directed graphs.

Given a random vector, its coordinates can be viewed as the ver—
tices of a graph G : (V,  A probability distribution is called faith—
ful to a DAG if and only if the conditional independence
relationships indicated by the distribution are the same as those ob—
tained via d—separation. Multiple DAGs may represent the same set
of conditional independence relationships. The DAGs to which a
probability distribution is faithful are Markov equivalent and com—
pose a Markov equivalence class. Two DAGs are Markov equivalent
if and only if they have the same skeleton and the same v—structures
(Frydenberg, 1990; Verma and Pearl, 1990, 1992). The skeleton of a
DAG is the graph where all directed edges are replaced with undir—
ected edges. A v—structure is a triple (V1,V2,V3) having the structure
v1 —> v; <— V3.

A Markov equivalence class of DAGs can be described by a
unique CPDAG (Chichering, 2002). A CPDAG is the union of the
DAGs in a Markov equivalence class in the sense that a directed
edge exists if that edge exists in each DAG and an undirected edge
exists if that edge has different directions in two DAGs. PC—algo—
rithm (Spirtes et al., 2000) is an effective and efficient algorithm to
estimate CPDAGs. The reason why we estimate the CPDAG is that
multiple DAGs correspond to the same probability distribution,
while only one CPDAG corresponds to a probability distribution.
After a CPDAG is obtained, we can extend it to the DAGs by adding
directions on the edges, such that no directed cycles are generated. It
has been proven that PC—algorithm can generate a consistent esti—
mate under certain assumptions, even in high dimensional cases
(Kalisch and Biihlmann, 2007).

2.2 Covariate—adjusted Gaussian graphical model
Consider a multi—response linear regression model with 17 responses
and q covariates. Suppose we have n independent observations
. T T
(ynxi). z 2 17mm, where 3’i : (Yilan-J’ip) and xi:(xi17---7xiq) ~
We assume that the data are centered and standardized. Define
Y : (y1,...,yn)T and X : (x1, ...,xn)T. The relationship between the
multivariate response Y and the covariates X can be described by

the following regression model,
Y : XB -l- E

where B : (31,...,Bp) is a q X p coefficient matrix and E :
(51, ..., en)T is the error term. We assume that the
errors 5,- : (5,1, ...,e,-p)T, i: 1, ...,n, are i.i.d. random variables fol—
lowing a multivariate normal distribution N (0, 2). Let
y} : (311,, - - - ,yn;)T be the jth response vector (i : 1, ..,p) and
x’ : (x11, - - - ,xn,)T be the lth covariate vector (1 : 1, ..,q). In a
genetical genomics framework, X represents the single—nucleotide
polymorphism (SNP) markers and Y represents the gene expressions.
Our interest is to estimate the CPDAG structure of Y, while adjust—
ing for the effect of X. Conditional on X, we expect that false posi—
tives and/or false negatives of connections will be reduced.

[310'sp2umofp105xo'sopeuHOJIItotq/ﬁdnq

B. Gao and Y. Cui

3955

 

2.3 A two—stage estimation procedure

Without X, the PC—algorithm can be applied to infer the CPDAG
structures. In the model described above, the conditional mean of Y
changes as X varies. Thus, the PC—algorithm cannot be directly
applied since it is only for a model with a constant mean, i.e.
X: (X1,...,Xq) follows a multivariate normal distribution with
mean a and covariance matrix 2. To overcome the difficulty, we
propose a two—stage estimation procedure to estimate the mean
function and the CPDAG structure. In the first stage, we estimate
the coefficient matrix B. We implement a penalized estimation pro—
cedure with respect to each response in Y via solving the following 17
optimization problems,

A . 1 . T .

Bi : argBI/nln [Etrﬂy’ — X31) (3” — X30} + AinllB/llij.
where Amy : 1, ...,p, are tuning parameters, and  - H1 refers to the
L1 norm. The estimate of B is denoted as B : (B1,...,Bp). Let
E : Y — XB. In the second stage, the PC—algorithm is applied to E
to estimate the directed graphical structure corresponding to the
probability model N (0,2). The two—stage estimation algorithm is
termed as the covariate—adjusted PC—algorithm (caPC).

The caPC contains two steps. The first step is to estimate the
skeleton, and the second step is to extend the skeleton to the
CPDAG. Information obtained from the first step is used to deter—
mine the directions of the edges in the second step. If we have the
perfect knowledge about the conditional independence relation—
ships, the PC—algorithm can return us with the correct skeleton in
the first step (Spirtes et al., 2000). However, we do not have perfect
knowledge in practice. Therefore, we use samples to estimate the
skeleton by implementing a testing procedure. For testing the condi—
tional independence, Kalisch and Buhlmann (2007) applied esti—
mated partial correlations and Fisher transformation to construct a
testing statistic. They proved that the PC—algorithm could generate
consistent estimates under certain assumptions even in the high di—
mensional situations. To make the article self—contained, we also
included the PC algorithm in the Supplementary File.

3 Theoretical result

In this work, we allow the number of responses to increase along
with the sample size, i.e. p is a function of n. The number of marker
covariates q is fixed. This is a valid treatment as we can do an eQTL
mapping study to first find the eQTLs for the expression responses,
then fix them in the model. Below we show that the two—stage esti—
mation method generates consistent estimate of a CPDAG. To show
the estimation consistency, we adopt the setup of Knight and Fu
(2000) and Kalisch and Bﬁhlmann (2007). The dimension of a
multivariate response variable is denoted as p(n) and a DAG is
denoted as G : G".

Let pun-J- be the correlation between e, and 6,. Let pun-ﬂ]. be the
partial correlation between e, and 5, given {e,,r E k}, where k is a
subset of {1,...,p(n)}\{i,/}. am- and fin/(k are the corresponding
estimated ones.

To establish the estimation consistency, we need the following
lemmas. The required conditions for the lemmas and theorem can
be found in the Supplementary File.

Lemma 1: Assume that the distribution P" is normally distributed,
we have

[amt/(B) _ [amt/(B) : OP(1)7V  Z 17 

Lemma 2: Assume that the distribution P" is normally distributed,
we have

maul?) — mum : oulw iii 2 1. 

Lemma 3: Assume that the distribution P" is normally distributed
and supmyk )pn;,-J-jkigM < 1. Then, for any y > 0, we have

SUP P<lﬁm¢ik  — pnzijlkl > V>SC1(" — 2 — mn)

i./'.kEK:';"
4 — «2
*exp ((n — 4 — mn)log 

for some positive constant C1.

Lemma 1 shows that the difference between the estimated correl—
ation coefficient ,5“,- given the estimated coefficient matrix B and
the estimated correlation coefficient given the true coefficient matrix
B is 0,,(1). Lemma 2 states that the difference between the estimated
partial correlation coefficient fin/(k given the estimated coefficient
matrix B and the estimated partial correlation coefficient given the
true coefficient matrix B is 0,,(1). Lemma 3 shows that the differ—
ence between the estimated partial cprrelation coefficient [amt/‘1‘
given the estimated coefficient matrix B and the true partial correl—
ation coefficient pnziJ-jk is bounded. The proofs of the three lemmas
are relegated in the Supplementary File.

Define or" as the significance level for testing the significance of
the partial correlation after Fisher’s transformation, i.e. for testing
Ho : phi-j), : 0. With the above assumptions, we have the following
theorem.

Theorem: Define  as the estimated CPDAG using the two-
stage estimation procedure and G is the true CPDAG. I 7' AM : o(n),
/ : 1, ...,p and Conditions (CU-(C6) are satisfied, then there exists
or" such that

P<G<un> : G) = 1 — o<exp(—cn1—2d>> a Las n a oo
where c is a positive constant and d > 0 is as in Condition (C6).

The convergent rate of the CPDAG estimation is the same as
that in Theorem 2 in Kalisch and Buhlmann (2007). This means that
the errors occurred in the first stage do not have a great effect on the
second stage of the estimation of graphical structures. The proof of
the Theorem can be found in the Supplementary File.

4 Simulation

4.1 Simulation design

We did extensive simulations to assess the estimation performance.
We followed the simulation setup in Yin and Li (2013) and Kalisch
and Buhlmann (2007). To generate the error term, we began with an
adjacency matrix Apxp filled with zeros. Then, every entry in the
lower triangle was replaced with independent realizations of a
Bernoulli random variable with success probability 17A (0 < 17A < 1),
where 17A is called the sparseness of the model. Entries with 1 were
then replaced by realizations of a Uniform (0,1) random variable.
The corresponding DAG was constructed by drawing a directed
edge from node 5 to node t if A5, 9E 0 and s < t. The created DAG
has the following property: E(N,-) : 17A (17 — 1), where Ni is the num—
ber of neighbors for a given node i. We denote E[N] as the average
number of neighbors per node. The size of E(N;) determines the
sparseness of the graph with small values corresponding to a sparse
graph and large values corresponding to a dense graph.

[310'sp2umoip105xo'sopeuHOJIItotq/ﬁdnq

3956

Learning directed acyclic graphical structures

 

The matrix A will be used to generate the data as follows.

7]}  17"‘7177

E1 : "17
j—1

6; I Aim + 11,-)
12:1

where nj’s are independent. We applied the R—package pcalg to gen—
erate DAGs according to the above description. Such processes were
repeated to generate the error matrix Enxp.

To generate the q X p coefficient matrix B, we generated a q X p
sparse indicator matrix whose entry is 1 with a probability propor—
tional to 16/ q, where K is called the sparseness of the coefficient ma—
trix. If an entry is 1, it is replaced by a realization from
Unif([—1,—u]U[u,1]), where u is a realization from Unif([0.1, 0.9]).
Next we generated X whose entries were realizations of Bernoulli
(1, 0.5). Finally, we generated Yby Y : XB + E.

The performance was evaluated based on true—positive rate
(TPR), false—positive rate (FPR) and the structural Hamming dis—
tance (SHD) following the evaluation criteria proposed by Kalisch
and Buhlmann (2007). TPR and FPR were used for the evaluation of
the estimate of the skeleton. TPR is defined as the ratio of the num—
ber of correctly estimated edges to the number of total edges. FPR is
defined as the ratio of the number of incorrectly estimated edges to
the number of total nonedges (the number of locations where there
are no edges). SHD was used for the evaluation of the estimated
CPDAG and is defined as the number of edges where the true
CPDAG and the estimated CPDAG are different.

4.2 Performance in the low dimensional case

We chose an : 0.01 in the low dimensional situation where p was
fixed and n varied. We called it low dimensional case in which the
sample size n is larger than 17 and q. For comparison purpose, we
also included the log(n) : 4 case. Three parameter settings and seven
sample sizes were chosen, each with 40 replications. Figure 1 depicts
the simulation results. In all the cases, TPR increases and SHD de—
creases as the sample size increases (denoted by log(n) in the plot).
The tendency of FPR is not clear. However, the overall scale of FPR
is small in all cases, implying reasonable control of FPR. A similar
pattern was also observed in Kalisch and Buhlmann (2007). The au—
thors explained that this is because a constant 01,, was used under all
sample sizes. In addition, the performance of a sparse graph estima—
tion (denoted as circles with E[N] : 2) appears to be better than
that of a dense graph estimation (denoted as triangles with
E[N] : 5). The 95% confidence interval based on the 40 replicates
for each case is also shown. It is clear that the confidence interval be—
comes narrower as the sample size increases in all the cases. This is
consistent with our large sample theoretical result.

4.3 Performance in the high dimensional case

In this section, we reported the performance of the estimation in
high dimensional situations where p varied as n increased, to check
the consistency results as stated in Theorem 1. In all the cases, p was
assumed to be larger than n. We closely followed the setup in
Kalisch and Buhlmann (2007) and chose an : 0.05 in the high di—
mensional case. Specifically, data were simulated following Table 1,
and the number of covariates was assumed to be q : 100 and 500.
The average number of neighbors was calculated as E[N] : n0‘5/6.
The sparseness of the coefficient matrix was controlled by K. We ran
30 simulations in each setting. Figures 2 and 3 show the results for
q: 100 and q:500, respectively. As shown in both figures, it is

clear that TPR is increasing and FPR is decreasing along with the
increasing of the sample size. These observations are consistent with
our theoretical results. In addition, the size of q also has an effect on
the estimation performance in which larger q (:5 00) gives smaller
TPR and larger FPR compared with the results under smaller q
(:100).

We did another simulation in which both 17 and q increase with
n. The sample size n was assumed to be 50, 100, 150, 200, 250 and
300. The dimension of Y and X was assumed to be p : n15 /6.3 and
q : 17/2, respectively. The average number of neighbors is given as
E[N] : n0‘5/6. The detailed setup can be found in Table 2. Thirty
simulations were run in each setting. The results of the simulation
are shown in Figure 4. We observed a similar pattern as shown in
Figures 2 and 3, i.e. TPR is increasing and FPR is decreasing as n in—
creases. This result provides supportive evidence that our method
also works in the situation where both 17 and q increase with n.

4.4 Comparing graphs with or without covariates

The proposed method improves the DAG estimation by adjusting
for potential marker effects. To evaluate the gain by adjusting for
the marker effects, we compared the estimation performance of
before and after adjusting for the marker effects using the PC—
algorithm (denoted as PC in the table) and caPC based on simulated
data. We considered six scenarios as listed in Table 3. We observed
consistently larger TPR, smaller FPR and SHD by using the caPC es—
timation method compared with the results using the PC—algorithm
in all the simulation scenarios. This simulation further justifies the
benefit of adjusting for the covariates” effect when estimating the
DAG structure. We also did simulations considering the case where
q > 17 following the suggestion of one reviewer. The results are sum—
marized in Table 4. We observed similar pattern in which caPC out—
performed PC.

4.5 Comparing directed and undirected graphs

We did additional simulations to compare the performance of the
directed and undirected graph estimation adjusting for the covari—
ates’ effects. Here, we choose 17 : 50, 100, 200, q : 2p and n : 250.
As before, we chose E[N] : 2, K: 3.5. The results are summarized
in Table 5. We applied graphical LASSO to estimate the undirected
graphical structure (Friedman et al. 2008). We can see that undir—
ected method achieves a higher TPR, but the directed method
achieves a lower FPR and smaller SHD. Here, SHD is used to meas—
ure the skeleton of the graph since undirected graphs do not have
direction information. The reason that undirected method is better
on TPR is because, in theory, directed graphs give sparser solutions
than the undirected method due to the extra constraint on direction
inference. So overall, the directed graph performs better than the un—
directed method on both FPR and SHD but suffers a little bit
on TPR.

5 Application to real data

We applied our proposed two—stage estimation method to an
Alzheimer disease dataset (Webster et al. 2009). Following the art—
icle, 176 Alzheimer cases and 187 controls were included in our ana—
lysis. For the SNPs, those with low genotyping call rate (<90%),
low minor allele frequency (<5%) and those that failed the Hardy—
Weinberg equilibrium test in control group (P value < 0.001) were
removed. After these operations, around 332 000 SNP markers were
left for further analysis. We used the residual expression data after
adjusting for the effects of several covariates such as gender, APOE

ﬁm'spzumoi‘pmﬂo'sopcuuowrotq/ﬁdnq

B. Gao and Y. Cui

3957

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Q _ e e g- ‘ 8 —
co 9 e 9 o o A
. _ e co _ to _
Z A A g S: — A A
e 0' ‘ A A 25 a _ e o _ A A
._ q: _CD A A LL 0- w to A A
0 S A A 8 -@
2 WA 0' _ A A A o _ e
‘— e
0. _ 8 _a ‘3 e e e 9 e o _ e e 9 e
O I I I I I I 0 I I I I I I I I I I I I
4 5 6 7 8 9 1o 4 5 6 7 8 9 1o 4 5 6 7 8 9 10
log(n) log(n) log(n)
Scenario 1: p=25, q=10, E[N]=2 or 5, n=3
0
3 — e e e e g - 5 1a
09 _ A
o 9 _ 8 _ A
«a _ e " A
e o A A A A E a - e A A A
l— sl: _ A LI. 0 A (0
° 9 A _ A E; —e
3 ‘A a A A A A 9 e
O. _ g _ e 6 e 9 e e o _ e e e e
o I I I I I I d I I I I I I I I I I I I
4 5 6 7 8 9 1o 4 5 6 7 8 9 10 4 5 6 7 8 9 10
log(n) log(n) log(n)
Scenario 2: p=50, q=40, E [N ]=2 or 5, n=4
0
,_' — e 9 6 9 — —
9 v A
00. _ 8 _ 8 —
o e A A A o N
to A
E °‘ ‘ A E ‘ e ‘
.—  _e A LL  —m U) ‘8 _e A A
o A e A A A
“I _A _ o _
° 0 3 ’9 A e ’3 e ”’ e e
0. _ g _ o _ 9 e e
O I I I I I I c; I I I I I I I I I I I I
4 5 6 7 8 9 1o 4 5 6 7 8 9 10 4 5 6 7 8 9 10
log(n) log(n) log(n)

Scenario 3: p=100, q=100, E[N]=2 or 5, n=3.5

Fig. 1. Performance of the two-stage estimation algorithm under different parameter and sample size settings. The circles represent the sparse graph estimation
results with E[N] : 2 and the triangles represent the dense graph estimation results with E[N] : 5. The upper and lower bounds of the 95% confidence intervals

are also shown which are difficult to separate under large II

Table 1. Simulation setup in the high dimensional case with fixed K

 

 

Set 1 Set 2 Set 3 Set 4 Set 5 Set 6
p 162 398 674 980 1310 1661
n 50 100 150 200 250 300
E[N] 1.18 1.67 2.04 2.36 2.64 2.89
K 5 5 5 5 5 5

 

status and age at death (data can be found at http://labs.med.miami.
edu/myers/LFuN/data ajhg.html). There are 8560 gene expressions.
We implemented a two sample t—test for each gene expression and
selected top 100 significant gene expressions to learn their DAG
structure. For each of the 100 gene expressions, we fitted a simple
linear regression with each SNP marker as the covariate and selected
SNPs with P value < 0.001. Among these SNPs, we chose those that
show association with two or more gene expressions (P
value < 0.001). This ended up with 3776 SNPs in the case group and
3871 SNPs in the control group with 60 SNPs in common.

The final dataset used for the analysis contained 100 gene ex-
pressions (as the Y variable), 3776 SNPs in the case group and 3871

 

i
§%

0.8
I

0.7
I

o

0.6
I

FPR

TPR
05
I
0.002 0.004 0.006 0.008

I!-

0.4

 

 

 

 

—9—
I

I I I I I
set1 setZ set3 set4 set5 sets

 

I I I I I I
set1 setZ set3 set4 set5 sets

Fig. 2. Boxplot of TPR and FPR under different settings when q : 100

SNPs in the control group (as the X variables). We applied our esti-
mating method to the two groups separately. Our goal was to learn
the DAG structure for the 100 genes while adjusting for the effects
of SNP markers in the case and control groups with the hope to
identify differential DAG structures that can distinguish the two
groups. Any differences might potentially explain the disease eti-
ology of Alzheimer.

We learned the CPDAGs at the an : 0.001 level. For the case
group, the estimated CPDAG has 101 directed edges (Fig. 5).
For the control group, the estimated CPDAG has 88 directed edges

/810'sleumofp103xo"sotJBuIJOJutotqﬂ:duq

 

 

 

 

 

 

 

 

 

 

 

3958 Learning directed acyclic graphical structures
2 — i g_ T Table 4. Estimation comparison between PC and caPC when q> p
’5 - i i d  , ,
m _ é  _ : Simulation setup Method TPR FPR SHD
E 3‘ E é. é p=100,q=200,n=200, caPC 0.818 0.009 84.0
2- a —_._ Z * E[N] = 2, K=3 PC 0726 0.016 129.8
2 - a g ‘ E e p = 200, q = 400, n = 200, caPC 0.661 0.011 324.9
g— _=_ g_ --—_ E[N] = 2, K=2o PC 0265 0.018 516.4
5.21 5.22 5.23 5.14 5.15 sake °' 5.11 5.22 5.23 5.14 5.15 5.25 p = 400, q = 800, n = 200, caPC 0.570 0.008 866.7
E[N] = 2, K=2o PC 0298 0.010 11383

Fig. 3. Boxplot of TPR and FPR under different settings when q: 500

Table 2. Simulation setup in the high dimensional case with vary-
ing p, q and K

 

Table 5. Estimation comparison between directed and undirected
graphs

 

 

 

 

 

 

 

 

Set 1 Set 2 Set 3 Set 4 Set 5 Set 6 Method TPR FPR SHD

p 71 200 367 566 791 1039 p = 50, q = 100, n = 250, Directed 0.790 0.001 12.5
q 35 100 184 283 395 520 E[N] = 2, K: 3.5 Undirected 0.874 0.037 49.9
n 50 100 150 200 250 300 p=100,q=200, n=250, Directed 0.764 0.001 31.9
E[N] 1.18 1.67 2.04 2.36 2.64 2.89 E[N] = 2, K: 3.5 Undirected 0.833 0.015 90.2
K 3.9 4.6 5.0 5.3 5.5 5.7 p=200,q=400, n=250, Directed 0.782 0.001 75.1
E[N] = 2.5, K = 3.5 Undirected 0.812 0.005 137.5
__ i i T  '  Such differential graphical structures between the two groups might
g _ T g - E indicate regulation heterogeneity between the two groups. Further

E g _ g  E  —  __ biological verifications are needed to validate the findings.

T . T  __ As a comparison, we applied PC-algorithm directly to the 100
3' ‘   _ E é genes without adjusting for the SNPs’ effects. For the case group, the
T o + — estimated graph has 124 edges. For the control group, the estimated

 

 

 

 

 

 

I I I I I I I I I I I I
set1 set2 set3 set4 set5 sets set1 set2 set3 set4 set5 sets

Fig. 4. Boxplot of TPR and FPR under different simulation settings with vary-
ing qand K

Table 3. Estimation comparison with and without adjusting for the
marker effects under different scenarios

 

 

Simulation setup Method TPR FPR SHD
p =25, q = 10, n =250, caPC 0.768 0.001 11.5
E[N] = 2, K: 3.5 PC 0670 0.038 259
[2:50, (1:50, n=250, caPC 0.746 0.002 26.7
E[N] = 2, K=4 PC 0568 0.020 55.3
p=100,q=100, n=250, caPC 0.740 0.002 52.4
E[N] = 2, K: 3 PC 0680 0.006 81.7
p=400,q=200, n=250, caPC 0.768 0.005 648.6
E[N] = 2.5, K=20 PC 0235 0014 1504.9
p=800,q=200, n=250, caPC 0.782 0005 1948.1
E[N] = 1.5, K=25 PC 0138 0.008 31759
p: 1000, q=200, n=250, caPC 0.790 0004 2543.4
E[N] = 1.5, K=20 PC 0274 0007 3874.4

 

(Fig. 5). The graphs were generated with the R package igmpla. In
both graphs, genes were represented with numbers. The correspond-
ing gene names can be found in the Supplementary Table. The two
CPDAGs share 18 edges in common. We noticed that some sub-
CPDAG structures shown in the case group were not present in the
control group. For example, the graph 70 —> 95 <— 38 was observed
in the case group, while the three genes are separated from other
groups in the control population. On the other hand, some CPDAGs
shown in the control group were not present in the case group. For
example, the sub-graph by 17-26-31-32-76 is observed in the con-
trol group, while the genes are less connected in the case group.

graph has 100 edges. This is consistent with our assumption that the
number of edges should be reduced after adjusting for the markers’
effect. This phenomenon has been explained and demonstrated in
other works focusing on undirected graphs (e.g. Cai et a1. 2013; Yin
and Li, 2011).

We did another case study by focusing on the Alzheimer’s disease
pathway from the KEGG database. There are total 168 genes in this
pathway, but only 120 gene expressions in this dataset were mapped
to the pathway. For each of the 120 gene expressions, we performed
a single marker linear regression analysis using each of the SNPs.
We selected those markers with P value <0.001. Then the 5000
SNPs (with 93 in common) with the smallest P values were selected
in case group and control group, respectively.

The data we used for the final analysis contain 120 gene expres-
sions (the Y variables), 5000 SNP markers in the case group and
5000 SNP markers in the control group (the X variables). Our goal
is to learn the DAG structures based on the 120 gene expressions
while adjusting for the effects of 5000 SNP markers in both groups.
We applied our estimating method to the case and control group
separately. In the case group, the estimated CPDAG has 108 dir-
ected edges (Fig. 6). In the control group, the estimated CPDAG has
109 directed edges (Fig. 6). There are 25 common edges between the
two graphs. We can see different graphical structures between the
two groups. Some of the estimated sub-DAGs agree with the real
biological network. For example, some genes in mitochondria were
identified as connected in the case graph (e.g. COX7A2, NDUFBZ,
SDHC; NDUFV3, COX7B, COX4I1, COX1, NDUFB4,
NDUFA10).

6 Discussion

Genes function in networks and gene expressions often result from
gene regulations. Hence, learning directed regulations can enhance

/810'SIBum0[pJOJXO'sopBLuJOJutotqﬂ:duq

O .I O
O I'M.
\.l
‘ i

Liu (7/ Lil. 2009 2012

/810'S[BHmOprOJXO"SOIJBLUJOJIIIOIq/ﬂdnq

3960

Learning directed acyclic graphical structures

 

Funding

This work was supported in part by grants from National Science Foundation
(DMS-1209112 and IOS-1237969) and by a grant from National Natural
Science Foundation of China (31371336).

Conﬂict of Interest: none declared.

References

Ali,R.A. et al. (2009) Markov equivalence for ancestral graphs. Ann. Stat, 37,
2808—2837.

Andersson,S.A. et al. (1997) A characterization of Markov equivalence classes
for acyclic digraphs. Ann. Stat, 25, 505—541.

Cai,T. et al. (2013) Covariate-adjusted precision matrix estimation with an ap-
plication in genetical genomics. Biometrilza, 100, 407—499.

Cheung,V.G. and Spielman,R.S. (2002) The genetics of variation in gene ex-
pression. Nat Genet, 32, 522—525.

Chichering,D. (2002) Learning equivalence classes of Bayesian-network struc-
tures.]. Mach. Learn. Res., 2, 445—498.

Friedman,]. et al. (2008) Sparse inverse covariance estimation with the graph-
ical lasso. Biostatistics, 9, 432—441.

Frydenberg,M. (1990) The chain graph Markov property. Scand.  Stat, 17,
333—35 3.

Kalisch,M. and Buhlmann,P. (2007) Estimating high-dimensional directed
acyclic graphs with the PC-algorithm.]. Mach. Learn. Res., 8, 613—636.

Kalisch,M. et al. (2012) Causal inference using graphical models with the R
package pcalg.]. Stat. Soft, 47, 1—26.

Knight,K. and Fu,W. (2000), Asymptotics for Lasso-type estimators. Ann.
Stat, 28,1356—1378.

Lee,W. and Liu,Y. (2012) Simultaneous multiple response regression and in-
verse covariance matrix estimation via penalized Gaussian maximum likeli-
hood.]. Multiuar. Anal., 111, 241—255.

Liu,H. et al. (2009), The nonparanormal: semiparametric estimation of
high dimensional undirected graph. ]. Mach. Learn. Res., 10, 2295—
2328.

Liu,H. et al. (2012), High dimensional semiparametric Gaussian copula
graphical models. Ann. Stat, 40, 2293—2326.

Meinshausen,N. and Buhlmann,P. (2006) High-dimensional graphs and vari-
able selection with the lasso. Ann. Stat, 34, 1436—1462.

Pearl,]. (2009) Causality, 2nd edn, Cambridge University Press.

Richardson,T. and Spirtes,P. (2002) Ancestral graph Markov models. Ann.
Stat, 30, 962—1030.

Schadt,E.E., et al. (2003) Genetics of gene expression surveyed in maize,
mouse and man. Nature, 422, 297—302.

Spirtes,P. et al. (2000) Causation, Prediction, and Search, 2nd edn, The MIT
Press, One Rogers Street, Cambridge MA 02142—1209.

Verma,T. and Pearl,]. (1990) Equivalence and synthesis of causal models.
In: Henrion,M. et al (eds.) Uncertainty in Artiﬁcial Intellegence:
Proceedings of the Sixth Conference. Morgan Kaufman, San Francisco, CA,
pp. 220—227.

Verma,T. and Pearl,]. (1992) An algorithm for deciding if a set of observed
independencies has a causal explanation. In: Dubois,D. et al (eds.)
Uncertainty in Artiﬁcial Intelligence: Proceedings of the Eighth Conference.
Morgan Kaufman, San Francisco, CA, pp. 323—330.

Webster,].A. et al. (2009), Genetic control of human brain transcript expres-
sion in Alzheimer disease. Am. Hum. Genet, 84, 445—458.

Yin,]. and Li,H. (2011) A sparse conditional Gaussian graphical model
for analysis of genetical genomics data. Ann. Appl. Stat, 5, 2630—
2650.

Yin,]. and Li,H. (2013) Adjusting for high-dimensional covariates in sparse
precision matrix in estimation by l1-penalizati0.  Multiuar. Anal., 116,
365—381.

Yuan,M. and Lin,Y. (2007) Model selection and estimation in the Gaussian
graphical model. Biometrilza, 94, 19—35.

ﬁlO'SIIZIImOprOJXO'SODBIUJOJHIOICV/idnq

