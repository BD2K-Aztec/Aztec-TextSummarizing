BIOINFORMA TICS

0'so;112u110}u101q//2duq

SIBumoprOJX

£10"

Brain

 

//Creation of the Brain instance:
Brain brain = new Brain();
//Add the OWL classes to the knowledge base:
brain.addClass("Nucleus");
brain.addClass("Cell");
//Add the OWL object property:
brain.add0bjectProperty("parteof");
//Declare the axiom. Note that expressions in
//Manchester syntax can be used directly:
brain.subClassOf("Nucleus", "part—of some Cell");
//Integrate the content of an external knowledge base:
brain.learn("http://example.org/bar.owl");
//Query the knowledge base for indirect subclasses:
List<String> subclasses =
brain.getSubClasses("parteof some Cell", false);
//Free the resources used by the reasoner:
brain.sleep();
//Save the ontology:
brain.save("your/path/to/ontology.owl");
Fig. 1. Implementation example in Java of an axiom using Brain; the
axiom expressed in natural language: A nucleus is part of some cells. Same
axiom described in OWL using the Manchester syntax: Nucleus

subClassOfpart-ofsome Cell

Despite being in contradiction with some Semantic Web prin—
ciples, this design prevents ambiguous queries and hides as much
as possible the cumbersome interaction with preﬁxes and
Internationalized Resource Identiﬁers (IRI).

3.3 Typeless interaction

The interaction with the library relies on the user—friendly
Manchester syntax entered as string (Horridge et al., 2006).
This permits moving away from the creation of Java objects
and is particularly suitable in a web server set—up where requests
are likely to be some typeless characters. Using strings as input
also speeds the production and ﬂexibility of the code written,
when moving from a relational database to an OWL represen—
tation, for example. Figure 1 provides an example of axiom im—
plementation using the Manchester syntax.

3.4 Error-handling

Because the interaction with Brain is built around strings rather
than Java objects, special care has to be put on exceptions hand—
ling to safely maintain the correct execution of the program.
Brain throws different types of error tailored to the operation
performed by the user. This feature is mandatory while develop—
ing large applications and helps to maintain the consistency of
the underlying knowledge base.

3.5 Knowledge integration

An interesting feature brought by the Semantic Web and OWL is
the possibility to merge information based on the IRIs of the

entities described. The library supports the loading and integra—
tion of external knowledge bases, as well as references to external
entities. Data from different sources can, therefore, be easily
connected and reason over by Brain. The integration of an
external knowledge base is shown on Figure l.

3.6 Querying

Brain is oriented towards efﬁcient querying of OWL 2 EL know—
ledge bases. This characteristic makes it suitable as a query
engine on a web server for answering live queries from users.
Powerful questions can be formulated using the Manchester
syntax, abstracting away complex interaction with the Java ob—
jects provided by the OWL—API (illustrated in Fig. 1). An ex—
ample of question answering over the GO using Brain is
compared with a traditional SQL query in the Supplementary
Material.

4 CONCLUSION

Brain is an open source Java library designed to build and query
biomedical knowledge bases or OWL ontologies. The library is
centered on the EL proﬁle and designed to be suitable and scal—
able for biomedical knowledge representation. The convenience
methods provided by Brain should simplify the development of
biomedical knowledge bases and allow developers to increase
their productivity while effectively dealing with data integration
challenges.

Funding: EMBL member states. SC. is a member of Darwin
College, University of Cambridge.

Conﬂict of Interest: none declared.

REFERENCES

Ashburner,M. et al. (2000) Gene ontology: tool for the uniﬁcation of biology.
Nat. Genet., 25, 25729.

De Matos,P. et al. (2010) Chemical entities of biological interest: an update.
Nucleic Acids Res, 38, D2497D254.

Gaulton,A. et al. (2012) ChEMBL: a large—scale bioactivity database for drug
discovery. Nucleic Acids Res, 40, D110(%D1107.

Horridge,M. and Bechhofer,S. (2011) The OWL API: a java API for OWL ontol—
ogies. Seman. Web J., 11721.

Horridge,M. et al. (2006) The Manchester OWL syntax. Syntax, 216, 1&11.

Kazakov,Y. et al. (2011) Concurrent classiﬁcation of EL ontologies. In: Proceedings
of the 10th International Semantic Web Conference ( IS WC '11). p. 7032.

Kr6tzsch,M. et al. (2012) A description logic primer. Language, 1716.

Motik,B. et al. (2009) OWL 2 Web Ontology Language Proﬁles. Language, 2009,
1753

 

1 239

ﬁm'spzumol‘pmyo'sopeuuopnorq/ﬁdnq

