Bioinformatics, 3219), 2016, 1331—1337

doi: 10.1093/bioinformatics/btv768

Advance Access Publication Date: 5 January 2016
Original Paper

 

Phylogenetics

Prediction of missing sequences and branch
lengths in phylogenomic data

Diego Darriba1'*, Michael Weilsz'3 and Alexandros StamatakiSI'4

1Scientific Computing Group, Heidelberg Institute for Theoretical Studies, Schloss-Wolfsbrunnenweg 35,
Heidelberg 69118, Germany, 2Department of Biology, University of Tiibingen, Auf Der Morgenstelle 1, Tiibingen
72076, Germany, 3Steinbeis Innovation Center, Organismal Mycology and Microbiology, Vor dem Kreuzberg 17,
72070 Tiibingen, Germany and 4Institute of Theoretical Informatics, Karlsruhe Institute of Technology, Karlsruhe
76131, Germany

*To whom correspondence should be addressed.
Associate Editor: Janet Kelso

Received on 11 June 2015; revised on 8 December 2015; accepted on 27 December 2015

Abstract

Motivation: The presence of missing data in large—scale phylogenomic datasets has negative ef—
fects on the phylogenetic inference process. One effect that is caused by alignments with missing
per—gene or per—partition sequences is that the inferred phylogenies may exhibit extremely long
branch lengths. We investigate if statistically predicting missing sequences for organisms by using
information from genes/partitions that have data for these organisms alleviates the problem and
improves phylogenetic accuracy.

Results: We present several algorithms for correcting excessively long branch lengths induced
by missing data. We also present methods for predicting/imputing missing sequence data. We
evaluate our algorithms by systematically removing sequence data from three empirical and 100
simulated alignments. We then compare the Maximum Likelihood trees inferred from the gappy
alignments and on the alignments with predicted sequence data to the trees inferred from the
original, complete datasets. The datasets with predicted sequences showed one to two orders of
magnitude more accurate branch lengths compared to the branch lengths of the trees inferred
from the alignments with missing data. However, prediction did not affect the RF distances be—
tween the trees.

Availability and implementation: https://github.com/ddarriba/ForeSeqs

Contact: diego.darriba@h—its.org

Supplementary information: Supplementary data are available at Bioinformatics online.

 

1 Introduction

 

At present, typical large-scale phylogenomic datasets are assembled
by concatenating several genes of the organisms under study. Such
phylogenomic datasets often contain a high proportion of systemat-
ically missing data. This is because, specific gene sequences might
not be available for certain taxa (e.g. PCR amplification failed for
these genes, or taxa do not contain the specific gene). Such phyloge-
nomic datasets are also called ‘patchy’ or ‘gappy’ alignments. In
likelihood-based models, the missing per-gene sequences are typic-

ally represented by undetermined characters. Throughout this

manuscript, we refer to user-defined subsets of alignment sites (e.g.
genes) as ‘partitions’. We further assume that all relevant likelihood
model parameters (GTR rates, 2, branch lengths) are estimated/
optimized independently (also known as unlinked parameters) for
each partition.

The presence of missing data has two notable effects on the
phylogenetic inference process. First, depending on the structure of
the missing data blocks and under certain model parameter config-
urations (most importantly unlinked branch lengths), gappy datasets
can give rise to so-called terraces in tree space (Sanderson et 111.,

(C7 The Author 2016. Published by Oxford University Press. All rights reserved. For Permissions, please e-mail: journals.permissions@oup.com 1331

/310‘srcumo[p10}xo‘sopcuHOJIItotq/ﬁdnq

2011

Stamatakis, 2014

Yang, 2006

1965

Figure 1

Jokes and Cantor,

/310'S[BHJHO[pJOJXO"SOTJBHIJOJIITOTCI/ﬂduq

Prediction of missing sequences and branch lengths in phylogenomic data 1333

 

any partition 1' that has data on both sides of the split/ branch b under
consideration (i.e., 0;, : 0). In this case, branch length stealing can
not be applied.

The above approach is expected to work well on datasets with
homogeneous per—partition tree and branch lengths. If this is not the
case, heterogeneity among partitions can bias results. Thus, we need
to incorporate additional information from the determined branches
within the partition for which we are trying to steal branches. The
rationale for this is that the tree length in the partition m under con—
sideration can deviate substantially from tree lengths in other parti—
tions. In this case, an averaged stolen branch length as used above
will not fit the branch length distribution in partition m well.

2.2 Computing a tree—wide branch length scaler

In order to address this problem, we can decrease the sensitivity
of our approach to heterogeneous per—partition tree lengths by multi—
plying stolen branch lengths with a partition—specific branch—length
scaler (Tm. To this end, we modify the stealing approach as follows.
We initially compute a branch—length scaler by comparing the lengths
of determined branches in partition m with corresponding branch
lengths in other partitions. We define a set 5m :: {bIC(b.m) :
1 /\ Eli 9E m (C(b. i) : 1)} that contains all m—determined branches
that are also i—determined for some 1' 9E m. For each branch in 6,", we
compute the average ratio between the branch length in partition m
and the branch lengths in all other partitions where that branch is
determined. We again scale this quantity by the relative partition size
in terms of number of sites. The branch—length scaler (Tm is then com—
puted as follows:

1
am 2 W E m. (2)

566m

lm(c)w,-
Z 1,-(c)

i66(i#m

Zwi

iEHCi¢+m

re : V6 6 5m. (3)

where 76 is the ratio computed for the m—determined branch 6 and w,
is the weight assigned to partition 1', summing to unity.

3 Prediction algorithm

Our initial approach for predicting missing sequences simply con—
sisted in selecting the state that maximizes the per—site log likelihood
score at each site. However, if the branches are long enough, the
transition probabilities will converge to the equilibrium frequencies.
In this case, the states of the predicted sites will converge to the most
frequent equilibrium state. If the branches are shorter, the predicted
ML states for the missing sequence are, in almost all cases, identical
to the states with the highest marginal ancestral probability in the
corresponding MAPV (or the corresponding ancestral sequence).
Thus, we need to implement an explicit stochastic approach for pre—
dicting missing sequences.

We propose two alternative methods based on either directly
simulating a MAPV or on using the most likely ancestral sequence.
We start simulating sequences at the root of missing subtrees and
proceed down to the tips of the subtrees via a pre—order traversal.

Note that the parameters (state frequencies, or shape parameter
for the F distribution and substitution rates) required for conducting
the simulations are given. They have already been optimized using
the existing data in the partition under consideration. Also, all
branch lengths are already available, since the undetermined ones

have been stolen from other partitions in the previous step. Thus,
computing the probability transition matrix, P, for each discrete F
rate and each stolen branch in our prediction algorithm is straight—
forward.

Once this is done, we can transform each P matrix into a cumu—
lative matrix C to simplify the stochastic state selection process. The
matrix C is also a squared matrix. Each entry C(i, /) contains the cu—
mulative probability for a mutation from state i to state f. In other
words, C(i./) : 2:0(Plz‘. Thus, the entry C(i, /) is simply the
probability for moving from a state i to a state 515 S /. Given the cur—
rent state i and by drawing a uniform random number from [0,1],
we can thus easily select a new state using C.

In the following, we outline the overall prediction algorithm.

For each partition, we initially determine the set of taxa with
missing data, T. For each taxon t E T, we then determine the root—
ing branch.

Subsequently, for each rooting branch in each partition, we com—
pute the MAPV for the node at the root of the determined subtree.
Then, we steal the branch lengths (see Section 2). Once this is done,
we have all the data at hand that is required to predict missing
sequences.

As already mentioned, we designed two alternative approaches
for predicting missing sequences. The first one uses a sequence simu—
lation process. Here, we compute the ancestral sequence of the un—
determined subtree by simply determining the most probable
marginal ancestral state at each site, given the MAPV at the root of
the determined subtree. Subsequently, we evolve this sequence down
the subtree toward the tips where data is missing. Thereby, at each
inner node we generate a simulated ancestral sequence. This method
is summarized in Algorithm 1 in the supplementary information.

The second strategy consists in progressively and explicitly calcu—
lating MAPVs from the subtree root toward the tips (excluding the
tips) via a pre—order traversal of the undetermined subtree. Note
that the calculation of MAPVs is an entirely deterministic process
based on the MAPV at the undetermined subtree root node and on
the given model parameters as well as branch lengths. Unlike in the
ancestral sequence simulation strategy, the stochastic/randomized
selection of the final states at the tips is carried out only along ter—
minal branches leading from a MAPV to a tip.

The MAPV (M) is a vector with n elements with 5 entries each,
where s is the number of states (4 for nucleotides and 20 for amino
acids) and n is the number of alignment sites. The entries of each
element in M sum to 1.0, since their values represent the probability
of being in a specific state at the corresponding ancestral node. The
M;7 vector at the root is propagated down the subtree and multiplied
with all transition probability matrices for the inner branches on its
path to a tip. Figure 2 depicts an example of this process. In this ex—
ample, the MAPV M0 of the immediate ancestor of the tip we wish
to predict, is computed as Mo : M1P1 : M2(P2P1) : M(P;,P,_1...
P2P1).

The final tip sequence is predicted by choosing an ancestral state
according to the probabilities in M0 and the probabilities on the
transition matrix P0 leading to the tip. We can first calculate the
most probable ancestral sequence based on M0 and then stochastic—
ally select a tip state using P0. The MAPV—based approach is sum—
marized in Algorithm 2 in the supplementary information.

3.1 Example

Assume we have a tree with N taxa and K partitions, as shown in
Figure 1. In this tree, three taxa have missing data in partition 732.
Further assume that the model parameters and branch lengths have

ﬁm'srcumol‘piqxo'sopcuuopttotq/ﬁdnq

1334

D. Darriba et al.

 

 

Fig. 2. MAPVs (M) and P matrices for predicting the sequence at 12. h, the
height of the root node of the undetermined subtree, is 3. P), : P3 is the Pma-
trixfor the stolen branch length at the rooting branch

been optimized independently for each partition using the input
alignment with missing data. Initially, branch lengths for the 13.),“
t4,m.t5,m subtree are obtained using the branch stealing process
described above.

In our example, we carry out the following steps:

1. Determine the rooting branch b and the root of the subtree con—
taining data (A0).

2. Calculate the ancestral sequence at A0, S AU , by selecting the most
probable states from the MAPV.

3. Carry out a pre—order tree traversal on the undetermined subtree
and evolve sequences for child nodes. SA1 : S AU will be mutated
into SA, and S15. The sequence SA, is ancestral to ‘53 and ‘54.

a. Compute a P matrix for the stolen branch length between
the current node and the ancestor (i.e., parental branch
length) for each discrete F rate category. The P matrix deter—
mines the probability of observing a substitution at a site,
given a parental state.

b. Transform P into the cumulative matrix C
Randomly select a new state for each site using C. With re—
spect to handling rate heterogeneity, there are three options:
(i) assign a single discrete F rate category randomly to each
site of the undetermined subtree, (ii) assign the most likely
discrete rate category to each site using information from the
determined subtree, or (iii) calculate the average probability
over all discrete F rate categories.

3.2 Implementation: ForeSeqs
We developed an open—source sequence prediction tool, called
ForeSeqs, that implements the branch stealing and sequence predic—
tion methods described in the two preceding sections. ForeSeqs uses
the Phylogenetic Likelihood Library (PLL) (Flouri et al., 2014) that
provides functions for optimizing substitution model parameters,
branch lengths, and topologies, as well as functions for computing
MAPVs and ancestral sequences.

The main purpose of ForeSeqs is to predict missing data for a
given MSA via the simulation process outlined above.

The input of ForeSeqs is a MSA with missing data, a phylogen—
etic reference tree (e.g. best—known ML tree), and a file with the par—
titioning scheme. One also needs to specify parameters to select

among the different algorithms for branch length stealing, to choose
the prediction mode (ancestral sequences or MAPVs), and to set the
number r of prediction replicates. The output is a set of r MSAs
without missing data.

4Evduaﬁon

Our evaluation strategy was designed as follows:

1. We initially selected/generated a set of partitioned MSAs with
no missing data, that is, each partition has some data for all
taxa/sequences.

2. For each MSA, we created a set of evaluation samples (as
described in Section 4.1) by removing one or more sequences
and replacing them by missing data for a speciﬁc, randomly
chosen partition of the reference alignment. We denote these
samples as ‘missing’ samples. Randomly removed sequences can
either span an entire subtree of the reference tree (systematic re—
moval) or not (random removal). Subsequently, we infer a ML
tree on each missing sample (missing tree), which we then use as
input for the prediction process with ForeSeqs.

3. For each missing sample, we predict the missing branch lengths
via the branch length stealing algorithms, and the missing se—
quences using the respective sequence prediction algorithms.

4. We infer a ML tree on the predicted alignment (predicted tree).

5. Finally, we evaluate the differences between the reference, miss—
ing, and predicted tree, as well as between the reference and pre—
dicted branch lengths and also the alignments.

We refer to these three MSA versions and their corresponding
trees as ‘reference’, ‘missing’, and ‘predicted’, respectively. We ini—
tially compare the reference and predicted alignments by computing
the Hamming distance between all reference sequences and the cor—
responding predicted sequences. Note that the Hamming distance
does not represent a good metric for the prediction quality, because
our prediction is based on a stochastic process and it exhibits a high
variance with respect to the discrete character states they generate.
At the same time, predicted sequences should generate consistent re—
sults in downstream analyses (e.g., tree inference). Therefore, we
only included Hamming distances for the sake of completeness. We
also compare the reference and predicted sequences with respect to
their guanine-cytosine content (GC content). The GC content can be
used to assess DNA stability (Petersheim and Turner, 1983). We ex—
clude sites containing gaps in the reference alignment from
Hamming distance and GC content calculations because our simula—
tion process does not generate indels.

We also compare trees inferred from reference, missing, and pre—
dicted alignments using (i) the relative Robinson—Foulds (RF) dis—
tance (Robinson and Foulds, 1981) and (ii) the Kuhner—Felsenstein
branch score difference (BS) (Kuhner and Felsenstein, 1994).

To compute the BS difference between two trees, st(T1.T2), we
initially create a set of all splits or bipartitions present in at least one
of the trees. Then, for each tree, every bipartition in the set is scored
with either 0 if it is not present in the tree, or scored by the branch
length if the bipartition is present in the tree. The BS difference is
calculated as sum over squared differences of scores assigned to the
bipartitions by either tree. Finally, the BS difference is normalized
by the number of branches in the tree d§S(T1,T2) : st(T1,T2)/
QN—3)

The BS measure is more appropriate in our context, since it cal—
culates a tree distance that also takes branch length differences into
account.

ﬁm'srcumol‘piqxo'sopcuuopttotq/ﬁdnq

Prediction of missing sequences and branch lengths in phylogenomic data 1335

 

In addition, we disentangle to which extent the observed BS dif—
ferences between predicted and missing trees are due to stand—alone
branch length stealing and branch length stealing in conjunction
with subsequent sequence prediction. For each branch stealing
method, we simply replace the undetermined branches by stolen
branches in the missing tree. Thus, the topology with stolen
branches (but without sequence prediction) is identical to the miss—
ing tree. We denote this tree as ‘unpredicted’ tree. We assess the im—
pact of stand—alone branch stealing by comparing the respective
unpredicted and predicted trees to the reference trees.

4.1 Test datasets and experimental setup

We used two sets of reference MSAs for testing. The first set includes
three empirical MSAs and partitioning schemes that are described in
Table 1.

For each of the three empirical MSAs, we created two groups of
samples by (i) removing sequences from partitions at random, and
by (ii) systematically removing the sequences of taxa located in sub—
trees. The number of samples generated by each of the two removal
strategies is depicted in Table 1. The number of samples was deter—
mined as a function of alignment size (#taxa and # partitions).

The second test set comprises 100 synthetic datasets, containing
between 10 and 40 taxa and 4 and 10 partitions each, with a per—
partition length ranging from 500 to 1200 sites.

For each synthetic dataset, we first simulated a non—ultrametric
phylogenetic tree with a tree length drawn from a uniform distribu—
tion between 1.0 and 12.0.

For each partition, we then scaled the branch lengths of the
underlying per—partition tree by using two different multipliers: (i) a
global multiplier in U(0.5, 2.0) that equally affects all branches, and
(ii) a local multiplier in U(0.8, 1.2) that is drawn for each branch in
the partition separately. The local multiplier generates more difficult
test cases because it increases branch length heterogeneity.

To then generate the sequences for each partition we chose a
GTR+F model, with rates and frequencies drawn from Dirichlet
distributions D(1,1,1,1,1,1) and D(1,1,1,1) respectively, and a
Gamma shape parameter drawn from an exponential distribution
E (2) truncated between 0.5 and 5.0. These truncated values for the or
parameter cover a wide and representative range of low (5.0) and
high (0.5) among—site rate heterogeneity.

From each simulated reference MSA, we created two missing
MSAs by removing sequences of (i) a random number of taxa and
(ii) a random number of taxa located in a subtree containing be—
tween 5 and 50% of the taxa in the tree.

Table 1. Summary of the empirical datasets evaluated

 

 

Wiegmann Wiens Baker
Clade Holometabolous Squamate Arecoid
insects reptiles palms
Num. Taxa 12 16 173
Seq. Len 5 736 15 794 3 223
Num. Loci 6 22 2
% Gaps 19.56 4.01 57.99
Tree Len 8.026 1.086 4.285
Avg BL 0.365 0.036 0.012
#s rand 72 352 346
#s syst 48 264 1 00
Reference Wiegmann Wiens et al. Baker et al.
et al. (2009) (2010) (201 1)

 

Finally, we evaluated the impact of missing data and hence in—
accurate branch lengths on phylogenetic post—analysis by example of
species delimitation using the Poisson Tree Process software (PTP,
Zhang et al., 2013). The FTP tool infers the putative number of spe—
cies for a given, rooted phylogenetic tree containing sequences of in—
dividuals that may belong to one or more species. PTP exclusively
uses the phylogeny with branch lengths, but not the MSA data, to
delimit species. Therefore, PTP is highly susceptible to inaccurate
branch length estimates. To assess the impact of inaccurate branch
lengths on PTP—based delimitations, we selected an empirical
Rivancidella MSA comprising 3 loci (cyt b, COI, 16S) and 373 se—
quences from Pons et al. (2006). We created a total of 300 evalu—
ation samples (100 for each locus) by systematically removing data
from subtrees comprising up to 50% of the sequences. We provide
further details in the on—line supplement.

4.2 Results and discussion

4.2.1 Synthetic alignments

The simulation process described in Section 4.1 assumes the same
underlying topology for each partition and uses two types of branch
length scalers to modify per—partition branch lengths. While the
branch lengths among partitions differ, the data in each partition
supports the same underlying topology. Keep in mind that the se—
quence prediction is conducted on the missing tree. Thus, we do not
expect to observe large RF distances between the missing and pre—
dicted data trees. Overall, we obtained low RF distances to the refer—
ence trees.

The average results over all datasets are shown in Table 2. BS
differences to the reference tree improve by one to two orders of
magnitude for randomly and systematically removed sequences
when using ForeSeqs compared to the missing trees. Note that sys—
tematically removing sequences requires stealing additional
branches that connect inner nodes. Therefore, we initially expected
to obtain higher BS differences for the systematic removal than for
the random removal experiments due to cumulative branch stealing
errors. Contrary to this prior expectation, we did not observe any
significant differences.

When comparing the distances between the unpredicted/pre—
dicted trees to the reference trees, we see that in all cases the branch
length stealing process contributes the most to branch length correc—
tion. Sequence prediction induced a difference of 10—25% on the re—
maining error after stealing branch lengths. Thus, stand—alone
branch length stealing is sufficient to correct branch lengths if pre—
dicted sequences are not required. Overall, the mean RF distances to
the reference trees are below 1%.

In Figure 3, we present scatter plots based on linear regression
for the BS difference as a function of the percentage of missing data.
We observed that branch length stealing with averaging is generally
more accurate, in particular for low fractions of missing data.
However, the local regression (LOWESS) shows a deviation in the
tendency towards a nearly zero slope in the branch length stealing
approach with scaling. In other words, the differences between the
two branch stealing approaches are negligible when the fraction of
missing data increases. Based on these results, the accuracy of the
branch stealing approach with scaling is less sensitive to the fraction
of missing data.

We observed that for predicting subtrees (systematic removal
tests), the ancestral sequence prediction approach yields slightly
more accurate branch lengths (see Table 2) than the MAPV ap—
proach. The similarity in GC content was also higher for the predic—
tion based on ancestral sequences (~0.1% for the random removal

ﬁm'srcumol‘piqxo'sopcuuopttotq/ﬁdnq

1336

D. Darriba et al.

 

Table 2. Robinson Foulds (RF) and Branch Score (BS) distances between reference trees and inferred trees for synthetic MSA; and
Hamming distance (H) and similarity in GC content (GC) between the reference and predicted sequences

 

 

 

RF BS H (%) GC
,u A ,u A
Random Removed 0.0092 0.1025
Avg Unpred 0.0092 0.0011 —0.1014
Seq 0.0087 —0.0005 0.0013 —0.1012 23.23 0.9607
MAPV 0.0062 —0.0030 0.0014 —0.1011 22.66 0.9615
Scale Unpred 0.0092 0.0014 —0.101 1
Seq 0.0076 —0.0014 0.0016 —0.1009 24.81 0.9630
MAPV 0.0074 —0.0016 0.0016 —0.1009 24.20 0.9623
Systematic Removed 0.0044 0.1089
Avg Unpred 0.0044 0.0013 —0.1076
Seq 0.0046 0.0002 0.0014 —0.1075 32.11 0.9539
MAPV 0.0043 —0.0001 0.0017 —0.1072 26.68 0.9364
Scale Unpred 0.0044 0.0059 —0.1030
Seq 0.0053 0.0009 0.0044 —0.1045 33.03 0.9574
MAPV 0.0069 0.0024 0.0049 —0.1040 28.05 0.9369

 

From the datasets, either random taxa (Random) or complete subtrees (Systematic) were removed. ‘Removed’ is the tree inferred from datasets with missing

data. ‘Unpred’ is the tree inferred from datasets with missing data, but with stolen branch lengths. The branch length stealing strategies used average per-partition
(Avg) and tree—wide branch length scalers (Scaler). The sequence prediction strategies used ancestral sequences (Seq) and marginal ancestral probabilities vectors

(MAPVs). Here, u is the average score, and A the average difference with respect to the ‘Removed’ tree.

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

Avg Seq Avg MAPV
ln
8. — 0 - o
O ‘D
O
_ ° 0 o g — 0
a) 0 o u: —
o m 0 V
E 8. - ° 6 e _
g o 0 0° . 0 ,v E 0’
u _ o q, o  ’ ,or '0 _
g o 0559 ’0' I o g g
8 ‘80 .o 066’ o o.
O ‘  o o
c; o 60 o o —
 00° 8 
,,-I l | I I I g 'l
0 10 20 30 40 50 0
% removed % removed
Scale Seq Scale MAPV
— one 00 o o — 000 oo o o
o
co 0 o co
8 — 8 —
o 0' °
8 o 8 
z ..... .4 :
9 — .......... " E ‘
§ v ..... -- g s
'0 8 _ 0.6-“ '0 g _
m - m -
m o 0 0° co 0
8 8
0. T ‘3. —
o I o
0
% removed % removed

Fig. 3. Scatterplot of the branch score differences and percentage of removed
taxa for synthetic alignments with systematically removed data. We also de-
pict the linear (dotted) and local (dashed) regressions

experiments and ~2% for the systematic removal experiments. In
general, predicting entire subtrees increases the branch length error.
Boxplots are provided in Supplementary Figure S2.

The BS difference between corresponding reference and missing
trees was 0.101 on average, with a standard deviation of 0.204. The
BS difference between corresponding reference and predicted trees
has a mean of only 0.002 with a standard deviation of 0.002.

4.2.2 Empirical alignments

Supplementary Table S2 summarizes the results of experiments with
empirical alignments. Sequence prediction does not appear to have a
substantial impact on the tree topologies compared to trees inferred
from MSAs with missing data. In the random removal experiments,

differences in RF distances between missing and predicted trees to
the true trees lie below 4% for the Wiegmann and Wiens align—
ments, and below 10% for the Baker dataset. In the systematic re—
moval experiments, RF distances are higher than for random
removals, as one might expect. Boxplots are provided in
Supplementary Figure S3.

We do observe a substantial improvement in the BS differences
to the reference tree for the predicted tree. As for the synthetic ex—
periments, the predicted trees show a BS difference to the reference
tree that is one to two orders of magnitude smaller than BS differ—
ence between the reference tree and the missing tree.

In the Baker alignment, scaling stolen branch lengths produced a
BS difference that is noticeably higher than for the averaged stealing
procedure. Also, the Hamming distance between the predicted and
the reference alignment is very high (> 5 0%), and the GC content
presents worse estimates than in other cases (similarity below 95%).
The following three observations explain this behavior. Firstly, the
alignment has a large number of taxa compared to Wiegmann and
Wiens. Therefore, a small number of removed taxa corresponds to a
low overall fraction of missing sequences. According to our findings
for simulated data, this has an effect on the BS difference. Secondly,
the ratio of the branch lengths between the two partitions in the
alignment has a standard deviation of a : 3614.40. Such a high
variance among per—branch scalers means that using a global scaler
can introduce a significant bias in stolen branch length values, irre—
spective of the fraction of sequences removed. Finally, the number
of ‘true’ alignment gaps (not missing data) is high and close to 80%
in some per—partition sequences which leads to long branches as
well. Thus, the sequence prediction will either use too short or too
long branches caused by the long stretches of gaps in sequences that
have some data. We can observe that the RF and BS distances in—
crease proportionally to the amount of ‘true’ MSA gaps in the em—
pirical alignments (19.56, 4.01 and 57.99% for the Wiegmann,
Wiens and Baker alignments, respectively). Also the high differences
in the average Hamming distance to the reference alignment be—
tween the alignments predicted using the scale and average branch
stealing methods suggest that there is a substantial difference in the

ﬁm'srcumol‘piqxo'sopcuuowrotq/ﬁdnq

Prediction of missing sequences and branch lengths in phylogenomic data 1337

 

expected number of substitutions which is directly related to the sto—
len branch length values. Unlike in the simulated alignments, in a
general way any branch length stealing or prediction strategy per—
formed better than others estimating the GC content.

4.2.3 Species delimitation

We find that the impact of missing per—gene data on branch lengths
can substantially bias the number of species delimited by PTP. Note
that PTP only relies on the branch lengths of a given phylogeny to
delimit species. For trees inferred from MSAs with missing data, the
average difference in species number is 5.99 (18.13%, standard de—
viation: 7.95) with respect to FTP delimitations from trees inferred
on the original MSA (33). With the average per—partition branch
length scaler, this difference decreases to 1.18 (3.58%, standard de—
viation: 1.05) and 1.25 (3.79%, standard deviation: 1.36) for trees
inferred on predicted sequences. In contrast to this, tree—wide branch
length scalers increase the difference to 10.72 (32.48%, standard de—
viation: 10.31) for stolen branch lengths and 9.71 (29.42%, stand—
ard deviation: 11.96) for trees inferred from predicted sequences.
The results are summarized in Supplementary Figure S4.

5 Conclusion

We presented a method and a tool for predicting missing data in
partitioned datasets. We described two procedures for approximat—
ing (stealing) the branch lengths of bipartitions with missing data.

Using empirical and synthetic datasets we designed realistic test
scenarios to evaluate our methods. The stealing and prediction
methods yield significant improvements in branch length accuracy
of ML trees compared to trees inferred from MSAs with missing
data. The BS differences calculated between the trees inferred from
the predicted alignments and the reference trees were one to two
orders of magnitude smaller than for the trees inferred from the
alignments with missing data. We find that branch stealing contrib—
utes by far the most to improving branch length estimates. By ex—
ample of the FTP species delimitation tool, we demonstrate that
branch stealing can substantially improve the accuracy of a phylo—
genetic post—analysis. Sequence prediction can be omitted when one
only needs to correct branch lengths for missing data. As we show,
sequence prediction can be useful for estimating statistical properties
of the missing sequences, such as, for instance, their GC content.

Overall, for small fractions of missing data predictions using
MAPVs yielded slightly better results than predictions based on dis—
crete ancestral sequences. Nevertheless, predictions based on dis—
crete ancestral sequences outperformed the MAPV—based strategy in
most of our tests.

Finally, we observed that predicting sequences is generally diffi—
cult for alignments that contain a high amount of ‘true’ alignment
gaps that are treated as missing data in all standard likelihood im—
plementations. While we observed an improvement in ES differences
when using prediction compared to alignments with missing data,

the average and the variance of the BS increased proportionally to
the amount of ‘true’ alignment gaps in the reference alignments.
Also note that prediction cannot correct incorrect topologies that
have been inferred from alignments with missing data. However,
despite the fact that previous studies have suggested that missing
data can strongly bias phylogenetic inferences (Lemmon et al.,
2009), there is an ongoing debate regarding the topological impact
of missing data. Wiens and Morrill (2011) concluded, for instance,
that missing data might not be an issue for correctly placing taxa
with incomplete data into a given reference tree.

Funding

D.D. and A.S. are funded via institutional funding from the Heidelberg
Institute for Theoretical Studies.

Conﬂict of Interest: Home declared.

References

Baker,W.]. et al. (2011) Phylogenetic relationships among arecoid palms (are-
caceae: Arecoideae). Ann. Bot., 108, 1417—1432.

Flouri,T. et al. (2015) The phylogenetic likelihood library. Syst. Biol., 64,
35 6—362.

Jukes,T. and Cantor,C. (1965). Evolution of Protein Molecules. Academic
Press, New York.

Kuhner,M.K. and Felsenstein,]. (1994) A simulation comparison of phylogeny
algorithms under equal and unequal evolutionary rates. Mol. Biol. Euol.,
11, 45 9—468.

Lemmon,A.R. et al. (2009) The effect of ambiguous data on phylogenetic esti—
mates obtained by maximum likelihood and bayesian inference. Syst. Biol.,
58, 130—145.

Petersheim,M. and Turner,D.H. (1983) Base-stacking and base-pairing
contributions to helix stability: thermodynamics of double-helix formation
with ccgg, ccggp, ccggap, accggp, ccggup, and accggup. Biochemistry, 22,
25 6—263.

Pons,]. et al. (2006) Sequence-based species delimitation for the dna taxonomy
of undescribed insects. Syst. Biol., 55, 595—609.

Robinson,D. and Foulds,L.R. (1981) Comparison of phylogenetic trees. Math.
Biosci.,53,131—147.

Sanderson,M.]. et al. (2011) Terraces in phylogenetic tree space. Science, 333,
448—450.

Stamatakis,A. (2014). The raxml v8.1.x manual.

Wiegmann,B.M. et al. (2009) Single—copy nuclear genes resolve the phylogeny
of the holometabolous insects. BMC Biol., 7, 34.

Wiens,].]. and Morrill,M.C. (2011) Missing data in phylogenetic analysis: rec-
onciling results from simulations and empirical data. Syst. Biol., 60, 719—731.

Wiens,].]. et al. (2010) Combining phylogenomics and fossils in higher-level
squamate reptile phylogeny: molecular data change the placement of fossil
taxa. Syst. Biol., 59, 674—688.

Yang,Z. (2006). Computational Molecular Evolution, vol. 21. Oxford
University Press, Oxford.

Zhang,]. et al. (2013) A general species delimitation method with applications
to phylogenetic placements. Bioinformatics, 29, 2869—2876.

ﬁm'srcumol‘piqxo'sopcuuowrotq/ﬁdnq

